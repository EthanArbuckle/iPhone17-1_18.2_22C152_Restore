uint64_t sub_1D797C394()
{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t v3;

  __swift_destroy_boxed_opaque_existential_1(v0 + 432);
  swift_task_dealloc();
  v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t destroy for DIPTrustKey(uint64_t *a1)
{
  sub_1D78607E8(*a1, a1[1]);
  sub_1D78607E8(a1[2], a1[3]);
  sub_1D78607E8(a1[4], a1[5]);
  sub_1D78607E8(a1[6], a1[7]);
  uint64_t v2 = a1[8];
  unint64_t v3 = a1[9];
  return sub_1D78607E8(v2, v3);
}

uint64_t *initializeWithCopy for DIPTrustKey(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  unint64_t v5 = a2[1];
  sub_1D7860790(*a2, v5);
  *a1 = v4;
  a1[1] = v5;
  uint64_t v6 = a2[2];
  unint64_t v7 = a2[3];
  sub_1D7860790(v6, v7);
  a1[2] = v6;
  a1[3] = v7;
  uint64_t v8 = a2[4];
  unint64_t v9 = a2[5];
  sub_1D7860790(v8, v9);
  a1[4] = v8;
  a1[5] = v9;
  uint64_t v10 = a2[6];
  unint64_t v11 = a2[7];
  sub_1D7860790(v10, v11);
  a1[6] = v10;
  a1[7] = v11;
  uint64_t v13 = a2[8];
  unint64_t v12 = a2[9];
  sub_1D7860790(v13, v12);
  a1[8] = v13;
  a1[9] = v12;
  return a1;
}

uint64_t *assignWithCopy for DIPTrustKey(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  unint64_t v5 = a2[1];
  sub_1D7860790(*a2, v5);
  uint64_t v6 = *a1;
  unint64_t v7 = a1[1];
  *a1 = v4;
  a1[1] = v5;
  sub_1D78607E8(v6, v7);
  uint64_t v8 = a2[2];
  unint64_t v9 = a2[3];
  sub_1D7860790(v8, v9);
  uint64_t v10 = a1[2];
  unint64_t v11 = a1[3];
  a1[2] = v8;
  a1[3] = v9;
  sub_1D78607E8(v10, v11);
  uint64_t v12 = a2[4];
  unint64_t v13 = a2[5];
  sub_1D7860790(v12, v13);
  uint64_t v14 = a1[4];
  unint64_t v15 = a1[5];
  a1[4] = v12;
  a1[5] = v13;
  sub_1D78607E8(v14, v15);
  uint64_t v16 = a2[6];
  unint64_t v17 = a2[7];
  sub_1D7860790(v16, v17);
  uint64_t v18 = a1[6];
  unint64_t v19 = a1[7];
  a1[6] = v16;
  a1[7] = v17;
  sub_1D78607E8(v18, v19);
  uint64_t v21 = a2[8];
  unint64_t v20 = a2[9];
  sub_1D7860790(v21, v20);
  uint64_t v22 = a1[8];
  unint64_t v23 = a1[9];
  a1[8] = v21;
  a1[9] = v20;
  sub_1D78607E8(v22, v23);
  return a1;
}

__n128 __swift_memcpy80_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(__n128 *)(a1 + 16) = result;
  *(_OWORD *)(a1 + 32) = v3;
  return result;
}

uint64_t *assignWithTake for DIPTrustKey(uint64_t *a1, _OWORD *a2)
{
  uint64_t v4 = *a1;
  unint64_t v5 = a1[1];
  *(_OWORD *)a1 = *a2;
  sub_1D78607E8(v4, v5);
  uint64_t v6 = a1[2];
  unint64_t v7 = a1[3];
  *((_OWORD *)a1 + 1) = a2[1];
  sub_1D78607E8(v6, v7);
  uint64_t v8 = a1[4];
  unint64_t v9 = a1[5];
  *((_OWORD *)a1 + 2) = a2[2];
  sub_1D78607E8(v8, v9);
  uint64_t v10 = a1[6];
  unint64_t v11 = a1[7];
  *((_OWORD *)a1 + 3) = a2[3];
  sub_1D78607E8(v10, v11);
  uint64_t v12 = a1[8];
  unint64_t v13 = a1[9];
  *((_OWORD *)a1 + 4) = a2[4];
  sub_1D78607E8(v12, v13);
  return a1;
}

uint64_t getEnumTagSinglePayload for DIPTrustKey(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xD && *(unsigned char *)(a1 + 80)) {
    return (*(_DWORD *)a1 + 13);
  }
  unsigned int v3 = (((*(void *)(a1 + 8) >> 60) >> 2) & 0xFFFFFFF3 | (4 * ((*(void *)(a1 + 8) >> 60) & 3))) ^ 0xF;
  if (v3 >= 0xC) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for DIPTrustKey(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xC)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 - 13;
    if (a3 >= 0xD) {
      *(unsigned char *)(result + 80) = 1;
    }
  }
  else
  {
    if (a3 >= 0xD) {
      *(unsigned char *)(result + 80) = 0;
    }
    if (a2)
    {
      *(void *)__n128 result = 0;
      *(void *)(result + 8) = (unint64_t)(((-a2 >> 2) & 3) - 4 * a2) << 60;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DIPTrustKey()
{
  return &type metadata for DIPTrustKey;
}

uint64_t sub_1D797C714()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return MEMORY[0x1F4186498](v0, 56, 7);
}

CoreIDVShared::CredentialKeyType_optional __swiftcall CredentialKeyType.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_1D7A9D058();
  result.value = swift_bridgeObjectRelease();
  char v5 = 6;
  if (v3 < 6) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t CredentialKeyType.rawValue.getter()
{
  uint64_t result = 0x64696C61766E69;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x732D79636167656CLL;
      break;
    case 2:
      uint64_t result = 7562611;
      break;
    case 3:
      uint64_t result = 7366003;
      break;
    case 4:
      uint64_t result = 0x6C616E7265747865;
      break;
    case 5:
      uint64_t result = 0x6E6961686379656BLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1D797C870(unsigned __int8 *a1, char *a2)
{
  return sub_1D7996E7C(*a1, *a2);
}

uint64_t sub_1D797C87C()
{
  return sub_1D7A1E8E0();
}

uint64_t sub_1D797C884()
{
  sub_1D7A9C0B8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D797C980()
{
  return sub_1D7A1F444();
}

CoreIDVShared::CredentialKeyType_optional sub_1D797C988(Swift::String *a1)
{
  return CredentialKeyType.init(rawValue:)(*a1);
}

void sub_1D797C994(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE700000000000000;
  uint64_t v3 = 0x64696C61766E69;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE900000000000065;
      uint64_t v3 = 0x732D79636167656CLL;
      goto LABEL_3;
    case 2:
      *a1 = 7562611;
      a1[1] = 0xE300000000000000;
      break;
    case 3:
      *a1 = 7366003;
      a1[1] = 0xE300000000000000;
      break;
    case 4:
      *a1 = 0x6C616E7265747865;
      a1[1] = 0xEB0000000065732DLL;
      break;
    case 5:
      *a1 = 0x6E6961686379656BLL;
      a1[1] = 0xE800000000000000;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

CoreIDVShared::CredentialKeyUsage_optional __swiftcall CredentialKeyUsage.init(rawValue:)(Swift::String rawValue)
{
  unint64_t v2 = v1;
  unint64_t v3 = sub_1D7A9D058();
  result.value = swift_bridgeObjectRelease();
  char v5 = 7;
  if (v3 < 7) {
    char v5 = v3;
  }
  *unint64_t v2 = v5;
  return result;
}

uint64_t CredentialKeyUsage.rawValue.getter()
{
  uint64_t result = 0x64696C61766E69;
  switch(*v0)
  {
    case 1:
      uint64_t result = 7041899;
      break;
    case 2:
      uint64_t result = 7038308;
      break;
    case 3:
      uint64_t result = 0x72616B6564;
      break;
    case 4:
      uint64_t result = 7041904;
      break;
    case 5:
      uint64_t result = 7041136;
      break;
    case 6:
      uint64_t result = 7628656;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1D797CB94()
{
  unint64_t result = qword_1EA845620;
  if (!qword_1EA845620)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA845620);
  }
  return result;
}

uint64_t sub_1D797CBE8(unsigned __int8 *a1, char *a2)
{
  return sub_1D7996CA4(*a1, *a2);
}

unint64_t sub_1D797CBF8()
{
  unint64_t result = qword_1EA845628;
  if (!qword_1EA845628)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA845628);
  }
  return result;
}

uint64_t sub_1D797CC4C()
{
  return sub_1D7A1F554();
}

uint64_t sub_1D797CC58()
{
  sub_1D7A9C0B8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D797CD50()
{
  return sub_1D7A1F554();
}

CoreIDVShared::CredentialKeyUsage_optional sub_1D797CD58(Swift::String *a1)
{
  return CredentialKeyUsage.init(rawValue:)(*a1);
}

void sub_1D797CD64(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE700000000000000;
  uint64_t v3 = 0x64696C61766E69;
  switch(*v1)
  {
    case 1:
      uint64_t v3 = 7041899;
      unint64_t v2 = 0xE300000000000000;
      goto LABEL_3;
    case 2:
      *a1 = 7038308;
      a1[1] = 0xE300000000000000;
      return;
    case 3:
      *a1 = 0x72616B6564;
      a1[1] = 0xE500000000000000;
      return;
    case 4:
      uint64_t v4 = 7041904;
      goto LABEL_8;
    case 5:
      uint64_t v4 = 7041136;
LABEL_8:
      *a1 = v4;
      a1[1] = 0xE300000000000000;
      break;
    case 6:
      *a1 = 7628656;
      a1[1] = 0xE300000000000000;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

unsigned char *storeEnumTagSinglePayload for CredentialKeyType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D797CF04);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CredentialKeyType()
{
  return &type metadata for CredentialKeyType;
}

unsigned char *storeEnumTagSinglePayload for CredentialKeyUsage(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D797D008);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CredentialKeyUsage()
{
  return &type metadata for CredentialKeyUsage;
}

uint64_t AsyncCoreDataContainer.__allocating_init(contextBuilder:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  AsyncCoreDataContainer.init(contextBuilder:)(a1, a2);
  return v4;
}

void *AsyncCoreDataContainer.init(contextBuilder:)(uint64_t a1, uint64_t a2)
{
  type metadata accessor for AsyncQueue();
  swift_allocObject();
  v2[2] = AsyncQueue.init()();
  v2[3] = a1;
  v2[4] = a2;
  return v2;
}

uint64_t AsyncCoreDataContainer.write<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[5] = a4;
  v5[6] = v4;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  return MEMORY[0x1F4188298](sub_1D797D110, 0, 0);
}

uint64_t sub_1D797D110()
{
  uint64_t v2 = v0[5];
  uint64_t v1 = v0[6];
  uint64_t v4 = v0[3];
  uint64_t v3 = v0[4];
  uint64_t v5 = (void *)swift_allocObject();
  v0[7] = v5;
  v5[2] = v2;
  v5[3] = v1;
  v5[4] = v4;
  v5[5] = v3;
  swift_retain();
  swift_retain();
  unsigned int v6 = (void *)swift_task_alloc();
  v0[8] = v6;
  *unsigned int v6 = v0;
  v6[1] = sub_1D797D214;
  uint64_t v7 = v0[5];
  uint64_t v8 = v0[2];
  return sub_1D7A48F3C(v8, (uint64_t)&unk_1EA845640, (uint64_t)v5, v7);
}

uint64_t sub_1D797D214()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 72) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x1F4188298](sub_1D797F44C, 0, 0);
  }
  else
  {
    swift_release();
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_1D797D350(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  uint64_t v5 = *(void *)(*(void *)a2 + 80);
  v4[6] = v5;
  v4[7] = *(void *)(v5 - 8);
  v4[8] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1D797D420, 0, 0);
}

uint64_t sub_1D797D420()
{
  (*(void (**)(void))(v0[3] + 24))();
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t))(v0[4] + *(int *)v0[4]);
  uint64_t v1 = (void *)swift_task_alloc();
  v0[9] = v1;
  void *v1 = v0;
  v1[1] = sub_1D797D55C;
  uint64_t v2 = v0[8];
  uint64_t v3 = v0[2];
  return v5(v3, v2);
}

uint64_t sub_1D797D55C()
{
  *(void *)(*(void *)v1 + 80) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1D797F440;
  }
  else {
    uint64_t v2 = sub_1D797F444;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t AsyncCoreDataContainer.read<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  uint64_t v5 = *(void *)(*(void *)v3 + 80);
  v4[6] = v5;
  v4[7] = *(void *)(v5 - 8);
  v4[8] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1D797D740, 0, 0);
}

uint64_t sub_1D797D740()
{
  (*(void (**)(void))(v0[5] + 24))();
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t))(v0[3] + *(int *)v0[3]);
  uint64_t v1 = (void *)swift_task_alloc();
  v0[9] = v1;
  void *v1 = v0;
  v1[1] = sub_1D797D87C;
  uint64_t v2 = v0[8];
  uint64_t v3 = v0[2];
  return v5(v3, v2);
}

uint64_t sub_1D797D87C()
{
  *(void *)(*(void *)v1 + 80) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1D797DA10;
  }
  else {
    uint64_t v2 = sub_1D797D990;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D797D990()
{
  (*(void (**)(void, void))(v0[7] + 8))(v0[8], v0[6]);
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_1D797DA10()
{
  (*(void (**)(void, void))(v0[7] + 8))(v0[8], v0[6]);
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t AsyncCoreDataContainer.performWrite<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[5] = a4;
  v5[6] = v4;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  return MEMORY[0x1F4188298](sub_1D797DAB4, 0, 0);
}

uint64_t sub_1D797DAB4()
{
  uint64_t v2 = v0[5];
  uint64_t v1 = v0[6];
  uint64_t v4 = v0[3];
  uint64_t v3 = v0[4];
  uint64_t v5 = (void *)swift_allocObject();
  v0[7] = v5;
  v5[2] = v2;
  v5[3] = v1;
  v5[4] = v4;
  v5[5] = v3;
  swift_retain();
  swift_retain();
  uint64_t v6 = (void *)swift_task_alloc();
  v0[8] = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_1D797DBB8;
  uint64_t v7 = v0[5];
  uint64_t v8 = v0[2];
  return sub_1D7A48F3C(v8, (uint64_t)&unk_1EA845660, (uint64_t)v5, v7);
}

uint64_t sub_1D797DBB8()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 72) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x1F4188298](sub_1D797DCF4, 0, 0);
  }
  else
  {
    swift_release();
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_1D797DCF4()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D797DD58(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[5] = a4;
  v5[6] = a5;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  uint64_t v6 = *a2;
  v5[7] = *a2;
  uint64_t v7 = *(void *)(v6 + 80);
  v5[8] = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  v5[9] = v8;
  v5[10] = *(void *)(v8 + 64);
  v5[11] = swift_task_alloc();
  v5[12] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1D797DE6C, 0, 0);
}

uint64_t sub_1D797DE6C()
{
  (*(void (**)(void))(v0[3] + 24))();
  uint64_t v1 = v0[11];
  uint64_t v2 = v0[9];
  uint64_t v3 = v0[7];
  uint64_t v4 = v0[8];
  uint64_t v5 = v0[5];
  uint64_t v6 = v0[6];
  uint64_t v7 = v0[4];
  (*(void (**)(uint64_t, void, uint64_t))(v2 + 16))(v1, v0[12], v4);
  unint64_t v8 = (*(unsigned __int8 *)(v2 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v9 = (char *)swift_allocObject();
  v0[13] = v9;
  *((void *)v9 + 2) = v4;
  *((void *)v9 + 3) = v6;
  uint64_t v10 = *(void *)(v3 + 88);
  *((void *)v9 + 4) = v10;
  *((void *)v9 + 5) = v7;
  *((void *)v9 + 6) = v5;
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 32))(&v9[v8], v1, v4);
  uint64_t v16 = (uint64_t (*)(uint64_t, uint64_t (*)(), char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 + 8)
                                                                                          + **(int **)(v10 + 8));
  swift_retain();
  unint64_t v11 = (void *)swift_task_alloc();
  v0[14] = v11;
  *unint64_t v11 = v0;
  v11[1] = sub_1D797E098;
  uint64_t v12 = v0[8];
  uint64_t v13 = v0[6];
  uint64_t v14 = v0[2];
  return v16(v14, sub_1D797EC90, v9, v13, v12, v10);
}

uint64_t sub_1D797E098()
{
  *(void *)(*(void *)v1 + 120) = v0;
  swift_task_dealloc();
  swift_release();
  if (v0) {
    uint64_t v2 = sub_1D797F448;
  }
  else {
    uint64_t v2 = sub_1D797F43C;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t AsyncCoreDataContainer.performRead<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[5] = a4;
  v5[6] = v4;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  uint64_t v6 = *v4;
  v5[7] = *v4;
  uint64_t v7 = *(void *)(v6 + 80);
  v5[8] = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  v5[9] = v8;
  v5[10] = *(void *)(v8 + 64);
  v5[11] = swift_task_alloc();
  v5[12] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1D797E2DC, 0, 0);
}

uint64_t sub_1D797E2DC()
{
  (*(void (**)(void))(v0[6] + 24))();
  uint64_t v1 = v0[11];
  uint64_t v2 = v0[9];
  uint64_t v3 = v0[7];
  uint64_t v4 = v0[8];
  uint64_t v5 = v0[4];
  uint64_t v6 = v0[5];
  uint64_t v7 = v0[3];
  (*(void (**)(uint64_t, void, uint64_t))(v2 + 16))(v1, v0[12], v4);
  unint64_t v8 = (*(unsigned __int8 *)(v2 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v9 = (char *)swift_allocObject();
  v0[13] = v9;
  *((void *)v9 + 2) = v4;
  *((void *)v9 + 3) = v6;
  uint64_t v10 = *(void *)(v3 + 88);
  *((void *)v9 + 4) = v10;
  *((void *)v9 + 5) = v7;
  *((void *)v9 + 6) = v5;
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 32))(&v9[v8], v1, v4);
  uint64_t v16 = (uint64_t (*)(uint64_t, uint64_t (*)(), char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 + 8)
                                                                                          + **(int **)(v10 + 8));
  swift_retain();
  unint64_t v11 = (void *)swift_task_alloc();
  v0[14] = v11;
  *unint64_t v11 = v0;
  v11[1] = sub_1D797E508;
  uint64_t v12 = v0[8];
  uint64_t v13 = v0[5];
  uint64_t v14 = v0[2];
  return v16(v14, sub_1D797EC90, v9, v13, v12, v10);
}

uint64_t sub_1D797E508()
{
  *(void *)(*(void *)v1 + 120) = v0;
  swift_task_dealloc();
  swift_release();
  if (v0) {
    uint64_t v2 = sub_1D797E6C0;
  }
  else {
    uint64_t v2 = sub_1D797E638;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D797E638()
{
  (*(void (**)(void, void))(v0[9] + 8))(v0[12], v0[8]);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_1D797E6C0()
{
  (*(void (**)(void, void))(v0[9] + 8))(v0[12], v0[8]);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t AsyncCoreDataContainer.deinit()
{
  swift_release();
  swift_release();
  return v0;
}

uint64_t AsyncCoreDataContainer.__deallocating_deinit()
{
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1D797E7AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v10 = *v4;
  unint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v11;
  *unint64_t v11 = v5;
  v11[5] = a4;
  v11[6] = v10;
  v11[3] = a2;
  v11[4] = a3;
  v11[1] = sub_1D7874050;
  v11[2] = a1;
  return MEMORY[0x1F4188298](sub_1D797D110, 0, 0);
}

uint64_t sub_1D797E87C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_1D7874050;
  return AsyncCoreDataContainer.read<A>(_:)(a1, a2, a3);
}

uint64_t sub_1D797E930(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v10 = *v4;
  unint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v11;
  *unint64_t v11 = v5;
  v11[5] = a4;
  v11[6] = v10;
  v11[3] = a2;
  v11[4] = a3;
  v11[1] = sub_1D7874050;
  v11[2] = a1;
  return MEMORY[0x1F4188298](sub_1D797DAB4, 0, 0);
}

uint64_t sub_1D797EA00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_1D786EC1C;
  return AsyncCoreDataContainer.performRead<A>(_:)(a1, a2, a3, a4);
}

uint64_t sub_1D797EAC8(uint64_t a1)
{
  uint64_t v4 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v5 = v1[5];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_1D7874050;
  return sub_1D797D350(a1, v4, v6, v5);
}

uint64_t objectdestroyTm_1()
{
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_1D797EBCC(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = (uint64_t *)v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  unint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *unint64_t v8 = v2;
  v8[1] = sub_1D786EC1C;
  return sub_1D797DD58(a1, v5, v7, v6, v4);
}

uint64_t sub_1D797EC90()
{
  return sub_1D797F3D8();
}

uint64_t sub_1D797ECA8(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 88);
}

uint64_t dispatch thunk of AsyncCoreDataContexting.perform<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  unint64_t v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a6 + 8)
                                                                                     + **(int **)(a6 + 8));
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v13;
  *uint64_t v13 = v6;
  v13[1] = sub_1D7874050;
  return v15(a1, a2, a3, a4, a5, a6);
}

uint64_t dispatch thunk of AsyncCoreDataContaining.write<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  unint64_t v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a6 + 24)
                                                                                     + **(int **)(a6 + 24));
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v13;
  *uint64_t v13 = v6;
  v13[1] = sub_1D7874050;
  return v15(a1, a2, a3, a4, a5, a6);
}

uint64_t dispatch thunk of AsyncCoreDataContaining.read<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  unint64_t v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a6 + 32)
                                                                                     + **(int **)(a6 + 32));
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v13;
  *uint64_t v13 = v6;
  v13[1] = sub_1D7874050;
  return v15(a1, a2, a3, a4, a5, a6);
}

uint64_t dispatch thunk of AsyncCoreDataContaining.performWrite<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  unint64_t v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a6 + 40)
                                                                                     + **(int **)(a6 + 40));
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v13;
  *uint64_t v13 = v6;
  v13[1] = sub_1D7874050;
  return v15(a1, a2, a3, a4, a5, a6);
}

uint64_t dispatch thunk of AsyncCoreDataContaining.performRead<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  unint64_t v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a6 + 48)
                                                                                     + **(int **)(a6 + 48));
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v13;
  *uint64_t v13 = v6;
  v13[1] = sub_1D7874050;
  return v15(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_1D797F278()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for AsyncCoreDataContainer()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t method lookup function for AsyncCoreDataContainer(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for AsyncCoreDataContainer);
}

uint64_t dispatch thunk of AsyncCoreDataContainer.__allocating_init(contextBuilder:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t objectdestroy_13Tm()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 56) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x1F4186498](v0, v5, v6);
}

uint64_t sub_1D797F3D8()
{
  return (*(uint64_t (**)(unint64_t))(v0 + 40))(v0+ ((*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 16) - 8) + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 16) - 8) + 80)));
}

uint64_t static ISO18013Response.supportedVersion.getter()
{
  return 3157553;
}

uint64_t ISO18013Response.version.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ISO18013Response.documents.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ISO18013Response.documentErrors.getter()
{
  return swift_bridgeObjectRetain();
}

void ISO18013Response.status.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 32);
}

uint64_t sub_1D797F4AC(unsigned __int8 *a1, char *a2)
{
  return sub_1D7997400(*a1, *a2);
}

uint64_t sub_1D797F4B8()
{
  return sub_1D7A9D628();
}

uint64_t sub_1D797F590()
{
  sub_1D7A9C0B8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D797F650()
{
  return sub_1D7A9D628();
}

uint64_t sub_1D797F724@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1D7989550();
  *a1 = result;
  return result;
}

void sub_1D797F75C(uint64_t a1@<X8>)
{
  unint64_t v2 = 0xE700000000000000;
  uint64_t v3 = 0x6E6F6973726576;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE900000000000073;
      uint64_t v3 = 0x746E656D75636F64;
      goto LABEL_3;
    case 2:
      strcpy((char *)a1, "documentErrors");
      *(unsigned char *)(a1 + 15) = -18;
      break;
    case 3:
      *(void *)a1 = 0x737574617473;
      *(void *)(a1 + 8) = 0xE600000000000000;
      break;
    default:
LABEL_3:
      *(void *)a1 = v3;
      *(void *)(a1 + 8) = v2;
      break;
  }
}

uint64_t sub_1D797F804()
{
  uint64_t result = 0x6E6F6973726576;
  switch(*v0)
  {
    case 1:
    case 2:
      uint64_t result = 0x746E656D75636F64;
      break;
    case 3:
      uint64_t result = 0x737574617473;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1D797F890@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1D7989550();
  *a1 = result;
  return result;
}

uint64_t sub_1D797F8C0(uint64_t a1)
{
  unint64_t v2 = sub_1D797FB60();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D797F8FC(uint64_t a1)
{
  unint64_t v2 = sub_1D797FB60();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D797F938@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1D7989504();
  *a1 = result;
  return result;
}

uint64_t sub_1D797F968@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1D7989504();
  *a1 = result;
  return result;
}

uint64_t sub_1D797F990(uint64_t a1)
{
  unint64_t v2 = sub_1D797FB0C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D797F9CC(uint64_t a1)
{
  unint64_t v2 = sub_1D797FB0C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t ISO18013Response.init(version:documents:documentErrors:status:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char *a5@<X4>, uint64_t a6@<X8>)
{
  char v6 = *a5;
  *(void *)a6 = result;
  *(void *)(a6 + 8) = a2;
  *(void *)(a6 + 16) = a3;
  *(void *)(a6 + 24) = a4;
  *(unsigned char *)(a6 + 32) = v6;
  return result;
}

uint64_t ISO18013Response.explicitOrderingKeys(cborEncoder:)()
{
  CBOREncoder.codingKeyFormat.getter(&v5);
  char v0 = v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA843030);
  if (v0)
  {
    uint64_t v1 = swift_allocObject();
    *(_OWORD *)(v1 + 16) = xmmword_1D7AA4E80;
    *(void *)(v1 + 56) = &type metadata for ISO18013Response.ACWGCodingKeys;
    unint64_t v2 = sub_1D797FB0C();
    *(void *)(v1 + 64) = v2;
    *(unsigned char *)(v1 + 32) = 0;
    *(void *)(v1 + 96) = &type metadata for ISO18013Response.ACWGCodingKeys;
    *(void *)(v1 + 104) = v2;
    *(unsigned char *)(v1 + 72) = 1;
    *(void *)(v1 + 136) = &type metadata for ISO18013Response.ACWGCodingKeys;
    *(void *)(v1 + 144) = v2;
    *(unsigned char *)(v1 + 112) = 2;
  }
  else
  {
    uint64_t v1 = swift_allocObject();
    *(_OWORD *)(v1 + 16) = xmmword_1D7AA4E90;
    *(void *)(v1 + 56) = &type metadata for ISO18013Response.CodingKeys;
    unint64_t v3 = sub_1D797FB60();
    *(void *)(v1 + 64) = v3;
    *(unsigned char *)(v1 + 32) = 0;
    *(void *)(v1 + 96) = &type metadata for ISO18013Response.CodingKeys;
    *(void *)(v1 + 104) = v3;
    *(unsigned char *)(v1 + 72) = 1;
    *(void *)(v1 + 136) = &type metadata for ISO18013Response.CodingKeys;
    *(void *)(v1 + 144) = v3;
    *(unsigned char *)(v1 + 112) = 2;
    *(void *)(v1 + 176) = &type metadata for ISO18013Response.CodingKeys;
    *(void *)(v1 + 184) = v3;
    *(unsigned char *)(v1 + 152) = 3;
  }
  return v1;
}

unint64_t sub_1D797FB0C()
{
  unint64_t result = qword_1EA8456B8;
  if (!qword_1EA8456B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA8456B8);
  }
  return result;
}

unint64_t sub_1D797FB60()
{
  unint64_t result = qword_1EA8456C0;
  if (!qword_1EA8456C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA8456C0);
  }
  return result;
}

uint64_t ISO18013Response.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  v39 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8456C8);
  uint64_t v40 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3, v4, v5, v6, v7, v8, v9, v10);
  v41 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8456D0);
  MEMORY[0x1F4188790](v12, v13, v14, v15, v16, v17, v18, v19);
  uint64_t v21 = (char *)&v39 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = a1[3];
  uint64_t v23 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v22);
  Decoder.codingKeyFormat.getter(v22, v23, &v46);
  char v24 = v46;
  uint64_t v25 = a1[3];
  v42 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v25);
  if ((v24 & 1) == 0)
  {
    sub_1D797FB60();
    uint64_t v29 = v43;
    sub_1D7A9D6A8();
    if (!v29)
    {
      LOBYTE(v44) = 0;
      uint64_t v31 = sub_1D7A9D0F8();
      uint64_t v33 = v34;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8456D8);
      char v45 = 1;
      sub_1D79806D8(&qword_1EA8456E0, &qword_1EA8456E8);
      sub_1D7A9D0E8();
      uint64_t v43 = v44;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8456F8);
      char v45 = 2;
      sub_1D7980204();
      sub_1D7A9D0E8();
      uint64_t v36 = v44;
      char v45 = 3;
      sub_1D79801B0();
      sub_1D7A9D148();
      MEMORY[8](v21, v12);
      char v37 = v44;
      uint64_t v35 = v43;
      goto LABEL_7;
    }
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v42);
  }
  uint64_t v26 = v40;
  sub_1D797FB0C();
  v27 = v41;
  uint64_t v28 = v43;
  sub_1D7A9D6A8();
  if (v28) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v42);
  }
  LOBYTE(v44) = 0;
  uint64_t v31 = sub_1D7A9D0F8();
  uint64_t v33 = v32;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8456D8);
  char v45 = 1;
  sub_1D79806D8(&qword_1EA8456E0, &qword_1EA8456E8);
  sub_1D7A9D0E8();
  uint64_t v35 = v44;
  char v45 = 2;
  sub_1D79801B0();
  sub_1D7A9D148();
  (*(void (**)(char *, uint64_t))(v26 + 8))(v27, v3);
  uint64_t v36 = 0;
  char v37 = v44;
LABEL_7:
  v38 = v39;
  uint64_t *v39 = v31;
  v38[1] = v33;
  v38[2] = v35;
  v38[3] = v36;
  *((unsigned char *)v38 + 32) = v37;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v42);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for ISO18013Response.Document(uint64_t a1)
{
  return sub_1D786E938(a1, (uint64_t *)&unk_1EA8458A0);
}

unint64_t sub_1D79801B0()
{
  unint64_t result = qword_1EA8456F0;
  if (!qword_1EA8456F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA8456F0);
  }
  return result;
}

unint64_t sub_1D7980204()
{
  unint64_t result = qword_1EA845700;
  if (!qword_1EA845700)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA8456F8);
    sub_1D79808A8(&qword_1EA845708);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA845700);
  }
  return result;
}

uint64_t ISO18013Response.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA845718);
  uint64_t v35 = *(void *)(v3 - 8);
  uint64_t v36 = v3;
  MEMORY[0x1F4188790](v3, v4, v5, v6, v7, v8, v9, v10);
  uint64_t v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA845720);
  uint64_t v13 = *(void *)(v37 - 8);
  MEMORY[0x1F4188790](v37, v14, v15, v16, v17, v18, v19, v20);
  uint64_t v22 = (char *)&v34 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = *v1;
  uint64_t v38 = v1[1];
  uint64_t v39 = v23;
  uint64_t v24 = v1[3];
  uint64_t v34 = v1[2];
  int v42 = *((unsigned __int8 *)v1 + 32);
  uint64_t v25 = a1[3];
  uint64_t v26 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v25);
  Encoder.codingKeyFormat.getter(v25, v26, &v44);
  char v27 = v44;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  if (v27)
  {
    uint64_t v28 = v35;
    sub_1D797FB0C();
    sub_1D7A9D6E8();
    LOBYTE(v41) = 0;
    uint64_t v29 = v36;
    uint64_t v30 = v40;
    sub_1D7A9D1D8();
    if (!v30)
    {
      uint64_t v41 = v34;
      char v43 = 1;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8456D8);
      sub_1D79806D8(&qword_1EA845728, &qword_1EA845730);
      sub_1D7A9D1C8();
      LOBYTE(v41) = v42;
      char v43 = 2;
      sub_1D79807B4();
      sub_1D7A9D228();
    }
    return (*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v12, v29);
  }
  else
  {
    sub_1D797FB60();
    sub_1D7A9D6E8();
    LOBYTE(v41) = 0;
    uint64_t v32 = v37;
    uint64_t v33 = v40;
    sub_1D7A9D1D8();
    if (!v33)
    {
      uint64_t v41 = v34;
      char v43 = 1;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8456D8);
      sub_1D79806D8(&qword_1EA845728, &qword_1EA845730);
      sub_1D7A9D1C8();
      uint64_t v41 = v24;
      char v43 = 2;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8456F8);
      sub_1D7980808();
      sub_1D7A9D1C8();
      LOBYTE(v41) = v42;
      char v43 = 3;
      sub_1D79807B4();
      sub_1D7A9D228();
    }
    return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v22, v32);
  }
}

uint64_t sub_1D79806D8(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA8456D8);
    sub_1D798076C(a2, (void (*)(uint64_t))type metadata accessor for ISO18013Response.Document);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1D798076C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1D79807B4()
{
  unint64_t result = qword_1EA845738;
  if (!qword_1EA845738)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA845738);
  }
  return result;
}

unint64_t sub_1D7980808()
{
  unint64_t result = qword_1EA845740;
  if (!qword_1EA845740)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA8456F8);
    sub_1D79808A8(&qword_1EA845748);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA845740);
  }
  return result;
}

uint64_t sub_1D79808A8(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA845710);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1D7980910@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return ISO18013Response.init(from:)(a1, a2);
}

uint64_t sub_1D7980928(void *a1)
{
  return ISO18013Response.encode(to:)(a1);
}

uint64_t sub_1D7980940()
{
  return ISO18013Response.explicitOrderingKeys(cborEncoder:)();
}

CoreIDVShared::ISO18013Response::Status_optional __swiftcall ISO18013Response.Status.init(rawValue:)(Swift::UInt rawValue)
{
  char v2 = 1;
  switch(rawValue)
  {
    case 0uLL:
      char v2 = 0;
      goto LABEL_3;
    case 0xAuLL:
LABEL_3:
      char *v1 = v2;
      break;
    case 0xBuLL:
      char *v1 = 2;
      break;
    case 0xCuLL:
      char *v1 = 3;
      break;
    default:
      char *v1 = 4;
      break;
  }
  return (CoreIDVShared::ISO18013Response::Status_optional)rawValue;
}

uint64_t ISO18013Response.Status.rawValue.getter()
{
  return qword_1D7AB3798[*v0];
}

BOOL sub_1D7980A00(char *a1, char *a2)
{
  return qword_1D7AB3798[*a1] == qword_1D7AB3798[*a2];
}

uint64_t sub_1D7980A24()
{
  return sub_1D7A9D628();
}

uint64_t sub_1D7980A74()
{
  return sub_1D7A9D5E8();
}

uint64_t sub_1D7980AAC()
{
  return sub_1D7A9D628();
}

CoreIDVShared::ISO18013Response::Status_optional sub_1D7980AF8(Swift::UInt *a1)
{
  return ISO18013Response.Status.init(rawValue:)(*a1);
}

void sub_1D7980B00(void *a1@<X8>)
{
  *a1 = qword_1D7AB3798[*v1];
}

uint64_t sub_1D7980B18()
{
  return sub_1D7A9C2D8();
}

uint64_t sub_1D7980B78()
{
  return sub_1D7A9C278();
}

uint64_t ISO18013Response.Document.docType.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ISO18013Response.Document.issuerSigned.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D79833A0(type metadata accessor for ISO18013Response.Document, (uint64_t)type metadata accessor for ISO18013Response.IssuerSigned, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1D7981CB4, a1);
}

uint64_t type metadata accessor for ISO18013Response.IssuerSigned(uint64_t a1)
{
  return sub_1D786E938(a1, (uint64_t *)&unk_1EA8458B8);
}

uint64_t ISO18013Response.Document.deviceSigned.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for ISO18013Response.Document(0);
  return sub_1D78614F8(v1 + *(int *)(v3 + 24), a1, &qword_1EA845750);
}

uint64_t ISO18013Response.Document.errors.getter()
{
  type metadata accessor for ISO18013Response.Document(0);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1D7980CCC(unsigned __int8 *a1, char *a2)
{
  return sub_1D79970F0(*a1, *a2);
}

uint64_t sub_1D7980CD8()
{
  return sub_1D7A9D628();
}

uint64_t sub_1D7980DB0()
{
  sub_1D7A9C0B8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D7980E70()
{
  return sub_1D7A9D628();
}

uint64_t sub_1D7980F44@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1D7989550();
  *a1 = result;
  return result;
}

void sub_1D7980F7C(uint64_t a1@<X8>)
{
  unint64_t v2 = 0xE700000000000000;
  uint64_t v3 = 0x65707954636F64;
  switch(*v1)
  {
    case 1:
      uint64_t v3 = 0x6953726575737369;
      unint64_t v2 = 0xEC00000064656E67;
      goto LABEL_3;
    case 2:
      strcpy((char *)a1, "deviceSigned");
      *(unsigned char *)(a1 + 13) = 0;
      *(_WORD *)(a1 + 14) = -5120;
      break;
    case 3:
      *(void *)a1 = 0x73726F727265;
      *(void *)(a1 + 8) = 0xE600000000000000;
      break;
    default:
LABEL_3:
      *(void *)a1 = v3;
      *(void *)(a1 + 8) = v2;
      break;
  }
}

uint64_t sub_1D7981024()
{
  uint64_t result = 0x65707954636F64;
  switch(*v0)
  {
    case 1:
      uint64_t v2 = 0x726575737369;
      goto LABEL_4;
    case 2:
      uint64_t v2 = 0x656369766564;
LABEL_4:
      uint64_t result = v2 & 0xFFFFFFFFFFFFLL | 0x6953000000000000;
      break;
    case 3:
      uint64_t result = 0x73726F727265;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1D79810B0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1D7989550();
  *a1 = result;
  return result;
}

uint64_t sub_1D79810E0(uint64_t a1)
{
  unint64_t v2 = sub_1D7981468();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D798111C(uint64_t a1)
{
  unint64_t v2 = sub_1D7981468();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D7981158(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1D79967B8(*a1, *a2);
}

uint64_t sub_1D7981164()
{
  return sub_1D7A9D628();
}

uint64_t sub_1D79811C4()
{
  sub_1D7A9C0B8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D7981208()
{
  return sub_1D7A9D628();
}

uint64_t sub_1D7981264@<X0>(char *a1@<X8>)
{
  return sub_1D79835B0(a1);
}

void sub_1D7981270(uint64_t *a1@<X8>)
{
  uint64_t v2 = 53;
  if (*v1) {
    uint64_t v2 = 49;
  }
  *a1 = v2;
  a1[1] = 0xE100000000000000;
}

uint64_t sub_1D7981290()
{
  if (*v0) {
    return 49;
  }
  else {
    return 53;
  }
}

uint64_t sub_1D79812AC@<X0>(char *a1@<X8>)
{
  return sub_1D798369C(a1);
}

uint64_t sub_1D79812B8(uint64_t a1)
{
  unint64_t v2 = sub_1D7981414();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D79812F4(uint64_t a1)
{
  unint64_t v2 = sub_1D7981414();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t ISO18013Response.Document.explicitOrderingKeys(cborEncoder:)()
{
  CBOREncoder.codingKeyFormat.getter(&v5);
  char v0 = v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA843030);
  if (v0)
  {
    uint64_t v1 = swift_allocObject();
    *(_OWORD *)(v1 + 16) = xmmword_1D7AA0A40;
    *(void *)(v1 + 56) = &type metadata for ISO18013Response.Document.ACWGCodingKeys;
    unint64_t v2 = sub_1D7981414();
    *(void *)(v1 + 64) = v2;
    *(unsigned char *)(v1 + 32) = 0;
    *(void *)(v1 + 96) = &type metadata for ISO18013Response.Document.ACWGCodingKeys;
    *(void *)(v1 + 104) = v2;
    *(unsigned char *)(v1 + 72) = 1;
  }
  else
  {
    uint64_t v1 = swift_allocObject();
    *(_OWORD *)(v1 + 16) = xmmword_1D7AA4E90;
    *(void *)(v1 + 56) = &type metadata for ISO18013Response.Document.CodingKeys;
    unint64_t v3 = sub_1D7981468();
    *(void *)(v1 + 64) = v3;
    *(unsigned char *)(v1 + 32) = 0;
    *(void *)(v1 + 96) = &type metadata for ISO18013Response.Document.CodingKeys;
    *(void *)(v1 + 104) = v3;
    *(unsigned char *)(v1 + 72) = 1;
    *(void *)(v1 + 136) = &type metadata for ISO18013Response.Document.CodingKeys;
    *(void *)(v1 + 144) = v3;
    *(unsigned char *)(v1 + 112) = 2;
    *(void *)(v1 + 176) = &type metadata for ISO18013Response.Document.CodingKeys;
    *(void *)(v1 + 184) = v3;
    *(unsigned char *)(v1 + 152) = 3;
  }
  return v1;
}

unint64_t sub_1D7981414()
{
  unint64_t result = qword_1EA845758;
  if (!qword_1EA845758)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA845758);
  }
  return result;
}

unint64_t sub_1D7981468()
{
  unint64_t result = qword_1EA845760;
  if (!qword_1EA845760)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA845760);
  }
  return result;
}

uint64_t ISO18013Response.Document.init(docType:issuerSigned:deviceSigned:errors:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void *a6@<X8>)
{
  *a6 = a1;
  a6[1] = a2;
  uint64_t v10 = (int *)type metadata accessor for ISO18013Response.Document(0);
  sub_1D79837D4(a3, (uint64_t)a6 + v10[5], type metadata accessor for ISO18013Response.IssuerSigned);
  uint64_t result = sub_1D7871D78(a4, (uint64_t)a6 + v10[6], &qword_1EA845750);
  *(void *)((char *)a6 + v10[7]) = a5;
  return result;
}

uint64_t ISO18013Response.Document.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v79 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA845768);
  uint64_t v84 = *(void *)(v3 - 8);
  uint64_t v85 = v3;
  MEMORY[0x1F4188790](v3, v4, v5, v6, v7, v8, v9, v10);
  v86 = (char *)&v79 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA845750);
  MEMORY[0x1F4188790](v12 - 8, v13, v14, v15, v16, v17, v18, v19);
  uint64_t v21 = (char *)&v79 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v81 = type metadata accessor for ISO18013Response.IssuerSigned(0);
  uint64_t v29 = MEMORY[0x1F4188790](v81, v22, v23, v24, v25, v26, v27, v28);
  uint64_t v31 = (char *)&v79 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v29, v32, v33, v34, v35, v36, v37, v38);
  uint64_t v40 = (char *)&v79 - v39;
  uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA845770);
  uint64_t v83 = *(void *)(v41 - 8);
  MEMORY[0x1F4188790](v41, v42, v43, v44, v45, v46, v47, v48);
  v87 = (char *)&v79 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = type metadata accessor for ISO18013Response.Document(0);
  MEMORY[0x1F4188790](v80, v50, v51, v52, v53, v54, v55, v56);
  v82 = (uint64_t *)((char *)&v79 - ((v57 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v58 = a1[3];
  uint64_t v59 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v58);
  Decoder.codingKeyFormat.getter(v58, v59, &v97);
  char v60 = v97;
  uint64_t v61 = a1[3];
  v88 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v61);
  if ((v60 & 1) == 0)
  {
    v86 = v21;
    uint64_t v67 = v83;
    sub_1D7981468();
    uint64_t v68 = v89;
    sub_1D7A9D6A8();
    if (!v68)
    {
      char v94 = 0;
      uint64_t v69 = sub_1D7A9D0F8();
      uint64_t v71 = (uint64_t)v82;
      uint64_t *v82 = v69;
      *(void *)(v71 + 8) = v73;
      char v93 = 1;
      sub_1D798076C(&qword_1EA845778, (void (*)(uint64_t))type metadata accessor for ISO18013Response.IssuerSigned);
      sub_1D7A9D148();
      uint64_t v77 = v80;
      sub_1D79837D4((uint64_t)v40, v71 + *(int *)(v80 + 20), type metadata accessor for ISO18013Response.IssuerSigned);
      type metadata accessor for ISO18013Response.DeviceSigned(0);
      char v92 = 2;
      sub_1D798076C(&qword_1EA845780, (void (*)(uint64_t))type metadata accessor for ISO18013Response.DeviceSigned);
      uint64_t v78 = (uint64_t)v86;
      sub_1D7A9D0E8();
      sub_1D7871D78(v78, v71 + *(int *)(v77 + 24), &qword_1EA845750);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA845788);
      char v91 = 3;
      sub_1D7981D7C();
      sub_1D7A9D0E8();
      (*(void (**)(char *, uint64_t))(v67 + 8))(v87, v41);
      *(void *)(v71 + *(int *)(v77 + 28)) = v90;
      goto LABEL_7;
    }
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v88);
  }
  uint64_t v63 = v84;
  uint64_t v62 = v85;
  sub_1D7981414();
  v64 = v86;
  uint64_t v65 = v89;
  sub_1D7A9D6A8();
  if (v65) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v88);
  }
  char v96 = 0;
  uint64_t v66 = sub_1D7A9D0F8();
  uint64_t v71 = (uint64_t)v82;
  uint64_t *v82 = v66;
  *(void *)(v71 + 8) = v72;
  char v95 = 1;
  sub_1D798076C(&qword_1EA845778, (void (*)(uint64_t))type metadata accessor for ISO18013Response.IssuerSigned);
  sub_1D7A9D148();
  (*(void (**)(char *, uint64_t))(v63 + 8))(v64, v62);
  uint64_t v74 = v80;
  sub_1D79837D4((uint64_t)v31, v71 + *(int *)(v80 + 20), type metadata accessor for ISO18013Response.IssuerSigned);
  uint64_t v75 = v71 + *(int *)(v74 + 24);
  uint64_t v76 = type metadata accessor for ISO18013Response.DeviceSigned(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v76 - 8) + 56))(v75, 1, 1, v76);
  *(void *)(v71 + *(int *)(v74 + 28)) = 0;
LABEL_7:
  sub_1D7981CB4(v71, v79, type metadata accessor for ISO18013Response.Document);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v88);
  return sub_1D7981D1C(v71, type metadata accessor for ISO18013Response.Document);
}

uint64_t type metadata accessor for ISO18013Response.DeviceSigned(uint64_t a1)
{
  return sub_1D786E938(a1, (uint64_t *)&unk_1EA8458C8);
}

uint64_t sub_1D7981CB4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1D7981D1C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_1D7981D7C()
{
  unint64_t result = qword_1EA845790;
  if (!qword_1EA845790)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA845788);
    sub_1D79808A8(&qword_1EA845708);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA845790);
  }
  return result;
}

uint64_t ISO18013Response.Document.encode(to:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA845798);
  uint64_t v33 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2, v3, v4, v5, v6, v7, v8, v9);
  uint64_t v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8457A0);
  uint64_t v12 = *(void *)(v34 - 8);
  MEMORY[0x1F4188790](v34, v13, v14, v15, v16, v17, v18, v19);
  uint64_t v21 = (char *)&v32 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = a1[3];
  uint64_t v23 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v22);
  Encoder.codingKeyFormat.getter(v22, v23, &v44);
  char v24 = v44;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  if (v24)
  {
    uint64_t v25 = v33;
    sub_1D7981414();
    sub_1D7A9D6E8();
    uint64_t v26 = v35;
    char v43 = 0;
    sub_1D7A9D1D8();
    if (!v26)
    {
      type metadata accessor for ISO18013Response.Document(0);
      char v42 = 1;
      type metadata accessor for ISO18013Response.IssuerSigned(0);
      sub_1D798076C(&qword_1EA8457A8, (void (*)(uint64_t))type metadata accessor for ISO18013Response.IssuerSigned);
      sub_1D7A9D228();
    }
    return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v11, v2);
  }
  else
  {
    sub_1D7981468();
    sub_1D7A9D6E8();
    uint64_t v28 = v35;
    uint64_t v29 = v36;
    char v41 = 0;
    uint64_t v30 = v34;
    sub_1D7A9D1D8();
    if (!v28)
    {
      uint64_t v31 = type metadata accessor for ISO18013Response.Document(0);
      char v40 = 1;
      type metadata accessor for ISO18013Response.IssuerSigned(0);
      sub_1D798076C(&qword_1EA8457A8, (void (*)(uint64_t))type metadata accessor for ISO18013Response.IssuerSigned);
      sub_1D7A9D228();
      char v39 = 2;
      type metadata accessor for ISO18013Response.DeviceSigned(0);
      sub_1D798076C(&qword_1EA8457B0, (void (*)(uint64_t))type metadata accessor for ISO18013Response.DeviceSigned);
      sub_1D7A9D1C8();
      uint64_t v37 = *(void *)(v29 + *(int *)(v31 + 28));
      char v38 = 3;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA845788);
      sub_1D7982230();
      sub_1D7A9D1C8();
    }
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v21, v30);
  }
}

unint64_t sub_1D7982230()
{
  unint64_t result = qword_1EA8457B8;
  if (!qword_1EA8457B8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA845788);
    sub_1D79808A8(&qword_1EA845748);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA8457B8);
  }
  return result;
}

uint64_t sub_1D79822D0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ISO18013Response.Document.init(from:)(a1, a2);
}

uint64_t sub_1D79822E8(void *a1)
{
  return ISO18013Response.Document.encode(to:)(a1);
}

uint64_t sub_1D7982300()
{
  return ISO18013Response.Document.explicitOrderingKeys(cborEncoder:)();
}

uint64_t ISO18013Response.IssuerSigned.namespaces.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ISO18013Response.IssuerSigned.issuerAuth.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ISO18013Response.IssuerSigned(0) + 20);
  uint64_t v4 = sub_1D7A9B328();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t sub_1D7982398@<X0>(char *a1@<X8>)
{
  return sub_1D79835B0(a1);
}

uint64_t sub_1D79823A4@<X0>(char *a1@<X8>)
{
  return sub_1D798369C(a1);
}

uint64_t sub_1D79823B0(uint64_t a1)
{
  unint64_t v2 = sub_1D79826DC();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D79823EC(uint64_t a1)
{
  unint64_t v2 = sub_1D79826DC();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D7982428(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1D7996704(*a1, *a2);
}

uint64_t sub_1D7982434()
{
  return sub_1D7A9D628();
}

uint64_t sub_1D7982490()
{
  sub_1D7A9C0B8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D79824D0()
{
  return sub_1D7A9D628();
}

uint64_t sub_1D7982528@<X0>(char *a1@<X8>)
{
  return sub_1D79835B0(a1);
}

void sub_1D7982534(uint64_t *a1@<X8>)
{
  uint64_t v2 = 49;
  if (*v1) {
    uint64_t v2 = 50;
  }
  *a1 = v2;
  a1[1] = 0xE100000000000000;
}

uint64_t sub_1D7982550()
{
  if (*v0) {
    return 50;
  }
  else {
    return 49;
  }
}

uint64_t sub_1D7982568@<X0>(char *a1@<X8>)
{
  return sub_1D798369C(a1);
}

uint64_t sub_1D7982574(uint64_t a1)
{
  unint64_t v2 = sub_1D7982688();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D79825B0(uint64_t a1)
{
  unint64_t v2 = sub_1D7982688();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t ISO18013Response.IssuerSigned.explicitOrderingKeys(cborEncoder:)()
{
  CBOREncoder.codingKeyFormat.getter(&v6);
  char v0 = v6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA843030);
  uint64_t v1 = swift_allocObject();
  uint64_t v2 = v1;
  *(_OWORD *)(v1 + 16) = xmmword_1D7AA0A40;
  if (v0)
  {
    uint64_t v3 = &type metadata for ISO18013Response.IssuerSigned.ACWGCodingKeys;
    *(void *)(v1 + 56) = &type metadata for ISO18013Response.IssuerSigned.ACWGCodingKeys;
    unint64_t v4 = sub_1D7982688();
  }
  else
  {
    uint64_t v3 = &type metadata for ISO18013Response.IssuerSigned.CodingKeys;
    *(void *)(v1 + 56) = &type metadata for ISO18013Response.IssuerSigned.CodingKeys;
    unint64_t v4 = sub_1D79826DC();
  }
  *(void *)(v2 + 64) = v4;
  *(unsigned char *)(v2 + 32) = 0;
  *(void *)(v2 + 96) = v3;
  *(void *)(v2 + 104) = v4;
  *(unsigned char *)(v2 + 72) = 1;
  return v2;
}

unint64_t sub_1D7982688()
{
  unint64_t result = qword_1EA8457C0;
  if (!qword_1EA8457C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA8457C0);
  }
  return result;
}

unint64_t sub_1D79826DC()
{
  unint64_t result = qword_1EA8457C8;
  if (!qword_1EA8457C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA8457C8);
  }
  return result;
}

uint64_t ISO18013Response.IssuerSigned.init(namespaces:issuerAuth:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = a1;
  unint64_t v4 = (char *)a3 + *(int *)(type metadata accessor for ISO18013Response.IssuerSigned(0) + 20);
  uint64_t v5 = sub_1D7A9B328();
  char v6 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32);
  return v6(v4, a2, v5);
}

uint64_t ISO18013Response.IssuerSigned.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v64 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8457D0);
  uint64_t v68 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3, v4, v5, v6, v7, v8, v9, v10);
  uint64_t v69 = (char *)&v61 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = sub_1D7A9B328();
  uint64_t v63 = *(void *)(v65 - 8);
  uint64_t v19 = MEMORY[0x1F4188790](v65, v12, v13, v14, v15, v16, v17, v18);
  uint64_t v21 = (char *)&v61 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19, v22, v23, v24, v25, v26, v27, v28);
  uint64_t v30 = (char *)&v61 - v29;
  uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8457D8);
  uint64_t v67 = *(void *)(v31 - 8);
  MEMORY[0x1F4188790](v31, v32, v33, v34, v35, v36, v37, v38);
  v70 = (char *)&v61 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = type metadata accessor for ISO18013Response.IssuerSigned(0);
  MEMORY[0x1F4188790](v62, v40, v41, v42, v43, v44, v45, v46);
  uint64_t v66 = (char *)&v61 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = a1[3];
  uint64_t v49 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v48);
  Decoder.codingKeyFormat.getter(v48, v49, &v74);
  char v50 = v74;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  if ((v50 & 1) == 0)
  {
    uint64_t v54 = v67;
    sub_1D79826DC();
    uint64_t v55 = v71;
    sub_1D7A9D6A8();
    if (!v55)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8457E0);
      char v73 = 0;
      sub_1D7982D50();
      uint64_t v56 = v31;
      sub_1D7A9D0E8();
      uint64_t v60 = (uint64_t)v66;
      *(void *)uint64_t v66 = v72;
      LOBYTE(v72) = 1;
      sub_1D798076C(&qword_1EA843380, MEMORY[0x1E4F50D80]);
      uint64_t v59 = v65;
      sub_1D7A9D148();
      (*(void (**)(char *, uint64_t))(v54 + 8))(v70, v56);
      (*(void (**)(uint64_t, char *, uint64_t))(v63 + 32))(v60 + *(int *)(v62 + 20), v30, v59);
      goto LABEL_7;
    }
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v51 = v68;
  sub_1D7982688();
  uint64_t v52 = v69;
  uint64_t v53 = v71;
  sub_1D7A9D6A8();
  if (v53) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8457E0);
  char v73 = 0;
  sub_1D7982D50();
  sub_1D7A9D0E8();
  *(void *)uint64_t v66 = v72;
  LOBYTE(v72) = 1;
  sub_1D798076C(&qword_1EA843380, MEMORY[0x1E4F50D80]);
  uint64_t v58 = v65;
  sub_1D7A9D148();
  (*(void (**)(char *, uint64_t))(v51 + 8))(v52, v3);
  uint64_t v60 = (uint64_t)v66;
  (*(void (**)(char *, char *, uint64_t))(v63 + 32))(&v66[*(int *)(v62 + 20)], v21, v58);
LABEL_7:
  sub_1D7981CB4(v60, v64, type metadata accessor for ISO18013Response.IssuerSigned);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_1D7981D1C(v60, type metadata accessor for ISO18013Response.IssuerSigned);
}

unint64_t sub_1D7982D50()
{
  unint64_t result = qword_1EA8457E8;
  if (!qword_1EA8457E8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA8457E0);
    sub_1D7982E04(&qword_1EA8457F0, &qword_1EA843378);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA8457E8);
  }
  return result;
}

uint64_t sub_1D7982E04(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA8457F8);
    sub_1D7871DDC(a2, &qword_1EA842300);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t ISO18013Response.IssuerSigned.encode(to:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA845800);
  uint64_t v30 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2, v3, v4, v5, v6, v7, v8, v9);
  uint64_t v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA845808);
  uint64_t v29 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12, v13, v14, v15, v16, v17, v18, v19);
  uint64_t v21 = (char *)&v28 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = a1[3];
  uint64_t v23 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v22);
  Encoder.codingKeyFormat.getter(v22, v23, &v35);
  char v24 = v35;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  if (v24)
  {
    sub_1D7982688();
    sub_1D7A9D6E8();
    uint64_t v33 = *v32;
    char v34 = 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8457E0);
    sub_1D7983220();
    uint64_t v25 = v31;
    sub_1D7A9D1C8();
    if (!v25)
    {
      type metadata accessor for ISO18013Response.IssuerSigned(0);
      LOBYTE(v33) = 1;
      sub_1D7A9B328();
      sub_1D798076C(&qword_1EA8433A8, MEMORY[0x1E4F50D80]);
      sub_1D7A9D228();
    }
    return (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v11, v2);
  }
  else
  {
    sub_1D79826DC();
    sub_1D7A9D6E8();
    uint64_t v33 = *v32;
    char v34 = 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8457E0);
    sub_1D7983220();
    uint64_t v27 = v31;
    sub_1D7A9D1C8();
    if (!v27)
    {
      type metadata accessor for ISO18013Response.IssuerSigned(0);
      LOBYTE(v33) = 1;
      sub_1D7A9B328();
      sub_1D798076C(&qword_1EA8433A8, MEMORY[0x1E4F50D80]);
      sub_1D7A9D228();
    }
    return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v21, v12);
  }
}

unint64_t sub_1D7983220()
{
  unint64_t result = qword_1EA845810;
  if (!qword_1EA845810)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA8457E0);
    sub_1D7982E04(&qword_1EA845818, &qword_1EA8433A0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA845810);
  }
  return result;
}

uint64_t sub_1D79832D4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ISO18013Response.IssuerSigned.init(from:)(a1, a2);
}

uint64_t sub_1D79832EC(void *a1)
{
  return ISO18013Response.IssuerSigned.encode(to:)(a1);
}

uint64_t sub_1D7983304()
{
  return ISO18013Response.IssuerSigned.explicitOrderingKeys(cborEncoder:)();
}

uint64_t ISO18013Response.DeviceSigned.namespaces.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  unint64_t v3 = v1[2];
  uint64_t v4 = v1[3];
  *a1 = *v1;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  sub_1D7860790(v2, v3);
  return swift_bridgeObjectRetain();
}

uint64_t ISO18013Response.DeviceSigned.deviceAuth.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D79833A0(type metadata accessor for ISO18013Response.DeviceSigned, (uint64_t)type metadata accessor for ISO18013Response.DeviceAuth, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1D7981CB4, a1);
}

uint64_t sub_1D79833A0@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = a1(0);
  return a3(v4 + *(int *)(v8 + 20), a4, a2);
}

uint64_t type metadata accessor for ISO18013Response.DeviceAuth(uint64_t a1)
{
  return sub_1D786E938(a1, (uint64_t *)&unk_1EA8458D8);
}

uint64_t sub_1D7983418(char *a1, char *a2)
{
  return sub_1D7997354(*a1, *a2);
}

uint64_t sub_1D7983424()
{
  return sub_1D7A9D628();
}

uint64_t sub_1D79834AC()
{
  sub_1D7A9C0B8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D7983520()
{
  return sub_1D7A9D628();
}

uint64_t sub_1D79835A4@<X0>(char *a1@<X8>)
{
  return sub_1D79835B0(a1);
}

uint64_t sub_1D79835B0@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1D7A9D058();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

void sub_1D798360C(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x63617053656D616ELL;
  if (*v1) {
    uint64_t v2 = 0x7541656369766564;
  }
  unint64_t v3 = 0xEA00000000006874;
  if (!*v1) {
    unint64_t v3 = 0xEA00000000007365;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1D7983650()
{
  if (*v0) {
    return 0x7541656369766564;
  }
  else {
    return 0x63617053656D616ELL;
  }
}

uint64_t sub_1D7983690@<X0>(char *a1@<X8>)
{
  return sub_1D798369C(a1);
}

uint64_t sub_1D798369C@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1D7A9D058();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_1D79836FC(uint64_t a1)
{
  unint64_t v2 = sub_1D7983BA8();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D7983738(uint64_t a1)
{
  unint64_t v2 = sub_1D7983BA8();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t ISO18013Response.DeviceSigned.init(namespaces:deviceAuth:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v6 = *(void *)(a1 + 24);
  *(_OWORD *)a3 = *(_OWORD *)a1;
  *(void *)(a3 + 16) = v5;
  *(void *)(a3 + 24) = v6;
  uint64_t v7 = type metadata accessor for ISO18013Response.DeviceSigned(0);
  return sub_1D79837D4(a2, a3 + *(int *)(v7 + 20), type metadata accessor for ISO18013Response.DeviceAuth);
}

uint64_t sub_1D79837D4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t ISO18013Response.DeviceSigned.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v39 = a2;
  uint64_t v4 = type metadata accessor for ISO18013Response.DeviceAuth(0);
  MEMORY[0x1F4188790](v4, v5, v6, v7, v8, v9, v10, v11);
  uint64_t v42 = (uint64_t)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA845820);
  uint64_t v40 = *(void *)(v13 - 8);
  uint64_t v41 = v13;
  MEMORY[0x1F4188790](v13, v14, v15, v16, v17, v18, v19, v20);
  uint64_t v22 = (char *)&v39 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = type metadata accessor for ISO18013Response.DeviceSigned(0);
  MEMORY[0x1F4188790](v23, v24, v25, v26, v27, v28, v29, v30);
  uint64_t v32 = (char *)&v39 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D7983BA8();
  sub_1D7A9D6A8();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v33 = (uint64_t)v32;
  uint64_t v34 = v40;
  LOBYTE(v43) = 1;
  sub_1D798076C(&qword_1EA845830, (void (*)(uint64_t))type metadata accessor for ISO18013Response.DeviceAuth);
  uint64_t v35 = v41;
  sub_1D7A9D148();
  sub_1D79837D4(v42, v33 + *(int *)(v23 + 20), type metadata accessor for ISO18013Response.DeviceAuth);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA845838);
  char v46 = 0;
  sub_1D7871DDC(&qword_1EA845840, &qword_1EA845838);
  sub_1D7A9D148();
  (*(void (**)(char *, uint64_t))(v34 + 8))(v22, v35);
  uint64_t v36 = v44;
  uint64_t v37 = v45;
  *(_OWORD *)uint64_t v33 = v43;
  *(void *)(v33 + 16) = v36;
  *(void *)(v33 + 24) = v37;
  sub_1D7981CB4(v33, v39, type metadata accessor for ISO18013Response.DeviceSigned);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_1D7981D1C(v33, type metadata accessor for ISO18013Response.DeviceSigned);
}

unint64_t sub_1D7983BA8()
{
  unint64_t result = qword_1EA845828;
  if (!qword_1EA845828)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA845828);
  }
  return result;
}

uint64_t ISO18013Response.DeviceSigned.encode(to:)(void *a1)
{
  unint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA845848);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v7, v8, v9, v10, v11, v12, v13);
  uint64_t v15 = &v19[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D7983BA8();
  sub_1D7A9D6E8();
  type metadata accessor for ISO18013Response.DeviceSigned(0);
  LOBYTE(v20) = 1;
  type metadata accessor for ISO18013Response.DeviceAuth(0);
  sub_1D798076C(&qword_1EA845850, (void (*)(uint64_t))type metadata accessor for ISO18013Response.DeviceAuth);
  sub_1D7A9D228();
  if (!v2)
  {
    uint64_t v16 = *((void *)v3 + 2);
    uint64_t v17 = *((void *)v3 + 3);
    long long v20 = *v3;
    uint64_t v21 = v16;
    uint64_t v22 = v17;
    v19[15] = 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA845838);
    sub_1D7871DDC(&qword_1EA845858, &qword_1EA845838);
    sub_1D7A9D228();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v15, v5);
}

uint64_t sub_1D7983E04@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ISO18013Response.DeviceSigned.init(from:)(a1, a2);
}

uint64_t sub_1D7983E1C(void *a1)
{
  return ISO18013Response.DeviceSigned.encode(to:)(a1);
}

uint64_t ISO18013Response.DeviceAuth.deviceSignature.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D78614F8(v1, a1, &qword_1EA842478);
}

uint64_t ISO18013Response.DeviceAuth.deviceMac.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D79833A0(type metadata accessor for ISO18013Response.DeviceAuth, (uint64_t)&unk_1EA845860, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1D78614F8, a1);
}

uint64_t ISO18013Response.DeviceAuth.init(deviceSignature:deviceMac:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_1D7871D78(a1, a3, &qword_1EA842478);
  uint64_t v5 = type metadata accessor for ISO18013Response.DeviceAuth(0);
  return sub_1D7871D78(a2, a3 + *(int *)(v5 + 20), &qword_1EA845860);
}

uint64_t sub_1D7983EE4()
{
  if (*v0) {
    return 0x614D656369766564;
  }
  else {
    return 0x6953656369766564;
  }
}

uint64_t sub_1D7983F30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1D7989598(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D7983F58(uint64_t a1)
{
  unint64_t v2 = sub_1D79841D0();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D7983F94(uint64_t a1)
{
  unint64_t v2 = sub_1D79841D0();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t ISO18013Response.DeviceAuth.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA845868);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3, v5, v6, v7, v8, v9, v10, v11);
  uint64_t v13 = &v15[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D79841D0();
  sub_1D7A9D6E8();
  v15[15] = 0;
  sub_1D7A9B328();
  sub_1D798076C(&qword_1EA8433A8, MEMORY[0x1E4F50D80]);
  sub_1D7A9D1C8();
  if (!v1)
  {
    type metadata accessor for ISO18013Response.DeviceAuth(0);
    v15[14] = 1;
    sub_1D7A9B468();
    sub_1D798076C(&qword_1EA845878, MEMORY[0x1E4F50DF0]);
    sub_1D7A9D1C8();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v13, v3);
}

unint64_t sub_1D79841D0()
{
  unint64_t result = qword_1EA845870;
  if (!qword_1EA845870)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA845870);
  }
  return result;
}

uint64_t ISO18013Response.DeviceAuth.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v49 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA845860);
  MEMORY[0x1F4188790](v4 - 8, v5, v6, v7, v8, v9, v10, v11);
  uint64_t v13 = (char *)&v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA842478);
  MEMORY[0x1F4188790](v14 - 8, v15, v16, v17, v18, v19, v20, v21);
  uint64_t v51 = (char *)&v47 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA845880);
  uint64_t v50 = *(void *)(v52 - 8);
  MEMORY[0x1F4188790](v52, v23, v24, v25, v26, v27, v28, v29);
  uint64_t v31 = (char *)&v47 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = type metadata accessor for ISO18013Response.DeviceAuth(0);
  MEMORY[0x1F4188790](v32, v33, v34, v35, v36, v37, v38, v39);
  uint64_t v41 = (char *)&v47 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D79841D0();
  sub_1D7A9D6A8();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v48 = v32;
  uint64_t v42 = v50;
  uint64_t v43 = (uint64_t)v41;
  sub_1D7A9B328();
  char v54 = 0;
  sub_1D798076C(&qword_1EA843380, MEMORY[0x1E4F50D80]);
  uint64_t v44 = (uint64_t)v51;
  uint64_t v45 = v52;
  sub_1D7A9D0E8();
  sub_1D7871D78(v44, v43, &qword_1EA842478);
  sub_1D7A9B468();
  char v53 = 1;
  sub_1D798076C(&qword_1EA845888, MEMORY[0x1E4F50DF0]);
  sub_1D7A9D0E8();
  (*(void (**)(char *, uint64_t))(v42 + 8))(v31, v45);
  sub_1D7871D78((uint64_t)v13, v43 + *(int *)(v48 + 20), &qword_1EA845860);
  sub_1D7981CB4(v43, v49, type metadata accessor for ISO18013Response.DeviceAuth);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_1D7981D1C(v43, type metadata accessor for ISO18013Response.DeviceAuth);
}

unint64_t sub_1D79845D0()
{
  unint64_t result = qword_1EA845890;
  if (!qword_1EA845890)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA845890);
  }
  return result;
}

unint64_t sub_1D7984628()
{
  unint64_t result = qword_1EA845898;
  if (!qword_1EA845898)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA845898);
  }
  return result;
}

uint64_t sub_1D798467C()
{
  return sub_1D798076C(&qword_1EA845730, (void (*)(uint64_t))type metadata accessor for ISO18013Response.Document);
}

uint64_t sub_1D79846C4()
{
  return sub_1D798076C(&qword_1EA8457A8, (void (*)(uint64_t))type metadata accessor for ISO18013Response.IssuerSigned);
}

uint64_t sub_1D798470C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ISO18013Response.DeviceAuth.init(from:)(a1, a2);
}

uint64_t sub_1D7984724(void *a1)
{
  return ISO18013Response.DeviceAuth.encode(to:)(a1);
}

uint64_t destroy for ISO18013Response()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ISO18013Response(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ISO18013Response(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

__n128 __swift_memcpy33_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for ISO18013Response(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for ISO18013Response(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 33)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ISO18013Response(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 33) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ISO18013Response()
{
  return &type metadata for ISO18013Response;
}

ValueMetadata *type metadata accessor for ISO18013Response.Status()
{
  return &type metadata for ISO18013Response.Status;
}

void *initializeBufferWithCopyOfBuffer for ISO18013Response.Document(void *a1, void *a2, int *a3)
{
  long long v3 = a1;
  int v4 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v22 = *a2;
    *long long v3 = *a2;
    long long v3 = (void *)(v22 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    uint64_t v7 = a3[5];
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    *(void *)((char *)a1 + v7) = *(void *)((char *)a2 + v7);
    uint64_t v11 = *(int *)(type metadata accessor for ISO18013Response.IssuerSigned(0) + 20);
    uint64_t v12 = &v8[v11];
    uint64_t v13 = &v9[v11];
    uint64_t v14 = sub_1D7A9B328();
    uint64_t v39 = *(void *)(v14 - 8);
    uint64_t v15 = *(void (**)(char *, char *, uint64_t))(v39 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v15(v12, v13, v14);
    uint64_t v16 = a3[6];
    uint64_t v17 = (void *)((char *)v3 + v16);
    uint64_t v40 = a2;
    uint64_t v18 = (void *)((char *)a2 + v16);
    uint64_t v19 = type metadata accessor for ISO18013Response.DeviceSigned(0);
    uint64_t v20 = *(void *)(v19 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
    {
      uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA845750);
      memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
    }
    else
    {
      uint64_t v38 = v20;
      uint64_t v23 = v18[1];
      *uint64_t v17 = *v18;
      unint64_t v24 = v18[2];
      sub_1D7860790(v23, v24);
      v17[1] = v23;
      v17[2] = v24;
      v17[3] = v18[3];
      uint64_t v37 = v17;
      uint64_t v25 = *(int *)(v19 + 20);
      uint64_t v26 = (char *)v17 + v25;
      uint64_t v27 = (char *)v18 + v25;
      uint64_t v28 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48);
      swift_bridgeObjectRetain();
      if (v28(v27, 1, v14))
      {
        uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA842478);
        memcpy(v26, v27, *(void *)(*(void *)(v29 - 8) + 64));
      }
      else
      {
        v15(v26, v27, v14);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v39 + 56))(v26, 0, 1, v14);
      }
      uint64_t v30 = *(int *)(type metadata accessor for ISO18013Response.DeviceAuth(0) + 20);
      uint64_t v31 = &v26[v30];
      uint64_t v32 = &v27[v30];
      uint64_t v33 = sub_1D7A9B468();
      uint64_t v34 = *(void *)(v33 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v32, 1, v33))
      {
        uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA845860);
        memcpy(v31, v32, *(void *)(*(void *)(v35 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v31, v32, v33);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
      }
      (*(void (**)(void *, void, uint64_t, uint64_t))(v38 + 56))(v37, 0, 1, v19);
    }
    *(void *)((char *)v3 + a3[7]) = *(void *)((char *)v40 + a3[7]);
    swift_bridgeObjectRetain();
  }
  return v3;
}

uint64_t destroy for ISO18013Response.Document(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  swift_bridgeObjectRelease();
  uint64_t v5 = v4 + *(int *)(type metadata accessor for ISO18013Response.IssuerSigned(0) + 20);
  uint64_t v6 = sub_1D7A9B328();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  v8(v5, v6);
  uint64_t v9 = a1 + *(int *)(a2 + 24);
  uint64_t v10 = type metadata accessor for ISO18013Response.DeviceSigned(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v9, 1, v10))
  {
    sub_1D78607E8(*(void *)(v9 + 8), *(void *)(v9 + 16));
    swift_bridgeObjectRelease();
    uint64_t v11 = v9 + *(int *)(v10 + 20);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v11, 1, v6)) {
      v8(v11, v6);
    }
    uint64_t v12 = v11 + *(int *)(type metadata accessor for ISO18013Response.DeviceAuth(0) + 20);
    uint64_t v13 = sub_1D7A9B468();
    uint64_t v14 = *(void *)(v13 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13)) {
      (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v12, v13);
    }
  }
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for ISO18013Response.Document(void *a1, void *a2, uint64_t a3)
{
  uint64_t v3 = a3;
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  *(void *)((char *)a1 + v7) = *(void *)((char *)a2 + v7);
  uint64_t v10 = *(int *)(type metadata accessor for ISO18013Response.IssuerSigned(0) + 20);
  uint64_t v11 = &v8[v10];
  uint64_t v12 = &v9[v10];
  uint64_t v13 = sub_1D7A9B328();
  uint64_t v37 = *(void *)(v13 - 8);
  uint64_t v14 = *(void (**)(char *, char *, uint64_t))(v37 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v14(v11, v12, v13);
  uint64_t v15 = *(int *)(v3 + 24);
  uint64_t v16 = (void *)((char *)a1 + v15);
  uint64_t v38 = a2;
  uint64_t v17 = (void *)((char *)a2 + v15);
  uint64_t v18 = type metadata accessor for ISO18013Response.DeviceSigned(0);
  uint64_t v19 = *(void *)(v18 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
  {
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA845750);
    memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
  }
  else
  {
    uint64_t v35 = v19;
    uint64_t v36 = v3;
    uint64_t v21 = v17[1];
    *uint64_t v16 = *v17;
    unint64_t v22 = v17[2];
    sub_1D7860790(v21, v22);
    v16[1] = v21;
    v16[2] = v22;
    v16[3] = v17[3];
    uint64_t v23 = *(int *)(v18 + 20);
    unint64_t v24 = (char *)v16 + v23;
    uint64_t v25 = (char *)v17 + v23;
    uint64_t v26 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48);
    swift_bridgeObjectRetain();
    if (v26(v25, 1, v13))
    {
      uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA842478);
      memcpy(v24, v25, *(void *)(*(void *)(v27 - 8) + 64));
    }
    else
    {
      v14(v24, v25, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v37 + 56))(v24, 0, 1, v13);
    }
    uint64_t v28 = *(int *)(type metadata accessor for ISO18013Response.DeviceAuth(0) + 20);
    uint64_t v29 = &v24[v28];
    uint64_t v30 = &v25[v28];
    uint64_t v31 = sub_1D7A9B468();
    uint64_t v32 = *(void *)(v31 - 8);
    uint64_t v3 = v36;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31))
    {
      uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA845860);
      memcpy(v29, v30, *(void *)(*(void *)(v33 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v29, v30, v31);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v32 + 56))(v29, 0, 1, v31);
    }
    (*(void (**)(void *, void, uint64_t, uint64_t))(v35 + 56))(v16, 0, 1, v18);
  }
  *(void *)((char *)a1 + *(int *)(v3 + 28)) = *(void *)((char *)v38 + *(int *)(v3 + 28));
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for ISO18013Response.Document(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  *(void *)((char *)a1 + v6) = *(void *)((char *)a2 + v6);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v9 = *(int *)(type metadata accessor for ISO18013Response.IssuerSigned(0) + 20);
  uint64_t v10 = &v7[v9];
  uint64_t v11 = &v8[v9];
  uint64_t v12 = sub_1D7A9B328();
  uint64_t v57 = *(void *)(v12 - 8);
  uint64_t v13 = *(void (**)(char *, char *, uint64_t))(v57 + 24);
  v13(v10, v11, v12);
  uint64_t v58 = a3;
  uint64_t v59 = a2;
  uint64_t v14 = *(int *)(a3 + 24);
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  uint64_t v17 = type metadata accessor for ISO18013Response.DeviceSigned(0);
  uint64_t v56 = *(void *)(v17 - 8);
  uint64_t v18 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v56 + 48);
  LODWORD(a3) = v18(v15, 1, v17);
  int v19 = v18(v16, 1, v17);
  if (!a3)
  {
    if (v19)
    {
      sub_1D7981D1C((uint64_t)v15, type metadata accessor for ISO18013Response.DeviceSigned);
      goto LABEL_7;
    }
    *(void *)uint64_t v15 = *(void *)v16;
    uint64_t v31 = *((void *)v16 + 1);
    unint64_t v30 = *((void *)v16 + 2);
    sub_1D7860790(v31, v30);
    uint64_t v32 = *((void *)v15 + 1);
    unint64_t v33 = *((void *)v15 + 2);
    *((void *)v15 + 1) = v31;
    *((void *)v15 + 2) = v30;
    sub_1D78607E8(v32, v33);
    *((void *)v15 + 3) = *((void *)v16 + 3);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v34 = *(int *)(v17 + 20);
    uint64_t v35 = &v15[v34];
    uint64_t v36 = &v16[v34];
    uint64_t v37 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v57 + 48);
    int v38 = v37(v35, 1, v12);
    int v39 = v37(v36, 1, v12);
    if (v38)
    {
      if (!v39)
      {
        (*(void (**)(char *, char *, uint64_t))(v57 + 16))(v35, v36, v12);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v57 + 56))(v35, 0, 1, v12);
LABEL_21:
        uint64_t v48 = *(int *)(type metadata accessor for ISO18013Response.DeviceAuth(0) + 20);
        uint64_t v49 = &v35[v48];
        uint64_t v50 = &v36[v48];
        uint64_t v51 = sub_1D7A9B468();
        uint64_t v52 = *(void *)(v51 - 8);
        char v53 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v52 + 48);
        int v54 = v53(v49, 1, v51);
        int v55 = v53(v50, 1, v51);
        if (v54)
        {
          if (!v55)
          {
            (*(void (**)(char *, char *, uint64_t))(v52 + 16))(v49, v50, v51);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v52 + 56))(v49, 0, 1, v51);
            goto LABEL_17;
          }
        }
        else
        {
          if (!v55)
          {
            (*(void (**)(char *, char *, uint64_t))(v52 + 24))(v49, v50, v51);
            goto LABEL_17;
          }
          (*(void (**)(char *, uint64_t))(v52 + 8))(v49, v51);
        }
        size_t v27 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA845860) - 8) + 64);
        uint64_t v28 = v49;
        uint64_t v29 = v50;
        goto LABEL_8;
      }
    }
    else
    {
      if (!v39)
      {
        v13(v35, v36, v12);
        goto LABEL_21;
      }
      (*(void (**)(char *, uint64_t))(v57 + 8))(v35, v12);
    }
    uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA842478);
    memcpy(v35, v36, *(void *)(*(void *)(v47 - 8) + 64));
    goto LABEL_21;
  }
  if (v19)
  {
LABEL_7:
    size_t v27 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA845750) - 8) + 64);
    uint64_t v28 = v15;
    uint64_t v29 = v16;
LABEL_8:
    memcpy(v28, v29, v27);
    goto LABEL_17;
  }
  *(void *)uint64_t v15 = *(void *)v16;
  uint64_t v20 = *((void *)v16 + 1);
  unint64_t v21 = *((void *)v16 + 2);
  sub_1D7860790(v20, v21);
  *((void *)v15 + 1) = v20;
  *((void *)v15 + 2) = v21;
  *((void *)v15 + 3) = *((void *)v16 + 3);
  uint64_t v22 = *(int *)(v17 + 20);
  uint64_t v23 = &v15[v22];
  unint64_t v24 = &v16[v22];
  uint64_t v25 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v57 + 48);
  swift_bridgeObjectRetain();
  if (v25(v24, 1, v12))
  {
    uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA842478);
    memcpy(v23, v24, *(void *)(*(void *)(v26 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v57 + 16))(v23, v24, v12);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v57 + 56))(v23, 0, 1, v12);
  }
  uint64_t v40 = *(int *)(type metadata accessor for ISO18013Response.DeviceAuth(0) + 20);
  uint64_t v41 = &v23[v40];
  uint64_t v42 = &v24[v40];
  uint64_t v43 = sub_1D7A9B468();
  uint64_t v44 = *(void *)(v43 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v44 + 48))(v42, 1, v43))
  {
    uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA845860);
    memcpy(v41, v42, *(void *)(*(void *)(v45 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v44 + 16))(v41, v42, v43);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v44 + 56))(v41, 0, 1, v43);
  }
  (*(void (**)(char *, void, uint64_t, uint64_t))(v56 + 56))(v15, 0, 1, v17);
LABEL_17:
  *(void *)((char *)a1 + *(int *)(v58 + 28)) = *(void *)((char *)v59 + *(int *)(v58 + 28));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *initializeWithTake for ISO18013Response.Document(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  *(void *)((char *)a1 + v6) = *(void *)((char *)a2 + v6);
  uint64_t v9 = *(int *)(type metadata accessor for ISO18013Response.IssuerSigned(0) + 20);
  uint64_t v10 = &v7[v9];
  uint64_t v11 = &v8[v9];
  uint64_t v12 = sub_1D7A9B328();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
  v14(v10, v11, v12);
  uint64_t v34 = a3;
  uint64_t v15 = *(int *)(a3 + 24);
  uint64_t v16 = (_OWORD *)((char *)a1 + v15);
  uint64_t v17 = (_OWORD *)((char *)a2 + v15);
  uint64_t v18 = type metadata accessor for ISO18013Response.DeviceSigned(0);
  uint64_t v19 = *(void *)(v18 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
  {
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA845750);
    memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
  }
  else
  {
    long long v21 = v17[1];
    *uint64_t v16 = *v17;
    v16[1] = v21;
    uint64_t v22 = *(int *)(v18 + 20);
    __dst = (char *)v16 + v22;
    uint64_t v23 = (char *)v17 + v22;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v23, 1, v12))
    {
      uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA842478);
      uint64_t v25 = __dst;
      memcpy(__dst, v23, *(void *)(*(void *)(v24 - 8) + 64));
    }
    else
    {
      v14(__dst, v23, v12);
      uint64_t v25 = __dst;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(__dst, 0, 1, v12);
    }
    uint64_t v26 = *(int *)(type metadata accessor for ISO18013Response.DeviceAuth(0) + 20);
    size_t v27 = &v25[v26];
    uint64_t v28 = &v23[v26];
    uint64_t v29 = sub_1D7A9B468();
    uint64_t v30 = *(void *)(v29 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29))
    {
      uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA845860);
      memcpy(v27, v28, *(void *)(*(void *)(v31 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v27, v28, v29);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
    }
    (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
  }
  *(void *)((char *)a1 + *(int *)(v34 + 28)) = *(void *)((char *)a2 + *(int *)(v34 + 28));
  return a1;
}

void *assignWithTake for ISO18013Response.Document(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  *(void *)((char *)a1 + v7) = *(void *)((char *)a2 + v7);
  swift_bridgeObjectRelease();
  uint64_t v10 = *(int *)(type metadata accessor for ISO18013Response.IssuerSigned(0) + 20);
  uint64_t v11 = &v8[v10];
  uint64_t v12 = &v9[v10];
  uint64_t v13 = sub_1D7A9B328();
  uint64_t v55 = *(void *)(v13 - 8);
  uint64_t v14 = *(void (**)(char *, char *, uint64_t))(v55 + 40);
  v14(v11, v12, v13);
  uint64_t v56 = a3;
  uint64_t v57 = a2;
  uint64_t v15 = *(int *)(a3 + 24);
  uint64_t v16 = (uint64_t)a1 + v15;
  uint64_t v17 = (_OWORD *)((char *)a2 + v15);
  uint64_t v18 = type metadata accessor for ISO18013Response.DeviceSigned(0);
  uint64_t v54 = *(void *)(v18 - 8);
  uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v54 + 48);
  LODWORD(a3) = v19(v16, 1, v18);
  int v20 = v19((uint64_t)v17, 1, v18);
  if (!a3)
  {
    if (v20)
    {
      sub_1D7981D1C(v16, type metadata accessor for ISO18013Response.DeviceSigned);
      goto LABEL_7;
    }
    uint64_t v29 = *((void *)v17 + 2);
    uint64_t v30 = *(void *)(v16 + 8);
    unint64_t v31 = *(void *)(v16 + 16);
    *(_OWORD *)uint64_t v16 = *v17;
    *(void *)(v16 + 16) = v29;
    sub_1D78607E8(v30, v31);
    *(void *)(v16 + 24) = *((void *)v17 + 3);
    swift_bridgeObjectRelease();
    uint64_t v32 = *(int *)(v18 + 20);
    unint64_t v33 = (char *)(v16 + v32);
    uint64_t v34 = (char *)v17 + v32;
    uint64_t v35 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v55 + 48);
    int v36 = v35(v33, 1, v13);
    int v37 = v35(v34, 1, v13);
    if (v36)
    {
      if (!v37)
      {
        (*(void (**)(char *, char *, uint64_t))(v55 + 32))(v33, v34, v13);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v55 + 56))(v33, 0, 1, v13);
LABEL_21:
        uint64_t v46 = *(int *)(type metadata accessor for ISO18013Response.DeviceAuth(0) + 20);
        uint64_t v47 = &v33[v46];
        uint64_t v48 = &v34[v46];
        uint64_t v49 = sub_1D7A9B468();
        uint64_t v50 = *(void *)(v49 - 8);
        uint64_t v51 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v50 + 48);
        int v52 = v51(v47, 1, v49);
        int v53 = v51(v48, 1, v49);
        if (v52)
        {
          if (!v53)
          {
            (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v47, v48, v49);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v47, 0, 1, v49);
            goto LABEL_17;
          }
        }
        else
        {
          if (!v53)
          {
            (*(void (**)(char *, char *, uint64_t))(v50 + 40))(v47, v48, v49);
            goto LABEL_17;
          }
          (*(void (**)(char *, uint64_t))(v50 + 8))(v47, v49);
        }
        size_t v26 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA845860) - 8) + 64);
        size_t v27 = v47;
        uint64_t v28 = v48;
        goto LABEL_8;
      }
    }
    else
    {
      if (!v37)
      {
        v14(v33, v34, v13);
        goto LABEL_21;
      }
      (*(void (**)(char *, uint64_t))(v55 + 8))(v33, v13);
    }
    uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA842478);
    memcpy(v33, v34, *(void *)(*(void *)(v45 - 8) + 64));
    goto LABEL_21;
  }
  if (v20)
  {
LABEL_7:
    size_t v26 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA845750) - 8) + 64);
    size_t v27 = (void *)v16;
    uint64_t v28 = (char *)v17;
LABEL_8:
    memcpy(v27, v28, v26);
    goto LABEL_17;
  }
  long long v21 = v17[1];
  *(_OWORD *)uint64_t v16 = *v17;
  *(_OWORD *)(v16 + 16) = v21;
  uint64_t v22 = *(int *)(v18 + 20);
  uint64_t v23 = (char *)(v16 + v22);
  uint64_t v24 = (char *)v17 + v22;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v55 + 48))(v24, 1, v13))
  {
    uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA842478);
    memcpy(v23, v24, *(void *)(*(void *)(v25 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v55 + 32))(v23, v24, v13);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v55 + 56))(v23, 0, 1, v13);
  }
  uint64_t v38 = *(int *)(type metadata accessor for ISO18013Response.DeviceAuth(0) + 20);
  int v39 = &v23[v38];
  uint64_t v40 = &v24[v38];
  uint64_t v41 = sub_1D7A9B468();
  uint64_t v42 = *(void *)(v41 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48))(v40, 1, v41))
  {
    uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA845860);
    memcpy(v39, v40, *(void *)(*(void *)(v43 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v42 + 32))(v39, v40, v41);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v42 + 56))(v39, 0, 1, v41);
  }
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v54 + 56))(v16, 0, 1, v18);
LABEL_17:
  *(void *)((char *)a1 + *(int *)(v56 + 28)) = *(void *)((char *)v57 + *(int *)(v56 + 28));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ISO18013Response.Document(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1D7986238);
}

uint64_t sub_1D7986238(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for ISO18013Response.IssuerSigned(0);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 20);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA845750);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 24);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t storeEnumTagSinglePayload for ISO18013Response.Document(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1D798637C);
}

uint64_t sub_1D798637C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for ISO18013Response.IssuerSigned(0);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 20);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA845750);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 24);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

void sub_1D79864AC()
{
  type metadata accessor for ISO18013Response.IssuerSigned(319);
  if (v0 <= 0x3F)
  {
    sub_1D7988910(319, &qword_1EA8458B0, (void (*)(uint64_t))type metadata accessor for ISO18013Response.DeviceSigned);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void *assignWithCopy for ISO18013Response.IssuerSigned(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1D7A9B328();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

void *assignWithTake for ISO18013Response.IssuerSigned(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1D7A9B328();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for ISO18013Response.IssuerSigned(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1D79866D8);
}

uint64_t sub_1D79866D8(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = sub_1D7A9B328();
    uint64_t v10 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
    uint64_t v11 = v9;
    uint64_t v12 = (char *)a1 + *(int *)(a3 + 20);
    return v10(v12, a2, v11);
  }
}

uint64_t storeEnumTagSinglePayload for ISO18013Response.IssuerSigned(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1D79867A8);
}

void *sub_1D79867A8(void *result, uint64_t a2, int a3, uint64_t a4)
{
  int v5 = result;
  if (a3 == 2147483646)
  {
    *__n128 result = a2;
  }
  else
  {
    uint64_t v7 = sub_1D7A9B328();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1D7986850(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1D79877E0(a1, a2, a3, (uint64_t)&unk_1D7AB2D50, MEMORY[0x1E4F50D80]);
}

uint64_t *initializeBufferWithCopyOfBuffer for ISO18013Response.DeviceSigned(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    unint64_t v8 = a2[2];
    sub_1D7860790(v7, v8);
    v4[1] = v7;
    v4[2] = v8;
    v4[3] = a2[3];
    uint64_t v9 = *(int *)(a3 + 20);
    uint64_t v10 = (char *)v4 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = sub_1D7A9B328();
    uint64_t v13 = *(void *)(v12 - 8);
    uint64_t v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
    swift_bridgeObjectRetain();
    if (v14(v11, 1, v12))
    {
      uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA842478);
      memcpy(v10, v11, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
    }
    uint64_t v17 = *(int *)(type metadata accessor for ISO18013Response.DeviceAuth(0) + 20);
    uint64_t v18 = &v10[v17];
    uint64_t v19 = &v11[v17];
    uint64_t v20 = sub_1D7A9B468();
    uint64_t v21 = *(void *)(v20 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
    {
      uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA845860);
      memcpy(v18, v19, *(void *)(*(void *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v18, v19, v20);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
    }
  }
  return v4;
}

uint64_t destroy for ISO18013Response.DeviceSigned(uint64_t a1, uint64_t a2)
{
  sub_1D78607E8(*(void *)(a1 + 8), *(void *)(a1 + 16));
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_1D7A9B328();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  uint64_t v7 = v4 + *(int *)(type metadata accessor for ISO18013Response.DeviceAuth(0) + 20);
  uint64_t v8 = sub_1D7A9B468();
  uint64_t v11 = *(void *)(v8 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v7, 1, v8);
  if (!result)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t))(v11 + 8);
    return v10(v7, v8);
  }
  return result;
}

void *initializeWithCopy for ISO18013Response.DeviceSigned(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  unint64_t v7 = a2[2];
  sub_1D7860790(v6, v7);
  a1[1] = v6;
  a1[2] = v7;
  a1[3] = a2[3];
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = sub_1D7A9B328();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  swift_bridgeObjectRetain();
  if (v13(v10, 1, v11))
  {
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA842478);
    memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  uint64_t v15 = *(int *)(type metadata accessor for ISO18013Response.DeviceAuth(0) + 20);
  uint64_t v16 = &v9[v15];
  uint64_t v17 = &v10[v15];
  uint64_t v18 = sub_1D7A9B468();
  uint64_t v19 = *(void *)(v18 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
  {
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA845860);
    memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v16, v17, v18);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
  }
  return a1;
}

void *assignWithCopy for ISO18013Response.DeviceSigned(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = a2[1];
  unint64_t v7 = a2[2];
  sub_1D7860790(v6, v7);
  uint64_t v8 = a1[1];
  unint64_t v9 = a1[2];
  a1[1] = v6;
  a1[2] = v7;
  sub_1D78607E8(v8, v9);
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = *(int *)(a3 + 20);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_1D7A9B328();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  LODWORD(v7) = v15(v11, 1, v13);
  int v16 = v15(v12, 1, v13);
  if (v7)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v16)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v11, v13);
LABEL_6:
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA842478);
    memcpy(v11, v12, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 24))(v11, v12, v13);
LABEL_7:
  uint64_t v18 = *(int *)(type metadata accessor for ISO18013Response.DeviceAuth(0) + 20);
  uint64_t v19 = &v11[v18];
  uint64_t v20 = &v12[v18];
  uint64_t v21 = sub_1D7A9B468();
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v23 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v22 + 48);
  int v24 = v23(v19, 1, v21);
  int v25 = v23(v20, 1, v21);
  if (!v24)
  {
    if (!v25)
    {
      (*(void (**)(char *, char *, uint64_t))(v22 + 24))(v19, v20, v21);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v22 + 8))(v19, v21);
    goto LABEL_12;
  }
  if (v25)
  {
LABEL_12:
    uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA845860);
    memcpy(v19, v20, *(void *)(*(void *)(v26 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v19, v20, v21);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
  return a1;
}

_OWORD *initializeWithTake for ISO18013Response.DeviceSigned(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = (char *)a1 + v5;
  unint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_1D7A9B328();
  uint64_t v9 = *(void *)(v8 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
  {
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA842478);
    memcpy(v6, v7, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v6, v7, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  }
  uint64_t v11 = *(int *)(type metadata accessor for ISO18013Response.DeviceAuth(0) + 20);
  uint64_t v12 = &v6[v11];
  uint64_t v13 = &v7[v11];
  uint64_t v14 = sub_1D7A9B468();
  uint64_t v15 = *(void *)(v14 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA845860);
    memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v12, v13, v14);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  return a1;
}

uint64_t assignWithTake for ISO18013Response.DeviceSigned(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)(a1 + 8);
  unint64_t v8 = *(void *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v6;
  sub_1D78607E8(v7, v8);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = (char *)(a1 + v9);
  uint64_t v11 = (char *)(a2 + v9);
  uint64_t v12 = sub_1D7A9B328();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v10, 1, v12);
  int v16 = v14(v11, 1, v12);
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v16)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
LABEL_6:
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA842478);
    memcpy(v10, v11, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 40))(v10, v11, v12);
LABEL_7:
  uint64_t v18 = *(int *)(type metadata accessor for ISO18013Response.DeviceAuth(0) + 20);
  uint64_t v19 = &v10[v18];
  uint64_t v20 = &v11[v18];
  uint64_t v21 = sub_1D7A9B468();
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v23 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v22 + 48);
  int v24 = v23(v19, 1, v21);
  int v25 = v23(v20, 1, v21);
  if (!v24)
  {
    if (!v25)
    {
      (*(void (**)(char *, char *, uint64_t))(v22 + 40))(v19, v20, v21);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v22 + 8))(v19, v21);
    goto LABEL_12;
  }
  if (v25)
  {
LABEL_12:
    uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA845860);
    memcpy(v19, v20, *(void *)(*(void *)(v26 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v19, v20, v21);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
  return a1;
}

uint64_t getEnumTagSinglePayload for ISO18013Response.DeviceSigned(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1D7987654);
}

uint64_t sub_1D7987654(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for ISO18013Response.DeviceAuth(0);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for ISO18013Response.DeviceSigned(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1D7987718);
}

uint64_t sub_1D7987718(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 24) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for ISO18013Response.DeviceAuth(0);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1D79877C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1D79877E0(a1, a2, a3, (uint64_t)" ", type metadata accessor for ISO18013Response.DeviceAuth);
}

uint64_t sub_1D79877E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t))
{
  uint64_t result = a5(319);
  if (v6 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for ISO18013Response.DeviceAuth(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1D7A9B328();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA842478);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    uint64_t v11 = *(int *)(a3 + 20);
    uint64_t v12 = (char *)a1 + v11;
    uint64_t v13 = (char *)a2 + v11;
    uint64_t v14 = sub_1D7A9B468();
    uint64_t v15 = *(void *)(v14 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
    {
      uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA845860);
      memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v12, v13, v14);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
    }
  }
  return a1;
}

uint64_t destroy for ISO18013Response.DeviceAuth(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D7A9B328();
  uint64_t v5 = *(void *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  }
  uint64_t v6 = a1 + *(int *)(a2 + 20);
  uint64_t v7 = sub_1D7A9B468();
  uint64_t v10 = *(void *)(v7 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v6, 1, v7);
  if (!result)
  {
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8);
    return v9(v6, v7);
  }
  return result;
}

char *initializeWithCopy for ISO18013Response.DeviceAuth(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_1D7A9B328();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA842478);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  uint64_t v12 = sub_1D7A9B468();
  uint64_t v13 = *(void *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
  {
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA845860);
    memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  return a1;
}

char *assignWithCopy for ISO18013Response.DeviceAuth(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_1D7A9B328();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA842478);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
LABEL_7:
  uint64_t v12 = *(int *)(a3 + 20);
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = sub_1D7A9B468();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
  int v18 = v17(v13, 1, v15);
  int v19 = v17(v14, 1, v15);
  if (!v18)
  {
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 24))(v13, v14, v15);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v16 + 8))(v13, v15);
    goto LABEL_12;
  }
  if (v19)
  {
LABEL_12:
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA845860);
    memcpy(v13, v14, *(void *)(*(void *)(v20 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  return a1;
}

char *initializeWithTake for ISO18013Response.DeviceAuth(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_1D7A9B328();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA842478);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = *(int *)(a3 + 20);
  int v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  uint64_t v12 = sub_1D7A9B468();
  uint64_t v13 = *(void *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
  {
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA845860);
    memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  return a1;
}

char *assignWithTake for ISO18013Response.DeviceAuth(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_1D7A9B328();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA842478);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
LABEL_7:
  uint64_t v12 = *(int *)(a3 + 20);
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = sub_1D7A9B468();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
  int v18 = v17(v13, 1, v15);
  int v19 = v17(v14, 1, v15);
  if (!v18)
  {
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 40))(v13, v14, v15);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v16 + 8))(v13, v15);
    goto LABEL_12;
  }
  if (v19)
  {
LABEL_12:
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA845860);
    memcpy(v13, v14, *(void *)(*(void *)(v20 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v13, v14, v15);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  return a1;
}

uint64_t getEnumTagSinglePayload for ISO18013Response.DeviceAuth(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1D79885F0);
}

uint64_t sub_1D79885F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA842478);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA845860);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t storeEnumTagSinglePayload for ISO18013Response.DeviceAuth(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1D7988704);
}

uint64_t sub_1D7988704(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA842478);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA845860);
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

void sub_1D7988810()
{
  sub_1D7988910(319, (unint64_t *)&qword_1EA8458E8, MEMORY[0x1E4F50D80]);
  if (v0 <= 0x3F)
  {
    sub_1D7988910(319, &qword_1EA8458F0, MEMORY[0x1E4F50DF0]);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_1D7988910(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1D7A9C9A8();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

ValueMetadata *type metadata accessor for ISO18013Response.DeviceAuth.CodingKeys()
{
  return &type metadata for ISO18013Response.DeviceAuth.CodingKeys;
}

ValueMetadata *type metadata accessor for ISO18013Response.DeviceSigned.CodingKeys()
{
  return &type metadata for ISO18013Response.DeviceSigned.CodingKeys;
}

ValueMetadata *type metadata accessor for ISO18013Response.IssuerSigned.CodingKeys()
{
  return &type metadata for ISO18013Response.IssuerSigned.CodingKeys;
}

ValueMetadata *type metadata accessor for ISO18013Response.IssuerSigned.ACWGCodingKeys()
{
  return &type metadata for ISO18013Response.IssuerSigned.ACWGCodingKeys;
}

ValueMetadata *type metadata accessor for ISO18013Response.Document.CodingKeys()
{
  return &type metadata for ISO18013Response.Document.CodingKeys;
}

unsigned char *_s13CoreIDVShared16ISO18013ResponseV10DeviceAuthV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D7988A84);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ISO18013Response.Document.ACWGCodingKeys()
{
  return &type metadata for ISO18013Response.Document.ACWGCodingKeys;
}

unsigned char *_s13CoreIDVShared16ISO18013ResponseV6StatusOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D7988B88);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ISO18013Response.CodingKeys()
{
  return &type metadata for ISO18013Response.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for ISO18013Response.ACWGCodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D7988C8CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ISO18013Response.ACWGCodingKeys()
{
  return &type metadata for ISO18013Response.ACWGCodingKeys;
}

unint64_t sub_1D7988CC8()
{
  unint64_t result = qword_1EA8458F8;
  if (!qword_1EA8458F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA8458F8);
  }
  return result;
}

unint64_t sub_1D7988D20()
{
  unint64_t result = qword_1EA845900;
  if (!qword_1EA845900)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA845900);
  }
  return result;
}

unint64_t sub_1D7988D78()
{
  unint64_t result = qword_1EA845908;
  if (!qword_1EA845908)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA845908);
  }
  return result;
}

unint64_t sub_1D7988DD0()
{
  unint64_t result = qword_1EA845910;
  if (!qword_1EA845910)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA845910);
  }
  return result;
}

unint64_t sub_1D7988E28()
{
  unint64_t result = qword_1EA845918;
  if (!qword_1EA845918)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA845918);
  }
  return result;
}

unint64_t sub_1D7988E80()
{
  unint64_t result = qword_1EA845920;
  if (!qword_1EA845920)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA845920);
  }
  return result;
}

unint64_t sub_1D7988ED8()
{
  unint64_t result = qword_1EA845928;
  if (!qword_1EA845928)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA845928);
  }
  return result;
}

unint64_t sub_1D7988F30()
{
  unint64_t result = qword_1EA845930;
  if (!qword_1EA845930)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA845930);
  }
  return result;
}

unint64_t sub_1D7988F88()
{
  unint64_t result = qword_1EA845938;
  if (!qword_1EA845938)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA845938);
  }
  return result;
}

unint64_t sub_1D7988FE0()
{
  unint64_t result = qword_1EA845940;
  if (!qword_1EA845940)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA845940);
  }
  return result;
}

unint64_t sub_1D7989038()
{
  unint64_t result = qword_1EA845948;
  if (!qword_1EA845948)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA845948);
  }
  return result;
}

unint64_t sub_1D7989090()
{
  unint64_t result = qword_1EA845950;
  if (!qword_1EA845950)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA845950);
  }
  return result;
}

unint64_t sub_1D79890E8()
{
  unint64_t result = qword_1EA845958;
  if (!qword_1EA845958)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA845958);
  }
  return result;
}

unint64_t sub_1D7989140()
{
  unint64_t result = qword_1EA845960;
  if (!qword_1EA845960)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA845960);
  }
  return result;
}

unint64_t sub_1D7989198()
{
  unint64_t result = qword_1EA845968;
  if (!qword_1EA845968)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA845968);
  }
  return result;
}

unint64_t sub_1D79891F0()
{
  unint64_t result = qword_1EA845970;
  if (!qword_1EA845970)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA845970);
  }
  return result;
}

unint64_t sub_1D7989248()
{
  unint64_t result = qword_1EA845978;
  if (!qword_1EA845978)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA845978);
  }
  return result;
}

unint64_t sub_1D79892A0()
{
  unint64_t result = qword_1EA845980;
  if (!qword_1EA845980)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA845980);
  }
  return result;
}

unint64_t sub_1D79892F8()
{
  unint64_t result = qword_1EA845988;
  if (!qword_1EA845988)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA845988);
  }
  return result;
}

unint64_t sub_1D7989350()
{
  unint64_t result = qword_1EA845990;
  if (!qword_1EA845990)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA845990);
  }
  return result;
}

unint64_t sub_1D79893A8()
{
  unint64_t result = qword_1EA845998;
  if (!qword_1EA845998)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA845998);
  }
  return result;
}

unint64_t sub_1D7989400()
{
  unint64_t result = qword_1EA8459A0;
  if (!qword_1EA8459A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA8459A0);
  }
  return result;
}

unint64_t sub_1D7989458()
{
  unint64_t result = qword_1EA8459A8;
  if (!qword_1EA8459A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA8459A8);
  }
  return result;
}

unint64_t sub_1D79894B0()
{
  unint64_t result = qword_1EA8459B0;
  if (!qword_1EA8459B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA8459B0);
  }
  return result;
}

uint64_t sub_1D7989504()
{
  unint64_t v0 = sub_1D7A9D058();
  swift_bridgeObjectRelease();
  if (v0 >= 3) {
    return 3;
  }
  else {
    return v0;
  }
}

uint64_t sub_1D7989550()
{
  unint64_t v0 = sub_1D7A9D058();
  swift_bridgeObjectRelease();
  if (v0 >= 4) {
    return 4;
  }
  else {
    return v0;
  }
}

uint64_t sub_1D7989598(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6953656369766564 && a2 == 0xEF65727574616E67;
  if (v2 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x614D656369766564 && a2 == 0xE900000000000063)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1D7A9D358();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

unint64_t sub_1D79896BC()
{
  unint64_t result = qword_1EA8459B8;
  if (!qword_1EA8459B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA8459B8);
  }
  return result;
}

unint64_t MobileAssetType.rawValue.getter()
{
  if (*v0) {
    return 0xD000000000000024;
  }
  else {
    return 0xD000000000000023;
  }
}

CoreIDVShared::MobileAssetType_optional __swiftcall MobileAssetType.init(rawValue:)(Swift::String rawValue)
{
  BOOL v2 = v1;
  uint64_t v3 = sub_1D7A9D058();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1) {
    char v5 = 1;
  }
  else {
    char v5 = 2;
  }
  if (!v3) {
    char v5 = 0;
  }
  *BOOL v2 = v5;
  return result;
}

uint64_t sub_1D79897B0(char *a1, char *a2)
{
  return sub_1D79975A8(*a1, *a2);
}

unint64_t sub_1D79897C0()
{
  unint64_t result = qword_1EA8459C0;
  if (!qword_1EA8459C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA8459C0);
  }
  return result;
}

uint64_t sub_1D7989814()
{
  return sub_1D7A1E9F4();
}

uint64_t sub_1D798981C()
{
  sub_1D7A9C0B8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D798988C()
{
  return sub_1D7A1F3C4();
}

CoreIDVShared::MobileAssetType_optional sub_1D7989894(Swift::String *a1)
{
  return MobileAssetType.init(rawValue:)(*a1);
}

void sub_1D79898A0(unint64_t *a1@<X8>)
{
  unint64_t v2 = 0xD000000000000023;
  if (*v1) {
    unint64_t v2 = 0xD000000000000024;
  }
  unint64_t v3 = 0x80000001D7ABC650;
  if (!*v1) {
    unint64_t v3 = 0x80000001D7ABC620;
  }
  *a1 = v2;
  a1[1] = v3;
}

unsigned char *storeEnumTagSinglePayload for MobileAssetType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D79899ACLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MobileAssetType()
{
  return &type metadata for MobileAssetType;
}

uint64_t sub_1D79899E4(uint64_t a1)
{
  unint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  v1(v2);
  return swift_release();
}

uint64_t DIPRetrier.init(maxRetries:backoffStrategy:asyncTimeout:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X8>)
{
  int v41 = a4;
  uint64_t v40 = a3;
  uint64_t v8 = sub_1D7A9C7C8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8, v10, v11, v12, v13, v14, v15, v16);
  int v18 = (char *)&v40 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_1D7A9B708();
  MEMORY[0x1F4188790](v19 - 8, v20, v21, v22, v23, v24, v25, v26);
  uint64_t v27 = sub_1D7A9C7B8();
  MEMORY[0x1F4188790](v27 - 8, v28, v29, v30, v31, v32, v33, v34);
  uint64_t v35 = *a2;
  char v36 = *((unsigned char *)a2 + 8);
  sub_1D7865074();
  sub_1D7A9C7A8();
  sub_1D7A9B6E8();
  (*(void (**)(char *, void, uint64_t))(v9 + 104))(v18, *MEMORY[0x1E4FBCC58], v8);
  uint64_t result = sub_1D7A9C808();
  uint64_t v38 = a1 + 1;
  if (__OFADD__(a1, 1))
  {
    __break(1u);
  }
  else
  {
    if (v38 <= 1) {
      uint64_t v38 = 1;
    }
    *(void *)a5 = v38;
    *(void *)(a5 + 8) = v35;
    *(unsigned char *)(a5 + 16) = v36;
    uint64_t v39 = v40;
    *(void *)(a5 + 24) = result;
    *(void *)(a5 + 32) = v39;
    *(unsigned char *)(a5 + 40) = v41 & 1;
  }
  return result;
}

uint64_t sub_1D7989C28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[15] = a2;
  v3[16] = a3;
  v3[14] = a1;
  uint64_t v4 = sub_1D7A9CE28();
  v3[17] = v4;
  v3[18] = *(void *)(v4 - 8);
  v3[19] = swift_task_alloc();
  v3[20] = swift_task_alloc();
  uint64_t v5 = sub_1D7A9CE48();
  v3[21] = v5;
  v3[22] = *(void *)(v5 - 8);
  v3[23] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1D7989D58, 0, 0);
}

uint64_t sub_1D7989D58()
{
  sub_1D7A9C538();
  unint64_t v1 = (uint64_t *)v0[14];
  uint64_t v2 = *v1;
  sub_1D798F07C(v1 + 1, (uint64_t)(v0 + 12));
  if (v2 <= 1) {
    uint64_t v3 = 1;
  }
  else {
    uint64_t v3 = v2;
  }
  v0[24] = v3;
  v0[25] = 0;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[26] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1D7989E88;
  uint64_t v5 = v0[15];
  uint64_t v6 = v0[16];
  return sub_1D78F32FC((uint64_t)(v0 + 2), v5, v6);
}

uint64_t sub_1D7989E88()
{
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1D7989F84, 0, 0);
}

uint64_t sub_1D7989F84()
{
  uint64_t v1 = *(void *)(v0 + 16);
  *(void *)(v0 + 216) = v1;
  if (*(unsigned char *)(v0 + 33))
  {
    if (*(unsigned char *)(v0 + 33) == 1 || *(void *)(v0 + 200) == *(void *)(v0 + 192) - 1)
    {
      swift_willThrow();
      swift_bridgeObjectRelease();
      swift_release();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
      return v2();
    }
    uint64_t v6 = (double *)(v0 + 80);
    double v7 = *(double *)(v0 + 24);
    char v8 = *(unsigned char *)(v0 + 32);
    sub_1D798F07C((uint64_t *)(v0 + 96), v0 + 80);
    if (*(unsigned char *)(v0 + 88))
    {
      double v9 = -1.0;
      if (*(unsigned char *)(v0 + 88) == 1)
      {
        unint64_t v10 = *(void *)(v0 + 200);
        double v11 = *(double *)(v0 + 80);
        if (v11 < 0.0) {
          double v11 = 0.0;
        }
        if (v10 >= 0x40) {
          uint64_t v12 = 0;
        }
        else {
          uint64_t v12 = 1 << v10;
        }
        double v9 = v11 * (double)v12;
      }
      if (v8) {
        goto LABEL_19;
      }
    }
    else
    {
      double v9 = *v6;
      if (*v6 < 0.0) {
        double v9 = 0.0;
      }
      if (v8)
      {
LABEL_19:
        BOOL v13 = v9 > 0.0 && v9 > -1.0;
        if (v13 && v9 > 0.0) {
          goto LABEL_25;
        }
        goto LABEL_35;
      }
    }
    if (v9 <= v7)
    {
      if (v7 <= 0.0)
      {
LABEL_35:

        ++*(void *)(v0 + 200);
        uint64_t v25 = (void *)swift_task_alloc();
        *(void *)(v0 + 208) = v25;
        *uint64_t v25 = v0;
        v25[1] = sub_1D7989E88;
        uint64_t v26 = *(void *)(v0 + 120);
        uint64_t v27 = *(void *)(v0 + 128);
        return sub_1D78F32FC(v0 + 16, v26, v27);
      }
    }
    else if (v9 <= 0.0)
    {
      goto LABEL_35;
    }
LABEL_25:
    uint64_t v15 = *(void *)(v0 + 144);
    uint64_t v14 = *(void *)(v0 + 152);
    uint64_t v16 = *(void *)(v0 + 136);
    uint64_t v17 = sub_1D7A9D6F8();
    uint64_t v19 = v18;
    sub_1D7A9CE38();
    *(void *)(v0 + 64) = v17;
    *(void *)(v0 + 72) = v19;
    *(void *)(v0 + 48) = 0;
    *(void *)(v0 + 40) = 0;
    *(unsigned char *)(v0 + 56) = 1;
    uint64_t v20 = sub_1D78EA2E8(&qword_1EBDF9998, MEMORY[0x1E4FBD1A8]);
    sub_1D7A9D508();
    sub_1D78EA2E8(&qword_1EBDF9BC0, MEMORY[0x1E4FBD178]);
    sub_1D7A9CE58();
    uint64_t v21 = *(void (**)(uint64_t, uint64_t))(v15 + 8);
    *(void *)(v0 + 224) = v21;
    *(void *)(v0 + 232) = (v15 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v21(v14, v16);
    uint64_t v22 = (void *)swift_task_alloc();
    *(void *)(v0 + 240) = v22;
    *uint64_t v22 = v0;
    v22[1] = sub_1D798A3B8;
    uint64_t v24 = *(void *)(v0 + 160);
    uint64_t v23 = *(void *)(v0 + 168);
    return MEMORY[0x1F4188178](v24, v0 + 40, v23, v20);
  }
  uint64_t v4 = *(void *)(v0 + 24);
  swift_bridgeObjectRelease();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  return v5(v1, v4);
}

uint64_t sub_1D798A3B8()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 248) = v0;
  swift_task_dealloc();
  if (v0)
  {
    (*(void (**)(void, void))(v2 + 224))(*(void *)(v2 + 160), *(void *)(v2 + 136));
    uint64_t v3 = sub_1D798A5C0;
  }
  else
  {
    uint64_t v5 = *(void *)(v2 + 176);
    uint64_t v4 = *(void *)(v2 + 184);
    uint64_t v6 = *(void *)(v2 + 168);
    (*(void (**)(void, void))(v2 + 224))(*(void *)(v2 + 160), *(void *)(v2 + 136));
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
    uint64_t v3 = sub_1D798A510;
  }
  return MEMORY[0x1F4188298](v3, 0, 0);
}

uint64_t sub_1D798A510()
{
  ++*(void *)(v0 + 200);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 208) = v1;
  void *v1 = v0;
  v1[1] = sub_1D7989E88;
  uint64_t v2 = *(void *)(v0 + 120);
  uint64_t v3 = *(void *)(v0 + 128);
  return sub_1D78F32FC(v0 + 16, v2, v3);
}

uint64_t sub_1D798A5C0()
{
  uint64_t v1 = (void *)v0[27];
  (*(void (**)(void, void))(v0[22] + 8))(v0[23], v0[21]);

  swift_bridgeObjectRelease();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t DIPRetrier.retry<A>(operation:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v5 + 72) = a3;
  *(void *)(v5 + 80) = a4;
  *(void *)(v5 + 56) = a1;
  *(void *)(v5 + 64) = a2;
  uint64_t v6 = sub_1D7A9CE28();
  *(void *)(v5 + 88) = v6;
  *(void *)(v5 + 96) = *(void *)(v6 - 8);
  *(void *)(v5 + 104) = swift_task_alloc();
  *(void *)(v5 + 112) = swift_task_alloc();
  uint64_t v7 = sub_1D7A9CE48();
  *(void *)(v5 + 120) = v7;
  *(void *)(v5 + 128) = *(void *)(v7 - 8);
  *(void *)(v5 + 136) = swift_task_alloc();
  *(void *)(v5 + 144) = type metadata accessor for DIPRetrier.RetryResult();
  uint64_t v8 = swift_task_alloc();
  uint64_t v9 = *v4;
  *(void *)(v5 + 152) = v8;
  *(void *)(v5 + 160) = v9;
  *(void *)(v5 + 168) = v4[1];
  *(unsigned char *)(v5 + 33) = *((unsigned char *)v4 + 16);
  return MEMORY[0x1F4188298](sub_1D798A7FC, 0, 0);
}

uint64_t sub_1D798A7FC()
{
  sub_1D7A9C538();
  uint64_t v1 = v0[20];
  uint64_t v2 = (int *)v0[8];
  if (v1 <= 1) {
    uint64_t v1 = 1;
  }
  v0[22] = v1;
  v0[23] = 0;
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)v2 + *v2);
  uint64_t v3 = (void *)swift_task_alloc();
  v0[24] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_1D798A960;
  uint64_t v4 = v0[19];
  return v6(v4);
}

uint64_t sub_1D798A960()
{
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1D798AA5C, 0, 0);
}

uint64_t sub_1D798AA5C()
{
  uint64_t v1 = *(void *)(v0 + 152);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    (*(void (**)(void, uint64_t))(*(void *)(*(void *)(v0 + 80) - 8) + 32))(*(void *)(v0 + 56), v1);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
LABEL_7:
    return v3();
  }
  if (EnumCaseMultiPayload == 1
    || (unint64_t v4 = *(void *)(v0 + 184),
        uint64_t v5 = *(void *)(v0 + 176) - 1,
        uint64_t v6 = *(void **)v1,
        *(void *)(v0 + 200) = *(void *)v1,
        v4 == v5))
  {
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
    goto LABEL_7;
  }
  double v8 = *(double *)(v1 + 8);
  if (*(unsigned char *)(v0 + 33))
  {
    if (*(unsigned char *)(v0 + 33) != 1)
    {
      if ((*(unsigned char *)(v1 + 16) & 1) != 0 || v8 < -1.0) {
        goto LABEL_33;
      }
      goto LABEL_36;
    }
    double v9 = *(double *)(v0 + 168);
    if (v9 < 0.0) {
      double v9 = 0.0;
    }
    if (v4 >= 0x40) {
      uint64_t v10 = 0;
    }
    else {
      uint64_t v10 = 1 << v4;
    }
    double v11 = v9 * (double)v10;
  }
  else
  {
    double v11 = *(double *)(v0 + 168);
    if (v11 < 0.0)
    {
      if ((*(unsigned char *)(v1 + 16) & 1) != 0 || v8 < 0.0 || v8 <= 0.0) {
        goto LABEL_33;
      }
      goto LABEL_37;
    }
  }
  if ((*(unsigned char *)(v1 + 16) & 1) == 0)
  {
    if (v11 > v8)
    {
      if (v11 > 0.0) {
        goto LABEL_37;
      }
LABEL_33:

      ++*(void *)(v0 + 184);
      uint64_t v25 = (uint64_t (*)(uint64_t))(*(void *)(v0 + 64) + **(int **)(v0 + 64));
      uint64_t v12 = (void *)swift_task_alloc();
      *(void *)(v0 + 192) = v12;
      *uint64_t v12 = v0;
      v12[1] = sub_1D798A960;
      uint64_t v13 = *(void *)(v0 + 152);
      return v25(v13);
    }
LABEL_36:
    if (v8 > 0.0) {
      goto LABEL_37;
    }
    goto LABEL_33;
  }
  if (v11 <= 0.0 || v11 <= -1.0 || v11 <= 0.0) {
    goto LABEL_33;
  }
LABEL_37:
  uint64_t v15 = *(void *)(v0 + 96);
  uint64_t v14 = *(void *)(v0 + 104);
  uint64_t v16 = *(void *)(v0 + 88);
  uint64_t v17 = sub_1D7A9D6F8();
  uint64_t v19 = v18;
  sub_1D7A9CE38();
  *(void *)(v0 + 40) = v17;
  *(void *)(v0 + 48) = v19;
  *(void *)(v0 + 24) = 0;
  *(void *)(v0 + 16) = 0;
  *(unsigned char *)(v0 + 32) = 1;
  uint64_t v20 = sub_1D78EA2E8(&qword_1EBDF9998, MEMORY[0x1E4FBD1A8]);
  sub_1D7A9D508();
  sub_1D78EA2E8(&qword_1EBDF9BC0, MEMORY[0x1E4FBD178]);
  sub_1D7A9CE58();
  uint64_t v21 = *(void (**)(uint64_t, uint64_t))(v15 + 8);
  *(void *)(v0 + 208) = v21;
  *(void *)(v0 + 216) = (v15 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v21(v14, v16);
  uint64_t v22 = (void *)swift_task_alloc();
  *(void *)(v0 + 224) = v22;
  *uint64_t v22 = v0;
  v22[1] = sub_1D798AEBC;
  uint64_t v24 = *(void *)(v0 + 112);
  uint64_t v23 = *(void *)(v0 + 120);
  return MEMORY[0x1F4188178](v24, v0 + 16, v23, v20);
}

uint64_t sub_1D798AEBC()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 232) = v0;
  swift_task_dealloc();
  if (v0)
  {
    (*(void (**)(void, void))(v2 + 208))(*(void *)(v2 + 112), *(void *)(v2 + 88));
    uint64_t v3 = sub_1D798B0FC;
  }
  else
  {
    uint64_t v5 = *(void *)(v2 + 128);
    uint64_t v4 = *(void *)(v2 + 136);
    uint64_t v6 = *(void *)(v2 + 120);
    (*(void (**)(void, void))(v2 + 208))(*(void *)(v2 + 112), *(void *)(v2 + 88));
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
    uint64_t v3 = sub_1D798B014;
  }
  return MEMORY[0x1F4188298](v3, 0, 0);
}

uint64_t sub_1D798B014()
{
  ++*(void *)(v0 + 184);
  uint64_t v4 = (uint64_t (*)(uint64_t))(*(void *)(v0 + 64) + **(int **)(v0 + 64));
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 192) = v1;
  void *v1 = v0;
  v1[1] = sub_1D798A960;
  uint64_t v2 = *(void *)(v0 + 152);
  return v4(v2);
}

uint64_t sub_1D798B0FC()
{
  uint64_t v1 = (void *)v0[25];
  (*(void (**)(void, void))(v0[16] + 8))(v0[17], v0[15]);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

void DIPRetrier.sync(_:)(void (*a1)(long long *__return_ptr, uint64_t), uint64_t a2)
{
  void (*v77)(long long *__return_ptr, uint64_t);
  uint64_t v78;
  uint64_t v79;
  long long v80;
  char v81;
  uint64_t v82;

  uint64_t v78 = a2;
  uint64_t v77 = a1;
  uint64_t v4 = sub_1D7A9B5F8();
  uint64_t v12 = MEMORY[0x1F4188790](v4, v5, v6, v7, v8, v9, v10, v11);
  uint64_t v72 = (char *)v69 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = MEMORY[0x1F4188790](v12, v14, v15, v16, v17, v18, v19, v20);
  uint64_t v76 = (char *)v69 - v22;
  MEMORY[0x1F4188790](v21, v23, v24, v25, v26, v27, v28, v29);
  uint64_t v32 = (char *)v69 - v31;
  uint64_t v79 = *(void *)v2;
  if (v79 >= 1)
  {
    v69[1] = v3;
    uint64_t v33 = 0;
    int v73 = *(unsigned __int8 *)(v2 + 16);
    uint64_t v34 = (void (**)(char *, uint64_t, uint64_t))(v30 + 16);
    double v35 = *(double *)(v2 + 8);
    char v36 = (void (**)(char *, uint64_t))(v30 + 8);
    if (v35 < 0.0) {
      double v37 = 0.0;
    }
    else {
      double v37 = *(double *)(v2 + 8);
    }
    uint64_t v75 = 0xD00000000000002BLL;
    unint64_t v74 = 0x80000001D7AC5950;
    unint64_t v71 = 0x80000001D7AC5920;
    uint64_t v38 = 1;
    v70 = (char *)v69 - v31;
    while (1)
    {
      v77(&v80, v38);

      uint64_t v40 = *((void *)&v80 + 1);
      uint64_t v33 = (_WORD *)v80;
      switch(v81)
      {
        case 1:
          id v41 = (id)v80;
          if (qword_1EBDF9DC8 != -1) {
            swift_once();
          }
          uint64_t v42 = __swift_project_value_buffer(v4, (uint64_t)qword_1EBDFBE70);
          swift_beginAccess();
          (*v34)(v32, v42, v4);
          DIPLogError(_:message:log:)(v33, v75, v74);
          (*v36)(v32, v4);
          if (v38 < v79)
          {
            if (v73)
            {
              if (v73 == 1)
              {
                unint64_t v43 = v38 & ~(v38 >> 63);
                unint64_t v44 = 1 << (v43 + 63);
                if (v43 >= 0x41) {
                  unint64_t v44 = 0;
                }
                if (v38 < 1) {
                  unint64_t v44 = 1uLL >> (1 - v43);
                }
                if (v43 <= 0x41) {
                  uint64_t v45 = v44;
                }
                else {
                  uint64_t v45 = 0;
                }
                double v46 = v37 * (double)v45;
LABEL_55:
                objc_msgSend(self, sel_sleepForTimeInterval_, v46);
              }
              sub_1D798DAD8(v33, (uint64_t)v40, 1u);
              ++v38;
              goto LABEL_7;
            }
            if (v35 >= 0.0) {
              double v46 = v35;
            }
            else {
              double v46 = 0.0;
            }
            goto LABEL_55;
          }
          sub_1D798DAD8(v33, (uint64_t)v40, 1u);
          BOOL v39 = __OFADD__(v38++, 1);
          if (v39) {
            goto LABEL_66;
          }
          goto LABEL_7;
        case 2:
          if ((void)v80)
          {
            sub_1D798DAEC((id)v80, *((uint64_t *)&v80 + 1), 2u);
            uint64_t v47 = v33;
            if (qword_1EBDF9DC8 != -1) {
              swift_once();
            }
            uint64_t v48 = __swift_project_value_buffer(v4, (uint64_t)qword_1EBDFBE70);
            swift_beginAccess();
            (*v34)(v32, v48, v4);
            DIPLogError(_:message:log:)(v33, 0xD00000000000002CLL, v71);
            uint64_t v49 = v32;
          }
          else
          {
            if (qword_1EBDF9DC8 != -1) {
              swift_once();
            }
            uint64_t v56 = __swift_project_value_buffer(v4, (uint64_t)qword_1EBDFBE70);
            swift_beginAccess();
            (*v34)(v72, v56, v4);
            uint64_t v57 = sub_1D7A9B5D8();
            os_log_type_t v58 = sub_1D7A9C748();
            if (os_log_type_enabled(v57, v58))
            {
              uint64_t v59 = (uint8_t *)swift_slowAlloc();
              *(_WORD *)uint64_t v59 = 0;
              _os_log_impl(&dword_1D7853000, v57, v58, "Retrier received retryAfterDelay from action", v59, 2u);
              MEMORY[0x1D947D740](v59, -1, -1);
            }

            uint64_t v49 = v72;
            uint64_t v32 = v70;
          }
          (*v36)(v49, v4);
          objc_msgSend(self, sel_sleepForTimeInterval_, *(double *)&v40);
          sub_1D798DAD8(v33, (uint64_t)v40, 2u);
          sub_1D798DAD8(v33, (uint64_t)v40, 2u);
          BOOL v39 = __OFADD__(v38++, 1);
          if (!v39) {
            goto LABEL_7;
          }
          __break(1u);
LABEL_66:
          __break(1u);
          goto LABEL_67;
        case 3:
          if (v80 == 0) {
            return;
          }
          if (qword_1EBDF9DC8 != -1) {
            swift_once();
          }
          uint64_t v50 = __swift_project_value_buffer(v4, (uint64_t)qword_1EBDFBE70);
          swift_beginAccess();
          (*v34)(v76, v50, v4);
          uint64_t v40 = sub_1D7A9B5D8();
          os_log_type_t v51 = sub_1D7A9C748();
          if (os_log_type_enabled(v40, v51))
          {
            uint64_t v33 = (_WORD *)swift_slowAlloc();
            *uint64_t v33 = 0;
            _os_log_impl(&dword_1D7853000, v40, v51, "Retrier received retry from action", (uint8_t *)v33, 2u);
            MEMORY[0x1D947D740](v33, -1, -1);
          }

          (*v36)(v76, v4);
          if (v38 < v79)
          {
            if (v73)
            {
              if (v73 == 1)
              {
                unint64_t v52 = v38 & ~(v38 >> 63);
                unint64_t v53 = 1 << (v52 + 63);
                if (v52 >= 0x41) {
                  unint64_t v53 = 0;
                }
                if (v38 < 1) {
                  unint64_t v53 = 1uLL >> (1 - v52);
                }
                if (v52 <= 0x41) {
                  uint64_t v54 = v53;
                }
                else {
                  uint64_t v54 = 0;
                }
                double v55 = v37 * (double)v54;
                goto LABEL_59;
              }
            }
            else
            {
              double v55 = v35;
              if (v35 < 0.0) {
                double v55 = 0.0;
              }
LABEL_59:
              objc_msgSend(self, sel_sleepForTimeInterval_, v55);
            }
            uint64_t v33 = 0;
            ++v38;
            goto LABEL_7;
          }
          BOOL v39 = __OFADD__(v38++, 1);
          if (v39)
          {
LABEL_67:
            __break(1u);
LABEL_68:
            swift_once();
LABEL_64:
            uint64_t v65 = __swift_project_value_buffer(v4, (uint64_t)qword_1EBDFBE70);
            swift_beginAccess();
            (*v34)(v32, v65, v4);
            DIPLogError(_:message:log:)(v33, 0xD00000000000002ALL, 0x80000001D7AC5980);
            sub_1D798DAD8(v33, (uint64_t)v40, 0);
            (*v36)(v32, v4);
            LOWORD(v82) = 0;
            uint64_t v66 = v33;
            unint64_t v67 = sub_1D785EAF8(MEMORY[0x1E4FBC860]);
            sub_1D7860544();
            swift_allocError();
            DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(v33, 0xD00000000000001DLL, 0x80000001D7AC59B0, (__int16 *)&v82, 0, v67, 0xD000000000000053, 0x80000001D7AC58C0, v68, 0x293A5F28636E7973, 0xE800000000000000, 156);
            swift_willThrow();
            sub_1D798DAD8(v33, (uint64_t)v40, 0);
            return;
          }
          uint64_t v33 = 0;
LABEL_7:
          if (v79 < v38) {
            goto LABEL_62;
          }
          break;
        default:
          id v64 = (id)v80;
          if (qword_1EBDF9DC8 == -1) {
            goto LABEL_64;
          }
          goto LABEL_68;
      }
    }
  }
  uint64_t v33 = 0;
LABEL_62:
  *(void *)&uint64_t v80 = 0;
  *((void *)&v80 + 1) = 0xE000000000000000;
  sub_1D7A9CC48();
  swift_bridgeObjectRelease();
  *(void *)&uint64_t v80 = 0x656972742078616DLL;
  *((void *)&v80 + 1) = 0xEA00000000002073;
  v82 = v79;
  sub_1D7A9D258();
  sub_1D7A9C128();
  swift_bridgeObjectRelease();
  sub_1D7A9C128();
  long long v60 = v80;
  LOWORD(v80) = 138;
  uint64_t v61 = v33;
  unint64_t v62 = sub_1D785EAF8(MEMORY[0x1E4FBC860]);
  sub_1D7860544();
  swift_allocError();
  DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(v33, v60, *((uint64_t *)&v60 + 1), (__int16 *)&v80, 0, v62, 0xD000000000000053, 0x80000001D7AC58C0, v63, 0x293A5F28636E7973, 0xE800000000000000, 150);
  swift_willThrow();
}

uint64_t DIPRetrier.async(action:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = sub_1D7A9B6C8();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9, v11, v12, v13, v14, v15, v16, v17);
  uint64_t v19 = (char *)v36 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = sub_1D7A9B708();
  uint64_t v20 = *(void *)(v37 - 8);
  MEMORY[0x1F4188790](v37, v21, v22, v23, v24, v25, v26, v27);
  uint64_t v29 = (char *)v36 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v30 = *(long long *)((char *)v4 + 25);
  long long v31 = v4[1];
  long long v40 = *v4;
  v41[0] = v31;
  *(_OWORD *)((char *)v41 + 9) = v30;
  v36[1] = *((void *)&v41[0] + 1);
  uint64_t v32 = swift_allocObject();
  long long v33 = v4[1];
  *(_OWORD *)(v32 + 16) = *v4;
  *(_OWORD *)(v32 + 32) = v33;
  *(_OWORD *)(v32 + 41) = *(long long *)((char *)v4 + 25);
  *(void *)(v32 + 64) = a1;
  *(void *)(v32 + 72) = a2;
  *(void *)(v32 + 80) = a3;
  *(void *)(v32 + 88) = a4;
  aBlock[4] = sub_1D798DB48;
  aBlock[5] = v32;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1D79899E4;
  aBlock[3] = &block_descriptor_6;
  uint64_t v34 = _Block_copy(aBlock);
  sub_1D798DB70((uint64_t)&v40);
  swift_retain();
  swift_retain();
  sub_1D7A9B6E8();
  uint64_t v38 = MEMORY[0x1E4FBC860];
  sub_1D78EA2E8((unint64_t *)&qword_1EBDF9D90, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF9D98);
  sub_1D78EA330();
  sub_1D7A9CBA8();
  MEMORY[0x1D947B570](0, v29, v19, v34);
  _Block_release(v34);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v19, v9);
  (*(void (**)(char *, uint64_t))(v20 + 8))(v29, v37);
  return swift_release();
}

void sub_1D798BEA8(uint64_t *a1, void (*a2)(uint64_t, uint64_t (*)(uint64_t a1), uint64_t), uint64_t a3, void (*a4)(void *), uint64_t a5)
{
  v243 = a2;
  uint64_t v244 = a3;
  uint64_t v247 = sub_1D7A9B5F8();
  uint64_t v8 = *(void *)(v247 - 8);
  uint64_t v16 = MEMORY[0x1F4188790](v247, v9, v10, v11, v12, v13, v14, v15);
  v222 = (char *)&v215 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = MEMORY[0x1F4188790](v16, v18, v19, v20, v21, v22, v23, v24);
  v238 = (char *)&v215 - v26;
  uint64_t v34 = MEMORY[0x1F4188790](v25, v27, v28, v29, v30, v31, v32, v33);
  v237 = (char *)&v215 - v35;
  uint64_t v43 = MEMORY[0x1F4188790](v34, v36, v37, v38, v39, v40, v41, v42);
  uint64_t v45 = (char *)&v215 - v44;
  MEMORY[0x1F4188790](v43, v46, v47, v48, v49, v50, v51, v52);
  uint64_t v54 = (char *)&v215 - v53;
  uint64_t v236 = sub_1D7A9B738();
  uint64_t v55 = *(void *)(v236 - 8);
  uint64_t v63 = MEMORY[0x1F4188790](v236, v56, v57, v58, v59, v60, v61, v62);
  v235 = (char *)&v215 - ((v64 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v63, v65, v66, v67, v68, v69, v70, v71);
  v234 = (char *)&v215 - v72;
  uint64_t v233 = sub_1D7A9B698();
  uint64_t v73 = *(void *)(v233 - 8);
  MEMORY[0x1F4188790](v233, v74, v75, v76, v77, v78, v79, v80);
  v232 = (char **)((char *)&v215 - ((v81 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v248 = *a1;
  if (v248 < 1)
  {
    v139 = 0;
LABEL_71:
    uint64_t v251 = 0;
    unint64_t v252 = 0xE000000000000000;
    sub_1D7A9CC48();
    swift_bridgeObjectRelease();
    uint64_t v251 = 0x656972742078616DLL;
    unint64_t v252 = 0xEA00000000002073;
    v250[0] = v248;
    sub_1D7A9D258();
    sub_1D7A9C128();
    swift_bridgeObjectRelease();
    sub_1D7A9C128();
    uint64_t v157 = v251;
    uint64_t v158 = v252;
    LOWORD(v250[0]) = 138;
    id v159 = v139;
    unint64_t v160 = sub_1D785EAF8(MEMORY[0x1E4FBC860]);
    DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(v139, v157, v158, (__int16 *)v250, 0, v160, 0xD000000000000053, 0x80000001D7AC58C0, (uint64_t)&v251, 0xD000000000000019, 0x80000001D7AC59D0, 300);
    LOWORD(v157) = v251;
    unint64_t v161 = v252;
    uint64_t v162 = v253;
    v163 = v254;
    sub_1D7860544();
    v164 = (void *)swift_allocError();
    *(_WORD *)uint64_t v165 = v157;
    *(void *)(v165 + 8) = v161;
    *(void *)(v165 + 16) = v162;
    *(void *)(v165 + 24) = v163;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v166 = v163;
    a4(v164);

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    return;
  }
  v215 = v45;
  v216 = v54;
  uint64_t v217 = a5;
  v218 = a4;
  sub_1D798EF90((uint64_t)(a1 + 4), (uint64_t)v257);
  v229 = (void (**)(char *, uint64_t))(v55 + 8);
  v230 = (void (**)(void *, void, uint64_t))(v73 + 104);
  v228 = (void (**)(void *, uint64_t))(v73 + 8);
  unsigned int v227 = *MEMORY[0x1E4FBCAC8];
  v240 = (void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  v241 = (void (**)(char *, uint64_t))(v8 + 8);
  v223 = a1 + 1;
  long long v231 = xmmword_1D7AA08E0;
  unint64_t v220 = (unint64_t)"retrier action returned error";
  unint64_t v221 = (unint64_t)"on:)";
  uint64_t v225 = 0x80000001D7AC58C0;
  uint64_t v226 = 0x80000001D7AC59D0;
  unint64_t v224 = 0x80000001D7AC5950;
  unint64_t v219 = 0x80000001D7AC5920;
  uint64_t v82 = 1;
  while (1)
  {
    dispatch_semaphore_t v83 = dispatch_semaphore_create(0);
    uint64_t v84 = (void *)swift_allocObject();
    v84[2] = 0;
    v84[3] = 0;
    *((unsigned char *)v84 + 32) = 3;
    uint64_t v85 = swift_allocObject();
    *(void *)(v85 + 16) = v84;
    *(void *)(v85 + 24) = v83;
    swift_retain();
    v86 = v83;
    v243(v82, sub_1D798F074, v85);
    swift_release();
    sub_1D798EF90((uint64_t)v257, (uint64_t)&v258);
    if (v259 != 1) {
      break;
    }
    sub_1D7A9C8B8();
LABEL_9:
    swift_beginAccess();
    unint64_t v98 = v84[2];
    uint64_t v99 = v84[3];
    switch(*((unsigned char *)v84 + 32))
    {
      case 1:
        v245 = v86;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF8678);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = v231;
        *(unsigned char *)(inited + 32) = 24;
        *(void *)(inited + 64) = MEMORY[0x1E4FBB550];
        *(void *)(inited + 40) = v82;
        uint64_t v246 = v99;
        sub_1D798DAEC((id)v98, v99, 1u);
        id v101 = (id)v98;
        unint64_t v102 = sub_1D785EC20(inited);
        LOWORD(v250[0]) = 0;
        id v242 = (id)v98;
        DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)((id)v98, 0x7469577972746572, 0xEE00726F72724568, (__int16 *)v250, 0, v102, 0xD000000000000053, v225, (uint64_t)&v251, 0xD000000000000019, v226, 281);
        __int16 v103 = v251;
        unint64_t v105 = v252;
        uint64_t v104 = v253;
        v106 = v254;
        sub_1D7860544();
        uint64_t v239 = swift_allocError();
        *(_WORD *)uint64_t v107 = v103;
        *(void *)(v107 + 8) = v105;
        *(void *)(v107 + 16) = v104;
        *(void *)(v107 + 24) = v106;
        v108 = (void *)swift_allocError();
        *(_WORD *)uint64_t v109 = v103;
        *(void *)(v109 + 8) = v105;
        *(void *)(v109 + 16) = v104;
        *(void *)(v109 + 24) = v106;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v110 = v106;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v111 = v106;
        uint64_t v112 = v82;
        if (qword_1EBDF9DC8 != -1) {
          swift_once();
        }
        uint64_t v113 = v247;
        uint64_t v114 = __swift_project_value_buffer(v247, (uint64_t)qword_1EBDFBE70);
        swift_beginAccess();
        v115 = v237;
        (*v240)(v237, v114, v113);
        DIPLogError(_:message:log:)(v108, 0xD00000000000002BLL, v224);
        (*v241)(v115, v113);

        v116 = v245;
        uint64_t v117 = v246;
        if (v112 >= v248) {
          goto LABEL_47;
        }
        sub_1D798F07C(v223, (uint64_t)v256);
        sub_1D798F07C(v256, (uint64_t)&v260);
        if (!v261)
        {
          if (v260 < 0.0) {
            double v122 = 0.0;
          }
          else {
            double v122 = v260;
          }
LABEL_62:
          objc_msgSend(self, sel_sleepForTimeInterval_, v122);

          sub_1D798DAD8(v242, v117, 1u);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          swift_release();
          uint64_t v82 = v112 + 1;
          v139 = (void *)v239;
          goto LABEL_67;
        }
        if (v261 == 1)
        {
          unint64_t v118 = v112 & ~(v112 >> 63);
          double v119 = v260;
          if (v260 < 0.0) {
            double v119 = 0.0;
          }
          unint64_t v120 = 1 << (v118 + 63);
          if (v118 >= 0x41) {
            unint64_t v120 = 0;
          }
          if (v112 < 1) {
            unint64_t v120 = 1uLL >> (1 - v118);
          }
          if (v118 <= 0x41) {
            uint64_t v121 = v120;
          }
          else {
            uint64_t v121 = 0;
          }
          double v122 = v119 * (double)v121;
          goto LABEL_62;
        }
LABEL_47:

        sub_1D798DAD8(v242, v117, 1u);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        swift_release();
        uint64_t v82 = v112 + 1;
        if (__OFADD__(v112, 1)) {
          goto LABEL_90;
        }
        v139 = (void *)v239;
LABEL_67:
        if (v248 < v82)
        {
          a4 = v218;
          goto LABEL_71;
        }

        break;
      case 2:
        v245 = v86;
        if (v98)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF8678);
          uint64_t v123 = swift_initStackObject();
          *(_OWORD *)(v123 + 16) = v231;
          *(unsigned char *)(v123 + 32) = 24;
          *(void *)(v123 + 64) = MEMORY[0x1E4FBB550];
          uint64_t v246 = v82;
          *(void *)(v123 + 40) = v82;
          sub_1D798DAEC((id)v98, v99, 2u);
          sub_1D798DAEC((id)v98, v99, 2u);
          id v124 = (id)v98;
          unint64_t v125 = sub_1D785EC20(v123);
          LOWORD(v250[0]) = 0;
          DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)((id)v98, 0x7466417972746572, 0xEF79616C65447265, (__int16 *)v250, 0, v125, 0xD000000000000053, v221 | 0x8000000000000000, (uint64_t)&v251, 0xD000000000000019, v220 | 0x8000000000000000, 287);
          __int16 v126 = v251;
          id v242 = (id)v98;
          unint64_t v127 = v252;
          uint64_t v128 = v253;
          v129 = v254;
          sub_1D7860544();
          uint64_t v239 = swift_allocError();
          *(_WORD *)uint64_t v130 = v126;
          *(void *)(v130 + 8) = v127;
          *(void *)(v130 + 16) = v128;
          *(void *)(v130 + 24) = v129;
          v131 = (void *)swift_allocError();
          *(_WORD *)uint64_t v132 = v126;
          *(void *)(v132 + 8) = v127;
          *(void *)(v132 + 16) = v128;
          *(void *)(v132 + 24) = v129;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          id v133 = v129;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          id v134 = v129;
          if (qword_1EBDF9DC8 != -1) {
            swift_once();
          }
          uint64_t v135 = v247;
          uint64_t v136 = __swift_project_value_buffer(v247, (uint64_t)qword_1EBDFBE70);
          swift_beginAccess();
          v137 = v237;
          (*v240)(v237, v136, v135);
          DIPLogError(_:message:log:)(v131, 0xD00000000000002CLL, v219);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          unint64_t v98 = (unint64_t)v242;
          sub_1D798DAD8(v242, v99, 2u);
          (*v241)(v137, v135);

          v138 = v245;
          uint64_t v82 = v246;
          v139 = (void *)v239;
        }
        else
        {
          if (qword_1EBDF9DC8 != -1) {
            swift_once();
          }
          uint64_t v151 = v247;
          uint64_t v152 = __swift_project_value_buffer(v247, (uint64_t)qword_1EBDFBE70);
          swift_beginAccess();
          (*v240)(v222, v152, v151);
          v153 = sub_1D7A9B5D8();
          os_log_type_t v154 = sub_1D7A9C748();
          if (os_log_type_enabled(v153, v154))
          {
            v155 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)v155 = 0;
            _os_log_impl(&dword_1D7853000, v153, v154, "Retrier received retryAfterDelay from action", v155, 2u);
            v156 = v155;
            unint64_t v98 = 0;
            MEMORY[0x1D947D740](v156, -1, -1);
          }

          (*v241)(v222, v247);
          v139 = 0;
          v138 = v245;
        }
        objc_msgSend(self, sel_sleepForTimeInterval_, *(double *)&v99);

        sub_1D798DAD8((id)v98, v99, 2u);
        swift_release();
        BOOL v150 = __OFADD__(v82++, 1);
        if (v150) {
          goto LABEL_89;
        }
        goto LABEL_67;
      case 3:
        if (!(v98 | v99))
        {
          v205 = v86;
          if (qword_1EBDF9DC8 != -1) {
            swift_once();
          }
          uint64_t v206 = v247;
          uint64_t v207 = __swift_project_value_buffer(v247, (uint64_t)qword_1EBDFBE70);
          swift_beginAccess();
          v208 = v215;
          (*v240)(v215, v207, v206);
          v209 = sub_1D7A9B5D8();
          os_log_type_t v210 = sub_1D7A9C748();
          BOOL v211 = os_log_type_enabled(v209, v210);
          v212 = v218;
          if (v211)
          {
            v213 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)v213 = 0;
            _os_log_impl(&dword_1D7853000, v209, v210, "Retrier received stop from action", v213, 2u);
            MEMORY[0x1D947D740](v213, -1, -1);
            v214 = v205;
          }
          else
          {
            v214 = v209;
            v209 = v205;
          }

          (*v241)(v208, v247);
          swift_release();
          v212(0);
          return;
        }
        if (qword_1EBDF9DC8 != -1) {
          swift_once();
        }
        uint64_t v140 = v247;
        uint64_t v141 = __swift_project_value_buffer(v247, (uint64_t)qword_1EBDFBE70);
        swift_beginAccess();
        (*v240)(v238, v141, v140);
        v142 = sub_1D7A9B5D8();
        os_log_type_t v143 = sub_1D7A9C748();
        if (os_log_type_enabled(v142, v143))
        {
          v144 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v144 = 0;
          _os_log_impl(&dword_1D7853000, v142, v143, "Retrier received retry from action", v144, 2u);
          MEMORY[0x1D947D740](v144, -1, -1);
        }

        (*v241)(v238, v247);
        if (v82 >= v248) {
          goto LABEL_49;
        }
        sub_1D798F07C(v223, (uint64_t)v255);
        sub_1D798F07C(v255, (uint64_t)&v262);
        if (!v263)
        {
          if (v262 < 0.0) {
            double v149 = 0.0;
          }
          else {
            double v149 = v262;
          }
LABEL_66:
          objc_msgSend(self, sel_sleepForTimeInterval_, v149);
          swift_release();

          v139 = 0;
          ++v82;
          goto LABEL_67;
        }
        if (v263 == 1)
        {
          unint64_t v145 = v82 & ~(v82 >> 63);
          double v146 = v262;
          if (v262 < 0.0) {
            double v146 = 0.0;
          }
          unint64_t v147 = 1 << (v145 + 63);
          if (v145 >= 0x41) {
            unint64_t v147 = 0;
          }
          if (v82 < 1) {
            unint64_t v147 = 1uLL >> (1 - v145);
          }
          if (v145 <= 0x41) {
            uint64_t v148 = v147;
          }
          else {
            uint64_t v148 = 0;
          }
          double v149 = v146 * (double)v148;
          goto LABEL_66;
        }
LABEL_49:
        swift_release();

        BOOL v150 = __OFADD__(v82++, 1);
        if (v150) {
          goto LABEL_91;
        }
        v139 = 0;
        goto LABEL_67;
      default:
        v245 = v86;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF8678);
        uint64_t v179 = swift_initStackObject();
        *(_OWORD *)(v179 + 16) = v231;
        *(unsigned char *)(v179 + 32) = 24;
        *(void *)(v179 + 64) = MEMORY[0x1E4FBB550];
        *(void *)(v179 + 40) = v82;
        sub_1D798DAEC((id)v98, v99, 0);
        id v180 = (id)v98;
        unint64_t v181 = sub_1D785EC20(v179);
        LOWORD(v250[0]) = 0;
        DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)((id)v98, 0x68746957706F7473, 0xED0000726F727245, (__int16 *)v250, 0, v181, 0xD000000000000053, v221 | 0x8000000000000000, (uint64_t)&v251, 0xD000000000000019, v220 | 0x8000000000000000, 274);
        __int16 v182 = v251;
        unint64_t v183 = v252;
        uint64_t v184 = v253;
        id v242 = (id)v98;
        v185 = v254;
        sub_1D7860544();
        uint64_t v186 = v99;
        uint64_t v248 = swift_allocError();
        *(_WORD *)uint64_t v187 = v182;
        *(void *)(v187 + 8) = v183;
        *(void *)(v187 + 16) = v184;
        *(void *)(v187 + 24) = v185;
        v188 = (void *)swift_allocError();
        *(_WORD *)uint64_t v189 = v182;
        *(void *)(v189 + 8) = v183;
        *(void *)(v189 + 16) = v184;
        *(void *)(v189 + 24) = v185;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v190 = v185;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v191 = v185;
        if (qword_1EBDF9DC8 != -1) {
          swift_once();
        }
        uint64_t v192 = v247;
        uint64_t v193 = __swift_project_value_buffer(v247, (uint64_t)qword_1EBDFBE70);
        swift_beginAccess();
        v194 = v237;
        (*v240)(v237, v193, v192);
        DIPLogError(_:message:log:)(v188, 0xD00000000000002ALL, 0x80000001D7AC5980);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        sub_1D798DAD8(v242, v186, 0);
        (*v241)(v194, v192);

        swift_release();
        v172 = v218;
        unint64_t v174 = v220;
        unint64_t v173 = v221;
        v177 = (void *)v248;
        goto LABEL_79;
    }
  }
  double v87 = v258 * 1000.0;
  if ((~COERCE__INT64(v258 * 1000.0) & 0x7FF0000000000000) == 0)
  {
    __break(1u);
LABEL_87:
    __break(1u);
LABEL_88:
    __break(1u);
LABEL_89:
    __break(1u);
LABEL_90:
    __break(1u);
LABEL_91:
    __break(1u);
    goto LABEL_92;
  }
  if (v87 <= -9.22337204e18) {
    goto LABEL_87;
  }
  if (v87 >= 9.22337204e18) {
    goto LABEL_88;
  }
  v88 = v232;
  void *v232 = (uint64_t)v87;
  uint64_t v89 = *v230;
  uint64_t v246 = v82;
  uint64_t v90 = v233;
  v89(v88, v227, v233);
  char v91 = v235;
  sub_1D7A9B728();
  char v92 = v86;
  char v93 = v234;
  MEMORY[0x1D947A4C0](v91, v88);
  id v242 = v84;
  char v94 = *v229;
  uint64_t v95 = v236;
  (*v229)(v91, v236);
  sub_1D7A9C8A8();
  char v96 = v93;
  v86 = v92;
  v94(v96, v95);
  uint64_t v84 = v242;
  uint64_t v97 = v90;
  uint64_t v82 = v246;
  (*v228)(v88, v97);
  if (sub_1D7A9B6A8()) {
    goto LABEL_9;
  }
  v245 = v92;
  if (qword_1EBDF9DC8 != -1) {
LABEL_92:
  }
    swift_once();
  uint64_t v167 = v247;
  uint64_t v168 = __swift_project_value_buffer(v247, (uint64_t)qword_1EBDFBE70);
  swift_beginAccess();
  (*v240)(v216, v168, v167);
  v169 = sub_1D7A9B5D8();
  os_log_type_t v170 = sub_1D7A9C758();
  BOOL v171 = os_log_type_enabled(v169, v170);
  v172 = v218;
  unint64_t v174 = v220;
  unint64_t v173 = v221;
  if (v171)
  {
    v175 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v175 = 0;
    _os_log_impl(&dword_1D7853000, v169, v170, "Retrier timed out", v175, 2u);
    MEMORY[0x1D947D740](v175, -1, -1);
  }

  (*v241)(v216, v247);
  LOWORD(v251) = 0;
  unint64_t v176 = sub_1D785EAF8(MEMORY[0x1E4FBC860]);
  sub_1D7860544();
  v177 = (void *)swift_allocError();
  DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xD000000000000018, 0x80000001D7AC59F0, (__int16 *)&v251, 0, v176, 0xD000000000000053, v173 | 0x8000000000000000, v178, 0xD000000000000019, v174 | 0x8000000000000000, 261);
  swift_release();

LABEL_79:
  __int16 v249 = 0;
  id v195 = v177;
  unint64_t v196 = sub_1D785EAF8(MEMORY[0x1E4FBC860]);
  DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(v177, 0xD00000000000001DLL, 0x80000001D7AC59B0, &v249, 0, v196, 0xD000000000000053, v173 | 0x8000000000000000, (uint64_t)&v251, 0xD000000000000019, v174 | 0x8000000000000000, 308);
  v197 = v177;
  __int16 v198 = v251;
  unint64_t v199 = v252;
  uint64_t v200 = v253;
  v201 = v254;
  sub_1D7860544();
  v202 = (void *)swift_allocError();
  *(_WORD *)uint64_t v203 = v198;
  *(void *)(v203 + 8) = v199;
  *(void *)(v203 + 16) = v200;
  *(void *)(v203 + 24) = v201;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v204 = v201;
  v172(v202);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
}

uint64_t sub_1D798D55C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a1;
  uint64_t v4 = *(void *)(a1 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a1 + 16);
  swift_beginAccess();
  uint64_t v6 = *(void **)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a2 + 16) = v3;
  *(void *)(a2 + 24) = v4;
  unsigned __int8 v8 = *(unsigned char *)(a2 + 32);
  *(unsigned char *)(a2 + 32) = v5;
  sub_1D798DAEC(v3, v4, v5);
  sub_1D798DAD8(v6, v7, v8);
  return sub_1D7A9C8C8();
}

uint64_t sub_1D798D5F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  *(void *)(v6 + 56) = v5;
  uint64_t v12 = sub_1D7A9CE28();
  *(void *)(v6 + 64) = v12;
  *(void *)(v6 + 72) = *(void *)(v12 - 8);
  *(void *)(v6 + 80) = swift_task_alloc();
  *(void *)(v6 + 88) = swift_task_alloc();
  *(void *)(v6 + 40) = a1;
  *(void *)(v6 + 48) = a2;
  *(void *)(v6 + 16) = a3;
  *(void *)(v6 + 24) = a4;
  *(unsigned char *)(v6 + 32) = a5 & 1;
  return MEMORY[0x1F4188298](sub_1D798D6F8, 0, 0);
}

uint64_t sub_1D798D6F8()
{
  uint64_t v1 = v0[10];
  uint64_t v2 = v0[8];
  uint64_t v3 = v0[9];
  uint64_t v4 = sub_1D7A9CE48();
  uint64_t v5 = sub_1D78EA2E8(&qword_1EBDF9998, MEMORY[0x1E4FBD1A8]);
  sub_1D7A9D508();
  sub_1D78EA2E8(&qword_1EBDF9BC0, MEMORY[0x1E4FBD178]);
  sub_1D7A9CE58();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v0[12] = v6;
  v0[13] = (v3 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v6(v1, v2);
  uint64_t v7 = (void *)swift_task_alloc();
  v0[14] = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_1D798D898;
  uint64_t v8 = v0[11];
  return MEMORY[0x1F4188178](v8, v0 + 2, v4, v5);
}

uint64_t sub_1D798D898()
{
  uint64_t v2 = *(void (**)(uint64_t, uint64_t))(*v1 + 96);
  uint64_t v3 = *(void *)(*v1 + 88);
  uint64_t v4 = *(void *)(*v1 + 64);
  uint64_t v5 = *v1;
  *(void *)(v5 + 120) = v0;
  swift_task_dealloc();
  v2(v3, v4);
  if (v0)
  {
    return MEMORY[0x1F4188298](sub_1D798DA54, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
    return v6();
  }
}

uint64_t sub_1D798DA54()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t type metadata accessor for DIPRetrier.RetryResult()
{
  return __swift_instantiateGenericMetadata();
}

void sub_1D798DAD8(id a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 2u) {
}
  }

id sub_1D798DAEC(id result, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 2u) {
    return result;
  }
  return result;
}

uint64_t sub_1D798DB00()
{
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 96, 7);
}

void sub_1D798DB48()
{
  sub_1D798BEA8((uint64_t *)(v0 + 16), *(void (**)(uint64_t, uint64_t (*)(uint64_t), uint64_t))(v0 + 64), *(void *)(v0 + 72), *(void (**)(void *))(v0 + 80), *(void *)(v0 + 88));
}

uint64_t block_copy_helper_6(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_6()
{
  return swift_release();
}

uint64_t sub_1D798DB70(uint64_t a1)
{
  id v2 = *(id *)(a1 + 24);
  return a1;
}

void destroy for DIPRetryResult(uint64_t a1)
{
}

uint64_t _s13CoreIDVShared14DIPRetryResultOwCP_0(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_1D798DAEC(*(id *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for DIPRetryResult(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_1D798DAEC(*(id *)a2, v4, v5);
  uint64_t v6 = *(void **)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  unsigned __int8 v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_1D798DAD8(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for DIPRetryResult(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void **)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  unsigned __int8 v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_1D798DAD8(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for DIPRetryResult(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFD && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 253);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 3) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for DIPRetryResult(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)uint64_t result = a2 - 253;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1D798DD28(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 2u) {
    return *(unsigned __int8 *)(a1 + 16);
  }
  else {
    return (*(_DWORD *)a1 + 3);
  }
}

uint64_t sub_1D798DD40(uint64_t result, unsigned int a2)
{
  if (a2 >= 3)
  {
    *(void *)uint64_t result = a2 - 3;
    *(void *)(result + 8) = 0;
    LOBYTE(a2) = 3;
  }
  *(unsigned char *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for DIPRetryResult()
{
  return &type metadata for DIPRetryResult;
}

uint64_t getEnumTagSinglePayload for DIPBackoffStrategy(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 2) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for DIPBackoffStrategy(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)uint64_t result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1D798DDF4(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 8) <= 1u) {
    return *(unsigned __int8 *)(a1 + 8);
  }
  else {
    return (*(_DWORD *)a1 + 2);
  }
}

uint64_t sub_1D798DE0C(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(void *)uint64_t result = a2 - 2;
    LOBYTE(a2) = 2;
  }
  *(unsigned char *)(result + 8) = a2;
  return result;
}

ValueMetadata *type metadata accessor for DIPBackoffStrategy()
{
  return &type metadata for DIPBackoffStrategy;
}

void destroy for DIPRetrier(uint64_t a1)
{
}

uint64_t initializeWithCopy for DIPRetrier(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  int v4 = *(void **)(a2 + 24);
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = v5;
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  id v6 = v4;
  return a1;
}

uint64_t assignWithCopy for DIPRetrier(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void **)(a2 + 24);
  id v6 = *(void **)(a1 + 24);
  *(void *)(a1 + 24) = v5;
  id v7 = v5;

  uint64_t v8 = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 32) = v8;
  return a1;
}

__n128 __swift_memcpy41_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for DIPRetrier(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v5 = *(void **)(a1 + 24);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);

  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for DIPRetrier(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 41)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DIPRetrier(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 40) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 41) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 41) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DIPRetrier()
{
  return &type metadata for DIPRetrier;
}

uint64_t sub_1D798E000(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 16);
}

uint64_t sub_1D798E008()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

char *sub_1D798E0A8(char *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  if (*(void *)(v5 + 64) <= 0x11uLL) {
    uint64_t v6 = 17;
  }
  else {
    uint64_t v6 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  int v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || (unint64_t)(v6 + 1) > 0x18)
  {
    uint64_t v9 = *(char **)a2;
    *(void *)uint64_t v4 = *(void *)a2;
    uint64_t v4 = &v9[(unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8];
    swift_retain();
  }
  else
  {
    unsigned int v10 = a2[v6];
    unsigned int v11 = v10 - 3;
    if (v10 >= 3)
    {
      if (v6 <= 3) {
        uint64_t v12 = v6;
      }
      else {
        uint64_t v12 = 4;
      }
      switch(v12)
      {
        case 1:
          int v13 = *a2;
          goto LABEL_19;
        case 2:
          int v13 = *(unsigned __int16 *)a2;
          goto LABEL_19;
        case 3:
          int v13 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_19;
        case 4:
          int v13 = *(_DWORD *)a2;
LABEL_19:
          int v14 = (v13 | (v11 << (8 * v6))) + 3;
          unsigned int v10 = v13 + 3;
          if (v6 < 4) {
            unsigned int v10 = v14;
          }
          break;
        default:
          break;
      }
    }
    if (v10 == 2)
    {
      uint64_t v17 = *(void *)a2;
      id v18 = *(id *)a2;
      uint64_t v19 = *((void *)a2 + 1);
      *(void *)uint64_t v4 = v17;
      *((void *)v4 + 1) = v19;
      v4[16] = a2[16];
      v4[v6] = 2;
    }
    else if (v10 == 1)
    {
      id v15 = *(id *)a2;
      id v16 = *(id *)a2;
      *(void *)uint64_t v4 = v15;
      v4[v6] = 1;
    }
    else
    {
      (*(void (**)(char *, unsigned __int8 *))(v5 + 16))(a1, a2);
      v4[v6] = 0;
    }
  }
  return v4;
}

void sub_1D798E268(unsigned __int8 *a1, uint64_t a2)
{
  unint64_t v2 = *(void *)(*(void *)(*(void *)(a2 + 16) - 8) + 64);
  if (v2 <= 0x11) {
    unint64_t v2 = 17;
  }
  unsigned int v3 = a1[v2];
  unsigned int v4 = v3 - 3;
  if (v3 >= 3)
  {
    if (v2 <= 3) {
      uint64_t v5 = v2;
    }
    else {
      uint64_t v5 = 4;
    }
    switch(v5)
    {
      case 1:
        int v6 = *a1;
        goto LABEL_12;
      case 2:
        int v6 = *(unsigned __int16 *)a1;
        goto LABEL_12;
      case 3:
        int v6 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_12;
      case 4:
        int v6 = *(_DWORD *)a1;
LABEL_12:
        int v7 = (v6 | (v4 << (8 * v2))) + 3;
        unsigned int v3 = v6 + 3;
        if (v2 < 4) {
          unsigned int v3 = v7;
        }
        break;
      default:
        break;
    }
  }
  if (v3 == 2 || v3 == 1) {

  }
  else {
    (*(void (**)(void))(*(void *)(*(void *)(a2 + 16) - 8) + 8))();
  }
}

uint64_t sub_1D798E370(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 0x11uLL) {
    uint64_t v5 = 17;
  }
  else {
    uint64_t v5 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  unsigned int v6 = a2[v5];
  unsigned int v7 = v6 - 3;
  if (v6 >= 3)
  {
    if (v5 <= 3) {
      uint64_t v8 = v5;
    }
    else {
      uint64_t v8 = 4;
    }
    switch(v8)
    {
      case 1:
        int v9 = *a2;
        goto LABEL_13;
      case 2:
        int v9 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v9 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v9 = *(_DWORD *)a2;
LABEL_13:
        int v10 = (v9 | (v7 << (8 * v5))) + 3;
        unsigned int v6 = v9 + 3;
        if (v5 < 4) {
          unsigned int v6 = v10;
        }
        break;
      default:
        break;
    }
  }
  if (v6 == 2)
  {
    uint64_t v14 = *(void *)a2;
    id v15 = *(id *)a2;
    uint64_t v16 = *((void *)a2 + 1);
    *(void *)a1 = v14;
    *(void *)(a1 + 8) = v16;
    *(unsigned char *)(a1 + 16) = a2[16];
    char v13 = 2;
  }
  else if (v6 == 1)
  {
    id v11 = *(id *)a2;
    id v12 = *(id *)a2;
    *(void *)a1 = v11;
    char v13 = 1;
  }
  else
  {
    (*(void (**)(uint64_t, unsigned __int8 *))(*(void *)(*(void *)(a3 + 16) - 8) + 16))(a1, a2);
    char v13 = 0;
  }
  *(unsigned char *)(a1 + v5) = v13;
  return a1;
}

unsigned __int8 *sub_1D798E4EC(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    if (*(void *)(v6 + 64) <= 0x11uLL) {
      uint64_t v7 = 17;
    }
    else {
      uint64_t v7 = *(void *)(v6 + 64);
    }
    unsigned int v8 = a1[v7];
    unsigned int v9 = v8 - 3;
    if (v8 >= 3)
    {
      if (v7 <= 3) {
        uint64_t v10 = v7;
      }
      else {
        uint64_t v10 = 4;
      }
      switch(v10)
      {
        case 1:
          int v11 = *a1;
          goto LABEL_14;
        case 2:
          int v11 = *(unsigned __int16 *)a1;
          goto LABEL_14;
        case 3:
          int v11 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_14;
        case 4:
          int v11 = *(_DWORD *)a1;
LABEL_14:
          int v12 = (v11 | (v9 << (8 * v7))) + 3;
          unsigned int v8 = v11 + 3;
          if (v7 < 4) {
            unsigned int v8 = v12;
          }
          break;
        default:
          break;
      }
    }
    if (v8 == 2 || v8 == 1) {

    }
    else {
      (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(a1, v5);
    }
    unsigned int v13 = a2[v7];
    unsigned int v14 = v13 - 3;
    if (v13 >= 3)
    {
      if (v7 <= 3) {
        uint64_t v15 = v7;
      }
      else {
        uint64_t v15 = 4;
      }
      switch(v15)
      {
        case 1:
          int v16 = *a2;
          goto LABEL_29;
        case 2:
          int v16 = *(unsigned __int16 *)a2;
          goto LABEL_29;
        case 3:
          int v16 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_29;
        case 4:
          int v16 = *(_DWORD *)a2;
LABEL_29:
          int v17 = (v16 | (v14 << (8 * v7))) + 3;
          unsigned int v13 = v16 + 3;
          if (v7 < 4) {
            unsigned int v13 = v17;
          }
          break;
        default:
          break;
      }
    }
    if (v13 == 2)
    {
      uint64_t v21 = *(void *)a2;
      id v22 = *(id *)a2;
      *(void *)a1 = v21;
      unsigned __int8 v23 = a2[16];
      *((void *)a1 + 1) = *((void *)a2 + 1);
      a1[16] = v23;
      char v20 = 2;
    }
    else if (v13 == 1)
    {
      id v18 = *(id *)a2;
      id v19 = v18;
      *(void *)a1 = v18;
      char v20 = 1;
    }
    else
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 16))(a1, a2, v5);
      char v20 = 0;
    }
    a1[v7] = v20;
  }
  return a1;
}

uint64_t sub_1D798E744(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 0x11uLL) {
    uint64_t v4 = 17;
  }
  else {
    uint64_t v4 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  unsigned int v5 = a2[v4];
  unsigned int v6 = v5 - 3;
  if (v5 >= 3)
  {
    if (v4 <= 3) {
      uint64_t v7 = v4;
    }
    else {
      uint64_t v7 = 4;
    }
    switch(v7)
    {
      case 1:
        int v8 = *a2;
        goto LABEL_13;
      case 2:
        int v8 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v8 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v8 = *(_DWORD *)a2;
LABEL_13:
        int v9 = (v8 | (v6 << (8 * v4))) + 3;
        unsigned int v5 = v8 + 3;
        if (v4 < 4) {
          unsigned int v5 = v9;
        }
        break;
      default:
        break;
    }
  }
  if (v5 == 2)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(unsigned char *)(a1 + 16) = a2[16];
    char v10 = 2;
  }
  else if (v5 == 1)
  {
    *(void *)a1 = *(void *)a2;
    char v10 = 1;
  }
  else
  {
    (*(void (**)(uint64_t))(*(void *)(*(void *)(a3 + 16) - 8) + 32))(a1);
    char v10 = 0;
  }
  *(unsigned char *)(a1 + v4) = v10;
  return a1;
}

unsigned __int8 *sub_1D798E89C(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    if (*(void *)(v6 + 64) <= 0x11uLL) {
      uint64_t v7 = 17;
    }
    else {
      uint64_t v7 = *(void *)(v6 + 64);
    }
    unsigned int v8 = a1[v7];
    unsigned int v9 = v8 - 3;
    if (v8 >= 3)
    {
      if (v7 <= 3) {
        uint64_t v10 = v7;
      }
      else {
        uint64_t v10 = 4;
      }
      switch(v10)
      {
        case 1:
          int v11 = *a1;
          goto LABEL_14;
        case 2:
          int v11 = *(unsigned __int16 *)a1;
          goto LABEL_14;
        case 3:
          int v11 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_14;
        case 4:
          int v11 = *(_DWORD *)a1;
LABEL_14:
          int v12 = (v11 | (v9 << (8 * v7))) + 3;
          unsigned int v8 = v11 + 3;
          if (v7 < 4) {
            unsigned int v8 = v12;
          }
          break;
        default:
          break;
      }
    }
    if (v8 == 2 || v8 == 1) {

    }
    else {
      (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(a1, v5);
    }
    unsigned int v13 = a2[v7];
    unsigned int v14 = v13 - 3;
    if (v13 >= 3)
    {
      if (v7 <= 3) {
        uint64_t v15 = v7;
      }
      else {
        uint64_t v15 = 4;
      }
      switch(v15)
      {
        case 1:
          int v16 = *a2;
          goto LABEL_29;
        case 2:
          int v16 = *(unsigned __int16 *)a2;
          goto LABEL_29;
        case 3:
          int v16 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_29;
        case 4:
          int v16 = *(_DWORD *)a2;
LABEL_29:
          int v17 = (v16 | (v14 << (8 * v7))) + 3;
          unsigned int v13 = v16 + 3;
          if (v7 < 4) {
            unsigned int v13 = v17;
          }
          break;
        default:
          break;
      }
    }
    if (v13 == 2)
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
      a1[16] = a2[16];
      char v18 = 2;
    }
    else if (v13 == 1)
    {
      *(void *)a1 = *(void *)a2;
      char v18 = 1;
    }
    else
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 32))(a1, a2, v5);
      char v18 = 0;
    }
    a1[v7] = v18;
  }
  return a1;
}

uint64_t sub_1D798EADC(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v4 = 17;
  if (*(void *)(v3 + 64) > 0x11uLL) {
    uint64_t v4 = *(void *)(v3 + 64);
  }
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_22;
  }
  uint64_t v5 = v4 + 1;
  char v6 = 8 * (v4 + 1);
  if ((v4 + 1) <= 3)
  {
    unsigned int v9 = ((a2 + ~(-1 << v6) - 253) >> v6) + 1;
    if (HIWORD(v9))
    {
      int v7 = *(_DWORD *)((char *)a1 + v5);
      if (!v7) {
        goto LABEL_22;
      }
      goto LABEL_14;
    }
    if (v9 > 0xFF)
    {
      int v7 = *(unsigned __int16 *)((char *)a1 + v5);
      if (!*(unsigned __int16 *)((char *)a1 + v5)) {
        goto LABEL_22;
      }
      goto LABEL_14;
    }
    if (v9 < 2)
    {
LABEL_22:
      unsigned int v11 = *((unsigned __int8 *)a1 + v4);
      if (v11 >= 3) {
        return (v11 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
  }
  int v7 = *((unsigned __int8 *)a1 + v5);
  if (!*((unsigned char *)a1 + v5)) {
    goto LABEL_22;
  }
LABEL_14:
  int v10 = (v7 - 1) << v6;
  if (v5 > 3) {
    int v10 = 0;
  }
  if (v5)
  {
    if (v5 > 3) {
      LODWORD(v5) = 4;
    }
    switch((int)v5)
    {
      case 2:
        LODWORD(v5) = *a1;
        break;
      case 3:
        LODWORD(v5) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v5) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v5) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return (v5 | v10) + 254;
}

void sub_1D798EC10(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  if (v5 <= 0x11) {
    unint64_t v5 = 17;
  }
  size_t v6 = v5 + 1;
  if (a3 < 0xFE)
  {
    int v7 = 0;
  }
  else if (v6 <= 3)
  {
    unsigned int v10 = ((a3 + ~(-1 << (8 * v6)) - 253) >> (8 * v6)) + 1;
    if (HIWORD(v10))
    {
      int v7 = 4;
    }
    else if (v10 >= 0x100)
    {
      int v7 = 2;
    }
    else
    {
      int v7 = v10 > 1;
    }
  }
  else
  {
    int v7 = 1;
  }
  if (a2 > 0xFD)
  {
    unsigned int v8 = a2 - 254;
    if (v6 < 4)
    {
      int v9 = (v8 >> (8 * v6)) + 1;
      if (v5 != -1)
      {
        int v11 = v8 & ~(-1 << (8 * v6));
        bzero(a1, v6);
        if (v6 == 3)
        {
          *(_WORD *)a1 = v11;
          a1[2] = BYTE2(v11);
        }
        else if (v6 == 2)
        {
          *(_WORD *)a1 = v11;
        }
        else
        {
          *a1 = v11;
        }
      }
    }
    else
    {
      bzero(a1, v5 + 1);
      *(_DWORD *)a1 = v8;
      int v9 = 1;
    }
    switch(v7)
    {
      case 1:
        a1[v6] = v9;
        break;
      case 2:
        *(_WORD *)&a1[v6] = v9;
        break;
      case 3:
LABEL_34:
        __break(1u);
        JUMPOUT(0x1D798EDD8);
      case 4:
        *(_DWORD *)&a1[v6] = v9;
        break;
      default:
        return;
    }
  }
  else
  {
    switch(v7)
    {
      case 1:
        a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      case 2:
        *(_WORD *)&a1[v6] = 0;
        goto LABEL_22;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      default:
LABEL_22:
        if (a2) {
LABEL_23:
        }
          a1[v5] = -(char)a2;
        break;
    }
  }
}

uint64_t sub_1D798EE00(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v3 = 17;
  if (*(void *)(v2 + 64) > 0x11uLL) {
    uint64_t v3 = *(void *)(v2 + 64);
  }
  uint64_t v4 = a1[v3];
  int v5 = v4 - 3;
  if (v4 >= 3)
  {
    if (v3 <= 3) {
      uint64_t v6 = v3;
    }
    else {
      uint64_t v6 = 4;
    }
    switch(v6)
    {
      case 1:
        int v7 = *a1;
        goto LABEL_12;
      case 2:
        int v7 = *(unsigned __int16 *)a1;
        goto LABEL_12;
      case 3:
        int v7 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_12;
      case 4:
        int v7 = *(_DWORD *)a1;
LABEL_12:
        unsigned int v8 = (v7 | (v5 << (8 * v3))) + 3;
        LODWORD(v4) = v7 + 3;
        if (v3 >= 4) {
          uint64_t v4 = v4;
        }
        else {
          uint64_t v4 = v8;
        }
        break;
      default:
        return v4;
    }
  }
  return v4;
}

void sub_1D798EEB8(unsigned char *a1, unsigned int a2, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 0x11uLL) {
    size_t v4 = 17;
  }
  else {
    size_t v4 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  if (a2 > 2)
  {
    unsigned int v5 = a2 - 3;
    if (v4 < 4)
    {
      unsigned int v6 = v5 >> (8 * v4);
      int v7 = v5 & ~(-1 << (8 * v4));
      a1[v4] = v6 + 3;
      bzero(a1, v4);
      if (v4 == 3)
      {
        *(_WORD *)a1 = v7;
        a1[2] = BYTE2(v7);
      }
      else if (v4 == 2)
      {
        *(_WORD *)a1 = v7;
      }
      else
      {
        *a1 = v7;
      }
    }
    else
    {
      a1[v4] = 3;
      bzero(a1, v4);
      *(_DWORD *)a1 = v5;
    }
  }
  else
  {
    a1[v4] = a2;
  }
}

uint64_t sub_1D798EF90(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF7918);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D798EFF8()
{
  sub_1D798DAD8(*(id *)(v0 + 16), *(void *)(v0 + 24), *(unsigned char *)(v0 + 32));
  return MEMORY[0x1F4186498](v0, 33, 7);
}

uint64_t sub_1D798F034()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1D798F074(uint64_t a1)
{
  return sub_1D798D55C(a1, *(void *)(v1 + 16));
}

uint64_t sub_1D798F07C(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  *(unsigned char *)(a2 + 8) = *((unsigned char *)a1 + 8);
  *(void *)a2 = v2;
  return a2;
}

unint64_t static ReaderAuthenticationAllowableElements.OID.displayOnly.getter()
{
  return 0xD000000000000017;
}

unint64_t static ReaderAuthenticationAllowableElements.OID.dataTransfer.getter()
{
  return 0xD000000000000017;
}

uint64_t ReaderAuthenticationAllowableElements.documentTypes.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ReaderAuthenticationAllowableElements.documentTypes.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  void *v1 = a1;
  return result;
}

uint64_t (*ReaderAuthenticationAllowableElements.documentTypes.modify())()
{
  return nullsub_1;
}

uint64_t ReaderAuthenticationAllowableElements.elements.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ReaderAuthenticationAllowableElements.elements.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 8) = a1;
  return result;
}

uint64_t (*ReaderAuthenticationAllowableElements.elements.modify())()
{
  return nullsub_1;
}

CoreIDVShared::ReaderAuthenticationAllowableElements __swiftcall ReaderAuthenticationAllowableElements.init(documentTypes:elements:)(Swift::OpaquePointer documentTypes, Swift::OpaquePointer elements)
{
  v2->_rawValue = documentTypes._rawValue;
  v2[1]._rawValue = elements._rawValue;
  result.elements = elements;
  result.documentTypes = documentTypes;
  return result;
}

void *assignWithCopy for ReaderAuthenticationAllowableElements(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for ReaderAuthenticationAllowableElements()
{
  return &type metadata for ReaderAuthenticationAllowableElements;
}

ValueMetadata *type metadata accessor for ReaderAuthenticationAllowableElements.OID()
{
  return &type metadata for ReaderAuthenticationAllowableElements.OID;
}

uint64_t sub_1D798F1FC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  BOOL v4 = *(void *)a1 == 16 && *(unsigned char *)(a1 + 8) == 0;
  if (!v4 || (*(unsigned char *)(a1 + 56) & 1) != 0)
  {
    uint64_t v6 = sub_1D78F7D1C();
    uint64_t v8 = v7;
    type metadata accessor for ASN1Error.Backing();
    uint64_t v9 = swift_allocObject();
    *(unsigned char *)(v9 + 16) = 0;
    *(void *)(v9 + 24) = v6;
    *(void *)(v9 + 32) = v8;
    *(void *)(v9 + 40) = 0xD000000000000018;
    *(void *)(v9 + 48) = 0x80000001D7AC0E80;
    *(void *)(v9 + 56) = 82;
    sub_1D785D8F0();
    swift_allocError();
    *unsigned int v10 = v9;
    swift_willThrow();
    return sub_1D785D944(a1);
  }
  uint64_t v12 = *(void *)(a1 + 16);
  uint64_t v11 = *(void *)(a1 + 24);
  uint64_t v14 = *(void *)(a1 + 32);
  uint64_t v13 = *(void *)(a1 + 40);
  uint64_t v15 = *(void *)(a1 + 48);
  v22[0] = v12;
  v22[1] = v11;
  v22[2] = v14;
  v22[3] = v13;
  v22[4] = v15;
  j__swift_unknownObjectRetain(v12, v11, v14, v13, v15, 0);
  swift_unknownObjectRetain();
  uint64_t v16 = sub_1D7A2C790((uint64_t)v22, 0, 2u);
  if (v2)
  {
    swift_unknownObjectRelease();
    j__swift_unknownObjectRelease(v12, v11, v14, v13, v15, 0);
    return sub_1D785D944(a1);
  }
  uint64_t v17 = v16;
  uint64_t v21 = sub_1D7A2C790((uint64_t)v22, 1, 2u);
  uint64_t v26 = v17;
  sub_1D7A2BC88((uint64_t)v23);
  sub_1D785DAD8(v23);
  sub_1D785D9E8((uint64_t)v23, (uint64_t)v24);
  if (v25)
  {
    type metadata accessor for ASN1Error.Backing();
    uint64_t v19 = swift_allocObject();
    *(unsigned char *)(v19 + 16) = 1;
    *(void *)(v19 + 24) = 0xD000000000000019;
    *(void *)(v19 + 32) = 0x80000001D7ABCD20;
    *(void *)(v19 + 40) = 0xD000000000000018;
    *(void *)(v19 + 48) = 0x80000001D7AC0E80;
    *(void *)(v19 + 56) = 90;
    sub_1D785D8F0();
    swift_allocError();
    *char v20 = v19;
    swift_willThrow();
    j__swift_unknownObjectRelease(v12, v11, v14, v13, v15, 0);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    return sub_1D785D944(a1);
  }
  swift_unknownObjectRelease();
  j__swift_unknownObjectRelease(v12, v11, v14, v13, v15, 0);
  uint64_t result = sub_1D785D944(a1);
  *a2 = v26;
  a2[1] = v21;
  return result;
}

uint64_t sub_1D798F4C4@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_1D798F4DC(a1, a2);
}

uint64_t sub_1D798F4DC@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  BOOL v3 = *(void *)a1 == 16 && *(unsigned char *)(a1 + 8) == 0;
  if (v3 && (sub_1D785D98C(a1 + 16, (uint64_t)v26), sub_1D785D98C((uint64_t)v26, (uint64_t)v27), (v28 & 1) == 0))
  {
    uint64_t v11 = v27[0];
    uint64_t v12 = v27[1];
    uint64_t v13 = v27[2];
    unint64_t v14 = v27[3];
    sub_1D785DA98((uint64_t)v26, (void (*)(void, void, void, void, void, void))j__swift_unknownObjectRetain);
    uint64_t v15 = sub_1D798F73C(v11, v12, v13, v14);
    uint64_t result = sub_1D785DA98((uint64_t)v26, (void (*)(void, void, void, void, void, void))j__swift_unknownObjectRelease);
    if (!v2)
    {
      int64_t v16 = *(void *)(v15 + 16);
      if (v16)
      {
        uint64_t v25 = a2;
        uint64_t v29 = MEMORY[0x1E4FBC860];
        uint64_t result = sub_1D78AB4E8(0, v16, 0);
        uint64_t v17 = v29;
        for (i = (void *)(v15 + 56); !__OFSUB__(*i >> 1, *(i - 1)); i += 4)
        {
          swift_unknownObjectRetain();
          uint64_t v19 = sub_1D7A9C098();
          uint64_t v21 = v20;
          uint64_t result = swift_unknownObjectRelease();
          uint64_t v29 = v17;
          unint64_t v23 = *(void *)(v17 + 16);
          unint64_t v22 = *(void *)(v17 + 24);
          if (v23 >= v22 >> 1)
          {
            uint64_t result = sub_1D78AB4E8(v22 > 1, v23 + 1, 1);
            uint64_t v17 = v29;
          }
          *(void *)(v17 + 16) = v23 + 1;
          uint64_t v24 = v17 + 16 * v23;
          *(void *)(v24 + 32) = v19;
          *(void *)(v24 + 40) = v21;
          if (!--v16)
          {
            uint64_t result = swift_bridgeObjectRelease();
            *uint64_t v25 = v17;
            return result;
          }
        }
        __break(1u);
      }
      else
      {
        uint64_t result = swift_bridgeObjectRelease();
        *a2 = MEMORY[0x1E4FBC860];
      }
    }
  }
  else
  {
    uint64_t v5 = sub_1D78F7D1C();
    uint64_t v7 = v6;
    type metadata accessor for ASN1Error.Backing();
    uint64_t v8 = swift_allocObject();
    *(unsigned char *)(v8 + 16) = 0;
    *(void *)(v8 + 24) = v5;
    *(void *)(v8 + 32) = v7;
    *(void *)(v8 + 40) = 0xD000000000000018;
    *(void *)(v8 + 48) = 0x80000001D7AC0E80;
    *(void *)(v8 + 56) = 107;
    sub_1D785D8F0();
    swift_allocError();
    *uint64_t v9 = v8;
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_1D798F73C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v68 = MEMORY[0x1E4FBC860];
  sub_1D78AB588(0, 0, 0);
  uint64_t v10 = v68;
  int64_t v11 = a4 >> 1;
  uint64_t v47 = a1;
  uint64_t result = swift_unknownObjectRetain();
  if (a4 >> 1 == a3)
  {
LABEL_2:
    swift_unknownObjectRelease();
    return v10;
  }
  else
  {
    uint64_t v13 = a3;
    uint64_t v45 = a4 & 1;
    uint64_t v46 = a2 + 112;
    unint64_t v49 = a4 >> 1;
    uint64_t v50 = a2;
    while (v13 < v11)
    {
      unint64_t v14 = (uint64_t *)(a2 + 96 * v13);
      uint64_t v15 = *v14;
      char v16 = *((unsigned char *)v14 + 8);
      int v17 = *((unsigned __int8 *)v14 + 24);
      uint64_t v18 = v13 + 1;
      uint64_t v52 = v10;
      long long v53 = *((_OWORD *)v14 + 3);
      long long v55 = *((_OWORD *)v14 + 2);
      if (v17 == 1)
      {
        uint64_t v19 = v14[2];
        if (v18 == v11)
        {
          uint64_t v20 = v11;
        }
        else
        {
          uint64_t v25 = (void *)(v46 + 96 * v13);
          uint64_t v20 = v13 + 1;
          do
          {
            if (v20 >= v11)
            {
LABEL_42:
              __break(1u);
LABEL_43:
              __break(1u);
              goto LABEL_44;
            }
            if (v19 >= *v25) {
              goto LABEL_16;
            }
            uint64_t v26 = v20 + 1;
            if (__OFADD__(v20, 1)) {
              goto LABEL_43;
            }
            ++v20;
            v25 += 12;
          }
          while (v26 != v11);
          uint64_t v20 = v11;
LABEL_16:
          if (v20 <= v13) {
            goto LABEL_45;
          }
          if (v20 < 0) {
            goto LABEL_46;
          }
        }
        uint64_t v27 = v20 - v18;
        if (__OFSUB__(v20, v18)) {
          goto LABEL_47;
        }
        if (v27 < 0) {
          goto LABEL_48;
        }
        uint64_t v28 = v11 - v18;
        if (__OFSUB__(v11, v18)) {
          goto LABEL_49;
        }
        uint64_t v48 = v15;
        char v29 = v16;
        if (!v27 || v28 < 0 || (uint64_t v30 = v11, v28 >= v27))
        {
          uint64_t v30 = v20;
          if (__OFADD__(v18, v27)) {
            goto LABEL_52;
          }
          if (v11 < v20) {
            goto LABEL_50;
          }
        }
        if (v30 <= v13) {
          goto LABEL_51;
        }
        if (v18 != v20)
        {
          if (v18 >= v20) {
            goto LABEL_53;
          }
          uint64_t v31 = (uint64_t *)(v46 + 96 * v13);
          do
          {
            uint64_t v32 = *v31;
            v31 += 12;
            if (v19 >= v32)
            {
              __break(1u);
              goto LABEL_42;
            }
            --v27;
          }
          while (v27);
          if (*(void *)(a2 + 96 * v18 + 16) != v19 + 1) {
            goto LABEL_54;
          }
        }
        uint64_t v57 = v5;
        uint64_t v24 = v45 | (2 * v20);
        uint64_t v21 = v47;
        swift_unknownObjectRetain();
        uint64_t v23 = a2;
        uint64_t v22 = v18;
        uint64_t v51 = v30;
        char v16 = v29;
        uint64_t v15 = v48;
      }
      else
      {
        uint64_t v57 = v5;
        uint64_t v21 = v14[8];
        if (!v21) {
          goto LABEL_55;
        }
        uint64_t v23 = v14[9];
        uint64_t v22 = v14[10];
        uint64_t v24 = v14[11];
        swift_unknownObjectRetain();
        uint64_t v19 = 0;
        uint64_t v51 = v18;
      }
      uint64_t v33 = v17 ^ 1u;
      uint64_t v58 = v15;
      char v59 = v16;
      uint64_t v60 = v21;
      uint64_t v61 = v23;
      uint64_t v62 = v22;
      uint64_t v63 = v24;
      uint64_t v64 = v19;
      char v65 = v33;
      long long v66 = v55;
      long long v67 = v53;
      swift_unknownObjectRetain();
      uint64_t v34 = v23;
      uint64_t v35 = v24;
      j__swift_unknownObjectRetain(v21, v23, v22, v24, v19, v33);
      swift_unknownObjectRetain();
      uint64_t v36 = sub_1D7A890BC((uint64_t)&v58, 22, 0);
      if (v57)
      {
        j__swift_unknownObjectRelease(v21, v23, v22, v24, v19, v33);
        uint64_t v10 = v52;
        swift_release();
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        return v10;
      }
      uint64_t v40 = v37;
      uint64_t v41 = v38;
      uint64_t v54 = v39;
      uint64_t v56 = v36;
      j__swift_unknownObjectRelease(v21, v34, v22, v35, v19, v33);
      uint64_t result = swift_unknownObjectRelease();
      uint64_t v10 = v52;
      uint64_t v68 = v52;
      unint64_t v43 = *(void *)(v52 + 16);
      unint64_t v42 = *(void *)(v52 + 24);
      if (v43 >= v42 >> 1)
      {
        uint64_t result = sub_1D78AB588(v42 > 1, v43 + 1, 1);
        uint64_t v10 = v68;
      }
      *(void *)(v10 + 16) = v43 + 1;
      uint64_t v44 = (void *)(v10 + 32 * v43);
      v44[4] = v56;
      v44[5] = v40;
      v44[6] = v41;
      v44[7] = v54;
      int64_t v11 = v49;
      a2 = v50;
      uint64_t v13 = v51;
      uint64_t v5 = 0;
      if (v51 == v49) {
        goto LABEL_2;
      }
    }
LABEL_44:
    __break(1u);
LABEL_45:
    __break(1u);
LABEL_46:
    __break(1u);
LABEL_47:
    __break(1u);
LABEL_48:
    __break(1u);
LABEL_49:
    __break(1u);
LABEL_50:
    __break(1u);
LABEL_51:
    __break(1u);
LABEL_52:
    __break(1u);
LABEL_53:
    __break(1u);
LABEL_54:
    __break(1u);
LABEL_55:
    __break(1u);
  }
  return result;
}

uint64_t static IdentityLivenessResults.supportsSecureCoding.getter()
{
  return 1;
}

uint64_t IdentityLivenessResults.livenessLabel.getter()
{
  return *(void *)(v0 + OBJC_IVAR____TtC13CoreIDVShared23IdentityLivenessResults_livenessLabel);
}

uint64_t IdentityLivenessResults.assessmentsFAC.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t IdentityLivenessResults.timestampsFAC.getter()
{
  return swift_bridgeObjectRetain();
}

float IdentityLivenessResults.assessmentTA.getter()
{
  return *(float *)(v0 + OBJC_IVAR____TtC13CoreIDVShared23IdentityLivenessResults_assessmentTA);
}

float IdentityLivenessResults.maxNccLow.getter()
{
  return *(float *)(v0 + OBJC_IVAR____TtC13CoreIDVShared23IdentityLivenessResults_maxNccLow);
}

float IdentityLivenessResults.maxNccHigh.getter()
{
  return *(float *)(v0 + OBJC_IVAR____TtC13CoreIDVShared23IdentityLivenessResults_maxNccHigh);
}

uint64_t IdentityLivenessResults.ignoredStitches.getter()
{
  return *(void *)(v0 + OBJC_IVAR____TtC13CoreIDVShared23IdentityLivenessResults_ignoredStitches);
}

uint64_t IdentityLivenessResults.assessmentsPRD.getter()
{
  return swift_bridgeObjectRetain();
}

float IdentityLivenessResults.assessmentID.getter()
{
  return *(float *)(v0 + OBJC_IVAR____TtC13CoreIDVShared23IdentityLivenessResults_assessmentID);
}

uint64_t IdentityLivenessResults.timestampsID.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t IdentityLivenessResults.timestampsButtonPressed.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t IdentityLivenessResults.luxValues.getter()
{
  return swift_bridgeObjectRetain();
}

void *IdentityLivenessResults.activeMetrics.getter()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC13CoreIDVShared23IdentityLivenessResults_activeMetrics);
  id v2 = v1;
  return v1;
}

void *IdentityLivenessResults.passiveMetrics.getter()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC13CoreIDVShared23IdentityLivenessResults_passiveMetrics);
  id v2 = v1;
  return v1;
}

id IdentityLivenessResults.__allocating_init(livenessLabel:assessmentsFAC:timestampsFAC:assessmentTA:maxNccLow:maxNccHigh:ignoredStitches:assessmentsPRD:assessmentID:timestampsID:timestampsButtonPressed:luxValues:activeMetrics:passiveMetrics:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, float a9, float a10, float a11, float a12, uint64_t a13, uint64_t a14)
{
  id v26 = objc_allocWithZone(v14);
  return IdentityLivenessResults.init(livenessLabel:assessmentsFAC:timestampsFAC:assessmentTA:maxNccLow:maxNccHigh:ignoredStitches:assessmentsPRD:assessmentID:timestampsID:timestampsButtonPressed:luxValues:activeMetrics:passiveMetrics:)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14);
}

id IdentityLivenessResults.init(livenessLabel:assessmentsFAC:timestampsFAC:assessmentTA:maxNccLow:maxNccHigh:ignoredStitches:assessmentsPRD:assessmentID:timestampsID:timestampsButtonPressed:luxValues:activeMetrics:passiveMetrics:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, float a9, float a10, float a11, float a12, uint64_t a13, uint64_t a14)
{
  ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v14[OBJC_IVAR____TtC13CoreIDVShared23IdentityLivenessResults_livenessLabel] = a1;
  *(void *)&v14[OBJC_IVAR____TtC13CoreIDVShared23IdentityLivenessResults_assessmentsFAC] = a2;
  *(void *)&v14[OBJC_IVAR____TtC13CoreIDVShared23IdentityLivenessResults_timestampsFAC] = a3;
  *(float *)&v14[OBJC_IVAR____TtC13CoreIDVShared23IdentityLivenessResults_assessmentTA] = a9;
  *(float *)&v14[OBJC_IVAR____TtC13CoreIDVShared23IdentityLivenessResults_maxNccLow] = a10;
  *(float *)&v14[OBJC_IVAR____TtC13CoreIDVShared23IdentityLivenessResults_maxNccHigh] = a11;
  *(void *)&v14[OBJC_IVAR____TtC13CoreIDVShared23IdentityLivenessResults_ignoredStitches] = a4;
  *(void *)&v14[OBJC_IVAR____TtC13CoreIDVShared23IdentityLivenessResults_assessmentsPRD] = a5;
  *(float *)&v14[OBJC_IVAR____TtC13CoreIDVShared23IdentityLivenessResults_assessmentID] = a12;
  *(void *)&v14[OBJC_IVAR____TtC13CoreIDVShared23IdentityLivenessResults_timestampsID] = a6;
  *(void *)&v14[OBJC_IVAR____TtC13CoreIDVShared23IdentityLivenessResults_timestampsButtonPressed] = a7;
  *(void *)&v14[OBJC_IVAR____TtC13CoreIDVShared23IdentityLivenessResults_luxValues] = a8;
  *(void *)&v14[OBJC_IVAR____TtC13CoreIDVShared23IdentityLivenessResults_activeMetrics] = a13;
  *(void *)&v14[OBJC_IVAR____TtC13CoreIDVShared23IdentityLivenessResults_passiveMetrics] = a14;
  v29.receiver = v14;
  v29.super_class = ObjectType;
  return objc_msgSendSuper2(&v29, sel_init);
}

id IdentityLivenessResults.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  id v4 = sub_1D799169C(a1);

  return v4;
}

id IdentityLivenessResults.init(coder:)(void *a1)
{
  id v2 = sub_1D799169C(a1);

  return v2;
}

uint64_t sub_1D798FEBC(unint64_t a1, void (*a2)(void, uint64_t, void), void (*a3)(void))
{
  unint64_t v6 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1D7A9CFB8();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v7 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v13 = MEMORY[0x1E4FBC860];
  a2(0, v7 & ~(v7 >> 63), 0);
  uint64_t v8 = v13;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1D7A9CFB8();
    swift_bridgeObjectRelease();
    if (!v10) {
      return v8;
    }
  }
  else if (!*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    return v8;
  }
  if ((a1 & 0xC000000000000001) != 0)
  {
    MEMORY[0x1D947BA10](0, a1);
    a3();
    swift_unknownObjectRelease();
  }
  else
  {
    id v11 = *(id *)(a1 + 32);
    a3();
  }
  swift_release();
  return 0;
}

Swift::Void __swiftcall IdentityLivenessResults.encode(with:)(NSCoder with)
{
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC13CoreIDVShared23IdentityLivenessResults_livenessLabel);
  id v4 = (void *)sub_1D7A9BF98();
  [(objc_class *)with.super.isa encodeInteger:v3 forKey:v4];

  uint64_t v5 = (void *)sub_1D7A9C2F8();
  unint64_t v6 = (void *)sub_1D7A9BF98();
  [(objc_class *)with.super.isa encodeObject:v5 forKey:v6];

  type metadata accessor for GestureTimestamps();
  uint64_t v7 = (void *)sub_1D7A9C2F8();
  uint64_t v8 = (void *)sub_1D7A9BF98();
  [(objc_class *)with.super.isa encodeObject:v7 forKey:v8];

  int v9 = *(_DWORD *)(v1 + OBJC_IVAR____TtC13CoreIDVShared23IdentityLivenessResults_assessmentTA);
  uint64_t v10 = (void *)sub_1D7A9BF98();
  LODWORD(v11) = v9;
  [(objc_class *)with.super.isa encodeFloat:v10 forKey:v11];

  int v12 = *(_DWORD *)(v1 + OBJC_IVAR____TtC13CoreIDVShared23IdentityLivenessResults_maxNccLow);
  uint64_t v13 = (void *)sub_1D7A9BF98();
  LODWORD(v14) = v12;
  [(objc_class *)with.super.isa encodeFloat:v13 forKey:v14];

  int v15 = *(_DWORD *)(v1 + OBJC_IVAR____TtC13CoreIDVShared23IdentityLivenessResults_maxNccHigh);
  char v16 = (void *)sub_1D7A9BF98();
  LODWORD(v17) = v15;
  [(objc_class *)with.super.isa encodeFloat:v16 forKey:v17];

  uint64_t v18 = *(void *)(v1 + OBJC_IVAR____TtC13CoreIDVShared23IdentityLivenessResults_ignoredStitches);
  uint64_t v19 = (void *)sub_1D7A9BF98();
  [(objc_class *)with.super.isa encodeInteger:v18 forKey:v19];

  type metadata accessor for PRDMetadata();
  uint64_t v20 = (void *)sub_1D7A9C2F8();
  uint64_t v21 = (void *)sub_1D7A9BF98();
  [(objc_class *)with.super.isa encodeObject:v20 forKey:v21];

  int v22 = *(_DWORD *)(v1 + OBJC_IVAR____TtC13CoreIDVShared23IdentityLivenessResults_assessmentID);
  uint64_t v23 = (void *)sub_1D7A9BF98();
  LODWORD(v24) = v22;
  [(objc_class *)with.super.isa encodeFloat:v23 forKey:v24];

  uint64_t v25 = (void *)sub_1D7A9C2F8();
  id v26 = (void *)sub_1D7A9BF98();
  [(objc_class *)with.super.isa encodeObject:v25 forKey:v26];

  uint64_t v27 = (void *)sub_1D7A9C2F8();
  uint64_t v28 = (void *)sub_1D7A9BF98();
  [(objc_class *)with.super.isa encodeObject:v27 forKey:v28];

  objc_super v29 = (void *)sub_1D7A9C2F8();
  uint64_t v30 = (void *)sub_1D7A9BF98();
  [(objc_class *)with.super.isa encodeObject:v29 forKey:v30];

  uint64_t v31 = *(void *)(v1 + OBJC_IVAR____TtC13CoreIDVShared23IdentityLivenessResults_activeMetrics);
  uint64_t v32 = (void *)sub_1D7A9BF98();
  [(objc_class *)with.super.isa encodeObject:v31 forKey:v32];

  uint64_t v33 = *(void *)(v1 + OBJC_IVAR____TtC13CoreIDVShared23IdentityLivenessResults_passiveMetrics);
  id v34 = (id)sub_1D7A9BF98();
  [(objc_class *)with.super.isa encodeObject:v33 forKey:v34];
}

uint64_t IdentityLivenessResults.debugDescription.getter()
{
  uint64_t v1 = v0;
  sub_1D7A9CC48();
  sub_1D7A9C128();
  uint64_t v2 = MEMORY[0x1E4FBB550];
  sub_1D7A9D258();
  sub_1D7A9C128();
  swift_bridgeObjectRelease();
  sub_1D7A9C128();
  MEMORY[0x1D947B0A0](*(void *)(v0 + OBJC_IVAR____TtC13CoreIDVShared23IdentityLivenessResults_assessmentsFAC), v2);
  sub_1D7A9C128();
  swift_bridgeObjectRelease();
  sub_1D7A9C128();
  uint64_t v3 = *(void *)(v0 + OBJC_IVAR____TtC13CoreIDVShared23IdentityLivenessResults_timestampsFAC);
  uint64_t v4 = type metadata accessor for GestureTimestamps();
  MEMORY[0x1D947B0A0](v3, v4);
  sub_1D7A9C128();
  swift_bridgeObjectRelease();
  sub_1D7A9C128();
  sub_1D7A9C608();
  sub_1D7A9C128();
  sub_1D7A9C608();
  sub_1D7A9C128();
  sub_1D7A9C608();
  sub_1D7A9C128();
  sub_1D7A9D258();
  sub_1D7A9C128();
  swift_bridgeObjectRelease();
  sub_1D7A9C128();
  uint64_t v5 = *(void *)(v1 + OBJC_IVAR____TtC13CoreIDVShared23IdentityLivenessResults_assessmentsPRD);
  uint64_t v6 = type metadata accessor for PRDMetadata();
  MEMORY[0x1D947B0F0](v5, v6);
  sub_1D7A9C128();
  swift_bridgeObjectRelease();
  sub_1D7A9C128();
  sub_1D7A9C608();
  sub_1D7A9C128();
  uint64_t v7 = MEMORY[0x1E4FBC538];
  MEMORY[0x1D947B0A0](*(void *)(v1 + OBJC_IVAR____TtC13CoreIDVShared23IdentityLivenessResults_timestampsID), MEMORY[0x1E4FBC538]);
  sub_1D7A9C128();
  swift_bridgeObjectRelease();
  sub_1D7A9C128();
  MEMORY[0x1D947B0A0](*(void *)(v1 + OBJC_IVAR____TtC13CoreIDVShared23IdentityLivenessResults_timestampsButtonPressed), v7);
  sub_1D7A9C128();
  swift_bridgeObjectRelease();
  sub_1D7A9C128();
  MEMORY[0x1D947B0A0](*(void *)(v1 + OBJC_IVAR____TtC13CoreIDVShared23IdentityLivenessResults_luxValues), v2);
  sub_1D7A9C128();
  swift_bridgeObjectRelease();
  sub_1D7A9C128();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA845A50);
  sub_1D7A9C998();
  sub_1D7A9C128();
  swift_bridgeObjectRelease();
  sub_1D7A9C128();
  sub_1D7A9C998();
  sub_1D7A9C128();
  swift_bridgeObjectRelease();
  return 0;
}

void IdentityLivenessResults.init()()
{
}

uint64_t static GestureTimestamps.supportsSecureCoding.getter()
{
  return 1;
}

uint64_t GestureTimestamps.timestamps.getter()
{
  return swift_bridgeObjectRetain();
}

id GestureTimestamps.__allocating_init(timestamps:)(uint64_t a1)
{
  uint64_t v3 = (char *)objc_allocWithZone(v1);
  *(void *)&v3[OBJC_IVAR____TtC13CoreIDVShared17GestureTimestamps_timestamps] = a1;
  v5.receiver = v3;
  v5.super_class = v1;
  return objc_msgSendSuper2(&v5, sel_init);
}

id GestureTimestamps.init(timestamps:)(uint64_t a1)
{
  ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v1[OBJC_IVAR____TtC13CoreIDVShared17GestureTimestamps_timestamps] = a1;
  v5.receiver = v1;
  v5.super_class = ObjectType;
  return objc_msgSendSuper2(&v5, sel_init);
}

id GestureTimestamps.__allocating_init(coder:)(void *a1)
{
  uint64_t v2 = v1;
  id v4 = objc_allocWithZone(v2);
  sub_1D78C4038(0, (unint64_t *)&qword_1EBDF93C0);
  objc_super v5 = (char *)v4;
  unint64_t v6 = sub_1D7A9C928();
  if (!v6
    || (uint64_t v7 = sub_1D798FEBC(v6, (void (*)(void, uint64_t, void))sub_1D78AB630, MEMORY[0x1E4F28180]),
        swift_bridgeObjectRelease(),
        !v7))
  {
    swift_bridgeObjectRelease();
    uint64_t v7 = MEMORY[0x1E4FBC860];
  }
  *(void *)&v5[OBJC_IVAR____TtC13CoreIDVShared17GestureTimestamps_timestamps] = v7;

  v10.receiver = v5;
  v10.super_class = v2;
  id v8 = objc_msgSendSuper2(&v10, sel_init);

  return v8;
}

id GestureTimestamps.init(coder:)(void *a1)
{
  id v2 = sub_1D7991D6C();

  return v2;
}

Swift::Void __swiftcall GestureTimestamps.encode(with:)(NSCoder with)
{
  id v2 = (void *)sub_1D7A9C2F8();
  id v3 = (id)sub_1D7A9BF98();
  [(objc_class *)with.super.isa encodeObject:v2 forKey:v3];
}

void GestureTimestamps.debugDescription.getter()
{
}

void GestureTimestamps.init()()
{
}

uint64_t static PRDMetadata.supportsSecureCoding.getter()
{
  return 1;
}

float PRDMetadata.stage2.getter()
{
  return *(float *)(v0 + OBJC_IVAR____TtC13CoreIDVShared11PRDMetadata_stage2);
}

uint64_t PRDMetadata.timestamp.getter()
{
  return *(void *)(v0 + OBJC_IVAR____TtC13CoreIDVShared11PRDMetadata_timestamp);
}

id PRDMetadata.__allocating_init(stage2:timestamp:)(uint64_t a1, float a2)
{
  objc_super v5 = (char *)objc_allocWithZone(v2);
  *(float *)&v5[OBJC_IVAR____TtC13CoreIDVShared11PRDMetadata_stage2] = a2;
  *(void *)&v5[OBJC_IVAR____TtC13CoreIDVShared11PRDMetadata_timestamp] = a1;
  v7.receiver = v5;
  v7.super_class = v2;
  return objc_msgSendSuper2(&v7, sel_init);
}

id PRDMetadata.init(stage2:timestamp:)(uint64_t a1, float a2)
{
  ObjectType = (objc_class *)swift_getObjectType();
  *(float *)&v2[OBJC_IVAR____TtC13CoreIDVShared11PRDMetadata_stage2] = a2;
  *(void *)&v2[OBJC_IVAR____TtC13CoreIDVShared11PRDMetadata_timestamp] = a1;
  v7.receiver = v2;
  v7.super_class = ObjectType;
  return objc_msgSendSuper2(&v7, sel_init);
}

id PRDMetadata.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  id v4 = sub_1D7991E74(a1);

  return v4;
}

id PRDMetadata.init(coder:)(void *a1)
{
  id v2 = sub_1D7991E74(a1);

  return v2;
}

Swift::Void __swiftcall PRDMetadata.encode(with:)(NSCoder with)
{
  int v3 = *(_DWORD *)(v1 + OBJC_IVAR____TtC13CoreIDVShared11PRDMetadata_stage2);
  id v4 = (void *)sub_1D7A9BF98();
  LODWORD(v5) = v3;
  [(objc_class *)with.super.isa encodeFloat:v4 forKey:v5];

  unint64_t v6 = (void *)sub_1D7A9D648();
  id v7 = (id)sub_1D7A9BF98();
  [(objc_class *)with.super.isa encodeObject:v6 forKey:v7];
}

id sub_1D79914A0(void *a1, uint64_t a2, void (*a3)(void))
{
  id v4 = a1;
  a3();

  double v5 = (void *)sub_1D7A9BF98();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t PRDMetadata.debugDescription.getter()
{
  return 0x3A3265676174730ALL;
}

id PRDMetadata.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void PRDMetadata.init()()
{
}

id sub_1D799169C(void *a1)
{
  id v2 = v1;
  ObjectType = (objc_class *)swift_getObjectType();
  id v4 = v2;
  double v5 = (void *)sub_1D7A9BF98();
  id v6 = objc_msgSend(a1, sel_decodeIntegerForKey_, v5);

  *(void *)&v4[OBJC_IVAR____TtC13CoreIDVShared23IdentityLivenessResults_livenessLabel] = v6;
  sub_1D78C4038(0, (unint64_t *)&qword_1EBDF93C0);
  unint64_t v7 = sub_1D7A9C928();
  if (!v7
    || (uint64_t v8 = sub_1D798FEBC(v7, (void (*)(void, uint64_t, void))sub_1D78AB608, MEMORY[0x1E4F27F40]),
        swift_bridgeObjectRelease(),
        !v8))
  {
    swift_bridgeObjectRelease();
    uint64_t v8 = MEMORY[0x1E4FBC860];
  }
  *(void *)&v4[OBJC_IVAR____TtC13CoreIDVShared23IdentityLivenessResults_assessmentsFAC] = v8;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA843600);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1D7AA0A40;
  uint64_t v10 = sub_1D78C4038(0, (unint64_t *)&qword_1EBDF90E0);
  *(void *)(v9 + 32) = v10;
  *(void *)(v9 + 40) = type metadata accessor for GestureTimestamps();
  sub_1D7A9C918();
  swift_bridgeObjectRelease();
  if (v39)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA845A88);
    if (swift_dynamicCast())
    {
      uint64_t v11 = v36;
      goto LABEL_9;
    }
  }
  else
  {
    sub_1D7867598((uint64_t)v38);
  }
  uint64_t v11 = MEMORY[0x1E4FBC860];
LABEL_9:
  *(void *)&v4[OBJC_IVAR____TtC13CoreIDVShared23IdentityLivenessResults_timestampsFAC] = v11;
  int v12 = (void *)sub_1D7A9BF98();
  objc_msgSend(a1, sel_decodeFloatForKey_, v12);
  int v14 = v13;

  *(_DWORD *)&v4[OBJC_IVAR____TtC13CoreIDVShared23IdentityLivenessResults_assessmentTA] = v14;
  int v15 = (void *)sub_1D7A9BF98();
  objc_msgSend(a1, sel_decodeFloatForKey_, v15);
  int v17 = v16;

  *(_DWORD *)&v4[OBJC_IVAR____TtC13CoreIDVShared23IdentityLivenessResults_maxNccLow] = v17;
  uint64_t v18 = (void *)sub_1D7A9BF98();
  objc_msgSend(a1, sel_decodeFloatForKey_, v18);
  int v20 = v19;

  *(_DWORD *)&v4[OBJC_IVAR____TtC13CoreIDVShared23IdentityLivenessResults_maxNccHigh] = v20;
  uint64_t v21 = (void *)sub_1D7A9BF98();
  id v22 = objc_msgSend(a1, sel_decodeIntegerForKey_, v21);

  *(void *)&v4[OBJC_IVAR____TtC13CoreIDVShared23IdentityLivenessResults_ignoredStitches] = v22;
  uint64_t v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_1D7AA0A40;
  *(void *)(v23 + 32) = v10;
  *(void *)(v23 + 40) = type metadata accessor for PRDMetadata();
  sub_1D7A9C918();
  swift_bridgeObjectRelease();
  if (!v39)
  {
    sub_1D7867598((uint64_t)v38);
    goto LABEL_13;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA845A80);
  if (!swift_dynamicCast())
  {
LABEL_13:
    uint64_t v24 = MEMORY[0x1E4FBC860];
    goto LABEL_14;
  }
  uint64_t v24 = v36;
LABEL_14:
  *(void *)&v4[OBJC_IVAR____TtC13CoreIDVShared23IdentityLivenessResults_assessmentsPRD] = v24;
  uint64_t v25 = (void *)sub_1D7A9BF98();
  objc_msgSend(a1, sel_decodeFloatForKey_, v25);
  int v27 = v26;

  *(_DWORD *)&v4[OBJC_IVAR____TtC13CoreIDVShared23IdentityLivenessResults_assessmentID] = v27;
  unint64_t v28 = sub_1D7A9C928();
  if (!v28
    || (uint64_t v29 = sub_1D798FEBC(v28, (void (*)(void, uint64_t, void))sub_1D78AB630, MEMORY[0x1E4F28180]),
        swift_bridgeObjectRelease(),
        !v29))
  {
    swift_bridgeObjectRelease();
    uint64_t v29 = MEMORY[0x1E4FBC860];
  }
  *(void *)&v4[OBJC_IVAR____TtC13CoreIDVShared23IdentityLivenessResults_timestampsID] = v29;
  unint64_t v30 = sub_1D7A9C928();
  if (!v30
    || (uint64_t v31 = sub_1D798FEBC(v30, (void (*)(void, uint64_t, void))sub_1D78AB630, MEMORY[0x1E4F28180]),
        swift_bridgeObjectRelease(),
        !v31))
  {
    swift_bridgeObjectRelease();
    uint64_t v31 = MEMORY[0x1E4FBC860];
  }
  *(void *)&v4[OBJC_IVAR____TtC13CoreIDVShared23IdentityLivenessResults_timestampsButtonPressed] = v31;
  unint64_t v32 = sub_1D7A9C928();
  if (!v32
    || (uint64_t v33 = sub_1D798FEBC(v32, (void (*)(void, uint64_t, void))sub_1D78AB608, MEMORY[0x1E4F27F40]),
        swift_bridgeObjectRelease(),
        !v33))
  {
    swift_bridgeObjectRelease();
    uint64_t v33 = MEMORY[0x1E4FBC860];
  }
  *(void *)&v4[OBJC_IVAR____TtC13CoreIDVShared23IdentityLivenessResults_luxValues] = v33;
  type metadata accessor for IdentityImageQualityMetrics();
  *(void *)&v4[OBJC_IVAR____TtC13CoreIDVShared23IdentityLivenessResults_activeMetrics] = sub_1D7A9C908();
  *(void *)&v4[OBJC_IVAR____TtC13CoreIDVShared23IdentityLivenessResults_passiveMetrics] = sub_1D7A9C908();

  v37.receiver = v4;
  v37.super_class = ObjectType;
  return objc_msgSendSuper2(&v37, sel_init);
}

uint64_t type metadata accessor for GestureTimestamps()
{
  return self;
}

uint64_t type metadata accessor for PRDMetadata()
{
  return self;
}

id sub_1D7991D6C()
{
  ObjectType = (objc_class *)swift_getObjectType();
  sub_1D78C4038(0, (unint64_t *)&qword_1EBDF93C0);
  id v2 = v0;
  unint64_t v3 = sub_1D7A9C928();
  if (!v3
    || (uint64_t v4 = sub_1D798FEBC(v3, (void (*)(void, uint64_t, void))sub_1D78AB630, MEMORY[0x1E4F28180]),
        swift_bridgeObjectRelease(),
        !v4))
  {
    swift_bridgeObjectRelease();
    uint64_t v4 = MEMORY[0x1E4FBC860];
  }
  *(void *)&v2[OBJC_IVAR____TtC13CoreIDVShared17GestureTimestamps_timestamps] = v4;

  v6.receiver = v2;
  v6.super_class = ObjectType;
  return objc_msgSendSuper2(&v6, sel_init);
}

id sub_1D7991E74(void *a1)
{
  ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v4 = v1;
  double v5 = (void *)sub_1D7A9BF98();
  objc_msgSend(a1, sel_decodeFloatForKey_, v5);
  int v7 = v6;

  *(_DWORD *)&v4[OBJC_IVAR____TtC13CoreIDVShared11PRDMetadata_stage2] = v7;
  sub_1D78C4038(0, (unint64_t *)&qword_1EBDF93C0);
  uint64_t v8 = sub_1D7A9C908();
  if (v8)
  {
    uint64_t v9 = (void *)v8;
    sub_1D7A9D658();
  }
  *(void *)&v4[OBJC_IVAR____TtC13CoreIDVShared11PRDMetadata_timestamp] = 0;

  v11.receiver = v4;
  v11.super_class = ObjectType;
  return objc_msgSendSuper2(&v11, sel_init);
}

unint64_t sub_1D7991F98()
{
  unint64_t result = qword_1EA845A78;
  if (!qword_1EA845A78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA845A78);
  }
  return result;
}

uint64_t type metadata accessor for IdentityLivenessResults()
{
  return self;
}

uint64_t method lookup function for IdentityLivenessResults(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for IdentityLivenessResults);
}

uint64_t dispatch thunk of IdentityLivenessResults.__allocating_init(livenessLabel:assessmentsFAC:timestampsFAC:assessmentTA:maxNccLow:maxNccHigh:ignoredStitches:assessmentsPRD:assessmentID:timestampsID:timestampsButtonPressed:luxValues:activeMetrics:passiveMetrics:)()
{
  return (*(uint64_t (**)(void))(v0 + 192))();
}

uint64_t dispatch thunk of IdentityLivenessResults.__allocating_init(coder:)()
{
  return (*(uint64_t (**)(void))(v0 + 200))();
}

uint64_t method lookup function for GestureTimestamps(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for GestureTimestamps);
}

uint64_t dispatch thunk of GestureTimestamps.__allocating_init(timestamps:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of GestureTimestamps.__allocating_init(coder:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t method lookup function for PRDMetadata(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for PRDMetadata);
}

uint64_t dispatch thunk of PRDMetadata.__allocating_init(stage2:timestamp:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of PRDMetadata.__allocating_init(coder:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

void __swiftcall PDF417Parser.init(pdf417ParsingConfigs:)(CoreIDVShared::PDF417Parser *__return_ptr retstr, Swift::OpaquePointer_optional pdf417ParsingConfigs)
{
  if (!pdf417ParsingConfigs.value._rawValue)
  {
    if (qword_1EA8414D0 != -1) {
      swift_once();
    }
    pdf417ParsingConfigs.value._rawValue = (void *)swift_bridgeObjectRetain();
  }
  int64x2_t v3 = vdupq_n_s64(2uLL);
  *(_OWORD *)&retstr->HEADER_SIZE = xmmword_1D7AA97A0;
  *(int64x2_t *)&retstr->AAMVA_VERSION_NUM_SIZE = v3;
  *(int64x2_t *)&retstr->NUM_OF_ENTRIES_SIZE = v3;
  *(int64x2_t *)&retstr->SUBFILE_OFFSET_SIZE = vdupq_n_s64(4uLL);
  *(_OWORD *)&retstr->SUBFILE_OFFSET = xmmword_1D7AA9720;
  retstr->DL_SUBFILE._countAndFlagsBits = 19524;
  retstr->DL_SUBFILE._object = (void *)0xE200000000000000;
  retstr->ID_SUBFILE._countAndFlagsBits = 17481;
  retstr->ID_SUBFILE._object = (void *)0xE200000000000000;
  retstr->pdf417ParsingConfigs._rawValue = pdf417ParsingConfigs.value._rawValue;
}

void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> PDF417Parser.parse(payload:)(CoreIDVShared::PDF417ParsedData *__return_ptr retstr, Swift::String payload)
{
  object = payload._object;
  uint64_t countAndFlagsBits = payload._countAndFlagsBits;
  v202 = retstr;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA845A98);
  MEMORY[0x1F4188790](v4 - 8, v5, v6, v7, v8, v9, v10, v11);
  unsigned int v227 = (char *)&v200 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v240 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA845AA0);
  uint64_t v236 = *(uint64_t **)(v240 - 8);
  uint64_t v20 = MEMORY[0x1F4188790](v240, v13, v14, v15, v16, v17, v18, v19);
  uint64_t v233 = (char *)&v200 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v20, v22, v23, v24, v25, v26, v27, v28);
  uint64_t v239 = (char *)&v200 - v29;
  uint64_t v30 = sub_1D7A9B5F8();
  uint64_t v31 = *(void *)(v30 - 8);
  uint64_t v39 = MEMORY[0x1F4188790](v30, v32, v33, v34, v35, v36, v37, v38);
  uint64_t v225 = (char *)&v200 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = MEMORY[0x1F4188790](v39, v41, v42, v43, v44, v45, v46, v47);
  v201 = (char *)&v200 - v49;
  uint64_t v57 = MEMORY[0x1F4188790](v48, v50, v51, v52, v53, v54, v55, v56);
  v215 = (char *)&v200 - v58;
  uint64_t v66 = MEMORY[0x1F4188790](v57, v59, v60, v61, v62, v63, v64, v65);
  v216 = (char *)&v200 - v67;
  uint64_t v75 = MEMORY[0x1F4188790](v66, v68, v69, v70, v71, v72, v73, v74);
  v238 = (char *)&v200 - v76;
  MEMORY[0x1F4188790](v75, v77, v78, v79, v80, v81, v82, v83);
  uint64_t v85 = (char *)&v200 - v84;
  uint64_t v86 = *v2;
  double v87 = (void *)v2[1];
  uint64_t v213 = v2[2];
  v214 = v87;
  v88 = (void *)v2[3];
  uint64_t v210 = v86;
  BOOL v211 = v88;
  uint64_t v212 = v2[4];
  uint64_t v89 = (void *)v2[5];
  uint64_t v208 = v2[6];
  v209 = v89;
  uint64_t v90 = (void *)v2[7];
  uint64_t v206 = v2[8];
  uint64_t v207 = v90;
  char v91 = (void *)v2[9];
  uint64_t v204 = v2[10];
  v205 = v91;
  char v92 = (void *)v2[11];
  uint64_t v203 = v2[12];
  unint64_t v93 = v2[14];
  uint64_t v217 = (void *)v2[13];
  v218 = v92;
  if (qword_1EBDF9DC8 != -1) {
    swift_once();
  }
  uint64_t v94 = __swift_project_value_buffer(v30, (uint64_t)qword_1EBDFBE70);
  swift_beginAccess();
  uint64_t v96 = v31 + 16;
  uint64_t v95 = *(void (**)(char *, uint64_t, uint64_t))(v31 + 16);
  v95(v85, v94, v30);
  swift_bridgeObjectRetain();
  sub_1D7925404();
  swift_bridgeObjectRelease();
  unint64_t v98 = *(void (**)(char *, uint64_t))(v31 + 8);
  uint64_t v97 = v31 + 8;
  v234 = v98;
  v98(v85, v30);
  uint64_t v230 = v96;
  uint64_t v231 = v94;
  v229 = v95;
  v95(v238, v94, v30);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v99 = sub_1D7A9B5D8();
  os_log_type_t v100 = sub_1D7A9C748();
  BOOL v101 = os_log_type_enabled(v99, v100);
  unint64_t v102 = v93 >> 62;
  uint64_t v237 = v30;
  uint64_t v232 = v93;
  if (v101)
  {
    __int16 v103 = object;
    uint64_t v104 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v104 = 134217984;
    uint64_t v105 = v232;
    if (v102)
    {
      swift_bridgeObjectRetain();
      uint64_t v106 = sub_1D7A9CFB8();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v106 = *(void *)((v232 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    v243.docType._uint64_t countAndFlagsBits = v106;
    sub_1D7A9C9E8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D7853000, v99, v100, "pdf417ParsingConfigs = %ld", v104, 0xCu);
    MEMORY[0x1D947D740](v104, -1, -1);

    uint64_t v30 = v237;
    object = v103;
    uint64_t v107 = v105;
  }
  else
  {
    uint64_t v107 = v93;

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v234(v238, v30);
  if (!v102)
  {
    uint64_t v108 = *(void *)((v107 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    id v110 = v233;
    if (v108) {
      goto LABEL_10;
    }
LABEL_56:
    swift_bridgeObjectRelease();
    LOWORD(v243.docType._countAndFlagsBits) = 357;
    unint64_t v198 = sub_1D785EAF8(MEMORY[0x1E4FBC860]);
    sub_1D7860544();
    swift_allocError();
    DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xD00000000000001BLL, 0x80000001D7AC5DA0, (__int16 *)&v243, 0, v198, 0xD00000000000005CLL, 0x80000001D7AC5D40, v199, 0x6170286573726170, 0xEF293A64616F6C79, 94);
    swift_willThrow();
    return;
  }
  swift_bridgeObjectRetain();
  uint64_t v108 = sub_1D7A9CFB8();
  id v110 = v233;
  if (!v108) {
    goto LABEL_56;
  }
LABEL_10:
  unint64_t v226 = v107 & 0xC000000000000001;
  v222 = (void (**)(char *, uint64_t))(v236 + 1);
  v223 = (void (**)(char *, char *, uint64_t))(v236 + 4);
  uint64_t v111 = 4;
  *(void *)&long long v109 = 136315138;
  long long v220 = v109;
  uint64_t v219 = MEMORY[0x1E4FBC840] + 8;
  uint64_t v224 = v97;
  v228 = object;
  unint64_t v221 = (char *)v108;
  while (1)
  {
    uint64_t v114 = v226 ? (char *)MEMORY[0x1D947BA10](v111 - 4, v107) : (char *)*(id *)(v107 + 8 * v111);
    v115 = v114;
    v116 = (void *)(v111 - 3);
    if (__OFADD__(v111 - 4, 1)) {
      break;
    }
    uint64_t v117 = (uint64_t *)&v114[OBJC_IVAR____TtC13CoreIDVShared19PDF417ParsingConfig_aamvaHeader];
    swift_bridgeObjectRetain();
    unint64_t v118 = v241;
    sub_1D7A9B518();
    if (v118)
    {
      swift_bridgeObjectRelease();
      LOWORD(v243.docType._countAndFlagsBits) = 356;
      id v132 = v118;
      unint64_t v133 = sub_1D785EAF8(MEMORY[0x1E4FBC860]);
      sub_1D7860544();
      swift_allocError();
      DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(v118, 0xD00000000000001ALL, 0x80000001D7AC5D20, (__int16 *)&v243, 0, v133, 0xD00000000000005CLL, 0x80000001D7AC5D40, v134, 0x6170286573726170, 0xEF293A64616F6C79, 57);
      swift_willThrow();

      return;
    }
    uint64_t v236 = v117;
    double v119 = v115;
    v238 = (char *)(v111 - 3);
    v241 = 0;
    (*v223)(v239, v110, v240);
    v243.docType._uint64_t countAndFlagsBits = countAndFlagsBits;
    v243.docType._object = object;
    sub_1D7A9B4C8();
    sub_1D792A744();
    sub_1D799412C();
    uint64_t v120 = (uint64_t)v227;
    sub_1D7A9BF18();
    uint64_t v121 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA845AB0);
    uint64_t v122 = *(void *)(v121 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v122 + 48))(v120, 1, v121) != 1)
    {
      sub_1D7A9B508();
      (*(void (**)(uint64_t, uint64_t))(v122 + 8))(v120, v121);
      uint64_t v135 = sub_1D7A9C1E8();
      v137 = v136;
      uint64_t v233 = v138;
      uint64_t v140 = v139;
      uint64_t v141 = v216;
      uint64_t v142 = v237;
      v229(v216, v231, v237);
      swift_bridgeObjectRetain_n();
      os_log_type_t v143 = v119;
      v144 = sub_1D7A9B5D8();
      os_log_type_t v145 = sub_1D7A9C748();
      int v146 = v145;
      BOOL v147 = os_log_type_enabled(v144, v145);
      v238 = v143;
      if (v147)
      {
        uint64_t v148 = swift_slowAlloc();
        LODWORD(v227) = v146;
        double v149 = v143;
        uint64_t v150 = v148;
        uint64_t v151 = swift_slowAlloc();
        v243.docType._uint64_t countAndFlagsBits = v151;
        *(_DWORD *)uint64_t v150 = 136315394;
        swift_bridgeObjectRetain();
        uint64_t v152 = MEMORY[0x1D947AE00](v135, v137, v233, v140);
        uint64_t v233 = v137;
        unint64_t v154 = v153;
        swift_bridgeObjectRelease();
        v244[0] = sub_1D7923300(v152, v154, &v243.docType._countAndFlagsBits);
        sub_1D7A9C9E8();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v150 + 12) = 2080;
        uint64_t v155 = *v236;
        unint64_t v156 = v236[1];
        swift_bridgeObjectRetain();
        v244[0] = sub_1D7923300(v155, v156, &v243.docType._countAndFlagsBits);
        uint64_t v142 = v237;
        sub_1D7A9C9E8();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1D7853000, v144, (os_log_type_t)v227, "found header = %s, config header: %s", (uint8_t *)v150, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1D947D740](v151, -1, -1);
        MEMORY[0x1D947D740](v150, -1, -1);

        v234(v216, v142);
      }
      else
      {

        swift_bridgeObjectRelease_n();
        v234(v141, v142);
      }
      swift_bridgeObjectRelease();
      uint64_t v158 = v214;
      uint64_t v157 = v215;
      uint64_t v245 = sub_1D7A9C198();
      v229(v157, v231, v142);
      id v159 = sub_1D7A9B5D8();
      os_log_type_t v160 = sub_1D7A9C748();
      if (os_log_type_enabled(v159, v160))
      {
        unint64_t v161 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)unint64_t v161 = 134217984;
        swift_beginAccess();
        v243.docType._uint64_t countAndFlagsBits = v245;
        sub_1D7A9C9E8();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1D7853000, v159, v160, "current index after AAVMA header = %ld", v161, 0xCu);
        MEMORY[0x1D947D740](v161, -1, -1);

        v234(v215, v237);
      }
      else
      {

        v234(v157, v142);
        swift_bridgeObjectRelease();
      }
      swift_beginAccess();
      uint64_t v162 = (uint64_t)v158 + v245;
      uint64_t v163 = (uint64_t)v228;
      uint64_t v164 = countAndFlagsBits;
      if (__OFADD__(v245, v158))
      {
        __break(1u);
      }
      else
      {
        uint64_t v165 = v241;
        unint64_t v166 = sub_1D7993EDC(countAndFlagsBits, (uint64_t)v228, v245, (uint64_t)v158 + v245);
        uint64_t v168 = v213;
        if (v165)
        {
          swift_endAccess();

          (*v222)(v239, v240);
          return;
        }
        uint64_t v108 = v166;
        v116 = v167;
        uint64_t v245 = v162;
        swift_endAccess();
        swift_beginAccess();
        uint64_t v169 = v245 + v168;
        if (!__OFADD__(v245, v168))
        {
          v115 = (void *)sub_1D7993EDC(v164, v163, v245, v169);
          BOOL v171 = v170;
          uint64_t v245 = v169;
          swift_endAccess();
          if (v115 == (void *)12336 && v171 == (void *)0xE200000000000000)
          {
            uint64_t v233 = 0;
            uint64_t v236 = 0;
            uint64_t v172 = v212;
            goto LABEL_46;
          }
          char v173 = sub_1D7A9D358();
          BOOL v175 = v115 == (void *)12592 && v171 == (void *)0xE200000000000000;
          uint64_t v172 = v212;
          if ((v173 & 1) != 0 || (unint64_t v176 = v211, v175))
          {
            uint64_t v233 = 0;
            uint64_t v236 = 0;
            goto LABEL_46;
          }
          if (sub_1D7A9D358())
          {
            uint64_t v233 = 0;
            uint64_t v236 = 0;
            goto LABEL_46;
          }
          swift_beginAccess();
          uint64_t v184 = (uint64_t)v176 + v245;
          if (!__OFADD__(v245, v176))
          {
            uint64_t v233 = (char *)sub_1D7993EDC(countAndFlagsBits, (uint64_t)v228, v245, v184);
            uint64_t v236 = v197;
            uint64_t v245 = v184;
            swift_endAccess();
LABEL_46:
            v241 = v171;
            swift_beginAccess();
            uint64_t v177 = v245 + v172;
            if (!__OFADD__(v245, v172))
            {
              uint64_t v178 = countAndFlagsBits;
              uint64_t v179 = (uint64_t)v228;
              sub_1D7993EDC(countAndFlagsBits, (uint64_t)v228, v245, v177);
              uint64_t v245 = v177;
              swift_endAccess();
              swift_bridgeObjectRelease();
              v243.docType._uint64_t countAndFlagsBits = v210;
              v243.docType._object = v214;
              v243.issuer.value._uint64_t countAndFlagsBits = v213;
              v243.issuer.value._object = v211;
              v243.aamvaVersion.value._uint64_t countAndFlagsBits = v212;
              v243.aamvaVersion.value._object = v209;
              v243.jurisdictionVersion.value._uint64_t countAndFlagsBits = v208;
              v243.jurisdictionVersion.value._object = v207;
              v243.vehicleClass.value._uint64_t countAndFlagsBits = v206;
              v243.vehicleClass.value._object = v205;
              v243.restrictionCodes.value._uint64_t countAndFlagsBits = v204;
              v243.restrictionCodes.value._object = v218;
              v243.endorsementCodes.value._uint64_t countAndFlagsBits = v203;
              v243.endorsementCodes.value._object = v217;
              v243.lastName.value._uint64_t countAndFlagsBits = v232;
              uint64_t v180 = sub_1D79936DC(v178, v179, v177);
              object = v181;
              unsigned int v227 = (char *)v180;
              v243.docType._uint64_t countAndFlagsBits = v210;
              v243.docType._object = v214;
              v243.issuer.value._uint64_t countAndFlagsBits = v213;
              v243.issuer.value._object = v211;
              v243.aamvaVersion.value._uint64_t countAndFlagsBits = v212;
              v243.aamvaVersion.value._object = v209;
              v243.jurisdictionVersion.value._uint64_t countAndFlagsBits = v208;
              v243.jurisdictionVersion.value._object = v207;
              v243.vehicleClass.value._uint64_t countAndFlagsBits = v206;
              v243.vehicleClass.value._object = v205;
              v243.restrictionCodes.value._uint64_t countAndFlagsBits = v204;
              v243.restrictionCodes.value._object = v218;
              v243.endorsementCodes.value._uint64_t countAndFlagsBits = v203;
              v243.endorsementCodes.value._object = v217;
              v243.lastName.value._uint64_t countAndFlagsBits = v232;
              uint64_t v114 = (char *)sub_1D7993918(v178, v179, v182, v183);
              uint64_t v97 = 0;
              goto LABEL_51;
            }
LABEL_60:
            __break(1u);
          }
          __break(1u);
          return;
        }
      }
      __break(1u);
      goto LABEL_60;
    }
    sub_1D7994188(v120);
    uint64_t v123 = v225;
    uint64_t v124 = v237;
    v229(v225, v231, v237);
    id v125 = v119;
    __int16 v126 = sub_1D7A9B5D8();
    os_log_type_t v127 = sub_1D7A9C748();
    if (os_log_type_enabled(v126, v127))
    {
      uint64_t v128 = swift_slowAlloc();
      uint64_t v129 = swift_slowAlloc();
      v243.docType._uint64_t countAndFlagsBits = v129;
      *(_DWORD *)uint64_t v128 = v220;
      uint64_t v130 = *v236;
      unint64_t v131 = v236[1];
      swift_bridgeObjectRetain();
      *(void *)(v128 + 4) = sub_1D7923300(v130, v131, &v243.docType._countAndFlagsBits);

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1D7853000, v126, v127, "did not find header that matches %s", (uint8_t *)v128, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D947D740](v129, -1, -1);
      MEMORY[0x1D947D740](v128, -1, -1);

      uint64_t v112 = v123;
      uint64_t v113 = v237;
    }
    else
    {

      uint64_t v112 = v123;
      uint64_t v113 = v124;
    }
    uint64_t v97 = v224;
    v234(v112, v113);
    (*v222)(v239, v240);
    object = v228;
    uint64_t v107 = v232;
    id v110 = v233;
    ++v111;
    uint64_t v108 = (uint64_t)v221;
    if (v238 == v221) {
      goto LABEL_56;
    }
  }
  __break(1u);
LABEL_51:
  v185._rawValue = v114;
  uint64_t countAndFlagsBits = v97;
  swift_bridgeObjectRetain();
  uint64_t v186 = (uint64_t)v227;
  v187._uint64_t countAndFlagsBits = (uint64_t)v227;
  v187._object = object;
  v188._uint64_t countAndFlagsBits = (uint64_t)v115;
  v188._object = v241;
  PDF417ParsedData.init(docType:aamvaVersion:map:)(&v243, v187, v188, v185);
  swift_bridgeObjectRelease();
  v243.issuer.value._uint64_t countAndFlagsBits = v108;
  v243.issuer.value._object = v116;
  swift_bridgeObjectRelease();
  uint64_t v189 = v237;
  v243.jurisdictionVersion.value._uint64_t countAndFlagsBits = (uint64_t)v233;
  v243.jurisdictionVersion.value._object = v236;
  id v190 = v201;
  v229(v201, v231, v237);
  swift_bridgeObjectRetain();
  id v191 = sub_1D7A9B5D8();
  os_log_type_t v192 = sub_1D7A9C748();
  if (os_log_type_enabled(v191, v192))
  {
    uint64_t v193 = (uint8_t *)swift_slowAlloc();
    uint64_t v194 = swift_slowAlloc();
    v244[0] = v194;
    *(_DWORD *)uint64_t v193 = v220;
    v241 = v193 + 4;
    swift_bridgeObjectRetain();
    uint64_t v242 = sub_1D7923300(v186, (unint64_t)object, v244);
    sub_1D7A9C9E8();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1D7853000, v191, v192, "Found pdf417 barcode of doc type %s", v193, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D947D740](v194, -1, -1);
    MEMORY[0x1D947D740](v193, -1, -1);

    id v195 = v190;
    uint64_t v196 = v237;
  }
  else
  {

    swift_bridgeObjectRelease_n();
    id v195 = v190;
    uint64_t v196 = v189;
  }
  v234(v195, v196);
  (*v222)(v239, v240);
  memcpy(v202, &v243, sizeof(CoreIDVShared::PDF417ParsedData));
}

uint64_t sub_1D7993514()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF99C0);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1D7AA9790;
  id v1 = (objc_class *)type metadata accessor for PDF417ParsingConfig();
  id v2 = (char *)objc_allocWithZone(v1);
  int64x2_t v3 = &v2[OBJC_IVAR____TtC13CoreIDVShared19PDF417ParsingConfig_aamvaHeader];
  *(void *)int64x2_t v3 = 0x49534E410D1E0A40;
  *((void *)v3 + 1) = 0xE900000000000020;
  v14.receiver = v2;
  v14.super_class = v1;
  *(void *)(v0 + 32) = objc_msgSendSuper2(&v14, sel_init);
  uint64_t v4 = (char *)objc_allocWithZone(v1);
  uint64_t v5 = &v4[OBJC_IVAR____TtC13CoreIDVShared19PDF417ParsingConfig_aamvaHeader];
  *(void *)uint64_t v5 = 0x49534E410D1C0A40;
  *((void *)v5 + 1) = 0xE900000000000020;
  v13.receiver = v4;
  v13.super_class = v1;
  *(void *)(v0 + 40) = objc_msgSendSuper2(&v13, sel_init);
  uint64_t v6 = (char *)objc_allocWithZone(v1);
  uint64_t v7 = &v6[OBJC_IVAR____TtC13CoreIDVShared19PDF417ParsingConfig_aamvaHeader];
  *(void *)uint64_t v7 = 0x564D41410D1E0A40;
  *((void *)v7 + 1) = 0xE900000000000041;
  v12.receiver = v6;
  v12.super_class = v1;
  *(void *)(v0 + 48) = objc_msgSendSuper2(&v12, sel_init);
  uint64_t v8 = (char *)objc_allocWithZone(v1);
  uint64_t v9 = &v8[OBJC_IVAR____TtC13CoreIDVShared19PDF417ParsingConfig_aamvaHeader];
  *(void *)uint64_t v9 = 0x2049534E410D0A40;
  *((void *)v9 + 1) = 0xE800000000000000;
  v11.receiver = v8;
  v11.super_class = v1;
  *(void *)(v0 + 56) = objc_msgSendSuper2(&v11, sel_init);
  uint64_t result = sub_1D7A9C338();
  qword_1EA845A90 = v0;
  return result;
}

uint64_t static PDF417Parser.defaultParsingConfigs.getter()
{
  if (qword_1EA8414D0 != -1) {
    swift_once();
  }
  return swift_bridgeObjectRetain();
}

uint64_t sub_1D79936DC(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = v3[5];
  uint64_t v6 = a3 + v5;
  if (__OFADD__(a3, v5))
  {
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v7 = v3[6];
  uint64_t v8 = v3[7];
  uint64_t v9 = v3[11];
  uint64_t v26 = v3[10];
  uint64_t v10 = v3[12];
  uint64_t v11 = v3[13];
  uint64_t v12 = result;
  uint64_t result = sub_1D7993EDC(result, a2, a3, v6);
  if (!v4)
  {
    uint64_t v15 = result;
    uint64_t v24 = v7;
    BOOL v16 = result == v26 && v14 == v9;
    uint64_t v17 = v14;
    if (!v16)
    {
      uint64_t result = sub_1D7A9D358();
      if ((result & 1) == 0 && (v15 != v10 || v17 != v11))
      {
        uint64_t result = sub_1D7A9D358();
        if ((result & 1) == 0)
        {
          swift_bridgeObjectRelease();
          v25[0] = 353;
          unint64_t v22 = sub_1D785EAF8(MEMORY[0x1E4FBC860]);
          sub_1D7860544();
          swift_allocError();
          DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xD000000000000014, 0x80000001D7AC5DC0, v25, 0, v22, 0xD00000000000005CLL, 0x80000001D7AC5D40, v23, 0xD000000000000027, 0x80000001D7AC5DE0, 101);
          return swift_willThrow();
        }
      }
    }
    uint64_t v19 = v6;
    BOOL v20 = __OFADD__(v6, v24);
    uint64_t v21 = v6 + v24;
    if (!v20)
    {
      uint64_t result = sub_1D7993B58(v12, a2, v19, v21);
      if (!__OFADD__(v21, v8))
      {
        sub_1D7993B58(v12, a2, v21, v21 + v8);
        return v15;
      }
      goto LABEL_20;
    }
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
  }
  return result;
}

uint64_t sub_1D7993918(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = *(void *)(v4 + 64);
  BOOL v8 = __OFADD__(a3, v7);
  uint64_t v9 = a3 + v7;
  if (v8)
  {
    __break(1u);
  }
  else
  {
    BOOL v8 = __OFADD__(a3, a4);
    uint64_t v10 = a3 + a4;
    if (!v8)
    {
      uint64_t v11 = *(void *)(v4 + 72);
      uint64_t v12 = v30;
      unint64_t v13 = sub_1D7993EDC(result, a2, v9, v10);
      if (!v5)
      {
        v30[0] = v13;
        v30[1] = v14;
        sub_1D791118C();
        uint64_t v15 = sub_1D7A9CA28();
        swift_bridgeObjectRelease();
        uint64_t v16 = *(void *)(v15 + 16);
        if (!v16)
        {
          swift_bridgeObjectRelease();
          return MEMORY[0x1E4FBC868];
        }
        uint64_t v17 = (uint64_t *)(v15 + 40);
        uint64_t v12 = (void *)MEMORY[0x1E4FBC868];
        do
        {
          uint64_t v19 = *(v17 - 1);
          uint64_t v18 = *v17;
          swift_bridgeObjectRetain();
          if (sub_1D7A9C0D8() < v11)
          {
            swift_bridgeObjectRelease();
          }
          else
          {
            uint64_t v31 = v12;
            unint64_t v20 = sub_1D7993EDC(v19, v18, 0, v11);
            uint64_t v22 = v21;
            uint64_t v24 = v11;
            uint64_t v23 = sub_1D7A9C0D8();
            unint64_t v25 = sub_1D7993EDC(v19, v18, v11, v23);
            uint64_t v27 = v26;
            swift_bridgeObjectRelease();
            uint64_t v28 = v31;
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            v30[0] = v28;
            sub_1D78A16C4(v25, v27, v20, v22, isUniquelyReferenced_nonNull_native);
            uint64_t v12 = (void *)v30[0];
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v11 = v24;
          }
          v17 += 2;
          --v16;
        }
        while (v16);
      }
      swift_bridgeObjectRelease();
      return (uint64_t)v12;
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_1D7993B58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t result = sub_1D7993EDC(a1, a2, a3, a4);
  if (v4) {
    return v5;
  }
  uint64_t v8 = v7;
  uint64_t v9 = HIBYTE(v7) & 0xF;
  uint64_t v10 = result & 0xFFFFFFFFFFFFLL;
  if ((v8 & 0x2000000000000000) != 0) {
    uint64_t v11 = v9;
  }
  else {
    uint64_t v11 = result & 0xFFFFFFFFFFFFLL;
  }
  if (!v11)
  {
    swift_bridgeObjectRelease();
    goto LABEL_46;
  }
  if ((v8 & 0x1000000000000000) != 0)
  {
    uint64_t v5 = (uint64_t)sub_1D7A45460(result, v8, 10);
    char v14 = v29;
    goto LABEL_45;
  }
  if ((v8 & 0x2000000000000000) == 0)
  {
    if ((result & 0x1000000000000000) != 0) {
      uint64_t v12 = (unsigned __int8 *)((v8 & 0xFFFFFFFFFFFFFFFLL) + 32);
    }
    else {
      uint64_t v12 = (unsigned __int8 *)sub_1D7A9CD78();
    }
    uint64_t v5 = (uint64_t)sub_1D7A45448(v12, v10, 10);
    char v14 = v13 & 1;
LABEL_45:
    swift_bridgeObjectRelease();
    if ((v14 & 1) == 0) {
      return v5;
    }
LABEL_46:
    LOWORD(v30[0]) = 355;
    unint64_t v24 = sub_1D785EAF8(MEMORY[0x1E4FBC860]);
    sub_1D7860544();
    swift_allocError();
    DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xD00000000000002CLL, 0x80000001D7AC5E10, (__int16 *)v30, 0, v24, 0xD00000000000005CLL, 0x80000001D7AC5D40, v25, 0xD000000000000020, 0x80000001D7AC5E40, 132);
    swift_willThrow();
    return v5;
  }
  v30[0] = result;
  v30[1] = v8 & 0xFFFFFFFFFFFFFFLL;
  if (result == 43)
  {
    if (!v9) {
      goto LABEL_58;
    }
    if (v9 == 1 || (BYTE1(result) - 48) > 9u) {
      goto LABEL_32;
    }
    uint64_t v5 = (BYTE1(result) - 48);
    if (v9 != 2)
    {
      if ((BYTE2(result) - 48) > 9u) {
        goto LABEL_32;
      }
      uint64_t v5 = 10 * (BYTE1(result) - 48) + (BYTE2(result) - 48);
      uint64_t v15 = v9 - 3;
      if (v15)
      {
        uint64_t v16 = (unsigned __int8 *)v30 + 3;
        while (1)
        {
          unsigned int v17 = *v16 - 48;
          if (v17 > 9) {
            goto LABEL_32;
          }
          uint64_t v18 = 10 * v5;
          if ((unsigned __int128)(v5 * (__int128)10) >> 64 != (10 * v5) >> 63) {
            goto LABEL_32;
          }
          uint64_t v5 = v18 + v17;
          if (__OFADD__(v18, v17)) {
            goto LABEL_32;
          }
          char v14 = 0;
          ++v16;
          if (!--v15) {
            goto LABEL_45;
          }
        }
      }
    }
LABEL_44:
    char v14 = 0;
    goto LABEL_45;
  }
  if (result != 45)
  {
    if (!v9 || (result - 48) > 9u) {
      goto LABEL_32;
    }
    uint64_t v5 = (result - 48);
    if (v9 != 1)
    {
      if ((BYTE1(result) - 48) > 9u) {
        goto LABEL_32;
      }
      uint64_t v5 = 10 * (result - 48) + (BYTE1(result) - 48);
      uint64_t v19 = v9 - 2;
      if (v19)
      {
        unint64_t v20 = (unsigned __int8 *)v30 + 2;
        while (1)
        {
          unsigned int v21 = *v20 - 48;
          if (v21 > 9) {
            goto LABEL_32;
          }
          uint64_t v22 = 10 * v5;
          if ((unsigned __int128)(v5 * (__int128)10) >> 64 != (10 * v5) >> 63) {
            goto LABEL_32;
          }
          uint64_t v5 = v22 + v21;
          if (__OFADD__(v22, v21)) {
            goto LABEL_32;
          }
          char v14 = 0;
          ++v20;
          if (!--v19) {
            goto LABEL_45;
          }
        }
      }
    }
    goto LABEL_44;
  }
  if (v9)
  {
    if (v9 != 1 && (BYTE1(result) - 48) <= 9u)
    {
      if (v9 == 2)
      {
        char v14 = 0;
        uint64_t v5 = -(uint64_t)(BYTE1(result) - 48);
        goto LABEL_45;
      }
      if ((BYTE2(result) - 48) <= 9u)
      {
        uint64_t v5 = -10 * (BYTE1(result) - 48) - (BYTE2(result) - 48);
        uint64_t v23 = v9 - 3;
        if (!v23) {
          goto LABEL_44;
        }
        uint64_t v26 = (unsigned __int8 *)v30 + 3;
        while (1)
        {
          unsigned int v27 = *v26 - 48;
          if (v27 > 9) {
            break;
          }
          uint64_t v28 = 10 * v5;
          if ((unsigned __int128)(v5 * (__int128)10) >> 64 != (10 * v5) >> 63) {
            break;
          }
          uint64_t v5 = v28 - v27;
          if (__OFSUB__(v28, v27)) {
            break;
          }
          char v14 = 0;
          ++v26;
          if (!--v23) {
            goto LABEL_45;
          }
        }
      }
    }
LABEL_32:
    uint64_t v5 = 0;
    char v14 = 1;
    goto LABEL_45;
  }
  __break(1u);
LABEL_58:
  __break(1u);
  return result;
}

unint64_t sub_1D7993EDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (sub_1D7A9C0D8() < a3 || sub_1D7A9C0D8() < a4 || a4 < a3)
  {
    sub_1D7A9CC48();
    swift_bridgeObjectRelease();
    v12[0] = 0xD000000000000162;
    v12[1] = 0x80000001D7AC5E70;
    sub_1D7A9C128();
    sub_1D7A9C128();
    sub_1D78CDF34();
    sub_1D7A9CAE8();
    sub_1D7A9C128();
    swift_bridgeObjectRelease();
    sub_1D7A9C128();
    sub_1D7A9CAE8();
    sub_1D7A9C128();
    swift_bridgeObjectRelease();
    unint64_t v10 = sub_1D785EAF8(MEMORY[0x1E4FBC860]);
    sub_1D7860544();
    swift_allocError();
    DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xD000000000000025, 0x80000001D7AC5E70, (__int16 *)v12, 0, v10, 0xD00000000000005CLL, 0x80000001D7AC5D40, v11, 0xD000000000000024, 0x80000001D7AC5EA0, 140);
    return swift_willThrow();
  }
  else
  {
    unint64_t v6 = sub_1D7A9C0F8();
    unint64_t result = sub_1D7A9C0F8();
    if (result >> 14 < v6 >> 14)
    {
      __break(1u);
    }
    else
    {
      uint64_t v8 = sub_1D7A9C1E8();
      uint64_t v9 = MEMORY[0x1D947AE00](v8);
      swift_bridgeObjectRelease();
      return v9;
    }
  }
  return result;
}

unint64_t sub_1D799412C()
{
  unint64_t result = qword_1EA845AA8;
  if (!qword_1EA845AA8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA845AA0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA845AA8);
  }
  return result;
}

uint64_t sub_1D7994188(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA845A98);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t destroy for PDF417Parser()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for PDF417Parser(uint64_t a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  uint64_t v5 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v5;
  uint64_t v6 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v6;
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for PDF417Parser(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  a1[6] = a2[6];
  a1[7] = a2[7];
  a1[8] = a2[8];
  a1[9] = a2[9];
  a1[10] = a2[10];
  a1[11] = a2[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[12] = a2[12];
  a1[13] = a2[13];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[14] = a2[14];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for PDF417Parser(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  long long v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v5;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  uint64_t v6 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v6;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for PDF417Parser(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 120)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 88);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PDF417Parser(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 120) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 88) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 120) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PDF417Parser()
{
  return &type metadata for PDF417Parser;
}

uint64_t sub_1D7994498()
{
  uint64_t v0 = sub_1D7A9BFC8();
  uint64_t v2 = v1;
  if (v0 == sub_1D7A9BFC8() && v2 == v3) {
    char v5 = 1;
  }
  else {
    char v5 = sub_1D7A9D358();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_1D799454C(uint64_t a1, uint64_t a2)
{
  return sub_1D7998A90(a1, a2, (uint64_t (*)(void))DIPError.PropertyKey.rawValue.getter);
}

uint64_t sub_1D7994564(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xD000000000000016;
  unint64_t v3 = 0x80000001D7ABC2E0;
  uint64_t v4 = a1;
  unint64_t v5 = 0xD000000000000016;
  switch(v4)
  {
    case 1:
      uint64_t v6 = "domestic_vehicle_restrictions";
      goto LABEL_4;
    case 2:
      uint64_t v6 = "domestic_vehicle_endorsements";
LABEL_4:
      unint64_t v3 = (unint64_t)(v6 - 32) | 0x8000000000000000;
      unint64_t v5 = 0xD00000000000001DLL;
      break;
    case 3:
      unint64_t v5 = 0xD00000000000001BLL;
      unint64_t v7 = "domestic_vehicle_class_code";
      goto LABEL_13;
    case 4:
      unint64_t v5 = 0xD000000000000022;
      unint64_t v7 = "domestic_vehicle_class_description";
      goto LABEL_13;
    case 5:
      unint64_t v5 = 0x61645F6575737369;
      unint64_t v3 = 0xEA00000000006574;
      break;
    case 6:
      unint64_t v5 = 0x645F797269707865;
      unint64_t v3 = 0xEB00000000657461;
      break;
    case 7:
      unint64_t v5 = 0xD000000000000021;
      unint64_t v7 = "domestic_vehicle_restriction_code";
      goto LABEL_13;
    case 8:
      unint64_t v5 = 0xD000000000000028;
      unint64_t v7 = "domestic_vehicle_restriction_description";
      goto LABEL_13;
    case 9:
      unint64_t v5 = 0xD000000000000021;
      unint64_t v7 = "domestic_vehicle_endorsement_code";
      goto LABEL_13;
    case 10:
      unint64_t v5 = 0xD000000000000028;
      unint64_t v7 = "domestic_vehicle_endorsement_description";
LABEL_13:
      unint64_t v3 = (unint64_t)(v7 - 32) | 0x8000000000000000;
      break;
    default:
      break;
  }
  unint64_t v8 = 0x80000001D7ABC2E0;
  switch(a2)
  {
    case 1:
      uint64_t v9 = "domestic_vehicle_restrictions";
      goto LABEL_17;
    case 2:
      uint64_t v9 = "domestic_vehicle_endorsements";
LABEL_17:
      unint64_t v8 = (unint64_t)(v9 - 32) | 0x8000000000000000;
      unint64_t v2 = 0xD00000000000001DLL;
      break;
    case 3:
      unint64_t v2 = 0xD00000000000001BLL;
      unint64_t v10 = "domestic_vehicle_class_code";
      goto LABEL_26;
    case 4:
      unint64_t v2 = 0xD000000000000022;
      unint64_t v10 = "domestic_vehicle_class_description";
      goto LABEL_26;
    case 5:
      unint64_t v2 = 0x61645F6575737369;
      unint64_t v8 = 0xEA00000000006574;
      break;
    case 6:
      unint64_t v2 = 0x645F797269707865;
      unint64_t v8 = 0xEB00000000657461;
      break;
    case 7:
      unint64_t v2 = 0xD000000000000021;
      unint64_t v10 = "domestic_vehicle_restriction_code";
      goto LABEL_26;
    case 8:
      unint64_t v2 = 0xD000000000000028;
      unint64_t v10 = "domestic_vehicle_restriction_description";
      goto LABEL_26;
    case 9:
      unint64_t v2 = 0xD000000000000021;
      unint64_t v10 = "domestic_vehicle_endorsement_code";
      goto LABEL_26;
    case 10:
      unint64_t v2 = 0xD000000000000028;
      unint64_t v10 = "domestic_vehicle_endorsement_description";
LABEL_26:
      unint64_t v8 = (unint64_t)(v10 - 32) | 0x8000000000000000;
      break;
    default:
      break;
  }
  if (v5 == v2 && v3 == v8) {
    char v11 = 1;
  }
  else {
    char v11 = sub_1D7A9D358();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v11 & 1;
}

uint64_t sub_1D7994824(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x656C746974;
  unint64_t v3 = 0xE500000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x656C746974;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE800000000000000;
      uint64_t v5 = 0x656C746954627573;
      break;
    case 2:
      unint64_t v3 = 0xE700000000000000;
      uint64_t v5 = 0x7374656C6C7562;
      break;
    case 3:
      uint64_t v5 = 0x656D737365737361;
      unint64_t v3 = 0xEB0000000073746ELL;
      break;
    case 4:
      uint64_t v5 = 0x6269737365636361;
      unint64_t v3 = 0xED00007974696C69;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE500000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE800000000000000;
      if (v5 == 0x656C746954627573) {
        goto LABEL_13;
      }
      goto LABEL_16;
    case 2:
      unint64_t v6 = 0xE700000000000000;
      if (v5 != 0x7374656C6C7562) {
        goto LABEL_16;
      }
      goto LABEL_13;
    case 3:
      uint64_t v2 = 0x656D737365737361;
      unint64_t v6 = 0xEB0000000073746ELL;
      goto LABEL_12;
    case 4:
      unint64_t v6 = 0xED00007974696C69;
      if (v5 != 0x6269737365636361) {
        goto LABEL_16;
      }
      goto LABEL_13;
    default:
LABEL_12:
      if (v5 != v2) {
        goto LABEL_16;
      }
LABEL_13:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_16:
      }
        char v7 = sub_1D7A9D358();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1D7994A10(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xD000000000000015;
  unint64_t v3 = 0x80000001D7ABC160;
  uint64_t v4 = a1;
  unint64_t v5 = 0xD000000000000015;
  switch(v4)
  {
    case 1:
      unint64_t v5 = 0x61645F6575737369;
      unint64_t v3 = 0xEA00000000006574;
      break;
    case 2:
      unint64_t v5 = 0x645F797269707865;
      unint64_t v3 = 0xEB00000000657461;
      break;
    case 3:
      unint64_t v3 = 0xE500000000000000;
      unint64_t v5 = 0x7365646F63;
      break;
    case 4:
      unint64_t v3 = 0xE400000000000000;
      unint64_t v5 = 1701080931;
      break;
    case 5:
      unint64_t v3 = 0xE400000000000000;
      unint64_t v5 = 1852270963;
      break;
    case 6:
      unint64_t v3 = 0xE500000000000000;
      unint64_t v5 = 0x65756C6176;
      break;
    default:
      break;
  }
  unint64_t v6 = 0x80000001D7ABC160;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xEA00000000006574;
      if (v5 == 0x61645F6575737369) {
        goto LABEL_19;
      }
      goto LABEL_22;
    case 2:
      unint64_t v6 = 0xEB00000000657461;
      if (v5 != 0x645F797269707865) {
        goto LABEL_22;
      }
      goto LABEL_19;
    case 3:
      unint64_t v6 = 0xE500000000000000;
      if (v5 != 0x7365646F63) {
        goto LABEL_22;
      }
      goto LABEL_19;
    case 4:
      unint64_t v6 = 0xE400000000000000;
      if (v5 != 1701080931) {
        goto LABEL_22;
      }
      goto LABEL_19;
    case 5:
      unint64_t v6 = 0xE400000000000000;
      unint64_t v2 = 1852270963;
      goto LABEL_18;
    case 6:
      unint64_t v6 = 0xE500000000000000;
      if (v5 != 0x65756C6176) {
        goto LABEL_22;
      }
      goto LABEL_19;
    default:
LABEL_18:
      if (v5 != v2) {
        goto LABEL_22;
      }
LABEL_19:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_22:
      }
        char v7 = sub_1D7A9D358();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1D7994C40(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    unint64_t v3 = 0xD000000000000010;
  }
  else {
    unint64_t v3 = 0x50482D454C505041;
  }
  if (v2) {
    unint64_t v4 = 0xED000031762D454BLL;
  }
  else {
    unint64_t v4 = 0x80000001D7ABB140;
  }
  if (a2) {
    unint64_t v5 = 0xD000000000000010;
  }
  else {
    unint64_t v5 = 0x50482D454C505041;
  }
  if (a2) {
    unint64_t v6 = 0x80000001D7ABB140;
  }
  else {
    unint64_t v6 = 0xED000031762D454BLL;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1D7A9D358();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1D7994CF8(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2 = 0xEF312E4E53412D31;
  uint64_t v3 = 0x765F4343455F5645;
  int v4 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v5 = 0x33765F4345;
    }
    else {
      uint64_t v5 = 0x48535F33765F4345;
    }
    if (v4 == 1) {
      unint64_t v6 = 0xE500000000000000;
    }
    else {
      unint64_t v6 = 0xE800000000000000;
    }
    int v7 = a2;
    if (!a2) {
      goto LABEL_15;
    }
    goto LABEL_9;
  }
  uint64_t v5 = 0x765F4343455F5645;
  unint64_t v6 = 0xEF312E4E53412D31;
  int v7 = a2;
  if (a2)
  {
LABEL_9:
    if (v7 == 1) {
      uint64_t v3 = 0x33765F4345;
    }
    else {
      uint64_t v3 = 0x48535F33765F4345;
    }
    if (v7 == 1) {
      unint64_t v2 = 0xE500000000000000;
    }
    else {
      unint64_t v2 = 0xE800000000000000;
    }
  }
LABEL_15:
  if (v5 == v3 && v6 == v2) {
    char v8 = 1;
  }
  else {
    char v8 = sub_1D7A9D358();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1D7994E1C(char a1, char a2)
{
  unint64_t v3 = 0xD000000000000016;
  unint64_t v4 = 0x80000001D7ABC450;
  switch(a1)
  {
    case 1:
      unint64_t v4 = 0x80000001D7ABC470;
      unint64_t v3 = 0xD000000000000011;
      break;
    case 2:
      unint64_t v3 = 0xD000000000000012;
      uint64_t v5 = "birth_date_unicode";
      goto LABEL_7;
    case 3:
      unint64_t v3 = 0xD000000000000018;
      uint64_t v5 = "resident_address_unicode";
      goto LABEL_7;
    case 4:
      unint64_t v3 = 0x63696E755F786573;
      unint64_t v4 = 0xEB0000000065646FLL;
      break;
    case 5:
      unint64_t v3 = 0xD000000000000019;
      uint64_t v5 = "individual_number_unicode";
LABEL_7:
      unint64_t v4 = (unint64_t)(v5 - 32) | 0x8000000000000000;
      break;
    case 6:
      unint64_t v4 = 0xE800000000000000;
      unint64_t v3 = 0x7469617274726F70;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xD000000000000016;
  unint64_t v7 = 0x80000001D7ABC450;
  switch(a2)
  {
    case 1:
      unint64_t v7 = 0x80000001D7ABC470;
      if (v3 == 0xD000000000000011) {
        goto LABEL_19;
      }
      goto LABEL_22;
    case 2:
      unint64_t v6 = 0xD000000000000012;
      char v8 = "birth_date_unicode";
      goto LABEL_17;
    case 3:
      unint64_t v6 = 0xD000000000000018;
      char v8 = "resident_address_unicode";
      goto LABEL_17;
    case 4:
      unint64_t v7 = 0xEB0000000065646FLL;
      if (v3 != 0x63696E755F786573) {
        goto LABEL_22;
      }
      goto LABEL_19;
    case 5:
      unint64_t v6 = 0xD000000000000019;
      char v8 = "individual_number_unicode";
LABEL_17:
      unint64_t v7 = (unint64_t)(v8 - 32) | 0x8000000000000000;
      goto LABEL_18;
    case 6:
      unint64_t v7 = 0xE800000000000000;
      if (v3 != 0x7469617274726F70) {
        goto LABEL_22;
      }
      goto LABEL_19;
    default:
LABEL_18:
      if (v3 != v6) {
        goto LABEL_22;
      }
LABEL_19:
      if (v4 == v7) {
        char v9 = 1;
      }
      else {
LABEL_22:
      }
        char v9 = sub_1D7A9D358();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v9 & 1;
  }
}

uint64_t sub_1D7995050(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    unint64_t v3 = 0x4164656966696E75;
  }
  else {
    unint64_t v3 = 0xD000000000000011;
  }
  if (v2) {
    unint64_t v4 = 0x80000001D7ABCB00;
  }
  else {
    unint64_t v4 = 0xED00007373656363;
  }
  if (a2) {
    unint64_t v5 = 0x4164656966696E75;
  }
  else {
    unint64_t v5 = 0xD000000000000011;
  }
  if (a2) {
    unint64_t v6 = 0xED00007373656363;
  }
  else {
    unint64_t v6 = 0x80000001D7ABCB00;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1D7A9D358();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1D7995108(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2 = 0xEC00000059454B5FLL;
  unint64_t v3 = 0x595449544E454449;
  int v4 = a1;
  if (a1)
  {
    if (a1 == 1) {
      unint64_t v5 = 0xD000000000000015;
    }
    else {
      unint64_t v5 = 0xD00000000000001DLL;
    }
    if (v4 == 1) {
      unint64_t v6 = 0x80000001D7ABC520;
    }
    else {
      unint64_t v6 = 0x80000001D7ABC560;
    }
    int v7 = a2;
    if (!a2) {
      goto LABEL_15;
    }
    goto LABEL_9;
  }
  unint64_t v5 = 0x595449544E454449;
  unint64_t v6 = 0xEC00000059454B5FLL;
  int v7 = a2;
  if (a2)
  {
LABEL_9:
    if (v7 == 1) {
      unint64_t v3 = 0xD000000000000015;
    }
    else {
      unint64_t v3 = 0xD00000000000001DLL;
    }
    if (v7 == 1) {
      unint64_t v2 = 0x80000001D7ABC520;
    }
    else {
      unint64_t v2 = 0x80000001D7ABC560;
    }
  }
LABEL_15:
  if (v5 == v3 && v6 == v2) {
    char v8 = 1;
  }
  else {
    char v8 = sub_1D7A9D358();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1D799521C(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xD000000000000015;
  unint64_t v3 = 0x80000001D7ABC520;
  uint64_t v4 = a1;
  unint64_t v5 = 0xD000000000000015;
  switch(v4)
  {
    case 1:
      unint64_t v5 = 0x4954505952434E45;
      unint64_t v3 = 0xEE0059454B5F4E4FLL;
      break;
    case 2:
      unint64_t v5 = 0x4D544E4553455250;
      unint64_t v3 = 0xEF59454B5F544E45;
      break;
    case 3:
      unint64_t v5 = 0xD00000000000001DLL;
      unint64_t v3 = 0x80000001D7ABC560;
      break;
    default:
      break;
  }
  unint64_t v6 = 0x80000001D7ABC520;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xEE0059454B5F4E4FLL;
      if (v5 == 0x4954505952434E45) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      unint64_t v2 = 0x4D544E4553455250;
      unint64_t v6 = 0xEF59454B5F544E45;
      goto LABEL_9;
    case 3:
      unint64_t v6 = 0x80000001D7ABC560;
      if (v5 == 0xD00000000000001DLL) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v5 != v2) {
        goto LABEL_14;
      }
LABEL_12:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = sub_1D7A9D358();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1D79953D8(uint64_t a1, uint64_t a2)
{
  return sub_1D7998A90(a1, a2, (uint64_t (*)(void))ISO18013_AAMVA_ElementIdentifier.rawValue.getter);
}

uint64_t sub_1D79953F0(uint64_t a1, uint64_t a2)
{
  return sub_1D7998A90(a1, a2, ISO18013_5_1_ElementIdentifier.rawValue.getter);
}

uint64_t sub_1D7995408(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2 = 0xEC00000073726165;
  uint64_t v3 = 0x795F6E695F656761;
  int v4 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v5 = 0x61645F6874726962;
    }
    else {
      uint64_t v5 = 7890291;
    }
    if (v4 == 1) {
      unint64_t v6 = 0xEA00000000006574;
    }
    else {
      unint64_t v6 = 0xE300000000000000;
    }
    int v7 = a2;
    if (!a2) {
      goto LABEL_15;
    }
    goto LABEL_9;
  }
  uint64_t v5 = 0x795F6E695F656761;
  unint64_t v6 = 0xEC00000073726165;
  int v7 = a2;
  if (a2)
  {
LABEL_9:
    if (v7 == 1) {
      uint64_t v3 = 0x61645F6874726962;
    }
    else {
      uint64_t v3 = 7890291;
    }
    if (v7 == 1) {
      unint64_t v2 = 0xEA00000000006574;
    }
    else {
      unint64_t v2 = 0xE300000000000000;
    }
  }
LABEL_15:
  if (v5 == v3 && v6 == v2) {
    char v8 = 1;
  }
  else {
    char v8 = sub_1D7A9D358();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1D7995524(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 1635017060;
  }
  else {
    uint64_t v3 = 0x4B72656461655265;
  }
  if (v2) {
    unint64_t v4 = 0xEA00000000007965;
  }
  else {
    unint64_t v4 = 0xE400000000000000;
  }
  if (a2) {
    uint64_t v5 = 1635017060;
  }
  else {
    uint64_t v5 = 0x4B72656461655265;
  }
  if (a2) {
    unint64_t v6 = 0xE400000000000000;
  }
  else {
    unint64_t v6 = 0xEA00000000007965;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1D7A9D358();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1D79955C8(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x6D656C4561746164;
  }
  else {
    uint64_t v3 = 0x63617053656D616ELL;
  }
  if (v2) {
    unint64_t v4 = 0xEA00000000007365;
  }
  else {
    unint64_t v4 = 0xEC00000073746E65;
  }
  if (a2) {
    uint64_t v5 = 0x6D656C4561746164;
  }
  else {
    uint64_t v5 = 0x63617053656D616ELL;
  }
  if (a2) {
    unint64_t v6 = 0xEC00000073746E65;
  }
  else {
    unint64_t v6 = 0xEA00000000007365;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1D7A9D358();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1D7995680(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2 = 0xE900000000000079;
  unint64_t v3 = 0x654B656369766564;
  int v4 = a1;
  if (a1)
  {
    if (a1 == 1) {
      unint64_t v5 = 0xD000000000000011;
    }
    else {
      unint64_t v5 = 0x6F666E4979656BLL;
    }
    if (v4 == 1) {
      unint64_t v6 = 0x80000001D7ABBE50;
    }
    else {
      unint64_t v6 = 0xE700000000000000;
    }
    int v7 = a2;
    if (!a2) {
      goto LABEL_15;
    }
    goto LABEL_9;
  }
  unint64_t v5 = 0x654B656369766564;
  unint64_t v6 = 0xE900000000000079;
  int v7 = a2;
  if (a2)
  {
LABEL_9:
    if (v7 == 1) {
      unint64_t v3 = 0xD000000000000011;
    }
    else {
      unint64_t v3 = 0x6F666E4979656BLL;
    }
    if (v7 == 1) {
      unint64_t v2 = 0x80000001D7ABBE50;
    }
    else {
      unint64_t v2 = 0xE700000000000000;
    }
  }
LABEL_15:
  if (v5 == v3 && v6 == v2) {
    char v8 = 1;
  }
  else {
    char v8 = sub_1D7A9D358();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1D799579C(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x64656E676973;
  unint64_t v3 = 0xE600000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x64656E676973;
  switch(v4)
  {
    case 1:
      uint64_t v5 = 0x6F724664696C6176;
      unint64_t v3 = 0xE90000000000006DLL;
      break;
    case 2:
      uint64_t v5 = 0x746E5564696C6176;
      unint64_t v3 = 0xEA00000000006C69;
      break;
    case 3:
      uint64_t v5 = 0x6465746365707865;
      unint64_t v3 = 0xEE00657461647055;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE600000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE90000000000006DLL;
      if (v5 == 0x6F724664696C6176) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      uint64_t v2 = 0x746E5564696C6176;
      unint64_t v6 = 0xEA00000000006C69;
      goto LABEL_9;
    case 3:
      unint64_t v6 = 0xEE00657461647055;
      if (v5 == 0x6465746365707865) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v5 != v2) {
        goto LABEL_14;
      }
LABEL_12:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = sub_1D7A9D358();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1D799594C(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x6E6F6973726576;
  unint64_t v3 = 0xE700000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x6E6F6973726576;
  switch(v4)
  {
    case 1:
      uint64_t v5 = 0x6C41747365676964;
      unint64_t v3 = 0xEF6D687469726F67;
      break;
    case 2:
      uint64_t v5 = 0x67694465756C6176;
      uint64_t v6 = 1937011557;
      goto LABEL_7;
    case 3:
      uint64_t v5 = 0x654B656369766564;
      unint64_t v3 = 0xED00006F666E4979;
      break;
    case 4:
      uint64_t v5 = 0x65707954636F64;
      break;
    case 5:
      uint64_t v5 = 0x79746964696C6176;
      uint64_t v6 = 1868983881;
LABEL_7:
      unint64_t v3 = v6 & 0xFFFFFFFFFFFFLL | 0xEC00000000000000;
      break;
    default:
      break;
  }
  unint64_t v7 = 0xE700000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v7 = 0xEF6D687469726F67;
      if (v5 == 0x6C41747365676964) {
        goto LABEL_19;
      }
      goto LABEL_21;
    case 2:
      uint64_t v8 = 0x67694465756C6176;
      uint64_t v9 = 1937011557;
      goto LABEL_18;
    case 3:
      unint64_t v7 = 0xED00006F666E4979;
      if (v5 != 0x654B656369766564) {
        goto LABEL_21;
      }
      goto LABEL_19;
    case 4:
      uint64_t v2 = 0x65707954636F64;
      goto LABEL_15;
    case 5:
      uint64_t v8 = 0x79746964696C6176;
      uint64_t v9 = 1868983881;
LABEL_18:
      unint64_t v7 = v9 & 0xFFFFFFFFFFFFLL | 0xEC00000000000000;
      if (v5 == v8) {
        goto LABEL_19;
      }
      goto LABEL_21;
    default:
LABEL_15:
      if (v5 != v2) {
        goto LABEL_21;
      }
LABEL_19:
      if (v3 == v7) {
        char v10 = 1;
      }
      else {
LABEL_21:
      }
        char v10 = sub_1D7A9D358();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v10 & 1;
  }
}

uint64_t sub_1D7995B94(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 909455952;
  unint64_t v3 = 0xE400000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 909455952;
  switch(v4)
  {
    case 1:
      uint64_t v5 = 876098384;
      break;
    case 2:
      uint64_t v5 = 825374032;
      break;
    case 3:
      unint64_t v3 = 0xE600000000000000;
      uint64_t v5 = 0x393135353258;
      break;
    case 4:
      uint64_t v5 = 942945368;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE400000000000000;
  switch(a2)
  {
    case 1:
      if (v5 == 876098384) {
        goto LABEL_13;
      }
      goto LABEL_16;
    case 2:
      if (v5 != 825374032) {
        goto LABEL_16;
      }
      goto LABEL_13;
    case 3:
      unint64_t v6 = 0xE600000000000000;
      uint64_t v2 = 0x393135353258;
      goto LABEL_12;
    case 4:
      if (v5 != 942945368) {
        goto LABEL_16;
      }
      goto LABEL_13;
    default:
LABEL_12:
      if (v5 != v2) {
        goto LABEL_16;
      }
LABEL_13:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_16:
      }
        char v7 = sub_1D7A9D358();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1D7995D00(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0x4449747365676964;
  unint64_t v3 = 0xE800000000000000;
  uint64_t v4 = a1;
  unint64_t v5 = 0x4449747365676964;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE600000000000000;
      unint64_t v5 = 0x6D6F646E6172;
      break;
    case 2:
      unint64_t v3 = 0x80000001D7ABCB30;
      unint64_t v5 = 0xD000000000000011;
      break;
    case 3:
      unint64_t v5 = 0x56746E656D656C65;
      unint64_t v3 = 0xEC00000065756C61;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE800000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE600000000000000;
      if (v5 == 0x6D6F646E6172) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      unint64_t v6 = 0x80000001D7ABCB30;
      unint64_t v2 = 0xD000000000000011;
      goto LABEL_9;
    case 3:
      unint64_t v6 = 0xEC00000065756C61;
      if (v5 == 0x56746E656D656C65) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v5 != v2) {
        goto LABEL_14;
      }
LABEL_12:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = sub_1D7A9D358();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1D7995EA0(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x6C617469676964;
  }
  else {
    uint64_t v3 = 0x6C61636973796870;
  }
  if (v2) {
    unint64_t v4 = 0xE800000000000000;
  }
  else {
    unint64_t v4 = 0xE700000000000000;
  }
  if (a2) {
    uint64_t v5 = 0x6C617469676964;
  }
  else {
    uint64_t v5 = 0x6C61636973796870;
  }
  if (a2) {
    unint64_t v6 = 0xE700000000000000;
  }
  else {
    unint64_t v6 = 0xE800000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1D7A9D358();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1D7995F48(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xD000000000000011;
  unint64_t v3 = 0x80000001D7ABBEB0;
  uint64_t v4 = a1;
  unint64_t v5 = 0xD000000000000011;
  switch(v4)
  {
    case 1:
      unint64_t v5 = 0xD000000000000017;
      unint64_t v6 = "org.iso.18013.5.1.aamva";
      goto LABEL_5;
    case 2:
      unint64_t v5 = 0x2E6F73692E67726FLL;
      unint64_t v3 = 0xEF312E3032323332;
      break;
    case 3:
      unint64_t v5 = 0xD000000000000012;
      unint64_t v6 = "org.iso.23220.1.jp";
LABEL_5:
      unint64_t v3 = (unint64_t)(v6 - 32) | 0x8000000000000000;
      break;
    default:
      break;
  }
  unint64_t v7 = 0x80000001D7ABBEB0;
  switch(a2)
  {
    case 1:
      unint64_t v2 = 0xD000000000000017;
      uint64_t v8 = "org.iso.18013.5.1.aamva";
      goto LABEL_10;
    case 2:
      unint64_t v2 = 0x2E6F73692E67726FLL;
      unint64_t v7 = 0xEF312E3032323332;
      break;
    case 3:
      unint64_t v2 = 0xD000000000000012;
      uint64_t v8 = "org.iso.23220.1.jp";
LABEL_10:
      unint64_t v7 = (unint64_t)(v8 - 32) | 0x8000000000000000;
      break;
    default:
      break;
  }
  if (v5 == v2 && v3 == v7) {
    char v9 = 1;
  }
  else {
    char v9 = sub_1D7A9D358();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v9 & 1;
}

uint64_t sub_1D79960CC(char a1, char a2)
{
  if (*(void *)&aSha256_3[8 * a1] == *(void *)&aSha256_3[8 * a2]) {
    char v2 = 1;
  }
  else {
    char v2 = sub_1D7A9D358();
  }
  swift_bridgeObjectRelease_n();
  return v2 & 1;
}

uint64_t sub_1D7996134(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 1196901185;
  }
  else {
    uint64_t v3 = 0x647261646E617473;
  }
  if (v2) {
    unint64_t v4 = 0xE800000000000000;
  }
  else {
    unint64_t v4 = 0xE400000000000000;
  }
  if (a2) {
    uint64_t v5 = 1196901185;
  }
  else {
    uint64_t v5 = 0x647261646E617473;
  }
  if (a2) {
    unint64_t v6 = 0xE400000000000000;
  }
  else {
    unint64_t v6 = 0xE800000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1D7A9D358();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1D79961D4(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 5260627;
  unint64_t v3 = 0xE300000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 5260627;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE200000000000000;
      uint64_t v5 = 17747;
      break;
    case 2:
      uint64_t v5 = 5653577;
      break;
    case 3:
      unint64_t v3 = 0xE200000000000000;
      uint64_t v5 = 20559;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE300000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE200000000000000;
      if (v5 == 17747) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      uint64_t v2 = 5653577;
      goto LABEL_9;
    case 3:
      unint64_t v6 = 0xE200000000000000;
      if (v5 == 20559) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v5 != v2) {
        goto LABEL_14;
      }
LABEL_12:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = sub_1D7A9D358();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1D799630C(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v3 = 27748;
    }
    else {
      uint64_t v3 = 0x636972656E6567;
    }
    if (v2 == 1) {
      unint64_t v4 = 0xE200000000000000;
    }
    else {
      unint64_t v4 = 0xE700000000000000;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        uint64_t v6 = 27748;
      }
      else {
        uint64_t v6 = 0x636972656E6567;
      }
      if (v5 == 1) {
        unint64_t v7 = 0xE200000000000000;
      }
      else {
        unint64_t v7 = 0xE700000000000000;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xE700000000000000;
    uint64_t v3 = 0x44496574617473;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE700000000000000;
  if (v3 != 0x44496574617473)
  {
LABEL_21:
    char v8 = sub_1D7A9D358();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1D7996410(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xE900000000000072;
  uint64_t v3 = 0x6576726573766469;
  uint64_t v4 = a1;
  uint64_t v5 = 0x6576726573766469;
  unint64_t v6 = 0xE900000000000072;
  switch(v4)
  {
    case 1:
      unint64_t v6 = 0xE600000000000000;
      uint64_t v5 = 0x656369766564;
      break;
    case 2:
      uint64_t v5 = 0x732D656369766564;
      unint64_t v6 = 0xEA00000000006565;
      break;
    case 3:
      unint64_t v6 = 0xE300000000000000;
      uint64_t v5 = 7302761;
      break;
    case 4:
      unint64_t v6 = 0xE200000000000000;
      uint64_t v5 = 28787;
      break;
    case 5:
      unint64_t v6 = 0xE600000000000000;
      uint64_t v5 = 0x616E65687461;
      break;
    case 6:
      unint64_t v6 = 0xE800000000000000;
      uint64_t v5 = 0x726F737365737361;
      break;
    case 7:
      unint64_t v6 = 0xE600000000000000;
      uint64_t v5 = 0x726575737369;
      break;
    case 8:
      unint64_t v6 = 0xE300000000000000;
      uint64_t v5 = 7566953;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      unint64_t v2 = 0xE600000000000000;
      if (v5 == 0x656369766564) {
        goto LABEL_25;
      }
      goto LABEL_28;
    case 2:
      unint64_t v2 = 0xEA00000000006565;
      if (v5 != 0x732D656369766564) {
        goto LABEL_28;
      }
      goto LABEL_25;
    case 3:
      unint64_t v2 = 0xE300000000000000;
      if (v5 != 7302761) {
        goto LABEL_28;
      }
      goto LABEL_25;
    case 4:
      unint64_t v2 = 0xE200000000000000;
      if (v5 != 28787) {
        goto LABEL_28;
      }
      goto LABEL_25;
    case 5:
      unint64_t v2 = 0xE600000000000000;
      if (v5 != 0x616E65687461) {
        goto LABEL_28;
      }
      goto LABEL_25;
    case 6:
      unint64_t v2 = 0xE800000000000000;
      if (v5 != 0x726F737365737361) {
        goto LABEL_28;
      }
      goto LABEL_25;
    case 7:
      unint64_t v2 = 0xE600000000000000;
      uint64_t v3 = 0x726575737369;
      goto LABEL_24;
    case 8:
      unint64_t v2 = 0xE300000000000000;
      if (v5 != 7566953) {
        goto LABEL_28;
      }
      goto LABEL_25;
    default:
LABEL_24:
      if (v5 != v3) {
        goto LABEL_28;
      }
LABEL_25:
      if (v6 == v2) {
        char v7 = 1;
      }
      else {
LABEL_28:
      }
        char v7 = sub_1D7A9D358();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1D799669C(char a1, char a2)
{
  if (*(void *)&aChi_1[8 * a1] == *(void *)&aChi_1[8 * a2]) {
    char v2 = 1;
  }
  else {
    char v2 = sub_1D7A9D358();
  }
  swift_bridgeObjectRelease_n();
  return v2 & 1;
}

uint64_t sub_1D7996708(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x6575716552636F64;
  }
  else {
    uint64_t v3 = 0x6E6F6973726576;
  }
  if (v2) {
    unint64_t v4 = 0xE700000000000000;
  }
  else {
    unint64_t v4 = 0xEB00000000737473;
  }
  if (a2) {
    uint64_t v5 = 0x6575716552636F64;
  }
  else {
    uint64_t v5 = 0x6E6F6973726576;
  }
  if (a2) {
    unint64_t v6 = 0xEB00000000737473;
  }
  else {
    unint64_t v6 = 0xE700000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1D7A9D358();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1D79967BC(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v3 = 0x63617053656D616ELL;
    }
    else {
      uint64_t v3 = 0x4974736575716572;
    }
    if (v2 == 1) {
      unint64_t v4 = 0xEA00000000007365;
    }
    else {
      unint64_t v4 = 0xEB000000006F666ELL;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        uint64_t v6 = 0x63617053656D616ELL;
      }
      else {
        uint64_t v6 = 0x4974736575716572;
      }
      if (v5 == 1) {
        unint64_t v7 = 0xEA00000000007365;
      }
      else {
        unint64_t v7 = 0xEB000000006F666ELL;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xE700000000000000;
    uint64_t v3 = 0x65707954636F64;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE700000000000000;
  if (v3 != 0x65707954636F64)
  {
LABEL_21:
    char v8 = sub_1D7A9D358();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1D79968F0(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x7541726564616572;
  }
  else {
    uint64_t v3 = 0x716552736D657469;
  }
  if (v2) {
    unint64_t v4 = 0xEC00000074736575;
  }
  else {
    unint64_t v4 = 0xEA00000000006874;
  }
  if (a2) {
    uint64_t v5 = 0x7541726564616572;
  }
  else {
    uint64_t v5 = 0x716552736D657469;
  }
  if (a2) {
    unint64_t v6 = 0xEA00000000006874;
  }
  else {
    unint64_t v6 = 0xEC00000074736575;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1D7A9D358();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1D79969A4(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    unint64_t v3 = 0xD000000000000016;
  }
  else {
    unint64_t v3 = 0xD000000000000015;
  }
  if (v2) {
    unint64_t v4 = 0x80000001D7ABB6E0;
  }
  else {
    unint64_t v4 = 0x80000001D7ABB700;
  }
  if (a2) {
    unint64_t v5 = 0xD000000000000016;
  }
  else {
    unint64_t v5 = 0xD000000000000015;
  }
  if (a2) {
    unint64_t v6 = 0x80000001D7ABB700;
  }
  else {
    unint64_t v6 = 0x80000001D7ABB6E0;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1D7A9D358();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1D7996A4C(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x444965636146;
  }
  else {
    uint64_t v3 = 0x44496863756F54;
  }
  if (v2) {
    unint64_t v4 = 0xE700000000000000;
  }
  else {
    unint64_t v4 = 0xE600000000000000;
  }
  if (a2) {
    uint64_t v5 = 0x444965636146;
  }
  else {
    uint64_t v5 = 0x44496863756F54;
  }
  if (a2) {
    unint64_t v6 = 0xE600000000000000;
  }
  else {
    unint64_t v6 = 0xE700000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1D7A9D358();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1D7996AF0(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x363532505F4345;
  unint64_t v3 = 0xE700000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x363532505F4345;
  switch(v4)
  {
    case 1:
      uint64_t v5 = 0x343833505F4345;
      break;
    case 2:
      uint64_t v5 = 0x313235505F4345;
      break;
    case 3:
      unint64_t v3 = 0xE800000000000000;
      uint64_t v5 = 0x39313535325F4445;
      break;
    case 4:
      unint64_t v3 = 0xE600000000000000;
      uint64_t v5 = 0x3834345F4445;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE700000000000000;
  switch(a2)
  {
    case 1:
      if (v5 == 0x343833505F4345) {
        goto LABEL_13;
      }
      goto LABEL_16;
    case 2:
      if (v5 != 0x313235505F4345) {
        goto LABEL_16;
      }
      goto LABEL_13;
    case 3:
      unint64_t v6 = 0xE800000000000000;
      uint64_t v2 = 0x39313535325F4445;
      goto LABEL_12;
    case 4:
      unint64_t v6 = 0xE600000000000000;
      if (v5 != 0x3834345F4445) {
        goto LABEL_16;
      }
      goto LABEL_13;
    default:
LABEL_12:
      if (v5 != v2) {
        goto LABEL_16;
      }
LABEL_13:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_16:
      }
        char v7 = sub_1D7A9D358();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1D7996CA4(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x64696C61766E69;
  unint64_t v3 = 0xE700000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x64696C61766E69;
  switch(v4)
  {
    case 1:
      uint64_t v5 = 7041899;
      unint64_t v3 = 0xE300000000000000;
      break;
    case 2:
      unint64_t v3 = 0xE300000000000000;
      uint64_t v5 = 7038308;
      break;
    case 3:
      unint64_t v3 = 0xE500000000000000;
      uint64_t v5 = 0x72616B6564;
      break;
    case 4:
      uint64_t v5 = 7041904;
      unint64_t v3 = 0xE300000000000000;
      break;
    case 5:
      uint64_t v5 = 7041136;
      unint64_t v3 = 0xE300000000000000;
      break;
    case 6:
      unint64_t v3 = 0xE300000000000000;
      uint64_t v5 = 7628656;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE700000000000000;
  switch(a2)
  {
    case 1:
      uint64_t v7 = 7041899;
      goto LABEL_15;
    case 2:
      unint64_t v6 = 0xE300000000000000;
      if (v5 != 7038308) {
        goto LABEL_22;
      }
      goto LABEL_19;
    case 3:
      unint64_t v6 = 0xE500000000000000;
      if (v5 != 0x72616B6564) {
        goto LABEL_22;
      }
      goto LABEL_19;
    case 4:
      uint64_t v7 = 7041904;
LABEL_15:
      unint64_t v6 = 0xE300000000000000;
      if (v5 != v7) {
        goto LABEL_22;
      }
      goto LABEL_19;
    case 5:
      uint64_t v2 = 7041136;
      unint64_t v6 = 0xE300000000000000;
      goto LABEL_18;
    case 6:
      unint64_t v6 = 0xE300000000000000;
      if (v5 != 7628656) {
        goto LABEL_22;
      }
      goto LABEL_19;
    default:
LABEL_18:
      if (v5 != v2) {
        goto LABEL_22;
      }
LABEL_19:
      if (v3 == v6) {
        char v8 = 1;
      }
      else {
LABEL_22:
      }
        char v8 = sub_1D7A9D358();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v8 & 1;
  }
}

uint64_t sub_1D7996E7C(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x64696C61766E69;
  unint64_t v3 = 0xE700000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x64696C61766E69;
  switch(v4)
  {
    case 1:
      uint64_t v5 = 0x732D79636167656CLL;
      unint64_t v3 = 0xE900000000000065;
      break;
    case 2:
      uint64_t v5 = 7562611;
      unint64_t v3 = 0xE300000000000000;
      break;
    case 3:
      unint64_t v3 = 0xE300000000000000;
      uint64_t v5 = 7366003;
      break;
    case 4:
      uint64_t v5 = 0x6C616E7265747865;
      unint64_t v3 = 0xEB0000000065732DLL;
      break;
    case 5:
      unint64_t v3 = 0xE800000000000000;
      uint64_t v5 = 0x6E6961686379656BLL;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE700000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE900000000000065;
      if (v5 == 0x732D79636167656CLL) {
        goto LABEL_16;
      }
      goto LABEL_19;
    case 2:
      unint64_t v6 = 0xE300000000000000;
      if (v5 != 7562611) {
        goto LABEL_19;
      }
      goto LABEL_16;
    case 3:
      unint64_t v6 = 0xE300000000000000;
      if (v5 != 7366003) {
        goto LABEL_19;
      }
      goto LABEL_16;
    case 4:
      uint64_t v2 = 0x6C616E7265747865;
      unint64_t v6 = 0xEB0000000065732DLL;
      goto LABEL_15;
    case 5:
      unint64_t v6 = 0xE800000000000000;
      if (v5 != 0x6E6961686379656BLL) {
        goto LABEL_19;
      }
      goto LABEL_16;
    default:
LABEL_15:
      if (v5 != v2) {
        goto LABEL_19;
      }
LABEL_16:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_19:
      }
        char v7 = sub_1D7A9D358();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1D7997088(char a1, char a2)
{
  if (a1) {
    uint64_t v2 = 49;
  }
  else {
    uint64_t v2 = 53;
  }
  if (a2) {
    uint64_t v3 = 49;
  }
  else {
    uint64_t v3 = 53;
  }
  if (v2 == v3) {
    char v4 = 1;
  }
  else {
    char v4 = sub_1D7A9D358();
  }
  swift_bridgeObjectRelease_n();
  return v4 & 1;
}

uint64_t sub_1D79970F0(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x65707954636F64;
  unint64_t v3 = 0xE700000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x65707954636F64;
  switch(v4)
  {
    case 1:
      uint64_t v6 = 0x726575737369;
      goto LABEL_4;
    case 2:
      uint64_t v6 = 0x656369766564;
LABEL_4:
      uint64_t v5 = v6 & 0xFFFFFFFFFFFFLL | 0x6953000000000000;
      unint64_t v3 = 0xEC00000064656E67;
      break;
    case 3:
      unint64_t v3 = 0xE600000000000000;
      uint64_t v5 = 0x73726F727265;
      break;
    default:
      break;
  }
  unint64_t v7 = 0xE700000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v7 = 0xEC00000064656E67;
      if (v5 == 0x6953726575737369) {
        goto LABEL_13;
      }
      goto LABEL_15;
    case 2:
      uint64_t v2 = 0x6953656369766564;
      unint64_t v7 = 0xEC00000064656E67;
      goto LABEL_10;
    case 3:
      unint64_t v7 = 0xE600000000000000;
      if (v5 == 0x73726F727265) {
        goto LABEL_13;
      }
      goto LABEL_15;
    default:
LABEL_10:
      if (v5 != v2) {
        goto LABEL_15;
      }
LABEL_13:
      if (v3 == v7) {
        char v8 = 1;
      }
      else {
LABEL_15:
      }
        char v8 = sub_1D7A9D358();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v8 & 1;
  }
}

uint64_t sub_1D7997288(char a1, char a2)
{
  if (a1 == a2) {
    char v2 = 1;
  }
  else {
    char v2 = sub_1D7A9D358();
  }
  swift_bridgeObjectRelease_n();
  return v2 & 1;
}

uint64_t sub_1D79972EC(char a1, char a2)
{
  if (a1) {
    uint64_t v2 = 50;
  }
  else {
    uint64_t v2 = 49;
  }
  if (a2) {
    uint64_t v3 = 50;
  }
  else {
    uint64_t v3 = 49;
  }
  if (v2 == v3) {
    char v4 = 1;
  }
  else {
    char v4 = sub_1D7A9D358();
  }
  swift_bridgeObjectRelease_n();
  return v4 & 1;
}

uint64_t sub_1D7997354(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x7541656369766564;
  }
  else {
    uint64_t v3 = 0x63617053656D616ELL;
  }
  if (v2) {
    unint64_t v4 = 0xEA00000000007365;
  }
  else {
    unint64_t v4 = 0xEA00000000006874;
  }
  if (a2) {
    uint64_t v5 = 0x7541656369766564;
  }
  else {
    uint64_t v5 = 0x63617053656D616ELL;
  }
  if (a2) {
    unint64_t v6 = 0xEA00000000006874;
  }
  else {
    unint64_t v6 = 0xEA00000000007365;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1D7A9D358();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1D7997400(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x6E6F6973726576;
  unint64_t v3 = 0xE700000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x6E6F6973726576;
  switch(v4)
  {
    case 1:
      uint64_t v5 = 0x746E656D75636F64;
      unint64_t v3 = 0xE900000000000073;
      break;
    case 2:
      uint64_t v5 = 0x746E656D75636F64;
      unint64_t v3 = 0xEE0073726F727245;
      break;
    case 3:
      unint64_t v3 = 0xE600000000000000;
      uint64_t v5 = 0x737574617473;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE700000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE900000000000073;
      if (v5 == 0x746E656D75636F64) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      uint64_t v2 = 0x746E656D75636F64;
      unint64_t v6 = 0xEE0073726F727245;
      goto LABEL_9;
    case 3:
      unint64_t v6 = 0xE600000000000000;
      if (v5 == 0x737574617473) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v5 != v2) {
        goto LABEL_14;
      }
LABEL_12:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = sub_1D7A9D358();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1D79975A8(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    unint64_t v3 = 0xD000000000000024;
  }
  else {
    unint64_t v3 = 0xD000000000000023;
  }
  if (v2) {
    unint64_t v4 = 0x80000001D7ABC620;
  }
  else {
    unint64_t v4 = 0x80000001D7ABC650;
  }
  if (a2) {
    unint64_t v5 = 0xD000000000000024;
  }
  else {
    unint64_t v5 = 0xD000000000000023;
  }
  if (a2) {
    unint64_t v6 = 0x80000001D7ABC650;
  }
  else {
    unint64_t v6 = 0x80000001D7ABC620;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1D7A9D358();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1D7997650(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x7541726575737369;
  }
  else {
    uint64_t v3 = 0x63617053656D616ELL;
  }
  if (v2) {
    unint64_t v4 = 0xEA00000000007365;
  }
  else {
    unint64_t v4 = 0xEA00000000006874;
  }
  if (a2) {
    uint64_t v5 = 0x7541726575737369;
  }
  else {
    uint64_t v5 = 0x63617053656D616ELL;
  }
  if (a2) {
    unint64_t v6 = 0xEA00000000006874;
  }
  else {
    unint64_t v6 = 0xEA00000000007365;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1D7A9D358();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1D79976FC(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0x73736563637573;
  unint64_t v3 = 0xE700000000000000;
  uint64_t v4 = a1;
  unint64_t v5 = 0x73736563637573;
  switch(v4)
  {
    case 1:
      unint64_t v5 = 0x44676E697373696DLL;
      unint64_t v3 = 0xEF746E656D75636FLL;
      break;
    case 2:
      unint64_t v3 = 0x80000001D7ABB390;
      unint64_t v5 = 0xD000000000000012;
      break;
    case 3:
      unint64_t v5 = 0xD000000000000017;
      unint64_t v3 = 0x80000001D7ABB3B0;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE700000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xEF746E656D75636FLL;
      if (v5 == 0x44676E697373696DLL) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      unint64_t v6 = 0x80000001D7ABB390;
      unint64_t v2 = 0xD000000000000012;
      goto LABEL_9;
    case 3:
      unint64_t v6 = 0x80000001D7ABB3B0;
      if (v5 == 0xD000000000000017) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v5 != v2) {
        goto LABEL_14;
      }
LABEL_12:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = sub_1D7A9D358();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1D79978C4(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xD000000000000012;
  unint64_t v3 = 0x80000001D7ABB3F0;
  uint64_t v4 = a1;
  uint64_t v5 = 0xD000000000000012;
  switch(v4)
  {
    case 1:
      uint64_t v6 = 0x4D6C61636976;
      goto LABEL_4;
    case 2:
      uint64_t v6 = 0x4D79654B6573;
LABEL_4:
      uint64_t v5 = v6 & 0xFFFFFFFFFFFFLL | 0x7369000000000000;
      unint64_t v3 = 0xEC000000676E6973;
      break;
    case 3:
      uint64_t v5 = 0x4D6E6F6973736573;
      unint64_t v3 = 0xEE00676E69737369;
      break;
    default:
      break;
  }
  unint64_t v7 = 0x80000001D7ABB3F0;
  switch(a2)
  {
    case 1:
      unint64_t v7 = 0xEC000000676E6973;
      if (v5 == 0x73694D6C61636976) {
        goto LABEL_13;
      }
      goto LABEL_15;
    case 2:
      unint64_t v2 = 0x73694D79654B6573;
      unint64_t v7 = 0xEC000000676E6973;
      goto LABEL_10;
    case 3:
      unint64_t v7 = 0xEE00676E69737369;
      if (v5 == 0x4D6E6F6973736573) {
        goto LABEL_13;
      }
      goto LABEL_15;
    default:
LABEL_10:
      if (v5 != v2) {
        goto LABEL_15;
      }
LABEL_13:
      if (v3 == v7) {
        char v8 = 1;
      }
      else {
LABEL_15:
      }
        char v8 = sub_1D7A9D358();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v8 & 1;
  }
}

uint64_t sub_1D7997A78(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xD000000000000028;
  unint64_t v3 = 0x80000001D7ABB430;
  uint64_t v4 = a1;
  unint64_t v5 = 0xD000000000000028;
  switch(v4)
  {
    case 1:
      unint64_t v5 = 0xD000000000000027;
      uint64_t v6 = "documentReaderCertificateInvalidLogoURL";
      goto LABEL_5;
    case 2:
      unint64_t v5 = 0xD000000000000029;
      uint64_t v6 = "documentReaderCertificateLogoHashMismatch";
      goto LABEL_5;
    case 3:
      uint64_t v6 = "documentReaderCertificateLogoFetchFailed";
LABEL_5:
      unint64_t v3 = (unint64_t)(v6 - 32) | 0x8000000000000000;
      break;
    default:
      break;
  }
  unint64_t v7 = 0x80000001D7ABB430;
  switch(a2)
  {
    case 1:
      unint64_t v2 = 0xD000000000000027;
      char v8 = "documentReaderCertificateInvalidLogoURL";
      goto LABEL_10;
    case 2:
      unint64_t v2 = 0xD000000000000029;
      char v8 = "documentReaderCertificateLogoHashMismatch";
      goto LABEL_10;
    case 3:
      char v8 = "documentReaderCertificateLogoFetchFailed";
LABEL_10:
      unint64_t v7 = (unint64_t)(v8 - 32) | 0x8000000000000000;
      break;
    default:
      break;
  }
  if (v5 == v2 && v3 == v7) {
    char v9 = 1;
  }
  else {
    char v9 = sub_1D7A9D358();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v9 & 1;
}

uint64_t sub_1D7997BCC(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x73736563637573;
  unint64_t v3 = 0xE700000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x73736563637573;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE800000000000000;
      uint64_t v5 = 0x6B6361626C6C6166;
      break;
    case 2:
      uint64_t v5 = 0x6572756C696166;
      break;
    case 3:
      uint64_t v5 = 0x686361436D6F7266;
      unint64_t v3 = 0xE900000000000065;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE700000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE800000000000000;
      if (v5 == 0x6B6361626C6C6166) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      uint64_t v2 = 0x6572756C696166;
      goto LABEL_9;
    case 3:
      unint64_t v6 = 0xE900000000000065;
      if (v5 == 0x686361436D6F7266) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v5 != v2) {
        goto LABEL_14;
      }
LABEL_12:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = sub_1D7A9D358();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1D7997D5C(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xED000064656E7275;
  uint64_t v3 = 0x7465527364697575;
  uint64_t v4 = a1;
  unint64_t v5 = 0x7465527364697575;
  unint64_t v6 = 0xED000064656E7275;
  switch(v4)
  {
    case 1:
      unint64_t v5 = 0x526F544C43416F6ELL;
      unint64_t v6 = 0xED00006E72757465;
      break;
    case 2:
      unint64_t v5 = 0x5473444955556F6ELL;
      unint64_t v6 = 0xEF6E72757465526FLL;
      break;
    case 3:
      unint64_t v6 = 0x80000001D7ABBAA0;
      unint64_t v5 = 0xD000000000000018;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      unint64_t v2 = 0xED00006E72757465;
      if (v5 == 0x526F544C43416F6ELL) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      uint64_t v3 = 0x5473444955556F6ELL;
      unint64_t v2 = 0xEF6E72757465526FLL;
      goto LABEL_9;
    case 3:
      unint64_t v2 = 0x80000001D7ABBAA0;
      if (v5 == 0xD000000000000018) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v5 != v3) {
        goto LABEL_14;
      }
LABEL_12:
      if (v6 == v2) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = sub_1D7A9D358();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1D7997F3C(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2 = 0xEA00000000006465;
  uint64_t v3 = 0x6B6F766552746F6ELL;
  int v4 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v5 = 0x64656B6F766572;
    }
    else {
      uint64_t v5 = 0x756C636E6F636E69;
    }
    if (v4 == 1) {
      unint64_t v6 = 0xE700000000000000;
    }
    else {
      unint64_t v6 = 0xEC00000065766973;
    }
    int v7 = a2;
    if (!a2) {
      goto LABEL_15;
    }
    goto LABEL_9;
  }
  uint64_t v5 = 0x6B6F766552746F6ELL;
  unint64_t v6 = 0xEA00000000006465;
  int v7 = a2;
  if (a2)
  {
LABEL_9:
    if (v7 == 1) {
      uint64_t v3 = 0x64656B6F766572;
    }
    else {
      uint64_t v3 = 0x756C636E6F636E69;
    }
    if (v7 == 1) {
      unint64_t v2 = 0xE700000000000000;
    }
    else {
      unint64_t v2 = 0xEC00000065766973;
    }
  }
LABEL_15:
  if (v5 == v3 && v6 == v2) {
    char v8 = 1;
  }
  else {
    char v8 = sub_1D7A9D358();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1D7998068(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xD000000000000014;
  unint64_t v3 = 0x80000001D7ABB9E0;
  uint64_t v4 = a1;
  unint64_t v5 = 0xD000000000000014;
  switch(v4)
  {
    case 1:
      unint64_t v5 = 0xD000000000000016;
      unint64_t v6 = "inactivePresentmentKey";
      goto LABEL_6;
    case 2:
      unint64_t v5 = 0x64656E616870726FLL;
      unint64_t v3 = 0xEF73746F6C534553;
      break;
    case 3:
      unint64_t v5 = 0xD00000000000001BLL;
      unint64_t v6 = "inactiveDeviceEncryptionKey";
      goto LABEL_6;
    case 4:
      unint64_t v5 = 0xD00000000000001CLL;
      unint64_t v6 = "inactivePayloadProtectionKey";
LABEL_6:
      unint64_t v3 = (unint64_t)(v6 - 32) | 0x8000000000000000;
      break;
    default:
      break;
  }
  unint64_t v7 = 0x80000001D7ABB9E0;
  switch(a2)
  {
    case 1:
      unint64_t v2 = 0xD000000000000016;
      char v8 = "inactivePresentmentKey";
      goto LABEL_12;
    case 2:
      unint64_t v2 = 0x64656E616870726FLL;
      unint64_t v7 = 0xEF73746F6C534553;
      break;
    case 3:
      unint64_t v2 = 0xD00000000000001BLL;
      char v8 = "inactiveDeviceEncryptionKey";
      goto LABEL_12;
    case 4:
      unint64_t v2 = 0xD00000000000001CLL;
      char v8 = "inactivePayloadProtectionKey";
LABEL_12:
      unint64_t v7 = (unint64_t)(v8 - 32) | 0x8000000000000000;
      break;
    default:
      break;
  }
  if (v5 == v2 && v3 == v7) {
    char v9 = 1;
  }
  else {
    char v9 = sub_1D7A9D358();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v9 & 1;
}

uint64_t sub_1D7998214(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    unint64_t v3 = 0xD000000000000013;
  }
  else {
    unint64_t v3 = 0xD000000000000017;
  }
  if (v2) {
    unint64_t v4 = 0x80000001D7ABBAC0;
  }
  else {
    unint64_t v4 = 0x80000001D7ABBAE0;
  }
  if (a2) {
    unint64_t v5 = 0xD000000000000013;
  }
  else {
    unint64_t v5 = 0xD000000000000017;
  }
  if (a2) {
    unint64_t v6 = 0x80000001D7ABBAE0;
  }
  else {
    unint64_t v6 = 0x80000001D7ABBAC0;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1D7A9D358();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1D79982C0(uint64_t a1, uint64_t a2)
{
  return sub_1D7998A90(a1, a2, (uint64_t (*)(void))IDCSAnalytics.ReaderAuthFailureReason.rawValue.getter);
}

uint64_t sub_1D79982D8(uint64_t a1, uint64_t a2)
{
  return sub_1D7998A90(a1, a2, IDCSAnalytics.PayloadValidationResult.rawValue.getter);
}

uint64_t sub_1D79982F0(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2 = 0xEC000000676E696ELL;
  uint64_t v3 = 0x6F697369766F7270;
  int v4 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v5 = 0x6D746E6573657270;
    }
    else {
      uint64_t v5 = 0x6E776F6E6B6E75;
    }
    if (v4 == 1) {
      unint64_t v6 = 0xEB00000000746E65;
    }
    else {
      unint64_t v6 = 0xE700000000000000;
    }
    int v7 = a2;
    if (!a2) {
      goto LABEL_15;
    }
    goto LABEL_9;
  }
  uint64_t v5 = 0x6F697369766F7270;
  unint64_t v6 = 0xEC000000676E696ELL;
  int v7 = a2;
  if (a2)
  {
LABEL_9:
    if (v7 == 1) {
      uint64_t v3 = 0x6D746E6573657270;
    }
    else {
      uint64_t v3 = 0x6E776F6E6B6E75;
    }
    if (v7 == 1) {
      unint64_t v2 = 0xEB00000000746E65;
    }
    else {
      unint64_t v2 = 0xE700000000000000;
    }
  }
LABEL_15:
  if (v5 == v3 && v6 == v2) {
    char v8 = 1;
  }
  else {
    char v8 = sub_1D7A9D358();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1D7998424(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2 = 0xED00006465746163;
  uint64_t v3 = 0x69746E6568747561;
  int v4 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v5 = 0x6E65687475616E75;
    }
    else {
      uint64_t v5 = 0x64657463656A6572;
    }
    if (v4 == 1) {
      unint64_t v6 = 0xEF64657461636974;
    }
    else {
      unint64_t v6 = 0xE800000000000000;
    }
    int v7 = a2;
    if (!a2) {
      goto LABEL_15;
    }
    goto LABEL_9;
  }
  uint64_t v5 = 0x69746E6568747561;
  unint64_t v6 = 0xED00006465746163;
  int v7 = a2;
  if (a2)
  {
LABEL_9:
    if (v7 == 1) {
      uint64_t v3 = 0x6E65687475616E75;
    }
    else {
      uint64_t v3 = 0x64657463656A6572;
    }
    if (v7 == 1) {
      unint64_t v2 = 0xEF64657461636974;
    }
    else {
      unint64_t v2 = 0xE800000000000000;
    }
  }
LABEL_15:
  if (v5 == v3 && v6 == v2) {
    char v8 = 1;
  }
  else {
    char v8 = sub_1D7A9D358();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1D7998568(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v3 = 1768319351;
    }
    else {
      uint64_t v3 = 0x726568746FLL;
    }
    if (v2 == 1) {
      unint64_t v4 = 0xE400000000000000;
    }
    else {
      unint64_t v4 = 0xE500000000000000;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        uint64_t v6 = 1768319351;
      }
      else {
        uint64_t v6 = 0x726568746FLL;
      }
      if (v5 == 1) {
        unint64_t v7 = 0xE400000000000000;
      }
      else {
        unint64_t v7 = 0xE500000000000000;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xE800000000000000;
    uint64_t v3 = 0x72616C756C6C6563;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE800000000000000;
  if (v3 != 0x72616C756C6C6563)
  {
LABEL_21:
    char v8 = sub_1D7A9D358();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1D799866C(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x656E696C66666FLL;
  }
  else {
    uint64_t v3 = 0x656E696C6E6FLL;
  }
  if (v2) {
    unint64_t v4 = 0xE600000000000000;
  }
  else {
    unint64_t v4 = 0xE700000000000000;
  }
  if (a2) {
    uint64_t v5 = 0x656E696C66666FLL;
  }
  else {
    uint64_t v5 = 0x656E696C6E6FLL;
  }
  if (a2) {
    unint64_t v6 = 0xE700000000000000;
  }
  else {
    unint64_t v6 = 0xE600000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1D7A9D358();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1D7998710(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v3 = 0x7469573635325345;
    }
    else {
      uint64_t v3 = 0x453635325345;
    }
    if (v2 == 1) {
      unint64_t v4 = 0xEC0000004D415568;
    }
    else {
      unint64_t v4 = 0xE600000000000000;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        uint64_t v6 = 0x7469573635325345;
      }
      else {
        uint64_t v6 = 0x453635325345;
      }
      if (v5 == 1) {
        unint64_t v7 = 0xEC0000004D415568;
      }
      else {
        unint64_t v7 = 0xE600000000000000;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xE500000000000000;
    uint64_t v3 = 0x3635325345;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE500000000000000;
  if (v3 != 0x3635325345)
  {
LABEL_21:
    char v8 = sub_1D7A9D358();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1D799882C(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x6C61757165;
  unint64_t v3 = 0xE500000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x6C61757165;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE800000000000000;
      uint64_t v5 = 0x6C61757145746F6ELL;
      break;
    case 2:
      unint64_t v3 = 0xE400000000000000;
      uint64_t v5 = 1936942444;
      break;
    case 3:
      unint64_t v3 = 0xE700000000000000;
      uint64_t v5 = 0x72657461657267;
      break;
    case 4:
      uint64_t v5 = 0x617571457373656CLL;
      unint64_t v3 = 0xE90000000000006CLL;
      break;
    case 5:
      uint64_t v5 = 0x4572657461657267;
      unint64_t v3 = 0xEC0000006C617571;
      break;
    case 6:
      unint64_t v3 = 0xE700000000000000;
      uint64_t v5 = 0x6E776F6E6B6E75;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE500000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE800000000000000;
      if (v5 == 0x6C61757145746F6ELL) {
        goto LABEL_19;
      }
      goto LABEL_22;
    case 2:
      unint64_t v6 = 0xE400000000000000;
      if (v5 != 1936942444) {
        goto LABEL_22;
      }
      goto LABEL_19;
    case 3:
      unint64_t v6 = 0xE700000000000000;
      if (v5 != 0x72657461657267) {
        goto LABEL_22;
      }
      goto LABEL_19;
    case 4:
      unint64_t v6 = 0xE90000000000006CLL;
      if (v5 != 0x617571457373656CLL) {
        goto LABEL_22;
      }
      goto LABEL_19;
    case 5:
      uint64_t v2 = 0x4572657461657267;
      unint64_t v6 = 0xEC0000006C617571;
      goto LABEL_18;
    case 6:
      unint64_t v6 = 0xE700000000000000;
      if (v5 != 0x6E776F6E6B6E75) {
        goto LABEL_22;
      }
      goto LABEL_19;
    default:
LABEL_18:
      if (v5 != v2) {
        goto LABEL_22;
      }
LABEL_19:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_22:
      }
        char v7 = sub_1D7A9D358();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1D7998A78(uint64_t a1, uint64_t a2)
{
  return sub_1D7998A90(a1, a2, DIPCertUsage.rawValue.getter);
}

uint64_t sub_1D7998A90(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v4 = a3();
  uint64_t v6 = v5;
  if (v4 == a3() && v6 == v7) {
    char v9 = 1;
  }
  else {
    char v9 = sub_1D7A9D358();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v9 & 1;
}

uint64_t sub_1D7998B34(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x646563616C706572;
  unint64_t v3 = 0xE800000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x646563616C706572;
  switch(v4)
  {
    case 1:
      uint64_t v5 = 0x6E6946676E6F7277;
      unint64_t v3 = 0xEB00000000726567;
      break;
    case 2:
      uint64_t v5 = 0x6C69614668747561;
      uint64_t v6 = 25701;
      goto LABEL_5;
    case 3:
      uint64_t v5 = 0x6F6B636F4C6F6962;
      uint64_t v6 = 29813;
LABEL_5:
      unint64_t v3 = v6 & 0xFFFFFFFFFFFFLL | 0xEA00000000000000;
      break;
    default:
      break;
  }
  unint64_t v7 = 0xE800000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v7 = 0xEB00000000726567;
      if (v5 == 0x6E6946676E6F7277) {
        goto LABEL_13;
      }
      goto LABEL_15;
    case 2:
      uint64_t v2 = 0x6C69614668747561;
      unint64_t v7 = 0xEA00000000006465;
      goto LABEL_10;
    case 3:
      unint64_t v7 = 0xEA00000000007475;
      if (v5 == 0x6F6B636F4C6F6962) {
        goto LABEL_13;
      }
      goto LABEL_15;
    default:
LABEL_10:
      if (v5 != v2) {
        goto LABEL_15;
      }
LABEL_13:
      if (v3 == v7) {
        char v8 = 1;
      }
      else {
LABEL_15:
      }
        char v8 = sub_1D7A9D358();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v8 & 1;
  }
}

uint64_t sub_1D7998CE0(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v3 = 0x64656C65636E6163;
    }
    else {
      uint64_t v3 = 0x626967696C656E69;
    }
    if (v2 == 1) {
      unint64_t v4 = 0xE800000000000000;
    }
    else {
      unint64_t v4 = 0xEA0000000000656CLL;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        uint64_t v6 = 0x64656C65636E6163;
      }
      else {
        uint64_t v6 = 0x626967696C656E69;
      }
      if (v5 == 1) {
        unint64_t v7 = 0xE800000000000000;
      }
      else {
        unint64_t v7 = 0xEA0000000000656CLL;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xE700000000000000;
    uint64_t v3 = 0x73736563637573;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE700000000000000;
  if (v3 != 0x73736563637573)
  {
LABEL_21:
    char v8 = sub_1D7A9D358();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1D7998E04(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v3 = 0x44496863756F74;
    }
    else {
      uint64_t v3 = 0x65646F6373736170;
    }
    if (v2 == 1) {
      unint64_t v4 = 0xE700000000000000;
    }
    else {
      unint64_t v4 = 0xE800000000000000;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        uint64_t v6 = 0x44496863756F74;
      }
      else {
        uint64_t v6 = 0x65646F6373736170;
      }
      if (v5 == 1) {
        unint64_t v7 = 0xE700000000000000;
      }
      else {
        unint64_t v7 = 0xE800000000000000;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xE600000000000000;
    uint64_t v3 = 0x444965636166;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE600000000000000;
  if (v3 != 0x444965636166)
  {
LABEL_21:
    char v8 = sub_1D7A9D358();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1D7998F18(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xEC000000746E6F72;
  uint64_t v3 = 0x665F64695F776172;
  uint64_t v4 = a1;
  unint64_t v5 = 0x665F64695F776172;
  unint64_t v6 = 0xEC000000746E6F72;
  switch(v4)
  {
    case 1:
      unint64_t v5 = 0x625F64695F776172;
      unint64_t v6 = 0xEB000000006B6361;
      break;
    case 2:
      unint64_t v5 = 0xD000000000000012;
      unint64_t v6 = 0x80000001D7ABBD80;
      break;
    case 3:
      unint64_t v6 = 0x80000001D7ABBDA0;
      unint64_t v5 = 0xD000000000000011;
      break;
    case 4:
      unint64_t v6 = 0xE600000000000000;
      unint64_t v5 = 0x6569666C6573;
      break;
    case 5:
      unint64_t v5 = 0x7373656E6576696CLL;
      unint64_t v6 = 0xEE006F656469765FLL;
      break;
    case 6:
      unint64_t v5 = 0x5F65766973736170;
      unint64_t v6 = 0xED00006F65646976;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      unint64_t v2 = 0xEB000000006B6361;
      if (v5 == 0x625F64695F776172) {
        goto LABEL_19;
      }
      goto LABEL_22;
    case 2:
      unint64_t v2 = 0x80000001D7ABBD80;
      if (v5 != 0xD000000000000012) {
        goto LABEL_22;
      }
      goto LABEL_19;
    case 3:
      unint64_t v2 = 0x80000001D7ABBDA0;
      if (v5 != 0xD000000000000011) {
        goto LABEL_22;
      }
      goto LABEL_19;
    case 4:
      unint64_t v2 = 0xE600000000000000;
      if (v5 != 0x6569666C6573) {
        goto LABEL_22;
      }
      goto LABEL_19;
    case 5:
      uint64_t v3 = 0x7373656E6576696CLL;
      unint64_t v2 = 0xEE006F656469765FLL;
      goto LABEL_18;
    case 6:
      unint64_t v2 = 0xED00006F65646976;
      if (v5 != 0x5F65766973736170) {
        goto LABEL_22;
      }
      goto LABEL_19;
    default:
LABEL_18:
      if (v5 != v3) {
        goto LABEL_22;
      }
LABEL_19:
      if (v6 == v2) {
        char v7 = 1;
      }
      else {
LABEL_22:
      }
        char v7 = sub_1D7A9D358();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1D79991C4(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x534F6863746177;
  }
  else {
    uint64_t v3 = 5459817;
  }
  if (v2) {
    unint64_t v4 = 0xE300000000000000;
  }
  else {
    unint64_t v4 = 0xE700000000000000;
  }
  if (a2) {
    uint64_t v5 = 0x534F6863746177;
  }
  else {
    uint64_t v5 = 5459817;
  }
  if (a2) {
    unint64_t v6 = 0xE700000000000000;
  }
  else {
    unint64_t v6 = 0xE300000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1D7A9D358();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1D7999264(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v3 = 5459817;
    }
    else {
      uint64_t v3 = 0x534F6863746177;
    }
    if (v2 == 1) {
      unint64_t v4 = 0xE300000000000000;
    }
    else {
      unint64_t v4 = 0xE700000000000000;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        uint64_t v6 = 5459817;
      }
      else {
        uint64_t v6 = 0x534F6863746177;
      }
      if (v5 == 1) {
        unint64_t v7 = 0xE300000000000000;
      }
      else {
        unint64_t v7 = 0xE700000000000000;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xE700000000000000;
    uint64_t v3 = 0x746C7561666564;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE700000000000000;
  if (v3 != 0x746C7561666564)
  {
LABEL_21:
    char v8 = sub_1D7A9D358();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1D7999370(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2 = 0x80000001D7ABBB50;
  int v3 = a1;
  if (a1)
  {
    if (a1 == 1) {
      unint64_t v4 = 0x6F52726575737369;
    }
    else {
      unint64_t v4 = 0xD000000000000010;
    }
    if (v3 == 1) {
      unint64_t v5 = 0xEB0000000073746FLL;
    }
    else {
      unint64_t v5 = 0x80000001D7ABBB70;
    }
    int v6 = a2;
    if (a2)
    {
LABEL_9:
      if (v6 == 1) {
        unint64_t v7 = 0x6F52726575737369;
      }
      else {
        unint64_t v7 = 0xD000000000000010;
      }
      if (v6 == 1) {
        unint64_t v2 = 0xEB0000000073746FLL;
      }
      else {
        unint64_t v2 = 0x80000001D7ABBB70;
      }
      if (v4 != v7) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xD000000000000011;
    unint64_t v5 = 0x80000001D7ABBB50;
    int v6 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  if (v4 != 0xD000000000000011)
  {
LABEL_21:
    char v8 = sub_1D7A9D358();
    goto LABEL_22;
  }
LABEL_19:
  if (v5 != v2) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

CoreIDVShared::COSESignatureValidator __swiftcall COSESignatureValidator.init(errorCodeUnknownAlgorithm:errorCodeInvalidPublicKey:errorCodeMisformattedSignature:errorCodeInvalidSignature:)(CoreIDVShared::DIPError::Code errorCodeUnknownAlgorithm, CoreIDVShared::DIPError::Code errorCodeInvalidPublicKey, CoreIDVShared::DIPError::Code errorCodeMisformattedSignature, CoreIDVShared::DIPError::Code errorCodeInvalidSignature)
{
  __int16 v5 = *(_WORD *)errorCodeInvalidPublicKey;
  __int16 v6 = *(_WORD *)errorCodeMisformattedSignature;
  __int16 v7 = *(_WORD *)errorCodeInvalidSignature;
  *unint64_t v4 = *(_WORD *)errorCodeUnknownAlgorithm;
  v4[1] = v5;
  v4[2] = v6;
  v4[3] = v7;
  result.errorCodeUnknownAlgorithm = errorCodeUnknownAlgorithm;
  return result;
}

uint64_t COSESignatureValidator.validateSignature(signature:publicKeyData:publicKeyAlgorithm:algorithmIdentifier:payload:)(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, unsigned __int8 *a5, uint64_t a6, uint64_t a7, unint64_t a8)
{
  uint64_t v65 = a6;
  uint64_t v61 = a3;
  unint64_t v62 = a4;
  uint64_t v59 = a1;
  unint64_t v60 = a2;
  uint64_t v12 = sub_1D7A9B5F8();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12, v14, v15, v16, v17, v18, v19, v20);
  uint64_t v22 = (char *)&v51 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = *a5;
  int v63 = *v8;
  int v56 = v8[1];
  LODWORD(v21) = v8[3];
  int v57 = v8[2];
  int v58 = v21;
  if (qword_1EBDF9DC8 != -1) {
    swift_once();
  }
  uint64_t v23 = __swift_project_value_buffer(v12, (uint64_t)qword_1EBDFBE70);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v22, v23, v12);
  unint64_t v24 = sub_1D7A9B5D8();
  os_log_type_t v25 = sub_1D7A9C748();
  if (os_log_type_enabled(v24, v25))
  {
    uint64_t v55 = a7;
    unint64_t v54 = a8;
    uint64_t v26 = 0x363532505F4345;
    uint64_t v27 = swift_slowAlloc();
    uint64_t v52 = swift_slowAlloc();
    uint64_t v67 = v52;
    *(_DWORD *)uint64_t v27 = 136315394;
    unint64_t v28 = 0xE700000000000000;
    uint64_t v53 = v12;
    switch(v66)
    {
      case 1:
        uint64_t v26 = 0x343833505F4345;
        break;
      case 2:
        uint64_t v26 = 0x313235505F4345;
        break;
      case 3:
        unint64_t v28 = 0xE800000000000000;
        uint64_t v26 = 0x39313535325F4445;
        break;
      case 4:
        unint64_t v28 = 0xE600000000000000;
        uint64_t v26 = 0x3834345F4445;
        break;
      default:
        break;
    }
    uint64_t v70 = sub_1D7923300(v26, v28, &v67);
    sub_1D7A9C9E8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v27 + 12) = 2048;
    uint64_t v29 = v65;
    uint64_t v70 = v65;
    sub_1D7A9C9E8();
    _os_log_impl(&dword_1D7853000, v24, v25, "Validating RFC 8152 signature with public key algorithm %s, signature algorithm %ld", (uint8_t *)v27, 0x16u);
    uint64_t v30 = v52;
    swift_arrayDestroy();
    MEMORY[0x1D947D740](v30, -1, -1);
    MEMORY[0x1D947D740](v27, -1, -1);

    (*(void (**)(char *, uint64_t))(v13 + 8))(v22, v53);
    a8 = v54;
    a7 = v55;
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v13 + 8))(v22, v12);
    uint64_t v29 = v65;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA842490);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1D7AA08E0;
  *(void *)(inited + 32) = 1;
  *(void *)(inited + 40) = v29;
  unint64_t v32 = sub_1D7860F64(inited);
  swift_setDeallocating();
  sub_1D7A9B3F8();
  swift_allocObject();
  sub_1D7860790(a7, a8);
  sub_1D7A9B3E8();
  uint64_t v67 = v32;
  unint64_t v68 = a7;
  unint64_t v69 = a8;
  sub_1D7871B2C();
  uint64_t v33 = v64;
  uint64_t v34 = sub_1D7A9B3C8();
  if (v33)
  {
    swift_bridgeObjectRelease();
    swift_release();
  }
  else
  {
    uint64_t v36 = v34;
    unint64_t v37 = v35;
    swift_release();
    switch(v66)
    {
      case 0:
        swift_bridgeObjectRelease();
        if (v29 == -7) {
          goto LABEL_18;
        }
LABEL_22:
        char v39 = sub_1D7A9D358();
        swift_bridgeObjectRelease();
        if ((v39 & 1) != 0 && v29 == -35)
        {
LABEL_24:
          LOWORD(v67) = v63;
          WORD1(v67) = v56;
          WORD2(v67) = v57;
          HIWORD(v67) = v58;
          sub_1D799AD24(v59, v60, v61, v62, v36, v37);
        }
        else
        {
          switch(v66)
          {
            case 2:
              swift_bridgeObjectRelease();
              if (v29 == -36) {
                goto LABEL_30;
              }
LABEL_34:
              char v41 = sub_1D7A9D358();
              swift_bridgeObjectRelease();
              if ((v41 & 1) == 0 || v29 != -8)
              {
                switch(v66)
                {
                  case 4:
                    swift_bridgeObjectRelease();
                    goto LABEL_41;
                  default:
                    goto LABEL_38;
                }
              }
LABEL_36:
              LOWORD(v67) = v63;
              WORD1(v67) = v56;
              WORD2(v67) = v57;
              HIWORD(v67) = v58;
              sub_1D799C65C(v59, v60, v61, v62, v36, v37);
              break;
            default:
              goto LABEL_28;
          }
        }
        goto LABEL_43;
      case 1:
      case 2:
      case 3:
      case 4:
        char v38 = sub_1D7A9D358();
        swift_bridgeObjectRelease();
        if ((v38 & 1) == 0 || v29 != -7)
        {
          switch((int)v66)
          {
            case 2:
            case 3:
            case 4:
              goto LABEL_22;
            default:
              swift_bridgeObjectRelease();
              if (v29 == -35) {
                goto LABEL_24;
              }
LABEL_28:
              char v40 = sub_1D7A9D358();
              swift_bridgeObjectRelease();
              if ((v40 & 1) != 0 && v29 == -36)
              {
LABEL_30:
                LOWORD(v67) = v63;
                WORD1(v67) = v56;
                WORD2(v67) = v57;
                HIWORD(v67) = v58;
                sub_1D799B9C0(v59, v60, v61, v62, v36, v37);
                goto LABEL_43;
              }
              switch(v66)
              {
                case 3:
                  swift_bridgeObjectRelease();
                  if (v29 == -8) {
                    goto LABEL_36;
                  }
LABEL_38:
                  char v42 = sub_1D7A9D358();
                  swift_bridgeObjectRelease();
                  if ((v42 & 1) == 0) {
                    goto LABEL_46;
                  }
LABEL_41:
                  if (v29 == -8)
                  {
                    LOWORD(v67) = v63;
                    WORD1(v67) = v56;
                    WORD2(v67) = v57;
                    HIWORD(v67) = v58;
                    sub_1D799CCC8(v59, v60, v61, v62, v36, v37);
                    goto LABEL_43;
                  }
LABEL_46:
                  uint64_t v55 = a7;
                  uint64_t v67 = 0;
                  unint64_t v68 = 0xE000000000000000;
                  sub_1D7A9CC48();
                  sub_1D7A9C128();
                  unint64_t v46 = a8;
                  sub_1D7A9C128();
                  swift_bridgeObjectRelease();
                  sub_1D7A9C128();
                  uint64_t v70 = v65;
                  sub_1D7A9D258();
                  sub_1D7A9C128();
                  swift_bridgeObjectRelease();
                  uint64_t v47 = v67;
                  uint64_t v48 = v68;
                  LOWORD(v67) = v63;
                  unint64_t v49 = sub_1D785EAF8(MEMORY[0x1E4FBC860]);
                  sub_1D7860544();
                  swift_allocError();
                  DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, v47, v48, (__int16 *)&v67, 0, v49, 0xD00000000000005FLL, 0x80000001D7AC5F30, v50, 0xD00000000000005ALL, 0x80000001D7AC5F90, 80);
                  swift_willThrow();
                  sub_1D78607E8(v36, v37);
                  swift_bridgeObjectRelease();
                  uint64_t v43 = v55;
                  unint64_t v44 = v46;
                  break;
                default:
                  goto LABEL_34;
              }
              break;
          }
          return sub_1D78607E8(v43, v44);
        }
LABEL_18:
        LOWORD(v67) = v63;
        WORD1(v67) = v56;
        WORD2(v67) = v57;
        HIWORD(v67) = v58;
        sub_1D799A088(v59, v60, v61, v62, v36, v37);
LABEL_43:
        sub_1D78607E8(v36, v37);
        swift_bridgeObjectRelease();
        break;
      default:
        JUMPOUT(0);
    }
  }
  uint64_t v43 = a7;
  unint64_t v44 = a8;
  return sub_1D78607E8(v43, v44);
}

void sub_1D799A088(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, unint64_t a6)
{
  __int16 v7 = v6;
  unint64_t v138 = a6;
  uint64_t v139 = a5;
  uint64_t v152 = a3;
  *(void *)&long long v148 = a1;
  *((void *)&v148 + 1) = a2;
  uint64_t v154 = *MEMORY[0x1E4F143B8];
  uint64_t v141 = sub_1D7A9BD88();
  uint64_t v135 = *(void *)(v141 - 8);
  MEMORY[0x1F4188790](v141, v9, v10, v11, v12, v13, v14, v15);
  uint64_t v140 = &v128[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v137 = sub_1D7A9B838();
  uint64_t v130 = *(void *)(v137 - 8);
  MEMORY[0x1F4188790](v137, v17, v18, v19, v20, v21, v22, v23);
  uint64_t v136 = &v128[-((v24 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v25 = sub_1D7A9BB98();
  uint64_t v143 = *(void *)(v25 - 8);
  uint64_t v144 = v25;
  uint64_t v33 = MEMORY[0x1F4188790](v25, v26, v27, v28, v29, v30, v31, v32);
  int v146 = &v128[-((v34 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v33, v35, v36, v37, v38, v39, v40, v41);
  os_log_type_t v145 = &v128[-v42];
  uint64_t v43 = sub_1D7A9BBC8();
  uint64_t v147 = *(void *)(v43 - 8);
  uint64_t v51 = MEMORY[0x1F4188790](v43, v44, v45, v46, v47, v48, v49, v50);
  uint64_t v53 = &v128[-((v52 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v51, v54, v55, v56, v57, v58, v59, v60);
  double v149 = &v128[-v61];
  uint64_t v62 = sub_1D7A9B5F8();
  uint64_t v63 = *(void *)(v62 - 8);
  uint64_t v71 = MEMORY[0x1F4188790](v62, v64, v65, v66, v67, v68, v69, v70);
  uint64_t v134 = &v128[-((v72 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v71, v73, v74, v75, v76, v77, v78, v79);
  uint64_t v81 = &v128[-v80];
  LODWORD(v150) = v7[1];
  LODWORD(v142) = v7[2];
  int v129 = v7[3];
  if (qword_1EBDF9DC8 != -1) {
    swift_once();
  }
  uint64_t v82 = __swift_project_value_buffer(v62, (uint64_t)qword_1EBDFBE70);
  swift_beginAccess();
  uint64_t v83 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v63 + 16);
  uint64_t v133 = v82;
  uint64_t v132 = v63 + 16;
  unint64_t v131 = v83;
  v83(v81, v82, v62);
  uint64_t v84 = sub_1D7A9B5D8();
  os_log_type_t v85 = sub_1D7A9C748();
  if (os_log_type_enabled(v84, v85))
  {
    unint64_t v86 = a4;
    uint64_t v87 = v43;
    v88 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v88 = 0;
    _os_log_impl(&dword_1D7853000, v84, v85, "Validating ES256 signature", v88, 2u);
    uint64_t v89 = v88;
    uint64_t v43 = v87;
    a4 = v86;
    MEMORY[0x1D947D740](v89, -1, -1);
  }

  uint64_t v90 = v81;
  char v91 = *(void (**)(unsigned char *, uint64_t))(v63 + 8);
  v91(v90, v62);
  *(void *)&long long v153 = v152;
  *((void *)&v153 + 1) = a4;
  sub_1D7860790(v152, a4);
  char v92 = (void *)v151;
  sub_1D7A9BBB8();
  if (v92)
  {
    LOWORD(v153) = v150;
    id v93 = v92;
    unint64_t v94 = sub_1D785EAF8(MEMORY[0x1E4FBC860]);
    sub_1D7860544();
    uint64_t v95 = (void *)swift_allocError();
    DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(v92, 0xD000000000000026, 0x80000001D7AC5FF0, (__int16 *)&v153, 0, v94, 0xD00000000000005FLL, 0x80000001D7AC5F30, v96, 0xD00000000000003BLL, 0x80000001D7AC6020, 92);
    swift_willThrow();
  }
  else
  {
    uint64_t v151 = a4;
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v147 + 32))(v149, v53, v43);
    long long v153 = v148;
    sub_1D7860790(v148, *((unint64_t *)&v148 + 1));
    sub_1D7885ADC();
    uint64_t v97 = v146;
    sub_1D7A9BB88();
    uint64_t v142 = v91;
    uint64_t v150 = v43;
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v143 + 32))(v145, v97, v144);
    uint64_t v98 = sub_1D799DA1C(&qword_1EA8424A0, MEMORY[0x1E4F25170]);
    uint64_t v100 = (uint64_t)v140;
    uint64_t v99 = v141;
    sub_1D7A9B828();
    unint64_t v101 = v138;
    uint64_t v102 = v139;
    switch(v138 >> 62)
    {
      case 1uLL:
        int v146 = (unsigned char *)v98;
        if (v139 >> 32 < (int)v139) {
          __break(1u);
        }
        sub_1D7860790(v139, v138);
        sub_1D78D117C((int)v102, v102 >> 32, v101 & 0x3FFFFFFFFFFFFFFFLL, v100);
        sub_1D78607E8(v102, v101);
        uint64_t v106 = (unsigned char *)v100;
        unint64_t v105 = v101;
        uint64_t v99 = v141;
        break;
      case 2uLL:
        int v146 = (unsigned char *)v98;
        uint64_t v103 = *(void *)(v139 + 16);
        uint64_t v104 = *(void *)(v139 + 24);
        sub_1D7860790(v139, v138);
        swift_retain();
        swift_retain();
        sub_1D78D117C(v103, v104, v101 & 0x3FFFFFFFFFFFFFFFLL, v100);
        swift_release();
        swift_release();
        sub_1D78607E8(v102, v101);
        unint64_t v105 = v101;
        uint64_t v106 = v140;
        uint64_t v99 = v141;
        break;
      case 3uLL:
        *(void *)((char *)&v153 + 6) = 0;
        *(void *)&long long v153 = 0;
        goto LABEL_11;
      default:
        *(void *)&long long v153 = v139;
        DWORD2(v153) = v138;
        WORD6(v153) = WORD2(v138);
LABEL_11:
        uint64_t v106 = (unsigned char *)v100;
        sub_1D7A9B808();
        sub_1D78607E8(v102, v101);
        unint64_t v105 = v101;
        break;
    }
    uint64_t v107 = v136;
    sub_1D7A9B818();
    (*(void (**)(unsigned char *, uint64_t))(v135 + 8))(v106, v99);
    uint64_t v108 = v134;
    uint64_t v109 = v131(v134, v133, v62);
    MEMORY[0x1F4188790](v109, v110, v111, v112, v113, v114, v115, v116);
    *(void *)&v128[-64] = v102;
    *(void *)&v128[-56] = v105;
    uint64_t v117 = v152;
    *(void *)&v128[-48] = v107;
    *(void *)&v128[-40] = v117;
    uint64_t v126 = v151;
    long long v127 = v148;
    Logger.cryptoParam(_:)(sub_1D799D8FC);
    v142(v108, v62);
    sub_1D799DA1C(&qword_1EA8424A8, MEMORY[0x1E4F24F80]);
    unint64_t v118 = v145;
    uint64_t v119 = v137;
    uint64_t v120 = v149;
    if (sub_1D7A9BBA8())
    {
      (*(void (**)(unsigned char *, uint64_t))(v143 + 8))(v118, v144);
      (*(void (**)(unsigned char *, uint64_t))(v147 + 8))(v120, v150);
      (*(void (**)(unsigned char *, uint64_t))(v130 + 8))(v107, v119);
      return;
    }
    LOWORD(v153) = v129;
    unint64_t v121 = sub_1D785EAF8(MEMORY[0x1E4FBC860]);
    sub_1D7860544();
    uint64_t v95 = (void *)swift_allocError();
    DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xD00000000000001CLL, 0x80000001D7AC60B0, (__int16 *)&v153, 0, v121, 0xD00000000000005FLL, 0x80000001D7AC5F30, v122, 0xD00000000000003BLL, 0x80000001D7AC6020, 108);
    swift_willThrow();
    (*(void (**)(unsigned char *, uint64_t))(v143 + 8))(v118, v144);
    (*(void (**)(unsigned char *, uint64_t))(v147 + 8))(v120, v150);
    (*(void (**)(unsigned char *, uint64_t))(v130 + 8))(v107, v119);
  }
  LOWORD(v153) = 0;
  id v123 = v95;
  unint64_t v124 = sub_1D785EAF8(MEMORY[0x1E4FBC860]);
  sub_1D7860544();
  swift_allocError();
  DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(v95, 0xD00000000000001FLL, 0x80000001D7AC6060, (__int16 *)&v153, 0, v124, 0xD00000000000005FLL, 0x80000001D7AC5F30, v125, 0xD00000000000003BLL, 0x80000001D7AC6020, 111);
  swift_willThrow();
}

void sub_1D799AD24(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, unint64_t a6)
{
  __int16 v7 = v6;
  unint64_t v138 = a6;
  uint64_t v139 = a5;
  uint64_t v152 = a3;
  *(void *)&long long v148 = a1;
  *((void *)&v148 + 1) = a2;
  uint64_t v154 = *MEMORY[0x1E4F143B8];
  uint64_t v141 = sub_1D7A9BD98();
  uint64_t v135 = *(void *)(v141 - 8);
  MEMORY[0x1F4188790](v141, v9, v10, v11, v12, v13, v14, v15);
  uint64_t v140 = &v128[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v137 = sub_1D7A9B848();
  uint64_t v130 = *(void *)(v137 - 8);
  MEMORY[0x1F4188790](v137, v17, v18, v19, v20, v21, v22, v23);
  uint64_t v136 = &v128[-((v24 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v25 = sub_1D7A9BC68();
  uint64_t v143 = *(void *)(v25 - 8);
  uint64_t v144 = v25;
  uint64_t v33 = MEMORY[0x1F4188790](v25, v26, v27, v28, v29, v30, v31, v32);
  int v146 = &v128[-((v34 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v33, v35, v36, v37, v38, v39, v40, v41);
  os_log_type_t v145 = &v128[-v42];
  uint64_t v43 = sub_1D7A9BC98();
  uint64_t v147 = *(void *)(v43 - 8);
  uint64_t v51 = MEMORY[0x1F4188790](v43, v44, v45, v46, v47, v48, v49, v50);
  uint64_t v53 = &v128[-((v52 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v51, v54, v55, v56, v57, v58, v59, v60);
  double v149 = &v128[-v61];
  uint64_t v62 = sub_1D7A9B5F8();
  uint64_t v63 = *(void *)(v62 - 8);
  uint64_t v71 = MEMORY[0x1F4188790](v62, v64, v65, v66, v67, v68, v69, v70);
  uint64_t v134 = &v128[-((v72 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v71, v73, v74, v75, v76, v77, v78, v79);
  uint64_t v81 = &v128[-v80];
  LODWORD(v150) = v7[1];
  LODWORD(v142) = v7[2];
  int v129 = v7[3];
  if (qword_1EBDF9DC8 != -1) {
    swift_once();
  }
  uint64_t v82 = __swift_project_value_buffer(v62, (uint64_t)qword_1EBDFBE70);
  swift_beginAccess();
  uint64_t v83 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v63 + 16);
  uint64_t v133 = v82;
  uint64_t v132 = v63 + 16;
  unint64_t v131 = v83;
  v83(v81, v82, v62);
  uint64_t v84 = sub_1D7A9B5D8();
  os_log_type_t v85 = sub_1D7A9C748();
  if (os_log_type_enabled(v84, v85))
  {
    unint64_t v86 = a4;
    uint64_t v87 = v43;
    v88 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v88 = 0;
    _os_log_impl(&dword_1D7853000, v84, v85, "Validating ES384 signature", v88, 2u);
    uint64_t v89 = v88;
    uint64_t v43 = v87;
    a4 = v86;
    MEMORY[0x1D947D740](v89, -1, -1);
  }

  uint64_t v90 = v81;
  char v91 = *(void (**)(unsigned char *, uint64_t))(v63 + 8);
  v91(v90, v62);
  *(void *)&long long v153 = v152;
  *((void *)&v153 + 1) = a4;
  sub_1D7860790(v152, a4);
  char v92 = (void *)v151;
  sub_1D7A9BC88();
  if (v92)
  {
    LOWORD(v153) = v150;
    id v93 = v92;
    unint64_t v94 = sub_1D785EAF8(MEMORY[0x1E4FBC860]);
    sub_1D7860544();
    uint64_t v95 = (void *)swift_allocError();
    DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(v92, 0xD000000000000026, 0x80000001D7AC60D0, (__int16 *)&v153, 0, v94, 0xD00000000000005FLL, 0x80000001D7AC5F30, v96, 0xD00000000000003BLL, 0x80000001D7AC6100, 124);
    swift_willThrow();
  }
  else
  {
    uint64_t v151 = a4;
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v147 + 32))(v149, v53, v43);
    long long v153 = v148;
    sub_1D7860790(v148, *((unint64_t *)&v148 + 1));
    sub_1D7885ADC();
    uint64_t v97 = v146;
    sub_1D7A9BC58();
    uint64_t v142 = v91;
    uint64_t v150 = v43;
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v143 + 32))(v145, v97, v144);
    uint64_t v98 = sub_1D799DA1C(&qword_1EA843400, MEMORY[0x1E4F25180]);
    uint64_t v100 = (uint64_t)v140;
    uint64_t v99 = v141;
    sub_1D7A9B828();
    unint64_t v101 = v138;
    uint64_t v102 = v139;
    switch(v138 >> 62)
    {
      case 1uLL:
        int v146 = (unsigned char *)v98;
        if (v139 >> 32 < (int)v139) {
          __break(1u);
        }
        sub_1D7860790(v139, v138);
        sub_1D78D11D8((int)v102, v102 >> 32, v101 & 0x3FFFFFFFFFFFFFFFLL, v100);
        sub_1D78607E8(v102, v101);
        uint64_t v106 = (unsigned char *)v100;
        unint64_t v105 = v101;
        uint64_t v99 = v141;
        break;
      case 2uLL:
        int v146 = (unsigned char *)v98;
        uint64_t v103 = *(void *)(v139 + 16);
        uint64_t v104 = *(void *)(v139 + 24);
        sub_1D7860790(v139, v138);
        swift_retain();
        swift_retain();
        sub_1D78D11D8(v103, v104, v101 & 0x3FFFFFFFFFFFFFFFLL, v100);
        swift_release();
        swift_release();
        sub_1D78607E8(v102, v101);
        unint64_t v105 = v101;
        uint64_t v106 = v140;
        uint64_t v99 = v141;
        break;
      case 3uLL:
        *(void *)((char *)&v153 + 6) = 0;
        *(void *)&long long v153 = 0;
        goto LABEL_11;
      default:
        *(void *)&long long v153 = v139;
        DWORD2(v153) = v138;
        WORD6(v153) = WORD2(v138);
LABEL_11:
        uint64_t v106 = (unsigned char *)v100;
        sub_1D7A9B808();
        sub_1D78607E8(v102, v101);
        unint64_t v105 = v101;
        break;
    }
    uint64_t v107 = v136;
    sub_1D7A9B818();
    (*(void (**)(unsigned char *, uint64_t))(v135 + 8))(v106, v99);
    uint64_t v108 = v134;
    uint64_t v109 = v131(v134, v133, v62);
    MEMORY[0x1F4188790](v109, v110, v111, v112, v113, v114, v115, v116);
    *(void *)&v128[-64] = v102;
    *(void *)&v128[-56] = v105;
    uint64_t v117 = v152;
    *(void *)&v128[-48] = v107;
    *(void *)&v128[-40] = v117;
    uint64_t v126 = v151;
    long long v127 = v148;
    Logger.cryptoParam(_:)(sub_1D799D944);
    v142(v108, v62);
    sub_1D799DA1C(&qword_1EA843408, MEMORY[0x1E4F24FA0]);
    unint64_t v118 = v145;
    uint64_t v119 = v137;
    uint64_t v120 = v149;
    if (sub_1D7A9BC78())
    {
      (*(void (**)(unsigned char *, uint64_t))(v143 + 8))(v118, v144);
      (*(void (**)(unsigned char *, uint64_t))(v147 + 8))(v120, v150);
      (*(void (**)(unsigned char *, uint64_t))(v130 + 8))(v107, v119);
      return;
    }
    LOWORD(v153) = v129;
    unint64_t v121 = sub_1D785EAF8(MEMORY[0x1E4FBC860]);
    sub_1D7860544();
    uint64_t v95 = (void *)swift_allocError();
    DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xD00000000000001CLL, 0x80000001D7AC6190, (__int16 *)&v153, 0, v121, 0xD00000000000005FLL, 0x80000001D7AC5F30, v122, 0xD00000000000003BLL, 0x80000001D7AC6100, 139);
    swift_willThrow();
    (*(void (**)(unsigned char *, uint64_t))(v143 + 8))(v118, v144);
    (*(void (**)(unsigned char *, uint64_t))(v147 + 8))(v120, v150);
    (*(void (**)(unsigned char *, uint64_t))(v130 + 8))(v107, v119);
  }
  LOWORD(v153) = 0;
  id v123 = v95;
  unint64_t v124 = sub_1D785EAF8(MEMORY[0x1E4FBC860]);
  sub_1D7860544();
  swift_allocError();
  DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(v95, 0xD00000000000001ELL, 0x80000001D7AC6140, (__int16 *)&v153, 0, v124, 0xD00000000000005FLL, 0x80000001D7AC5F30, v125, 0xD00000000000003BLL, 0x80000001D7AC6100, 142);
  swift_willThrow();
}

void sub_1D799B9C0(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, unint64_t a6)
{
  __int16 v7 = v6;
  unint64_t v138 = a6;
  uint64_t v139 = a5;
  uint64_t v152 = a3;
  *(void *)&long long v148 = a1;
  *((void *)&v148 + 1) = a2;
  uint64_t v154 = *MEMORY[0x1E4F143B8];
  uint64_t v141 = sub_1D7A9BDA8();
  uint64_t v135 = *(void *)(v141 - 8);
  MEMORY[0x1F4188790](v141, v9, v10, v11, v12, v13, v14, v15);
  uint64_t v140 = &v128[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v137 = sub_1D7A9B858();
  uint64_t v130 = *(void *)(v137 - 8);
  MEMORY[0x1F4188790](v137, v17, v18, v19, v20, v21, v22, v23);
  uint64_t v136 = &v128[-((v24 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v25 = sub_1D7A9BD38();
  uint64_t v143 = *(void *)(v25 - 8);
  uint64_t v144 = v25;
  uint64_t v33 = MEMORY[0x1F4188790](v25, v26, v27, v28, v29, v30, v31, v32);
  int v146 = &v128[-((v34 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v33, v35, v36, v37, v38, v39, v40, v41);
  os_log_type_t v145 = &v128[-v42];
  uint64_t v43 = sub_1D7A9BD68();
  uint64_t v147 = *(void *)(v43 - 8);
  uint64_t v51 = MEMORY[0x1F4188790](v43, v44, v45, v46, v47, v48, v49, v50);
  uint64_t v53 = &v128[-((v52 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v51, v54, v55, v56, v57, v58, v59, v60);
  double v149 = &v128[-v61];
  uint64_t v62 = sub_1D7A9B5F8();
  uint64_t v63 = *(void *)(v62 - 8);
  uint64_t v71 = MEMORY[0x1F4188790](v62, v64, v65, v66, v67, v68, v69, v70);
  uint64_t v134 = &v128[-((v72 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v71, v73, v74, v75, v76, v77, v78, v79);
  uint64_t v81 = &v128[-v80];
  LODWORD(v150) = v7[1];
  LODWORD(v142) = v7[2];
  int v129 = v7[3];
  if (qword_1EBDF9DC8 != -1) {
    swift_once();
  }
  uint64_t v82 = __swift_project_value_buffer(v62, (uint64_t)qword_1EBDFBE70);
  swift_beginAccess();
  uint64_t v83 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v63 + 16);
  uint64_t v133 = v82;
  uint64_t v132 = v63 + 16;
  unint64_t v131 = v83;
  v83(v81, v82, v62);
  uint64_t v84 = sub_1D7A9B5D8();
  os_log_type_t v85 = sub_1D7A9C748();
  if (os_log_type_enabled(v84, v85))
  {
    unint64_t v86 = a4;
    uint64_t v87 = v43;
    v88 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v88 = 0;
    _os_log_impl(&dword_1D7853000, v84, v85, "Validating ES512 signature", v88, 2u);
    uint64_t v89 = v88;
    uint64_t v43 = v87;
    a4 = v86;
    MEMORY[0x1D947D740](v89, -1, -1);
  }

  uint64_t v90 = v81;
  char v91 = *(void (**)(unsigned char *, uint64_t))(v63 + 8);
  v91(v90, v62);
  *(void *)&long long v153 = v152;
  *((void *)&v153 + 1) = a4;
  sub_1D7860790(v152, a4);
  char v92 = (void *)v151;
  sub_1D7A9BD58();
  if (v92)
  {
    LOWORD(v153) = v150;
    id v93 = v92;
    unint64_t v94 = sub_1D785EAF8(MEMORY[0x1E4FBC860]);
    sub_1D7860544();
    uint64_t v95 = (void *)swift_allocError();
    DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(v92, 0xD000000000000026, 0x80000001D7AC61B0, (__int16 *)&v153, 0, v94, 0xD00000000000005FLL, 0x80000001D7AC5F30, v96, 0xD00000000000003BLL, 0x80000001D7AC61E0, 156);
    swift_willThrow();
  }
  else
  {
    uint64_t v151 = a4;
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v147 + 32))(v149, v53, v43);
    long long v153 = v148;
    sub_1D7860790(v148, *((unint64_t *)&v148 + 1));
    sub_1D7885ADC();
    uint64_t v97 = v146;
    sub_1D7A9BD28();
    uint64_t v142 = v91;
    uint64_t v150 = v43;
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v143 + 32))(v145, v97, v144);
    uint64_t v98 = sub_1D799DA1C(&qword_1EA8433F0, MEMORY[0x1E4F25190]);
    uint64_t v100 = (uint64_t)v140;
    uint64_t v99 = v141;
    sub_1D7A9B828();
    unint64_t v101 = v138;
    uint64_t v102 = v139;
    switch(v138 >> 62)
    {
      case 1uLL:
        int v146 = (unsigned char *)v98;
        if (v139 >> 32 < (int)v139) {
          __break(1u);
        }
        sub_1D7860790(v139, v138);
        sub_1D78D1314((int)v102, v102 >> 32, v101 & 0x3FFFFFFFFFFFFFFFLL, v100);
        sub_1D78607E8(v102, v101);
        uint64_t v106 = (unsigned char *)v100;
        unint64_t v105 = v101;
        uint64_t v99 = v141;
        break;
      case 2uLL:
        int v146 = (unsigned char *)v98;
        uint64_t v103 = *(void *)(v139 + 16);
        uint64_t v104 = *(void *)(v139 + 24);
        sub_1D7860790(v139, v138);
        swift_retain();
        swift_retain();
        sub_1D78D1314(v103, v104, v101 & 0x3FFFFFFFFFFFFFFFLL, v100);
        swift_release();
        swift_release();
        sub_1D78607E8(v102, v101);
        unint64_t v105 = v101;
        uint64_t v106 = v140;
        uint64_t v99 = v141;
        break;
      case 3uLL:
        *(void *)((char *)&v153 + 6) = 0;
        *(void *)&long long v153 = 0;
        goto LABEL_11;
      default:
        *(void *)&long long v153 = v139;
        DWORD2(v153) = v138;
        WORD6(v153) = WORD2(v138);
LABEL_11:
        uint64_t v106 = (unsigned char *)v100;
        sub_1D7A9B808();
        sub_1D78607E8(v102, v101);
        unint64_t v105 = v101;
        break;
    }
    uint64_t v107 = v136;
    sub_1D7A9B818();
    (*(void (**)(unsigned char *, uint64_t))(v135 + 8))(v106, v99);
    uint64_t v108 = v134;
    uint64_t v109 = v131(v134, v133, v62);
    MEMORY[0x1F4188790](v109, v110, v111, v112, v113, v114, v115, v116);
    *(void *)&v128[-64] = v102;
    *(void *)&v128[-56] = v105;
    uint64_t v117 = v152;
    *(void *)&v128[-48] = v107;
    *(void *)&v128[-40] = v117;
    uint64_t v126 = v151;
    long long v127 = v148;
    Logger.cryptoParam(_:)(sub_1D799D98C);
    v142(v108, v62);
    sub_1D799DA1C(&qword_1EA8433F8, MEMORY[0x1E4F24FB8]);
    unint64_t v118 = v145;
    uint64_t v119 = v137;
    uint64_t v120 = v149;
    if (sub_1D7A9BD48())
    {
      (*(void (**)(unsigned char *, uint64_t))(v143 + 8))(v118, v144);
      (*(void (**)(unsigned char *, uint64_t))(v147 + 8))(v120, v150);
      (*(void (**)(unsigned char *, uint64_t))(v130 + 8))(v107, v119);
      return;
    }
    LOWORD(v153) = v129;
    unint64_t v121 = sub_1D785EAF8(MEMORY[0x1E4FBC860]);
    sub_1D7860544();
    uint64_t v95 = (void *)swift_allocError();
    DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xD00000000000001CLL, 0x80000001D7AC6270, (__int16 *)&v153, 0, v121, 0xD00000000000005FLL, 0x80000001D7AC5F30, v122, 0xD00000000000003BLL, 0x80000001D7AC61E0, 171);
    swift_willThrow();
    (*(void (**)(unsigned char *, uint64_t))(v143 + 8))(v118, v144);
    (*(void (**)(unsigned char *, uint64_t))(v147 + 8))(v120, v150);
    (*(void (**)(unsigned char *, uint64_t))(v130 + 8))(v107, v119);
  }
  LOWORD(v153) = 0;
  id v123 = v95;
  unint64_t v124 = sub_1D785EAF8(MEMORY[0x1E4FBC860]);
  sub_1D7860544();
  swift_allocError();
  DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(v95, 0xD00000000000001ELL, 0x80000001D7AC6220, (__int16 *)&v153, 0, v124, 0xD00000000000005FLL, 0x80000001D7AC5F30, v125, 0xD00000000000003BLL, 0x80000001D7AC61E0, 174);
  swift_willThrow();
}

void sub_1D799C65C(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, unint64_t a6)
{
  char v8 = v7;
  uint64_t v85 = a5;
  unint64_t v86 = a6;
  unint64_t v95 = a4;
  uint64_t v83 = a1;
  unint64_t v84 = a2;
  uint64_t v10 = sub_1D7A9B7F8();
  uint64_t v88 = *(void *)(v10 - 8);
  uint64_t v89 = v10;
  uint64_t v18 = MEMORY[0x1F4188790](v10, v11, v12, v13, v14, v15, v16, v17);
  uint64_t v20 = (char *)&v77 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18, v21, v22, v23, v24, v25, v26, v27);
  uint64_t v90 = (char *)&v77 - v28;
  uint64_t v29 = sub_1D7A9B5F8();
  uint64_t v30 = *(void *)(v29 - 8);
  uint64_t v38 = MEMORY[0x1F4188790](v29, v31, v32, v33, v34, v35, v36, v37);
  uint64_t v82 = (char *)&v77 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v38, v40, v41, v42, v43, v44, v45, v46);
  uint64_t v48 = (char *)&v77 - v47;
  int v87 = *(unsigned __int16 *)(v6 + 2);
  int v78 = *(unsigned __int16 *)(v6 + 6);
  if (qword_1EBDF9DC8 != -1) {
    swift_once();
  }
  uint64_t v49 = __swift_project_value_buffer(v29, (uint64_t)qword_1EBDFBE70);
  swift_beginAccess();
  uint64_t v80 = *(void (**)(char *, uint64_t, uint64_t))(v30 + 16);
  uint64_t v81 = v49;
  v80(v48, v49, v29);
  uint64_t v50 = sub_1D7A9B5D8();
  os_log_type_t v51 = sub_1D7A9C748();
  if (os_log_type_enabled(v50, v51))
  {
    uint64_t v52 = (uint8_t *)swift_slowAlloc();
    uint64_t v79 = (void (*)(char *, uint64_t))v29;
    uint64_t v53 = a3;
    uint64_t v54 = v52;
    *(_WORD *)uint64_t v52 = 0;
    _os_log_impl(&dword_1D7853000, v50, v51, "Validating Ed25519 signature", v52, 2u);
    uint64_t v55 = v54;
    a3 = v53;
    char v8 = v7;
    uint64_t v29 = (uint64_t)v79;
    MEMORY[0x1D947D740](v55, -1, -1);
  }

  uint64_t v79 = *(void (**)(char *, uint64_t))(v30 + 8);
  v79(v48, v29);
  unint64_t v56 = v95;
  uint64_t v93 = a3;
  unint64_t v94 = v95;
  sub_1D7860790(a3, v95);
  sub_1D7A9B7E8();
  if (v8)
  {
    LOWORD(v93) = v87;
    id v57 = v8;
    unint64_t v58 = sub_1D785EAF8(MEMORY[0x1E4FBC860]);
    sub_1D7860544();
    uint64_t v59 = (void *)swift_allocError();
    DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(v8, 0xD00000000000002CLL, 0x80000001D7AC6290, (__int16 *)&v93, 0, v58, 0xD00000000000005FLL, 0x80000001D7AC5F30, v60, 0xD00000000000003DLL, 0x80000001D7AC62C0, 186);
    swift_willThrow();
  }
  else
  {
    uint64_t v61 = a3;
    unint64_t v62 = v56;
    (*(void (**)(char *, char *, uint64_t))(v88 + 32))(v90, v20, v89);
    uint64_t v63 = (uint64_t)v82;
    v80(v82, v81, v29);
    uint64_t v64 = v61;
    uint64_t v77 = v61;
    sub_1D7860790(v61, v62);
    uint64_t v66 = v85;
    unint64_t v65 = v86;
    sub_1D7860790(v85, v86);
    uint64_t v67 = v83;
    unint64_t v68 = v84;
    sub_1D7860790(v83, v84);
    uint64_t v69 = v64;
    unint64_t v70 = v95;
    sub_1D79249F8(v63, v66, v65, v69, v95, v67, v68);
    sub_1D78607E8(v67, v68);
    sub_1D78607E8(v77, v70);
    sub_1D78607E8(v66, v65);
    v79((char *)v63, v29);
    uint64_t v93 = v67;
    unint64_t v94 = v68;
    uint64_t v71 = v90;
    uint64_t v91 = v66;
    unint64_t v92 = v65;
    sub_1D7885ADC();
    if (sub_1D7A9B7D8())
    {
      (*(void (**)(char *, uint64_t))(v88 + 8))(v71, v89);
      return;
    }
    LOWORD(v93) = v78;
    unint64_t v72 = sub_1D785EAF8(MEMORY[0x1E4FBC860]);
    sub_1D7860544();
    uint64_t v59 = (void *)swift_allocError();
    DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xD00000000000001CLL, 0x80000001D7AC6330, (__int16 *)&v93, 0, v72, 0xD00000000000005FLL, 0x80000001D7AC5F30, v73, 0xD00000000000003DLL, 0x80000001D7AC62C0, 194);
    swift_willThrow();
    (*(void (**)(char *, uint64_t))(v88 + 8))(v71, v89);
  }
  LOWORD(v93) = 0;
  id v74 = v59;
  unint64_t v75 = sub_1D785EAF8(MEMORY[0x1E4FBC860]);
  sub_1D7860544();
  swift_allocError();
  DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(v59, 0xD000000000000024, 0x80000001D7AC6300, (__int16 *)&v93, 0, v75, 0xD00000000000005FLL, 0x80000001D7AC5F30, v76, 0xD00000000000003DLL, 0x80000001D7AC62C0, 197);
  swift_willThrow();
}

void sub_1D799CCC8(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, unint64_t a6)
{
  char v8 = v7;
  uint64_t v85 = a5;
  unint64_t v86 = a6;
  unint64_t v95 = a4;
  uint64_t v83 = a1;
  unint64_t v84 = a2;
  uint64_t v10 = sub_1D7A9BE58();
  uint64_t v88 = *(void *)(v10 - 8);
  uint64_t v89 = v10;
  uint64_t v18 = MEMORY[0x1F4188790](v10, v11, v12, v13, v14, v15, v16, v17);
  uint64_t v20 = (char *)&v77 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18, v21, v22, v23, v24, v25, v26, v27);
  uint64_t v90 = (char *)&v77 - v28;
  uint64_t v29 = sub_1D7A9B5F8();
  uint64_t v30 = *(void *)(v29 - 8);
  uint64_t v38 = MEMORY[0x1F4188790](v29, v31, v32, v33, v34, v35, v36, v37);
  uint64_t v82 = (char *)&v77 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v38, v40, v41, v42, v43, v44, v45, v46);
  uint64_t v48 = (char *)&v77 - v47;
  int v87 = *(unsigned __int16 *)(v6 + 2);
  int v78 = *(unsigned __int16 *)(v6 + 6);
  if (qword_1EBDF9DC8 != -1) {
    swift_once();
  }
  uint64_t v49 = __swift_project_value_buffer(v29, (uint64_t)qword_1EBDFBE70);
  swift_beginAccess();
  uint64_t v80 = *(void (**)(char *, uint64_t, uint64_t))(v30 + 16);
  uint64_t v81 = v49;
  v80(v48, v49, v29);
  uint64_t v50 = sub_1D7A9B5D8();
  os_log_type_t v51 = sub_1D7A9C748();
  if (os_log_type_enabled(v50, v51))
  {
    uint64_t v52 = (uint8_t *)swift_slowAlloc();
    uint64_t v79 = (void (*)(char *, uint64_t))v29;
    uint64_t v53 = a3;
    uint64_t v54 = v52;
    *(_WORD *)uint64_t v52 = 0;
    _os_log_impl(&dword_1D7853000, v50, v51, "Validating Ed448 signature", v52, 2u);
    uint64_t v55 = v54;
    a3 = v53;
    char v8 = v7;
    uint64_t v29 = (uint64_t)v79;
    MEMORY[0x1D947D740](v55, -1, -1);
  }

  uint64_t v79 = *(void (**)(char *, uint64_t))(v30 + 8);
  v79(v48, v29);
  unint64_t v56 = v95;
  uint64_t v93 = a3;
  unint64_t v94 = v95;
  sub_1D7860790(a3, v95);
  sub_1D7A9BE48();
  if (v8)
  {
    LOWORD(v93) = v87;
    id v57 = v8;
    unint64_t v58 = sub_1D785EAF8(MEMORY[0x1E4FBC860]);
    sub_1D7860544();
    uint64_t v59 = (void *)swift_allocError();
    DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(v8, 0xD00000000000002ALL, 0x80000001D7AC6350, (__int16 *)&v93, 0, v58, 0xD00000000000005FLL, 0x80000001D7AC5F30, v60, 0xD00000000000003BLL, 0x80000001D7AC6380, 209);
    swift_willThrow();
  }
  else
  {
    uint64_t v61 = a3;
    unint64_t v62 = v56;
    (*(void (**)(char *, char *, uint64_t))(v88 + 32))(v90, v20, v89);
    uint64_t v63 = (uint64_t)v82;
    v80(v82, v81, v29);
    uint64_t v64 = v61;
    uint64_t v77 = v61;
    sub_1D7860790(v61, v62);
    uint64_t v66 = v85;
    unint64_t v65 = v86;
    sub_1D7860790(v85, v86);
    uint64_t v67 = v83;
    unint64_t v68 = v84;
    sub_1D7860790(v83, v84);
    uint64_t v69 = v64;
    unint64_t v70 = v95;
    sub_1D79249F8(v63, v66, v65, v69, v95, v67, v68);
    sub_1D78607E8(v67, v68);
    sub_1D78607E8(v77, v70);
    sub_1D78607E8(v66, v65);
    v79((char *)v63, v29);
    uint64_t v93 = v67;
    unint64_t v94 = v68;
    uint64_t v71 = v90;
    uint64_t v91 = v66;
    unint64_t v92 = v65;
    sub_1D7885ADC();
    if (sub_1D7A9BE38())
    {
      (*(void (**)(char *, uint64_t))(v88 + 8))(v71, v89);
      return;
    }
    LOWORD(v93) = v78;
    unint64_t v72 = sub_1D785EAF8(MEMORY[0x1E4FBC860]);
    sub_1D7860544();
    uint64_t v59 = (void *)swift_allocError();
    DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xD00000000000001ALL, 0x80000001D7AC63F0, (__int16 *)&v93, 0, v72, 0xD00000000000005FLL, 0x80000001D7AC5F30, v73, 0xD00000000000003BLL, 0x80000001D7AC6380, 217);
    swift_willThrow();
    (*(void (**)(char *, uint64_t))(v88 + 8))(v71, v89);
  }
  LOWORD(v93) = 0;
  id v74 = v59;
  unint64_t v75 = sub_1D785EAF8(MEMORY[0x1E4FBC860]);
  sub_1D7860544();
  swift_allocError();
  DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(v59, 0xD000000000000022, 0x80000001D7AC63C0, (__int16 *)&v93, 0, v75, 0xD00000000000005FLL, 0x80000001D7AC5F30, v76, 0xD00000000000003BLL, 0x80000001D7AC6380, 220);
  swift_willThrow();
}

uint64_t sub_1D799D334(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, unint64_t a7, void (*a8)(void), unint64_t *a9, void (*a10)(uint64_t))
{
  sub_1D7A9CC48();
  sub_1D7A9C128();
  sub_1D79F1750(a1, a2);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDF7900);
  sub_1D78AC5E4();
  sub_1D7A9BF38();
  swift_bridgeObjectRelease();
  sub_1D7A9C128();
  swift_bridgeObjectRelease();
  sub_1D7A9C128();
  a8(0);
  sub_1D799DA1C(a9, a10);
  uint64_t v12 = sub_1D7A9BD78();
  uint64_t v14 = sub_1D78D1370(v12, v13);
  swift_bridgeObjectRelease();
  uint64_t v15 = sub_1D78D1EB0(v14);
  unint64_t v17 = v16;
  swift_release();
  sub_1D79F1750(v15, v17);
  sub_1D7A9BF38();
  swift_bridgeObjectRelease();
  sub_1D78607E8(v15, v17);
  sub_1D7A9C128();
  swift_bridgeObjectRelease();
  sub_1D7A9C128();
  sub_1D79F1750(a4, a5);
  sub_1D7A9BF38();
  swift_bridgeObjectRelease();
  sub_1D7A9C128();
  swift_bridgeObjectRelease();
  sub_1D7A9C128();
  sub_1D79F1750(a6, a7);
  sub_1D7A9BF38();
  swift_bridgeObjectRelease();
  sub_1D7A9C128();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1D799D630(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, unint64_t a6)
{
  sub_1D7A9CC48();
  swift_bridgeObjectRelease();
  strcpy((char *)v13, "Data to Sign: ");
  sub_1D79F1750(a1, a2);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDF7900);
  sub_1D78AC5E4();
  sub_1D7A9BF38();
  swift_bridgeObjectRelease();
  sub_1D7A9C128();
  swift_bridgeObjectRelease();
  sub_1D7A9C128();
  sub_1D79F1750(a3, a4);
  sub_1D7A9BF38();
  swift_bridgeObjectRelease();
  sub_1D7A9C128();
  swift_bridgeObjectRelease();
  sub_1D7A9C128();
  sub_1D79F1750(a5, a6);
  sub_1D7A9BF38();
  swift_bridgeObjectRelease();
  sub_1D7A9C128();
  swift_bridgeObjectRelease();
  return v13[0];
}

void *__swift_memcpy8_2(void *result, void *a2)
{
  *CoreIDVShared::COSESignatureValidator result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for COSESignatureValidator(unsigned __int16 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFCDB && *((unsigned char *)a1 + 8)) {
    return (*(_DWORD *)a1 + 64731);
  }
  unsigned int v3 = *a1;
  BOOL v4 = v3 >= 0x326;
  int v5 = v3 - 806;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for COSESignatureValidator(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFCDA)
  {
    *(void *)CoreIDVShared::COSESignatureValidator result = a2 - 64731;
    if (a3 >= 0xFCDB) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFCDB) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(_WORD *)CoreIDVShared::COSESignatureValidator result = a2 + 805;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for COSESignatureValidator()
{
  return &type metadata for COSESignatureValidator;
}

uint64_t sub_1D799D8FC()
{
  return sub_1D799D9D4(MEMORY[0x1E4F24F80], &qword_1EA8424A8, MEMORY[0x1E4F24F80]);
}

uint64_t sub_1D799D944()
{
  return sub_1D799D9D4(MEMORY[0x1E4F24FA0], &qword_1EA843408, MEMORY[0x1E4F24FA0]);
}

uint64_t sub_1D799D98C()
{
  return sub_1D799D9D4(MEMORY[0x1E4F24FB8], &qword_1EA8433F8, MEMORY[0x1E4F24FB8]);
}

uint64_t sub_1D799D9D4(void (*a1)(void), unint64_t *a2, void (*a3)(uint64_t))
{
  return sub_1D799D334(*(void *)(v3 + 16), *(void *)(v3 + 24), *(void *)(v3 + 32), *(void *)(v3 + 40), *(void *)(v3 + 48), *(void *)(v3 + 56), *(void *)(v3 + 64), a1, a2, a3);
}

uint64_t sub_1D799DA1C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t IdentityProofingOptions.debugDescription.getter(uint64_t a1)
{
  uint64_t v1 = 0x6E6120656E6F6850;
  uint64_t v2 = 1701736270;
  if (a1 == 2) {
    uint64_t v2 = 0x6863746157;
  }
  if (a1 != 3) {
    uint64_t v1 = v2;
  }
  if (a1 == 1) {
    return 0x656E6F6850;
  }
  else {
    return v1;
  }
}

uint64_t sub_1D799DAD8()
{
  uint64_t v1 = *v0;
  uint64_t v2 = 0x656E6F6850;
  if (*v0 != 1) {
    uint64_t v2 = 1701736270;
  }
  if (v1 == 2) {
    uint64_t v2 = 0x6863746157;
  }
  if (v1 == 3) {
    return 0x6E6120656E6F6850;
  }
  else {
    return v2;
  }
}

void DIPFeaturesProtocol.triggerTapToRadar(forContext:title:error:attachmentFilePaths:deleteOnAttach:description:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, char a7, uint64_t a8, uint64_t a9)
{
  uint64_t v12 = (void *)sub_1D7A9BF98();
  uint64_t v13 = (void *)sub_1D7A9BF98();
  if (a5) {
    a5 = (void *)sub_1D7A9AE48();
  }
  uint64_t v14 = (void *)sub_1D7A9C2F8();
  if (a9) {
    uint64_t v15 = sub_1D7A9BF98();
  }
  else {
    uint64_t v15 = 0;
  }
  id v16 = (id)v15;
  objc_msgSend(v9, sel_triggerTapToRadarForContext_title_error_attachmentFilePaths_deleteOnAttach_description_, v12, v13, a5, v14, a7 & 1);
}

float sub_1D799DC58@<S0>(void *a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t v3 = (float *)(*a1 + OBJC_IVAR____TtC13CoreIDVShared7IQPoint_x);
  swift_beginAccess();
  float result = *v3;
  *a2 = *(_DWORD *)v3;
  return result;
}

float sub_1D799DCB0@<S0>(void *a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t v3 = (float *)(*a1 + OBJC_IVAR____TtC13CoreIDVShared7IQPoint_y);
  swift_beginAccess();
  float result = *v3;
  *a2 = *(_DWORD *)v3;
  return result;
}

uint64_t DocumentScanGuidanceHelper.__allocating_init()()
{
  return swift_allocObject();
}

unint64_t sub_1D799DD18(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    float v2 = *(float *)(a1 + 32);
    uint64_t v3 = v1 - 1;
    if (v1 != 1)
    {
      BOOL v4 = (float *)(a1 + 36);
      do
      {
        float v5 = *v4++;
        float v6 = v5;
        if (v5 < v2) {
          float v2 = v6;
        }
        --v3;
      }
      while (v3);
    }
    uint64_t v7 = LODWORD(v2);
  }
  else
  {
    uint64_t v7 = 0;
  }
  return v7 | ((unint64_t)(v1 == 0) << 32);
}

int64_t sub_1D799DD70(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return 0;
  }
  int64_t v2 = *(void *)(a1 + 32);
  unint64_t v3 = v1 - 1;
  if (v1 != 1)
  {
    if (v1 >= 5)
    {
      unint64_t v4 = v3 & 0xFFFFFFFFFFFFFFFCLL | 1;
      int64x2_t v5 = vdupq_n_s64(v2);
      float v6 = (int64x2_t *)(a1 + 56);
      unint64_t v7 = v3 & 0xFFFFFFFFFFFFFFFCLL;
      int64x2_t v8 = v5;
      do
      {
        int64x2_t v5 = (int64x2_t)vbslq_s8((int8x16_t)vcgtq_s64(v5, v6[-1]), (int8x16_t)v6[-1], (int8x16_t)v5);
        int64x2_t v8 = (int64x2_t)vbslq_s8((int8x16_t)vcgtq_s64(v8, *v6), *(int8x16_t *)v6, (int8x16_t)v8);
        v6 += 2;
        v7 -= 4;
      }
      while (v7);
      int8x16_t v9 = vbslq_s8((int8x16_t)vcgtq_s64(v8, v5), (int8x16_t)v5, (int8x16_t)v8);
      uint64_t v10 = vextq_s8(v9, v9, 8uLL).u64[0];
      int64_t v2 = (int64_t)vbsl_s8((int8x8_t)vcgtd_s64(v10, v9.i64[0]), *(int8x8_t *)v9.i8, (int8x8_t)v10);
      if (v3 == (v3 & 0xFFFFFFFFFFFFFFFCLL)) {
        return v2;
      }
    }
    else
    {
      unint64_t v4 = 1;
    }
    unint64_t v11 = v1 - v4;
    uint64_t v12 = (int64_t *)(a1 + 8 * v4 + 32);
    do
    {
      int64_t v14 = *v12++;
      int64_t v13 = v14;
      if (v14 < v2) {
        int64_t v2 = v13;
      }
      --v11;
    }
    while (v11);
  }
  return v2;
}

uint64_t DocumentScanGuidanceHelper.init()()
{
  return v0;
}

void sub_1D799DE2C(unint64_t a1@<X0>, uint64_t *a2@<X8>, CGFloat a3@<D0>, CGFloat a4@<D1>, CGFloat a5@<D2>, CGFloat a6@<D3>)
{
  unint64_t v12 = sub_1D7A9B5F8();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12, v14, v15, v16, v17, v18, v19, v20);
  uint64_t v22 = (char *)&v67 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!(a1 >> 62))
  {
    uint64_t v23 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v23)
    {
      if (v23 == 4) {
        goto LABEL_4;
      }
LABEL_34:
      unint64_t v73 = 0;
      unint64_t v74 = 0xE000000000000000;
      sub_1D7A9CC48();
      swift_bridgeObjectRelease();
      unint64_t v73 = 0xD00000000000002BLL;
      unint64_t v74 = 0x80000001D7AC6410;
      uint64_t v72 = v23;
      sub_1D7A9D258();
      sub_1D7A9C128();
      swift_bridgeObjectRelease();
      uint64_t v39 = v73;
      uint64_t v40 = v74;
      LOWORD(v73) = 349;
      unint64_t v41 = sub_1D785EAF8(MEMORY[0x1E4FBC860]);
      sub_1D7860544();
      uint64_t v42 = (void *)swift_allocError();
      DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, v39, v40, (__int16 *)&v73, 0, v41, 0xD00000000000006ALL, 0x80000001D7AC6440, v43, 0xD000000000000032, 0x80000001D7AC64B0, 69);
      if (qword_1EBDF9DC8 != -1) {
        swift_once();
      }
      uint64_t v44 = __swift_project_value_buffer(v12, (uint64_t)qword_1EBDFBE70);
      swift_beginAccess();
      (*(void (**)(char *, uint64_t, unint64_t))(v13 + 16))(v22, v44, v12);
      DIPLogError(_:message:log:)(v42, 0, 0xE000000000000000);
      _s13CoreIDVShared9AnalyticsC9sendErroryys0E0_pFZ_0(v42);
      (*(void (**)(char *, unint64_t))(v13 + 8))(v22, v12);

      goto LABEL_37;
    }
LABEL_32:
    if (qword_1EBDF9DC8 == -1)
    {
LABEL_33:
      uint64_t v38 = __swift_project_value_buffer(v12, (uint64_t)qword_1EBDFBE70);
      swift_beginAccess();
      (*(void (**)(char *, uint64_t, unint64_t))(v13 + 16))(v22, v38, v12);
      sub_1D7921B1C();
      (*(void (**)(char *, unint64_t))(v13 + 8))(v22, v12);
LABEL_37:
      *a2 = 0;
      a2[1] = 0;
      *((unsigned char *)a2 + 16) = 1;
      return;
    }
LABEL_50:
    swift_once();
    goto LABEL_33;
  }
LABEL_16:
  swift_bridgeObjectRetain();
  uint64_t v31 = sub_1D7A9CFB8();
  swift_bridgeObjectRelease();
  if (!v31) {
    goto LABEL_32;
  }
  swift_bridgeObjectRetain();
  uint64_t v23 = sub_1D7A9CFB8();
  swift_bridgeObjectRelease();
  if (v23 != 4) {
    goto LABEL_34;
  }
  swift_bridgeObjectRetain();
  uint64_t v23 = sub_1D7A9CFB8();
  swift_bridgeObjectRelease();
  if (!v23)
  {
    uint64_t v67 = v22;
    uint64_t v68 = v13;
    unint64_t v69 = v12;
    unint64_t v70 = a2;
    uint64_t v24 = MEMORY[0x1E4FBC860];
LABEL_20:
    swift_bridgeObjectRetain();
    uint64_t v30 = sub_1D7A9CFB8();
    swift_bridgeObjectRelease();
    goto LABEL_21;
  }
LABEL_4:
  uint64_t v72 = MEMORY[0x1E4FBC860];
  sub_1D78AB5E8(0, v23 & ~(v23 >> 63), 0);
  if (v23 < 0)
  {
LABEL_49:
    __break(1u);
    goto LABEL_50;
  }
  uint64_t v67 = v22;
  uint64_t v68 = v13;
  unint64_t v69 = v12;
  unint64_t v70 = a2;
  uint64_t v13 = 0;
  uint64_t v24 = v72;
  uint64_t v22 = (char *)(a1 & 0xC000000000000001);
  a2 = &OBJC_IVAR____TtC13CoreIDVShared7IQPoint_x;
  do
  {
    if (v23 == v13)
    {
      __break(1u);
      goto LABEL_16;
    }
    if (v22) {
      uint64_t v25 = (char *)MEMORY[0x1D947BA10](v13, a1);
    }
    else {
      uint64_t v25 = (char *)*(id *)(a1 + 8 * v13 + 32);
    }
    uint64_t v26 = v25;
    uint64_t v27 = &v25[OBJC_IVAR____TtC13CoreIDVShared7IQPoint_x];
    swift_beginAccess();
    int v28 = *(_DWORD *)v27;

    uint64_t v72 = v24;
    unint64_t v12 = *(void *)(v24 + 16);
    unint64_t v29 = *(void *)(v24 + 24);
    if (v12 >= v29 >> 1)
    {
      sub_1D78AB5E8(v29 > 1, v12 + 1, 1);
      uint64_t v24 = v72;
    }
    ++v13;
    *(void *)(v24 + 16) = v12 + 1;
    *(_DWORD *)(v24 + 4 * v12 + 32) = v28;
  }
  while (v23 != v13);
  if (a1 >> 62) {
    goto LABEL_20;
  }
  uint64_t v30 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_21:
  uint64_t v32 = MEMORY[0x1E4FBC860];
  if (!v30)
  {
LABEL_38:
    unint64_t v45 = sub_1D799DD18(v24);
    if ((v45 & 0x100000000) != 0)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      float v46 = *(float *)&v45;
      unint64_t v47 = sub_1D799E69C(v24);
      swift_bridgeObjectRelease();
      if ((v47 & 0x100000000) == 0)
      {
        unint64_t v48 = sub_1D799DD18(v32);
        if ((v48 & 0x100000000) == 0)
        {
          float v49 = *(float *)&v48;
          unint64_t v50 = sub_1D799E69C(v32);
          swift_bridgeObjectRelease();
          if ((v50 & 0x100000000) == 0)
          {
            v75.origin.x = a3;
            v75.origin.y = a4;
            v75.size.width = a5;
            v75.size.height = a6;
            float MinX = CGRectGetMinX(v75);
            *(float *)&unsigned int v52 = MinX - v46;
            v76.origin.x = a3;
            v76.origin.y = a4;
            v76.size.width = a5;
            v76.size.height = a6;
            float MaxX = CGRectGetMaxX(v76);
            *(float *)&unsigned int v54 = *(float *)&v47 - MaxX;
            v77.origin.x = a3;
            v77.origin.y = a4;
            v77.size.width = a5;
            v77.size.height = a6;
            float MinY = CGRectGetMinY(v77);
            *(float *)&unsigned int v56 = MinY - v49;
            v78.origin.x = a3;
            v78.origin.y = a4;
            v78.size.width = a5;
            v78.size.height = a6;
            float MaxY = CGRectGetMaxY(v78);
            unint64_t v58 = v70;
            void *v70 = v52 | ((unint64_t)v54 << 32);
            v58[1] = v56 | ((unint64_t)COERCE_UNSIGNED_INT(*(float *)&v50 - MaxY) << 32);
            *((unsigned char *)v58 + 16) = 0;
            return;
          }
          goto LABEL_45;
        }
      }
    }
    swift_bridgeObjectRelease();
LABEL_45:
    LOWORD(v71[0]) = 349;
    unint64_t v59 = sub_1D785EAF8(MEMORY[0x1E4FBC860]);
    sub_1D7860544();
    uint64_t v60 = (void *)swift_allocError();
    DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xD000000000000036, 0x80000001D7AC64F0, (__int16 *)v71, 0, v59, 0xD00000000000006ALL, 0x80000001D7AC6440, v61, 0xD000000000000032, 0x80000001D7AC64B0, 78);
    if (qword_1EBDF9DC8 != -1) {
      swift_once();
    }
    uint64_t v62 = v69;
    uint64_t v63 = __swift_project_value_buffer(v69, (uint64_t)qword_1EBDFBE70);
    swift_beginAccess();
    unint64_t v65 = v67;
    uint64_t v64 = v68;
    (*(void (**)(char *, uint64_t, uint64_t))(v68 + 16))(v67, v63, v62);
    DIPLogError(_:message:log:)(v60, 0, 0xE000000000000000);
    _s13CoreIDVShared9AnalyticsC9sendErroryys0E0_pFZ_0(v60);
    (*(void (**)(char *, uint64_t))(v64 + 8))(v65, v62);

    uint64_t v66 = v70;
    void *v70 = 0;
    v66[1] = 0;
    *((unsigned char *)v66 + 16) = 1;
    return;
  }
  v71[0] = MEMORY[0x1E4FBC860];
  sub_1D78AB5E8(0, v30 & ~(v30 >> 63), 0);
  if ((v30 & 0x8000000000000000) == 0)
  {
    uint64_t v13 = 0;
    uint64_t v32 = v71[0];
    uint64_t v22 = (char *)(a1 & 0xC000000000000001);
    a2 = &OBJC_IVAR____TtC13CoreIDVShared7IQPoint_y;
    while (v30 != v13)
    {
      if (v22) {
        uint64_t v33 = (char *)MEMORY[0x1D947BA10](v13, a1);
      }
      else {
        uint64_t v33 = (char *)*(id *)(a1 + 8 * v13 + 32);
      }
      uint64_t v34 = v33;
      uint64_t v35 = &v33[OBJC_IVAR____TtC13CoreIDVShared7IQPoint_y];
      swift_beginAccess();
      int v36 = *(_DWORD *)v35;

      v71[0] = v32;
      unint64_t v12 = *(void *)(v32 + 16);
      unint64_t v37 = *(void *)(v32 + 24);
      if (v12 >= v37 >> 1)
      {
        sub_1D78AB5E8(v37 > 1, v12 + 1, 1);
        uint64_t v32 = v71[0];
      }
      ++v13;
      *(void *)(v32 + 16) = v12 + 1;
      *(_DWORD *)(v32 + 4 * v12 + 32) = v36;
      if (v30 == v13) {
        goto LABEL_38;
      }
    }
    __break(1u);
    goto LABEL_49;
  }
  __break(1u);
}

unint64_t sub_1D799E69C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    float v2 = *(float *)(a1 + 32);
    uint64_t v3 = v1 - 1;
    if (v1 != 1)
    {
      unint64_t v4 = (float *)(a1 + 36);
      do
      {
        float v5 = *v4++;
        float v6 = v5;
        if (v2 < v5) {
          float v2 = v6;
        }
        --v3;
      }
      while (v3);
    }
    uint64_t v7 = LODWORD(v2);
  }
  else
  {
    uint64_t v7 = 0;
  }
  return v7 | ((unint64_t)(v1 == 0) << 32);
}

uint64_t sub_1D799E6F4(uint64_t a1)
{
  return sub_1D799E724(a1, (uint64_t (*)(void))sub_1D799E908);
}

uint64_t sub_1D799E70C(uint64_t a1)
{
  return sub_1D799E724(a1, (uint64_t (*)(void))sub_1D799EDF4);
}

uint64_t sub_1D799E724(uint64_t a1, uint64_t (*a2)(void))
{
  unint64_t v2 = a2();
  return v2 | ((HIDWORD(v2) & 1) << 32);
}

uint64_t DocumentScanGuidanceHelper.deinit()
{
  return v0;
}

uint64_t DocumentScanGuidanceHelper.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

void sub_1D799E76C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  float v6 = (float *)(a2 + OBJC_IVAR____TtC13CoreIDVShared7IQPoint_y);
  swift_beginAccess();
  float v7 = *v6;
  int64x2_t v8 = (float *)(a1 + OBJC_IVAR____TtC13CoreIDVShared7IQPoint_y);
  swift_beginAccess();
  float v9 = *v8;
  long double v10 = (float)(v7 - *v8);
  unint64_t v11 = (float *)(a2 + OBJC_IVAR____TtC13CoreIDVShared7IQPoint_x);
  swift_beginAccess();
  float v12 = *v11;
  uint64_t v13 = (float *)(a1 + OBJC_IVAR____TtC13CoreIDVShared7IQPoint_x);
  swift_beginAccess();
  float v14 = *v13;
  atan2(v10, (float)(v12 - *v13));
  uint64_t v15 = (float *)(a3 + OBJC_IVAR____TtC13CoreIDVShared7IQPoint_y);
  swift_beginAccess();
  long double v16 = (float)(*v15 - v9);
  uint64_t v17 = (float *)(a3 + OBJC_IVAR____TtC13CoreIDVShared7IQPoint_x);
  swift_beginAccess();
  atan2(v16, (float)(*v17 - v14));
}

unint64_t sub_1D799E908(unint64_t a1)
{
  uint64_t v2 = sub_1D7A9B5F8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2, v4, v5, v6, v7, v8, v9, v10);
  float v12 = (char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!(a1 >> 62))
  {
    uint64_t v13 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v13)
    {
      if (v13 == 4) {
        goto LABEL_4;
      }
LABEL_19:
      unint64_t v46 = 0;
      unint64_t v47 = 0xE000000000000000;
      sub_1D7A9CC48();
      swift_bridgeObjectRelease();
      unint64_t v46 = 0xD00000000000002BLL;
      unint64_t v47 = 0x80000001D7AC6410;
      uint64_t v48 = v13;
      sub_1D7A9D258();
      sub_1D7A9C128();
      swift_bridgeObjectRelease();
      uint64_t v39 = v46;
      uint64_t v40 = v47;
      LOWORD(v46) = 349;
      unint64_t v41 = sub_1D785EAF8(MEMORY[0x1E4FBC860]);
      sub_1D7860544();
      a1 = swift_allocError();
      DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, v39, v40, (__int16 *)&v46, 0, v41, 0xD00000000000006ALL, 0x80000001D7AC6440, v42, 0xD000000000000020, 0x80000001D7AC6560, 102);
      if (qword_1EBDF9DC8 == -1)
      {
LABEL_20:
        uint64_t v43 = __swift_project_value_buffer(v2, (uint64_t)qword_1EBDFBE70);
        swift_beginAccess();
        (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v12, v43, v2);
        DIPLogError(_:message:log:)((void *)a1, 0, 0xE000000000000000);
        _s13CoreIDVShared9AnalyticsC9sendErroryys0E0_pFZ_0((void *)a1);
        (*(void (**)(char *, uint64_t))(v3 + 8))(v12, v2);

LABEL_24:
        uint64_t v37 = 0;
        unsigned __int8 v32 = 1;
        goto LABEL_25;
      }
LABEL_31:
      swift_once();
      goto LABEL_20;
    }
LABEL_21:
    if (qword_1EBDF9DC8 != -1) {
      swift_once();
    }
    uint64_t v44 = __swift_project_value_buffer(v2, (uint64_t)qword_1EBDFBE70);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v12, v44, v2);
    sub_1D7921814();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v12, v2);
    goto LABEL_24;
  }
  swift_bridgeObjectRetain();
  uint64_t v38 = sub_1D7A9CFB8();
  swift_bridgeObjectRelease();
  if (!v38) {
    goto LABEL_21;
  }
  swift_bridgeObjectRetain();
  uint64_t v13 = sub_1D7A9CFB8();
  swift_bridgeObjectRelease();
  if (v13 != 4) {
    goto LABEL_19;
  }
LABEL_4:
  if ((a1 & 0xC000000000000001) != 0)
  {
    id v19 = (id)MEMORY[0x1D947BA10](0, a1);
    id v20 = (id)MEMORY[0x1D947BA10](1, a1);
    id v21 = (id)MEMORY[0x1D947BA10](2, a1);
    id v22 = (id)MEMORY[0x1D947BA10](3, a1);
    goto LABEL_10;
  }
  unint64_t v14 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v14)
  {
    __break(1u);
    goto LABEL_28;
  }
  if (v14 == 1)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  if (v14 < 3)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (v14 == 3)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  uint64_t v15 = *(void **)(a1 + 32);
  long double v16 = *(void **)(a1 + 40);
  uint64_t v18 = *(void **)(a1 + 48);
  uint64_t v17 = *(void **)(a1 + 56);
  id v19 = v15;
  id v20 = v16;
  id v21 = v18;
  id v22 = v17;
LABEL_10:
  uint64_t v23 = v22;
  sub_1D799E76C((uint64_t)v19, (uint64_t)v22, (uint64_t)v20);
  float v25 = v24;
  sub_1D799E76C((uint64_t)v20, (uint64_t)v19, (uint64_t)v21);
  float v27 = v26;
  sub_1D799E76C((uint64_t)v21, (uint64_t)v20, (uint64_t)v23);
  float v29 = v28;
  sub_1D799E76C((uint64_t)v23, (uint64_t)v21, (uint64_t)v19);
  float v31 = v30;

  unsigned __int8 v32 = 0;
  float v33 = fmaxf(fabsf(v25 + -90.0), -1.0);
  float v34 = fabsf(v27 + -90.0);
  if (v33 <= v34) {
    float v33 = v34;
  }
  float v35 = fabsf(v29 + -90.0);
  if (v33 <= v35) {
    float v33 = v35;
  }
  float v36 = fabsf(v31 + -90.0);
  if (v33 > v36) {
    float v36 = v33;
  }
  uint64_t v37 = LODWORD(v36);
LABEL_25:
  LOBYTE(v48) = v32;
  return v37 | ((unint64_t)v32 << 32);
}

unint64_t sub_1D799EDF4(uint64_t a1)
{
  uint64_t v3 = sub_1D7A9B5F8();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3, v5, v6, v7, v8, v9, v10, v11);
  uint64_t v13 = (char *)&v60 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!((unint64_t)a1 >> 62))
  {
    uint64_t v14 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v14)
    {
      if (v14 == 4) {
        goto LABEL_4;
      }
LABEL_25:
      unint64_t v64 = 0;
      unint64_t v65 = 0xE000000000000000;
      sub_1D7A9CC48();
      swift_bridgeObjectRelease();
      unint64_t v64 = 0xD00000000000002BLL;
      unint64_t v65 = 0x80000001D7AC6410;
      uint64_t v62 = v14;
      sub_1D7A9D258();
      sub_1D7A9C128();
      swift_bridgeObjectRelease();
      uint64_t v53 = v64;
      uint64_t v54 = v65;
      LOWORD(v64) = 349;
      unint64_t v55 = sub_1D785EAF8(MEMORY[0x1E4FBC860]);
      sub_1D7860544();
      uint64_t v1 = (void *)swift_allocError();
      DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, v53, v54, (__int16 *)&v64, 0, v55, 0xD00000000000006ALL, 0x80000001D7AC6440, v56, 0xD000000000000024, 0x80000001D7AC6590, 138);
      if (qword_1EBDF9DC8 == -1)
      {
LABEL_26:
        uint64_t v57 = __swift_project_value_buffer(v3, (uint64_t)qword_1EBDFBE70);
        swift_beginAccess();
        (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v13, v57, v3);
        DIPLogError(_:message:log:)(v1, 0, 0xE000000000000000);
        _s13CoreIDVShared9AnalyticsC9sendErroryys0E0_pFZ_0(v1);
        (*(void (**)(char *, uint64_t))(v4 + 8))(v13, v3);

LABEL_30:
        uint64_t v51 = 0;
        unsigned __int8 v48 = 1;
        goto LABEL_31;
      }
LABEL_37:
      swift_once();
      goto LABEL_26;
    }
LABEL_27:
    if (qword_1EBDF9DC8 != -1) {
      swift_once();
    }
    uint64_t v58 = __swift_project_value_buffer(v3, (uint64_t)qword_1EBDFBE70);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v13, v58, v3);
    sub_1D7921998();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v13, v3);
    goto LABEL_30;
  }
  if (a1 < 0) {
    uint64_t v1 = (void *)a1;
  }
  else {
    uint64_t v1 = (void *)(a1 & 0xFFFFFFFFFFFFFF8);
  }
  swift_bridgeObjectRetain();
  uint64_t v52 = sub_1D7A9CFB8();
  swift_bridgeObjectRelease();
  if (!v52) {
    goto LABEL_27;
  }
  swift_bridgeObjectRetain();
  uint64_t v14 = sub_1D7A9CFB8();
  swift_bridgeObjectRelease();
  if (v14 != 4) {
    goto LABEL_25;
  }
LABEL_4:
  if ((a1 & 0xC000000000000001) != 0)
  {
    id v20 = (char *)MEMORY[0x1D947BA10](0, a1);
    id v21 = (char *)MEMORY[0x1D947BA10](1, a1);
    id v22 = (char *)MEMORY[0x1D947BA10](2, a1);
    uint64_t v23 = (char *)MEMORY[0x1D947BA10](3, a1);
    goto LABEL_10;
  }
  unint64_t v15 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v15)
  {
    __break(1u);
    goto LABEL_34;
  }
  if (v15 == 1)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v15 < 3)
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  if (v15 == 3)
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  long double v16 = *(void **)(a1 + 32);
  uint64_t v17 = *(void **)(a1 + 40);
  uint64_t v18 = *(void **)(a1 + 48);
  id v19 = *(void **)(a1 + 56);
  id v20 = v16;
  id v21 = v17;
  id v22 = v18;
  uint64_t v23 = v19;
LABEL_10:
  float v24 = v23;
  float v25 = (float *)&v21[OBJC_IVAR____TtC13CoreIDVShared7IQPoint_y];
  swift_beginAccess();
  float v26 = *v25;
  float v27 = (float *)&v20[OBJC_IVAR____TtC13CoreIDVShared7IQPoint_y];
  swift_beginAccess();
  float v61 = *v27;
  long double v28 = (float)(v26 - v61);
  float v29 = (float *)&v21[OBJC_IVAR____TtC13CoreIDVShared7IQPoint_x];
  swift_beginAccess();
  float v30 = *v29;
  float v31 = (float *)&v20[OBJC_IVAR____TtC13CoreIDVShared7IQPoint_x];
  swift_beginAccess();
  float v32 = *v31;
  float v33 = atan2(v28, (float)(v30 - *v31)) * 180.0 / 3.14159265;
  float v34 = (float *)&v22[OBJC_IVAR____TtC13CoreIDVShared7IQPoint_y];
  swift_beginAccess();
  float v35 = *v34;
  long double v36 = (float)(*v34 - v26);
  uint64_t v37 = (float *)&v22[OBJC_IVAR____TtC13CoreIDVShared7IQPoint_x];
  swift_beginAccess();
  float v38 = *v37;
  float v39 = atan2(v36, (float)(*v37 - v30)) * 180.0 / 3.14159265;
  float v60 = v39;
  uint64_t v40 = (float *)&v24[OBJC_IVAR____TtC13CoreIDVShared7IQPoint_y];
  swift_beginAccess();
  float v41 = *v40;
  long double v42 = (float)(*v40 - v35);
  uint64_t v43 = (float *)&v24[OBJC_IVAR____TtC13CoreIDVShared7IQPoint_x];
  swift_beginAccess();
  float v44 = *v43;

  float v45 = atan2(v42, (float)(v44 - v38)) * 180.0 / 3.14159265;
  if (v45 >= 0.0) {
    float v46 = v45;
  }
  else {
    float v46 = v45 + 360.0;
  }
  long double v47 = atan2((float)(v61 - v41), (float)(v32 - v44));
  unsigned __int8 v48 = 0;
  *(float *)&long double v47 = v47 * 180.0 / 3.14159265;
  float v49 = v60 + -90.0;
  float v50 = *(float *)&v47 + 90.0;
  if (fabsf(v33) < fabsf(v60 + -90.0)) {
    float v49 = v33;
  }
  if (fabsf(v49) >= fabsf(v46 + -180.0)) {
    float v49 = v46 + -180.0;
  }
  if (fabsf(v49) < fabsf(v50)) {
    float v50 = v49;
  }
  uint64_t v51 = LODWORD(v50);
LABEL_31:
  unsigned __int8 v63 = v48;
  return v51 | ((unint64_t)v48 << 32);
}

__n128 __swift_memcpy16_4(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

ValueMetadata *type metadata accessor for DocumentDrift()
{
  return &type metadata for DocumentDrift;
}

uint64_t type metadata accessor for DocumentScanGuidanceHelper()
{
  return self;
}

uint64_t method lookup function for DocumentScanGuidanceHelper(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for DocumentScanGuidanceHelper);
}

uint64_t dispatch thunk of DocumentScanGuidanceHelper.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t dispatch thunk of DocumentScanGuidanceHelper.calculateDocumentDrift(vertices:regionOfInterest:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

uint64_t dispatch thunk of DocumentScanGuidanceHelper.calculateDocumentSkew(vertices:)()
{
  unint64_t v1 = (*(uint64_t (**)(void))(*(void *)v0 + 112))();
  return v1 | ((HIDWORD(v1) & 1) << 32);
}

uint64_t dispatch thunk of DocumentScanGuidanceHelper.calculateDocumentRotation(vertices:)()
{
  unint64_t v1 = (*(uint64_t (**)(void))(*(void *)v0 + 120))();
  return v1 | ((HIDWORD(v1) & 1) << 32);
}

BOOL static KeystoreKeyType.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t KeystoreKeyType.hash(into:)()
{
  return sub_1D7A9D5E8();
}

uint64_t DIPKeystoreProtocol.retrieveOrGenerateIdentityKey(name:userInfo:keyTypeToGenerate:algorithm:constraints:enableUAM:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned char *a6, unsigned char *a7, uint64_t a8)
{
  *(void *)(v9 + 504) = v17;
  *(void *)(v9 + 512) = v8;
  *(void *)(v9 + 488) = a8;
  *(void *)(v9 + 496) = v16;
  *(unsigned char *)(v9 + 609) = v15;
  *(void *)(v9 + 472) = a4;
  *(void *)(v9 + 480) = a5;
  *(void *)(v9 + 456) = a2;
  *(void *)(v9 + 464) = a3;
  *(void *)(v9 + 448) = a1;
  uint64_t v12 = sub_1D7A9B5F8();
  *(void *)(v9 + 520) = v12;
  *(void *)(v9 + 528) = *(void *)(v12 - 8);
  *(void *)(v9 + 536) = swift_task_alloc();
  *(void *)(v9 + 544) = swift_task_alloc();
  *(void *)(v9 + 552) = swift_task_alloc();
  *(void *)(v9 + 560) = swift_task_alloc();
  *(unsigned char *)(v9 + 610) = *a6;
  *(unsigned char *)(v9 + 611) = *a7;
  return MEMORY[0x1F4188298](sub_1D799F728, 0, 0);
}

uint64_t sub_1D799F728()
{
  uint64_t v103 = v0;
  *(_OWORD *)(v0 + 16) = 0u;
  uint64_t v1 = *(void *)(v0 + 504);
  uint64_t v2 = *(void *)(v0 + 496);
  uint64_t v3 = *(void *)(v0 + 472);
  uint64_t v4 = *(void *)(v0 + 480);
  uint64_t v5 = *(void *)(v0 + 456);
  uint64_t v6 = *(void *)(v0 + 464);
  *(_OWORD *)(v0 + 32) = 0u;
  *(void *)(v0 + 48) = 0;
  LOBYTE(v102) = 0;
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t *, uint64_t))(v1 + 8);
  uint64_t v8 = v7(v5, v6, v3, v4, &v102, v2);
  unint64_t v10 = v9;
  uint64_t v11 = *(void *)(v0 + 504);
  LOBYTE(v102) = 2;
  uint64_t v12 = *(void (**)(void))(v11 + 24);
  uint64_t v13 = v8;
  v12();
  uint64_t v14 = v12;
  uint64_t v98 = v13;
  if (*(void *)(v0 + 120))
  {
    uint64_t v90 = v12;
    unint64_t v95 = (void *)(v0 + 56);
    sub_1D79A0894((long long *)(v0 + 96), v0 + 56);
    if (qword_1EBDF9DC8 != -1) {
      swift_once();
    }
    uint64_t v15 = *(void *)(v0 + 560);
    uint64_t v16 = *(void *)(v0 + 528);
    uint64_t v17 = *(void *)(v0 + 520);
    uint64_t v18 = __swift_project_value_buffer(v17, (uint64_t)qword_1EBDFBE70);
    swift_beginAccess();
    unint64_t v84 = *(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16);
    uint64_t v85 = v18;
    v84(v15, v18, v17);
    swift_bridgeObjectRetain_n();
    id v19 = sub_1D7A9B5D8();
    os_log_type_t v20 = sub_1D7A9C748();
    BOOL v21 = os_log_type_enabled(v19, v20);
    uint64_t v22 = *(void *)(v0 + 560);
    uint64_t v23 = *(void *)(v0 + 528);
    uint64_t v92 = *(void *)(v0 + 520);
    int v87 = v7;
    if (v21)
    {
      uint64_t v82 = *(void *)(v0 + 560);
      float v24 = (uint8_t *)swift_slowAlloc();
      uint64_t v25 = swift_slowAlloc();
      uint64_t v102 = v25;
      *(_DWORD *)float v24 = 136315138;
      swift_bridgeObjectRetain();
      *(void *)(v0 + 440) = sub_1D7923300(v98, v10, &v102);
      sub_1D7A9C9E8();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1D7853000, v19, v20, "Found standard key with label %s", v24, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D947D740](v25, -1, -1);
      MEMORY[0x1D947D740](v24, -1, -1);

      float v26 = *(void (**)(uint64_t, uint64_t))(v23 + 8);
      uint64_t v27 = v82;
    }
    else
    {
      swift_bridgeObjectRelease_n();

      float v26 = *(void (**)(uint64_t, uint64_t))(v23 + 8);
      uint64_t v27 = v22;
    }
    uint64_t v28 = v92;
    uint64_t v93 = v26;
    v26(v27, v28);
    uint64_t v29 = *(void *)(v0 + 80);
    uint64_t v30 = *(void *)(v0 + 88);
    __swift_project_boxed_opaque_existential_1(v95, v29);
    uint64_t v32 = *(void *)((*(uint64_t (**)(void, uint64_t, uint64_t))(v30 + 40))(0, v29, v30) + 16);
    swift_bridgeObjectRelease();
    if (v32)
    {
      sub_1D79A07CC(v0 + 16);
      swift_bridgeObjectRelease();
      sub_1D7869658((uint64_t)v95, v0 + 16);
      uint64_t v7 = v87;
    }
    else
    {
      v84(*(void *)(v0 + 552), v85, *(void *)(v0 + 520));
      swift_bridgeObjectRetain_n();
      float v44 = sub_1D7A9B5D8();
      os_log_type_t v45 = sub_1D7A9C748();
      BOOL v46 = os_log_type_enabled(v44, v45);
      uint64_t v47 = *(void *)(v0 + 552);
      uint64_t v48 = *(void *)(v0 + 520);
      if (v46)
      {
        uint64_t v86 = *(void *)(v0 + 520);
        float v49 = (uint8_t *)swift_slowAlloc();
        uint64_t v50 = swift_slowAlloc();
        uint64_t v102 = v50;
        *(_DWORD *)float v49 = 136315138;
        swift_bridgeObjectRetain();
        uint64_t v83 = v47;
        uint64_t v51 = v98;
        *(void *)(v0 + 432) = sub_1D7923300(v98, v10, &v102);
        sub_1D7A9C9E8();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1D7853000, v44, v45, "Standard key with label %s does not have an attestation; deleting it",
          v49,
          0xCu);
        swift_arrayDestroy();
        MEMORY[0x1D947D740](v50, -1, -1);
        MEMORY[0x1D947D740](v49, -1, -1);

        v93(v83, v86);
        uint64_t v7 = v87;
      }
      else
      {
        swift_bridgeObjectRelease_n();

        v93(v47, v48);
        uint64_t v7 = v87;
        uint64_t v51 = v98;
      }
      (*(void (**)(uint64_t, unint64_t, void, void))(*(void *)(v0 + 504) + 32))(v51, v10, 0, *(void *)(v0 + 496));
      swift_bridgeObjectRelease();
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v95);
    uint64_t v14 = v90;
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_1D79A07CC(v0 + 96);
  }
  uint64_t v99 = (long long *)(v0 + 136);
  sub_1D79A082C(v0 + 16, v0 + 136);
  if (!*(void *)(v0 + 160))
  {
    uint64_t v96 = *(void *)(v0 + 504);
    uint64_t v35 = *(void *)(v0 + 496);
    long double v36 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t *, uint64_t, uint64_t))v7;
    uint64_t v38 = *(void *)(v0 + 472);
    uint64_t v37 = *(void *)(v0 + 480);
    uint64_t v39 = *(void *)(v0 + 456);
    uint64_t v40 = *(void *)(v0 + 464);
    sub_1D79A07CC((uint64_t)v99);
    LOBYTE(v102) = 1;
    uint64_t v41 = v36(v39, v40, v38, v37, &v102, v35, v96);
    unint64_t v43 = v42;
    uint64_t v88 = v36;
    LOBYTE(v102) = 0;
    v14();
    uint64_t v99 = (long long *)(v0 + 256);
    if (*(void *)(v0 + 240))
    {
      uint64_t v52 = (long long *)(v0 + 176);
      sub_1D79A0894((long long *)(v0 + 216), v0 + 176);
      if (qword_1EBDF9DC8 != -1) {
        swift_once();
      }
      uint64_t v53 = *(void *)(v0 + 544);
      uint64_t v54 = *(void *)(v0 + 528);
      uint64_t v55 = *(void *)(v0 + 520);
      uint64_t v56 = __swift_project_value_buffer(v55, (uint64_t)qword_1EBDFBE70);
      swift_beginAccess();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v54 + 16))(v53, v56, v55);
      swift_bridgeObjectRetain();
      uint64_t v57 = sub_1D7A9B5D8();
      os_log_type_t v58 = sub_1D7A9C748();
      BOOL v59 = os_log_type_enabled(v57, v58);
      uint64_t v60 = *(void *)(v0 + 544);
      uint64_t v61 = *(void *)(v0 + 528);
      uint64_t v62 = *(void *)(v0 + 520);
      if (v59)
      {
        uint64_t v97 = *(void *)(v0 + 544);
        unsigned __int8 v63 = (uint8_t *)swift_slowAlloc();
        uint64_t v102 = swift_slowAlloc();
        uint64_t v64 = v102;
        *(_DWORD *)unsigned __int8 v63 = 136315138;
        swift_bridgeObjectRetain();
        *(void *)(v0 + 424) = sub_1D7923300(v41, v43, &v102);
        sub_1D7A9C9E8();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1D7853000, v57, v58, "Found background key with label %s", v63, 0xCu);
        swift_arrayDestroy();
        uint64_t v65 = v64;
        uint64_t v52 = (long long *)(v0 + 176);
        MEMORY[0x1D947D740](v65, -1, -1);
        MEMORY[0x1D947D740](v63, -1, -1);

        (*(void (**)(uint64_t, uint64_t))(v61 + 8))(v97, v62);
      }
      else
      {

        swift_bridgeObjectRelease_n();
        (*(void (**)(uint64_t, uint64_t))(v61 + 8))(v60, v62);
      }
      sub_1D79A07CC(v0 + 16);
      sub_1D79A0894(v52, v0 + 16);
    }
    else
    {
      swift_bridgeObjectRelease();
      sub_1D79A07CC(v0 + 216);
    }
    sub_1D79A082C(v0 + 16, (uint64_t)v99);
    if (!*(void *)(v0 + 280))
    {
      uint64_t v66 = *(unsigned __int8 *)(v0 + 610);
      sub_1D79A07CC((uint64_t)v99);
      id v67 = objc_msgSend(self, sel_standardUserDefaults);
      if (qword_1EBDF9690 != -1) {
        swift_once();
      }
      if (byte_1EBDFBE68 == 1)
      {
        uint64_t v68 = (void *)sub_1D7A9BF98();
        unsigned __int8 v69 = objc_msgSend(v67, sel_BOOLForKey_, v68);

        if (v69)
        {
          uint64_t v70 = 15;
LABEL_40:
          if (*(void *)(v0 + 488)) {
            unint64_t v71 = *(void *)(v0 + 488);
          }
          else {
            unint64_t v71 = sub_1D786103C(MEMORY[0x1E4FBC860]);
          }
          char v72 = *(unsigned char *)(v0 + 610);
          uint64_t v100 = *(void *)(v0 + 504);
          uint64_t v91 = *(void *)(v0 + 480);
          uint64_t v94 = *(void *)(v0 + 496);
          uint64_t v73 = *(void *)(v0 + 464);
          uint64_t v89 = *(void *)(v0 + 472);
          uint64_t v74 = *(void *)(v0 + 456);
          *(void *)(v0 + 416) = v70;
          swift_bridgeObjectRetain();
          uint64_t v75 = sub_1D7A9D258();
          uint64_t v77 = v76;
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v102 = v71;
          sub_1D78A1594(v75, v77, 1, isUniquelyReferenced_nonNull_native);
          *(void *)(v0 + 568) = v102;
          swift_bridgeObjectRelease();
          LOBYTE(v102) = v72;
          *(void *)(v0 + 576) = v88(v74, v73, v89, v91, &v102, v94, v100);
          *(void *)(v0 + 584) = v79;
          uint64_t v80 = *(void *)(v0 + 504);
          *(unsigned char *)(v0 + 608) = *(unsigned char *)(v0 + 611);
          uint64_t v101 = *(void *)(v80 + 16) + **(int **)(v80 + 16);
          uint64_t v81 = (void *)swift_task_alloc();
          *(void *)(v0 + 592) = v81;
          *uint64_t v81 = v0;
          v81[1] = sub_1D79A034C;
          uint64_t v105 = *(void *)(v0 + 504);
          __asm { BRAA            X9, X16 }
        }
      }
      else
      {
      }
      if (((v66 - 1) & 0xFFFFFFFFFFFFFFFDLL) != 0) {
        uint64_t v70 = 15;
      }
      else {
        uint64_t v70 = 525600;
      }
      goto LABEL_40;
    }
  }
  uint64_t v33 = *(void *)(v0 + 448);
  sub_1D79A07CC(v0 + 16);
  sub_1D79A0894(v99, v33);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  float v34 = *(uint64_t (**)(void))(v0 + 8);
  return v34();
}

uint64_t sub_1D79A034C()
{
  *(void *)(*(void *)v1 + 600) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v0)
  {
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_1D79A0734;
  }
  else
  {
    uint64_t v2 = sub_1D79A047C;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D79A047C()
{
  uint64_t v21 = v0;
  if (qword_1EBDF9DC8 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)(v0 + 536);
  uint64_t v2 = *(void *)(v0 + 528);
  uint64_t v3 = *(void *)(v0 + 520);
  uint64_t v4 = __swift_project_value_buffer(v3, (uint64_t)qword_1EBDFBE70);
  swift_beginAccess();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v4, v3);
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_1D7A9B5D8();
  os_log_type_t v6 = sub_1D7A9C748();
  BOOL v7 = os_log_type_enabled(v5, v6);
  unint64_t v8 = *(void *)(v0 + 584);
  if (v7)
  {
    uint64_t v9 = *(void *)(v0 + 576);
    uint64_t v19 = *(void *)(v0 + 536);
    uint64_t v10 = *(void *)(v0 + 528);
    uint64_t v18 = *(void *)(v0 + 520);
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    uint64_t v20 = v12;
    *(_DWORD *)uint64_t v11 = 136315138;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 408) = sub_1D7923300(v9, v8, &v20);
    sub_1D7A9C9E8();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1D7853000, v5, v6, "created new identity key with label %s", v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D947D740](v12, -1, -1);
    MEMORY[0x1D947D740](v11, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v19, v18);
  }
  else
  {
    uint64_t v13 = *(void *)(v0 + 536);
    uint64_t v14 = *(void *)(v0 + 528);
    uint64_t v15 = *(void *)(v0 + 520);

    swift_bridgeObjectRelease_n();
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
  }
  sub_1D79A07CC(v0 + 16);
  sub_1D79A0894((long long *)(v0 + 296), *(void *)(v0 + 448));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v16 = *(uint64_t (**)(void))(v0 + 8);
  return v16();
}

uint64_t sub_1D79A0734()
{
  sub_1D79A07CC(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D79A07CC(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA845AC0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D79A082C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA845AC0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D79A0894(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

unint64_t sub_1D79A08B0()
{
  unint64_t result = qword_1EA845AC8;
  if (!qword_1EA845AC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA845AC8);
  }
  return result;
}

unint64_t sub_1D79A0908()
{
  unint64_t result = qword_1EA845AD0;
  if (!qword_1EA845AD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA845AD0);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for IdentityKeyGenerationOption(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF9) {
    goto LABEL_17;
  }
  if (a2 + 7 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 7) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 7;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 7;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 7;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 8;
  int v8 = v6 - 8;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for IdentityKeyGenerationOption(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *unint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D79A0AB8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for IdentityKeyGenerationOption()
{
  return &type metadata for IdentityKeyGenerationOption;
}

unsigned char *storeEnumTagSinglePayload for KeystoreKeyType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D79A0BBCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for KeystoreKeyType()
{
  return &type metadata for KeystoreKeyType;
}

uint64_t dispatch thunk of DIPKeystoreProtocol.identityKeyLabel(for:userInfo:type:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 8))();
}

uint64_t dispatch thunk of DIPKeystoreProtocol.generateIdentityKeyPair(label:algorithm:constraints:enableUAM:temporary:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v19 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a9 + 16) + **(int **)(a9 + 16));
  uint64_t v17 = (void *)swift_task_alloc();
  *(void *)(v9 + 16) = v17;
  *uint64_t v17 = v9;
  v17[1] = sub_1D786EC1C;
  return v19(a1, a2, a3, a4, a5, a6, a7, a8, a9);
}

uint64_t dispatch thunk of DIPKeystoreProtocol.retrieveIdentityKey(label:constraints:attestationType:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 24))();
}

uint64_t dispatch thunk of DIPKeystoreProtocol.deleteIdentityKey(label:constraints:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 32))();
}

unint64_t sub_1D79A0DBC(uint64_t a1)
{
  uint64_t v1 = a1;
  if (*(void *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF9668);
    int v2 = (void *)sub_1D7A9CFF8();
  }
  else
  {
    int v2 = (void *)MEMORY[0x1E4FBC868];
  }
  uint64_t v35 = v1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(v1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(v1 + 64);
  int64_t v34 = (unint64_t)(63 - v3) >> 6;
  unsigned int v6 = v47;
  BOOL v7 = v45;
  int v8 = &v41;
  uint64_t v9 = &v43;
  unint64_t result = swift_bridgeObjectRetain();
  int64_t v36 = 0;
  if (v5) {
    goto LABEL_10;
  }
LABEL_11:
  int64_t v19 = v36 + 1;
  if (__OFADD__(v36, 1)) {
    goto LABEL_35;
  }
  if (v19 >= v34) {
    goto LABEL_32;
  }
  unint64_t v20 = *(void *)(v35 + 8 * v19);
  int64_t v21 = v36 + 1;
  if (!v20)
  {
    int64_t v21 = v36 + 2;
    if (v36 + 2 >= v34) {
      goto LABEL_32;
    }
    unint64_t v20 = *(void *)(v35 + 8 * v21);
    if (!v20)
    {
      int64_t v21 = v36 + 3;
      if (v36 + 3 >= v34) {
        goto LABEL_32;
      }
      unint64_t v20 = *(void *)(v35 + 8 * v21);
      if (!v20)
      {
        int64_t v21 = v36 + 4;
        if (v36 + 4 >= v34) {
          goto LABEL_32;
        }
        unint64_t v20 = *(void *)(v35 + 8 * v21);
        if (!v20)
        {
          int64_t v22 = v36 + 5;
          if (v36 + 5 < v34)
          {
            unint64_t v20 = *(void *)(v35 + 8 * v22);
            if (v20)
            {
              int64_t v21 = v36 + 5;
              goto LABEL_26;
            }
            while (1)
            {
              int64_t v21 = v22 + 1;
              if (__OFADD__(v22, 1)) {
                goto LABEL_36;
              }
              if (v21 >= v34) {
                break;
              }
              unint64_t v20 = *(void *)(v35 + 8 * v21);
              ++v22;
              if (v20) {
                goto LABEL_26;
              }
            }
          }
LABEL_32:
          sub_1D78907D0();
          return (unint64_t)v2;
        }
      }
    }
  }
LABEL_26:
  int64_t v36 = v21;
  uint64_t v37 = (v20 - 1) & v20;
  for (unint64_t i = __clz(__rbit64(v20)) + (v21 << 6); ; unint64_t i = __clz(__rbit64(v5)) | (v36 << 6))
  {
    uint64_t v23 = (uint64_t *)(*(void *)(v1 + 48) + 16 * i);
    uint64_t v25 = *v23;
    uint64_t v24 = v23[1];
    sub_1D78907D8(*(void *)(v1 + 56) + 32 * i, (uint64_t)v6);
    *(void *)&long long v46 = v25;
    *((void *)&v46 + 1) = v24;
    v44[2] = v46;
    v45[0] = v47[0];
    v45[1] = v47[1];
    uint64_t v39 = v25;
    uint64_t v40 = v24;
    sub_1D7860E50(v7, &v38);
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA843A60);
    swift_dynamicCast();
    uint64_t v27 = v39;
    uint64_t v26 = v40;
    sub_1D7860E50(v8, v9);
    sub_1D7860E50(v9, v44);
    sub_1D7860E50(v44, &v42);
    unint64_t result = sub_1D7A18684(v27, v26);
    unint64_t v28 = result;
    if (v29)
    {
      uint64_t v11 = v9;
      uint64_t v12 = v8;
      uint64_t v13 = v1;
      uint64_t v14 = v7;
      uint64_t v15 = v6;
      uint64_t v16 = (uint64_t *)(v2[6] + 16 * result);
      swift_bridgeObjectRelease();
      *uint64_t v16 = v27;
      v16[1] = v26;
      unsigned int v6 = v15;
      BOOL v7 = v14;
      uint64_t v1 = v13;
      int v8 = v12;
      uint64_t v9 = v11;
      uint64_t v17 = (_OWORD *)(v2[7] + 32 * v28);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
      unint64_t result = (unint64_t)sub_1D7860E50(&v42, v17);
      unint64_t v5 = v37;
      if (!v37) {
        goto LABEL_11;
      }
      goto LABEL_10;
    }
    if (v2[2] >= v2[3]) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v30 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v30 = v27;
    v30[1] = v26;
    unint64_t result = (unint64_t)sub_1D7860E50(&v42, (_OWORD *)(v2[7] + 32 * result));
    uint64_t v31 = v2[2];
    BOOL v32 = __OFADD__(v31, 1);
    uint64_t v33 = v31 + 1;
    if (v32) {
      goto LABEL_34;
    }
    v2[2] = v33;
    unint64_t v5 = v37;
    if (!v37) {
      goto LABEL_11;
    }
LABEL_10:
    uint64_t v37 = (v5 - 1) & v5;
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_1D79A1168(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF93E8);
    uint64_t v2 = sub_1D7A9CFF8();
  }
  else
  {
    uint64_t v2 = MEMORY[0x1E4FBC868];
  }
  uint64_t v28 = a1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(a1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v27 = (unint64_t)(63 - v3) >> 6;
  uint64_t v6 = v2 + 64;
  swift_bridgeObjectRetain();
  uint64_t result = swift_retain();
  int64_t v8 = 0;
  while (1)
  {
    if (v5)
    {
      unint64_t v11 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v12 = v11 | (v8 << 6);
      goto LABEL_28;
    }
    int64_t v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v13 >= v27) {
      goto LABEL_37;
    }
    unint64_t v14 = *(void *)(v28 + 8 * v13);
    int64_t v15 = v8 + 1;
    if (!v14)
    {
      int64_t v15 = v8 + 2;
      if (v8 + 2 >= v27) {
        goto LABEL_37;
      }
      unint64_t v14 = *(void *)(v28 + 8 * v15);
      if (!v14)
      {
        int64_t v15 = v8 + 3;
        if (v8 + 3 >= v27) {
          goto LABEL_37;
        }
        unint64_t v14 = *(void *)(v28 + 8 * v15);
        if (!v14)
        {
          int64_t v15 = v8 + 4;
          if (v8 + 4 >= v27) {
            goto LABEL_37;
          }
          unint64_t v14 = *(void *)(v28 + 8 * v15);
          if (!v14) {
            break;
          }
        }
      }
    }
LABEL_27:
    unint64_t v5 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v15 << 6);
    int64_t v8 = v15;
LABEL_28:
    uint64_t v17 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v12);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    sub_1D78907D8(*(void *)(a1 + 56) + 32 * v12, (uint64_t)v40);
    *(void *)&long long v39 = v19;
    *((void *)&v39 + 1) = v18;
    v37[2] = v39;
    v38[0] = v40[0];
    v38[1] = v40[1];
    *(void *)&v37[0] = v19;
    *((void *)&v37[0] + 1) = v18;
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    sub_1D7860E50(v38, v32);
    long long v33 = v29;
    long long v34 = v30;
    uint64_t v35 = v31;
    sub_1D7860E50(v32, v36);
    long long v29 = v33;
    long long v30 = v34;
    uint64_t v31 = v35;
    sub_1D7860E50(v36, v37);
    sub_1D7860E50(v37, &v33);
    uint64_t result = sub_1D7A9CBD8();
    uint64_t v20 = -1 << *(unsigned char *)(v2 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v6 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v9 = __clz(__rbit64((-1 << v21) & ~*(void *)(v6 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v25 = v22 == v24;
        if (v22 == v24) {
          unint64_t v22 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)(v6 + 8 * v22);
      }
      while (v26 == -1);
      unint64_t v9 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(void *)(v6 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v9;
    uint64_t v10 = *(void *)(v2 + 48) + 40 * v9;
    *(_OWORD *)uint64_t v10 = v29;
    *(_OWORD *)(v10 + 16) = v30;
    *(void *)(v10 + 32) = v31;
    uint64_t result = (uint64_t)sub_1D7860E50(&v33, (_OWORD *)(*(void *)(v2 + 56) + 32 * v9));
    ++*(void *)(v2 + 16);
  }
  int64_t v16 = v8 + 5;
  if (v8 + 5 >= v27)
  {
LABEL_37:
    swift_release();
    sub_1D78907D0();
    return v2;
  }
  unint64_t v14 = *(void *)(v28 + 8 * v16);
  if (v14)
  {
    int64_t v15 = v8 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v15 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v15 >= v27) {
      goto LABEL_37;
    }
    unint64_t v14 = *(void *)(v28 + 8 * v15);
    ++v16;
    if (v14) {
      goto LABEL_27;
    }
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_1D79A1530(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF93E8);
    uint64_t v2 = sub_1D7A9CFF8();
  }
  else
  {
    uint64_t v2 = MEMORY[0x1E4FBC868];
  }
  uint64_t v27 = a1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(a1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v26 = (unint64_t)(63 - v3) >> 6;
  uint64_t v6 = v2 + 64;
  swift_bridgeObjectRetain();
  uint64_t result = swift_retain();
  int64_t v8 = 0;
  while (1)
  {
    if (v5)
    {
      unint64_t v11 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v12 = v11 | (v8 << 6);
      goto LABEL_28;
    }
    int64_t v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v13 >= v26) {
      goto LABEL_37;
    }
    unint64_t v14 = *(void *)(v27 + 8 * v13);
    int64_t v15 = v8 + 1;
    if (!v14)
    {
      int64_t v15 = v8 + 2;
      if (v8 + 2 >= v26) {
        goto LABEL_37;
      }
      unint64_t v14 = *(void *)(v27 + 8 * v15);
      if (!v14)
      {
        int64_t v15 = v8 + 3;
        if (v8 + 3 >= v26) {
          goto LABEL_37;
        }
        unint64_t v14 = *(void *)(v27 + 8 * v15);
        if (!v14)
        {
          int64_t v15 = v8 + 4;
          if (v8 + 4 >= v26) {
            goto LABEL_37;
          }
          unint64_t v14 = *(void *)(v27 + 8 * v15);
          if (!v14) {
            break;
          }
        }
      }
    }
LABEL_27:
    unint64_t v5 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v15 << 6);
    int64_t v8 = v15;
LABEL_28:
    uint64_t v17 = *(void **)(*(void *)(a1 + 48) + 8 * v12);
    sub_1D78907D8(*(void *)(a1 + 56) + 32 * v12, (uint64_t)v39 + 8);
    *(void *)&v39[0] = v17;
    v37[0] = v39[0];
    v37[1] = v39[1];
    uint64_t v38 = v40;
    *(void *)&v36[0] = v17;
    type metadata accessor for CFString(0);
    id v18 = v17;
    swift_dynamicCast();
    sub_1D7860E50((_OWORD *)((char *)v37 + 8), v31);
    long long v32 = v28;
    long long v33 = v29;
    uint64_t v34 = v30;
    sub_1D7860E50(v31, v35);
    long long v28 = v32;
    long long v29 = v33;
    uint64_t v30 = v34;
    sub_1D7860E50(v35, v36);
    sub_1D7860E50(v36, &v32);
    uint64_t result = sub_1D7A9CBD8();
    uint64_t v19 = -1 << *(unsigned char *)(v2 + 32);
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v6 + 8 * (v20 >> 6))) != 0)
    {
      unint64_t v9 = __clz(__rbit64((-1 << v20) & ~*(void *)(v6 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v22 = 0;
      unint64_t v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v24 = v21 == v23;
        if (v21 == v23) {
          unint64_t v21 = 0;
        }
        v22 |= v24;
        uint64_t v25 = *(void *)(v6 + 8 * v21);
      }
      while (v25 == -1);
      unint64_t v9 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(void *)(v6 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v9;
    uint64_t v10 = *(void *)(v2 + 48) + 40 * v9;
    *(_OWORD *)uint64_t v10 = v28;
    *(_OWORD *)(v10 + 16) = v29;
    *(void *)(v10 + 32) = v30;
    uint64_t result = (uint64_t)sub_1D7860E50(&v32, (_OWORD *)(*(void *)(v2 + 56) + 32 * v9));
    ++*(void *)(v2 + 16);
  }
  int64_t v16 = v8 + 5;
  if (v8 + 5 >= v26)
  {
LABEL_37:
    swift_release();
    sub_1D78907D0();
    return v2;
  }
  unint64_t v14 = *(void *)(v27 + 8 * v16);
  if (v14)
  {
    int64_t v15 = v8 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v15 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v15 >= v26) {
      goto LABEL_37;
    }
    unint64_t v14 = *(void *)(v27 + 8 * v15);
    ++v16;
    if (v14) {
      goto LABEL_27;
    }
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_1D79A18F8(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF93E8);
    uint64_t v2 = sub_1D7A9CFF8();
  }
  else
  {
    uint64_t v2 = MEMORY[0x1E4FBC868];
  }
  uint64_t v27 = a1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(a1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v26 = (unint64_t)(63 - v3) >> 6;
  uint64_t v6 = v2 + 64;
  swift_bridgeObjectRetain();
  uint64_t result = swift_retain();
  int64_t v8 = 0;
  while (1)
  {
    if (v5)
    {
      unint64_t v11 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v12 = v11 | (v8 << 6);
      goto LABEL_28;
    }
    int64_t v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v13 >= v26) {
      goto LABEL_37;
    }
    unint64_t v14 = *(void *)(v27 + 8 * v13);
    int64_t v15 = v8 + 1;
    if (!v14)
    {
      int64_t v15 = v8 + 2;
      if (v8 + 2 >= v26) {
        goto LABEL_37;
      }
      unint64_t v14 = *(void *)(v27 + 8 * v15);
      if (!v14)
      {
        int64_t v15 = v8 + 3;
        if (v8 + 3 >= v26) {
          goto LABEL_37;
        }
        unint64_t v14 = *(void *)(v27 + 8 * v15);
        if (!v14)
        {
          int64_t v15 = v8 + 4;
          if (v8 + 4 >= v26) {
            goto LABEL_37;
          }
          unint64_t v14 = *(void *)(v27 + 8 * v15);
          if (!v14) {
            break;
          }
        }
      }
    }
LABEL_27:
    unint64_t v5 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v15 << 6);
    int64_t v8 = v15;
LABEL_28:
    uint64_t v17 = (void *)(*(void *)(a1 + 48) + 16 * v12);
    uint64_t v18 = v17[1];
    *(void *)&v36[0] = *v17;
    *((void *)&v36[0] + 1) = v18;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    swift_dynamicCast();
    long long v32 = v28;
    long long v33 = v29;
    uint64_t v34 = v30;
    sub_1D7860E50(&v31, v35);
    long long v28 = v32;
    long long v29 = v33;
    uint64_t v30 = v34;
    sub_1D7860E50(v35, v36);
    sub_1D7860E50(v36, &v32);
    uint64_t result = sub_1D7A9CBD8();
    uint64_t v19 = -1 << *(unsigned char *)(v2 + 32);
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v6 + 8 * (v20 >> 6))) != 0)
    {
      unint64_t v9 = __clz(__rbit64((-1 << v20) & ~*(void *)(v6 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v22 = 0;
      unint64_t v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v24 = v21 == v23;
        if (v21 == v23) {
          unint64_t v21 = 0;
        }
        v22 |= v24;
        uint64_t v25 = *(void *)(v6 + 8 * v21);
      }
      while (v25 == -1);
      unint64_t v9 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(void *)(v6 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v9;
    uint64_t v10 = *(void *)(v2 + 48) + 40 * v9;
    *(_OWORD *)uint64_t v10 = v28;
    *(_OWORD *)(v10 + 16) = v29;
    *(void *)(v10 + 32) = v30;
    uint64_t result = (uint64_t)sub_1D7860E50(&v32, (_OWORD *)(*(void *)(v2 + 56) + 32 * v9));
    ++*(void *)(v2 + 16);
  }
  int64_t v16 = v8 + 5;
  if (v8 + 5 >= v26)
  {
LABEL_37:
    swift_release();
    sub_1D78907D0();
    return v2;
  }
  unint64_t v14 = *(void *)(v27 + 8 * v16);
  if (v14)
  {
    int64_t v15 = v8 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v15 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v15 >= v26) {
      goto LABEL_37;
    }
    unint64_t v14 = *(void *)(v27 + 8 * v15);
    ++v16;
    if (v14) {
      goto LABEL_27;
    }
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t static IdentityAnalyticsReportEventKeys.IdentityAnalyticsReportClientTimeStamp.getter()
{
  return 0x436465646E756F72;
}

uint64_t static IdentityAnalyticsReportEventKeys.IdentityAnalyticsReportSessionDuration.getter()
{
  return 0x446E6F6973736573;
}

uint64_t static IdentityAnalyticsReportEventKeys.IdentityAnalyticsReportLocale.getter()
{
  return 0x656C61636F4CLL;
}

uint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportSubjectIdentity.getter()
{
  return 0x797469746E656469;
}

uint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportClientName.getter()
{
  return 0x74656C6C6177;
}

uint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportEventTypeKey.getter()
{
  return 0x707954746E657665;
}

uint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportButtonTagKey.getter()
{
  return 0x61546E6F74747562;
}

uint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportPageTagKey.getter()
{
  return 0x67615465676170;
}

unint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportLocalAuthenticationEventTypeKey.getter()
{
  return 0xD00000000000001CLL;
}

uint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportSubTypeKey.getter()
{
  return 0x65707954627573;
}

uint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportProductTypeKey.getter()
{
  return 0x54746375646F7270;
}

uint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportProductSubTypeKey.getter()
{
  return 0x53746375646F7270;
}

uint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportIssuerKey.getter()
{
  return 0x726575737369;
}

uint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportPassStyleKey.getter()
{
  return 0x6C79745373736170;
}

uint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportPassTypeKey.getter()
{
  return 0x6570795473736170;
}

uint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportReaderTypeKey.getter()
{
  return 0x7954726564616572;
}

unint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportAuthorizationErrorKey.getter()
{
  return 0xD000000000000012;
}

uint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportErrorTypeKey.getter()
{
  return 0x707954726F727265;
}

uint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportReferralSourceKey.getter()
{
  return 0x6C61727265666572;
}

unint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportContactlessInterfaceSourceKey.getter()
{
  return 0xD00000000000001ALL;
}

uint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportHasNFCKey.getter()
{
  return 0x43464E736168;
}

unint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportAccessibilitySetKey.getter()
{
  return 0xD000000000000010;
}

uint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportViewedLiveVideoKey.getter()
{
  return 0x694C646577656976;
}

uint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportAXFlowEnabled.getter()
{
  return 0x6E45776F6C467861;
}

uint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportEventTypeViewDidAppear.getter()
{
  return 0x4164694477656976;
}

uint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportEventTypeButtonTap.getter()
{
  return 0x61546E6F74747562;
}

uint64_t static IdentityAnalyticsReportEventKeys.AnalyticReportFedStatsOptInChoiceKey.getter()
{
  return 0x6F68436E6974706FLL;
}

unint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportEventTypeViewDidDisappear.getter()
{
  return 0xD000000000000010;
}

uint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportEventTypeToggleTap.getter()
{
  return 0x6154656C67676F74;
}

unint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportEventTypeNotificationAppeared.getter()
{
  return 0xD000000000000014;
}

unint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportImproveIDVerification.getter()
{
  return 0xD000000000000015;
}

unint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportiOSSettingsIDverification.getter()
{
  return 0xD000000000000019;
}

uint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportFedStatsOptInButtonTag.getter()
{
  return 0x6E4974704FLL;
}

uint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportFedStatsOptOutButtonTag.getter()
{
  return 0x74754F74704FLL;
}

uint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportFedStatsConfirmButtonTag.getter()
{
  return 0x6D7269666E6F43;
}

unint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportAddCardChooseDevicePageTag.getter()
{
  return 0xD000000000000013;
}

uint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportLearnMoreButtonTag.getter()
{
  return 0x6F6D206E7261656CLL;
}

uint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportEducationPageTag.getter()
{
  return 0x6F69746163756465;
}

uint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportFrontIDScannedEventType.getter()
{
  return 0x534449746E6F7266;
}

uint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportBackIDScannedEventType.getter()
{
  return 0x635344496B636162;
}

uint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportUploadButtonTag.getter()
{
  return 0x64616F6C7075;
}

uint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportScanIDPageTag.getter()
{
  return 0x44496E616373;
}

unint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportFrontIDScanConfirmedEventType.getter()
{
  return 0xD000000000000014;
}

unint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportBackIDScanConfirmedEventType.getter()
{
  return 0xD000000000000013;
}

uint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportConfirmIDPageTag.getter()
{
  return 0x496D7269666E6F63;
}

unint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportFrontIDScanErrorEventType.getter()
{
  return 0xD000000000000010;
}

uint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportBackIDScanErrorEventType.getter()
{
  return 0x637344496B636162;
}

unint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportLivenessEducationPageTag.getter()
{
  return 0xD000000000000011;
}

uint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportGestureSuccessEventType.getter()
{
  return 0x5365727574736567;
}

uint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportGestureFailureEventType.getter()
{
  return 0x4665727574736567;
}

uint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportGesturePageTag.getter()
{
  return 0x65727574736567;
}

uint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportTimeoutErrorType.getter()
{
  return 0x74756F656D6974;
}

uint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportNotRecognizedErrorType.getter()
{
  return 0x676F636552746F6ELL;
}

uint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportGestureSubType.getter()
{
  return 0x5465727574736567;
}

unint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportAccessibilityOptionsButtonTag.getter()
{
  return 0xD000000000000014;
}

uint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportSelfieCapturedEventType.getter()
{
  return 0x61436569666C6573;
}

uint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportTakeSelfiePageTag.getter()
{
  return 0x666C6553656B6174;
}

uint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportSelfieSuccessEventType.getter()
{
  return 0x75536569666C6573;
}

uint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportSelfieFailureEventType.getter()
{
  return 0x61466569666C6573;
}

uint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportRetakeButtonTag.getter()
{
  return 0x656B61746572;
}

uint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportConfirmSelfiePageType.getter()
{
  return 0x536D7269666E6F63;
}

uint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportingLivenessActiveSubType.getter()
{
  return 0x657669746361;
}

uint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportingLivenessPassiveSubType.getter()
{
  return 0x4F65766973736170;
}

uint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportingLivenessStepUpInlineSubType.getter()
{
  return 0x6E49705570657473;
}

uint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportingLivenessStepUpAsyncSubType.getter()
{
  return 0x7341705570657473;
}

unint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportFaceIDBindingStartEventType.getter()
{
  return 0xD000000000000012;
}

unint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportTouchIDBindingStartEventType.getter()
{
  return 0xD000000000000013;
}

unint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportPasscodeBindingStartEventType.getter()
{
  return 0xD000000000000014;
}

unint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportFaceIDBindingCompleteEventType.getter()
{
  return 0xD000000000000015;
}

unint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportTouchIDBindingCompleteEventType.getter()
{
  return 0xD000000000000016;
}

unint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportPasscodeBindingCompleteEventType.getter()
{
  return 0xD000000000000017;
}

unint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportFaceIDBindingErrorEventType.getter()
{
  return 0xD000000000000012;
}

unint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportTouchIDBindingErrorEventType.getter()
{
  return 0xD000000000000013;
}

unint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportPasscodeBindingErrorEventType.getter()
{
  return 0xD000000000000014;
}

unint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportReviewInfoSharedPageTag.getter()
{
  return 0xD000000000000010;
}

unint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportTermsAndConditionsPageTag.getter()
{
  return 0xD000000000000012;
}

unint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportVerificationInProgress.getter()
{
  return 0xD000000000000016;
}

unint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportProvisioningSuccessEventType.getter()
{
  return 0xD000000000000013;
}

unint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportProvisioningFailureEventType.getter()
{
  return 0xD000000000000013;
}

unint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportVerificationRequestEventType.getter()
{
  return 0xD000000000000015;
}

uint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportDoneButtonTag.getter()
{
  return 1701736292;
}

unint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportProvisioningStatusPageTag.getter()
{
  return 0xD000000000000012;
}

uint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportiPhoneSubType.getter()
{
  return 0x656E6F685069;
}

uint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportWatchSubType.getter()
{
  return 0x6863746177;
}

uint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportPotraitMismatchErrorType.getter()
{
  return 0x4D74696172746F70;
}

uint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportDataMismatchErrorType.getter()
{
  return 0x6D73694D61746164;
}

uint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportContinueButtonTag.getter()
{
  return 0x65756E69746E6F63;
}

uint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportTryAgainButtonTag.getter()
{
  return 0x6E69616741797274;
}

unint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportTryDifferentMovementButtonTag.getter()
{
  return 0xD000000000000014;
}

uint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportSkipButtonTag.getter()
{
  return 1885956979;
}

uint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportCancelButtonTag.getter()
{
  return 0x6C65636E6163;
}

uint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportScanAgainButtonTag.getter()
{
  return 0x696167416E616373;
}

uint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportFrontSubType.getter()
{
  return 0x746E6F7266;
}

uint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportBackSubType.getter()
{
  return 1801675106;
}

uint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportOtherErrorType.getter()
{
  return 0x726568746FLL;
}

uint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportCancelAlertPageTag.getter()
{
  return 0x6C416C65636E6163;
}

uint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportExtendedReviewPageTag.getter()
{
  return 0x6465646E65747865;
}

unint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportExtendedReviewPushNotificationPageTag.getter()
{
  return 0xD000000000000010;
}

uint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportOpenDMVButtonTag.getter()
{
  return 0x564D446E65706FLL;
}

uint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportProductTypeValue.getter()
{
  return 0x797469746E656469;
}

uint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportReferralSourcePhoneValue.getter()
{
  return 0x74656C6C6177;
}

uint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportReferralSourceWatchValue.getter()
{
  return 0x7070416863746177;
}

uint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportReferralSourceNotificationValue.getter()
{
  return 0x6163696669746F6ELL;
}

uint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportReferralSourceWalletValue.getter()
{
  return 0x74656C6C6177;
}

unint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportReferralSourceStepUpNotification.getter()
{
  return 0xD000000000000012;
}

uint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportReferralSourceSettingsValue.getter()
{
  return 0x73676E6974746573;
}

uint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportBillShockAlertPageTag.getter()
{
  return 0x636F68536C6C6962;
}

uint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportWaitForWifiButtonTag.getter()
{
  return 0x57726F4674696177;
}

uint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportWaitForWifiPageTag.getter()
{
  return 0x57726F4674696177;
}

uint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportConnectToWifiButtonTag.getter()
{
  return 0x547463656E6E6F63;
}

unint64_t static IdentityAnalyticsReportEventKeys.AnalyticsReportContinueWithCellularButtonTag.getter()
{
  return 0xD000000000000014;
}

uint64_t sub_1D79A28D0()
{
  uint64_t v1 = *(void *)(v0 + 64);
  uint64_t v2 = *(void *)(v0 + 72);
  uint64_t v3 = v1;
  if (v2 == 1)
  {
    uint64_t v3 = sub_1D79A6A9C();
    uint64_t v4 = *(void *)(v0 + 64);
    uint64_t v5 = *(void *)(v0 + 72);
    *(void *)(v0 + 64) = v3;
    *(void *)(v0 + 72) = v6;
    swift_bridgeObjectRetain();
    sub_1D79A67B0(v4, v5);
  }
  sub_1D79A6C9C(v1, v2);
  return v3;
}

uint64_t IdentityAnalyticsReporter.imageQualityErrorMappingForRTC.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t IdentityAnalyticsReporter.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  IdentityAnalyticsReporter.init()();
  return v0;
}

uint64_t IdentityAnalyticsReporter.init()()
{
  v28[0] = sub_1D7A9C7C8();
  uint64_t v1 = *(void *)(v28[0] - 8);
  MEMORY[0x1F4188790](v28[0], v2, v3, v4, v5, v6, v7, v8);
  uint64_t v10 = (char *)v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1D7A9C7B8();
  MEMORY[0x1F4188790](v11, v12, v13, v14, v15, v16, v17, v18);
  uint64_t v19 = sub_1D7A9B708();
  MEMORY[0x1F4188790](v19 - 8, v20, v21, v22, v23, v24, v25, v26);
  *(void *)(v0 + 16) = MEMORY[0x1E4FBC868];
  *(void *)(v0 + 24) = 0;
  sub_1D78C4038(0, (unint64_t *)&qword_1EBDF9DB0);
  sub_1D7A9B6E8();
  v28[1] = MEMORY[0x1E4FBC860];
  sub_1D79A6CB0((unint64_t *)&qword_1EBDF9DE0, MEMORY[0x1E4FBCC10]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF9DD0);
  sub_1D78650FC((unint64_t *)&qword_1EBDF9DD8, &qword_1EBDF9DD0);
  sub_1D7A9CBA8();
  (*(void (**)(char *, void, void))(v1 + 104))(v10, *MEMORY[0x1E4FBCC58], v28[0]);
  *(void *)(v0 + 32) = sub_1D7A9C808();
  *(void *)(v0 + 40) = dispatch_group_create();
  *(_DWORD *)(v0 + 48) = 13107202;
  *(_WORD *)(v0 + 52) = 0;
  *(_DWORD *)(v0 + 56) = 1090;
  *(_OWORD *)(v0 + 64) = xmmword_1D7AA9710;
  *(void *)(v0 + 80) = sub_1D785FAFC((uint64_t)&unk_1F2F185B8);
  swift_retain();
  sub_1D79A41B0((uint64_t)sub_1D79A2F4C, v0);
  swift_release();
  return v0;
}

uint64_t sub_1D79A2C64(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_1D7A9B5F8();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v4, v6, v7, v8, v9, v10, v11, v12);
  uint64_t v15 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13, v16, v17, v18, v19, v20, v21, v22);
  uint64_t v24 = (char *)&v35 - v23;
  if (a1)
  {
    uint64_t v25 = *(void **)(a2 + 24);
    *(void *)(a2 + 24) = a1;
    uint64_t v26 = a1;

    if (qword_1EBDF9DC8 != -1) {
      swift_once();
    }
    uint64_t v27 = __swift_project_value_buffer(v4, (uint64_t)qword_1EBDFBE70);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v15, v27, v4);
    long long v28 = sub_1D7A9B5D8();
    os_log_type_t v29 = sub_1D7A9C748();
    if (os_log_type_enabled(v28, v29))
    {
      uint64_t v30 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v30 = 0;
      _os_log_impl(&dword_1D7853000, v28, v29, "RTCReporter: Successfully established session with RTC", v30, 2u);
      MEMORY[0x1D947D740](v30, -1, -1);
    }
    else
    {

      long long v28 = v26;
    }
  }
  else
  {
    if (qword_1EBDF9DC8 != -1) {
      swift_once();
    }
    uint64_t v31 = __swift_project_value_buffer(v4, (uint64_t)qword_1EBDFBE70);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v24, v31, v4);
    long long v28 = sub_1D7A9B5D8();
    os_log_type_t v32 = sub_1D7A9C748();
    if (os_log_type_enabled(v28, v32))
    {
      long long v33 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)long long v33 = 0;
      _os_log_impl(&dword_1D7853000, v28, v32, "RTCReporter: Failed to establish session with RTC", v33, 2u);
      MEMORY[0x1D947D740](v33, -1, -1);
    }
    uint64_t v15 = v24;
  }

  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v15, v4);
}

uint64_t sub_1D79A2F4C(void *a1)
{
  return sub_1D79A2C64(a1, v1);
}

uint64_t sub_1D79A2F54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned __int8 a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20)
{
  uint64_t v61 = a7;
  uint64_t v62 = a8;
  uint64_t v58 = a5;
  uint64_t v59 = a6;
  int v65 = *(unsigned __int16 *)((char *)&a20 + 1);
  uint64_t v63 = a18;
  uint64_t v64 = a19;
  v52[1] = a17;
  uint64_t v60 = a16;
  uint64_t v57 = a14;
  uint64_t v56 = a12;
  v52[0] = a11;
  uint64_t v55 = a10;
  int v54 = a20;
  int v53 = a9;
  uint64_t v67 = sub_1D7A9B6C8();
  uint64_t v71 = *(void *)(v67 - 8);
  MEMORY[0x1F4188790](v67, v25, v26, v27, v28, v29, v30, v31);
  uint64_t v66 = (char *)v52 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = sub_1D7A9B708();
  uint64_t v69 = *(void *)(v33 - 8);
  uint64_t v70 = v33;
  MEMORY[0x1F4188790](v33, v34, v35, v36, v37, v38, v39, v40);
  long long v42 = (char *)v52 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = *(void *)(v20 + 32);
  uint64_t v43 = swift_allocObject();
  *(void *)(v43 + 16) = v20;
  *(void *)(v43 + 24) = a1;
  *(void *)(v43 + 32) = a2;
  *(void *)(v43 + 40) = a3;
  uint64_t v44 = v58;
  *(void *)(v43 + 48) = a4;
  *(void *)(v43 + 56) = v44;
  uint64_t v45 = v61;
  uint64_t v46 = v62;
  *(void *)(v43 + 64) = v59;
  *(void *)(v43 + 72) = v45;
  *(void *)(v43 + 80) = v46;
  *(unsigned char *)(v43 + 88) = v53;
  *(unsigned char *)(v43 + 89) = v54;
  *(void *)(v43 + 96) = v55;
  *(void *)(v43 + 104) = a11;
  *(void *)(v43 + 112) = v56;
  *(void *)(v43 + 120) = a13;
  *(void *)(v43 + 128) = v57;
  *(void *)(v43 + 136) = a15;
  *(void *)(v43 + 144) = v60;
  *(void *)(v43 + 152) = a17;
  uint64_t v47 = v64;
  *(void *)(v43 + 160) = v63;
  *(void *)(v43 + 168) = v47;
  *(_WORD *)(v43 + 176) = v65;
  aBlock[4] = sub_1D79A4688;
  aBlock[5] = v43;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1D79899E4;
  aBlock[3] = &block_descriptor_7;
  uint64_t v48 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1D7A9B6E8();
  uint64_t v72 = MEMORY[0x1E4FBC860];
  sub_1D79A6CB0((unint64_t *)&qword_1EBDF9D90, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF9D98);
  sub_1D78650FC((unint64_t *)&qword_1EBDF9DA0, &qword_1EBDF9D98);
  uint64_t v50 = v66;
  uint64_t v49 = v67;
  sub_1D7A9CBA8();
  MEMORY[0x1D947B570](0, v42, v50, v48);
  _Block_release(v48);
  (*(void (**)(char *, uint64_t))(v71 + 8))(v50, v49);
  (*(void (**)(char *, uint64_t))(v69 + 8))(v42, v70);
  return swift_release();
}

void sub_1D79A334C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, char a11, long long a12, long long a13, long long a14, uint64_t a15, uint64_t a16, long long a17, char a18, char a19)
{
  uint64_t v71 = a6;
  uint64_t v74 = a4;
  uint64_t v73 = a2;
  uint64_t v24 = sub_1D7A9B5F8();
  uint64_t v25 = *(void *)(v24 - 8);
  MEMORY[0x1F4188790](v24, v26, v27, v28, v29, v30, v31, v32);
  uint64_t v34 = (char *)&v70 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D7A9C788();
  if (qword_1EBDF9DC8 != -1) {
    swift_once();
  }
  uint64_t v35 = __swift_project_value_buffer(v24, (uint64_t)qword_1EBDFBE70);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v25 + 16))(v34, v35, v24);
  uint64_t v36 = sub_1D7A9B5D8();
  os_log_type_t v37 = sub_1D7A9C748();
  if (os_log_type_enabled(v36, v37))
  {
    uint64_t v38 = (uint8_t *)swift_slowAlloc();
    uint64_t v72 = a3;
    uint64_t v39 = a5;
    uint64_t v40 = a7;
    uint64_t v41 = a8;
    uint64_t v42 = a1;
    uint64_t v43 = v38;
    *(_WORD *)uint64_t v38 = 0;
    _os_log_impl(&dword_1D7853000, v36, v37, "RTCReporter: Session lock signalled", v38, 2u);
    uint64_t v44 = v43;
    a1 = v42;
    a8 = v41;
    a7 = v40;
    a5 = v39;
    a3 = v72;
    MEMORY[0x1D947D740](v44, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v25 + 8))(v34, v24);
  uint64_t v45 = *(void **)(a1 + 24);
  if (v45)
  {
    uint64_t v72 = a1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF9400);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1D7AA0A40;
    *(void *)(inited + 32) = 0x707954746E657665;
    *(void *)(inited + 40) = 0xE900000000000065;
    uint64_t v47 = MEMORY[0x1E4FBB1A0];
    *(void *)(inited + 48) = v73;
    *(void *)(inited + 56) = a3;
    *(void *)(inited + 72) = v47;
    *(void *)(inited + 80) = 0x67615465676170;
    *(void *)(inited + 120) = v47;
    uint64_t v48 = v74;
    *(void *)(inited + 88) = 0xE700000000000000;
    *(void *)(inited + 96) = v48;
    *(void *)(inited + 104) = a5;
    id v49 = v45;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v50 = sub_1D785F2A0(inited);
    if (a7)
    {
      uint64_t v78 = v47;
      *(void *)&long long v77 = v71;
      *((void *)&v77 + 1) = a7;
      sub_1D7860E50(&v77, v76);
      swift_bridgeObjectRetain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v75 = v50;
      sub_1D78A095C(v76, 0x65707954627573, 0xE700000000000000, isUniquelyReferenced_nonNull_native);
      unint64_t v50 = v75;
      swift_bridgeObjectRelease();
    }
    if (a9)
    {
      uint64_t v78 = v47;
      *(void *)&long long v77 = a8;
      *((void *)&v77 + 1) = a9;
      sub_1D7860E50(&v77, v76);
      swift_bridgeObjectRetain();
      char v52 = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v75 = v50;
      sub_1D78A095C(v76, 0x61546E6F74747562, 0xE900000000000067, v52);
      unint64_t v50 = v75;
      swift_bridgeObjectRelease();
    }
    if (a10 != 2)
    {
      uint64_t v53 = 1702195828;
      if ((a10 & 1) == 0) {
        uint64_t v53 = 0x65736C6166;
      }
      unint64_t v54 = 0xE400000000000000;
      uint64_t v78 = v47;
      if ((a10 & 1) == 0) {
        unint64_t v54 = 0xE500000000000000;
      }
      *(void *)&long long v77 = v53;
      *((void *)&v77 + 1) = v54;
      sub_1D7860E50(&v77, v76);
      char v55 = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v75 = v50;
      sub_1D78A095C(v76, 0xD000000000000010, 0x80000001D7AC6620, v55);
      unint64_t v50 = v75;
      swift_bridgeObjectRelease();
    }
    if (a11 != 2)
    {
      uint64_t v56 = 1702195828;
      if ((a11 & 1) == 0) {
        uint64_t v56 = 0x65736C6166;
      }
      unint64_t v57 = 0xE400000000000000;
      uint64_t v78 = v47;
      if ((a11 & 1) == 0) {
        unint64_t v57 = 0xE500000000000000;
      }
      *(void *)&long long v77 = v56;
      *((void *)&v77 + 1) = v57;
      sub_1D7860E50(&v77, v76);
      char v58 = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v75 = v50;
      sub_1D78A095C(v76, 0x6F68436E6974706FLL, 0xEB00000000656369, v58);
      unint64_t v50 = v75;
      swift_bridgeObjectRelease();
    }
    if (*((void *)&a12 + 1))
    {
      uint64_t v78 = v47;
      long long v77 = a12;
      sub_1D7860E50(&v77, v76);
      swift_bridgeObjectRetain();
      char v59 = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v75 = v50;
      sub_1D78A095C(v76, 0x54746375646F7270, 0xEB00000000657079, v59);
      unint64_t v50 = v75;
      swift_bridgeObjectRelease();
    }
    if (*((void *)&a13 + 1))
    {
      uint64_t v78 = v47;
      long long v77 = a13;
      sub_1D7860E50(&v77, v76);
      swift_bridgeObjectRetain();
      char v60 = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v75 = v50;
      sub_1D78A095C(v76, 0x53746375646F7270, 0xEE00657079546275, v60);
      unint64_t v50 = v75;
      swift_bridgeObjectRelease();
    }
    if (*((void *)&a14 + 1))
    {
      uint64_t v78 = v47;
      long long v77 = a14;
      sub_1D7860E50(&v77, v76);
      swift_bridgeObjectRetain();
      char v62 = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v75 = v50;
      sub_1D78A095C(v76, 0x726575737369, 0xE600000000000000, v62);
      unint64_t v50 = v75;
      swift_bridgeObjectRelease();
    }
    uint64_t v63 = a16;
    if (!a16)
    {
      uint64_t v64 = sub_1D79A28D0();
      if (!v63)
      {
LABEL_32:
        if (*((void *)&a17 + 1))
        {
          uint64_t v78 = v47;
          long long v77 = a17;
          sub_1D7860E50(&v77, v76);
          swift_bridgeObjectRetain();
          char v66 = swift_isUniquelyReferenced_nonNull_native();
          unint64_t v75 = v50;
          sub_1D78A095C(v76, 0x707954726F727265, 0xE900000000000065, v66);
          unint64_t v50 = v75;
          swift_bridgeObjectRelease();
        }
        uint64_t v67 = v72;
        if (a18 != 2)
        {
          uint64_t v78 = MEMORY[0x1E4FBB390];
          LOBYTE(v77) = a18 & 1;
          sub_1D7860E50(&v77, v76);
          char v68 = swift_isUniquelyReferenced_nonNull_native();
          unint64_t v75 = v50;
          sub_1D78A095C(v76, 0x694C646577656976, 0xEF6F656469566576, v68);
          unint64_t v50 = v75;
          swift_bridgeObjectRelease();
        }
        if (a19 != 2)
        {
          uint64_t v78 = MEMORY[0x1E4FBB390];
          LOBYTE(v77) = a19 & 1;
          sub_1D7860E50(&v77, v76);
          char v69 = swift_isUniquelyReferenced_nonNull_native();
          unint64_t v75 = v50;
          sub_1D78A095C(v76, 0x6E45776F6C467861, 0xED000064656C6261, v69);
          unint64_t v50 = v75;
          swift_bridgeObjectRelease();
        }
        sub_1D79A5328(v49, v50, v67);
        swift_bridgeObjectRelease();

        return;
      }
      a15 = v64;
    }
    uint64_t v78 = v47;
    *(void *)&long long v77 = a15;
    *((void *)&v77 + 1) = v63;
    sub_1D7860E50(&v77, v76);
    swift_bridgeObjectRetain();
    char v65 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v75 = v50;
    sub_1D78A095C(v76, 0x6C61727265666572, 0xEE00656372756F53, v65);
    unint64_t v50 = v75;
    swift_bridgeObjectRelease();
    goto LABEL_32;
  }
}

uint64_t sub_1D79A3C00(void *a1)
{
  uint64_t v2 = sub_1D7A9B5F8();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t result = MEMORY[0x1F4188790](v2, v4, v5, v6, v7, v8, v9, v10);
  uint64_t v13 = (char *)v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    id v14 = a1;
    if (qword_1EBDF9DC8 != -1) {
      swift_once();
    }
    uint64_t v15 = __swift_project_value_buffer(v2, (uint64_t)qword_1EBDFBE70);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v13, v15, v2);
    id v16 = a1;
    id v17 = a1;
    uint64_t v18 = sub_1D7A9B5D8();
    os_log_type_t v19 = sub_1D7A9C748();
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v20 = (uint8_t *)swift_slowAlloc();
      uint64_t v21 = swift_slowAlloc();
      uint64_t v25 = v21;
      *(_DWORD *)uint64_t v20 = 136315138;
      v24[0] = v20 + 4;
      swift_getErrorValue();
      uint64_t v22 = sub_1D7A9D548();
      v24[1] = sub_1D7923300(v22, v23, &v25);
      sub_1D7A9C9E8();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1D7853000, v18, v19, "Failed to send message to rtc, error: %s", v20, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D947D740](v21, -1, -1);
      MEMORY[0x1D947D740](v20, -1, -1);
    }
    else
    {
    }
    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v13, v2);
  }
  return result;
}

uint64_t sub_1D79A3EB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDF9120);
  MEMORY[0x1F4188790](v7 - 8, v8, v9, v10, v11, v12, v13, v14);
  id v16 = (char *)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF9118);
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17, v19, v20, v21, v22, v23, v24, v25);
  uint64_t v27 = (char *)&v38 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t v28 = *(void *)(v3 + 16);
  if (!*(void *)(v28 + 16))
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56))(v16, 1, 1, v17);
LABEL_7:
    uint64_t v32 = (uint64_t *)&unk_1EBDF9120;
    uint64_t v33 = (uint64_t)v16;
LABEL_8:
    sub_1D7871C4C(v33, v32);
    uint64_t v34 = sub_1D7A9B148();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(a3, 1, 1, v34);
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v29 = sub_1D7A18684(a1, a2);
  if (v30)
  {
    sub_1D7919F20(*(void *)(v28 + 56) + *(void *)(v18 + 72) * v29, (uint64_t)v16);
    uint64_t v31 = 0;
  }
  else
  {
    uint64_t v31 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56))(v16, v31, 1, v17);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) == 1) {
    goto LABEL_7;
  }
  sub_1D7916474((uint64_t)v16, (uint64_t)v27);
  uint64_t v36 = sub_1D7A9B148();
  uint64_t v37 = *(void *)(v36 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v27, 1, v36) == 1)
  {
    uint64_t v32 = &qword_1EBDF9118;
    uint64_t v33 = (uint64_t)v27;
    goto LABEL_8;
  }
  (*(void (**)(uint64_t, char *, uint64_t))(v37 + 32))(a3, v27, v36);
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v37 + 56))(a3, 0, 1, v36);
}

uint64_t sub_1D79A41B0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v52 = a1;
  uint64_t v5 = sub_1D7A9B6C8();
  uint64_t v55 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v6, v7, v8, v9, v10, v11, v12);
  uint64_t v14 = (char *)&v50 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1D7A9B708();
  uint64_t v53 = *(void *)(v15 - 8);
  uint64_t v54 = v15;
  MEMORY[0x1F4188790](v15, v16, v17, v18, v19, v20, v21, v22);
  uint64_t v24 = (char *)&v50 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_1D7A9B5F8();
  uint64_t v26 = *(void *)(v25 - 8);
  MEMORY[0x1F4188790](v25, v27, v28, v29, v30, v31, v32, v33);
  uint64_t v35 = (char *)&v50 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EBDF9DC8 != -1) {
    swift_once();
  }
  uint64_t v36 = __swift_project_value_buffer(v25, (uint64_t)qword_1EBDFBE70);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v26 + 16))(v35, v36, v25);
  uint64_t v37 = sub_1D7A9B5D8();
  os_log_type_t v38 = sub_1D7A9C748();
  if (os_log_type_enabled(v37, v38))
  {
    uint64_t v39 = (uint8_t *)swift_slowAlloc();
    uint64_t v51 = v24;
    uint64_t v40 = v14;
    uint64_t v41 = v5;
    uint64_t v42 = v3;
    uint64_t v43 = a2;
    uint64_t v44 = v39;
    *(_WORD *)uint64_t v39 = 0;
    _os_log_impl(&dword_1D7853000, v37, v38, "RTCReporter: initializeRTCSession called", v39, 2u);
    uint64_t v45 = v44;
    a2 = v43;
    uint64_t v3 = v42;
    uint64_t v5 = v41;
    uint64_t v14 = v40;
    uint64_t v24 = v51;
    MEMORY[0x1D947D740](v45, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v26 + 8))(v35, v25);
  uint64_t v46 = (void *)swift_allocObject();
  uint64_t v47 = v52;
  v46[2] = v3;
  v46[3] = v47;
  v46[4] = a2;
  aBlock[4] = sub_1D79A6D38;
  aBlock[5] = v46;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1D79899E4;
  aBlock[3] = &block_descriptor_24_0;
  uint64_t v48 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  sub_1D7A9B6E8();
  uint64_t v56 = MEMORY[0x1E4FBC860];
  sub_1D79A6CB0((unint64_t *)&qword_1EBDF9D90, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF9D98);
  sub_1D78650FC((unint64_t *)&qword_1EBDF9DA0, &qword_1EBDF9D98);
  sub_1D7A9CBA8();
  MEMORY[0x1D947B570](0, v24, v14, v48);
  _Block_release(v48);
  (*(void (**)(char *, uint64_t))(v55 + 8))(v14, v5);
  (*(void (**)(char *, uint64_t))(v53 + 8))(v24, v54);
  return swift_release();
}

uint64_t sub_1D79A4608()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 178, 7);
}

void sub_1D79A4688()
{
  sub_1D79A334C(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64), *(void *)(v0 + 72), *(void *)(v0 + 80), *(_WORD *)(v0 + 88), HIBYTE(*(_WORD *)(v0 + 88)), *(_OWORD *)(v0 + 96), *(_OWORD *)(v0 + 112), *(_OWORD *)(v0 + 128), *(void *)(v0 + 144), *(void *)(v0 + 152), *(_OWORD *)(v0 + 160), *(_WORD *)(v0 + 176), HIBYTE(*(_WORD *)(v0 + 176)));
}

uint64_t block_copy_helper_7(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_7()
{
  return swift_release();
}

void sub_1D79A4700(uint64_t a1, void (*a2)(void), uint64_t a3)
{
  uint64_t v6 = sub_1D7A9B5F8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6, v8, v9, v10, v11, v12, v13, v14);
  uint64_t v16 = (char *)&aBlock[-1] - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v17 = sub_1D79A6D44();
  if (v17)
  {
    uint64_t v18 = v17;
    dispatch_group_enter(*(dispatch_group_t *)(a1 + 40));
    sub_1D7A9B488();
    if (qword_1EBDF9DC8 != -1) {
      swift_once();
    }
    uint64_t v19 = __swift_project_value_buffer(v6, (uint64_t)qword_1EBDFBE70);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v16, v19, v6);
    uint64_t v20 = sub_1D7A9B5D8();
    os_log_type_t v21 = sub_1D7A9C748();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v22 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v22 = 0;
      _os_log_impl(&dword_1D7853000, v20, v21, "RTCReporter: Session lock enter", v22, 2u);
      MEMORY[0x1D947D740](v22, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v7 + 8))(v16, v6);
    uint64_t v23 = (void *)swift_allocObject();
    v23[2] = a1;
    v23[3] = a2;
    v23[4] = a3;
    v23[5] = v18;
    aBlock[4] = sub_1D79A76E4;
    aBlock[5] = v23;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1D79A52A8;
    aBlock[3] = &block_descriptor_30;
    uint64_t v24 = _Block_copy(aBlock);
    swift_retain();
    swift_retain();
    id v25 = v18;
    swift_release();
    objc_msgSend(v25, sel_startConfigurationWithCompletionHandler_, v24);
    _Block_release(v24);
  }
  else
  {
    a2();
  }
}

void sub_1D79A49B0(uint64_t a1, uint64_t a2, void (*a3)(uint64_t), uint64_t a4, uint64_t a5)
{
  uint64_t v120 = a5;
  uint64_t v122 = a4;
  id v123 = a3;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDF9120);
  MEMORY[0x1F4188790](v7 - 8, v8, v9, v10, v11, v12, v13, v14);
  uint64_t v16 = (char *)v115 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF9118);
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17, v19, v20, v21, v22, v23, v24, v25);
  uint64_t v27 = (char *)v115 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_1D7A9B5F8();
  uint64_t v124 = *(void *)(v28 - 8);
  uint64_t v36 = MEMORY[0x1F4188790](v28, v29, v30, v31, v32, v33, v34, v35);
  os_log_type_t v38 = (char *)v115 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = MEMORY[0x1F4188790](v36, v39, v40, v41, v42, v43, v44, v45);
  uint64_t v119 = (char *)v115 - v47;
  uint64_t v55 = MEMORY[0x1F4188790](v46, v48, v49, v50, v51, v52, v53, v54);
  unint64_t v118 = (char *)v115 - v56;
  uint64_t v64 = MEMORY[0x1F4188790](v55, v57, v58, v59, v60, v61, v62, v63);
  char v66 = (char *)v115 - v65;
  MEMORY[0x1F4188790](v64, v67, v68, v69, v70, v71, v72, v73);
  unint64_t v75 = (char *)v115 - v74;
  if (a1)
  {
    swift_bridgeObjectRetain();
    sub_1D7A9B138();
    uint64_t v76 = sub_1D7A9B148();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v76 - 8) + 56))(v27, 0, 1, v76);
    sub_1D7919F20((uint64_t)v27, (uint64_t)v16);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v16, 0, 1, v17);
    swift_beginAccess();
    sub_1D7A16720((uint64_t)v16, 0x797469746E656469, 0xE800000000000000);
    swift_endAccess();
    sub_1D7871C4C((uint64_t)v27, &qword_1EBDF9118);
    if (qword_1EBDF9DC8 != -1) {
      swift_once();
    }
    uint64_t v117 = a2;
    uint64_t v77 = __swift_project_value_buffer(v28, (uint64_t)qword_1EBDFBE70);
    swift_beginAccess();
    uint64_t v78 = v124;
    uint64_t v80 = v124 + 16;
    uint64_t v79 = *(void (**)(char *, uint64_t, uint64_t))(v124 + 16);
    uint64_t v116 = v77;
    unint64_t v121 = v79;
    v79(v66, v77, v28);
    swift_bridgeObjectRetain();
    uint64_t v81 = sub_1D7A9B5D8();
    os_log_type_t v82 = sub_1D7A9C748();
    BOOL v83 = os_log_type_enabled(v81, v82);
    unint64_t v84 = &unk_1D7AA1000;
    uint64_t v85 = MEMORY[0x1E4FBC840];
    v115[3] = v80;
    if (v83)
    {
      uint64_t v86 = (uint8_t *)swift_slowAlloc();
      uint64_t v87 = swift_slowAlloc();
      uint64_t v126 = v87;
      *(_DWORD *)uint64_t v86 = 136315138;
      v115[1] = v86 + 4;
      uint64_t v88 = swift_bridgeObjectRetain();
      v115[2] = v85 + 8;
      uint64_t v89 = MEMORY[0x1D947B0A0](v88);
      unint64_t v91 = v90;
      swift_bridgeObjectRelease();
      uint64_t v125 = sub_1D7923300(v89, v91, &v126);
      sub_1D7A9C9E8();
      swift_bridgeObjectRelease_n();
      unint64_t v84 = (void *)&unk_1D7AA1000;
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1D7853000, v81, v82, "RTCReporter: Retrieved backends: %s", v86, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D947D740](v87, -1, -1);
      uint64_t v92 = v86;
      uint64_t v78 = v124;
      MEMORY[0x1D947D740](v92, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    uint64_t v103 = v66;
    uint64_t v104 = *(void (**)(char *, uint64_t))(v78 + 8);
    v104(v103, v28);
    uint64_t v105 = v118;
    if (qword_1EBDF9130 != -1) {
      swift_once();
    }
    uint64_t v106 = __swift_project_value_buffer(v28, (uint64_t)qword_1EBDFBE50);
    v121(v105, v106, v28);
    uint64_t v107 = sub_1D7A9B5D8();
    os_log_type_t v108 = sub_1D7A9C778();
    if (os_log_type_enabled(v107, v108))
    {
      uint64_t v109 = (uint8_t *)swift_slowAlloc();
      uint64_t v110 = swift_slowAlloc();
      uint64_t v126 = v110;
      *(_DWORD *)uint64_t v109 = v84[18];
      uint64_t v125 = sub_1D7923300(0x797469746E656469, 0xE800000000000000, &v126);
      sub_1D7A9C9E8();
      _os_log_impl(&dword_1D7853000, v107, v108, "Initiating RTC reporting for subject: %s", v109, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D947D740](v110, -1, -1);
      MEMORY[0x1D947D740](v109, -1, -1);
    }

    v104(v105, v28);
    uint64_t v111 = v119;
    v123(v120);
    v121(v111, v116, v28);
    uint64_t v112 = sub_1D7A9B5D8();
    os_log_type_t v113 = sub_1D7A9C748();
    if (os_log_type_enabled(v112, v113))
    {
      uint64_t v114 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v114 = 0;
      _os_log_impl(&dword_1D7853000, v112, v113, "RTCReporter: Session lock leave", v114, 2u);
      MEMORY[0x1D947D740](v114, -1, -1);
    }

    v104(v111, v28);
    uint64_t v93 = v117;
  }
  else
  {
    uint64_t v93 = a2;
    if (qword_1EBDF9DC8 != -1) {
      swift_once();
    }
    uint64_t v94 = __swift_project_value_buffer(v28, (uint64_t)qword_1EBDFBE70);
    swift_beginAccess();
    unint64_t v95 = *(void (**)(char *, uint64_t, uint64_t))(v124 + 16);
    v95(v75, v94, v28);
    uint64_t v96 = sub_1D7A9B5D8();
    os_log_type_t v97 = sub_1D7A9C748();
    if (os_log_type_enabled(v96, v97))
    {
      uint64_t v98 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v98 = 0;
      _os_log_impl(&dword_1D7853000, v96, v97, "RTCReporter: Failed to initialize configuration, no backends retrieved", v98, 2u);
      MEMORY[0x1D947D740](v98, -1, -1);
    }

    uint64_t v99 = *(void (**)(char *, uint64_t))(v124 + 8);
    v99(v75, v28);
    v123(0);
    v95(v38, v94, v28);
    uint64_t v100 = sub_1D7A9B5D8();
    os_log_type_t v101 = sub_1D7A9C748();
    if (os_log_type_enabled(v100, v101))
    {
      uint64_t v102 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v102 = 0;
      _os_log_impl(&dword_1D7853000, v100, v101, "RTCReporter: Session lock leave", v102, 2u);
      MEMORY[0x1D947D740](v102, -1, -1);
    }

    v99(v38, v28);
  }
  dispatch_group_leave(*(dispatch_group_t *)(v93 + 40));
}

uint64_t sub_1D79A52A8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void (**)(uint64_t))(a1 + 32);
  if (a2) {
    uint64_t v3 = sub_1D7A9C318();
  }
  else {
    uint64_t v3 = 0;
  }
  swift_retain();
  v2(v3);
  swift_release();
  return swift_bridgeObjectRelease();
}

void sub_1D79A5328(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v230 = a3;
  uint64_t v236 = a2;
  id v225 = a1;
  uint64_t v243 = *MEMORY[0x1E4F143B8];
  uint64_t v3 = sub_1D7A9B2B8();
  uint64_t v219 = *(void *)(v3 - 8);
  uint64_t v220 = v3;
  MEMORY[0x1F4188790](v3, v4, v5, v6, v7, v8, v9, v10);
  v216 = (char *)&v213 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1D7A9AD28();
  uint64_t v217 = *(void *)(v12 - 8);
  uint64_t v218 = v12;
  MEMORY[0x1F4188790](v12, v13, v14, v15, v16, v17, v18, v19);
  v215 = (char *)&v213 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_1D7A9B228();
  uint64_t v227 = *(void *)(v21 - 8);
  uint64_t v228 = v21;
  MEMORY[0x1F4188790](v21, v22, v23, v24, v25, v26, v27, v28);
  unint64_t v226 = (char *)&v213 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA845AE0);
  MEMORY[0x1F4188790](v30 - 8, v31, v32, v33, v34, v35, v36, v37);
  uint64_t v39 = (char *)&v213 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF9118);
  uint64_t v48 = MEMORY[0x1F4188790](v40 - 8, v41, v42, v43, v44, v45, v46, v47);
  uint64_t v229 = (uint64_t)&v213 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v48, v50, v51, v52, v53, v54, v55, v56);
  uint64_t v58 = (char *)&v213 - v57;
  uint64_t v238 = sub_1D7A9B148();
  uint64_t v59 = *(void *)(v238 - 8);
  uint64_t v67 = MEMORY[0x1F4188790](v238, v60, v61, v62, v63, v64, v65, v66);
  uint64_t v213 = (char *)&v213 - ((v68 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v76 = MEMORY[0x1F4188790](v67, v69, v70, v71, v72, v73, v74, v75);
  v214 = (char *)&v213 - v77;
  MEMORY[0x1F4188790](v76, v78, v79, v80, v81, v82, v83, v84);
  uint64_t v86 = (char *)&v213 - v85;
  uint64_t v87 = sub_1D7A9B5F8();
  uint64_t v88 = *(void *)(v87 - 8);
  uint64_t v96 = MEMORY[0x1F4188790](v87, v89, v90, v91, v92, v93, v94, v95);
  unint64_t v221 = (char *)&v213 - ((v97 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v105 = MEMORY[0x1F4188790](v96, v98, v99, v100, v101, v102, v103, v104);
  v222 = (char *)&v213 - v106;
  uint64_t v114 = MEMORY[0x1F4188790](v105, v107, v108, v109, v110, v111, v112, v113);
  v223 = (char *)&v213 - v115;
  MEMORY[0x1F4188790](v114, v116, v117, v118, v119, v120, v121, v122);
  uint64_t v124 = (char *)&v213 - v123;
  if (qword_1EBDF9DC8 != -1) {
    swift_once();
  }
  uint64_t v237 = v59;
  uint64_t v125 = __swift_project_value_buffer(v87, (uint64_t)qword_1EBDFBE70);
  swift_beginAccess();
  uint64_t v126 = *(void (**)(char *, uint64_t, uint64_t))(v88 + 16);
  uint64_t v224 = v125;
  uint64_t v233 = v126;
  uint64_t v234 = v88 + 16;
  v126(v124, v125, v87);
  long long v127 = sub_1D7A9B5D8();
  os_log_type_t v128 = sub_1D7A9C748();
  if (os_log_type_enabled(v127, v128))
  {
    int v129 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)int v129 = 0;
    _os_log_impl(&dword_1D7853000, v127, v128, "RTCReporter: Inside of sendEvent", v129, 2u);
    MEMORY[0x1D947D740](v129, -1, -1);
  }

  uint64_t v130 = *(void (**)(char *, uint64_t))(v88 + 8);
  uint64_t v235 = v87;
  uint64_t v231 = v130;
  uint64_t v232 = v88 + 8;
  v130(v124, v87);
  uint64_t v131 = v236;
  swift_bridgeObjectRetain();
  sub_1D79A6418((uint64_t)v58);
  uint64_t v133 = v237;
  uint64_t v132 = v238;
  uint64_t v134 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v237 + 48);
  if (v134(v58, 1, v238) == 1)
  {
    sub_1D7871C4C((uint64_t)v58, &qword_1EBDF9118);
    uint64_t v135 = v131;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v133 + 32))(v86, v58, v132);
    sub_1D7A9B0F8();
    uint64_t v241 = MEMORY[0x1E4FBB3D0];
    *(void *)&long long v240 = v136;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v239 = v131;
    sub_1D79A6924(&v240, 0x436465646E756F72, 0xEF5354746E65696CLL, isUniquelyReferenced_nonNull_native, v242);
    uint64_t v135 = v239;
    swift_bridgeObjectRelease();
    sub_1D7871C4C((uint64_t)v242, (uint64_t *)&unk_1EBDF9680);
    (*(void (**)(char *, uint64_t))(v133 + 8))(v86, v132);
  }
  unint64_t v138 = v226;
  sub_1D7A9B218();
  sub_1D7A9B208();
  (*(void (**)(char *, uint64_t))(v227 + 8))(v138, v228);
  uint64_t v139 = sub_1D7A9B1F8();
  uint64_t v140 = *(void *)(v139 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v140 + 48))(v39, 1, v139) == 1)
  {
    uint64_t v141 = &qword_1EA845AE0;
    uint64_t v142 = v39;
  }
  else
  {
    uint64_t v143 = sub_1D7A9B1E8();
    uint64_t v145 = v144;
    (*(void (**)(char *, uint64_t))(v140 + 8))(v39, v139);
    uint64_t v241 = MEMORY[0x1E4FBB1A0];
    *(void *)&long long v240 = v143;
    *((void *)&v240 + 1) = v145;
    uint64_t v132 = v238;
    char v146 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v239 = v135;
    sub_1D79A6924(&v240, 0x656C61636F4CLL, 0xE600000000000000, v146, v242);
    uint64_t v135 = v239;
    swift_bridgeObjectRelease();
    uint64_t v141 = (uint64_t *)&unk_1EBDF9680;
    uint64_t v142 = (char *)v242;
  }
  sub_1D7871C4C((uint64_t)v142, v141);
  uint64_t v147 = v229;
  sub_1D79A3EB0(0x797469746E656469, 0xE800000000000000, v229);
  if (v134((char *)v147, 1, v132) == 1)
  {
    sub_1D7871C4C(v147, &qword_1EBDF9118);
    uint64_t v148 = 0;
  }
  else
  {
    uint64_t v149 = v237;
    uint64_t v150 = v214;
    (*(void (**)(char *, uint64_t, uint64_t))(v237 + 32))(v214, v147, v132);
    uint64_t v151 = v216;
    sub_1D7A9B288();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8432B0);
    uint64_t v152 = sub_1D7A9B2A8();
    uint64_t v153 = *(void *)(v152 - 8);
    unint64_t v154 = (*(unsigned __int8 *)(v153 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v153 + 80);
    uint64_t v155 = swift_allocObject();
    *(_OWORD *)(v155 + 16) = xmmword_1D7AA08E0;
    (*(void (**)(unint64_t, void, uint64_t))(v153 + 104))(v155 + v154, *MEMORY[0x1E4F27C50], v152);
    sub_1D78CD99C(v155);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    unint64_t v156 = v213;
    sub_1D7A9B138();
    uint64_t v157 = v215;
    sub_1D7A9B258();
    swift_bridgeObjectRelease();
    uint64_t v158 = *(void (**)(char *, uint64_t))(v149 + 8);
    uint64_t v159 = v238;
    v158(v156, v238);
    (*(void (**)(char *, uint64_t))(v219 + 8))(v151, v220);
    uint64_t v160 = sub_1D7A9AD08();
    LOBYTE(v156) = v161;
    (*(void (**)(char *, uint64_t))(v217 + 8))(v157, v218);
    v158(v150, v159);
    if (v156) {
      uint64_t v148 = 0;
    }
    else {
      uint64_t v148 = v160;
    }
  }
  uint64_t v162 = v235;
  uint64_t v241 = MEMORY[0x1E4FBB550];
  *(void *)&long long v240 = v148;
  char v163 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v239 = v135;
  sub_1D79A6924(&v240, 0x446E6F6973736573, 0xEF6E6F6974617275, v163, v242);
  uint64_t v164 = v239;
  swift_bridgeObjectRelease();
  sub_1D7871C4C((uint64_t)v242, (uint64_t *)&unk_1EBDF9680);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA845AE8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1D7AA4E80;
  unint64_t v166 = (void *)*MEMORY[0x1E4F94628];
  if (!*MEMORY[0x1E4F94628])
  {
    __break(1u);
    goto LABEL_34;
  }
  uint64_t v167 = inited;
  *(void *)(inited + 32) = v166;
  uint64_t v168 = MEMORY[0x1E4FBC450];
  *(void *)(inited + 64) = MEMORY[0x1E4FBC450];
  *(_WORD *)(inited + 40) = 2;
  uint64_t v169 = (void *)*MEMORY[0x1E4F94640];
  if (!*MEMORY[0x1E4F94640])
  {
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
  }
  *(void *)(inited + 72) = v169;
  *(void *)(inited + 104) = v168;
  *(_WORD *)(inited + 80) = 200;
  os_log_type_t v170 = (void *)*MEMORY[0x1E4F94638];
  if (!*MEMORY[0x1E4F94638]) {
    goto LABEL_35;
  }
  *(void *)(inited + 112) = v170;
  *(void *)(inited + 144) = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA843A68);
  *(void *)(v167 + 120) = v164;
  id v171 = v166;
  id v172 = v169;
  id v173 = v170;
  unint64_t v174 = sub_1D785FC24(v167);
  sub_1D79A1530(v174);
  uint64_t v175 = MEMORY[0x1E4FBC840];
  unint64_t v176 = (void *)sub_1D7A9BE98();
  swift_bridgeObjectRelease();
  *(void *)&v242[0] = 0;
  unsigned int v177 = objc_msgSend(v225, sel_sendMessageWithDictionary_error_, v176, v242);

  if (v177)
  {
    uint64_t v178 = qword_1EBDF9130;
    id v179 = *(id *)&v242[0];
    if (v178 != -1) {
      swift_once();
    }
    uint64_t v180 = __swift_project_value_buffer(v162, (uint64_t)qword_1EBDFBE50);
    unint64_t v181 = v223;
    v233(v223, v180, v162);
    swift_bridgeObjectRetain_n();
    uint64_t v182 = sub_1D7A9B5D8();
    os_log_type_t v183 = sub_1D7A9C778();
    if (os_log_type_enabled(v182, v183))
    {
      uint64_t v184 = swift_slowAlloc();
      uint64_t v238 = swift_slowAlloc();
      *(void *)&v242[0] = v238;
      *(_DWORD *)uint64_t v184 = 136315394;
      *(void *)&long long v240 = sub_1D7923300(0x797469746E656469, 0xE800000000000000, (uint64_t *)v242);
      sub_1D7A9C9E8();
      *(_WORD *)(v184 + 12) = 2080;
      uint64_t v230 = v184 + 14;
      swift_bridgeObjectRetain();
      uint64_t v237 = v175 + 8;
      uint64_t v185 = sub_1D7A9BEC8();
      unint64_t v187 = v186;
      swift_bridgeObjectRelease();
      Swift::String v188 = v231;
      *(void *)&long long v240 = sub_1D7923300(v185, v187, (uint64_t *)v242);
      sub_1D7A9C9E8();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1D7853000, v182, v183, "subject: %s event: %s", (uint8_t *)v184, 0x16u);
      uint64_t v189 = v238;
      uint64_t v162 = v235;
      swift_arrayDestroy();
      MEMORY[0x1D947D740](v189, -1, -1);
      MEMORY[0x1D947D740](v184, -1, -1);

      v188(v223, v162);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      v231(v181, v162);
    }
    v202 = v221;
    v233(v221, v224, v162);
    swift_bridgeObjectRetain();
    uint64_t v203 = sub_1D7A9B5D8();
    os_log_type_t v204 = sub_1D7A9C748();
    if (os_log_type_enabled(v203, v204))
    {
      v205 = (uint8_t *)swift_slowAlloc();
      uint64_t v206 = swift_slowAlloc();
      *(void *)&v242[0] = v206;
      *(_DWORD *)v205 = 136315138;
      uint64_t v238 = (uint64_t)(v205 + 4);
      type metadata accessor for CFString(0);
      sub_1D79A6CB0((unint64_t *)&qword_1EA841FC8, type metadata accessor for CFString);
      swift_bridgeObjectRetain();
      uint64_t v207 = sub_1D7A9BEC8();
      unint64_t v209 = v208;
      swift_bridgeObjectRelease();
      *(void *)&long long v240 = sub_1D7923300(v207, v209, (uint64_t *)v242);
      sub_1D7A9C9E8();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1D7853000, v203, v204, "RTCReporter: Message delivered to RTC with payload: %s", v205, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D947D740](v206, -1, -1);
      MEMORY[0x1D947D740](v205, -1, -1);

      uint64_t v210 = v221;
      uint64_t v211 = v235;
    }
    else
    {

      swift_bridgeObjectRelease_n();
      uint64_t v210 = v202;
      uint64_t v211 = v162;
    }
    v231(v210, v211);
  }
  else
  {
    id v190 = *(id *)&v242[0];
    swift_bridgeObjectRelease();
    id v191 = (void *)sub_1D7A9AE58();

    swift_willThrow();
    os_log_type_t v192 = v222;
    v233(v222, v224, v162);
    id v193 = v191;
    id v194 = v191;
    id v195 = sub_1D7A9B5D8();
    os_log_type_t v196 = sub_1D7A9C748();
    if (os_log_type_enabled(v195, v196))
    {
      v197 = (uint8_t *)swift_slowAlloc();
      uint64_t v198 = swift_slowAlloc();
      *(void *)&v242[0] = v198;
      *(_DWORD *)v197 = 136315138;
      swift_getErrorValue();
      uint64_t v199 = sub_1D7A9D548();
      *(void *)&long long v240 = sub_1D7923300(v199, v200, (uint64_t *)v242);
      sub_1D7A9C9E8();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1D7853000, v195, v196, "RTCReporter: Error sending message to RTC: %s", v197, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D947D740](v198, -1, -1);
      MEMORY[0x1D947D740](v197, -1, -1);

      v201 = v222;
    }
    else
    {

      v201 = v192;
    }
    v231(v201, v162);
    id v212 = v191;
    sub_1D79A3C00(v191);
  }
}

uint64_t sub_1D79A6418@<X0>(uint64_t a1@<X8>)
{
  uint64_t v46 = a1;
  uint64_t v1 = sub_1D7A9B148();
  uint64_t v44 = *(void *)(v1 - 8);
  uint64_t v45 = v1;
  MEMORY[0x1F4188790](v1, v2, v3, v4, v5, v6, v7, v8);
  uint64_t v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1D7A9AD28();
  uint64_t v42 = *(void *)(v11 - 8);
  uint64_t v43 = v11;
  MEMORY[0x1F4188790](v11, v12, v13, v14, v15, v16, v17, v18);
  uint64_t v20 = (char *)&v39 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_1D7A9B2B8();
  uint64_t v40 = *(void *)(v21 - 8);
  uint64_t v41 = v21;
  MEMORY[0x1F4188790](v21, v22, v23, v24, v25, v26, v27, v28);
  uint64_t v30 = (char *)&v39 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D7A9B288();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8432B0);
  uint64_t v31 = sub_1D7A9B2A8();
  uint64_t v32 = *(void *)(v31 - 8);
  uint64_t v33 = *(void *)(v32 + 72);
  unint64_t v34 = (*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80);
  uint64_t v35 = swift_allocObject();
  *(_OWORD *)(v35 + 16) = xmmword_1D7AA4E80;
  unint64_t v36 = v35 + v34;
  uint64_t v37 = *(void (**)(unint64_t, void, uint64_t))(v32 + 104);
  v37(v36, *MEMORY[0x1E4F27C20], v31);
  v37(v36 + v33, *MEMORY[0x1E4F27C30], v31);
  v37(v36 + 2 * v33, *MEMORY[0x1E4F27BF0], v31);
  sub_1D78CD99C(v35);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  sub_1D7A9B138();
  sub_1D7A9B268();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v44 + 8))(v10, v45);
  sub_1D7A9B278();
  (*(void (**)(char *, uint64_t))(v42 + 8))(v20, v43);
  return (*(uint64_t (**)(char *, uint64_t))(v40 + 8))(v30, v41);
}

uint64_t IdentityAnalyticsReporter.deinit()
{
  swift_bridgeObjectRelease();

  sub_1D79A67B0(*(void *)(v0 + 64), *(void *)(v0 + 72));
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1D79A67B0(uint64_t a1, uint64_t a2)
{
  if (a2 != 1) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t IdentityAnalyticsReporter.__deallocating_deinit()
{
  swift_bridgeObjectRelease();

  sub_1D79A67B0(*(void *)(v0 + 64), *(void *)(v0 + 72));
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

ValueMetadata *type metadata accessor for IdentityAnalyticsReportEventKeys()
{
  return &type metadata for IdentityAnalyticsReportEventKeys;
}

uint64_t type metadata accessor for IdentityAnalyticsReporter()
{
  return self;
}

uint64_t method lookup function for IdentityAnalyticsReporter(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for IdentityAnalyticsReporter);
}

uint64_t dispatch thunk of IdentityAnalyticsReporter.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 232))();
}

uint64_t dispatch thunk of IdentityAnalyticsReporter.trackEvent(eventType:pageTag:subType:buttonTag:accessibilitySet:productType:productSubType:issuer:referralSource:errorType:optInChoice:viewedLiveVideo:axFlowEnabled:)()
{
  uint64_t v2 = *(uint64_t (**)(void))(*(void *)v0 + 240);
  return v2();
}

_OWORD *sub_1D79A6924@<X0>(_OWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, _OWORD *a5@<X8>)
{
  uint64_t v6 = (void **)v5;
  uint64_t v12 = (void *)*v5;
  unint64_t v14 = sub_1D7A18684(a2, a3);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v18 = v13;
  uint64_t v19 = v12[3];
  if (v19 < v17 || (a4 & 1) == 0)
  {
    if (v19 >= v17 && (a4 & 1) == 0)
    {
      sub_1D7973274();
      goto LABEL_7;
    }
    sub_1D796FF38(v17, a4 & 1);
    uint64_t v23 = sub_1D7A18684(a2, a3);
    if ((v18 & 1) == (v24 & 1))
    {
      unint64_t v14 = v23;
      uint64_t v20 = *v6;
      if (v18) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    uint64_t result = (_OWORD *)sub_1D7A9D4F8();
    __break(1u);
    return result;
  }
LABEL_7:
  uint64_t v20 = *v6;
  if (v18)
  {
LABEL_8:
    sub_1D7860E50((_OWORD *)(v20[7] + 32 * v14), a5);
    uint64_t v21 = (_OWORD *)(v20[7] + 32 * v14);
    return sub_1D7860E50(a1, v21);
  }
LABEL_13:
  sub_1D7974C84(v14, a2, a3, a1, v20);
  *a5 = 0u;
  a5[1] = 0u;
  return (_OWORD *)swift_bridgeObjectRetain();
}

uint64_t sub_1D79A6A9C()
{
  id v0 = objc_msgSend(self, sel_processInfo);
  id v1 = objc_msgSend(v0, sel_processName);

  uint64_t v2 = sub_1D7A9BFC8();
  uint64_t v4 = v3;

  if (v2 == 0x6B6F6F6273736150 && v4 == 0xE800000000000000)
  {
    uint64_t v6 = 0x74656C6C6177;
  }
  else if (sub_1D7A9D358())
  {
    uint64_t v6 = 0x74656C6C6177;
  }
  else if (v2 == 0x6E65726566657250 && v4 == 0xEB00000000736563)
  {
    uint64_t v6 = 0x73676E6974746573;
  }
  else
  {
    if ((sub_1D7A9D358() & 1) == 0)
    {
      if (v2 == 0x656764697242 && v4 == 0xE600000000000000)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        char v10 = sub_1D7A9D358();
        swift_bridgeObjectRelease();
        if ((v10 & 1) == 0) {
          return 0;
        }
      }
      return 0x7070416863746177;
    }
    uint64_t v6 = 0x73676E6974746573;
  }
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1D79A6C9C(uint64_t a1, uint64_t a2)
{
  if (a2 != 1) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1D79A6CB0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1D79A6CF8()
{
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 40, 7);
}

void sub_1D79A6D38()
{
  sub_1D79A4700(*(void *)(v0 + 16), *(void (**)(void))(v0 + 24), *(void *)(v0 + 32));
}

id sub_1D79A6D44()
{
  uint64_t v0 = sub_1D7A9B5F8();
  uint64_t v82 = *(void *)(v0 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v0, v1, v2, v3, v4, v5, v6, v7);
  char v10 = (char *)v76 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8, v11, v12, v13, v14, v15, v16, v17);
  uint64_t v80 = (char *)v76 - v18;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF9400);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1D7AA91A0;
  id result = (id)*MEMORY[0x1E4F94658];
  if (!*MEMORY[0x1E4F94658])
  {
    __break(1u);
    goto LABEL_27;
  }
  *(void *)(inited + 32) = sub_1D7A9BFC8();
  *(void *)(inited + 40) = v21;
  id v22 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithChar_, 31);
  uint64_t v23 = sub_1D78C4038(0, (unint64_t *)&qword_1EBDF93C0);
  *(void *)(inited + 72) = v23;
  *(void *)(inited + 48) = v22;
  id result = (id)*MEMORY[0x1E4F94660];
  if (!*MEMORY[0x1E4F94660])
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  *(void *)(inited + 80) = sub_1D7A9BFC8();
  *(void *)(inited + 88) = v24;
  id v25 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithUnsignedShort_, 0);
  *(void *)(inited + 120) = v23;
  *(void *)(inited + 96) = v25;
  id result = (id)*MEMORY[0x1E4F94680];
  if (!*MEMORY[0x1E4F94680])
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  *(void *)(inited + 128) = sub_1D7A9BFC8();
  *(void *)(inited + 136) = v26;
  id v27 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithUnsignedInt_, 1090);
  *(void *)(inited + 168) = v23;
  *(void *)(inited + 144) = v27;
  id result = (id)*MEMORY[0x1E4F94648];
  if (!*MEMORY[0x1E4F94648])
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  *(void *)(inited + 176) = sub_1D7A9BFC8();
  *(void *)(inited + 184) = v28;
  id v29 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithBool_, 1);
  *(void *)(inited + 216) = v23;
  *(void *)(inited + 192) = v29;
  id result = (id)*MEMORY[0x1E4F94650];
  if (!*MEMORY[0x1E4F94650])
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  *(void *)(inited + 224) = sub_1D7A9BFC8();
  *(void *)(inited + 232) = v30;
  id v31 = objc_msgSend(self, sel_mainBundle);
  id v32 = objc_msgSend(v31, sel_bundleIdentifier);

  if (v32)
  {
    uint64_t v33 = sub_1D7A9BFC8();
    unint64_t v35 = v34;

    unint64_t v36 = (uint64_t *)(inited + 240);
    *(void *)(inited + 264) = MEMORY[0x1E4FBB1A0];
    if (v35)
    {
      *unint64_t v36 = v33;
      goto LABEL_11;
    }
  }
  else
  {
    unint64_t v36 = (uint64_t *)(inited + 240);
    *(void *)(inited + 264) = MEMORY[0x1E4FBB1A0];
  }
  *unint64_t v36 = 0;
  unint64_t v35 = 0xE000000000000000;
LABEL_11:
  *(void *)(inited + 248) = v35;
  unint64_t v37 = sub_1D785F2A0(inited);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDF93F0);
  uint64_t v38 = swift_initStackObject();
  *(_OWORD *)(v38 + 16) = xmmword_1D7AA0A40;
  id result = (id)*MEMORY[0x1E4F94688];
  if (!*MEMORY[0x1E4F94688])
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  uint64_t v79 = (uint64_t)v10;
  uint64_t v39 = v0;
  *(void *)(v38 + 32) = sub_1D7A9BFC8();
  *(void *)(v38 + 40) = v40;
  *(void *)(v38 + 48) = 0x74656C6C6177;
  *(void *)(v38 + 56) = 0xE600000000000000;
  id result = (id)*MEMORY[0x1E4F94690];
  if (!*MEMORY[0x1E4F94690])
  {
LABEL_32:
    __break(1u);
    return result;
  }
  *(void *)(v38 + 64) = sub_1D7A9BFC8();
  *(void *)(v38 + 72) = v41;
  *(void *)(v38 + 80) = 0x797469746E656469;
  *(void *)(v38 + 88) = 0xE800000000000000;
  unint64_t v42 = sub_1D785F61C(v38);
  sub_1D79A1168(v37);
  unint64_t v81 = v42;
  sub_1D79A18F8(v42);
  id v43 = objc_allocWithZone(MEMORY[0x1E4F94620]);
  uint64_t v44 = (void *)sub_1D7A9BE98();
  swift_bridgeObjectRelease();
  uint64_t v45 = (void *)sub_1D7A9BE98();
  swift_bridgeObjectRelease();
  uint64_t v46 = (void *)sub_1D7A9C2F8();
  id v47 = objc_msgSend(v43, sel_initWithSessionInfo_userInfo_frameworksToCheck_, v44, v45, v46);

  uint64_t v48 = v39;
  if (v47)
  {
    if (qword_1EBDF9DC8 != -1) {
      swift_once();
    }
    uint64_t v49 = __swift_project_value_buffer(v39, (uint64_t)qword_1EBDFBE70);
    swift_beginAccess();
    uint64_t v50 = v82;
    uint64_t v51 = v80;
    (*(void (**)(char *, uint64_t, uint64_t))(v82 + 16))(v80, v49, v48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v52 = sub_1D7A9B5D8();
    os_log_type_t v53 = sub_1D7A9C748();
    int v54 = v53;
    if (os_log_type_enabled(v52, v53))
    {
      uint64_t v55 = swift_slowAlloc();
      uint64_t v79 = swift_slowAlloc();
      v84[0] = v79;
      *(_DWORD *)uint64_t v55 = 136315394;
      LODWORD(v77) = v54;
      swift_bridgeObjectRetain();
      v76[1] = MEMORY[0x1E4FBC840] + 8;
      uint64_t v56 = sub_1D7A9BEC8();
      uint64_t v78 = v48;
      unint64_t v58 = v57;
      swift_bridgeObjectRelease();
      uint64_t v83 = sub_1D7923300(v56, v58, v84);
      sub_1D7A9C9E8();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v55 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v59 = sub_1D7A9BEC8();
      unint64_t v61 = v60;
      swift_bridgeObjectRelease();
      uint64_t v83 = sub_1D7923300(v59, v61, v84);
      sub_1D7A9C9E8();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1D7853000, v52, (os_log_type_t)v77, "RTCReporter: Initialized new session with sessionInfo: %s, userInfo: %s", (uint8_t *)v55, 0x16u);
      uint64_t v62 = v79;
      swift_arrayDestroy();
      MEMORY[0x1D947D740](v62, -1, -1);
      MEMORY[0x1D947D740](v55, -1, -1);

      (*(void (**)(char *, uint64_t))(v50 + 8))(v80, v78);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v50 + 8))(v51, v48);
    }
  }
  else
  {
    if (qword_1EBDF9DC8 != -1) {
      swift_once();
    }
    uint64_t v63 = __swift_project_value_buffer(v39, (uint64_t)qword_1EBDFBE70);
    swift_beginAccess();
    uint64_t v64 = v82;
    uint64_t v65 = v79;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v82 + 16))(v79, v63, v48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v66 = sub_1D7A9B5D8();
    os_log_type_t v67 = sub_1D7A9C748();
    if (os_log_type_enabled(v66, v67))
    {
      uint64_t v68 = swift_slowAlloc();
      uint64_t v80 = (char *)swift_slowAlloc();
      v84[0] = (uint64_t)v80;
      *(_DWORD *)uint64_t v68 = 136315394;
      swift_bridgeObjectRetain();
      uint64_t v77 = MEMORY[0x1E4FBC840] + 8;
      uint64_t v69 = sub_1D7A9BEC8();
      uint64_t v78 = v48;
      unint64_t v71 = v70;
      swift_bridgeObjectRelease();
      uint64_t v83 = sub_1D7923300(v69, v71, v84);
      sub_1D7A9C9E8();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v68 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v72 = sub_1D7A9BEC8();
      unint64_t v74 = v73;
      swift_bridgeObjectRelease();
      uint64_t v83 = sub_1D7923300(v72, v74, v84);
      sub_1D7A9C9E8();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1D7853000, v66, v67, "RTCReporter: Failed to create reporting session with sessionInfo: %s, userInfo: %s", (uint8_t *)v68, 0x16u);
      uint64_t v75 = v80;
      swift_arrayDestroy();
      MEMORY[0x1D947D740](v75, -1, -1);
      MEMORY[0x1D947D740](v68, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v64 + 8))(v79, v78);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      (*(void (**)(uint64_t, uint64_t))(v64 + 8))(v65, v48);
    }
    return 0;
  }
  return v47;
}

uint64_t sub_1D79A769C()
{
  swift_release();
  swift_release();

  return MEMORY[0x1F4186498](v0, 48, 7);
}

void sub_1D79A76E4(uint64_t a1)
{
  sub_1D79A49B0(a1, *(void *)(v1 + 16), *(void (**)(uint64_t))(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40));
}

uint64_t MobileAssetManagerProtocol.retrieveMostRecentAsset<A>(info:isFirstMoreRecent:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v9 + 128) = a8;
  *(void *)(v9 + 136) = v12;
  *(void *)(v9 + 112) = a6;
  *(void *)(v9 + 120) = a7;
  *(void *)(v9 + 96) = a4;
  *(void *)(v9 + 104) = a5;
  *(void *)(v9 + 80) = a1;
  *(void *)(v9 + 88) = a3;
  *(unsigned char *)(v9 + 160) = *(unsigned char *)a2;
  uint64_t v10 = *(void *)(a2 + 8);
  *(void *)(v9 + 144) = v8;
  *(void *)(v9 + 152) = v10;
  return MEMORY[0x1F4188298](sub_1D79A7744, 0, 0);
}

uint64_t sub_1D79A7744()
{
  uint64_t v2 = *(void *)(v0 + 144);
  uint64_t v1 = *(void *)(v0 + 152);
  char v3 = *(unsigned char *)(v0 + 160);
  uint64_t v4 = *(void *)(v0 + 136);
  long long v12 = *(_OWORD *)(v0 + 120);
  uint64_t v6 = *(void *)(v0 + 104);
  uint64_t v5 = *(void *)(v0 + 112);
  uint64_t v8 = *(void *)(v0 + 88);
  uint64_t v7 = *(void *)(v0 + 96);
  uint64_t v9 = *(void *)(v0 + 80);
  *(void *)(v0 + 16) = v0;
  *(void *)(v0 + 56) = v9;
  *(void *)(v0 + 24) = sub_1D79A7840;
  uint64_t v10 = swift_continuation_init();
  sub_1D79A7948(v10, v2, v3, v1, v8, v7, v6, v5, v12, *((uint64_t *)&v12 + 1), v4);
  return MEMORY[0x1F41881E8](v0 + 16);
}

uint64_t sub_1D79A7840()
{
  uint64_t v1 = *v0;
  if (*(void *)(*v0 + 48)) {
    swift_willThrow();
  }
  uint64_t v2 = *(uint64_t (**)(void))(v1 + 8);
  return v2();
}

uint64_t sub_1D79A7948(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  v18[0] = a3 & 1;
  uint64_t v19 = a4;
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = a1;
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t (*)(uint64_t), uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a9 + 8))(v18, a5, a6, sub_1D79A9180, v16, a8, a10, a11, a7, a9);
  return swift_release();
}

uint64_t MobileAssetManagerProtocol.retrieveMostRecentAsset<A>(info:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v16 = *(void *)(a1 + 8);
  v19[0] = *(unsigned char *)a1;
  uint64_t v20 = v16;
  uint64_t v17 = (void *)swift_allocObject();
  v17[2] = a4;
  v17[3] = a5;
  v17[4] = a6;
  v17[5] = a7;
  v17[6] = a8;
  v17[7] = a9;
  v17[8] = a5;
  (*(void (**)(unsigned char *, uint64_t (*)(), void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a6 + 8))(v19, sub_1D79A7B3C, v17, a2, a3, a5, a8, a9, a4, a6);
  return swift_release();
}

uint64_t sub_1D79A7B2C()
{
  return MEMORY[0x1F4186498](v0, 72, 7);
}

uint64_t MobileAssetManagerProtocol.retrieveMostRecentAsset<A>(info:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v9 + 80) = a8;
  *(void *)(v9 + 88) = v8;
  *(void *)(v9 + 64) = a6;
  *(void *)(v9 + 72) = a7;
  *(void *)(v9 + 48) = a4;
  *(void *)(v9 + 56) = a5;
  *(void *)(v9 + 32) = a1;
  *(void *)(v9 + 40) = a3;
  *(unsigned char *)(v9 + 128) = *(unsigned char *)a2;
  *(void *)(v9 + 96) = *(void *)(a2 + 8);
  return MEMORY[0x1F4188298](sub_1D79A7B7C, 0, 0);
}

uint64_t sub_1D79A7B7C()
{
  uint64_t v1 = *(void *)(v0 + 96);
  uint64_t v2 = *(void *)(v0 + 80);
  uint64_t v3 = *(void *)(v0 + 40);
  *(unsigned char *)(v0 + 16) = *(unsigned char *)(v0 + 128);
  *(void *)(v0 + 24) = v1;
  uint64_t v4 = swift_allocObject();
  *(void *)(v0 + 104) = v4;
  *(void *)(v4 + 16) = v3;
  long long v5 = *(_OWORD *)(v0 + 48);
  long long v6 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v4 + 24) = v5;
  *(_OWORD *)(v4 + 40) = v6;
  *(void *)(v4 + 56) = v2;
  *(void *)(v4 + 64) = v5;
  uint64_t v7 = swift_task_alloc();
  *(void *)(v0 + 112) = v7;
  *(void *)uint64_t v7 = v0;
  *(void *)(v7 + 8) = sub_1D79A7CC0;
  uint64_t v8 = *(void *)(v0 + 56);
  uint64_t v9 = *(void *)(v0 + 32);
  long long v10 = *(_OWORD *)(v0 + 40);
  long long v11 = *(_OWORD *)(v0 + 72);
  *(void *)(v7 + 144) = *(void *)(v0 + 88);
  *(_OWORD *)(v7 + 128) = v11;
  *(void *)(v7 + 120) = v8;
  *(_OWORD *)(v7 + 104) = v10;
  *(void *)(v7 + 88) = sub_1D79A7B3C;
  *(void *)(v7 + 96) = v4;
  *(void *)(v7 + 80) = v9;
  *(unsigned char *)(v7 + 160) = *(unsigned char *)(v0 + 16);
  *(void *)(v7 + 152) = *(void *)(v0 + 24);
  return MEMORY[0x1F4188298](sub_1D79A7744, 0, 0);
}

uint64_t sub_1D79A7CC0()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 120) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x1F4188298](sub_1D79A7DFC, 0, 0);
  }
  else
  {
    swift_release();
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_1D79A7DFC()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D79A7E60()
{
  return MEMORY[0x1F4186498](v0, 72, 7);
}

uint64_t sub_1D79A7E70()
{
  return sub_1D7A9BF48() & 1;
}

uint64_t MobileAssetManagerProtocol.retrieveMostRecentAssetByCreationDate(assetType:filters:completion:)(unsigned char *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v15[0] = *a1;
  uint64_t v16 = a2;
  uint64_t v10 = type metadata accessor for CreationDateSorter();
  uint64_t v11 = sub_1D79A9098(&qword_1EA845B00, (void (*)(uint64_t))type metadata accessor for CreationDateSorter);
  uint64_t v12 = sub_1D79A9098(&qword_1EA845B08, (void (*)(uint64_t))type metadata accessor for CreationDateSorter);
  uint64_t v13 = sub_1D79A9098(&qword_1EA845B10, (void (*)(uint64_t))type metadata accessor for CreationDateSorter);
  swift_bridgeObjectRetain();
  MobileAssetManagerProtocol.retrieveMostRecentAsset<A>(info:completion:)((uint64_t)v15, a3, a4, a5, v10, a6, v11, v12, v13);
  return swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for CreationDateSorter()
{
  uint64_t result = qword_1EA845B28;
  if (!qword_1EA845B28) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t MobileAssetManagerProtocol.retrieveMostRecentAssetByCreationDate(assetType:filters:)(uint64_t a1, unsigned char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v6 + 104) = a5;
  *(void *)(v6 + 112) = v5;
  *(void *)(v6 + 88) = a3;
  *(void *)(v6 + 96) = a4;
  *(void *)(v6 + 80) = a1;
  *(unsigned char *)(v6 + 120) = *a2;
  return MEMORY[0x1F4188298](sub_1D79A805C, 0, 0);
}

uint64_t sub_1D79A805C()
{
  char v1 = *(unsigned char *)(v0 + 120);
  uint64_t v3 = *(void *)(v0 + 104);
  uint64_t v2 = *(void *)(v0 + 112);
  uint64_t v5 = *(void *)(v0 + 88);
  uint64_t v4 = *(void *)(v0 + 96);
  uint64_t v6 = *(void *)(v0 + 80);
  *(void *)(v0 + 16) = v0;
  *(void *)(v0 + 56) = v6;
  *(void *)(v0 + 24) = sub_1D79A7840;
  uint64_t v7 = swift_continuation_init();
  sub_1D79A8124(v7, v2, v1, v5, v4, v3);
  return MEMORY[0x1F41881E8](v0 + 16);
}

uint64_t sub_1D79A8124(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  char v12 = a3 & 1;
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a1;
  MobileAssetManagerProtocol.retrieveMostRecentAssetByCreationDate(assetType:filters:completion:)(&v12, a4, (uint64_t)sub_1D79A9378, v10, a5, a6);
  return swift_release();
}

uint64_t sub_1D79A81D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D7A9AF68();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4, v6, v7, v8, v9, v10, v11, v12);
  uint64_t v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8438F0);
  MEMORY[0x1F4188790](v15, v16, v17, v18, v19, v20, v21, v22);
  uint64_t v24 = (char *)&v29 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D79A9108(a1, (uint64_t)v24);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v25 = *(void *)v24;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDF9740);
    swift_allocError();
    *uint64_t v26 = v25;
    return swift_continuation_throwingResumeWithError();
  }
  else
  {
    uint64_t v28 = *(void (**)(char *, char *, uint64_t))(v5 + 32);
    v28(v14, v24, v4);
    v28(*(char **)(*(void *)(a2 + 64) + 40), v14, v4);
    return swift_continuation_throwingResume();
  }
}

uint64_t MobileAssetManagerProtocol.evictAssets(type:)(unsigned char *a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v4 + 88) = a3;
  *(void *)(v4 + 96) = v3;
  *(void *)(v4 + 80) = a2;
  *(unsigned char *)(v4 + 104) = *a1;
  return MEMORY[0x1F4188298](sub_1D79A83B4, 0, 0);
}

uint64_t sub_1D79A83B4()
{
  char v1 = *(unsigned char *)(v0 + 104);
  uint64_t v3 = *(void *)(v0 + 88);
  uint64_t v2 = *(void *)(v0 + 96);
  uint64_t v4 = *(void *)(v0 + 80);
  *(void *)(v0 + 16) = v0;
  *(void *)(v0 + 24) = sub_1D79A7840;
  uint64_t v5 = swift_continuation_init();
  sub_1D79A8470(v5, v2, v1, v4, v3);
  return MEMORY[0x1F41881E8](v0 + 16);
}

uint64_t sub_1D79A8470(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  char v10 = a3 & 1;
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a1;
  (*(void (**)(char *, uint64_t (*)(void *), uint64_t, uint64_t, uint64_t))(a5 + 16))(&v10, sub_1D79A90F0, v8, a4, a5);
  return swift_release();
}

uint64_t dispatch thunk of MobileAssetManagerProtocol.retrieveMostRecentAsset<A>(info:isFirstMoreRecent:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  return (*(uint64_t (**)(void))(a10 + 8))();
}

uint64_t dispatch thunk of MobileAssetManagerProtocol.evictAssets(type:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 16))();
}

uint64_t sub_1D79A8554(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D7A9B148();
  uint64_t v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);
  return v5(a1, a2, v4);
}

uint64_t sub_1D79A85C0(uint64_t a1)
{
  uint64_t v2 = sub_1D7A9B148();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  return v3(a1, v2);
}

uint64_t sub_1D79A8624(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D7A9B148();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_1D79A8688(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D7A9B148();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_1D79A86EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D7A9B148();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_1D79A8750(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D7A9B148();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_1D79A87B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1D79A87C8);
}

uint64_t sub_1D79A87C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D7A9B148();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t sub_1D79A8834(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1D79A8848);
}

uint64_t sub_1D79A8848(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D7A9B148();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t sub_1D79A88B8()
{
  uint64_t result = sub_1D7A9B148();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1D79A8944(void *a1)
{
  if (a1)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDF9740);
    swift_allocError();
    *uint64_t v2 = a1;
    id v3 = a1;
    return swift_continuation_throwingResumeWithError();
  }
  else
  {
    return swift_continuation_throwingResume();
  }
}

uint64_t sub_1D79A89E0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v36 = a2;
  uint64_t v4 = sub_1D7A9B148();
  uint64_t v35 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4, v5, v6, v7, v8, v9, v10, v11);
  uint64_t v38 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA845B40);
  uint64_t v37 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13, v14, v15, v16, v17, v18, v19, v20);
  uint64_t v22 = (char *)&v34 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = type metadata accessor for CreationDateSorter();
  MEMORY[0x1F4188790](v23 - 8, v24, v25, v26, v27, v28, v29, v30);
  id v32 = (char *)&v34 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D79A8FE0();
  sub_1D7A9D6A8();
  if (!v2)
  {
    sub_1D79A9098(&qword_1EA843DE0, MEMORY[0x1E4F27928]);
    sub_1D7A9D148();
    (*(void (**)(char *, uint64_t))(v37 + 8))(v22, v13);
    (*(void (**)(char *, char *, uint64_t))(v35 + 32))(v32, v38, v4);
    sub_1D79A9034((uint64_t)v32, v36);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1D79A8C60()
{
  return 0x6E6F697461657263;
}

uint64_t sub_1D79A8C80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x6E6F697461657263 && a2 == 0xEC00000065746144)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1D7A9D358();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1D79A8D30(uint64_t a1)
{
  unint64_t v2 = sub_1D79A8FE0();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D79A8D6C(uint64_t a1)
{
  unint64_t v2 = sub_1D79A8FE0();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D79A8DA8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1D79A89E0(a1, a2);
}

uint64_t sub_1D79A8DC0(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA845B50);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2, v4, v5, v6, v7, v8, v9, v10);
  uint64_t v12 = (char *)&v14 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D79A8FE0();
  sub_1D7A9D6E8();
  sub_1D7A9B148();
  sub_1D79A9098(&qword_1EA843E00, MEMORY[0x1E4F27928]);
  sub_1D7A9D228();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v12, v2);
}

BOOL sub_1D79A8F38()
{
  return (sub_1D7A9B0E8() & 1) == 0;
}

BOOL sub_1D79A8F64()
{
  return (sub_1D7A9B0E8() & 1) == 0;
}

uint64_t sub_1D79A8F84()
{
  return sub_1D7A9B0E8();
}

uint64_t sub_1D79A8F98()
{
  return sub_1D79A9098(&qword_1EA845B38, (void (*)(uint64_t))type metadata accessor for CreationDateSorter);
}

unint64_t sub_1D79A8FE0()
{
  unint64_t result = qword_1EA845B48;
  if (!qword_1EA845B48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA845B48);
  }
  return result;
}

uint64_t sub_1D79A9034(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CreationDateSorter();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D79A9098(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1D79A90E0()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1D79A90F0(void *a1)
{
  return sub_1D79A8944(a1);
}

uint64_t sub_1D79A90F8()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1D79A9108(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8438F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D79A9170()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1D79A9180(uint64_t a1)
{
  return sub_1D79A81D4(a1, *(void *)(v1 + 16));
}

unsigned char *storeEnumTagSinglePayload for CreationDateSorter.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1D79A9238);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for CreationDateSorter.CodingKeys()
{
  return &type metadata for CreationDateSorter.CodingKeys;
}

unint64_t sub_1D79A9274()
{
  unint64_t result = qword_1EA845B58;
  if (!qword_1EA845B58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA845B58);
  }
  return result;
}

unint64_t sub_1D79A92CC()
{
  unint64_t result = qword_1EA845B60;
  if (!qword_1EA845B60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA845B60);
  }
  return result;
}

unint64_t sub_1D79A9324()
{
  unint64_t result = qword_1EA845B68;
  if (!qword_1EA845B68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA845B68);
  }
  return result;
}

CoreIDVShared::EnrolledBiometricType_optional __swiftcall EnrolledBiometricType.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  uint64_t v3 = sub_1D7A9D058();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1) {
    char v5 = 1;
  }
  else {
    char v5 = 2;
  }
  if (!v3) {
    char v5 = 0;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t EnrolledBiometricType.rawValue.getter()
{
  if (*v0) {
    return 0x444965636146;
  }
  else {
    return 0x44496863756F54;
  }
}

uint64_t sub_1D79A9418(char *a1, char *a2)
{
  return sub_1D7996A4C(*a1, *a2);
}

uint64_t sub_1D79A9424()
{
  return sub_1D7A9D628();
}

uint64_t sub_1D79A94A4()
{
  sub_1D7A9C0B8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D79A9510()
{
  return sub_1D7A9D628();
}

CoreIDVShared::EnrolledBiometricType_optional sub_1D79A958C(Swift::String *a1)
{
  return EnrolledBiometricType.init(rawValue:)(*a1);
}

void sub_1D79A9598(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x44496863756F54;
  if (*v1) {
    uint64_t v2 = 0x444965636146;
  }
  unint64_t v3 = 0xE700000000000000;
  if (*v1) {
    unint64_t v3 = 0xE600000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t BiometricsHelper.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t BiometricsHelper.init()()
{
  return v0;
}

unint64_t sub_1D79A95EC()
{
  return (unint64_t)sub_1D79A97D8() & 1;
}

void sub_1D79A960C(char *a1@<X8>)
{
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F30B50]), sel_init);
  sub_1D79A99A8();
  id v3 = objc_msgSend(v2, sel_biometryType);

  if (v3 == (id)2) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (v3 == (id)1) {
    char v4 = 0;
  }
  *a1 = v4;
}

uint64_t sub_1D79A9684()
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)v0 + 104))(&var1);
  uint64_t v1 = 0x44492065636146;
  if ((var1 & 1) == 0) {
    uint64_t v1 = 0x4449206863756F54;
  }
  if (var1 == 2) {
    return 0;
  }
  else {
    return v1;
  }
}

uint64_t sub_1D79A9710()
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)v0 + 104))(&v3);
  if (v3 == 2)
  {
    char v1 = 0;
  }
  else
  {
    if (v3) {
      char v1 = 1;
    }
    else {
      char v1 = sub_1D7A9D358();
    }
    swift_bridgeObjectRelease();
  }
  return v1 & 1;
}

uint64_t BiometricsHelper.deinit()
{
  return v0;
}

uint64_t BiometricsHelper.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

id sub_1D79A97D8()
{
  v9[1] = *MEMORY[0x1E4F143B8];
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F30B50]), sel_init);
  v9[0] = 0;
  id v1 = objc_msgSend(v0, sel_canEvaluatePolicy_error_, 2, v9);
  if (!v1)
  {
    id v2 = (void *)v9[0];
    if (v9[0]
      && (type metadata accessor for Code(0),
          v9[0] = -5,
          sub_1D79A9FA8(),
          id v3 = v2,
          char v4 = sub_1D7A9ADA8(),
          v3,
          (v4 & 1) != 0))
    {
    }
    else
    {
      LOWORD(v9[0]) = 0;
      id v5 = v2;
      unint64_t v6 = sub_1D785EAF8(MEMORY[0x1E4FBC860]);
      sub_1D7860544();
      swift_allocError();
      DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(v2, 0xD000000000000032, 0x80000001D7AC6B10, (__int16 *)v9, 0, v6, 0xD000000000000059, 0x80000001D7AC6B50, v7, 0x6F63737361507369, 0xED00007465536564, 46);
      swift_willThrow();
    }
  }

  return v1;
}

unint64_t sub_1D79A99A8()
{
  _OWORD v37[3] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v0 = sub_1D7A9B5F8();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0, v2, v3, v4, v5, v6, v7, v8);
  uint64_t v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F30B50]), sel_init);
  v37[0] = 0;
  unint64_t v12 = (unint64_t)objc_msgSend(v11, sel_canEvaluatePolicy_error_, 1, v37);
  id v13 = v37[0];
  if (v37[0])
  {
    uint64_t v14 = qword_1EBDF9DC8;
    id v15 = v37[0];
    if (v14 != -1) {
      swift_once();
    }
    uint64_t v16 = __swift_project_value_buffer(v0, (uint64_t)qword_1EBDFBE70);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v10, v16, v0);
    id v17 = v15;
    uint64_t v18 = sub_1D7A9B5D8();
    os_log_type_t v19 = sub_1D7A9C758();
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v20 = swift_slowAlloc();
      uint64_t v33 = v1;
      uint64_t v21 = (uint8_t *)v20;
      uint64_t v30 = swift_slowAlloc();
      uint64_t v36 = v30;
      id v32 = v11;
      *(_DWORD *)uint64_t v21 = 136446210;
      id v22 = objc_msgSend(v17, sel_localizedDescription, v21 + 4);
      uint64_t v23 = sub_1D7A9BFC8();
      uint64_t v31 = v0;
      uint64_t v24 = v23;
      unsigned int v34 = v12;
      unint64_t v26 = v25;

      uint64_t v35 = sub_1D7923300(v24, v26, &v36);
      sub_1D7A9C9E8();

      unint64_t v12 = v34;
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1D7853000, v18, v19, "LA canEvaluatePolicy returned error: %{public}s", v21, 0xCu);
      uint64_t v27 = v30;
      swift_arrayDestroy();
      MEMORY[0x1D947D740](v27, -1, -1);
      MEMORY[0x1D947D740](v21, -1, -1);

      (*(void (**)(char *, uint64_t))(v33 + 8))(v10, v31);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v1 + 8))(v10, v0);
    }
  }
  else
  {
  }
  return v12;
}

unint64_t sub_1D79A9D08()
{
  unint64_t result = qword_1EA845B70;
  if (!qword_1EA845B70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA845B70);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for EnrolledBiometricType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D79A9E28);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EnrolledBiometricType()
{
  return &type metadata for EnrolledBiometricType;
}

uint64_t dispatch thunk of LocalAuthenticationManaging.isPasscodeSet.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))() & 1;
}

uint64_t type metadata accessor for BiometricsHelper()
{
  return self;
}

uint64_t method lookup function for BiometricsHelper(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for BiometricsHelper);
}

uint64_t dispatch thunk of BiometricsHelper.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t dispatch thunk of BiometricsHelper.isPasscodeSet.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 88))() & 1;
}

uint64_t dispatch thunk of BiometricsHelper.isEnrolledInBiometrics.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 96))();
}

uint64_t dispatch thunk of BiometricsHelper.biometricType.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

uint64_t dispatch thunk of BiometricsHelper.biometricTypeString.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t dispatch thunk of BiometricsHelper.requiresDoublePress.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

unint64_t sub_1D79A9FA8()
{
  unint64_t result = qword_1EA842078;
  if (!qword_1EA842078)
  {
    type metadata accessor for Code(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA842078);
  }
  return result;
}

uint64_t ISO18013SessionTranscript.physicalSessionTranscript.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *v1;
  unint64_t v3 = v1[1];
  uint64_t v4 = v1[2];
  unint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  unint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  unint64_t v9 = v1[7];
  *a1 = *v1;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  a1[6] = v8;
  a1[7] = v9;
  return sub_1D79AA024(v2, v3, v4, v5, v6, v7, v8, v9);
}

uint64_t sub_1D79AA024(uint64_t result, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7, unint64_t a8)
{
  if (a2 >> 60 != 15)
  {
    sub_1D7860790(result, a2);
    sub_1D786E9D8(a3, a4);
    return sub_1D79AA0A8(a5, a6, a7, a8);
  }
  return result;
}

uint64_t sub_1D79AA0A8(uint64_t result, unint64_t a2, uint64_t a3, unint64_t a4)
{
  if (a2 >> 60 != 15)
  {
    sub_1D7860790(result, a2);
    return sub_1D786E9D8(a3, a4);
  }
  return result;
}

uint64_t ISO18013SessionTranscript.appleSessionTranscript.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1[8];
  unint64_t v3 = v1[9];
  uint64_t v4 = v1[10];
  uint64_t v5 = v1[11];
  uint64_t v6 = v1[12];
  uint64_t v7 = v1[13];
  uint64_t v8 = v1[14];
  unint64_t v9 = v1[15];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  a1[6] = v8;
  a1[7] = v9;
  return sub_1D79AA11C(v2, v3, v4, v5, v6, v7, v8, v9);
}

uint64_t sub_1D79AA11C(uint64_t result, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unint64_t a8)
{
  if (a4)
  {
    sub_1D7860790(result, a2);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return sub_1D7860790(a7, a8);
  }
  return result;
}

double ISO18013SessionTranscript.init(physicalSessionTranscript:)@<D0>(_OWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  long long v3 = a1[3];
  a2[2] = a1[2];
  a2[3] = v3;
  double result = 0.0;
  a2[4] = 0u;
  a2[5] = 0u;
  a2[6] = 0u;
  a2[7] = 0u;
  return result;
}

__n128 ISO18013SessionTranscript.init(appleSessionTranscript:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  *(_OWORD *)a2 = xmmword_1D7AA0AC0;
  *(_OWORD *)(a2 + 16) = 0u;
  *(_OWORD *)(a2 + 32) = 0u;
  *(_OWORD *)(a2 + 48) = 0u;
  long long v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(a2 + 64) = *(_OWORD *)a1;
  *(_OWORD *)(a2 + 80) = v4;
  *(void *)(a2 + 96) = v2;
  *(void *)(a2 + 104) = v3;
  __n128 result = *(__n128 *)(a1 + 48);
  *(__n128 *)(a2 + 112) = result;
  return result;
}

uint64_t ISO18013SessionTranscript.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D7A9D688();
  if (!v2)
  {
    uint64_t v5 = a1[3];
    uint64_t v6 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v5);
    Decoder.presentmentType.getter(v5, v6, &v24);
    if (v24 != 2)
    {
      if (v24)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        char v7 = sub_1D7A9D358();
        swift_bridgeObjectRelease();
        if ((v7 & 1) == 0) {
          goto LABEL_5;
        }
      }
      __swift_project_boxed_opaque_existential_1(v32, v33);
      sub_1D79ABEF4();
      sub_1D7A9D3D8();
      uint64_t v15 = 0;
      uint64_t v16 = 0;
      uint64_t v17 = 0;
      uint64_t v18 = 0;
      uint64_t v11 = 0;
      uint64_t v12 = 0;
      uint64_t v13 = 0;
      uint64_t v34 = v24;
      uint64_t v22 = v26;
      unint64_t v23 = v25;
      uint64_t v20 = v28;
      uint64_t v21 = v27;
      uint64_t v8 = v30;
      uint64_t v19 = v29;
      unint64_t v10 = 0xF000000000000000;
      uint64_t v9 = v31;
      goto LABEL_8;
    }
LABEL_5:
    __swift_project_boxed_opaque_existential_1(v32, v33);
    sub_1D79ABEA0();
    sub_1D7A9D3D8();
    uint64_t v34 = 0;
    uint64_t v22 = 0;
    unint64_t v23 = 0;
    uint64_t v20 = 0;
    uint64_t v21 = 0;
    uint64_t v8 = 0;
    uint64_t v9 = 0;
    unint64_t v10 = v25;
    uint64_t v18 = v26;
    uint64_t v19 = 0;
    uint64_t v16 = v24;
    uint64_t v17 = v27;
    uint64_t v11 = v29;
    uint64_t v15 = v28;
    uint64_t v12 = v30;
    uint64_t v13 = v31;
LABEL_8:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v32);
    *a2 = v16;
    a2[1] = v10;
    a2[2] = v18;
    a2[3] = v17;
    a2[4] = v15;
    a2[5] = v11;
    a2[6] = v12;
    a2[7] = v13;
    a2[8] = v34;
    a2[9] = v23;
    a2[10] = v22;
    a2[11] = v21;
    a2[12] = v20;
    a2[13] = v19;
    a2[14] = v8;
    a2[15] = v9;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t ISO18013SessionTranscript.encode(to:)(void *a1)
{
  uint64_t v22 = *v1;
  unint64_t v41 = v1[1];
  uint64_t v20 = v1[2];
  uint64_t v21 = v1[3];
  uint64_t v25 = v1[5];
  uint64_t v26 = v1[4];
  uint64_t v23 = v1[7];
  uint64_t v24 = v1[6];
  unint64_t v28 = v1[9];
  uint64_t v29 = v1[8];
  uint64_t v3 = v1[11];
  uint64_t v27 = v1[10];
  uint64_t v4 = v1[12];
  uint64_t v5 = v1[13];
  uint64_t v7 = v1[14];
  uint64_t v6 = v1[15];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D7A9D6D8();
  uint64_t v8 = a1[3];
  uint64_t v9 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v8);
  Encoder.presentmentType.getter(v8, v9, &v31);
  if (v31 == 2) {
    goto LABEL_4;
  }
  if (v31)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v10 = sub_1D7A9D358();
    swift_bridgeObjectRelease();
    if ((v10 & 1) == 0)
    {
LABEL_4:
      if (v41 >> 60 == 15)
      {
        LOWORD(v31) = 443;
        unint64_t v11 = sub_1D785EAF8(MEMORY[0x1E4FBC860]);
        sub_1D7860544();
        uint64_t v12 = (void *)swift_allocError();
        DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xD000000000000043, 0x80000001D7AC6C90, (__int16 *)&v31, 0, v11, 0xD00000000000006DLL, 0x80000001D7AC6BF0, v13, 0x742865646F636E65, 0xEB00000000293A6FLL, 70);
LABEL_13:
        swift_willThrow();
        goto LABEL_14;
      }
      uint64_t v31 = v22;
      unint64_t v32 = v41;
      uint64_t v33 = v20;
      uint64_t v34 = v21;
      uint64_t v35 = v26;
      uint64_t v36 = v25;
      uint64_t v37 = v24;
      uint64_t v38 = v23;
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v39, v40);
      sub_1D79ABF48();
      goto LABEL_10;
    }
  }
  if (!v3)
  {
    LOWORD(v31) = 439;
    unint64_t v14 = sub_1D785EAF8(MEMORY[0x1E4FBC860]);
    sub_1D7860544();
    uint64_t v12 = (void *)swift_allocError();
    DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xD000000000000034, 0x80000001D7AC6CE0, (__int16 *)&v31, 0, v14, 0xD00000000000006DLL, 0x80000001D7AC6BF0, v15, 0x742865646F636E65, 0xEB00000000293A6FLL, 62);
    goto LABEL_13;
  }
  uint64_t v31 = v29;
  unint64_t v32 = v28;
  uint64_t v33 = v27;
  uint64_t v34 = v3;
  uint64_t v35 = v4;
  uint64_t v36 = v5;
  uint64_t v37 = v7;
  uint64_t v38 = v6;
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v39, v40);
  sub_1D79ABF9C();
LABEL_10:
  sub_1D7A9D458();
  if (v30)
  {
    uint64_t v12 = v30;
LABEL_14:
    LOWORD(v31) = 0;
    id v16 = v12;
    unint64_t v17 = sub_1D785EAF8(MEMORY[0x1E4FBC860]);
    sub_1D7860544();
    swift_allocError();
    DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(v12, 0, 0xE000000000000000, (__int16 *)&v31, 0, v17, 0xD00000000000006DLL, 0x80000001D7AC6BF0, v18, 0x742865646F636E65, 0xEB00000000293A6FLL, 74);
    swift_willThrow();
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v39);
}

uint64_t sub_1D79AA988@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return ISO18013SessionTranscript.init(from:)(a1, a2);
}

uint64_t sub_1D79AA9A0(void *a1)
{
  return ISO18013SessionTranscript.encode(to:)(a1);
}

uint64_t ISO18013PhysicalSessionTranscript.readerKeyBytes.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  sub_1D786E9D8(v1, *(void *)(v0 + 24));
  return v1;
}

uint64_t ISO18013PhysicalSessionTranscript.handover.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1[4];
  unint64_t v3 = v1[5];
  uint64_t v4 = v1[6];
  unint64_t v5 = v1[7];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  return sub_1D79AA0A8(v2, v3, v4, v5);
}

uint64_t ISO18013PhysicalSessionTranscript.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D7A9D678();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(v18, v19);
  uint64_t v5 = sub_1D7A9D298();
  if ((v6 & 1) != 0 || v5 != 2)
  {
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v18, v19);
    sub_1D786073C();
    sub_1D7A9D2B8();
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v18, v19);
    sub_1D7A9D2B8();
    unint64_t v21 = v20;
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v18, v19);
    sub_1D79ABFF0();
    sub_1D7A9D288();
    unint64_t v8 = v15;
    uint64_t v9 = v14;
    unint64_t v12 = v15;
    uint64_t v10 = v14;
    uint64_t v11 = v14;
    unint64_t v21 = v15;
  }
  else
  {
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v18, v19);
    sub_1D786073C();
    sub_1D7A9D2B8();
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v18, v19);
    sub_1D79ABFF0();
    sub_1D7A9D2B8();
    unint64_t v8 = v15;
    uint64_t v9 = v14;
    uint64_t v10 = 0;
    uint64_t v11 = v14;
    unint64_t v21 = v15;
    unint64_t v12 = 0xF000000000000000;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
  *a2 = v9;
  a2[1] = v8;
  a2[2] = v10;
  a2[3] = v12;
  unint64_t v13 = v21;
  a2[4] = v11;
  a2[5] = v13;
  a2[6] = v16;
  a2[7] = v17;
  sub_1D7860790(v9, v8);
  sub_1D786E9D8(v10, v12);
  sub_1D79AA0A8(v11, v21, v16, v17);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  sub_1D78607E8(v9, v8);
  sub_1D7871BDC(v10, v12);
  return sub_1D79AC044(v11, v21, v16, v17);
}

uint64_t ISO18013PhysicalSessionTranscript.encode(to:)(void *a1)
{
  unint64_t v3 = v1[3];
  unint64_t v4 = v1[5];
  uint64_t v8 = v1[4];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D7A9D6C8();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v6, v7);
  sub_1D79AC094();
  sub_1D7A9D2F8();
  if (!v2)
  {
    if (v3 >> 60 != 15)
    {
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v6, v7);
      sub_1D7A9D2F8();
    }
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v6, v7);
    if (v4 >> 60 == 15)
    {
      sub_1D7A9D308();
    }
    else
    {
      sub_1D79AC0E8();
      sub_1D7A9D2F8();
    }
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
}

uint64_t sub_1D79AAEE8@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return ISO18013PhysicalSessionTranscript.init(from:)(a1, a2);
}

uint64_t sub_1D79AAF00(void *a1)
{
  return ISO18013PhysicalSessionTranscript.encode(to:)(a1);
}

uint64_t ISO18013AppleSessionTranscript.handover.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)v1;
  uint64_t v4 = *(void *)(v1 + 24);
  uint64_t v3 = *(void *)(v1 + 32);
  uint64_t v5 = *(void *)(v1 + 40);
  uint64_t v6 = *(void *)(v1 + 48);
  unint64_t v7 = *(void *)(v1 + 56);
  *(void *)a1 = *(void *)v1;
  long long v8 = *(_OWORD *)(v1 + 8);
  *(_OWORD *)(a1 + 8) = v8;
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = v3;
  *(void *)(a1 + 40) = v5;
  *(void *)(a1 + 48) = v6;
  *(void *)(a1 + 56) = v7;
  sub_1D7860790(v2, v8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return sub_1D7860790(v6, v7);
}

uint64_t ISO18013AppleSessionTranscript.init(nonce:merchantID:teamID:encryptionKeyHash:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>)
{
  *a9 = result;
  a9[1] = a2;
  a9[2] = a3;
  a9[3] = a4;
  a9[4] = a5;
  a9[5] = a6;
  a9[6] = a7;
  a9[7] = a8;
  return result;
}

uint64_t ISO18013AppleHandover.init(nonce:merchantID:teamID:encryptionKeyHash:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>)
{
  *a9 = result;
  a9[1] = a2;
  a9[2] = a3;
  a9[3] = a4;
  a9[4] = a5;
  a9[5] = a6;
  a9[6] = a7;
  a9[7] = a8;
  return result;
}

__n128 ISO18013AppleSessionTranscript.init(handover:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  long long v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)a2 = *(_OWORD *)a1;
  *(_OWORD *)(a2 + 16) = v4;
  *(void *)(a2 + 32) = v2;
  *(void *)(a2 + 40) = v3;
  __n128 result = *(__n128 *)(a1 + 48);
  *(__n128 *)(a2 + 48) = result;
  return result;
}

uint64_t ISO18013AppleSessionTranscript.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D7A9D678();
  if (!v2)
  {
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v19, v20);
    char v5 = sub_1D7A9D2D8();
    if (v5)
    {
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v19, v20);
      char v6 = sub_1D7A9D2D8();
      if (v6)
      {
        __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v19, v20);
        sub_1D79AC13C();
        sub_1D7A9D2B8();
        long long v15 = v16[1];
        long long v14 = v16[2];
        uint64_t v7 = v17;
        uint64_t v8 = v18;
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
        *(_OWORD *)a2 = v16[0];
        *(_OWORD *)(a2 + 16) = v15;
        *(_OWORD *)(a2 + 32) = v14;
        *(void *)(a2 + 48) = v7;
        *(void *)(a2 + 56) = v8;
        return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
      }
      LOWORD(v16[0]) = 439;
      unint64_t v12 = sub_1D785EAF8(MEMORY[0x1E4FBC860]);
      sub_1D7860544();
      swift_allocError();
      DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xD00000000000002DLL, 0x80000001D7AC6D50, (__int16 *)v16, 0, v12, 0xD00000000000006DLL, 0x80000001D7AC6BF0, v13, 0x6F72662874696E69, 0xEB00000000293A6DLL, 145);
    }
    else
    {
      LOWORD(v16[0]) = 439;
      unint64_t v9 = sub_1D785EAF8(MEMORY[0x1E4FBC860]);
      sub_1D7860544();
      swift_allocError();
      DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xD00000000000002CLL, 0x80000001D7AC6D20, (__int16 *)v16, 0, v9, 0xD00000000000006DLL, 0x80000001D7AC6BF0, v10, 0x6F72662874696E69, 0xEB00000000293A6DLL, 142);
    }
    swift_willThrow();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t ISO18013AppleSessionTranscript.encode(to:)(void *a1)
{
  uint64_t v6 = *(void *)(v1 + 40);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D7A9D6C8();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v4, v5);
  sub_1D7A9D308();
  if (!v2)
  {
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v4, v5);
    sub_1D7A9D308();
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v4, v5);
    sub_1D79AC190();
    sub_1D7A9D2F8();
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v4);
}

uint64_t sub_1D79AB3B0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ISO18013AppleSessionTranscript.init(from:)(a1, a2);
}

uint64_t sub_1D79AB3C8(void *a1)
{
  return ISO18013AppleSessionTranscript.encode(to:)(a1);
}

uint64_t ISO18013NFCHandover.handoverSelectMessage.getter()
{
  uint64_t v1 = *(void *)v0;
  sub_1D7860790(*(void *)v0, *(void *)(v0 + 8));
  return v1;
}

uint64_t ISO18013NFCHandover.handoverRequestMessage.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  sub_1D786E9D8(v1, *(void *)(v0 + 24));
  return v1;
}

uint64_t ISO18013NFCHandover.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D7A9D678();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v8, v9);
  sub_1D786073C();
  sub_1D7A9D2B8();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v8, v9);
  sub_1D7860790(v6, v7);
  sub_1D7A9D288();
  sub_1D786E9D8(v6, v7);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
  sub_1D7860790(v6, v7);
  sub_1D786E9D8(v6, v7);
  sub_1D7871BDC(v6, v7);
  sub_1D78607E8(v6, v7);
  *a2 = v6;
  a2[1] = v7;
  a2[2] = v6;
  a2[3] = v7;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  sub_1D78607E8(v6, v7);
  return sub_1D7871BDC(v6, v7);
}

uint64_t ISO18013NFCHandover.encode(to:)(void *a1)
{
  unint64_t v3 = *(void *)(v1 + 24);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D7A9D6C8();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v5, v6);
  sub_1D7871AD8();
  sub_1D7A9D2F8();
  if (!v2)
  {
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v5, v6);
    if (v3 >> 60 == 15) {
      sub_1D7A9D308();
    }
    else {
      sub_1D7A9D2F8();
    }
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
}

uint64_t sub_1D79AB73C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return ISO18013NFCHandover.init(from:)(a1, a2);
}

uint64_t sub_1D79AB754(void *a1)
{
  return ISO18013NFCHandover.encode(to:)(a1);
}

uint64_t ISO18013AppleHandover.nonce.getter()
{
  uint64_t v1 = *(void *)v0;
  sub_1D7860790(*(void *)v0, *(void *)(v0 + 8));
  return v1;
}

uint64_t ISO18013AppleHandover.merchantID.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ISO18013AppleHandover.teamID.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ISO18013AppleHandover.encryptionKeyHash.getter()
{
  uint64_t v1 = *(void *)(v0 + 48);
  sub_1D7860790(v1, *(void *)(v0 + 56));
  return v1;
}

uint64_t ISO18013AppleHandover.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D7A9D678();
  if (!v2)
  {
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v23, v24);
    if (sub_1D7A9D2A8() == 0xD00000000000001CLL && v5 == 0x80000001D7AC6D80 || (sub_1D7A9D358() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v23, v24);
      sub_1D786073C();
      sub_1D7A9D2B8();
      unint64_t v6 = v22;
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v23, v24);
      sub_1D7860790(v21, v22);
      uint64_t v7 = sub_1D7A9D2A8();
      uint64_t v9 = v8;
      uint64_t v20 = v7;
      uint64_t v25 = v21;
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v23, v24);
      swift_bridgeObjectRetain();
      uint64_t v19 = v9;
      uint64_t v18 = sub_1D7A9D2A8();
      uint64_t v13 = v12;
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v23, v24);
      swift_bridgeObjectRetain();
      sub_1D7A9D2B8();
      uint64_t v14 = v21;
      unint64_t v15 = v22;
      sub_1D7860790(v21, v22);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
      uint64_t v16 = v25;
      sub_1D7860790(v25, v22);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1D7860790(v21, v22);
      sub_1D78607E8(v21, v22);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1D78607E8(v16, v22);
      *a2 = v16;
      a2[1] = v6;
      a2[2] = v20;
      a2[3] = v19;
      a2[4] = v18;
      a2[5] = v13;
      a2[6] = v14;
      a2[7] = v15;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
      sub_1D78607E8(v16, v6);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return sub_1D78607E8(v14, v15);
    }
    sub_1D7A9CC48();
    swift_bridgeObjectRelease();
    uint64_t v21 = 0xD0000000000001B7;
    unint64_t v22 = 0x80000001D7AC6DA0;
    sub_1D7A9C128();
    swift_bridgeObjectRelease();
    unint64_t v10 = sub_1D785EAF8(MEMORY[0x1E4FBC860]);
    sub_1D7860544();
    swift_allocError();
    DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xD00000000000001ELL, 0x80000001D7AC6DA0, (__int16 *)&v21, 0, v10, 0xD00000000000006DLL, 0x80000001D7AC6BF0, v11, 0x6F72662874696E69, 0xEB00000000293A6DLL, 210);
    swift_willThrow();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t ISO18013AppleHandover.encode(to:)(void *a1)
{
  uint64_t v6 = *(void *)(v1 + 32);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D7A9D6C8();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v4, v5);
  sub_1D7A9D2E8();
  if (!v2)
  {
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v4, v5);
    sub_1D7871AD8();
    sub_1D7A9D2F8();
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v4, v5);
    sub_1D7A9D2E8();
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v4, v5);
    sub_1D7A9D2E8();
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v4, v5);
    sub_1D7A9D2F8();
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v4);
}

uint64_t sub_1D79ABE70@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return ISO18013AppleHandover.init(from:)(a1, a2);
}

uint64_t sub_1D79ABE88(void *a1)
{
  return ISO18013AppleHandover.encode(to:)(a1);
}

unint64_t sub_1D79ABEA0()
{
  unint64_t result = qword_1EA845B78;
  if (!qword_1EA845B78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA845B78);
  }
  return result;
}

unint64_t sub_1D79ABEF4()
{
  unint64_t result = qword_1EA845B80;
  if (!qword_1EA845B80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA845B80);
  }
  return result;
}

unint64_t sub_1D79ABF48()
{
  unint64_t result = qword_1EA845B88;
  if (!qword_1EA845B88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA845B88);
  }
  return result;
}

unint64_t sub_1D79ABF9C()
{
  unint64_t result = qword_1EA845B90;
  if (!qword_1EA845B90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA845B90);
  }
  return result;
}

unint64_t sub_1D79ABFF0()
{
  unint64_t result = qword_1EA845B98;
  if (!qword_1EA845B98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA845B98);
  }
  return result;
}

uint64_t sub_1D79AC044(uint64_t result, unint64_t a2, uint64_t a3, unint64_t a4)
{
  if (a2 >> 60 != 15)
  {
    sub_1D78607E8(result, a2);
    return sub_1D7871BDC(a3, a4);
  }
  return result;
}

unint64_t sub_1D79AC094()
{
  unint64_t result = qword_1EA845BA0;
  if (!qword_1EA845BA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA845BA0);
  }
  return result;
}

unint64_t sub_1D79AC0E8()
{
  unint64_t result = qword_1EA845BA8;
  if (!qword_1EA845BA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA845BA8);
  }
  return result;
}

unint64_t sub_1D79AC13C()
{
  unint64_t result = qword_1EA845BB0;
  if (!qword_1EA845BB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA845BB0);
  }
  return result;
}

unint64_t sub_1D79AC190()
{
  unint64_t result = qword_1EA845BB8;
  if (!qword_1EA845BB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA845BB8);
  }
  return result;
}

uint64_t *destroy for ISO18013SessionTranscript(uint64_t *result)
{
  uint64_t v1 = result;
  unint64_t v2 = result[1];
  if (v2 >> 60 != 15)
  {
    unint64_t result = (uint64_t *)sub_1D78607E8(*result, v2);
    unint64_t v3 = v1[3];
    if (v3 >> 60 != 15) {
      unint64_t result = (uint64_t *)sub_1D78607E8(v1[2], v3);
    }
    unint64_t v4 = v1[5];
    if (v4 >> 60 != 15)
    {
      unint64_t result = (uint64_t *)sub_1D78607E8(v1[4], v4);
      unint64_t v5 = v1[7];
      if (v5 >> 60 != 15) {
        unint64_t result = (uint64_t *)sub_1D78607E8(v1[6], v5);
      }
    }
  }
  if (v1[11])
  {
    sub_1D78607E8(v1[8], v1[9]);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v6 = v1[14];
    unint64_t v7 = v1[15];
    return (uint64_t *)sub_1D78607E8(v6, v7);
  }
  return result;
}

uint64_t initializeWithCopy for ISO18013SessionTranscript(uint64_t a1, uint64_t *a2)
{
  unint64_t v4 = a2[1];
  if (v4 >> 60 == 15)
  {
    long long v5 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
    long long v6 = *((_OWORD *)a2 + 3);
    *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
    *(_OWORD *)(a1 + 48) = v6;
    uint64_t v7 = a2[11];
    if (!v7) {
      goto LABEL_14;
    }
  }
  else
  {
    uint64_t v8 = *a2;
    sub_1D7860790(*a2, a2[1]);
    *(void *)a1 = v8;
    *(void *)(a1 + 8) = v4;
    uint64_t v9 = a2 + 2;
    unint64_t v10 = a2[3];
    if (v10 >> 60 == 15)
    {
      *(_OWORD *)(a1 + 16) = *(_OWORD *)v9;
    }
    else
    {
      uint64_t v11 = *v9;
      sub_1D7860790(*v9, a2[3]);
      *(void *)(a1 + 16) = v11;
      *(void *)(a1 + 24) = v10;
    }
    unint64_t v12 = a2[5];
    if (v12 >> 60 != 15)
    {
      uint64_t v14 = a2[4];
      sub_1D7860790(v14, a2[5]);
      *(void *)(a1 + 32) = v14;
      *(void *)(a1 + 40) = v12;
      unint64_t v15 = a2 + 6;
      unint64_t v16 = a2[7];
      if (v16 >> 60 == 15)
      {
        *(_OWORD *)(a1 + 48) = *(_OWORD *)v15;
        uint64_t v7 = a2[11];
        if (v7) {
          goto LABEL_12;
        }
      }
      else
      {
        uint64_t v22 = *v15;
        sub_1D7860790(*v15, a2[7]);
        *(void *)(a1 + 48) = v22;
        *(void *)(a1 + 56) = v16;
        uint64_t v7 = a2[11];
        if (v7) {
          goto LABEL_12;
        }
      }
LABEL_14:
      long long v23 = *((_OWORD *)a2 + 5);
      *(_OWORD *)(a1 + 64) = *((_OWORD *)a2 + 4);
      *(_OWORD *)(a1 + 80) = v23;
      long long v24 = *((_OWORD *)a2 + 7);
      *(_OWORD *)(a1 + 96) = *((_OWORD *)a2 + 6);
      *(_OWORD *)(a1 + 112) = v24;
      return a1;
    }
    long long v13 = *((_OWORD *)a2 + 3);
    *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
    *(_OWORD *)(a1 + 48) = v13;
    uint64_t v7 = a2[11];
    if (!v7) {
      goto LABEL_14;
    }
  }
LABEL_12:
  uint64_t v17 = a2[8];
  unint64_t v18 = a2[9];
  sub_1D7860790(v17, v18);
  *(void *)(a1 + 64) = v17;
  *(void *)(a1 + 72) = v18;
  *(void *)(a1 + 80) = a2[10];
  *(void *)(a1 + 88) = v7;
  uint64_t v19 = a2[13];
  *(void *)(a1 + 96) = a2[12];
  *(void *)(a1 + 104) = v19;
  uint64_t v21 = a2[14];
  unint64_t v20 = a2[15];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1D7860790(v21, v20);
  *(void *)(a1 + 112) = v21;
  *(void *)(a1 + 120) = v20;
  return a1;
}

uint64_t assignWithCopy for ISO18013SessionTranscript(uint64_t a1, long long *a2)
{
  unint64_t v4 = *((void *)a2 + 1);
  if (*(void *)(a1 + 8) >> 60 == 15)
  {
    if (v4 >> 60 == 15)
    {
      long long v5 = *a2;
      long long v6 = a2[1];
      long long v7 = a2[3];
      *(_OWORD *)(a1 + 32) = a2[2];
      *(_OWORD *)(a1 + 48) = v7;
      *(_OWORD *)a1 = v5;
      *(_OWORD *)(a1 + 16) = v6;
      goto LABEL_34;
    }
    uint64_t v11 = *(void *)a2;
    sub_1D7860790(*(void *)a2, *((void *)a2 + 1));
    *(void *)a1 = v11;
    *(void *)(a1 + 8) = v4;
    unint64_t v12 = (uint64_t *)(a2 + 1);
    unint64_t v13 = *((void *)a2 + 3);
    if (v13 >> 60 == 15)
    {
      *(_OWORD *)(a1 + 16) = *(_OWORD *)v12;
    }
    else
    {
      uint64_t v20 = *v12;
      sub_1D7860790(*v12, *((void *)a2 + 3));
      *(void *)(a1 + 16) = v20;
      *(void *)(a1 + 24) = v13;
    }
    unint64_t v21 = *((void *)a2 + 5);
    if (v21 >> 60 == 15)
    {
      long long v22 = a2[3];
      *(_OWORD *)(a1 + 32) = a2[2];
      *(_OWORD *)(a1 + 48) = v22;
      goto LABEL_34;
    }
LABEL_21:
    uint64_t v29 = *((void *)a2 + 4);
    sub_1D7860790(v29, v21);
    *(void *)(a1 + 32) = v29;
    *(void *)(a1 + 40) = v21;
    uint64_t v30 = a2 + 3;
    unint64_t v31 = *((void *)a2 + 7);
    if (v31 >> 60 == 15)
    {
      *(_OWORD *)(a1 + 48) = *v30;
      goto LABEL_34;
    }
    uint64_t v33 = *(void *)v30;
    goto LABEL_26;
  }
  if (v4 >> 60 == 15)
  {
    sub_1D79AC84C((uint64_t *)a1);
    long long v8 = a2[3];
    long long v10 = *a2;
    long long v9 = a2[1];
    *(_OWORD *)(a1 + 32) = a2[2];
    *(_OWORD *)(a1 + 48) = v8;
    *(_OWORD *)a1 = v10;
    *(_OWORD *)(a1 + 16) = v9;
    goto LABEL_34;
  }
  uint64_t v14 = *(void *)a2;
  sub_1D7860790(*(void *)a2, *((void *)a2 + 1));
  uint64_t v15 = *(void *)a1;
  unint64_t v16 = *(void *)(a1 + 8);
  *(void *)a1 = v14;
  *(void *)(a1 + 8) = v4;
  sub_1D78607E8(v15, v16);
  uint64_t v17 = (uint64_t *)(a2 + 1);
  unint64_t v18 = *((void *)a2 + 3);
  if (*(void *)(a1 + 24) >> 60 == 15)
  {
    if (v18 >> 60 != 15)
    {
      uint64_t v19 = *v17;
      sub_1D7860790(*v17, *((void *)a2 + 3));
      *(void *)(a1 + 16) = v19;
      *(void *)(a1 + 24) = v18;
      goto LABEL_18;
    }
    goto LABEL_16;
  }
  if (v18 >> 60 == 15)
  {
    sub_1D7870C24(a1 + 16);
LABEL_16:
    *(_OWORD *)(a1 + 16) = *(_OWORD *)v17;
    goto LABEL_18;
  }
  uint64_t v23 = *v17;
  sub_1D7860790(*v17, *((void *)a2 + 3));
  uint64_t v24 = *(void *)(a1 + 16);
  unint64_t v25 = *(void *)(a1 + 24);
  *(void *)(a1 + 16) = v23;
  *(void *)(a1 + 24) = v18;
  sub_1D78607E8(v24, v25);
LABEL_18:
  uint64_t v26 = (_OWORD *)(a1 + 32);
  uint64_t v27 = a2 + 2;
  unint64_t v21 = *((void *)a2 + 5);
  if (*(void *)(a1 + 40) >> 60 == 15)
  {
    if (v21 >> 60 == 15)
    {
      long long v28 = a2[3];
      *uint64_t v26 = *v27;
      *(_OWORD *)(a1 + 48) = v28;
      goto LABEL_34;
    }
    goto LABEL_21;
  }
  if (v21 >> 60 == 15)
  {
    sub_1D79AC81C((uint64_t *)(a1 + 32));
    long long v32 = a2[3];
    *uint64_t v26 = *v27;
    *(_OWORD *)(a1 + 48) = v32;
    goto LABEL_34;
  }
  uint64_t v34 = *((void *)a2 + 4);
  sub_1D7860790(v34, *((void *)a2 + 5));
  uint64_t v35 = *(void *)(a1 + 32);
  unint64_t v36 = *(void *)(a1 + 40);
  *(void *)(a1 + 32) = v34;
  *(void *)(a1 + 40) = v21;
  sub_1D78607E8(v35, v36);
  uint64_t v37 = (uint64_t *)(a2 + 3);
  unint64_t v31 = *((void *)a2 + 7);
  if (*(void *)(a1 + 56) >> 60 == 15)
  {
    if (v31 >> 60 != 15)
    {
      uint64_t v33 = *v37;
LABEL_26:
      sub_1D7860790(v33, v31);
      *(void *)(a1 + 48) = v33;
      *(void *)(a1 + 56) = v31;
      goto LABEL_34;
    }
    goto LABEL_32;
  }
  if (v31 >> 60 == 15)
  {
    sub_1D7870C24(a1 + 48);
LABEL_32:
    *(_OWORD *)(a1 + 48) = *(_OWORD *)v37;
    goto LABEL_34;
  }
  uint64_t v38 = *v37;
  sub_1D7860790(*v37, *((void *)a2 + 7));
  uint64_t v39 = *(void *)(a1 + 48);
  unint64_t v40 = *(void *)(a1 + 56);
  *(void *)(a1 + 48) = v38;
  *(void *)(a1 + 56) = v31;
  sub_1D78607E8(v39, v40);
LABEL_34:
  unint64_t v41 = (_OWORD *)(a1 + 64);
  unint64_t v42 = a2 + 4;
  uint64_t v43 = *((void *)a2 + 11);
  if (*(void *)(a1 + 88))
  {
    if (v43)
    {
      uint64_t v44 = *((void *)a2 + 8);
      unint64_t v45 = *((void *)a2 + 9);
      sub_1D7860790(v44, v45);
      uint64_t v46 = *(void *)(a1 + 64);
      unint64_t v47 = *(void *)(a1 + 72);
      *(void *)(a1 + 64) = v44;
      *(void *)(a1 + 72) = v45;
      sub_1D78607E8(v46, v47);
      *(void *)(a1 + 80) = *((void *)a2 + 10);
      *(void *)(a1 + 88) = *((void *)a2 + 11);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 96) = *((void *)a2 + 12);
      *(void *)(a1 + 104) = *((void *)a2 + 13);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v49 = *((void *)a2 + 14);
      unint64_t v48 = *((void *)a2 + 15);
      sub_1D7860790(v49, v48);
      uint64_t v50 = *(void *)(a1 + 112);
      unint64_t v51 = *(void *)(a1 + 120);
      *(void *)(a1 + 112) = v49;
      *(void *)(a1 + 120) = v48;
      sub_1D78607E8(v50, v51);
    }
    else
    {
      sub_1D79AC87C(a1 + 64);
      long long v56 = a2[7];
      long long v58 = *v42;
      long long v57 = a2[5];
      *(_OWORD *)(a1 + 96) = a2[6];
      *(_OWORD *)(a1 + 112) = v56;
      _OWORD *v41 = v58;
      *(_OWORD *)(a1 + 80) = v57;
    }
  }
  else if (v43)
  {
    uint64_t v52 = *((void *)a2 + 8);
    unint64_t v53 = *((void *)a2 + 9);
    sub_1D7860790(v52, v53);
    *(void *)(a1 + 64) = v52;
    *(void *)(a1 + 72) = v53;
    *(void *)(a1 + 80) = *((void *)a2 + 10);
    *(void *)(a1 + 88) = *((void *)a2 + 11);
    *(void *)(a1 + 96) = *((void *)a2 + 12);
    *(void *)(a1 + 104) = *((void *)a2 + 13);
    uint64_t v55 = *((void *)a2 + 14);
    unint64_t v54 = *((void *)a2 + 15);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1D7860790(v55, v54);
    *(void *)(a1 + 112) = v55;
    *(void *)(a1 + 120) = v54;
  }
  else
  {
    long long v59 = *v42;
    long long v60 = a2[5];
    long long v61 = a2[7];
    *(_OWORD *)(a1 + 96) = a2[6];
    *(_OWORD *)(a1 + 112) = v61;
    _OWORD *v41 = v59;
    *(_OWORD *)(a1 + 80) = v60;
  }
  return a1;
}

uint64_t *sub_1D79AC81C(uint64_t *a1)
{
  return a1;
}

uint64_t *sub_1D79AC84C(uint64_t *a1)
{
  return a1;
}

uint64_t sub_1D79AC87C(uint64_t a1)
{
  return a1;
}

__n128 __swift_memcpy128_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[1];
  long long v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  __n128 result = (__n128)a2[4];
  long long v6 = a2[5];
  long long v7 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v7;
  *(__n128 *)(a1 + 64) = result;
  *(_OWORD *)(a1 + 80) = v6;
  return result;
}

uint64_t assignWithTake for ISO18013SessionTranscript(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void *)(a1 + 8);
  if (v4 >> 60 == 15) {
    goto LABEL_4;
  }
  unint64_t v5 = *(void *)(a2 + 8);
  if (v5 >> 60 == 15)
  {
    sub_1D79AC84C((uint64_t *)a1);
LABEL_4:
    long long v6 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v6;
    long long v7 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v7;
    goto LABEL_19;
  }
  uint64_t v8 = *(void *)a1;
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v5;
  sub_1D78607E8(v8, v4);
  long long v9 = (_OWORD *)(a2 + 16);
  unint64_t v10 = *(void *)(a1 + 24);
  if (v10 >> 60 == 15) {
    goto LABEL_8;
  }
  unint64_t v11 = *(void *)(a2 + 24);
  if (v11 >> 60 == 15)
  {
    sub_1D7870C24(a1 + 16);
LABEL_8:
    *(_OWORD *)(a1 + 16) = *v9;
    goto LABEL_10;
  }
  uint64_t v12 = *(void *)(a1 + 16);
  *(void *)(a1 + 16) = *(void *)v9;
  *(void *)(a1 + 24) = v11;
  sub_1D78607E8(v12, v10);
LABEL_10:
  unint64_t v13 = *(void *)(a1 + 40);
  if (v13 >> 60 == 15)
  {
LABEL_13:
    long long v15 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v15;
    goto LABEL_19;
  }
  unint64_t v14 = *(void *)(a2 + 40);
  if (v14 >> 60 == 15)
  {
    sub_1D79AC81C((uint64_t *)(a1 + 32));
    goto LABEL_13;
  }
  uint64_t v16 = *(void *)(a1 + 32);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v14;
  sub_1D78607E8(v16, v13);
  uint64_t v17 = (_OWORD *)(a2 + 48);
  unint64_t v18 = *(void *)(a1 + 56);
  if (v18 >> 60 == 15) {
    goto LABEL_17;
  }
  unint64_t v19 = *(void *)(a2 + 56);
  if (v19 >> 60 == 15)
  {
    sub_1D7870C24(a1 + 48);
LABEL_17:
    *(_OWORD *)(a1 + 48) = *v17;
    goto LABEL_19;
  }
  uint64_t v20 = *(void *)(a1 + 48);
  *(void *)(a1 + 48) = *(void *)v17;
  *(void *)(a1 + 56) = v19;
  sub_1D78607E8(v20, v18);
LABEL_19:
  if (!*(void *)(a1 + 88))
  {
LABEL_23:
    long long v27 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v27;
    long long v28 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v28;
    return a1;
  }
  uint64_t v21 = *(void *)(a2 + 88);
  if (!v21)
  {
    sub_1D79AC87C(a1 + 64);
    goto LABEL_23;
  }
  uint64_t v22 = *(void *)(a1 + 64);
  unint64_t v23 = *(void *)(a1 + 72);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  sub_1D78607E8(v22, v23);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v21;
  swift_bridgeObjectRelease();
  uint64_t v24 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v24;
  swift_bridgeObjectRelease();
  uint64_t v25 = *(void *)(a1 + 112);
  unint64_t v26 = *(void *)(a1 + 120);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  sub_1D78607E8(v25, v26);
  return a1;
}

uint64_t getEnumTagSinglePayload for ISO18013SessionTranscript(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 128)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 88);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ISO18013SessionTranscript(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 120) = 0;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 128) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 128) = 0;
    }
    if (a2) {
      *(void *)(result + 88) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ISO18013SessionTranscript()
{
  return &type metadata for ISO18013SessionTranscript;
}

uint64_t destroy for ISO18013PhysicalSessionTranscript(uint64_t *a1)
{
  uint64_t result = sub_1D78607E8(*a1, a1[1]);
  unint64_t v3 = a1[3];
  if (v3 >> 60 != 15) {
    uint64_t result = sub_1D78607E8(a1[2], v3);
  }
  unint64_t v4 = a1[5];
  if (v4 >> 60 != 15)
  {
    uint64_t result = sub_1D78607E8(a1[4], v4);
    unint64_t v5 = a1[7];
    if (v5 >> 60 != 15)
    {
      uint64_t v6 = a1[6];
      return sub_1D78607E8(v6, v5);
    }
  }
  return result;
}

uint64_t initializeWithCopy for ISO18013PhysicalSessionTranscript(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  unint64_t v5 = *(void *)(a2 + 8);
  sub_1D7860790(*(void *)a2, v5);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  uint64_t v6 = (uint64_t *)(a2 + 16);
  unint64_t v7 = *(void *)(a2 + 24);
  if (v7 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 16) = *(_OWORD *)v6;
  }
  else
  {
    uint64_t v8 = *v6;
    sub_1D7860790(*v6, *(void *)(a2 + 24));
    *(void *)(a1 + 16) = v8;
    *(void *)(a1 + 24) = v7;
  }
  unint64_t v9 = *(void *)(a2 + 40);
  if (v9 >> 60 == 15)
  {
    long long v10 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v10;
  }
  else
  {
    uint64_t v11 = *(void *)(a2 + 32);
    sub_1D7860790(v11, *(void *)(a2 + 40));
    *(void *)(a1 + 32) = v11;
    *(void *)(a1 + 40) = v9;
    uint64_t v12 = (uint64_t *)(a2 + 48);
    unint64_t v13 = *(void *)(a2 + 56);
    if (v13 >> 60 == 15)
    {
      *(_OWORD *)(a1 + 48) = *(_OWORD *)v12;
    }
    else
    {
      uint64_t v14 = *v12;
      sub_1D7860790(*v12, v13);
      *(void *)(a1 + 48) = v14;
      *(void *)(a1 + 56) = v13;
    }
  }
  return a1;
}

uint64_t assignWithCopy for ISO18013PhysicalSessionTranscript(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  unint64_t v5 = *(void *)(a2 + 8);
  sub_1D7860790(*(void *)a2, v5);
  uint64_t v6 = *(void *)a1;
  unint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  sub_1D78607E8(v6, v7);
  uint64_t v8 = (uint64_t *)(a2 + 16);
  unint64_t v9 = *(void *)(a2 + 24);
  if (*(void *)(a1 + 24) >> 60 == 15)
  {
    if (v9 >> 60 != 15)
    {
      uint64_t v10 = *v8;
      sub_1D7860790(*v8, *(void *)(a2 + 24));
      *(void *)(a1 + 16) = v10;
      *(void *)(a1 + 24) = v9;
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v9 >> 60 == 15)
  {
    sub_1D7870C24(a1 + 16);
LABEL_6:
    *(_OWORD *)(a1 + 16) = *(_OWORD *)v8;
    goto LABEL_8;
  }
  uint64_t v11 = *v8;
  sub_1D7860790(*v8, *(void *)(a2 + 24));
  uint64_t v12 = *(void *)(a1 + 16);
  unint64_t v13 = *(void *)(a1 + 24);
  *(void *)(a1 + 16) = v11;
  *(void *)(a1 + 24) = v9;
  sub_1D78607E8(v12, v13);
LABEL_8:
  uint64_t v14 = (_OWORD *)(a1 + 32);
  long long v15 = (_OWORD *)(a2 + 32);
  unint64_t v16 = *(void *)(a2 + 40);
  if (*(void *)(a1 + 40) >> 60 != 15)
  {
    if (v16 >> 60 == 15)
    {
      sub_1D79AC81C((uint64_t *)(a1 + 32));
      long long v18 = *(_OWORD *)(a2 + 48);
      *uint64_t v14 = *v15;
      *(_OWORD *)(a1 + 48) = v18;
      return a1;
    }
    uint64_t v22 = *(void *)(a2 + 32);
    sub_1D7860790(v22, *(void *)(a2 + 40));
    uint64_t v23 = *(void *)(a1 + 32);
    unint64_t v24 = *(void *)(a1 + 40);
    *(void *)(a1 + 32) = v22;
    *(void *)(a1 + 40) = v16;
    sub_1D78607E8(v23, v24);
    uint64_t v25 = (uint64_t *)(a2 + 48);
    unint64_t v21 = *(void *)(a2 + 56);
    if (*(void *)(a1 + 56) >> 60 == 15)
    {
      if (v21 >> 60 != 15)
      {
        uint64_t v26 = *v25;
        goto LABEL_19;
      }
    }
    else
    {
      if (v21 >> 60 != 15)
      {
        uint64_t v27 = *v25;
        sub_1D7860790(*v25, v21);
        uint64_t v28 = *(void *)(a1 + 48);
        unint64_t v29 = *(void *)(a1 + 56);
        *(void *)(a1 + 48) = v27;
        *(void *)(a1 + 56) = v21;
        sub_1D78607E8(v28, v29);
        return a1;
      }
      sub_1D7870C24(a1 + 48);
    }
    *(_OWORD *)(a1 + 48) = *(_OWORD *)v25;
    return a1;
  }
  if (v16 >> 60 != 15)
  {
    uint64_t v19 = *(void *)(a2 + 32);
    sub_1D7860790(v19, *(void *)(a2 + 40));
    *(void *)(a1 + 32) = v19;
    *(void *)(a1 + 40) = v16;
    uint64_t v20 = (_OWORD *)(a2 + 48);
    unint64_t v21 = *(void *)(a2 + 56);
    if (v21 >> 60 == 15)
    {
      *(_OWORD *)(a1 + 48) = *v20;
      return a1;
    }
    uint64_t v26 = *(void *)v20;
LABEL_19:
    sub_1D7860790(v26, v21);
    *(void *)(a1 + 48) = v26;
    *(void *)(a1 + 56) = v21;
    return a1;
  }
  long long v17 = *(_OWORD *)(a2 + 48);
  *uint64_t v14 = *v15;
  *(_OWORD *)(a1 + 48) = v17;
  return a1;
}

uint64_t assignWithTake for ISO18013PhysicalSessionTranscript(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a1;
  unint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  sub_1D78607E8(v4, v5);
  uint64_t v6 = (_OWORD *)(a2 + 16);
  unint64_t v7 = *(void *)(a1 + 24);
  if (v7 >> 60 == 15) {
    goto LABEL_4;
  }
  unint64_t v8 = *(void *)(a2 + 24);
  if (v8 >> 60 == 15)
  {
    sub_1D7870C24(a1 + 16);
LABEL_4:
    *(_OWORD *)(a1 + 16) = *v6;
    goto LABEL_6;
  }
  uint64_t v9 = *(void *)(a1 + 16);
  *(void *)(a1 + 16) = *(void *)v6;
  *(void *)(a1 + 24) = v8;
  sub_1D78607E8(v9, v7);
LABEL_6:
  unint64_t v10 = *(void *)(a1 + 40);
  if (v10 >> 60 == 15)
  {
LABEL_9:
    long long v12 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v12;
    return a1;
  }
  unint64_t v11 = *(void *)(a2 + 40);
  if (v11 >> 60 == 15)
  {
    sub_1D79AC81C((uint64_t *)(a1 + 32));
    goto LABEL_9;
  }
  uint64_t v13 = *(void *)(a1 + 32);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v11;
  sub_1D78607E8(v13, v10);
  uint64_t v14 = (void *)(a2 + 48);
  unint64_t v15 = *(void *)(a1 + 56);
  if (v15 >> 60 != 15)
  {
    unint64_t v16 = *(void *)(a2 + 56);
    if (v16 >> 60 != 15)
    {
      uint64_t v17 = *(void *)(a1 + 48);
      *(void *)(a1 + 48) = *v14;
      *(void *)(a1 + 56) = v16;
      sub_1D78607E8(v17, v15);
      return a1;
    }
    sub_1D7870C24(a1 + 48);
  }
  *(_OWORD *)(a1 + 48) = *(_OWORD *)v14;
  return a1;
}

uint64_t getEnumTagSinglePayload for ISO18013PhysicalSessionTranscript(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xD && *(unsigned char *)(a1 + 64)) {
    return (*(_DWORD *)a1 + 13);
  }
  unsigned int v3 = (((*(void *)(a1 + 8) >> 60) >> 2) & 0xFFFFFFF3 | (4 * ((*(void *)(a1 + 8) >> 60) & 3))) ^ 0xF;
  if (v3 >= 0xC) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for ISO18013PhysicalSessionTranscript(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xC)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 - 13;
    if (a3 >= 0xD) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if (a3 >= 0xD) {
      *(unsigned char *)(result + 64) = 0;
    }
    if (a2)
    {
      *(void *)uint64_t result = 0;
      *(void *)(result + 8) = (unint64_t)(((-a2 >> 2) & 3) - 4 * a2) << 60;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ISO18013PhysicalSessionTranscript()
{
  return &type metadata for ISO18013PhysicalSessionTranscript;
}

ValueMetadata *type metadata accessor for ISO18013AppleSessionTranscript()
{
  return &type metadata for ISO18013AppleSessionTranscript;
}

uint64_t destroy for ISO18013NFCHandover(uint64_t *a1)
{
  uint64_t result = sub_1D78607E8(*a1, a1[1]);
  unint64_t v3 = a1[3];
  if (v3 >> 60 != 15)
  {
    uint64_t v4 = a1[2];
    return sub_1D78607E8(v4, v3);
  }
  return result;
}

uint64_t initializeWithCopy for ISO18013NFCHandover(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  unint64_t v5 = a2[1];
  sub_1D7860790(*a2, v5);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  uint64_t v6 = a2 + 2;
  unint64_t v7 = a2[3];
  if (v7 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 16) = *(_OWORD *)v6;
  }
  else
  {
    uint64_t v8 = *v6;
    sub_1D7860790(*v6, v7);
    *(void *)(a1 + 16) = v8;
    *(void *)(a1 + 24) = v7;
  }
  return a1;
}

uint64_t *assignWithCopy for ISO18013NFCHandover(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  unint64_t v5 = a2[1];
  sub_1D7860790(*a2, v5);
  uint64_t v6 = *a1;
  unint64_t v7 = a1[1];
  *a1 = v4;
  a1[1] = v5;
  sub_1D78607E8(v6, v7);
  uint64_t v8 = a2 + 2;
  unint64_t v9 = a2[3];
  if ((unint64_t)a1[3] >> 60 != 15)
  {
    if (v9 >> 60 != 15)
    {
      uint64_t v11 = *v8;
      sub_1D7860790(*v8, v9);
      uint64_t v12 = a1[2];
      unint64_t v13 = a1[3];
      a1[2] = v11;
      a1[3] = v9;
      sub_1D78607E8(v12, v13);
      return a1;
    }
    sub_1D7870C24((uint64_t)(a1 + 2));
    goto LABEL_6;
  }
  if (v9 >> 60 == 15)
  {
LABEL_6:
    *((_OWORD *)a1 + 1) = *(_OWORD *)v8;
    return a1;
  }
  uint64_t v10 = *v8;
  sub_1D7860790(*v8, v9);
  a1[2] = v10;
  a1[3] = v9;
  return a1;
}

uint64_t *assignWithTake for ISO18013NFCHandover(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  unint64_t v5 = a1[1];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  sub_1D78607E8(v4, v5);
  uint64_t v6 = (uint64_t *)(a2 + 16);
  unint64_t v7 = a1[3];
  if (v7 >> 60 != 15)
  {
    unint64_t v8 = *(void *)(a2 + 24);
    if (v8 >> 60 != 15)
    {
      uint64_t v9 = a1[2];
      a1[2] = *v6;
      a1[3] = v8;
      sub_1D78607E8(v9, v7);
      return a1;
    }
    sub_1D7870C24((uint64_t)(a1 + 2));
  }
  *((_OWORD *)a1 + 1) = *(_OWORD *)v6;
  return a1;
}

uint64_t getEnumTagSinglePayload for ISO18013NFCHandover(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xD && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 13);
  }
  unsigned int v3 = (((*(void *)(a1 + 8) >> 60) >> 2) & 0xFFFFFFF3 | (4 * ((*(void *)(a1 + 8) >> 60) & 3))) ^ 0xF;
  if (v3 >= 0xC) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for ISO18013NFCHandover(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xC)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)uint64_t result = a2 - 13;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xD) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if (a3 >= 0xD) {
      *(unsigned char *)(result + 32) = 0;
    }
    if (a2)
    {
      *(void *)uint64_t result = 0;
      *(void *)(result + 8) = (unint64_t)(((-a2 >> 2) & 3) - 4 * a2) << 60;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ISO18013NFCHandover()
{
  return &type metadata for ISO18013NFCHandover;
}

uint64_t destroy for DigitalPresentmentResponseCryptor(uint64_t *a1)
{
  sub_1D78607E8(*a1, a1[1]);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v2 = a1[6];
  unint64_t v3 = a1[7];
  return sub_1D78607E8(v2, v3);
}

uint64_t *initializeWithCopy for DigitalPresentmentResponseCryptor(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  unint64_t v5 = a2[1];
  sub_1D7860790(*a2, v5);
  *a1 = v4;
  a1[1] = v5;
  uint64_t v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  uint64_t v7 = a2[5];
  a1[4] = a2[4];
  a1[5] = v7;
  uint64_t v9 = a2[6];
  unint64_t v8 = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1D7860790(v9, v8);
  a1[6] = v9;
  a1[7] = v8;
  return a1;
}

uint64_t *assignWithCopy for DigitalPresentmentResponseCryptor(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  unint64_t v5 = a2[1];
  sub_1D7860790(*a2, v5);
  uint64_t v6 = *a1;
  unint64_t v7 = a1[1];
  *a1 = v4;
  a1[1] = v5;
  sub_1D78607E8(v6, v7);
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v9 = a2[6];
  unint64_t v8 = a2[7];
  sub_1D7860790(v9, v8);
  uint64_t v10 = a1[6];
  unint64_t v11 = a1[7];
  a1[6] = v9;
  a1[7] = v8;
  sub_1D78607E8(v10, v11);
  return a1;
}

uint64_t *assignWithTake for DigitalPresentmentResponseCryptor(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  unint64_t v5 = a1[1];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  sub_1D78607E8(v4, v5);
  uint64_t v6 = *(void *)(a2 + 24);
  a1[2] = *(void *)(a2 + 16);
  a1[3] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 40);
  a1[4] = *(void *)(a2 + 32);
  a1[5] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a1[6];
  unint64_t v9 = a1[7];
  *((_OWORD *)a1 + 3) = *(_OWORD *)(a2 + 48);
  sub_1D78607E8(v8, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for DigitalPresentmentResponseCryptor(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 64)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DigitalPresentmentResponseCryptor(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ISO18013AppleHandover()
{
  return &type metadata for ISO18013AppleHandover;
}

uint64_t DeveloperTestJapanNationalIDCardCredentialBuilder.age.getter()
{
  return *(void *)v0;
}

uint64_t DeveloperTestJapanNationalIDCardCredentialBuilder.isoBirthDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for DeveloperTestJapanNationalIDCardCredentialBuilder() + 20);
  uint64_t v4 = sub_1D7A9B148();
  unint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for DeveloperTestJapanNationalIDCardCredentialBuilder()
{
  uint64_t result = qword_1EA845BD0;
  if (!qword_1EA845BD0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t DeveloperTestJapanNationalIDCardCredentialBuilder.japanBirthDate.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for DeveloperTestJapanNationalIDCardCredentialBuilder() + 24));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DeveloperTestJapanNationalIDCardCredentialBuilder.birthDateComponents.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for DeveloperTestJapanNationalIDCardCredentialBuilder() + 28);
  uint64_t v4 = sub_1D7A9AD28();
  unint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t DeveloperTestJapanNationalIDCardCredentialBuilder.fullName.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for DeveloperTestJapanNationalIDCardCredentialBuilder() + 32));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DeveloperTestJapanNationalIDCardCredentialBuilder.individualNumber.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for DeveloperTestJapanNationalIDCardCredentialBuilder() + 36));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DeveloperTestJapanNationalIDCardCredentialBuilder.isoSex.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for DeveloperTestJapanNationalIDCardCredentialBuilder() + 40));
}

uint64_t DeveloperTestJapanNationalIDCardCredentialBuilder.japanSex.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for DeveloperTestJapanNationalIDCardCredentialBuilder() + 44));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DeveloperTestJapanNationalIDCardCredentialBuilder.localGovernmentCode.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for DeveloperTestJapanNationalIDCardCredentialBuilder() + 48));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DeveloperTestJapanNationalIDCardCredentialBuilder.portrait.getter()
{
  uint64_t v1 = v0 + *(int *)(type metadata accessor for DeveloperTestJapanNationalIDCardCredentialBuilder() + 52);
  uint64_t v2 = *(void *)v1;
  sub_1D7860790(*(void *)v1, *(void *)(v1 + 8));
  return v2;
}

uint64_t DeveloperTestJapanNationalIDCardCredentialBuilder.residentAddress.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for DeveloperTestJapanNationalIDCardCredentialBuilder() + 56));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DeveloperTestJapanNationalIDCardCredentialBuilder.payloadElements.getter()
{
  type metadata accessor for DeveloperTestJapanNationalIDCardCredentialBuilder();
  return swift_bridgeObjectRetain();
}

uint64_t DeveloperTestJapanNationalIDCardCredentialBuilder.init()@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v290 = sub_1D7A9AE98();
  v283 = *(void (***)(char *, uint64_t))(v290 - 8);
  MEMORY[0x1F4188790](v290, v2, v3, v4, v5, v6, v7, v8);
  v289 = (char *)&v263 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1D7A9B228();
  MEMORY[0x1F4188790](v10 - 8, v11, v12, v13, v14, v15, v16, v17);
  v288 = (char *)&v263 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v287 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8432D0);
  unint64_t v282 = *(void *)(v287 - 8);
  uint64_t v26 = MEMORY[0x1F4188790](v287, v19, v20, v21, v22, v23, v24, v25);
  v286 = (char *)&v263 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v26, v28, v29, v30, v31, v32, v33, v34);
  v285 = (char *)&v263 - v35;
  uint64_t v296 = type metadata accessor for CredentialBuilderPayloadDetails.Element(0);
  *(void *)&long long v299 = *(void *)(v296 - 8);
  MEMORY[0x1F4188790](v296, v36, v37, v38, v39, v40, v41, v42);
  v284 = (char *)&v263 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v295 = sub_1D7A9AF68();
  v291 = *(void (***)(int *, uint64_t, uint64_t, uint64_t))(v295 - 8);
  MEMORY[0x1F4188790](v295, v44, v45, v46, v47, v48, v49, v50);
  *(void *)&long long v292 = (char *)&v263 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8477F0);
  uint64_t v60 = MEMORY[0x1F4188790](v52 - 8, v53, v54, v55, v56, v57, v58, v59);
  v281 = (uint64_t *)((char *)&v263 - ((v61 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v60, v62, v63, v64, v65, v66, v67, v68);
  v294 = (int *)((char *)&v263 - v69);
  uint64_t v293 = sub_1D7A9AD28();
  uint64_t v279 = *(void *)(v293 - 8);
  MEMORY[0x1F4188790](v293, v70, v71, v72, v73, v74, v75, v76);
  unint64_t v278 = (unint64_t)&v263 - ((v77 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF9118);
  MEMORY[0x1F4188790](v78 - 8, v79, v80, v81, v82, v83, v84, v85);
  v275 = (char *)&v263 - ((v86 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v297 = sub_1D7A9B148();
  v298 = *(char **)(v297 - 8);
  uint64_t v94 = MEMORY[0x1F4188790](v297, v87, v88, v89, v90, v91, v92, v93);
  v277 = (char *)&v263 - ((v95 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v94, v96, v97, v98, v99, v100, v101, v102);
  v276 = (char *)&v263 - v103;
  uint64_t v104 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA845BC0);
  MEMORY[0x1F4188790](v104 - 8, v105, v106, v107, v108, v109, v110, v111);
  uint64_t v112 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA845BC8);
  MEMORY[0x1F4188790](v112 - 8, v113, v114, v115, v116, v117, v118, v119);
  uint64_t v121 = (char *)&v263 - ((v120 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v122 = sub_1D7A9B238();
  uint64_t v123 = *(void *)(v122 - 8);
  MEMORY[0x1F4188790](v122, v124, v125, v126, v127, v128, v129, v130);
  uint64_t v132 = (char *)&v263 - ((v131 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v133 = sub_1D7A9B2B8();
  uint64_t v134 = *(void *)(v133 - 8);
  MEMORY[0x1F4188790](v133, v135, v136, v137, v138, v139, v140, v141);
  uint64_t v143 = (char *)&v263 - ((v142 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v144 = type metadata accessor for DeveloperTestJapanNationalIDCardCredentialBuilder();
  uint64_t v145 = (uint64_t *)((char *)a1 + *(int *)(v144 + 24));
  unint64_t v266 = (unint64_t)"red12CoreIDVAsset";
  *uint64_t v145 = 0xD000000000000014;
  v145[1] = 0x80000001D7AC0FC0;
  char v146 = (char *)a1 + *(int *)(v144 + 32);
  strcpy(v146, "Kelly Garcia");
  v146[13] = 0;
  *((_WORD *)v146 + 7) = -5120;
  uint64_t v147 = (uint64_t *)((char *)a1 + *(int *)(v144 + 36));
  *uint64_t v147 = 0x3837363534333231;
  v147[1] = 0xE900000000000039;
  *(uint64_t *)((char *)a1 + *(int *)(v144 + 40)) = 2;
  uint64_t v148 = (uint64_t *)((char *)a1 + *(int *)(v144 + 44));
  *uint64_t v148 = 50;
  v148[1] = 0xE100000000000000;
  uint64_t v149 = (uint64_t *)((char *)a1 + *(int *)(v144 + 48));
  *uint64_t v149 = 0x3233343536373839;
  v149[1] = 0xE900000000000031;
  uint64_t v150 = (uint64_t *)((char *)a1 + *(int *)(v144 + 56));
  unint64_t v268 = (unint64_t)"unknown AppleHandover version ";
  *uint64_t v150 = 0xD000000000000029;
  v150[1] = 0x80000001D7AC6DC0;
  (*(void (**)(char *, void, uint64_t))(v123 + 104))(v132, *MEMORY[0x1E4F27B20], v122);
  sub_1D7A9B248();
  (*(void (**)(char *, uint64_t))(v123 + 8))(v132, v122);
  uint64_t v151 = *(void (**)(char *, char *, uint64_t))(v134 + 16);
  v280 = v143;
  uint64_t v152 = v143;
  uint64_t v153 = a1;
  uint64_t v154 = (uint64_t)v275;
  v151(v121, v152, v133);
  uint64_t v270 = v134;
  uint64_t v155 = *(void (**)(char *, void, uint64_t, uint64_t))(v134 + 56);
  uint64_t v271 = v133;
  v155(v121, 0, 1, v133);
  sub_1D7A9B2C8();
  uint64_t v156 = v297;
  uint64_t v157 = v298;
  sub_1D7A9AD18();
  sub_1D7A9ACE8();
  if ((*((unsigned int (**)(uint64_t, uint64_t, uint64_t))v157 + 6))(v154, 1, v156) == 1)
  {
    uint64_t v158 = v276;
    sub_1D7A9B0A8();
    sub_1D7871C4C(v154, &qword_1EBDF9118);
    uint64_t v159 = (void (*)(char *, uint64_t, uint64_t))*((void *)v157 + 4);
  }
  else
  {
    uint64_t v159 = (void (*)(char *, uint64_t, uint64_t))*((void *)v157 + 4);
    uint64_t v158 = v276;
    v159(v276, v154, v156);
  }
  uint64_t v160 = (char *)v153 + *(int *)(v144 + 20);
  v159(v160, (uint64_t)v158, v156);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8432B0);
  uint64_t v161 = sub_1D7A9B2A8();
  uint64_t v162 = *(void *)(v161 - 8);
  unint64_t v163 = (*(unsigned __int8 *)(v162 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v162 + 80);
  uint64_t v164 = swift_allocObject();
  long long v267 = xmmword_1D7AA08E0;
  *(_OWORD *)(v164 + 16) = xmmword_1D7AA08E0;
  (*(void (**)(unint64_t, void, uint64_t))(v162 + 104))(v164 + v163, *MEMORY[0x1E4F27C20], v161);
  sub_1D78CD99C(v164);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  uint64_t v165 = v277;
  sub_1D7A9B138();
  unint64_t v166 = v278;
  v273 = v160;
  sub_1D7A9B258();
  swift_bridgeObjectRelease();
  (*((void (**)(char *, uint64_t))v157 + 1))(v165, v156);
  uint64_t v167 = sub_1D7A9ACF8();
  LOBYTE(v165) = v168;
  (*(void (**)(unint64_t, uint64_t))(v279 + 8))(v166, v293);
  if (v165) {
    uint64_t v169 = -1;
  }
  else {
    uint64_t v169 = v167;
  }
  uint64_t v293 = v169;
  uint64_t *v153 = v169;
  os_log_type_t v170 = v294;
  id v171 = v291;
  if (qword_1EA841638 != -1) {
LABEL_25:
  }
    swift_once();
  id v172 = (void *)qword_1EA86F340;
  id v173 = (void *)sub_1D7A9BF98();
  unint64_t v174 = (void *)sub_1D7A9BF98();
  id v175 = objc_msgSend(v172, sel_URLForResource_withExtension_, v173, v174);

  uint64_t v176 = v295;
  if (v175)
  {
    sub_1D7A9AF38();

    uint64_t v177 = 0;
  }
  else
  {
    uint64_t v177 = 1;
  }
  v171[7](v170, v177, 1, v176);
  uint64_t v178 = v281;
  sub_1D78CDC8C((uint64_t)v170, (uint64_t)v281);
  if (((unsigned int (*)(void *, uint64_t, uint64_t))v171[6])(v178, 1, v176) == 1)
  {
    uint64_t v179 = 0;
    unint64_t v180 = 0xC000000000000000;
  }
  else
  {
    ((void (*)(void, void *, uint64_t))v171[4])(v292, v178, v176);
    uint64_t v179 = sub_1D7A9AF88();
    unint64_t v180 = v181;
    ((void (*)(void, uint64_t))v171[1])(v292, v176);
  }
  uint64_t v279 = v179;
  unint64_t v278 = v180;
  sub_1D7871C4C((uint64_t)v170, &qword_1EA8477F0);
  uint64_t v269 = v144;
  uint64_t v182 = *(int *)(v144 + 52);
  v272 = v153;
  os_log_type_t v183 = (uint64_t *)((char *)v153 + v182);
  *os_log_type_t v183 = v179;
  v183[1] = v180;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8432B8);
  uint64_t inited = swift_initStackObject();
  long long v292 = xmmword_1D7AA4E80;
  *(_OWORD *)(inited + 16) = xmmword_1D7AA4E80;
  *(void *)(inited + 32) = 0x2E6F73692E67726FLL;
  *(void *)(inited + 40) = 0xEF312E3032323332;
  v276 = (char *)inited;
  uint64_t v185 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA843050);
  unint64_t v186 = *(int **)(v299 + 72);
  uint64_t v187 = *(unsigned __int8 *)(v299 + 80);
  uint64_t v188 = (v187 + 32) & ~v187;
  v277 = (char *)(2 * (void)v186);
  uint64_t v265 = 3 * (void)v186;
  v275 = (char *)v185;
  uint64_t v274 = v187 | 7;
  uint64_t v189 = swift_allocObject();
  *(_OWORD *)(v189 + 16) = v292;
  uint64_t v295 = v188;
  uint64_t v264 = v189;
  uint64_t v190 = v189 + v188;
  uint64_t v191 = v296;
  os_log_type_t v192 = (char *)(v190 + *(int *)(v296 + 20));
  id v193 = (int *)type metadata accessor for AnyCodable();
  id v194 = &v192[v193[9]];
  uint64_t v195 = v297;
  (*((void (**)(char *, char *, uint64_t))v157 + 2))(v194, v273, v297);
  *os_log_type_t v192 = 2;
  *((void *)v192 + 1) = 0;
  v192[16] = 1;
  *((void *)v192 + 3) = 0;
  v192[32] = 1;
  *((_DWORD *)v192 + 9) = 0;
  v192[40] = 1;
  *((void *)v192 + 6) = 0;
  v192[56] = 1;
  os_log_type_t v196 = (void (**)(int *, uint64_t, uint64_t, uint64_t))*((void *)v157 + 7);
  ((void (*)(char *, void, uint64_t, uint64_t))v196)(v194, 0, 1, v195);
  v197 = &v192[v193[10]];
  *(void *)v197 = 0;
  *((void *)v197 + 1) = 0;
  *(void *)&v192[v193[11]] = 0;
  *(void *)&v192[v193[12]] = 0;
  *(void *)&v192[v193[13]] = 0;
  uint64_t v198 = v193[14];
  long long v299 = xmmword_1D7AA0AC0;
  *(_OWORD *)&v192[v198] = xmmword_1D7AA0AC0;
  *(void *)uint64_t v190 = 0x61645F6874726962;
  *(void *)(v190 + 8) = 0xEA00000000006574;
  v294 = v186;
  uint64_t v199 = (char *)v186 + v190;
  unint64_t v200 = (char *)v186 + v190 + *(int *)(v191 + 20);
  *unint64_t v200 = 2;
  *((void *)v200 + 1) = 2;
  v200[16] = 0;
  *((void *)v200 + 3) = 0;
  v200[32] = 1;
  *((_DWORD *)v200 + 9) = 0;
  v200[40] = 1;
  *((void *)v200 + 6) = 0;
  v200[56] = 1;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v196)(&v200[v193[9]], 1, 1, v195);
  v201 = &v200[v193[10]];
  *(void *)v201 = 0;
  *((void *)v201 + 1) = 0;
  *(void *)&v200[v193[11]] = 0;
  *(void *)&v200[v193[12]] = 0;
  *(void *)&v200[v193[13]] = 0;
  *(_OWORD *)&v200[v193[14]] = v299;
  *(void *)uint64_t v199 = 7890291;
  *((void *)v199 + 1) = 0xE300000000000000;
  v202 = &v277[v190];
  uint64_t v203 = &v202[*(int *)(v191 + 20)];
  *uint64_t v203 = 2;
  *((void *)v203 + 1) = v293;
  v203[16] = 0;
  *((void *)v203 + 3) = 0;
  v203[32] = 1;
  *((_DWORD *)v203 + 9) = 0;
  v203[40] = 1;
  *((void *)v203 + 6) = 0;
  v203[56] = 1;
  os_log_type_t v204 = &v203[v193[9]];
  v298 = v157 + 56;
  v291 = v196;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v196)(v204, 1, 1, v195);
  v205 = &v203[v193[10]];
  *(void *)v205 = 0;
  *((void *)v205 + 1) = 0;
  *(void *)&v203[v193[11]] = 0;
  *(void *)&v203[v193[12]] = 0;
  *(void *)&v203[v193[13]] = 0;
  *(void *)&long long v292 = v193;
  *(_OWORD *)&v203[v193[14]] = v299;
  strcpy(v202, "age_in_years");
  v202[13] = 0;
  *((_WORD *)v202 + 7) = -5120;
  sub_1D7860790(v279, v278);
  uint64_t v304 = MEMORY[0x1E4FBC860];
  uint64_t v144 = 100;
  uint64_t result = sub_1D78AB5C8(0, 100, 0);
  uint64_t v153 = 0;
  BOOL v207 = 0;
  uint64_t v208 = v304;
  ++v283;
  v281 = (void *)(v282 + 8);
  unint64_t v282 = 0xE90000000000005FLL;
  uint64_t v157 = v286;
  while (!v207)
  {
    uint64_t v302 = 0x7265766F5F656761;
    unint64_t v303 = v282;
    v300 = v153;
    sub_1D7A9B1D8();
    sub_1D78CDF34();
    sub_1D7A9AD88();
    uint64_t v301 = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8432D8);
    sub_1D7871DDC(&qword_1EA8432E0, &qword_1EA8432D8);
    unint64_t v209 = v289;
    sub_1D7A9AE88();
    uint64_t v210 = v285;
    uint64_t v211 = v287;
    MEMORY[0x1D9479B10](v209, v287);
    (*v283)(v209, v290);
    id v212 = (void (*)(char *, uint64_t))*v281;
    ((void (*)(char *, uint64_t))*v281)(v157, v211);
    sub_1D7871DDC(&qword_1EA8432E8, &qword_1EA8432D0);
    sub_1D7A9CA78();
    v212(v210, v211);
    sub_1D7A9C128();
    swift_bridgeObjectRelease();
    uint64_t v213 = v302;
    unint64_t v214 = v303;
    v215 = (uint64_t *)v284;
    v216 = &v284[*(int *)(v296 + 20)];
    char *v216 = v293 >= (uint64_t)v153;
    *((void *)v216 + 1) = 0;
    v216[16] = 1;
    *((void *)v216 + 3) = 0;
    v216[32] = 1;
    *((_DWORD *)v216 + 9) = 0;
    v216[40] = 1;
    *((void *)v216 + 6) = 0;
    v216[56] = 1;
    os_log_type_t v170 = (int *)v292;
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v291)(&v216[*(int *)(v292 + 36)], 1, 1, v297);
    uint64_t v217 = &v216[v170[10]];
    *(void *)uint64_t v217 = 0;
    *((void *)v217 + 1) = 0;
    *(void *)&v216[v170[11]] = 0;
    *(void *)&v216[v170[12]] = 0;
    *(void *)&v216[v170[13]] = 0;
    *(_OWORD *)&v216[v170[14]] = v299;
    uint64_t *v215 = v213;
    v215[1] = v214;
    uint64_t v304 = v208;
    unint64_t v219 = *(void *)(v208 + 16);
    unint64_t v218 = *(void *)(v208 + 24);
    id v171 = (void (**)(int *, uint64_t, uint64_t, uint64_t))(v219 + 1);
    if (v219 >= v218 >> 1)
    {
      sub_1D78AB5C8(v218 > 1, v219 + 1, 1);
      uint64_t v208 = v304;
    }
    *(void *)(v208 + 16) = v171;
    uint64_t result = sub_1D79AF4A4((uint64_t)v215, v208 + v295 + v219 * (void)v294);
    BOOL v207 = v153 == (uint64_t *)99;
    if (v153 == (uint64_t *)99)
    {
      uint64_t v153 = 0;
    }
    else
    {
      BOOL v220 = __OFADD__(v153, 1);
      uint64_t v153 = (uint64_t *)((char *)v153 + 1);
      if (v220)
      {
        __break(1u);
        goto LABEL_25;
      }
    }
    if (!--v144)
    {
      uint64_t v302 = v264;
      sub_1D78CC9D0(v208);
      unint64_t v221 = v276;
      *((void *)v276 + 6) = v302;
      *((void *)v221 + 7) = 0xD000000000000012;
      *((void *)v221 + 8) = 0x80000001D7ABBF00;
      uint64_t v222 = v295;
      v223 = v294;
      uint64_t v224 = swift_allocObject();
      uint64_t v293 = v224;
      *(_OWORD *)(v224 + 16) = xmmword_1D7AB42E0;
      uint64_t v225 = v224 + v222;
      uint64_t v226 = v296;
      uint64_t v227 = v224 + v222 + *(int *)(v296 + 20);
      *(unsigned char *)uint64_t v227 = 2;
      *(void *)(v227 + 8) = 0;
      *(unsigned char *)(v227 + 16) = 1;
      *(void *)(v227 + 24) = 0;
      *(unsigned char *)(v227 + 32) = 1;
      *(_DWORD *)(v227 + 36) = 0;
      *(unsigned char *)(v227 + 40) = 1;
      *(void *)(v227 + 48) = 0;
      *(unsigned char *)(v227 + 56) = 1;
      uint64_t v228 = (int *)v292;
      uint64_t v229 = v297;
      uint64_t v230 = v291;
      ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v291)(v227 + *(int *)(v292 + 36), 1, 1, v297);
      *(_OWORD *)(v227 + v228[10]) = xmmword_1D7AB42F0;
      *(void *)(v227 + v228[11]) = 0;
      *(void *)(v227 + v228[12]) = 0;
      *(void *)(v227 + v228[13]) = 0;
      *(_OWORD *)(v227 + v228[14]) = v299;
      *(void *)uint64_t v225 = 0xD000000000000011;
      *(void *)(v225 + 8) = 0x80000001D7ABC470;
      uint64_t v231 = (void *)((char *)v223 + v225);
      uint64_t v232 = (char *)v223 + v225 + *(int *)(v226 + 20);
      char *v232 = 2;
      *((void *)v232 + 1) = 0;
      v232[16] = 1;
      *((void *)v232 + 3) = 0;
      v232[32] = 1;
      *((_DWORD *)v232 + 9) = 0;
      v232[40] = 1;
      *((void *)v232 + 6) = 0;
      v232[56] = 1;
      ((void (*)(char *, uint64_t, uint64_t, uint64_t))v230)(&v232[v228[9]], 1, 1, v229);
      uint64_t v233 = &v232[v228[10]];
      unint64_t v234 = v266 | 0x8000000000000000;
      *(void *)uint64_t v233 = 0xD000000000000014;
      *((void *)v233 + 1) = v234;
      *(void *)&v232[v228[11]] = 0;
      *(void *)&v232[v228[12]] = 0;
      *(void *)&v232[v228[13]] = 0;
      *(_OWORD *)&v232[v228[14]] = v299;
      *uint64_t v231 = 0xD000000000000012;
      v231[1] = 0x80000001D7ABC490;
      uint64_t v235 = &v277[v225];
      uint64_t v236 = &v277[v225 + *(int *)(v226 + 20)];
      *uint64_t v236 = 2;
      *((void *)v236 + 1) = 0;
      v236[16] = 1;
      *((void *)v236 + 3) = 0;
      v236[32] = 1;
      *((_DWORD *)v236 + 9) = 0;
      v236[40] = 1;
      *((void *)v236 + 6) = 0;
      v236[56] = 1;
      ((void (*)(char *, uint64_t, uint64_t, uint64_t))v230)(&v236[v228[9]], 1, 1, v229);
      *(_OWORD *)&v236[v228[10]] = xmmword_1D7AB4300;
      *(void *)&v236[v228[11]] = 0;
      *(void *)&v236[v228[12]] = 0;
      *(void *)&v236[v228[13]] = 0;
      *(_OWORD *)&v236[v228[14]] = v299;
      *(void *)uint64_t v235 = 0xD000000000000016;
      *((void *)v235 + 1) = 0x80000001D7ABC450;
      uint64_t v237 = (void *)(v225 + v265);
      uint64_t v238 = (void *)v225;
      uint64_t v239 = (char *)(v225 + v265 + *(int *)(v226 + 20));
      *uint64_t v239 = 2;
      *((void *)v239 + 1) = 0;
      v239[16] = 1;
      *((void *)v239 + 3) = 0;
      v239[32] = 1;
      *((_DWORD *)v239 + 9) = 0;
      v239[40] = 1;
      *((void *)v239 + 6) = 0;
      v239[56] = 1;
      uint64_t v240 = v229;
      ((void (*)(char *, uint64_t, uint64_t, uint64_t))v230)(&v239[v228[9]], 1, 1, v229);
      *(_OWORD *)&v239[v228[10]] = xmmword_1D7AB4310;
      *(void *)&v239[v228[11]] = 0;
      *(void *)&v239[v228[12]] = 0;
      *(void *)&v239[v228[13]] = 0;
      *(_OWORD *)&v239[v228[14]] = v299;
      void *v237 = 0xD000000000000019;
      v237[1] = 0x80000001D7ABC4E0;
      uint64_t v241 = v294;
      uint64_t v242 = v238;
      uint64_t v290 = (uint64_t)v238;
      uint64_t v243 = (void *)((char *)v238 + 4 * (void)v294);
      uint64_t v244 = (char *)v243 + *(int *)(v226 + 20);
      *uint64_t v244 = 2;
      *((void *)v244 + 1) = 0;
      v244[16] = 1;
      *((void *)v244 + 3) = 0;
      v244[32] = 1;
      *((_DWORD *)v244 + 9) = 0;
      v244[40] = 1;
      *((void *)v244 + 6) = 0;
      v244[56] = 1;
      ((void (*)(char *, uint64_t, uint64_t, uint64_t))v230)(&v244[v228[9]], 1, 1, v240);
      *(_OWORD *)&v244[v228[10]] = xmmword_1D7AB4320;
      *(void *)&v244[v228[11]] = 0;
      *(void *)&v244[v228[12]] = 0;
      *(void *)&v244[v228[13]] = 0;
      *(_OWORD *)&v244[v228[14]] = v299;
      *uint64_t v243 = 0x63696E755F786573;
      v243[1] = 0xEB0000000065646FLL;
      uint64_t v245 = v241;
      uint64_t v246 = (void *)((char *)v242 + 5 * (void)v241);
      uint64_t v247 = (char *)v246 + *(int *)(v226 + 20);
      *uint64_t v247 = 2;
      *((void *)v247 + 1) = 0;
      v247[16] = 1;
      *((void *)v247 + 3) = 0;
      v247[32] = 1;
      *((_DWORD *)v247 + 9) = 0;
      v247[40] = 1;
      *((void *)v247 + 6) = 0;
      v247[56] = 1;
      uint64_t v248 = v240;
      ((void (*)(char *, uint64_t, uint64_t, uint64_t))v230)(&v247[v228[9]], 1, 1, v240);
      __int16 v249 = &v247[v228[10]];
      *(void *)__int16 v249 = 0;
      *((void *)v249 + 1) = 0;
      *(void *)&v247[v228[11]] = 0;
      *(void *)&v247[v228[12]] = 0;
      *(void *)&v247[v228[13]] = 0;
      v250 = &v247[v228[14]];
      *(void *)v250 = v279;
      *((void *)v250 + 1) = v278;
      *uint64_t v246 = 0x7469617274726F70;
      v246[1] = 0xE800000000000000;
      uint64_t v251 = (void *)(v290 + 6 * (void)v245);
      unint64_t v252 = (char *)v251 + *(int *)(v226 + 20);
      *unint64_t v252 = 2;
      *((void *)v252 + 1) = 0;
      v252[16] = 1;
      *((void *)v252 + 3) = 0;
      v252[32] = 1;
      *((_DWORD *)v252 + 9) = 0;
      v252[40] = 1;
      *((void *)v252 + 6) = 0;
      v252[56] = 1;
      uint64_t v253 = v248;
      ((void (*)(char *, uint64_t, uint64_t, uint64_t))v230)(&v252[v228[9]], 1, 1, v248);
      v254 = &v252[v228[10]];
      unint64_t v255 = v268 | 0x8000000000000000;
      *(void *)v254 = 0xD000000000000029;
      *((void *)v254 + 1) = v255;
      *(void *)&v252[v228[11]] = 0;
      *(void *)&v252[v228[12]] = 0;
      *(void *)&v252[v228[13]] = 0;
      *(_OWORD *)&v252[v228[14]] = v299;
      *uint64_t v251 = 0xD000000000000018;
      v251[1] = 0x80000001D7ABC4B0;
      v256 = v276;
      *((void *)v276 + 9) = v293;
      v256[10] = 0xD00000000000002DLL;
      v256[11] = 0x80000001D7AC1040;
      uint64_t v257 = v295;
      uint64_t v258 = swift_allocObject();
      *(_OWORD *)(v258 + 16) = v267;
      uint64_t v259 = v258 + v257;
      uint64_t v260 = v259 + *(int *)(v226 + 20);
      *(unsigned char *)uint64_t v260 = 1;
      *(void *)(v260 + 8) = 0;
      *(unsigned char *)(v260 + 16) = 1;
      *(void *)(v260 + 24) = 0;
      *(unsigned char *)(v260 + 32) = 1;
      *(_DWORD *)(v260 + 36) = 0;
      *(unsigned char *)(v260 + 40) = 1;
      *(void *)(v260 + 48) = 0;
      *(unsigned char *)(v260 + 56) = 1;
      ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v230)(v260 + v228[9], 1, 1, v253);
      char v261 = (void *)(v260 + v228[10]);
      *char v261 = 0;
      v261[1] = 0;
      *(void *)(v260 + v228[11]) = 0;
      *(void *)(v260 + v228[12]) = 0;
      *(void *)(v260 + v228[13]) = 0;
      *(_OWORD *)(v260 + v228[14]) = v299;
      strcpy((char *)v259, "test_document");
      *(_WORD *)(v259 + 14) = -4864;
      v256[12] = v258;
      unint64_t v262 = sub_1D785F610((uint64_t)v256);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v270 + 8))(v280, v271);
      *(uint64_t *)((char *)v272 + *(int *)(v269 + 60)) = v262;
      return result;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1D79AF4A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CredentialBuilderPayloadDetails.Element(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t *initializeBufferWithCopyOfBuffer for DeveloperTestJapanNationalIDCardCredentialBuilder(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v45 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v45 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    uint64_t v7 = a3[5];
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_1D7A9B148();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    uint64_t v11 = a3[6];
    uint64_t v12 = a3[7];
    uint64_t v13 = (uint64_t *)((char *)v4 + v11);
    uint64_t v14 = (uint64_t *)((char *)a2 + v11);
    uint64_t v15 = v14[1];
    *uint64_t v13 = *v14;
    v13[1] = v15;
    uint64_t v16 = (char *)v4 + v12;
    uint64_t v17 = (char *)a2 + v12;
    uint64_t v18 = sub_1D7A9AD28();
    uint64_t v19 = *(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16);
    swift_bridgeObjectRetain();
    v19(v16, v17, v18);
    uint64_t v20 = a3[8];
    uint64_t v21 = a3[9];
    uint64_t v22 = (uint64_t *)((char *)v4 + v20);
    uint64_t v23 = (uint64_t *)((char *)a2 + v20);
    uint64_t v24 = v23[1];
    *uint64_t v22 = *v23;
    v22[1] = v24;
    uint64_t v25 = (uint64_t *)((char *)v4 + v21);
    uint64_t v26 = (uint64_t *)((char *)a2 + v21);
    uint64_t v27 = v26[1];
    *uint64_t v25 = *v26;
    v25[1] = v27;
    uint64_t v28 = a3[11];
    *(uint64_t *)((char *)v4 + a3[10]) = *(uint64_t *)((char *)a2 + a3[10]);
    uint64_t v29 = (uint64_t *)((char *)v4 + v28);
    uint64_t v30 = (uint64_t *)((char *)a2 + v28);
    uint64_t v31 = v30[1];
    *uint64_t v29 = *v30;
    v29[1] = v31;
    uint64_t v32 = a3[12];
    uint64_t v33 = a3[13];
    uint64_t v34 = (uint64_t *)((char *)v4 + v32);
    uint64_t v35 = (uint64_t *)((char *)a2 + v32);
    uint64_t v36 = v35[1];
    *uint64_t v34 = *v35;
    v34[1] = v36;
    uint64_t v37 = (uint64_t *)((char *)v4 + v33);
    uint64_t v38 = *(uint64_t *)((char *)a2 + v33);
    unint64_t v39 = *(uint64_t *)((char *)a2 + v33 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1D7860790(v38, v39);
    *uint64_t v37 = v38;
    v37[1] = v39;
    uint64_t v40 = a3[14];
    uint64_t v41 = a3[15];
    uint64_t v42 = (uint64_t *)((char *)v4 + v40);
    uint64_t v43 = (uint64_t *)((char *)a2 + v40);
    uint64_t v44 = v43[1];
    void *v42 = *v43;
    v42[1] = v44;
    *(uint64_t *)((char *)v4 + v41) = *(uint64_t *)((char *)a2 + v41);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for DeveloperTestJapanNationalIDCardCredentialBuilder(uint64_t a1, int *a2)
{
  uint64_t v4 = a1 + a2[5];
  uint64_t v5 = sub_1D7A9B148();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  uint64_t v6 = a1 + a2[7];
  uint64_t v7 = sub_1D7A9AD28();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1D78607E8(*(void *)(a1 + a2[13]), *(void *)(a1 + a2[13] + 8));
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for DeveloperTestJapanNationalIDCardCredentialBuilder(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1D7A9B148();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = a3[7];
  uint64_t v12 = (void *)((char *)a1 + v10);
  uint64_t v13 = (void *)((char *)a2 + v10);
  uint64_t v14 = v13[1];
  *uint64_t v12 = *v13;
  v12[1] = v14;
  uint64_t v15 = (char *)a1 + v11;
  uint64_t v16 = (char *)a2 + v11;
  uint64_t v17 = sub_1D7A9AD28();
  uint64_t v18 = *(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16);
  swift_bridgeObjectRetain();
  v18(v15, v16, v17);
  uint64_t v19 = a3[8];
  uint64_t v20 = a3[9];
  uint64_t v21 = (void *)((char *)a1 + v19);
  uint64_t v22 = (void *)((char *)a2 + v19);
  uint64_t v23 = v22[1];
  *uint64_t v21 = *v22;
  v21[1] = v23;
  uint64_t v24 = (void *)((char *)a1 + v20);
  uint64_t v25 = (void *)((char *)a2 + v20);
  uint64_t v26 = v25[1];
  *uint64_t v24 = *v25;
  v24[1] = v26;
  uint64_t v27 = a3[11];
  *(void *)((char *)a1 + a3[10]) = *(void *)((char *)a2 + a3[10]);
  uint64_t v28 = (void *)((char *)a1 + v27);
  uint64_t v29 = (void *)((char *)a2 + v27);
  uint64_t v30 = v29[1];
  *uint64_t v28 = *v29;
  v28[1] = v30;
  uint64_t v31 = a3[12];
  uint64_t v32 = a3[13];
  uint64_t v33 = (void *)((char *)a1 + v31);
  uint64_t v34 = (void *)((char *)a2 + v31);
  uint64_t v35 = v34[1];
  *uint64_t v33 = *v34;
  v33[1] = v35;
  uint64_t v36 = (void *)((char *)a1 + v32);
  uint64_t v37 = *(void *)((char *)a2 + v32);
  unint64_t v38 = *(void *)((char *)a2 + v32 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1D7860790(v37, v38);
  *uint64_t v36 = v37;
  v36[1] = v38;
  uint64_t v39 = a3[14];
  uint64_t v40 = a3[15];
  uint64_t v41 = (void *)((char *)a1 + v39);
  uint64_t v42 = (void *)((char *)a2 + v39);
  uint64_t v43 = v42[1];
  void *v41 = *v42;
  v41[1] = v43;
  *(void *)((char *)a1 + v40) = *(void *)((char *)a2 + v40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for DeveloperTestJapanNationalIDCardCredentialBuilder(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1D7A9B148();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = (void *)((char *)a1 + v10);
  uint64_t v12 = (void *)((char *)a2 + v10);
  *uint64_t v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v13 = a3[7];
  uint64_t v14 = (char *)a1 + v13;
  uint64_t v15 = (char *)a2 + v13;
  uint64_t v16 = sub_1D7A9AD28();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 24))(v14, v15, v16);
  uint64_t v17 = a3[8];
  uint64_t v18 = (void *)((char *)a1 + v17);
  uint64_t v19 = (void *)((char *)a2 + v17);
  *uint64_t v18 = *v19;
  v18[1] = v19[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v20 = a3[9];
  uint64_t v21 = (void *)((char *)a1 + v20);
  uint64_t v22 = (void *)((char *)a2 + v20);
  *uint64_t v21 = *v22;
  v21[1] = v22[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[10]) = *(void *)((char *)a2 + a3[10]);
  uint64_t v23 = a3[11];
  uint64_t v24 = (void *)((char *)a1 + v23);
  uint64_t v25 = (void *)((char *)a2 + v23);
  *uint64_t v24 = *v25;
  v24[1] = v25[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v26 = a3[12];
  uint64_t v27 = (void *)((char *)a1 + v26);
  uint64_t v28 = (void *)((char *)a2 + v26);
  void *v27 = *v28;
  v27[1] = v28[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v29 = a3[13];
  uint64_t v30 = (void *)((char *)a1 + v29);
  uint64_t v31 = (void *)((char *)a2 + v29);
  uint64_t v32 = *v31;
  unint64_t v33 = v31[1];
  sub_1D7860790(*v31, v33);
  uint64_t v34 = *v30;
  unint64_t v35 = v30[1];
  *uint64_t v30 = v32;
  v30[1] = v33;
  sub_1D78607E8(v34, v35);
  uint64_t v36 = a3[14];
  uint64_t v37 = (void *)((char *)a1 + v36);
  unint64_t v38 = (void *)((char *)a2 + v36);
  *uint64_t v37 = *v38;
  v37[1] = v38[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[15]) = *(void *)((char *)a2 + a3[15]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *initializeWithTake for DeveloperTestJapanNationalIDCardCredentialBuilder(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1D7A9B148();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[7];
  *(_OWORD *)((char *)a1 + a3[6]) = *(_OWORD *)((char *)a2 + a3[6]);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_1D7A9AD28();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
  uint64_t v14 = a3[9];
  *(_OWORD *)((char *)a1 + a3[8]) = *(_OWORD *)((char *)a2 + a3[8]);
  *(_OWORD *)((char *)a1 + v14) = *(_OWORD *)((char *)a2 + v14);
  uint64_t v15 = a3[11];
  *(void *)((char *)a1 + a3[10]) = *(void *)((char *)a2 + a3[10]);
  *(_OWORD *)((char *)a1 + v15) = *(_OWORD *)((char *)a2 + v15);
  uint64_t v16 = a3[13];
  *(_OWORD *)((char *)a1 + a3[12]) = *(_OWORD *)((char *)a2 + a3[12]);
  *(_OWORD *)((char *)a1 + v16) = *(_OWORD *)((char *)a2 + v16);
  uint64_t v17 = a3[15];
  *(_OWORD *)((char *)a1 + a3[14]) = *(_OWORD *)((char *)a2 + a3[14]);
  *(void *)((char *)a1 + v17) = *(void *)((char *)a2 + v17);
  return a1;
}

void *assignWithTake for DeveloperTestJapanNationalIDCardCredentialBuilder(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1D7A9B148();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = (void *)((char *)a1 + v10);
  uint64_t v12 = (void *)((char *)a2 + v10);
  uint64_t v14 = *v12;
  uint64_t v13 = v12[1];
  *uint64_t v11 = v14;
  v11[1] = v13;
  swift_bridgeObjectRelease();
  uint64_t v15 = a3[7];
  uint64_t v16 = (char *)a1 + v15;
  uint64_t v17 = (char *)a2 + v15;
  uint64_t v18 = sub_1D7A9AD28();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = (void *)((char *)a1 + v19);
  uint64_t v21 = (void *)((char *)a2 + v19);
  uint64_t v23 = *v21;
  uint64_t v22 = v21[1];
  *uint64_t v20 = v23;
  v20[1] = v22;
  swift_bridgeObjectRelease();
  uint64_t v24 = a3[9];
  uint64_t v25 = (void *)((char *)a1 + v24);
  uint64_t v26 = (void *)((char *)a2 + v24);
  uint64_t v28 = *v26;
  uint64_t v27 = v26[1];
  *uint64_t v25 = v28;
  v25[1] = v27;
  swift_bridgeObjectRelease();
  uint64_t v29 = a3[11];
  *(void *)((char *)a1 + a3[10]) = *(void *)((char *)a2 + a3[10]);
  uint64_t v30 = (void *)((char *)a1 + v29);
  uint64_t v31 = (void *)((char *)a2 + v29);
  uint64_t v33 = *v31;
  uint64_t v32 = v31[1];
  *uint64_t v30 = v33;
  v30[1] = v32;
  swift_bridgeObjectRelease();
  uint64_t v34 = a3[12];
  unint64_t v35 = (void *)((char *)a1 + v34);
  uint64_t v36 = (void *)((char *)a2 + v34);
  uint64_t v38 = *v36;
  uint64_t v37 = v36[1];
  *unint64_t v35 = v38;
  v35[1] = v37;
  swift_bridgeObjectRelease();
  uint64_t v39 = a3[13];
  uint64_t v40 = *(void *)((char *)a1 + v39);
  unint64_t v41 = *(void *)((char *)a1 + v39 + 8);
  *(_OWORD *)((char *)a1 + v39) = *(_OWORD *)((char *)a2 + v39);
  sub_1D78607E8(v40, v41);
  uint64_t v42 = a3[14];
  uint64_t v43 = (void *)((char *)a1 + v42);
  uint64_t v44 = (void *)((char *)a2 + v42);
  uint64_t v46 = *v44;
  uint64_t v45 = v44[1];
  *uint64_t v43 = v46;
  v43[1] = v45;
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[15]) = *(void *)((char *)a2 + a3[15]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for DeveloperTestJapanNationalIDCardCredentialBuilder(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1D79AFF10);
}

uint64_t sub_1D79AFF10(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1D7A9B148();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + a3[5];
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else if (a2 == 0x7FFFFFFF)
  {
    unint64_t v12 = *(void *)(a1 + a3[6] + 8);
    if (v12 >= 0xFFFFFFFF) {
      LODWORD(v12) = -1;
    }
    return (v12 + 1);
  }
  else
  {
    uint64_t v13 = sub_1D7A9AD28();
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
    uint64_t v15 = v13;
    uint64_t v16 = a1 + a3[7];
    return v14(v16, a2, v15);
  }
}

uint64_t storeEnumTagSinglePayload for DeveloperTestJapanNationalIDCardCredentialBuilder(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1D79B0058);
}

uint64_t sub_1D79B0058(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t result = sub_1D7A9B148();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + a4[5];
    unint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + a4[6] + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v13 = sub_1D7A9AD28();
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
    uint64_t v15 = v13;
    uint64_t v16 = a1 + a4[7];
    return v14(v16, a2, a2, v15);
  }
  return result;
}

uint64_t sub_1D79B018C()
{
  uint64_t result = sub_1D7A9B148();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_1D7A9AD28();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_1D79B029C(uint64_t a1)
{
  return sub_1D7891138(a1, qword_1EA845BE0);
}

uint64_t sub_1D79B02C8(uint64_t a1)
{
  return sub_1D7891138(a1, qword_1EA845BF8);
}

uint64_t sub_1D79B02EC()
{
  uint64_t v0 = type metadata accessor for DIPSignpost.Config(0);
  __swift_allocate_value_buffer(v0, qword_1EA845C10);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EA845C10);
  if (qword_1EA8414D8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1D7A9B5F8();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EA845BE0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16))(v1 + *(int *)(v0 + 20), v3, v2);
  *(void *)uint64_t v1 = "appleIDV.getStatus";
  *(void *)(v1 + 8) = 18;
  *(unsigned char *)(v1 + 16) = 2;
  *(unsigned char *)(v1 + *(int *)(v0 + 24)) = 0;
  return result;
}

uint64_t static SharedSignposts.appleIDVGetStatus.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D7894A24(&qword_1EA8414E8, (uint64_t)qword_1EA845C10, a1);
}

uint64_t sub_1D79B0400()
{
  uint64_t v0 = type metadata accessor for DIPSignpost.Config(0);
  __swift_allocate_value_buffer(v0, qword_1EA845C28);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EA845C28);
  if (qword_1EA8414D8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1D7A9B5F8();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EA845BE0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16))(v1 + *(int *)(v0 + 20), v3, v2);
  *(void *)uint64_t v1 = "appleIDV.prepareBioBindingUnboundACL";
  *(void *)(v1 + 8) = 36;
  *(unsigned char *)(v1 + 16) = 2;
  *(unsigned char *)(v1 + *(int *)(v0 + 24)) = 0;
  return result;
}

uint64_t static SharedSignposts.appleIDVPrepareBioBindingUnboundACL.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D7894A24(&qword_1EA8414F0, (uint64_t)qword_1EA845C28, a1);
}

uint64_t sub_1D79B0514()
{
  uint64_t v0 = type metadata accessor for DIPSignpost.Config(0);
  __swift_allocate_value_buffer(v0, qword_1EA845C40);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EA845C40);
  if (qword_1EA8414D8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1D7A9B5F8();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EA845BE0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16))(v1 + *(int *)(v0 + 20), v3, v2);
  *(void *)uint64_t v1 = "appleIDV.preparePasscodeBindingUnboundACL";
  *(void *)(v1 + 8) = 41;
  *(unsigned char *)(v1 + 16) = 2;
  *(unsigned char *)(v1 + *(int *)(v0 + 24)) = 0;
  return result;
}

uint64_t static SharedSignposts.appleIDVPreparePasscodeBindingUnboundACL.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D7894A24(&qword_1EA8414F8, (uint64_t)qword_1EA845C40, a1);
}

uint64_t sub_1D79B0628()
{
  uint64_t v0 = type metadata accessor for DIPSignpost.Config(0);
  __swift_allocate_value_buffer(v0, qword_1EA845C58);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EA845C58);
  if (qword_1EA8414D8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1D7A9B5F8();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EA845BE0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16))(v1 + *(int *)(v0 + 20), v3, v2);
  *(void *)uint64_t v1 = "appleIDV.persistACLBlob";
  *(void *)(v1 + 8) = 23;
  *(unsigned char *)(v1 + 16) = 2;
  *(unsigned char *)(v1 + *(int *)(v0 + 24)) = 0;
  return result;
}

uint64_t static SharedSignposts.appleIDVPersistACLBlob.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D7894A24(&qword_1EA841500, (uint64_t)qword_1EA845C58, a1);
}

uint64_t sub_1D79B073C()
{
  uint64_t v0 = type metadata accessor for DIPSignpost.Config(0);
  __swift_allocate_value_buffer(v0, qword_1EA845C70);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EA845C70);
  if (qword_1EA8414D8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1D7A9B5F8();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EA845BE0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16))(v1 + *(int *)(v0 + 20), v3, v2);
  *(void *)uint64_t v1 = "appleIDV.recoverPersistedACLBlob";
  *(void *)(v1 + 8) = 32;
  *(unsigned char *)(v1 + 16) = 2;
  *(unsigned char *)(v1 + *(int *)(v0 + 24)) = 0;
  return result;
}

uint64_t static SharedSignposts.appleIDVRecoverPersistedACLBlob.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D7894A24(&qword_1EA841508, (uint64_t)qword_1EA845C70, a1);
}

uint64_t sub_1D79B0850()
{
  uint64_t v0 = type metadata accessor for DIPSignpost.Config(0);
  __swift_allocate_value_buffer(v0, qword_1EA845C88);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EA845C88);
  if (qword_1EA8414D8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1D7A9B5F8();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EA845BE0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16))(v1 + *(int *)(v0 + 20), v3, v2);
  *(void *)uint64_t v1 = "appleIDV.authorizePresentmentForSignature";
  *(void *)(v1 + 8) = 41;
  *(unsigned char *)(v1 + 16) = 2;
  *(unsigned char *)(v1 + *(int *)(v0 + 24)) = 0;
  return result;
}

uint64_t static SharedSignposts.appleIDVAuthorizePresentmentForSignature.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D7894A24(&qword_1EA841510, (uint64_t)qword_1EA845C88, a1);
}

uint64_t sub_1D79B0964()
{
  uint64_t v0 = type metadata accessor for DIPSignpost.Config(0);
  __swift_allocate_value_buffer(v0, qword_1EA845CA0);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EA845CA0);
  if (qword_1EA8414D8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1D7A9B5F8();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EA845BE0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16))(v1 + *(int *)(v0 + 20), v3, v2);
  *(void *)uint64_t v1 = "appleIDV.generatePrearmTrustKeyForWatchAndCopyPublicKey";
  *(void *)(v1 + 8) = 55;
  *(unsigned char *)(v1 + 16) = 2;
  *(unsigned char *)(v1 + *(int *)(v0 + 24)) = 0;
  return result;
}

uint64_t static SharedSignposts.appleIDVGeneratePrearmTrustKeyForWatchAndCopyPublicKey.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D7894A24(&qword_1EA841518, (uint64_t)qword_1EA845CA0, a1);
}

uint64_t sub_1D79B0A78()
{
  uint64_t v0 = type metadata accessor for DIPSignpost.Config(0);
  __swift_allocate_value_buffer(v0, qword_1EA845CB8);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EA845CB8);
  if (qword_1EA8414D8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1D7A9B5F8();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EA845BE0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16))(v1 + *(int *)(v0 + 20), v3, v2);
  *(void *)uint64_t v1 = "appleIDV.updatePrearmTrustKeyForWatch";
  *(void *)(v1 + 8) = 37;
  *(unsigned char *)(v1 + 16) = 2;
  *(unsigned char *)(v1 + *(int *)(v0 + 24)) = 0;
  return result;
}

uint64_t static SharedSignposts.appleIDVUpdatePrearmTrustKeyForWatch.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D7894A24(&qword_1EA841520, (uint64_t)qword_1EA845CB8, a1);
}

uint64_t sub_1D79B0B8C()
{
  uint64_t v0 = type metadata accessor for DIPSignpost.Config(0);
  __swift_allocate_value_buffer(v0, qword_1EA845CD0);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EA845CD0);
  if (qword_1EA8414D8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1D7A9B5F8();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EA845BE0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16))(v1 + *(int *)(v0 + 20), v3, v2);
  *(void *)uint64_t v1 = "appleIDV.establshPrearmTrust";
  *(void *)(v1 + 8) = 28;
  *(unsigned char *)(v1 + 16) = 2;
  *(unsigned char *)(v1 + *(int *)(v0 + 24)) = 0;
  return result;
}

uint64_t static SharedSignposts.appleIDVEstablishPrearmTrust.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D7894A24(&qword_1EA841528, (uint64_t)qword_1EA845CD0, a1);
}

uint64_t sub_1D79B0CA0()
{
  uint64_t v0 = type metadata accessor for DIPSignpost.Config(0);
  __swift_allocate_value_buffer(v0, qword_1EA845CE8);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EA845CE8);
  if (qword_1EA8414D8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1D7A9B5F8();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EA845BE0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16))(v1 + *(int *)(v0 + 20), v3, v2);
  *(void *)uint64_t v1 = "appleIDV.generateNonceOnWatch";
  *(void *)(v1 + 8) = 29;
  *(unsigned char *)(v1 + 16) = 2;
  *(unsigned char *)(v1 + *(int *)(v0 + 24)) = 0;
  return result;
}

uint64_t static SharedSignposts.appleIDVGenerateNonceOnWatch.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D7894A24(&qword_1EA841530, (uint64_t)qword_1EA845CE8, a1);
}

uint64_t sub_1D79B0DB4()
{
  uint64_t v0 = type metadata accessor for DIPSignpost.Config(0);
  __swift_allocate_value_buffer(v0, qword_1EA845D00);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EA845D00);
  if (qword_1EA8414D8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1D7A9B5F8();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EA845BE0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16))(v1 + *(int *)(v0 + 20), v3, v2);
  *(void *)uint64_t v1 = "appleIDV.generatePhoneToken";
  *(void *)(v1 + 8) = 27;
  *(unsigned char *)(v1 + 16) = 2;
  *(unsigned char *)(v1 + *(int *)(v0 + 24)) = 0;
  return result;
}

uint64_t static SharedSignposts.appleIDVGeneratePhoneToken.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D7894A24(&qword_1EA841538, (uint64_t)qword_1EA845D00, a1);
}

uint64_t sub_1D79B0EC8()
{
  uint64_t v0 = type metadata accessor for DIPSignpost.Config(0);
  __swift_allocate_value_buffer(v0, qword_1EA845D18);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EA845D18);
  if (qword_1EA8414D8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1D7A9B5F8();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EA845BE0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16))(v1 + *(int *)(v0 + 20), v3, v2);
  *(void *)uint64_t v1 = "appleIDV.prearmCredential";
  *(void *)(v1 + 8) = 25;
  *(unsigned char *)(v1 + 16) = 2;
  *(unsigned char *)(v1 + *(int *)(v0 + 24)) = 0;
  return result;
}

uint64_t static SharedSignposts.appleIDVPrearmCredential.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D7894A24(&qword_1EA841540, (uint64_t)qword_1EA845D18, a1);
}

uint64_t sub_1D79B0FDC()
{
  uint64_t v0 = type metadata accessor for DIPSignpost.Config(0);
  __swift_allocate_value_buffer(v0, qword_1EA845D30);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EA845D30);
  if (qword_1EA8414D8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1D7A9B5F8();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EA845BE0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16))(v1 + *(int *)(v0 + 20), v3, v2);
  *(void *)uint64_t v1 = "appleIDV.revokeCredentialAuthorizationToken";
  *(void *)(v1 + 8) = 43;
  *(unsigned char *)(v1 + 16) = 2;
  *(unsigned char *)(v1 + *(int *)(v0 + 24)) = 0;
  return result;
}

uint64_t static SharedSignposts.appleIDVRevokeCredentialAuthorizationToken.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D7894A24(&qword_1EA841548, (uint64_t)qword_1EA845D30, a1);
}

uint64_t sub_1D79B10F0()
{
  uint64_t v0 = type metadata accessor for DIPSignpost.Config(0);
  __swift_allocate_value_buffer(v0, qword_1EA845D48);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EA845D48);
  if (qword_1EA8414D8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1D7A9B5F8();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EA845BE0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16))(v1 + *(int *)(v0 + 20), v3, v2);
  *(void *)uint64_t v1 = "appleIDV.persistModifiedACLBlob";
  *(void *)(v1 + 8) = 31;
  *(unsigned char *)(v1 + 16) = 2;
  *(unsigned char *)(v1 + *(int *)(v0 + 24)) = 0;
  return result;
}

uint64_t static SharedSignposts.appleIDVPersistModifiedACLBlob.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D7894A24(&qword_1EA841550, (uint64_t)qword_1EA845D48, a1);
}

uint64_t sub_1D79B1204()
{
  uint64_t v0 = type metadata accessor for DIPSignpost.Config(0);
  __swift_allocate_value_buffer(v0, qword_1EA845D60);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EA845D60);
  if (qword_1EA8414D8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1D7A9B5F8();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EA845BE0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16))(v1 + *(int *)(v0 + 20), v3, v2);
  *(void *)uint64_t v1 = "appleIDV.prepareUnboundACLForWatch";
  *(void *)(v1 + 8) = 34;
  *(unsigned char *)(v1 + 16) = 2;
  *(unsigned char *)(v1 + *(int *)(v0 + 24)) = 0;
  return result;
}

uint64_t static SharedSignposts.appleIDVPrepareUnboundACLForWatch.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D7894A24(&qword_1EA841558, (uint64_t)qword_1EA845D60, a1);
}

uint64_t sub_1D79B1318()
{
  uint64_t v0 = type metadata accessor for DIPSignpost.Config(0);
  __swift_allocate_value_buffer(v0, qword_1EA845D78);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EA845D78);
  if (qword_1EA8414D8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1D7A9B5F8();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EA845BE0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16))(v1 + *(int *)(v0 + 20), v3, v2);
  *(void *)uint64_t v1 = "appleIDV.prepareACL";
  *(void *)(v1 + 8) = 19;
  *(unsigned char *)(v1 + 16) = 2;
  *(unsigned char *)(v1 + *(int *)(v0 + 24)) = 0;
  return result;
}

uint64_t static SharedSignposts.appleIDVPrepareACL.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D7894A24(&qword_1EA841560, (uint64_t)qword_1EA845D78, a1);
}

uint64_t sub_1D79B142C()
{
  uint64_t v0 = type metadata accessor for DIPSignpost.Config(0);
  __swift_allocate_value_buffer(v0, qword_1EA845D90);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EA845D90);
  if (qword_1EA8414D8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1D7A9B5F8();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EA845BE0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16))(v1 + *(int *)(v0 + 20), v3, v2);
  *(void *)uint64_t v1 = "appleIDV.credentialAuthenticationTokenStatus";
  *(void *)(v1 + 8) = 44;
  *(unsigned char *)(v1 + 16) = 2;
  *(unsigned char *)(v1 + *(int *)(v0 + 24)) = 0;
  return result;
}

uint64_t static SharedSignposts.appleIDVCredentialAuthenticationTokenStatus.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D7894A24(&qword_1EA841568, (uint64_t)qword_1EA845D90, a1);
}

uint64_t sub_1D79B1540()
{
  uint64_t v0 = type metadata accessor for DIPSignpost.Config(0);
  __swift_allocate_value_buffer(v0, qword_1EA845DA8);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EA845DA8);
  if (qword_1EA8414E0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1D7A9B5F8();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EA845BF8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16))(v1 + *(int *)(v0 + 20), v3, v2);
  *(void *)uint64_t v1 = "se.pairSecureElementIfNecessary";
  *(void *)(v1 + 8) = 31;
  *(unsigned char *)(v1 + 16) = 2;
  *(unsigned char *)(v1 + *(int *)(v0 + 24)) = 0;
  return result;
}

uint64_t static SharedSignposts.sePairSecureElementIfNecessary.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D7894A24(&qword_1EA841570, (uint64_t)qword_1EA845DA8, a1);
}

uint64_t sub_1D79B1654()
{
  uint64_t v0 = type metadata accessor for DIPSignpost.Config(0);
  __swift_allocate_value_buffer(v0, qword_1EA845DC0);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EA845DC0);
  if (qword_1EA8414E0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1D7A9B5F8();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EA845BF8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16))(v1 + *(int *)(v0 + 20), v3, v2);
  *(void *)uint64_t v1 = "seskey.createKey";
  *(void *)(v1 + 8) = 16;
  *(unsigned char *)(v1 + 16) = 2;
  *(unsigned char *)(v1 + *(int *)(v0 + 24)) = 0;
  return result;
}

uint64_t static SharedSignposts.sesKeyCreateKey.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D7894A24(&qword_1EA841578, (uint64_t)qword_1EA845DC0, a1);
}

uint64_t sub_1D79B1768()
{
  uint64_t v0 = type metadata accessor for DIPSignpost.Config(0);
  __swift_allocate_value_buffer(v0, qword_1EA845DD8);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EA845DD8);
  if (qword_1EA8414E0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1D7A9B5F8();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EA845BF8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16))(v1 + *(int *)(v0 + 20), v3, v2);
  *(void *)uint64_t v1 = "seskey.signDigest";
  *(void *)(v1 + 8) = 17;
  *(unsigned char *)(v1 + 16) = 2;
  *(unsigned char *)(v1 + *(int *)(v0 + 24)) = 0;
  return result;
}

uint64_t static SharedSignposts.sesKeySignDigest.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D7894A24(&qword_1EA841580, (uint64_t)qword_1EA845DD8, a1);
}

uint64_t sub_1D79B187C()
{
  uint64_t v0 = type metadata accessor for DIPSignpost.Config(0);
  __swift_allocate_value_buffer(v0, qword_1EA845DF0);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EA845DF0);
  if (qword_1EA8414E0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1D7A9B5F8();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EA845BF8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16))(v1 + *(int *)(v0 + 20), v3, v2);
  *(void *)uint64_t v1 = "seskey.getPublicKey";
  *(void *)(v1 + 8) = 19;
  *(unsigned char *)(v1 + 16) = 2;
  *(unsigned char *)(v1 + *(int *)(v0 + 24)) = 0;
  return result;
}

uint64_t static SharedSignposts.sesKeyGetPublicKey.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D7894A24(&qword_1EA841588, (uint64_t)qword_1EA845DF0, a1);
}

uint64_t sub_1D79B1990()
{
  uint64_t v0 = type metadata accessor for DIPSignpost.Config(0);
  __swift_allocate_value_buffer(v0, qword_1EA845E08);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EA845E08);
  if (qword_1EA8414E0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1D7A9B5F8();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EA845BF8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16))(v1 + *(int *)(v0 + 20), v3, v2);
  *(void *)uint64_t v1 = "seskey.getCASDCertificate";
  *(void *)(v1 + 8) = 25;
  *(unsigned char *)(v1 + 16) = 2;
  *(unsigned char *)(v1 + *(int *)(v0 + 24)) = 0;
  return result;
}

uint64_t static SharedSignposts.sesKeyGetCASDCertificate.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D7894A24(&qword_1EA841590, (uint64_t)qword_1EA845E08, a1);
}

uint64_t sub_1D79B1AA4()
{
  uint64_t v0 = type metadata accessor for DIPSignpost.Config(0);
  __swift_allocate_value_buffer(v0, qword_1EA845E20);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EA845E20);
  if (qword_1EA8414E0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1D7A9B5F8();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EA845BF8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16))(v1 + *(int *)(v0 + 20), v3, v2);
  *(void *)uint64_t v1 = "seskey.getACLConstraints";
  *(void *)(v1 + 8) = 24;
  *(unsigned char *)(v1 + 16) = 2;
  *(unsigned char *)(v1 + *(int *)(v0 + 24)) = 0;
  return result;
}

uint64_t static SharedSignposts.sesKeyGetACLConstraints.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D7894A24(&qword_1EA841598, (uint64_t)qword_1EA845E20, a1);
}

uint64_t sub_1D79B1BB8()
{
  uint64_t v0 = type metadata accessor for DIPSignpost.Config(0);
  __swift_allocate_value_buffer(v0, qword_1EA845E38);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EA845E38);
  if (qword_1EA8414E0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1D7A9B5F8();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EA845BF8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16))(v1 + *(int *)(v0 + 20), v3, v2);
  *(void *)uint64_t v1 = "seskey.getAttestation";
  *(void *)(v1 + 8) = 21;
  *(unsigned char *)(v1 + 16) = 2;
  *(unsigned char *)(v1 + *(int *)(v0 + 24)) = 0;
  return result;
}

uint64_t static SharedSignposts.sesKeyGetAttestation.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D7894A24(&qword_1EA8415A0, (uint64_t)qword_1EA845E38, a1);
}

uint64_t sub_1D79B1CCC()
{
  uint64_t v0 = type metadata accessor for DIPSignpost.Config(0);
  __swift_allocate_value_buffer(v0, qword_1EA845E50);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EA845E50);
  if (qword_1EA8414E0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1D7A9B5F8();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EA845BF8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16))(v1 + *(int *)(v0 + 20), v3, v2);
  *(void *)uint64_t v1 = "seskey.deleteKey";
  *(void *)(v1 + 8) = 16;
  *(unsigned char *)(v1 + 16) = 2;
  *(unsigned char *)(v1 + *(int *)(v0 + 24)) = 0;
  return result;
}

uint64_t static SharedSignposts.sesKeyDeleteKey.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D7894A24(&qword_1EA8415A8, (uint64_t)qword_1EA845E50, a1);
}

uint64_t sub_1D79B1DE0()
{
  uint64_t v0 = type metadata accessor for DIPSignpost.Config(0);
  __swift_allocate_value_buffer(v0, qword_1EA845E68);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EA845E68);
  if (qword_1EA8414E0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1D7A9B5F8();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EA845BF8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16))(v1 + *(int *)(v0 + 20), v3, v2);
  *(void *)uint64_t v1 = "seskey.changeACL";
  *(void *)(v1 + 8) = 16;
  *(unsigned char *)(v1 + 16) = 2;
  *(unsigned char *)(v1 + *(int *)(v0 + 24)) = 0;
  return result;
}

uint64_t static SharedSignposts.sesKeyChangeACL.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D7894A24(&qword_1EA8415B0, (uint64_t)qword_1EA845E68, a1);
}

uint64_t sub_1D79B1EF4()
{
  uint64_t v0 = type metadata accessor for DIPSignpost.Config(0);
  __swift_allocate_value_buffer(v0, qword_1EA845E80);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EA845E80);
  if (qword_1EA8414E0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1D7A9B5F8();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EA845BF8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16))(v1 + *(int *)(v0 + 20), v3, v2);
  *(void *)uint64_t v1 = "seskey.createSEBAASCertificate";
  *(void *)(v1 + 8) = 30;
  *(unsigned char *)(v1 + 16) = 2;
  *(unsigned char *)(v1 + *(int *)(v0 + 24)) = 0;
  return result;
}

uint64_t static SharedSignposts.sesKeyCreateSEBAASCertificate.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D7894A24(&qword_1EA8415B8, (uint64_t)qword_1EA845E80, a1);
}

uint64_t sub_1D79B2008()
{
  uint64_t v0 = type metadata accessor for DIPSignpost.Config(0);
  __swift_allocate_value_buffer(v0, qword_1EA845E98);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EA845E98);
  if (qword_1EA8414E0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1D7A9B5F8();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EA845BF8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16))(v1 + *(int *)(v0 + 20), v3, v2);
  *(void *)uint64_t v1 = "seskey.designateKey";
  *(void *)(v1 + 8) = 19;
  *(unsigned char *)(v1 + 16) = 2;
  *(unsigned char *)(v1 + *(int *)(v0 + 24)) = 0;
  return result;
}

uint64_t static SharedSignposts.sesKeyDesignateKey.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D7894A24(&qword_1EA8415C0, (uint64_t)qword_1EA845E98, a1);
}

uint64_t sub_1D79B211C()
{
  uint64_t v0 = type metadata accessor for DIPSignpost.Config(0);
  __swift_allocate_value_buffer(v0, qword_1EA845EB0);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EA845EB0);
  if (qword_1EA8414E0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1D7A9B5F8();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EA845BF8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16))(v1 + *(int *)(v0 + 20), v3, v2);
  *(void *)uint64_t v1 = "seskey.clearKeyDesignation";
  *(void *)(v1 + 8) = 26;
  *(unsigned char *)(v1 + 16) = 2;
  *(unsigned char *)(v1 + *(int *)(v0 + 24)) = 0;
  return result;
}

uint64_t static SharedSignposts.sesKeyClearKeyDesignation.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D7894A24(&qword_1EA8415C8, (uint64_t)qword_1EA845EB0, a1);
}

uint64_t sub_1D79B2230()
{
  uint64_t v0 = type metadata accessor for DIPSignpost.Config(0);
  __swift_allocate_value_buffer(v0, qword_1EA845EC8);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EA845EC8);
  if (qword_1EA8414E0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1D7A9B5F8();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EA845BF8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16))(v1 + *(int *)(v0 + 20), v3, v2);
  *(void *)uint64_t v1 = "seskey.getDesignatedKeys";
  *(void *)(v1 + 8) = 24;
  *(unsigned char *)(v1 + 16) = 2;
  *(unsigned char *)(v1 + *(int *)(v0 + 24)) = 0;
  return result;
}

uint64_t static SharedSignposts.sesKeyGetDesignatedKeys.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D7894A24(&qword_1EA8415D0, (uint64_t)qword_1EA845EC8, a1);
}

uint64_t sub_1D79B2344()
{
  uint64_t v0 = type metadata accessor for DIPSignpost.Config(0);
  __swift_allocate_value_buffer(v0, qword_1EA845EE0);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EA845EE0);
  if (qword_1EA8414E0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1D7A9B5F8();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EA845BF8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16))(v1 + *(int *)(v0 + 20), v3, v2);
  *(void *)uint64_t v1 = "storage.generatePresentmentKeys";
  *(void *)(v1 + 8) = 31;
  *(unsigned char *)(v1 + 16) = 2;
  *(unsigned char *)(v1 + *(int *)(v0 + 24)) = 0;
  return result;
}

uint64_t static SharedSignposts.storageGeneratePresentmentKeys.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D7894A24(&qword_1EA8415D8, (uint64_t)qword_1EA845EE0, a1);
}

uint64_t sub_1D79B2458()
{
  uint64_t v0 = type metadata accessor for DIPSignpost.Config(0);
  __swift_allocate_value_buffer(v0, qword_1EA845EF8);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EA845EF8);
  if (qword_1EA8414E0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1D7A9B5F8();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EA845BF8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16))(v1 + *(int *)(v0 + 20), v3, v2);
  *(void *)uint64_t v1 = "storage.generateSESPresentmentKey";
  *(void *)(v1 + 8) = 33;
  *(unsigned char *)(v1 + 16) = 2;
  *(unsigned char *)(v1 + *(int *)(v0 + 24)) = 0;
  return result;
}

uint64_t static SharedSignposts.storageGenerateSESPresentmentKey.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D7894A24(&qword_1EA8415E0, (uint64_t)qword_1EA845EF8, a1);
}

uint64_t sub_1D79B256C()
{
  uint64_t v0 = type metadata accessor for DIPSignpost.Config(0);
  __swift_allocate_value_buffer(v0, qword_1EA845F10);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EA845F10);
  if (qword_1EA8414E0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1D7A9B5F8();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EA845BF8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16))(v1 + *(int *)(v0 + 20), v3, v2);
  *(void *)uint64_t v1 = "ckm.generateSESProgenitorKeyAttestation";
  *(void *)(v1 + 8) = 39;
  *(unsigned char *)(v1 + 16) = 2;
  *(unsigned char *)(v1 + *(int *)(v0 + 24)) = 0;
  return result;
}

uint64_t static SharedSignposts.ckmGenerateSESProgenitorKeyAttestation.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D7894A24(&qword_1EA8415E8, (uint64_t)qword_1EA845F10, a1);
}

uint64_t sub_1D79B2680()
{
  uint64_t v0 = type metadata accessor for DIPSignpost.Config(0);
  __swift_allocate_value_buffer(v0, qword_1EA845F28);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EA845F28);
  if (qword_1EA8414E0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1D7A9B5F8();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EA845BF8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16))(v1 + *(int *)(v0 + 20), v3, v2);
  *(void *)uint64_t v1 = "ckm.generateSESPresentmentKeyAttestation";
  *(void *)(v1 + 8) = 40;
  *(unsigned char *)(v1 + 16) = 2;
  *(unsigned char *)(v1 + *(int *)(v0 + 24)) = 0;
  return result;
}

uint64_t static SharedSignposts.ckmGenerateSESPresentmentKeyAttestation.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D7894A24(&qword_1EA8415F0, (uint64_t)qword_1EA845F28, a1);
}

uint64_t sub_1D79B2794()
{
  uint64_t v0 = type metadata accessor for DIPSignpost.Config(0);
  __swift_allocate_value_buffer(v0, qword_1EA845F40);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EA845F40);
  if (qword_1EA8414E0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1D7A9B5F8();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EA845BF8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16))(v1 + *(int *)(v0 + 20), v3, v2);
  *(void *)uint64_t v1 = "ckm.generateSESProgenitorKey";
  *(void *)(v1 + 8) = 28;
  *(unsigned char *)(v1 + 16) = 2;
  *(unsigned char *)(v1 + *(int *)(v0 + 24)) = 0;
  return result;
}

uint64_t static SharedSignposts.ckmGenerateSESProgenitorKey.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D7894A24(&qword_1EA8415F8, (uint64_t)qword_1EA845F40, a1);
}

uint64_t sub_1D79B28A8()
{
  uint64_t v0 = type metadata accessor for DIPSignpost.Config(0);
  __swift_allocate_value_buffer(v0, qword_1EA845F58);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EA845F58);
  if (qword_1EA8414E0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1D7A9B5F8();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EA845BF8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16))(v1 + *(int *)(v0 + 20), v3, v2);
  *(void *)uint64_t v1 = "ckm.generateSESPresentmentKey";
  *(void *)(v1 + 8) = 29;
  *(unsigned char *)(v1 + 16) = 2;
  *(unsigned char *)(v1 + *(int *)(v0 + 24)) = 0;
  return result;
}

uint64_t static SharedSignposts.ckmGenerateSESPresentmentKey.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D7894A24(&qword_1EA841600, (uint64_t)qword_1EA845F58, a1);
}

uint64_t sub_1D79B29BC()
{
  uint64_t v0 = type metadata accessor for DIPSignpost.Config(0);
  __swift_allocate_value_buffer(v0, qword_1EA845F70);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EA845F70);
  if (qword_1EA8414E0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1D7A9B5F8();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EA845BF8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16))(v1 + *(int *)(v0 + 20), v3, v2);
  *(void *)uint64_t v1 = "ckm.fetchSESProgenitorKey";
  *(void *)(v1 + 8) = 25;
  *(unsigned char *)(v1 + 16) = 2;
  *(unsigned char *)(v1 + *(int *)(v0 + 24)) = 0;
  return result;
}

uint64_t static SharedSignposts.ckmFetchSESProgenitorKey.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D7894A24(&qword_1EA841608, (uint64_t)qword_1EA845F70, a1);
}

uint64_t sub_1D79B2AD0()
{
  uint64_t v0 = type metadata accessor for DIPSignpost.Config(0);
  __swift_allocate_value_buffer(v0, qword_1EA845F88);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EA845F88);
  if (qword_1EA8414E0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1D7A9B5F8();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EA845BF8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16))(v1 + *(int *)(v0 + 20), v3, v2);
  *(void *)uint64_t v1 = "ckm.fetchSESPresentmentKey";
  *(void *)(v1 + 8) = 26;
  *(unsigned char *)(v1 + 16) = 2;
  *(unsigned char *)(v1 + *(int *)(v0 + 24)) = 0;
  return result;
}

uint64_t static SharedSignposts.ckmFetchSESPresentmentKey.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D7894A24(&qword_1EA841610, (uint64_t)qword_1EA845F88, a1);
}

ValueMetadata *type metadata accessor for SharedSignposts()
{
  return &type metadata for SharedSignposts;
}

uint64_t sub_1D79B2BF4()
{
  type metadata accessor for CertUsageMapper();
  uint64_t v0 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF84B0);
  uint64_t result = swift_allocObject();
  *(_DWORD *)(result + 24) = 0;
  *(void *)(result + 16) = MEMORY[0x1E4FBC868];
  *(void *)(v0 + 16) = result;
  off_1EBDF7948 = (_UNKNOWN *)v0;
  return result;
}

uint64_t static CertUsageMapper.sharedInstance.getter()
{
  if (qword_1EBDF7958 != -1) {
    swift_once();
  }
  return swift_retain();
}

void CertUsageMapper.registerMapping(forType:usage:)()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + 16);
  uint64_t v2 = (uint64_t *)&v1[4];
  uint64_t v3 = v1 + 6;
  os_unfair_lock_lock(v1 + 6);
  sub_1D79B2D94(v2);
  os_unfair_lock_unlock(v3);
}

uint64_t sub_1D79B2D18(uint64_t *a1, uint64_t a2, char a3)
{
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v8 = *a1;
  *a1 = 0x8000000000000000;
  sub_1D78A1980(a3, a2, isUniquelyReferenced_nonNull_native);
  *a1 = v8;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D79B2D94(uint64_t *a1)
{
  return sub_1D79B2D18(a1, *(void *)(v1 + 16), *(unsigned char *)(v1 + 24));
}

void CertUsageMapper.mapping(forType:)(char *a1@<X8>)
{
  uint64_t v3 = *(os_unfair_lock_s **)(v1 + 16);
  unint64_t v4 = (unint64_t)&v3[4];
  uint64_t v5 = v3 + 6;
  os_unfair_lock_lock(v3 + 6);
  sub_1D79B2E74(v4, a1);
  os_unfair_lock_unlock(v5);
}

unint64_t sub_1D79B2E18@<X0>(unint64_t result@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v4 = *(void *)result;
  if (*(void *)(*(void *)result + 16) && (uint64_t result = sub_1D7A18648(a2), (v5 & 1) != 0)) {
    char v6 = *(unsigned char *)(*(void *)(v4 + 56) + result);
  }
  else {
    char v6 = 21;
  }
  *a3 = v6;
  return result;
}

unint64_t sub_1D79B2E74@<X0>(unint64_t result@<X0>, char *a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v5 = *(void *)result;
  if (*(void *)(*(void *)result + 16) && (uint64_t result = sub_1D7A18648(*(void *)(v3 + 16)), (v6 & 1) != 0)) {
    char v7 = *(unsigned char *)(*(void *)(v5 + 56) + result);
  }
  else {
    char v7 = 21;
  }
  *a2 = v7;
  return result;
}

uint64_t CertUsageMapper.deinit()
{
  swift_release();
  return v0;
}

uint64_t CertUsageMapper.__deallocating_deinit()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CertUsageMapper()
{
  return self;
}

uint64_t method lookup function for CertUsageMapper(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for CertUsageMapper);
}

void *sub_1D79B2F68()
{
  uint64_t v0 = type metadata accessor for DIPAccountManager();
  uint64_t v1 = swift_allocObject();
  uint64_t result = DIPAccountManager.init()();
  qword_1EBDF7CF8 = v0;
  unk_1EBDF7D00 = &protocol witness table for DIPAccountManager;
  qword_1EBDF7CE0 = v1;
  return result;
}

uint64_t DIPAccountManager.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  DIPAccountManager.init()();
  return v0;
}

uint64_t static DIPAccountManager.sharedInstance.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EBDF7F50 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return sub_1D7869658((uint64_t)&qword_1EBDF7CE0, a1);
}

uint64_t static DIPAccountManager.sharedInstance.setter(uint64_t *a1)
{
  if (qword_1EBDF7F50 != -1) {
    swift_once();
  }
  swift_beginAccess();
  __swift_assign_boxed_opaque_existential_1(&qword_1EBDF7CE0, a1);
  swift_endAccess();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t (*static DIPAccountManager.sharedInstance.modify())()
{
  if (qword_1EBDF7F50 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j__swift_endAccess;
}

id sub_1D79B3188@<X0>(void **a1@<X0>, void **a2@<X8>)
{
  uint64_t v2 = *a1;
  *a2 = *a1;
  return v2;
}

void *DIPAccountManager.init()()
{
  v0[2] = 0xD000000000000015;
  v0[3] = 0x80000001D7AC7280;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF84B8);
  uint64_t v1 = swift_allocObject();
  v0[5] = v1;
  *(_DWORD *)(v1 + 24) = 0;
  uint64_t v2 = (os_unfair_lock_s *)(v1 + 24);
  *(void *)(v1 + 16) = 0;
  uint64_t v3 = (id *)(v1 + 16);
  id v4 = objc_msgSend(self, sel_defaultStore);
  if (!v4) {
    id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F179C8]), sel_init);
  }
  v0[4] = v4;
  id v5 = objc_msgSend(v4, sel_aa_primaryAppleAccount);
  MEMORY[0x1F4188790](v5, v6, v7, v8, v9, v10, v11, v12);
  os_unfair_lock_lock(v2);
  sub_1D79B3350(v3);
  os_unfair_lock_unlock(v2);

  return v0;
}

Swift::Void __swiftcall DIPAccountManager.reloadPrimaryAccount()()
{
  id v1 = objc_msgSend(*(id *)(v0 + 32), sel_aa_primaryAppleAccount);
  uint64_t v2 = *(os_unfair_lock_s **)(v0 + 40);
  uint64_t v3 = (id *)&v2[4];
  id v4 = v2 + 6;
  os_unfair_lock_lock(v2 + 6);
  sub_1D79B6830(v3);
  os_unfair_lock_unlock(v4);
}

id sub_1D79B3350(id *a1)
{
  uint64_t v3 = *(void **)(v1 + 16);

  *a1 = v3;
  return v3;
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> DIPAccountManager.verifyAccountStatus(requireHSA2:)(Swift::Bool requireHSA2)
{
  uint64_t v3 = sub_1D7A9B5F8();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v3, v5, v6, v7, v8, v9, v10, v11);
  uint64_t v14 = (char *)&v53[-4] - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = MEMORY[0x1F4188790](v12, v15, v16, v17, v18, v19, v20, v21);
  uint64_t v24 = (char *)&v53[-4] - v23;
  MEMORY[0x1F4188790](v22, v25, v26, v27, v28, v29, v30, v31);
  uint64_t v33 = (char *)&v53[-4] - v32;
  unint64_t v34 = (unint64_t)DIPAccountManager.primaryAppleAccount()();
  if (!v34)
  {
    v53[0] = 4;
    unint64_t v43 = sub_1D785EAF8(MEMORY[0x1E4FBC860]);
    sub_1D7860544();
    swift_allocError();
    DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xD000000000000028, 0x80000001D7AC72A0, v53, 0, v43, 0xD00000000000005ALL, 0x80000001D7AC72D0, v44, 0xD000000000000021, 0x80000001D7AC7330, 67);
    swift_willThrow();
    return;
  }
  unint64_t v35 = (void *)v34;
  if (!requireHSA2)
  {
    if (qword_1EBDF9DC8 != -1) {
      swift_once();
    }
    uint64_t v45 = __swift_project_value_buffer(v3, (uint64_t)qword_1EBDFBE70);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v33, v45, v3);
    uint64_t v40 = sub_1D7A9B5D8();
    os_log_type_t v46 = sub_1D7A9C748();
    if (!os_log_type_enabled(v40, v46)) {
      goto LABEL_17;
    }
    uint64_t v42 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v42 = 0;
    _os_log_impl(&dword_1D7853000, v40, v46, "HSA2 check is not required", v42, 2u);
    goto LABEL_16;
  }
  id v36 = objc_msgSend(self, sel_standardUserDefaults);
  if (qword_1EBDF9690 != -1) {
    swift_once();
  }
  if (byte_1EBDFBE68 == 1)
  {
    uint64_t v37 = (void *)sub_1D7A9BF98();
    unsigned __int8 v38 = objc_msgSend(v36, sel_BOOLForKey_, v37);

    if (v38)
    {
      if (qword_1EBDF9DC8 != -1) {
        swift_once();
      }
      uint64_t v39 = __swift_project_value_buffer(v3, (uint64_t)qword_1EBDFBE70);
      swift_beginAccess();
      (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v24, v39, v3);
      uint64_t v40 = sub_1D7A9B5D8();
      os_log_type_t v41 = sub_1D7A9C748();
      if (!os_log_type_enabled(v40, v41))
      {
        uint64_t v33 = v24;
        goto LABEL_17;
      }
      uint64_t v42 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v42 = 0;
      _os_log_impl(&dword_1D7853000, v40, v41, "Not requiring HSA2 because of user defaults settings", v42, 2u);
      uint64_t v33 = v24;
LABEL_16:
      MEMORY[0x1D947D740](v42, -1, -1);
LABEL_17:

      (*(void (**)(char *, uint64_t))(v4 + 8))(v33, v3);
      return;
    }
  }
  else
  {
  }
  char v47 = sub_1D79B5FAC(v35);
  if (!v1)
  {
    if (v47)
    {
      if (qword_1EBDF9DC8 != -1) {
        swift_once();
      }
      uint64_t v48 = __swift_project_value_buffer(v3, (uint64_t)qword_1EBDFBE70);
      swift_beginAccess();
      (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v14, v48, v3);
      uint64_t v40 = sub_1D7A9B5D8();
      os_log_type_t v49 = sub_1D7A9C748();
      if (!os_log_type_enabled(v40, v49))
      {
        uint64_t v33 = v14;
        goto LABEL_17;
      }
      uint64_t v42 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v42 = 0;
      _os_log_impl(&dword_1D7853000, v40, v49, "User has HSA2 enabled", v42, 2u);
      uint64_t v33 = v14;
      goto LABEL_16;
    }
    v53[0] = 19;
    unint64_t v50 = sub_1D785EAF8(MEMORY[0x1E4FBC860]);
    sub_1D7860544();
    swift_allocError();
    DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xD00000000000001CLL, 0x80000001D7AC7360, v53, 0, v50, 0xD00000000000005ALL, 0x80000001D7AC72D0, v51, 0xD000000000000021, 0x80000001D7AC7330, 84);
    swift_willThrow();
  }
}

ACAccount_optional __swiftcall DIPAccountManager.primaryAppleAccount()()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1D7A9B5F8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2, v4, v5, v6, v7, v8, v9, v10);
  uint64_t v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *(os_unfair_lock_s **)(v0 + 40);
  uint64_t v14 = (void **)&v13[4];
  uint64_t v15 = v13 + 6;
  os_unfair_lock_lock(v13 + 6);
  sub_1D79B3188(v14, &v32);
  os_unfair_lock_unlock(v15);
  uint64_t v16 = v32;

  if (!v16)
  {
    if (qword_1EBDF9DC8 != -1) {
      swift_once();
    }
    uint64_t v17 = __swift_project_value_buffer(v2, (uint64_t)qword_1EBDFBE70);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v12, v17, v2);
    uint64_t v18 = sub_1D7A9B5D8();
    os_log_type_t v19 = sub_1D7A9C748();
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v20 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v20 = 0;
      _os_log_impl(&dword_1D7853000, v18, v19, "Primary account is nil. Will attempt to reload", v20, 2u);
      MEMORY[0x1D947D740](v20, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v3 + 8))(v12, v2);
    id v21 = objc_msgSend(*(id *)(v1 + 32), sel_aa_primaryAppleAccount);
    *(&v31 - 2) = MEMORY[0x1F4188790](v21, v22, v23, v24, v25, v26, v27, v28);
    os_unfair_lock_lock(v15);
    sub_1D79B6830(v14);
    os_unfair_lock_unlock(v15);
  }
  os_unfair_lock_lock(v15);
  sub_1D79B3188(v14, (void **)&v33);
  os_unfair_lock_unlock(v15);
  uint64_t v30 = v33;
  result.value.super.isa = v30;
  result.is_nil = v29;
  return result;
}

Swift::Bool __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> DIPAccountManager.isHSA2Enabled(account:)(ACAccount account)
{
  return sub_1D79B5FAC(account.super.isa) & 1;
}

Swift::Void __swiftcall DIPAccountManager.resetPrimaryAccount()()
{
  uint64_t v0 = sub_1D7A9B5F8();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0, v2, v3, v4, v5, v6, v7, v8);
  uint64_t v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EBDF9DC8 != -1) {
    swift_once();
  }
  uint64_t v11 = __swift_project_value_buffer(v0, (uint64_t)qword_1EBDFBE70);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v10, v11, v0);
  uint64_t v12 = sub_1D7A9B5D8();
  os_log_type_t v13 = sub_1D7A9C748();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v14 = 0;
    _os_log_impl(&dword_1D7853000, v12, v13, "resetting the primary account", v14, 2u);
    MEMORY[0x1D947D740](v14, -1, -1);
  }

  uint64_t v15 = (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v10, v0);
  MEMORY[0x1F4188790](v15, v16, v17, v18, v19, v20, v21, v22);
  *(&v26 - 2) = 0;
  uint64_t v24 = (id *)&v23[4];
  uint64_t v25 = v23 + 6;
  os_unfair_lock_lock(v23 + 6);
  sub_1D79B6830(v24);
  os_unfair_lock_unlock(v25);
}

Swift::String __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> DIPAccountManager.primaryAppleAccountDSID()()
{
  uint64_t v0 = (void *)DIPAccountManager.primaryAppleAccount()();
  if (v0)
  {
    uint64_t v1 = v0;
    id v2 = objc_msgSend(v0, sel_aa_personID);
    if (v2)
    {
      uint64_t v3 = v2;
      uint64_t v4 = sub_1D7A9BFC8();
      uint64_t v6 = v5;

      uint64_t v7 = v4;
      uint64_t v8 = v6;
    }
    else
    {
      __int16 v14 = 4;
      unint64_t v11 = sub_1D785EAF8(MEMORY[0x1E4FBC860]);
      sub_1D7860544();
      swift_allocError();
      DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xD000000000000017, 0x80000001D7AC73A0, &v14, 0, v11, 0xD00000000000005ALL, 0x80000001D7AC72D0, v12, 0xD000000000000019, 0x80000001D7AC7380, 116);
      swift_willThrow();
    }
  }
  else
  {
    __int16 v15 = 4;
    unint64_t v9 = sub_1D785EAF8(MEMORY[0x1E4FBC860]);
    sub_1D7860544();
    swift_allocError();
    DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xD000000000000028, 0x80000001D7AC72A0, &v15, 0, v9, 0xD00000000000005ALL, 0x80000001D7AC72D0, v10, 0xD000000000000019, 0x80000001D7AC7380, 113);
    uint64_t v7 = swift_willThrow();
  }
  result._object = v8;
  result._uint64_t countAndFlagsBits = v7;
  return result;
}

Swift::String __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> DIPAccountManager.primaryAppleAccountIdentifier()()
{
  uint64_t v0 = (void *)DIPAccountManager.primaryAppleAccount()();
  if (v0)
  {
    uint64_t v1 = v0;
    id v2 = objc_msgSend(v0, sel_identifier);
    if (v2)
    {
      uint64_t v4 = v2;
      uint64_t v5 = sub_1D7A9BFC8();
      uint64_t v7 = v6;

      id v2 = (id)v5;
      uint64_t v3 = v7;
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    __int16 v11 = 4;
    unint64_t v8 = sub_1D785EAF8(MEMORY[0x1E4FBC860]);
    sub_1D7860544();
    swift_allocError();
    DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xD000000000000028, 0x80000001D7AC72A0, &v11, 0, v8, 0xD00000000000005ALL, 0x80000001D7AC72D0, v9, 0xD00000000000001FLL, 0x80000001D7AC73C0, 127);
    id v2 = (id)swift_willThrow();
  }
  result._object = v3;
  result._uint64_t countAndFlagsBits = (uint64_t)v2;
  return result;
}

Swift::String __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> DIPAccountManager.primaryiCloudAccountAltDSID()()
{
  id v1 = objc_msgSend(*(id *)(v0 + 32), sel_aida_accountForPrimaryiCloudAccount);
  if (v1)
  {
    id v2 = v1;
    id v3 = objc_msgSend(v1, sel_aida_alternateDSID);
    if (v3)
    {
      uint64_t v4 = v3;
      uint64_t v5 = sub_1D7A9BFC8();
      uint64_t v7 = v6;

      uint64_t v8 = v5;
      uint64_t v9 = v7;
    }
    else
    {
      __int16 v15 = 4;
      unint64_t v12 = sub_1D785EAF8(MEMORY[0x1E4FBC860]);
      sub_1D7860544();
      swift_allocError();
      DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xD000000000000026, 0x80000001D7AC7400, &v15, 0, v12, 0xD00000000000005ALL, 0x80000001D7AC72D0, v13, 0xD00000000000001DLL, 0x80000001D7AC73E0, 137);
      swift_willThrow();
    }
  }
  else
  {
    __int16 v16 = 4;
    unint64_t v10 = sub_1D785EAF8(MEMORY[0x1E4FBC860]);
    sub_1D7860544();
    swift_allocError();
    DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xD000000000000028, 0x80000001D7AC72A0, &v16, 0, v10, 0xD00000000000005ALL, 0x80000001D7AC72D0, v11, 0xD00000000000001DLL, 0x80000001D7AC73E0, 134);
    uint64_t v8 = swift_willThrow();
  }
  result._object = v9;
  result._uint64_t countAndFlagsBits = v8;
  return result;
}

uint64_t DIPAccountManager.renewGrandslamToken(_:)(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return MEMORY[0x1F4188298](sub_1D79B436C, 0, 0);
}

uint64_t sub_1D79B436C()
{
  uint64_t v2 = v0[3];
  uint64_t v1 = v0[4];
  uint64_t v3 = v0[2];
  uint64_t v4 = (void *)swift_task_alloc();
  v0[5] = v4;
  v4[2] = v1;
  v4[3] = v3;
  v4[4] = v2;
  uint64_t v5 = (void *)swift_task_alloc();
  v0[6] = v5;
  *uint64_t v5 = v0;
  uint64_t v6 = MEMORY[0x1E4FBC848];
  v5[1] = sub_1D79B4468;
  return MEMORY[0x1F4188160](v5, 0, 0, 0xD000000000000017, 0x80000001D7AC7430, sub_1D79B63A4, v4, v6 + 8);
}

uint64_t sub_1D79B4468()
{
  *(void *)(*(void *)v1 + 56) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1D79B4584;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_1D78F442C;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D79B4584()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D79B45E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8439D0);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  MEMORY[0x1F4188790](v7, v10, v11, v12, v13, v14, v15, v16);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v7);
  unint64_t v17 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v18 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v18 + v17, (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
  DIPAccountManager.renewGrandslamToken(_:completionHandler:)(a3, a4, (void (*)(void *))sub_1D79B67BC, v18);
  return swift_release();
}

uint64_t sub_1D79B4740(void *a1)
{
  if (a1)
  {
    id v1 = a1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8439D0);
    return sub_1D7A9C448();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8439D0);
    return sub_1D7A9C458();
  }
}

void DIPAccountManager.renewGrandslamToken(_:completionHandler:)(uint64_t a1, uint64_t a2, void (*a3)(void *), uint64_t a4)
{
  uint64_t v8 = (void *)v4[4];
  if (a2)
  {
    uint64_t v9 = (void *)sub_1D7A9BF98();
    id v10 = objc_msgSend(v8, sel_aida_accountForAltDSID_, v9);
  }
  else
  {
    id v10 = objc_msgSend(v8, sel_aida_accountForPrimaryiCloudAccount);
  }
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a3;
  *(void *)(v11 + 24) = a4;
  if (v10)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA845FA8);
    uint64_t v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_1D7AA08E0;
    uint64_t v13 = v4[2];
    uint64_t v14 = v4[3];
    *(void *)(v12 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v12 + 32) = v13;
    *(void *)(v12 + 40) = v14;
    swift_retain();
    id v15 = v10;
    swift_bridgeObjectRetain();
    uint64_t v16 = (void *)sub_1D7A9C2F8();
    swift_bridgeObjectRelease();
    uint64_t v27 = sub_1D79B63E8;
    uint64_t v28 = v11;
    uint64_t aBlock = MEMORY[0x1E4F143A8];
    uint64_t v24 = 1107296256;
    uint64_t v25 = sub_1D79B4EC8;
    uint64_t v26 = &block_descriptor_8;
    unint64_t v17 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    objc_msgSend(v8, sel_aida_renewCredentialsForAccount_services_force_completion_, v15, v16, 1, v17);
    swift_release();
LABEL_9:

    _Block_release(v17);
    return;
  }
  if (a2)
  {
    swift_retain();
    uint64_t v18 = (void *)sub_1D7A9BF98();
    id v19 = objc_msgSend(v8, sel_aa_appleAccountWithAltDSID_, v18);

    if (v19)
    {
LABEL_8:
      id v15 = v19;
      uint64_t v16 = (void *)sub_1D7A9BF98();
      uint64_t v27 = sub_1D79B63E8;
      uint64_t v28 = v11;
      uint64_t aBlock = MEMORY[0x1E4F143A8];
      uint64_t v24 = 1107296256;
      uint64_t v25 = sub_1D79B4EC8;
      uint64_t v26 = &block_descriptor_8;
      unint64_t v17 = _Block_copy(&aBlock);
      swift_retain();
      swift_release();
      objc_msgSend(v8, sel_renewCredentialsForAccount_force_reason_completion_, v15, 0, v16, v17);
      swift_release();

      goto LABEL_9;
    }
  }
  else
  {
    swift_retain();
    id v19 = objc_msgSend(v8, sel_aa_primaryAppleAccount);
    if (v19) {
      goto LABEL_8;
    }
  }
  LOWORD(aBlock) = 4;
  unint64_t v20 = sub_1D785EAF8(MEMORY[0x1E4FBC860]);
  sub_1D7860544();
  uint64_t v21 = (void *)swift_allocError();
  DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xD000000000000028, 0x80000001D7AC72A0, (__int16 *)&aBlock, 0, v20, 0xD00000000000005ALL, 0x80000001D7AC72D0, v22, 0xD000000000000029, 0x80000001D7AC7450, 200);
  a3(v21);
  swift_release();
}

void sub_1D79B4BBC(uint64_t a1, id a2, void (*a3)(void))
{
  if (a2)
  {
    __int16 v17 = 96;
    id v5 = a2;
    unint64_t v6 = sub_1D785EAF8(MEMORY[0x1E4FBC860]);
    sub_1D7860544();
    uint64_t v7 = swift_allocError();
    DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(a2, 0xD00000000000001BLL, 0x80000001D7AC7600, &v17, 0, v6, 0xD00000000000005ALL, 0x80000001D7AC72D0, v8, 0xD000000000000029, 0x80000001D7AC7450, 165);
    ((void (*)(uint64_t))a3)(v7);
    uint64_t v9 = (void *)v7;
  }
  else
  {
    switch(a1)
    {
      case 2:
        __int16 v19 = 96;
        unint64_t v10 = sub_1D785EAF8(MEMORY[0x1E4FBC860]);
        sub_1D7860544();
        uint64_t v11 = swift_allocError();
        DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xD000000000000019, 0x80000001D7AC75B0, &v19, 0, v10, 0xD00000000000005ALL, 0x80000001D7AC72D0, v12, 0xD000000000000029, 0x80000001D7AC7450, 177);
        break;
      case 1:
        __int16 v18 = 96;
        unint64_t v13 = sub_1D785EAF8(MEMORY[0x1E4FBC860]);
        sub_1D7860544();
        uint64_t v11 = swift_allocError();
        DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xD000000000000020, 0x80000001D7AC75D0, &v18, 0, v13, 0xD00000000000005ALL, 0x80000001D7AC72D0, v14, 0xD000000000000029, 0x80000001D7AC7450, 174);
        break;
      case 0:
        a3();
        return;
      default:
        __int16 v20 = 96;
        unint64_t v15 = sub_1D785EAF8(MEMORY[0x1E4FBC860]);
        sub_1D7860544();
        uint64_t v11 = swift_allocError();
        DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xD000000000000021, 0x80000001D7AC7580, &v20, 0, v15, 0xD00000000000005ALL, 0x80000001D7AC72D0, v16, 0xD000000000000029, 0x80000001D7AC7450, 180);
        break;
    }
    ((void (*)(uint64_t))a3)(v11);
    uint64_t v9 = (void *)v11;
  }
}

void sub_1D79B4EC8(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  swift_retain();
  id v6 = a3;
  v5(a2, a3);
  swift_release();
}

Swift::String __swiftcall DIPAccountManager.appleAuthHeader(_:)(Swift::String_optional a1)
{
  uint64_t v2 = v1;
  object = a1.value._object;
  uint64_t v4 = sub_1D7A9B5F8();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v4, v6, v7, v8, v9, v10, v11, v12);
  unint64_t v15 = (char *)&v69 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13, v16, v17, v18, v19, v20, v21, v22);
  uint64_t v24 = (char *)&v69 - v23;
  if (object)
  {
    uint64_t v25 = *(void **)(v2 + 32);
    uint64_t v26 = (void *)sub_1D7A9BF98();
    id v27 = objc_msgSend(v25, sel_aida_accountForAltDSID_, v26);

    if (qword_1EBDF9DC8 != -1) {
      swift_once();
    }
    uint64_t v28 = __swift_project_value_buffer(v4, (uint64_t)qword_1EBDFBE70);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v24, v28, v4);
    Swift::Bool v29 = sub_1D7A9B5D8();
    os_log_type_t v30 = sub_1D7A9C778();
    if (os_log_type_enabled(v29, v30))
    {
      uint64_t v31 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v31 = 0;
      _os_log_impl(&dword_1D7853000, v29, v30, "using altDSID for authorization", v31, 2u);
      MEMORY[0x1D947D740](v31, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v5 + 8))(v24, v4);
  }
  else
  {
    id v27 = objc_msgSend(*(id *)(v2 + 32), sel_aida_accountForPrimaryiCloudAccount);
  }
  if (v27)
  {
    id v32 = v27;
    id v33 = objc_msgSend(v32, sel_aida_alternateDSID);
    if (v33)
    {
      unint64_t v34 = v33;
      uint64_t v35 = sub_1D7A9BFC8();
      uint64_t v37 = v36;

      unsigned __int8 v38 = (void *)sub_1D7A9BF98();
      id v39 = objc_msgSend(v32, sel_aida_tokenForService_, v38);

      if (v39)
      {
        uint64_t v40 = sub_1D7A9BFC8();
        uint64_t v42 = v41;

        __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF7940);
        uint64_t v43 = swift_allocObject();
        *(_OWORD *)(v43 + 16) = xmmword_1D7AA0A40;
        uint64_t v44 = MEMORY[0x1E4FBB1A0];
        *(void *)(v43 + 56) = MEMORY[0x1E4FBB1A0];
        unint64_t v45 = sub_1D79B6408();
        *(void *)(v43 + 32) = v35;
        *(void *)(v43 + 40) = v37;
        *(void *)(v43 + 96) = v44;
        *(void *)(v43 + 104) = v45;
        *(void *)(v43 + 64) = v45;
        *(void *)(v43 + 72) = v40;
        *(void *)(v43 + 80) = v42;
        uint64_t v46 = sub_1D7A9BFF8();
        unint64_t v48 = v47;

        goto LABEL_19;
      }
      swift_bridgeObjectRelease();
      __int16 v71 = 4;
      unint64_t v54 = sub_1D785EAF8(MEMORY[0x1E4FBC860]);
      sub_1D7860544();
      unint64_t v50 = (void *)swift_allocError();
      DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xD00000000000001DLL, 0x80000001D7AC74D0, &v71, 0, v54, 0xD00000000000005ALL, 0x80000001D7AC72D0, v55, 0xD000000000000013, 0x80000001D7AC7480, 227);
    }
    else
    {
      __int16 v71 = 4;
      unint64_t v52 = sub_1D785EAF8(MEMORY[0x1E4FBC860]);
      sub_1D7860544();
      unint64_t v50 = (void *)swift_allocError();
      DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xD000000000000026, 0x80000001D7AC7400, &v71, 0, v52, 0xD00000000000005ALL, 0x80000001D7AC72D0, v53, 0xD000000000000013, 0x80000001D7AC7480, 224);
    }
    swift_willThrow();
  }
  else
  {
    __int16 v71 = 4;
    unint64_t v49 = sub_1D785EAF8(MEMORY[0x1E4FBC860]);
    sub_1D7860544();
    unint64_t v50 = (void *)swift_allocError();
    DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xD000000000000028, 0x80000001D7AC72A0, &v71, 0, v49, 0xD00000000000005ALL, 0x80000001D7AC72D0, v51, 0xD000000000000013, 0x80000001D7AC7480, 221);
    swift_willThrow();
  }
  __int16 v70 = 102;
  id v56 = v50;
  unint64_t v57 = sub_1D785EAF8(MEMORY[0x1E4FBC860]);
  DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(v50, 0xD000000000000024, 0x80000001D7AC74A0, &v70, 0, v57, 0xD00000000000005ALL, 0x80000001D7AC72D0, (uint64_t)&v71, 0xD000000000000013, 0x80000001D7AC7480, 234);
  __int16 v58 = v71;
  uint64_t v59 = v72;
  uint64_t v60 = v73;
  uint64_t v61 = v74;
  sub_1D7860544();
  uint64_t v62 = (void *)swift_allocError();
  *(_WORD *)uint64_t v63 = v58;
  *(void *)(v63 + 8) = v59;
  *(void *)(v63 + 16) = v60;
  *(void *)(v63 + 24) = v61;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v64 = v61;
  if (qword_1EBDF9DC8 != -1) {
    swift_once();
  }
  uint64_t v65 = __swift_project_value_buffer(v4, (uint64_t)qword_1EBDFBE70);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v15, v65, v4);
  unint64_t v48 = 0xE000000000000000;
  DIPLogError(_:message:log:)(v62, 0, 0xE000000000000000);
  _s13CoreIDVShared9AnalyticsC9sendErroryys0E0_pFZ_0(v62);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v15, v4);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  uint64_t v46 = 0;
LABEL_19:
  uint64_t v66 = v46;
  uint64_t v67 = (void *)v48;
  result._object = v67;
  result._uint64_t countAndFlagsBits = v66;
  return result;
}

ACAccount_optional __swiftcall DIPAccountManager.getAccount(with:)(Swift::String with)
{
  object = with._object;
  uint64_t countAndFlagsBits = with._countAndFlagsBits;
  uint64_t v4 = sub_1D7A9B5F8();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v4, v6, v7, v8, v9, v10, v11, v12);
  unint64_t v50 = (char *)&v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13, v15, v16, v17, v18, v19, v20, v21);
  uint64_t v23 = (char *)&v44 - v22;
  uint64_t v24 = *(void **)(v1 + 32);
  uint64_t v25 = (void *)sub_1D7A9BF98();
  id v26 = objc_msgSend(v24, sel_accountTypeWithAccountTypeIdentifier_, v25);

  id v49 = v26;
  id v27 = objc_msgSend(v24, sel_accountsWithAccountType_, v26);
  if (v27)
  {
    uint64_t v28 = v27;
    uint64_t v29 = sub_1D7A9C318();
  }
  else
  {
    uint64_t v29 = 0;
  }
  if (qword_1EBDF9DC8 != -1) {
    swift_once();
  }
  uint64_t v30 = __swift_project_value_buffer(v4, (uint64_t)qword_1EBDFBE70);
  swift_beginAccess();
  unint64_t v47 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  uint64_t v48 = v30;
  v47(v23, v30, v4);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v31 = sub_1D7A9B5D8();
  os_log_type_t v32 = sub_1D7A9C748();
  if (os_log_type_enabled(v31, v32))
  {
    uint64_t v44 = countAndFlagsBits;
    uint64_t v45 = v5;
    uint64_t v33 = swift_slowAlloc();
    uint64_t v34 = swift_slowAlloc();
    *(void *)&long long v52 = v34;
    *(_DWORD *)uint64_t v33 = 134349314;
    uint64_t v46 = v4;
    if (v29)
    {
      uint64_t v35 = *(void *)(v29 + 16);
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v35 = 0;
    }
    uint64_t v51 = v35;
    sub_1D7A9C9E8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v33 + 12) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v51 = sub_1D7923300(v44, (unint64_t)object, (uint64_t *)&v52);
    sub_1D7A9C9E8();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1D7853000, v31, v32, "AccountStore returned %{public}ld accounts of type %s", (uint8_t *)v33, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D947D740](v34, -1, -1);
    MEMORY[0x1D947D740](v33, -1, -1);

    uint64_t v4 = v46;
    uint64_t v36 = *(void (**)(char *, uint64_t))(v45 + 8);
    v36(v23, v46);
    if (!v29) {
      goto LABEL_18;
    }
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    uint64_t v36 = *(void (**)(char *, uint64_t))(v5 + 8);
    v36(v23, v4);
    if (!v29)
    {
LABEL_18:
      long long v52 = 0u;
      long long v53 = 0u;
LABEL_19:
      sub_1D7867598((uint64_t)&v52);
      unsigned __int8 v38 = v50;
      goto LABEL_20;
    }
  }
  if (*(void *)(v29 + 16))
  {
    sub_1D78907D8(v29 + 32, (uint64_t)&v52);
  }
  else
  {
    long long v52 = 0u;
    long long v53 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((void *)&v53 + 1)) {
    goto LABEL_19;
  }
  sub_1D79B645C();
  char v37 = swift_dynamicCast();
  unsigned __int8 v38 = v50;
  if (v37)
  {

    uint64_t v40 = (objc_class *)v51;
    goto LABEL_23;
  }
LABEL_20:
  v47(v38, v48, v4);
  uint64_t v41 = sub_1D7A9B5D8();
  os_log_type_t v42 = sub_1D7A9C738();
  if (os_log_type_enabled(v41, v42))
  {
    uint64_t v43 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v43 = 0;
    _os_log_impl(&dword_1D7853000, v41, v42, "Couldn't get accounts", v43, 2u);
    MEMORY[0x1D947D740](v43, -1, -1);
  }

  v36(v38, v4);
  uint64_t v40 = 0;
LABEL_23:
  result.value.super.isa = v40;
  result.is_nil = v39;
  return result;
}

id static DIPAccountManager.isPrimaryAppleAccount(account:)(void *a1)
{
  id result = objc_msgSend(a1, sel_accountType);
  if (!result)
  {
    __break(1u);
    return result;
  }
  uint64_t v3 = result;
  id v4 = objc_msgSend(result, sel_identifier);

  if (!v4)
  {
    sub_1D7A9BFC8();
    goto LABEL_11;
  }
  uint64_t v5 = sub_1D7A9BFC8();
  uint64_t v7 = v6;

  uint64_t v8 = sub_1D7A9BFC8();
  if (!v7)
  {
LABEL_11:
    swift_bridgeObjectRelease();
    return 0;
  }
  if (v5 == v8 && v7 == v9)
  {
    swift_bridgeObjectRelease_n();
    return objc_msgSend(a1, sel_aa_isAccountClass_, *MEMORY[0x1E4F4BF38]);
  }
  char v11 = sub_1D7A9D358();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id result = 0;
  if (v11) {
    return objc_msgSend(a1, sel_aa_isAccountClass_, *MEMORY[0x1E4F4BF38]);
  }
  return result;
}

id static DIPAccountManager.isChildAccount(account:)(uint64_t a1)
{
  id v2 = objc_msgSend(self, sel_sharedInstance);
  id v3 = objc_msgSend(v2, sel_userUnderAgeForAccount_, a1);

  return v3;
}

uint64_t DIPAccountManager.deinit()
{
  swift_bridgeObjectRelease();

  swift_release();
  return v0;
}

uint64_t DIPAccountManager.__deallocating_deinit()
{
  swift_bridgeObjectRelease();

  swift_release();
  return swift_deallocClassInstance();
}

void sub_1D79B5CCC()
{
  uint64_t v1 = *v0;
  id v2 = objc_msgSend(*(id *)(v1 + 32), sel_aa_primaryAppleAccount);
  id v3 = *(os_unfair_lock_s **)(v1 + 40);
  id v4 = (id *)&v3[4];
  uint64_t v5 = v3 + 6;
  os_unfair_lock_lock(v3 + 6);
  sub_1D79B6830(v4);
  os_unfair_lock_unlock(v5);
}

void sub_1D79B5D4C()
{
}

void sub_1D79B5D70(Swift::Bool a1)
{
}

unint64_t sub_1D79B5D94()
{
  return (unint64_t)DIPAccountManager.primaryAppleAccount()();
}

uint64_t sub_1D79B5DB8()
{
  return DIPAccountManager.primaryAppleAccountIdentifier()()._countAndFlagsBits;
}

uint64_t sub_1D79B5DDC()
{
  return DIPAccountManager.primaryAppleAccountDSID()()._countAndFlagsBits;
}

uint64_t sub_1D79B5E00()
{
  return DIPAccountManager.primaryiCloudAccountAltDSID()()._countAndFlagsBits;
}

uint64_t sub_1D79B5E24(uint64_t a1, uint64_t a2)
{
  return DIPAccountManager.appleAuthHeader(_:)(*(Swift::String_optional *)&a1)._countAndFlagsBits;
}

uint64_t sub_1D79B5E48(uint64_t a1, uint64_t a2)
{
  v3[2] = a1;
  v3[3] = a2;
  v3[4] = *v2;
  return MEMORY[0x1F4188298](sub_1D79B5E70, 0, 0);
}

uint64_t sub_1D79B5E70()
{
  uint64_t v2 = v0[3];
  uint64_t v1 = v0[4];
  uint64_t v3 = v0[2];
  id v4 = (void *)swift_task_alloc();
  v0[5] = v4;
  v4[2] = v1;
  v4[3] = v3;
  v4[4] = v2;
  uint64_t v5 = (void *)swift_task_alloc();
  v0[6] = v5;
  *uint64_t v5 = v0;
  uint64_t v6 = MEMORY[0x1E4FBC848];
  v5[1] = sub_1D79B4468;
  return MEMORY[0x1F4188160](v5, 0, 0, 0xD000000000000017, 0x80000001D7AC7430, sub_1D79B6848, v4, v6 + 8);
}

uint64_t sub_1D79B5F6C(void *a1)
{
  return sub_1D79B5FAC(a1) & 1;
}

unint64_t sub_1D79B5F88(uint64_t a1, uint64_t a2)
{
  return (unint64_t)DIPAccountManager.getAccount(with:)(*(Swift::String *)&a1);
}

uint64_t sub_1D79B5FAC(id a1)
{
  uint64_t v2 = type metadata accessor for DIPSignpost.Config(0);
  MEMORY[0x1F4188790](v2, v3, v4, v5, v6, v7, v8, v9);
  char v11 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for DIPSignpost(0);
  uint64_t v20 = MEMORY[0x1F4188790](v12 - 8, v13, v14, v15, v16, v17, v18, v19);
  uint64_t v22 = (char *)&v43 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v20, v23, v24, v25, v26, v27, v28, v29);
  uint64_t v31 = (char *)&v43 - v30;
  if (qword_1EBDF7B58 != -1) {
    swift_once();
  }
  uint64_t v32 = __swift_project_value_buffer(v2, (uint64_t)qword_1EBDF7820);
  sub_1D78912C4(v32, (uint64_t)v11);
  DIPSignpost.init(_:)(v11, (uint64_t)v31);
  id v33 = objc_msgSend(a1, sel_aida_alternateDSID);
  if (!v33)
  {
    __int16 v45 = 93;
    unint64_t v38 = sub_1D785EAF8(MEMORY[0x1E4FBC860]);
    sub_1D7860544();
    swift_allocError();
    DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xD000000000000016, 0x80000001D7AC7620, &v45, 0, v38, 0xD00000000000005ALL, 0x80000001D7AC72D0, v39, 0xD000000000000017, 0x80000001D7AC7640, 250);
    swift_willThrow();
LABEL_10:
    DIPSignpost.end(workflowID:isBackground:)((Swift::String_optional)0, (Swift::Bool_optional)2);
    sub_1D78AB48C((uint64_t)v31);
    return a1 & 1;
  }
  uint64_t v34 = v33;
  a1 = objc_msgSend(self, sel_sharedInstance);
  if (qword_1EBDF7B30 != -1) {
    swift_once();
  }
  uint64_t v35 = __swift_project_value_buffer(v2, (uint64_t)qword_1EBDF77D8);
  sub_1D78912C4(v35, (uint64_t)v11);
  DIPSignpost.init(_:)(v11, (uint64_t)v22);
  id v36 = objc_msgSend(a1, sel_authKitAccountWithAltDSID_, v34);

  if (!v36)
  {
    __int16 v44 = 93;
    unint64_t v40 = sub_1D785EAF8(MEMORY[0x1E4FBC860]);
    sub_1D7860544();
    swift_allocError();
    DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xD00000000000001DLL, 0x80000001D7AC7660, &v44, 0, v40, 0xD00000000000005ALL, 0x80000001D7AC72D0, v41, 0xD000000000000017, 0x80000001D7AC7640, 256);
    swift_willThrow();

    sub_1D78AB48C((uint64_t)v22);
    goto LABEL_10;
  }
  DIPSignpost.end(workflowID:isBackground:)((Swift::String_optional)0, (Swift::Bool_optional)2);
  id v37 = objc_msgSend(a1, sel_securityLevelForAccount_, v36);

  LOBYTE(a1) = v37 == (id)4;
  sub_1D78AB48C((uint64_t)v22);
  DIPSignpost.end(workflowID:isBackground:)((Swift::String_optional)0, (Swift::Bool_optional)2);
  sub_1D78AB48C((uint64_t)v31);
  return a1 & 1;
}

uint64_t sub_1D79B63A4(uint64_t a1)
{
  return sub_1D79B45E8(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_1D79B63B0()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

void sub_1D79B63E8(uint64_t a1, void *a2)
{
  sub_1D79B4BBC(a1, a2, *(void (**)(void))(v2 + 16));
}

uint64_t block_copy_helper_8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_8()
{
  return swift_release();
}

unint64_t sub_1D79B6408()
{
  unint64_t result = qword_1EBDF78F8;
  if (!qword_1EBDF78F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBDF78F8);
  }
  return result;
}

unint64_t sub_1D79B645C()
{
  unint64_t result = qword_1EBDF8278;
  if (!qword_1EBDF8278)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBDF8278);
  }
  return result;
}

uint64_t dispatch thunk of DIPAccountManagerProtocol.reloadPrimaryAccount()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of DIPAccountManagerProtocol.resetPrimaryAccount()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of DIPAccountManagerProtocol.verifyAccountStatus(requireHSA2:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of DIPAccountManagerProtocol.primaryAppleAccount()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of DIPAccountManagerProtocol.primaryAppleAccountIdentifier()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of DIPAccountManagerProtocol.primaryAppleAccountDSID()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of DIPAccountManagerProtocol.primaryiCloudAccountAltDSID()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of DIPAccountManagerProtocol.appleAuthHeader(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 64))();
}

uint64_t dispatch thunk of DIPAccountManagerProtocol.renewGrandslamToken(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a4 + 72) + **(int **)(a4 + 72));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_1D786EC1C;
  return v11(a1, a2, a3, a4);
}

uint64_t dispatch thunk of DIPAccountManagerProtocol.isHSA2Enabled(account:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 80))() & 1;
}

uint64_t dispatch thunk of DIPAccountManagerProtocol.getAccount(with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 88))();
}

uint64_t type metadata accessor for DIPAccountManager()
{
  return self;
}

uint64_t method lookup function for DIPAccountManager(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for DIPAccountManager);
}

uint64_t dispatch thunk of DIPAccountManager.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t sub_1D79B6728()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8439D0);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x1F4186498](v0, v5, v6);
}

uint64_t sub_1D79B67BC(void *a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8439D0);
  return sub_1D79B4740(a1);
}

id sub_1D79B6830(id *a1)
{
  return sub_1D79B3350(a1);
}

uint64_t SEPairingManager.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t SEPairingManager.init()()
{
  return v0;
}

uint64_t SEPairingManager.pairSecureElementIfNecessary()()
{
  uint64_t v3 = (uint64_t (__cdecl *)())((char *)&dword_1EA845FC8 + dword_1EA845FC8);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_1D79B690C;
  return v3();
}

uint64_t sub_1D79B690C(char a1)
{
  uint64_t v7 = *v2;
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(uint64_t))(v7 + 8);
  if (v1) {
    uint64_t v5 = 0;
  }
  else {
    uint64_t v5 = a1 & 1;
  }
  return v4(v5);
}

void sub_1D79B6A14(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF8A30);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  MEMORY[0x1F4188790](v2, v5, v6, v7, v8, v9, v10, v11);
  id v12 = objc_msgSend(self, sel_sharedHardwareManager);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2);
  unint64_t v13 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v14 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v14 + v13, (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v2);
  aBlock[4] = sub_1D79B7F5C;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1D79B764C;
  aBlock[3] = &block_descriptor_9;
  uint64_t v15 = _Block_copy(aBlock);
  swift_release();
  id v16 = objc_msgSend(v12, sel_startSecureElementManagerSessionWithPriority_, v15);
  _Block_release(v15);
  swift_unknownObjectRelease();
}

void sub_1D79B6BF4(void *a1, void *a2, uint64_t a3)
{
  v114[3] = *MEMORY[0x1E4F143B8];
  uint64_t v6 = sub_1D7A9B5F8();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v15 = MEMORY[0x1F4188790](v6, v8, v9, v10, v11, v12, v13, v14);
  uint64_t v17 = (char *)v104 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = MEMORY[0x1F4188790](v15, v18, v19, v20, v21, v22, v23, v24);
  uint64_t v27 = (char *)v104 - v26;
  uint64_t v35 = MEMORY[0x1F4188790](v25, v28, v29, v30, v31, v32, v33, v34);
  id v37 = (char *)v104 - v36;
  uint64_t v45 = MEMORY[0x1F4188790](v35, v38, v39, v40, v41, v42, v43, v44);
  unint64_t v47 = (char *)v104 - v46;
  MEMORY[0x1F4188790](v45, v48, v49, v50, v51, v52, v53, v54);
  id v56 = (char *)v104 - v55;
  if (a2)
  {
    id v57 = a2;
    if (a1) {
      objc_msgSend(a1, sel_endSession);
    }
    v114[0] = a2;
    goto LABEL_11;
  }
  if (!a1)
  {
    LOWORD(v114[0]) = 0;
    unint64_t v72 = sub_1D785EAF8(MEMORY[0x1E4FBC860]);
    sub_1D7860544();
    uint64_t v73 = swift_allocError();
    DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xD000000000000039, 0x80000001D7AC77B0, (__int16 *)v114, 0, v72, 0xD000000000000059, 0x80000001D7AC7710, v74, 0xD00000000000001ELL, 0x80000001D7AC76B0, 45);
    v114[0] = v73;
LABEL_11:
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF8A30);
    sub_1D7A9C448();
    return;
  }
  v114[0] = 0;
  id v58 = a1;
  unsigned int v59 = objc_msgSend(v58, sel_validateSEPairings_, v114);
  id v111 = (id)v114[0];
  uint64_t v112 = v7;
  if (v114[0])
  {
    unsigned int v108 = v59;
    uint64_t v109 = a3;
    uint64_t v60 = qword_1EBDF9DC8;
    id v61 = v111;
    if (v60 != -1) {
      swift_once();
    }
    uint64_t v62 = __swift_project_value_buffer(v6, (uint64_t)qword_1EBDFBE70);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v112 + 16))(v56, v62, v6);
    uint64_t v63 = v61;
    id v64 = sub_1D7A9B5D8();
    os_log_type_t v65 = sub_1D7A9C748();
    int v66 = v65;
    if (os_log_type_enabled(v64, v65))
    {
      id v110 = v58;
      uint64_t v67 = swift_slowAlloc();
      int v107 = v66;
      uint64_t v68 = (uint8_t *)v67;
      uint64_t v105 = (void *)swift_slowAlloc();
      uint64_t v106 = v68;
      *(_DWORD *)uint64_t v68 = 138412290;
      v104[1] = v68 + 4;
      v114[0] = v63;
      uint64_t v63 = v63;
      sub_1D7A9C9E8();
      uint64_t v69 = v105;
      *uint64_t v105 = v111;

      __int16 v70 = v106;
      _os_log_impl(&dword_1D7853000, v64, (os_log_type_t)v107, "SEPairingManager received failingSEID %@ while validating SE pairings", v106, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDF8C60);
      swift_arrayDestroy();
      MEMORY[0x1D947D740](v69, -1, -1);
      __int16 v71 = v70;
      id v58 = v110;
      MEMORY[0x1D947D740](v71, -1, -1);
    }
    else
    {

      id v64 = v63;
    }

    uint64_t v7 = v112;
    (*(void (**)(char *, uint64_t))(v112 + 8))(v56, v6);
    unsigned int v59 = v108;
  }
  if (v59 == 27)
  {
    id v110 = v58;
    if (qword_1EBDF9DC8 != -1) {
      swift_once();
    }
    uint64_t v79 = __swift_project_value_buffer(v6, (uint64_t)qword_1EBDFBE70);
    swift_beginAccess();
    uint64_t v80 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
    v80(v37, v79, v6);
    uint64_t v81 = sub_1D7A9B5D8();
    os_log_type_t v82 = sub_1D7A9C748();
    if (os_log_type_enabled(v81, v82))
    {
      uint64_t v83 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v83 = 0;
      _os_log_impl(&dword_1D7853000, v81, v82, "SEPairingManager secure element needs pairing.", v83, 2u);
      MEMORY[0x1D947D740](v83, -1, -1);
    }

    uint64_t v84 = *(void (**)(char *, uint64_t))(v112 + 8);
    v84(v37, v6);
    id v113 = 0;
    unsigned int v85 = objc_msgSend(v110, sel_deleteAllApplets_error_, 1, &v113);
    id v86 = v113;
    if (v85)
    {
      v80(v27, v79, v6);
      id v87 = v86;
      uint64_t v88 = sub_1D7A9B5D8();
      os_log_type_t v89 = sub_1D7A9C748();
      if (os_log_type_enabled(v88, v89))
      {
        uint64_t v90 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v90 = 0;
        _os_log_impl(&dword_1D7853000, v88, v89, "SEPairingManager paired successfully.", v90, 2u);
        MEMORY[0x1D947D740](v90, -1, -1);
      }

      v84(v27, v6);
      LOBYTE(v113) = 1;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF8A30);
      sub_1D7A9C458();
    }
    else
    {
      id v98 = v113;
      uint64_t v99 = (void *)sub_1D7A9AE58();

      swift_willThrow();
      LOWORD(v113) = 0;
      id v100 = v99;
      unint64_t v101 = sub_1D785EAF8(MEMORY[0x1E4FBC860]);
      sub_1D7860544();
      uint64_t v102 = (void *)swift_allocError();
      DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(v99, 0, 0xE000000000000000, (__int16 *)&v113, 0, v101, 0xD000000000000059, 0x80000001D7AC7710, v103, 0xD00000000000001ELL, 0x80000001D7AC76B0, 75);
      id v113 = v102;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF8A30);
      sub_1D7A9C448();
    }
    id v58 = v110;
  }
  else if (v59)
  {
    if (qword_1EBDF9DC8 != -1) {
      swift_once();
    }
    uint64_t v91 = __swift_project_value_buffer(v6, (uint64_t)qword_1EBDFBE70);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v112 + 16))(v17, v91, v6);
    uint64_t v92 = sub_1D7A9B5D8();
    os_log_type_t v93 = sub_1D7A9C748();
    if (os_log_type_enabled(v92, v93))
    {
      uint64_t v94 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v94 = 0;
      _os_log_impl(&dword_1D7853000, v92, v93, "SEPairingManager failed to check pairing status", v94, 2u);
      MEMORY[0x1D947D740](v94, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v112 + 8))(v17, v6);
    LOWORD(v113) = 0;
    unint64_t v95 = sub_1D785EAF8(MEMORY[0x1E4FBC860]);
    sub_1D7860544();
    uint64_t v96 = (void *)swift_allocError();
    DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0, 0xE000000000000000, (__int16 *)&v113, 0, v95, 0xD000000000000059, 0x80000001D7AC7710, v97, 0xD00000000000001ELL, 0x80000001D7AC76B0, 79);
    id v113 = v96;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF8A30);
    sub_1D7A9C448();
  }
  else
  {
    if (qword_1EBDF9DC8 != -1) {
      swift_once();
    }
    uint64_t v75 = __swift_project_value_buffer(v6, (uint64_t)qword_1EBDFBE70);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v112 + 16))(v47, v75, v6);
    uint64_t v76 = sub_1D7A9B5D8();
    os_log_type_t v77 = sub_1D7A9C748();
    if (os_log_type_enabled(v76, v77))
    {
      uint64_t v78 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v78 = 0;
      _os_log_impl(&dword_1D7853000, v76, v77, "SEPairingManager secure element already paired. No further action needed.", v78, 2u);
      MEMORY[0x1D947D740](v78, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v112 + 8))(v47, v6);
    LOBYTE(v113) = 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF8A30);
    sub_1D7A9C458();
  }

  objc_msgSend(v58, sel_endSession);
}

void sub_1D79B764C(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5 = *(void (**)(void *, void *))(a1 + 32);
  swift_retain();
  id v7 = a2;
  id v6 = a3;
  v5(a2, a3);
  swift_release();
}

uint64_t SEPairingManager.deinit()
{
  return v0;
}

uint64_t SEPairingManager.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1D79B76F0()
{
  uint64_t v3 = (uint64_t (__cdecl *)())((char *)&dword_1EA845FC8 + dword_1EA845FC8);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_1D79B7FF8;
  return v3();
}

uint64_t sub_1D79B7790()
{
  v0[2] = type metadata accessor for DIPSignpost.Config(0);
  v0[3] = swift_task_alloc();
  type metadata accessor for DIPSignpost(0);
  v0[4] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1D79B784C, 0, 0);
}

uint64_t sub_1D79B784C()
{
  if (qword_1EA841570 != -1) {
    swift_once();
  }
  uint64_t v2 = (const char *)v0[3];
  uint64_t v1 = v0[4];
  uint64_t v3 = __swift_project_value_buffer(v0[2], (uint64_t)qword_1EA845DA8);
  sub_1D78912C4(v3, (uint64_t)v2);
  DIPSignpost.init(_:)(v2, v1);
  uint64_t v4 = (void *)swift_task_alloc();
  v0[5] = (uint64_t)v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1D79B7988;
  uint64_t v5 = MEMORY[0x1E4FBB390];
  return MEMORY[0x1F4188160](v0 + 7, 0, 0, 0xD00000000000001ELL, 0x80000001D7AC76B0, sub_1D79B6A14, 0, v5);
}

uint64_t sub_1D79B7988()
{
  *(void *)(*(void *)v1 + 48) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1D79B7B34;
  }
  else {
    uint64_t v2 = sub_1D79B7A9C;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D79B7A9C()
{
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = *(unsigned __int8 *)(v0 + 56);
  DIPSignpost.end(workflowID:isBackground:)((Swift::String_optional)0, (Swift::Bool_optional)2);
  sub_1D78AB48C(v1);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v3(v2);
}

uint64_t sub_1D79B7B34()
{
  uint64_t v9 = v0;
  uint64_t v1 = (void *)v0[6];
  uint64_t v2 = v0[4];
  v8[0] = 164;
  id v3 = v1;
  unint64_t v4 = sub_1D785EAF8(MEMORY[0x1E4FBC860]);
  sub_1D7860544();
  swift_allocError();
  DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(v1, 0xD000000000000038, 0x80000001D7AC76D0, v8, 0, v4, 0xD000000000000059, 0x80000001D7AC7710, v5, 0xD00000000000001ELL, 0x80000001D7AC76B0, 84);
  swift_willThrow();

  DIPSignpost.end(workflowID:isBackground:)((Swift::String_optional)0, (Swift::Bool_optional)2);
  sub_1D78AB48C(v2);
  swift_task_dealloc();
  swift_task_dealloc();
  id v6 = (uint64_t (*)(void))v0[1];
  return v6(0);
}

uint64_t dispatch thunk of SEPairingManaging.pairSecureElementIfNecessary()(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(a2 + 8) + **(int **)(a2 + 8));
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1D79B7D7C;
  return v7(a1, a2);
}

uint64_t sub_1D79B7D7C(uint64_t a1)
{
  uint64_t v5 = *v1;
  swift_task_dealloc();
  id v3 = *(uint64_t (**)(uint64_t))(v5 + 8);
  return v3(a1);
}

uint64_t type metadata accessor for SEPairingManager()
{
  return self;
}

uint64_t method lookup function for SEPairingManager(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SEPairingManager);
}

uint64_t dispatch thunk of SEPairingManager.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t sub_1D79B7EC8()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF8A30);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x1F4186498](v0, v5, v6);
}

void sub_1D79B7F5C(void *a1, void *a2)
{
  uint64_t v5 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF8A30) - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  sub_1D79B6BF4(a1, a2, v6);
}

uint64_t block_copy_helper_9(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_9()
{
  return swift_release();
}

uint64_t sub_1D79B7FFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  return MEMORY[0x1F4188298](sub_1D79B8020, 0, 0);
}

uint64_t sub_1D79B8020()
{
  uint64_t v1 = *(void *)(v0 + 40);
  uint64_t v2 = swift_task_alloc();
  *(void *)(v0 + 48) = v2;
  *(_OWORD *)(v2 + 16) = *(_OWORD *)(v0 + 24);
  *(void *)(v2 + 32) = v1;
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 56) = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_1D79B811C;
  uint64_t v4 = *(void *)(v0 + 16);
  uint64_t v5 = MEMORY[0x1E4FBC848] + 8;
  return MEMORY[0x1F4188160](v4, 0, 0, 0xD000000000000021, 0x80000001D7AC7A00, sub_1D79D85EC, v2, v5);
}

uint64_t sub_1D79B811C()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 64) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x1F4188298](sub_1D79D8774, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_1D79B8258(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  return MEMORY[0x1F4188298](sub_1D79B827C, 0, 0);
}

uint64_t sub_1D79B827C()
{
  uint64_t v1 = *(void *)(v0 + 40);
  uint64_t v2 = swift_task_alloc();
  *(void *)(v0 + 48) = v2;
  *(_OWORD *)(v2 + 16) = *(_OWORD *)(v0 + 24);
  *(void *)(v2 + 32) = v1;
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 56) = v3;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8425F0);
  *uint64_t v3 = v0;
  v3[1] = sub_1D79B837C;
  uint64_t v5 = *(void *)(v0 + 16);
  return MEMORY[0x1F4188160](v5, 0, 0, 0xD000000000000021, 0x80000001D7AC7A00, sub_1D79D6F50, v2, v4);
}

uint64_t sub_1D79B837C()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 64) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x1F4188298](sub_1D79B84B8, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_1D79B84B8()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D79B851C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1D79B8584(a1, a2, a3, (uint64_t)&unk_1F2F24CF0, (void (*)(uint64_t, uint64_t))sub_1D78F0D88, (uint64_t)&unk_1EA8465F8);
}

uint64_t sub_1D79B8550(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1D79B8584(a1, a2, a3, (uint64_t)&unk_1F2F24BB0, (void (*)(uint64_t, uint64_t))sub_1D78F0D88, (uint64_t)&unk_1EA8465B8);
}

uint64_t sub_1D79B8584(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t), uint64_t a6)
{
  uint64_t v11 = sub_1D7A9B5F8();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11, v13, v14, v15, v16, v17, v18, v19);
  uint64_t v21 = (char *)&v39 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF9978);
  MEMORY[0x1F4188790](v22 - 8, v23, v24, v25, v26, v27, v28, v29);
  uint64_t v31 = (char *)&v39 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    uint64_t v32 = sub_1D7A9C4A8();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v31, 1, 1, v32);
    uint64_t v33 = (void *)swift_allocObject();
    v33[2] = 0;
    v33[3] = 0;
    v33[4] = a3;
    v33[5] = a1;
    v33[6] = a2;
    a5(a1, a2);
    swift_retain();
    sub_1D78A2AF8((uint64_t)v31, a6, (uint64_t)v33);
    return swift_release();
  }
  else
  {
    if (qword_1EBDF9DC8 != -1) {
      swift_once();
    }
    uint64_t v35 = __swift_project_value_buffer(v11, (uint64_t)qword_1EBDFBE70);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v21, v35, v11);
    uint64_t v36 = sub_1D7A9B5D8();
    os_log_type_t v37 = sub_1D7A9C748();
    if (os_log_type_enabled(v36, v37))
    {
      uint64_t v38 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v38 = 0;
      _os_log_impl(&dword_1D7853000, v36, v37, "SendableXPCConnection onCancel is nil", v38, 2u);
      MEMORY[0x1D947D740](v38, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v21, v11);
  }
}

uint64_t sub_1D79B882C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[7] = a5;
  v6[8] = a6;
  v6[6] = a4;
  uint64_t v7 = sub_1D7A9B5F8();
  v6[9] = v7;
  v6[10] = *(void *)(v7 - 8);
  v6[11] = swift_task_alloc();
  v6[12] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1D79B8900, 0, 0);
}

uint64_t sub_1D79B8900()
{
  if (qword_1EBDF9DC8 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[12];
  uint64_t v2 = v0[9];
  uint64_t v3 = v0[10];
  uint64_t v4 = __swift_project_value_buffer(v2, (uint64_t)qword_1EBDFBE70);
  v0[13] = v4;
  swift_beginAccess();
  uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v0[14] = v5;
  v0[15] = (v3 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v5(v1, v4, v2);
  uint64_t v6 = sub_1D7A9B5D8();
  os_log_type_t v7 = sub_1D7A9C738();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v8 = 0;
    _os_log_impl(&dword_1D7853000, v6, v7, "SendableXPCConnection executing cancellation handler", v8, 2u);
    MEMORY[0x1D947D740](v8, -1, -1);
  }
  uint64_t v9 = v0[12];
  uint64_t v10 = v0[9];
  uint64_t v11 = v0[10];
  uint64_t v13 = v0[7];
  uint64_t v12 = v0[8];
  uint64_t v14 = v0[6];

  uint64_t v15 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
  v0[16] = v15;
  v0[17] = (v11 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v15(v9, v10);
  uint64_t v16 = swift_allocObject();
  v0[18] = v16;
  *(void *)(v16 + 16) = v13;
  *(void *)(v16 + 24) = v12;
  swift_retain();
  uint64_t v17 = (void *)swift_task_alloc();
  v0[19] = v17;
  v17[2] = v14;
  v17[3] = &unk_1EA846818;
  v17[4] = v16;
  uint64_t v18 = (void *)swift_task_alloc();
  v0[20] = v18;
  *uint64_t v18 = v0;
  uint64_t v19 = MEMORY[0x1E4FBC848];
  v18[1] = sub_1D79B8B6C;
  return MEMORY[0x1F4188160](v18, 0, 0, 0xD000000000000021, 0x80000001D7AC7A00, sub_1D79D85EC, v17, v19 + 8);
}

uint64_t sub_1D79B8B6C()
{
  *(void *)(*(void *)v1 + 168) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1D79D86AC;
  }
  else
  {
    swift_release();
    swift_task_dealloc();
    uint64_t v2 = sub_1D79D878C;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D79B8C90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[7] = a5;
  v6[8] = a6;
  v6[6] = a4;
  uint64_t v7 = sub_1D7A9B5F8();
  v6[9] = v7;
  v6[10] = *(void *)(v7 - 8);
  v6[11] = swift_task_alloc();
  v6[12] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1D79B8D64, 0, 0);
}

uint64_t sub_1D79B8D64()
{
  if (qword_1EBDF9DC8 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[12];
  uint64_t v2 = v0[9];
  uint64_t v3 = v0[10];
  uint64_t v4 = __swift_project_value_buffer(v2, (uint64_t)qword_1EBDFBE70);
  v0[13] = v4;
  swift_beginAccess();
  uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v0[14] = v5;
  v0[15] = (v3 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v5(v1, v4, v2);
  uint64_t v6 = sub_1D7A9B5D8();
  os_log_type_t v7 = sub_1D7A9C738();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v8 = 0;
    _os_log_impl(&dword_1D7853000, v6, v7, "SendableXPCConnection executing cancellation handler", v8, 2u);
    MEMORY[0x1D947D740](v8, -1, -1);
  }
  uint64_t v9 = v0[12];
  uint64_t v10 = v0[9];
  uint64_t v11 = v0[10];
  uint64_t v13 = v0[7];
  uint64_t v12 = v0[8];
  uint64_t v14 = v0[6];

  uint64_t v15 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
  v0[16] = v15;
  v0[17] = (v11 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v15(v9, v10);
  uint64_t v16 = swift_allocObject();
  v0[18] = v16;
  *(void *)(v16 + 16) = v13;
  *(void *)(v16 + 24) = v12;
  swift_retain();
  uint64_t v17 = (void *)swift_task_alloc();
  v0[19] = v17;
  v17[2] = v14;
  v17[3] = &unk_1EA8467F8;
  v17[4] = v16;
  uint64_t v18 = (void *)swift_task_alloc();
  v0[20] = v18;
  *uint64_t v18 = v0;
  uint64_t v19 = MEMORY[0x1E4FBC848];
  v18[1] = sub_1D79B8B6C;
  return MEMORY[0x1F4188160](v18, 0, 0, 0xD000000000000021, 0x80000001D7AC7A00, sub_1D79D85EC, v17, v19 + 8);
}

uint64_t sub_1D79B8FD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[7] = a5;
  v6[8] = a6;
  v6[6] = a4;
  uint64_t v7 = sub_1D7A9B5F8();
  v6[9] = v7;
  v6[10] = *(void *)(v7 - 8);
  v6[11] = swift_task_alloc();
  v6[12] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1D79B90A4, 0, 0);
}

uint64_t sub_1D79B90A4()
{
  if (qword_1EBDF9DC8 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[12];
  uint64_t v2 = v0[9];
  uint64_t v3 = v0[10];
  uint64_t v4 = __swift_project_value_buffer(v2, (uint64_t)qword_1EBDFBE70);
  v0[13] = v4;
  swift_beginAccess();
  uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v0[14] = v5;
  v0[15] = (v3 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v5(v1, v4, v2);
  uint64_t v6 = sub_1D7A9B5D8();
  os_log_type_t v7 = sub_1D7A9C738();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v8 = 0;
    _os_log_impl(&dword_1D7853000, v6, v7, "SendableXPCConnection executing cancellation handler", v8, 2u);
    MEMORY[0x1D947D740](v8, -1, -1);
  }
  uint64_t v9 = v0[12];
  uint64_t v10 = v0[9];
  uint64_t v11 = v0[10];
  uint64_t v13 = v0[7];
  uint64_t v12 = v0[8];
  uint64_t v14 = v0[6];

  uint64_t v15 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
  v0[16] = v15;
  v0[17] = (v11 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v15(v9, v10);
  uint64_t v16 = swift_allocObject();
  v0[18] = v16;
  *(void *)(v16 + 16) = v13;
  *(void *)(v16 + 24) = v12;
  swift_retain();
  uint64_t v17 = (void *)swift_task_alloc();
  v0[19] = v17;
  v17[2] = v14;
  v17[3] = &unk_1EA8467B0;
  v17[4] = v16;
  uint64_t v18 = (void *)swift_task_alloc();
  v0[20] = v18;
  *uint64_t v18 = v0;
  uint64_t v19 = MEMORY[0x1E4FBC848];
  v18[1] = sub_1D79B8B6C;
  return MEMORY[0x1F4188160](v18, 0, 0, 0xD000000000000021, 0x80000001D7AC7A00, sub_1D79D85EC, v17, v19 + 8);
}

uint64_t sub_1D79B9310(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[7] = a5;
  v6[8] = a6;
  v6[6] = a4;
  uint64_t v7 = sub_1D7A9B5F8();
  v6[9] = v7;
  v6[10] = *(void *)(v7 - 8);
  v6[11] = swift_task_alloc();
  v6[12] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1D79B93E4, 0, 0);
}

uint64_t sub_1D79B93E4()
{
  if (qword_1EBDF9DC8 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[12];
  uint64_t v2 = v0[9];
  uint64_t v3 = v0[10];
  uint64_t v4 = __swift_project_value_buffer(v2, (uint64_t)qword_1EBDFBE70);
  v0[13] = v4;
  swift_beginAccess();
  uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v0[14] = v5;
  v0[15] = (v3 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v5(v1, v4, v2);
  uint64_t v6 = sub_1D7A9B5D8();
  os_log_type_t v7 = sub_1D7A9C738();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v8 = 0;
    _os_log_impl(&dword_1D7853000, v6, v7, "SendableXPCConnection executing cancellation handler", v8, 2u);
    MEMORY[0x1D947D740](v8, -1, -1);
  }
  uint64_t v9 = v0[12];
  uint64_t v10 = v0[9];
  uint64_t v11 = v0[10];
  uint64_t v13 = v0[7];
  uint64_t v12 = v0[8];
  uint64_t v14 = v0[6];

  uint64_t v15 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
  v0[16] = v15;
  v0[17] = (v11 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v15(v9, v10);
  uint64_t v16 = swift_allocObject();
  v0[18] = v16;
  *(void *)(v16 + 16) = v13;
  *(void *)(v16 + 24) = v12;
  swift_retain();
  uint64_t v17 = (void *)swift_task_alloc();
  v0[19] = v17;
  v17[2] = v14;
  v17[3] = &unk_1EA846778;
  v17[4] = v16;
  uint64_t v18 = (void *)swift_task_alloc();
  v0[20] = v18;
  *uint64_t v18 = v0;
  uint64_t v19 = MEMORY[0x1E4FBC848];
  v18[1] = sub_1D79B8B6C;
  return MEMORY[0x1F4188160](v18, 0, 0, 0xD000000000000021, 0x80000001D7AC7A00, sub_1D79D85EC, v17, v19 + 8);
}

uint64_t sub_1D79B9650(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[7] = a5;
  v6[8] = a6;
  v6[6] = a4;
  uint64_t v7 = sub_1D7A9B5F8();
  v6[9] = v7;
  v6[10] = *(void *)(v7 - 8);
  v6[11] = swift_task_alloc();
  v6[12] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1D79B9724, 0, 0);
}

uint64_t sub_1D79B9724()
{
  if (qword_1EBDF9DC8 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[12];
  uint64_t v2 = v0[9];
  uint64_t v3 = v0[10];
  uint64_t v4 = __swift_project_value_buffer(v2, (uint64_t)qword_1EBDFBE70);
  v0[13] = v4;
  swift_beginAccess();
  uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v0[14] = v5;
  v0[15] = (v3 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v5(v1, v4, v2);
  uint64_t v6 = sub_1D7A9B5D8();
  os_log_type_t v7 = sub_1D7A9C738();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v8 = 0;
    _os_log_impl(&dword_1D7853000, v6, v7, "SendableXPCConnection executing cancellation handler", v8, 2u);
    MEMORY[0x1D947D740](v8, -1, -1);
  }
  uint64_t v9 = v0[12];
  uint64_t v10 = v0[9];
  uint64_t v11 = v0[10];
  uint64_t v13 = v0[7];
  uint64_t v12 = v0[8];
  uint64_t v14 = v0[6];

  uint64_t v15 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
  v0[16] = v15;
  v0[17] = (v11 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v15(v9, v10);
  uint64_t v16 = swift_allocObject();
  v0[18] = v16;
  *(void *)(v16 + 16) = v13;
  *(void *)(v16 + 24) = v12;
  swift_retain();
  uint64_t v17 = (void *)swift_task_alloc();
  v0[19] = v17;
  v17[2] = v14;
  v17[3] = &unk_1EA846748;
  v17[4] = v16;
  uint64_t v18 = (void *)swift_task_alloc();
  v0[20] = v18;
  *uint64_t v18 = v0;
  uint64_t v19 = MEMORY[0x1E4FBC848];
  v18[1] = sub_1D79B8B6C;
  return MEMORY[0x1F4188160](v18, 0, 0, 0xD000000000000021, 0x80000001D7AC7A00, sub_1D79D85EC, v17, v19 + 8);
}

uint64_t sub_1D79B9990(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[7] = a5;
  v6[8] = a6;
  v6[6] = a4;
  uint64_t v7 = sub_1D7A9B5F8();
  v6[9] = v7;
  v6[10] = *(void *)(v7 - 8);
  v6[11] = swift_task_alloc();
  v6[12] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1D79B9A64, 0, 0);
}

uint64_t sub_1D79B9A64()
{
  if (qword_1EBDF9DC8 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[12];
  uint64_t v2 = v0[9];
  uint64_t v3 = v0[10];
  uint64_t v4 = __swift_project_value_buffer(v2, (uint64_t)qword_1EBDFBE70);
  v0[13] = v4;
  swift_beginAccess();
  uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v0[14] = v5;
  v0[15] = (v3 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v5(v1, v4, v2);
  uint64_t v6 = sub_1D7A9B5D8();
  os_log_type_t v7 = sub_1D7A9C738();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v8 = 0;
    _os_log_impl(&dword_1D7853000, v6, v7, "SendableXPCConnection executing cancellation handler", v8, 2u);
    MEMORY[0x1D947D740](v8, -1, -1);
  }
  uint64_t v9 = v0[12];
  uint64_t v10 = v0[9];
  uint64_t v11 = v0[10];
  uint64_t v13 = v0[7];
  uint64_t v12 = v0[8];
  uint64_t v14 = v0[6];

  uint64_t v15 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
  v0[16] = v15;
  v0[17] = (v11 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v15(v9, v10);
  uint64_t v16 = swift_allocObject();
  v0[18] = v16;
  *(void *)(v16 + 16) = v13;
  *(void *)(v16 + 24) = v12;
  swift_retain();
  uint64_t v17 = (void *)swift_task_alloc();
  v0[19] = v17;
  v17[2] = v14;
  v17[3] = &unk_1EA846710;
  v17[4] = v16;
  uint64_t v18 = (void *)swift_task_alloc();
  v0[20] = v18;
  *uint64_t v18 = v0;
  uint64_t v19 = MEMORY[0x1E4FBC848];
  v18[1] = sub_1D79B8B6C;
  return MEMORY[0x1F4188160](v18, 0, 0, 0xD000000000000021, 0x80000001D7AC7A00, sub_1D79D85EC, v17, v19 + 8);
}

uint64_t sub_1D79B9CD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[7] = a5;
  v6[8] = a6;
  v6[6] = a4;
  uint64_t v7 = sub_1D7A9B5F8();
  v6[9] = v7;
  v6[10] = *(void *)(v7 - 8);
  v6[11] = swift_task_alloc();
  v6[12] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1D79B9DA4, 0, 0);
}

uint64_t sub_1D79B9DA4()
{
  if (qword_1EBDF9DC8 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[12];
  uint64_t v2 = v0[9];
  uint64_t v3 = v0[10];
  uint64_t v4 = __swift_project_value_buffer(v2, (uint64_t)qword_1EBDFBE70);
  v0[13] = v4;
  swift_beginAccess();
  uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v0[14] = v5;
  v0[15] = (v3 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v5(v1, v4, v2);
  uint64_t v6 = sub_1D7A9B5D8();
  os_log_type_t v7 = sub_1D7A9C738();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v8 = 0;
    _os_log_impl(&dword_1D7853000, v6, v7, "SendableXPCConnection executing cancellation handler", v8, 2u);
    MEMORY[0x1D947D740](v8, -1, -1);
  }
  uint64_t v9 = v0[12];
  uint64_t v10 = v0[9];
  uint64_t v11 = v0[10];
  uint64_t v13 = v0[7];
  uint64_t v12 = v0[8];
  uint64_t v14 = v0[6];

  uint64_t v15 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
  v0[16] = v15;
  v0[17] = (v11 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v15(v9, v10);
  uint64_t v16 = swift_allocObject();
  v0[18] = v16;
  *(void *)(v16 + 16) = v13;
  *(void *)(v16 + 24) = v12;
  swift_retain();
  uint64_t v17 = (void *)swift_task_alloc();
  v0[19] = v17;
  v17[2] = v14;
  v17[3] = &unk_1EA8466D8;
  v17[4] = v16;
  uint64_t v18 = (void *)swift_task_alloc();
  v0[20] = v18;
  *uint64_t v18 = v0;
  uint64_t v19 = MEMORY[0x1E4FBC848];
  v18[1] = sub_1D79B8B6C;
  return MEMORY[0x1F4188160](v18, 0, 0, 0xD000000000000021, 0x80000001D7AC7A00, sub_1D79D85EC, v17, v19 + 8);
}

uint64_t sub_1D79BA010(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[7] = a5;
  v6[8] = a6;
  v6[6] = a4;
  uint64_t v7 = sub_1D7A9B5F8();
  v6[9] = v7;
  v6[10] = *(void *)(v7 - 8);
  v6[11] = swift_task_alloc();
  v6[12] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1D79BA0E4, 0, 0);
}

uint64_t sub_1D79BA0E4()
{
  if (qword_1EBDF9DC8 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[12];
  uint64_t v2 = v0[9];
  uint64_t v3 = v0[10];
  uint64_t v4 = __swift_project_value_buffer(v2, (uint64_t)qword_1EBDFBE70);
  v0[13] = v4;
  swift_beginAccess();
  uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v0[14] = v5;
  v0[15] = (v3 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v5(v1, v4, v2);
  uint64_t v6 = sub_1D7A9B5D8();
  os_log_type_t v7 = sub_1D7A9C738();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v8 = 0;
    _os_log_impl(&dword_1D7853000, v6, v7, "SendableXPCConnection executing cancellation handler", v8, 2u);
    MEMORY[0x1D947D740](v8, -1, -1);
  }
  uint64_t v9 = v0[12];
  uint64_t v10 = v0[9];
  uint64_t v11 = v0[10];
  uint64_t v13 = v0[7];
  uint64_t v12 = v0[8];
  uint64_t v14 = v0[6];

  uint64_t v15 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
  v0[16] = v15;
  v0[17] = (v11 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v15(v9, v10);
  uint64_t v16 = swift_allocObject();
  v0[18] = v16;
  *(void *)(v16 + 16) = v13;
  *(void *)(v16 + 24) = v12;
  swift_retain();
  uint64_t v17 = (void *)swift_task_alloc();
  v0[19] = v17;
  v17[2] = v14;
  v17[3] = &unk_1EA8466A0;
  v17[4] = v16;
  uint64_t v18 = (void *)swift_task_alloc();
  v0[20] = v18;
  *uint64_t v18 = v0;
  uint64_t v19 = MEMORY[0x1E4FBC848];
  v18[1] = sub_1D79B8B6C;
  return MEMORY[0x1F4188160](v18, 0, 0, 0xD000000000000021, 0x80000001D7AC7A00, sub_1D79D85EC, v17, v19 + 8);
}

uint64_t sub_1D79BA350(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[7] = a5;
  v6[8] = a6;
  v6[6] = a4;
  uint64_t v7 = sub_1D7A9B5F8();
  v6[9] = v7;
  v6[10] = *(void *)(v7 - 8);
  v6[11] = swift_task_alloc();
  v6[12] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1D79BA424, 0, 0);
}

uint64_t sub_1D79BA424()
{
  if (qword_1EBDF9DC8 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[12];
  uint64_t v2 = v0[9];
  uint64_t v3 = v0[10];
  uint64_t v4 = __swift_project_value_buffer(v2, (uint64_t)qword_1EBDFBE70);
  v0[13] = v4;
  swift_beginAccess();
  uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v0[14] = v5;
  v0[15] = (v3 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v5(v1, v4, v2);
  uint64_t v6 = sub_1D7A9B5D8();
  os_log_type_t v7 = sub_1D7A9C738();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v8 = 0;
    _os_log_impl(&dword_1D7853000, v6, v7, "SendableXPCConnection executing cancellation handler", v8, 2u);
    MEMORY[0x1D947D740](v8, -1, -1);
  }
  uint64_t v9 = v0[12];
  uint64_t v10 = v0[9];
  uint64_t v11 = v0[10];
  uint64_t v13 = v0[7];
  uint64_t v12 = v0[8];
  uint64_t v14 = v0[6];

  uint64_t v15 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
  v0[16] = v15;
  v0[17] = (v11 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v15(v9, v10);
  uint64_t v16 = swift_allocObject();
  v0[18] = v16;
  *(void *)(v16 + 16) = v13;
  *(void *)(v16 + 24) = v12;
  swift_retain();
  uint64_t v17 = (void *)swift_task_alloc();
  v0[19] = v17;
  v17[2] = v14;
  v17[3] = &unk_1EA846648;
  v17[4] = v16;
  uint64_t v18 = (void *)swift_task_alloc();
  v0[20] = v18;
  *uint64_t v18 = v0;
  uint64_t v19 = MEMORY[0x1E4FBC848];
  v18[1] = sub_1D79B8B6C;
  return MEMORY[0x1F4188160](v18, 0, 0, 0xD000000000000021, 0x80000001D7AC7A00, sub_1D79D6664, v17, v19 + 8);
}

uint64_t sub_1D79BA690(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[7] = a5;
  v6[8] = a6;
  v6[6] = a4;
  uint64_t v7 = sub_1D7A9B5F8();
  v6[9] = v7;
  v6[10] = *(void *)(v7 - 8);
  v6[11] = swift_task_alloc();
  v6[12] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1D79BA764, 0, 0);
}

uint64_t sub_1D79BA764()
{
  if (qword_1EBDF9DC8 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[12];
  uint64_t v2 = v0[9];
  uint64_t v3 = v0[10];
  uint64_t v4 = __swift_project_value_buffer(v2, (uint64_t)qword_1EBDFBE70);
  v0[13] = v4;
  swift_beginAccess();
  uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v0[14] = v5;
  v0[15] = (v3 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v5(v1, v4, v2);
  uint64_t v6 = sub_1D7A9B5D8();
  os_log_type_t v7 = sub_1D7A9C738();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v8 = 0;
    _os_log_impl(&dword_1D7853000, v6, v7, "SendableXPCConnection executing cancellation handler", v8, 2u);
    MEMORY[0x1D947D740](v8, -1, -1);
  }
  uint64_t v9 = v0[12];
  uint64_t v10 = v0[9];
  uint64_t v11 = v0[10];
  uint64_t v13 = v0[7];
  uint64_t v12 = v0[8];
  uint64_t v14 = v0[6];

  uint64_t v15 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
  v0[16] = v15;
  v0[17] = (v11 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v15(v9, v10);
  uint64_t v16 = swift_allocObject();
  v0[18] = v16;
  *(void *)(v16 + 16) = v13;
  *(void *)(v16 + 24) = v12;
  swift_retain();
  uint64_t v17 = (void *)swift_task_alloc();
  v0[19] = v17;
  v17[2] = v14;
  v17[3] = &unk_1EA846608;
  v17[4] = v16;
  uint64_t v18 = (void *)swift_task_alloc();
  v0[20] = v18;
  *uint64_t v18 = v0;
  uint64_t v19 = MEMORY[0x1E4FBC848];
  v18[1] = sub_1D79BA9D0;
  return MEMORY[0x1F4188160](v18, 0, 0, 0xD000000000000021, 0x80000001D7AC7A00, sub_1D79D85E8, v17, v19 + 8);
}

uint64_t sub_1D79BA9D0()
{
  *(void *)(*(void *)v1 + 168) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1D79BAB5C;
  }
  else
  {
    swift_release();
    swift_task_dealloc();
    uint64_t v2 = sub_1D79BAAF4;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D79BAAF4()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D79BAB5C()
{
  uint64_t v1 = *(void **)(v0 + 168);
  uint64_t v2 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 112);
  uint64_t v3 = *(void *)(v0 + 104);
  uint64_t v4 = *(void *)(v0 + 88);
  uint64_t v5 = *(void *)(v0 + 72);
  swift_task_dealloc();
  swift_release();
  v2(v4, v3, v5);
  id v6 = v1;
  id v7 = v1;
  uint64_t v8 = sub_1D7A9B5D8();
  os_log_type_t v9 = sub_1D7A9C758();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = *(void **)(v0 + 168);
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    uint64_t v12 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 138412290;
    id v13 = v10;
    uint64_t v14 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 40) = v14;
    sub_1D7A9C9E8();
    *uint64_t v12 = v14;

    _os_log_impl(&dword_1D7853000, v8, v9, "SendableXPCConnection error occurred when cancelling the task: %@", v11, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDF8C60);
    swift_arrayDestroy();
    MEMORY[0x1D947D740](v12, -1, -1);
    MEMORY[0x1D947D740](v11, -1, -1);
  }
  else
  {
    uint64_t v15 = *(void **)(v0 + 168);
  }
  (*(void (**)(void, void))(v0 + 128))(*(void *)(v0 + 88), *(void *)(v0 + 72));
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v16 = *(uint64_t (**)(void))(v0 + 8);
  return v16();
}

uint64_t sub_1D79BAD60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[7] = a5;
  v6[8] = a6;
  v6[6] = a4;
  uint64_t v7 = sub_1D7A9B5F8();
  v6[9] = v7;
  v6[10] = *(void *)(v7 - 8);
  v6[11] = swift_task_alloc();
  v6[12] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1D79BAE34, 0, 0);
}

uint64_t sub_1D79BAE34()
{
  if (qword_1EBDF9DC8 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[12];
  uint64_t v2 = v0[9];
  uint64_t v3 = v0[10];
  uint64_t v4 = __swift_project_value_buffer(v2, (uint64_t)qword_1EBDFBE70);
  v0[13] = v4;
  swift_beginAccess();
  uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v0[14] = v5;
  v0[15] = (v3 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v5(v1, v4, v2);
  id v6 = sub_1D7A9B5D8();
  os_log_type_t v7 = sub_1D7A9C738();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v8 = 0;
    _os_log_impl(&dword_1D7853000, v6, v7, "SendableXPCConnection executing cancellation handler", v8, 2u);
    MEMORY[0x1D947D740](v8, -1, -1);
  }
  uint64_t v9 = v0[12];
  uint64_t v10 = v0[9];
  uint64_t v11 = v0[10];
  uint64_t v13 = v0[7];
  uint64_t v12 = v0[8];
  uint64_t v14 = v0[6];

  uint64_t v15 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
  v0[16] = v15;
  v0[17] = (v11 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v15(v9, v10);
  uint64_t v16 = swift_allocObject();
  v0[18] = v16;
  *(void *)(v16 + 16) = v13;
  *(void *)(v16 + 24) = v12;
  swift_retain();
  uint64_t v17 = (void *)swift_task_alloc();
  v0[19] = v17;
  v17[2] = v14;
  v17[3] = &unk_1EA8465C8;
  v17[4] = v16;
  uint64_t v18 = (void *)swift_task_alloc();
  v0[20] = v18;
  *uint64_t v18 = v0;
  uint64_t v19 = MEMORY[0x1E4FBC848];
  v18[1] = sub_1D79B8B6C;
  return MEMORY[0x1F4188160](v18, 0, 0, 0xD000000000000021, 0x80000001D7AC7A00, sub_1D79D5DBC, v17, v19 + 8);
}

uint64_t sub_1D79BB0A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D79BB0F0(a1, a2, a3, a4, &qword_1EA846610, (uint64_t)&unk_1F2F24D40, (uint64_t)&unk_1EA846620);
}

uint64_t sub_1D79BB0C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D79BB0F0(a1, a2, a3, a4, &qword_1EBDF8A30, (uint64_t)&unk_1F2F24C78, (uint64_t)&unk_1EA8465E8);
}

uint64_t sub_1D79BB0F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v37 = a7;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(a5);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  MEMORY[0x1F4188790](v11, v14, v15, v16, v17, v18, v19, v20);
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF9978);
  MEMORY[0x1F4188790](v21 - 8, v22, v23, v24, v25, v26, v27, v28);
  uint64_t v30 = (char *)&v36 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_1D7A9C4A8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v30, 1, 1, v31);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))((char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v11);
  unint64_t v32 = (*(unsigned __int8 *)(v12 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  uint64_t v33 = (char *)swift_allocObject();
  *((void *)v33 + 2) = 0;
  *((void *)v33 + 3) = 0;
  *((void *)v33 + 4) = a2;
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(&v33[v32], (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v11);
  uint64_t v34 = &v33[(v13 + v32 + 7) & 0xFFFFFFFFFFFFFFF8];
  *(void *)uint64_t v34 = a3;
  *((void *)v34 + 1) = a4;
  swift_retain();
  swift_retain();
  sub_1D78A2AF8((uint64_t)v30, v37, (uint64_t)v33);
  return swift_release();
}

uint64_t sub_1D79BB2E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[35] = a6;
  v7[36] = a7;
  v7[33] = a4;
  v7[34] = a5;
  uint64_t v8 = sub_1D7A9B5F8();
  v7[37] = v8;
  v7[38] = *(void *)(v8 - 8);
  v7[39] = swift_task_alloc();
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8439D0);
  v7[40] = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  v7[41] = v10;
  v7[42] = *(void *)(v10 + 64);
  v7[43] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1D79BB414, 0, 0);
}

uint64_t sub_1D79BB414()
{
  uint64_t v35 = v0;
  uint64_t v2 = v0[42];
  uint64_t v1 = v0[43];
  uint64_t v4 = v0[40];
  uint64_t v3 = v0[41];
  uint64_t v5 = v0[33];
  id v6 = *(void **)(v5 + 16);
  (*(void (**)(uint64_t, void, uint64_t))(v3 + 16))(v1, v0[34], v4);
  unint64_t v7 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v8 = (v2 + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v9 = swift_allocObject();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v3 + 32))(v9 + v7, v1, v4);
  *(void *)(v9 + v8) = v5;
  v0[6] = sub_1D79D5F58;
  v0[7] = v9;
  v0[2] = MEMORY[0x1E4F143A8];
  v0[3] = 1107296256;
  v0[4] = sub_1D7A30D08;
  v0[5] = &block_descriptor_659;
  uint64_t v10 = _Block_copy(v0 + 2);
  swift_retain();
  uint64_t v11 = (uint64_t)(v0 + 8);
  swift_release();
  id v12 = objc_msgSend(v6, sel_remoteObjectProxyWithErrorHandler_, v10);
  _Block_release(v10);
  sub_1D7A9CB08();
  swift_unknownObjectRelease();
  sub_1D78907D8((uint64_t)(v0 + 8), (uint64_t)(v0 + 16));
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA846660);
  if (swift_dynamicCast())
  {
    uint64_t v13 = (int *)v0[35];
    v0[29] = v0[27];
    uint64_t v33 = (uint64_t (*)(void))((char *)v13 + *v13);
    uint64_t v14 = (void *)swift_task_alloc();
    v0[44] = v14;
    *uint64_t v14 = v0;
    v14[1] = sub_1D79BB94C;
    return v33();
  }
  else
  {
    if (qword_1EBDF9DC8 != -1) {
      swift_once();
    }
    uint64_t v16 = v0[38];
    uint64_t v17 = v0[39];
    uint64_t v18 = v0[37];
    uint64_t v19 = __swift_project_value_buffer(v18, (uint64_t)qword_1EBDFBE70);
    swift_beginAccess();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(v17, v19, v18);
    sub_1D78907D8(v11, (uint64_t)(v0 + 20));
    uint64_t v20 = sub_1D7A9B5D8();
    os_log_type_t v21 = sub_1D7A9C758();
    BOOL v22 = os_log_type_enabled(v20, v21);
    uint64_t v24 = v0[38];
    uint64_t v23 = v0[39];
    uint64_t v25 = v0[37];
    if (v22)
    {
      uint64_t v32 = v0[37];
      uint64_t v26 = swift_slowAlloc();
      uint64_t v27 = swift_slowAlloc();
      uint64_t v34 = v27;
      *(_DWORD *)uint64_t v26 = 136315394;
      sub_1D78907D8((uint64_t)(v0 + 20), (uint64_t)(v0 + 12));
      uint64_t v28 = sub_1D7A9C038();
      v0[30] = sub_1D7923300(v28, v29, &v34);
      sub_1D7A9C9E8();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 20));
      *(_WORD *)(v26 + 12) = 2080;
      v0[31] = sub_1D7923300(0xD00000000000001CLL, 0x80000001D7AC7A70, &v34);
      sub_1D7A9C9E8();
      _os_log_impl(&dword_1D7853000, v20, v21, "Remote proxy object %s cannot be cast to %s", (uint8_t *)v26, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1D947D740](v27, -1, -1);
      uint64_t v30 = v26;
      uint64_t v11 = (uint64_t)(v0 + 8);
      MEMORY[0x1D947D740](v30, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v23, v32);
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 20));

      (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v23, v25);
    }
    v0[28] = (*(uint64_t (**)(void))(v0[33] + 24))(0);
    sub_1D7A9C448();
    __swift_destroy_boxed_opaque_existential_1(v11);
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v31 = (uint64_t (*)(void))v0[1];
    return v31();
  }
}

uint64_t sub_1D79BB94C()
{
  *(void *)(*(void *)v1 + 360) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1D79D85DC;
  }
  else {
    uint64_t v2 = sub_1D79D8644;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D79BBA60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[37] = a6;
  v7[38] = a7;
  v7[35] = a4;
  v7[36] = a5;
  uint64_t v8 = sub_1D7A9B5F8();
  v7[39] = v8;
  v7[40] = *(void *)(v8 - 8);
  v7[41] = swift_task_alloc();
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA846820);
  v7[42] = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  v7[43] = v10;
  v7[44] = *(void *)(v10 + 64);
  v7[45] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1D79BBB8C, 0, 0);
}

uint64_t sub_1D79BBB8C()
{
  uint64_t v35 = v0;
  uint64_t v2 = v0[44];
  uint64_t v1 = v0[45];
  uint64_t v4 = v0[42];
  uint64_t v3 = v0[43];
  uint64_t v5 = v0[35];
  id v6 = *(void **)(v5 + 16);
  (*(void (**)(uint64_t, void, uint64_t))(v3 + 16))(v1, v0[36], v4);
  unint64_t v7 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v8 = (v2 + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v9 = swift_allocObject();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v3 + 32))(v9 + v7, v1, v4);
  *(void *)(v9 + v8) = v5;
  v0[6] = sub_1D79D85C0;
  v0[7] = v9;
  v0[2] = MEMORY[0x1E4F143A8];
  v0[3] = 1107296256;
  v0[4] = sub_1D7A30D08;
  v0[5] = &block_descriptor_895;
  uint64_t v10 = _Block_copy(v0 + 2);
  swift_retain();
  uint64_t v11 = (uint64_t)(v0 + 8);
  swift_release();
  id v12 = objc_msgSend(v6, sel_remoteObjectProxyWithErrorHandler_, v10);
  _Block_release(v10);
  sub_1D7A9CB08();
  swift_unknownObjectRelease();
  sub_1D78907D8((uint64_t)(v0 + 8), (uint64_t)(v0 + 16));
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA846660);
  if (swift_dynamicCast())
  {
    uint64_t v13 = (int *)v0[37];
    v0[29] = v0[27];
    uint64_t v33 = (int *)((char *)v13 + *v13);
    uint64_t v14 = (void *)swift_task_alloc();
    v0[46] = v14;
    *uint64_t v14 = v0;
    v14[1] = sub_1D79BC0D0;
    return ((uint64_t (*)(void *, void *))v33)(v0 + 32, v0 + 29);
  }
  else
  {
    if (qword_1EBDF9DC8 != -1) {
      swift_once();
    }
    uint64_t v16 = v0[40];
    uint64_t v17 = v0[41];
    uint64_t v18 = v0[39];
    uint64_t v19 = __swift_project_value_buffer(v18, (uint64_t)qword_1EBDFBE70);
    swift_beginAccess();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(v17, v19, v18);
    sub_1D78907D8(v11, (uint64_t)(v0 + 20));
    uint64_t v20 = sub_1D7A9B5D8();
    os_log_type_t v21 = sub_1D7A9C758();
    BOOL v22 = os_log_type_enabled(v20, v21);
    uint64_t v24 = v0[40];
    uint64_t v23 = v0[41];
    uint64_t v25 = v0[39];
    if (v22)
    {
      uint64_t v32 = v0[39];
      uint64_t v26 = swift_slowAlloc();
      uint64_t v27 = swift_slowAlloc();
      uint64_t v34 = v27;
      *(_DWORD *)uint64_t v26 = 136315394;
      sub_1D78907D8((uint64_t)(v0 + 20), (uint64_t)(v0 + 12));
      uint64_t v28 = sub_1D7A9C038();
      v0[30] = sub_1D7923300(v28, v29, &v34);
      sub_1D7A9C9E8();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 20));
      *(_WORD *)(v26 + 12) = 2080;
      v0[31] = sub_1D7923300(0xD00000000000001CLL, 0x80000001D7AC7A70, &v34);
      sub_1D7A9C9E8();
      _os_log_impl(&dword_1D7853000, v20, v21, "Remote proxy object %s cannot be cast to %s", (uint8_t *)v26, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1D947D740](v27, -1, -1);
      uint64_t v30 = v26;
      uint64_t v11 = (uint64_t)(v0 + 8);
      MEMORY[0x1D947D740](v30, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v23, v32);
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 20));

      (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v23, v25);
    }
    v0[28] = (*(uint64_t (**)(void))(v0[35] + 24))(0);
    sub_1D7A9C448();
    __swift_destroy_boxed_opaque_existential_1(v11);
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v31 = (uint64_t (*)(void))v0[1];
    return v31();
  }
}

uint64_t sub_1D79BC0D0()
{
  *(void *)(*(void *)v1 + 376) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1D79D85E0;
  }
  else {
    uint64_t v2 = sub_1D79D8794;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D79BC1E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[37] = a6;
  v7[38] = a7;
  v7[35] = a4;
  v7[36] = a5;
  uint64_t v8 = sub_1D7A9B5F8();
  v7[39] = v8;
  v7[40] = *(void *)(v8 - 8);
  v7[41] = swift_task_alloc();
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8467B8);
  v7[42] = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  v7[43] = v10;
  v7[44] = *(void *)(v10 + 64);
  v7[45] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1D79BC310, 0, 0);
}

uint64_t sub_1D79BC310()
{
  uint64_t v35 = v0;
  uint64_t v2 = v0[44];
  uint64_t v1 = v0[45];
  uint64_t v4 = v0[42];
  uint64_t v3 = v0[43];
  uint64_t v5 = v0[35];
  id v6 = *(void **)(v5 + 16);
  (*(void (**)(uint64_t, void, uint64_t))(v3 + 16))(v1, v0[36], v4);
  unint64_t v7 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v8 = (v2 + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v9 = swift_allocObject();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v3 + 32))(v9 + v7, v1, v4);
  *(void *)(v9 + v8) = v5;
  v0[6] = sub_1D79D7E70;
  v0[7] = v9;
  v0[2] = MEMORY[0x1E4F143A8];
  v0[3] = 1107296256;
  v0[4] = sub_1D7A30D08;
  v0[5] = &block_descriptor_845;
  uint64_t v10 = _Block_copy(v0 + 2);
  swift_retain();
  uint64_t v11 = (uint64_t)(v0 + 8);
  swift_release();
  id v12 = objc_msgSend(v6, sel_remoteObjectProxyWithErrorHandler_, v10);
  _Block_release(v10);
  sub_1D7A9CB08();
  swift_unknownObjectRelease();
  sub_1D78907D8((uint64_t)(v0 + 8), (uint64_t)(v0 + 16));
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA846660);
  if (swift_dynamicCast())
  {
    uint64_t v13 = (int *)v0[37];
    v0[29] = v0[27];
    uint64_t v33 = (int *)((char *)v13 + *v13);
    uint64_t v14 = (void *)swift_task_alloc();
    v0[46] = v14;
    *uint64_t v14 = v0;
    v14[1] = sub_1D79BC0D0;
    return ((uint64_t (*)(void *, void *))v33)(v0 + 32, v0 + 29);
  }
  else
  {
    if (qword_1EBDF9DC8 != -1) {
      swift_once();
    }
    uint64_t v16 = v0[40];
    uint64_t v17 = v0[41];
    uint64_t v18 = v0[39];
    uint64_t v19 = __swift_project_value_buffer(v18, (uint64_t)qword_1EBDFBE70);
    swift_beginAccess();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(v17, v19, v18);
    sub_1D78907D8(v11, (uint64_t)(v0 + 20));
    uint64_t v20 = sub_1D7A9B5D8();
    os_log_type_t v21 = sub_1D7A9C758();
    BOOL v22 = os_log_type_enabled(v20, v21);
    uint64_t v24 = v0[40];
    uint64_t v23 = v0[41];
    uint64_t v25 = v0[39];
    if (v22)
    {
      uint64_t v32 = v0[39];
      uint64_t v26 = swift_slowAlloc();
      uint64_t v27 = swift_slowAlloc();
      uint64_t v34 = v27;
      *(_DWORD *)uint64_t v26 = 136315394;
      sub_1D78907D8((uint64_t)(v0 + 20), (uint64_t)(v0 + 12));
      uint64_t v28 = sub_1D7A9C038();
      v0[30] = sub_1D7923300(v28, v29, &v34);
      sub_1D7A9C9E8();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 20));
      *(_WORD *)(v26 + 12) = 2080;
      v0[31] = sub_1D7923300(0xD00000000000001CLL, 0x80000001D7AC7A70, &v34);
      sub_1D7A9C9E8();
      _os_log_impl(&dword_1D7853000, v20, v21, "Remote proxy object %s cannot be cast to %s", (uint8_t *)v26, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1D947D740](v27, -1, -1);
      uint64_t v30 = v26;
      uint64_t v11 = (uint64_t)(v0 + 8);
      MEMORY[0x1D947D740](v30, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v23, v32);
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 20));

      (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v23, v25);
    }
    v0[28] = (*(uint64_t (**)(void))(v0[35] + 24))(0);
    sub_1D7A9C448();
    __swift_destroy_boxed_opaque_existential_1(v11);
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v31 = (uint64_t (*)(void))v0[1];
    return v31();
  }
}

uint64_t sub_1D79BC854(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[37] = a6;
  v7[38] = a7;
  v7[35] = a4;
  v7[36] = a5;
  uint64_t v8 = sub_1D7A9B5F8();
  v7[39] = v8;
  v7[40] = *(void *)(v8 - 8);
  v7[41] = swift_task_alloc();
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA846780);
  v7[42] = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  v7[43] = v10;
  v7[44] = *(void *)(v10 + 64);
  v7[45] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1D79BC980, 0, 0);
}

uint64_t sub_1D79BC980()
{
  uint64_t v35 = v0;
  uint64_t v2 = v0[44];
  uint64_t v1 = v0[45];
  uint64_t v4 = v0[42];
  uint64_t v3 = v0[43];
  uint64_t v5 = v0[35];
  id v6 = *(void **)(v5 + 16);
  (*(void (**)(uint64_t, void, uint64_t))(v3 + 16))(v1, v0[36], v4);
  unint64_t v7 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v8 = (v2 + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v9 = swift_allocObject();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v3 + 32))(v9 + v7, v1, v4);
  *(void *)(v9 + v8) = v5;
  v0[6] = sub_1D79D7B0C;
  v0[7] = v9;
  v0[2] = MEMORY[0x1E4F143A8];
  v0[3] = 1107296256;
  v0[4] = sub_1D7A30D08;
  v0[5] = &block_descriptor_818;
  uint64_t v10 = _Block_copy(v0 + 2);
  swift_retain();
  uint64_t v11 = (uint64_t)(v0 + 8);
  swift_release();
  id v12 = objc_msgSend(v6, sel_remoteObjectProxyWithErrorHandler_, v10);
  _Block_release(v10);
  sub_1D7A9CB08();
  swift_unknownObjectRelease();
  sub_1D78907D8((uint64_t)(v0 + 8), (uint64_t)(v0 + 16));
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA846660);
  if (swift_dynamicCast())
  {
    uint64_t v13 = (int *)v0[37];
    v0[29] = v0[27];
    uint64_t v33 = (int *)((char *)v13 + *v13);
    uint64_t v14 = (void *)swift_task_alloc();
    v0[46] = v14;
    *uint64_t v14 = v0;
    v14[1] = sub_1D79BC0D0;
    return ((uint64_t (*)(void *, void *))v33)(v0 + 32, v0 + 29);
  }
  else
  {
    if (qword_1EBDF9DC8 != -1) {
      swift_once();
    }
    uint64_t v16 = v0[40];
    uint64_t v17 = v0[41];
    uint64_t v18 = v0[39];
    uint64_t v19 = __swift_project_value_buffer(v18, (uint64_t)qword_1EBDFBE70);
    swift_beginAccess();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(v17, v19, v18);
    sub_1D78907D8(v11, (uint64_t)(v0 + 20));
    uint64_t v20 = sub_1D7A9B5D8();
    os_log_type_t v21 = sub_1D7A9C758();
    BOOL v22 = os_log_type_enabled(v20, v21);
    uint64_t v24 = v0[40];
    uint64_t v23 = v0[41];
    uint64_t v25 = v0[39];
    if (v22)
    {
      uint64_t v32 = v0[39];
      uint64_t v26 = swift_slowAlloc();
      uint64_t v27 = swift_slowAlloc();
      uint64_t v34 = v27;
      *(_DWORD *)uint64_t v26 = 136315394;
      sub_1D78907D8((uint64_t)(v0 + 20), (uint64_t)(v0 + 12));
      uint64_t v28 = sub_1D7A9C038();
      v0[30] = sub_1D7923300(v28, v29, &v34);
      sub_1D7A9C9E8();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 20));
      *(_WORD *)(v26 + 12) = 2080;
      v0[31] = sub_1D7923300(0xD00000000000001CLL, 0x80000001D7AC7A70, &v34);
      sub_1D7A9C9E8();
      _os_log_impl(&dword_1D7853000, v20, v21, "Remote proxy object %s cannot be cast to %s", (uint8_t *)v26, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1D947D740](v27, -1, -1);
      uint64_t v30 = v26;
      uint64_t v11 = (uint64_t)(v0 + 8);
      MEMORY[0x1D947D740](v30, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v23, v32);
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 20));

      (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v23, v25);
    }
    v0[28] = (*(uint64_t (**)(void))(v0[35] + 24))(0);
    sub_1D7A9C448();
    __swift_destroy_boxed_opaque_existential_1(v11);
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v31 = (uint64_t (*)(void))v0[1];
    return v31();
  }
}

uint64_t sub_1D79BCEC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[35] = a6;
  v7[36] = a7;
  v7[33] = a4;
  v7[34] = a5;
  uint64_t v8 = sub_1D7A9B5F8();
  v7[37] = v8;
  v7[38] = *(void *)(v8 - 8);
  v7[39] = swift_task_alloc();
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF8A30);
  v7[40] = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  v7[41] = v10;
  v7[42] = *(void *)(v10 + 64);
  v7[43] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1D79BCFF0, 0, 0);
}

uint64_t sub_1D79BCFF0()
{
  uint64_t v35 = v0;
  uint64_t v2 = v0[42];
  uint64_t v1 = v0[43];
  uint64_t v4 = v0[40];
  uint64_t v3 = v0[41];
  uint64_t v5 = v0[33];
  id v6 = *(void **)(v5 + 16);
  (*(void (**)(uint64_t, void, uint64_t))(v3 + 16))(v1, v0[34], v4);
  unint64_t v7 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v8 = (v2 + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v9 = swift_allocObject();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v3 + 32))(v9 + v7, v1, v4);
  *(void *)(v9 + v8) = v5;
  v0[6] = sub_1D79D60BC;
  v0[7] = v9;
  v0[2] = MEMORY[0x1E4F143A8];
  v0[3] = 1107296256;
  v0[4] = sub_1D7A30D08;
  v0[5] = &block_descriptor_792;
  uint64_t v10 = _Block_copy(v0 + 2);
  swift_retain();
  uint64_t v11 = (uint64_t)(v0 + 8);
  swift_release();
  id v12 = objc_msgSend(v6, sel_remoteObjectProxyWithErrorHandler_, v10);
  _Block_release(v10);
  sub_1D7A9CB08();
  swift_unknownObjectRelease();
  sub_1D78907D8((uint64_t)(v0 + 8), (uint64_t)(v0 + 16));
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA846660);
  if (swift_dynamicCast())
  {
    uint64_t v13 = (int *)v0[35];
    v0[29] = v0[27];
    uint64_t v33 = (int *)((char *)v13 + *v13);
    uint64_t v14 = (void *)swift_task_alloc();
    v0[44] = v14;
    *uint64_t v14 = v0;
    v14[1] = sub_1D79BD534;
    return ((uint64_t (*)(void *, void *))v33)(v0 + 46, v0 + 29);
  }
  else
  {
    if (qword_1EBDF9DC8 != -1) {
      swift_once();
    }
    uint64_t v16 = v0[38];
    uint64_t v17 = v0[39];
    uint64_t v18 = v0[37];
    uint64_t v19 = __swift_project_value_buffer(v18, (uint64_t)qword_1EBDFBE70);
    swift_beginAccess();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(v17, v19, v18);
    sub_1D78907D8(v11, (uint64_t)(v0 + 20));
    uint64_t v20 = sub_1D7A9B5D8();
    os_log_type_t v21 = sub_1D7A9C758();
    BOOL v22 = os_log_type_enabled(v20, v21);
    uint64_t v24 = v0[38];
    uint64_t v23 = v0[39];
    uint64_t v25 = v0[37];
    if (v22)
    {
      uint64_t v32 = v0[37];
      uint64_t v26 = swift_slowAlloc();
      uint64_t v27 = swift_slowAlloc();
      uint64_t v34 = v27;
      *(_DWORD *)uint64_t v26 = 136315394;
      sub_1D78907D8((uint64_t)(v0 + 20), (uint64_t)(v0 + 12));
      uint64_t v28 = sub_1D7A9C038();
      v0[30] = sub_1D7923300(v28, v29, &v34);
      sub_1D7A9C9E8();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 20));
      *(_WORD *)(v26 + 12) = 2080;
      v0[31] = sub_1D7923300(0xD00000000000001CLL, 0x80000001D7AC7A70, &v34);
      sub_1D7A9C9E8();
      _os_log_impl(&dword_1D7853000, v20, v21, "Remote proxy object %s cannot be cast to %s", (uint8_t *)v26, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1D947D740](v27, -1, -1);
      uint64_t v30 = v26;
      uint64_t v11 = (uint64_t)(v0 + 8);
      MEMORY[0x1D947D740](v30, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v23, v32);
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 20));

      (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v23, v25);
    }
    v0[28] = (*(uint64_t (**)(void))(v0[33] + 24))(0);
    sub_1D7A9C448();
    __swift_destroy_boxed_opaque_existential_1(v11);
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v31 = (uint64_t (*)(void))v0[1];
    return v31();
  }
}

uint64_t sub_1D79BD534()
{
  *(void *)(*(void *)v1 + 360) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1D79D85DC;
  }
  else {
    uint64_t v2 = sub_1D79D85E4;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D79BD648(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[37] = a6;
  v7[38] = a7;
  v7[35] = a4;
  v7[36] = a5;
  uint64_t v8 = sub_1D7A9B5F8();
  v7[39] = v8;
  v7[40] = *(void *)(v8 - 8);
  v7[41] = swift_task_alloc();
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA846718);
  v7[42] = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  v7[43] = v10;
  v7[44] = *(void *)(v10 + 64);
  v7[45] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1D79BD774, 0, 0);
}

uint64_t sub_1D79BD774()
{
  uint64_t v35 = v0;
  uint64_t v2 = v0[44];
  uint64_t v1 = v0[45];
  uint64_t v4 = v0[42];
  uint64_t v3 = v0[43];
  uint64_t v5 = v0[35];
  id v6 = *(void **)(v5 + 16);
  (*(void (**)(uint64_t, void, uint64_t))(v3 + 16))(v1, v0[36], v4);
  unint64_t v7 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v8 = (v2 + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v9 = swift_allocObject();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v3 + 32))(v9 + v7, v1, v4);
  *(void *)(v9 + v8) = v5;
  v0[6] = sub_1D79D7450;
  v0[7] = v9;
  v0[2] = MEMORY[0x1E4F143A8];
  v0[3] = 1107296256;
  v0[4] = sub_1D7A30D08;
  v0[5] = &block_descriptor_761;
  uint64_t v10 = _Block_copy(v0 + 2);
  swift_retain();
  uint64_t v11 = (uint64_t)(v0 + 8);
  swift_release();
  id v12 = objc_msgSend(v6, sel_remoteObjectProxyWithErrorHandler_, v10);
  _Block_release(v10);
  sub_1D7A9CB08();
  swift_unknownObjectRelease();
  sub_1D78907D8((uint64_t)(v0 + 8), (uint64_t)(v0 + 16));
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA846660);
  if (swift_dynamicCast())
  {
    uint64_t v13 = (int *)v0[37];
    v0[29] = v0[27];
    uint64_t v33 = (int *)((char *)v13 + *v13);
    uint64_t v14 = (void *)swift_task_alloc();
    v0[46] = v14;
    *uint64_t v14 = v0;
    v14[1] = sub_1D79BC0D0;
    return ((uint64_t (*)(void *, void *))v33)(v0 + 32, v0 + 29);
  }
  else
  {
    if (qword_1EBDF9DC8 != -1) {
      swift_once();
    }
    uint64_t v16 = v0[40];
    uint64_t v17 = v0[41];
    uint64_t v18 = v0[39];
    uint64_t v19 = __swift_project_value_buffer(v18, (uint64_t)qword_1EBDFBE70);
    swift_beginAccess();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(v17, v19, v18);
    sub_1D78907D8(v11, (uint64_t)(v0 + 20));
    uint64_t v20 = sub_1D7A9B5D8();
    os_log_type_t v21 = sub_1D7A9C758();
    BOOL v22 = os_log_type_enabled(v20, v21);
    uint64_t v24 = v0[40];
    uint64_t v23 = v0[41];
    uint64_t v25 = v0[39];
    if (v22)
    {
      uint64_t v32 = v0[39];
      uint64_t v26 = swift_slowAlloc();
      uint64_t v27 = swift_slowAlloc();
      uint64_t v34 = v27;
      *(_DWORD *)uint64_t v26 = 136315394;
      sub_1D78907D8((uint64_t)(v0 + 20), (uint64_t)(v0 + 12));
      uint64_t v28 = sub_1D7A9C038();
      v0[30] = sub_1D7923300(v28, v29, &v34);
      sub_1D7A9C9E8();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 20));
      *(_WORD *)(v26 + 12) = 2080;
      v0[31] = sub_1D7923300(0xD00000000000001CLL, 0x80000001D7AC7A70, &v34);
      sub_1D7A9C9E8();
      _os_log_impl(&dword_1D7853000, v20, v21, "Remote proxy object %s cannot be cast to %s", (uint8_t *)v26, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1D947D740](v27, -1, -1);
      uint64_t v30 = v26;
      uint64_t v11 = (uint64_t)(v0 + 8);
      MEMORY[0x1D947D740](v30, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v23, v32);
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 20));

      (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v23, v25);
    }
    v0[28] = (*(uint64_t (**)(void))(v0[35] + 24))(0);
    sub_1D7A9C448();
    __swift_destroy_boxed_opaque_existential_1(v11);
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v31 = (uint64_t (*)(void))v0[1];
    return v31();
  }
}

uint64_t sub_1D79BDCB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[39] = a6;
  v7[40] = a7;
  v7[37] = a4;
  v7[38] = a5;
  uint64_t v8 = sub_1D7A9B5F8();
  v7[41] = v8;
  v7[42] = *(void *)(v8 - 8);
  v7[43] = swift_task_alloc();
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8466E0);
  v7[44] = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  v7[45] = v10;
  v7[46] = *(void *)(v10 + 64);
  v7[47] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1D79BDDE4, 0, 0);
}

uint64_t sub_1D79BDDE4()
{
  uint64_t v35 = v0;
  uint64_t v1 = v0[46];
  uint64_t v2 = v0[47];
  uint64_t v4 = v0[44];
  uint64_t v3 = v0[45];
  uint64_t v5 = v0[37];
  id v31 = *(id *)(v5 + 16);
  (*(void (**)(uint64_t, void, uint64_t))(v3 + 16))(v2, v0[38], v4);
  unint64_t v6 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v7 = swift_allocObject();
  uint64_t v8 = v4;
  uint64_t v9 = (uint64_t)(v0 + 8);
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v3 + 32))(v7 + v6, v2, v8);
  *(void *)(v7 + ((v1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8)) = v5;
  v0[6] = sub_1D79D70EC;
  v0[7] = v7;
  v0[2] = MEMORY[0x1E4F143A8];
  v0[3] = 1107296256;
  v0[4] = sub_1D7A30D08;
  v0[5] = &block_descriptor_735;
  uint64_t v10 = _Block_copy(v0 + 2);
  swift_retain();
  swift_release();
  id v11 = objc_msgSend(v31, sel_remoteObjectProxyWithErrorHandler_, v10);
  _Block_release(v10);
  sub_1D7A9CB08();
  swift_unknownObjectRelease();
  sub_1D78907D8((uint64_t)(v0 + 8), (uint64_t)(v0 + 16));
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA846660);
  if (swift_dynamicCast())
  {
    uint64_t v12 = (int *)v0[39];
    v0[31] = v0[34];
    uint64_t v33 = (int *)((char *)v12 + *v12);
    uint64_t v13 = (void *)swift_task_alloc();
    v0[48] = v13;
    *uint64_t v13 = v0;
    v13[1] = sub_1D79BE32C;
    return ((uint64_t (*)(void *, void *))v33)(v0 + 29, v0 + 31);
  }
  else
  {
    if (qword_1EBDF9DC8 != -1) {
      swift_once();
    }
    uint64_t v15 = v0[42];
    uint64_t v16 = v0[43];
    uint64_t v17 = v0[41];
    uint64_t v18 = __swift_project_value_buffer(v17, (uint64_t)qword_1EBDFBE70);
    swift_beginAccess();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v16, v18, v17);
    sub_1D78907D8((uint64_t)(v0 + 8), (uint64_t)(v0 + 20));
    uint64_t v19 = sub_1D7A9B5D8();
    os_log_type_t v20 = sub_1D7A9C758();
    BOOL v21 = os_log_type_enabled(v19, v20);
    uint64_t v23 = v0[42];
    uint64_t v22 = v0[43];
    uint64_t v24 = v0[41];
    if (v21)
    {
      uint64_t v32 = v0[41];
      uint64_t v25 = swift_slowAlloc();
      uint64_t v30 = swift_slowAlloc();
      uint64_t v34 = v30;
      *(_DWORD *)uint64_t v25 = 136315394;
      sub_1D78907D8((uint64_t)(v0 + 20), (uint64_t)(v0 + 12));
      uint64_t v26 = sub_1D7A9C038();
      v0[32] = sub_1D7923300(v26, v27, &v34);
      sub_1D7A9C9E8();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 20));
      *(_WORD *)(v25 + 12) = 2080;
      v0[33] = sub_1D7923300(0xD00000000000001CLL, 0x80000001D7AC7A70, &v34);
      sub_1D7A9C9E8();
      _os_log_impl(&dword_1D7853000, v19, v20, "Remote proxy object %s cannot be cast to %s", (uint8_t *)v25, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1D947D740](v30, -1, -1);
      uint64_t v28 = v25;
      uint64_t v9 = (uint64_t)(v0 + 8);
      MEMORY[0x1D947D740](v28, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v22, v32);
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 20));

      (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v22, v24);
    }
    v0[36] = (*(uint64_t (**)(void))(v0[37] + 24))(0);
    sub_1D7A9C448();
    __swift_destroy_boxed_opaque_existential_1(v9);
    swift_task_dealloc();
    swift_task_dealloc();
    unint64_t v29 = (uint64_t (*)(void))v0[1];
    return v29();
  }
}

uint64_t sub_1D79BE32C()
{
  *(void *)(*(void *)v1 + 392) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1D79BE4D8;
  }
  else {
    uint64_t v2 = sub_1D79BE440;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D79BE440()
{
  *(_OWORD *)(v0 + 216) = *(_OWORD *)(v0 + 232);
  sub_1D7A9C458();
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 64);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D79BE4D8()
{
  uint64_t v1 = v0[49];
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 8));
  v0[35] = v1;
  sub_1D7A9C448();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_1D79BE588(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[37] = a6;
  v7[38] = a7;
  v7[35] = a4;
  v7[36] = a5;
  uint64_t v8 = sub_1D7A9B5F8();
  v7[39] = v8;
  v7[40] = *(void *)(v8 - 8);
  v7[41] = swift_task_alloc();
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8466A8);
  v7[42] = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  v7[43] = v10;
  v7[44] = *(void *)(v10 + 64);
  v7[45] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1D79BE6B4, 0, 0);
}

uint64_t sub_1D79BE6B4()
{
  uint64_t v35 = v0;
  uint64_t v2 = v0[44];
  uint64_t v1 = v0[45];
  uint64_t v4 = v0[42];
  uint64_t v3 = v0[43];
  uint64_t v5 = v0[35];
  unint64_t v6 = *(void **)(v5 + 16);
  (*(void (**)(uint64_t, void, uint64_t))(v3 + 16))(v1, v0[36], v4);
  unint64_t v7 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v8 = (v2 + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v9 = swift_allocObject();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v3 + 32))(v9 + v7, v1, v4);
  *(void *)(v9 + v8) = v5;
  v0[6] = sub_1D79D6D20;
  v0[7] = v9;
  v0[2] = MEMORY[0x1E4F143A8];
  v0[3] = 1107296256;
  v0[4] = sub_1D7A30D08;
  v0[5] = &block_descriptor_704;
  uint64_t v10 = _Block_copy(v0 + 2);
  swift_retain();
  uint64_t v11 = (uint64_t)(v0 + 8);
  swift_release();
  id v12 = objc_msgSend(v6, sel_remoteObjectProxyWithErrorHandler_, v10);
  _Block_release(v10);
  sub_1D7A9CB08();
  swift_unknownObjectRelease();
  sub_1D78907D8((uint64_t)(v0 + 8), (uint64_t)(v0 + 16));
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA846660);
  if (swift_dynamicCast())
  {
    uint64_t v13 = (int *)v0[37];
    v0[29] = v0[27];
    uint64_t v33 = (int *)((char *)v13 + *v13);
    uint64_t v14 = (void *)swift_task_alloc();
    v0[46] = v14;
    *uint64_t v14 = v0;
    v14[1] = sub_1D79BC0D0;
    return ((uint64_t (*)(void *, void *))v33)(v0 + 32, v0 + 29);
  }
  else
  {
    if (qword_1EBDF9DC8 != -1) {
      swift_once();
    }
    uint64_t v16 = v0[40];
    uint64_t v17 = v0[41];
    uint64_t v18 = v0[39];
    uint64_t v19 = __swift_project_value_buffer(v18, (uint64_t)qword_1EBDFBE70);
    swift_beginAccess();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(v17, v19, v18);
    sub_1D78907D8(v11, (uint64_t)(v0 + 20));
    os_log_type_t v20 = sub_1D7A9B5D8();
    os_log_type_t v21 = sub_1D7A9C758();
    BOOL v22 = os_log_type_enabled(v20, v21);
    uint64_t v24 = v0[40];
    uint64_t v23 = v0[41];
    uint64_t v25 = v0[39];
    if (v22)
    {
      uint64_t v32 = v0[39];
      uint64_t v26 = swift_slowAlloc();
      uint64_t v27 = swift_slowAlloc();
      uint64_t v34 = v27;
      *(_DWORD *)uint64_t v26 = 136315394;
      sub_1D78907D8((uint64_t)(v0 + 20), (uint64_t)(v0 + 12));
      uint64_t v28 = sub_1D7A9C038();
      v0[30] = sub_1D7923300(v28, v29, &v34);
      sub_1D7A9C9E8();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 20));
      *(_WORD *)(v26 + 12) = 2080;
      v0[31] = sub_1D7923300(0xD00000000000001CLL, 0x80000001D7AC7A70, &v34);
      sub_1D7A9C9E8();
      _os_log_impl(&dword_1D7853000, v20, v21, "Remote proxy object %s cannot be cast to %s", (uint8_t *)v26, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1D947D740](v27, -1, -1);
      uint64_t v30 = v26;
      uint64_t v11 = (uint64_t)(v0 + 8);
      MEMORY[0x1D947D740](v30, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v23, v32);
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 20));

      (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v23, v25);
    }
    v0[28] = (*(uint64_t (**)(void))(v0[35] + 24))(0);
    sub_1D7A9C448();
    __swift_destroy_boxed_opaque_existential_1(v11);
    swift_task_dealloc();
    swift_task_dealloc();
    id v31 = (uint64_t (*)(void))v0[1];
    return v31();
  }
}

uint64_t sub_1D79BEBF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[37] = a6;
  v7[38] = a7;
  v7[35] = a4;
  v7[36] = a5;
  uint64_t v8 = sub_1D7A9B5F8();
  v7[39] = v8;
  v7[40] = *(void *)(v8 - 8);
  v7[41] = swift_task_alloc();
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA846668);
  v7[42] = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  v7[43] = v10;
  v7[44] = *(void *)(v10 + 64);
  v7[45] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1D79BED24, 0, 0);
}

uint64_t sub_1D79BED24()
{
  uint64_t v35 = v0;
  uint64_t v2 = v0[44];
  uint64_t v1 = v0[45];
  uint64_t v4 = v0[42];
  uint64_t v3 = v0[43];
  uint64_t v5 = v0[35];
  unint64_t v6 = *(void **)(v5 + 16);
  (*(void (**)(uint64_t, void, uint64_t))(v3 + 16))(v1, v0[36], v4);
  unint64_t v7 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v8 = (v2 + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v9 = swift_allocObject();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v3 + 32))(v9 + v7, v1, v4);
  *(void *)(v9 + v8) = v5;
  v0[6] = sub_1D79D699C;
  v0[7] = v9;
  v0[2] = MEMORY[0x1E4F143A8];
  v0[3] = 1107296256;
  v0[4] = sub_1D7A30D08;
  v0[5] = &block_descriptor_674;
  uint64_t v10 = _Block_copy(v0 + 2);
  swift_retain();
  uint64_t v11 = (uint64_t)(v0 + 8);
  swift_release();
  id v12 = objc_msgSend(v6, sel_remoteObjectProxyWithErrorHandler_, v10);
  _Block_release(v10);
  sub_1D7A9CB08();
  swift_unknownObjectRelease();
  sub_1D78907D8((uint64_t)(v0 + 8), (uint64_t)(v0 + 16));
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA846660);
  if (swift_dynamicCast())
  {
    uint64_t v13 = (int *)v0[37];
    v0[29] = v0[27];
    uint64_t v33 = (int *)((char *)v13 + *v13);
    uint64_t v14 = (void *)swift_task_alloc();
    v0[46] = v14;
    *uint64_t v14 = v0;
    v14[1] = sub_1D79BC0D0;
    return ((uint64_t (*)(void *, void *))v33)(v0 + 32, v0 + 29);
  }
  else
  {
    if (qword_1EBDF9DC8 != -1) {
      swift_once();
    }
    uint64_t v16 = v0[40];
    uint64_t v17 = v0[41];
    uint64_t v18 = v0[39];
    uint64_t v19 = __swift_project_value_buffer(v18, (uint64_t)qword_1EBDFBE70);
    swift_beginAccess();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(v17, v19, v18);
    sub_1D78907D8(v11, (uint64_t)(v0 + 20));
    os_log_type_t v20 = sub_1D7A9B5D8();
    os_log_type_t v21 = sub_1D7A9C758();
    BOOL v22 = os_log_type_enabled(v20, v21);
    uint64_t v24 = v0[40];
    uint64_t v23 = v0[41];
    uint64_t v25 = v0[39];
    if (v22)
    {
      uint64_t v32 = v0[39];
      uint64_t v26 = swift_slowAlloc();
      uint64_t v27 = swift_slowAlloc();
      uint64_t v34 = v27;
      *(_DWORD *)uint64_t v26 = 136315394;
      sub_1D78907D8((uint64_t)(v0 + 20), (uint64_t)(v0 + 12));
      uint64_t v28 = sub_1D7A9C038();
      v0[30] = sub_1D7923300(v28, v29, &v34);
      sub_1D7A9C9E8();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 20));
      *(_WORD *)(v26 + 12) = 2080;
      v0[31] = sub_1D7923300(0xD00000000000001CLL, 0x80000001D7AC7A70, &v34);
      sub_1D7A9C9E8();
      _os_log_impl(&dword_1D7853000, v20, v21, "Remote proxy object %s cannot be cast to %s", (uint8_t *)v26, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1D947D740](v27, -1, -1);
      uint64_t v30 = v26;
      uint64_t v11 = (uint64_t)(v0 + 8);
      MEMORY[0x1D947D740](v30, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v23, v32);
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 20));

      (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v23, v25);
    }
    v0[28] = (*(uint64_t (**)(void))(v0[35] + 24))(0);
    sub_1D7A9C448();
    __swift_destroy_boxed_opaque_existential_1(v11);
    swift_task_dealloc();
    swift_task_dealloc();
    id v31 = (uint64_t (*)(void))v0[1];
    return v31();
  }
}

uint64_t sub_1D79BF268(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[35] = a6;
  v7[36] = a7;
  v7[33] = a4;
  v7[34] = a5;
  uint64_t v8 = sub_1D7A9B5F8();
  v7[37] = v8;
  v7[38] = *(void *)(v8 - 8);
  v7[39] = swift_task_alloc();
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8439D0);
  v7[40] = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  v7[41] = v10;
  v7[42] = *(void *)(v10 + 64);
  v7[43] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1D79BF394, 0, 0);
}

uint64_t sub_1D79BF394()
{
  uint64_t v35 = v0;
  uint64_t v2 = v0[42];
  uint64_t v1 = v0[43];
  uint64_t v4 = v0[40];
  uint64_t v3 = v0[41];
  uint64_t v5 = v0[33];
  unint64_t v6 = *(void **)(v5 + 16);
  (*(void (**)(uint64_t, void, uint64_t))(v3 + 16))(v1, v0[34], v4);
  unint64_t v7 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v8 = (v2 + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v9 = swift_allocObject();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v3 + 32))(v9 + v7, v1, v4);
  *(void *)(v9 + v8) = v5;
  v0[6] = sub_1D79D5F58;
  v0[7] = v9;
  v0[2] = MEMORY[0x1E4F143A8];
  v0[3] = 1107296256;
  v0[4] = sub_1D7A30D08;
  v0[5] = &block_descriptor_594;
  uint64_t v10 = _Block_copy(v0 + 2);
  swift_retain();
  uint64_t v11 = (uint64_t)(v0 + 8);
  swift_release();
  id v12 = objc_msgSend(v6, sel_remoteObjectProxyWithErrorHandler_, v10);
  _Block_release(v10);
  sub_1D7A9CB08();
  swift_unknownObjectRelease();
  sub_1D78907D8((uint64_t)(v0 + 8), (uint64_t)(v0 + 16));
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF92D0);
  if (swift_dynamicCast())
  {
    uint64_t v13 = (int *)v0[35];
    v0[29] = v0[27];
    uint64_t v33 = (uint64_t (*)(void))((char *)v13 + *v13);
    uint64_t v14 = (void *)swift_task_alloc();
    v0[44] = v14;
    *uint64_t v14 = v0;
    v14[1] = sub_1D79BF8CC;
    return v33();
  }
  else
  {
    if (qword_1EBDF9DC8 != -1) {
      swift_once();
    }
    uint64_t v16 = v0[38];
    uint64_t v17 = v0[39];
    uint64_t v18 = v0[37];
    uint64_t v19 = __swift_project_value_buffer(v18, (uint64_t)qword_1EBDFBE70);
    swift_beginAccess();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(v17, v19, v18);
    sub_1D78907D8(v11, (uint64_t)(v0 + 20));
    os_log_type_t v20 = sub_1D7A9B5D8();
    os_log_type_t v21 = sub_1D7A9C758();
    BOOL v22 = os_log_type_enabled(v20, v21);
    uint64_t v24 = v0[38];
    uint64_t v23 = v0[39];
    uint64_t v25 = v0[37];
    if (v22)
    {
      uint64_t v32 = v0[37];
      uint64_t v26 = swift_slowAlloc();
      uint64_t v27 = swift_slowAlloc();
      uint64_t v34 = v27;
      *(_DWORD *)uint64_t v26 = 136315394;
      sub_1D78907D8((uint64_t)(v0 + 20), (uint64_t)(v0 + 12));
      uint64_t v28 = sub_1D7A9C038();
      v0[30] = sub_1D7923300(v28, v29, &v34);
      sub_1D7A9C9E8();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 20));
      *(_WORD *)(v26 + 12) = 2080;
      v0[31] = sub_1D7923300(0xD00000000000001BLL, 0x80000001D7AC7A30, &v34);
      sub_1D7A9C9E8();
      _os_log_impl(&dword_1D7853000, v20, v21, "Remote proxy object %s cannot be cast to %s", (uint8_t *)v26, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1D947D740](v27, -1, -1);
      uint64_t v30 = v26;
      uint64_t v11 = (uint64_t)(v0 + 8);
      MEMORY[0x1D947D740](v30, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v23, v32);
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 20));

      (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v23, v25);
    }
    v0[28] = (*(uint64_t (**)(void))(v0[33] + 24))(0);
    sub_1D7A9C448();
    __swift_destroy_boxed_opaque_existential_1(v11);
    swift_task_dealloc();
    swift_task_dealloc();
    id v31 = (uint64_t (*)(void))v0[1];
    return v31();
  }
}

uint64_t sub_1D79BF8CC()
{
  *(void *)(*(void *)v1 + 360) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1D79BFA6C;
  }
  else {
    uint64_t v2 = sub_1D79BF9E0;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D79BF9E0()
{
  sub_1D7A9C458();
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 64);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D79BFA6C()
{
  uint64_t v1 = v0[45];
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 8));
  v0[32] = v1;
  sub_1D7A9C448();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_1D79BFB1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[37] = a6;
  v7[38] = a7;
  v7[35] = a4;
  v7[36] = a5;
  uint64_t v8 = sub_1D7A9B5F8();
  v7[39] = v8;
  v7[40] = *(void *)(v8 - 8);
  v7[41] = swift_task_alloc();
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA846610);
  v7[42] = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  v7[43] = v10;
  v7[44] = *(void *)(v10 + 64);
  v7[45] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1D79BFC48, 0, 0);
}

uint64_t sub_1D79BFC48()
{
  uint64_t v35 = v0;
  uint64_t v2 = v0[44];
  uint64_t v1 = v0[45];
  uint64_t v4 = v0[42];
  uint64_t v3 = v0[43];
  uint64_t v5 = v0[35];
  unint64_t v6 = *(void **)(v5 + 16);
  (*(void (**)(uint64_t, void, uint64_t))(v3 + 16))(v1, v0[36], v4);
  unint64_t v7 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v8 = (v2 + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v9 = swift_allocObject();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v3 + 32))(v9 + v7, v1, v4);
  *(void *)(v9 + v8) = v5;
  v0[6] = sub_1D79D647C;
  v0[7] = v9;
  v0[2] = MEMORY[0x1E4F143A8];
  v0[3] = 1107296256;
  v0[4] = sub_1D7A30D08;
  v0[5] = &block_descriptor_630;
  uint64_t v10 = _Block_copy(v0 + 2);
  swift_retain();
  uint64_t v11 = (uint64_t)(v0 + 8);
  swift_release();
  id v12 = objc_msgSend(v6, sel_remoteObjectProxyWithErrorHandler_, v10);
  _Block_release(v10);
  sub_1D7A9CB08();
  swift_unknownObjectRelease();
  sub_1D78907D8((uint64_t)(v0 + 8), (uint64_t)(v0 + 16));
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF92D0);
  if (swift_dynamicCast())
  {
    uint64_t v13 = (int *)v0[37];
    v0[29] = v0[27];
    uint64_t v33 = (int *)((char *)v13 + *v13);
    uint64_t v14 = (void *)swift_task_alloc();
    v0[46] = v14;
    *uint64_t v14 = v0;
    v14[1] = sub_1D79C018C;
    return ((uint64_t (*)(void *, void *))v33)(v0 + 32, v0 + 29);
  }
  else
  {
    if (qword_1EBDF9DC8 != -1) {
      swift_once();
    }
    uint64_t v16 = v0[40];
    uint64_t v17 = v0[41];
    uint64_t v18 = v0[39];
    uint64_t v19 = __swift_project_value_buffer(v18, (uint64_t)qword_1EBDFBE70);
    swift_beginAccess();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(v17, v19, v18);
    sub_1D78907D8(v11, (uint64_t)(v0 + 20));
    os_log_type_t v20 = sub_1D7A9B5D8();
    os_log_type_t v21 = sub_1D7A9C758();
    BOOL v22 = os_log_type_enabled(v20, v21);
    uint64_t v24 = v0[40];
    uint64_t v23 = v0[41];
    uint64_t v25 = v0[39];
    if (v22)
    {
      uint64_t v32 = v0[39];
      uint64_t v26 = swift_slowAlloc();
      uint64_t v27 = swift_slowAlloc();
      uint64_t v34 = v27;
      *(_DWORD *)uint64_t v26 = 136315394;
      sub_1D78907D8((uint64_t)(v0 + 20), (uint64_t)(v0 + 12));
      uint64_t v28 = sub_1D7A9C038();
      v0[30] = sub_1D7923300(v28, v29, &v34);
      sub_1D7A9C9E8();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 20));
      *(_WORD *)(v26 + 12) = 2080;
      v0[31] = sub_1D7923300(0xD00000000000001BLL, 0x80000001D7AC7A30, &v34);
      sub_1D7A9C9E8();
      _os_log_impl(&dword_1D7853000, v20, v21, "Remote proxy object %s cannot be cast to %s", (uint8_t *)v26, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1D947D740](v27, -1, -1);
      uint64_t v30 = v26;
      uint64_t v11 = (uint64_t)(v0 + 8);
      MEMORY[0x1D947D740](v30, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v23, v32);
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 20));

      (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v23, v25);
    }
    v0[28] = (*(uint64_t (**)(void))(v0[35] + 24))(0);
    sub_1D7A9C448();
    __swift_destroy_boxed_opaque_existential_1(v11);
    swift_task_dealloc();
    swift_task_dealloc();
    id v31 = (uint64_t (*)(void))v0[1];
    return v31();
  }
}

uint64_t sub_1D79C018C()
{
  *(void *)(*(void *)v1 + 376) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1D79C0338;
  }
  else {
    uint64_t v2 = sub_1D79C02A0;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D79C02A0()
{
  v0[34] = v0[32];
  sub_1D7A9C458();
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 8));
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_1D79C0338()
{
  uint64_t v1 = v0[47];
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 8));
  v0[33] = v1;
  sub_1D7A9C448();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_1D79C03E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[35] = a6;
  v7[36] = a7;
  v7[33] = a4;
  v7[34] = a5;
  uint64_t v8 = sub_1D7A9B5F8();
  v7[37] = v8;
  v7[38] = *(void *)(v8 - 8);
  v7[39] = swift_task_alloc();
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF8A30);
  v7[40] = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  v7[41] = v10;
  v7[42] = *(void *)(v10 + 64);
  v7[43] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1D79C0514, 0, 0);
}

uint64_t sub_1D79C0514()
{
  uint64_t v35 = v0;
  uint64_t v2 = v0[42];
  uint64_t v1 = v0[43];
  uint64_t v4 = v0[40];
  uint64_t v3 = v0[41];
  uint64_t v5 = v0[33];
  unint64_t v6 = *(void **)(v5 + 16);
  (*(void (**)(uint64_t, void, uint64_t))(v3 + 16))(v1, v0[34], v4);
  unint64_t v7 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v8 = (v2 + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v9 = swift_allocObject();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v3 + 32))(v9 + v7, v1, v4);
  *(void *)(v9 + v8) = v5;
  v0[6] = sub_1D79D60BC;
  v0[7] = v9;
  v0[2] = MEMORY[0x1E4F143A8];
  v0[3] = 1107296256;
  v0[4] = sub_1D7A30D08;
  v0[5] = &block_descriptor_607;
  uint64_t v10 = _Block_copy(v0 + 2);
  swift_retain();
  uint64_t v11 = (uint64_t)(v0 + 8);
  swift_release();
  id v12 = objc_msgSend(v6, sel_remoteObjectProxyWithErrorHandler_, v10);
  _Block_release(v10);
  sub_1D7A9CB08();
  swift_unknownObjectRelease();
  sub_1D78907D8((uint64_t)(v0 + 8), (uint64_t)(v0 + 16));
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF92D0);
  if (swift_dynamicCast())
  {
    uint64_t v13 = (int *)v0[35];
    v0[29] = v0[27];
    uint64_t v33 = (int *)((char *)v13 + *v13);
    uint64_t v14 = (void *)swift_task_alloc();
    v0[44] = v14;
    *uint64_t v14 = v0;
    v14[1] = sub_1D79C0A58;
    return ((uint64_t (*)(void *, void *))v33)(v0 + 46, v0 + 29);
  }
  else
  {
    if (qword_1EBDF9DC8 != -1) {
      swift_once();
    }
    uint64_t v16 = v0[38];
    uint64_t v17 = v0[39];
    uint64_t v18 = v0[37];
    uint64_t v19 = __swift_project_value_buffer(v18, (uint64_t)qword_1EBDFBE70);
    swift_beginAccess();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(v17, v19, v18);
    sub_1D78907D8(v11, (uint64_t)(v0 + 20));
    os_log_type_t v20 = sub_1D7A9B5D8();
    os_log_type_t v21 = sub_1D7A9C758();
    BOOL v22 = os_log_type_enabled(v20, v21);
    uint64_t v24 = v0[38];
    uint64_t v23 = v0[39];
    uint64_t v25 = v0[37];
    if (v22)
    {
      uint64_t v32 = v0[37];
      uint64_t v26 = swift_slowAlloc();
      uint64_t v27 = swift_slowAlloc();
      uint64_t v34 = v27;
      *(_DWORD *)uint64_t v26 = 136315394;
      sub_1D78907D8((uint64_t)(v0 + 20), (uint64_t)(v0 + 12));
      uint64_t v28 = sub_1D7A9C038();
      v0[30] = sub_1D7923300(v28, v29, &v34);
      sub_1D7A9C9E8();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 20));
      *(_WORD *)(v26 + 12) = 2080;
      v0[31] = sub_1D7923300(0xD00000000000001BLL, 0x80000001D7AC7A30, &v34);
      sub_1D7A9C9E8();
      _os_log_impl(&dword_1D7853000, v20, v21, "Remote proxy object %s cannot be cast to %s", (uint8_t *)v26, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1D947D740](v27, -1, -1);
      uint64_t v30 = v26;
      uint64_t v11 = (uint64_t)(v0 + 8);
      MEMORY[0x1D947D740](v30, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v23, v32);
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 20));

      (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v23, v25);
    }
    v0[28] = (*(uint64_t (**)(void))(v0[33] + 24))(0);
    sub_1D7A9C448();
    __swift_destroy_boxed_opaque_existential_1(v11);
    swift_task_dealloc();
    swift_task_dealloc();
    id v31 = (uint64_t (*)(void))v0[1];
    return v31();
  }
}

uint64_t sub_1D79C0A58()
{
  *(void *)(*(void *)v1 + 360) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1D79BFA6C;
  }
  else {
    uint64_t v2 = sub_1D79C0B6C;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D79C0B6C()
{
  *(unsigned char *)(v0 + 369) = *(unsigned char *)(v0 + 368);
  sub_1D7A9C458();
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 64);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D79C0C04(void *a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v32 = a3;
  uint64_t v7 = sub_1D7A9B5F8();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7, v9, v10, v11, v12, v13, v14, v15);
  uint64_t v17 = (char *)v29 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EBDF9DC8 != -1) {
    swift_once();
  }
  uint64_t v18 = __swift_project_value_buffer(v7, (uint64_t)qword_1EBDFBE70);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v17, v18, v7);
  id v19 = a1;
  id v20 = a1;
  os_log_type_t v21 = sub_1D7A9B5D8();
  os_log_type_t v22 = sub_1D7A9C758();
  if (os_log_type_enabled(v21, v22))
  {
    uint64_t v23 = swift_slowAlloc();
    uint64_t v31 = a2;
    uint64_t v24 = (uint8_t *)v23;
    uint64_t v25 = swift_slowAlloc();
    uint64_t v34 = v25;
    uint64_t v30 = a4;
    *(_DWORD *)uint64_t v24 = 136315138;
    v29[1] = v24 + 4;
    swift_getErrorValue();
    uint64_t v26 = sub_1D7A9D548();
    uint64_t v33 = sub_1D7923300(v26, v27, &v34);
    a4 = v30;
    sub_1D7A9C9E8();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1D7853000, v21, v22, "XPC connection error: %s", v24, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D947D740](v25, -1, -1);
    MEMORY[0x1D947D740](v24, -1, -1);
  }
  else
  {
  }
  (*(void (**)(char *, uint64_t))(v8 + 8))(v17, v7);
  uint64_t v34 = (*(uint64_t (**)(void *))(v32 + 24))(a1);
  __swift_instantiateConcreteTypeFromMangledName(a4);
  return sub_1D7A9C448();
}

id IdentityManagementUIClient.__allocating_init(exportedObject:)(uint64_t a1)
{
  id v3 = objc_allocWithZone(v1);
  id v4 = sub_1D79CEF7C(a1);
  swift_unknownObjectRelease();
  return v4;
}

id IdentityManagementUIClient.init(exportedObject:)(uint64_t a1)
{
  id v1 = sub_1D79CEF7C(a1);
  swift_unknownObjectRelease();
  return v1;
}

uint64_t sub_1D79C0F54()
{
  __int16 v4 = 508;
  unint64_t v0 = sub_1D785EAF8(MEMORY[0x1E4FBC860]);
  sub_1D7860544();
  uint64_t v1 = swift_allocError();
  DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xD000000000000013, 0x80000001D7ABD9C0, &v4, 0, v0, 0xD00000000000005ELL, 0x80000001D7AC7C10, v2, 0xD000000000000015, 0x80000001D7AC7CA0, 39);
  return v1;
}

uint64_t sub_1D79C1024(void *a1)
{
  uint64_t v2 = sub_1D7A9B5F8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2, v4, v5, v6, v7, v8, v9, v10);
  uint64_t v12 = (char *)v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EBDF9DC8 != -1) {
    swift_once();
  }
  uint64_t v13 = __swift_project_value_buffer(v2, (uint64_t)qword_1EBDFBE70);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v12, v13, v2);
  id v14 = a1;
  id v15 = a1;
  uint64_t v16 = sub_1D7A9B5D8();
  os_log_type_t v17 = sub_1D7A9C748();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v18 = (uint8_t *)swift_slowAlloc();
    uint64_t v19 = swift_slowAlloc();
    uint64_t v24 = v19;
    *(_DWORD *)uint64_t v18 = 136315138;
    v23[0] = v18 + 4;
    swift_getErrorValue();
    uint64_t v20 = sub_1D7A9D548();
    v23[1] = sub_1D7923300(v20, v21, &v24);
    sub_1D7A9C9E8();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1D7853000, v16, v17, "error: identity management ui client init %s", v18, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D947D740](v19, -1, -1);
    MEMORY[0x1D947D740](v18, -1, -1);
  }
  else
  {
  }
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v12, v2);
}

id IdentityManagementUIClient.__deallocating_deinit()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1D7A9B5F8();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v2, v4, v5, v6, v7, v8, v9, v10);
  uint64_t v13 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11, v14, v15, v16, v17, v18, v19, v20);
  os_log_type_t v22 = (char *)&v36 - v21;
  if (qword_1EBDF9DC8 != -1) {
    swift_once();
  }
  uint64_t v23 = __swift_project_value_buffer(v2, (uint64_t)qword_1EBDFBE70);
  swift_beginAccess();
  uint64_t v24 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v24(v22, v23, v2);
  uint64_t v25 = sub_1D7A9B5D8();
  os_log_type_t v26 = sub_1D7A9C748();
  if (os_log_type_enabled(v25, v26))
  {
    unint64_t v27 = (uint8_t *)swift_slowAlloc();
    uint64_t v36 = v1;
    uint64_t v28 = v27;
    *(_WORD *)unint64_t v27 = 0;
    _os_log_impl(&dword_1D7853000, v25, v26, "IdentityManagementUIClient deinit", v27, 2u);
    unint64_t v29 = v28;
    uint64_t v1 = v36;
    MEMORY[0x1D947D740](v29, -1, -1);
  }

  uint64_t v30 = *(void (**)(char *, uint64_t))(v3 + 8);
  v30(v22, v2);
  v24(v13, v23, v2);
  uint64_t v31 = sub_1D7A9B5D8();
  os_log_type_t v32 = sub_1D7A9C748();
  if (os_log_type_enabled(v31, v32))
  {
    uint64_t v33 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v33 = 0;
    _os_log_impl(&dword_1D7853000, v31, v32, "IdentityManagementUIClient invalidating server connection", v33, 2u);
    MEMORY[0x1D947D740](v33, -1, -1);
  }

  v30(v13, v2);
  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC13CoreIDVShared26IdentityManagementUIClient_serverConnection], sel_invalidate);
  uint64_t v34 = (objc_class *)type metadata accessor for IdentityManagementUIClient();
  v37.receiver = v1;
  v37.super_class = v34;
  return objc_msgSendSuper2(&v37, sel_dealloc);
}

void sub_1D79C161C(uint64_t a1, int a2, void (*a3)(void *), uint64_t a4)
{
  uint64_t v5 = v4;
  int v59 = a2;
  uint64_t v60 = a1;
  uint64_t v8 = sub_1D7A9B5F8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8, v10, v11, v12, v13, v14, v15, v16);
  uint64_t v18 = &v58[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v19 = sub_1D7A9B1A8();
  uint64_t v20 = *(void *)(v19 - 8);
  MEMORY[0x1F4188790](v19, v21, v22, v23, v24, v25, v26, v27);
  unint64_t v29 = &v58[-((v28 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v30 = *(void **)(v5 + OBJC_IVAR____TtC13CoreIDVShared26IdentityManagementUIClient_remoteObjectProxy);
  if (v30)
  {
    swift_unknownObjectRetain();
    sub_1D7A9B198();
    uint64_t v31 = sub_1D7A9B158();
    uint64_t v33 = v32;
    (*(void (**)(unsigned char *, uint64_t))(v20 + 8))(v29, v19);
    uint64_t v34 = swift_allocObject();
    uint64_t v35 = swift_weakInit();
    MEMORY[0x1F4188790](v35, v36, v37, v38, v39, v40, v41, v42);
    *(void *)&v58[-48] = v34;
    *(void *)&v58[-40] = v31;
    *(void *)&v58[-32] = v33;
    *(void *)&v58[-24] = a3;
    *(void *)&v58[-16] = a4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF9410);
    sub_1D7A9C7E8();
    swift_release();
    uint64_t v43 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v44 = (void *)swift_allocObject();
    v44[2] = v43;
    _OWORD v44[3] = v31;
    v44[4] = v33;
    v44[5] = a3;
    v44[6] = a4;
    aBlock[4] = sub_1D79CF6BC;
    aBlock[5] = v44;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1D79C1C04;
    aBlock[3] = &block_descriptor_10;
    uint64_t v45 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    objc_msgSend(v30, sel_triggerAssetsUploadWithProofingOptions_canUploadOnExpensiveNetwork_completion_, v60, v59 & 1, v45);
    _Block_release(v45);
    swift_unknownObjectRelease();
  }
  else
  {
    if (qword_1EBDF9DC8 != -1) {
      swift_once();
    }
    uint64_t v46 = a3;
    uint64_t v47 = __swift_project_value_buffer(v8, (uint64_t)qword_1EBDFBE70);
    swift_beginAccess();
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v9 + 16))(v18, v47, v8);
    uint64_t v48 = sub_1D7A9B5D8();
    os_log_type_t v49 = sub_1D7A9C748();
    if (os_log_type_enabled(v48, v49))
    {
      uint64_t v50 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v50 = 0;
      _os_log_impl(&dword_1D7853000, v48, v49, "Cannot invoke triggerAssetsUpload because no proxy is set", v50, 2u);
      MEMORY[0x1D947D740](v50, -1, -1);
    }

    (*(void (**)(unsigned char *, uint64_t))(v9 + 8))(v18, v8);
    __int16 v51 = *(_WORD *)(v5 + OBJC_IVAR____TtC13CoreIDVShared26IdentityManagementUIClient_remoteObjectProxyError);
    uint64_t v52 = *(void *)(v5 + OBJC_IVAR____TtC13CoreIDVShared26IdentityManagementUIClient_remoteObjectProxyError + 8);
    uint64_t v53 = *(void *)(v5 + OBJC_IVAR____TtC13CoreIDVShared26IdentityManagementUIClient_remoteObjectProxyError + 16);
    uint64_t v54 = *(void **)(v5 + OBJC_IVAR____TtC13CoreIDVShared26IdentityManagementUIClient_remoteObjectProxyError + 24);
    sub_1D7860544();
    uint64_t v55 = (void *)swift_allocError();
    *(_WORD *)uint64_t v56 = v51;
    *(void *)(v56 + 8) = v52;
    *(void *)(v56 + 16) = v53;
    *(void *)(v56 + 24) = v54;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v57 = v54;
    v46(v55);
  }
}

uint64_t sub_1D79C1AB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t))
{
  uint64_t v7 = a2 + 16;
  swift_beginAccess();
  uint64_t v8 = MEMORY[0x1D947D840](v7);
  if (v8)
  {
    uint64_t v9 = (void *)v8;
    swift_retain();

    swift_allocObject();
    uint64_t v10 = swift_weakInit();
    MEMORY[0x1F4188790](v10, v11, v12, v13, v14, v15, v16, v17);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA846680);
    sub_1D7A9C7E8();
    swift_release();
    if (v19) {
      sub_1D78EEA8C(v19);
    }
    swift_release();
  }
  return a5(a1);
}

void sub_1D79C1C04(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void *))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3(a2);
  swift_release();
}

uint64_t sub_1D79C1CF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[5] = a3;
  v4[6] = v3;
  v4[3] = a1;
  v4[4] = a2;
  return MEMORY[0x1F4188298](sub_1D79C1D1C, 0, 0);
}

uint64_t sub_1D79C1D1C()
{
  uint64_t v1 = v0[5];
  uint64_t v3 = (void *)v0[3];
  uint64_t v2 = v0[4];
  uint64_t v4 = *(void *)(v0[6] + OBJC_IVAR____TtC13CoreIDVShared26IdentityManagementUIClient_connection);
  uint64_t v5 = (void *)swift_allocObject();
  v0[7] = v5;
  v5[2] = v3;
  v5[3] = v2;
  v5[4] = v1;
  id v6 = v3;
  uint64_t v7 = (void *)swift_task_alloc();
  v0[8] = v7;
  v7[2] = v4;
  v7[3] = &unk_1EA846018;
  v7[4] = v5;
  uint64_t v8 = (void *)swift_task_alloc();
  v0[9] = v8;
  v8[2] = 0;
  v8[3] = 0;
  v8[4] = v4;
  uint64_t v9 = (void *)swift_task_alloc();
  v0[10] = v9;
  uint64_t v10 = type metadata accessor for IdentityProofingDisplayInfo();
  *uint64_t v9 = v0;
  v9[1] = sub_1D79C1E88;
  return MEMORY[0x1F4188148](v0 + 2, &unk_1EA846028, v7, sub_1D79CF8AC, v8, 0, 0, v10);
}

uint64_t sub_1D79C1E88()
{
  uint64_t v2 = (void *)*v1;
  v2[11] = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x1F4188298](sub_1D79C1FEC, 0, 0);
  }
  else
  {
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v3 = v2[2];
    uint64_t v4 = (uint64_t (*)(uint64_t))v2[1];
    return v4(v3);
  }
}

uint64_t sub_1D79C1FEC()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D79C2064(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[18] = a4;
  v5[19] = a5;
  v5[16] = a1;
  v5[17] = a3;
  v5[20] = *a2;
  return MEMORY[0x1F4188298](sub_1D79C2090, 0, 0);
}

uint64_t sub_1D79C2090()
{
  uint64_t v2 = v0[19];
  uint64_t v1 = (void *)v0[20];
  uint64_t v4 = v0[17];
  uint64_t v3 = v0[18];
  v0[2] = v0;
  v0[7] = v0 + 15;
  v0[3] = sub_1D79C21A4;
  uint64_t v5 = swift_continuation_init();
  v0[10] = MEMORY[0x1E4F143A8];
  v0[11] = 0x40000000;
  v0[12] = sub_1D79C2340;
  v0[13] = &block_descriptor_897;
  v0[14] = v5;
  objc_msgSend(v1, sel_prepareForProofingDisplay_proofingOptions_idType_completionHandler_, v4, v3, v2, v0 + 10);
  return MEMORY[0x1F41881E8](v0 + 2);
}

uint64_t sub_1D79C21A4()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 168) = v1;
  if (v1) {
    uint64_t v2 = sub_1D79C22D4;
  }
  else {
    uint64_t v2 = sub_1D79C22B4;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D79C22B4()
{
  **(void **)(v0 + 128) = *(void *)(v0 + 120);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1D79C22D4()
{
  swift_willThrow();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D79C24D4(void *a1, uint64_t a2, uint64_t a3, void *aBlock, void *a5)
{
  v5[2] = a1;
  v5[3] = a5;
  v5[4] = _Block_copy(aBlock);
  id v10 = a1;
  id v11 = a5;
  uint64_t v12 = (void *)swift_task_alloc();
  v5[5] = v12;
  *uint64_t v12 = v5;
  v12[1] = sub_1D79C25C4;
  v12[5] = a3;
  v12[6] = v11;
  v12[3] = v10;
  v12[4] = a2;
  return MEMORY[0x1F4188298](sub_1D79C1D1C, 0, 0);
}

uint64_t sub_1D79C25C4(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = *v2;
  uint64_t v6 = *(void **)(*v2 + 24);
  uint64_t v7 = *(void **)(*v2 + 16);
  uint64_t v8 = *v2;
  swift_task_dealloc();

  uint64_t v9 = *(void (***)(void, void, void))(v5 + 32);
  if (v3)
  {
    id v10 = (void *)sub_1D7A9AE48();

    ((void (**)(void, void, void *))v9)[2](v9, 0, v10);
    _Block_release(v9);
  }
  else
  {
    ((void (**)(void, void *, void))v9)[2](v9, a1, 0);
    _Block_release(v9);
  }
  id v11 = *(uint64_t (**)(void))(v8 + 8);
  return v11();
}

uint64_t sub_1D79C277C(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return MEMORY[0x1F4188298](sub_1D79C279C, 0, 0);
}

uint64_t sub_1D79C279C()
{
  uint64_t v1 = (void *)v0[2];
  uint64_t v2 = *(void *)(v0[3] + OBJC_IVAR____TtC13CoreIDVShared26IdentityManagementUIClient_connection);
  uint64_t v3 = swift_allocObject();
  v0[4] = v3;
  *(void *)(v3 + 16) = v1;
  id v4 = v1;
  uint64_t v5 = (void *)swift_task_alloc();
  v0[5] = v5;
  v5[2] = v2;
  v5[3] = &unk_1EA846040;
  v5[4] = v3;
  uint64_t v6 = (void *)swift_task_alloc();
  v0[6] = v6;
  v6[2] = 0;
  v6[3] = 0;
  v6[4] = v2;
  uint64_t v7 = (void *)swift_task_alloc();
  v0[7] = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_1D79C28EC;
  uint64_t v8 = MEMORY[0x1E4FBC848] + 8;
  return MEMORY[0x1F4188148](v7, &unk_1EA846050, v5, sub_1D79CFAAC, v6, 0, 0, v8);
}

uint64_t sub_1D79C28EC()
{
  *(void *)(*(void *)v1 + 64) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1D79C2A24;
  }
  else
  {
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v2 = sub_1D78F442C;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D79C2A24()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D79C2A9C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = *a2;
  *(void *)(v3 + 120) = a3;
  *(void *)(v3 + 128) = v4;
  return MEMORY[0x1F4188298](sub_1D79C2AC0, 0, 0);
}

uint64_t sub_1D79C2AC0()
{
  uint64_t v2 = v0[15];
  uint64_t v1 = (void *)v0[16];
  v0[2] = v0;
  v0[3] = sub_1D79C2BB8;
  uint64_t v3 = swift_continuation_init();
  v0[10] = MEMORY[0x1E4F143A8];
  v0[11] = 0x40000000;
  v0[12] = sub_1D79C2D34;
  v0[13] = &block_descriptor_870;
  v0[14] = v3;
  objc_msgSend(v1, sel_prepareForProofingIdentity_completionHandler_, v2, v0 + 10);
  return MEMORY[0x1F41881E8](v0 + 2);
}

uint64_t sub_1D79C2BB8()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 136) = v1;
  if (v1) {
    uint64_t v2 = sub_1D79C2CC8;
  }
  else {
    uint64_t v2 = sub_1D78F7BE8;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D79C2CC8()
{
  swift_willThrow();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D79C2D34(uint64_t a1, void *a2)
{
  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDF9740);
    swift_allocError();
    *uint64_t v3 = a2;
    id v4 = a2;
    return swift_continuation_throwingResumeWithError();
  }
  else
  {
    return swift_continuation_throwingResume();
  }
}

uint64_t sub_1D79C2F48(void *a1, void *aBlock, void *a3)
{
  v3[2] = a1;
  v3[3] = a3;
  v3[4] = _Block_copy(aBlock);
  id v6 = a1;
  id v7 = a3;
  uint64_t v8 = (void *)swift_task_alloc();
  v3[5] = v8;
  *uint64_t v8 = v3;
  v8[2] = v6;
  v8[3] = v7;
  v8[1] = sub_1D79C3024;
  return MEMORY[0x1F4188298](sub_1D79C279C, 0, 0);
}

uint64_t sub_1D79C3024()
{
  uint64_t v2 = v0;
  uint64_t v4 = *v1;
  uint64_t v3 = *v1;
  uint64_t v5 = *(void **)(*v1 + 24);
  id v6 = *(void **)(*v1 + 16);
  uint64_t v7 = *v1;
  swift_task_dealloc();

  uint64_t v8 = *(void *)(v3 + 32);
  if (v2)
  {
    uint64_t v9 = (void *)sub_1D7A9AE48();

    (*(void (**)(uint64_t, void *))(v8 + 16))(v8, v9);
  }
  else
  {
    (*(void (**)(uint64_t, void))(v8 + 16))(v8, 0);
  }
  _Block_release(*(const void **)(v4 + 32));
  uint64_t v10 = *(uint64_t (**)(void))(v7 + 8);
  return v10();
}

uint64_t sub_1D79C31C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  return MEMORY[0x1F4188298](sub_1D79C31E4, 0, 0);
}

uint64_t sub_1D79C31E4()
{
  uint64_t v1 = v0[4];
  uint64_t v3 = v0[2];
  uint64_t v2 = v0[3];
  uint64_t v4 = *(void *)(v0[5] + OBJC_IVAR____TtC13CoreIDVShared26IdentityManagementUIClient_connection);
  uint64_t v5 = (void *)swift_allocObject();
  v0[6] = v5;
  v5[2] = v3;
  v5[3] = v2;
  v5[4] = v1;
  swift_bridgeObjectRetain();
  id v6 = (void *)swift_task_alloc();
  v0[7] = v6;
  v6[2] = v4;
  v6[3] = &unk_1EA846068;
  v6[4] = v5;
  uint64_t v7 = (void *)swift_task_alloc();
  v0[8] = v7;
  v7[2] = 0;
  v7[3] = 0;
  v7[4] = v4;
  uint64_t v8 = (void *)swift_task_alloc();
  v0[9] = v8;
  *uint64_t v8 = v0;
  v8[1] = sub_1D79C3348;
  uint64_t v9 = MEMORY[0x1E4FBC848] + 8;
  return MEMORY[0x1F4188148](v8, &unk_1EA846070, v6, sub_1D79D8718, v7, 0, 0, v9);
}

uint64_t sub_1D79C3348()
{
  *(void *)(*(void *)v1 + 80) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1D79C3480;
  }
  else
  {
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v2 = sub_1D78F442C;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D79C3480()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D79C34F8(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[15] = a3;
  v5[16] = a4;
  uint64_t v6 = *a2;
  v5[17] = a5;
  v5[18] = v6;
  return MEMORY[0x1F4188298](sub_1D79C3520, 0, 0);
}

uint64_t sub_1D79C3520()
{
  uint64_t v2 = v0[17];
  uint64_t v1 = (void *)v0[18];
  uint64_t v3 = sub_1D7A9BF98();
  v0[19] = v3;
  v0[2] = v0;
  v0[3] = sub_1D79C3634;
  uint64_t v4 = swift_continuation_init();
  v0[10] = MEMORY[0x1E4F143A8];
  v0[11] = 0x40000000;
  v0[12] = sub_1D79C2D34;
  v0[13] = &block_descriptor_853;
  v0[14] = v4;
  objc_msgSend(v1, sel_provisionIdentityWithState_proofingOptions_completionHandler_, v3, v2, v0 + 10);
  return MEMORY[0x1F41881E8](v0 + 2);
}

uint64_t sub_1D79C3634()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 160) = v1;
  if (v1) {
    uint64_t v2 = sub_1D79C37A8;
  }
  else {
    uint64_t v2 = sub_1D79C3744;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D79C3744()
{
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D79C37A8()
{
  uint64_t v1 = *(void **)(v0 + 152);
  swift_willThrow();

  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1D79C3998(int a1, uint64_t a2, void *aBlock, void *a4)
{
  v4[2] = a4;
  v4[3] = _Block_copy(aBlock);
  uint64_t v7 = sub_1D7A9BFC8();
  uint64_t v9 = v8;
  v4[4] = v8;
  id v10 = a4;
  uint64_t v11 = (void *)swift_task_alloc();
  v4[5] = v11;
  *uint64_t v11 = v4;
  v11[4] = a2;
  v11[5] = v10;
  v11[2] = v7;
  v11[3] = v9;
  v11[1] = sub_1D79D877C;
  return MEMORY[0x1F4188298](sub_1D79C31E4, 0, 0);
}

void sub_1D79C3A90(void (*a1)(void, void), uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1D7A9B5F8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6, v8, v9, v10, v11, v12, v13, v14);
  uint64_t v16 = (char *)&aBlock[-1] - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1D7A9B1A8();
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17, v19, v20, v21, v22, v23, v24, v25);
  uint64_t v27 = (char *)&aBlock[-1] - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = *(void **)(v3 + OBJC_IVAR____TtC13CoreIDVShared26IdentityManagementUIClient_remoteObjectProxy);
  if (v28)
  {
    swift_unknownObjectRetain();
    sub_1D7A9B198();
    uint64_t v29 = sub_1D7A9B158();
    uint64_t v58 = v3;
    uint64_t v30 = a1;
    uint64_t v31 = v29;
    uint64_t v33 = v32;
    (*(void (**)(char *, uint64_t))(v18 + 8))(v27, v17);
    uint64_t v34 = swift_allocObject();
    uint64_t v35 = swift_weakInit();
    MEMORY[0x1F4188790](v35, v36, v37, v38, v39, v40, v41, v42);
    *(&v58 - 6) = v34;
    *(&v58 - 5) = v31;
    *(&v58 - 4) = v33;
    *(&v58 - 3) = (uint64_t)v30;
    *(&v58 - 2) = a2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF9410);
    sub_1D7A9C7E8();
    swift_release();
    uint64_t v43 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v44 = (void *)swift_allocObject();
    v44[2] = v43;
    _OWORD v44[3] = v31;
    v44[4] = v33;
    v44[5] = v30;
    v44[6] = a2;
    aBlock[4] = sub_1D79CFC20;
    aBlock[5] = v44;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1D79C3F24;
    aBlock[3] = &block_descriptor_37;
    uint64_t v45 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    objc_msgSend(v28, sel_fetchImageQualitySettingsWithCompletion_, v45);
    _Block_release(v45);
    swift_unknownObjectRelease();
  }
  else
  {
    uint64_t v46 = (void (*)(void, void *))a1;
    if (qword_1EBDF9DC8 != -1) {
      swift_once();
    }
    uint64_t v47 = __swift_project_value_buffer(v6, (uint64_t)qword_1EBDFBE70);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v16, v47, v6);
    uint64_t v48 = sub_1D7A9B5D8();
    os_log_type_t v49 = sub_1D7A9C748();
    if (os_log_type_enabled(v48, v49))
    {
      uint64_t v50 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v50 = 0;
      _os_log_impl(&dword_1D7853000, v48, v49, "Cannot invoke fetchImageQualitySettings because no proxy is set", v50, 2u);
      MEMORY[0x1D947D740](v50, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v7 + 8))(v16, v6);
    __int16 v51 = *(_WORD *)(v3 + OBJC_IVAR____TtC13CoreIDVShared26IdentityManagementUIClient_remoteObjectProxyError);
    uint64_t v52 = *(void *)(v3 + OBJC_IVAR____TtC13CoreIDVShared26IdentityManagementUIClient_remoteObjectProxyError + 8);
    uint64_t v53 = *(void *)(v3 + OBJC_IVAR____TtC13CoreIDVShared26IdentityManagementUIClient_remoteObjectProxyError + 16);
    uint64_t v54 = *(void **)(v3 + OBJC_IVAR____TtC13CoreIDVShared26IdentityManagementUIClient_remoteObjectProxyError + 24);
    sub_1D7860544();
    uint64_t v55 = (void *)swift_allocError();
    *(_WORD *)uint64_t v56 = v51;
    *(void *)(v56 + 8) = v52;
    *(void *)(v56 + 16) = v53;
    *(void *)(v56 + 24) = v54;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v57 = v54;
    v46(0, v55);
  }
}

void sub_1D79C3F40(uint64_t a1, uint64_t a2, int a3, uint64_t a4, void (*a5)(void, void), uint64_t a6)
{
  uint64_t v7 = v6;
  uint64_t v64 = a2;
  uint64_t v65 = a4;
  int v62 = a3;
  uint64_t v63 = a1;
  uint64_t v10 = sub_1D7A9B5F8();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10, v12, v13, v14, v15, v16, v17, v18);
  uint64_t v20 = &v61[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v21 = sub_1D7A9B1A8();
  uint64_t v22 = *(void *)(v21 - 8);
  MEMORY[0x1F4188790](v21, v23, v24, v25, v26, v27, v28, v29);
  uint64_t v31 = &v61[-((v30 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v32 = *(void **)(v7 + OBJC_IVAR____TtC13CoreIDVShared26IdentityManagementUIClient_remoteObjectProxy);
  if (v32)
  {
    swift_unknownObjectRetain();
    sub_1D7A9B198();
    uint64_t v33 = a5;
    uint64_t v34 = sub_1D7A9B158();
    uint64_t v36 = v35;
    (*(void (**)(unsigned char *, uint64_t))(v22 + 8))(v31, v21);
    uint64_t v37 = swift_allocObject();
    uint64_t v38 = swift_weakInit();
    MEMORY[0x1F4188790](v38, v39, v40, v41, v42, v43, v44, v45);
    *(void *)&v61[-48] = v37;
    *(void *)&v61[-40] = v34;
    *(void *)&v61[-32] = v36;
    *(void *)&v61[-24] = v33;
    *(void *)&v61[-16] = a6;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF9410);
    sub_1D7A9C7E8();
    swift_release();
    uint64_t v46 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v47 = (void *)swift_allocObject();
    _OWORD v47[2] = v46;
    v47[3] = v34;
    v47[4] = v36;
    v47[5] = v33;
    v47[6] = a6;
    aBlock[4] = sub_1D79CFCAC;
    aBlock[5] = v47;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1D79C3F24;
    aBlock[3] = &block_descriptor_45_1;
    uint64_t v48 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    objc_msgSend(v32, sel_proofIdentity_::totalUploadAssetsFileSizeInBytes_completion_, v63, v64, v62 & 1, v65, v48);
    _Block_release(v48);
    swift_unknownObjectRelease();
  }
  else
  {
    os_log_type_t v49 = (void (*)(void, void *))a5;
    if (qword_1EBDF9DC8 != -1) {
      swift_once();
    }
    uint64_t v50 = __swift_project_value_buffer(v10, (uint64_t)qword_1EBDFBE70);
    swift_beginAccess();
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v11 + 16))(v20, v50, v10);
    __int16 v51 = sub_1D7A9B5D8();
    os_log_type_t v52 = sub_1D7A9C748();
    if (os_log_type_enabled(v51, v52))
    {
      uint64_t v53 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v53 = 0;
      _os_log_impl(&dword_1D7853000, v51, v52, "Cannot invoke proofIdentity because no proxy is set", v53, 2u);
      MEMORY[0x1D947D740](v53, -1, -1);
    }

    (*(void (**)(unsigned char *, uint64_t))(v11 + 8))(v20, v10);
    __int16 v54 = *(_WORD *)(v7 + OBJC_IVAR____TtC13CoreIDVShared26IdentityManagementUIClient_remoteObjectProxyError);
    uint64_t v55 = *(void *)(v7 + OBJC_IVAR____TtC13CoreIDVShared26IdentityManagementUIClient_remoteObjectProxyError + 8);
    uint64_t v56 = *(void *)(v7 + OBJC_IVAR____TtC13CoreIDVShared26IdentityManagementUIClient_remoteObjectProxyError + 16);
    id v57 = *(void **)(v7 + OBJC_IVAR____TtC13CoreIDVShared26IdentityManagementUIClient_remoteObjectProxyError + 24);
    sub_1D7860544();
    uint64_t v58 = (void *)swift_allocError();
    *(_WORD *)uint64_t v59 = v54;
    *(void *)(v59 + 8) = v55;
    *(void *)(v59 + 16) = v56;
    *(void *)(v59 + 24) = v57;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v60 = v57;
    v49(0, v58);
  }
}

void sub_1D79C4490(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void, void *), uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v60 = a2;
  uint64_t v61 = a3;
  uint64_t v59 = a1;
  uint64_t v9 = sub_1D7A9B5F8();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9, v11, v12, v13, v14, v15, v16, v17);
  uint64_t v19 = (char *)&v59 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_1D7A9B1A8();
  uint64_t v21 = *(void *)(v20 - 8);
  MEMORY[0x1F4188790](v20, v22, v23, v24, v25, v26, v27, v28);
  uint64_t v30 = (char *)&v59 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = *(void **)(v6 + OBJC_IVAR____TtC13CoreIDVShared26IdentityManagementUIClient_remoteObjectProxy);
  if (v31)
  {
    swift_unknownObjectRetain();
    sub_1D7A9B198();
    uint64_t v32 = sub_1D7A9B158();
    uint64_t v34 = v33;
    (*(void (**)(char *, uint64_t))(v21 + 8))(v30, v20);
    uint64_t v35 = swift_allocObject();
    uint64_t v36 = swift_weakInit();
    MEMORY[0x1F4188790](v36, v37, v38, v39, v40, v41, v42, v43);
    *(&v59 - 6) = v35;
    *(&v59 - 5) = v32;
    *(&v59 - 4) = v34;
    *(&v59 - 3) = (uint64_t)a4;
    *(&v59 - 2) = a5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF9410);
    sub_1D7A9C7E8();
    swift_release();
    uint64_t v44 = (void *)sub_1D7A9BF98();
    uint64_t v45 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v46 = (void *)swift_allocObject();
    v46[2] = v45;
    v46[3] = v32;
    v46[4] = v34;
    v46[5] = a4;
    v46[6] = a5;
    aBlock[4] = sub_1D79CFD48;
    aBlock[5] = v46;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1D79C3F24;
    aBlock[3] = &block_descriptor_54_1;
    uint64_t v47 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    objc_msgSend(v31, sel_proofIdentityUsing_proofingOptions_completion_, v44, v61, v47, v59, v60);
    _Block_release(v47);
    swift_unknownObjectRelease();
  }
  else
  {
    if (qword_1EBDF9DC8 != -1) {
      swift_once();
    }
    uint64_t v48 = __swift_project_value_buffer(v9, (uint64_t)qword_1EBDFBE70);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v19, v48, v9);
    os_log_type_t v49 = sub_1D7A9B5D8();
    os_log_type_t v50 = sub_1D7A9C748();
    if (os_log_type_enabled(v49, v50))
    {
      __int16 v51 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)__int16 v51 = 0;
      _os_log_impl(&dword_1D7853000, v49, v50, "Cannot invoke proofIdentity because no proxy is set", v51, 2u);
      MEMORY[0x1D947D740](v51, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v10 + 8))(v19, v9);
    __int16 v52 = *(_WORD *)(v6 + OBJC_IVAR____TtC13CoreIDVShared26IdentityManagementUIClient_remoteObjectProxyError);
    uint64_t v53 = *(void *)(v6 + OBJC_IVAR____TtC13CoreIDVShared26IdentityManagementUIClient_remoteObjectProxyError + 8);
    uint64_t v54 = *(void *)(v6 + OBJC_IVAR____TtC13CoreIDVShared26IdentityManagementUIClient_remoteObjectProxyError + 16);
    uint64_t v55 = *(void **)(v6 + OBJC_IVAR____TtC13CoreIDVShared26IdentityManagementUIClient_remoteObjectProxyError + 24);
    sub_1D7860544();
    uint64_t v56 = (void *)swift_allocError();
    *(_WORD *)uint64_t v57 = v52;
    *(void *)(v57 + 8) = v53;
    *(void *)(v57 + 16) = v54;
    *(void *)(v57 + 24) = v55;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v58 = v55;
    a4(0, v56);
  }
}

uint64_t sub_1D79C49D8()
{
  *(void *)(v1 + 24) = v0;
  return MEMORY[0x1F4188298](sub_1D79C49F8, 0, 0);
}

uint64_t sub_1D79C49F8()
{
  uint64_t v1 = *(void *)(v0[3] + OBJC_IVAR____TtC13CoreIDVShared26IdentityManagementUIClient_connection);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[4] = v2;
  v2[2] = v1;
  v2[3] = &unk_1EA846080;
  v2[4] = 0;
  uint64_t v3 = (void *)swift_task_alloc();
  v0[5] = v3;
  v3[2] = 0;
  v3[3] = 0;
  v3[4] = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[6] = v4;
  uint64_t v5 = type metadata accessor for IdentityProofingStatus();
  *uint64_t v4 = v0;
  v4[1] = sub_1D79C4B30;
  return MEMORY[0x1F4188148](v0 + 2, &unk_1EA846090, v2, sub_1D79CFE44, v3, 0, 0, v5);
}

uint64_t sub_1D79C4B30()
{
  uint64_t v2 = (void *)*v1;
  v2[7] = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x1F4188298](sub_1D79D85F8, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v3 = v2[2];
    uint64_t v4 = (uint64_t (*)(uint64_t))v2[1];
    return v4(v3);
  }
}

uint64_t sub_1D79C4C7C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  *(void *)(v2 + 128) = a1;
  *(void *)(v2 + 136) = v3;
  return MEMORY[0x1F4188298](sub_1D79C4CA0, 0, 0);
}

uint64_t sub_1D79C4CA0()
{
  uint64_t v1 = (void *)v0[17];
  v0[2] = v0;
  v0[7] = v0 + 15;
  v0[3] = sub_1D79C4D9C;
  uint64_t v2 = swift_continuation_init();
  v0[10] = MEMORY[0x1E4F143A8];
  v0[11] = 0x40000000;
  v0[12] = sub_1D79C2340;
  v0[13] = &block_descriptor_847;
  v0[14] = v2;
  objc_msgSend(v1, sel_proofingFlowAvailabilityWithCompletionHandler_, v0 + 10);
  return MEMORY[0x1F41881E8](v0 + 2);
}

uint64_t sub_1D79C4D9C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 144) = v1;
  if (v1) {
    uint64_t v2 = sub_1D79D8714;
  }
  else {
    uint64_t v2 = sub_1D79D8734;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D79C5014(const void *a1, void *a2)
{
  v2[2] = a2;
  v2[3] = _Block_copy(a1);
  id v4 = a2;
  uint64_t v5 = (void *)swift_task_alloc();
  v2[4] = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1D79D8738;
  v5[3] = v4;
  return MEMORY[0x1F4188298](sub_1D79C49F8, 0, 0);
}

uint64_t sub_1D79C50D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[6] = a4;
  v5[7] = v4;
  v5[4] = a2;
  v5[5] = a3;
  v5[3] = a1;
  return MEMORY[0x1F4188298](sub_1D79C5100, 0, 0);
}

uint64_t sub_1D79C5100()
{
  uint64_t v1 = v0[6];
  uint64_t v2 = v0[4];
  uint64_t v3 = v0[5];
  uint64_t v4 = v0[3];
  uint64_t v5 = *(void *)(v0[7] + OBJC_IVAR____TtC13CoreIDVShared26IdentityManagementUIClient_connection);
  uint64_t v6 = (void *)swift_allocObject();
  v0[8] = v6;
  v6[2] = v4;
  v6[3] = v2;
  v6[4] = v3;
  v6[5] = v1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v7 = (void *)swift_task_alloc();
  v0[9] = v7;
  v7[2] = v5;
  v7[3] = &unk_1EA8460A8;
  v7[4] = v6;
  uint64_t v8 = (void *)swift_task_alloc();
  v0[10] = v8;
  v8[2] = 0;
  v8[3] = 0;
  v8[4] = v5;
  uint64_t v9 = (void *)swift_task_alloc();
  v0[11] = v9;
  uint64_t v10 = type metadata accessor for IdentityProofingConfiguration();
  *uint64_t v9 = v0;
  v9[1] = sub_1D79C5284;
  return MEMORY[0x1F4188148](v0 + 2, &unk_1EA8460B8, v7, sub_1D79D007C, v8, 0, 0, v10);
}

uint64_t sub_1D79C5284()
{
  uint64_t v2 = (void *)*v1;
  v2[12] = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x1F4188298](sub_1D79C53E8, 0, 0);
  }
  else
  {
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v3 = v2[2];
    uint64_t v4 = (uint64_t (*)(uint64_t))v2[1];
    return v4(v3);
  }
}

uint64_t sub_1D79C53E8()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D79C5460(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[18] = a4;
  v6[19] = a5;
  v6[16] = a1;
  v6[17] = a3;
  uint64_t v7 = *a2;
  v6[20] = a6;
  v6[21] = v7;
  return MEMORY[0x1F4188298](sub_1D79C548C, 0, 0);
}

uint64_t sub_1D79C548C()
{
  uint64_t v1 = (void *)v0[21];
  uint64_t v2 = sub_1D7A9BF98();
  v0[22] = v2;
  uint64_t v3 = sub_1D7A9BF98();
  v0[23] = v3;
  v0[2] = v0;
  v0[7] = v0 + 15;
  v0[3] = sub_1D79C55CC;
  uint64_t v4 = swift_continuation_init();
  v0[10] = MEMORY[0x1E4F143A8];
  v0[11] = 0x40000000;
  v0[12] = sub_1D79C2340;
  v0[13] = &block_descriptor_820;
  v0[14] = v4;
  objc_msgSend(v1, sel_proofingStatusFor_country_completionHandler_, v2, v3, v0 + 10);
  return MEMORY[0x1F41881E8](v0 + 2);
}

uint64_t sub_1D79C55CC()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 192) = v1;
  if (v1) {
    uint64_t v2 = sub_1D79C574C;
  }
  else {
    uint64_t v2 = sub_1D79C56DC;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D79C56DC()
{
  uint64_t v2 = *(void **)(v0 + 176);
  uint64_t v1 = *(void **)(v0 + 184);
  **(void **)(v0 + 128) = *(void *)(v0 + 120);

  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_1D79C574C()
{
  uint64_t v1 = (void *)v0[23];
  uint64_t v2 = (void *)v0[22];
  swift_willThrow();

  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_1D79C5948(int a1, int a2, void *aBlock, void *a4)
{
  v4[2] = a4;
  v4[3] = _Block_copy(aBlock);
  uint64_t v6 = sub_1D7A9BFC8();
  uint64_t v8 = v7;
  v4[4] = v7;
  uint64_t v9 = sub_1D7A9BFC8();
  uint64_t v11 = v10;
  v4[5] = v10;
  id v12 = a4;
  uint64_t v13 = (void *)swift_task_alloc();
  v4[6] = v13;
  *uint64_t v13 = v4;
  v13[1] = sub_1D79C5A58;
  v13[6] = v11;
  v13[7] = v12;
  v13[4] = v8;
  v13[5] = v9;
  v13[3] = v6;
  return MEMORY[0x1F4188298](sub_1D79C5100, 0, 0);
}

uint64_t sub_1D79C5A58(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = *v2;
  uint64_t v6 = *(void **)(*v2 + 16);
  uint64_t v7 = *v2;
  swift_task_dealloc();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void (***)(void, void, void))(v5 + 24);
  if (v3)
  {
    uint64_t v9 = (void *)sub_1D7A9AE48();

    ((void (**)(void, void, void *))v8)[2](v8, 0, v9);
    _Block_release(v8);
  }
  else
  {
    ((void (**)(void, void *, void))v8)[2](v8, a1, 0);
    _Block_release(v8);
  }
  uint64_t v10 = *(uint64_t (**)(void))(v7 + 8);
  return v10();
}

uint64_t sub_1D79C5C38(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return MEMORY[0x1F4188298](sub_1D79C5C58, 0, 0);
}

uint64_t sub_1D79C5C58()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = *(void *)(v0[3] + OBJC_IVAR____TtC13CoreIDVShared26IdentityManagementUIClient_connection);
  uint64_t v3 = swift_allocObject();
  v0[4] = v3;
  *(void *)(v3 + 16) = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[5] = v4;
  v4[2] = v2;
  v4[3] = &unk_1EA8460D0;
  v4[4] = v3;
  uint64_t v5 = (void *)swift_task_alloc();
  v0[6] = v5;
  v5[2] = 0;
  v5[3] = 0;
  v5[4] = v2;
  uint64_t v6 = (void *)swift_task_alloc();
  v0[7] = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_1D79C5DAC;
  uint64_t v7 = MEMORY[0x1E4FBB390];
  return MEMORY[0x1F4188148](v0 + 9, &unk_1EA8460E0, v4, sub_1D79D0268, v5, 0, 0, v7);
}

uint64_t sub_1D79C5DAC()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 64) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x1F4188298](sub_1D79C5F0C, 0, 0);
  }
  else
  {
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v3 = *(unsigned __int8 *)(v2 + 72);
    uint64_t v4 = *(uint64_t (**)(uint64_t))(v2 + 8);
    return v4(v3);
  }
}

uint64_t sub_1D79C5F0C()
{
  uint64_t v1 = *(void **)(v0 + 64);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_release();

  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2(0);
}

uint64_t sub_1D79C5F98(uint64_t a1, void *a2, uint64_t a3)
{
  v3[15] = a1;
  v3[16] = a3;
  v3[17] = *a2;
  return MEMORY[0x1F4188298](sub_1D79C5FC0, 0, 0);
}

uint64_t sub_1D79C5FC0()
{
  uint64_t v2 = v0[16];
  uint64_t v1 = (void *)v0[17];
  v0[2] = v0;
  v0[7] = v0 + 18;
  v0[3] = sub_1D79C60C0;
  uint64_t v3 = swift_continuation_init();
  v0[10] = MEMORY[0x1E4F143A8];
  v0[11] = 0x40000000;
  v0[12] = sub_1D79C61C4;
  v0[13] = &block_descriptor_794;
  v0[14] = v3;
  objc_msgSend(v1, sel_isWatchPairedWithIdType_completionHandler_, v2, v0 + 10);
  return MEMORY[0x1F41881E8](v0 + 2);
}

uint64_t sub_1D79C60C0()
{
  return MEMORY[0x1F4188298](sub_1D79C61A0, 0, 0);
}

uint64_t sub_1D79C61A0()
{
  **(unsigned char **)(v0 + 120) = *(unsigned char *)(v0 + 144);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1D79C61C4(uint64_t a1, char a2)
{
  **(unsigned char **)(*(void *)(*(void *)(a1 + 32) + 64) + 40) = a2;
  return swift_continuation_resume();
}

uint64_t sub_1D79C6360(uint64_t a1, void *aBlock, void *a3)
{
  v3[2] = a3;
  v3[3] = _Block_copy(aBlock);
  id v6 = a3;
  uint64_t v7 = (void *)swift_task_alloc();
  v3[4] = v7;
  *uint64_t v7 = v3;
  v7[2] = a1;
  v7[3] = v6;
  v7[1] = sub_1D79C6434;
  return MEMORY[0x1F4188298](sub_1D79C5C58, 0, 0);
}

uint64_t sub_1D79C6434(char a1)
{
  uint64_t v3 = *(void (***)(void, void))(*v1 + 24);
  uint64_t v4 = *(void **)(*v1 + 16);
  uint64_t v7 = *v1;
  swift_task_dealloc();

  v3[2](v3, a1 & 1);
  _Block_release(v3);
  uint64_t v5 = *(uint64_t (**)(void))(v7 + 8);
  return v5();
}

uint64_t sub_1D79C657C(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return MEMORY[0x1F4188298](sub_1D79C65A0, 0, 0);
}

uint64_t sub_1D79C65A0()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = (void *)v0[2];
  uint64_t v3 = *(void *)(v0[4] + OBJC_IVAR____TtC13CoreIDVShared26IdentityManagementUIClient_connection);
  uint64_t v4 = swift_allocObject();
  v0[5] = v4;
  *(void *)(v4 + 16) = v2;
  *(void *)(v4 + 24) = v1;
  id v5 = v2;
  id v6 = (void *)swift_task_alloc();
  v0[6] = v6;
  v6[2] = v3;
  v6[3] = &unk_1EA8460F8;
  v6[4] = v4;
  uint64_t v7 = (void *)swift_task_alloc();
  v0[7] = v7;
  v7[2] = 0;
  v7[3] = 0;
  v7[4] = v3;
  uint64_t v8 = (void *)swift_task_alloc();
  v0[8] = v8;
  *uint64_t v8 = v0;
  v8[1] = sub_1D79C66F4;
  uint64_t v9 = MEMORY[0x1E4FBC848] + 8;
  return MEMORY[0x1F4188148](v8, &unk_1EA846100, v6, sub_1D79D8718, v7, 0, 0, v9);
}

uint64_t sub_1D79C66F4()
{
  *(void *)(*(void *)v1 + 72) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1D79C682C;
  }
  else
  {
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v2 = sub_1D78F442C;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D79C682C()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D79C68A4(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  v4[15] = a3;
  v4[16] = a4;
  v4[17] = *a2;
  return MEMORY[0x1F4188298](sub_1D79C68CC, 0, 0);
}

uint64_t sub_1D79C68CC()
{
  uint64_t v2 = v0[16];
  uint64_t v1 = (void *)v0[17];
  uint64_t v3 = v0[15];
  v0[2] = v0;
  v0[3] = sub_1D79C69D4;
  uint64_t v4 = swift_continuation_init();
  v0[10] = MEMORY[0x1E4F143A8];
  v0[11] = 0x40000000;
  v0[12] = sub_1D79C2D34;
  v0[13] = &block_descriptor_767;
  v0[14] = v4;
  objc_msgSend(v1, sel_proofingCancelledWithConfiguration_proofingOptions_completionHandler_, v3, v2, v0 + 10);
  return MEMORY[0x1F41881E8](v0 + 2);
}

uint64_t sub_1D79C69D4()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 144) = v1;
  if (v1) {
    uint64_t v2 = sub_1D79C6AE4;
  }
  else {
    uint64_t v2 = sub_1D78F7BE8;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D79C6AE4()
{
  swift_willThrow();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D79C6CD0(void *a1, uint64_t a2, void *aBlock, void *a4)
{
  v4[2] = a1;
  v4[3] = a4;
  v4[4] = _Block_copy(aBlock);
  id v8 = a1;
  id v9 = a4;
  uint64_t v10 = (void *)swift_task_alloc();
  v4[5] = v10;
  *uint64_t v10 = v4;
  v10[3] = a2;
  v10[4] = v9;
  v10[1] = sub_1D79C3024;
  v10[2] = a1;
  return MEMORY[0x1F4188298](sub_1D79C65A0, 0, 0);
}

uint64_t sub_1D79C6DAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  return MEMORY[0x1F4188298](sub_1D79C6DD0, 0, 0);
}

uint64_t sub_1D79C6DD0()
{
  uint64_t v1 = v0[4];
  uint64_t v2 = v0[2];
  unint64_t v3 = v0[3];
  uint64_t v4 = *(void *)(v0[5] + OBJC_IVAR____TtC13CoreIDVShared26IdentityManagementUIClient_connection);
  id v5 = (void *)swift_allocObject();
  v0[6] = v5;
  v5[2] = v2;
  v5[3] = v3;
  v5[4] = v1;
  sub_1D7860790(v2, v3);
  uint64_t v6 = (void *)swift_task_alloc();
  v0[7] = v6;
  v6[2] = v4;
  v6[3] = &unk_1EA846118;
  v6[4] = v5;
  uint64_t v7 = (void *)swift_task_alloc();
  v0[8] = v7;
  v7[2] = 0;
  v7[3] = 0;
  v7[4] = v4;
  id v8 = (void *)swift_task_alloc();
  v0[9] = v8;
  *id v8 = v0;
  v8[1] = sub_1D79C6F38;
  uint64_t v9 = MEMORY[0x1E4FBC848] + 8;
  return MEMORY[0x1F4188148](v8, &unk_1EA846120, v6, sub_1D79D8718, v7, 0, 0, v9);
}

uint64_t sub_1D79C6F38()
{
  *(void *)(*(void *)v1 + 80) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1D79D876C;
  }
  else
  {
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v2 = sub_1D78F7BE8;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D79C7070(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[15] = a3;
  v5[16] = a4;
  uint64_t v6 = *a2;
  v5[17] = a5;
  v5[18] = v6;
  return MEMORY[0x1F4188298](sub_1D79C7098, 0, 0);
}

uint64_t sub_1D79C7098()
{
  uint64_t v2 = v0[17];
  uint64_t v1 = (void *)v0[18];
  uint64_t v3 = sub_1D7A9AFF8();
  v0[19] = v3;
  v0[2] = v0;
  v0[3] = sub_1D79C71AC;
  uint64_t v4 = swift_continuation_init();
  v0[10] = MEMORY[0x1E4F143A8];
  v0[11] = 0x40000000;
  v0[12] = sub_1D79C2D34;
  v0[13] = &block_descriptor_765;
  v0[14] = v4;
  objc_msgSend(v1, sel_setGlobalBoundACLWithData_type_completionHandler_, v3, v2, v0 + 10);
  return MEMORY[0x1F41881E8](v0 + 2);
}

uint64_t sub_1D79C71AC()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 160) = v1;
  if (v1) {
    uint64_t v2 = sub_1D79D8710;
  }
  else {
    uint64_t v2 = sub_1D79D8648;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D79C743C(void *a1, uint64_t a2, void *aBlock, void *a4)
{
  v4[2] = a4;
  v4[3] = _Block_copy(aBlock);
  id v8 = a1;
  id v9 = a4;
  uint64_t v10 = sub_1D7A9B028();
  uint64_t v12 = v11;

  v4[4] = v10;
  v4[5] = v12;
  uint64_t v13 = (void *)swift_task_alloc();
  v4[6] = v13;
  *uint64_t v13 = v4;
  v13[4] = a2;
  v13[5] = v9;
  void v13[2] = v10;
  v13[3] = v12;
  v13[1] = sub_1D79C753C;
  return MEMORY[0x1F4188298](sub_1D79C6DD0, 0, 0);
}

uint64_t sub_1D79C753C()
{
  uint64_t v2 = v0;
  uint64_t v4 = *v1;
  uint64_t v3 = *v1;
  unint64_t v5 = *(void *)(*v1 + 40);
  uint64_t v6 = *(void *)(*v1 + 32);
  uint64_t v7 = *(void **)(*v1 + 16);
  uint64_t v8 = *v1;
  swift_task_dealloc();

  sub_1D78607E8(v6, v5);
  uint64_t v9 = *(void *)(v3 + 24);
  if (v2)
  {
    uint64_t v10 = (void *)sub_1D7A9AE48();

    (*(void (**)(uint64_t, void *))(v9 + 16))(v9, v10);
  }
  else
  {
    (*(void (**)(uint64_t, void))(v9 + 16))(v9, 0);
  }
  _Block_release(*(const void **)(v4 + 24));
  uint64_t v11 = *(uint64_t (**)(void))(v8 + 8);
  return v11();
}

uint64_t sub_1D79C76FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[6] = a4;
  v5[7] = v4;
  v5[4] = a2;
  v5[5] = a3;
  v5[3] = a1;
  return MEMORY[0x1F4188298](sub_1D79C7724, 0, 0);
}

uint64_t sub_1D79C7724()
{
  unint64_t v1 = v0[6];
  unint64_t v3 = v0[4];
  uint64_t v2 = v0[5];
  uint64_t v4 = v0[3];
  uint64_t v5 = *(void *)(v0[7] + OBJC_IVAR____TtC13CoreIDVShared26IdentityManagementUIClient_connection);
  uint64_t v6 = (void *)swift_allocObject();
  v0[8] = v6;
  v6[2] = v4;
  v6[3] = v3;
  v6[4] = v2;
  v6[5] = v1;
  sub_1D7860790(v4, v3);
  sub_1D7860790(v2, v1);
  uint64_t v7 = (void *)swift_task_alloc();
  v0[9] = v7;
  v7[2] = v5;
  v7[3] = &unk_1EA846138;
  v7[4] = v6;
  uint64_t v8 = (void *)swift_task_alloc();
  v0[10] = v8;
  v8[2] = 0;
  v8[3] = 0;
  v8[4] = v5;
  uint64_t v9 = (void *)swift_task_alloc();
  v0[11] = v9;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA846DD0);
  *uint64_t v9 = v0;
  v9[1] = sub_1D79C78B4;
  return MEMORY[0x1F4188148](v0 + 2, &unk_1EA846148, v7, sub_1D79D0664, v8, 0, 0, v10);
}

uint64_t sub_1D79C78B4()
{
  uint64_t v2 = (void *)*v1;
  v2[12] = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x1F4188298](sub_1D79D85D0, 0, 0);
  }
  else
  {
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v3 = v2[2];
    uint64_t v4 = (uint64_t (*)(uint64_t))v2[1];
    return v4(v3);
  }
}

uint64_t sub_1D79C7A18(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[18] = a4;
  v6[19] = a5;
  v6[16] = a1;
  v6[17] = a3;
  uint64_t v7 = *a2;
  v6[20] = a6;
  v6[21] = v7;
  return MEMORY[0x1F4188298](sub_1D79C7A44, 0, 0);
}

uint64_t sub_1D79C7A44()
{
  unint64_t v1 = (void *)v0[21];
  uint64_t v2 = sub_1D7A9AFF8();
  v0[22] = v2;
  uint64_t v3 = sub_1D7A9AFF8();
  v0[23] = v3;
  v0[2] = v0;
  v0[7] = v0 + 15;
  v0[3] = sub_1D79C7B84;
  uint64_t v4 = swift_continuation_init();
  v0[10] = MEMORY[0x1E4F143A8];
  v0[11] = 0x40000000;
  v0[12] = sub_1D79C7C94;
  v0[13] = &block_descriptor_763;
  v0[14] = v4;
  objc_msgSend(v1, sel_setModifiedGlobalBoundACLWithData_externalizedLAContext_completionHandler_, v2, v3, v0 + 10);
  return MEMORY[0x1F41881E8](v0 + 2);
}

uint64_t sub_1D79C7B84()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 192) = v1;
  if (v1) {
    uint64_t v2 = sub_1D79D85CC;
  }
  else {
    uint64_t v2 = sub_1D79D85D8;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D79C7C94(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (a3)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDF9740);
    swift_allocError();
    *uint64_t v5 = a3;
    id v6 = a3;
    return swift_continuation_throwingResumeWithError();
  }
  else
  {
    sub_1D7A9B1A8();
    **(void **)(*(void *)(v3 + 64) + 40) = sub_1D7A9C318();
    return swift_continuation_throwingResume();
  }
}

uint64_t sub_1D79C7EE4(void *a1, void *a2, void *aBlock, void *a4)
{
  v4[2] = a4;
  v4[3] = _Block_copy(aBlock);
  id v8 = a1;
  id v9 = a2;
  id v10 = a4;
  uint64_t v11 = sub_1D7A9B028();
  uint64_t v13 = v12;

  v4[4] = v11;
  v4[5] = v13;
  uint64_t v14 = sub_1D7A9B028();
  uint64_t v16 = v15;

  v4[6] = v14;
  v4[7] = v16;
  uint64_t v17 = (void *)swift_task_alloc();
  v4[8] = v17;
  *uint64_t v17 = v4;
  v17[1] = sub_1D79C8008;
  v17[6] = v16;
  v17[7] = v10;
  v17[4] = v13;
  v17[5] = v14;
  v17[3] = v11;
  return MEMORY[0x1F4188298](sub_1D79C7724, 0, 0);
}

uint64_t sub_1D79C8008()
{
  uint64_t v2 = v0;
  uint64_t v4 = (void *)*v1;
  uint64_t v3 = (void *)*v1;
  uint64_t v5 = *(void **)(*v1 + 16);
  uint64_t v6 = *v1;
  swift_task_dealloc();

  unint64_t v7 = v3[5];
  uint64_t v8 = v3[4];
  sub_1D78607E8(v3[6], v3[7]);
  sub_1D78607E8(v8, v7);
  if (v2)
  {
    uint64_t v9 = sub_1D7A9AE48();

    uint64_t v10 = 0;
    uint64_t v11 = (void *)v9;
  }
  else
  {
    sub_1D7A9B1A8();
    uint64_t v10 = sub_1D7A9C2F8();
    swift_bridgeObjectRelease();
    uint64_t v9 = 0;
    uint64_t v11 = (void *)v10;
  }
  uint64_t v12 = (void (**)(void, void, void))v4[3];
  v12[2](v12, v10, v9);

  _Block_release(v12);
  uint64_t v13 = *(uint64_t (**)(void))(v6 + 8);
  return v13();
}

uint64_t sub_1D79C8200()
{
  *(void *)(v1 + 32) = v0;
  return MEMORY[0x1F4188298](sub_1D79C8220, 0, 0);
}

uint64_t sub_1D79C8220()
{
  uint64_t v1 = *(void *)(v0[4] + OBJC_IVAR____TtC13CoreIDVShared26IdentityManagementUIClient_connection);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[5] = v2;
  v2[2] = v1;
  v2[3] = &unk_1EA846158;
  v2[4] = 0;
  uint64_t v3 = (void *)swift_task_alloc();
  v0[6] = v3;
  v3[2] = 0;
  v3[3] = 0;
  v3[4] = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[7] = v4;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8425F0);
  *uint64_t v4 = v0;
  v4[1] = sub_1D79C835C;
  return MEMORY[0x1F4188148](v0 + 2, &unk_1EA846168, v2, sub_1D79D0778, v3, 0, 0, v5);
}

uint64_t sub_1D79C835C()
{
  *(void *)(*(void *)v1 + 64) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1D79D8770;
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v2 = sub_1D79D8640;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D79C8480(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  *(void *)(v2 + 136) = a1;
  *(void *)(v2 + 144) = v3;
  return MEMORY[0x1F4188298](sub_1D79C84A4, 0, 0);
}

uint64_t sub_1D79C84A4()
{
  uint64_t v1 = (void *)v0[18];
  v0[2] = v0;
  v0[7] = v0 + 15;
  v0[3] = sub_1D79C85A0;
  uint64_t v2 = swift_continuation_init();
  v0[10] = MEMORY[0x1E4F143A8];
  v0[11] = 0x40000000;
  v0[12] = sub_1D79C8680;
  v0[13] = &block_descriptor_737;
  v0[14] = v2;
  objc_msgSend(v1, sel_retrieveBioBindingUnboundACLWithCompletionHandler_, v0 + 10);
  return MEMORY[0x1F41881E8](v0 + 2);
}

uint64_t sub_1D79C85A0()
{
  return MEMORY[0x1F4188298](sub_1D79D8730, 0, 0);
}

uint64_t sub_1D79C8680(uint64_t a1, void *a2)
{
  uint64_t v2 = (uint64_t)a2;
  uint64_t v3 = *(void *)(a1 + 32);
  if (a2)
  {
    id v4 = a2;
    uint64_t v2 = sub_1D7A9B028();
    unint64_t v6 = v5;
  }
  else
  {
    unint64_t v6 = 0xF000000000000000;
  }
  v8[0] = v2;
  v8[1] = v6;
  sub_1D79D6D2C((uint64_t)v8, *(void *)(*(void *)(v3 + 64) + 40));
  return swift_continuation_resume();
}

uint64_t sub_1D79C8870(const void *a1, void *a2)
{
  v2[2] = a2;
  v2[3] = _Block_copy(a1);
  id v4 = a2;
  unint64_t v5 = (void *)swift_task_alloc();
  v2[4] = v5;
  *unint64_t v5 = v2;
  v5[1] = sub_1D79D872C;
  v5[4] = v4;
  return MEMORY[0x1F4188298](sub_1D79C8220, 0, 0);
}

uint64_t sub_1D79C8934()
{
  *(void *)(v1 + 32) = v0;
  return MEMORY[0x1F4188298](sub_1D79C8954, 0, 0);
}

uint64_t sub_1D79C8954()
{
  uint64_t v1 = *(void *)(v0[4] + OBJC_IVAR____TtC13CoreIDVShared26IdentityManagementUIClient_connection);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[5] = v2;
  v2[2] = v1;
  v2[3] = &unk_1EA846178;
  v2[4] = 0;
  uint64_t v3 = (void *)swift_task_alloc();
  v0[6] = v3;
  v3[2] = 0;
  v3[3] = 0;
  v3[4] = v1;
  id v4 = (void *)swift_task_alloc();
  v0[7] = v4;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8425F0);
  *id v4 = v0;
  v4[1] = sub_1D79C835C;
  return MEMORY[0x1F4188148](v0 + 2, &unk_1EA846180, v2, sub_1D79D871C, v3, 0, 0, v5);
}

uint64_t sub_1D79C8A90(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  *(void *)(v2 + 136) = a1;
  *(void *)(v2 + 144) = v3;
  return MEMORY[0x1F4188298](sub_1D79C8AB4, 0, 0);
}

uint64_t sub_1D79C8AB4()
{
  uint64_t v1 = (void *)v0[18];
  v0[2] = v0;
  v0[7] = v0 + 15;
  v0[3] = sub_1D79C85A0;
  uint64_t v2 = swift_continuation_init();
  v0[10] = MEMORY[0x1E4F143A8];
  v0[11] = 0x40000000;
  v0[12] = sub_1D79C8680;
  v0[13] = &block_descriptor_711;
  v0[14] = v2;
  objc_msgSend(v1, sel_retrievePasscodeBindingUnboundACLWithCompletionHandler_, v0 + 10);
  return MEMORY[0x1F41881E8](v0 + 2);
}

uint64_t sub_1D79C8D18(const void *a1, void *a2)
{
  v2[2] = a2;
  v2[3] = _Block_copy(a1);
  id v4 = a2;
  uint64_t v5 = (void *)swift_task_alloc();
  v2[4] = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1D79D872C;
  v5[4] = v4;
  return MEMORY[0x1F4188298](sub_1D79C8954, 0, 0);
}

uint64_t sub_1D79C8DDC()
{
  *(void *)(v1 + 32) = v0;
  return MEMORY[0x1F4188298](sub_1D79C8DFC, 0, 0);
}

uint64_t sub_1D79C8DFC()
{
  uint64_t v1 = *(void *)(v0[4] + OBJC_IVAR____TtC13CoreIDVShared26IdentityManagementUIClient_connection);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[5] = v2;
  v2[2] = v1;
  v2[3] = &unk_1EA846190;
  v2[4] = 0;
  uint64_t v3 = (void *)swift_task_alloc();
  v0[6] = v3;
  v3[2] = 0;
  v3[3] = 0;
  v3[4] = v1;
  id v4 = (void *)swift_task_alloc();
  v0[7] = v4;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8425F0);
  *id v4 = v0;
  v4[1] = sub_1D79C8F38;
  return MEMORY[0x1F4188148](v0 + 2, &unk_1EA846198, v2, sub_1D79D871C, v3, 0, 0, v5);
}

uint64_t sub_1D79C8F38()
{
  *(void *)(*(void *)v1 + 64) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1D79C9074;
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v2 = sub_1D79C905C;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D79C905C()
{
  return (*(uint64_t (**)(void, void))(v0 + 8))(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1D79C9074()
{
  uint64_t v1 = *(void **)(v0 + 64);
  swift_task_dealloc();
  swift_task_dealloc();

  uint64_t v2 = *(uint64_t (**)(void, unint64_t))(v0 + 8);
  return v2(0, 0xF000000000000000);
}

uint64_t sub_1D79C90F0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  *(void *)(v2 + 136) = a1;
  *(void *)(v2 + 144) = v3;
  return MEMORY[0x1F4188298](sub_1D79C9114, 0, 0);
}

uint64_t sub_1D79C9114()
{
  uint64_t v1 = (void *)v0[18];
  v0[2] = v0;
  v0[7] = v0 + 15;
  v0[3] = sub_1D79C9210;
  uint64_t v2 = swift_continuation_init();
  v0[10] = MEMORY[0x1E4F143A8];
  v0[11] = 0x40000000;
  v0[12] = sub_1D79C8680;
  v0[13] = &block_descriptor_710;
  v0[14] = v2;
  objc_msgSend(v1, sel_retrieveBoundACLWithCompletionHandler_, v0 + 10);
  return MEMORY[0x1F41881E8](v0 + 2);
}

uint64_t sub_1D79C9210()
{
  return MEMORY[0x1F4188298](sub_1D79C92F0, 0, 0);
}

uint64_t sub_1D79C92F0()
{
  *(_OWORD *)*(void *)(v0 + 136) = *(_OWORD *)(v0 + 120);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1D79C947C(const void *a1, void *a2)
{
  v2[2] = a2;
  v2[3] = _Block_copy(a1);
  id v4 = a2;
  uint64_t v5 = (void *)swift_task_alloc();
  v2[4] = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1D79C9540;
  v5[4] = v4;
  return MEMORY[0x1F4188298](sub_1D79C8DFC, 0, 0);
}

uint64_t sub_1D79C9540(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = *v2;
  unint64_t v6 = *(void **)(*v2 + 16);
  uint64_t v7 = *v2;
  swift_task_dealloc();

  if (a2 >> 60 == 15)
  {
    uint64_t v8 = 0;
  }
  else
  {
    uint64_t v8 = (void *)sub_1D7A9AFF8();
    sub_1D7871BDC(a1, a2);
  }
  uint64_t v9 = *(void (***)(void, void))(v5 + 24);
  ((void (**)(void, void *))v9)[2](v9, v8);

  _Block_release(v9);
  uint64_t v10 = *(uint64_t (**)(void))(v7 + 8);
  return v10();
}

uint64_t sub_1D79C96B0()
{
  *(void *)(v1 + 16) = v0;
  return MEMORY[0x1F4188298](sub_1D79C96D0, 0, 0);
}

uint64_t sub_1D79C96D0()
{
  uint64_t v1 = *(void *)(v0[2] + OBJC_IVAR____TtC13CoreIDVShared26IdentityManagementUIClient_connection);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[3] = v2;
  v2[2] = v1;
  v2[3] = &unk_1EA8461A8;
  v2[4] = 0;
  uint64_t v3 = (void *)swift_task_alloc();
  v0[4] = v3;
  v3[2] = 0;
  v3[3] = 0;
  v3[4] = v1;
  id v4 = (void *)swift_task_alloc();
  v0[5] = v4;
  *id v4 = v0;
  v4[1] = sub_1D79C97FC;
  uint64_t v5 = MEMORY[0x1E4FBC848] + 8;
  return MEMORY[0x1F4188148](v4, &unk_1EA8461B0, v2, sub_1D79D8718, v3, 0, 0, v5);
}

uint64_t sub_1D79C97FC()
{
  *(void *)(*(void *)v1 + 48) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1D79C9920;
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v2 = sub_1D78F442C;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D79C9920()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D79C998C(uint64_t a1, void *a2)
{
  *(void *)(v2 + 120) = *a2;
  return MEMORY[0x1F4188298](sub_1D79C99B0, 0, 0);
}

uint64_t sub_1D79C99B0()
{
  uint64_t v1 = (void *)v0[15];
  v0[2] = v0;
  v0[3] = sub_1D79C9AA4;
  uint64_t v2 = swift_continuation_init();
  v0[10] = MEMORY[0x1E4F143A8];
  v0[11] = 0x40000000;
  v0[12] = sub_1D79C2D34;
  v0[13] = &block_descriptor_708;
  v0[14] = v2;
  objc_msgSend(v1, sel_deleteBoundACLWithCompletionHandler_, v0 + 10);
  return MEMORY[0x1F41881E8](v0 + 2);
}

uint64_t sub_1D79C9AA4()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 128) = v1;
  if (v1) {
    uint64_t v2 = sub_1D79C9BB4;
  }
  else {
    uint64_t v2 = sub_1D78F7BE8;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D79C9BB4()
{
  swift_willThrow();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D79C9D88(const void *a1, void *a2)
{
  v2[2] = a2;
  v2[3] = _Block_copy(a1);
  id v4 = a2;
  uint64_t v5 = (void *)swift_task_alloc();
  v2[4] = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1D79C9E48;
  v5[2] = v4;
  return MEMORY[0x1F4188298](sub_1D79C96D0, 0, 0);
}

uint64_t sub_1D79C9E48()
{
  uint64_t v2 = v0;
  uint64_t v4 = *v1;
  uint64_t v3 = *v1;
  uint64_t v5 = *(void **)(*v1 + 16);
  uint64_t v6 = *v1;
  swift_task_dealloc();

  uint64_t v7 = *(void *)(v3 + 24);
  if (v2)
  {
    uint64_t v8 = (void *)sub_1D7A9AE48();

    (*(void (**)(uint64_t, void *))(v7 + 16))(v7, v8);
  }
  else
  {
    (*(void (**)(uint64_t, void))(v7 + 16))(v7, 0);
  }
  _Block_release(*(const void **)(v4 + 24));
  uint64_t v9 = *(uint64_t (**)(void))(v6 + 8);
  return v9();
}

uint64_t sub_1D79C9FCC()
{
  *(void *)(v1 + 24) = v0;
  return MEMORY[0x1F4188298](sub_1D79C9FEC, 0, 0);
}

uint64_t sub_1D79C9FEC()
{
  uint64_t v1 = *(void *)(v0[3] + OBJC_IVAR____TtC13CoreIDVShared26IdentityManagementUIClient_connection);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[4] = v2;
  v2[2] = v1;
  v2[3] = &unk_1EA8461C0;
  v2[4] = 0;
  uint64_t v3 = (void *)swift_task_alloc();
  v0[5] = v3;
  v3[2] = 0;
  v3[3] = 0;
  v3[4] = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[6] = v4;
  uint64_t v5 = type metadata accessor for IdentityBindingDetails();
  *uint64_t v4 = v0;
  v4[1] = sub_1D79C4B30;
  return MEMORY[0x1F4188148](v0 + 2, &unk_1EA8461D0, v2, sub_1D79D0954, v3, 0, 0, v5);
}

uint64_t sub_1D79CA124(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  *(void *)(v2 + 128) = a1;
  *(void *)(v2 + 136) = v3;
  return MEMORY[0x1F4188298](sub_1D79CA148, 0, 0);
}

uint64_t sub_1D79CA148()
{
  uint64_t v1 = (void *)v0[17];
  v0[2] = v0;
  v0[7] = v0 + 15;
  v0[3] = sub_1D79C4D9C;
  uint64_t v2 = swift_continuation_init();
  v0[10] = MEMORY[0x1E4F143A8];
  v0[11] = 0x40000000;
  v0[12] = sub_1D79C2340;
  v0[13] = &block_descriptor_706;
  v0[14] = v2;
  objc_msgSend(v1, sel_fetchBioBindingDetailsWithCompletionHandler_, v0 + 10);
  return MEMORY[0x1F41881E8](v0 + 2);
}

uint64_t sub_1D79CA3AC(const void *a1, void *a2)
{
  v2[2] = a2;
  v2[3] = _Block_copy(a1);
  id v4 = a2;
  uint64_t v5 = (void *)swift_task_alloc();
  v2[4] = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1D79D8738;
  v5[3] = v4;
  return MEMORY[0x1F4188298](sub_1D79C9FEC, 0, 0);
}

void sub_1D79CA470(void (*a1)(void, void, void), uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1D7A9B5F8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6, v8, v9, v10, v11, v12, v13, v14);
  uint64_t v16 = (char *)&aBlock[-1] - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1D7A9B1A8();
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17, v19, v20, v21, v22, v23, v24, v25);
  uint64_t v27 = (char *)&aBlock[-1] - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = *(void **)(v3 + OBJC_IVAR____TtC13CoreIDVShared26IdentityManagementUIClient_remoteObjectProxy);
  if (v28)
  {
    swift_unknownObjectRetain();
    sub_1D7A9B198();
    uint64_t v29 = sub_1D7A9B158();
    uint64_t v58 = v3;
    uint64_t v30 = a1;
    uint64_t v31 = v29;
    uint64_t v33 = v32;
    (*(void (**)(char *, uint64_t))(v18 + 8))(v27, v17);
    uint64_t v34 = swift_allocObject();
    uint64_t v35 = swift_weakInit();
    MEMORY[0x1F4188790](v35, v36, v37, v38, v39, v40, v41, v42);
    *(&v58 - 6) = v34;
    *(&v58 - 5) = v31;
    *(&v58 - 4) = v33;
    *(&v58 - 3) = (uint64_t)v30;
    *(&v58 - 2) = a2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF9410);
    sub_1D7A9C7E8();
    swift_release();
    uint64_t v43 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v44 = (void *)swift_allocObject();
    v44[2] = v43;
    _OWORD v44[3] = v31;
    v44[4] = v33;
    v44[5] = v30;
    v44[6] = a2;
    aBlock[4] = sub_1D79D09FC;
    aBlock[5] = v44;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1D79CAA70;
    aBlock[3] = &block_descriptor_121_0;
    uint64_t v45 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    objc_msgSend(v28, sel_fetchTermsAndConditionsWithCompletion_, v45);
    _Block_release(v45);
    swift_unknownObjectRelease();
  }
  else
  {
    uint64_t v46 = (void (*)(void, void, void *))a1;
    if (qword_1EBDF9DC8 != -1) {
      swift_once();
    }
    uint64_t v47 = __swift_project_value_buffer(v6, (uint64_t)qword_1EBDFBE70);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v16, v47, v6);
    uint64_t v48 = sub_1D7A9B5D8();
    os_log_type_t v49 = sub_1D7A9C748();
    if (os_log_type_enabled(v48, v49))
    {
      os_log_type_t v50 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_type_t v50 = 0;
      _os_log_impl(&dword_1D7853000, v48, v49, "Cannot invoke fetchTermsAndConditions because no proxy is set", v50, 2u);
      MEMORY[0x1D947D740](v50, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v7 + 8))(v16, v6);
    __int16 v51 = *(_WORD *)(v3 + OBJC_IVAR____TtC13CoreIDVShared26IdentityManagementUIClient_remoteObjectProxyError);
    uint64_t v52 = *(void *)(v3 + OBJC_IVAR____TtC13CoreIDVShared26IdentityManagementUIClient_remoteObjectProxyError + 8);
    uint64_t v53 = *(void *)(v3 + OBJC_IVAR____TtC13CoreIDVShared26IdentityManagementUIClient_remoteObjectProxyError + 16);
    uint64_t v54 = *(void **)(v3 + OBJC_IVAR____TtC13CoreIDVShared26IdentityManagementUIClient_remoteObjectProxyError + 24);
    sub_1D7860544();
    uint64_t v55 = (void *)swift_allocError();
    *(_WORD *)uint64_t v56 = v51;
    *(void *)(v56 + 8) = v52;
    *(void *)(v56 + 16) = v53;
    *(void *)(v56 + 24) = v54;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v57 = v54;
    v46(0, 0, v55);
  }
}

uint64_t sub_1D79CA908(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t (*a7)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v11 = a4 + 16;
  swift_beginAccess();
  uint64_t v12 = MEMORY[0x1D947D840](v11);
  if (v12)
  {
    uint64_t v13 = (void *)v12;
    swift_retain();

    swift_allocObject();
    uint64_t v14 = swift_weakInit();
    MEMORY[0x1F4188790](v14, v15, v16, v17, v18, v19, v20, v21);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA846680);
    sub_1D7A9C7E8();
    swift_release();
    if (v23) {
      sub_1D78EEA8C(v23);
    }
    swift_release();
  }
  return a7(a1, a2, a3);
}

uint64_t sub_1D79CAA70(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = *(void (**)(uint64_t, uint64_t, void *))(a1 + 32);
  if (a2)
  {
    uint64_t v5 = sub_1D7A9BFC8();
    uint64_t v7 = v6;
  }
  else
  {
    uint64_t v5 = 0;
    uint64_t v7 = 0;
  }
  swift_retain();
  id v8 = a3;
  v4(v5, v7, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

void sub_1D79CAB20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a2)
  {
    uint64_t v6 = (void *)sub_1D7A9BF98();
    if (a3)
    {
LABEL_3:
      uint64_t v7 = sub_1D7A9AE48();
      goto LABEL_6;
    }
  }
  else
  {
    uint64_t v6 = 0;
    if (a3) {
      goto LABEL_3;
    }
  }
  uint64_t v7 = 0;
LABEL_6:
  id v8 = (id)v7;
  (*(void (**)(uint64_t, void *))(a4 + 16))(a4, v6);
}

uint64_t sub_1D79CABB0(uint64_t a1, char a2)
{
  *(unsigned char *)(v3 + 72) = a2;
  *(void *)(v3 + 16) = a1;
  *(void *)(v3 + 24) = v2;
  return MEMORY[0x1F4188298](sub_1D79CABD4, 0, 0);
}

uint64_t sub_1D79CABD4()
{
  char v1 = *(unsigned char *)(v0 + 72);
  uint64_t v2 = *(void **)(v0 + 16);
  uint64_t v3 = *(void *)(*(void *)(v0 + 24) + OBJC_IVAR____TtC13CoreIDVShared26IdentityManagementUIClient_connection);
  uint64_t v4 = swift_allocObject();
  *(void *)(v0 + 32) = v4;
  *(void *)(v4 + 16) = v2;
  *(unsigned char *)(v4 + 24) = v1;
  id v5 = v2;
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v0 + 40) = v6;
  v6[2] = v3;
  v6[3] = &unk_1EA8461E8;
  v6[4] = v4;
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v0 + 48) = v7;
  v7[2] = 0;
  v7[3] = 0;
  v7[4] = v3;
  id v8 = (void *)swift_task_alloc();
  *(void *)(v0 + 56) = v8;
  *id v8 = v0;
  v8[1] = sub_1D79CAD2C;
  uint64_t v9 = MEMORY[0x1E4FBC848] + 8;
  return MEMORY[0x1F4188148](v8, &unk_1EA8461F0, v6, sub_1D79D8718, v7, 0, 0, v9);
}

uint64_t sub_1D79CAD2C()
{
  *(void *)(*(void *)v1 + 64) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1D79C2A24;
  }
  else
  {
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v2 = sub_1D78F7BE8;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D79CAE64(uint64_t a1, uint64_t *a2, uint64_t a3, char a4)
{
  *(unsigned char *)(v4 + 144) = a4;
  uint64_t v5 = *a2;
  *(void *)(v4 + 120) = a3;
  *(void *)(v4 + 128) = v5;
  return MEMORY[0x1F4188298](sub_1D79CAE8C, 0, 0);
}

uint64_t sub_1D79CAE8C()
{
  uint64_t v1 = *(unsigned __int8 *)(v0 + 144);
  uint64_t v3 = *(void *)(v0 + 120);
  uint64_t v2 = *(void **)(v0 + 128);
  *(void *)(v0 + 16) = v0;
  *(void *)(v0 + 24) = sub_1D79C2BB8;
  uint64_t v4 = swift_continuation_init();
  *(void *)(v0 + 80) = MEMORY[0x1E4F143A8];
  *(void *)(v0 + 88) = 0x40000000;
  *(void *)(v0 + 96) = sub_1D79C2D34;
  *(void *)(v0 + 104) = &block_descriptor_678;
  *(void *)(v0 + 112) = v4;
  objc_msgSend(v2, sel_uploadLivenessVideoWithLivenessVideoURL_shouldScheduleUploads_completionHandler_, v3, v1, v0 + 80);
  return MEMORY[0x1F41881E8](v0 + 16);
}

uint64_t sub_1D79CB118(void *a1, char a2, void *aBlock, void *a4)
{
  v4[2] = a1;
  v4[3] = a4;
  v4[4] = _Block_copy(aBlock);
  id v8 = a1;
  id v9 = a4;
  uint64_t v10 = swift_task_alloc();
  v4[5] = v10;
  *(void *)uint64_t v10 = v4;
  *(void *)(v10 + 16) = v8;
  *(void *)(v10 + 24) = v9;
  *(unsigned char *)(v10 + 72) = a2;
  *(void *)(v10 + 8) = sub_1D79D8778;
  return MEMORY[0x1F4188298](sub_1D79CABD4, 0, 0);
}

uint64_t sub_1D79CB1FC()
{
  *(void *)(v1 + 24) = v0;
  return MEMORY[0x1F4188298](sub_1D79CB21C, 0, 0);
}

uint64_t sub_1D79CB21C()
{
  uint64_t v1 = *(void *)(v0[3] + OBJC_IVAR____TtC13CoreIDVShared26IdentityManagementUIClient_connection);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[4] = v2;
  v2[2] = v1;
  v2[3] = &unk_1EA846200;
  v2[4] = 0;
  uint64_t v3 = (void *)swift_task_alloc();
  v0[5] = v3;
  v3[2] = 0;
  v3[3] = 0;
  v3[4] = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[6] = v4;
  uint64_t v5 = type metadata accessor for IdentityLivenessConfig();
  *uint64_t v4 = v0;
  v4[1] = sub_1D79CB354;
  return MEMORY[0x1F4188148](v0 + 2, &unk_1EA846210, v2, sub_1D79D0BC4, v3, 0, 0, v5);
}

uint64_t sub_1D79CB354()
{
  uint64_t v2 = (void *)*v1;
  v2[7] = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x1F4188298](sub_1D79CB4A0, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v3 = v2[2];
    uint64_t v4 = (uint64_t (*)(uint64_t))v2[1];
    return v4(v3);
  }
}

uint64_t sub_1D79CB4A0()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D79CB50C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  *(void *)(v2 + 128) = a1;
  *(void *)(v2 + 136) = v3;
  return MEMORY[0x1F4188298](sub_1D79CB530, 0, 0);
}

uint64_t sub_1D79CB530()
{
  uint64_t v1 = (void *)v0[17];
  v0[2] = v0;
  v0[7] = v0 + 15;
  v0[3] = sub_1D79CB62C;
  uint64_t v2 = swift_continuation_init();
  v0[10] = MEMORY[0x1E4F143A8];
  v0[11] = 0x40000000;
  v0[12] = sub_1D79C2340;
  v0[13] = &block_descriptor_676;
  v0[14] = v2;
  objc_msgSend(v1, sel_getLivenessConfigWithCompletionHandler_, v0 + 10);
  return MEMORY[0x1F41881E8](v0 + 2);
}

uint64_t sub_1D79CB62C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 144) = v1;
  if (v1) {
    uint64_t v2 = sub_1D79C6AE4;
  }
  else {
    uint64_t v2 = sub_1D79C22B4;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D79CB73C(uint64_t result, void *a2, void *a3)
{
  if (a3)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDF9740);
    swift_allocError();
    *uint64_t v4 = a3;
    id v5 = a3;
    return swift_continuation_throwingResumeWithError();
  }
  else if (a2)
  {
    **(void **)(*(void *)(*(void *)(result + 32) + 64) + 40) = a2;
    id v6 = a2;
    return swift_continuation_throwingResume();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1D79CB964(const void *a1, void *a2)
{
  v2[2] = a2;
  v2[3] = _Block_copy(a1);
  id v4 = a2;
  id v5 = (void *)swift_task_alloc();
  v2[4] = v5;
  *id v5 = v2;
  v5[1] = sub_1D79CBA28;
  v5[3] = v4;
  return MEMORY[0x1F4188298](sub_1D79CB21C, 0, 0);
}

uint64_t sub_1D79CBA28(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = *v2;
  id v6 = *(void **)(*v2 + 16);
  uint64_t v7 = *v2;
  swift_task_dealloc();

  id v8 = *(void (***)(void, void, void))(v5 + 24);
  if (v3)
  {
    id v9 = (void *)sub_1D7A9AE48();

    ((void (**)(void, void, void *))v8)[2](v8, 0, v9);
    _Block_release(v8);
  }
  else
  {
    ((void (**)(void, void *, void))v8)[2](v8, a1, 0);
    _Block_release(v8);
  }
  uint64_t v10 = *(uint64_t (**)(void))(v7 + 8);
  return v10();
}

uint64_t sub_1D79CBBC8(uint64_t a1, uint64_t a2)
{
  v3[4] = a2;
  v3[5] = v2;
  v3[3] = a1;
  return MEMORY[0x1F4188298](sub_1D79CBBEC, 0, 0);
}

uint64_t sub_1D79CBBEC()
{
  uint64_t v1 = v0[4];
  uint64_t v2 = (void *)v0[3];
  uint64_t v3 = *(void *)(v0[5] + OBJC_IVAR____TtC13CoreIDVShared26IdentityManagementUIClient_connection);
  uint64_t v4 = swift_allocObject();
  v0[6] = v4;
  *(void *)(v4 + 16) = v2;
  *(void *)(v4 + 24) = v1;
  id v5 = v2;
  id v6 = (void *)swift_task_alloc();
  v0[7] = v6;
  v6[2] = v3;
  v6[3] = &unk_1EA846228;
  v6[4] = v4;
  uint64_t v7 = (void *)swift_task_alloc();
  v0[8] = v7;
  v7[2] = 0;
  v7[3] = 0;
  v7[4] = v3;
  id v8 = (void *)swift_task_alloc();
  v0[9] = v8;
  uint64_t v9 = type metadata accessor for IdentityProofingDisplayInfo();
  *id v8 = v0;
  v8[1] = sub_1D79CBD54;
  return MEMORY[0x1F4188148](v0 + 2, &unk_1EA846230, v6, sub_1D79D8720, v7, 0, 0, v9);
}

uint64_t sub_1D79CBD54()
{
  uint64_t v2 = (void *)*v1;
  v2[10] = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x1F4188298](sub_1D79C3480, 0, 0);
  }
  else
  {
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v3 = v2[2];
    uint64_t v4 = (uint64_t (*)(uint64_t))v2[1];
    return v4(v3);
  }
}

uint64_t sub_1D79CBEB8(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  v4[16] = a1;
  v4[17] = a3;
  uint64_t v5 = *a2;
  v4[18] = a4;
  v4[19] = v5;
  return MEMORY[0x1F4188298](sub_1D79CBEE0, 0, 0);
}

uint64_t sub_1D79CBEE0()
{
  uint64_t v2 = v0[18];
  uint64_t v1 = (void *)v0[19];
  uint64_t v3 = v0[17];
  v0[2] = v0;
  v0[7] = v0 + 15;
  v0[3] = sub_1D79CBFF0;
  uint64_t v4 = swift_continuation_init();
  v0[10] = MEMORY[0x1E4F143A8];
  v0[11] = 0x40000000;
  v0[12] = sub_1D79C2340;
  v0[13] = &block_descriptor_639;
  v0[14] = v4;
  objc_msgSend(v1, sel_fetchExtendedReviewDisplayInfo_proofingOptions_completionHandler_, v3, v2, v0 + 10);
  return MEMORY[0x1F41881E8](v0 + 2);
}

uint64_t sub_1D79CBFF0()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 160) = v1;
  if (v1) {
    uint64_t v2 = sub_1D79CC100;
  }
  else {
    uint64_t v2 = sub_1D79C22B4;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D79CC100()
{
  swift_willThrow();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D79CC2EC(void *a1, uint64_t a2, void *aBlock, void *a4)
{
  v4[2] = a1;
  v4[3] = a4;
  v4[4] = _Block_copy(aBlock);
  id v8 = a1;
  id v9 = a4;
  uint64_t v10 = (void *)swift_task_alloc();
  v4[5] = v10;
  *uint64_t v10 = v4;
  v10[1] = sub_1D79D8788;
  v10[4] = a2;
  v10[5] = v9;
  v10[3] = v8;
  return MEMORY[0x1F4188298](sub_1D79CBBEC, 0, 0);
}

void sub_1D79CC3D0(void (*a1)(void, void), uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1D7A9B5F8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6, v8, v9, v10, v11, v12, v13, v14);
  uint64_t v16 = (char *)&aBlock[-1] - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1D7A9B1A8();
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17, v19, v20, v21, v22, v23, v24, v25);
  uint64_t v27 = (char *)&aBlock[-1] - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = *(void **)(v3 + OBJC_IVAR____TtC13CoreIDVShared26IdentityManagementUIClient_remoteObjectProxy);
  if (v28)
  {
    swift_unknownObjectRetain();
    sub_1D7A9B198();
    uint64_t v29 = sub_1D7A9B158();
    uint64_t v58 = v3;
    uint64_t v30 = a1;
    uint64_t v31 = v29;
    uint64_t v33 = v32;
    (*(void (**)(char *, uint64_t))(v18 + 8))(v27, v17);
    uint64_t v34 = swift_allocObject();
    uint64_t v35 = swift_weakInit();
    MEMORY[0x1F4188790](v35, v36, v37, v38, v39, v40, v41, v42);
    *(&v58 - 6) = v34;
    *(&v58 - 5) = v31;
    *(&v58 - 4) = v33;
    *(&v58 - 3) = (uint64_t)v30;
    *(&v58 - 2) = a2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF9410);
    sub_1D7A9C7E8();
    swift_release();
    uint64_t v43 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v44 = (void *)swift_allocObject();
    v44[2] = v43;
    _OWORD v44[3] = v31;
    v44[4] = v33;
    v44[5] = v30;
    v44[6] = a2;
    aBlock[4] = sub_1D79D0D68;
    aBlock[5] = v44;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1D79C3F24;
    aBlock[3] = &block_descriptor_150;
    uint64_t v45 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    objc_msgSend(v28, sel_fetchBiomeFedStatsUIWithCompletion_, v45);
    _Block_release(v45);
    swift_unknownObjectRelease();
  }
  else
  {
    uint64_t v46 = (void (*)(void, void *))a1;
    if (qword_1EBDF9DC8 != -1) {
      swift_once();
    }
    uint64_t v47 = __swift_project_value_buffer(v6, (uint64_t)qword_1EBDFBE70);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v16, v47, v6);
    uint64_t v48 = sub_1D7A9B5D8();
    os_log_type_t v49 = sub_1D7A9C748();
    if (os_log_type_enabled(v48, v49))
    {
      os_log_type_t v50 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_type_t v50 = 0;
      _os_log_impl(&dword_1D7853000, v48, v49, "Cannot invoke fetchBiomeFedStatsUI because no proxy is set", v50, 2u);
      MEMORY[0x1D947D740](v50, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v7 + 8))(v16, v6);
    __int16 v51 = *(_WORD *)(v3 + OBJC_IVAR____TtC13CoreIDVShared26IdentityManagementUIClient_remoteObjectProxyError);
    uint64_t v52 = *(void *)(v3 + OBJC_IVAR____TtC13CoreIDVShared26IdentityManagementUIClient_remoteObjectProxyError + 8);
    uint64_t v53 = *(void *)(v3 + OBJC_IVAR____TtC13CoreIDVShared26IdentityManagementUIClient_remoteObjectProxyError + 16);
    uint64_t v54 = *(void **)(v3 + OBJC_IVAR____TtC13CoreIDVShared26IdentityManagementUIClient_remoteObjectProxyError + 24);
    sub_1D7860544();
    uint64_t v55 = (void *)swift_allocError();
    *(_WORD *)uint64_t v56 = v51;
    *(void *)(v56 + 8) = v52;
    *(void *)(v56 + 16) = v53;
    *(void *)(v56 + 24) = v54;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v57 = v54;
    v46(0, v55);
  }
}

uint64_t sub_1D79CC864(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(uint64_t, uint64_t), uint64_t a7, uint64_t *a8, uint64_t a9, void (*a10)())
{
  uint64_t v14 = a3 + 16;
  swift_beginAccess();
  uint64_t v15 = MEMORY[0x1D947D840](v14);
  if (v15)
  {
    uint64_t v16 = (void *)v15;
    swift_retain();

    swift_allocObject();
    uint64_t v17 = swift_weakInit();
    MEMORY[0x1F4188790](v17, v18, v19, v20, v21, v22, v23, v24);
    __swift_instantiateConcreteTypeFromMangledName(a8);
    sub_1D7A9C7E8();
    swift_release();
    if (v26) {
      a10();
    }
    swift_release();
  }
  return a6(a1, a2);
}

void sub_1D79CC9DC(void *a1, int a2, void *aBlock, void (*a4)(void))
{
  uint64_t v6 = _Block_copy(aBlock);
  _Block_copy(v6);
  id v7 = a1;
  a4();
  _Block_release(v6);
  _Block_release(v6);
}

void sub_1D79CCA58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = sub_1D7A9AE48();
  }
  else {
    uint64_t v5 = 0;
  }
  id v6 = (id)v5;
  (*(void (**)(uint64_t, uint64_t))(a3 + 16))(a3, a1);
}

uint64_t sub_1D79CCAC8(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v5 + 32) = a4;
  *(void *)(v5 + 40) = v4;
  *(void *)(v5 + 16) = a2;
  *(void *)(v5 + 24) = a3;
  *(unsigned char *)(v5 + 88) = a1;
  return MEMORY[0x1F4188298](sub_1D79CCAF0, 0, 0);
}

uint64_t sub_1D79CCAF0()
{
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v3 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 24);
  char v4 = *(unsigned char *)(v0 + 88);
  uint64_t v5 = *(void *)(*(void *)(v0 + 40) + OBJC_IVAR____TtC13CoreIDVShared26IdentityManagementUIClient_connection);
  uint64_t v6 = swift_allocObject();
  *(void *)(v0 + 48) = v6;
  *(unsigned char *)(v6 + 16) = v4;
  *(void *)(v6 + 24) = v3;
  *(void *)(v6 + 32) = v2;
  *(void *)(v6 + 40) = v1;
  swift_bridgeObjectRetain();
  id v7 = (void *)swift_task_alloc();
  *(void *)(v0 + 56) = v7;
  v7[2] = v5;
  v7[3] = &unk_1EA846248;
  v7[4] = v6;
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v0 + 64) = v8;
  void v8[2] = 0;
  v8[3] = 0;
  v8[4] = v5;
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v9;
  *uint64_t v9 = v0;
  v9[1] = sub_1D79C3348;
  uint64_t v10 = MEMORY[0x1E4FBC848] + 8;
  return MEMORY[0x1F4188148](v9, &unk_1EA846250, v7, sub_1D79D8718, v8, 0, 0, v10);
}

uint64_t sub_1D79CCC5C(uint64_t a1, uint64_t *a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  *(void *)(v6 + 120) = a4;
  *(void *)(v6 + 128) = a5;
  *(unsigned char *)(v6 + 168) = a3;
  uint64_t v7 = *a2;
  *(void *)(v6 + 136) = a6;
  *(void *)(v6 + 144) = v7;
  return MEMORY[0x1F4188298](sub_1D79CCC88, 0, 0);
}

uint64_t sub_1D79CCC88()
{
  uint64_t v2 = *(void *)(v0 + 136);
  uint64_t v1 = *(void **)(v0 + 144);
  uint64_t v3 = *(unsigned __int8 *)(v0 + 168);
  uint64_t v4 = sub_1D7A9BF98();
  *(void *)(v0 + 152) = v4;
  *(void *)(v0 + 16) = v0;
  *(void *)(v0 + 24) = sub_1D79C3634;
  uint64_t v5 = swift_continuation_init();
  *(void *)(v0 + 80) = MEMORY[0x1E4F143A8];
  *(void *)(v0 + 88) = 0x40000000;
  *(void *)(v0 + 96) = sub_1D79C2D34;
  *(void *)(v0 + 104) = &block_descriptor_636;
  *(void *)(v0 + 112) = v5;
  objc_msgSend(v1, sel_saveIdentityProofingBiomeDataSharingUserConsent_state_proofingOptions_completionHandler_, v3, v4, v2, v0 + 80);
  return MEMORY[0x1F41881E8](v0 + 16);
}

uint64_t sub_1D79CCF34(char a1, int a2, uint64_t a3, void *aBlock, void *a5)
{
  v5[2] = a5;
  v5[3] = _Block_copy(aBlock);
  uint64_t v9 = sub_1D7A9BFC8();
  uint64_t v11 = v10;
  v5[4] = v10;
  id v12 = a5;
  uint64_t v13 = swift_task_alloc();
  v5[5] = v13;
  *(void *)uint64_t v13 = v5;
  *(void *)(v13 + 32) = a3;
  *(void *)(v13 + 40) = v12;
  *(void *)(v13 + 16) = v9;
  *(void *)(v13 + 24) = v11;
  *(void *)(v13 + 8) = sub_1D79CD034;
  *(unsigned char *)(v13 + 88) = a1;
  return MEMORY[0x1F4188298](sub_1D79CCAF0, 0, 0);
}

uint64_t sub_1D79CD034()
{
  uint64_t v2 = v0;
  uint64_t v4 = *v1;
  uint64_t v3 = *v1;
  uint64_t v5 = *(void **)(*v1 + 16);
  uint64_t v6 = *v1;
  swift_task_dealloc();

  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(v3 + 24);
  if (v2)
  {
    uint64_t v8 = (void *)sub_1D7A9AE48();

    (*(void (**)(uint64_t, void *))(v7 + 16))(v7, v8);
  }
  else
  {
    (*(void (**)(uint64_t, void))(v7 + 16))(v7, 0);
  }
  _Block_release(*(const void **)(v4 + 24));
  uint64_t v9 = *(uint64_t (**)(void))(v6 + 8);
  return v9();
}

uint64_t sub_1D79CD1D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  return MEMORY[0x1F4188298](sub_1D79CD1F8, 0, 0);
}

uint64_t sub_1D79CD1F8()
{
  uint64_t v1 = v0[4];
  uint64_t v3 = v0[2];
  uint64_t v2 = v0[3];
  uint64_t v4 = *(void *)(v0[5] + OBJC_IVAR____TtC13CoreIDVShared26IdentityManagementUIClient_connection);
  uint64_t v5 = (void *)swift_allocObject();
  v0[6] = v5;
  v5[2] = v3;
  v5[3] = v2;
  v5[4] = v1;
  swift_bridgeObjectRetain();
  uint64_t v6 = (void *)swift_task_alloc();
  v0[7] = v6;
  v6[2] = v4;
  v6[3] = &unk_1EA846268;
  v6[4] = v5;
  uint64_t v7 = (void *)swift_task_alloc();
  v0[8] = v7;
  v7[2] = 0;
  v7[3] = 0;
  v7[4] = v4;
  uint64_t v8 = (void *)swift_task_alloc();
  v0[9] = v8;
  *uint64_t v8 = v0;
  v8[1] = sub_1D79C6F38;
  uint64_t v9 = MEMORY[0x1E4FBC848] + 8;
  return MEMORY[0x1F4188148](v8, &unk_1EA846270, v6, sub_1D79D8718, v7, 0, 0, v9);
}

uint64_t sub_1D79CD35C(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[15] = a3;
  v5[16] = a4;
  uint64_t v6 = *a2;
  v5[17] = a5;
  v5[18] = v6;
  return MEMORY[0x1F4188298](sub_1D79CD384, 0, 0);
}

uint64_t sub_1D79CD384()
{
  uint64_t v2 = v0[17];
  uint64_t v1 = (void *)v0[18];
  uint64_t v3 = sub_1D7A9BF98();
  v0[19] = v3;
  v0[2] = v0;
  v0[3] = sub_1D79C71AC;
  uint64_t v4 = swift_continuation_init();
  v0[10] = MEMORY[0x1E4F143A8];
  v0[11] = 0x40000000;
  v0[12] = sub_1D79C2D34;
  v0[13] = &block_descriptor_634;
  v0[14] = v4;
  objc_msgSend(v1, sel_clearDataAfterTerminalProofingStateWithState_proofingOptions_completionHandler_, v3, v2, v0 + 10);
  return MEMORY[0x1F41881E8](v0 + 2);
}

uint64_t sub_1D79CD618(int a1, uint64_t a2, void *aBlock, void *a4)
{
  v4[2] = a4;
  v4[3] = _Block_copy(aBlock);
  uint64_t v7 = sub_1D7A9BFC8();
  uint64_t v9 = v8;
  v4[4] = v8;
  id v10 = a4;
  uint64_t v11 = (void *)swift_task_alloc();
  v4[5] = v11;
  *uint64_t v11 = v4;
  v11[4] = a2;
  v11[5] = v10;
  v11[2] = v7;
  v11[3] = v9;
  v11[1] = sub_1D79D877C;
  return MEMORY[0x1F4188298](sub_1D79CD1F8, 0, 0);
}

id sub_1D79CD710()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1D7A9B5F8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2, v4, v5, v6, v7, v8, v9, v10);
  id v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EBDF9DC8 != -1) {
    swift_once();
  }
  uint64_t v13 = __swift_project_value_buffer(v2, (uint64_t)qword_1EBDFBE70);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v12, v13, v2);
  uint64_t v14 = sub_1D7A9B5D8();
  os_log_type_t v15 = sub_1D7A9C748();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v16 = 0;
    _os_log_impl(&dword_1D7853000, v14, v15, "IdentityManagementUIClient invalidating server connection", v16, 2u);
    MEMORY[0x1D947D740](v16, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v3 + 8))(v12, v2);
  return objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC13CoreIDVShared26IdentityManagementUIClient_serverConnection), sel_invalidate);
}

uint64_t sub_1D79CD920()
{
  *(void *)(v1 + 24) = v0;
  return MEMORY[0x1F4188298](sub_1D79CD940, 0, 0);
}

uint64_t sub_1D79CD940()
{
  uint64_t v1 = *(void *)(v0[3] + OBJC_IVAR____TtC13CoreIDVShared26IdentityManagementUIClient_connection);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[4] = v2;
  v2[2] = v1;
  v2[3] = &unk_1EA846280;
  v2[4] = 0;
  uint64_t v3 = (void *)swift_task_alloc();
  v0[5] = v3;
  v3[2] = 0;
  v3[3] = 0;
  v3[4] = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[6] = v4;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA846DD0);
  *uint64_t v4 = v0;
  v4[1] = sub_1D79C4B30;
  return MEMORY[0x1F4188148](v0 + 2, &unk_1EA846288, v2, sub_1D79D8724, v3, 0, 0, v5);
}

uint64_t sub_1D79CDA7C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  *(void *)(v2 + 128) = a1;
  *(void *)(v2 + 136) = v3;
  return MEMORY[0x1F4188298](sub_1D79CDAA0, 0, 0);
}

uint64_t sub_1D79CDAA0()
{
  uint64_t v1 = (void *)v0[17];
  v0[2] = v0;
  v0[7] = v0 + 15;
  v0[3] = sub_1D79C4D9C;
  uint64_t v2 = swift_continuation_init();
  v0[10] = MEMORY[0x1E4F143A8];
  v0[11] = 0x40000000;
  v0[12] = sub_1D79C7C94;
  v0[13] = &block_descriptor_632;
  v0[14] = v2;
  objc_msgSend(v1, sel_globalAuthACLTemplateUUIDsWithCompletionHandler_, v0 + 10);
  return MEMORY[0x1F41881E8](v0 + 2);
}

uint64_t sub_1D79CDD04(const void *a1, void *a2)
{
  v2[2] = a2;
  v2[3] = _Block_copy(a1);
  id v4 = a2;
  uint64_t v5 = (void *)swift_task_alloc();
  v2[4] = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1D79CDDC8;
  v5[3] = v4;
  return MEMORY[0x1F4188298](sub_1D79CD940, 0, 0);
}

uint64_t sub_1D79CDDC8()
{
  uint64_t v2 = v0;
  uint64_t v3 = *v1;
  id v4 = *(void **)(*v1 + 16);
  uint64_t v5 = *v1;
  swift_task_dealloc();

  if (v2)
  {
    uint64_t v6 = sub_1D7A9AE48();

    uint64_t v7 = 0;
    uint64_t v8 = (void *)v6;
  }
  else
  {
    sub_1D7A9B1A8();
    uint64_t v7 = sub_1D7A9C2F8();
    swift_bridgeObjectRelease();
    uint64_t v6 = 0;
    uint64_t v8 = (void *)v7;
  }
  uint64_t v9 = *(void (***)(void, void, void))(v3 + 24);
  v9[2](v9, v7, v6);

  _Block_release(v9);
  uint64_t v10 = *(uint64_t (**)(void))(v5 + 8);
  return v10();
}

id IdentityManagementUIClient.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void IdentityManagementUIClient.init()()
{
}

uint64_t sub_1D79CDFEC()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDF9590);
  if (swift_isClassType()) {
    uint64_t v1 = v0;
  }
  else {
    uint64_t v1 = 0;
  }
  if (v1) {
    uint64_t v2 = &qword_1EBDF99C0;
  }
  else {
    uint64_t v2 = (uint64_t *)&unk_1EA846840;
  }
  return __swift_instantiateConcreteTypeFromMangledName(v2);
}

uint64_t sub_1D79CE04C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[5] = a3;
  v4[6] = a4;
  v4[3] = a1;
  v4[4] = a2;
  return MEMORY[0x1F4188298](sub_1D79CE070, 0, 0);
}

uint64_t sub_1D79CE070()
{
  uint64_t v1 = *(void *)(v0 + 48);
  uint64_t v2 = swift_task_alloc();
  *(void *)(v0 + 56) = v2;
  *(_OWORD *)(v2 + 16) = *(_OWORD *)(v0 + 32);
  *(void *)(v2 + 32) = v1;
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 64) = v3;
  uint64_t v4 = type metadata accessor for IdentityProofingDisplayInfo();
  *uint64_t v3 = v0;
  v3[1] = sub_1D79CE178;
  return MEMORY[0x1F4188160](v0 + 16, 0, 0, 0xD000000000000021, 0x80000001D7AC7A00, sub_1D79D8294, v2, v4);
}

uint64_t sub_1D79CE178()
{
  uint64_t v2 = (void *)*v1;
  v2[9] = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x1F4188298](sub_1D79D8790, 0, 0);
  }
  else
  {
    uint64_t v3 = (void *)v2[3];
    swift_task_dealloc();
    *uint64_t v3 = v2[2];
    uint64_t v4 = (uint64_t (*)(void))v2[1];
    return v4();
  }
}

uint64_t sub_1D79CE2C4(uint64_t a1, void *a2, int *a3)
{
  *(void *)(v3 + 16) = *a2;
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)a3 + *a3);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v3 + 24) = v4;
  *uint64_t v4 = v3;
  v4[1] = sub_1D79D8728;
  return v6(v3 + 16);
}

uint64_t sub_1D79CE3A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[5] = a3;
  v4[6] = a4;
  v4[3] = a1;
  v4[4] = a2;
  return MEMORY[0x1F4188298](sub_1D79CE3C8, 0, 0);
}

uint64_t sub_1D79CE3C8()
{
  uint64_t v1 = *(void *)(v0 + 48);
  uint64_t v2 = swift_task_alloc();
  *(void *)(v0 + 56) = v2;
  *(_OWORD *)(v2 + 16) = *(_OWORD *)(v0 + 32);
  *(void *)(v2 + 32) = v1;
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 64) = v3;
  uint64_t v4 = type metadata accessor for IdentityProofingStatus();
  *uint64_t v3 = v0;
  v3[1] = sub_1D79CE178;
  return MEMORY[0x1F4188160](v0 + 16, 0, 0, 0xD000000000000021, 0x80000001D7AC7A00, sub_1D79D7CD4, v2, v4);
}

uint64_t sub_1D79CE4D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[5] = a3;
  v4[6] = a4;
  v4[3] = a1;
  v4[4] = a2;
  return MEMORY[0x1F4188298](sub_1D79CE4F4, 0, 0);
}

uint64_t sub_1D79CE4F4()
{
  uint64_t v1 = *(void *)(v0 + 48);
  uint64_t v2 = swift_task_alloc();
  *(void *)(v0 + 56) = v2;
  *(_OWORD *)(v2 + 16) = *(_OWORD *)(v0 + 32);
  *(void *)(v2 + 32) = v1;
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 64) = v3;
  uint64_t v4 = type metadata accessor for IdentityProofingConfiguration();
  *uint64_t v3 = v0;
  v3[1] = sub_1D79CE178;
  return MEMORY[0x1F4188160](v0 + 16, 0, 0, 0xD000000000000021, 0x80000001D7AC7A00, sub_1D79D7970, v2, v4);
}

uint64_t sub_1D79CE5FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  return MEMORY[0x1F4188298](sub_1D79CE620, 0, 0);
}

uint64_t sub_1D79CE620()
{
  uint64_t v1 = *(void *)(v0 + 40);
  uint64_t v2 = swift_task_alloc();
  *(void *)(v0 + 48) = v2;
  *(_OWORD *)(v2 + 16) = *(_OWORD *)(v0 + 24);
  *(void *)(v2 + 32) = v1;
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 56) = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_1D79CE724;
  uint64_t v4 = MEMORY[0x1E4FBB390];
  return MEMORY[0x1F4188160](v0 + 72, 0, 0, 0xD000000000000021, 0x80000001D7AC7A00, sub_1D79D7618, v2, v4);
}

uint64_t sub_1D79CE724()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 64) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x1F4188298](sub_1D79B84B8, 0, 0);
  }
  else
  {
    uint64_t v3 = *(unsigned char **)(v2 + 16);
    swift_task_dealloc();
    *uint64_t v3 = *(unsigned char *)(v2 + 72);
    uint64_t v4 = *(uint64_t (**)(void))(v2 + 8);
    return v4();
  }
}

uint64_t sub_1D79CE870(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[5] = a3;
  v4[6] = a4;
  v4[3] = a1;
  v4[4] = a2;
  return MEMORY[0x1F4188298](sub_1D79CE894, 0, 0);
}

uint64_t sub_1D79CE894()
{
  uint64_t v1 = *(void *)(v0 + 48);
  uint64_t v2 = swift_task_alloc();
  *(void *)(v0 + 56) = v2;
  *(_OWORD *)(v2 + 16) = *(_OWORD *)(v0 + 32);
  *(void *)(v2 + 32) = v1;
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 64) = v3;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA846DD0);
  *uint64_t v3 = v0;
  v3[1] = sub_1D79CE178;
  return MEMORY[0x1F4188160](v0 + 16, 0, 0, 0xD000000000000021, 0x80000001D7AC7A00, sub_1D79D72B4, v2, v4);
}

uint64_t sub_1D79CE9A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[5] = a3;
  v4[6] = a4;
  v4[3] = a1;
  v4[4] = a2;
  return MEMORY[0x1F4188298](sub_1D79CE9C4, 0, 0);
}

uint64_t sub_1D79CE9C4()
{
  uint64_t v1 = *(void *)(v0 + 48);
  uint64_t v2 = swift_task_alloc();
  *(void *)(v0 + 56) = v2;
  *(_OWORD *)(v2 + 16) = *(_OWORD *)(v0 + 32);
  *(void *)(v2 + 32) = v1;
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 64) = v3;
  uint64_t v4 = type metadata accessor for IdentityBindingDetails();
  *uint64_t v3 = v0;
  v3[1] = sub_1D79CEACC;
  return MEMORY[0x1F4188160](v0 + 16, 0, 0, 0xD000000000000021, 0x80000001D7AC7A00, sub_1D79D6B84, v2, v4);
}

uint64_t sub_1D79CEACC()
{
  uint64_t v2 = (void *)*v1;
  v2[9] = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x1F4188298](sub_1D79CEC18, 0, 0);
  }
  else
  {
    uint64_t v3 = (void *)v2[3];
    swift_task_dealloc();
    *uint64_t v3 = v2[2];
    uint64_t v4 = (uint64_t (*)(void))v2[1];
    return v4();
  }
}

uint64_t sub_1D79CEC18()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D79CEC7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[5] = a3;
  v4[6] = a4;
  v4[3] = a1;
  v4[4] = a2;
  return MEMORY[0x1F4188298](sub_1D79CECA0, 0, 0);
}

uint64_t sub_1D79CECA0()
{
  uint64_t v1 = *(void *)(v0 + 48);
  uint64_t v2 = swift_task_alloc();
  *(void *)(v0 + 56) = v2;
  *(_OWORD *)(v2 + 16) = *(_OWORD *)(v0 + 32);
  *(void *)(v2 + 32) = v1;
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 64) = v3;
  uint64_t v4 = type metadata accessor for IdentityLivenessConfig();
  *uint64_t v3 = v0;
  v3[1] = sub_1D79CE178;
  return MEMORY[0x1F4188160](v0 + 16, 0, 0, 0xD000000000000021, 0x80000001D7AC7A00, sub_1D79D6800, v2, v4);
}

uint64_t sub_1D79CEDA8(uint64_t a1, void *a2, int *a3)
{
  *(void *)(v3 + 16) = *a2;
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)a3 + *a3);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v3 + 24) = v4;
  *uint64_t v4 = v3;
  v4[1] = sub_1D79CEE88;
  return v6(v3 + 16);
}

uint64_t sub_1D79CEE88()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

id sub_1D79CEF7C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1D7A9B5F8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4, v6, v7, v8, v9, v10, v11, v12);
  uint64_t v14 = (char *)&v45 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = OBJC_IVAR____TtC13CoreIDVShared26IdentityManagementUIClient_remoteObjectProxy;
  *(void *)&v2[OBJC_IVAR____TtC13CoreIDVShared26IdentityManagementUIClient_remoteObjectProxy] = 0;
  uint64_t v15 = (uint64_t)&v2[OBJC_IVAR____TtC13CoreIDVShared26IdentityManagementUIClient_remoteObjectProxyError];
  LOWORD(aBlock) = 511;
  uint64_t v16 = v2;
  unint64_t v17 = sub_1D785EAF8(MEMORY[0x1E4FBC860]);
  DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xD00000000000001BLL, 0x80000001D7AC7BF0, (__int16 *)&aBlock, 0, v17, 0xD00000000000005ELL, 0x80000001D7AC7C10, v15, 0xD00000000000001ALL, 0x80000001D7AB4500, 29);
  if (qword_1EBDF9DC8 != -1) {
    swift_once();
  }
  uint64_t v18 = __swift_project_value_buffer(v4, (uint64_t)qword_1EBDFBE70);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v14, v18, v4);
  uint64_t v19 = sub_1D7A9B5D8();
  os_log_type_t v20 = sub_1D7A9C748();
  if (os_log_type_enabled(v19, v20))
  {
    uint64_t v21 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v21 = 0;
    _os_log_impl(&dword_1D7853000, v19, v20, "IdentityManagementUIClient init", v21, 2u);
    MEMORY[0x1D947D740](v21, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v5 + 8))(v14, v4);
  uint64_t v22 = self;
  id v23 = objc_msgSend(v22, sel_interfaceWithProtocol_, &unk_1F2F33198);
  id v24 = objc_msgSend(v22, sel_interfaceWithProtocol_, &unk_1F2F36870);
  if (a1)
  {
    *((void *)&v49 + 1) = swift_getObjectType();
    *(void *)&long long aBlock = a1;
  }
  else
  {
    long long aBlock = 0u;
    long long v49 = 0u;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA846838);
  swift_allocObject();
  swift_unknownObjectRetain();
  uint64_t v25 = sub_1D7A331D0(0xD00000000000002BLL, 0x80000001D7AC7C70, (uint64_t)v23, 0, 0, 0, 0, (uint64_t)v24, (uint64_t)&aBlock, (uint64_t)sub_1D79C0F54, 0);

  *(void *)&v16[OBJC_IVAR____TtC13CoreIDVShared26IdentityManagementUIClient_connection] = v25;
  uint64_t v26 = (void *)v25[2];
  uint64_t v27 = OBJC_IVAR____TtC13CoreIDVShared26IdentityManagementUIClient_serverConnection;
  *(void *)&v16[OBJC_IVAR____TtC13CoreIDVShared26IdentityManagementUIClient_serverConnection] = v26;
  LOWORD(aBlock) = 508;
  type metadata accessor for IdentityManagmentDisconnectHandler();
  swift_allocObject();
  swift_retain();
  id v28 = v26;
  *(void *)&v16[OBJC_IVAR____TtC13CoreIDVShared26IdentityManagementUIClient_disconnectHandler] = sub_1D78615B8(0xD00000000000001ALL, 0x80000001D7AB4500, (unsigned __int16 *)&aBlock);
  id v29 = objc_msgSend(v28, sel_remoteObjectInterface);
  if (v29)
  {
    uint64_t v30 = v29;
    sub_1D79CDFEC();
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1D7AA0A40;
    *(void *)(inited + 32) = sub_1D78C4038(0, (unint64_t *)&qword_1EBDF90E0);
    *(void *)(inited + 40) = sub_1D78C4038(0, (unint64_t *)&unk_1EA846DC0);
    NSXPCInterface.setClasses(_:for:argumentIndex:ofReply:)(inited);
    swift_setDeallocating();
  }
  id v32 = objc_msgSend(*(id *)&v16[v27], sel_remoteObjectInterface);
  if (v32)
  {
    uint64_t v33 = v32;
    sub_1D79CDFEC();
    uint64_t v34 = swift_initStackObject();
    *(_OWORD *)(v34 + 16) = xmmword_1D7AA0A40;
    *(void *)(v34 + 32) = sub_1D78C4038(0, (unint64_t *)&qword_1EBDF90E0);
    *(void *)(v34 + 40) = sub_1D78C4038(0, (unint64_t *)&unk_1EA846DC0);
    NSXPCInterface.setClasses(_:for:argumentIndex:ofReply:)(v34);
    swift_setDeallocating();
  }
  uint64_t v35 = *(void **)&v16[v27];
  swift_retain();
  id v36 = v35;
  sub_1D7861A58(v36);
  swift_release();

  uint64_t v37 = *(void **)&v16[v27];
  os_log_type_t v50 = sub_1D79C1024;
  uint64_t v51 = 0;
  *(void *)&long long aBlock = MEMORY[0x1E4F143A8];
  *((void *)&aBlock + 1) = 1107296256;
  *(void *)&long long v49 = sub_1D7A30D08;
  *((void *)&v49 + 1) = &block_descriptor_903;
  uint64_t v38 = _Block_copy(&aBlock);
  id v39 = v37;
  id v40 = objc_msgSend(v39, sel_remoteObjectProxyWithErrorHandler_, v38);
  _Block_release(v38);

  sub_1D7A9CB08();
  swift_release();
  swift_unknownObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA846660);
  int v41 = swift_dynamicCast();
  uint64_t v42 = v47;
  if (!v41) {
    uint64_t v42 = 0;
  }
  *(void *)&v2[v45] = v42;

  swift_unknownObjectRelease();
  uint64_t v43 = (objc_class *)type metadata accessor for IdentityManagementUIClient();
  v46.receiver = v16;
  v46.super_class = v43;
  return objc_msgSendSuper2(&v46, sel_init);
}

uint64_t type metadata accessor for IdentityManagementUIClient()
{
  return self;
}

uint64_t sub_1D79CF5F4()
{
  swift_weakDestroy();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1D79CF62C()
{
  return sub_1D79D5B60((uint64_t (*)(void, void, void, void, void))sub_1D7862930);
}

uint64_t sub_1D79CF658()
{
  swift_unknownObjectWeakDestroy();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1D79CF690()
{
  return objectdestroy_5Tm(MEMORY[0x1E4FBC8D0], MEMORY[0x1E4FBC898]);
}

uint64_t block_copy_helper_10(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_10()
{
  return swift_release();
}

uint64_t sub_1D79CF6D8()
{
  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1D79CF710(uint64_t a1, uint64_t *a2)
{
  long long v10 = *(_OWORD *)(v2 + 16);
  uint64_t v6 = *(void *)(v2 + 32);
  uint64_t v7 = swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *(void *)uint64_t v7 = v3;
  *(void *)(v7 + 8) = sub_1D7874050;
  *(_OWORD *)(v7 + 136) = v10;
  *(void *)(v7 + 128) = a1;
  uint64_t v8 = *a2;
  *(void *)(v7 + 152) = v6;
  *(void *)(v7 + 160) = v8;
  return MEMORY[0x1F4188298](sub_1D79C2090, 0, 0);
}

uint64_t sub_1D79CF7E4(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_1D7874050;
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1EA846020 + dword_1EA846020);
  return v8(a1, v4, v5, v6);
}

uint64_t sub_1D79CF8AC()
{
  return sub_1D79B8584(v0[2], v0[3], v0[4], (uint64_t)&unk_1F2F253F8, (void (*)(uint64_t, uint64_t))sub_1D79D85F0, (uint64_t)&unk_1EA846808);
}

uint64_t sub_1D79CF8FC()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1D79CF934(uint64_t a1, uint64_t *a2)
{
  uint64_t v5 = *(void *)(v2 + 16);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *uint64_t v6 = v3;
  v6[1] = sub_1D7874050;
  uint64_t v7 = *a2;
  v6[15] = v5;
  v6[16] = v7;
  return MEMORY[0x1F4188298](sub_1D79C2AC0, 0, 0);
}

uint64_t sub_1D79CF9E8(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 32);
  uint64_t v5 = swift_task_alloc();
  long long v6 = *(_OWORD *)(v1 + 16);
  *(void *)(v2 + 16) = v5;
  *(void *)uint64_t v5 = v2;
  *(void *)(v5 + 8) = sub_1D7874050;
  *(void *)(v5 + 40) = v4;
  *(_OWORD *)(v5 + 24) = v6;
  *(void *)(v5 + 16) = a1;
  return MEMORY[0x1F4188298](sub_1D79B8020, 0, 0);
}

uint64_t sub_1D79CFAAC()
{
  return sub_1D79B8584(v0[2], v0[3], v0[4], (uint64_t)&unk_1F2F253A8, (void (*)(uint64_t, uint64_t))sub_1D79D85F0, (uint64_t)&unk_1EA8467E8);
}

uint64_t sub_1D79CFAFC(uint64_t a1, uint64_t *a2)
{
  long long v9 = *(_OWORD *)(v2 + 16);
  uint64_t v5 = *(void *)(v2 + 32);
  uint64_t v6 = swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *(void *)uint64_t v6 = v3;
  *(void *)(v6 + 8) = sub_1D7874050;
  *(_OWORD *)(v6 + 120) = v9;
  uint64_t v7 = *a2;
  *(void *)(v6 + 136) = v5;
  *(void *)(v6 + 144) = v7;
  return MEMORY[0x1F4188298](sub_1D79C3520, 0, 0);
}

uint64_t sub_1D79CFBC8()
{
  return sub_1D79D5B60((uint64_t (*)(void, void, void, void, void))sub_1D7862528);
}

uint64_t sub_1D79CFBF4()
{
  return objectdestroy_5Tm(MEMORY[0x1E4FBC8D0], MEMORY[0x1E4FBC898]);
}

uint64_t sub_1D79CFC20(uint64_t a1, uint64_t a2)
{
  return sub_1D79CFCE0(a1, a2, &qword_1EA8467D8, (uint64_t)sub_1D79D7E9C, (void (*)())sub_1D79D85F4);
}

uint64_t sub_1D79CFC54()
{
  return sub_1D79D5B60((uint64_t (*)(void, void, void, void, void))sub_1D7862324);
}

uint64_t sub_1D79CFC80()
{
  return objectdestroy_5Tm(MEMORY[0x1E4FBC8D0], MEMORY[0x1E4FBC898]);
}

uint64_t sub_1D79CFCAC(uint64_t a1, uint64_t a2)
{
  return sub_1D79CFCE0(a1, a2, &qword_1EA8467D0, (uint64_t)sub_1D79D873C, (void (*)())sub_1D79D85F4);
}

uint64_t sub_1D79CFCE0(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, void (*a5)())
{
  return sub_1D79CC864(a1, a2, *(void *)(v5 + 16), *(void *)(v5 + 24), *(void *)(v5 + 32), *(uint64_t (**)(uint64_t, uint64_t))(v5 + 40), *(void *)(v5 + 48), a3, a4, a5);
}

uint64_t sub_1D79CFD1C()
{
  return objectdestroy_5Tm(MEMORY[0x1E4FBC8D0], MEMORY[0x1E4FBC898]);
}

uint64_t sub_1D79CFD48(uint64_t a1, uint64_t a2)
{
  return sub_1D79CFCE0(a1, a2, &qword_1EA8467D0, (uint64_t)sub_1D79D7E7C, (void (*)())sub_1D79D85F4);
}

uint64_t sub_1D79CFD7C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_1D7874050;
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1EA846088 + dword_1EA846088);
  return v8(a1, v4, v5, v6);
}

uint64_t sub_1D79CFE44()
{
  return sub_1D79B8584(v0[2], v0[3], v0[4], (uint64_t)&unk_1F2F252E0, (void (*)(uint64_t, uint64_t))sub_1D79D85F0, (uint64_t)&unk_1EA8467A0);
}

uint64_t sub_1D79CFE94()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_1D79CFED4(uint64_t a1, void *a2)
{
  long long v10 = *(_OWORD *)(v2 + 16);
  uint64_t v7 = *(void *)(v2 + 32);
  uint64_t v6 = *(void *)(v2 + 40);
  uint64_t v8 = swift_task_alloc();
  *(void *)(v3 + 16) = v8;
  *(void *)uint64_t v8 = v3;
  *(void *)(v8 + 8) = sub_1D7874050;
  *(void *)(v8 + 152) = v7;
  *(void *)(v8 + 160) = v6;
  *(_OWORD *)(v8 + 136) = v10;
  *(void *)(v8 + 128) = a1;
  *(void *)(v8 + 168) = *a2;
  return MEMORY[0x1F4188298](sub_1D79C548C, 0, 0);
}

uint64_t sub_1D79CFFB4(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_1D7874050;
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1EA8460B0 + dword_1EA8460B0);
  return v8(a1, v4, v5, v6);
}

uint64_t sub_1D79D007C()
{
  return sub_1D79B8584(v0[2], v0[3], v0[4], (uint64_t)&unk_1F2F25218, (void (*)(uint64_t, uint64_t))sub_1D79D85F0, (uint64_t)&unk_1EA846768);
}

uint64_t sub_1D79D00CC()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1D79D00DC(uint64_t a1, void *a2)
{
  uint64_t v6 = *(void *)(v2 + 16);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_1D7874050;
  v7[15] = a1;
  v7[16] = v6;
  v7[17] = *a2;
  return MEMORY[0x1F4188298](sub_1D79C5FC0, 0, 0);
}

uint64_t sub_1D79D01A0(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_1D7874050;
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1EA8460D8 + dword_1EA8460D8);
  return v8(a1, v4, v5, v6);
}

uint64_t sub_1D79D0268()
{
  return sub_1D79B8584(v0[2], v0[3], v0[4], (uint64_t)&unk_1F2F25150, (void (*)(uint64_t, uint64_t))sub_1D79D85F0, (uint64_t)&unk_1EA846738);
}

uint64_t sub_1D79D02B8(uint64_t a1, void *a2)
{
  uint64_t v6 = *(void *)(v2 + 16);
  uint64_t v5 = *(void *)(v2 + 24);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_1D7874050;
  v7[15] = v6;
  v7[16] = v5;
  v7[17] = *a2;
  return MEMORY[0x1F4188298](sub_1D79C68CC, 0, 0);
}

uint64_t sub_1D79D0378()
{
  sub_1D78607E8(*(void *)(v0 + 16), *(void *)(v0 + 24));
  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1D79D03B0(uint64_t a1, uint64_t *a2)
{
  long long v9 = *(_OWORD *)(v2 + 16);
  uint64_t v5 = *(void *)(v2 + 32);
  uint64_t v6 = swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *(void *)uint64_t v6 = v3;
  *(void *)(v6 + 8) = sub_1D7874050;
  *(_OWORD *)(v6 + 120) = v9;
  uint64_t v7 = *a2;
  *(void *)(v6 + 136) = v5;
  *(void *)(v6 + 144) = v7;
  return MEMORY[0x1F4188298](sub_1D79C7098, 0, 0);
}

uint64_t sub_1D79D047C()
{
  sub_1D78607E8(*(void *)(v0 + 16), *(void *)(v0 + 24));
  sub_1D78607E8(*(void *)(v0 + 32), *(void *)(v0 + 40));
  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_1D79D04BC(uint64_t a1, void *a2)
{
  long long v10 = *(_OWORD *)(v2 + 16);
  uint64_t v7 = *(void *)(v2 + 32);
  uint64_t v6 = *(void *)(v2 + 40);
  uint64_t v8 = swift_task_alloc();
  *(void *)(v3 + 16) = v8;
  *(void *)uint64_t v8 = v3;
  *(void *)(v8 + 8) = sub_1D7874050;
  *(void *)(v8 + 152) = v7;
  *(void *)(v8 + 160) = v6;
  *(_OWORD *)(v8 + 136) = v10;
  *(void *)(v8 + 128) = a1;
  *(void *)(v8 + 168) = *a2;
  return MEMORY[0x1F4188298](sub_1D79C7A44, 0, 0);
}

uint64_t sub_1D79D059C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_1D7874050;
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1EA846140 + dword_1EA846140);
  return v8(a1, v4, v5, v6);
}

uint64_t sub_1D79D0664()
{
  return sub_1D79B8584(v0[2], v0[3], v0[4], (uint64_t)&unk_1F2F25088, (void (*)(uint64_t, uint64_t))sub_1D79D85F0, (uint64_t)&unk_1EA846700);
}

uint64_t sub_1D79D06B4(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 32);
  uint64_t v5 = swift_task_alloc();
  long long v6 = *(_OWORD *)(v1 + 16);
  *(void *)(v2 + 16) = v5;
  *(void *)uint64_t v5 = v2;
  *(void *)(v5 + 8) = sub_1D7874050;
  *(void *)(v5 + 40) = v4;
  *(_OWORD *)(v5 + 24) = v6;
  *(void *)(v5 + 16) = a1;
  return MEMORY[0x1F4188298](sub_1D79B827C, 0, 0);
}

uint64_t sub_1D79D0778()
{
  return sub_1D79B8584(v0[2], v0[3], v0[4], (uint64_t)&unk_1F2F24FC0, (void (*)(uint64_t, uint64_t))sub_1D79D85F0, (uint64_t)&unk_1EA8466C8);
}

uint64_t sub_1D79D07C8(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 32);
  uint64_t v5 = swift_task_alloc();
  long long v6 = *(_OWORD *)(v1 + 16);
  *(void *)(v2 + 16) = v5;
  *(void *)uint64_t v5 = v2;
  *(void *)(v5 + 8) = sub_1D786EC1C;
  *(void *)(v5 + 40) = v4;
  *(_OWORD *)(v5 + 24) = v6;
  *(void *)(v5 + 16) = a1;
  return MEMORY[0x1F4188298](sub_1D79B827C, 0, 0);
}

uint64_t sub_1D79D088C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_1D7874050;
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1EA8461C8 + dword_1EA8461C8);
  return v8(a1, v4, v5, v6);
}

uint64_t sub_1D79D0954()
{
  return sub_1D79B8584(v0[2], v0[3], v0[4], (uint64_t)&unk_1F2F24EF8, (void (*)(uint64_t, uint64_t))sub_1D79D85F0, (uint64_t)&unk_1EA846690);
}

uint64_t sub_1D79D09A4()
{
  return sub_1D79D5B60((uint64_t (*)(void, void, void, void, void))sub_1D78621E8);
}

uint64_t sub_1D79D09D0()
{
  return objectdestroy_5Tm(MEMORY[0x1E4FBC8D0], MEMORY[0x1E4FBC898]);
}

uint64_t sub_1D79D0A00()
{
  return MEMORY[0x1F4186498](v0, 25, 7);
}

uint64_t sub_1D79D0A38(uint64_t a1, uint64_t *a2)
{
  uint64_t v5 = *(void *)(v2 + 16);
  char v6 = *(unsigned char *)(v2 + 24);
  uint64_t v7 = swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *(void *)uint64_t v7 = v3;
  *(void *)(v7 + 8) = sub_1D7874050;
  *(unsigned char *)(v7 + 144) = v6;
  uint64_t v8 = *a2;
  *(void *)(v7 + 120) = v5;
  *(void *)(v7 + 128) = v8;
  return MEMORY[0x1F4188298](sub_1D79CAE8C, 0, 0);
}

uint64_t sub_1D79D0AFC(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_1D7874050;
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1EA846208 + dword_1EA846208);
  return v8(a1, v4, v5, v6);
}

uint64_t sub_1D79D0BC4()
{
  return sub_1D79B8584(v0[2], v0[3], v0[4], (uint64_t)&unk_1F2F24DB8, (void (*)(uint64_t, uint64_t))sub_1D79D85F0, (uint64_t)&unk_1EA846638);
}

uint64_t sub_1D79D0C14()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1D79D0C4C(uint64_t a1, uint64_t *a2)
{
  uint64_t v7 = *(void *)(v2 + 16);
  uint64_t v6 = *(void *)(v2 + 24);
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v8;
  *uint64_t v8 = v3;
  v8[1] = sub_1D7874050;
  v8[16] = a1;
  v8[17] = v7;
  uint64_t v9 = *a2;
  v8[18] = v6;
  v8[19] = v9;
  return MEMORY[0x1F4188298](sub_1D79CBEE0, 0, 0);
}

uint64_t sub_1D79D0D10()
{
  return sub_1D79D5B60((uint64_t (*)(void, void, void, void, void))sub_1D786272C);
}

uint64_t sub_1D79D0D3C()
{
  return objectdestroy_5Tm(MEMORY[0x1E4FBC8D0], MEMORY[0x1E4FBC898]);
}

uint64_t sub_1D79D0D68(uint64_t a1, uint64_t a2)
{
  return sub_1D79CFCE0(a1, a2, &qword_1EA846628, (uint64_t)sub_1D79D6488, (void (*)())sub_1D79D85F4);
}

uint64_t sub_1D79D0D9C()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_1D79D0DD4(uint64_t a1, uint64_t *a2)
{
  char v5 = *(unsigned char *)(v2 + 16);
  long long v10 = *(_OWORD *)(v2 + 24);
  uint64_t v6 = *(void *)(v2 + 40);
  uint64_t v7 = swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *(void *)uint64_t v7 = v3;
  *(void *)(v7 + 8) = sub_1D7874050;
  *(_OWORD *)(v7 + 120) = v10;
  *(unsigned char *)(v7 + 168) = v5;
  uint64_t v8 = *a2;
  *(void *)(v7 + 136) = v6;
  *(void *)(v7 + 144) = v8;
  return MEMORY[0x1F4188298](sub_1D79CCC88, 0, 0);
}

uint64_t sub_1D79D0EA8()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1D79D0EE0(uint64_t a1, uint64_t *a2)
{
  long long v9 = *(_OWORD *)(v2 + 16);
  uint64_t v5 = *(void *)(v2 + 32);
  uint64_t v6 = swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *(void *)uint64_t v6 = v3;
  *(void *)(v6 + 8) = sub_1D7874050;
  *(_OWORD *)(v6 + 120) = v9;
  uint64_t v7 = *a2;
  *(void *)(v6 + 136) = v5;
  *(void *)(v6 + 144) = v7;
  return MEMORY[0x1F4188298](sub_1D79CD384, 0, 0);
}

uint64_t method lookup function for IdentityManagementUIClient(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for IdentityManagementUIClient);
}

uint64_t dispatch thunk of IdentityManagementUIClient.__allocating_init(exportedObject:)()
{
  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t dispatch thunk of IdentityManagementUIClient.triggerAssetsUpload(proofingOptions:canUploadOnExpensiveNetwork:completion:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of IdentityManagementUIClient.prepareForProofingDisplay(_:proofingOptions:idType:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = *(int **)((*MEMORY[0x1E4FBC8C8] & *v3) + 0xA0);
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)v8 + *v8);
  long long v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *long long v9 = v4;
  v9[1] = sub_1D79D8780;
  return v11(a1, a2, a3);
}

uint64_t dispatch thunk of IdentityManagementUIClient.prepareForProofingIdentity(_:)(uint64_t a1)
{
  uint64_t v4 = *(int **)((*MEMORY[0x1E4FBC8C8] & *v1) + 0xA8);
  uint64_t v7 = (uint64_t (*)(uint64_t))((char *)v4 + *v4);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1D7874050;
  return v7(a1);
}

uint64_t dispatch thunk of IdentityManagementUIClient.provisionIdentity(state:proofingOptions:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = *(int **)((*MEMORY[0x1E4FBC8C8] & *v3) + 0xB0);
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)v8 + *v8);
  long long v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *long long v9 = v4;
  v9[1] = sub_1D7874050;
  return v11(a1, a2, a3);
}

uint64_t dispatch thunk of IdentityManagementUIClient.fetchImageQualitySettings(completion:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of IdentityManagementUIClient.proofIdentity(_:_:_:totalUploadAssetsFileSizeInBytes:completion:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xC0))();
}

uint64_t dispatch thunk of IdentityManagementUIClient.proofIdentity(using:proofingOptions:completion:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xC8))();
}

uint64_t dispatch thunk of IdentityManagementUIClient.proofingFlowAvailability()()
{
  uint64_t v2 = *(int **)((*MEMORY[0x1E4FBC8C8] & *v0) + 0xD0);
  uint64_t v5 = (uint64_t (*)(void))((char *)v2 + *v2);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1D79D8780;
  return v5();
}

uint64_t dispatch thunk of IdentityManagementUIClient.proofingStatus(for:country:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v10 = *(int **)((*MEMORY[0x1E4FBC8C8] & *v4) + 0xD8);
  uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)v10 + *v10);
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v11;
  *uint64_t v11 = v5;
  v11[1] = sub_1D79B7D7C;
  return v13(a1, a2, a3, a4);
}

uint64_t dispatch thunk of IdentityManagementUIClient.isWatchPaired(idType:)(uint64_t a1)
{
  uint64_t v4 = *(int **)((*MEMORY[0x1E4FBC8C8] & *v1) + 0xE0);
  uint64_t v7 = (uint64_t (*)(uint64_t))((char *)v4 + *v4);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1D79D1760;
  return v7(a1);
}

uint64_t sub_1D79D1760(uint64_t a1)
{
  uint64_t v5 = *v1;
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v5 + 8);
  return v3(a1);
}

uint64_t dispatch thunk of IdentityManagementUIClient.proofingCancelled(configuration:proofingOptions:)(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(int **)((*MEMORY[0x1E4FBC8C8] & *v2) + 0xE8);
  long long v9 = (uint64_t (*)(uint64_t, uint64_t))((char *)v6 + *v6);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_1D7874050;
  return v9(a1, a2);
}

uint64_t dispatch thunk of IdentityManagementUIClient.setGlobalBoundACL(data:type:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = *(int **)((*MEMORY[0x1E4FBC8C8] & *v3) + 0xF0);
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)v8 + *v8);
  long long v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *long long v9 = v4;
  v9[1] = sub_1D7874050;
  return v11(a1, a2, a3);
}

uint64_t dispatch thunk of IdentityManagementUIClient.setModifiedGlobalBoundACL(data:externalizedLAContext:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v10 = *(int **)((*MEMORY[0x1E4FBC8C8] & *v4) + 0xF8);
  uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)v10 + *v10);
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v11;
  *uint64_t v11 = v5;
  v11[1] = sub_1D79D8780;
  return v13(a1, a2, a3, a4);
}

uint64_t dispatch thunk of IdentityManagementUIClient.retrieveBioBindingUnboundACL()()
{
  uint64_t v2 = *(int **)((*MEMORY[0x1E4FBC8C8] & *v0) + 0x100);
  uint64_t v5 = (uint64_t (*)(void))((char *)v2 + *v2);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1D79D8784;
  return v5();
}

uint64_t dispatch thunk of IdentityManagementUIClient.retrievePasscodeBindingUnboundACL()()
{
  uint64_t v2 = *(int **)((*MEMORY[0x1E4FBC8C8] & *v0) + 0x108);
  uint64_t v5 = (uint64_t (*)(void))((char *)v2 + *v2);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1D79D8784;
  return v5();
}

uint64_t dispatch thunk of IdentityManagementUIClient.retrieveBoundACL()()
{
  uint64_t v2 = *(int **)((*MEMORY[0x1E4FBC8C8] & *v0) + 0x110);
  uint64_t v5 = (uint64_t (*)(void))((char *)v2 + *v2);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1D79D1EFC;
  return v5();
}

uint64_t sub_1D79D1EFC(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = *v2;
  swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(v7 + 8);
  return v5(a1, a2);
}

uint64_t dispatch thunk of IdentityManagementUIClient.deleteBoundACL()()
{
  uint64_t v2 = *(int **)((*MEMORY[0x1E4FBC8C8] & *v0) + 0x118);
  uint64_t v5 = (uint64_t (*)(void))((char *)v2 + *v2);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1D7874050;
  return v5();
}

uint64_t dispatch thunk of IdentityManagementUIClient.fetchBioBindingDetails()()
{
  uint64_t v2 = *(int **)((*MEMORY[0x1E4FBC8C8] & *v0) + 0x120);
  uint64_t v5 = (uint64_t (*)(void))((char *)v2 + *v2);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1D79D8780;
  return v5();
}

uint64_t dispatch thunk of IdentityManagementUIClient.fetchTermsAndConditions(completion:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x128))();
}

uint64_t dispatch thunk of IdentityManagementUIClient.uploadLivenessVideo(livenessVideoURL:shouldScheduleUploads:)(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(int **)((*MEMORY[0x1E4FBC8C8] & *v2) + 0x130);
  long long v9 = (uint64_t (*)(uint64_t, uint64_t))((char *)v6 + *v6);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_1D7874050;
  return v9(a1, a2);
}

uint64_t dispatch thunk of IdentityManagementUIClient.getLivenessConfig()()
{
  uint64_t v2 = *(int **)((*MEMORY[0x1E4FBC8C8] & *v0) + 0x138);
  uint64_t v5 = (uint64_t (*)(void))((char *)v2 + *v2);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1D79D8780;
  return v5();
}

uint64_t dispatch thunk of IdentityManagementUIClient.fetchExtendedReviewDisplayInfo(_:proofingOptions:)(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(int **)((*MEMORY[0x1E4FBC8C8] & *v2) + 0x140);
  long long v9 = (uint64_t (*)(uint64_t, uint64_t))((char *)v6 + *v6);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_1D79D8780;
  return v9(a1, a2);
}

uint64_t dispatch thunk of IdentityManagementUIClient.fetchBiomeFedStatsUI(completion:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x148))();
}

uint64_t dispatch thunk of IdentityManagementUIClient.saveIdentityProofingBiomeDataSharingUserConsent(_:state:proofingOptions:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v10 = *(int **)((*MEMORY[0x1E4FBC8C8] & *v4) + 0x150);
  uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)v10 + *v10);
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v11;
  *uint64_t v11 = v5;
  v11[1] = sub_1D7874050;
  return v13(a1, a2, a3, a4);
}

uint64_t dispatch thunk of IdentityManagementUIClient.clearDataAfterTerminalProofingState(state:proofingOptions:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = *(int **)((*MEMORY[0x1E4FBC8C8] & *v3) + 0x158);
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)v8 + *v8);
  long long v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *long long v9 = v4;
  v9[1] = sub_1D7874050;
  return v11(a1, a2, a3);
}

uint64_t dispatch thunk of IdentityManagementUIClient.invalidate()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x160))();
}

uint64_t dispatch thunk of IdentityManagementUIClient.globalAuthACLTemplateUUIDs()()
{
  uint64_t v2 = *(int **)((*MEMORY[0x1E4FBC8C8] & *v0) + 0x168);
  uint64_t v5 = (uint64_t (*)(void))((char *)v2 + *v2);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1D79D8780;
  return v5();
}

uint64_t sub_1D79D29A0()
{
  uint64_t v2 = *(const void **)(v0 + 16);
  uint64_t v3 = *(void **)(v0 + 24);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_1D7874050;
  uint64_t v5 = (uint64_t (*)(const void *, void *))((char *)&dword_1EA846330 + dword_1EA846330);
  return v5(v2, v3);
}

uint64_t sub_1D79D2A50()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  uint64_t v4 = (int *)v0[4];
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *uint64_t v5 = v1;
  v5[1] = sub_1D7874050;
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t, int *))((char *)&dword_1EA8471F8 + dword_1EA8471F8);
  return v6(v2, v3, v4);
}

uint64_t sub_1D79D2B14(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = (int *)v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_1D7874050;
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, int *))((char *)&dword_1EA847200 + dword_1EA847200);
  return v8(a1, v4, v5, v6);
}

uint64_t sub_1D79D2BE4()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  uint64_t v5 = (void *)v0[4];
  uint64_t v4 = (void *)v0[5];
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v6;
  *uint64_t v6 = v1;
  v6[1] = sub_1D7874050;
  uint64_t v7 = (uint64_t (*)(int, uint64_t, void *, void *))((char *)&dword_1EA846350 + dword_1EA846350);
  return v7(v2, v3, v5, v4);
}

uint64_t sub_1D79D2CAC()
{
  _Block_release(*(const void **)(v0 + 40));
  return MEMORY[0x1F4186498](v0, 56, 7);
}

uint64_t sub_1D79D2CF4()
{
  char v2 = *(unsigned char *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v4 = *(void *)(v0 + 32);
  uint64_t v6 = *(void **)(v0 + 40);
  uint64_t v5 = *(void **)(v0 + 48);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v7;
  *uint64_t v7 = v1;
  v7[1] = sub_1D7874050;
  uint64_t v8 = (uint64_t (*)(char, int, uint64_t, void *, void *))((char *)&dword_1EA846370 + dword_1EA846370);
  return v8(v2, v3, v4, v6, v5);
}

uint64_t sub_1D79D2DC4(uint64_t a1, int a2, uint64_t a3, void (**a4)(void, void))
{
  int v62 = a2;
  uint64_t v7 = sub_1D7A9B5F8();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7, v9, v10, v11, v12, v13, v14, v15);
  unint64_t v17 = (char *)&v60 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1D7A9B1A8();
  uint64_t v19 = *(void *)(v18 - 8);
  MEMORY[0x1F4188790](v18, v20, v21, v22, v23, v24, v25, v26);
  id v28 = (char *)&v60 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = swift_allocObject();
  *(void *)(v29 + 16) = a4;
  uint64_t v30 = *(void **)(a3 + OBJC_IVAR____TtC13CoreIDVShared26IdentityManagementUIClient_remoteObjectProxy);
  if (v30)
  {
    uint64_t v60 = a3;
    uint64_t v61 = a1;
    uint64_t v31 = v29;
    _Block_copy(a4);
    swift_unknownObjectRetain();
    sub_1D7A9B198();
    uint64_t v32 = sub_1D7A9B158();
    uint64_t v34 = v33;
    (*(void (**)(char *, uint64_t))(v19 + 8))(v28, v18);
    uint64_t v35 = swift_allocObject();
    uint64_t v36 = swift_weakInit();
    MEMORY[0x1F4188790](v36, v37, v38, v39, v40, v41, v42, v43);
    *(&v60 - 6) = v35;
    *(&v60 - 5) = v32;
    *(&v60 - 4) = v34;
    *(&v60 - 3) = (uint64_t)sub_1D79D5B58;
    *(&v60 - 2) = v31;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF9410);
    sub_1D7A9C7E8();
    swift_release();
    uint64_t v44 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v45 = (void *)swift_allocObject();
    _OWORD v45[2] = v44;
    v45[3] = v32;
    v45[4] = v34;
    v45[5] = sub_1D79D5B58;
    v45[6] = v31;
    aBlock[4] = sub_1D79CF6BC;
    aBlock[5] = v45;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1D79C1C04;
    aBlock[3] = &block_descriptor_575;
    objc_super v46 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    objc_msgSend(v30, sel_triggerAssetsUploadWithProofingOptions_canUploadOnExpensiveNetwork_completion_, v61, v62 & 1, v46);
    _Block_release(v46);
    swift_release();
    return swift_unknownObjectRelease();
  }
  else
  {
    _Block_copy(a4);
    if (qword_1EBDF9DC8 != -1) {
      swift_once();
    }
    uint64_t v48 = __swift_project_value_buffer(v7, (uint64_t)qword_1EBDFBE70);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v17, v48, v7);
    long long v49 = sub_1D7A9B5D8();
    os_log_type_t v50 = sub_1D7A9C748();
    if (os_log_type_enabled(v49, v50))
    {
      uint64_t v51 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v51 = 0;
      _os_log_impl(&dword_1D7853000, v49, v50, "Cannot invoke triggerAssetsUpload because no proxy is set", v51, 2u);
      MEMORY[0x1D947D740](v51, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v8 + 8))(v17, v7);
    __int16 v52 = *(_WORD *)(a3 + OBJC_IVAR____TtC13CoreIDVShared26IdentityManagementUIClient_remoteObjectProxyError);
    uint64_t v53 = *(void *)(a3 + OBJC_IVAR____TtC13CoreIDVShared26IdentityManagementUIClient_remoteObjectProxyError + 8);
    uint64_t v54 = *(void *)(a3 + OBJC_IVAR____TtC13CoreIDVShared26IdentityManagementUIClient_remoteObjectProxyError + 16);
    uint64_t v55 = *(void **)(a3 + OBJC_IVAR____TtC13CoreIDVShared26IdentityManagementUIClient_remoteObjectProxyError + 24);
    sub_1D7860544();
    uint64_t v56 = (void *)swift_allocError();
    *(_WORD *)uint64_t v57 = v52;
    *(void *)(v57 + 8) = v53;
    *(void *)(v57 + 16) = v54;
    *(void *)(v57 + 24) = v55;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v58 = v55;
    uint64_t v59 = (void *)sub_1D7A9AE48();
    ((void (**)(void, void *))a4)[2](a4, v59);

    return swift_release();
  }
}

uint64_t sub_1D79D32C0(uint64_t a1, void (**a2)(void, void, void))
{
  uint64_t v4 = sub_1D7A9B5F8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4, v6, v7, v8, v9, v10, v11, v12);
  uint64_t v14 = (char *)&aBlock[-1] - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1D7A9B1A8();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15, v17, v18, v19, v20, v21, v22, v23);
  uint64_t v25 = (char *)&aBlock[-1] - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = swift_allocObject();
  *(void *)(v26 + 16) = a2;
  uint64_t v27 = *(void **)(a1 + OBJC_IVAR____TtC13CoreIDVShared26IdentityManagementUIClient_remoteObjectProxy);
  if (v27)
  {
    _Block_copy(a2);
    swift_unknownObjectRetain();
    sub_1D7A9B198();
    uint64_t v28 = sub_1D7A9B158();
    uint64_t v58 = a1;
    uint64_t v30 = v29;
    (*(void (**)(char *, uint64_t))(v16 + 8))(v25, v15);
    uint64_t v31 = swift_allocObject();
    uint64_t v32 = swift_weakInit();
    MEMORY[0x1F4188790](v32, v33, v34, v35, v36, v37, v38, v39);
    *(&v58 - 6) = v31;
    *(&v58 - 5) = v28;
    *(&v58 - 4) = v30;
    *(&v58 - 3) = (uint64_t)sub_1D79D57E0;
    *(&v58 - 2) = v26;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF9410);
    sub_1D7A9C7E8();
    swift_release();
    uint64_t v40 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v41 = (void *)swift_allocObject();
    _OWORD v41[2] = v40;
    v41[3] = v28;
    v41[4] = v30;
    v41[5] = sub_1D79D57E0;
    v41[6] = v26;
    aBlock[4] = sub_1D79CFC20;
    aBlock[5] = v41;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1D79C3F24;
    aBlock[3] = &block_descriptor_517;
    uint64_t v42 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    objc_msgSend(v27, sel_fetchImageQualitySettingsWithCompletion_, v42);
    _Block_release(v42);
    swift_release();
    return swift_unknownObjectRelease();
  }
  else
  {
    uint64_t v44 = a1;
    _Block_copy(a2);
    if (qword_1EBDF9DC8 != -1) {
      swift_once();
    }
    uint64_t v45 = __swift_project_value_buffer(v4, (uint64_t)qword_1EBDFBE70);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v14, v45, v4);
    objc_super v46 = sub_1D7A9B5D8();
    os_log_type_t v47 = sub_1D7A9C748();
    if (os_log_type_enabled(v46, v47))
    {
      uint64_t v48 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v48 = 0;
      _os_log_impl(&dword_1D7853000, v46, v47, "Cannot invoke fetchImageQualitySettings because no proxy is set", v48, 2u);
      MEMORY[0x1D947D740](v48, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v5 + 8))(v14, v4);
    uint64_t v49 = v44 + OBJC_IVAR____TtC13CoreIDVShared26IdentityManagementUIClient_remoteObjectProxyError;
    __int16 v50 = *(_WORD *)(v44 + OBJC_IVAR____TtC13CoreIDVShared26IdentityManagementUIClient_remoteObjectProxyError);
    uint64_t v51 = *(void *)(v44 + OBJC_IVAR____TtC13CoreIDVShared26IdentityManagementUIClient_remoteObjectProxyError + 8);
    uint64_t v52 = *(void *)(v44 + OBJC_IVAR____TtC13CoreIDVShared26IdentityManagementUIClient_remoteObjectProxyError + 16);
    uint64_t v53 = *(void **)(v49 + 24);
    sub_1D7860544();
    uint64_t v54 = (void *)swift_allocError();
    *(_WORD *)uint64_t v55 = v50;
    *(void *)(v55 + 8) = v51;
    *(void *)(v55 + 16) = v52;
    *(void *)(v55 + 24) = v53;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v56 = v53;
    uint64_t v57 = (void *)sub_1D7A9AE48();
    ((void (**)(void, void, void *))a2)[2](a2, 0, v57);

    return swift_release();
  }
}

uint64_t sub_1D79D37A8(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, void (**a6)(void, void, void))
{
  uint64_t v66 = a2;
  uint64_t v67 = a4;
  int v64 = a3;
  uint64_t v65 = a1;
  uint64_t v8 = sub_1D7A9B5F8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8, v10, v11, v12, v13, v14, v15, v16);
  uint64_t v18 = &v63[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v19 = sub_1D7A9B1A8();
  uint64_t v20 = *(void *)(v19 - 8);
  MEMORY[0x1F4188790](v19, v21, v22, v23, v24, v25, v26, v27);
  uint64_t v29 = &v63[-((v28 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v30 = swift_allocObject();
  *(void *)(v30 + 16) = a6;
  uint64_t v31 = *(void **)(a5 + OBJC_IVAR____TtC13CoreIDVShared26IdentityManagementUIClient_remoteObjectProxy);
  if (v31)
  {
    _Block_copy(a6);
    swift_unknownObjectRetain();
    sub_1D7A9B198();
    uint64_t v32 = sub_1D7A9B158();
    uint64_t v34 = v33;
    (*(void (**)(unsigned char *, uint64_t))(v20 + 8))(v29, v19);
    uint64_t v35 = swift_allocObject();
    uint64_t v36 = swift_weakInit();
    MEMORY[0x1F4188790](v36, v37, v38, v39, v40, v41, v42, v43);
    *(void *)&v63[-48] = v35;
    *(void *)&v63[-40] = v32;
    *(void *)&v63[-32] = v34;
    *(void *)&v63[-24] = sub_1D79D85D4;
    *(void *)&v63[-16] = v30;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF9410);
    sub_1D7A9C7E8();
    swift_release();
    uint64_t v44 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v45 = (void *)swift_allocObject();
    _OWORD v45[2] = v44;
    v45[3] = v32;
    v45[4] = v34;
    v45[5] = sub_1D79D85D4;
    v45[6] = v30;
    aBlock[4] = sub_1D79CFCAC;
    aBlock[5] = v45;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1D79C3F24;
    aBlock[3] = &block_descriptor_504;
    objc_super v46 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    objc_msgSend(v31, sel_proofIdentity_::totalUploadAssetsFileSizeInBytes_completion_, v65, v66, v64 & 1, v67, v46);
    _Block_release(v46);
    swift_release();
    return swift_unknownObjectRelease();
  }
  else
  {
    _Block_copy(a6);
    if (qword_1EBDF9DC8 != -1) {
      swift_once();
    }
    uint64_t v48 = __swift_project_value_buffer(v8, (uint64_t)qword_1EBDFBE70);
    swift_beginAccess();
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v9 + 16))(v18, v48, v8);
    uint64_t v49 = sub_1D7A9B5D8();
    os_log_type_t v50 = sub_1D7A9C748();
    if (os_log_type_enabled(v49, v50))
    {
      uint64_t v51 = a5;
      uint64_t v52 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v52 = 0;
      _os_log_impl(&dword_1D7853000, v49, v50, "Cannot invoke proofIdentity because no proxy is set", v52, 2u);
      uint64_t v53 = v52;
      a5 = v51;
      MEMORY[0x1D947D740](v53, -1, -1);
    }

    (*(void (**)(unsigned char *, uint64_t))(v9 + 8))(v18, v8);
    uint64_t v54 = (void *)(a5 + OBJC_IVAR____TtC13CoreIDVShared26IdentityManagementUIClient_remoteObjectProxyError);
    __int16 v55 = *(_WORD *)(a5 + OBJC_IVAR____TtC13CoreIDVShared26IdentityManagementUIClient_remoteObjectProxyError);
    uint64_t v56 = v54[1];
    uint64_t v57 = v54[2];
    uint64_t v58 = (void *)v54[3];
    sub_1D7860544();
    uint64_t v59 = (void *)swift_allocError();
    *(_WORD *)uint64_t v60 = v55;
    *(void *)(v60 + 8) = v56;
    *(void *)(v60 + 16) = v57;
    *(void *)(v60 + 24) = v58;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v61 = v58;
    int v62 = (void *)sub_1D7A9AE48();
    ((void (**)(void, void, void *))a6)[2](a6, 0, v62);

    return swift_release();
  }
}

void sub_1D79D3CB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (**a5)(void, void, void))
{
  uint64_t v61 = a2;
  uint64_t v62 = a3;
  uint64_t v60 = a1;
  uint64_t v7 = sub_1D7A9B5F8();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7, v9, v10, v11, v12, v13, v14, v15);
  uint64_t v17 = (char *)&v60 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1D7A9B1A8();
  uint64_t v19 = *(void *)(v18 - 8);
  MEMORY[0x1F4188790](v18, v20, v21, v22, v23, v24, v25, v26);
  uint64_t v28 = (char *)&v60 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = swift_allocObject();
  *(void *)(v29 + 16) = a5;
  uint64_t v30 = *(void **)(a4 + OBJC_IVAR____TtC13CoreIDVShared26IdentityManagementUIClient_remoteObjectProxy);
  if (v30)
  {
    _Block_copy(a5);
    swift_unknownObjectRetain();
    sub_1D7A9B198();
    uint64_t v31 = sub_1D7A9B158();
    uint64_t v33 = v32;
    (*(void (**)(char *, uint64_t))(v19 + 8))(v28, v18);
    uint64_t v34 = swift_allocObject();
    uint64_t v35 = swift_weakInit();
    MEMORY[0x1F4188790](v35, v36, v37, v38, v39, v40, v41, v42);
    *(&v60 - 6) = v34;
    *(&v60 - 5) = v31;
    *(&v60 - 4) = v33;
    *(&v60 - 3) = (uint64_t)sub_1D79D85D4;
    *(&v60 - 2) = v29;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF9410);
    sub_1D7A9C7E8();
    swift_release();
    uint64_t v43 = (void *)sub_1D7A9BF98();
    uint64_t v44 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v45 = (void *)swift_allocObject();
    _OWORD v45[2] = v44;
    v45[3] = v31;
    v45[4] = v33;
    v45[5] = sub_1D79D85D4;
    v45[6] = v29;
    aBlock[4] = sub_1D79CFD48;
    aBlock[5] = v45;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1D79C3F24;
    aBlock[3] = &block_descriptor_490;
    objc_super v46 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    objc_msgSend(v30, sel_proofIdentityUsing_proofingOptions_completion_, v43, v62, v46, v60, v61);
    _Block_release(v46);
    swift_release();
    swift_unknownObjectRelease();
  }
  else
  {
    _Block_copy(a5);
    if (qword_1EBDF9DC8 != -1) {
      swift_once();
    }
    uint64_t v47 = __swift_project_value_buffer(v7, (uint64_t)qword_1EBDFBE70);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v17, v47, v7);
    uint64_t v48 = sub_1D7A9B5D8();
    os_log_type_t v49 = sub_1D7A9C748();
    if (os_log_type_enabled(v48, v49))
    {
      os_log_type_t v50 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_type_t v50 = 0;
      _os_log_impl(&dword_1D7853000, v48, v49, "Cannot invoke proofIdentity because no proxy is set", v50, 2u);
      MEMORY[0x1D947D740](v50, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v8 + 8))(v17, v7);
    uint64_t v51 = a4 + OBJC_IVAR____TtC13CoreIDVShared26IdentityManagementUIClient_remoteObjectProxyError;
    __int16 v52 = *(_WORD *)(a4 + OBJC_IVAR____TtC13CoreIDVShared26IdentityManagementUIClient_remoteObjectProxyError);
    uint64_t v53 = *(void *)(a4 + OBJC_IVAR____TtC13CoreIDVShared26IdentityManagementUIClient_remoteObjectProxyError + 8);
    uint64_t v54 = *(void *)(a4 + OBJC_IVAR____TtC13CoreIDVShared26IdentityManagementUIClient_remoteObjectProxyError + 16);
    __int16 v55 = *(void **)(v51 + 24);
    sub_1D7860544();
    uint64_t v56 = (void *)swift_allocError();
    *(_WORD *)uint64_t v57 = v52;
    *(void *)(v57 + 8) = v53;
    *(void *)(v57 + 16) = v54;
    *(void *)(v57 + 24) = v55;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v58 = v55;
    uint64_t v59 = (void *)sub_1D7A9AE48();
    ((void (**)(void, void, void *))a5)[2](a5, 0, v59);

    swift_release();
  }
}

uint64_t sub_1D79D41B0(uint64_t a1, void (**a2)(void, void, void))
{
  uint64_t v4 = sub_1D7A9B5F8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4, v6, v7, v8, v9, v10, v11, v12);
  uint64_t v14 = (char *)&aBlock[-1] - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1D7A9B1A8();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15, v17, v18, v19, v20, v21, v22, v23);
  uint64_t v25 = (char *)&aBlock[-1] - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = swift_allocObject();
  *(void *)(v26 + 16) = a2;
  uint64_t v27 = *(void **)(a1 + OBJC_IVAR____TtC13CoreIDVShared26IdentityManagementUIClient_remoteObjectProxy);
  if (v27)
  {
    _Block_copy(a2);
    swift_unknownObjectRetain();
    sub_1D7A9B198();
    uint64_t v28 = sub_1D7A9B158();
    uint64_t v58 = a1;
    uint64_t v30 = v29;
    (*(void (**)(char *, uint64_t))(v16 + 8))(v25, v15);
    uint64_t v31 = swift_allocObject();
    uint64_t v32 = swift_weakInit();
    MEMORY[0x1F4188790](v32, v33, v34, v35, v36, v37, v38, v39);
    *(&v58 - 6) = v31;
    *(&v58 - 5) = v28;
    *(&v58 - 4) = v30;
    *(&v58 - 3) = (uint64_t)sub_1D79D4E38;
    *(&v58 - 2) = v26;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF9410);
    sub_1D7A9C7E8();
    swift_release();
    uint64_t v40 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v41 = (void *)swift_allocObject();
    _OWORD v41[2] = v40;
    v41[3] = v28;
    v41[4] = v30;
    v41[5] = sub_1D79D4E38;
    v41[6] = v26;
    aBlock[4] = sub_1D79D09FC;
    aBlock[5] = v41;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1D79CAA70;
    aBlock[3] = &block_descriptor_312;
    uint64_t v42 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    objc_msgSend(v27, sel_fetchTermsAndConditionsWithCompletion_, v42);
    _Block_release(v42);
    swift_release();
    return swift_unknownObjectRelease();
  }
  else
  {
    uint64_t v44 = a1;
    _Block_copy(a2);
    if (qword_1EBDF9DC8 != -1) {
      swift_once();
    }
    uint64_t v45 = __swift_project_value_buffer(v4, (uint64_t)qword_1EBDFBE70);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v14, v45, v4);
    objc_super v46 = sub_1D7A9B5D8();
    os_log_type_t v47 = sub_1D7A9C748();
    if (os_log_type_enabled(v46, v47))
    {
      uint64_t v48 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v48 = 0;
      _os_log_impl(&dword_1D7853000, v46, v47, "Cannot invoke fetchTermsAndConditions because no proxy is set", v48, 2u);
      MEMORY[0x1D947D740](v48, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v5 + 8))(v14, v4);
    uint64_t v49 = v44 + OBJC_IVAR____TtC13CoreIDVShared26IdentityManagementUIClient_remoteObjectProxyError;
    __int16 v50 = *(_WORD *)(v44 + OBJC_IVAR____TtC13CoreIDVShared26IdentityManagementUIClient_remoteObjectProxyError);
    uint64_t v51 = *(void *)(v44 + OBJC_IVAR____TtC13CoreIDVShared26IdentityManagementUIClient_remoteObjectProxyError + 8);
    uint64_t v52 = *(void *)(v44 + OBJC_IVAR____TtC13CoreIDVShared26IdentityManagementUIClient_remoteObjectProxyError + 16);
    uint64_t v53 = *(void **)(v49 + 24);
    sub_1D7860544();
    uint64_t v54 = (void *)swift_allocError();
    *(_WORD *)uint64_t v55 = v50;
    *(void *)(v55 + 8) = v51;
    *(void *)(v55 + 16) = v52;
    *(void *)(v55 + 24) = v53;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v56 = v53;
    uint64_t v57 = (void *)sub_1D7A9AE48();
    ((void (**)(void, void, void *))a2)[2](a2, 0, v57);

    return swift_release();
  }
}

uint64_t sub_1D79D4698(uint64_t a1, void (**a2)(void, void, void))
{
  uint64_t v4 = sub_1D7A9B5F8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4, v6, v7, v8, v9, v10, v11, v12);
  uint64_t v14 = (char *)&aBlock[-1] - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1D7A9B1A8();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15, v17, v18, v19, v20, v21, v22, v23);
  uint64_t v25 = (char *)&aBlock[-1] - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = swift_allocObject();
  *(void *)(v26 + 16) = a2;
  uint64_t v27 = *(void **)(a1 + OBJC_IVAR____TtC13CoreIDVShared26IdentityManagementUIClient_remoteObjectProxy);
  if (v27)
  {
    _Block_copy(a2);
    swift_unknownObjectRetain();
    sub_1D7A9B198();
    uint64_t v28 = sub_1D7A9B158();
    uint64_t v58 = a1;
    uint64_t v30 = v29;
    (*(void (**)(char *, uint64_t))(v16 + 8))(v25, v15);
    uint64_t v31 = swift_allocObject();
    uint64_t v32 = swift_weakInit();
    MEMORY[0x1F4188790](v32, v33, v34, v35, v36, v37, v38, v39);
    *(&v58 - 6) = v31;
    *(&v58 - 5) = v28;
    *(&v58 - 4) = v30;
    *(&v58 - 3) = (uint64_t)sub_1D79D85D4;
    *(&v58 - 2) = v26;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF9410);
    sub_1D7A9C7E8();
    swift_release();
    uint64_t v40 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v41 = (void *)swift_allocObject();
    _OWORD v41[2] = v40;
    v41[3] = v28;
    v41[4] = v30;
    v41[5] = sub_1D79D85D4;
    v41[6] = v26;
    aBlock[4] = sub_1D79D0D68;
    aBlock[5] = v41;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1D79C3F24;
    aBlock[3] = &block_descriptor_254_0;
    uint64_t v42 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    objc_msgSend(v27, sel_fetchBiomeFedStatsUIWithCompletion_, v42);
    _Block_release(v42);
    swift_release();
    return swift_unknownObjectRelease();
  }
  else
  {
    uint64_t v44 = a1;
    _Block_copy(a2);
    if (qword_1EBDF9DC8 != -1) {
      swift_once();
    }
    uint64_t v45 = __swift_project_value_buffer(v4, (uint64_t)qword_1EBDFBE70);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v14, v45, v4);
    objc_super v46 = sub_1D7A9B5D8();
    os_log_type_t v47 = sub_1D7A9C748();
    if (os_log_type_enabled(v46, v47))
    {
      uint64_t v48 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v48 = 0;
      _os_log_impl(&dword_1D7853000, v46, v47, "Cannot invoke fetchBiomeFedStatsUI because no proxy is set", v48, 2u);
      MEMORY[0x1D947D740](v48, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v5 + 8))(v14, v4);
    uint64_t v49 = v44 + OBJC_IVAR____TtC13CoreIDVShared26IdentityManagementUIClient_remoteObjectProxyError;
    __int16 v50 = *(_WORD *)(v44 + OBJC_IVAR____TtC13CoreIDVShared26IdentityManagementUIClient_remoteObjectProxyError);
    uint64_t v51 = *(void *)(v44 + OBJC_IVAR____TtC13CoreIDVShared26IdentityManagementUIClient_remoteObjectProxyError + 8);
    uint64_t v52 = *(void *)(v44 + OBJC_IVAR____TtC13CoreIDVShared26IdentityManagementUIClient_remoteObjectProxyError + 16);
    uint64_t v53 = *(void **)(v49 + 24);
    sub_1D7860544();
    uint64_t v54 = (void *)swift_allocError();
    *(_WORD *)uint64_t v55 = v50;
    *(void *)(v55 + 8) = v51;
    *(void *)(v55 + 16) = v52;
    *(void *)(v55 + 24) = v53;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v56 = v53;
    uint64_t v57 = (void *)sub_1D7A9AE48();
    ((void (**)(void, void, void *))a2)[2](a2, 0, v57);

    return swift_release();
  }
}

uint64_t sub_1D79D4B80()
{
  _Block_release(*(const void **)(v0 + 16));
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1D79D4BB8()
{
  return objectdestroy_5Tm(MEMORY[0x1E4FBC8D0], MEMORY[0x1E4FBC898]);
}

uint64_t sub_1D79D4BE8()
{
  char v2 = (void *)v0[2];
  uint64_t v3 = v0[3];
  uint64_t v5 = (void *)v0[4];
  uint64_t v4 = (void *)v0[5];
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v6;
  *uint64_t v6 = v1;
  v6[1] = sub_1D7874050;
  uint64_t v7 = (uint64_t (*)(void *, uint64_t, void *, void *))((char *)&dword_1EA846390 + dword_1EA846390);
  return v7(v2, v3, v5, v4);
}

uint64_t sub_1D79D4CB4()
{
  char v2 = *(const void **)(v0 + 16);
  uint64_t v3 = *(void **)(v0 + 24);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_1D7874050;
  uint64_t v5 = (uint64_t (*)(const void *, void *))((char *)&dword_1EA8463B0 + dword_1EA8463B0);
  return v5(v2, v3);
}

uint64_t sub_1D79D4D6C()
{
  char v2 = *(void **)(v0 + 16);
  char v3 = *(unsigned char *)(v0 + 24);
  uint64_t v5 = *(void **)(v0 + 32);
  uint64_t v4 = *(void **)(v0 + 40);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v6;
  *uint64_t v6 = v1;
  v6[1] = sub_1D7874050;
  uint64_t v7 = (uint64_t (*)(void *, char, void *, void *))((char *)&dword_1EA8463D0 + dword_1EA8463D0);
  return v7(v2, v3, v5, v4);
}

void sub_1D79D4E38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1D79CAB20(a1, a2, a3, *(void *)(v3 + 16));
}

uint64_t sub_1D79D4E40()
{
  return objectdestroy_5Tm(MEMORY[0x1E4FBC8D0], MEMORY[0x1E4FBC898]);
}

uint64_t sub_1D79D4E6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1D79CA908(a1, a2, a3, *(void *)(v3 + 16), *(void *)(v3 + 24), *(void *)(v3 + 32), *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 40));
}

uint64_t sub_1D79D4E80()
{
  char v2 = *(const void **)(v0 + 16);
  uint64_t v3 = *(void **)(v0 + 24);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_1D7874050;
  uint64_t v5 = (uint64_t (*)(const void *, void *))((char *)&dword_1EA8463F0 + dword_1EA8463F0);
  return v5(v2, v3);
}

uint64_t sub_1D79D4F38()
{
  char v2 = *(const void **)(v0 + 16);
  uint64_t v3 = *(void **)(v0 + 24);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_1D7874050;
  uint64_t v5 = (uint64_t (*)(const void *, void *))((char *)&dword_1EA846410 + dword_1EA846410);
  return v5(v2, v3);
}

uint64_t sub_1D79D4FF0()
{
  char v2 = *(const void **)(v0 + 16);
  uint64_t v3 = *(void **)(v0 + 24);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_1D7874050;
  uint64_t v5 = (uint64_t (*)(const void *, void *))((char *)&dword_1EA846430 + dword_1EA846430);
  return v5(v2, v3);
}

uint64_t sub_1D79D50A8()
{
  char v2 = *(const void **)(v0 + 16);
  uint64_t v3 = *(void **)(v0 + 24);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_1D7874050;
  uint64_t v5 = (uint64_t (*)(const void *, void *))((char *)&dword_1EA846450 + dword_1EA846450);
  return v5(v2, v3);
}

uint64_t sub_1D79D5160()
{
  char v2 = *(const void **)(v0 + 16);
  uint64_t v3 = *(void **)(v0 + 24);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_1D7874050;
  uint64_t v5 = (uint64_t (*)(const void *, void *))((char *)&dword_1EA846470 + dword_1EA846470);
  return v5(v2, v3);
}

uint64_t sub_1D79D5218()
{
  char v2 = (void *)v0[2];
  uint64_t v3 = (void *)v0[3];
  uint64_t v5 = (void *)v0[4];
  uint64_t v4 = (void *)v0[5];
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v6;
  *uint64_t v6 = v1;
  v6[1] = sub_1D7874050;
  uint64_t v7 = (uint64_t (*)(void *, void *, void *, void *))((char *)&dword_1EA846490 + dword_1EA846490);
  return v7(v2, v3, v5, v4);
}

uint64_t sub_1D79D52E4()
{
  char v2 = (void *)v0[2];
  uint64_t v3 = v0[3];
  uint64_t v5 = (void *)v0[4];
  uint64_t v4 = (void *)v0[5];
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v6;
  *uint64_t v6 = v1;
  v6[1] = sub_1D7874050;
  uint64_t v7 = (uint64_t (*)(void *, uint64_t, void *, void *))((char *)&dword_1EA8464B0 + dword_1EA8464B0);
  return v7(v2, v3, v5, v4);
}

uint64_t sub_1D79D53B0()
{
  char v2 = (void *)v0[2];
  uint64_t v3 = v0[3];
  uint64_t v5 = (void *)v0[4];
  uint64_t v4 = (void *)v0[5];
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v6;
  *uint64_t v6 = v1;
  v6[1] = sub_1D7874050;
  uint64_t v7 = (uint64_t (*)(void *, uint64_t, void *, void *))((char *)&dword_1EA8464D0 + dword_1EA8464D0);
  return v7(v2, v3, v5, v4);
}

uint64_t sub_1D79D5478()
{
  _Block_release(*(const void **)(v0 + 24));

  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1D79D54B8()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = (void *)v0[3];
  uint64_t v4 = (void *)v0[4];
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *uint64_t v5 = v1;
  v5[1] = sub_1D7874050;
  uint64_t v6 = (uint64_t (*)(uint64_t, void *, void *))((char *)&dword_1EA8464F0 + dword_1EA8464F0);
  return v6(v2, v3, v4);
}

uint64_t objectdestroy_389Tm()
{
  _Block_release(*(const void **)(v0 + 32));
  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_1D79D55C8()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  uint64_t v5 = (void *)v0[4];
  uint64_t v4 = (void *)v0[5];
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v6;
  *uint64_t v6 = v1;
  v6[1] = sub_1D7874050;
  uint64_t v7 = (uint64_t (*)(int, int, void *, void *))((char *)&dword_1EA846510 + dword_1EA846510);
  return v7(v2, v3, v5, v4);
}

uint64_t objectdestroy_200Tm()
{
  _Block_release(*(const void **)(v0 + 16));

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1D79D56D4()
{
  uint64_t v2 = *(const void **)(v0 + 16);
  uint64_t v3 = *(void **)(v0 + 24);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_1D7874050;
  uint64_t v5 = (uint64_t (*)(const void *, void *))((char *)&dword_1EA846530 + dword_1EA846530);
  return v5(v2, v3);
}

uint64_t sub_1D79D5788()
{
  return objectdestroy_5Tm(MEMORY[0x1E4FBC8D0], MEMORY[0x1E4FBC898]);
}

uint64_t sub_1D79D57B4()
{
  return objectdestroy_5Tm(MEMORY[0x1E4FBC8D0], MEMORY[0x1E4FBC898]);
}

void sub_1D79D57E0(uint64_t a1, uint64_t a2)
{
  sub_1D79CCA58(a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_1D79D57FC()
{
  return objectdestroy_5Tm(MEMORY[0x1E4FBC8D0], MEMORY[0x1E4FBC898]);
}

uint64_t objectdestroy_213Tm()
{
  _Block_release(*(const void **)(v0 + 32));
  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_1D79D5874()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  uint64_t v5 = (void *)v0[4];
  uint64_t v4 = (void *)v0[5];
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v6;
  *uint64_t v6 = v1;
  v6[1] = sub_1D7874050;
  uint64_t v7 = (uint64_t (*)(int, uint64_t, void *, void *))((char *)&dword_1EA846550 + dword_1EA846550);
  return v7(v2, v3, v5, v4);
}

uint64_t sub_1D79D593C()
{
  _Block_release(*(const void **)(v0 + 24));
  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1D79D5984()
{
  uint64_t v2 = (void *)v0[2];
  uint64_t v3 = (void *)v0[3];
  uint64_t v4 = (void *)v0[4];
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *uint64_t v5 = v1;
  v5[1] = sub_1D7874050;
  uint64_t v6 = (uint64_t (*)(void *, void *, void *))((char *)&dword_1EA846570 + dword_1EA846570);
  return v6(v2, v3, v4);
}

uint64_t sub_1D79D5A40()
{
  _Block_release(*(const void **)(v0 + 40));
  return MEMORY[0x1F4186498](v0, 56, 7);
}

uint64_t sub_1D79D5A88()
{
  uint64_t v2 = (void *)v0[2];
  uint64_t v3 = v0[3];
  uint64_t v4 = v0[4];
  uint64_t v5 = (void *)v0[5];
  uint64_t v6 = (void *)v0[6];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v7;
  *uint64_t v7 = v1;
  v7[1] = sub_1D7874050;
  uint64_t v8 = (uint64_t (*)(void *, uint64_t, uint64_t, void *, void *))((char *)&dword_1EA846590 + dword_1EA846590);
  return v8(v2, v3, v4, v5, v6);
}

void sub_1D79D5B58(uint64_t a1)
{
  sub_1D7A30D70(a1, *(void *)(v1 + 16));
}

uint64_t sub_1D79D5B60(uint64_t (*a1)(void, void, void, void, void))
{
  return a1(v1[2], v1[3], v1[4], v1[5], v1[6]);
}

uint64_t sub_1D79D5B8C()
{
  return objectdestroy_5Tm(MEMORY[0x1E4FBC8D0], MEMORY[0x1E4FBC898]);
}

uint64_t sub_1D79D5BB8(uint64_t a1)
{
  return sub_1D79C1AB0(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(uint64_t (**)(uint64_t))(v1 + 40));
}

uint64_t sub_1D79D5BC8()
{
  return objectdestroy_5Tm(MEMORY[0x1E4FBC8F8], MEMORY[0x1E4FBC8D0]);
}

uint64_t sub_1D79D5BF4(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_1D7874050;
  return sub_1D79BAD60(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_1D79D5CBC()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1D79D5CF4(uint64_t a1, void *a2)
{
  uint64_t v6 = *(int **)(v2 + 16);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_1D7874050;
  uint64_t v8 = (uint64_t (*)(uint64_t, void *, int *))((char *)&dword_1EA8465C0 + dword_1EA8465C0);
  return v8(a1, a2, v6);
}

uint64_t sub_1D79D5DBC(uint64_t a1)
{
  return sub_1D79BB0F0(a1, v1[2], v1[3], v1[4], &qword_1EA8439D0, (uint64_t)&unk_1F2F24C00, (uint64_t)&unk_1EA8465D8);
}

uint64_t sub_1D79D5E00()
{
  return objectdestroy_586Tm(&qword_1EA8439D0);
}

uint64_t sub_1D79D5E0C(uint64_t a1)
{
  uint64_t v4 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA8439D0) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = v1[2];
  uint64_t v7 = v1[3];
  uint64_t v8 = v1[4];
  uint64_t v9 = (uint64_t)v1 + v5;
  uint64_t v10 = (void *)((char *)v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v11 = *v10;
  uint64_t v12 = v10[1];
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v13;
  *uint64_t v13 = v2;
  v13[1] = sub_1D7874050;
  return sub_1D79BF268(a1, v6, v7, v8, v9, v11, v12);
}

uint64_t sub_1D79D5F4C()
{
  return objectdestroy_590Tm(&qword_1EA8439D0);
}

uint64_t sub_1D79D5F58(void *a1)
{
  return sub_1D79D60C8(a1, &qword_1EA8439D0);
}

uint64_t sub_1D79D5F64()
{
  return objectdestroy_586Tm(&qword_1EBDF8A30);
}

uint64_t sub_1D79D5F70(uint64_t a1)
{
  uint64_t v4 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF8A30) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = v1[2];
  uint64_t v7 = v1[3];
  uint64_t v8 = v1[4];
  uint64_t v9 = (uint64_t)v1 + v5;
  uint64_t v10 = (void *)((char *)v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v11 = *v10;
  uint64_t v12 = v10[1];
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v13;
  *uint64_t v13 = v2;
  v13[1] = sub_1D7874050;
  return sub_1D79C03E8(a1, v6, v7, v8, v9, v11, v12);
}

uint64_t sub_1D79D60B0()
{
  return objectdestroy_590Tm(&qword_1EBDF8A30);
}

uint64_t sub_1D79D60BC(void *a1)
{
  return sub_1D79D60C8(a1, &qword_1EBDF8A30);
}

uint64_t sub_1D79D60C8(void *a1, uint64_t *a2)
{
  uint64_t v5 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(a2) - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  return sub_1D79C0C04(a1, v2 + v6, *(void *)(v2 + ((*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8)), a2);
}

uint64_t sub_1D79D6168()
{
  return objectdestroy_5Tm(MEMORY[0x1E4FBC8F8], MEMORY[0x1E4FBC8D0]);
}

uint64_t sub_1D79D6194(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_1D786EC1C;
  return sub_1D79BA690(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_1D79D625C(uint64_t a1, void *a2)
{
  uint64_t v6 = *(int **)(v2 + 16);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_1D7874050;
  uint64_t v8 = (uint64_t (*)(uint64_t, void *, int *))((char *)&dword_1EA846600 + dword_1EA846600);
  return v8(a1, a2, v6);
}

uint64_t sub_1D79D6324()
{
  return objectdestroy_586Tm(&qword_1EA846610);
}

uint64_t sub_1D79D6330(uint64_t a1)
{
  uint64_t v4 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA846610) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = v1[2];
  uint64_t v7 = v1[3];
  uint64_t v8 = v1[4];
  uint64_t v9 = (uint64_t)v1 + v5;
  uint64_t v10 = (void *)((char *)v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v11 = *v10;
  uint64_t v12 = v10[1];
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v13;
  *uint64_t v13 = v2;
  v13[1] = sub_1D7874050;
  return sub_1D79BFB1C(a1, v6, v7, v8, v9, v11, v12);
}

uint64_t sub_1D79D6470()
{
  return objectdestroy_590Tm(&qword_1EA846610);
}

uint64_t sub_1D79D647C(void *a1)
{
  return sub_1D79D60C8(a1, &qword_1EA846610);
}

uint64_t sub_1D79D6488@<X0>(uint64_t *a1@<X8>)
{
  return sub_1D7862868(*(void *)(v1 + 24), *(void *)(v1 + 32), a1);
}

uint64_t sub_1D79D64A8()
{
  return objectdestroy_5Tm(MEMORY[0x1E4FBC8F8], MEMORY[0x1E4FBC8D0]);
}

uint64_t sub_1D79D64D4(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_1D7874050;
  return sub_1D79BA350(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_1D79D659C(uint64_t a1, void *a2)
{
  uint64_t v6 = *(int **)(v2 + 16);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_1D7874050;
  uint64_t v8 = (uint64_t (*)(uint64_t, void *, int *))((char *)&dword_1EA846640 + dword_1EA846640);
  return v8(a1, a2, v6);
}

uint64_t sub_1D79D6664(uint64_t a1)
{
  return sub_1D79BB0F0(a1, v1[2], v1[3], v1[4], &qword_1EA8439D0, (uint64_t)&unk_1F2F24E08, (uint64_t)&unk_1EA846658);
}

uint64_t sub_1D79D66A8()
{
  return objectdestroy_586Tm(&qword_1EA8439D0);
}

uint64_t sub_1D79D66B4(uint64_t a1)
{
  uint64_t v4 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA8439D0) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = v1[2];
  uint64_t v7 = v1[3];
  uint64_t v8 = v1[4];
  uint64_t v9 = (uint64_t)v1 + v5;
  uint64_t v10 = (void *)((char *)v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v11 = *v10;
  uint64_t v12 = v10[1];
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v13;
  *uint64_t v13 = v2;
  v13[1] = sub_1D7874050;
  return sub_1D79BB2E8(a1, v6, v7, v8, v9, v11, v12);
}

uint64_t sub_1D79D67F4()
{
  return objectdestroy_590Tm(&qword_1EA8439D0);
}

uint64_t sub_1D79D6800(uint64_t a1)
{
  return sub_1D79BB0F0(a1, v1[2], v1[3], v1[4], &qword_1EA846668, (uint64_t)&unk_1F2F24E80, (uint64_t)&unk_1EA846678);
}

uint64_t sub_1D79D6844()
{
  return objectdestroy_586Tm(&qword_1EA846668);
}

uint64_t sub_1D79D6850(uint64_t a1)
{
  uint64_t v4 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA846668) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = v1[2];
  uint64_t v7 = v1[3];
  uint64_t v8 = v1[4];
  uint64_t v9 = (uint64_t)v1 + v5;
  uint64_t v10 = (void *)((char *)v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v11 = *v10;
  uint64_t v12 = v10[1];
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v13;
  *uint64_t v13 = v2;
  v13[1] = sub_1D7874050;
  return sub_1D79BEBF8(a1, v6, v7, v8, v9, v11, v12);
}

uint64_t sub_1D79D6990()
{
  return objectdestroy_590Tm(&qword_1EA846668);
}

uint64_t sub_1D79D699C(void *a1)
{
  return sub_1D79D60C8(a1, &qword_1EA846668);
}

uint64_t sub_1D79D69A8@<X0>(uint64_t *a1@<X8>)
{
  return sub_1D7862A6C(*(void *)(v1 + 24), *(void *)(v1 + 32), a1);
}

uint64_t sub_1D79D69C8()
{
  return objectdestroy_5Tm(MEMORY[0x1E4FBC8F8], MEMORY[0x1E4FBC8D0]);
}

uint64_t sub_1D79D69F4(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_1D7874050;
  return sub_1D79BA010(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_1D79D6ABC(uint64_t a1, void *a2)
{
  uint64_t v6 = *(int **)(v2 + 16);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_1D7874050;
  uint64_t v8 = (uint64_t (*)(uint64_t, void *, int *))((char *)&dword_1EA846698 + dword_1EA846698);
  return v8(a1, a2, v6);
}

uint64_t sub_1D79D6B84(uint64_t a1)
{
  return sub_1D79BB0F0(a1, v1[2], v1[3], v1[4], &qword_1EA8466A8, (uint64_t)&unk_1F2F24F48, (uint64_t)&unk_1EA8466B8);
}

uint64_t sub_1D79D6BC8()
{
  return objectdestroy_586Tm(&qword_1EA8466A8);
}

uint64_t sub_1D79D6BD4(uint64_t a1)
{
  uint64_t v4 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA8466A8) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = v1[2];
  uint64_t v7 = v1[3];
  uint64_t v8 = v1[4];
  uint64_t v9 = (uint64_t)v1 + v5;
  uint64_t v10 = (void *)((char *)v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v11 = *v10;
  uint64_t v12 = v10[1];
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v13;
  *uint64_t v13 = v2;
  v13[1] = sub_1D7874050;
  return sub_1D79BE588(a1, v6, v7, v8, v9, v11, v12);
}

uint64_t sub_1D79D6D14()
{
  return objectdestroy_590Tm(&qword_1EA8466A8);
}

uint64_t sub_1D79D6D20(void *a1)
{
  return sub_1D79D60C8(a1, &qword_1EA8466A8);
}

uint64_t sub_1D79D6D2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8425F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D79D6D94()
{
  return objectdestroy_5Tm(MEMORY[0x1E4FBC8F8], MEMORY[0x1E4FBC8D0]);
}

uint64_t sub_1D79D6DC0(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_1D7874050;
  return sub_1D79B9CD0(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_1D79D6E88(uint64_t a1, void *a2)
{
  uint64_t v6 = *(int **)(v2 + 16);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_1D7874050;
  uint64_t v8 = (uint64_t (*)(uint64_t, void *, int *))((char *)&dword_1EA8466D0 + dword_1EA8466D0);
  return v8(a1, a2, v6);
}

uint64_t sub_1D79D6F50(uint64_t a1)
{
  return sub_1D79BB0F0(a1, v1[2], v1[3], v1[4], &qword_1EA8466E0, (uint64_t)&unk_1F2F25010, (uint64_t)&unk_1EA8466F0);
}

uint64_t sub_1D79D6F94()
{
  return objectdestroy_586Tm(&qword_1EA8466E0);
}

uint64_t sub_1D79D6FA0(uint64_t a1)
{
  uint64_t v4 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA8466E0) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = v1[2];
  uint64_t v7 = v1[3];
  uint64_t v8 = v1[4];
  uint64_t v9 = (uint64_t)v1 + v5;
  uint64_t v10 = (void *)((char *)v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v11 = *v10;
  uint64_t v12 = v10[1];
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v13;
  *uint64_t v13 = v2;
  v13[1] = sub_1D7874050;
  return sub_1D79BDCB8(a1, v6, v7, v8, v9, v11, v12);
}

uint64_t sub_1D79D70E0()
{
  return objectdestroy_590Tm(&qword_1EA8466E0);
}

uint64_t sub_1D79D70EC(void *a1)
{
  return sub_1D79D60C8(a1, &qword_1EA8466E0);
}

uint64_t sub_1D79D70F8()
{
  return objectdestroy_5Tm(MEMORY[0x1E4FBC8F8], MEMORY[0x1E4FBC8D0]);
}

uint64_t sub_1D79D7124(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_1D7874050;
  return sub_1D79B9990(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_1D79D71EC(uint64_t a1, void *a2)
{
  uint64_t v6 = *(int **)(v2 + 16);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_1D7874050;
  uint64_t v8 = (uint64_t (*)(uint64_t, void *, int *))((char *)&dword_1EA846708 + dword_1EA846708);
  return v8(a1, a2, v6);
}

uint64_t sub_1D79D72B4(uint64_t a1)
{
  return sub_1D79BB0F0(a1, v1[2], v1[3], v1[4], &qword_1EA846718, (uint64_t)&unk_1F2F250D8, (uint64_t)&unk_1EA846728);
}

uint64_t sub_1D79D72F8()
{
  return objectdestroy_586Tm(&qword_1EA846718);
}

uint64_t sub_1D79D7304(uint64_t a1)
{
  uint64_t v4 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA846718) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = v1[2];
  uint64_t v7 = v1[3];
  uint64_t v8 = v1[4];
  uint64_t v9 = (uint64_t)v1 + v5;
  uint64_t v10 = (void *)((char *)v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v11 = *v10;
  uint64_t v12 = v10[1];
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v13;
  *uint64_t v13 = v2;
  v13[1] = sub_1D7874050;
  return sub_1D79BD648(a1, v6, v7, v8, v9, v11, v12);
}

uint64_t sub_1D79D7444()
{
  return objectdestroy_590Tm(&qword_1EA846718);
}

uint64_t sub_1D79D7450(void *a1)
{
  return sub_1D79D60C8(a1, &qword_1EA846718);
}

uint64_t sub_1D79D745C()
{
  return objectdestroy_5Tm(MEMORY[0x1E4FBC8F8], MEMORY[0x1E4FBC8D0]);
}

uint64_t sub_1D79D7488(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_1D7874050;
  return sub_1D79B9650(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_1D79D7550(uint64_t a1, void *a2)
{
  uint64_t v6 = *(int **)(v2 + 16);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_1D7874050;
  uint64_t v8 = (uint64_t (*)(uint64_t, void *, int *))((char *)&dword_1EA846740 + dword_1EA846740);
  return v8(a1, a2, v6);
}

uint64_t sub_1D79D7618(uint64_t a1)
{
  return sub_1D79BB0F0(a1, v1[2], v1[3], v1[4], &qword_1EBDF8A30, (uint64_t)&unk_1F2F251A0, (uint64_t)&unk_1EA846758);
}

uint64_t sub_1D79D765C()
{
  return objectdestroy_586Tm(&qword_1EBDF8A30);
}

uint64_t sub_1D79D7668(uint64_t a1)
{
  uint64_t v4 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF8A30) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = v1[2];
  uint64_t v7 = v1[3];
  uint64_t v8 = v1[4];
  uint64_t v9 = (uint64_t)v1 + v5;
  uint64_t v10 = (void *)((char *)v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v11 = *v10;
  uint64_t v12 = v10[1];
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v13;
  *uint64_t v13 = v2;
  v13[1] = sub_1D7874050;
  return sub_1D79BCEC4(a1, v6, v7, v8, v9, v11, v12);
}

uint64_t sub_1D79D77A8()
{
  return objectdestroy_590Tm(&qword_1EBDF8A30);
}

uint64_t sub_1D79D77B4()
{
  return objectdestroy_5Tm(MEMORY[0x1E4FBC8F8], MEMORY[0x1E4FBC8D0]);
}

uint64_t sub_1D79D77E0(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_1D7874050;
  return sub_1D79B9310(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_1D79D78A8(uint64_t a1, void *a2)
{
  uint64_t v6 = *(int **)(v2 + 16);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_1D7874050;
  uint64_t v8 = (uint64_t (*)(uint64_t, void *, int *))((char *)&dword_1EA846770 + dword_1EA846770);
  return v8(a1, a2, v6);
}

uint64_t sub_1D79D7970(uint64_t a1)
{
  return sub_1D79BB0F0(a1, v1[2], v1[3], v1[4], &qword_1EA846780, (uint64_t)&unk_1F2F25268, (uint64_t)&unk_1EA846790);
}

uint64_t sub_1D79D79B4()
{
  return objectdestroy_586Tm(&qword_1EA846780);
}

uint64_t sub_1D79D79C0(uint64_t a1)
{
  uint64_t v4 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA846780) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = v1[2];
  uint64_t v7 = v1[3];
  uint64_t v8 = v1[4];
  uint64_t v9 = (uint64_t)v1 + v5;
  uint64_t v10 = (void *)((char *)v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v11 = *v10;
  uint64_t v12 = v10[1];
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v13;
  *uint64_t v13 = v2;
  v13[1] = sub_1D7874050;
  return sub_1D79BC854(a1, v6, v7, v8, v9, v11, v12);
}

uint64_t sub_1D79D7B00()
{
  return objectdestroy_590Tm(&qword_1EA846780);
}

uint64_t sub_1D79D7B0C(void *a1)
{
  return sub_1D79D60C8(a1, &qword_1EA846780);
}

uint64_t sub_1D79D7B18()
{
  return objectdestroy_5Tm(MEMORY[0x1E4FBC8F8], MEMORY[0x1E4FBC8D0]);
}

uint64_t sub_1D79D7B44(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_1D7874050;
  return sub_1D79B8FD0(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_1D79D7C0C(uint64_t a1, void *a2)
{
  uint64_t v6 = *(int **)(v2 + 16);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_1D7874050;
  uint64_t v8 = (uint64_t (*)(uint64_t, void *, int *))((char *)&dword_1EA8467A8 + dword_1EA8467A8);
  return v8(a1, a2, v6);
}

uint64_t sub_1D79D7CD4(uint64_t a1)
{
  return sub_1D79BB0F0(a1, v1[2], v1[3], v1[4], &qword_1EA8467B8, (uint64_t)&unk_1F2F25330, (uint64_t)&unk_1EA8467C8);
}

uint64_t sub_1D79D7D18()
{
  return objectdestroy_586Tm(&qword_1EA8467B8);
}

uint64_t sub_1D79D7D24(uint64_t a1)
{
  uint64_t v4 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA8467B8) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = v1[2];
  uint64_t v7 = v1[3];
  uint64_t v8 = v1[4];
  uint64_t v9 = (uint64_t)v1 + v5;
  uint64_t v10 = (void *)((char *)v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v11 = *v10;
  uint64_t v12 = v10[1];
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v13;
  *uint64_t v13 = v2;
  v13[1] = sub_1D7874050;
  return sub_1D79BC1E4(a1, v6, v7, v8, v9, v11, v12);
}

uint64_t sub_1D79D7E64()
{
  return objectdestroy_590Tm(&qword_1EA8467B8);
}

uint64_t sub_1D79D7E70(void *a1)
{
  return sub_1D79D60C8(a1, &qword_1EA8467B8);
}

uint64_t sub_1D79D7E7C@<X0>(uint64_t *a1@<X8>)
{
  return sub_1D7862460(*(void *)(v1 + 24), *(void *)(v1 + 32), a1);
}

uint64_t sub_1D79D7E9C@<X0>(uint64_t *a1@<X8>)
{
  return sub_1D7862664(*(void *)(v1 + 24), *(void *)(v1 + 32), a1);
}

uint64_t sub_1D79D7EBC()
{
  return objectdestroy_5Tm(MEMORY[0x1E4FBC8F8], MEMORY[0x1E4FBC8D0]);
}

uint64_t sub_1D79D7EE8(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_1D7874050;
  return sub_1D79B8C90(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_1D79D7FB0(uint64_t a1, void *a2)
{
  uint64_t v6 = *(int **)(v2 + 16);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_1D7874050;
  uint64_t v8 = (uint64_t (*)(uint64_t, void *, int *))((char *)&dword_1EA8467F0 + dword_1EA8467F0);
  return v8(a1, a2, v6);
}

uint64_t sub_1D79D8078()
{
  return objectdestroy_5Tm(MEMORY[0x1E4FBC8F8], MEMORY[0x1E4FBC8D0]);
}

uint64_t objectdestroy_5Tm(void (*a1)(void), void (*a2)(void))
{
  a1(*(void *)(v2 + 16));
  a2(*(void *)(v2 + 32));
  swift_release();
  return MEMORY[0x1F4186498](v2, 56, 7);
}

uint64_t sub_1D79D8104(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_1D7874050;
  return sub_1D79B882C(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_1D79D81CC(uint64_t a1, void *a2)
{
  uint64_t v6 = *(int **)(v2 + 16);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_1D7874050;
  uint64_t v8 = (uint64_t (*)(uint64_t, void *, int *))((char *)&dword_1EA846810 + dword_1EA846810);
  return v8(a1, a2, v6);
}

uint64_t sub_1D79D8294(uint64_t a1)
{
  return sub_1D79BB0F0(a1, v1[2], v1[3], v1[4], &qword_1EA846820, (uint64_t)&unk_1F2F25448, (uint64_t)&unk_1EA846830);
}

uint64_t sub_1D79D82D8()
{
  return objectdestroy_586Tm(&qword_1EA846820);
}

uint64_t objectdestroy_586Tm(uint64_t *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = (v4 + 40) & ~v4;
  uint64_t v6 = v4 | 7;
  unint64_t v7 = ((*(void *)(v3 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1 + v5, v2);
  swift_release();
  return MEMORY[0x1F4186498](v1, v7, v6);
}

uint64_t sub_1D79D83D4(uint64_t a1)
{
  uint64_t v4 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA846820) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = v1[2];
  uint64_t v7 = v1[3];
  uint64_t v8 = v1[4];
  uint64_t v9 = (uint64_t)v1 + v5;
  uint64_t v10 = (void *)((char *)v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v11 = *v10;
  uint64_t v12 = v10[1];
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v13;
  *uint64_t v13 = v2;
  v13[1] = sub_1D7874050;
  return sub_1D79BBA60(a1, v6, v7, v8, v9, v11, v12);
}

uint64_t sub_1D79D8514()
{
  return objectdestroy_590Tm(&qword_1EA846820);
}

uint64_t objectdestroy_590Tm(uint64_t *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = (v4 + 16) & ~v4;
  uint64_t v6 = v4 | 7;
  unint64_t v7 = ((*(void *)(v3 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1 + v5, v2);
  swift_release();
  return MEMORY[0x1F4186498](v1, v7, v6);
}

uint64_t sub_1D79D85C0(void *a1)
{
  return sub_1D79D60C8(a1, &qword_1EA846820);
}

uint64_t sub_1D79D873C@<X0>(uint64_t *a1@<X8>)
{
  return sub_1D79D7E7C(a1);
}

uint64_t sub_1D79D8754@<X0>(uint64_t *a1@<X8>)
{
  return sub_1D79D69A8(a1);
}

uint64_t UTCTimestamp(_:)()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA845BC0);
  MEMORY[0x1F4188790](v0 - 8, v1, v2, v3, v4, v5, v6, v7);
  uint64_t v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1D7A9B228();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10, v12, v13, v14, v15, v16, v17, v18);
  uint64_t v20 = (char *)&v31 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v21 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28C10]), sel_init);
  uint64_t v22 = (void *)sub_1D7A9BF98();
  objc_msgSend(v21, sel_setDateFormat_, v22);

  sub_1D7A9B1B8();
  uint64_t v23 = (void *)sub_1D7A9B1C8();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v20, v10);
  objc_msgSend(v21, sel_setLocale_, v23);

  sub_1D7A9B2D8();
  uint64_t v24 = sub_1D7A9B2F8();
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v26 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v9, 1, v24) != 1)
  {
    uint64_t v26 = (void *)sub_1D7A9B2E8();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v9, v24);
  }
  objc_msgSend(v21, sel_setTimeZone_, v26);

  uint64_t v27 = (void *)sub_1D7A9B0C8();
  id v28 = objc_msgSend(v21, sel_stringFromDate_, v27);

  uint64_t v29 = sub_1D7A9BFC8();
  return v29;
}

uint64_t sub_1D79D8A48()
{
  return sub_1D7A9AC28();
}

uint64_t sub_1D79D8A6C()
{
  return sub_1D7A9B3C8();
}

uint64_t sub_1D79D8A90()
{
  return sub_1D7A9ABD8();
}

uint64_t sub_1D79D8AB4()
{
  return sub_1D7A9B338();
}

uint64_t dispatch thunk of ObjectEncoder.encode<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t dispatch thunk of ObjectDecoder.decode<A>(_:from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 8))();
}

uint64_t sub_1D79D8B28(uint64_t a1)
{
  uint64_t v2 = a1;
  unint64_t v31 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0) {
    uint64_t v3 = sub_1D7A9CF28();
  }
  else {
    uint64_t v3 = *(void *)(a1 + 16);
  }
  uint64_t result = MEMORY[0x1E4FBC860];
  if (v3)
  {
    uint64_t v38 = MEMORY[0x1E4FBC860];
    sub_1D78AB4E8(0, v3 & ~(v3 >> 63), 0);
    uint64_t result = sub_1D79F81D8(v2);
    uint64_t v35 = result;
    uint64_t v36 = v5;
    char v37 = v6 & 1;
    if (v3 < 0)
    {
      __break(1u);
LABEL_23:
      __break(1u);
    }
    else
    {
      uint64_t v30 = v2;
      do
      {
        while (1)
        {
          uint64_t v18 = v35;
          uint64_t v17 = v36;
          char v19 = v37;
          sub_1D79F8324(&v34, v35, v36, v37, v2);
          id v21 = v20;
          uint64_t v22 = v34;
          uint64_t v32 = 0;
          unint64_t v33 = 0xE000000000000000;
          CBOR.readableString.getter();
          if (v1)
          {

            sub_1D79DC744(v18, v17, v19);
            return swift_release();
          }
          sub_1D7A9C128();
          swift_bridgeObjectRelease();
          sub_1D7A9C128();
          CBOR.readableString.getter();
          sub_1D7A9C128();

          swift_bridgeObjectRelease();
          uint64_t v23 = v32;
          unint64_t v24 = v33;
          uint64_t v25 = v38;
          uint64_t result = swift_isUniquelyReferenced_nonNull_native();
          if ((result & 1) == 0)
          {
            uint64_t result = sub_1D78AB4E8(0, *(void *)(v25 + 16) + 1, 1);
            uint64_t v25 = v38;
          }
          unint64_t v27 = *(void *)(v25 + 16);
          unint64_t v26 = *(void *)(v25 + 24);
          if (v27 >= v26 >> 1)
          {
            uint64_t result = sub_1D78AB4E8(v26 > 1, v27 + 1, 1);
            uint64_t v25 = v38;
          }
          *(void *)(v25 + 16) = v27 + 1;
          uint64_t v28 = v25 + 16 * v27;
          *(void *)(v28 + 32) = v23;
          *(void *)(v28 + 40) = v24;
          if (v31) {
            break;
          }
          uint64_t v7 = v35;
          uint64_t v8 = v36;
          char v9 = v37;
          sub_1D79DC2A8(v35, v36, v37, v30);
          uint64_t v11 = v10;
          uint64_t v13 = v12;
          char v15 = v14;
          uint64_t v16 = v8;
          uint64_t v2 = v30;
          sub_1D79DC744(v7, v16, v9);
          uint64_t v35 = v11;
          uint64_t v36 = v13;
          char v37 = v15 & 1;
          if (!--v3) {
            goto LABEL_20;
          }
        }
        if ((v37 & 1) == 0) {
          goto LABEL_23;
        }
        uint64_t v2 = v30;
        if (sub_1D7A9CEF8()) {
          swift_isUniquelyReferenced_nonNull_native();
        }
        __swift_instantiateConcreteTypeFromMangledName(qword_1EA846890);
        uint64_t v29 = (void (*)(uint64_t *, void))sub_1D7A9BED8();
        sub_1D7A9CF78();
        v29(&v32, 0);
        --v3;
      }
      while (v3);
LABEL_20:
      sub_1D79DC744(v35, v36, v37);
      return v38;
    }
  }
  return result;
}

uint64_t COSE_Sign1.AlgorithmIdentifier.rawValue.getter()
{
  return qword_1D7AB4698[*v0];
}

uint64_t COSEKey.publicKeyIdentifier.getter()
{
  uint64_t v64 = *MEMORY[0x1E4F143B8];
  uint64_t v0 = sub_1D7A9B5F8();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0, v2, v3, v4, v5, v6, v7, v8);
  uint64_t v10 = (char *)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1D7A9BE78();
  uint64_t v53 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11, v12, v13, v14, v15, v16, v17, v18);
  uint64_t v20 = (char *)&v48 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_1D7A9BE68();
  uint64_t v22 = *(void *)(v21 - 8);
  MEMORY[0x1F4188790](v21, v23, v24, v25, v26, v27, v28, v29);
  unint64_t v31 = (char *)&v48 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v55 = xmmword_1D7AA0AB0;
  sub_1D7A9AFD8();
  sub_1D7A9B438();
  sub_1D7871D78((uint64_t)v56, (uint64_t)v57, &qword_1EA846850);
  unint64_t v32 = v59;
  if (v59 >> 60 == 15)
  {
    if (qword_1EBDF9DC8 != -1) {
      swift_once();
    }
    uint64_t v33 = __swift_project_value_buffer(v0, (uint64_t)qword_1EBDFBE70);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v10, v33, v0);
    uint64_t v34 = sub_1D7A9B5D8();
    os_log_type_t v35 = sub_1D7A9C748();
    if (os_log_type_enabled(v34, v35))
    {
      uint64_t v36 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v36 = 0;
      _os_log_impl(&dword_1D7853000, v34, v35, "Can't fetch EC2 parameters from COSEKey", v36, 2u);
      MEMORY[0x1D947D740](v36, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v1 + 8))(v10, v0);
    uint64_t v37 = 0;
  }
  else
  {
    uint64_t v52 = v22;
    uint64_t v38 = v58;
    uint64_t v39 = v60;
    unint64_t v40 = v61;
    sub_1D78607E8(v62, v63);
    uint64_t v51 = v38;
    sub_1D7A9B048();
    uint64_t v50 = v39;
    unint64_t v49 = v40;
    sub_1D7A9B048();
    unint64_t v42 = *((void *)&v55 + 1);
    uint64_t v41 = v55;
    sub_1D7860790(v55, *((unint64_t *)&v55 + 1));
    sub_1D79DC070(&qword_1EA844190, MEMORY[0x1E4F251E8]);
    sub_1D7A9B828();
    switch(v42 >> 62)
    {
      case 1uLL:
        if (v41 >> 32 < (int)v41) {
          __break(1u);
        }
        unint64_t v48 = v42 & 0x3FFFFFFFFFFFFFFFLL;
        sub_1D7860790(v41, v42);
        sub_1D79328C4((int)v41, v41 >> 32);
        break;
      case 2uLL:
        uint64_t v43 = *(void *)(v41 + 16);
        unint64_t v48 = *(void *)(v41 + 24);
        sub_1D7860790(v41, v42);
        swift_retain();
        swift_retain();
        sub_1D79328C4(v43, v48);
        swift_release();
        swift_release();
        break;
      case 3uLL:
        memset(v54, 0, 14);
        goto LABEL_13;
      default:
        v54[0] = v41;
        LOWORD(v54[1]) = v42;
        BYTE2(v54[1]) = BYTE2(v42);
        BYTE3(v54[1]) = BYTE3(v42);
        BYTE4(v54[1]) = BYTE4(v42);
        BYTE5(v54[1]) = BYTE5(v42);
LABEL_13:
        sub_1D7A9B808();
        break;
    }
    sub_1D78607E8(v41, v42);
    sub_1D7A9B818();
    (*(void (**)(char *, uint64_t))(v53 + 8))(v20, v11);
    sub_1D78607E8(v41, v42);
    sub_1D79DC070(&qword_1EA846858, MEMORY[0x1E4F251C8]);
    uint64_t v44 = sub_1D7A9BD78();
    uint64_t v46 = sub_1D78D1370(v44, v45);
    swift_bridgeObjectRelease();
    uint64_t v37 = sub_1D78D1EB0(v46);
    swift_release();
    sub_1D78607E8(v50, v49);
    sub_1D78607E8(v51, v32);
    (*(void (**)(char *, uint64_t))(v52 + 8))(v31, v21);
  }
  sub_1D78607E8(v55, *((unint64_t *)&v55 + 1));
  return v37;
}

BOOL COSEKey.isEC2.getter()
{
  sub_1D7A9B438();
  sub_1D7871D78((uint64_t)v2, (uint64_t)v3, &qword_1EA846850);
  unint64_t v0 = v4 >> 60;
  if (v4 >> 60 != 15) {
    sub_1D79DC448((uint64_t)v2);
  }
  return v0 < 0xF;
}

BOOL COSEKey.isOKP.getter()
{
  sub_1D7A9B448();
  sub_1D7871D78((uint64_t)v2, (uint64_t)v3, &qword_1EA846860);
  unint64_t v0 = v4 >> 60;
  if (v4 >> 60 != 15) {
    sub_1D79DC4F4((uint64_t)v2);
  }
  return v0 < 0xF;
}

uint64_t COSEKey.publicKeyData.getter()
{
  uint64_t v0 = sub_1D7A9B5F8();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v0, v2, v3, v4, v5, v6, v7, v8);
  uint64_t v11 = &v49[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v19 = MEMORY[0x1F4188790](v9, v12, v13, v14, v15, v16, v17, v18);
  uint64_t v21 = &v49[-v20];
  MEMORY[0x1F4188790](v19, v22, v23, v24, v25, v26, v27, v28);
  uint64_t v30 = &v49[-v29];
  sub_1D7A9B438();
  sub_1D7871D78((uint64_t)v50, (uint64_t)v61, &qword_1EA846850);
  if (v62 >> 60 == 15)
  {
    sub_1D7A9B448();
    sub_1D7871D78((uint64_t)v52, (uint64_t)v54, &qword_1EA846860);
    if (v56 >> 60 == 15)
    {
      if (qword_1EBDF9DC8 != -1) {
        swift_once();
      }
      uint64_t v31 = __swift_project_value_buffer(v0, (uint64_t)qword_1EBDFBE70);
      swift_beginAccess();
      (*(void (**)(unsigned char *, uint64_t, uint64_t))(v1 + 16))(v11, v31, v0);
      unint64_t v32 = sub_1D7A9B5D8();
      os_log_type_t v33 = sub_1D7A9C748();
      if (os_log_type_enabled(v32, v33))
      {
        uint64_t v34 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v34 = 0;
        _os_log_impl(&dword_1D7853000, v32, v33, "Key is neither EC2 or OKP", v34, 2u);
        MEMORY[0x1D947D740](v34, -1, -1);
      }

      (*(void (**)(unsigned char *, uint64_t))(v1 + 8))(v11, v0);
    }
    else
    {
      sub_1D79DC4F4((uint64_t)v52);
      sub_1D7A9B448();
      sub_1D7871D78((uint64_t)v53, (uint64_t)v51, &qword_1EA846860);
      if (v51[2] >> 60 != 15)
      {
        uint64_t v44 = v51[1];
        sub_1D78607E8(v51[3], v51[4]);
        return v44;
      }
      if (qword_1EBDF9DC8 != -1) {
        swift_once();
      }
      uint64_t v40 = __swift_project_value_buffer(v0, (uint64_t)qword_1EBDFBE70);
      swift_beginAccess();
      (*(void (**)(unsigned char *, uint64_t, uint64_t))(v1 + 16))(v21, v40, v0);
      uint64_t v41 = sub_1D7A9B5D8();
      os_log_type_t v42 = sub_1D7A9C748();
      if (os_log_type_enabled(v41, v42))
      {
        uint64_t v43 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v43 = 0;
        _os_log_impl(&dword_1D7853000, v41, v42, "Can't fetch OKP parameters from COSEKey", v43, 2u);
        MEMORY[0x1D947D740](v43, -1, -1);
      }

      (*(void (**)(unsigned char *, uint64_t))(v1 + 8))(v21, v0);
    }
  }
  else
  {
    sub_1D79DC448((uint64_t)v50);
    sub_1D7A9B438();
    sub_1D7871D78((uint64_t)v51, (uint64_t)v54, &qword_1EA846850);
    unint64_t v35 = v56;
    if (v56 >> 60 != 15)
    {
      uint64_t v45 = v55;
      uint64_t v46 = v57;
      unint64_t v47 = v58;
      sub_1D78607E8(v59, v60);
      v53[0] = xmmword_1D7AA0AB0;
      sub_1D7A9B048();
      sub_1D7A9B048();
      sub_1D78607E8(v46, v47);
      sub_1D78607E8(v45, v35);
      return *(void *)&v53[0];
    }
    if (qword_1EBDF9DC8 != -1) {
      swift_once();
    }
    uint64_t v36 = __swift_project_value_buffer(v0, (uint64_t)qword_1EBDFBE70);
    swift_beginAccess();
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v1 + 16))(v30, v36, v0);
    uint64_t v37 = sub_1D7A9B5D8();
    os_log_type_t v38 = sub_1D7A9C748();
    if (os_log_type_enabled(v37, v38))
    {
      uint64_t v39 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v39 = 0;
      _os_log_impl(&dword_1D7853000, v37, v38, "Can't fetch EC2 parameters from COSEKey", v39, 2u);
      MEMORY[0x1D947D740](v39, -1, -1);
    }

    (*(void (**)(unsigned char *, uint64_t))(v1 + 8))(v30, v0);
  }
  return 0;
}

uint64_t COSEKey.init(ec2CurveIdentifier:publicKey:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA846868);
  MEMORY[0x1F4188790](v8 - 8, v9, v10, v11, v12, v13, v14, v15);
  uint64_t v17 = ((char *)&v125 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v18 = sub_1D7A9B5F8();
  uint64_t v26 = MEMORY[0x1F4188790](v18, v19, v20, v21, v22, v23, v24, v25);
  unint64_t v28 = (unint64_t)&v125 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = MEMORY[0x1F4188790](v26, v29, v30, v31, v32, v33, v34, v35);
  os_log_type_t v38 = (char *)&v125 - v37;
  MEMORY[0x1F4188790](v36, v39, v40, v41, v42, v43, v44, v45);
  unint64_t v48 = (unint64_t)&v125 - v47;
  switch(a1)
  {
    case 3:
      uint64_t v129 = a4;
      unint64_t v49 = a3 >> 62;
      switch(a3 >> 62)
      {
        case 1uLL:
          LODWORD(v51) = HIDWORD(a2) - a2;
          if (__OFSUB__(HIDWORD(a2), a2)) {
            goto LABEL_89;
          }
          uint64_t v51 = (int)v51;
LABEL_24:
          if (v51 != 133)
          {
            if (v49)
            {
              if (v49 == 1)
              {
                LODWORD(v70) = HIDWORD(a2) - a2;
                if (__OFSUB__(HIDWORD(a2), a2))
                {
LABEL_94:
                  __break(1u);
                  goto LABEL_95;
                }
                uint64_t v70 = (int)v70;
              }
              else
              {
                uint64_t v92 = *(void *)(a2 + 16);
                uint64_t v91 = *(void *)(a2 + 24);
                BOOL v55 = __OFSUB__(v91, v92);
                uint64_t v70 = v91 - v92;
                if (v55)
                {
LABEL_97:
                  __break(1u);
                  goto LABEL_98;
                }
              }
            }
            else
            {
              uint64_t v70 = BYTE6(a3);
            }
            if (v70 != 132)
            {
LABEL_60:
              unint64_t v48 = v46;
              if (qword_1EBDF9DC8 != -1) {
                swift_once();
              }
              uint64_t v95 = __swift_project_value_buffer(v18, (uint64_t)qword_1EBDFBE70);
              swift_beginAccess();
              (*(void (**)(unint64_t, uint64_t, uint64_t))(v48 + 16))(v28, v95, v18);
              sub_1D7860790(a2, a3);
              sub_1D7860790(a2, a3);
              uint64_t v17 = sub_1D7A9B5D8();
              os_log_type_t v96 = sub_1D7A9C758();
              if (os_log_type_enabled(v17, v96))
              {
                os_log_t v128 = v17;
                uint64_t v97 = (uint8_t *)swift_slowAlloc();
                uint64_t v127 = swift_slowAlloc();
                uint64_t v131 = v127;
                *(_DWORD *)uint64_t v97 = 136315138;
                uint64_t v125 = v97 + 4;
                uint64_t v126 = v97;
                uint64_t v130 = sub_1D79F1750(a2, a3);
                __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDF7900);
                sub_1D78AC5E4();
                uint64_t v98 = sub_1D7A9BF38();
                unint64_t v100 = v99;
                swift_bridgeObjectRelease();
                uint64_t v130 = sub_1D7923300(v98, v100, &v131);
                sub_1D7A9C9E8();
                swift_bridgeObjectRelease();
                sub_1D78607E8(a2, a3);
                sub_1D78607E8(a2, a3);
                uint64_t v17 = v128;
                os_log_type_t v101 = v96;
                uint64_t v102 = v126;
                _os_log_impl(&dword_1D7853000, v128, v101, "Public key not in expected format for P384 COSEKey: %s", v126, 0xCu);
                uint64_t v103 = v127;
                swift_arrayDestroy();
                MEMORY[0x1D947D740](v103, -1, -1);
                MEMORY[0x1D947D740](v102, -1, -1);
LABEL_68:
                sub_1D78607E8(a2, a3);

                (*(void (**)(unint64_t, uint64_t))(v48 + 8))(v28, v18);
                goto LABEL_83;
              }
LABEL_67:
              sub_1D78607E8(a2, a3);
              sub_1D78607E8(a2, a3);
              goto LABEL_68;
            }
            uint64_t v18 = 0;
            unint64_t v28 = 66;
            unint64_t v61 = 132;
            if (!v49)
            {
LABEL_73:
              uint64_t v106 = sub_1D7A9B058();
              unint64_t v108 = v107;
              sub_1D7A9B058();
              if (v61 >= v28)
              {
                sub_1D7A9B058();
                sub_1D7A9B428();
                sub_1D78607E8(a2, a3);
                sub_1D78607E8(v106, v108);
                uint64_t v109 = sub_1D7A9B458();
                uint64_t v110 = *(void *)(v109 - 8);
                if (!(*(unsigned int (**)(NSObject *, uint64_t, uint64_t))(v110 + 48))(v17, 1, v109))
                {
                  uint64_t v122 = v129;
                  (*(void (**)(uint64_t, NSObject *, uint64_t))(v110 + 32))(v129, v17, v109);
                  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v110 + 56))(v122, 0, 1, v109);
                }
                sub_1D7871C4C((uint64_t)v17, &qword_1EA846868);
                goto LABEL_83;
              }
              __break(1u);
              goto LABEL_86;
            }
LABEL_58:
            if (v49 == 1)
            {
              uint64_t v93 = (int)a2;
              uint64_t v94 = a2 >> 32;
            }
            else
            {
              uint64_t v93 = *(void *)(a2 + 16);
              uint64_t v94 = *(void *)(a2 + 24);
            }
            if (v94 >= v93) {
              goto LABEL_73;
            }
            __break(1u);
            goto LABEL_67;
          }
          sub_1D7860790(a2, a3);
          sub_1D79DA8EC(1, a2, a3, &v132);
          uint64_t v65 = v132;
          unint64_t v66 = v133;
          uint64_t v67 = sub_1D78D1EB0((uint64_t)&unk_1F2F18A00);
          unint64_t v69 = v68;
          unint64_t v48 = sub_1D788583C(v65, v66, v67, v68);
          sub_1D78607E8(v67, v69);
          sub_1D78607E8(v65, v66);
          if ((v48 & 1) == 0) {
            goto LABEL_39;
          }
          unint64_t v28 = 67;
          unint64_t v61 = 133;
          break;
        case 2uLL:
          uint64_t v64 = *(void *)(a2 + 16);
          uint64_t v63 = *(void *)(a2 + 24);
          BOOL v55 = __OFSUB__(v63, v64);
          uint64_t v51 = v63 - v64;
          if (!v55) {
            goto LABEL_24;
          }
          goto LABEL_90;
        case 3uLL:
          goto LABEL_60;
        default:
          uint64_t v51 = BYTE6(a3);
          goto LABEL_24;
      }
LABEL_37:
      uint64_t v18 = 1;
      if (!v49) {
        goto LABEL_73;
      }
      goto LABEL_58;
    case 2:
      uint64_t v129 = a4;
      unint64_t v49 = a3 >> 62;
      switch(a3 >> 62)
      {
        case 1uLL:
          LODWORD(v52) = HIDWORD(a2) - a2;
          if (__OFSUB__(HIDWORD(a2), a2)) {
            goto LABEL_91;
          }
          uint64_t v52 = (int)v52;
LABEL_34:
          if (v52 != 97)
          {
            if (v49)
            {
              if (v49 == 1)
              {
                LODWORD(v78) = HIDWORD(a2) - a2;
                if (__OFSUB__(HIDWORD(a2), a2))
                {
LABEL_95:
                  __break(1u);
                  goto LABEL_96;
                }
                uint64_t v78 = (int)v78;
              }
              else
              {
                uint64_t v105 = *(void *)(a2 + 16);
                uint64_t v104 = *(void *)(a2 + 24);
                BOOL v55 = __OFSUB__(v104, v105);
                uint64_t v78 = v104 - v105;
                if (v55)
                {
LABEL_98:
                  __break(1u);
                  JUMPOUT(0x1D79DA840);
                }
              }
            }
            else
            {
              uint64_t v78 = BYTE6(a3);
            }
            if (v78 != 96)
            {
LABEL_76:
              unint64_t v111 = v46;
              if (qword_1EBDF9DC8 != -1) {
                swift_once();
              }
              uint64_t v112 = __swift_project_value_buffer(v18, (uint64_t)qword_1EBDFBE70);
              swift_beginAccess();
              (*(void (**)(char *, uint64_t, uint64_t))(v111 + 16))(v38, v112, v18);
              sub_1D7860790(a2, a3);
              sub_1D7860790(a2, a3);
              id v113 = sub_1D7A9B5D8();
              os_log_type_t v114 = sub_1D7A9C758();
              if (os_log_type_enabled(v113, v114))
              {
                os_log_t v128 = v113;
                uint64_t v115 = (uint8_t *)swift_slowAlloc();
                uint64_t v127 = swift_slowAlloc();
                uint64_t v131 = v127;
                *(_DWORD *)uint64_t v115 = 136315138;
                uint64_t v125 = v115 + 4;
                uint64_t v126 = v115;
                uint64_t v130 = sub_1D79F1750(a2, a3);
                __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDF7900);
                sub_1D78AC5E4();
                uint64_t v116 = sub_1D7A9BF38();
                unint64_t v118 = v117;
                swift_bridgeObjectRelease();
                uint64_t v130 = sub_1D7923300(v116, v118, &v131);
                sub_1D7A9C9E8();
                swift_bridgeObjectRelease();
                sub_1D78607E8(a2, a3);
                sub_1D78607E8(a2, a3);
                id v113 = v128;
                os_log_type_t v119 = v114;
                uint64_t v120 = v126;
                _os_log_impl(&dword_1D7853000, v128, v119, "Public key not in expected format for P384 COSEKey: %s", v126, 0xCu);
                uint64_t v121 = v127;
                swift_arrayDestroy();
                MEMORY[0x1D947D740](v121, -1, -1);
                MEMORY[0x1D947D740](v120, -1, -1);
              }
              else
              {
                sub_1D78607E8(a2, a3);
                sub_1D78607E8(a2, a3);
              }
              sub_1D78607E8(a2, a3);

              (*(void (**)(char *, uint64_t))(v111 + 8))(v38, v18);
              goto LABEL_83;
            }
            uint64_t v18 = 0;
            unint64_t v28 = 48;
            unint64_t v61 = 96;
            if (!v49) {
              goto LABEL_73;
            }
            goto LABEL_58;
          }
          sub_1D7860790(a2, a3);
          sub_1D79DA8EC(1, a2, a3, &v132);
          uint64_t v73 = v132;
          unint64_t v74 = v133;
          uint64_t v75 = sub_1D78D1EB0((uint64_t)&unk_1F2F189D8);
          unint64_t v77 = v76;
          unint64_t v48 = sub_1D788583C(v73, v74, v75, v76);
          sub_1D78607E8(v75, v77);
          sub_1D78607E8(v73, v74);
          if ((v48 & 1) == 0) {
            goto LABEL_39;
          }
          unint64_t v28 = 49;
          unint64_t v61 = 97;
          break;
        case 2uLL:
          uint64_t v72 = *(void *)(a2 + 16);
          uint64_t v71 = *(void *)(a2 + 24);
          BOOL v55 = __OFSUB__(v71, v72);
          uint64_t v52 = v71 - v72;
          if (!v55) {
            goto LABEL_34;
          }
          goto LABEL_92;
        case 3uLL:
          goto LABEL_76;
        default:
          uint64_t v52 = BYTE6(a3);
          goto LABEL_34;
      }
      goto LABEL_37;
    case 1:
      uint64_t v129 = a4;
      unint64_t v49 = a3 >> 62;
      switch(a3 >> 62)
      {
        case 1uLL:
          LODWORD(v50) = HIDWORD(a2) - a2;
          if (!__OFSUB__(HIDWORD(a2), a2))
          {
            uint64_t v50 = (int)v50;
LABEL_14:
            if (v50 == 65)
            {
              sub_1D7860790(a2, a3);
              sub_1D79DA8EC(1, a2, a3, &v132);
              uint64_t v56 = v132;
              unint64_t v57 = v133;
              uint64_t v58 = sub_1D78D1EB0((uint64_t)&unk_1F2F189B0);
              unint64_t v48 = v59;
              char v60 = sub_1D788583C(v56, v57, v58, v59);
              sub_1D78607E8(v58, v48);
              sub_1D78607E8(v56, v57);
              if (v60)
              {
                unint64_t v28 = 33;
                unint64_t v61 = 65;
                goto LABEL_37;
              }
LABEL_39:
              sub_1D78607E8(a2, a3);
LABEL_83:
              a4 = v129;
              goto LABEL_84;
            }
            if (v49)
            {
              if (v49 == 1)
              {
                LODWORD(v62) = HIDWORD(a2) - a2;
                if (!__OFSUB__(HIDWORD(a2), a2))
                {
                  uint64_t v62 = (int)v62;
                  goto LABEL_46;
                }
                goto LABEL_93;
              }
              uint64_t v80 = *(void *)(a2 + 16);
              uint64_t v79 = *(void *)(a2 + 24);
              BOOL v55 = __OFSUB__(v79, v80);
              uint64_t v62 = v79 - v80;
              if (v55)
              {
LABEL_96:
                __break(1u);
                goto LABEL_97;
              }
            }
            else
            {
              uint64_t v62 = BYTE6(a3);
            }
LABEL_46:
            if (v62 != 64)
            {
LABEL_49:
              unint64_t v61 = v46;
              if (qword_1EBDF9DC8 == -1)
              {
LABEL_50:
                uint64_t v81 = __swift_project_value_buffer(v18, (uint64_t)qword_1EBDFBE70);
                swift_beginAccess();
                (*(void (**)(unint64_t, uint64_t, uint64_t))(v61 + 16))(v48, v81, v18);
                sub_1D7860790(a2, a3);
                sub_1D7860790(a2, a3);
                os_log_type_t v82 = sub_1D7A9B5D8();
                os_log_type_t v83 = sub_1D7A9C758();
                if (os_log_type_enabled(v82, v83))
                {
                  os_log_t v128 = v82;
                  uint64_t v84 = (uint8_t *)swift_slowAlloc();
                  uint64_t v127 = swift_slowAlloc();
                  uint64_t v131 = v127;
                  *(_DWORD *)uint64_t v84 = 136315138;
                  uint64_t v125 = v84 + 4;
                  uint64_t v126 = v84;
                  uint64_t v130 = sub_1D79F1750(a2, a3);
                  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDF7900);
                  sub_1D78AC5E4();
                  uint64_t v85 = sub_1D7A9BF38();
                  unint64_t v87 = v86;
                  swift_bridgeObjectRelease();
                  uint64_t v130 = sub_1D7923300(v85, v87, &v131);
                  sub_1D7A9C9E8();
                  swift_bridgeObjectRelease();
                  sub_1D78607E8(a2, a3);
                  sub_1D78607E8(a2, a3);
                  os_log_type_t v82 = v128;
                  os_log_type_t v88 = v83;
                  os_log_type_t v89 = v126;
                  _os_log_impl(&dword_1D7853000, v128, v88, "Public key not in expected format for P256 COSEKey: %s", v126, 0xCu);
                  uint64_t v90 = v127;
                  swift_arrayDestroy();
                  MEMORY[0x1D947D740](v90, -1, -1);
                  MEMORY[0x1D947D740](v89, -1, -1);
                }
                else
                {
                  sub_1D78607E8(a2, a3);
                  sub_1D78607E8(a2, a3);
                }
                sub_1D78607E8(a2, a3);

                (*(void (**)(unint64_t, uint64_t))(v61 + 8))(v48, v18);
                goto LABEL_83;
              }
LABEL_86:
              swift_once();
              goto LABEL_50;
            }
            uint64_t v18 = 0;
            unint64_t v28 = 32;
            unint64_t v61 = 64;
            if (!v49) {
              goto LABEL_73;
            }
            goto LABEL_58;
          }
          __break(1u);
LABEL_88:
          __break(1u);
LABEL_89:
          __break(1u);
LABEL_90:
          __break(1u);
LABEL_91:
          __break(1u);
LABEL_92:
          __break(1u);
LABEL_93:
          __break(1u);
          goto LABEL_94;
        case 2uLL:
          uint64_t v54 = *(void *)(a2 + 16);
          uint64_t v53 = *(void *)(a2 + 24);
          BOOL v55 = __OFSUB__(v53, v54);
          uint64_t v50 = v53 - v54;
          if (!v55) {
            goto LABEL_14;
          }
          goto LABEL_88;
        case 3uLL:
          goto LABEL_49;
        default:
          uint64_t v50 = BYTE6(a3);
          goto LABEL_14;
      }
  }
  sub_1D78607E8(a2, a3);
LABEL_84:
  uint64_t v124 = sub_1D7A9B458();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v124 - 8) + 56))(a4, 1, 1, v124);
}

uint64_t sub_1D79DA870(uint64_t result, uint64_t a2, uint64_t a3, int64_t a4, unint64_t a5)
{
  if (result < 0)
  {
    __break(1u);
    goto LABEL_13;
  }
  int64_t v5 = a5 >> 1;
  uint64_t v6 = (a5 >> 1) - a4;
  if (__OFSUB__(a5 >> 1, a4))
  {
LABEL_13:
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if (!result || v6 < 0 || (int64_t v7 = a5 >> 1, v6 >= result))
  {
    int64_t v7 = a4 + result;
    if (__OFADD__(a4, result)) {
      goto LABEL_18;
    }
  }
  if (v7 < a4) {
    goto LABEL_14;
  }
  if (v5 < a4)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (v5 >= v7)
  {
    if ((v7 & 0x8000000000000000) == 0) {
      return a2;
    }
    goto LABEL_17;
  }
LABEL_16:
  __break(1u);
LABEL_17:
  __break(1u);
LABEL_18:
  __break(1u);
  return result;
}

uint64_t sub_1D79DA8EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_18;
  }
  unint64_t v5 = a3 >> 62;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  switch(a3 >> 62)
  {
    case 1uLL:
      uint64_t v10 = (int)a2;
      uint64_t v9 = a2 >> 32;
      break;
    case 2uLL:
      uint64_t v10 = *(void *)(a2 + 16);
      uint64_t v9 = *(void *)(a2 + 24);
      break;
    case 3uLL:
      break;
    default:
      uint64_t v10 = 0;
      uint64_t v9 = BYTE6(a3);
      break;
  }
  uint64_t v11 = sub_1D7A2F544(v10, v9, a2, a3);
  if (a1 && (v11 & 0x8000000000000000) == 0 && v11 < a1)
  {
    switch((int)v5)
    {
      case 1:
        uint64_t v12 = a2 >> 32;
        goto LABEL_12;
      case 2:
        uint64_t v12 = *(void *)(a2 + 24);
        goto LABEL_14;
      default:
        goto LABEL_16;
    }
  }
  uint64_t v12 = sub_1D7A2F4C8(v10, a1, a2, a3);
  uint64_t v13 = 0;
  switch((int)v5)
  {
    case 1:
LABEL_12:
      uint64_t v13 = (int)a2;
      break;
    case 2:
LABEL_14:
      uint64_t v13 = *(void *)(a2 + 16);
      break;
    default:
      break;
  }
  if (v12 < v13)
  {
LABEL_18:
    __break(1u);
    JUMPOUT(0x1D79DAA58);
  }
LABEL_16:
  uint64_t v14 = sub_1D7A9AFE8();
  uint64_t v16 = v15;
  uint64_t result = sub_1D78607E8(a2, a3);
  *a4 = v14;
  a4[1] = v16;
  return result;
}

uint64_t COSE_Sign1.AlgorithmIdentifier.init(rawValue:)@<X0>(uint64_t result@<X0>, char *a2@<X8>)
{
  char v2 = 1;
  switch(result)
  {
    case -36:
      *a2 = 3;
      break;
    case -35:
      *a2 = 2;
      break;
    case -8:
      goto LABEL_6;
    case -7:
      char v2 = 0;
LABEL_6:
      *a2 = v2;
      break;
    default:
      *a2 = 4;
      break;
  }
  return result;
}

BOOL sub_1D79DAB60(char *a1, char *a2)
{
  return qword_1D7AB4698[*a1] == qword_1D7AB4698[*a2];
}

uint64_t sub_1D79DAB84()
{
  return sub_1D7A9D628();
}

uint64_t sub_1D79DABD4()
{
  return sub_1D7A9D5E8();
}

uint64_t sub_1D79DAC0C()
{
  return sub_1D7A9D628();
}

uint64_t sub_1D79DAC58@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  return COSE_Sign1.AlgorithmIdentifier.init(rawValue:)(*a1, a2);
}

void sub_1D79DAC60(void *a1@<X8>)
{
  *a1 = qword_1D7AB4698[*v1];
}

uint64_t COSE_Sign1.init(algorithmIdentifier:keyIdentifier:payload:signature:includeCBORTag:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA842478);
  MEMORY[0x1F4188790](v2 - 8, v3, v4, v5, v6, v7, v8, v9);
  uint64_t v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D7A9B318();
  uint64_t v12 = sub_1D7A9B328();
  uint64_t v13 = *(void *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
  {
    sub_1D7871C4C((uint64_t)v11, &qword_1EA842478);
    uint64_t v14 = 1;
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v13 + 32))(a1, v11, v12);
    uint64_t v14 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 56))(a1, v14, 1, v12);
}

void COSE_Sign1.init(fromHexData:)(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v66 = *MEMORY[0x1E4F143B8];
  uint64_t v57 = sub_1D7A9B328();
  uint64_t v54 = *(void *)(v57 - 8);
  MEMORY[0x1F4188790](v57, v7, v8, v9, v10, v11, v12, v13);
  uint64_t v56 = (char *)&v53 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1D7A9AC68();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15, v17, v18, v19, v20, v21, v22, v23);
  uint64_t v25 = (char *)&v53 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = a3;
  switch(a2 >> 62)
  {
    case 1uLL:
      if (a1 >> 32 < (int)a1) {
        __break(1u);
      }
      sub_1D7860790(a1, a2);
      swift_retain();
      uint64_t v34 = sub_1D79DC0B8((int)a1, a1 >> 32, a2 & 0x3FFFFFFFFFFFFFFFLL, (void *(*)(uint64_t *__return_ptr, uint64_t, uint64_t))sub_1D79DC270);
      if (v3) {
        goto LABEL_26;
      }
      uint64_t v32 = v34;
      uint64_t v33 = v35;
      sub_1D78607E8(a1, a2);
      uint64_t v58 = 0;
      if (!v33) {
        goto LABEL_10;
      }
      goto LABEL_17;
    case 2uLL:
      uint64_t v28 = *(void *)(a1 + 16);
      uint64_t v29 = *(void *)(a1 + 24);
      sub_1D7860790(a1, a2);
      swift_retain();
      swift_retain();
      uint64_t v30 = sub_1D79DC0B8(v28, v29, a2 & 0x3FFFFFFFFFFFFFFFLL, (void *(*)(uint64_t *__return_ptr, uint64_t, uint64_t))sub_1D79DC270);
      if (v3)
      {
        swift_release();
        swift_release();
        __break(1u);
LABEL_26:
        sub_1D78607E8(a1, a2);
        __break(1u);
        JUMPOUT(0x1D79DB5A4);
      }
      uint64_t v32 = v30;
      uint64_t v33 = v31;
      swift_release();
      swift_release();
      uint64_t v58 = 0;
      if (v33) {
        goto LABEL_17;
      }
LABEL_10:
      uint64_t v61 = a1;
      unint64_t v62 = a2;
      sub_1D7860790(a1, a2);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA846870);
      if (swift_dynamicCast())
      {
        sub_1D79A0894(v59, (uint64_t)&v63);
        __swift_project_boxed_opaque_existential_1(&v63, v65);
        if (sub_1D7A9D028())
        {
          __swift_project_boxed_opaque_existential_1(&v63, v65);
          sub_1D7A9D018();
          uint64_t v58 = 0;
          sub_1D78607E8(a1, a2);
          uint64_t v33 = *((void *)&v59[0] + 1);
          uint64_t v32 = *(void *)&v59[0];
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v63);
          goto LABEL_18;
        }
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v63);
      }
      else
      {
        uint64_t v60 = 0;
        memset(v59, 0, sizeof(v59));
        sub_1D7871C4C((uint64_t)v59, &qword_1EA846878);
      }
      uint64_t v26 = sub_1D79DC168(a1, a2);
LABEL_16:
      uint64_t v32 = v26;
      uint64_t v33 = v27;
LABEL_17:
      sub_1D78607E8(a1, a2);
LABEL_18:
      uint64_t v63 = v32;
      uint64_t v64 = v33;
      sub_1D7A9AC58();
      sub_1D791118C();
      sub_1D7A9CA48();
      (*(void (**)(char *, uint64_t))(v16 + 8))(v25, v15);
      swift_bridgeObjectRelease();
      uint64_t v36 = (void *)sub_1D7A9BF98();
      swift_bridgeObjectRelease();
      uint64_t v37 = HexToBytes(v36);

      if (!v37)
      {
        LOWORD(v63) = 128;
        unint64_t v48 = sub_1D785EAF8(MEMORY[0x1E4FBC860]);
        sub_1D7860544();
        uint64_t v47 = (void *)swift_allocError();
        DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xD000000000000018, 0x80000001D7AC7DC0, (__int16 *)&v63, 0, v48, 0xD000000000000057, 0x80000001D7AC7DE0, v49, 0xD000000000000012, 0x80000001D7AC7E40, 178);
        swift_willThrow();
        goto LABEL_22;
      }
      uint64_t v38 = sub_1D7A9B028();
      unint64_t v40 = v39;

      uint64_t v41 = sub_1D78D0D44(v38, v40);
      unint64_t v43 = v42;
      sub_1D7A9B378();
      swift_allocObject();
      sub_1D7A9B368();
      sub_1D79DC070(&qword_1EA843380, MEMORY[0x1E4F50D80]);
      uint64_t v45 = v56;
      uint64_t v44 = v57;
      unint64_t v46 = v58;
      sub_1D7A9B338();
      if (v46)
      {
        sub_1D78607E8(v41, v43);
        swift_release();
        uint64_t v47 = v46;
LABEL_22:
        LOWORD(v63) = 128;
        id v50 = v47;
        unint64_t v51 = sub_1D785EAF8(MEMORY[0x1E4FBC860]);
        sub_1D7860544();
        swift_allocError();
        DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(v47, 0, 0xE000000000000000, (__int16 *)&v63, 0, v51, 0xD000000000000057, 0x80000001D7AC7DE0, v52, 0xD000000000000012, 0x80000001D7AC7E40, 182);
        swift_willThrow();
        sub_1D78607E8(a1, a2);

        return;
      }
      sub_1D78607E8(v41, v43);
      swift_release();
      (*(void (**)(uint64_t, char *, uint64_t))(v54 + 32))(v55, v45, v44);
      sub_1D78607E8(a1, a2);
      return;
    case 3uLL:
      *(void *)((char *)v59 + 6) = 0;
      *(void *)&v59[0] = 0;
      sub_1D79DC270(&v63);
      uint64_t v58 = v3;
      sub_1D78607E8(a1, a2);
      uint64_t v32 = v63;
      uint64_t v33 = v64;
      goto LABEL_18;
    default:
      uint64_t v58 = v3;
      uint64_t v63 = a1;
      LOWORD(v64) = a2;
      BYTE2(v64) = BYTE2(a2);
      BYTE3(v64) = BYTE3(a2);
      BYTE4(v64) = BYTE4(a2);
      BYTE5(v64) = BYTE5(a2);
      uint64_t v26 = sub_1D7A9C098();
      goto LABEL_16;
  }
}

uint64_t COSE_Sign1.init(from:)(uint64_t a1, unint64_t a2)
{
  return swift_release();
}

id sub_1D79DB68C()
{
  id result = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, 24);
  qword_1EA846848 = (uint64_t)result;
  return result;
}

uint64_t CBOR.readableString.getter()
{
  uint64_t v2 = v1;
  uint64_t v3 = v0;
  id v4 = objc_msgSend(v0, sel_type);
  unint64_t v5 = 0x65736C6166;
  switch((unint64_t)v4)
  {
    case 0uLL:
    case 1uLL:
    case 6uLL:
    case 7uLL:
    case 8uLL:
    case 0xDuLL:
      uint64_t v53 = 34;
      unint64_t v54 = 0xE100000000000000;
      id v6 = objc_msgSend(v3, sel_numeric);
      id v7 = objc_msgSend(v6, sel_description);
      sub_1D7A9BFC8();

      sub_1D7A9C128();
      goto LABEL_3;
    case 2uLL:
      id v9 = objc_msgSend(v3, sel_data);
      if (!v9)
      {
        LOWORD(v53) = 128;
        unint64_t v5 = sub_1D785EAF8(MEMORY[0x1E4FBC860]);
        sub_1D7860544();
        swift_allocError();
        uint64_t v40 = 0xD000000000000019;
        uint64_t v50 = 220;
        strcpy((char *)v49, "readableString");
        HIBYTE(v49[1]) = -18;
        uint64_t v41 = "Error while decoding data";
        goto LABEL_38;
      }
      uint64_t v10 = v9;
      uint64_t v11 = sub_1D7A9B028();
      unint64_t v13 = v12;

      id v14 = objc_msgSend(v3, sel_tag);
      if (v14)
      {
        uint64_t v15 = v14;
        id v16 = objc_msgSend(v14, sel_numeric);
      }
      else
      {
        id v16 = 0;
      }
      if (qword_1EA841618 == -1)
      {
        if (!v16) {
          goto LABEL_52;
        }
      }
      else
      {
        swift_once();
        if (!v16) {
          goto LABEL_52;
        }
      }
      unint64_t v42 = (void *)qword_1EA846848;
      sub_1D78C4038(0, (unint64_t *)&qword_1EBDF93C0);
      id v43 = v42;
      id v44 = v16;
      char v45 = sub_1D7A9C958();

      if (v45)
      {
        unint64_t v46 = self;
        uint64_t v47 = (void *)sub_1D7A9AFF8();
        id v48 = objc_msgSend(v46, sel_decodeFromData_, v47);

        if (v48)
        {
          unint64_t v5 = CBOR.readableString.getter();

          sub_1D78607E8(v11, v13);
          return v5;
        }
      }
LABEL_52:
      uint64_t v53 = 34;
      unint64_t v54 = 0xE100000000000000;
      sub_1D7A9B008();
      sub_1D7A9C128();
      swift_bridgeObjectRelease();
      sub_1D7A9C128();
      sub_1D78607E8(v11, v13);
      return v53;
    case 3uLL:
      id v17 = objc_msgSend(v3, sel_string);
      if (!v17)
      {
        LOWORD(v53) = 128;
        unint64_t v5 = sub_1D785EAF8(MEMORY[0x1E4FBC860]);
        sub_1D7860544();
        swift_allocError();
        uint64_t v40 = 0xD00000000000001BLL;
        uint64_t v50 = 226;
        strcpy((char *)v49, "readableString");
        HIBYTE(v49[1]) = -18;
        uint64_t v41 = "Error while decoding string";
        goto LABEL_38;
      }
      uint64_t v18 = v17;
      sub_1D7A9BFC8();

      uint64_t v53 = 34;
      unint64_t v54 = 0xE100000000000000;
      sub_1D7A9C128();
LABEL_3:
      swift_bridgeObjectRelease();
      goto LABEL_4;
    case 4uLL:
      id v19 = objc_msgSend(v3, sel_array);
      if (!v19)
      {
        LOWORD(v53) = 128;
        unint64_t v5 = sub_1D785EAF8(MEMORY[0x1E4FBC860]);
        sub_1D7860544();
        swift_allocError();
        uint64_t v40 = 0xD00000000000001ALL;
        uint64_t v50 = 233;
        strcpy((char *)v49, "readableString");
        HIBYTE(v49[1]) = -18;
        uint64_t v41 = "Error while decoding array";
        goto LABEL_38;
      }
      uint64_t v20 = v19;
      sub_1D78C4038(0, (unint64_t *)&qword_1EA8421A0);
      unint64_t v21 = sub_1D7A9C318();

      if (v21 >> 62) {
        goto LABEL_48;
      }
      uint64_t v22 = *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (!v22) {
        goto LABEL_49;
      }
      break;
    case 5uLL:
      id v34 = objc_msgSend(v3, sel_dictionary);
      if (!v34)
      {
        LOWORD(v53) = 128;
        unint64_t v5 = sub_1D785EAF8(MEMORY[0x1E4FBC860]);
        sub_1D7860544();
        swift_allocError();
        uint64_t v40 = 0xD00000000000001FLL;
        uint64_t v50 = 243;
        strcpy((char *)v49, "readableString");
        HIBYTE(v49[1]) = -18;
        uint64_t v41 = "Error while decoding dictionary";
LABEL_38:
        DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, v40, (unint64_t)(v41 - 32) | 0x8000000000000000, (__int16 *)&v53, 0, v5, 0xD000000000000057, 0x80000001D7AC7DE0, v39, v49[0], v49[1], v50);
        swift_willThrow();
        return v5;
      }
      unint64_t v5 = (unint64_t)v34;
      sub_1D78C4038(0, (unint64_t *)&qword_1EA8421A0);
      sub_1D79DC580();
      uint64_t v35 = sub_1D7A9BEB8();

      uint64_t v36 = sub_1D79D8B28(v35);
      swift_bridgeObjectRelease();
      if (v1) {
        return v5;
      }
      uint64_t v53 = 123;
      unint64_t v54 = 0xE100000000000000;
      uint64_t v55 = v36;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDF7900);
      sub_1D78AC5E4();
      sub_1D7A9BF38();
      swift_bridgeObjectRelease();
      sub_1D7A9C128();
      swift_bridgeObjectRelease();
      goto LABEL_4;
    case 9uLL:
      return v5;
    case 0xAuLL:
      return 1702195828;
    case 0xBuLL:
    case 0xFuLL:
      return 1819047278;
    case 0xCuLL:
      return 0x6E696665646E7522;
    case 0xEuLL:
      uint64_t v53 = 0x676154524F424322;
      unint64_t v54 = 0xE900000000000028;
      id v37 = objc_msgSend(v3, sel_numeric);
      id v38 = objc_msgSend(v37, sel_description);
      sub_1D7A9BFC8();

      sub_1D7A9C128();
      swift_bridgeObjectRelease();
      goto LABEL_4;
    default:
      return 0x6E776F6E6B6E7522;
  }
  do
  {
    uint64_t v53 = MEMORY[0x1E4FBC860];
    sub_1D78AB4E8(0, v22 & ~(v22 >> 63), 0);
    if (v22 < 0)
    {
      __break(1u);
      JUMPOUT(0x1D79DC02CLL);
    }
    uint64_t v23 = 0;
    uint64_t v24 = v53;
    unint64_t v51 = v21 & 0xC000000000000001;
    while (v22 != v23)
    {
      if (v51) {
        id v25 = (id)MEMORY[0x1D947BA10](v23, v21);
      }
      else {
        id v25 = *(id *)(v21 + 8 * v23 + 32);
      }
      unint64_t v5 = (unint64_t)v25;
      uint64_t v26 = CBOR.readableString.getter();
      if (v2)
      {
        swift_bridgeObjectRelease();
        swift_release();

        return v5;
      }
      uint64_t v28 = v26;
      uint64_t v29 = v27;
      uint64_t v52 = 0;
      unint64_t v30 = v21;

      uint64_t v53 = v24;
      unint64_t v32 = *(void *)(v24 + 16);
      unint64_t v31 = *(void *)(v24 + 24);
      if (v32 >= v31 >> 1)
      {
        sub_1D78AB4E8(v31 > 1, v32 + 1, 1);
        uint64_t v24 = v53;
      }
      ++v23;
      *(void *)(v24 + 16) = v32 + 1;
      unint64_t v33 = v24 + 16 * v32;
      *(void *)(v33 + 32) = v28;
      *(void *)(v33 + 40) = v29;
      unint64_t v21 = v30;
      uint64_t v2 = v52;
      if (v22 == v23)
      {
        swift_bridgeObjectRelease();
        goto LABEL_50;
      }
    }
    __break(1u);
LABEL_48:
    swift_bridgeObjectRetain();
    uint64_t v22 = sub_1D7A9CFB8();
    swift_bridgeObjectRelease();
  }
  while (v22);
LABEL_49:
  swift_bridgeObjectRelease();
  uint64_t v24 = MEMORY[0x1E4FBC860];
LABEL_50:
  uint64_t v53 = 91;
  unint64_t v54 = 0xE100000000000000;
  uint64_t v55 = v24;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDF7900);
  sub_1D78AC5E4();
  sub_1D7A9BF38();
  swift_bridgeObjectRelease();
  sub_1D7A9C128();
  swift_bridgeObjectRelease();
LABEL_4:
  sub_1D7A9C128();
  return v53;
}

uint64_t sub_1D79DC070(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1D79DC0B8(uint64_t a1, uint64_t a2, uint64_t a3, void *(*a4)(uint64_t *__return_ptr, uint64_t, uint64_t))
{
  uint64_t result = sub_1D7A9AC98();
  uint64_t v9 = result;
  if (result)
  {
    uint64_t result = sub_1D7A9ACB8();
    if (__OFSUB__(a1, result))
    {
LABEL_15:
      __break(1u);
      return result;
    }
    v9 += a1 - result;
  }
  BOOL v10 = __OFSUB__(a2, a1);
  uint64_t v11 = a2 - a1;
  if (v10)
  {
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v12 = sub_1D7A9ACA8();
  if (v12 >= v11) {
    uint64_t v13 = v11;
  }
  else {
    uint64_t v13 = v12;
  }
  uint64_t v14 = v9 + v13;
  if (v9) {
    uint64_t v15 = v14;
  }
  else {
    uint64_t v15 = 0;
  }
  uint64_t result = (uint64_t)sub_1D79DC21C(v9, v15, a4);
  if (v4) {
    return v16;
  }
  return result;
}

uint64_t sub_1D79DC168(uint64_t a1, unint64_t a2)
{
  sub_1D7860790(a1, a2);
  sub_1D7A74510(a1, a2);
  sub_1D78607E8(a1, a2);
  uint64_t v4 = sub_1D7A9C098();
  swift_release();
  return v4;
}

uint64_t sub_1D79DC1E0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1D7A9C098();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void *sub_1D79DC21C(uint64_t a1, uint64_t a2, void *(*a3)(uint64_t *__return_ptr, uint64_t, uint64_t))
{
  if (a1) {
    uint64_t v4 = a2 - a1;
  }
  else {
    uint64_t v4 = 0;
  }
  uint64_t result = a3(&v6, a1, v4);
  if (!v3) {
    return (void *)v6;
  }
  return result;
}

uint64_t sub_1D79DC270@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1D7A9C098();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_1D79DC2A8(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  if ((a3 & 1) == 0)
  {
    if (a1 < 0 || -(-1 << *(unsigned char *)(a4 + 32)) <= a1)
    {
      __break(1u);
    }
    else if ((*(void *)(a4 + 64 + (((unint64_t)a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> a1))
    {
      if (*(_DWORD *)(a4 + 36) == a2)
      {
        sub_1D7A9CBC8();
        return;
      }
      goto LABEL_12;
    }
    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (sub_1D7A9CF08() != *(_DWORD *)(a4 + 36))
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  sub_1D7A9CF18();
  sub_1D79DC750(a1, a2, 1);
  sub_1D78C4038(0, (unint64_t *)&qword_1EA8421A0);
  swift_unknownObjectRetain();
  swift_dynamicCast();
  swift_unknownObjectRelease();
  sub_1D7A18F28((uint64_t)v8);
  char v7 = v6;

  if (v7)
  {
    sub_1D7A9CEE8();
    sub_1D7A9CF38();
    sub_1D79DC744(a1, a2, 1);
    swift_unknownObjectRelease();
    return;
  }
LABEL_14:
  __break(1u);
}

uint64_t sub_1D79DC448(uint64_t a1)
{
  return a1;
}

void sub_1D79DC480(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, unint64_t a7)
{
  if (a3 >> 60 != 15)
  {
    sub_1D78607E8(a2, a3);
    sub_1D78607E8(a4, a5);
    sub_1D78607E8(a6, a7);
  }
}

uint64_t sub_1D79DC4F4(uint64_t a1)
{
  return a1;
}

void sub_1D79DC528(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t a5)
{
  if (a3 >> 60 != 15)
  {
    sub_1D78607E8(a2, a3);
    sub_1D78607E8(a4, a5);
  }
}

unint64_t sub_1D79DC580()
{
  unint64_t result = qword_1EA846880;
  if (!qword_1EA846880)
  {
    sub_1D78C4038(255, (unint64_t *)&qword_1EA8421A0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA846880);
  }
  return result;
}

unint64_t sub_1D79DC5EC()
{
  unint64_t result = qword_1EA846888;
  if (!qword_1EA846888)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA846888);
  }
  return result;
}

unsigned char *_s19AlgorithmIdentifierOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D79DC70CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for COSE_Sign1.AlgorithmIdentifier()
{
  return &type metadata for COSE_Sign1.AlgorithmIdentifier;
}

uint64_t sub_1D79DC744(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1D79DC750(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1D79DC75C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(void *)(*(void *)v1 + 96);
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1EBDF9740);
  sub_1D7A9C468();
  uint64_t v4 = sub_1D7A9C9A8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_1D79DC834(uint64_t a1)
{
  uint64_t v3 = v1 + *(void *)(*(void *)v1 + 96);
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1EBDF9740);
  sub_1D7A9C468();
  uint64_t v4 = sub_1D7A9C9A8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(v3, a1, v4);
  return swift_endAccess();
}

uint64_t sub_1D79DC914@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(void *)(*(void *)v1 + 104);
  swift_beginAccess();
  uint64_t v4 = sub_1D7A9C9A8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_1D79DC9C4(uint64_t a1)
{
  uint64_t v3 = v1 + *(void *)(*(void *)v1 + 104);
  swift_beginAccess();
  uint64_t v4 = sub_1D7A9C9A8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(v3, a1, v4);
  return swift_endAccess();
}

void sub_1D79DCA7C(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 112);
  uint64_t v3 = *(void **)(v1 + v2);
  *(void *)(v1 + v2) = a1;
}

uint64_t AsyncPromise.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  AsyncPromise.init()();
  return v0;
}

uint64_t *AsyncPromise.init()()
{
  uint64_t v1 = *v0;
  swift_defaultActor_initialize();
  uint64_t v2 = v1;
  uint64_t v3 = (uint64_t)v0 + *(void *)(*v0 + 96);
  uint64_t v4 = *(void *)(v2 + 80);
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1EBDF9740);
  uint64_t v5 = sub_1D7A9C468();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v3, 1, 1, v5);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))((uint64_t)v0 + *(void *)(*v0 + 104), 1, 1, v4);
  *(uint64_t *)((char *)v0 + *(void *)(*v0 + 112)) = 0;
  return v0;
}

uint64_t sub_1D79DCBF8(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  uint64_t v3 = *(void *)(*(void *)v1 + 80);
  v2[4] = v3;
  uint64_t v4 = sub_1D7A9C9A8();
  v2[5] = v4;
  v2[6] = *(void *)(v4 - 8);
  v2[7] = swift_task_alloc();
  v2[8] = *(void *)(v3 - 8);
  v2[9] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1D79DCD24, v1, 0);
}

uint64_t sub_1D79DCD24()
{
  uint64_t v1 = v0[7];
  uint64_t v2 = v0[8];
  uint64_t v3 = v0[4];
  sub_1D79DC914(v1);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v1, 1, v3) != 1)
  {
    uint64_t v8 = v0[9];
    uint64_t v9 = v0[4];
    uint64_t v10 = v0[2];
    uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0[8] + 32);
    v11(v8, v0[7], v9);
    v11(v10, v8, v9);
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v7 = (uint64_t (*)(void))v0[1];
    goto LABEL_5;
  }
  uint64_t v4 = v0[3];
  (*(void (**)(void, void))(v0[6] + 8))(v0[7], v0[5]);
  uint64_t v5 = *(void **)(v4 + *(void *)(*(void *)v4 + 112));
  if (v5)
  {
    id v6 = v5;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v7 = (uint64_t (*)(void))v0[1];
LABEL_5:
    return v7();
  }
  uint64_t v13 = v0[3];
  type metadata accessor for AsyncPromise();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v15 = (void *)swift_task_alloc();
  v0[10] = v15;
  *uint64_t v15 = v0;
  v15[1] = sub_1D79DCF54;
  uint64_t v16 = v0[3];
  uint64_t v17 = v0[4];
  uint64_t v18 = v0[2];
  return MEMORY[0x1F4188160](v18, v13, WitnessTable, 0x65756C6176, 0xE500000000000000, sub_1D79DE054, v16, v17);
}

uint64_t sub_1D79DCF54()
{
  uint64_t v2 = (void *)*v1;
  v2[11] = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = v2[3];
    return MEMORY[0x1F4188298](sub_1D79DD0A0, v3, 0);
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = (uint64_t (*)(void))v2[1];
    return v4();
  }
}

uint64_t sub_1D79DD0A0()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D79DD110(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1EBDF9740);
  uint64_t v2 = sub_1D7A9C468();
  uint64_t v3 = sub_1D7A9C9A8();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v3, v5, v6, v7, v8, v9, v10, v11);
  uint64_t v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12, v15, v16, v17, v18, v19, v20, v21);
  uint64_t v23 = (char *)&v30 - v22;
  sub_1D79DC75C((uint64_t)&v30 - v22);
  uint64_t v24 = *(void *)(v2 - 8);
  int v25 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v24 + 48))(v23, 1, v2);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v23, v3);
  if (v25 == 1)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v24 + 16))(v14, a1, v2);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(v14, 0, 1, v2);
    return sub_1D79DC834((uint64_t)v14);
  }
  else
  {
    __int16 v31 = 105;
    unint64_t v27 = sub_1D785EAF8(MEMORY[0x1E4FBC860]);
    sub_1D7860544();
    uint64_t v28 = swift_allocError();
    DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xD00000000000002BLL, 0x80000001D7AC7F10, &v31, 0, v27, 0xD000000000000055, 0x80000001D7AC7F40, v29, 0x65756C6176, 0xE500000000000000, 48);
    uint64_t v30 = v28;
    return sub_1D7A9C448();
  }
}

uint64_t sub_1D79DD3B8(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v96 = a1;
  uint64_t v3 = *v1;
  uint64_t v4 = sub_1D7A9B5F8();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v97 = v4;
  uint64_t v98 = v5;
  uint64_t v13 = MEMORY[0x1F4188790](v4, v6, v7, v8, v9, v10, v11, v12);
  uint64_t v15 = (char *)&v88 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = *(void *)(v3 + 80);
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v13, v18, v19, v20, v21, v22, v23, v24);
  os_log_type_t v89 = (char *)&v88 - v25;
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1EBDF9740);
  uint64_t v26 = sub_1D7A9C468();
  uint64_t v94 = *(void *)(v26 - 8);
  MEMORY[0x1F4188790](v26, v26, v27, v28, v29, v30, v31, v32);
  os_log_type_t v88 = (char *)&v88 - v33;
  uint64_t v95 = v34;
  uint64_t v35 = sub_1D7A9C9A8();
  uint64_t v90 = *(void *)(v35 - 8);
  uint64_t v91 = v35;
  uint64_t v43 = MEMORY[0x1F4188790](v35, v36, v37, v38, v39, v40, v41, v42);
  uint64_t v92 = (char *)&v88 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v43, v45, v46, v47, v48, v49, v50, v51);
  uint64_t v93 = (uint64_t)&v88 - v52;
  uint64_t v53 = sub_1D7A9C9A8();
  uint64_t v54 = *(void *)(v53 - 8);
  uint64_t v62 = MEMORY[0x1F4188790](v53, v55, v56, v57, v58, v59, v60, v61);
  uint64_t v64 = (char *)&v88 - ((v63 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v62, v65, v66, v67, v68, v69, v70, v71);
  uint64_t v73 = (char *)&v88 - v72;
  sub_1D79DC914((uint64_t)&v88 - v72);
  LODWORD(v3) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48))(v73, 1, v16);
  (*(void (**)(char *, uint64_t))(v54 + 8))(v73, v53);
  if (v3 == 1 && !*(void *)((char *)v2 + *(void *)(*v2 + 112)))
  {
    uint64_t v81 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 16);
    uint64_t v82 = v96;
    v81(v64, v96, v16);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v64, 0, 1, v16);
    sub_1D79DC9C4((uint64_t)v64);
    uint64_t v83 = v93;
    sub_1D79DC75C(v93);
    uint64_t v85 = v94;
    uint64_t v84 = v95;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v94 + 48))(v83, 1, v95))
    {
      (*(void (**)(uint64_t, uint64_t))(v90 + 8))(v83, v91);
    }
    else
    {
      unint64_t v86 = v88;
      (*(void (**)(char *, uint64_t, uint64_t))(v85 + 16))(v88, v83, v84);
      (*(void (**)(uint64_t, uint64_t))(v90 + 8))(v83, v91);
      v81(v89, v82, v16);
      sub_1D7A9C458();
      (*(void (**)(char *, uint64_t))(v85 + 8))(v86, v84);
    }
    uint64_t v87 = (uint64_t)v92;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v85 + 56))(v92, 1, 1, v84);
    return sub_1D79DC834(v87);
  }
  else
  {
    if (qword_1EBDF9DC8 != -1) {
      swift_once();
    }
    uint64_t v74 = v97;
    uint64_t v75 = __swift_project_value_buffer(v97, (uint64_t)qword_1EBDFBE70);
    swift_beginAccess();
    uint64_t v76 = v98;
    (*(void (**)(char *, uint64_t, uint64_t))(v98 + 16))(v15, v75, v74);
    unint64_t v77 = sub_1D7A9B5D8();
    os_log_type_t v78 = sub_1D7A9C758();
    if (os_log_type_enabled(v77, v78))
    {
      uint64_t v79 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v79 = 0;
      _os_log_impl(&dword_1D7853000, v77, v78, "AsyncPromise attempting to fulfill result but a result is already set", v79, 2u);
      MEMORY[0x1D947D740](v79, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v76 + 8))(v15, v74);
  }
}

uint64_t sub_1D79DD994(void *a1)
{
  uint64_t v2 = v1;
  id v73 = a1;
  uint64_t v3 = *v1;
  uint64_t v4 = sub_1D7A9B5F8();
  uint64_t v74 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4, v5, v6, v7, v8, v9, v10, v11);
  uint64_t v13 = (char *)&v68 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(void *)(v3 + 80);
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1EBDF9740);
  uint64_t v15 = sub_1D7A9C468();
  uint64_t v72 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15, v16, v17, v18, v19, v20, v21, v22);
  uint64_t v68 = (char *)&v68 - v23;
  uint64_t v24 = sub_1D7A9C9A8();
  uint64_t v69 = *(void *)(v24 - 8);
  uint64_t v70 = v24;
  uint64_t v32 = MEMORY[0x1F4188790](v24, v25, v26, v27, v28, v29, v30, v31);
  uint64_t v71 = (char *)&v68 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v32, v34, v35, v36, v37, v38, v39, v40);
  uint64_t v42 = (char *)&v68 - v41;
  uint64_t v43 = sub_1D7A9C9A8();
  uint64_t v44 = *(void *)(v43 - 8);
  MEMORY[0x1F4188790](v43, v45, v46, v47, v48, v49, v50, v51);
  uint64_t v53 = (char *)&v68 - v52;
  sub_1D79DC914((uint64_t)&v68 - v52);
  LODWORD(v3) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48))(v53, 1, v14);
  (*(void (**)(char *, uint64_t))(v44 + 8))(v53, v43);
  if (v3 == 1 && !*(void *)((char *)v2 + *(void *)(*v2 + 112)))
  {
    id v60 = v73;
    id v61 = v73;
    uint64_t v62 = *(void *)(*v2 + 112);
    uint64_t v63 = *(void **)((char *)v2 + v62);
    *(void *)((char *)v2 + v62) = v60;

    sub_1D79DC75C((uint64_t)v42);
    uint64_t v64 = v72;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v72 + 48))(v42, 1, v15))
    {
      (*(void (**)(char *, uint64_t))(v69 + 8))(v42, v70);
    }
    else
    {
      uint64_t v65 = v68;
      (*(void (**)(char *, char *, uint64_t))(v64 + 16))(v68, v42, v15);
      (*(void (**)(char *, uint64_t))(v69 + 8))(v42, v70);
      id v75 = v60;
      id v66 = v60;
      sub_1D7A9C448();
      (*(void (**)(char *, uint64_t))(v64 + 8))(v65, v15);
    }
    uint64_t v67 = (uint64_t)v71;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v64 + 56))(v71, 1, 1, v15);
    return sub_1D79DC834(v67);
  }
  else
  {
    if (qword_1EBDF9DC8 != -1) {
      swift_once();
    }
    uint64_t v54 = __swift_project_value_buffer(v4, (uint64_t)qword_1EBDFBE70);
    swift_beginAccess();
    uint64_t v55 = v74;
    (*(void (**)(char *, uint64_t, uint64_t))(v74 + 16))(v13, v54, v4);
    uint64_t v56 = sub_1D7A9B5D8();
    os_log_type_t v57 = sub_1D7A9C758();
    if (os_log_type_enabled(v56, v57))
    {
      uint64_t v58 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v58 = 0;
      _os_log_impl(&dword_1D7853000, v56, v57, "AsyncPromise attempting to set a fail result but a result is already set", v58, 2u);
      MEMORY[0x1D947D740](v58, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v55 + 8))(v13, v4);
  }
}

uint64_t AsyncPromise.deinit()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 96);
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1EBDF9740);
  sub_1D7A9C468();
  uint64_t v2 = sub_1D7A9C9A8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + *(void *)(*(void *)v0 + 104);
  uint64_t v4 = sub_1D7A9C9A8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);

  swift_defaultActor_destroy();
  return v0;
}

uint64_t AsyncPromise.__deallocating_deinit()
{
  AsyncPromise.deinit();
  return MEMORY[0x1F4188210](v0);
}

uint64_t AsyncPromise.unownedExecutor.getter()
{
  return v0;
}

uint64_t sub_1D79DE020()
{
  return AsyncPromise.unownedExecutor.getter();
}

uint64_t type metadata accessor for AsyncPromise()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1D79DE054(uint64_t a1)
{
  return sub_1D79DD110(a1);
}

uint64_t sub_1D79DE05C()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1EBDF9740);
  sub_1D7A9C468();
  uint64_t result = sub_1D7A9C9A8();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_1D7A9C9A8();
    if (v2 <= 0x3F) {
      return swift_initClassMetadata2();
    }
  }
  return result;
}

uint64_t method lookup function for AsyncPromise(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for AsyncPromise);
}

uint64_t dispatch thunk of AsyncPromise.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 192))();
}

uint64_t dispatch thunk of AsyncPromise.value.getter(uint64_t a1)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))(*(void *)(*(void *)v1 + 200) + **(int **)(*(void *)v1 + 200));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_1D786EC1C;
  return v6(a1);
}

uint64_t dispatch thunk of AsyncPromise.fulfill(value:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 208))();
}

uint64_t dispatch thunk of AsyncPromise.fail(error:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 216))();
}

uint64_t sub_1D79DE2E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!*(void *)(a3 + 16)) {
    return 0;
  }
  uint64_t v4 = sub_1D7A18684(a1, a2);
  if ((v5 & 1) == 0) {
    return 0;
  }
  uint64_t v6 = *(void *)(*(void *)(a3 + 56) + 16 * v4);
  swift_bridgeObjectRetain();
  return v6;
}

void __swiftcall PDF417ParsedData.init(docType:aamvaVersion:map:)(CoreIDVShared::PDF417ParsedData *__return_ptr retstr, Swift::String docType, Swift::String aamvaVersion, Swift::OpaquePointer map)
{
  uint64_t v4 = ((uint64_t (*)(uint64_t, void *, uint64_t, void *, void *))MEMORY[0x1F4188790])(docType._countAndFlagsBits, docType._object, aamvaVersion._countAndFlagsBits, aamvaVersion._object, map._rawValue);
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  uint64_t v10 = v9;
  uint64_t v11 = v4;
  __dst = v12;
  uint64_t v390 = v13;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (*(void *)(v6 + 16) && (uint64_t v14 = sub_1D7A18684(4277060, 0xE300000000000000), (v15 & 1) != 0))
  {
    uint64_t v16 = (uint64_t *)(*(void *)(v6 + 56) + 16 * v14);
    uint64_t v17 = *v16;
    uint64_t v18 = v16[1];
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v17 = 0;
    uint64_t v18 = 0;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v1385[0] = v11;
  v1385[1] = v10;
  v1385[3] = 0;
  v1385[2] = 0;
  v1385[4] = v8;
  v1385[5] = v390;
  v1385[7] = 0;
  v1385[6] = 0;
  uint64_t v389 = v17;
  v1385[8] = v17;
  v1385[9] = v18;
  bzero(&v1386, 0x310uLL);
  uint64_t v19 = *(void *)(v6 + 16);
  sub_1D79EDF18((uint64_t)v1385);
  uint64_t v383 = v10;
  if (v19)
  {
    sub_1D7A18684(4407620, 0xE300000000000000);
    if (v20) {
      swift_bridgeObjectRetain();
    }
  }
  sub_1D7A9C048();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_1D791118C();
  uint64_t v21 = sub_1D7A9CA38();
  uint64_t v23 = v22;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1D79EE240((uint64_t)v1385);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v1378[0] = v11;
  v1378[1] = v10;
  v1378[3] = 0;
  v1378[2] = 0;
  v1378[4] = v8;
  v1378[5] = v390;
  v1378[7] = 0;
  v1378[6] = 0;
  v1378[8] = v389;
  v1378[9] = v18;
  long long v1379 = 0u;
  long long v1380 = 0u;
  long long v1381 = 0u;
  uint64_t v387 = v21;
  uint64_t v1382 = v21;
  uint64_t v386 = v23;
  uint64_t v1383 = v23;
  bzero(&v1384, 0x2D0uLL);
  uint64_t v24 = *(void *)(v6 + 16);
  sub_1D79EDF18((uint64_t)v1378);
  if (v24)
  {
    sub_1D7A18684(4473156, 0xE300000000000000);
    if (v25) {
      swift_bridgeObjectRetain();
    }
  }
  uint64_t v26 = sub_1D7A9C048();
  uint64_t v28 = v27;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v1358 = v26;
  uint64_t v1359 = v28;
  uint64_t v384 = sub_1D7A9CA38();
  uint64_t v30 = v29;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1D79EE240((uint64_t)v1378);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v385 = v11;
  if (*(void *)(v6 + 16))
  {
    uint64_t v31 = sub_1D7A18684(4407876, 0xE300000000000000);
    uint64_t v32 = v389;
    if (v33)
    {
      uint64_t v34 = (uint64_t *)(*(void *)(v6 + 56) + 16 * v31);
      uint64_t v35 = *v34;
      uint64_t v36 = v34[1];
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v35 = 0;
      uint64_t v36 = 0;
    }
  }
  else
  {
    uint64_t v35 = 0;
    uint64_t v36 = 0;
    uint64_t v32 = v389;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v1358 = v11;
  uint64_t v1359 = v383;
  uint64_t v1361 = 0;
  uint64_t v1360 = 0;
  uint64_t v1362 = v8;
  uint64_t v1363 = v390;
  uint64_t v1365 = 0;
  uint64_t v1364 = 0;
  uint64_t v1366 = v32;
  uint64_t v1367 = v18;
  long long v1368 = 0u;
  long long v1369 = 0u;
  long long v1370 = 0u;
  uint64_t v1371 = v387;
  uint64_t v1372 = v386;
  uint64_t v1373 = v384;
  uint64_t v1374 = v30;
  uint64_t v380 = v35;
  uint64_t v1375 = v35;
  uint64_t v1376 = v36;
  bzero(&v1377, 0x2B0uLL);
  uint64_t v37 = *(void *)(v6 + 16);
  sub_1D79EDF18((uint64_t)&v1358);
  uint64_t v388 = v30;
  if (v37)
  {
    sub_1D7A18684(5849412, 0xE300000000000000);
    if (v38) {
      swift_bridgeObjectRetain();
    }
  }
  uint64_t v39 = sub_1D7A9C048();
  uint64_t v41 = v40;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v1334 = v39;
  uint64_t v1335 = v41;
  uint64_t v329 = sub_1D7A9CA38();
  uint64_t v43 = v42;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1D79EE240((uint64_t)&v1358);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v379 = v8;
  if (*(void *)(v6 + 16))
  {
    uint64_t v44 = sub_1D7A18684(5587268, 0xE300000000000000);
    uint64_t v45 = v389;
    uint64_t v46 = v388;
    if (v47)
    {
      uint64_t v48 = *(void *)(*(void *)(v6 + 56) + 16 * v44);
      uint64_t v49 = swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v48 = 0;
      uint64_t v49 = 0;
    }
  }
  else
  {
    uint64_t v48 = 0;
    uint64_t v49 = 0;
    uint64_t v45 = v389;
    uint64_t v46 = v388;
  }
  uint64_t v50 = v49;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v1334 = v385;
  uint64_t v1335 = v383;
  uint64_t v1337 = 0;
  uint64_t v1336 = 0;
  uint64_t v1338 = v379;
  uint64_t v1339 = v390;
  uint64_t v1341 = 0;
  uint64_t v1340 = 0;
  uint64_t v1342 = v45;
  uint64_t v1343 = v18;
  long long v1344 = 0u;
  long long v1345 = 0u;
  long long v1346 = 0u;
  uint64_t v1347 = v387;
  uint64_t v1348 = v386;
  uint64_t v1349 = v384;
  uint64_t v1350 = v46;
  uint64_t v1351 = v380;
  uint64_t v1352 = v36;
  uint64_t v1353 = v329;
  uint64_t v1354 = v43;
  uint64_t v369 = v48;
  uint64_t v1355 = v48;
  uint64_t v381 = v50;
  uint64_t v1356 = v50;
  bzero(&v1357, 0x290uLL);
  uint64_t v51 = *(void *)(v6 + 16);
  sub_1D79EDF18((uint64_t)&v1334);
  uint64_t v382 = v43;
  if (v51)
  {
    sub_1D7A18684(4669764, 0xE300000000000000);
    if (v52) {
      swift_bridgeObjectRetain();
    }
  }
  sub_1D7A9C048();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v53 = sub_1D7A9CA38();
  uint64_t v55 = v54;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1D79EE240((uint64_t)&v1334);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v1317[0] = v385;
  v1317[1] = v383;
  v1317[3] = 0;
  v1317[2] = 0;
  v1317[4] = v379;
  v1317[5] = v390;
  v1317[7] = 0;
  v1317[6] = 0;
  v1317[8] = v389;
  v1317[9] = v18;
  long long v1318 = 0u;
  long long v1319 = 0u;
  long long v1320 = 0u;
  uint64_t v1321 = v387;
  uint64_t v1322 = v386;
  uint64_t v1323 = v384;
  uint64_t v1324 = v388;
  uint64_t v1325 = v380;
  uint64_t v1326 = v36;
  uint64_t v1327 = v329;
  uint64_t v1328 = v382;
  uint64_t v1329 = v369;
  uint64_t v1330 = v50;
  uint64_t v360 = v53;
  uint64_t v1331 = v53;
  uint64_t v378 = v55;
  uint64_t v1332 = v55;
  bzero(&v1333, 0x280uLL);
  uint64_t v56 = *(void *)(v6 + 16);
  sub_1D79EDF18((uint64_t)v1317);
  if (v56)
  {
    sub_1D7A18684(4800836, 0xE300000000000000);
    if (v57) {
      swift_bridgeObjectRetain();
    }
  }
  uint64_t v58 = sub_1D7A9C048();
  uint64_t v60 = v59;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v1243 = v58;
  uint64_t v1244 = v60;
  uint64_t v368 = sub_1D7A9CA38();
  uint64_t v62 = v61;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1D79EE240((uint64_t)v1317);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (*(void *)(v6 + 16) && (uint64_t v63 = sub_1D7A18684(4866372, 0xE300000000000000), (v64 & 1) != 0))
  {
    uint64_t v65 = (uint64_t *)(*(void *)(v6 + 56) + 16 * v63);
    uint64_t v66 = v65[1];
    uint64_t v367 = *v65;
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v367 = 0;
    uint64_t v66 = 0;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (*(void *)(v6 + 16) && (uint64_t v67 = sub_1D7A18684(4931908, 0xE300000000000000), (v68 & 1) != 0))
  {
    uint64_t v366 = *(void *)(*(void *)(v6 + 56) + 16 * v67);
    uint64_t v69 = swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v366 = 0;
    uint64_t v69 = 0;
  }
  uint64_t v376 = v69;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v377 = v66;
  if (*(void *)(v6 + 16) && (uint64_t v70 = sub_1D7A18684(5325124, 0xE300000000000000), (v71 & 1) != 0))
  {
    uint64_t v365 = *(void *)(*(void *)(v6 + 56) + 16 * v70);
    uint64_t v72 = swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v365 = 0;
    uint64_t v72 = 0;
  }
  uint64_t v375 = v72;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (*(void *)(v6 + 16) && (uint64_t v73 = sub_1D7A18684(4604740, 0xE300000000000000), (v74 & 1) != 0))
  {
    uint64_t v364 = *(void *)(*(void *)(v6 + 56) + 16 * v73);
    uint64_t v75 = swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v364 = 0;
    uint64_t v75 = 0;
  }
  uint64_t v374 = v75;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (*(void *)(v6 + 16) && (uint64_t v76 = sub_1D7A18684(4670276, 0xE300000000000000), (v77 & 1) != 0))
  {
    uint64_t v363 = *(void *)(*(void *)(v6 + 56) + 16 * v76);
    uint64_t v78 = swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v363 = 0;
    uint64_t v78 = 0;
  }
  uint64_t v373 = v78;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (*(void *)(v6 + 16) && (uint64_t v79 = sub_1D7A18684(4539460, 0xE300000000000000), (v80 & 1) != 0))
  {
    uint64_t v362 = *(void *)(*(void *)(v6 + 56) + 16 * v79);
    uint64_t v81 = swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v362 = 0;
    uint64_t v81 = 0;
  }
  uint64_t v372 = v81;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (*(void *)(v6 + 16) && (uint64_t v82 = sub_1D7A18684(4604996, 0xE300000000000000), (v83 & 1) != 0))
  {
    uint64_t v361 = *(void *)(*(void *)(v6 + 56) + 16 * v82);
    uint64_t v84 = swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v361 = 0;
    uint64_t v84 = 0;
  }
  uint64_t v371 = v84;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (*(void *)(v6 + 16) && (uint64_t v85 = sub_1D7A18684(4670532, 0xE300000000000000), (v86 & 1) != 0))
  {
    uint64_t v87 = (uint64_t *)(*(void *)(v6 + 56) + 16 * v85);
    uint64_t v88 = *v87;
    uint64_t v89 = v87[1];
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v88 = 0;
    uint64_t v89 = 0;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v1243 = v385;
  uint64_t v1244 = v383;
  uint64_t v1246 = 0;
  uint64_t v1245 = 0;
  uint64_t v1247 = v379;
  uint64_t v1248 = v390;
  uint64_t v1250 = 0;
  uint64_t v1249 = 0;
  uint64_t v1251 = v389;
  uint64_t v1252 = v18;
  long long v1253 = 0u;
  long long v1254 = 0u;
  long long v1255 = 0u;
  uint64_t v1256 = v387;
  uint64_t v1257 = v386;
  uint64_t v1258 = v384;
  uint64_t v1259 = v388;
  uint64_t v1260 = v380;
  uint64_t v1261 = v36;
  uint64_t v1262 = v329;
  uint64_t v1263 = v382;
  uint64_t v1264 = v369;
  uint64_t v1265 = v50;
  uint64_t v1266 = v360;
  uint64_t v1267 = v378;
  uint64_t v1268 = v368;
  uint64_t v1269 = v62;
  uint64_t v1270 = v367;
  uint64_t v1271 = v66;
  uint64_t v1272 = v366;
  uint64_t v1273 = v376;
  uint64_t v1274 = v365;
  uint64_t v1275 = v375;
  uint64_t v1276 = v364;
  uint64_t v1277 = v374;
  uint64_t v1278 = v363;
  uint64_t v1279 = v373;
  uint64_t v1280 = v362;
  uint64_t v1281 = v372;
  uint64_t v1282 = v361;
  uint64_t v1283 = v371;
  uint64_t v355 = v88;
  uint64_t v1284 = v88;
  uint64_t v1285 = v89;
  long long v1316 = 0u;
  long long v1315 = 0u;
  long long v1314 = 0u;
  long long v1313 = 0u;
  long long v1312 = 0u;
  long long v1311 = 0u;
  long long v1310 = 0u;
  long long v1309 = 0u;
  long long v1308 = 0u;
  long long v1307 = 0u;
  long long v1306 = 0u;
  long long v1305 = 0u;
  long long v1304 = 0u;
  long long v1303 = 0u;
  long long v1302 = 0u;
  long long v1301 = 0u;
  long long v1300 = 0u;
  long long v1299 = 0u;
  long long v1298 = 0u;
  long long v1297 = 0u;
  long long v1296 = 0u;
  long long v1295 = 0u;
  long long v1294 = 0u;
  long long v1293 = 0u;
  long long v1292 = 0u;
  long long v1291 = 0u;
  long long v1290 = 0u;
  long long v1289 = 0u;
  long long v1288 = 0u;
  long long v1287 = 0u;
  long long v1286 = 0u;
  uint64_t v90 = *(void *)(v6 + 16);
  sub_1D79EDF18((uint64_t)&v1243);
  if (v90)
  {
    sub_1D7A18684(4735300, 0xE300000000000000);
    if (v91) {
      swift_bridgeObjectRetain();
    }
  }
  sub_1D7A9C048();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v92 = sub_1D7A9CA38();
  uint64_t v94 = v93;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1D79EE240((uint64_t)&v1243);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v1177[0] = v385;
  v1177[1] = v383;
  v1177[3] = 0;
  v1177[2] = 0;
  v1177[4] = v379;
  v1177[5] = v390;
  v1177[7] = 0;
  v1177[6] = 0;
  v1177[8] = v389;
  v1177[9] = v18;
  long long v1178 = 0u;
  long long v1179 = 0u;
  long long v1180 = 0u;
  uint64_t v1181 = v387;
  uint64_t v1182 = v386;
  uint64_t v1183 = v384;
  uint64_t v1184 = v388;
  uint64_t v1185 = v380;
  uint64_t v1186 = v36;
  uint64_t v1187 = v329;
  uint64_t v1188 = v382;
  uint64_t v1189 = v369;
  uint64_t v1190 = v50;
  uint64_t v1191 = v360;
  uint64_t v1192 = v378;
  uint64_t v1193 = v368;
  uint64_t v1194 = v62;
  uint64_t v1195 = v367;
  uint64_t v1196 = v377;
  uint64_t v1197 = v366;
  uint64_t v1198 = v376;
  uint64_t v1199 = v365;
  uint64_t v1200 = v375;
  uint64_t v1201 = v364;
  uint64_t v1202 = v374;
  uint64_t v1203 = v363;
  uint64_t v1204 = v373;
  uint64_t v1205 = v362;
  uint64_t v1206 = v372;
  uint64_t v1207 = v361;
  uint64_t v1208 = v371;
  uint64_t v1209 = v88;
  uint64_t v1210 = v89;
  long long v1213 = 0u;
  long long v1212 = 0u;
  long long v1211 = 0u;
  uint64_t v351 = v92;
  uint64_t v1214 = v92;
  uint64_t v359 = v94;
  uint64_t v1215 = v94;
  long long v1242 = 0u;
  long long v1241 = 0u;
  long long v1240 = 0u;
  long long v1239 = 0u;
  long long v1238 = 0u;
  long long v1237 = 0u;
  long long v1236 = 0u;
  long long v1235 = 0u;
  long long v1234 = 0u;
  long long v1233 = 0u;
  long long v1232 = 0u;
  long long v1231 = 0u;
  long long v1230 = 0u;
  long long v1229 = 0u;
  long long v1228 = 0u;
  long long v1227 = 0u;
  long long v1226 = 0u;
  long long v1225 = 0u;
  long long v1224 = 0u;
  long long v1223 = 0u;
  long long v1222 = 0u;
  long long v1221 = 0u;
  long long v1220 = 0u;
  long long v1219 = 0u;
  long long v1218 = 0u;
  long long v1217 = 0u;
  long long v1216 = 0u;
  uint64_t v95 = *(void *)(v6 + 16);
  sub_1D79EDF18((uint64_t)v1177);
  if (v95)
  {
    sub_1D7A18684(5914948, 0xE300000000000000);
    if (v96) {
      swift_bridgeObjectRetain();
    }
  }
  uint64_t v97 = sub_1D7A9C048();
  uint64_t v99 = v98;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v1098 = v97;
  uint64_t v1099 = v99;
  uint64_t v350 = sub_1D7A9CA38();
  uint64_t v358 = v100;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1D79EE240((uint64_t)v1177);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (*(void *)(v6 + 16))
  {
    uint64_t v101 = sub_1D7A18684(4801348, 0xE300000000000000);
    uint64_t v102 = v389;
    if (v103)
    {
      uint64_t v349 = *(void *)(*(void *)(v6 + 56) + 16 * v101);
      uint64_t v104 = swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v349 = 0;
      uint64_t v104 = 0;
    }
  }
  else
  {
    uint64_t v349 = 0;
    uint64_t v104 = 0;
    uint64_t v102 = v389;
  }
  uint64_t v357 = v104;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (*(void *)(v6 + 16) && (uint64_t v105 = sub_1D7A18684(4866884, 0xE300000000000000), (v106 & 1) != 0))
  {
    uint64_t v348 = *(void *)(*(void *)(v6 + 56) + 16 * v105);
    uint64_t v107 = swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v348 = 0;
    uint64_t v107 = 0;
  }
  uint64_t v356 = v107;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v353 = v18;
  if (*(void *)(v6 + 16) && (uint64_t v108 = sub_1D7A18684(4932420, 0xE300000000000000), (v109 & 1) != 0))
  {
    uint64_t v110 = (uint64_t *)(*(void *)(v6 + 56) + 16 * v108);
    uint64_t v112 = *v110;
    uint64_t v111 = v110[1];
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v112 = 0;
    uint64_t v111 = 0;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v1098 = v385;
  uint64_t v1099 = v383;
  uint64_t v1101 = 0;
  uint64_t v1100 = 0;
  uint64_t v1102 = v379;
  uint64_t v1103 = v390;
  uint64_t v1105 = 0;
  uint64_t v1104 = 0;
  uint64_t v1106 = v102;
  uint64_t v1107 = v353;
  long long v1108 = 0u;
  long long v1109 = 0u;
  long long v1110 = 0u;
  uint64_t v1111 = v387;
  uint64_t v1112 = v386;
  uint64_t v1113 = v384;
  uint64_t v1114 = v388;
  uint64_t v1115 = v380;
  uint64_t v1116 = v36;
  uint64_t v1117 = v329;
  uint64_t v1118 = v382;
  uint64_t v1119 = v369;
  uint64_t v1120 = v50;
  uint64_t v1121 = v360;
  uint64_t v1122 = v378;
  uint64_t v1123 = v368;
  uint64_t v1124 = v62;
  uint64_t v1125 = v367;
  uint64_t v1126 = v377;
  uint64_t v1127 = v366;
  uint64_t v1128 = v376;
  uint64_t v1129 = v365;
  uint64_t v1130 = v375;
  uint64_t v1131 = v364;
  uint64_t v1132 = v374;
  uint64_t v1133 = v363;
  uint64_t v1134 = v373;
  uint64_t v1135 = v362;
  uint64_t v1136 = v372;
  uint64_t v1137 = v361;
  uint64_t v1138 = v371;
  uint64_t v1139 = v355;
  uint64_t v1140 = v89;
  long long v1143 = 0u;
  long long v1142 = 0u;
  long long v1141 = 0u;
  uint64_t v1144 = v351;
  uint64_t v1145 = v359;
  uint64_t v1146 = v350;
  uint64_t v1147 = v358;
  uint64_t v1148 = v349;
  uint64_t v1149 = v357;
  uint64_t v1150 = v348;
  uint64_t v1151 = v356;
  uint64_t v345 = v112;
  uint64_t v1152 = v112;
  uint64_t v354 = v111;
  uint64_t v1153 = v111;
  long long v1154 = 0u;
  long long v1155 = 0u;
  long long v1156 = 0u;
  long long v1157 = 0u;
  long long v1158 = 0u;
  long long v1159 = 0u;
  long long v1160 = 0u;
  long long v1161 = 0u;
  long long v1162 = 0u;
  long long v1163 = 0u;
  long long v1164 = 0u;
  long long v1165 = 0u;
  long long v1166 = 0u;
  long long v1167 = 0u;
  long long v1168 = 0u;
  long long v1169 = 0u;
  long long v1170 = 0u;
  long long v1171 = 0u;
  long long v1172 = 0u;
  long long v1173 = 0u;
  long long v1174 = 0u;
  long long v1175 = 0u;
  long long v1176 = 0u;
  uint64_t v113 = *(void *)(v6 + 16);
  sub_1D79EDF18((uint64_t)&v1098);
  if (v113)
  {
    sub_1D7A18684(5128772, 0xE300000000000000);
    if (v114) {
      swift_bridgeObjectRetain();
    }
  }
  sub_1D7A9C048();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v115 = sub_1D7A9CA38();
  uint64_t v117 = v116;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1D79EE240((uint64_t)&v1098);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v1027[0] = v385;
  v1027[1] = v383;
  v1027[3] = 0;
  v1027[2] = 0;
  v1027[4] = v379;
  v1027[5] = v390;
  v1027[7] = 0;
  v1027[6] = 0;
  v1027[8] = v389;
  v1027[9] = v353;
  long long v1028 = 0u;
  long long v1029 = 0u;
  long long v1030 = 0u;
  uint64_t v1031 = v387;
  uint64_t v1032 = v386;
  uint64_t v1033 = v384;
  uint64_t v1034 = v388;
  uint64_t v1035 = v380;
  uint64_t v1036 = v36;
  uint64_t v1037 = v329;
  uint64_t v1038 = v382;
  uint64_t v1039 = v369;
  uint64_t v1040 = v50;
  uint64_t v1041 = v360;
  uint64_t v1042 = v378;
  uint64_t v1043 = v368;
  uint64_t v1044 = v62;
  uint64_t v1045 = v367;
  uint64_t v1046 = v377;
  uint64_t v1047 = v366;
  uint64_t v1048 = v376;
  uint64_t v1049 = v365;
  uint64_t v1050 = v375;
  uint64_t v1051 = v364;
  uint64_t v1052 = v374;
  uint64_t v1053 = v363;
  uint64_t v1054 = v373;
  uint64_t v1055 = v362;
  uint64_t v1056 = v372;
  uint64_t v1057 = v361;
  uint64_t v1058 = v371;
  uint64_t v1059 = v355;
  uint64_t v1060 = v89;
  long long v1063 = 0u;
  long long v1062 = 0u;
  long long v1061 = 0u;
  uint64_t v1064 = v351;
  uint64_t v1065 = v359;
  uint64_t v1066 = v350;
  uint64_t v1067 = v358;
  uint64_t v1068 = v349;
  uint64_t v1069 = v357;
  uint64_t v1070 = v348;
  uint64_t v1071 = v356;
  uint64_t v1072 = v345;
  uint64_t v1073 = v111;
  uint64_t v1074 = v115;
  uint64_t v347 = v117;
  uint64_t v1075 = v117;
  long long v1097 = 0u;
  long long v1096 = 0u;
  long long v1095 = 0u;
  long long v1094 = 0u;
  long long v1093 = 0u;
  long long v1092 = 0u;
  long long v1091 = 0u;
  long long v1090 = 0u;
  long long v1089 = 0u;
  long long v1088 = 0u;
  long long v1087 = 0u;
  long long v1086 = 0u;
  long long v1085 = 0u;
  long long v1084 = 0u;
  long long v1083 = 0u;
  long long v1082 = 0u;
  long long v1081 = 0u;
  long long v1080 = 0u;
  long long v1079 = 0u;
  long long v1078 = 0u;
  long long v1077 = 0u;
  long long v1076 = 0u;
  uint64_t v118 = *(void *)(v6 + 16);
  sub_1D79EDF18((uint64_t)v1027);
  uint64_t v352 = v62;
  if (v118)
  {
    sub_1D7A18684(4670020, 0xE300000000000000);
    if (v119) {
      swift_bridgeObjectRetain();
    }
  }
  sub_1D7A9C048();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v120 = sub_1D7A9CA38();
  uint64_t v122 = v121;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1D79EE240((uint64_t)v1027);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v955[0] = v385;
  v955[1] = v383;
  v955[3] = 0;
  v955[2] = 0;
  v955[4] = v379;
  v955[5] = v390;
  v955[7] = 0;
  v955[6] = 0;
  v955[8] = v389;
  v955[9] = v353;
  long long v956 = 0u;
  long long v957 = 0u;
  long long v958 = 0u;
  uint64_t v959 = v387;
  uint64_t v960 = v386;
  uint64_t v961 = v384;
  uint64_t v962 = v388;
  uint64_t v963 = v380;
  uint64_t v964 = v36;
  uint64_t v965 = v329;
  uint64_t v966 = v382;
  uint64_t v967 = v369;
  uint64_t v968 = v50;
  uint64_t v969 = v360;
  uint64_t v970 = v378;
  uint64_t v971 = v368;
  uint64_t v972 = v62;
  uint64_t v973 = v367;
  uint64_t v974 = v377;
  uint64_t v975 = v366;
  uint64_t v976 = v376;
  uint64_t v977 = v365;
  uint64_t v978 = v375;
  uint64_t v979 = v364;
  uint64_t v980 = v374;
  uint64_t v981 = v363;
  uint64_t v982 = v373;
  uint64_t v983 = v362;
  uint64_t v984 = v372;
  uint64_t v985 = v361;
  uint64_t v986 = v371;
  uint64_t v987 = v355;
  uint64_t v988 = v89;
  long long v991 = 0u;
  long long v990 = 0u;
  long long v989 = 0u;
  uint64_t v992 = v351;
  uint64_t v993 = v359;
  uint64_t v994 = v350;
  uint64_t v995 = v358;
  uint64_t v996 = v349;
  uint64_t v997 = v357;
  uint64_t v998 = v348;
  uint64_t v999 = v356;
  uint64_t v1000 = v345;
  uint64_t v1001 = v111;
  uint64_t v1002 = v115;
  uint64_t v1003 = v347;
  uint64_t v336 = v120;
  uint64_t v1004 = v120;
  uint64_t v342 = v122;
  uint64_t v1005 = v122;
  long long v1026 = 0u;
  long long v1025 = 0u;
  long long v1024 = 0u;
  long long v1023 = 0u;
  long long v1022 = 0u;
  long long v1021 = 0u;
  long long v1020 = 0u;
  long long v1019 = 0u;
  long long v1018 = 0u;
  long long v1017 = 0u;
  long long v1016 = 0u;
  long long v1015 = 0u;
  long long v1014 = 0u;
  long long v1013 = 0u;
  long long v1012 = 0u;
  long long v1011 = 0u;
  long long v1010 = 0u;
  long long v1009 = 0u;
  long long v1008 = 0u;
  long long v1007 = 0u;
  long long v1006 = 0u;
  uint64_t v123 = *(void *)(v6 + 16);
  sub_1D79EDF18((uint64_t)v955);
  uint64_t v343 = v89;
  if (v123)
  {
    sub_1D7A18684(5456452, 0xE300000000000000);
    if (v124) {
      swift_bridgeObjectRetain();
    }
  }
  uint64_t v125 = sub_1D7A9C048();
  uint64_t v127 = v126;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v870 = v125;
  uint64_t v871 = v127;
  uint64_t v335 = sub_1D7A9CA38();
  uint64_t v341 = v128;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1D79EE240((uint64_t)v955);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v344 = v36;
  if (*(void *)(v6 + 16) && (uint64_t v129 = sub_1D7A18684(4539204, 0xE300000000000000), (v130 & 1) != 0))
  {
    uint64_t v131 = (uint64_t *)(*(void *)(v6 + 56) + 16 * v129);
    uint64_t v132 = v131[1];
    uint64_t v334 = *v131;
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v334 = 0;
    uint64_t v132 = 0;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (*(void *)(v6 + 16) && (uint64_t v133 = sub_1D7A18684(4997956, 0xE300000000000000), (v134 & 1) != 0))
  {
    uint64_t v333 = *(void *)(*(void *)(v6 + 56) + 16 * v133);
    uint64_t v135 = swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v333 = 0;
    uint64_t v135 = 0;
  }
  uint64_t v339 = v135;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (*(void *)(v6 + 16) && (uint64_t v136 = sub_1D7A18684(5063492, 0xE300000000000000), (v137 & 1) != 0))
  {
    uint64_t v138 = (uint64_t *)(*(void *)(v6 + 56) + 16 * v136);
    uint64_t v139 = v138[1];
    uint64_t v332 = *v138;
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v332 = 0;
    uint64_t v139 = 0;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v346 = v139;
  if (*(void *)(v6 + 16))
  {
    uint64_t v140 = sub_1D7A18684(5129028, 0xE300000000000000);
    if (v141)
    {
      uint64_t v331 = *(void *)(*(void *)(v6 + 56) + 16 * v140);
      uint64_t v142 = swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v331 = 0;
      uint64_t v142 = 0;
    }
  }
  else
  {
    uint64_t v331 = 0;
    uint64_t v142 = 0;
  }
  uint64_t v338 = v142;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v337 = v115;
  uint64_t v340 = v132;
  if (*(void *)(v6 + 16))
  {
    uint64_t v143 = sub_1D7A18684(5391172, 0xE300000000000000);
    if (v144)
    {
      uint64_t v145 = (uint64_t *)(*(void *)(v6 + 56) + 16 * v143);
      uint64_t v147 = *v145;
      uint64_t v146 = v145[1];
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v147 = 0;
      uint64_t v146 = 0;
    }
  }
  else
  {
    uint64_t v147 = 0;
    uint64_t v146 = 0;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v870 = v385;
  uint64_t v871 = v383;
  long long v872 = 0u;
  uint64_t v873 = v379;
  uint64_t v874 = v390;
  long long v875 = 0u;
  uint64_t v876 = v389;
  uint64_t v877 = v353;
  long long v878 = 0u;
  long long v879 = 0u;
  long long v880 = 0u;
  uint64_t v881 = v387;
  uint64_t v882 = v386;
  uint64_t v883 = v384;
  uint64_t v884 = v388;
  uint64_t v885 = v380;
  uint64_t v886 = v36;
  uint64_t v887 = v329;
  uint64_t v888 = v382;
  uint64_t v889 = v369;
  uint64_t v890 = v50;
  uint64_t v891 = v360;
  uint64_t v892 = v378;
  uint64_t v893 = v368;
  uint64_t v894 = v62;
  uint64_t v895 = v367;
  uint64_t v896 = v377;
  uint64_t v897 = v366;
  uint64_t v898 = v376;
  uint64_t v899 = v365;
  uint64_t v900 = v375;
  uint64_t v901 = v364;
  uint64_t v902 = v374;
  uint64_t v903 = v363;
  uint64_t v904 = v373;
  uint64_t v905 = v362;
  uint64_t v906 = v372;
  uint64_t v907 = v361;
  uint64_t v908 = v371;
  uint64_t v909 = v355;
  uint64_t v910 = v89;
  long long v913 = 0u;
  long long v912 = 0u;
  long long v911 = 0u;
  uint64_t v914 = v351;
  uint64_t v915 = v359;
  uint64_t v916 = v350;
  uint64_t v917 = v358;
  uint64_t v918 = v349;
  uint64_t v919 = v357;
  uint64_t v920 = v348;
  uint64_t v921 = v356;
  uint64_t v922 = v345;
  uint64_t v923 = v354;
  uint64_t v924 = v337;
  uint64_t v925 = v347;
  uint64_t v926 = v336;
  uint64_t v927 = v342;
  uint64_t v928 = v335;
  uint64_t v929 = v341;
  long long v930 = 0u;
  uint64_t v931 = v334;
  uint64_t v932 = v340;
  uint64_t v933 = v333;
  uint64_t v934 = v339;
  uint64_t v935 = v332;
  uint64_t v936 = v139;
  uint64_t v937 = v331;
  uint64_t v938 = v338;
  long long v939 = 0u;
  long long v940 = 0u;
  long long v941 = 0u;
  uint64_t v942 = v147;
  uint64_t v943 = v146;
  long long v944 = 0u;
  long long v945 = 0u;
  long long v946 = 0u;
  long long v947 = 0u;
  long long v948 = 0u;
  long long v949 = 0u;
  long long v950 = 0u;
  long long v951 = 0u;
  long long v952 = 0u;
  long long v953 = 0u;
  long long v954 = 0u;
  uint64_t v148 = *(void *)(v6 + 16);
  sub_1D79EDF18((uint64_t)&v870);
  if (v148)
  {
    sub_1D7A18684(5260100, 0xE300000000000000);
    if (v149) {
      swift_bridgeObjectRetain();
    }
  }
  sub_1D7A9C048();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v150 = sub_1D7A9CA38();
  uint64_t v152 = v151;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1D79EE240((uint64_t)&v870);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v785[0] = v385;
  v785[1] = v383;
  long long v786 = 0u;
  uint64_t v787 = v379;
  uint64_t v788 = v390;
  long long v789 = 0u;
  uint64_t v790 = v389;
  uint64_t v791 = v353;
  long long v792 = 0u;
  long long v793 = 0u;
  long long v794 = 0u;
  uint64_t v795 = v387;
  uint64_t v796 = v386;
  uint64_t v797 = v384;
  uint64_t v798 = v388;
  uint64_t v799 = v380;
  uint64_t v800 = v36;
  uint64_t v801 = v329;
  uint64_t v802 = v382;
  uint64_t v803 = v369;
  uint64_t v804 = v50;
  uint64_t v805 = v360;
  uint64_t v806 = v378;
  uint64_t v807 = v368;
  uint64_t v808 = v352;
  uint64_t v809 = v367;
  uint64_t v810 = v377;
  uint64_t v811 = v366;
  uint64_t v812 = v376;
  uint64_t v813 = v365;
  uint64_t v814 = v375;
  uint64_t v815 = v364;
  uint64_t v816 = v374;
  uint64_t v817 = v363;
  uint64_t v818 = v373;
  uint64_t v819 = v362;
  uint64_t v820 = v372;
  uint64_t v821 = v361;
  uint64_t v822 = v371;
  uint64_t v823 = v355;
  uint64_t v824 = v89;
  long long v827 = 0u;
  long long v826 = 0u;
  long long v825 = 0u;
  uint64_t v828 = v351;
  uint64_t v829 = v359;
  uint64_t v830 = v350;
  uint64_t v831 = v358;
  uint64_t v832 = v349;
  uint64_t v833 = v357;
  uint64_t v834 = v348;
  uint64_t v835 = v356;
  uint64_t v836 = v345;
  uint64_t v837 = v354;
  uint64_t v838 = v337;
  uint64_t v839 = v347;
  uint64_t v840 = v336;
  uint64_t v841 = v342;
  uint64_t v842 = v335;
  uint64_t v843 = v341;
  long long v844 = 0u;
  uint64_t v845 = v334;
  uint64_t v846 = v340;
  uint64_t v847 = v333;
  uint64_t v848 = v339;
  uint64_t v849 = v332;
  uint64_t v850 = v346;
  uint64_t v851 = v331;
  uint64_t v852 = v338;
  long long v853 = 0u;
  uint64_t v327 = v150;
  uint64_t v854 = v150;
  uint64_t v330 = v152;
  uint64_t v855 = v152;
  long long v856 = 0u;
  uint64_t v857 = v147;
  uint64_t v858 = v146;
  long long v869 = 0u;
  long long v868 = 0u;
  long long v867 = 0u;
  long long v866 = 0u;
  long long v865 = 0u;
  long long v864 = 0u;
  long long v863 = 0u;
  long long v862 = 0u;
  long long v861 = 0u;
  long long v860 = 0u;
  long long v859 = 0u;
  uint64_t v153 = *(void *)(v6 + 16);
  sub_1D79EDF18((uint64_t)v785);
  if (v153)
  {
    sub_1D7A18684(5325636, 0xE300000000000000);
    if (v154) {
      swift_bridgeObjectRetain();
    }
  }
  sub_1D7A9C048();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v155 = sub_1D7A9CA38();
  uint64_t v157 = v156;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1D79EE240((uint64_t)v785);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v772 = v147;
  v699[0] = v385;
  v699[1] = v383;
  long long v700 = 0u;
  uint64_t v701 = v379;
  uint64_t v702 = v390;
  long long v703 = 0u;
  uint64_t v704 = v389;
  uint64_t v705 = v353;
  long long v706 = 0u;
  long long v707 = 0u;
  long long v708 = 0u;
  uint64_t v709 = v387;
  uint64_t v710 = v386;
  uint64_t v711 = v384;
  uint64_t v712 = v388;
  uint64_t v713 = v380;
  uint64_t v714 = v36;
  uint64_t v715 = v329;
  uint64_t v716 = v382;
  uint64_t v717 = v369;
  uint64_t v718 = v50;
  uint64_t v719 = v360;
  uint64_t v720 = v378;
  uint64_t v721 = v368;
  uint64_t v722 = v352;
  uint64_t v723 = v367;
  uint64_t v724 = v377;
  uint64_t v725 = v366;
  uint64_t v726 = v376;
  uint64_t v727 = v365;
  uint64_t v728 = v375;
  uint64_t v729 = v364;
  uint64_t v730 = v374;
  uint64_t v731 = v363;
  uint64_t v732 = v373;
  uint64_t v733 = v362;
  uint64_t v734 = v372;
  uint64_t v735 = v361;
  uint64_t v736 = v371;
  uint64_t v737 = v355;
  uint64_t v738 = v89;
  long long v741 = 0u;
  long long v740 = 0u;
  long long v739 = 0u;
  uint64_t v742 = v351;
  uint64_t v743 = v359;
  uint64_t v744 = v350;
  uint64_t v745 = v358;
  uint64_t v746 = v349;
  uint64_t v747 = v357;
  uint64_t v748 = v348;
  uint64_t v749 = v356;
  uint64_t v750 = v345;
  uint64_t v751 = v354;
  uint64_t v752 = v337;
  uint64_t v753 = v347;
  uint64_t v754 = v336;
  uint64_t v755 = v342;
  uint64_t v756 = v335;
  uint64_t v757 = v341;
  long long v758 = 0u;
  uint64_t v759 = v334;
  uint64_t v760 = v340;
  uint64_t v761 = v333;
  uint64_t v762 = v339;
  uint64_t v763 = v332;
  uint64_t v764 = v346;
  uint64_t v765 = v331;
  uint64_t v766 = v338;
  long long v767 = 0u;
  uint64_t v768 = v327;
  uint64_t v769 = v330;
  uint64_t v312 = v155;
  uint64_t v770 = v155;
  uint64_t v328 = v157;
  uint64_t v771 = v157;
  uint64_t v773 = v146;
  long long v784 = 0u;
  long long v783 = 0u;
  long long v782 = 0u;
  long long v781 = 0u;
  long long v780 = 0u;
  long long v779 = 0u;
  long long v778 = 0u;
  long long v777 = 0u;
  long long v776 = 0u;
  long long v775 = 0u;
  long long v774 = 0u;
  sub_1D79EDF18((uint64_t)v699);
  swift_bridgeObjectRelease();
  if (*(void *)(v6 + 16))
  {
    sub_1D7A18684(5391172, 0xE300000000000000);
    if (v158) {
      swift_bridgeObjectRetain();
    }
  }
  uint64_t v159 = sub_1D7A9C048();
  uint64_t v161 = v160;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&__src[0] = v159;
  *((void *)&__src[0] + 1) = v161;
  uint64_t v311 = sub_1D7A9CA38();
  uint64_t v163 = v162;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1D79EE240((uint64_t)v699);
  uint64_t v326 = v163;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (*(void *)(v6 + 16))
  {
    uint64_t v164 = sub_1D7A18684(4277316, 0xE300000000000000);
    uint64_t v165 = v388;
    if (v166)
    {
      uint64_t v167 = (uint64_t *)(*(void *)(v6 + 56) + 16 * v164);
      uint64_t v168 = v167[1];
      uint64_t v310 = *v167;
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v310 = 0;
      uint64_t v168 = 0;
    }
    uint64_t v169 = v379;
    uint64_t v170 = v352;
  }
  else
  {
    uint64_t v310 = 0;
    uint64_t v168 = 0;
    uint64_t v169 = v379;
    uint64_t v165 = v388;
    uint64_t v170 = v352;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (*(void *)(v6 + 16) && (uint64_t v171 = sub_1D7A18684(4473924, 0xE300000000000000), (v172 & 1) != 0))
  {
    id v173 = (uint64_t *)(*(void *)(v6 + 56) + 16 * v171);
    uint64_t v174 = v173[1];
    uint64_t v309 = *v173;
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v309 = 0;
    uint64_t v174 = 0;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (*(void *)(v6 + 16) && (uint64_t v175 = sub_1D7A18684(5718340, 0xE300000000000000), (v176 & 1) != 0))
  {
    uint64_t v308 = *(void *)(*(void *)(v6 + 56) + 16 * v175);
    uint64_t v177 = swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v308 = 0;
    uint64_t v177 = 0;
  }
  uint64_t v323 = v177;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v325 = v168;
  if (*(void *)(v6 + 16) && (uint64_t v178 = sub_1D7A18684(5783876, 0xE300000000000000), (v179 & 1) != 0))
  {
    uint64_t v307 = *(void *)(*(void *)(v6 + 56) + 16 * v178);
    uint64_t v180 = swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v307 = 0;
    uint64_t v180 = 0;
  }
  uint64_t v322 = v180;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (*(void *)(v6 + 16) && (uint64_t v181 = sub_1D7A18684(4932676, 0xE300000000000000), (v182 & 1) != 0))
  {
    uint64_t v306 = *(void *)(*(void *)(v6 + 56) + 16 * v181);
    uint64_t v183 = swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v306 = 0;
    uint64_t v183 = 0;
  }
  uint64_t v321 = v183;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v324 = v174;
  if (!*(void *)(v6 + 16))
  {
    uint64_t v187 = 0;
    uint64_t v305 = 0;
    uint64_t v188 = v390;
LABEL_151:
    uint64_t v302 = 0;
    uint64_t v192 = 0;
    uint64_t v316 = v187;
    goto LABEL_152;
  }
  uint64_t v184 = sub_1D7A18684(4998212, 0xE300000000000000);
  if (v185)
  {
    unint64_t v186 = (uint64_t *)(*(void *)(v6 + 56) + 16 * v184);
    uint64_t v187 = v186[1];
    uint64_t v305 = *v186;
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v305 = 0;
    uint64_t v187 = 0;
  }
  uint64_t v188 = v390;
  if (!*(void *)(v6 + 16)) {
    goto LABEL_151;
  }
  swift_bridgeObjectRetain();
  uint64_t v189 = sub_1D7A18684(4342852, 0xE300000000000000);
  uint64_t v316 = v187;
  if (v190)
  {
    uint64_t v191 = (uint64_t *)(*(void *)(v6 + 56) + 16 * v189);
    uint64_t v302 = *v191;
    uint64_t v192 = v191[1];
LABEL_152:
    swift_bridgeObjectRetain();
    uint64_t v193 = v192;
    goto LABEL_153;
  }
  uint64_t v302 = 0;
  uint64_t v193 = 0;
LABEL_153:
  uint64_t v194 = *(void *)(v6 + 16);
  uint64_t v320 = v193;
  swift_bridgeObjectRetain();
  if (!v194)
  {
    uint64_t v304 = 0;
    goto LABEL_161;
  }
  uint64_t v195 = sub_1D7A18684(4408388, 0xE300000000000000);
  if ((v196 & 1) == 0)
  {
    uint64_t v304 = 0;
    uint64_t v194 = 0;
    if (*(void *)(v6 + 16)) {
      goto LABEL_159;
    }
LABEL_161:
    uint64_t v301 = 0;
    uint64_t v201 = 0;
    uint64_t v315 = v194;
    swift_bridgeObjectRetain();
    goto LABEL_164;
  }
  v197 = (uint64_t *)(*(void *)(v6 + 56) + 16 * v195);
  uint64_t v194 = v197[1];
  uint64_t v304 = *v197;
  swift_bridgeObjectRetain();
  if (!*(void *)(v6 + 16)) {
    goto LABEL_161;
  }
LABEL_159:
  swift_bridgeObjectRetain();
  uint64_t v198 = sub_1D7A18684(4736068, 0xE300000000000000);
  uint64_t v315 = v194;
  if (v199)
  {
    unint64_t v200 = (uint64_t *)(*(void *)(v6 + 56) + 16 * v198);
    uint64_t v301 = *v200;
    uint64_t v201 = v200[1];
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v301 = 0;
    uint64_t v201 = 0;
  }
LABEL_164:
  uint64_t v319 = v201;
  uint64_t v202 = *(void *)(v6 + 16);
  swift_bridgeObjectRetain();
  if (!v202)
  {
    uint64_t v303 = 0;
    goto LABEL_172;
  }
  uint64_t v203 = sub_1D7A18684(4801604, 0xE300000000000000);
  if ((v204 & 1) == 0)
  {
    uint64_t v303 = 0;
    uint64_t v202 = 0;
    if (*(void *)(v6 + 16)) {
      goto LABEL_170;
    }
LABEL_172:
    uint64_t v300 = 0;
    uint64_t v209 = 0;
    swift_bridgeObjectRetain();
    goto LABEL_174;
  }
  v205 = (uint64_t *)(*(void *)(v6 + 56) + 16 * v203);
  uint64_t v202 = v205[1];
  uint64_t v303 = *v205;
  swift_bridgeObjectRetain();
  if (!*(void *)(v6 + 16)) {
    goto LABEL_172;
  }
LABEL_170:
  swift_bridgeObjectRetain();
  uint64_t v206 = sub_1D7A18684(4867140, 0xE300000000000000);
  if (v207)
  {
    uint64_t v208 = (uint64_t *)(*(void *)(v6 + 56) + 16 * v206);
    uint64_t v300 = *v208;
    uint64_t v209 = v208[1];
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v300 = 0;
    uint64_t v209 = 0;
  }
LABEL_174:
  uint64_t v317 = v209;
  uint64_t v318 = v202;
  if (v169 == 12592 && v188 == 0xE200000000000000)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    goto LABEL_178;
  }
  char v210 = sub_1D7A9D358();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (v210)
  {
LABEL_178:
    if (*(void *)(v6 + 16))
    {
      uint64_t v211 = sub_1D7A18684(5456196, 0xE300000000000000);
      uint64_t v212 = v389;
      if (v213)
      {
        uint64_t v214 = *(void *)(*(void *)(v6 + 56) + 16 * v211);
        uint64_t v215 = swift_bridgeObjectRetain();
        if (*(void *)(v6 + 16)) {
          goto LABEL_181;
        }
      }
      else
      {
        uint64_t v214 = 0;
        uint64_t v215 = 0;
        if (*(void *)(v6 + 16))
        {
LABEL_181:
          uint64_t v298 = v215;
          swift_bridgeObjectRetain();
          uint64_t v216 = sub_1D7A18684(5521732, 0xE300000000000000);
          uint64_t v217 = v170;
          uint64_t v218 = v214;
          if (v219)
          {
            BOOL v220 = (uint64_t *)(*(void *)(v6 + 56) + 16 * v216);
            uint64_t v313 = *v220;
            uint64_t v296 = v220[1];
            swift_bridgeObjectRetain();
          }
          else
          {
            uint64_t v313 = 0;
            uint64_t v296 = 0;
          }
          goto LABEL_192;
        }
      }
      uint64_t v217 = v170;
      uint64_t v218 = v214;
    }
    else
    {
      uint64_t v217 = v170;
      uint64_t v215 = 0;
      uint64_t v218 = 0;
      uint64_t v212 = v389;
    }
    uint64_t v313 = 0;
    uint64_t v296 = 0;
    uint64_t v298 = v215;
    swift_bridgeObjectRetain();
LABEL_192:
    *(void *)&__src[0] = v385;
    *((void *)&__src[0] + 1) = v383;
    __src[1] = 0u;
    *(void *)&__src[2] = v169;
    *((void *)&__src[2] + 1) = v390;
    __src[3] = 0u;
    *(void *)&__src[4] = v212;
    *((void *)&__src[4] + 1) = v353;
    *(void *)&__src[5] = v218;
    *((void *)&__src[5] + 1) = v298;
    *(void *)&__src[6] = v313;
    *((void *)&__src[6] + 1) = v296;
    __src[7] = 0u;
    *(void *)&__src[8] = v387;
    *((void *)&__src[8] + 1) = v386;
    *(void *)&__src[9] = v384;
    *((void *)&__src[9] + 1) = v165;
    *(void *)&__src[10] = v380;
    *((void *)&__src[10] + 1) = v344;
    *(void *)&__src[11] = v329;
    *((void *)&__src[11] + 1) = v382;
    *(void *)&__src[12] = v369;
    *((void *)&__src[12] + 1) = v381;
    *(void *)&__src[13] = v360;
    *((void *)&__src[13] + 1) = v378;
    *(void *)&__src[14] = v368;
    *((void *)&__src[14] + 1) = v217;
    *(void *)&__src[15] = v367;
    *((void *)&__src[15] + 1) = v377;
    *(void *)&__src[16] = v366;
    *((void *)&__src[16] + 1) = v376;
    *(void *)&__src[17] = v365;
    *((void *)&__src[17] + 1) = v375;
    *(void *)&__src[18] = v364;
    *((void *)&__src[18] + 1) = v374;
    *(void *)&__src[19] = v363;
    *((void *)&__src[19] + 1) = v373;
    *(void *)&__src[20] = v362;
    *((void *)&__src[20] + 1) = v372;
    *(void *)&__src[21] = v361;
    *((void *)&__src[21] + 1) = v371;
    *(void *)&__src[22] = v355;
    *((void *)&__src[22] + 1) = v343;
    memset(&__src[23], 0, 48);
    *(void *)&__src[26] = v351;
    *((void *)&__src[26] + 1) = v359;
    *(void *)&__src[27] = v350;
    *((void *)&__src[27] + 1) = v358;
    *(void *)&__src[28] = v349;
    *((void *)&__src[28] + 1) = v357;
    *(void *)&__src[29] = v348;
    *((void *)&__src[29] + 1) = v356;
    *(void *)&__src[30] = v345;
    *((void *)&__src[30] + 1) = v354;
    *(void *)&__src[31] = v337;
    *((void *)&__src[31] + 1) = v347;
    *(void *)&__src[32] = v336;
    *((void *)&__src[32] + 1) = v342;
    *(void *)&__src[33] = v335;
    *((void *)&__src[33] + 1) = v341;
    __src[34] = 0u;
    *(void *)&__src[35] = v334;
    *((void *)&__src[35] + 1) = v340;
    *(void *)&__src[36] = v333;
    *((void *)&__src[36] + 1) = v339;
    *(void *)&__src[37] = v332;
    *((void *)&__src[37] + 1) = v346;
    *(void *)&__src[38] = v331;
    *((void *)&__src[38] + 1) = v338;
    __src[39] = 0u;
    *(void *)&__src[40] = v327;
    *((void *)&__src[40] + 1) = v330;
    *(void *)&__src[41] = v312;
    *((void *)&__src[41] + 1) = v328;
    *(void *)&__src[42] = v311;
    *((void *)&__src[42] + 1) = v326;
    *(void *)&__src[43] = v310;
    *((void *)&__src[43] + 1) = v168;
    *(void *)&__src[44] = v309;
    *((void *)&__src[44] + 1) = v324;
    *(void *)&__src[45] = v308;
    *((void *)&__src[45] + 1) = v323;
    *(void *)&__src[46] = v307;
    *((void *)&__src[46] + 1) = v322;
    *(void *)&__src[47] = v306;
    *((void *)&__src[47] + 1) = v321;
    *(void *)&__src[48] = v305;
    *((void *)&__src[48] + 1) = v316;
    *(void *)&__src[49] = v302;
    *((void *)&__src[49] + 1) = v320;
    *(void *)&__src[50] = v304;
    *((void *)&__src[50] + 1) = v315;
    *(void *)&__src[51] = v301;
    *((void *)&__src[51] + 1) = v319;
    *(void *)&__src[52] = v303;
    *((void *)&__src[52] + 1) = v318;
    *(void *)&__src[53] = v300;
    *((void *)&__src[53] + 1) = v209;
    uint64_t v226 = *(void *)(v6 + 16);
    swift_bridgeObjectRetain();
    sub_1D79EDF18((uint64_t)__src);
    if (v226)
    {
      sub_1D7A18684(4342084, 0xE300000000000000);
      if (v227) {
        swift_bridgeObjectRetain();
      }
    }
    uint64_t v228 = sub_1D7A9C048();
    uint64_t v230 = v229;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v594 = v228;
    uint64_t v595 = v230;
    uint64_t v294 = sub_1D7A9CA38();
    uint64_t v232 = v231;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1D79EE240((uint64_t)__src);
    uint64_t v297 = v232;
    swift_bridgeObjectRetain();
    uint64_t v295 = sub_1D79DE2E4(4538692, 0xE300000000000000, v6);
    v391[0] = v385;
    v391[1] = v383;
    long long v392 = 0u;
    uint64_t v393 = v379;
    uint64_t v394 = v390;
    long long v395 = 0u;
    uint64_t v396 = v389;
    uint64_t v397 = v353;
    uint64_t v292 = v218;
    uint64_t v398 = v218;
    uint64_t v399 = v298;
    uint64_t v400 = v313;
    uint64_t v401 = v296;
    uint64_t v402 = v294;
    uint64_t v403 = v232;
    uint64_t v404 = v387;
    uint64_t v405 = v386;
    uint64_t v406 = v384;
    uint64_t v407 = v388;
    uint64_t v408 = v380;
    uint64_t v409 = v344;
    uint64_t v410 = v329;
    uint64_t v411 = v382;
    uint64_t v412 = v369;
    uint64_t v413 = v381;
    uint64_t v414 = v360;
    uint64_t v415 = v378;
    uint64_t v416 = v368;
    uint64_t v417 = v352;
    uint64_t v418 = v367;
    uint64_t v419 = v377;
    uint64_t v420 = v366;
    uint64_t v421 = v376;
    uint64_t v422 = v365;
    uint64_t v423 = v375;
    uint64_t v424 = v364;
    uint64_t v425 = v374;
    uint64_t v426 = v363;
    uint64_t v427 = v373;
    uint64_t v428 = v362;
    uint64_t v429 = v372;
    uint64_t v430 = v361;
    uint64_t v431 = v371;
    uint64_t v432 = v355;
    uint64_t v433 = v343;
    long long v436 = 0u;
    long long v435 = 0u;
    long long v434 = 0u;
    uint64_t v437 = v351;
    uint64_t v438 = v359;
    uint64_t v439 = v350;
    uint64_t v440 = v358;
    uint64_t v441 = v349;
    uint64_t v442 = v357;
    uint64_t v443 = v348;
    uint64_t v444 = v356;
    uint64_t v445 = v345;
    uint64_t v446 = v354;
    uint64_t v447 = v337;
    uint64_t v448 = v347;
    uint64_t v449 = v336;
    uint64_t v450 = v342;
    uint64_t v451 = v335;
    uint64_t v452 = v341;
    uint64_t v453 = v295;
    uint64_t v234 = v233;
    uint64_t v454 = v233;
    uint64_t v455 = v334;
    uint64_t v456 = v340;
    uint64_t v457 = v333;
    uint64_t v458 = v339;
    uint64_t v459 = v332;
    uint64_t v460 = v346;
    uint64_t v461 = v331;
    uint64_t v462 = v338;
    long long v463 = 0u;
    uint64_t v464 = v327;
    uint64_t v465 = v330;
    uint64_t v466 = v312;
    uint64_t v467 = v328;
    uint64_t v468 = v311;
    uint64_t v469 = v326;
    uint64_t v470 = v310;
    uint64_t v471 = v168;
    uint64_t v472 = v309;
    uint64_t v473 = v324;
    uint64_t v474 = v308;
    uint64_t v475 = v323;
    uint64_t v476 = v307;
    uint64_t v477 = v322;
    uint64_t v478 = v306;
    uint64_t v479 = v321;
    uint64_t v480 = v305;
    uint64_t v481 = v316;
    uint64_t v482 = v302;
    uint64_t v483 = v320;
    uint64_t v484 = v304;
    uint64_t v485 = v315;
    uint64_t v486 = v301;
    uint64_t v487 = v319;
    uint64_t v488 = v303;
    uint64_t v489 = v318;
    uint64_t v490 = v300;
    uint64_t v491 = v317;
    uint64_t v370 = v233;
    swift_bridgeObjectRetain();
    sub_1D79EDF18((uint64_t)v391);
    uint64_t v235 = sub_1D79DE2E4(4276804, 0xE300000000000000, v6);
    *(void *)&long long v291 = sub_1D79E4B0C(v235, v236);
    uint64_t v238 = v237;
    swift_bridgeObjectRelease();
    sub_1D79EE240((uint64_t)v391);
    v492[0] = v385;
    v492[1] = v383;
    long long v493 = 0u;
    uint64_t v494 = v379;
    uint64_t v495 = v390;
    long long v496 = 0u;
    uint64_t v497 = v389;
    uint64_t v498 = v353;
    uint64_t v499 = v292;
    uint64_t v500 = v298;
    uint64_t v501 = v313;
    uint64_t v502 = v296;
    uint64_t v503 = v294;
    uint64_t v504 = v232;
    uint64_t v505 = v387;
    uint64_t v506 = v386;
    uint64_t v507 = v384;
    uint64_t v508 = v388;
    uint64_t v509 = v380;
    uint64_t v510 = v344;
    uint64_t v511 = v329;
    uint64_t v512 = v382;
    uint64_t v513 = v369;
    uint64_t v514 = v381;
    uint64_t v515 = v360;
    uint64_t v516 = v378;
    uint64_t v517 = v368;
    uint64_t v518 = v352;
    uint64_t v519 = v367;
    uint64_t v520 = v377;
    uint64_t v521 = v366;
    uint64_t v522 = v376;
    uint64_t v523 = v365;
    uint64_t v524 = v375;
    uint64_t v525 = v364;
    uint64_t v526 = v374;
    uint64_t v527 = v363;
    uint64_t v528 = v373;
    uint64_t v529 = v362;
    uint64_t v530 = v372;
    uint64_t v531 = v361;
    uint64_t v532 = v371;
    uint64_t v533 = v355;
    uint64_t v534 = v343;
    uint64_t v535 = v291;
    uint64_t v536 = v238;
    long long v538 = 0u;
    long long v537 = 0u;
    uint64_t v539 = v351;
    uint64_t v540 = v359;
    uint64_t v541 = v350;
    uint64_t v542 = v358;
    uint64_t v543 = v349;
    uint64_t v544 = v357;
    uint64_t v545 = v348;
    uint64_t v546 = v356;
    uint64_t v547 = v345;
    uint64_t v548 = v354;
    uint64_t v549 = v337;
    uint64_t v550 = v347;
    uint64_t v551 = v336;
    uint64_t v552 = v342;
    uint64_t v553 = v335;
    uint64_t v554 = v341;
    uint64_t v555 = v295;
    uint64_t v556 = v234;
    uint64_t v557 = v334;
    uint64_t v558 = v340;
    uint64_t v559 = v333;
    uint64_t v560 = v339;
    uint64_t v561 = v332;
    uint64_t v562 = v346;
    uint64_t v563 = v331;
    uint64_t v564 = v338;
    long long v565 = 0u;
    uint64_t v566 = v327;
    uint64_t v567 = v330;
    uint64_t v568 = v312;
    uint64_t v569 = v328;
    uint64_t v570 = v311;
    uint64_t v571 = v326;
    uint64_t v572 = v310;
    uint64_t v573 = v168;
    uint64_t v574 = v309;
    uint64_t v575 = v324;
    uint64_t v576 = v308;
    uint64_t v577 = v323;
    uint64_t v578 = v307;
    uint64_t v579 = v322;
    uint64_t v580 = v306;
    uint64_t v581 = v321;
    uint64_t v582 = v305;
    uint64_t v583 = v316;
    uint64_t v584 = v302;
    uint64_t v585 = v320;
    uint64_t v586 = v304;
    uint64_t v587 = v315;
    uint64_t v588 = v301;
    uint64_t v589 = v319;
    uint64_t v590 = v303;
    uint64_t v591 = v318;
    uint64_t v592 = v300;
    uint64_t v593 = v317;
    swift_bridgeObjectRetain();
    sub_1D79EDF18((uint64_t)v492);
    uint64_t v239 = sub_1D79DE2E4(4473412, 0xE300000000000000, v6);
    uint64_t v287 = sub_1D79E4B0C(v239, v240);
    uint64_t v242 = v241;
    swift_bridgeObjectRelease();
    sub_1D79EE240((uint64_t)v492);
    uint64_t v594 = v385;
    uint64_t v595 = v383;
    long long v596 = 0u;
    uint64_t v597 = v379;
    uint64_t v598 = v390;
    long long v599 = 0u;
    uint64_t v600 = v389;
    uint64_t v601 = v353;
    uint64_t v602 = v292;
    uint64_t v603 = v298;
    uint64_t v604 = v313;
    uint64_t v605 = v296;
    uint64_t v606 = v294;
    uint64_t v607 = v232;
    uint64_t v608 = v387;
    uint64_t v609 = v386;
    uint64_t v610 = v384;
    uint64_t v611 = v388;
    uint64_t v612 = v380;
    uint64_t v613 = v344;
    uint64_t v614 = v329;
    uint64_t v615 = v382;
    uint64_t v616 = v369;
    uint64_t v617 = v381;
    uint64_t v618 = v360;
    uint64_t v619 = v378;
    uint64_t v620 = v368;
    uint64_t v621 = v352;
    uint64_t v622 = v367;
    uint64_t v623 = v377;
    uint64_t v624 = v366;
    uint64_t v625 = v376;
    uint64_t v626 = v365;
    uint64_t v627 = v375;
    uint64_t v628 = v364;
    uint64_t v629 = v374;
    uint64_t v630 = v363;
    uint64_t v631 = v373;
    uint64_t v243 = v296;
    uint64_t v632 = v362;
    uint64_t v633 = v372;
    uint64_t v634 = v361;
    uint64_t v635 = v371;
    uint64_t v636 = v355;
    uint64_t v637 = v343;
    uint64_t v638 = v291;
    uint64_t v639 = v238;
    uint64_t v640 = v287;
    uint64_t v289 = v242;
    uint64_t v641 = v242;
    long long v642 = 0u;
    uint64_t v244 = v350;
    uint64_t v643 = v351;
    uint64_t v644 = v359;
    uint64_t v645 = v350;
    uint64_t v646 = v358;
    uint64_t v647 = v349;
    uint64_t v648 = v357;
    uint64_t v649 = v348;
    uint64_t v650 = v356;
    uint64_t v651 = v345;
    uint64_t v652 = v354;
    uint64_t v653 = v337;
    uint64_t v654 = v347;
    uint64_t v655 = v336;
    uint64_t v656 = v342;
    uint64_t v657 = v335;
    uint64_t v658 = v341;
    uint64_t v659 = v295;
    uint64_t v660 = v370;
    uint64_t v661 = v334;
    uint64_t v662 = v340;
    uint64_t v663 = v333;
    uint64_t v664 = v339;
    uint64_t v665 = v332;
    uint64_t v666 = v346;
    uint64_t v667 = v331;
    uint64_t v668 = v338;
    long long v669 = 0u;
    uint64_t v670 = v327;
    uint64_t v671 = v330;
    uint64_t v672 = v312;
    uint64_t v673 = v328;
    uint64_t v674 = v311;
    uint64_t v675 = v326;
    uint64_t v676 = v310;
    uint64_t v677 = v325;
    uint64_t v678 = v309;
    uint64_t v679 = v324;
    uint64_t v680 = v308;
    uint64_t v681 = v323;
    uint64_t v682 = v307;
    uint64_t v683 = v322;
    uint64_t v684 = v306;
    uint64_t v685 = v321;
    uint64_t v686 = v305;
    uint64_t v687 = v316;
    uint64_t v688 = v302;
    uint64_t v689 = v320;
    uint64_t v690 = v304;
    uint64_t v691 = v315;
    uint64_t v692 = v301;
    uint64_t v693 = v319;
    uint64_t v694 = v303;
    uint64_t v695 = v318;
    uint64_t v696 = v300;
    uint64_t v697 = v317;
    sub_1D79EDF18((uint64_t)&v594);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *((void *)&v291 + 1) = v238;
    uint64_t v245 = v298;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v246 = sub_1D79DE2E4(4342340, 0xE300000000000000, v6);
    uint64_t v248 = v247;
    uint64_t v249 = v313;
    swift_bridgeObjectRelease();
    uint64_t v250 = v246;
    uint64_t v251 = v379;
    *(void *)&long long v288 = sub_1D79E4B0C(v250, v248);
    *((void *)&v288 + 1) = v252;
    uint64_t v253 = v292;
    swift_bridgeObjectRelease();
    sub_1D79EE240((uint64_t)&v594);
    uint64_t v254 = v345;
    uint64_t v255 = v348;
    uint64_t v256 = v287;
    uint64_t v257 = v349;
    uint64_t v258 = v351;
    uint64_t v259 = v385;
    uint64_t v260 = v355;
    uint64_t v261 = v361;
    uint64_t v262 = v362;
    uint64_t v263 = v363;
    uint64_t v264 = v364;
    uint64_t v265 = v365;
    uint64_t v266 = v366;
    uint64_t v267 = v367;
    uint64_t v268 = v368;
    uint64_t v269 = v360;
    uint64_t v270 = v369;
    uint64_t v271 = v380;
    uint64_t v272 = v384;
    uint64_t v273 = v387;
    goto LABEL_206;
  }
  if (*(void *)(v6 + 16))
  {
    uint64_t v221 = sub_1D7A18684(4342596, 0xE300000000000000);
    uint64_t v222 = v389;
    if (v223)
    {
      uint64_t v224 = *(void *)(*(void *)(v6 + 56) + 16 * v221);
      uint64_t v225 = swift_bridgeObjectRetain();
      if (!*(void *)(v6 + 16)) {
        goto LABEL_200;
      }
LABEL_198:
      uint64_t v299 = v225;
      swift_bridgeObjectRetain();
      uint64_t v274 = sub_1D7A18684(4473668, 0xE300000000000000);
      if (v275)
      {
        v276 = (uint64_t *)(*(void *)(v6 + 56) + 16 * v274);
        uint64_t v277 = *v276;
        uint64_t v243 = v276[1];
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v277 = 0;
        uint64_t v243 = 0;
      }
      goto LABEL_202;
    }
    uint64_t v224 = 0;
    uint64_t v225 = 0;
    if (*(void *)(v6 + 16)) {
      goto LABEL_198;
    }
  }
  else
  {
    uint64_t v225 = 0;
    uint64_t v224 = 0;
    uint64_t v222 = v389;
  }
LABEL_200:
  uint64_t v277 = 0;
  uint64_t v243 = 0;
  uint64_t v299 = v225;
  swift_bridgeObjectRetain();
LABEL_202:
  *(void *)&__src[0] = v385;
  *((void *)&__src[0] + 1) = v383;
  __src[1] = 0u;
  *(void *)&__src[2] = v169;
  *((void *)&__src[2] + 1) = v188;
  __src[3] = 0u;
  *(void *)&__src[4] = v222;
  *((void *)&__src[4] + 1) = v353;
  *(void *)&__src[5] = v224;
  *((void *)&__src[5] + 1) = v299;
  *(void *)&__src[6] = v277;
  *((void *)&__src[6] + 1) = v243;
  __src[7] = 0u;
  *(void *)&__src[8] = v387;
  *((void *)&__src[8] + 1) = v386;
  *(void *)&__src[9] = v384;
  *((void *)&__src[9] + 1) = v165;
  *(void *)&__src[10] = v380;
  *((void *)&__src[10] + 1) = v344;
  *(void *)&__src[11] = v329;
  *((void *)&__src[11] + 1) = v382;
  *(void *)&__src[12] = v369;
  *((void *)&__src[12] + 1) = v381;
  *(void *)&__src[13] = v360;
  *((void *)&__src[13] + 1) = v378;
  *(void *)&__src[14] = v368;
  *((void *)&__src[14] + 1) = v352;
  *(void *)&__src[15] = v367;
  *((void *)&__src[15] + 1) = v377;
  *(void *)&__src[16] = v366;
  *((void *)&__src[16] + 1) = v376;
  *(void *)&__src[17] = v365;
  *((void *)&__src[17] + 1) = v375;
  *(void *)&__src[18] = v364;
  *((void *)&__src[18] + 1) = v374;
  *(void *)&__src[19] = v363;
  *((void *)&__src[19] + 1) = v373;
  *(void *)&__src[20] = v362;
  *((void *)&__src[20] + 1) = v372;
  *(void *)&__src[21] = v361;
  *((void *)&__src[21] + 1) = v371;
  *(void *)&__src[22] = v355;
  *((void *)&__src[22] + 1) = v343;
  memset(&__src[23], 0, 48);
  *(void *)&__src[26] = v351;
  *((void *)&__src[26] + 1) = v359;
  *(void *)&__src[27] = v350;
  *((void *)&__src[27] + 1) = v358;
  *(void *)&__src[28] = v349;
  *((void *)&__src[28] + 1) = v357;
  *(void *)&__src[29] = v348;
  *((void *)&__src[29] + 1) = v356;
  *(void *)&__src[30] = v345;
  *((void *)&__src[30] + 1) = v354;
  *(void *)&__src[31] = v337;
  *((void *)&__src[31] + 1) = v347;
  *(void *)&__src[32] = v336;
  *((void *)&__src[32] + 1) = v342;
  *(void *)&__src[33] = v335;
  *((void *)&__src[33] + 1) = v341;
  __src[34] = 0u;
  *(void *)&__src[35] = v334;
  *((void *)&__src[35] + 1) = v340;
  *(void *)&__src[36] = v333;
  *((void *)&__src[36] + 1) = v339;
  *(void *)&__src[37] = v332;
  *((void *)&__src[37] + 1) = v346;
  *(void *)&__src[38] = v331;
  *((void *)&__src[38] + 1) = v338;
  __src[39] = 0u;
  *(void *)&__src[40] = v327;
  *((void *)&__src[40] + 1) = v330;
  *(void *)&__src[41] = v312;
  *((void *)&__src[41] + 1) = v328;
  *(void *)&__src[42] = v311;
  *((void *)&__src[42] + 1) = v326;
  *(void *)&__src[43] = v310;
  *((void *)&__src[43] + 1) = v325;
  *(void *)&__src[44] = v309;
  *((void *)&__src[44] + 1) = v324;
  *(void *)&__src[45] = v308;
  *((void *)&__src[45] + 1) = v323;
  *(void *)&__src[46] = v307;
  *((void *)&__src[46] + 1) = v322;
  *(void *)&__src[47] = v306;
  *((void *)&__src[47] + 1) = v321;
  *(void *)&__src[48] = v305;
  *((void *)&__src[48] + 1) = v316;
  *(void *)&__src[49] = v302;
  *((void *)&__src[49] + 1) = v320;
  *(void *)&__src[50] = v304;
  *((void *)&__src[50] + 1) = v315;
  *(void *)&__src[51] = v301;
  *((void *)&__src[51] + 1) = v319;
  *(void *)&__src[52] = v303;
  *((void *)&__src[52] + 1) = v318;
  *(void *)&__src[53] = v300;
  *((void *)&__src[53] + 1) = v209;
  sub_1D79EDF18((uint64_t)__src);
  swift_bridgeObjectRelease();
  uint64_t v293 = v224;
  uint64_t v314 = v277;
  if (*(void *)(v6 + 16))
  {
    sub_1D7A18684(5456708, 0xE300000000000000);
    if (v278) {
      swift_bridgeObjectRetain();
    }
  }
  uint64_t v279 = sub_1D7A9C048();
  uint64_t v281 = v280;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v594 = v279;
  uint64_t v595 = v281;
  uint64_t v294 = sub_1D7A9CA38();
  uint64_t v297 = v282;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1D79EE240((uint64_t)__src);
  uint64_t v295 = sub_1D79DE2E4(5587780, 0xE300000000000000, v6);
  uint64_t v370 = v283;
  *(void *)&long long v291 = sub_1D79DE2E4(4276804, 0xE300000000000000, v6);
  *((void *)&v291 + 1) = v284;
  uint64_t v256 = sub_1D79DE2E4(4473412, 0xE300000000000000, v6);
  uint64_t v289 = v285;
  *(void *)&long long v288 = sub_1D79DE2E4(4342340, 0xE300000000000000, v6);
  *((void *)&v288 + 1) = v286;
  swift_bridgeObjectRelease();
  uint64_t v251 = v379;
  uint64_t v259 = v385;
  uint64_t v273 = v387;
  uint64_t v272 = v384;
  uint64_t v271 = v380;
  uint64_t v270 = v369;
  uint64_t v269 = v360;
  uint64_t v268 = v368;
  uint64_t v267 = v367;
  uint64_t v266 = v366;
  uint64_t v265 = v365;
  uint64_t v264 = v364;
  uint64_t v263 = v363;
  uint64_t v262 = v362;
  uint64_t v261 = v361;
  uint64_t v260 = v355;
  uint64_t v244 = v350;
  uint64_t v258 = v351;
  uint64_t v255 = v348;
  uint64_t v257 = v349;
  uint64_t v254 = v345;
  uint64_t v245 = v299;
  uint64_t v253 = v293;
  uint64_t v249 = v314;
LABEL_206:
  *(void *)&__src[0] = v259;
  *(void *)&__src[2] = v251;
  *(void *)&__src[4] = v389;
  *(void *)&__src[5] = v253;
  *(void *)&__src[6] = v249;
  *(void *)&__src[7] = v294;
  *(void *)&__src[8] = v273;
  *(void *)&__src[9] = v272;
  *(void *)&__src[10] = v271;
  *(void *)&__src[11] = v329;
  *(void *)&__src[12] = v270;
  *(void *)&__src[13] = v269;
  *(void *)&__src[14] = v268;
  *(void *)&__src[15] = v267;
  *(void *)&__src[16] = v266;
  *(void *)&__src[17] = v265;
  *(void *)&__src[18] = v264;
  *(void *)&__src[19] = v263;
  *(void *)&__src[20] = v262;
  *(void *)&__src[21] = v261;
  *((void *)&__src[21] + 1) = v371;
  *((void *)&__src[0] + 1) = v383;
  __src[1] = 0u;
  *((void *)&__src[2] + 1) = v390;
  __src[3] = 0u;
  *((void *)&__src[4] + 1) = v353;
  *((void *)&__src[5] + 1) = v245;
  *((void *)&__src[6] + 1) = v243;
  *((void *)&__src[7] + 1) = v297;
  *((void *)&__src[8] + 1) = v386;
  *((void *)&__src[9] + 1) = v388;
  *((void *)&__src[10] + 1) = v344;
  *((void *)&__src[11] + 1) = v382;
  *((void *)&__src[12] + 1) = v381;
  *((void *)&__src[13] + 1) = v378;
  *((void *)&__src[14] + 1) = v352;
  *((void *)&__src[15] + 1) = v377;
  *((void *)&__src[16] + 1) = v376;
  *((void *)&__src[17] + 1) = v375;
  *((void *)&__src[18] + 1) = v374;
  *((void *)&__src[19] + 1) = v373;
  *((void *)&__src[20] + 1) = v372;
  *(void *)&__src[22] = v260;
  *((void *)&__src[22] + 1) = v343;
  __src[23] = v291;
  *(void *)&__src[24] = v256;
  *((void *)&__src[24] + 1) = v289;
  __src[25] = v288;
  *(void *)&__src[26] = v258;
  *((void *)&__src[26] + 1) = v359;
  *(void *)&__src[27] = v244;
  *((void *)&__src[27] + 1) = v358;
  *(void *)&__src[28] = v257;
  *((void *)&__src[28] + 1) = v357;
  *(void *)&__src[29] = v255;
  *((void *)&__src[29] + 1) = v356;
  *(void *)&__src[30] = v254;
  *((void *)&__src[30] + 1) = v354;
  *(void *)&__src[31] = v337;
  *((void *)&__src[31] + 1) = v347;
  *(void *)&__src[32] = v336;
  *((void *)&__src[32] + 1) = v342;
  *(void *)&__src[33] = v335;
  *((void *)&__src[33] + 1) = v341;
  *(void *)&__src[34] = v295;
  *((void *)&__src[34] + 1) = v370;
  *(void *)&__src[35] = v334;
  *((void *)&__src[35] + 1) = v340;
  *(void *)&__src[36] = v333;
  *((void *)&__src[36] + 1) = v339;
  *(void *)&__src[37] = v332;
  *((void *)&__src[37] + 1) = v346;
  *(void *)&__src[38] = v331;
  *((void *)&__src[38] + 1) = v338;
  __src[39] = 0u;
  *(void *)&__src[40] = v327;
  *((void *)&__src[40] + 1) = v330;
  *(void *)&__src[41] = v312;
  *((void *)&__src[41] + 1) = v328;
  *(void *)&__src[42] = v311;
  *((void *)&__src[42] + 1) = v326;
  *(void *)&__src[43] = v310;
  *((void *)&__src[43] + 1) = v325;
  *(void *)&__src[44] = v309;
  *((void *)&__src[44] + 1) = v324;
  *(void *)&__src[45] = v308;
  *((void *)&__src[45] + 1) = v323;
  *(void *)&__src[46] = v307;
  *((void *)&__src[46] + 1) = v322;
  *(void *)&__src[47] = v306;
  *((void *)&__src[47] + 1) = v321;
  *(void *)&__src[48] = v305;
  *((void *)&__src[48] + 1) = v316;
  *(void *)&__src[49] = v302;
  *((void *)&__src[49] + 1) = v320;
  *(void *)&__src[50] = v304;
  *((void *)&__src[50] + 1) = v315;
  *(void *)&__src[51] = v301;
  *((void *)&__src[51] + 1) = v319;
  *(void *)&__src[52] = v303;
  *((void *)&__src[52] + 1) = v318;
  *(void *)&__src[53] = v300;
  *((void *)&__src[53] + 1) = v317;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1D79EDF18((uint64_t)__src);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1D79EE240((uint64_t)__src);
  memcpy(__dst, __src, 0x360uLL);
}

uint64_t PDF417ParsedData.docType.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PDF417ParsedData.docType.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*PDF417ParsedData.docType.modify())()
{
  return nullsub_1;
}

uint64_t PDF417ParsedData.issuer.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PDF417ParsedData.issuer.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t (*PDF417ParsedData.issuer.modify())()
{
  return nullsub_1;
}

uint64_t PDF417ParsedData.aamvaVersion.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PDF417ParsedData.aamvaVersion.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 40) = a2;
  return result;
}

uint64_t (*PDF417ParsedData.aamvaVersion.modify())()
{
  return nullsub_1;
}

uint64_t PDF417ParsedData.jurisdictionVersion.getter()
{
  uint64_t v1 = *(void *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PDF417ParsedData.jurisdictionVersion.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 48) = a1;
  *(void *)(v2 + 56) = a2;
  return result;
}

uint64_t (*PDF417ParsedData.jurisdictionVersion.modify())()
{
  return nullsub_1;
}

uint64_t PDF417ParsedData.vehicleClass.getter()
{
  uint64_t v1 = *(void *)(v0 + 64);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PDF417ParsedData.vehicleClass.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 64) = a1;
  *(void *)(v2 + 72) = a2;
  return result;
}

uint64_t (*PDF417ParsedData.vehicleClass.modify())()
{
  return nullsub_1;
}

uint64_t PDF417ParsedData.restrictionCodes.getter()
{
  uint64_t v1 = *(void *)(v0 + 80);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PDF417ParsedData.restrictionCodes.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 80) = a1;
  *(void *)(v2 + 88) = a2;
  return result;
}

uint64_t (*PDF417ParsedData.restrictionCodes.modify())()
{
  return nullsub_1;
}

uint64_t PDF417ParsedData.endorsementCodes.getter()
{
  uint64_t v1 = *(void *)(v0 + 96);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PDF417ParsedData.endorsementCodes.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 96) = a1;
  *(void *)(v2 + 104) = a2;
  return result;
}

uint64_t (*PDF417ParsedData.endorsementCodes.modify())()
{
  return nullsub_1;
}

uint64_t PDF417ParsedData.lastName.getter()
{
  uint64_t v1 = *(void *)(v0 + 112);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PDF417ParsedData.lastName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 112) = a1;
  *(void *)(v2 + 120) = a2;
  return result;
}

uint64_t (*PDF417ParsedData.lastName.modify())()
{
  return nullsub_1;
}

uint64_t PDF417ParsedData.firstName.getter()
{
  uint64_t v1 = *(void *)(v0 + 128);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PDF417ParsedData.firstName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 128) = a1;
  *(void *)(v2 + 136) = a2;
  return result;
}

uint64_t (*PDF417ParsedData.firstName.modify())()
{
  return nullsub_1;
}

uint64_t PDF417ParsedData.middleName.getter()
{
  uint64_t v1 = *(void *)(v0 + 144);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PDF417ParsedData.middleName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 144) = a1;
  *(void *)(v2 + 152) = a2;
  return result;
}

uint64_t (*PDF417ParsedData.middleName.modify())()
{
  return nullsub_1;
}

uint64_t PDF417ParsedData.gender.getter()
{
  uint64_t v1 = *(void *)(v0 + 160);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PDF417ParsedData.gender.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 160) = a1;
  *(void *)(v2 + 168) = a2;
  return result;
}

uint64_t (*PDF417ParsedData.gender.modify())()
{
  return nullsub_1;
}

uint64_t PDF417ParsedData.eyeColor.getter()
{
  uint64_t v1 = *(void *)(v0 + 176);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PDF417ParsedData.eyeColor.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 176) = a1;
  *(void *)(v2 + 184) = a2;
  return result;
}

uint64_t (*PDF417ParsedData.eyeColor.modify())()
{
  return nullsub_1;
}

uint64_t PDF417ParsedData.height.getter()
{
  uint64_t v1 = *(void *)(v0 + 192);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PDF417ParsedData.height.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 192) = a1;
  *(void *)(v2 + 200) = a2;
  return result;
}

uint64_t (*PDF417ParsedData.height.modify())()
{
  return nullsub_1;
}

uint64_t PDF417ParsedData.street1.getter()
{
  uint64_t v1 = *(void *)(v0 + 208);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PDF417ParsedData.street1.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 208) = a1;
  *(void *)(v2 + 216) = a2;
  return result;
}

uint64_t (*PDF417ParsedData.street1.modify())()
{
  return nullsub_1;
}

uint64_t PDF417ParsedData.city.getter()
{
  uint64_t v1 = *(void *)(v0 + 224);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PDF417ParsedData.city.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 224) = a1;
  *(void *)(v2 + 232) = a2;
  return result;
}

uint64_t (*PDF417ParsedData.city.modify())()
{
  return nullsub_1;
}

uint64_t PDF417ParsedData.state.getter()
{
  uint64_t v1 = *(void *)(v0 + 240);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PDF417ParsedData.state.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 240) = a1;
  *(void *)(v2 + 248) = a2;
  return result;
}

uint64_t (*PDF417ParsedData.state.modify())()
{
  return nullsub_1;
}

uint64_t PDF417ParsedData.postalCode.getter()
{
  uint64_t v1 = *(void *)(v0 + 256);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PDF417ParsedData.postalCode.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 256) = a1;
  *(void *)(v2 + 264) = a2;
  return result;
}

uint64_t (*PDF417ParsedData.postalCode.modify())()
{
  return nullsub_1;
}

uint64_t PDF417ParsedData.idNumber.getter()
{
  uint64_t v1 = *(void *)(v0 + 272);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PDF417ParsedData.idNumber.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 272) = a1;
  *(void *)(v2 + 280) = a2;
  return result;
}

uint64_t (*PDF417ParsedData.idNumber.modify())()
{
  return nullsub_1;
}

uint64_t PDF417ParsedData.documentDiscriminator.getter()
{
  uint64_t v1 = *(void *)(v0 + 288);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PDF417ParsedData.documentDiscriminator.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 288) = a1;
  *(void *)(v2 + 296) = a2;
  return result;
}

uint64_t (*PDF417ParsedData.documentDiscriminator.modify())()
{
  return nullsub_1;
}

uint64_t PDF417ParsedData.country.getter()
{
  uint64_t v1 = *(void *)(v0 + 304);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PDF417ParsedData.country.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 304) = a1;
  *(void *)(v2 + 312) = a2;
  return result;
}

uint64_t (*PDF417ParsedData.country.modify())()
{
  return nullsub_1;
}

uint64_t PDF417ParsedData.lastNameTruncation.getter()
{
  uint64_t v1 = *(void *)(v0 + 320);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PDF417ParsedData.lastNameTruncation.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 320) = a1;
  *(void *)(v2 + 328) = a2;
  return result;
}

uint64_t (*PDF417ParsedData.lastNameTruncation.modify())()
{
  return nullsub_1;
}

uint64_t PDF417ParsedData.firstNameTruncation.getter()
{
  uint64_t v1 = *(void *)(v0 + 336);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PDF417ParsedData.firstNameTruncation.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 336) = a1;
  *(void *)(v2 + 344) = a2;
  return result;
}

uint64_t (*PDF417ParsedData.firstNameTruncation.modify())()
{
  return nullsub_1;
}

uint64_t PDF417ParsedData.middleNameTruncation.getter()
{
  uint64_t v1 = *(void *)(v0 + 352);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PDF417ParsedData.middleNameTruncation.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 352) = a1;
  *(void *)(v2 + 360) = a2;
  return result;
}

uint64_t (*PDF417ParsedData.middleNameTruncation.modify())()
{
  return nullsub_1;
}

uint64_t PDF417ParsedData.expirationDate.getter()
{
  uint64_t v1 = *(void *)(v0 + 368);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PDF417ParsedData.expirationDate.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 368) = a1;
  *(void *)(v2 + 376) = a2;
  return result;
}

uint64_t (*PDF417ParsedData.expirationDate.modify())()
{
  return nullsub_1;
}

uint64_t PDF417ParsedData.issueDate.getter()
{
  uint64_t v1 = *(void *)(v0 + 384);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PDF417ParsedData.issueDate.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 384) = a1;
  *(void *)(v2 + 392) = a2;
  return result;
}

uint64_t (*PDF417ParsedData.issueDate.modify())()
{
  return nullsub_1;
}

uint64_t PDF417ParsedData.dob.getter()
{
  uint64_t v1 = *(void *)(v0 + 400);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PDF417ParsedData.dob.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 400) = a1;
  *(void *)(v2 + 408) = a2;
  return result;
}

uint64_t (*PDF417ParsedData.dob.modify())()
{
  return nullsub_1;
}

uint64_t PDF417ParsedData.street2.getter()
{
  uint64_t v1 = *(void *)(v0 + 416);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PDF417ParsedData.street2.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 416) = a1;
  *(void *)(v2 + 424) = a2;
  return result;
}

uint64_t (*PDF417ParsedData.street2.modify())()
{
  return nullsub_1;
}

uint64_t PDF417ParsedData.hairColor.getter()
{
  uint64_t v1 = *(void *)(v0 + 432);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PDF417ParsedData.hairColor.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 432) = a1;
  *(void *)(v2 + 440) = a2;
  return result;
}

uint64_t (*PDF417ParsedData.hairColor.modify())()
{
  return nullsub_1;
}

uint64_t PDF417ParsedData.placeOfBirth.getter()
{
  uint64_t v1 = *(void *)(v0 + 448);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PDF417ParsedData.placeOfBirth.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 448) = a1;
  *(void *)(v2 + 456) = a2;
  return result;
}

uint64_t (*PDF417ParsedData.placeOfBirth.modify())()
{
  return nullsub_1;
}

uint64_t PDF417ParsedData.auditInfo.getter()
{
  uint64_t v1 = *(void *)(v0 + 464);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PDF417ParsedData.auditInfo.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 464) = a1;
  *(void *)(v2 + 472) = a2;
  return result;
}

uint64_t (*PDF417ParsedData.auditInfo.modify())()
{
  return nullsub_1;
}

uint64_t PDF417ParsedData.inventoryControlNumber.getter()
{
  uint64_t v1 = *(void *)(v0 + 480);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PDF417ParsedData.inventoryControlNumber.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 480) = a1;
  *(void *)(v2 + 488) = a2;
  return result;
}

uint64_t (*PDF417ParsedData.inventoryControlNumber.modify())()
{
  return nullsub_1;
}

uint64_t PDF417ParsedData.lastNameAlias.getter()
{
  uint64_t v1 = *(void *)(v0 + 496);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PDF417ParsedData.lastNameAlias.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 496) = a1;
  *(void *)(v2 + 504) = a2;
  return result;
}

uint64_t (*PDF417ParsedData.lastNameAlias.modify())()
{
  return nullsub_1;
}

uint64_t PDF417ParsedData.firstNameAlias.getter()
{
  uint64_t v1 = *(void *)(v0 + 512);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PDF417ParsedData.firstNameAlias.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 512) = a1;
  *(void *)(v2 + 520) = a2;
  return result;
}

uint64_t (*PDF417ParsedData.firstNameAlias.modify())()
{
  return nullsub_1;
}

uint64_t PDF417ParsedData.suffixNameAlias.getter()
{
  uint64_t v1 = *(void *)(v0 + 528);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PDF417ParsedData.suffixNameAlias.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 528) = a1;
  *(void *)(v2 + 536) = a2;
  return result;
}

uint64_t (*PDF417ParsedData.suffixNameAlias.modify())()
{
  return nullsub_1;
}

uint64_t PDF417ParsedData.suffix.getter()
{
  uint64_t v1 = *(void *)(v0 + 544);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PDF417ParsedData.suffix.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 544) = a1;
  *(void *)(v2 + 552) = a2;
  return result;
}

uint64_t (*PDF417ParsedData.suffix.modify())()
{
  return nullsub_1;
}

uint64_t PDF417ParsedData.weightRange.getter()
{
  uint64_t v1 = *(void *)(v0 + 560);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PDF417ParsedData.weightRange.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 560) = a1;
  *(void *)(v2 + 568) = a2;
  return result;
}

uint64_t (*PDF417ParsedData.weightRange.modify())()
{
  return nullsub_1;
}

uint64_t PDF417ParsedData.ethnicity.getter()
{
  uint64_t v1 = *(void *)(v0 + 576);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PDF417ParsedData.ethnicity.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 576) = a1;
  *(void *)(v2 + 584) = a2;
  return result;
}

uint64_t (*PDF417ParsedData.ethnicity.modify())()
{
  return nullsub_1;
}

uint64_t PDF417ParsedData.standardVehicleClassification.getter()
{
  uint64_t v1 = *(void *)(v0 + 592);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PDF417ParsedData.standardVehicleClassification.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 592) = a1;
  *(void *)(v2 + 600) = a2;
  return result;
}

uint64_t (*PDF417ParsedData.standardVehicleClassification.modify())()
{
  return nullsub_1;
}

uint64_t PDF417ParsedData.standardEndorsementCode.getter()
{
  uint64_t v1 = *(void *)(v0 + 608);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PDF417ParsedData.standardEndorsementCode.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 608) = a1;
  *(void *)(v2 + 616) = a2;
  return result;
}

uint64_t (*PDF417ParsedData.standardEndorsementCode.modify())()
{
  return nullsub_1;
}

uint64_t PDF417ParsedData.standardRestrictionCode.getter()
{
  uint64_t v1 = *(void *)(v0 + 624);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PDF417ParsedData.standardRestrictionCode.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 624) = a1;
  *(void *)(v2 + 632) = a2;
  return result;
}

uint64_t (*PDF417ParsedData.standardRestrictionCode.modify())()
{
  return nullsub_1;
}

uint64_t PDF417ParsedData.jurisdictionVehicleClassification.getter()
{
  uint64_t v1 = *(void *)(v0 + 640);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PDF417ParsedData.jurisdictionVehicleClassification.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 640) = a1;
  *(void *)(v2 + 648) = a2;
  return result;
}

uint64_t (*PDF417ParsedData.jurisdictionVehicleClassification.modify())()
{
  return nullsub_1;
}

uint64_t PDF417ParsedData.jurisdictionEndorsementCode.getter()
{
  uint64_t v1 = *(void *)(v0 + 656);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PDF417ParsedData.jurisdictionEndorsementCode.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 656) = a1;
  *(void *)(v2 + 664) = a2;
  return result;
}

uint64_t (*PDF417ParsedData.jurisdictionEndorsementCode.modify())()
{
  return nullsub_1;
}

uint64_t PDF417ParsedData.jurisdictionRestrictionCode.getter()
{
  uint64_t v1 = *(void *)(v0 + 672);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PDF417ParsedData.jurisdictionRestrictionCode.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 672) = a1;
  *(void *)(v2 + 680) = a2;
  return result;
}

uint64_t (*PDF417ParsedData.jurisdictionRestrictionCode.modify())()
{
  return nullsub_1;
}

uint64_t PDF417ParsedData.complianceType.getter()
{
  uint64_t v1 = *(void *)(v0 + 688);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PDF417ParsedData.complianceType.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 688) = a1;
  *(void *)(v2 + 696) = a2;
  return result;
}

uint64_t (*PDF417ParsedData.complianceType.modify())()
{
  return nullsub_1;
}

uint64_t PDF417ParsedData.limitedDurationDocument.getter()
{
  uint64_t v1 = *(void *)(v0 + 704);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PDF417ParsedData.limitedDurationDocument.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 704) = a1;
  *(void *)(v2 + 712) = a2;
  return result;
}

uint64_t (*PDF417ParsedData.limitedDurationDocument.modify())()
{
  return nullsub_1;
}

uint64_t PDF417ParsedData.weightPounds.getter()
{
  uint64_t v1 = *(void *)(v0 + 720);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PDF417ParsedData.weightPounds.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 720) = a1;
  *(void *)(v2 + 728) = a2;
  return result;
}

uint64_t (*PDF417ParsedData.weightPounds.modify())()
{
  return nullsub_1;
}

uint64_t PDF417ParsedData.weightKilograms.getter()
{
  uint64_t v1 = *(void *)(v0 + 736);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PDF417ParsedData.weightKilograms.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 736) = a1;
  *(void *)(v2 + 744) = a2;
  return result;
}

uint64_t (*PDF417ParsedData.weightKilograms.modify())()
{
  return nullsub_1;
}

uint64_t PDF417ParsedData.organDonor.getter()
{
  uint64_t v1 = *(void *)(v0 + 752);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PDF417ParsedData.organDonor.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 752) = a1;
  *(void *)(v2 + 760) = a2;
  return result;
}

uint64_t (*PDF417ParsedData.organDonor.modify())()
{
  return nullsub_1;
}

uint64_t PDF417ParsedData.veteran.getter()
{
  uint64_t v1 = *(void *)(v0 + 768);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PDF417ParsedData.veteran.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 768) = a1;
  *(void *)(v2 + 776) = a2;
  return result;
}

uint64_t (*PDF417ParsedData.veteran.modify())()
{
  return nullsub_1;
}

uint64_t PDF417ParsedData.cardRevisionDate.getter()
{
  uint64_t v1 = *(void *)(v0 + 784);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PDF417ParsedData.cardRevisionDate.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 784) = a1;
  *(void *)(v2 + 792) = a2;
  return result;
}

uint64_t (*PDF417ParsedData.cardRevisionDate.modify())()
{
  return nullsub_1;
}

uint64_t PDF417ParsedData.hazmatEndorsementExpirationDate.getter()
{
  uint64_t v1 = *(void *)(v0 + 800);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PDF417ParsedData.hazmatEndorsementExpirationDate.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 800) = a1;
  *(void *)(v2 + 808) = a2;
  return result;
}

uint64_t (*PDF417ParsedData.hazmatEndorsementExpirationDate.modify())()
{
  return nullsub_1;
}

uint64_t PDF417ParsedData.under18Until.getter()
{
  uint64_t v1 = *(void *)(v0 + 816);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PDF417ParsedData.under18Until.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 816) = a1;
  *(void *)(v2 + 824) = a2;
  return result;
}

uint64_t (*PDF417ParsedData.under18Until.modify())()
{
  return nullsub_1;
}

uint64_t PDF417ParsedData.under19Until.getter()
{
  uint64_t v1 = *(void *)(v0 + 832);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PDF417ParsedData.under19Until.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 832) = a1;
  *(void *)(v2 + 840) = a2;
  return result;
}

uint64_t (*PDF417ParsedData.under19Until.modify())()
{
  return nullsub_1;
}

uint64_t PDF417ParsedData.under21Until.getter()
{
  uint64_t v1 = *(void *)(v0 + 848);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PDF417ParsedData.under21Until.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 848) = a1;
  *(void *)(v2 + 856) = a2;
  return result;
}

uint64_t (*PDF417ParsedData.under21Until.modify())()
{
  return nullsub_1;
}

uint64_t sub_1D79E4B0C(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1D7A9B5F8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4, v6, v7, v8, v9, v10, v11, v12);
  uint64_t v14 = (char *)&v63 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a2) {
    return a1;
  }
  swift_bridgeObjectRetain();
  if (sub_1D7A9C0D8() != 8)
  {
    if (qword_1EBDF9DC8 == -1)
    {
LABEL_8:
      uint64_t v59 = __swift_project_value_buffer(v4, (uint64_t)qword_1EBDFBE70);
      swift_beginAccess();
      (*(void (**)(char *, uint64_t, unint64_t))(v5 + 16))(v14, v59, v4);
      uint64_t v60 = sub_1D7A9B5D8();
      os_log_type_t v61 = sub_1D7A9C758();
      if (os_log_type_enabled(v60, v61))
      {
        uint64_t v62 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v62 = 0;
        _os_log_impl(&dword_1D7853000, v60, v61, "Unable to convert date, did not contain the correct number of characters", v62, 2u);
        MEMORY[0x1D947D740](v62, -1, -1);
      }

      (*(void (**)(char *, unint64_t))(v5 + 8))(v14, v4);
      return a1;
    }
LABEL_14:
    swift_once();
    goto LABEL_8;
  }
  uint64_t v67 = a1;
  uint64_t v68 = a2;
  uint64_t v14 = (char *)sub_1D791118C();
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_1D7A9C0C8();
  uint64_t v67 = a1;
  uint64_t v68 = a2;
  swift_bridgeObjectRetain();
  unint64_t v15 = sub_1D7A9C0C8();
  uint64_t v67 = a1;
  uint64_t v68 = a2;
  swift_bridgeObjectRetain();
  unint64_t v16 = sub_1D7A9C0C8();
  uint64_t v67 = a1;
  uint64_t v68 = a2;
  swift_bridgeObjectRetain();
  uint64_t v17 = sub_1D7A9C0C8();
  unint64_t v4 = v16 >> 14;
  unint64_t v18 = v15 >> 14;
  if (v16 >> 14 < v15 >> 14)
  {
    __break(1u);
    goto LABEL_13;
  }
  unint64_t v19 = v17;
  unint64_t v63 = v15;
  unint64_t v64 = v5;
  uint64_t v20 = sub_1D7A9C1E8();
  if (v4 > v19 >> 14)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v24 = v20;
  uint64_t v25 = v21;
  uint64_t v26 = v22;
  uint64_t v27 = v23;
  uint64_t v67 = sub_1D7A9C1E8();
  uint64_t v68 = v28;
  uint64_t v69 = v29;
  uint64_t v70 = v30;
  swift_bridgeObjectRetain();
  uint64_t v31 = MEMORY[0x1D947AE00](v24, v25, v26, v27);
  uint64_t v33 = v32;
  swift_bridgeObjectRelease();
  uint64_t v65 = v31;
  uint64_t v66 = v33;
  sub_1D792A860();
  sub_1D7A9C108();
  uint64_t v34 = MEMORY[0x1D947B730](v65, v66);
  uint64_t v36 = v35;
  uint64_t v38 = v37;
  uint64_t v40 = v39;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = v64;
  if (v18 >= v64 >> 14)
  {
    uint64_t v42 = sub_1D7A9C1E8();
    uint64_t v44 = v43;
    uint64_t v46 = v45;
    uint64_t v48 = v47;
    swift_bridgeObjectRelease();
    uint64_t v67 = v42;
    uint64_t v68 = v44;
    uint64_t v69 = v46;
    uint64_t v70 = v48;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v49 = MEMORY[0x1D947AE00](v34, v36, v38, v40);
    uint64_t v51 = v50;
    swift_bridgeObjectRelease();
    uint64_t v65 = v49;
    uint64_t v66 = v51;
    sub_1D7A9C108();
    uint64_t v52 = MEMORY[0x1D947B730](v65, v66);
    uint64_t v54 = v53;
    uint64_t v56 = v55;
    uint64_t v58 = v57;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    a1 = MEMORY[0x1D947AE00](v52, v54, v56, v58);
    swift_bridgeObjectRelease();
    return a1;
  }
  __break(1u);
  return result;
}

unint64_t *PDF417ParsedData.getBindings()()
{
  uint64_t v1 = v0[14];
  unint64_t v2 = v0[15];
  uint64_t v3 = v0[16];
  unint64_t v4 = v0[17];
  uint64_t v5 = v0[18];
  unint64_t v6 = v0[19];
  uint64_t v66 = v0[26];
  unint64_t v65 = v0[27];
  unint64_t v67 = v0[29];
  uint64_t v68 = v0[28];
  unint64_t v69 = v0[31];
  uint64_t v70 = v0[30];
  unint64_t v71 = v0[33];
  uint64_t v72 = v0[32];
  uint64_t v7 = v0[40];
  unint64_t v73 = v0[39];
  uint64_t v74 = v0[38];
  unint64_t v8 = v0[41];
  uint64_t v54 = v0[42];
  uint64_t v55 = v0[44];
  unint64_t v75 = v0[45];
  unint64_t v76 = v0[43];
  uint64_t v64 = v0[52];
  unint64_t v63 = v0[53];
  unint64_t v56 = v0[63];
  uint64_t v57 = v0[62];
  unint64_t v58 = v0[65];
  uint64_t v59 = v0[64];
  unint64_t v60 = v0[67];
  uint64_t v61 = v0[66];
  uint64_t v62 = v0[68];
  unint64_t v9 = v0[69];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDF93F0);
  uint64_t inited = swift_initStackObject();
  uint64_t v11 = inited;
  *(void *)(inited + 32) = 0xD000000000000011;
  *(void *)(inited + 40) = 0x80000001D7AC0C50;
  if (v2) {
    uint64_t v12 = v1;
  }
  else {
    uint64_t v12 = 0;
  }
  if (v2) {
    unint64_t v13 = v2;
  }
  else {
    unint64_t v13 = 0xE000000000000000;
  }
  *(void *)(inited + 48) = v12;
  *(void *)(inited + 56) = v13;
  *(void *)(inited + 64) = 0xD000000000000012;
  *(void *)(inited + 72) = 0x80000001D7AC0C30;
  if (v4) {
    uint64_t v14 = v3;
  }
  else {
    uint64_t v14 = 0;
  }
  if (v4) {
    unint64_t v15 = v4;
  }
  else {
    unint64_t v15 = 0xE000000000000000;
  }
  *(void *)(inited + 80) = v14;
  *(void *)(inited + 88) = v15;
  *(void *)(inited + 104) = 0x80000001D7AC7FA0;
  if (v6) {
    uint64_t v16 = v5;
  }
  else {
    uint64_t v16 = 0;
  }
  if (v6) {
    unint64_t v17 = v6;
  }
  else {
    unint64_t v17 = 0xE000000000000000;
  }
  *(void *)(inited + 112) = v16;
  *(void *)(inited + 120) = v17;
  *(void *)(inited + 128) = 0xD00000000000001BLL;
  *(void *)(inited + 136) = 0x80000001D7AC7FC0;
  if (v8) {
    uint64_t v18 = v7;
  }
  else {
    uint64_t v18 = 0;
  }
  if (v8) {
    unint64_t v19 = v8;
  }
  else {
    unint64_t v19 = 0xE000000000000000;
  }
  *(void *)(inited + 144) = v18;
  *(void *)(inited + 152) = v19;
  *(void *)(inited + 160) = 0xD00000000000001CLL;
  *(void *)(inited + 168) = 0x80000001D7AC7FE0;
  unint64_t v20 = v76;
  uint64_t v21 = v54;
  if (!v76)
  {
    uint64_t v21 = 0;
    unint64_t v20 = 0xE000000000000000;
  }
  *(void *)(inited + 176) = v21;
  *(void *)(inited + 184) = v20;
  *(void *)(inited + 192) = 0xD00000000000001DLL;
  *(void *)(inited + 200) = 0x80000001D7AC8000;
  unint64_t v22 = v75;
  uint64_t v23 = v55;
  if (!v75)
  {
    uint64_t v23 = 0;
    unint64_t v22 = 0xE000000000000000;
  }
  *(void *)(inited + 208) = v23;
  *(void *)(inited + 216) = v22;
  *(void *)(inited + 224) = 0xD000000000000016;
  *(void *)(inited + 232) = 0x80000001D7AC8020;
  uint64_t v24 = v57;
  if (v56)
  {
    unint64_t v25 = v56;
  }
  else
  {
    uint64_t v24 = 0;
    unint64_t v25 = 0xE000000000000000;
  }
  *(void *)(inited + 240) = v24;
  *(void *)(inited + 248) = v25;
  *(void *)(inited + 256) = 0xD000000000000017;
  *(void *)(inited + 264) = 0x80000001D7AC8040;
  uint64_t v26 = v59;
  if (v58)
  {
    unint64_t v27 = v58;
  }
  else
  {
    uint64_t v26 = 0;
    unint64_t v27 = 0xE000000000000000;
  }
  *(void *)(inited + 272) = v26;
  *(void *)(inited + 280) = v27;
  *(void *)(inited + 288) = 0xD000000000000018;
  *(void *)(inited + 296) = 0x80000001D7AC8060;
  uint64_t v28 = v61;
  if (v60)
  {
    unint64_t v29 = v60;
  }
  else
  {
    uint64_t v28 = 0;
    unint64_t v29 = 0xE000000000000000;
  }
  *(void *)(inited + 304) = v28;
  *(void *)(inited + 312) = v29;
  *(void *)(inited + 328) = 0xEF7869666675732ELL;
  uint64_t v30 = v62;
  if (v9)
  {
    unint64_t v31 = v9;
  }
  else
  {
    uint64_t v30 = 0;
    unint64_t v31 = 0xE000000000000000;
  }
  *(void *)(inited + 336) = v30;
  *(void *)(inited + 344) = v31;
  *(void *)(inited + 360) = 0x80000001D7AC0C70;
  uint64_t v32 = v66;
  if (v65)
  {
    unint64_t v33 = v65;
  }
  else
  {
    uint64_t v32 = 0;
    unint64_t v33 = 0xE000000000000000;
  }
  *(void *)(inited + 368) = v32;
  *(void *)(inited + 376) = v33;
  *(void *)(inited + 392) = 0x80000001D7AC0C90;
  uint64_t v34 = v64;
  if (v63)
  {
    unint64_t v35 = v63;
  }
  else
  {
    uint64_t v34 = 0;
    unint64_t v35 = 0xE000000000000000;
  }
  *(void *)(inited + 400) = v34;
  *(void *)(inited + 408) = v35;
  *(void *)(inited + 424) = 0xED0000797469632ELL;
  uint64_t v36 = v68;
  if (v67)
  {
    unint64_t v37 = v67;
  }
  else
  {
    uint64_t v36 = 0;
    unint64_t v37 = 0xE000000000000000;
  }
  *(void *)(inited + 432) = v36;
  *(void *)(inited + 440) = v37;
  *(void *)(inited + 320) = 0x746E656D75636F64;
  *(void *)(inited + 416) = 0x746E656D75636F64;
  strcpy((char *)(inited + 448), "document.state");
  *(unsigned char *)(inited + 463) = -18;
  uint64_t v38 = v70;
  if (v69)
  {
    unint64_t v39 = v69;
  }
  else
  {
    uint64_t v38 = 0;
    unint64_t v39 = 0xE000000000000000;
  }
  *(void *)(inited + 464) = v38;
  *(void *)(inited + 472) = v39;
  *(void *)(inited + 96) = 0xD000000000000013;
  *(void *)(inited + 480) = 0xD000000000000013;
  *(void *)(inited + 488) = 0x80000001D7AC0CB0;
  uint64_t v40 = v72;
  if (v71)
  {
    unint64_t v41 = v71;
  }
  else
  {
    uint64_t v40 = 0;
    unint64_t v41 = 0xE000000000000000;
  }
  *(void *)(inited + 496) = v40;
  *(void *)(inited + 504) = v41;
  *(void *)(inited + 352) = 0xD000000000000010;
  *(void *)(inited + 384) = 0xD000000000000010;
  *(void *)(inited + 512) = 0xD000000000000010;
  *(void *)(inited + 520) = 0x80000001D7AC0CD0;
  uint64_t v42 = v74;
  if (!v73) {
    uint64_t v42 = 0;
  }
  *(void *)(inited + 528) = v42;
  if (v73) {
    unint64_t v43 = v73;
  }
  else {
    unint64_t v43 = 0xE000000000000000;
  }
  *(void *)(inited + 536) = v43;
  *(_OWORD *)(inited + 16) = xmmword_1D7AB4740;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v44 = sub_1D785F61C(v11);
  uint64_t v52 = sub_1D79EE568(v44, v45, v46, v47, v48, v49, v50, v51);
  swift_bridgeObjectRelease();
  return v52;
}

unint64_t sub_1D79E53F8(char a1)
{
  unint64_t result = 0x65707954636F64;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x726575737369;
      break;
    case 2:
      unint64_t result = 0x72655661766D6161;
      break;
    case 3:
      unint64_t result = 0xD000000000000013;
      break;
    case 4:
      unint64_t result = 0x43656C6369686576;
      break;
    case 5:
    case 6:
    case 49:
      unint64_t result = 0xD000000000000010;
      break;
    case 7:
    case 31:
      unint64_t result = 0x656D614E7473616CLL;
      break;
    case 8:
      unint64_t result = 0x6D614E7473726966;
      break;
    case 9:
      unint64_t result = 0x614E656C6464696DLL;
      break;
    case 10:
      unint64_t result = 0x7265646E6567;
      break;
    case 11:
      unint64_t result = 0x726F6C6F43657965;
      break;
    case 12:
      unint64_t result = 0x746867696568;
      break;
    case 13:
      unint64_t result = 0x31746565727473;
      break;
    case 14:
      unint64_t result = 2037672291;
      break;
    case 15:
      unint64_t result = 0x6574617473;
      break;
    case 16:
      unint64_t result = 0x6F436C6174736F70;
      break;
    case 17:
      unint64_t result = 0x7265626D754E6469;
      break;
    case 18:
      unint64_t result = 0xD000000000000015;
      break;
    case 19:
      unint64_t result = 0x7972746E756F63;
      break;
    case 20:
      unint64_t result = 0xD000000000000012;
      break;
    case 21:
      unint64_t result = 0xD000000000000013;
      break;
    case 22:
      unint64_t result = 0xD000000000000014;
      break;
    case 23:
      unint64_t result = 0x6974617269707865;
      break;
    case 24:
      unint64_t result = 0x7461446575737369;
      break;
    case 25:
      unint64_t result = 6451044;
      break;
    case 26:
      unint64_t result = 0x32746565727473;
      break;
    case 27:
      unint64_t result = 0x6F6C6F4372696168;
      break;
    case 28:
      unint64_t result = 0x42664F6563616C70;
      break;
    case 29:
      unint64_t result = 0x666E497469647561;
      break;
    case 30:
      unint64_t result = 0xD000000000000016;
      break;
    case 32:
      unint64_t result = 0x6D614E7473726966;
      break;
    case 33:
      unint64_t result = 0x614E786966667573;
      break;
    case 34:
      unint64_t result = 0x786966667573;
      break;
    case 35:
      unint64_t result = 0x6152746867696577;
      break;
    case 36:
      unint64_t result = 0x746963696E687465;
      break;
    case 37:
      unint64_t result = 0xD00000000000001DLL;
      break;
    case 38:
      unint64_t result = 0xD000000000000017;
      break;
    case 39:
      unint64_t result = 0xD000000000000017;
      break;
    case 40:
      unint64_t result = 0xD000000000000021;
      break;
    case 41:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 42:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 43:
      unint64_t result = 0x6E61696C706D6F63;
      break;
    case 44:
      unint64_t result = 0xD000000000000017;
      break;
    case 45:
      unint64_t result = 0x6F50746867696577;
      break;
    case 46:
      unint64_t result = 0x694B746867696577;
      break;
    case 47:
      unint64_t result = 0x6E6F446E6167726FLL;
      break;
    case 48:
      unint64_t result = 0x6E617265746576;
      break;
    case 50:
      unint64_t result = 0xD00000000000001FLL;
      break;
    case 51:
      unint64_t result = 0x5538317265646E75;
      break;
    case 52:
      unint64_t result = 0x5539317265646E75;
      break;
    case 53:
      unint64_t result = 0x5531327265646E75;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1D79E5A68()
{
  return sub_1D79E53F8(*v0);
}

uint64_t sub_1D79E5A70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1D79F01C8(a1, a2);
  *a3 = result;
  return result;
}

void sub_1D79E5A98(unsigned char *a1@<X8>)
{
  *a1 = 54;
}

uint64_t sub_1D79E5AA4(uint64_t a1)
{
  unint64_t v2 = sub_1D79EE6C0();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D79E5AE0(uint64_t a1)
{
  unint64_t v2 = sub_1D79EE6C0();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t PDF417ParsedData.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA846928);
  uint64_t v27 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3, v4, v5, v6, v7, v8, v9, v10);
  uint64_t v12 = (char *)v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *v1;
  uint64_t v28 = (char *)v1[1];
  uint64_t v29 = v13;
  uint64_t v14 = v1[2];
  v26[103] = v1[3];
  v26[104] = v14;
  uint64_t v15 = v1[4];
  v26[101] = v1[5];
  v26[102] = v15;
  uint64_t v16 = v1[6];
  v26[99] = v1[7];
  v26[100] = v16;
  v26[98] = v1[8];
  uint64_t v17 = v1[9];
  uint64_t v18 = v1[10];
  v26[95] = v1[11];
  v26[96] = v17;
  v26[93] = v1[12];
  v26[94] = v18;
  uint64_t v19 = v1[13];
  v26[91] = v1[14];
  v26[92] = v19;
  uint64_t v20 = v1[15];
  v26[88] = v1[16];
  v26[89] = v1[17];
  v26[90] = v20;
  v26[87] = v1[18];
  v26[86] = v1[19];
  v26[85] = v1[20];
  v26[84] = v1[21];
  v26[83] = v1[22];
  v26[82] = v1[23];
  v26[81] = v1[24];
  v26[80] = v1[25];
  v26[79] = v1[26];
  v26[78] = v1[27];
  v26[77] = v1[28];
  v26[76] = v1[29];
  v26[75] = v1[30];
  v26[74] = v1[31];
  v26[73] = v1[32];
  v26[72] = v1[33];
  v26[3] = v1[34];
  v26[2] = v1[35];
  v26[5] = v1[36];
  v26[4] = v1[37];
  v26[7] = v1[38];
  v26[6] = v1[39];
  v26[9] = v1[40];
  v26[8] = v1[41];
  v26[11] = v1[42];
  v26[10] = v1[43];
  v26[13] = v1[44];
  v26[12] = v1[45];
  v26[15] = v1[46];
  v26[14] = v1[47];
  v26[17] = v1[48];
  v26[16] = v1[49];
  v26[19] = v1[50];
  v26[18] = v1[51];
  v26[21] = v1[52];
  v26[20] = v1[53];
  v26[23] = v1[54];
  v26[22] = v1[55];
  v26[25] = v1[56];
  v26[24] = v1[57];
  v26[26] = v1[58];
  v26[27] = v1[59];
  v26[28] = v1[60];
  v26[29] = v1[61];
  v26[30] = v1[62];
  v26[31] = v1[63];
  v26[32] = v1[64];
  v26[33] = v1[65];
  v26[34] = v1[66];
  v26[35] = v1[67];
  v26[36] = v1[68];
  v26[37] = v1[69];
  v26[38] = v1[70];
  v26[39] = v1[71];
  v26[40] = v1[72];
  v26[41] = v1[73];
  v26[42] = v1[74];
  v26[43] = v1[75];
  v26[44] = v1[76];
  v26[45] = v1[77];
  v26[46] = v1[78];
  v26[47] = v1[79];
  unsigned char v26[48] = v1[80];
  v26[49] = v1[81];
  v26[50] = v1[82];
  v26[51] = v1[83];
  v26[52] = v1[84];
  v26[53] = v1[85];
  v26[54] = v1[86];
  v26[55] = v1[87];
  v26[56] = v1[88];
  v26[57] = v1[89];
  v26[58] = v1[90];
  v26[59] = v1[91];
  v26[60] = v1[92];
  v26[61] = v1[93];
  v26[62] = v1[94];
  v26[63] = v1[95];
  v26[64] = v1[96];
  v26[65] = v1[97];
  v26[66] = v1[98];
  v26[67] = v1[99];
  v26[68] = v1[100];
  v26[69] = v1[101];
  v26[70] = v1[102];
  v26[71] = v1[103];
  v26[97] = v1[104];
  uint64_t v21 = v1[105];
  uint64_t v22 = v1[107];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D79EE6C0();
  sub_1D7A9D6E8();
  char v31 = 0;
  uint64_t v28 = v12;
  uint64_t v29 = v3;
  uint64_t v23 = v30;
  sub_1D7A9D1D8();
  uint64_t v30 = v23;
  if (v23) {
    return (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v28, v29);
  }
  v26[1] = v21;
  v26[0] = v22;
  uint64_t v25 = v27;
  char v31 = 1;
  sub_1D7A9D188();
  char v31 = 2;
  sub_1D7A9D188();
  char v31 = 3;
  sub_1D7A9D188();
  char v31 = 4;
  sub_1D7A9D188();
  char v31 = 5;
  sub_1D7A9D188();
  char v31 = 6;
  sub_1D7A9D188();
  char v31 = 7;
  sub_1D7A9D188();
  char v31 = 8;
  sub_1D7A9D188();
  uint64_t v30 = 0;
  char v31 = 9;
  sub_1D7A9D188();
  uint64_t v30 = 0;
  char v31 = 10;
  sub_1D7A9D188();
  uint64_t v30 = 0;
  char v31 = 11;
  sub_1D7A9D188();
  uint64_t v30 = 0;
  char v31 = 12;
  sub_1D7A9D188();
  uint64_t v30 = 0;
  char v31 = 13;
  sub_1D7A9D188();
  uint64_t v30 = 0;
  char v31 = 14;
  sub_1D7A9D188();
  uint64_t v30 = 0;
  char v31 = 15;
  sub_1D7A9D188();
  uint64_t v30 = 0;
  char v31 = 16;
  sub_1D7A9D188();
  uint64_t v30 = 0;
  char v31 = 17;
  sub_1D7A9D188();
  uint64_t v30 = 0;
  char v31 = 18;
  sub_1D7A9D188();
  uint64_t v30 = 0;
  char v31 = 19;
  sub_1D7A9D188();
  uint64_t v30 = 0;
  char v31 = 20;
  sub_1D7A9D188();
  uint64_t v30 = 0;
  char v31 = 21;
  sub_1D7A9D188();
  uint64_t v30 = 0;
  char v31 = 22;
  sub_1D7A9D188();
  uint64_t v30 = 0;
  char v31 = 23;
  sub_1D7A9D188();
  uint64_t v30 = 0;
  char v31 = 24;
  sub_1D7A9D188();
  uint64_t v30 = 0;
  char v31 = 25;
  sub_1D7A9D188();
  uint64_t v30 = 0;
  char v31 = 26;
  sub_1D7A9D188();
  uint64_t v30 = 0;
  char v31 = 27;
  sub_1D7A9D188();
  uint64_t v30 = 0;
  char v31 = 28;
  sub_1D7A9D188();
  uint64_t v30 = 0;
  char v31 = 29;
  sub_1D7A9D188();
  uint64_t v30 = 0;
  char v31 = 30;
  sub_1D7A9D188();
  uint64_t v30 = 0;
  char v31 = 31;
  sub_1D7A9D188();
  uint64_t v30 = 0;
  char v31 = 32;
  sub_1D7A9D188();
  uint64_t v30 = 0;
  char v31 = 33;
  sub_1D7A9D188();
  uint64_t v30 = 0;
  char v31 = 34;
  sub_1D7A9D188();
  uint64_t v30 = 0;
  char v31 = 35;
  sub_1D7A9D188();
  uint64_t v30 = 0;
  char v31 = 36;
  sub_1D7A9D188();
  uint64_t v30 = 0;
  char v31 = 37;
  sub_1D7A9D188();
  uint64_t v30 = 0;
  char v31 = 38;
  sub_1D7A9D188();
  uint64_t v30 = 0;
  char v31 = 39;
  sub_1D7A9D188();
  uint64_t v30 = 0;
  char v31 = 40;
  sub_1D7A9D188();
  uint64_t v30 = 0;
  char v31 = 41;
  sub_1D7A9D188();
  uint64_t v30 = 0;
  char v31 = 42;
  sub_1D7A9D188();
  uint64_t v30 = 0;
  char v31 = 43;
  sub_1D7A9D188();
  uint64_t v30 = 0;
  char v31 = 44;
  sub_1D7A9D188();
  uint64_t v30 = 0;
  char v31 = 45;
  sub_1D7A9D188();
  uint64_t v30 = 0;
  char v31 = 46;
  sub_1D7A9D188();
  uint64_t v30 = 0;
  char v31 = 47;
  sub_1D7A9D188();
  uint64_t v30 = 0;
  char v31 = 48;
  sub_1D7A9D188();
  uint64_t v30 = 0;
  char v31 = 49;
  sub_1D7A9D188();
  uint64_t v30 = 0;
  char v31 = 50;
  sub_1D7A9D188();
  uint64_t v30 = 0;
  char v31 = 51;
  sub_1D7A9D188();
  uint64_t v30 = 0;
  char v31 = 52;
  sub_1D7A9D188();
  uint64_t v30 = 0;
  char v31 = 53;
  sub_1D7A9D188();
  uint64_t v30 = 0;
  return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v28, v29);
}

uint64_t PDF417ParsedData.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA846938);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v7, v8, v9, v10, v11, v12, v13);
  uint64_t v15 = (char *)&v143 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = a1[3];
  uint64_t v245 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v16);
  sub_1D79EE6C0();
  sub_1D7A9D6A8();
  uint64_t v253 = v2;
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v245);
    uint64_t v208 = 0;
    uint64_t v209 = 0;
    uint64_t v210 = 0;
    uint64_t v211 = 0;
    uint64_t v212 = 0;
    uint64_t v213 = 0;
    uint64_t v214 = 0;
    uint64_t v215 = 0;
    uint64_t v216 = 0;
    uint64_t v217 = 0;
    uint64_t v218 = 0;
    uint64_t v219 = 0;
    uint64_t v220 = 0;
    uint64_t v221 = 0;
    uint64_t v222 = 0;
    uint64_t v223 = 0;
    uint64_t v224 = 0;
    uint64_t v225 = 0;
    uint64_t v226 = 0;
    uint64_t v227 = 0;
    uint64_t v228 = 0;
    uint64_t v229 = 0;
    uint64_t v230 = 0;
    uint64_t v231 = 0;
    uint64_t v232 = 0;
    uint64_t v233 = 0;
    uint64_t v234 = 0;
    uint64_t v235 = 0;
    uint64_t v236 = 0;
    uint64_t v237 = 0;
    uint64_t v238 = 0;
    uint64_t v239 = 0;
    uint64_t v240 = 0;
    uint64_t v241 = 0;
    uint64_t v242 = 0;
    uint64_t v243 = 0;
    uint64_t v244 = 0;
    uint64_t v246 = 0;
    uint64_t v247 = 0;
    uint64_t v248 = 0;
    uint64_t v249 = 0;
    uint64_t v250 = 0;
    uint64_t v251 = 0;
    uint64_t v252 = 0;
LABEL_4:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  LOBYTE(v255[0]) = 0;
  uint64_t v18 = sub_1D7A9D0F8();
  uint64_t v20 = v19;
  LOBYTE(v255[0]) = 1;
  swift_bridgeObjectRetain();
  uint64_t v21 = sub_1D7A9D0A8();
  uint64_t v23 = v22;
  uint64_t v201 = v21;
  uint64_t v202 = v18;
  LOBYTE(v255[0]) = 2;
  swift_bridgeObjectRetain();
  uint64_t v24 = sub_1D7A9D0A8();
  uint64_t v207 = v23;
  uint64_t v26 = v25;
  uint64_t v200 = v24;
  LOBYTE(v255[0]) = 3;
  swift_bridgeObjectRetain();
  uint64_t v27 = sub_1D7A9D0A8();
  uint64_t v206 = v26;
  uint64_t v29 = v28;
  uint64_t v199 = v27;
  LOBYTE(v255[0]) = 4;
  swift_bridgeObjectRetain();
  uint64_t v30 = sub_1D7A9D0A8();
  uint64_t v205 = v29;
  uint64_t v32 = v31;
  uint64_t v198 = v30;
  LOBYTE(v255[0]) = 5;
  swift_bridgeObjectRetain();
  uint64_t v33 = sub_1D7A9D0A8();
  uint64_t v35 = v34;
  uint64_t v197 = v33;
  LOBYTE(v255[0]) = 6;
  swift_bridgeObjectRetain();
  uint64_t v195 = sub_1D7A9D0A8();
  uint64_t v196 = v35;
  LOBYTE(v255[0]) = 7;
  uint64_t v37 = v36;
  swift_bridgeObjectRetain();
  uint64_t v38 = sub_1D7A9D0A8();
  uint64_t v253 = 0;
  uint64_t v193 = v38;
  uint64_t v194 = v37;
  LOBYTE(v255[0]) = 8;
  uint64_t v40 = v39;
  swift_bridgeObjectRetain();
  uint64_t v41 = v253;
  uint64_t v192 = sub_1D7A9D0A8();
  uint64_t v253 = v41;
  uint64_t v204 = v40;
  if (v41)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v15, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v208 = 0;
    uint64_t v209 = 0;
    uint64_t v210 = 0;
    uint64_t v211 = 0;
    uint64_t v212 = 0;
    uint64_t v213 = 0;
    uint64_t v214 = 0;
    uint64_t v215 = 0;
    uint64_t v216 = 0;
    uint64_t v217 = 0;
    uint64_t v218 = 0;
    uint64_t v219 = 0;
    uint64_t v220 = 0;
    uint64_t v221 = 0;
    uint64_t v222 = 0;
    uint64_t v223 = 0;
    uint64_t v224 = 0;
    uint64_t v225 = 0;
    uint64_t v226 = 0;
    uint64_t v227 = 0;
    uint64_t v228 = 0;
    uint64_t v229 = 0;
    uint64_t v230 = 0;
    uint64_t v231 = 0;
    uint64_t v232 = 0;
    uint64_t v233 = 0;
    uint64_t v234 = 0;
    uint64_t v235 = 0;
    uint64_t v236 = 0;
    uint64_t v237 = 0;
    uint64_t v238 = 0;
    uint64_t v239 = 0;
    uint64_t v240 = 0;
    uint64_t v241 = 0;
    uint64_t v242 = 0;
    uint64_t v243 = 0;
    uint64_t v244 = 0;
    uint64_t v246 = 0;
    uint64_t v247 = 0;
    uint64_t v248 = 0;
    uint64_t v249 = 0;
    uint64_t v250 = 0;
    uint64_t v251 = 0;
    uint64_t v252 = 0;
    uint64_t v203 = 0;
LABEL_97:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v245);
    swift_bridgeObjectRelease();
    goto LABEL_4;
  }
  uint64_t v191 = v20;
  LOBYTE(v255[0]) = 9;
  uint64_t v203 = v42;
  swift_bridgeObjectRetain();
  uint64_t v43 = v253;
  uint64_t v44 = sub_1D7A9D0A8();
  uint64_t v252 = v45;
  uint64_t v253 = v43;
  if (v43)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v15, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v208 = 0;
    uint64_t v209 = 0;
    uint64_t v210 = 0;
    uint64_t v211 = 0;
    uint64_t v212 = 0;
    uint64_t v213 = 0;
    uint64_t v214 = 0;
    uint64_t v215 = 0;
    uint64_t v216 = 0;
    uint64_t v217 = 0;
    uint64_t v218 = 0;
    uint64_t v219 = 0;
    uint64_t v220 = 0;
    uint64_t v221 = 0;
    uint64_t v222 = 0;
    uint64_t v223 = 0;
    uint64_t v224 = 0;
    uint64_t v225 = 0;
    uint64_t v226 = 0;
    uint64_t v227 = 0;
    uint64_t v228 = 0;
    uint64_t v229 = 0;
    uint64_t v230 = 0;
    uint64_t v231 = 0;
    uint64_t v232 = 0;
    uint64_t v233 = 0;
    uint64_t v234 = 0;
    uint64_t v235 = 0;
    uint64_t v236 = 0;
    uint64_t v237 = 0;
    uint64_t v238 = 0;
    uint64_t v239 = 0;
    uint64_t v240 = 0;
    uint64_t v241 = 0;
    uint64_t v242 = 0;
    uint64_t v243 = 0;
    uint64_t v244 = 0;
    uint64_t v246 = 0;
    uint64_t v247 = 0;
    uint64_t v248 = 0;
    uint64_t v249 = 0;
    uint64_t v250 = 0;
    uint64_t v251 = 0;
    uint64_t v252 = 0;
    goto LABEL_97;
  }
  uint64_t v46 = v44;
  LOBYTE(v255[0]) = 10;
  swift_bridgeObjectRetain();
  uint64_t v47 = v253;
  uint64_t v190 = sub_1D7A9D0A8();
  uint64_t v251 = v48;
  uint64_t v253 = v47;
  if (v47)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v15, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v208 = 0;
    uint64_t v209 = 0;
    uint64_t v210 = 0;
    uint64_t v211 = 0;
    uint64_t v212 = 0;
    uint64_t v213 = 0;
    uint64_t v214 = 0;
    uint64_t v215 = 0;
    uint64_t v216 = 0;
    uint64_t v217 = 0;
    uint64_t v218 = 0;
    uint64_t v219 = 0;
    uint64_t v220 = 0;
    uint64_t v221 = 0;
    uint64_t v222 = 0;
    uint64_t v223 = 0;
    uint64_t v224 = 0;
    uint64_t v225 = 0;
    uint64_t v226 = 0;
    uint64_t v227 = 0;
    uint64_t v228 = 0;
    uint64_t v229 = 0;
    uint64_t v230 = 0;
    uint64_t v231 = 0;
    uint64_t v232 = 0;
    uint64_t v233 = 0;
    uint64_t v234 = 0;
    uint64_t v235 = 0;
    uint64_t v236 = 0;
    uint64_t v237 = 0;
    uint64_t v238 = 0;
    uint64_t v239 = 0;
    uint64_t v240 = 0;
    uint64_t v241 = 0;
    uint64_t v242 = 0;
    uint64_t v243 = 0;
    uint64_t v244 = 0;
    uint64_t v246 = 0;
    uint64_t v247 = 0;
    uint64_t v248 = 0;
    uint64_t v249 = 0;
    uint64_t v250 = 0;
    uint64_t v251 = 0;
    goto LABEL_97;
  }
  LOBYTE(v255[0]) = 11;
  swift_bridgeObjectRetain();
  uint64_t v49 = v253;
  uint64_t v189 = sub_1D7A9D0A8();
  uint64_t v250 = v50;
  uint64_t v253 = v49;
  if (v49)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v15, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v208 = 0;
    uint64_t v209 = 0;
    uint64_t v210 = 0;
    uint64_t v211 = 0;
    uint64_t v212 = 0;
    uint64_t v213 = 0;
    uint64_t v214 = 0;
    uint64_t v215 = 0;
    uint64_t v216 = 0;
    uint64_t v217 = 0;
    uint64_t v218 = 0;
    uint64_t v219 = 0;
    uint64_t v220 = 0;
    uint64_t v221 = 0;
    uint64_t v222 = 0;
    uint64_t v223 = 0;
    uint64_t v224 = 0;
    uint64_t v225 = 0;
    uint64_t v226 = 0;
    uint64_t v227 = 0;
    uint64_t v228 = 0;
    uint64_t v229 = 0;
    uint64_t v230 = 0;
    uint64_t v231 = 0;
    uint64_t v232 = 0;
    uint64_t v233 = 0;
    uint64_t v234 = 0;
    uint64_t v235 = 0;
    uint64_t v236 = 0;
    uint64_t v237 = 0;
    uint64_t v238 = 0;
    uint64_t v239 = 0;
    uint64_t v240 = 0;
    uint64_t v241 = 0;
    uint64_t v242 = 0;
    uint64_t v243 = 0;
    uint64_t v244 = 0;
    uint64_t v246 = 0;
    uint64_t v247 = 0;
    uint64_t v248 = 0;
    uint64_t v249 = 0;
    uint64_t v250 = 0;
    goto LABEL_97;
  }
  LOBYTE(v255[0]) = 12;
  swift_bridgeObjectRetain();
  uint64_t v51 = v253;
  uint64_t v188 = sub_1D7A9D0A8();
  uint64_t v249 = v52;
  uint64_t v253 = v51;
  if (v51)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v15, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v208 = 0;
    uint64_t v209 = 0;
    uint64_t v210 = 0;
    uint64_t v211 = 0;
    uint64_t v212 = 0;
    uint64_t v213 = 0;
    uint64_t v214 = 0;
    uint64_t v215 = 0;
    uint64_t v216 = 0;
    uint64_t v217 = 0;
    uint64_t v218 = 0;
    uint64_t v219 = 0;
    uint64_t v220 = 0;
    uint64_t v221 = 0;
    uint64_t v222 = 0;
    uint64_t v223 = 0;
    uint64_t v224 = 0;
    uint64_t v225 = 0;
    uint64_t v226 = 0;
    uint64_t v227 = 0;
    uint64_t v228 = 0;
    uint64_t v229 = 0;
    uint64_t v230 = 0;
    uint64_t v231 = 0;
    uint64_t v232 = 0;
    uint64_t v233 = 0;
    uint64_t v234 = 0;
    uint64_t v235 = 0;
    uint64_t v236 = 0;
    uint64_t v237 = 0;
    uint64_t v238 = 0;
    uint64_t v239 = 0;
    uint64_t v240 = 0;
    uint64_t v241 = 0;
    uint64_t v242 = 0;
    uint64_t v243 = 0;
    uint64_t v244 = 0;
    uint64_t v246 = 0;
    uint64_t v247 = 0;
    uint64_t v248 = 0;
    uint64_t v249 = 0;
    goto LABEL_97;
  }
  LOBYTE(v255[0]) = 13;
  swift_bridgeObjectRetain();
  uint64_t v53 = v253;
  uint64_t v187 = sub_1D7A9D0A8();
  uint64_t v248 = v54;
  uint64_t v253 = v53;
  if (v53)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v15, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v208 = 0;
    uint64_t v209 = 0;
    uint64_t v210 = 0;
    uint64_t v211 = 0;
    uint64_t v212 = 0;
    uint64_t v213 = 0;
    uint64_t v214 = 0;
    uint64_t v215 = 0;
    uint64_t v216 = 0;
    uint64_t v217 = 0;
    uint64_t v218 = 0;
    uint64_t v219 = 0;
    uint64_t v220 = 0;
    uint64_t v221 = 0;
    uint64_t v222 = 0;
    uint64_t v223 = 0;
    uint64_t v224 = 0;
    uint64_t v225 = 0;
    uint64_t v226 = 0;
    uint64_t v227 = 0;
    uint64_t v228 = 0;
    uint64_t v229 = 0;
    uint64_t v230 = 0;
    uint64_t v231 = 0;
    uint64_t v232 = 0;
    uint64_t v233 = 0;
    uint64_t v234 = 0;
    uint64_t v235 = 0;
    uint64_t v236 = 0;
    uint64_t v237 = 0;
    uint64_t v238 = 0;
    uint64_t v239 = 0;
    uint64_t v240 = 0;
    uint64_t v241 = 0;
    uint64_t v242 = 0;
    uint64_t v243 = 0;
    uint64_t v244 = 0;
    uint64_t v246 = 0;
    uint64_t v247 = 0;
    uint64_t v248 = 0;
    goto LABEL_97;
  }
  LOBYTE(v255[0]) = 14;
  swift_bridgeObjectRetain();
  uint64_t v55 = v253;
  uint64_t v186 = sub_1D7A9D0A8();
  uint64_t v247 = v56;
  uint64_t v253 = v55;
  if (v55)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v15, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v208 = 0;
    uint64_t v209 = 0;
    uint64_t v210 = 0;
    uint64_t v211 = 0;
    uint64_t v212 = 0;
    uint64_t v213 = 0;
    uint64_t v214 = 0;
    uint64_t v215 = 0;
    uint64_t v216 = 0;
    uint64_t v217 = 0;
    uint64_t v218 = 0;
    uint64_t v219 = 0;
    uint64_t v220 = 0;
    uint64_t v221 = 0;
    uint64_t v222 = 0;
    uint64_t v223 = 0;
    uint64_t v224 = 0;
    uint64_t v225 = 0;
    uint64_t v226 = 0;
    uint64_t v227 = 0;
    uint64_t v228 = 0;
    uint64_t v229 = 0;
    uint64_t v230 = 0;
    uint64_t v231 = 0;
    uint64_t v232 = 0;
    uint64_t v233 = 0;
    uint64_t v234 = 0;
    uint64_t v235 = 0;
    uint64_t v236 = 0;
    uint64_t v237 = 0;
    uint64_t v238 = 0;
    uint64_t v239 = 0;
    uint64_t v240 = 0;
    uint64_t v241 = 0;
    uint64_t v242 = 0;
    uint64_t v243 = 0;
    uint64_t v244 = 0;
    uint64_t v246 = 0;
    uint64_t v247 = 0;
    goto LABEL_97;
  }
  LOBYTE(v255[0]) = 15;
  swift_bridgeObjectRetain();
  uint64_t v57 = v253;
  uint64_t v185 = sub_1D7A9D0A8();
  uint64_t v246 = v58;
  uint64_t v253 = v57;
  if (v57)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v15, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v208 = 0;
    uint64_t v209 = 0;
    uint64_t v210 = 0;
    uint64_t v211 = 0;
    uint64_t v212 = 0;
    uint64_t v213 = 0;
    uint64_t v214 = 0;
    uint64_t v215 = 0;
    uint64_t v216 = 0;
    uint64_t v217 = 0;
    uint64_t v218 = 0;
    uint64_t v219 = 0;
    uint64_t v220 = 0;
    uint64_t v221 = 0;
    uint64_t v222 = 0;
    uint64_t v223 = 0;
    uint64_t v224 = 0;
    uint64_t v225 = 0;
    uint64_t v226 = 0;
    uint64_t v227 = 0;
    uint64_t v228 = 0;
    uint64_t v229 = 0;
    uint64_t v230 = 0;
    uint64_t v231 = 0;
    uint64_t v232 = 0;
    uint64_t v233 = 0;
    uint64_t v234 = 0;
    uint64_t v235 = 0;
    uint64_t v236 = 0;
    uint64_t v237 = 0;
    uint64_t v238 = 0;
    uint64_t v239 = 0;
    uint64_t v240 = 0;
    uint64_t v241 = 0;
    uint64_t v242 = 0;
    uint64_t v243 = 0;
    uint64_t v244 = 0;
    uint64_t v246 = 0;
    goto LABEL_97;
  }
  LOBYTE(v255[0]) = 16;
  swift_bridgeObjectRetain();
  uint64_t v59 = v253;
  uint64_t v184 = sub_1D7A9D0A8();
  uint64_t v244 = v60;
  uint64_t v253 = v59;
  if (v59)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v15, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v208 = 0;
    uint64_t v209 = 0;
    uint64_t v210 = 0;
    uint64_t v211 = 0;
    uint64_t v212 = 0;
    uint64_t v213 = 0;
    uint64_t v214 = 0;
    uint64_t v215 = 0;
    uint64_t v216 = 0;
    uint64_t v217 = 0;
    uint64_t v218 = 0;
    uint64_t v219 = 0;
    uint64_t v220 = 0;
    uint64_t v221 = 0;
    uint64_t v222 = 0;
    uint64_t v223 = 0;
    uint64_t v224 = 0;
    uint64_t v225 = 0;
    uint64_t v226 = 0;
    uint64_t v227 = 0;
    uint64_t v228 = 0;
    uint64_t v229 = 0;
    uint64_t v230 = 0;
    uint64_t v231 = 0;
    uint64_t v232 = 0;
    uint64_t v233 = 0;
    uint64_t v234 = 0;
    uint64_t v235 = 0;
    uint64_t v236 = 0;
    uint64_t v237 = 0;
    uint64_t v238 = 0;
    uint64_t v239 = 0;
    uint64_t v240 = 0;
    uint64_t v241 = 0;
    uint64_t v242 = 0;
    uint64_t v243 = 0;
    uint64_t v244 = 0;
    goto LABEL_97;
  }
  LOBYTE(v255[0]) = 17;
  swift_bridgeObjectRetain();
  uint64_t v61 = v253;
  uint64_t v183 = sub_1D7A9D0A8();
  uint64_t v243 = v62;
  uint64_t v253 = v61;
  if (v61)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v15, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v208 = 0;
    uint64_t v209 = 0;
    uint64_t v210 = 0;
    uint64_t v211 = 0;
    uint64_t v212 = 0;
    uint64_t v213 = 0;
    uint64_t v214 = 0;
    uint64_t v215 = 0;
    uint64_t v216 = 0;
    uint64_t v217 = 0;
    uint64_t v218 = 0;
    uint64_t v219 = 0;
    uint64_t v220 = 0;
    uint64_t v221 = 0;
    uint64_t v222 = 0;
    uint64_t v223 = 0;
    uint64_t v224 = 0;
    uint64_t v225 = 0;
    uint64_t v226 = 0;
    uint64_t v227 = 0;
    uint64_t v228 = 0;
    uint64_t v229 = 0;
    uint64_t v230 = 0;
    uint64_t v231 = 0;
    uint64_t v232 = 0;
    uint64_t v233 = 0;
    uint64_t v234 = 0;
    uint64_t v235 = 0;
    uint64_t v236 = 0;
    uint64_t v237 = 0;
    uint64_t v238 = 0;
    uint64_t v239 = 0;
    uint64_t v240 = 0;
    uint64_t v241 = 0;
    uint64_t v242 = 0;
    uint64_t v243 = 0;
    goto LABEL_97;
  }
  LOBYTE(v255[0]) = 18;
  swift_bridgeObjectRetain();
  uint64_t v63 = v253;
  uint64_t v182 = sub_1D7A9D0A8();
  uint64_t v242 = v64;
  uint64_t v253 = v63;
  if (v63)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v15, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v208 = 0;
    uint64_t v209 = 0;
    uint64_t v210 = 0;
    uint64_t v211 = 0;
    uint64_t v212 = 0;
    uint64_t v213 = 0;
    uint64_t v214 = 0;
    uint64_t v215 = 0;
    uint64_t v216 = 0;
    uint64_t v217 = 0;
    uint64_t v218 = 0;
    uint64_t v219 = 0;
    uint64_t v220 = 0;
    uint64_t v221 = 0;
    uint64_t v222 = 0;
    uint64_t v223 = 0;
    uint64_t v224 = 0;
    uint64_t v225 = 0;
    uint64_t v226 = 0;
    uint64_t v227 = 0;
    uint64_t v228 = 0;
    uint64_t v229 = 0;
    uint64_t v230 = 0;
    uint64_t v231 = 0;
    uint64_t v232 = 0;
    uint64_t v233 = 0;
    uint64_t v234 = 0;
    uint64_t v235 = 0;
    uint64_t v236 = 0;
    uint64_t v237 = 0;
    uint64_t v238 = 0;
    uint64_t v239 = 0;
    uint64_t v240 = 0;
    uint64_t v241 = 0;
    uint64_t v242 = 0;
    goto LABEL_97;
  }
  LOBYTE(v255[0]) = 19;
  swift_bridgeObjectRetain();
  uint64_t v65 = v253;
  uint64_t v181 = sub_1D7A9D0A8();
  uint64_t v241 = v66;
  uint64_t v253 = v65;
  if (v65)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v15, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v208 = 0;
    uint64_t v209 = 0;
    uint64_t v210 = 0;
    uint64_t v211 = 0;
    uint64_t v212 = 0;
    uint64_t v213 = 0;
    uint64_t v214 = 0;
    uint64_t v215 = 0;
    uint64_t v216 = 0;
    uint64_t v217 = 0;
    uint64_t v218 = 0;
    uint64_t v219 = 0;
    uint64_t v220 = 0;
    uint64_t v221 = 0;
    uint64_t v222 = 0;
    uint64_t v223 = 0;
    uint64_t v224 = 0;
    uint64_t v225 = 0;
    uint64_t v226 = 0;
    uint64_t v227 = 0;
    uint64_t v228 = 0;
    uint64_t v229 = 0;
    uint64_t v230 = 0;
    uint64_t v231 = 0;
    uint64_t v232 = 0;
    uint64_t v233 = 0;
    uint64_t v234 = 0;
    uint64_t v235 = 0;
    uint64_t v236 = 0;
    uint64_t v237 = 0;
    uint64_t v238 = 0;
    uint64_t v239 = 0;
    uint64_t v240 = 0;
    uint64_t v241 = 0;
    goto LABEL_97;
  }
  LOBYTE(v255[0]) = 20;
  swift_bridgeObjectRetain();
  uint64_t v67 = v253;
  uint64_t v180 = sub_1D7A9D0A8();
  uint64_t v240 = v68;
  uint64_t v253 = v67;
  if (v67)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v15, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v208 = 0;
    uint64_t v209 = 0;
    uint64_t v210 = 0;
    uint64_t v211 = 0;
    uint64_t v212 = 0;
    uint64_t v213 = 0;
    uint64_t v214 = 0;
    uint64_t v215 = 0;
    uint64_t v216 = 0;
    uint64_t v217 = 0;
    uint64_t v218 = 0;
    uint64_t v219 = 0;
    uint64_t v220 = 0;
    uint64_t v221 = 0;
    uint64_t v222 = 0;
    uint64_t v223 = 0;
    uint64_t v224 = 0;
    uint64_t v225 = 0;
    uint64_t v226 = 0;
    uint64_t v227 = 0;
    uint64_t v228 = 0;
    uint64_t v229 = 0;
    uint64_t v230 = 0;
    uint64_t v231 = 0;
    uint64_t v232 = 0;
    uint64_t v233 = 0;
    uint64_t v234 = 0;
    uint64_t v235 = 0;
    uint64_t v236 = 0;
    uint64_t v237 = 0;
    uint64_t v238 = 0;
    uint64_t v239 = 0;
    uint64_t v240 = 0;
    goto LABEL_97;
  }
  LOBYTE(v255[0]) = 21;
  swift_bridgeObjectRetain();
  uint64_t v69 = v253;
  uint64_t v179 = sub_1D7A9D0A8();
  uint64_t v239 = v70;
  uint64_t v253 = v69;
  if (v69)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v15, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v208 = 0;
    uint64_t v209 = 0;
    uint64_t v210 = 0;
    uint64_t v211 = 0;
    uint64_t v212 = 0;
    uint64_t v213 = 0;
    uint64_t v214 = 0;
    uint64_t v215 = 0;
    uint64_t v216 = 0;
    uint64_t v217 = 0;
    uint64_t v218 = 0;
    uint64_t v219 = 0;
    uint64_t v220 = 0;
    uint64_t v221 = 0;
    uint64_t v222 = 0;
    uint64_t v223 = 0;
    uint64_t v224 = 0;
    uint64_t v225 = 0;
    uint64_t v226 = 0;
    uint64_t v227 = 0;
    uint64_t v228 = 0;
    uint64_t v229 = 0;
    uint64_t v230 = 0;
    uint64_t v231 = 0;
    uint64_t v232 = 0;
    uint64_t v233 = 0;
    uint64_t v234 = 0;
    uint64_t v235 = 0;
    uint64_t v236 = 0;
    uint64_t v237 = 0;
    uint64_t v238 = 0;
    uint64_t v239 = 0;
    goto LABEL_97;
  }
  LOBYTE(v255[0]) = 22;
  swift_bridgeObjectRetain();
  uint64_t v71 = v253;
  uint64_t v178 = sub_1D7A9D0A8();
  uint64_t v238 = v72;
  uint64_t v253 = v71;
  if (v71)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v15, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v208 = 0;
    uint64_t v209 = 0;
    uint64_t v210 = 0;
    uint64_t v211 = 0;
    uint64_t v212 = 0;
    uint64_t v213 = 0;
    uint64_t v214 = 0;
    uint64_t v215 = 0;
    uint64_t v216 = 0;
    uint64_t v217 = 0;
    uint64_t v218 = 0;
    uint64_t v219 = 0;
    uint64_t v220 = 0;
    uint64_t v221 = 0;
    uint64_t v222 = 0;
    uint64_t v223 = 0;
    uint64_t v224 = 0;
    uint64_t v225 = 0;
    uint64_t v226 = 0;
    uint64_t v227 = 0;
    uint64_t v228 = 0;
    uint64_t v229 = 0;
    uint64_t v230 = 0;
    uint64_t v231 = 0;
    uint64_t v232 = 0;
    uint64_t v233 = 0;
    uint64_t v234 = 0;
    uint64_t v235 = 0;
    uint64_t v236 = 0;
    uint64_t v237 = 0;
    uint64_t v238 = 0;
    goto LABEL_97;
  }
  LOBYTE(v255[0]) = 23;
  swift_bridgeObjectRetain();
  uint64_t v73 = v253;
  uint64_t v177 = sub_1D7A9D0A8();
  uint64_t v237 = v74;
  uint64_t v253 = v73;
  if (v73)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v15, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v208 = 0;
    uint64_t v209 = 0;
    uint64_t v210 = 0;
    uint64_t v211 = 0;
    uint64_t v212 = 0;
    uint64_t v213 = 0;
    uint64_t v214 = 0;
    uint64_t v215 = 0;
    uint64_t v216 = 0;
    uint64_t v217 = 0;
    uint64_t v218 = 0;
    uint64_t v219 = 0;
    uint64_t v220 = 0;
    uint64_t v221 = 0;
    uint64_t v222 = 0;
    uint64_t v223 = 0;
    uint64_t v224 = 0;
    uint64_t v225 = 0;
    uint64_t v226 = 0;
    uint64_t v227 = 0;
    uint64_t v228 = 0;
    uint64_t v229 = 0;
    uint64_t v230 = 0;
    uint64_t v231 = 0;
    uint64_t v232 = 0;
    uint64_t v233 = 0;
    uint64_t v234 = 0;
    uint64_t v235 = 0;
    uint64_t v236 = 0;
    uint64_t v237 = 0;
    goto LABEL_97;
  }
  LOBYTE(v255[0]) = 24;
  swift_bridgeObjectRetain();
  uint64_t v75 = v253;
  uint64_t v176 = sub_1D7A9D0A8();
  uint64_t v236 = v76;
  uint64_t v253 = v75;
  if (v75)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v15, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v208 = 0;
    uint64_t v209 = 0;
    uint64_t v210 = 0;
    uint64_t v211 = 0;
    uint64_t v212 = 0;
    uint64_t v213 = 0;
    uint64_t v214 = 0;
    uint64_t v215 = 0;
    uint64_t v216 = 0;
    uint64_t v217 = 0;
    uint64_t v218 = 0;
    uint64_t v219 = 0;
    uint64_t v220 = 0;
    uint64_t v221 = 0;
    uint64_t v222 = 0;
    uint64_t v223 = 0;
    uint64_t v224 = 0;
    uint64_t v225 = 0;
    uint64_t v226 = 0;
    uint64_t v227 = 0;
    uint64_t v228 = 0;
    uint64_t v229 = 0;
    uint64_t v230 = 0;
    uint64_t v231 = 0;
    uint64_t v232 = 0;
    uint64_t v233 = 0;
    uint64_t v234 = 0;
    uint64_t v235 = 0;
    uint64_t v236 = 0;
    goto LABEL_97;
  }
  LOBYTE(v255[0]) = 25;
  swift_bridgeObjectRetain();
  uint64_t v77 = v253;
  uint64_t v175 = sub_1D7A9D0A8();
  uint64_t v235 = v78;
  uint64_t v253 = v77;
  if (v77)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v15, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v208 = 0;
    uint64_t v209 = 0;
    uint64_t v210 = 0;
    uint64_t v211 = 0;
    uint64_t v212 = 0;
    uint64_t v213 = 0;
    uint64_t v214 = 0;
    uint64_t v215 = 0;
    uint64_t v216 = 0;
    uint64_t v217 = 0;
    uint64_t v218 = 0;
    uint64_t v219 = 0;
    uint64_t v220 = 0;
    uint64_t v221 = 0;
    uint64_t v222 = 0;
    uint64_t v223 = 0;
    uint64_t v224 = 0;
    uint64_t v225 = 0;
    uint64_t v226 = 0;
    uint64_t v227 = 0;
    uint64_t v228 = 0;
    uint64_t v229 = 0;
    uint64_t v230 = 0;
    uint64_t v231 = 0;
    uint64_t v232 = 0;
    uint64_t v233 = 0;
    uint64_t v234 = 0;
    uint64_t v235 = 0;
    goto LABEL_97;
  }
  LOBYTE(v255[0]) = 26;
  swift_bridgeObjectRetain();
  uint64_t v79 = v253;
  uint64_t v174 = sub_1D7A9D0A8();
  uint64_t v234 = v80;
  uint64_t v253 = v79;
  if (v79)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v15, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v208 = 0;
    uint64_t v209 = 0;
    uint64_t v210 = 0;
    uint64_t v211 = 0;
    uint64_t v212 = 0;
    uint64_t v213 = 0;
    uint64_t v214 = 0;
    uint64_t v215 = 0;
    uint64_t v216 = 0;
    uint64_t v217 = 0;
    uint64_t v218 = 0;
    uint64_t v219 = 0;
    uint64_t v220 = 0;
    uint64_t v221 = 0;
    uint64_t v222 = 0;
    uint64_t v223 = 0;
    uint64_t v224 = 0;
    uint64_t v225 = 0;
    uint64_t v226 = 0;
    uint64_t v227 = 0;
    uint64_t v228 = 0;
    uint64_t v229 = 0;
    uint64_t v230 = 0;
    uint64_t v231 = 0;
    uint64_t v232 = 0;
    uint64_t v233 = 0;
    uint64_t v234 = 0;
    goto LABEL_97;
  }
  LOBYTE(v255[0]) = 27;
  swift_bridgeObjectRetain();
  uint64_t v81 = v253;
  uint64_t v173 = sub_1D7A9D0A8();
  uint64_t v233 = v82;
  uint64_t v253 = v81;
  if (v81)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v15, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v208 = 0;
    uint64_t v209 = 0;
    uint64_t v210 = 0;
    uint64_t v211 = 0;
    uint64_t v212 = 0;
    uint64_t v213 = 0;
    uint64_t v214 = 0;
    uint64_t v215 = 0;
    uint64_t v216 = 0;
    uint64_t v217 = 0;
    uint64_t v218 = 0;
    uint64_t v219 = 0;
    uint64_t v220 = 0;
    uint64_t v221 = 0;
    uint64_t v222 = 0;
    uint64_t v223 = 0;
    uint64_t v224 = 0;
    uint64_t v225 = 0;
    uint64_t v226 = 0;
    uint64_t v227 = 0;
    uint64_t v228 = 0;
    uint64_t v229 = 0;
    uint64_t v230 = 0;
    uint64_t v231 = 0;
    uint64_t v232 = 0;
    uint64_t v233 = 0;
    goto LABEL_97;
  }
  LOBYTE(v255[0]) = 28;
  swift_bridgeObjectRetain();
  uint64_t v83 = v253;
  uint64_t v172 = sub_1D7A9D0A8();
  uint64_t v232 = v84;
  uint64_t v253 = v83;
  if (v83)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v15, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v208 = 0;
    uint64_t v209 = 0;
    uint64_t v210 = 0;
    uint64_t v211 = 0;
    uint64_t v212 = 0;
    uint64_t v213 = 0;
    uint64_t v214 = 0;
    uint64_t v215 = 0;
    uint64_t v216 = 0;
    uint64_t v217 = 0;
    uint64_t v218 = 0;
    uint64_t v219 = 0;
    uint64_t v220 = 0;
    uint64_t v221 = 0;
    uint64_t v222 = 0;
    uint64_t v223 = 0;
    uint64_t v224 = 0;
    uint64_t v225 = 0;
    uint64_t v226 = 0;
    uint64_t v227 = 0;
    uint64_t v228 = 0;
    uint64_t v229 = 0;
    uint64_t v230 = 0;
    uint64_t v231 = 0;
    uint64_t v232 = 0;
    goto LABEL_97;
  }
  LOBYTE(v255[0]) = 29;
  swift_bridgeObjectRetain();
  uint64_t v85 = v253;
  uint64_t v171 = sub_1D7A9D0A8();
  uint64_t v231 = v86;
  uint64_t v253 = v85;
  if (v85)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v15, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v208 = 0;
    uint64_t v209 = 0;
    uint64_t v210 = 0;
    uint64_t v211 = 0;
    uint64_t v212 = 0;
    uint64_t v213 = 0;
    uint64_t v214 = 0;
    uint64_t v215 = 0;
    uint64_t v216 = 0;
    uint64_t v217 = 0;
    uint64_t v218 = 0;
    uint64_t v219 = 0;
    uint64_t v220 = 0;
    uint64_t v221 = 0;
    uint64_t v222 = 0;
    uint64_t v223 = 0;
    uint64_t v224 = 0;
    uint64_t v225 = 0;
    uint64_t v226 = 0;
    uint64_t v227 = 0;
    uint64_t v228 = 0;
    uint64_t v229 = 0;
    uint64_t v230 = 0;
    uint64_t v231 = 0;
    goto LABEL_97;
  }
  LOBYTE(v255[0]) = 30;
  swift_bridgeObjectRetain();
  uint64_t v87 = v253;
  uint64_t v170 = sub_1D7A9D0A8();
  uint64_t v230 = v88;
  uint64_t v253 = v87;
  if (v87)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v15, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v208 = 0;
    uint64_t v209 = 0;
    uint64_t v210 = 0;
    uint64_t v211 = 0;
    uint64_t v212 = 0;
    uint64_t v213 = 0;
    uint64_t v214 = 0;
    uint64_t v215 = 0;
    uint64_t v216 = 0;
    uint64_t v217 = 0;
    uint64_t v218 = 0;
    uint64_t v219 = 0;
    uint64_t v220 = 0;
    uint64_t v221 = 0;
    uint64_t v222 = 0;
    uint64_t v223 = 0;
    uint64_t v224 = 0;
    uint64_t v225 = 0;
    uint64_t v226 = 0;
    uint64_t v227 = 0;
    uint64_t v228 = 0;
    uint64_t v229 = 0;
    uint64_t v230 = 0;
    goto LABEL_97;
  }
  LOBYTE(v255[0]) = 31;
  swift_bridgeObjectRetain();
  uint64_t v89 = v253;
  uint64_t v169 = sub_1D7A9D0A8();
  uint64_t v229 = v90;
  uint64_t v253 = v89;
  if (v89)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v15, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v208 = 0;
    uint64_t v209 = 0;
    uint64_t v210 = 0;
    uint64_t v211 = 0;
    uint64_t v212 = 0;
    uint64_t v213 = 0;
    uint64_t v214 = 0;
    uint64_t v215 = 0;
    uint64_t v216 = 0;
    uint64_t v217 = 0;
    uint64_t v218 = 0;
    uint64_t v219 = 0;
    uint64_t v220 = 0;
    uint64_t v221 = 0;
    uint64_t v222 = 0;
    uint64_t v223 = 0;
    uint64_t v224 = 0;
    uint64_t v225 = 0;
    uint64_t v226 = 0;
    uint64_t v227 = 0;
    uint64_t v228 = 0;
    uint64_t v229 = 0;
    goto LABEL_97;
  }
  LOBYTE(v255[0]) = 32;
  swift_bridgeObjectRetain();
  uint64_t v91 = v253;
  uint64_t v168 = sub_1D7A9D0A8();
  uint64_t v228 = v92;
  uint64_t v253 = v91;
  if (v91)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v15, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v208 = 0;
    uint64_t v209 = 0;
    uint64_t v210 = 0;
    uint64_t v211 = 0;
    uint64_t v212 = 0;
    uint64_t v213 = 0;
    uint64_t v214 = 0;
    uint64_t v215 = 0;
    uint64_t v216 = 0;
    uint64_t v217 = 0;
    uint64_t v218 = 0;
    uint64_t v219 = 0;
    uint64_t v220 = 0;
    uint64_t v221 = 0;
    uint64_t v222 = 0;
    uint64_t v223 = 0;
    uint64_t v224 = 0;
    uint64_t v225 = 0;
    uint64_t v226 = 0;
    uint64_t v227 = 0;
    uint64_t v228 = 0;
    goto LABEL_97;
  }
  LOBYTE(v255[0]) = 33;
  swift_bridgeObjectRetain();
  uint64_t v93 = v253;
  uint64_t v167 = sub_1D7A9D0A8();
  uint64_t v227 = v94;
  uint64_t v253 = v93;
  if (v93)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v15, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v208 = 0;
    uint64_t v209 = 0;
    uint64_t v210 = 0;
    uint64_t v211 = 0;
    uint64_t v212 = 0;
    uint64_t v213 = 0;
    uint64_t v214 = 0;
    uint64_t v215 = 0;
    uint64_t v216 = 0;
    uint64_t v217 = 0;
    uint64_t v218 = 0;
    uint64_t v219 = 0;
    uint64_t v220 = 0;
    uint64_t v221 = 0;
    uint64_t v222 = 0;
    uint64_t v223 = 0;
    uint64_t v224 = 0;
    uint64_t v225 = 0;
    uint64_t v226 = 0;
    uint64_t v227 = 0;
    goto LABEL_97;
  }
  LOBYTE(v255[0]) = 34;
  swift_bridgeObjectRetain();
  uint64_t v95 = v253;
  uint64_t v166 = sub_1D7A9D0A8();
  uint64_t v226 = v96;
  uint64_t v253 = v95;
  if (v95)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v15, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v208 = 0;
    uint64_t v209 = 0;
    uint64_t v210 = 0;
    uint64_t v211 = 0;
    uint64_t v212 = 0;
    uint64_t v213 = 0;
    uint64_t v214 = 0;
    uint64_t v215 = 0;
    uint64_t v216 = 0;
    uint64_t v217 = 0;
    uint64_t v218 = 0;
    uint64_t v219 = 0;
    uint64_t v220 = 0;
    uint64_t v221 = 0;
    uint64_t v222 = 0;
    uint64_t v223 = 0;
    uint64_t v224 = 0;
    uint64_t v225 = 0;
    uint64_t v226 = 0;
    goto LABEL_97;
  }
  LOBYTE(v255[0]) = 35;
  swift_bridgeObjectRetain();
  uint64_t v97 = v253;
  uint64_t v165 = sub_1D7A9D0A8();
  uint64_t v225 = v98;
  uint64_t v253 = v97;
  if (v97)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v15, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v208 = 0;
    uint64_t v209 = 0;
    uint64_t v210 = 0;
    uint64_t v211 = 0;
    uint64_t v212 = 0;
    uint64_t v213 = 0;
    uint64_t v214 = 0;
    uint64_t v215 = 0;
    uint64_t v216 = 0;
    uint64_t v217 = 0;
    uint64_t v218 = 0;
    uint64_t v219 = 0;
    uint64_t v220 = 0;
    uint64_t v221 = 0;
    uint64_t v222 = 0;
    uint64_t v223 = 0;
    uint64_t v224 = 0;
    uint64_t v225 = 0;
    goto LABEL_97;
  }
  LOBYTE(v255[0]) = 36;
  swift_bridgeObjectRetain();
  uint64_t v99 = v253;
  uint64_t v164 = sub_1D7A9D0A8();
  uint64_t v224 = v100;
  uint64_t v253 = v99;
  if (v99)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v15, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v208 = 0;
    uint64_t v209 = 0;
    uint64_t v210 = 0;
    uint64_t v211 = 0;
    uint64_t v212 = 0;
    uint64_t v213 = 0;
    uint64_t v214 = 0;
    uint64_t v215 = 0;
    uint64_t v216 = 0;
    uint64_t v217 = 0;
    uint64_t v218 = 0;
    uint64_t v219 = 0;
    uint64_t v220 = 0;
    uint64_t v221 = 0;
    uint64_t v222 = 0;
    uint64_t v223 = 0;
    uint64_t v224 = 0;
    goto LABEL_97;
  }
  LOBYTE(v255[0]) = 37;
  swift_bridgeObjectRetain();
  uint64_t v101 = v253;
  uint64_t v163 = sub_1D7A9D0A8();
  uint64_t v223 = v102;
  uint64_t v253 = v101;
  if (v101)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v15, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v208 = 0;
    uint64_t v209 = 0;
    uint64_t v210 = 0;
    uint64_t v211 = 0;
    uint64_t v212 = 0;
    uint64_t v213 = 0;
    uint64_t v214 = 0;
    uint64_t v215 = 0;
    uint64_t v216 = 0;
    uint64_t v217 = 0;
    uint64_t v218 = 0;
    uint64_t v219 = 0;
    uint64_t v220 = 0;
    uint64_t v221 = 0;
    uint64_t v222 = 0;
    uint64_t v223 = 0;
    goto LABEL_97;
  }
  LOBYTE(v255[0]) = 38;
  swift_bridgeObjectRetain();
  uint64_t v103 = v253;
  uint64_t v162 = sub_1D7A9D0A8();
  uint64_t v222 = v104;
  uint64_t v253 = v103;
  if (v103)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v15, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v208 = 0;
    uint64_t v209 = 0;
    uint64_t v210 = 0;
    uint64_t v211 = 0;
    uint64_t v212 = 0;
    uint64_t v213 = 0;
    uint64_t v214 = 0;
    uint64_t v215 = 0;
    uint64_t v216 = 0;
    uint64_t v217 = 0;
    uint64_t v218 = 0;
    uint64_t v219 = 0;
    uint64_t v220 = 0;
    uint64_t v221 = 0;
    uint64_t v222 = 0;
    goto LABEL_97;
  }
  LOBYTE(v255[0]) = 39;
  swift_bridgeObjectRetain();
  uint64_t v105 = v253;
  uint64_t v161 = sub_1D7A9D0A8();
  uint64_t v221 = v106;
  uint64_t v253 = v105;
  if (v105)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v15, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v208 = 0;
    uint64_t v209 = 0;
    uint64_t v210 = 0;
    uint64_t v211 = 0;
    uint64_t v212 = 0;
    uint64_t v213 = 0;
    uint64_t v214 = 0;
    uint64_t v215 = 0;
    uint64_t v216 = 0;
    uint64_t v217 = 0;
    uint64_t v218 = 0;
    uint64_t v219 = 0;
    uint64_t v220 = 0;
    uint64_t v221 = 0;
    goto LABEL_97;
  }
  LOBYTE(v255[0]) = 40;
  swift_bridgeObjectRetain();
  uint64_t v107 = v253;
  uint64_t v160 = sub_1D7A9D0A8();
  uint64_t v220 = v108;
  uint64_t v253 = v107;
  if (v107)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v15, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v208 = 0;
    uint64_t v209 = 0;
    uint64_t v210 = 0;
    uint64_t v211 = 0;
    uint64_t v212 = 0;
    uint64_t v213 = 0;
    uint64_t v214 = 0;
    uint64_t v215 = 0;
    uint64_t v216 = 0;
    uint64_t v217 = 0;
    uint64_t v218 = 0;
    uint64_t v219 = 0;
    uint64_t v220 = 0;
    goto LABEL_97;
  }
  LOBYTE(v255[0]) = 41;
  swift_bridgeObjectRetain();
  uint64_t v109 = v253;
  uint64_t v159 = sub_1D7A9D0A8();
  uint64_t v219 = v110;
  uint64_t v253 = v109;
  if (v109)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v15, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v208 = 0;
    uint64_t v209 = 0;
    uint64_t v210 = 0;
    uint64_t v211 = 0;
    uint64_t v212 = 0;
    uint64_t v213 = 0;
    uint64_t v214 = 0;
    uint64_t v215 = 0;
    uint64_t v216 = 0;
    uint64_t v217 = 0;
    uint64_t v218 = 0;
    uint64_t v219 = 0;
    goto LABEL_97;
  }
  LOBYTE(v255[0]) = 42;
  swift_bridgeObjectRetain();
  uint64_t v111 = v253;
  uint64_t v158 = sub_1D7A9D0A8();
  uint64_t v218 = v112;
  uint64_t v253 = v111;
  if (v111)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v15, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v208 = 0;
    uint64_t v209 = 0;
    uint64_t v210 = 0;
    uint64_t v211 = 0;
    uint64_t v212 = 0;
    uint64_t v213 = 0;
    uint64_t v214 = 0;
    uint64_t v215 = 0;
    uint64_t v216 = 0;
    uint64_t v217 = 0;
    uint64_t v218 = 0;
    goto LABEL_97;
  }
  LOBYTE(v255[0]) = 43;
  swift_bridgeObjectRetain();
  uint64_t v113 = v253;
  uint64_t v157 = sub_1D7A9D0A8();
  uint64_t v217 = v114;
  uint64_t v253 = v113;
  if (v113)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v15, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v208 = 0;
    uint64_t v209 = 0;
    uint64_t v210 = 0;
    uint64_t v211 = 0;
    uint64_t v212 = 0;
    uint64_t v213 = 0;
    uint64_t v214 = 0;
    uint64_t v215 = 0;
    uint64_t v216 = 0;
    uint64_t v217 = 0;
    goto LABEL_97;
  }
  LOBYTE(v255[0]) = 44;
  swift_bridgeObjectRetain();
  uint64_t v115 = v253;
  uint64_t v156 = sub_1D7A9D0A8();
  uint64_t v216 = v116;
  uint64_t v253 = v115;
  if (v115)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v15, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v208 = 0;
    uint64_t v209 = 0;
    uint64_t v210 = 0;
    uint64_t v211 = 0;
    uint64_t v212 = 0;
    uint64_t v213 = 0;
    uint64_t v214 = 0;
    uint64_t v215 = 0;
    uint64_t v216 = 0;
    goto LABEL_97;
  }
  LOBYTE(v255[0]) = 45;
  swift_bridgeObjectRetain();
  uint64_t v117 = v253;
  uint64_t v155 = sub_1D7A9D0A8();
  uint64_t v215 = v118;
  uint64_t v253 = v117;
  if (v117)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v15, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v208 = 0;
    uint64_t v209 = 0;
    uint64_t v210 = 0;
    uint64_t v211 = 0;
    uint64_t v212 = 0;
    uint64_t v213 = 0;
    uint64_t v214 = 0;
    uint64_t v215 = 0;
    goto LABEL_97;
  }
  LOBYTE(v255[0]) = 46;
  swift_bridgeObjectRetain();
  uint64_t v119 = v253;
  uint64_t v154 = sub_1D7A9D0A8();
  uint64_t v214 = v120;
  uint64_t v253 = v119;
  if (v119)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v15, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v208 = 0;
    uint64_t v209 = 0;
    uint64_t v210 = 0;
    uint64_t v211 = 0;
    uint64_t v212 = 0;
    uint64_t v213 = 0;
    uint64_t v214 = 0;
    goto LABEL_97;
  }
  LOBYTE(v255[0]) = 47;
  swift_bridgeObjectRetain();
  uint64_t v121 = v253;
  uint64_t v153 = sub_1D7A9D0A8();
  uint64_t v213 = v122;
  uint64_t v253 = v121;
  if (v121)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v15, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v208 = 0;
    uint64_t v209 = 0;
    uint64_t v210 = 0;
    uint64_t v211 = 0;
    uint64_t v212 = 0;
    uint64_t v213 = 0;
    goto LABEL_97;
  }
  LOBYTE(v255[0]) = 48;
  swift_bridgeObjectRetain();
  uint64_t v123 = v253;
  uint64_t v152 = sub_1D7A9D0A8();
  uint64_t v212 = v124;
  uint64_t v253 = v123;
  if (v123)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v15, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v208 = 0;
    uint64_t v209 = 0;
    uint64_t v210 = 0;
    uint64_t v211 = 0;
    uint64_t v212 = 0;
    goto LABEL_97;
  }
  LOBYTE(v255[0]) = 49;
  swift_bridgeObjectRetain();
  uint64_t v125 = v253;
  uint64_t v151 = sub_1D7A9D0A8();
  uint64_t v211 = v126;
  uint64_t v253 = v125;
  if (v125)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v15, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v208 = 0;
    uint64_t v209 = 0;
    uint64_t v210 = 0;
    uint64_t v211 = 0;
    goto LABEL_97;
  }
  LOBYTE(v255[0]) = 50;
  swift_bridgeObjectRetain();
  uint64_t v127 = v253;
  uint64_t v150 = sub_1D7A9D0A8();
  uint64_t v210 = v128;
  uint64_t v253 = v127;
  if (v127)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v15, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v208 = 0;
    uint64_t v209 = 0;
    uint64_t v210 = 0;
    goto LABEL_97;
  }
  LOBYTE(v255[0]) = 51;
  swift_bridgeObjectRetain();
  uint64_t v129 = v253;
  uint64_t v149 = sub_1D7A9D0A8();
  uint64_t v209 = v130;
  uint64_t v253 = v129;
  if (v129)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v15, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v208 = 0;
    uint64_t v209 = 0;
    goto LABEL_97;
  }
  LOBYTE(v255[0]) = 52;
  swift_bridgeObjectRetain();
  uint64_t v131 = v253;
  uint64_t v148 = sub_1D7A9D0A8();
  uint64_t v208 = v132;
  uint64_t v253 = v131;
  if (v131)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v15, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v208 = 0;
    goto LABEL_97;
  }
  char v256 = 53;
  swift_bridgeObjectRetain();
  uint64_t v133 = v253;
  uint64_t v147 = sub_1D7A9D0A8();
  uint64_t v253 = v133;
  if (v133)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v15, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_97;
  }
  uint64_t v135 = v134;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v15, v5);
  uint64_t v144 = v135;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v254[0] = v202;
  v254[1] = v191;
  v254[2] = v201;
  v254[3] = v207;
  v254[4] = v200;
  v254[5] = v206;
  v254[6] = v199;
  v254[7] = v205;
  v254[8] = v198;
  v254[9] = v32;
  uint64_t v145 = v32;
  uint64_t v146 = v46;
  v254[10] = v197;
  v254[11] = v196;
  v254[12] = v195;
  v254[13] = v194;
  v254[14] = v193;
  v254[15] = v204;
  v254[16] = v192;
  v254[17] = v203;
  v254[18] = v46;
  v254[19] = v252;
  v254[20] = v190;
  v254[21] = v251;
  v254[22] = v189;
  v254[23] = v250;
  v254[24] = v188;
  v254[25] = v249;
  v254[26] = v187;
  v254[27] = v248;
  v254[28] = v186;
  v254[29] = v247;
  v254[30] = v185;
  v254[31] = v246;
  v254[32] = v184;
  v254[33] = v244;
  v254[34] = v183;
  v254[35] = v243;
  v254[36] = v182;
  v254[37] = v242;
  v254[38] = v181;
  v254[39] = v241;
  v254[40] = v180;
  v254[41] = v240;
  v254[42] = v179;
  v254[43] = v239;
  v254[44] = v178;
  v254[45] = v238;
  v254[46] = v177;
  v254[47] = v237;
  v254[48] = v176;
  v254[49] = v236;
  v254[50] = v175;
  v254[51] = v235;
  v254[52] = v174;
  v254[53] = v234;
  v254[54] = v173;
  v254[55] = v233;
  v254[56] = v172;
  v254[57] = v232;
  v254[58] = v171;
  v254[59] = v231;
  v254[60] = v170;
  v254[61] = v230;
  v254[62] = v169;
  v254[63] = v229;
  v254[64] = v168;
  v254[65] = v228;
  v254[66] = v167;
  v254[67] = v227;
  v254[68] = v166;
  v254[69] = v226;
  v254[70] = v165;
  v254[71] = v225;
  v254[72] = v164;
  v254[73] = v224;
  v254[74] = v163;
  v254[75] = v223;
  v254[76] = v162;
  v254[77] = v222;
  v254[78] = v161;
  v254[79] = v221;
  v254[80] = v160;
  v254[81] = v220;
  v254[82] = v159;
  v254[83] = v219;
  v254[84] = v158;
  v254[85] = v218;
  v254[86] = v157;
  v254[87] = v217;
  v254[88] = v156;
  v254[89] = v216;
  v254[90] = v155;
  v254[91] = v215;
  v254[92] = v154;
  v254[93] = v214;
  v254[94] = v153;
  v254[95] = v213;
  v254[96] = v152;
  v254[97] = v212;
  v254[98] = v151;
  v254[99] = v211;
  v254[100] = v150;
  v254[101] = v210;
  v254[102] = v149;
  v254[103] = v209;
  v254[104] = v148;
  v254[105] = v208;
  v254[106] = v147;
  v254[107] = v135;
  sub_1D79EDF18((uint64_t)v254);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v136 = v246;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v137 = v212;
  swift_bridgeObjectRelease();
  uint64_t v138 = v211;
  swift_bridgeObjectRelease();
  uint64_t v139 = v210;
  swift_bridgeObjectRelease();
  uint64_t v140 = v209;
  swift_bridgeObjectRelease();
  uint64_t v141 = v208;
  swift_bridgeObjectRelease();
  uint64_t v142 = v144;
  swift_bridgeObjectRelease();
  memcpy(a2, v254, 0x360uLL);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v245);
  v255[0] = v202;
  v255[1] = v191;
  uint64_t v255[2] = v201;
  v255[3] = v207;
  v255[4] = v200;
  v255[5] = v206;
  v255[6] = v199;
  v255[7] = v205;
  v255[8] = v198;
  v255[9] = v145;
  v255[10] = v197;
  v255[11] = v196;
  v255[12] = v195;
  v255[13] = v194;
  v255[14] = v193;
  v255[15] = v204;
  v255[16] = v192;
  v255[17] = v203;
  v255[18] = v146;
  v255[19] = v252;
  v255[20] = v190;
  v255[21] = v251;
  v255[22] = v189;
  v255[23] = v250;
  v255[24] = v188;
  v255[25] = v249;
  v255[26] = v187;
  v255[27] = v248;
  v255[28] = v186;
  v255[29] = v247;
  v255[30] = v185;
  v255[31] = v136;
  v255[32] = v184;
  v255[33] = v244;
  v255[34] = v183;
  v255[35] = v243;
  v255[36] = v182;
  v255[37] = v242;
  v255[38] = v181;
  v255[39] = v241;
  v255[40] = v180;
  v255[41] = v240;
  v255[42] = v179;
  v255[43] = v239;
  v255[44] = v178;
  v255[45] = v238;
  v255[46] = v177;
  v255[47] = v237;
  v255[48] = v176;
  v255[49] = v236;
  v255[50] = v175;
  v255[51] = v235;
  v255[52] = v174;
  v255[53] = v234;
  v255[54] = v173;
  v255[55] = v233;
  v255[56] = v172;
  v255[57] = v232;
  v255[58] = v171;
  v255[59] = v231;
  v255[60] = v170;
  v255[61] = v230;
  v255[62] = v169;
  v255[63] = v229;
  v255[64] = v168;
  v255[65] = v228;
  v255[66] = v167;
  v255[67] = v227;
  v255[68] = v166;
  v255[69] = v226;
  v255[70] = v165;
  v255[71] = v225;
  v255[72] = v164;
  v255[73] = v224;
  v255[74] = v163;
  v255[75] = v223;
  v255[76] = v162;
  v255[77] = v222;
  v255[78] = v161;
  v255[79] = v221;
  v255[80] = v160;
  v255[81] = v220;
  v255[82] = v159;
  v255[83] = v219;
  v255[84] = v158;
  v255[85] = v218;
  v255[86] = v157;
  v255[87] = v217;
  v255[88] = v156;
  v255[89] = v216;
  v255[90] = v155;
  v255[91] = v215;
  v255[92] = v154;
  v255[93] = v214;
  v255[94] = v153;
  v255[95] = v213;
  v255[96] = v152;
  v255[97] = v137;
  v255[98] = v151;
  v255[99] = v138;
  v255[100] = v150;
  v255[101] = v139;
  v255[102] = v149;
  v255[103] = v140;
  v255[104] = v148;
  v255[105] = v141;
  v255[106] = v147;
  v255[107] = v142;
  return sub_1D79EE240((uint64_t)v255);
}

uint64_t sub_1D79ECCD0@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return PDF417ParsedData.init(from:)(a1, a2);
}

uint64_t sub_1D79ECCE8(void *a1)
{
  return PDF417ParsedData.encode(to:)(a1);
}

uint64_t PDF417ParsedData.debugDescription.getter()
{
  return 0;
}

uint64_t sub_1D79EDF18(uint64_t a1)
{
  return a1;
}

uint64_t sub_1D79EE240(uint64_t a1)
{
  return a1;
}

unint64_t *sub_1D79EE568(uint64_t isStackAllocationSafe, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9 = (unint64_t *)isStackAllocationSafe;
  v16[1] = *MEMORY[0x1E4F143B8];
  char v10 = *(unsigned char *)(isStackAllocationSafe + 32);
  unint64_t v11 = (unint64_t)((1 << v10) + 63) >> 6;
  size_t v12 = 8 * v11;
  if ((v10 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1F4188790](isStackAllocationSafe, a2, a3, a4, a5, a6, a7, a8);
    bzero((char *)v16 - ((v12 + 15) & 0x3FFFFFFFFFFFFFF0), v12);
    uint64_t v13 = sub_1D79EFDA8((void *)((char *)v16 - ((v12 + 15) & 0x3FFFFFFFFFFFFFF0)), v11, (uint64_t)v9);
    if (v8) {
      swift_willThrow();
    }
    else {
      return v13;
    }
  }
  else
  {
    uint64_t v14 = (void *)swift_slowAlloc();
    bzero(v14, v12);
    uint64_t v9 = sub_1D79EFDA8((unint64_t *)v14, v11, (uint64_t)v9);
    MEMORY[0x1D947D740](v14, -1, -1);
  }
  return v9;
}

unint64_t sub_1D79EE6C0()
{
  unint64_t result = qword_1EA846930;
  if (!qword_1EA846930)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA846930);
  }
  return result;
}

uint64_t destroy for PDF417ParsedData()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for PDF417ParsedData(void *a1, void *a2)
{
  uint64_t v3 = a2[3];
  a1[2] = a2[2];
  uint64_t v4 = a2[5];
  a1[4] = a2[4];
  uint64_t v5 = a2[7];
  a1[6] = a2[6];
  uint64_t v6 = a2[9];
  a1[8] = a2[8];
  uint64_t v7 = a2[11];
  a1[10] = a2[10];
  uint64_t v8 = a2[13];
  a1[12] = a2[12];
  uint64_t v9 = a2[15];
  a1[14] = a2[14];
  uint64_t v10 = a2[17];
  a1[16] = a2[16];
  uint64_t v11 = a2[19];
  a1[18] = a2[18];
  uint64_t v12 = a2[21];
  a1[20] = a2[20];
  uint64_t v37 = a2[23];
  uint64_t v38 = v12;
  a1[22] = a2[22];
  uint64_t v13 = a2[25];
  a1[24] = a2[24];
  uint64_t v35 = a2[27];
  uint64_t v36 = v13;
  a1[26] = a2[26];
  uint64_t v14 = a2[29];
  a1[28] = a2[28];
  uint64_t v33 = a2[31];
  uint64_t v34 = v14;
  a1[30] = a2[30];
  uint64_t v15 = a2[33];
  a1[32] = a2[32];
  uint64_t v25 = a2[35];
  a1[34] = a2[34];
  uint64_t v16 = a2[37];
  a1[36] = a2[36];
  uint64_t v26 = a2[39];
  a1[38] = a2[38];
  uint64_t v17 = a2[41];
  a1[40] = a2[40];
  uint64_t v27 = a2[43];
  a1[42] = a2[42];
  uint64_t v18 = a2[45];
  a1[44] = a2[44];
  uint64_t v28 = a2[47];
  a1[46] = a2[46];
  uint64_t v19 = a2[49];
  a1[48] = a2[48];
  uint64_t v20 = a2[51];
  a1[50] = a2[50];
  uint64_t v21 = a2[53];
  a1[52] = a2[52];
  uint64_t v29 = a2[55];
  a1[54] = a2[54];
  uint64_t v30 = a2[57];
  a1[56] = a2[56];
  uint64_t v31 = a2[59];
  a1[58] = a2[58];
  uint64_t v22 = a2[61];
  a1[60] = a2[60];
  uint64_t v32 = a2[63];
  a1[62] = a2[62];
  a1[64] = a2[64];
  a1[66] = a2[66];
  a1[68] = a2[68];
  a1[70] = a2[70];
  a1[72] = a2[72];
  a1[74] = a2[74];
  a1[76] = a2[76];
  a1[78] = a2[78];
  a1[80] = a2[80];
  a1[82] = a2[82];
  a1[84] = a2[84];
  a1[86] = a2[86];
  a1[88] = a2[88];
  a1[90] = a2[90];
  a1[92] = a2[92];
  a1[94] = a2[94];
  a1[96] = a2[96];
  a1[98] = a2[98];
  a1[100] = a2[100];
  a1[102] = a2[102];
  a1[104] = a2[104];
  a1[106] = a2[106];
  uint64_t v23 = a2[1];
  *a1 = *a2;
  a1[1] = v23;
  a1[3] = v3;
  a1[5] = v4;
  a1[7] = v5;
  a1[9] = v6;
  a1[11] = v7;
  a1[13] = v8;
  a1[15] = v9;
  a1[17] = v10;
  a1[19] = v11;
  a1[21] = v38;
  a1[23] = v37;
  a1[25] = v36;
  a1[27] = v35;
  a1[29] = v34;
  a1[31] = v33;
  a1[33] = v15;
  a1[35] = v25;
  a1[37] = v16;
  a1[39] = v26;
  a1[41] = v17;
  a1[43] = v27;
  a1[45] = v18;
  a1[47] = v28;
  a1[49] = v19;
  a1[51] = v20;
  a1[53] = v21;
  a1[55] = v29;
  a1[57] = v30;
  a1[59] = v31;
  a1[61] = v22;
  a1[63] = v32;
  a1[65] = a2[65];
  a1[67] = a2[67];
  a1[69] = a2[69];
  a1[71] = a2[71];
  a1[73] = a2[73];
  a1[75] = a2[75];
  a1[77] = a2[77];
  a1[79] = a2[79];
  a1[81] = a2[81];
  a1[83] = a2[83];
  a1[85] = a2[85];
  a1[87] = a2[87];
  a1[89] = a2[89];
  a1[91] = a2[91];
  a1[93] = a2[93];
  a1[95] = a2[95];
  a1[97] = a2[97];
  a1[99] = a2[99];
  a1[101] = a2[101];
  a1[103] = a2[103];
  a1[105] = a2[105];
  a1[107] = a2[107];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for PDF417ParsedData(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[10] = a2[10];
  a1[11] = a2[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[12] = a2[12];
  a1[13] = a2[13];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[14] = a2[14];
  a1[15] = a2[15];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[16] = a2[16];
  a1[17] = a2[17];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[18] = a2[18];
  a1[19] = a2[19];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[20] = a2[20];
  a1[21] = a2[21];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[22] = a2[22];
  a1[23] = a2[23];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[24] = a2[24];
  a1[25] = a2[25];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[26] = a2[26];
  a1[27] = a2[27];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[28] = a2[28];
  a1[29] = a2[29];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[30] = a2[30];
  a1[31] = a2[31];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[32] = a2[32];
  a1[33] = a2[33];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[34] = a2[34];
  a1[35] = a2[35];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[36] = a2[36];
  a1[37] = a2[37];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[38] = a2[38];
  a1[39] = a2[39];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[40] = a2[40];
  a1[41] = a2[41];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[42] = a2[42];
  a1[43] = a2[43];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[44] = a2[44];
  a1[45] = a2[45];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[46] = a2[46];
  a1[47] = a2[47];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[48] = a2[48];
  a1[49] = a2[49];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[50] = a2[50];
  a1[51] = a2[51];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[52] = a2[52];
  a1[53] = a2[53];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[54] = a2[54];
  a1[55] = a2[55];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[56] = a2[56];
  a1[57] = a2[57];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[58] = a2[58];
  a1[59] = a2[59];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[60] = a2[60];
  a1[61] = a2[61];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[62] = a2[62];
  a1[63] = a2[63];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[64] = a2[64];
  a1[65] = a2[65];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[66] = a2[66];
  a1[67] = a2[67];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[68] = a2[68];
  a1[69] = a2[69];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[70] = a2[70];
  a1[71] = a2[71];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[72] = a2[72];
  a1[73] = a2[73];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[74] = a2[74];
  a1[75] = a2[75];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[76] = a2[76];
  a1[77] = a2[77];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[78] = a2[78];
  a1[79] = a2[79];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[80] = a2[80];
  a1[81] = a2[81];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[82] = a2[82];
  a1[83] = a2[83];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[84] = a2[84];
  a1[85] = a2[85];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[86] = a2[86];
  a1[87] = a2[87];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[88] = a2[88];
  a1[89] = a2[89];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[90] = a2[90];
  a1[91] = a2[91];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[92] = a2[92];
  a1[93] = a2[93];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[94] = a2[94];
  a1[95] = a2[95];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[96] = a2[96];
  a1[97] = a2[97];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[98] = a2[98];
  a1[99] = a2[99];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[100] = a2[100];
  a1[101] = a2[101];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[102] = a2[102];
  a1[103] = a2[103];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[104] = a2[104];
  a1[105] = a2[105];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[106] = a2[106];
  a1[107] = a2[107];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *__swift_memcpy864_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x360uLL);
}

void *assignWithTake for PDF417ParsedData(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[9];
  a1[8] = a2[8];
  a1[9] = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = a2[11];
  a1[10] = a2[10];
  a1[11] = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = a2[13];
  a1[12] = a2[12];
  a1[13] = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = a2[15];
  a1[14] = a2[14];
  a1[15] = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = a2[17];
  a1[16] = a2[16];
  a1[17] = v12;
  swift_bridgeObjectRelease();
  uint64_t v13 = a2[19];
  a1[18] = a2[18];
  a1[19] = v13;
  swift_bridgeObjectRelease();
  uint64_t v14 = a2[21];
  a1[20] = a2[20];
  a1[21] = v14;
  swift_bridgeObjectRelease();
  uint64_t v15 = a2[23];
  a1[22] = a2[22];
  a1[23] = v15;
  swift_bridgeObjectRelease();
  uint64_t v16 = a2[25];
  a1[24] = a2[24];
  a1[25] = v16;
  swift_bridgeObjectRelease();
  uint64_t v17 = a2[27];
  a1[26] = a2[26];
  a1[27] = v17;
  swift_bridgeObjectRelease();
  uint64_t v18 = a2[29];
  a1[28] = a2[28];
  a1[29] = v18;
  swift_bridgeObjectRelease();
  uint64_t v19 = a2[31];
  a1[30] = a2[30];
  a1[31] = v19;
  swift_bridgeObjectRelease();
  uint64_t v20 = a2[33];
  a1[32] = a2[32];
  a1[33] = v20;
  swift_bridgeObjectRelease();
  uint64_t v21 = a2[35];
  a1[34] = a2[34];
  a1[35] = v21;
  swift_bridgeObjectRelease();
  uint64_t v22 = a2[37];
  a1[36] = a2[36];
  a1[37] = v22;
  swift_bridgeObjectRelease();
  uint64_t v23 = a2[39];
  a1[38] = a2[38];
  a1[39] = v23;
  swift_bridgeObjectRelease();
  uint64_t v24 = a2[41];
  a1[40] = a2[40];
  a1[41] = v24;
  swift_bridgeObjectRelease();
  uint64_t v25 = a2[43];
  a1[42] = a2[42];
  a1[43] = v25;
  swift_bridgeObjectRelease();
  uint64_t v26 = a2[45];
  a1[44] = a2[44];
  a1[45] = v26;
  swift_bridgeObjectRelease();
  uint64_t v27 = a2[47];
  a1[46] = a2[46];
  a1[47] = v27;
  swift_bridgeObjectRelease();
  uint64_t v28 = a2[49];
  a1[48] = a2[48];
  a1[49] = v28;
  swift_bridgeObjectRelease();
  uint64_t v29 = a2[51];
  a1[50] = a2[50];
  a1[51] = v29;
  swift_bridgeObjectRelease();
  uint64_t v30 = a2[53];
  a1[52] = a2[52];
  a1[53] = v30;
  swift_bridgeObjectRelease();
  uint64_t v31 = a2[55];
  a1[54] = a2[54];
  a1[55] = v31;
  swift_bridgeObjectRelease();
  uint64_t v32 = a2[57];
  a1[56] = a2[56];
  a1[57] = v32;
  swift_bridgeObjectRelease();
  uint64_t v33 = a2[59];
  a1[58] = a2[58];
  a1[59] = v33;
  swift_bridgeObjectRelease();
  uint64_t v34 = a2[61];
  a1[60] = a2[60];
  a1[61] = v34;
  swift_bridgeObjectRelease();
  uint64_t v35 = a2[63];
  a1[62] = a2[62];
  a1[63] = v35;
  swift_bridgeObjectRelease();
  a1[64] = a2[64];
  a1[65] = a2[65];
  swift_bridgeObjectRelease();
  a1[66] = a2[66];
  a1[67] = a2[67];
  swift_bridgeObjectRelease();
  a1[68] = a2[68];
  a1[69] = a2[69];
  swift_bridgeObjectRelease();
  a1[70] = a2[70];
  a1[71] = a2[71];
  swift_bridgeObjectRelease();
  a1[72] = a2[72];
  a1[73] = a2[73];
  swift_bridgeObjectRelease();
  a1[74] = a2[74];
  a1[75] = a2[75];
  swift_bridgeObjectRelease();
  a1[76] = a2[76];
  a1[77] = a2[77];
  swift_bridgeObjectRelease();
  a1[78] = a2[78];
  a1[79] = a2[79];
  swift_bridgeObjectRelease();
  a1[80] = a2[80];
  a1[81] = a2[81];
  swift_bridgeObjectRelease();
  a1[82] = a2[82];
  a1[83] = a2[83];
  swift_bridgeObjectRelease();
  a1[84] = a2[84];
  a1[85] = a2[85];
  swift_bridgeObjectRelease();
  a1[86] = a2[86];
  a1[87] = a2[87];
  swift_bridgeObjectRelease();
  a1[88] = a2[88];
  a1[89] = a2[89];
  swift_bridgeObjectRelease();
  a1[90] = a2[90];
  a1[91] = a2[91];
  swift_bridgeObjectRelease();
  a1[92] = a2[92];
  a1[93] = a2[93];
  swift_bridgeObjectRelease();
  a1[94] = a2[94];
  a1[95] = a2[95];
  swift_bridgeObjectRelease();
  a1[96] = a2[96];
  a1[97] = a2[97];
  swift_bridgeObjectRelease();
  a1[98] = a2[98];
  a1[99] = a2[99];
  swift_bridgeObjectRelease();
  a1[100] = a2[100];
  a1[101] = a2[101];
  swift_bridgeObjectRelease();
  a1[102] = a2[102];
  a1[103] = a2[103];
  swift_bridgeObjectRelease();
  a1[104] = a2[104];
  a1[105] = a2[105];
  swift_bridgeObjectRelease();
  a1[106] = a2[106];
  a1[107] = a2[107];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for PDF417ParsedData(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 864)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PDF417ParsedData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 856) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 840) = 0u;
    *(_OWORD *)(result + 824) = 0u;
    *(_OWORD *)(result + 808) = 0u;
    *(_OWORD *)(result + 792) = 0u;
    *(_OWORD *)(result + 776) = 0u;
    *(_OWORD *)(result + 760) = 0u;
    *(_OWORD *)(result + 744) = 0u;
    *(_OWORD *)(result + 728) = 0u;
    *(_OWORD *)(result + 712) = 0u;
    *(_OWORD *)(result + 696) = 0u;
    *(_OWORD *)(result + 680) = 0u;
    *(_OWORD *)(result + 664) = 0u;
    *(_OWORD *)(result + 648) = 0u;
    *(_OWORD *)(result + 632) = 0u;
    *(_OWORD *)(result + 616) = 0u;
    *(_OWORD *)(result + 600) = 0u;
    *(_OWORD *)(result + 584) = 0u;
    *(_OWORD *)(result + 568) = 0u;
    *(_OWORD *)(result + 552) = 0u;
    *(_OWORD *)(result + 536) = 0u;
    *(_OWORD *)(result + 520) = 0u;
    *(_OWORD *)(result + 504) = 0u;
    *(_OWORD *)(result + 488) = 0u;
    *(_OWORD *)(result + 472) = 0u;
    *(_OWORD *)(result + 456) = 0u;
    *(_OWORD *)(result + 440) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 864) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 864) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PDF417ParsedData()
{
  return &type metadata for PDF417ParsedData;
}

uint64_t getEnumTagSinglePayload for PDF417ParsedData.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xCB) {
    goto LABEL_17;
  }
  if (a2 + 53 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 53) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 53;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 53;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 53;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x36;
  int v8 = v6 - 54;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for PDF417ParsedData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 53 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 53) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xCB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xCA)
  {
    unsigned int v6 = ((a2 - 203) >> 8) + 1;
    *unint64_t result = a2 + 53;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D79EFC68);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 53;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PDF417ParsedData.CodingKeys()
{
  return &type metadata for PDF417ParsedData.CodingKeys;
}

unint64_t sub_1D79EFCA4()
{
  unint64_t result = qword_1EA846940;
  if (!qword_1EA846940)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA846940);
  }
  return result;
}

unint64_t sub_1D79EFCFC()
{
  unint64_t result = qword_1EA846948;
  if (!qword_1EA846948)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA846948);
  }
  return result;
}

unint64_t sub_1D79EFD54()
{
  unint64_t result = qword_1EA846950;
  if (!qword_1EA846950)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA846950);
  }
  return result;
}

unint64_t *sub_1D79EFDA8(unint64_t *result, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = 0;
  int64_t v5 = 0;
  uint64_t v6 = a3 + 64;
  uint64_t v7 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(a3 + 64);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  while (v9)
  {
    unint64_t v11 = __clz(__rbit64(v9));
    v9 &= v9 - 1;
    unint64_t v12 = v11 | (v5 << 6);
LABEL_5:
    uint64_t v13 = (uint64_t *)(*(void *)(a3 + 56) + 16 * v12);
    uint64_t v15 = *v13;
    unint64_t v14 = v13[1];
    uint64_t v16 = v15 & 0xFFFFFFFFFFFFLL;
    if ((v14 & 0x2000000000000000) != 0) {
      uint64_t v17 = HIBYTE(v14) & 0xF;
    }
    else {
      uint64_t v17 = v16;
    }
    if (v17)
    {
      *(unint64_t *)((char *)result + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      if (__OFADD__(v4++, 1))
      {
        __break(1u);
        return (unint64_t *)sub_1D79EFF08(result, a2, v4, a3);
      }
    }
  }
  int64_t v18 = v5 + 1;
  if (__OFADD__(v5, 1))
  {
    __break(1u);
    goto LABEL_29;
  }
  if (v18 >= v10) {
    return (unint64_t *)sub_1D79EFF08(result, a2, v4, a3);
  }
  unint64_t v19 = *(void *)(v6 + 8 * v18);
  ++v5;
  if (v19) {
    goto LABEL_23;
  }
  int64_t v5 = v18 + 1;
  if (v18 + 1 >= v10) {
    return (unint64_t *)sub_1D79EFF08(result, a2, v4, a3);
  }
  unint64_t v19 = *(void *)(v6 + 8 * v5);
  if (v19) {
    goto LABEL_23;
  }
  int64_t v5 = v18 + 2;
  if (v18 + 2 >= v10) {
    return (unint64_t *)sub_1D79EFF08(result, a2, v4, a3);
  }
  unint64_t v19 = *(void *)(v6 + 8 * v5);
  if (v19)
  {
LABEL_23:
    unint64_t v9 = (v19 - 1) & v19;
    unint64_t v12 = __clz(__rbit64(v19)) + (v5 << 6);
    goto LABEL_5;
  }
  int64_t v20 = v18 + 3;
  if (v20 >= v10) {
    return (unint64_t *)sub_1D79EFF08(result, a2, v4, a3);
  }
  unint64_t v19 = *(void *)(v6 + 8 * v20);
  if (v19)
  {
    int64_t v5 = v20;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v5 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v5 >= v10) {
      return (unint64_t *)sub_1D79EFF08(result, a2, v4, a3);
    }
    unint64_t v19 = *(void *)(v6 + 8 * v5);
    ++v20;
    if (v19) {
      goto LABEL_23;
    }
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_1D79EFF08(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!a3) {
    return MEMORY[0x1E4FBC868];
  }
  uint64_t v4 = a4;
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3)
  {
    swift_retain();
    return v4;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF93D0);
  uint64_t result = sub_1D7A9CFF8();
  uint64_t v9 = result;
  uint64_t v39 = a1;
  uint64_t v40 = a2;
  if (a2 < 1) {
    unint64_t v10 = 0;
  }
  else {
    unint64_t v10 = *a1;
  }
  uint64_t v11 = 0;
  uint64_t v12 = result + 64;
  while (1)
  {
    if (v10)
    {
      unint64_t v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      uint64_t v41 = v11;
      unint64_t v14 = v13 | (v11 << 6);
    }
    else
    {
      uint64_t v15 = v11 + 1;
      if (__OFADD__(v11, 1)) {
        goto LABEL_40;
      }
      if (v15 >= v40) {
        return v9;
      }
      unint64_t v16 = v39[v15];
      uint64_t v17 = v11 + 1;
      if (!v16)
      {
        uint64_t v17 = v11 + 2;
        if (v11 + 2 >= v40) {
          return v9;
        }
        unint64_t v16 = v39[v17];
        if (!v16)
        {
          uint64_t v17 = v11 + 3;
          if (v11 + 3 >= v40) {
            return v9;
          }
          unint64_t v16 = v39[v17];
          if (!v16)
          {
            uint64_t v18 = v11 + 4;
            if (v11 + 4 >= v40) {
              return v9;
            }
            unint64_t v16 = v39[v18];
            if (!v16)
            {
              while (1)
              {
                uint64_t v17 = v18 + 1;
                if (__OFADD__(v18, 1)) {
                  goto LABEL_41;
                }
                if (v17 >= v40) {
                  return v9;
                }
                unint64_t v16 = v39[v17];
                ++v18;
                if (v16) {
                  goto LABEL_24;
                }
              }
            }
            uint64_t v17 = v11 + 4;
          }
        }
      }
LABEL_24:
      unint64_t v10 = (v16 - 1) & v16;
      uint64_t v41 = v17;
      unint64_t v14 = __clz(__rbit64(v16)) + (v17 << 6);
    }
    uint64_t v19 = 16 * v14;
    uint64_t v20 = v4;
    uint64_t v21 = (uint64_t *)(*(void *)(v4 + 48) + v19);
    uint64_t v23 = *v21;
    uint64_t v22 = v21[1];
    uint64_t v24 = (uint64_t *)(*(void *)(v4 + 56) + v19);
    uint64_t v25 = *v24;
    uint64_t v26 = v24[1];
    sub_1D7A9D5D8();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1D7A9C0B8();
    uint64_t result = sub_1D7A9D628();
    uint64_t v27 = -1 << *(unsigned char *)(v9 + 32);
    unint64_t v28 = result & ~v27;
    unint64_t v29 = v28 >> 6;
    if (((-1 << v28) & ~*(void *)(v12 + 8 * (v28 >> 6))) != 0)
    {
      unint64_t v30 = __clz(__rbit64((-1 << v28) & ~*(void *)(v12 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v31 = 0;
      unint64_t v32 = (unint64_t)(63 - v27) >> 6;
      do
      {
        if (++v29 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v33 = v29 == v32;
        if (v29 == v32) {
          unint64_t v29 = 0;
        }
        v31 |= v33;
        uint64_t v34 = *(void *)(v12 + 8 * v29);
      }
      while (v34 == -1);
      unint64_t v30 = __clz(__rbit64(~v34)) + (v29 << 6);
    }
    *(void *)(v12 + ((v30 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v30;
    uint64_t v35 = 16 * v30;
    uint64_t v36 = (void *)(*(void *)(v9 + 48) + v35);
    *uint64_t v36 = v23;
    v36[1] = v22;
    uint64_t v37 = (void *)(*(void *)(v9 + 56) + v35);
    *uint64_t v37 = v25;
    v37[1] = v26;
    ++*(void *)(v9 + 16);
    if (__OFSUB__(v5--, 1)) {
      break;
    }
    uint64_t v4 = v20;
    uint64_t v11 = v41;
    if (!v5) {
      return v9;
    }
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1D79F01C8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x65707954636F64 && a2 == 0xE700000000000000;
  if (v2 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x726575737369 && a2 == 0xE600000000000000 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x72655661766D6161 && a2 == 0xEC0000006E6F6973 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001D7AC8560 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x43656C6369686576 && a2 == 0xEC0000007373616CLL || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001D7AC8580 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001D7AC85A0 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x656D614E7473616CLL && a2 == 0xE800000000000000 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x6D614E7473726966 && a2 == 0xE900000000000065 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x614E656C6464696DLL && a2 == 0xEA0000000000656DLL || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x7265646E6567 && a2 == 0xE600000000000000 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x726F6C6F43657965 && a2 == 0xE800000000000000 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0x746867696568 && a2 == 0xE600000000000000 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0x31746565727473 && a2 == 0xE700000000000000 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 2037672291 && a2 == 0xE400000000000000 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0x6574617473 && a2 == 0xE500000000000000 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else if (a1 == 0x6F436C6174736F70 && a2 == 0xEA00000000006564 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 16;
  }
  else if (a1 == 0x7265626D754E6469 && a2 == 0xE800000000000000 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 17;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001D7AC85C0 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 18;
  }
  else if (a1 == 0x7972746E756F63 && a2 == 0xE700000000000000 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 19;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001D7AC85E0 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 20;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001D7AC8600 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 21;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001D7AC8620 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 22;
  }
  else if (a1 == 0x6974617269707865 && a2 == 0xEE00657461446E6FLL || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 23;
  }
  else if (a1 == 0x7461446575737369 && a2 == 0xE900000000000065 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 24;
  }
  else if (a1 == 6451044 && a2 == 0xE300000000000000 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 25;
  }
  else if (a1 == 0x32746565727473 && a2 == 0xE700000000000000 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 26;
  }
  else if (a1 == 0x6F6C6F4372696168 && a2 == 0xE900000000000072 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 27;
  }
  else if (a1 == 0x42664F6563616C70 && a2 == 0xEC00000068747269 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 28;
  }
  else if (a1 == 0x666E497469647561 && a2 == 0xE90000000000006FLL || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 29;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001D7AC8640 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 30;
  }
  else if (a1 == 0x656D614E7473616CLL && a2 == 0xED00007361696C41 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 31;
  }
  else if (a1 == 0x6D614E7473726966 && a2 == 0xEE007361696C4165 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 32;
  }
  else if (a1 == 0x614E786966667573 && a2 == 0xEF7361696C41656DLL || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 33;
  }
  else if (a1 == 0x786966667573 && a2 == 0xE600000000000000 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 34;
  }
  else if (a1 == 0x6152746867696577 && a2 == 0xEB0000000065676ELL || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 35;
  }
  else if (a1 == 0x746963696E687465 && a2 == 0xE900000000000079 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 36;
  }
  else if (a1 == 0xD00000000000001DLL && a2 == 0x80000001D7AC8660 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 37;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001D7AC8680 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 38;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001D7AC86A0 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 39;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x80000001D7AC86C0 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 40;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x80000001D7AC86F0 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 41;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x80000001D7AC8710 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 42;
  }
  else if (a1 == 0x6E61696C706D6F63 && a2 == 0xEE00657079546563 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 43;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001D7AC8730 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 44;
  }
  else if (a1 == 0x6F50746867696577 && a2 == 0xEC00000073646E75 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 45;
  }
  else if (a1 == 0x694B746867696577 && a2 == 0xEF736D6172676F6CLL || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 46;
  }
  else if (a1 == 0x6E6F446E6167726FLL && a2 == 0xEA0000000000726FLL || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 47;
  }
  else if (a1 == 0x6E617265746576 && a2 == 0xE700000000000000 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 48;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001D7AC8750 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 49;
  }
  else if (a1 == 0xD00000000000001FLL && a2 == 0x80000001D7AC8770 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 50;
  }
  else if (a1 == 0x5538317265646E75 && a2 == 0xEC0000006C69746ELL || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 51;
  }
  else if (a1 == 0x5539317265646E75 && a2 == 0xEC0000006C69746ELL || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 52;
  }
  else if (a1 == 0x5531327265646E75 && a2 == 0xEC0000006C69746ELL)
  {
    swift_bridgeObjectRelease();
    return 53;
  }
  else
  {
    char v6 = sub_1D7A9D358();
    swift_bridgeObjectRelease();
    if (v6) {
      return 53;
    }
    else {
      return 54;
    }
  }
}

uint64_t sub_1D79F1750(uint64_t a1, unint64_t a2)
{
  uint64_t v30 = *MEMORY[0x1E4F143B8];
  unint64_t v2 = a2 >> 62;
  uint64_t v3 = MEMORY[0x1E4FBC860];
  switch(a2 >> 62)
  {
    case 1uLL:
      if (__OFSUB__(HIDWORD(a1), a1)) {
        goto LABEL_43;
      }
      uint64_t v4 = HIDWORD(a1) - (int)a1;
LABEL_6:
      if (!v4) {
        return v3;
      }
      uint64_t v29 = MEMORY[0x1E4FBC860];
      int64_t v7 = v4 & ~(v4 >> 63);
      sub_1D78AB4E8(0, v7, 0);
      uint64_t v3 = v29;
      if (v2)
      {
        if (v2 == 1) {
          uint64_t v8 = (int)a1;
        }
        else {
          uint64_t v8 = *(void *)(a1 + 16);
        }
        if (v4 < 0)
        {
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
LABEL_44:
          __break(1u);
LABEL_45:
          __break(1u);
LABEL_46:
          __break(1u);
LABEL_47:
          __break(1u);
        }
      }
      else
      {
        if (v4 < 0) {
          goto LABEL_45;
        }
        uint64_t v8 = 0;
      }
      int v25 = v2;
      do
      {
        if (!v7)
        {
          __break(1u);
LABEL_36:
          __break(1u);
LABEL_37:
          __break(1u);
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          goto LABEL_42;
        }
        if (v2)
        {
          if (v2 == 1)
          {
            if (v8 < (int)a1 || v8 >= a1 >> 32) {
              goto LABEL_36;
            }
            uint64_t v9 = sub_1D7A9AC98();
            if (!v9) {
              goto LABEL_46;
            }
            uint64_t v10 = v9;
            uint64_t v11 = sub_1D7A9ACB8();
            uint64_t v12 = v8 - v11;
            if (__OFSUB__(v8, v11)) {
              goto LABEL_39;
            }
          }
          else
          {
            if (v8 < *(void *)(a1 + 16)) {
              goto LABEL_38;
            }
            if (v8 >= *(void *)(a1 + 24)) {
              goto LABEL_40;
            }
            uint64_t v14 = sub_1D7A9AC98();
            if (!v14) {
              goto LABEL_47;
            }
            uint64_t v10 = v14;
            uint64_t v15 = sub_1D7A9ACB8();
            uint64_t v12 = v8 - v15;
            if (__OFSUB__(v8, v15)) {
              goto LABEL_41;
            }
          }
          char v13 = *(unsigned char *)(v10 + v12);
        }
        else
        {
          if (v8 >= BYTE6(a2)) {
            goto LABEL_37;
          }
          uint64_t v26 = a1;
          int v27 = a2;
          __int16 v28 = WORD2(a2);
          char v13 = *((unsigned char *)&v26 + v8);
        }
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF7940);
        uint64_t v16 = swift_allocObject();
        *(_OWORD *)(v16 + 16) = xmmword_1D7AA08E0;
        *(void *)(v16 + 56) = MEMORY[0x1E4FBC358];
        *(void *)(v16 + 64) = MEMORY[0x1E4FBC3B0];
        *(unsigned char *)(v16 + 32) = v13;
        unint64_t v2 = sub_1D7A9BFF8();
        uint64_t v18 = v17;
        uint64_t v29 = v3;
        unint64_t v20 = *(void *)(v3 + 16);
        unint64_t v19 = *(void *)(v3 + 24);
        if (v20 >= v19 >> 1)
        {
          sub_1D78AB4E8(v19 > 1, v20 + 1, 1);
          uint64_t v3 = v29;
        }
        *(void *)(v3 + 16) = v20 + 1;
        uint64_t v21 = v3 + 16 * v20;
        *(void *)(v21 + 32) = v2;
        *(void *)(v21 + 40) = v18;
        ++v8;
        --v7;
        --v4;
        LODWORD(v2) = v25;
      }
      while (v4);
      return v3;
    case 2uLL:
      uint64_t v6 = *(void *)(a1 + 16);
      uint64_t v5 = *(void *)(a1 + 24);
      uint64_t v4 = v5 - v6;
      if (!__OFSUB__(v5, v6)) {
        goto LABEL_6;
      }
      goto LABEL_44;
    case 3uLL:
      return v3;
    default:
      uint64_t v4 = BYTE6(a2);
      goto LABEL_6;
  }
}

Swift::String __swiftcall Data.base16EncodedString()()
{
  sub_1D79F1750(v0, v1);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDF7900);
  sub_1D7871DDC((unint64_t *)&qword_1EBDF7910, (uint64_t *)&unk_1EBDF7900);
  uint64_t v2 = sub_1D7A9BF38();
  uint64_t v4 = v3;
  swift_bridgeObjectRelease();
  uint64_t v5 = v2;
  uint64_t v6 = v4;
  result._object = v6;
  result._uint64_t countAndFlagsBits = v5;
  return result;
}

uint64_t Digest.data.getter()
{
  uint64_t v0 = Digest.bytes.getter();
  uint64_t v1 = sub_1D78D1EB0(v0);
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1D79F1BE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_1D79F829C(a1);
  if (v6) {
    goto LABEL_8;
  }
  if (*(_DWORD *)(a1 + 36) != v5)
  {
    __break(1u);
LABEL_8:
    __break(1u);
    return result;
  }
  if (result == 1 << *(unsigned char *)(a1 + 32))
  {
    *(void *)(a2 + 32) = 0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
  else
  {
    id v7 = sub_1D79F8534(v10, result, v5, 0, a1);
    id v9 = v7;
    *(void *)a2 = v7;
    sub_1D78907D8((uint64_t)v10, a2 + 8);
    id v8 = v7;
    return sub_1D7871C4C((uint64_t)&v9, &qword_1EA8469A8);
  }
  return result;
}

uint64_t OS_dispatch_semaphore.wait(interval:)(double a1)
{
  return sub_1D79F1FFC(MEMORY[0x1E4FBCCB0], a1);
}

uint64_t Data.init(base16Encoded:)()
{
  uint64_t v0 = (void *)sub_1D7A9BF98();
  swift_bridgeObjectRelease();
  uint64_t v1 = HexToBytes(v0);

  if (!v1) {
    return 0;
  }
  uint64_t v2 = sub_1D7A9B028();
  unint64_t v4 = v3;

  return sub_1D78D0D44(v2, v4);
}

float CGRect.area.getter(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  double Width = CGRectGetWidth(*(CGRect *)&a1);
  v10.origin.x = a1;
  v10.origin.y = a2;
  v10.size.width = a3;
  v10.size.height = a4;
  return Width * CGRectGetHeight(v10);
}

void NSXPCInterface.setClasses(_:for:argumentIndex:ofReply:)(uint64_t a1)
{
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1CA80]), sel_init);
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = 0;
    do
    {
      ++v4;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDF9590);
      objc_msgSend(v2, sel_addObject_, sub_1D7A9D4C8());
      swift_unknownObjectRelease();
    }
    while (v3 != v4);
    swift_bridgeObjectRelease();
  }
  id v5 = v2;
  sub_1D7A9C628();

  sub_1D7A9CF98();
  __break(1u);
}

uint64_t Data.clone()(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = a1;
  switch(a2 >> 62)
  {
    case 1uLL:
      a1 = (int)a1;
      uint64_t v3 = v2 >> 32;
      goto LABEL_5;
    case 2uLL:
      a1 = *(void *)(a1 + 16);
      uint64_t v3 = *(void *)(v2 + 24);
LABEL_5:
      if (v3 < a1)
      {
        __break(1u);
        JUMPOUT(0x1D79F1FD4);
      }
      return result;
    default:
      return sub_1D7A9B058();
  }
  return sub_1D7A9B058();
}

uint64_t OS_dispatch_group.wait(interval:)(double a1)
{
  return sub_1D79F1FFC(MEMORY[0x1E4FBCC00], a1);
}

uint64_t sub_1D79F1FFC(uint64_t (*a1)(char *), double a2)
{
  uint64_t v4 = sub_1D7A9B738();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v4, v6, v7, v8, v9, v10, v11, v12);
  uint64_t v15 = (char *)&v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13, v16, v17, v18, v19, v20, v21, v22);
  uint64_t v24 = (char *)&v40 - v23;
  uint64_t v25 = sub_1D7A9B698();
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t result = MEMORY[0x1F4188790](v25, v27, v28, v29, v30, v31, v32, v33);
  uint64_t v36 = (uint64_t *)((char *)&v40 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0));
  double v37 = a2 * 1000.0;
  if ((~COERCE__INT64(a2 * 1000.0) & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v37 <= -9.22337204e18)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v37 < 9.22337204e18)
  {
    *uint64_t v36 = (uint64_t)v37;
    (*(void (**)(void *, void, uint64_t))(v26 + 104))(v36, *MEMORY[0x1E4FBCAC8], v25);
    sub_1D7A9B728();
    MEMORY[0x1D947A4C0](v15, v36);
    uint64_t v38 = *(void (**)(char *, uint64_t))(v5 + 8);
    v38(v15, v4);
    uint64_t v39 = a1(v24) & 1;
    v38(v24, v4);
    (*(void (**)(void *, uint64_t))(v26 + 8))(v36, v25);
    return v39;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t OS_dispatch_group.wait()()
{
  *(void *)(v1 + 16) = v0;
  return MEMORY[0x1F4188298](sub_1D79F226C, 0, 0);
}

uint64_t sub_1D79F226C()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = swift_task_alloc();
  v0[3] = v2;
  *(void *)(v2 + 16) = v1;
  uint64_t v3 = (void *)swift_task_alloc();
  v0[4] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_1D79F2350;
  return MEMORY[0x1F41880D8]();
}

uint64_t sub_1D79F2350()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1D79F2468, 0, 0);
}

uint64_t sub_1D79F2468()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1D79F247C(uint64_t a1, uint64_t a2)
{
  uint64_t v53 = a2;
  uint64_t v48 = a1;
  uint64_t v54 = sub_1D7A9B708();
  uint64_t v52 = *(void *)(v54 - 8);
  MEMORY[0x1F4188790](v54, v2, v3, v4, v5, v6, v7, v8);
  uint64_t v51 = (char *)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA8469B0);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  MEMORY[0x1F4188790](v10, v13, v14, v15, v16, v17, v18, v19);
  uint64_t v20 = sub_1D7A9B6D8();
  uint64_t v21 = *(void *)(v20 - 8);
  MEMORY[0x1F4188790](v20, v22, v23, v24, v25, v26, v27, v28);
  uint64_t v30 = (char *)&v47 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_1D7A9B6C8();
  uint64_t v49 = *(void *)(v31 - 8);
  uint64_t v50 = v31;
  MEMORY[0x1F4188790](v31, v32, v33, v34, v35, v36, v37, v38);
  uint64_t v40 = (char *)&v47 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D7A9B6B8();
  sub_1D78C4038(0, (unint64_t *)&qword_1EBDF9DB0);
  (*(void (**)(char *, void, uint64_t))(v21 + 104))(v30, *MEMORY[0x1E4FBCB48], v20);
  uint64_t v41 = (void *)sub_1D7A9C818();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v30, v20);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)&v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v48, v10);
  unint64_t v42 = (*(unsigned __int8 *)(v11 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v43 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v43 + v42, (char *)&v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v10);
  aBlock[4] = sub_1D79F8704;
  aBlock[5] = v43;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1D79899E4;
  aBlock[3] = &block_descriptor_11;
  uint64_t v44 = _Block_copy(aBlock);
  uint64_t v45 = v51;
  sub_1D7A9B6E8();
  sub_1D7A9C798();
  _Block_release(v44);

  (*(void (**)(char *, uint64_t))(v52 + 8))(v45, v54);
  (*(void (**)(char *, uint64_t))(v49 + 8))(v40, v50);
  return swift_release();
}

uint64_t Data.init(base64urlEncoded:)()
{
  sub_1D791118C();
  sub_1D7A9CA58();
  swift_bridgeObjectRelease();
  sub_1D7A9CA58();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  uint64_t v0 = sub_1D7A9C0D8();
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 & 3;
  if (v0 <= 0) {
    uint64_t v1 = -(-v0 & 3);
  }
  if (v1 >= 1)
  {
    MEMORY[0x1D947AF40](61, 0xE100000000000000, 4 - v1);
    sub_1D7A9C128();
    swift_bridgeObjectRelease();
  }
  uint64_t v2 = sub_1D7A9AFB8();
  unint64_t v4 = v3;
  sub_1D786E9D8(v2, v3);
  swift_bridgeObjectRelease();
  if (v4 >> 60 != 15) {
    sub_1D7871BDC(v2, v4);
  }
  return v2;
}

Swift::String __swiftcall Data.base64urlEncodedString()()
{
  sub_1D7A9B008();
  sub_1D791118C();
  sub_1D7A9CA58();
  swift_bridgeObjectRelease();
  sub_1D7A9CA58();
  swift_bridgeObjectRelease();
  uint64_t v0 = sub_1D7A9CA58();
  uint64_t v2 = v1;
  swift_bridgeObjectRelease();
  uint64_t v3 = v0;
  unint64_t v4 = v2;
  result._object = v4;
  result._uint64_t countAndFlagsBits = v3;
  return result;
}

uint64_t Dictionary<>.optString(forKey:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_1D7A9C9A8();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v17 = MEMORY[0x1F4188790](v8, v10, v11, v12, v13, v14, v15, v16);
  uint64_t v19 = (char *)v42 - v18;
  uint64_t v20 = *(void *)(a4 - 8);
  uint64_t v28 = MEMORY[0x1F4188790](v17, v21, v22, v23, v24, v25, v26, v27);
  uint64_t v30 = (char *)v42 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v28, v31, v32, v33, v34, v35, v36, v37);
  uint64_t v39 = (char *)v42 - v38;
  v42[1] = a1;
  v42[2] = a2;
  swift_bridgeObjectRetain();
  sub_1D7A9CBF8();
  MEMORY[0x1D947AC60](&v43, a3, MEMORY[0x1E4FBB960], a4, MEMORY[0x1E4FBB968]);
  sub_1D78A2748((uint64_t)&v43);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v19, 1, a4) == 1)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v19, v8);
    return 0;
  }
  else
  {
    uint64_t v41 = *(void (**)(char *, char *, uint64_t))(v20 + 32);
    v41(v39, v19, a4);
    v41(v30, v39, a4);
    if (swift_dynamicCast()) {
      return v43;
    }
    else {
      return 0;
    }
  }
}

uint64_t Dictionary<>.optInt(forKey:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_1D7A9C9A8();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v17 = MEMORY[0x1F4188790](v8, v10, v11, v12, v13, v14, v15, v16);
  uint64_t v19 = (char *)v42 - v18;
  uint64_t v20 = *(void *)(a4 - 8);
  uint64_t v28 = MEMORY[0x1F4188790](v17, v21, v22, v23, v24, v25, v26, v27);
  uint64_t v30 = (char *)v42 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v28, v31, v32, v33, v34, v35, v36, v37);
  uint64_t v39 = (char *)v42 - v38;
  v42[1] = a1;
  v42[2] = a2;
  swift_bridgeObjectRetain();
  sub_1D7A9CBF8();
  MEMORY[0x1D947AC60](v43, a3, MEMORY[0x1E4FBB960], a4, MEMORY[0x1E4FBB968]);
  sub_1D78A2748((uint64_t)v43);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v19, 1, a4) == 1)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v19, v8);
    return 0;
  }
  else
  {
    uint64_t v41 = *(void (**)(char *, char *, uint64_t))(v20 + 32);
    v41(v39, v19, a4);
    v41(v30, v39, a4);
    if (swift_dynamicCast()) {
      return v43[0];
    }
    else {
      return 0;
    }
  }
}

uint64_t Dictionary<>.optDataHex(forKey:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_1D7A9C9A8();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v17 = MEMORY[0x1F4188790](v8, v10, v11, v12, v13, v14, v15, v16);
  uint64_t v19 = (char *)v44 - v18;
  uint64_t v20 = *(void *)(a4 - 8);
  uint64_t v28 = MEMORY[0x1F4188790](v17, v21, v22, v23, v24, v25, v26, v27);
  uint64_t v30 = (char *)v44 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v28, v31, v32, v33, v34, v35, v36, v37);
  uint64_t v39 = (char *)v44 - v38;
  _OWORD v44[3] = a1;
  v44[4] = a2;
  swift_bridgeObjectRetain();
  sub_1D7A9CBF8();
  MEMORY[0x1D947AC60](&v45, a3, MEMORY[0x1E4FBB960], a4, MEMORY[0x1E4FBB968]);
  sub_1D78A2748((uint64_t)&v45);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v19, 1, a4) == 1)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v19, v8);
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v39, v19, a4);
  (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v30, v39, a4);
  if ((swift_dynamicCast() & 1) == 0)
  {
    (*(void (**)(char *, uint64_t))(v20 + 8))(v39, a4);
    return 0;
  }
  uint64_t v40 = v45;
  unint64_t v41 = v46;
  uint64_t v45 = sub_1D79F1750(v45, v46);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDF7900);
  sub_1D7871DDC((unint64_t *)&qword_1EBDF7910, (uint64_t *)&unk_1EBDF7900);
  uint64_t v42 = sub_1D7A9BF38();
  swift_bridgeObjectRelease();
  sub_1D78607E8(v40, v41);
  (*(void (**)(char *, uint64_t))(v20 + 8))(v39, a4);
  return v42;
}

uint64_t Dictionary<>.optDict(forKey:)(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_1D79F3334(a1, a2, a3, a4, &qword_1EA846960);
}

uint64_t Dictionary<>.optArray(forKey:)(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_1D79F3334(a1, a2, a3, a4, &qword_1EA846968);
}

uint64_t sub_1D79F3334(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  v43[0] = a5;
  uint64_t v9 = sub_1D7A9C9A8();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v18 = MEMORY[0x1F4188790](v9, v11, v12, v13, v14, v15, v16, v17);
  uint64_t v20 = (char *)v43 - v19;
  uint64_t v21 = *(void *)(a4 - 8);
  uint64_t v29 = MEMORY[0x1F4188790](v18, v22, v23, v24, v25, v26, v27, v28);
  uint64_t v31 = (char *)v43 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v29, v32, v33, v34, v35, v36, v37, v38);
  uint64_t v40 = (char *)v43 - v39;
  v43[1] = a1;
  v43[2] = a2;
  swift_bridgeObjectRetain();
  sub_1D7A9CBF8();
  MEMORY[0x1D947AC60](v44, a3, MEMORY[0x1E4FBB960], a4, MEMORY[0x1E4FBB968]);
  sub_1D78A2748((uint64_t)v44);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v20, 1, a4) == 1)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v20, v9);
    return 0;
  }
  else
  {
    uint64_t v42 = *(void (**)(char *, char *, uint64_t))(v21 + 32);
    v42(v40, v20, a4);
    v42(v31, v40, a4);
    __swift_instantiateConcreteTypeFromMangledName(v43[0]);
    if (swift_dynamicCast()) {
      return v44[0];
    }
    else {
      return 0;
    }
  }
}

Swift::Bool __swiftcall NSXPCConnection.isEntitled(_:)(Swift::String a1)
{
  uint64_t v2 = (void *)sub_1D7A9BF98();
  id v3 = objc_msgSend(v1, sel_valueForEntitlement_, v2);

  if (v3)
  {
    sub_1D7A9CB08();
    swift_unknownObjectRelease();
    sub_1D7860E50(v9, v10);
    sub_1D78907D8((uint64_t)v10, (uint64_t)v9);
    if (swift_dynamicCast())
    {
      LOBYTE(v3) = v7;
LABEL_8:
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
      return (char)v3;
    }
    sub_1D78907D8((uint64_t)v10, (uint64_t)v9);
    if (swift_dynamicCast())
    {
      swift_bridgeObjectRelease();
      uint64_t v4 = HIBYTE(v8) & 0xF;
      if ((v8 & 0x2000000000000000) == 0) {
        uint64_t v4 = v7 & 0xFFFFFFFFFFFFLL;
      }
      LOBYTE(v3) = v4 != 0;
      goto LABEL_8;
    }
    sub_1D78907D8((uint64_t)v10, (uint64_t)v9);
    sub_1D78C4038(0, (unint64_t *)&qword_1EBDF90E0);
    if (swift_dynamicCast()
      || (sub_1D78907D8((uint64_t)v10, (uint64_t)v9),
          sub_1D78C4038(0, (unint64_t *)&unk_1EA8442A0),
          swift_dynamicCast()))
    {
      id v5 = objc_msgSend((id)v7, sel_count);

      __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
      LOBYTE(v3) = (uint64_t)v5 > 0;
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
      LOBYTE(v3) = 0;
    }
  }
  return (char)v3;
}

uint64_t static NSXPCConnection.hasArrayEntitlement(name:values:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = (uint64_t)objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_currentConnection);
  if (result)
  {
    id v5 = (void *)result;
    uint64_t v6 = (void *)sub_1D7A9BF98();
    id v7 = objc_msgSend(v5, sel_valueForEntitlement_, v6);

    if (v7)
    {
      sub_1D7A9CB08();
      swift_unknownObjectRelease();
    }
    else
    {
      memset(v13, 0, sizeof(v13));
    }
    sub_1D7871D78((uint64_t)v13, (uint64_t)v14, (uint64_t *)&unk_1EBDF9680);
    if (v15)
    {
      sub_1D78C4038(0, (unint64_t *)&qword_1EBDF90E0);
      if (swift_dynamicCast())
      {
        uint64_t v8 = *(void *)(a3 + 16);
        if (!v8)
        {

          return 1;
        }
        swift_bridgeObjectRetain();
        for (uint64_t i = a3 + 40; ; i += 16)
        {
          swift_bridgeObjectRetain();
          uint64_t v10 = (void *)sub_1D7A9BF98();
          swift_bridgeObjectRelease();
          unsigned __int8 v11 = objc_msgSend(v12, sel_containsObject_, v10);

          if ((v11 & 1) == 0) {
            break;
          }
          if (!--v8)
          {

            swift_bridgeObjectRelease();
            return 1;
          }
        }

        swift_bridgeObjectRelease();
      }
      else
      {
      }
    }
    else
    {

      sub_1D7871C4C((uint64_t)v14, (uint64_t *)&unk_1EBDF9680);
    }
    return 0;
  }
  return result;
}

Swift::Bool __swiftcall NSXPCConnection.hasArrayEntitlement(name:values:)(Swift::String name, Swift::OpaquePointer values)
{
  uint64_t v4 = (void *)sub_1D7A9BF98();
  id v5 = objc_msgSend(v2, sel_valueForEntitlement_, v4);

  if (v5)
  {
    sub_1D7A9CB08();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v12, 0, sizeof(v12));
  }
  sub_1D7871D78((uint64_t)v12, (uint64_t)v13, (uint64_t *)&unk_1EBDF9680);
  if (v14)
  {
    sub_1D78C4038(0, (unint64_t *)&qword_1EBDF90E0);
    if (swift_dynamicCast())
    {
      uint64_t v6 = *((void *)values._rawValue + 2);
      if (!v6)
      {

        return 1;
      }
      swift_bridgeObjectRetain();
      for (uint64_t i = (char *)values._rawValue + 40; ; i += 16)
      {
        swift_bridgeObjectRetain();
        uint64_t v8 = (void *)sub_1D7A9BF98();
        swift_bridgeObjectRelease();
        unsigned __int8 v9 = objc_msgSend(v11, sel_containsObject_, v8);

        if ((v9 & 1) == 0) {
          break;
        }
        if (!--v6)
        {

          swift_bridgeObjectRelease();
          return 1;
        }
      }

      swift_bridgeObjectRelease();
    }
  }
  else
  {
    sub_1D7871C4C((uint64_t)v13, (uint64_t *)&unk_1EBDF9680);
  }
  return 0;
}

Swift::OpaquePointer_optional __swiftcall NSXPCConnection.getArrayEntitlement(name:)(Swift::String name)
{
  uint64_t v2 = sub_1D7A9AE78();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2, v4, v5, v6, v7, v8, v9, v10);
  uint64_t v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = (void *)sub_1D7A9BF98();
  id v14 = objc_msgSend(v1, sel_valueForEntitlement_, v13);

  if (v14)
  {
    sub_1D7A9CB08();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v33, 0, sizeof(v33));
  }
  sub_1D7871D78((uint64_t)v33, (uint64_t)&v34, (uint64_t *)&unk_1EBDF9680);
  if (!v35)
  {
    sub_1D7871C4C((uint64_t)&v34, (uint64_t *)&unk_1EBDF9680);
    goto LABEL_17;
  }
  sub_1D78C4038(0, (unint64_t *)&qword_1EBDF90E0);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_17:
    uint64_t v17 = 0;
    goto LABEL_20;
  }
  uint64_t v16 = v31;
  sub_1D7A9C8F8();
  sub_1D7A9AE68();
  if (v35)
  {
    uint64_t v17 = (void *)MEMORY[0x1E4FBC860];
    do
    {
      sub_1D7860E50(&v34, v33);
      if (swift_dynamicCast())
      {
        uint64_t v19 = v31;
        uint64_t v18 = v32;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v17 = sub_1D789E300(0, v17[2] + 1, 1, v17);
        }
        unint64_t v20 = v17[2];
        unint64_t v21 = v17[3];
        unint64_t v22 = v20 + 1;
        if (v20 >= v21 >> 1)
        {
          uint64_t v30 = v18;
          unint64_t v24 = v20 + 1;
          uint64_t v25 = v17;
          unint64_t v26 = v20;
          uint64_t v27 = sub_1D789E300((void *)(v21 > 1), v20 + 1, 1, v25);
          unint64_t v20 = v26;
          unint64_t v22 = v24;
          uint64_t v18 = v30;
          uint64_t v17 = v27;
        }
        v17[2] = v22;
        uint64_t v23 = &v17[2 * v20];
        v23[4] = v19;
        v23[5] = v18;
      }
      sub_1D7A9AE68();
    }
    while (v35);
  }
  else
  {
    uint64_t v17 = (void *)MEMORY[0x1E4FBC860];
  }
  (*(void (**)(char *, uint64_t))(v3 + 8))(v12, v2);

LABEL_20:
  uint64_t v28 = v17;
  result.value._rawValue = v28;
  result.is_nil = v15;
  return result;
}

Swift::OpaquePointer_optional __swiftcall NSXPCConnection.getDictionaryOfStringArraysEntitlement(name:)(Swift::String name)
{
  object = name._object;
  uint64_t countAndFlagsBits = name._countAndFlagsBits;
  uint64_t v4 = sub_1D7A9B5F8();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v4, v6, v7, v8, v9, v10, v11, v12);
  uint64_t v94 = (char *)&v85 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = MEMORY[0x1F4188790](v13, v15, v16, v17, v18, v19, v20, v21);
  unint64_t v24 = (char *)&v85 - v23;
  MEMORY[0x1F4188790](v22, v25, v26, v27, v28, v29, v30, v31);
  uint64_t v95 = (char *)&v85 - v32;
  uint64_t v90 = sub_1D7A9AE78();
  uint64_t v33 = *(void *)(v90 - 8);
  MEMORY[0x1F4188790](v90, v34, v35, v36, v37, v38, v39, v40);
  uint64_t v91 = (char *)&v85 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v93 = countAndFlagsBits;
  uint64_t v42 = (void *)sub_1D7A9BF98();
  id v43 = objc_msgSend(v1, sel_valueForEntitlement_, v42);

  if (v43)
  {
    sub_1D7A9CB08();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v105, 0, 32);
  }
  sub_1D7871D78((uint64_t)v105, (uint64_t)&v106, (uint64_t *)&unk_1EBDF9680);
  uint64_t v44 = v95;
  if (!v107)
  {
    sub_1D7871C4C((uint64_t)&v106, (uint64_t *)&unk_1EBDF9680);
    goto LABEL_42;
  }
  sub_1D78C4038(0, (unint64_t *)&unk_1EA8442A0);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_42:
    uint64_t v84 = 0;
    goto LABEL_44;
  }
  unint64_t v46 = (void *)v103;
  unint64_t v47 = sub_1D785FC4C(MEMORY[0x1E4FBC860]);
  id v88 = v46;
  uint64_t v89 = (void *)v47;
  sub_1D7A9C708();
  uint64_t v98 = swift_retain();
  sub_1D7A9C718();
  sub_1D7871D78((uint64_t)v105, (uint64_t)&v106, &qword_1EA846970);
  if (v107)
  {
    uint64_t v97 = &v108;
    uint64_t v99 = (void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    uint64_t v49 = (void (**)(char *, uint64_t))(v5 + 8);
    uint64_t v86 = (void (**)(char *, uint64_t))(v33 + 8);
    uint64_t v96 = MEMORY[0x1E4FBC840] + 8;
    *(void *)&long long v48 = 136315138;
    long long v92 = v48;
    uint64_t v50 = v94;
    do
    {
      sub_1D7860E50(&v106, v105);
      sub_1D7860E50(v97, &v103);
      sub_1D78C4038(0, (unint64_t *)&qword_1EBDF90E0);
      if (swift_dynamicCast())
      {
        uint64_t v51 = (void *)v102[0];
        sub_1D78907D8((uint64_t)v105, (uint64_t)&v103);
        if (!swift_dynamicCast())
        {
          if (qword_1EBDF9DC8 != -1) {
            swift_once();
          }
          uint64_t v52 = __swift_project_value_buffer(v4, (uint64_t)qword_1EBDFBE70);
          swift_beginAccess();
          (*v99)(v24, v52, v4);
          swift_bridgeObjectRetain_n();
          uint64_t v53 = sub_1D7A9B5D8();
          uint64_t v54 = v24;
          os_log_type_t v55 = sub_1D7A9C758();
          if (os_log_type_enabled(v53, v55))
          {
            uint64_t v56 = swift_slowAlloc();
            uint64_t v57 = swift_slowAlloc();
            *(void *)&long long v103 = v57;
            *(_DWORD *)uint64_t v56 = v92;
            swift_bridgeObjectRetain();
            *(void *)(v56 + 4) = sub_1D7923300(v93, (unint64_t)object, (uint64_t *)&v103);
            swift_bridgeObjectRelease_n();
            _os_log_impl(&dword_1D7853000, v53, v55, "Dictionary entitlement %s has an invalid value", (uint8_t *)v56, 0xCu);
            swift_arrayDestroy();
            uint64_t v58 = v57;
            uint64_t v44 = v95;
            MEMORY[0x1D947D740](v58, -1, -1);
            uint64_t v59 = v56;
            uint64_t v50 = v94;
            MEMORY[0x1D947D740](v59, -1, -1);
          }
          else
          {
            swift_bridgeObjectRelease_n();
          }

          (*v49)(v54, v4);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v105);
          unint64_t v24 = v54;
          goto LABEL_10;
        }
        long long v85 = *(_OWORD *)v102;
        sub_1D7A9C8F8();
        sub_1D7A9AE68();
        if (v104)
        {
          uint64_t v87 = (void *)MEMORY[0x1E4FBC860];
          do
          {
            while (1)
            {
              sub_1D7860E50(&v103, v102);
              if (swift_dynamicCast()) {
                break;
              }
              uint64_t v67 = v24;
              if (qword_1EBDF9DC8 != -1) {
                swift_once();
              }
              uint64_t v68 = __swift_project_value_buffer(v4, (uint64_t)qword_1EBDFBE70);
              swift_beginAccess();
              (*v99)(v44, v68, v4);
              swift_bridgeObjectRetain_n();
              uint64_t v69 = sub_1D7A9B5D8();
              os_log_type_t v70 = sub_1D7A9C758();
              if (os_log_type_enabled(v69, v70))
              {
                uint64_t v71 = swift_slowAlloc();
                uint64_t v72 = swift_slowAlloc();
                v102[0] = v72;
                *(_DWORD *)uint64_t v71 = v92;
                swift_bridgeObjectRetain();
                *(void *)(v71 + 4) = sub_1D7923300(v93, (unint64_t)object, v102);
                swift_bridgeObjectRelease_n();
                _os_log_impl(&dword_1D7853000, v69, v70, "Dictionary entitlement %s has an invalid value", (uint8_t *)v71, 0xCu);
                swift_arrayDestroy();
                uint64_t v73 = v72;
                uint64_t v44 = v95;
                MEMORY[0x1D947D740](v73, -1, -1);
                uint64_t v74 = v71;
                uint64_t v50 = v94;
                MEMORY[0x1D947D740](v74, -1, -1);
              }
              else
              {

                swift_bridgeObjectRelease_n();
              }
              (*v49)(v44, v4);
              unint64_t v24 = v67;
              sub_1D7A9AE68();
              if (!v104) {
                goto LABEL_40;
              }
            }
            uint64_t v75 = v100;
            uint64_t v76 = v101;
            uint64_t v77 = v24;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v87 = sub_1D789E300(0, v87[2] + 1, 1, v87);
            }
            unint64_t v79 = v87[2];
            unint64_t v78 = v87[3];
            if (v79 >= v78 >> 1) {
              uint64_t v87 = sub_1D789E300((void *)(v78 > 1), v79 + 1, 1, v87);
            }
            uint64_t v80 = v87;
            v87[2] = v79 + 1;
            uint64_t v81 = &v80[2 * v79];
            v81[4] = v75;
            v81[5] = v76;
            sub_1D7A9AE68();
            uint64_t v50 = v94;
            uint64_t v44 = v95;
            unint64_t v24 = v77;
          }
          while (v104);
        }
        else
        {
          uint64_t v87 = (void *)MEMORY[0x1E4FBC860];
        }
LABEL_40:
        (*v86)(v91, v90);
        uint64_t v82 = v89;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *(void *)&long long v103 = v82;
        sub_1D78A1A9C((uint64_t)v87, v85, *((uint64_t *)&v85 + 1), isUniquelyReferenced_nonNull_native);
        uint64_t v89 = (void *)v103;

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        if (qword_1EBDF9DC8 != -1) {
          swift_once();
        }
        uint64_t v60 = __swift_project_value_buffer(v4, (uint64_t)qword_1EBDFBE70);
        swift_beginAccess();
        (*v99)(v50, v60, v4);
        swift_bridgeObjectRetain_n();
        uint64_t v61 = sub_1D7A9B5D8();
        os_log_type_t v62 = sub_1D7A9C758();
        if (os_log_type_enabled(v61, v62))
        {
          uint64_t v63 = swift_slowAlloc();
          uint64_t v64 = swift_slowAlloc();
          *(void *)&long long v103 = v64;
          *(_DWORD *)uint64_t v63 = v92;
          swift_bridgeObjectRetain();
          *(void *)(v63 + 4) = sub_1D7923300(v93, (unint64_t)object, (uint64_t *)&v103);
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_1D7853000, v61, v62, "Dictionary entitlement %s has an invalid value", (uint8_t *)v63, 0xCu);
          swift_arrayDestroy();
          uint64_t v65 = v64;
          uint64_t v44 = v95;
          MEMORY[0x1D947D740](v65, -1, -1);
          uint64_t v66 = v63;
          uint64_t v50 = v94;
          MEMORY[0x1D947D740](v66, -1, -1);
        }
        else
        {
          swift_bridgeObjectRelease_n();
        }

        (*v49)(v50, v4);
      }
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v105);
LABEL_10:
      sub_1D7A9C718();
      sub_1D7871D78((uint64_t)v105, (uint64_t)&v106, &qword_1EA846970);
    }
    while (v107);
  }

  swift_release_n();
  uint64_t v84 = v89;
LABEL_44:
  result.value._rawValue = v84;
  result.is_nil = v45;
  return result;
}

uint64_t sub_1D79F478C()
{
  id v1 = objc_msgSend(v0, sel_debugDescription);
  uint64_t v2 = sub_1D7A9BFC8();

  return v2;
}

id KeyedDecodingContainer.decodeBase64URLEncodedData(forKey:)()
{
  sub_1D7A9D0F8();
  if (!v1)
  {
    unint64_t v2 = sub_1D791118C();
    uint64_t v3 = MEMORY[0x1E4FBB1A0];
    sub_1D7A9CA58();
    swift_bridgeObjectRelease();
    uint64_t v13 = v3;
    sub_1D7A9CA58();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_1D7A9C0D8();
    swift_bridgeObjectRelease();
    uint64_t v5 = v4 & 3;
    if (v4 <= 0) {
      uint64_t v5 = -(-v4 & 3);
    }
    if (v5 >= 1)
    {
      MEMORY[0x1D947AF40](61, 0xE100000000000000, 4 - v5);
      sub_1D7A9C128();
      swift_bridgeObjectRelease();
    }
    id v0 = (id)sub_1D7A9AFB8();
    unint64_t v7 = v6;
    sub_1D786E9D8((uint64_t)v0, v6);
    swift_bridgeObjectRelease();
    if (v7 >> 60 == 15)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF9400);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1D7AA08E0;
      *(void *)(inited + 32) = sub_1D7A9BFC8();
      *(void *)(inited + 40) = v9;
      *(void *)(inited + 72) = v3;
      *(void *)(inited + 48) = 0xD000000000000029;
      *(void *)(inited + 56) = 0x80000001D7AC8810;
      sub_1D785F2A0(inited);
      id v0 = objc_allocWithZone(MEMORY[0x1E4F28C58]);
      uint64_t v10 = (void *)sub_1D7A9BF98();
      uint64_t v11 = (void *)sub_1D7A9BE98();
      swift_bridgeObjectRelease();
      objc_msgSend(v0, sel_initWithDomain_code_userInfo_, v10, -1, v11, v13, v2, v2, v2);

      swift_willThrow();
    }
    else
    {
      sub_1D7871BDC((uint64_t)v0, v7);
    }
  }
  return v0;
}

id UnkeyedDecodingContainer.decodeBase64URLEncodedData()()
{
  sub_1D7A9D2A8();
  if (!v1)
  {
    unint64_t v2 = sub_1D791118C();
    uint64_t v3 = MEMORY[0x1E4FBB1A0];
    sub_1D7A9CA58();
    swift_bridgeObjectRelease();
    uint64_t v13 = v3;
    sub_1D7A9CA58();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_1D7A9C0D8();
    swift_bridgeObjectRelease();
    uint64_t v5 = v4 & 3;
    if (v4 <= 0) {
      uint64_t v5 = -(-v4 & 3);
    }
    if (v5 >= 1)
    {
      MEMORY[0x1D947AF40](61, 0xE100000000000000, 4 - v5);
      sub_1D7A9C128();
      swift_bridgeObjectRelease();
    }
    id v0 = (id)sub_1D7A9AFB8();
    unint64_t v7 = v6;
    sub_1D786E9D8((uint64_t)v0, v6);
    swift_bridgeObjectRelease();
    if (v7 >> 60 == 15)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF9400);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1D7AA08E0;
      *(void *)(inited + 32) = sub_1D7A9BFC8();
      *(void *)(inited + 40) = v9;
      *(void *)(inited + 72) = v3;
      *(void *)(inited + 48) = 0xD000000000000029;
      *(void *)(inited + 56) = 0x80000001D7AC8810;
      sub_1D785F2A0(inited);
      id v0 = objc_allocWithZone(MEMORY[0x1E4F28C58]);
      uint64_t v10 = (void *)sub_1D7A9BF98();
      uint64_t v11 = (void *)sub_1D7A9BE98();
      swift_bridgeObjectRelease();
      objc_msgSend(v0, sel_initWithDomain_code_userInfo_, v10, -1, v11, v13, v2, v2, v2);

      swift_willThrow();
    }
    else
    {
      sub_1D7871BDC((uint64_t)v0, v7);
    }
  }
  return v0;
}

uint64_t Digest.bytes.getter()
{
  uint64_t v0 = sub_1D7A9BD78();
  uint64_t v2 = sub_1D78D1370(v0, v1);
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t Digest.hexStr.getter()
{
  uint64_t v0 = Digest.bytes.getter();
  int64_t v1 = *(void *)(v0 + 16);
  if (v1)
  {
    uint64_t v14 = MEMORY[0x1E4FBC860];
    sub_1D78AB4E8(0, v1, 0);
    uint64_t v2 = 0;
    uint64_t v3 = MEMORY[0x1E4FBC3B0];
    do
    {
      char v4 = *(unsigned char *)(v0 + v2 + 32);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF7940);
      uint64_t v5 = swift_allocObject();
      *(_OWORD *)(v5 + 16) = xmmword_1D7AA08E0;
      *(void *)(v5 + 56) = MEMORY[0x1E4FBC358];
      *(void *)(v5 + 64) = v3;
      *(unsigned char *)(v5 + 32) = v4;
      uint64_t v6 = sub_1D7A9BFF8();
      uint64_t v8 = v7;
      unint64_t v10 = *(void *)(v14 + 16);
      unint64_t v9 = *(void *)(v14 + 24);
      if (v10 >= v9 >> 1) {
        sub_1D78AB4E8(v9 > 1, v10 + 1, 1);
      }
      ++v2;
      *(void *)(v14 + 16) = v10 + 1;
      uint64_t v11 = v14 + 16 * v10;
      *(void *)(v11 + 32) = v6;
      *(void *)(v11 + 40) = v8;
    }
    while (v1 != v2);
  }
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDF7900);
  sub_1D7871DDC((unint64_t *)&qword_1EBDF7910, (uint64_t *)&unk_1EBDF7900);
  uint64_t v12 = sub_1D7A9BF38();
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t Digest.base64Str.getter()
{
  uint64_t v0 = Digest.bytes.getter();
  uint64_t v1 = sub_1D78D1EB0(v0);
  unint64_t v3 = v2;
  swift_bridgeObjectRelease();
  uint64_t v4 = sub_1D7A9B008();
  sub_1D78607E8(v1, v3);
  return v4;
}

BOOL Date.isAtLeast(days:after:)()
{
  uint64_t v0 = sub_1D7A9B148();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0, v2, v3, v4, v5, v6, v7, v8);
  unint64_t v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D7A9B0B8();
  sub_1D79F85CC();
  char v11 = sub_1D7A9BF58();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v10, v0);
  return (v11 & 1) == 0;
}

BOOL Date.isAtLeast(seconds:after:)()
{
  uint64_t v0 = sub_1D7A9B148();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0, v2, v3, v4, v5, v6, v7, v8);
  unint64_t v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D7A9B0B8();
  sub_1D79F85CC();
  char v11 = sub_1D7A9BF58();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v10, v0);
  return (v11 & 1) == 0;
}

uint64_t Date.isAfterAndWithin(seconds:of:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1D7A9B148();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v4, v6, v7, v8, v9, v10, v11, v12);
  uint64_t v42 = (char *)&v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = MEMORY[0x1F4188790](v13, v15, v16, v17, v18, v19, v20, v21);
  unint64_t v24 = (char *)&v41 - v23;
  MEMORY[0x1F4188790](v22, v25, v26, v27, v28, v29, v30, v31);
  uint64_t v33 = (char *)&v41 - v32;
  sub_1D79F85CC();
  char v34 = sub_1D7A9BF58();
  uint64_t v35 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v35(v33, v2, v4);
  v35(v24, a1, v4);
  if (v34)
  {
    uint64_t v36 = *(void (**)(char *, uint64_t))(v5 + 8);
    v36(v24, v4);
    v36(v33, v4);
    char v37 = 0;
  }
  else
  {
    uint64_t v38 = v42;
    sub_1D7A9B0B8();
    char v37 = sub_1D7A9BF58() ^ 1;
    uint64_t v39 = *(void (**)(char *, uint64_t))(v5 + 8);
    v39(v38, v4);
    v39(v24, v4);
    v39(v33, v4);
  }
  return v37 & 1;
}

uint64_t Date.isBeforeAndWithin(seconds:of:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1D7A9B148();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v4, v6, v7, v8, v9, v10, v11, v12);
  uint64_t v42 = (char *)&v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = MEMORY[0x1F4188790](v13, v15, v16, v17, v18, v19, v20, v21);
  unint64_t v24 = (char *)&v41 - v23;
  MEMORY[0x1F4188790](v22, v25, v26, v27, v28, v29, v30, v31);
  uint64_t v33 = (char *)&v41 - v32;
  sub_1D79F85CC();
  char v34 = sub_1D7A9BF58();
  uint64_t v35 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v35(v33, v2, v4);
  v35(v24, a1, v4);
  if (v34)
  {
    uint64_t v36 = *(void (**)(char *, uint64_t))(v5 + 8);
    v36(v24, v4);
    v36(v33, v4);
    char v37 = 0;
  }
  else
  {
    uint64_t v38 = v42;
    sub_1D7A9B0B8();
    char v37 = sub_1D7A9BF58() ^ 1;
    uint64_t v39 = *(void (**)(char *, uint64_t))(v5 + 8);
    v39(v38, v4);
    v39(v24, v4);
    v39(v33, v4);
  }
  return v37 & 1;
}

BOOL Date.isWithin(seconds:of:)(double a1)
{
  sub_1D7A9B098();
  double v3 = v2;
  sub_1D7A9B098();
  return vabdd_f64(v3, v4) < a1;
}

uint64_t Date.addingRandomOffset(in:)(double a1)
{
  if (a1 < 0.0)
  {
    __break(1u);
    goto LABEL_7;
  }
  if ((~*(void *)&a1 & 0x7FF0000000000000) == 0)
  {
LABEL_7:
    __break(1u);
    return result;
  }
  sub_1D79F814C(0x20000000000001uLL);
  return sub_1D7A9B0B8();
}

uint64_t Date.utcDayRepresentation.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v45 = a1;
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA845BC0);
  MEMORY[0x1F4188790](v1 - 8, v2, v3, v4, v5, v6, v7, v8);
  uint64_t v10 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1D7A9B238();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11, v13, v14, v15, v16, v17, v18, v19);
  uint64_t v21 = (char *)&v44 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_1D7A9B2B8();
  uint64_t v23 = *(void *)(v22 - 8);
  MEMORY[0x1F4188790](v22, v24, v25, v26, v27, v28, v29, v30);
  uint64_t v32 = (char *)&v44 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v12 + 104))(v21, *MEMORY[0x1E4F27B20], v11);
  sub_1D7A9B248();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v21, v11);
  sub_1D7A9B2C8();
  uint64_t v33 = sub_1D7A9B2F8();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v33 - 8) + 48))(v10, 1, v33);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    sub_1D7A9B298();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8432B0);
    uint64_t v35 = sub_1D7A9B2A8();
    uint64_t v36 = *(void *)(v35 - 8);
    uint64_t v37 = *(void *)(v36 + 72);
    unint64_t v38 = (*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80);
    uint64_t v39 = swift_allocObject();
    *(_OWORD *)(v39 + 16) = xmmword_1D7AA4E90;
    unint64_t v40 = v39 + v38;
    uint64_t v41 = *(void (**)(unint64_t, void, uint64_t))(v36 + 104);
    v41(v40, *MEMORY[0x1E4F27C78], v35);
    v41(v40 + v37, *MEMORY[0x1E4F27C20], v35);
    v41(v40 + 2 * v37, *MEMORY[0x1E4F27C30], v35);
    v41(v40 + 3 * v37, *MEMORY[0x1E4F27BF0], v35);
    sub_1D78CD99C(v39);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    uint64_t v42 = v45;
    sub_1D7A9B268();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v32, v22);
    uint64_t v43 = sub_1D7A9AD28();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v43 - 8) + 56))(v42, 0, 1, v43);
  }
  return result;
}

uint64_t Int.formattedByteSize.getter(uint64_t a1)
{
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28B68]), sel_init);
  id v3 = objc_msgSend(v2, sel_stringFromByteCount_, a1);

  uint64_t v4 = sub_1D7A9BFC8();
  return v4;
}

uint64_t Array<A>.intArray.getter(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1D7A9CFB8();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v3 = MEMORY[0x1E4FBC860];
  if (!v2) {
    return v3;
  }
  uint64_t v11 = MEMORY[0x1E4FBC860];
  uint64_t result = sub_1D78AB608(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    uint64_t v5 = 0;
    uint64_t v3 = v11;
    do
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v6 = (id)MEMORY[0x1D947BA10](v5, a1);
      }
      else {
        id v6 = *(id *)(a1 + 8 * v5 + 32);
      }
      uint64_t v7 = v6;
      id v8 = objc_msgSend(v6, sel_integerValue);

      unint64_t v10 = *(void *)(v11 + 16);
      unint64_t v9 = *(void *)(v11 + 24);
      if (v10 >= v9 >> 1) {
        sub_1D78AB608(v9 > 1, v10 + 1, 1);
      }
      ++v5;
      *(void *)(v11 + 16) = v10 + 1;
      *(void *)(v11 + 8 * v10 + 32) = v8;
    }
    while (v2 != v5);
    return v3;
  }
  __break(1u);
  return result;
}

uint64_t Array<A>.numberArray.getter(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x1E4FBC860];
  if (v2)
  {
    uint64_t v6 = MEMORY[0x1E4FBC860];
    sub_1D7A9CDC8();
    uint64_t v4 = (uint64_t *)(a1 + 32);
    do
    {
      uint64_t v5 = *v4++;
      objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, v5);
      sub_1D7A9CD98();
      sub_1D7A9CDD8();
      sub_1D7A9CDE8();
      sub_1D7A9CDA8();
      --v2;
    }
    while (v2);
    return v6;
  }
  return result;
}

uint64_t UUID.data.getter()
{
  uint64_t v18 = *MEMORY[0x1E4F143B8];
  uint64_t v9 = sub_1D7A9B188();
  char v10 = v0;
  char v11 = v1;
  char v12 = v2;
  char v13 = v3;
  char v14 = v4;
  char v15 = v5;
  char v16 = v6;
  char v17 = v7;
  return sub_1D78D0C88((uint64_t)&v9, (uint64_t)&v18);
}

Swift::String_optional __swiftcall URL.fileSize()()
{
  uint64_t v0 = sub_1D7A9B5F8();
  MEMORY[0x1F4188790](v0, v1, v2, v3, v4, v5, v6, v7);
  uint64_t v8 = sub_1D7A9AD78();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8, v10, v11, v12, v13, v14, v15, v16);
  uint64_t v18 = (char *)&v32 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA846980);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1D7AA08E0;
  uint64_t v20 = (void *)*MEMORY[0x1E4F1C5F8];
  *(void *)(inited + 32) = *MEMORY[0x1E4F1C5F8];
  id v21 = v20;
  sub_1D78CDD04(inited);
  swift_setDeallocating();
  type metadata accessor for URLResourceKey(0);
  swift_arrayDestroy();
  sub_1D7A9AEB8();
  swift_bridgeObjectRelease();
  uint64_t v22 = sub_1D7A9AD48();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v18, v8);
  sub_1D79F1BE8(v22, (uint64_t)&v33);
  swift_bridgeObjectRelease();
  if (!v33)
  {
    sub_1D7871C4C((uint64_t)&v33, &qword_1EA846988);
    goto LABEL_5;
  }

  sub_1D7860E50(&v34, &v35);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_5:
    uint64_t v26 = 0;
    unint64_t v28 = 0xE000000000000000;
    goto LABEL_6;
  }
  id v23 = v33;
  id v24 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28B68]), sel_init);
  id v25 = objc_msgSend(v24, sel_stringFromByteCount_, v23);
  uint64_t v26 = sub_1D7A9BFC8();
  unint64_t v28 = v27;

LABEL_6:
  uint64_t v29 = v26;
  uint64_t v30 = (void *)v28;
  result.value._object = v30;
  result.value._uint64_t countAndFlagsBits = v29;
  return result;
}

id URL.count.getter()
{
  uint64_t v0 = sub_1D7A9B5F8();
  MEMORY[0x1F4188790](v0, v1, v2, v3, v4, v5, v6, v7);
  uint64_t v8 = sub_1D7A9AD78();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8, v10, v11, v12, v13, v14, v15, v16);
  uint64_t v18 = (char *)&v24 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA846980);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1D7AA08E0;
  uint64_t v20 = (void *)*MEMORY[0x1E4F1C5F8];
  *(void *)(inited + 32) = *MEMORY[0x1E4F1C5F8];
  id v21 = v20;
  sub_1D78CDD04(inited);
  swift_setDeallocating();
  type metadata accessor for URLResourceKey(0);
  swift_arrayDestroy();
  sub_1D7A9AEB8();
  swift_bridgeObjectRelease();
  uint64_t v22 = sub_1D7A9AD48();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v18, v8);
  sub_1D79F1BE8(v22, (uint64_t)&v25);
  swift_bridgeObjectRelease();
  if (v25)
  {

    sub_1D7860E50(&v26, &v27);
    if (swift_dynamicCast()) {
      return v25;
    }
  }
  else
  {
    sub_1D7871C4C((uint64_t)&v25, &qword_1EA846988);
  }
  return 0;
}

id URL.isFileOnDisk.getter()
{
  sub_1D7A9AF48();
  id v0 = objc_msgSend(self, sel_defaultManager);
  uint64_t v1 = (void *)sub_1D7A9BF98();
  swift_bridgeObjectRelease();
  id v2 = objc_msgSend(v0, sel_fileExistsAtPath_, v1);

  return v2;
}

uint64_t Data.formattedSize.getter(uint64_t a1, unint64_t a2)
{
  id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28B68]), sel_init);
  objc_msgSend(v4, sel_setAllowedUnits_, 0xFFFFLL);
  objc_msgSend(v4, sel_setCountStyle_, 0);
  uint64_t v5 = 0;
  switch(a2 >> 62)
  {
    case 1uLL:
      if (__OFSUB__(HIDWORD(a1), a1))
      {
        __break(1u);
LABEL_8:
        __break(1u);
        JUMPOUT(0x1D79F68B4);
      }
      uint64_t v5 = HIDWORD(a1) - (int)a1;
LABEL_6:
      id v8 = objc_msgSend(v4, sel_stringFromByteCount_, v5);
      uint64_t v9 = sub_1D7A9BFC8();

      return v9;
    case 2uLL:
      uint64_t v7 = *(void *)(a1 + 16);
      uint64_t v6 = *(void *)(a1 + 24);
      uint64_t v5 = v6 - v7;
      if (!__OFSUB__(v6, v7)) {
        goto LABEL_6;
      }
      goto LABEL_8;
    case 3uLL:
      goto LABEL_6;
    default:
      uint64_t v5 = BYTE6(a2);
      goto LABEL_6;
  }
}

uint64_t optionalMax<A>(_:_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char *a5@<X8>)
{
  uint64_t v61 = a4;
  uint64_t v63 = a2;
  uint64_t v8 = sub_1D7A9C9A8();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v17 = MEMORY[0x1F4188790](v8, v10, v11, v12, v13, v14, v15, v16);
  uint64_t v19 = (char *)&v59 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = MEMORY[0x1F4188790](v17, v20, v21, v22, v23, v24, v25, v26);
  uint64_t v29 = (char *)&v59 - v28;
  uint64_t v30 = *(void *)(a3 - 8);
  uint64_t v38 = MEMORY[0x1F4188790](v27, v31, v32, v33, v34, v35, v36, v37);
  uint64_t v60 = (char *)&v59 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v38, v40, v41, v42, v43, v44, v45, v46);
  os_log_type_t v62 = (char *)&v59 - v47;
  long long v48 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v48(v29, a1, v8);
  uint64_t v64 = v30;
  uint64_t v49 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48);
  if (v49(v29, 1, a3) == 1)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v29, v8);
    return ((uint64_t (*)(char *, uint64_t, uint64_t))v48)(a5, v63, v8);
  }
  else
  {
    uint64_t v59 = a5;
    uint64_t v51 = v29;
    uint64_t v52 = *(void (**)(char *, char *, uint64_t))(v64 + 32);
    v52(v62, v51, a3);
    v48(v19, v63, v8);
    if (v49(v19, 1, a3) == 1)
    {
      (*(void (**)(char *, uint64_t))(v9 + 8))(v19, v8);
      uint64_t v53 = v59;
      v52(v59, v62, a3);
      return (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(v64 + 56))(v53, 0, 1, a3);
    }
    else
    {
      uint64_t v54 = v60;
      v52(v60, v19, a3);
      os_log_type_t v55 = v59;
      uint64_t v56 = v62;
      sub_1D7A9D4D8();
      uint64_t v57 = v64;
      uint64_t v58 = *(void (**)(char *, uint64_t))(v64 + 8);
      v58(v54, a3);
      v58(v56, a3);
      return (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(v57 + 56))(v55, 0, 1, a3);
    }
  }
}

uint64_t Sequence.asyncMap<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v6[7] = a5;
  v6[8] = v5;
  v6[5] = a3;
  v6[6] = a4;
  v6[3] = a1;
  v6[4] = a2;
  v6[9] = swift_task_alloc();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v6[10] = AssociatedTypeWitness;
  v6[11] = *(void *)(AssociatedTypeWitness - 8);
  v6[12] = swift_task_alloc();
  sub_1D7A9C9A8();
  v6[13] = swift_task_alloc();
  v6[14] = *(void *)(a3 - 8);
  v6[15] = swift_task_alloc();
  uint64_t v9 = swift_getAssociatedTypeWitness();
  v6[16] = v9;
  v6[17] = *(void *)(v9 - 8);
  v6[18] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1D79F6E24, 0, 0);
}

uint64_t sub_1D79F6E24()
{
  uint64_t v2 = v0[14];
  uint64_t v1 = v0[15];
  uint64_t v3 = v0[8];
  uint64_t v4 = v0[5];
  v0[2] = sub_1D7A9BE88();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v3, v4);
  sub_1D7A9C1F8();
  uint64_t v5 = v0[13];
  uint64_t v6 = v0[10];
  uint64_t v7 = v0[11];
  swift_getAssociatedConformanceWitness();
  sub_1D7A9C9C8();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    (*(void (**)(void, void))(v0[17] + 8))(v0[18], v0[16]);
    uint64_t v8 = v0[2];
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v9 = (uint64_t (*)(uint64_t))v0[1];
    return v9(v8);
  }
  else
  {
    uint64_t v11 = (int *)v0[3];
    (*(void (**)(void, void, void))(v0[11] + 32))(v0[12], v0[13], v0[10]);
    uint64_t v15 = (uint64_t (*)(uint64_t, uint64_t))((char *)v11 + *v11);
    uint64_t v12 = (void *)swift_task_alloc();
    v0[19] = v12;
    *uint64_t v12 = v0;
    v12[1] = sub_1D79F7074;
    uint64_t v13 = v0[12];
    uint64_t v14 = v0[9];
    return v15(v14, v13);
  }
}

uint64_t sub_1D79F7074()
{
  *(void *)(*(void *)v1 + 160) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_1D79F73CC;
  }
  else
  {
    uint64_t v2 = sub_1D79F7190;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D79F7190()
{
  uint64_t v2 = v0[11];
  uint64_t v1 = v0[12];
  uint64_t v3 = v0[10];
  sub_1D7A9C3E8();
  sub_1D7A9C3C8();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  uint64_t v4 = v0[13];
  uint64_t v5 = v0[10];
  uint64_t v6 = v0[11];
  swift_getAssociatedConformanceWitness();
  sub_1D7A9C9C8();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    (*(void (**)(void, void))(v0[17] + 8))(v0[18], v0[16]);
    uint64_t v7 = v0[2];
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v8 = (uint64_t (*)(uint64_t))v0[1];
    return v8(v7);
  }
  else
  {
    uint64_t v10 = (int *)v0[3];
    (*(void (**)(void, void, void))(v0[11] + 32))(v0[12], v0[13], v0[10]);
    uint64_t v14 = (uint64_t (*)(uint64_t, uint64_t))((char *)v10 + *v10);
    uint64_t v11 = (void *)swift_task_alloc();
    v0[19] = v11;
    *uint64_t v11 = v0;
    v11[1] = sub_1D79F7074;
    uint64_t v12 = v0[12];
    uint64_t v13 = v0[9];
    return v14(v13, v12);
  }
}

uint64_t sub_1D79F73CC()
{
  uint64_t v2 = v0[17];
  uint64_t v1 = v0[18];
  uint64_t v3 = v0[16];
  (*(void (**)(void, void))(v0[11] + 8))(v0[12], v0[10]);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t Array.chunked(into:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1 < 1)
  {
    sub_1D7A9C3E8();
    sub_1D7A9D268();
    swift_allocObject();
    uint64_t v17 = sub_1D7A9C348();
    *uint64_t v18 = a2;
    sub_1D7A9C3E8();
    swift_bridgeObjectRetain();
  }
  else
  {
    v20[7] = 0;
    uint64_t v21 = MEMORY[0x1D947B130](a2, a3);
    uint64_t v22 = a1;
    MEMORY[0x1F4188790](v21, v6, v7, v8, v9, v10, v11, v12);
    v20[2] = a3;
    v20[3] = a2;
    v20[4] = a1;
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA846998);
    uint64_t v14 = (char *)sub_1D7A9C3E8();
    uint64_t v15 = sub_1D7871DDC(&qword_1EA8469A0, &qword_1EA846998);
    return sub_1D79F76E8((void (*)(char *, char *))sub_1D79F8624, (uint64_t)v20, v13, v14, MEMORY[0x1E4FBC248], v15, MEMORY[0x1E4FBC278], v16);
  }
  return v17;
}

uint64_t *sub_1D79F7614@<X0>(uint64_t *result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t **a5@<X8>)
{
  uint64_t v5 = *result;
  uint64_t v6 = *result + a3;
  if (__OFADD__(*result, a3))
  {
    __break(1u);
  }
  else
  {
    Swift::String_optional result = (uint64_t *)MEMORY[0x1D947B130](a2, a4);
    if ((uint64_t)result >= v6) {
      uint64_t v8 = (void *)v6;
    }
    else {
      uint64_t v8 = result;
    }
    if ((uint64_t)v8 >= v5)
    {
      sub_1D7A9C408();
      sub_1D7A9CB28();
      swift_getWitnessTable();
      Swift::String_optional result = (uint64_t *)sub_1D7A9C3F8();
      *a5 = result;
      return result;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1D79F76E8(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v99 = a8;
  uint64_t v100 = a5;
  uint64_t v9 = v8;
  uint64_t v114 = a2;
  uint64_t v115 = a4;
  uint64_t v113 = a1;
  uint64_t v98 = *(void *)(a5 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](a1, a2, a3, a4, a5, a6, a7, a8);
  uint64_t v111 = (char *)&v96 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11, v13, v14, v15, v16, v17, v18, v19);
  uint64_t v109 = (char *)&v96 - v20;
  uint64_t v22 = v21;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v110 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness, v24, v25, v26, v27, v28, v29, v30);
  uint64_t v97 = (char *)&v96 - v31;
  uint64_t v32 = sub_1D7A9C9A8();
  uint64_t v101 = *(void *)(v32 - 8);
  uint64_t v102 = v32;
  uint64_t v40 = MEMORY[0x1F4188790](v32, v33, v34, v35, v36, v37, v38, v39);
  uint64_t v107 = (char *)&v96 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = MEMORY[0x1F4188790](v40, v42, v43, v44, v45, v46, v47, v48);
  uint64_t v51 = (char *)&v96 - v50;
  uint64_t v59 = MEMORY[0x1F4188790](v49, v52, v53, v54, v55, v56, v57, v58);
  uint64_t v96 = (char *)&v96 - ((v60 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = MEMORY[0x1F4188790](v59, v61, v62, v63, v64, v65, v66, v67);
  uint64_t v106 = *((void *)v22 - 1);
  MEMORY[0x1F4188790](v68, v69, v70, v71, v72, v73, v74, v75);
  uint64_t v77 = (char *)&v96 - ((v76 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v105 = a6;
  uint64_t v108 = v22;
  uint64_t v116 = swift_getAssociatedTypeWitness();
  uint64_t v103 = *(void *)(v116 - 8);
  MEMORY[0x1F4188790](v116, v78, v79, v80, v81, v82, v83, v84);
  uint64_t v86 = (char *)&v96 - v85;
  uint64_t v87 = sub_1D7A9C208();
  uint64_t v117 = sub_1D7A9BE88();
  uint64_t v112 = sub_1D7A9CE18();
  sub_1D7A9CDB8();
  (*(void (**)(char *, uint64_t, void))(v106 + 16))(v77, v104, v108);
  uint64_t v115 = v86;
  uint64_t result = sub_1D7A9C1F8();
  if (v87 < 0)
  {
    __break(1u);
LABEL_18:
    __break(1u);
    return result;
  }
  if (v87)
  {
    uint64_t v89 = (uint64_t (**)(char *, uint64_t, uint64_t))(v110 + 48);
    uint64_t v90 = (uint64_t (**)(char *, uint64_t))(v110 + 8);
    swift_getAssociatedConformanceWitness();
    while (1)
    {
      sub_1D7A9C9C8();
      uint64_t result = (*v89)(v51, 1, AssociatedTypeWitness);
      if (result == 1) {
        goto LABEL_18;
      }
      v113(v51, v111);
      if (v9)
      {
        (*(void (**)(char *, uint64_t))(v103 + 8))(v115, v116);
        swift_release();
        (*(void (**)(uint64_t, char *, uint64_t))(v98 + 32))(v99, v111, v100);
        return (*v90)(v51, AssociatedTypeWitness);
      }
      uint64_t v9 = 0;
      (*v90)(v51, AssociatedTypeWitness);
      sub_1D7A9CDF8();
      if (!--v87)
      {
        uint64_t v91 = v110;
        long long v92 = v107;
        goto LABEL_9;
      }
    }
  }
  swift_getAssociatedConformanceWitness();
  uint64_t v91 = v110;
  long long v92 = v107;
LABEL_9:
  sub_1D7A9C9C8();
  uint64_t v111 = *(char **)(v91 + 48);
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v111)(v92, 1, AssociatedTypeWitness) == 1)
  {
    uint64_t v93 = v107;
LABEL_14:
    (*(void (**)(char *, uint64_t))(v103 + 8))(v115, v116);
    (*(void (**)(char *, uint64_t))(v101 + 8))(v93, v102);
    return v117;
  }
  else
  {
    uint64_t v108 = *(void (**)(char *, char *, uint64_t))(v91 + 32);
    uint64_t v110 = v91 + 32;
    uint64_t v94 = (void (**)(char *, uint64_t))(v91 + 8);
    uint64_t v95 = v97;
    uint64_t v93 = v107;
    while (1)
    {
      v108(v95, v93, AssociatedTypeWitness);
      v113(v95, v109);
      if (v9) {
        break;
      }
      uint64_t v9 = 0;
      (*v94)(v95, AssociatedTypeWitness);
      sub_1D7A9CDF8();
      sub_1D7A9C9C8();
      if (((unsigned int (*)(char *, uint64_t, uint64_t))v111)(v93, 1, AssociatedTypeWitness) == 1) {
        goto LABEL_14;
      }
    }
    (*v94)(v95, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v103 + 8))(v115, v116);
    swift_release();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v98 + 32))(v99, v109, v100);
  }
}

Swift::Bool __swiftcall NSError.userInfoBool(for:)(Swift::String a1)
{
  object = a1._object;
  uint64_t countAndFlagsBits = a1._countAndFlagsBits;
  id v4 = objc_msgSend(v1, sel_userInfo);
  uint64_t v5 = sub_1D7A9BEB8();

  if (!*(void *)(v5 + 16))
  {
    long long v11 = 0u;
    long long v12 = 0u;
LABEL_8:
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_1D7A18684(countAndFlagsBits, (uint64_t)object);
  if ((v7 & 1) == 0)
  {
    long long v11 = 0u;
    long long v12 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  sub_1D78907D8(*(void *)(v5 + 56) + 32 * v6, (uint64_t)&v11);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*((void *)&v12 + 1))
  {
LABEL_9:
    sub_1D7871C4C((uint64_t)&v11, (uint64_t *)&unk_1EBDF9680);
    LOBYTE(v8) = 0;
    return v8;
  }
  int v8 = swift_dynamicCast();
  if (v8) {
    LOBYTE(v8) = v10;
  }
  return v8;
}

Swift::Bool __swiftcall Error.userInfoBool(for:)(Swift::String a1)
{
  uint64_t v2 = v1;
  object = a1._object;
  uint64_t countAndFlagsBits = a1._countAndFlagsBits;
  uint64_t v5 = *(void *)(v1 - 8);
  ((void (*)(uint64_t, void *))MEMORY[0x1F4188790])(a1._countAndFlagsBits, a1._object);
  char v7 = &v19[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(unsigned char *, uint64_t))(v5 + 16))(v7, v8);
  uint64_t v9 = sub_1D7A9D318();
  if (v9)
  {
    char v10 = (void *)v9;
    (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v2);
  }
  else
  {
    char v10 = (void *)swift_allocError();
    (*(void (**)(uint64_t, unsigned char *, uint64_t))(v5 + 32))(v11, v7, v2);
  }
  long long v12 = (void *)sub_1D7A9AE48();

  id v13 = objc_msgSend(v12, sel_userInfo);
  uint64_t v14 = sub_1D7A9BEB8();

  if (*(void *)(v14 + 16))
  {
    swift_bridgeObjectRetain();
    uint64_t v15 = sub_1D7A18684(countAndFlagsBits, (uint64_t)object);
    if (v16)
    {
      sub_1D78907D8(*(void *)(v14 + 56) + 32 * v15, (uint64_t)&v20);
    }
    else
    {
      long long v20 = 0u;
      long long v21 = 0u;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    long long v20 = 0u;
    long long v21 = 0u;
  }
  swift_bridgeObjectRelease();
  if (*((void *)&v21 + 1))
  {
    int v17 = swift_dynamicCast();
    if (v17) {
      LOBYTE(v17) = v19[15];
    }
  }
  else
  {
    sub_1D7871C4C((uint64_t)&v20, (uint64_t *)&unk_1EBDF9680);
    LOBYTE(v17) = 0;
  }
  return v17;
}

unint64_t sub_1D79F814C(unint64_t result)
{
  if (result)
  {
    unint64_t v1 = result;
    unint64_t v3 = 0;
    MEMORY[0x1D947D760](&v3, 8);
    uint64_t result = (v3 * (unsigned __int128)v1) >> 64;
    if (v3 * v1 < v1)
    {
      unint64_t v2 = -(uint64_t)v1 % v1;
      if (v2 > v3 * v1)
      {
        do
        {
          unint64_t v3 = 0;
          MEMORY[0x1D947D760](&v3, 8);
        }
        while (v2 > v3 * v1);
        return (v3 * (unsigned __int128)v1) >> 64;
      }
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1D79F81D8(uint64_t a1)
{
  if ((a1 & 0xC000000000000001) != 0) {
    return sub_1D7A9CEC8();
  }
  unint64_t v2 = *(void *)(a1 + 64);
  if (v2)
  {
    uint64_t v3 = 0;
    return __clz(__rbit64(v2)) + v3;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v1 = 1 << v5;
  if (v6 < 7) {
    return v1;
  }
  unint64_t v2 = *(void *)(a1 + 72);
  if (v2)
  {
    uint64_t v3 = 64;
    return __clz(__rbit64(v2)) + v3;
  }
  unint64_t v7 = (unint64_t)(v1 + 63) >> 6;
  if (v7 <= 2) {
    unint64_t v7 = 2;
  }
  unint64_t v8 = v7 - 2;
  uint64_t v9 = (unint64_t *)(a1 + 80);
  uint64_t v3 = 64;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v2 = v10;
    --v8;
    v3 += 64;
    if (v10) {
      return __clz(__rbit64(v2)) + v3;
    }
  }
  return v1;
}

uint64_t sub_1D79F829C(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2) {
    unint64_t v7 = 2;
  }
  unint64_t v8 = v7 - 2;
  uint64_t v9 = (unint64_t *)(a1 + 80);
  uint64_t v2 = 64;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

void sub_1D79F8324(void *a1, uint64_t a2, int a3, char a4, uint64_t a5)
{
  unint64_t v6 = a2;
  if ((a5 & 0xC000000000000001) != 0)
  {
    if (a4)
    {
      sub_1D7A9CF48();
      sub_1D78C4038(0, (unint64_t *)&qword_1EA8421A0);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      swift_unknownObjectRelease();
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v13;
      swift_unknownObjectRelease();
      return;
    }
    goto LABEL_18;
  }
  if (a4)
  {
LABEL_10:
    if (sub_1D7A9CF08() == *(_DWORD *)(a5 + 36))
    {
      sub_1D7A9CF18();
      sub_1D78C4038(0, (unint64_t *)&qword_1EA8421A0);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      swift_unknownObjectRelease();
      unint64_t v6 = sub_1D7A18F28((uint64_t)v13);
      char v9 = v8;

      if (v9) {
        goto LABEL_12;
      }
LABEL_17:
      __break(1u);
LABEL_18:
      __break(1u);
      return;
    }
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (a2 < 0 || 1 << *(unsigned char *)(a5 + 32) <= a2)
  {
    __break(1u);
    goto LABEL_15;
  }
  if (((*(void *)(a5 + 8 * ((unint64_t)a2 >> 6) + 64) >> a2) & 1) == 0)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (*(_DWORD *)(a5 + 36) != a3)
  {
    __break(1u);
    goto LABEL_10;
  }
LABEL_12:
  unint64_t v10 = *(void **)(*(void *)(a5 + 48) + 8 * v6);
  uint64_t v11 = *(void **)(*(void *)(a5 + 56) + 8 * v6);
  *a1 = v11;
  v10;
  id v12 = v11;
}

id sub_1D79F8534(id result, uint64_t a2, int a3, uint64_t a4, uint64_t a5)
{
  if (a2 < 0 || 1 << *(unsigned char *)(a5 + 32) <= a2)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (((*(void *)(a5 + 8 * ((unint64_t)a2 >> 6) + 64) >> a2) & 1) == 0)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if (*(_DWORD *)(a5 + 36) != a3)
  {
LABEL_10:
    __break(1u);
    return result;
  }
  id v5 = *(id *)(*(void *)(a5 + 48) + 8 * a2);
  sub_1D78907D8(*(void *)(a5 + 56) + 32 * a2, (uint64_t)result);
  return v5;
}

uint64_t sub_1D79F85C4(uint64_t a1)
{
  return sub_1D79F247C(a1, *(void *)(v1 + 16));
}

unint64_t sub_1D79F85CC()
{
  unint64_t result = qword_1EA846978;
  if (!qword_1EA846978)
  {
    sub_1D7A9B148();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA846978);
  }
  return result;
}

uint64_t *sub_1D79F8624@<X0>(uint64_t *a1@<X0>, uint64_t **a2@<X8>)
{
  return sub_1D79F7614(a1, v2[3], v2[4], v2[2], a2);
}

uint64_t dispatch thunk of NSXPCConnectionProtocol.debugDescription.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of NSXPCConnectionProtocol.isEntitled(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t sub_1D79F8670()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA8469B0);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x1F4186498](v0, v5, v6);
}

uint64_t sub_1D79F8704()
{
  return sub_1D7A9C458();
}

uint64_t block_copy_helper_11(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_11()
{
  return swift_release();
}

uint64_t dispatch thunk of static DateProvider.now.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

void sub_1D79F879C()
{
  uint64_t v0 = (void *)MEMORY[0x1D947CCE0]();
  sub_1D79F8980(&v1);
  qword_1EBDF7840 = v1;
}

uint64_t static DIPFeatures.sharedInstance.getter()
{
  if (qword_1EBDF7A60 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return swift_unknownObjectRetain();
}

uint64_t static DIPFeatures.sharedInstance.setter(uint64_t a1)
{
  if (qword_1EBDF7A60 != -1) {
    swift_once();
  }
  swift_beginAccess();
  qword_1EBDF7840 = a1;
  return swift_unknownObjectRelease();
}

uint64_t (*static DIPFeatures.sharedInstance.modify())()
{
  if (qword_1EBDF7A60 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j__swift_endAccess;
}

ValueMetadata *type metadata accessor for DIPFeatures()
{
  return &type metadata for DIPFeatures;
}

void sub_1D79F8980(uint64_t *a1@<X8>)
{
  uint64_t v3 = sub_1D7A9B5F8();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v3, v5, v6, v7, v8, v9, v10, v11);
  uint64_t v14 = (char *)&v100 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = MEMORY[0x1F4188790](v12, v15, v16, v17, v18, v19, v20, v21);
  uint64_t v30 = MEMORY[0x1F4188790](v22, v23, v24, v25, v26, v27, v28, v29);
  uint64_t v32 = (char *)&v100 - v31;
  uint64_t v40 = MEMORY[0x1F4188790](v30, v33, v34, v35, v36, v37, v38, v39);
  uint64_t v42 = (char *)&v100 - v41;
  uint64_t v50 = MEMORY[0x1F4188790](v40, v43, v44, v45, v46, v47, v48, v49);
  uint64_t v52 = (char *)&v100 - v51;
  MEMORY[0x1F4188790](v50, v53, v54, v55, v56, v57, v58, v59);
  uint64_t v62 = (char *)&v100 - v61;
  if (qword_1EBDF8C58 != -1)
  {
    uint64_t v106 = v60;
    swift_once();
    uint64_t v60 = v106;
  }
  if (qword_1EBDF8C48)
  {
    uint64_t v106 = v60;
    id v63 = (id)qword_1EBDF8C48;
    if (objc_msgSend(v63, sel_load))
    {
      uint64_t v105 = a1;
      uint64_t v103 = v1;
      if (qword_1EBDF9DC8 != -1) {
        swift_once();
      }
      id v107 = v63;
      uint64_t v64 = __swift_project_value_buffer(v3, (uint64_t)qword_1EBDFBE70);
      swift_beginAccess();
      uint64_t v101 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
      uint64_t v102 = v64;
      v101(v52, v64, v3);
      uint64_t v65 = sub_1D7A9B5D8();
      os_log_type_t v66 = sub_1D7A9C778();
      if (os_log_type_enabled(v65, v66))
      {
        uint64_t v67 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v67 = 0;
        _os_log_impl(&dword_1D7853000, v65, v66, "successfully loaded Settings Bundle from Preferences", v67, 2u);
        MEMORY[0x1D947D740](v67, -1, -1);
      }

      uint64_t v68 = *(void (**)(char *, uint64_t))(v4 + 8);
      uint64_t v104 = v4 + 8;
      v68(v52, v3);
      uint64_t v69 = (void *)sub_1D7A9BF98();
      id v70 = objc_msgSend(v107, sel_classNamed_, v69);

      a1 = v105;
      if (v70)
      {
        swift_getObjCClassMetadata();
        sub_1D79F9214();
        if (swift_dynamicCastMetatype())
        {
          id v71 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
          uint64_t v109 = &unk_1F2F368D0;
          uint64_t v72 = swift_dynamicCastObjCProtocolConditional();
          if (v72)
          {
            v101(v106, v102, v3);
            uint64_t v73 = sub_1D7A9B5D8();
            os_log_type_t v74 = sub_1D7A9C778();
            if (os_log_type_enabled(v73, v74))
            {
              uint64_t v75 = (uint8_t *)swift_slowAlloc();
              uint64_t v76 = (void *)swift_slowAlloc();
              *(_DWORD *)uint64_t v75 = 138543362;
              if (qword_1EBDF9690 != -1) {
                swift_once();
              }
              id v77 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithBool_, byte_1EBDFBE68);
              id v108 = v77;
              sub_1D7A9C9E8();
              *uint64_t v76 = v77;
              _os_log_impl(&dword_1D7853000, v73, v74, "Features uint64_t i = %{public}@", v75, 0xCu);
              __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDF8C60);
              swift_arrayDestroy();
              MEMORY[0x1D947D740](v76, -1, -1);
              MEMORY[0x1D947D740](v75, -1, -1);
              a1 = v105;
            }

            v68(v106, v3);
          }
          else
          {
          }
          goto LABEL_34;
        }
        v101(v32, v102, v3);
        uint64_t v96 = sub_1D7A9B5D8();
        os_log_type_t v97 = sub_1D7A9C778();
        if (os_log_type_enabled(v96, v97))
        {
          uint64_t v98 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v98 = 0;
          _os_log_impl(&dword_1D7853000, v96, v97, "Unable to instantiate class for Features", v98, 2u);
          uint64_t v99 = v98;
          a1 = v105;
          MEMORY[0x1D947D740](v99, -1, -1);
        }

        v68(v32, v3);
      }
      else
      {
        v101(v42, v102, v3);
        long long v92 = sub_1D7A9B5D8();
        os_log_type_t v93 = sub_1D7A9C738();
        if (os_log_type_enabled(v92, v93))
        {
          uint64_t v94 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v94 = 0;
          _os_log_impl(&dword_1D7853000, v92, v93, "could not find class for Features", v94, 2u);
          uint64_t v95 = v94;
          a1 = v105;
          MEMORY[0x1D947D740](v95, -1, -1);
        }

        v68(v42, v3);
      }
      uint64_t v72 = 0;
      goto LABEL_34;
    }
    if (qword_1EBDF9DC8 != -1) {
      swift_once();
    }
    uint64_t v84 = __swift_project_value_buffer(v3, (uint64_t)qword_1EBDFBE70);
    swift_beginAccess();
    uint64_t v85 = v4;
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v14, v84, v3);
    uint64_t v86 = sub_1D7A9B5D8();
    os_log_type_t v87 = sub_1D7A9C778();
    if (os_log_type_enabled(v86, v87))
    {
      id v88 = v63;
      uint64_t v89 = a1;
      uint64_t v90 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v90 = 0;
      _os_log_impl(&dword_1D7853000, v86, v87, "failed loading Features", v90, 2u);
      uint64_t v91 = v90;
      a1 = v89;
      id v63 = v88;
      MEMORY[0x1D947D740](v91, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v85 + 8))(v14, v3);
    uint64_t v72 = 0;
  }
  else
  {
    if (qword_1EBDF9DC8 != -1) {
      swift_once();
    }
    uint64_t v78 = __swift_project_value_buffer(v3, (uint64_t)qword_1EBDFBE70);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v62, v78, v3);
    uint64_t v79 = sub_1D7A9B5D8();
    os_log_type_t v80 = sub_1D7A9C778();
    if (os_log_type_enabled(v79, v80))
    {
      uint64_t v81 = a1;
      uint64_t v82 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v82 = 0;
      _os_log_impl(&dword_1D7853000, v79, v80, "no settings bundle created", v82, 2u);
      uint64_t v83 = v82;
      a1 = v81;
      MEMORY[0x1D947D740](v83, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v4 + 8))(v62, v3);
    uint64_t v72 = 0;
  }
LABEL_34:
  *a1 = v72;
}

unint64_t sub_1D79F9214()
{
  unint64_t result = qword_1EBDF7920;
  if (!qword_1EBDF7920)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBDF7920);
  }
  return result;
}

uint64_t *ISO18013DeviceAuthentication.sessionTranscript.getter@<X0>(_OWORD *a1@<X8>)
{
  long long v3 = v1[5];
  long long v13 = v1[4];
  long long v2 = v13;
  long long v14 = v3;
  long long v5 = v1[7];
  long long v15 = v1[6];
  long long v4 = v15;
  long long v16 = v5;
  long long v6 = v1[1];
  v10[0] = *v1;
  v10[1] = v6;
  long long v8 = v1[3];
  long long v11 = v1[2];
  long long v7 = v11;
  long long v12 = v8;
  *a1 = v10[0];
  a1[1] = v6;
  a1[2] = v7;
  a1[3] = v8;
  a1[4] = v2;
  a1[5] = v3;
  a1[6] = v4;
  a1[7] = v5;
  return sub_1D79F98E0((uint64_t *)v10, (void (*)(void))sub_1D7860790, (void (*)(uint64_t, uint64_t))sub_1D786E9D8, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1D79AA0A8, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1D79AA11C);
}

uint64_t ISO18013DeviceAuthentication.docType.getter()
{
  uint64_t v1 = *(void *)(v0 + 128);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ISO18013DeviceAuthentication.deviceNamespaceBytes.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[19];
  unint64_t v3 = v1[20];
  uint64_t v4 = v1[21];
  *a1 = v1[18];
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  sub_1D7860790(v2, v3);
  return swift_bridgeObjectRetain();
}

__n128 ISO18013DeviceAuthentication.init(sessionTranscript:docType:deviceNamespaceBytes:)@<Q0>(_OWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, __n128 *a4@<X3>, uint64_t a5@<X8>)
{
  long long v5 = a1[5];
  *(_OWORD *)(a5 + 64) = a1[4];
  *(_OWORD *)(a5 + 80) = v5;
  long long v6 = a1[7];
  *(_OWORD *)(a5 + 96) = a1[6];
  *(_OWORD *)(a5 + 112) = v6;
  long long v7 = a1[1];
  *(_OWORD *)a5 = *a1;
  *(_OWORD *)(a5 + 16) = v7;
  long long v8 = a1[3];
  *(_OWORD *)(a5 + 32) = a1[2];
  *(_OWORD *)(a5 + 48) = v8;
  unint64_t v9 = a4[1].n128_u64[0];
  unint64_t v10 = a4[1].n128_u64[1];
  *(void *)(a5 + 128) = a2;
  *(void *)(a5 + 136) = a3;
  __n128 result = *a4;
  *(__n128 *)(a5 + 144) = *a4;
  *(void *)(a5 + 160) = v9;
  *(void *)(a5 + 168) = v10;
  return result;
}

uint64_t *ISO18013DeviceAuthentication.init(from:)@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D7A9D678();
  if (v2) {
    return (uint64_t *)__swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v51, v52);
  sub_1D7A9D2A8();
  swift_bridgeObjectRelease();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v51, v52);
  sub_1D79F988C();
  sub_1D7A9D2B8();
  long long v39 = v47;
  long long v40 = v48;
  long long v41 = v49;
  long long v42 = v50;
  long long v35 = v43;
  long long v36 = v44;
  long long v37 = v45;
  long long v38 = v46;
  long long v53 = v43;
  long long v54 = v44;
  long long v55 = v45;
  long long v56 = v46;
  long long v59 = v49;
  long long v60 = v50;
  long long v57 = v47;
  long long v58 = v48;
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v51, v52);
  sub_1D79F98E0((uint64_t *)&v35, (void (*)(void))sub_1D7860790, (void (*)(uint64_t, uint64_t))sub_1D786E9D8, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1D79AA0A8, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1D79AA11C);
  uint64_t v5 = sub_1D7A9D2A8();
  uint64_t v7 = v6;
  uint64_t v8 = v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA845838);
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v51, v52);
  sub_1D79F9EE4(&qword_1EA845840);
  swift_bridgeObjectRetain();
  sub_1D7A9D2B8();
  long long v9 = v33;
  long long v10 = v34;
  sub_1D7860790(*((uint64_t *)&v33 + 1), v34);
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v51);
  long long v21 = v39;
  long long v22 = v40;
  long long v23 = v41;
  long long v24 = v42;
  long long v17 = v35;
  long long v18 = v36;
  long long v19 = v37;
  long long v20 = v38;
  *(void *)&long long v25 = v8;
  *((void *)&v25 + 1) = v7;
  long long v26 = v33;
  long long v27 = v34;
  sub_1D79F9AAC((uint64_t *)&v17);
  sub_1D78607E8(*((uint64_t *)&v9 + 1), v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1D79F98E0((uint64_t *)&v35, (void (*)(void))sub_1D78607E8, (void (*)(uint64_t, uint64_t))sub_1D7871BDC, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1D79AC044, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1D79F9A44);
  long long v11 = v26;
  a2[8] = v25;
  a2[9] = v11;
  a2[10] = v27;
  long long v12 = v22;
  a2[4] = v21;
  a2[5] = v12;
  long long v13 = v24;
  a2[6] = v23;
  a2[7] = v13;
  long long v14 = v18;
  *a2 = v17;
  a2[1] = v14;
  long long v15 = v20;
  a2[2] = v19;
  a2[3] = v15;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v28[4] = v57;
  v28[5] = v58;
  v28[6] = v59;
  v28[7] = v60;
  v28[0] = v53;
  v28[1] = v54;
  void v28[2] = v55;
  v28[3] = v56;
  uint64_t v29 = v8;
  uint64_t v30 = v7;
  long long v31 = v9;
  long long v32 = v10;
  return sub_1D79F9BB0((uint64_t *)v28);
}

unint64_t sub_1D79F988C()
{
  unint64_t result = qword_1EA846A20;
  if (!qword_1EA846A20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA846A20);
  }
  return result;
}

uint64_t *sub_1D79F98E0(uint64_t *a1, void (*a2)(void), void (*a3)(uint64_t, uint64_t), void (*a4)(uint64_t, uint64_t, uint64_t, uint64_t), void (*a5)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v7 = a1[8];
  uint64_t v8 = a1[9];
  uint64_t v9 = a1[10];
  uint64_t v10 = a1[11];
  uint64_t v11 = a1[12];
  uint64_t v12 = a1[13];
  uint64_t v13 = a1[14];
  uint64_t v14 = a1[15];
  sub_1D79F9994(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a2, a3, a4);
  a5(v7, v8, v9, v10, v11, v12, v13, v14);
  return a1;
}

void sub_1D79F9994(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void (*a9)(void), void (*a10)(uint64_t, uint64_t), void (*a11)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  if (a2 >> 60 != 15)
  {
    a9();
    a10(a3, a4);
    a11(a5, a6, a7, a8);
  }
}

uint64_t sub_1D79F9A44(uint64_t result, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unint64_t a8)
{
  if (a4)
  {
    sub_1D78607E8(result, a2);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return sub_1D78607E8(a7, a8);
  }
  return result;
}

uint64_t *sub_1D79F9AAC(uint64_t *a1)
{
  uint64_t v2 = a1[8];
  unint64_t v3 = a1[9];
  uint64_t v4 = a1[10];
  uint64_t v5 = a1[11];
  uint64_t v6 = a1[12];
  uint64_t v7 = a1[13];
  uint64_t v8 = a1[14];
  unint64_t v9 = a1[15];
  unint64_t v11 = a1[20];
  uint64_t v12 = a1[19];
  sub_1D79F9994(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], (void (*)(void))sub_1D7860790, (void (*)(uint64_t, uint64_t))sub_1D786E9D8, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1D79AA0A8);
  sub_1D79AA11C(v2, v3, v4, v5, v6, v7, v8, v9);
  swift_bridgeObjectRetain();
  sub_1D7860790(v12, v11);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t *sub_1D79F9BB0(uint64_t *a1)
{
  uint64_t v2 = a1[8];
  unint64_t v3 = a1[9];
  uint64_t v4 = a1[10];
  uint64_t v5 = a1[11];
  uint64_t v6 = a1[12];
  uint64_t v7 = a1[13];
  uint64_t v8 = a1[14];
  unint64_t v9 = a1[15];
  unint64_t v11 = a1[20];
  uint64_t v12 = a1[19];
  sub_1D79F9994(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], (void (*)(void))sub_1D78607E8, (void (*)(uint64_t, uint64_t))sub_1D7871BDC, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1D79AC044);
  sub_1D79F9A44(v2, v3, v4, v5, v6, v7, v8, v9);
  swift_bridgeObjectRelease();
  sub_1D78607E8(v12, v11);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t ISO18013DeviceAuthentication.encode(to:)(void *a1)
{
  uint64_t v6 = *(void *)(v1 + 160);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D7A9D6C8();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v4, v5);
  sub_1D7A9D2E8();
  if (!v2)
  {
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v4, v5);
    sub_1D79F9E90();
    sub_1D7A9D2F8();
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v4, v5);
    sub_1D7A9D2E8();
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v4, v5);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA845838);
    sub_1D79F9EE4(&qword_1EA845858);
    sub_1D7A9D2F8();
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v4);
}

unint64_t sub_1D79F9E90()
{
  unint64_t result = qword_1EA846A28[0];
  if (!qword_1EA846A28[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EA846A28);
  }
  return result;
}

uint64_t sub_1D79F9EE4(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA845838);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *sub_1D79F9F2C@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  return ISO18013DeviceAuthentication.init(from:)(a1, a2);
}

uint64_t sub_1D79F9F44(void *a1)
{
  return ISO18013DeviceAuthentication.encode(to:)(a1);
}

uint64_t destroy for ISO18013DeviceAuthentication(uint64_t *a1)
{
  unint64_t v2 = a1[1];
  if (v2 >> 60 != 15)
  {
    sub_1D78607E8(*a1, v2);
    unint64_t v3 = a1[3];
    if (v3 >> 60 != 15) {
      sub_1D78607E8(a1[2], v3);
    }
    unint64_t v4 = a1[5];
    if (v4 >> 60 != 15)
    {
      sub_1D78607E8(a1[4], v4);
      unint64_t v5 = a1[7];
      if (v5 >> 60 != 15) {
        sub_1D78607E8(a1[6], v5);
      }
    }
  }
  if (a1[11])
  {
    sub_1D78607E8(a1[8], a1[9]);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1D78607E8(a1[14], a1[15]);
  }
  swift_bridgeObjectRelease();
  sub_1D78607E8(a1[19], a1[20]);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ISO18013DeviceAuthentication(uint64_t a1, uint64_t *a2)
{
  unint64_t v4 = a2[1];
  if (v4 >> 60 == 15)
  {
    long long v5 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
    long long v6 = *((_OWORD *)a2 + 3);
    *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
    *(_OWORD *)(a1 + 48) = v6;
    uint64_t v7 = a2[11];
    if (!v7) {
      goto LABEL_14;
    }
  }
  else
  {
    uint64_t v8 = *a2;
    sub_1D7860790(*a2, a2[1]);
    *(void *)a1 = v8;
    *(void *)(a1 + 8) = v4;
    unint64_t v9 = a2 + 2;
    unint64_t v10 = a2[3];
    if (v10 >> 60 == 15)
    {
      *(_OWORD *)(a1 + 16) = *(_OWORD *)v9;
    }
    else
    {
      uint64_t v11 = *v9;
      sub_1D7860790(*v9, a2[3]);
      *(void *)(a1 + 16) = v11;
      *(void *)(a1 + 24) = v10;
    }
    unint64_t v12 = a2[5];
    if (v12 >> 60 != 15)
    {
      uint64_t v14 = a2[4];
      sub_1D7860790(v14, a2[5]);
      *(void *)(a1 + 32) = v14;
      *(void *)(a1 + 40) = v12;
      long long v15 = a2 + 6;
      unint64_t v16 = a2[7];
      if (v16 >> 60 == 15)
      {
        *(_OWORD *)(a1 + 48) = *(_OWORD *)v15;
        uint64_t v7 = a2[11];
        if (v7) {
          goto LABEL_12;
        }
      }
      else
      {
        uint64_t v22 = *v15;
        sub_1D7860790(*v15, a2[7]);
        *(void *)(a1 + 48) = v22;
        *(void *)(a1 + 56) = v16;
        uint64_t v7 = a2[11];
        if (v7) {
          goto LABEL_12;
        }
      }
LABEL_14:
      long long v23 = *((_OWORD *)a2 + 5);
      *(_OWORD *)(a1 + 64) = *((_OWORD *)a2 + 4);
      *(_OWORD *)(a1 + 80) = v23;
      long long v24 = *((_OWORD *)a2 + 7);
      *(_OWORD *)(a1 + 96) = *((_OWORD *)a2 + 6);
      *(_OWORD *)(a1 + 112) = v24;
      goto LABEL_15;
    }
    long long v13 = *((_OWORD *)a2 + 3);
    *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
    *(_OWORD *)(a1 + 48) = v13;
    uint64_t v7 = a2[11];
    if (!v7) {
      goto LABEL_14;
    }
  }
LABEL_12:
  uint64_t v17 = a2[8];
  unint64_t v18 = a2[9];
  sub_1D7860790(v17, v18);
  *(void *)(a1 + 64) = v17;
  *(void *)(a1 + 72) = v18;
  *(void *)(a1 + 80) = a2[10];
  *(void *)(a1 + 88) = v7;
  uint64_t v19 = a2[13];
  *(void *)(a1 + 96) = a2[12];
  *(void *)(a1 + 104) = v19;
  uint64_t v20 = a2[14];
  unint64_t v21 = a2[15];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1D7860790(v20, v21);
  *(void *)(a1 + 112) = v20;
  *(void *)(a1 + 120) = v21;
LABEL_15:
  uint64_t v25 = a2[17];
  *(void *)(a1 + 128) = a2[16];
  *(void *)(a1 + 136) = v25;
  uint64_t v26 = a2[19];
  *(void *)(a1 + 144) = a2[18];
  unint64_t v27 = a2[20];
  swift_bridgeObjectRetain();
  sub_1D7860790(v26, v27);
  *(void *)(a1 + 152) = v26;
  *(void *)(a1 + 160) = v27;
  *(void *)(a1 + 168) = a2[21];
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ISO18013DeviceAuthentication(uint64_t a1, long long *a2)
{
  unint64_t v4 = *((void *)a2 + 1);
  if (*(void *)(a1 + 8) >> 60 == 15)
  {
    if (v4 >> 60 == 15)
    {
      long long v5 = *a2;
      long long v6 = a2[1];
      long long v7 = a2[3];
      *(_OWORD *)(a1 + 32) = a2[2];
      *(_OWORD *)(a1 + 48) = v7;
      *(_OWORD *)a1 = v5;
      *(_OWORD *)(a1 + 16) = v6;
      goto LABEL_34;
    }
    uint64_t v11 = *(void *)a2;
    sub_1D7860790(*(void *)a2, *((void *)a2 + 1));
    *(void *)a1 = v11;
    *(void *)(a1 + 8) = v4;
    unint64_t v12 = (uint64_t *)(a2 + 1);
    unint64_t v13 = *((void *)a2 + 3);
    if (v13 >> 60 == 15)
    {
      *(_OWORD *)(a1 + 16) = *(_OWORD *)v12;
    }
    else
    {
      uint64_t v20 = *v12;
      sub_1D7860790(*v12, *((void *)a2 + 3));
      *(void *)(a1 + 16) = v20;
      *(void *)(a1 + 24) = v13;
    }
    unint64_t v21 = *((void *)a2 + 5);
    if (v21 >> 60 == 15)
    {
      long long v22 = a2[3];
      *(_OWORD *)(a1 + 32) = a2[2];
      *(_OWORD *)(a1 + 48) = v22;
      goto LABEL_34;
    }
LABEL_21:
    uint64_t v29 = *((void *)a2 + 4);
    sub_1D7860790(v29, v21);
    *(void *)(a1 + 32) = v29;
    *(void *)(a1 + 40) = v21;
    uint64_t v30 = a2 + 3;
    unint64_t v31 = *((void *)a2 + 7);
    if (v31 >> 60 == 15)
    {
      *(_OWORD *)(a1 + 48) = *v30;
      goto LABEL_34;
    }
    uint64_t v33 = *(void *)v30;
    goto LABEL_26;
  }
  if (v4 >> 60 == 15)
  {
    sub_1D79AC84C((uint64_t *)a1);
    long long v8 = a2[3];
    long long v10 = *a2;
    long long v9 = a2[1];
    *(_OWORD *)(a1 + 32) = a2[2];
    *(_OWORD *)(a1 + 48) = v8;
    *(_OWORD *)a1 = v10;
    *(_OWORD *)(a1 + 16) = v9;
    goto LABEL_34;
  }
  uint64_t v14 = *(void *)a2;
  sub_1D7860790(*(void *)a2, *((void *)a2 + 1));
  uint64_t v15 = *(void *)a1;
  unint64_t v16 = *(void *)(a1 + 8);
  *(void *)a1 = v14;
  *(void *)(a1 + 8) = v4;
  sub_1D78607E8(v15, v16);
  uint64_t v17 = (uint64_t *)(a2 + 1);
  unint64_t v18 = *((void *)a2 + 3);
  if (*(void *)(a1 + 24) >> 60 == 15)
  {
    if (v18 >> 60 != 15)
    {
      uint64_t v19 = *v17;
      sub_1D7860790(*v17, *((void *)a2 + 3));
      *(void *)(a1 + 16) = v19;
      *(void *)(a1 + 24) = v18;
      goto LABEL_18;
    }
    goto LABEL_16;
  }
  if (v18 >> 60 == 15)
  {
    sub_1D7870C24(a1 + 16);
LABEL_16:
    *(_OWORD *)(a1 + 16) = *(_OWORD *)v17;
    goto LABEL_18;
  }
  uint64_t v23 = *v17;
  sub_1D7860790(*v17, *((void *)a2 + 3));
  uint64_t v24 = *(void *)(a1 + 16);
  unint64_t v25 = *(void *)(a1 + 24);
  *(void *)(a1 + 16) = v23;
  *(void *)(a1 + 24) = v18;
  sub_1D78607E8(v24, v25);
LABEL_18:
  uint64_t v26 = (_OWORD *)(a1 + 32);
  unint64_t v27 = a2 + 2;
  unint64_t v21 = *((void *)a2 + 5);
  if (*(void *)(a1 + 40) >> 60 == 15)
  {
    if (v21 >> 60 == 15)
    {
      long long v28 = a2[3];
      *uint64_t v26 = *v27;
      *(_OWORD *)(a1 + 48) = v28;
      goto LABEL_34;
    }
    goto LABEL_21;
  }
  if (v21 >> 60 == 15)
  {
    sub_1D79AC81C((uint64_t *)(a1 + 32));
    long long v32 = a2[3];
    *uint64_t v26 = *v27;
    *(_OWORD *)(a1 + 48) = v32;
    goto LABEL_34;
  }
  uint64_t v34 = *((void *)a2 + 4);
  sub_1D7860790(v34, *((void *)a2 + 5));
  uint64_t v35 = *(void *)(a1 + 32);
  unint64_t v36 = *(void *)(a1 + 40);
  *(void *)(a1 + 32) = v34;
  *(void *)(a1 + 40) = v21;
  sub_1D78607E8(v35, v36);
  long long v37 = (uint64_t *)(a2 + 3);
  unint64_t v31 = *((void *)a2 + 7);
  if (*(void *)(a1 + 56) >> 60 == 15)
  {
    if (v31 >> 60 != 15)
    {
      uint64_t v33 = *v37;
LABEL_26:
      sub_1D7860790(v33, v31);
      *(void *)(a1 + 48) = v33;
      *(void *)(a1 + 56) = v31;
      goto LABEL_34;
    }
    goto LABEL_32;
  }
  if (v31 >> 60 == 15)
  {
    sub_1D7870C24(a1 + 48);
LABEL_32:
    *(_OWORD *)(a1 + 48) = *(_OWORD *)v37;
    goto LABEL_34;
  }
  uint64_t v38 = *v37;
  sub_1D7860790(*v37, *((void *)a2 + 7));
  uint64_t v39 = *(void *)(a1 + 48);
  unint64_t v40 = *(void *)(a1 + 56);
  *(void *)(a1 + 48) = v38;
  *(void *)(a1 + 56) = v31;
  sub_1D78607E8(v39, v40);
LABEL_34:
  long long v41 = (_OWORD *)(a1 + 64);
  long long v42 = a2 + 4;
  uint64_t v43 = *((void *)a2 + 11);
  if (*(void *)(a1 + 88))
  {
    if (v43)
    {
      uint64_t v44 = *((void *)a2 + 8);
      unint64_t v45 = *((void *)a2 + 9);
      sub_1D7860790(v44, v45);
      uint64_t v46 = *(void *)(a1 + 64);
      unint64_t v47 = *(void *)(a1 + 72);
      *(void *)(a1 + 64) = v44;
      *(void *)(a1 + 72) = v45;
      sub_1D78607E8(v46, v47);
      *(void *)(a1 + 80) = *((void *)a2 + 10);
      *(void *)(a1 + 88) = *((void *)a2 + 11);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 96) = *((void *)a2 + 12);
      *(void *)(a1 + 104) = *((void *)a2 + 13);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v48 = *((void *)a2 + 14);
      unint64_t v49 = *((void *)a2 + 15);
      sub_1D7860790(v48, v49);
      uint64_t v50 = *(void *)(a1 + 112);
      unint64_t v51 = *(void *)(a1 + 120);
      *(void *)(a1 + 112) = v48;
      *(void *)(a1 + 120) = v49;
      sub_1D78607E8(v50, v51);
    }
    else
    {
      sub_1D79AC87C(a1 + 64);
      long long v56 = a2[7];
      long long v58 = *v42;
      long long v57 = a2[5];
      *(_OWORD *)(a1 + 96) = a2[6];
      *(_OWORD *)(a1 + 112) = v56;
      _OWORD *v41 = v58;
      *(_OWORD *)(a1 + 80) = v57;
    }
  }
  else if (v43)
  {
    uint64_t v52 = *((void *)a2 + 8);
    unint64_t v53 = *((void *)a2 + 9);
    sub_1D7860790(v52, v53);
    *(void *)(a1 + 64) = v52;
    *(void *)(a1 + 72) = v53;
    *(void *)(a1 + 80) = *((void *)a2 + 10);
    *(void *)(a1 + 88) = *((void *)a2 + 11);
    *(void *)(a1 + 96) = *((void *)a2 + 12);
    *(void *)(a1 + 104) = *((void *)a2 + 13);
    uint64_t v54 = *((void *)a2 + 14);
    unint64_t v55 = *((void *)a2 + 15);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1D7860790(v54, v55);
    *(void *)(a1 + 112) = v54;
    *(void *)(a1 + 120) = v55;
  }
  else
  {
    long long v59 = *v42;
    long long v60 = a2[5];
    long long v61 = a2[7];
    *(_OWORD *)(a1 + 96) = a2[6];
    *(_OWORD *)(a1 + 112) = v61;
    _OWORD *v41 = v59;
    *(_OWORD *)(a1 + 80) = v60;
  }
  *(void *)(a1 + 128) = *((void *)a2 + 16);
  *(void *)(a1 + 136) = *((void *)a2 + 17);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 144) = *((void *)a2 + 18);
  uint64_t v62 = *((void *)a2 + 19);
  unint64_t v63 = *((void *)a2 + 20);
  sub_1D7860790(v62, v63);
  uint64_t v64 = *(void *)(a1 + 152);
  unint64_t v65 = *(void *)(a1 + 160);
  *(void *)(a1 + 152) = v62;
  *(void *)(a1 + 160) = v63;
  sub_1D78607E8(v64, v65);
  *(void *)(a1 + 168) = *((void *)a2 + 21);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy176_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  long long v4 = a2[3];
  long long v5 = a2[4];
  long long v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  __n128 result = (__n128)a2[7];
  long long v8 = a2[8];
  long long v9 = a2[10];
  *(_OWORD *)(a1 + 144) = a2[9];
  *(_OWORD *)(a1 + 160) = v9;
  *(__n128 *)(a1 + 112) = result;
  *(_OWORD *)(a1 + 128) = v8;
  return result;
}

uint64_t assignWithTake for ISO18013DeviceAuthentication(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void *)(a1 + 8);
  if (v4 >> 60 == 15) {
    goto LABEL_4;
  }
  unint64_t v5 = *(void *)(a2 + 8);
  if (v5 >> 60 == 15)
  {
    sub_1D79AC84C((uint64_t *)a1);
LABEL_4:
    long long v6 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v6;
    long long v7 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v7;
    goto LABEL_19;
  }
  uint64_t v8 = *(void *)a1;
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v5;
  sub_1D78607E8(v8, v4);
  long long v9 = (_OWORD *)(a2 + 16);
  unint64_t v10 = *(void *)(a1 + 24);
  if (v10 >> 60 == 15) {
    goto LABEL_8;
  }
  unint64_t v11 = *(void *)(a2 + 24);
  if (v11 >> 60 == 15)
  {
    sub_1D7870C24(a1 + 16);
LABEL_8:
    *(_OWORD *)(a1 + 16) = *v9;
    goto LABEL_10;
  }
  uint64_t v12 = *(void *)(a1 + 16);
  *(void *)(a1 + 16) = *(void *)v9;
  *(void *)(a1 + 24) = v11;
  sub_1D78607E8(v12, v10);
LABEL_10:
  unint64_t v13 = *(void *)(a1 + 40);
  if (v13 >> 60 == 15)
  {
LABEL_13:
    long long v15 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v15;
    goto LABEL_19;
  }
  unint64_t v14 = *(void *)(a2 + 40);
  if (v14 >> 60 == 15)
  {
    sub_1D79AC81C((uint64_t *)(a1 + 32));
    goto LABEL_13;
  }
  uint64_t v16 = *(void *)(a1 + 32);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v14;
  sub_1D78607E8(v16, v13);
  uint64_t v17 = (_OWORD *)(a2 + 48);
  unint64_t v18 = *(void *)(a1 + 56);
  if (v18 >> 60 == 15) {
    goto LABEL_17;
  }
  unint64_t v19 = *(void *)(a2 + 56);
  if (v19 >> 60 == 15)
  {
    sub_1D7870C24(a1 + 48);
LABEL_17:
    *(_OWORD *)(a1 + 48) = *v17;
    goto LABEL_19;
  }
  uint64_t v20 = *(void *)(a1 + 48);
  *(void *)(a1 + 48) = *(void *)v17;
  *(void *)(a1 + 56) = v19;
  sub_1D78607E8(v20, v18);
LABEL_19:
  if (!*(void *)(a1 + 88))
  {
LABEL_23:
    long long v27 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v27;
    long long v28 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v28;
    goto LABEL_24;
  }
  uint64_t v21 = *(void *)(a2 + 88);
  if (!v21)
  {
    sub_1D79AC87C(a1 + 64);
    goto LABEL_23;
  }
  uint64_t v22 = *(void *)(a1 + 64);
  unint64_t v23 = *(void *)(a1 + 72);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  sub_1D78607E8(v22, v23);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v21;
  swift_bridgeObjectRelease();
  uint64_t v24 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v24;
  swift_bridgeObjectRelease();
  uint64_t v25 = *(void *)(a1 + 112);
  unint64_t v26 = *(void *)(a1 + 120);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  sub_1D78607E8(v25, v26);
LABEL_24:
  uint64_t v29 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v29;
  swift_bridgeObjectRelease();
  uint64_t v30 = *(void *)(a2 + 160);
  uint64_t v31 = *(void *)(a1 + 152);
  unint64_t v32 = *(void *)(a1 + 160);
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  *(void *)(a1 + 160) = v30;
  sub_1D78607E8(v31, v32);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ISO18013DeviceAuthentication(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 176)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 136);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ISO18013DeviceAuthentication(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 168) = 0;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 176) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 136) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 176) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ISO18013DeviceAuthentication()
{
  return &type metadata for ISO18013DeviceAuthentication;
}

uint64_t static KeystoreKeychainProtocol.queryKeychainCertificate(label:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v20[1] = *MEMORY[0x1E4F143B8];
  v20[0] = 0;
  uint64_t v9 = sub_1D7A9BFC8();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, void *, uint64_t, uint64_t))(a4 + 32))(a1, a2, v9, v10, v20, a3, a4);
  if (v4)
  {
    swift_bridgeObjectRelease();
    return swift_unknownObjectRelease();
  }
  swift_bridgeObjectRelease();
  if (!v20[0])
  {
    sub_1D7A9CC48();
    swift_bridgeObjectRelease();
    unint64_t v18 = 0xD0000000000000ECLL;
    unint64_t v19 = 0x80000001D7AC88C0;
    sub_1D7A9C128();
    unint64_t v14 = sub_1D785EAF8(MEMORY[0x1E4FBC860]);
    sub_1D7860544();
    swift_allocError();
    DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xD000000000000026, 0x80000001D7AC88C0, (__int16 *)&v18, 0, v14, 0xD000000000000061, 0x80000001D7AC88F0, v15, 0xD000000000000020, 0x80000001D7AC8960, 35);
    swift_willThrow();
    return swift_unknownObjectRelease();
  }
  uint64_t v12 = (const void *)swift_unknownObjectRetain();
  CFTypeID v13 = CFGetTypeID(v12);
  if (v13 != SecCertificateGetTypeID())
  {
    unint64_t v18 = 236;
    unint64_t v19 = 0xE000000000000000;
    sub_1D7A9CC48();
    sub_1D7A9C128();
    sub_1D7A9C128();
    sub_1D7A9C128();
    unint64_t v16 = sub_1D785EAF8(MEMORY[0x1E4FBC860]);
    sub_1D7860544();
    swift_allocError();
    DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0, 0xE000000000000000, (__int16 *)&v18, 0, v16, 0xD000000000000061, 0x80000001D7AC88F0, v17, 0xD000000000000020, 0x80000001D7AC8960, 40);
    swift_willThrow();
    swift_unknownObjectRelease();
    return swift_unknownObjectRelease();
  }
  swift_unknownObjectRelease();
  type metadata accessor for SecCertificate(0);
  return swift_dynamicCastUnknownClassUnconditional();
}

uint64_t dispatch thunk of static KeystoreKeychainProtocol.storeKeychainCertificate(_:label:failIfDuplicate:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 8))();
}

uint64_t dispatch thunk of static KeystoreKeychainProtocol.storeKeychainKey(_:label:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 16))();
}

uint64_t dispatch thunk of static KeystoreKeychainProtocol.deleteKeychainItem(label:serialNumber:secClass:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(a8 + 24))();
}

uint64_t dispatch thunk of static KeystoreKeychainProtocol.queryKeychainItem(label:secClass:item:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 32))();
}

unsigned char *MobileAssetInfo.init(assetType:filters:)@<X0>(unsigned char *result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(unsigned char *)a3 = *result;
  *(void *)(a3 + 8) = a2;
  return result;
}

uint64_t sub_1D79FAD20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 32);
}

uint64_t sub_1D79FAD28(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1D79FAD60(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1D79FADA4(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1D79FADE0(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1D79FAE28(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t type metadata accessor for MobileAssetInfo()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t VICALDocument.version.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t VICALDocument.vicalProvider.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t VICALDocument.date.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for VICALDocument(0) + 24);
  uint64_t v4 = sub_1D7A9B148();
  unint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for VICALDocument(uint64_t a1)
{
  return sub_1D786E938(a1, (uint64_t *)&unk_1EA846B58);
}

uint64_t VICALDocument.vicalIssuerID.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for VICALDocument(0) + 28));
}

uint64_t VICALDocument.nextUpdate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for VICALDocument(0) + 32);
  return sub_1D7919F20(v3, a1);
}

uint64_t VICALDocument.certificateInfos.getter()
{
  type metadata accessor for VICALDocument(0);
  return swift_bridgeObjectRetain();
}

unint64_t sub_1D79FB01C()
{
  unint64_t result = 0x6E6F6973726576;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x6F72506C61636976;
      break;
    case 2:
      unint64_t result = 1702125924;
      break;
    case 3:
      unint64_t result = 0x7373496C61636976;
      break;
    case 4:
      unint64_t result = 0x616470557478656ELL;
      break;
    case 5:
      unint64_t result = 0xD000000000000010;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1D79FB0FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1D7A001C4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D79FB124(uint64_t a1)
{
  unint64_t v2 = sub_1D79FB47C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D79FB160(uint64_t a1)
{
  unint64_t v2 = sub_1D79FB47C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t VICALDocument.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA846AB0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v7, v8, v9, v10, v11, v12, v13);
  uint64_t v15 = (char *)v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D79FB47C();
  sub_1D7A9D6E8();
  char v24 = 0;
  sub_1D7A9D1D8();
  if (!v2)
  {
    char v23 = 1;
    sub_1D7A9D1D8();
    uint64_t v16 = type metadata accessor for VICALDocument(0);
    char v22 = 2;
    sub_1D7A9B148();
    sub_1D79FB4D0(&qword_1EA843E00, MEMORY[0x1E4F27928]);
    sub_1D7A9D228();
    char v21 = 3;
    sub_1D7A9D1B8();
    char v20 = 4;
    sub_1D7A9D1C8();
    v18[1] = *(void *)(v3 + *(int *)(v16 + 36));
    char v19 = 5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA846AC0);
    sub_1D79FBB14(&qword_1EA846AC8, &qword_1EA846AD0);
    sub_1D7A9D228();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v15, v5);
}

unint64_t sub_1D79FB47C()
{
  unint64_t result = qword_1EA846AB8;
  if (!qword_1EA846AB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA846AB8);
  }
  return result;
}

uint64_t sub_1D79FB4D0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for VICALCertificateInfo(uint64_t a1)
{
  return sub_1D786E938(a1, (uint64_t *)&unk_1EA846B68);
}

uint64_t VICALDocument.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v54 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF9118);
  MEMORY[0x1F4188790](v3 - 8, v4, v5, v6, v7, v8, v9, v10);
  unint64_t v55 = (char *)&v54 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1D7A9B148();
  uint64_t v57 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12, v13, v14, v15, v16, v17, v18, v19);
  char v21 = (char *)&v54 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA846AD8);
  uint64_t v56 = *(void *)(v58 - 8);
  MEMORY[0x1F4188790](v58, v22, v23, v24, v25, v26, v27, v28);
  uint64_t v30 = (char *)&v54 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = (int *)type metadata accessor for VICALDocument(0);
  MEMORY[0x1F4188790](v31, v32, v33, v34, v35, v36, v37, v38);
  unint64_t v40 = (uint64_t *)((char *)&v54 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v41 = a1[3];
  long long v59 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v41);
  sub_1D79FB47C();
  uint64_t v42 = v60;
  sub_1D7A9D6A8();
  if (v42) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v59);
  }
  uint64_t v43 = v21;
  uint64_t v44 = v57;
  char v67 = 0;
  uint64_t v45 = (uint64_t)v40;
  *unint64_t v40 = sub_1D7A9D0F8();
  v40[1] = v46;
  char v66 = 1;
  _OWORD v40[2] = sub_1D7A9D0F8();
  v40[3] = v47;
  char v65 = 2;
  uint64_t v48 = sub_1D79FB4D0(&qword_1EA843DE0, MEMORY[0x1E4F27928]);
  sub_1D7A9D148();
  uint64_t v60 = v48;
  (*(void (**)(char *, char *, uint64_t))(v44 + 32))((char *)v40 + v31[6], v43, v12);
  char v64 = 3;
  uint64_t v49 = sub_1D7A9D0D8();
  uint64_t v50 = (char *)v40 + v31[7];
  *(void *)uint64_t v50 = v49;
  v50[8] = v51 & 1;
  char v63 = 4;
  uint64_t v52 = (uint64_t)v55;
  sub_1D7A9D0E8();
  sub_1D7916474(v52, v45 + v31[8]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA846AC0);
  char v62 = 5;
  sub_1D79FBB14(&qword_1EA846AE0, &qword_1EA846AE8);
  sub_1D7A9D148();
  (*(void (**)(char *, uint64_t))(v56 + 8))(v30, v58);
  *(void *)(v45 + v31[9]) = v61;
  sub_1D79FD7D0(v45, v54, type metadata accessor for VICALDocument);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v59);
  return sub_1D79FD838(v45, type metadata accessor for VICALDocument);
}

uint64_t sub_1D79FBAB4(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF9118);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D79FBB14(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA846AC0);
    sub_1D79FB4D0(a2, (void (*)(uint64_t))type metadata accessor for VICALCertificateInfo);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1D79FBBA8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return VICALDocument.init(from:)(a1, a2);
}

uint64_t sub_1D79FBBC0(void *a1)
{
  return VICALDocument.encode(to:)(a1);
}

uint64_t VICALCertificateInfo.certificate.getter()
{
  uint64_t v1 = *(void *)v0;
  sub_1D7860790(*(void *)v0, *(void *)(v0 + 8));
  return v1;
}

uint64_t VICALCertificateInfo.serialNumber.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[3];
  unint64_t v3 = v1[4];
  *a1 = v1[2];
  a1[1] = v2;
  a1[2] = v3;
  return sub_1D7860790(v2, v3);
}

uint64_t VICALCertificateInfo.subjectKeyIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 40);
  sub_1D7860790(v1, *(void *)(v0 + 48));
  return v1;
}

uint64_t VICALCertificateInfo.docType.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t VICALCertificateInfo.certificateProfile.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t VICALCertificateInfo.issuingAuthority.getter()
{
  uint64_t v1 = *(void *)(v0 + 72);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t VICALCertificateInfo.issuingCountry.getter()
{
  uint64_t v1 = *(void *)(v0 + 88);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t VICALCertificateInfo.stateOrProvinceName.getter()
{
  uint64_t v1 = *(void *)(v0 + 104);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t VICALCertificateInfo.issuer.getter()
{
  uint64_t v1 = *(void *)(v0 + 120);
  sub_1D786E9D8(v1, *(void *)(v0 + 128));
  return v1;
}

uint64_t VICALCertificateInfo.subject.getter()
{
  uint64_t v1 = *(void *)(v0 + 136);
  sub_1D786E9D8(v1, *(void *)(v0 + 144));
  return v1;
}

uint64_t VICALCertificateInfo.notBefore.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for VICALCertificateInfo(0) + 56);
  return sub_1D7919F20(v3, a1);
}

uint64_t VICALCertificateInfo.notAfter.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for VICALCertificateInfo(0) + 60);
  return sub_1D7919F20(v3, a1);
}

uint64_t VICALCertificateInfo.extensions.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + *(int *)(type metadata accessor for VICALCertificateInfo(0) + 64));
  *a1 = v3;
  return sub_1D79FBE28(v3);
}

uint64_t sub_1D79FBE28(uint64_t result)
{
  if (result != 1) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t VICALCertificateInfo.Extensions.certificateRevocationList.getter()
{
  return swift_bridgeObjectRetain();
}

unint64_t sub_1D79FBE40()
{
  return 0xD000000000000019;
}

uint64_t sub_1D79FBE5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1D7A00488(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1D79FBE88(uint64_t a1)
{
  unint64_t v2 = sub_1D79FC084();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D79FBEC4(uint64_t a1)
{
  unint64_t v2 = sub_1D79FC084();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t VICALCertificateInfo.Extensions.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA846AF0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3, v5, v6, v7, v8, v9, v10, v11);
  uint64_t v13 = (char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D79FC084();
  sub_1D7A9D6E8();
  v16[1] = v14;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA846B00);
  sub_1D79FC2D0(&qword_1EA846B08, (void (*)(void))sub_1D79FC0D8);
  sub_1D7A9D1C8();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v13, v3);
}

unint64_t sub_1D79FC084()
{
  unint64_t result = qword_1EA846AF8;
  if (!qword_1EA846AF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA846AF8);
  }
  return result;
}

unint64_t sub_1D79FC0D8()
{
  unint64_t result = qword_1EA846B10;
  if (!qword_1EA846B10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA846B10);
  }
  return result;
}

uint64_t VICALCertificateInfo.Extensions.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA846B18);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v7, v8, v9, v10, v11, v12, v13);
  uint64_t v15 = (char *)v17 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D79FC084();
  sub_1D7A9D6A8();
  if (!v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA846B00);
    sub_1D79FC2D0(&qword_1EA846B20, (void (*)(void))sub_1D79FC340);
    sub_1D7A9D0E8();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v15, v5);
    *a2 = v17[1];
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1D79FC2D0(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA846B00);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1D79FC340()
{
  unint64_t result = qword_1EA846B28;
  if (!qword_1EA846B28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA846B28);
  }
  return result;
}

unint64_t sub_1D79FC394(char a1)
{
  unint64_t result = 0x6369666974726563;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x754E6C6169726573;
      break;
    case 2:
      unint64_t result = 6908787;
      break;
    case 3:
      unint64_t result = 0x65707954636F64;
      break;
    case 4:
      unint64_t result = 0xD000000000000012;
      break;
    case 5:
      unint64_t result = 0xD000000000000010;
      break;
    case 6:
      unint64_t result = 0x43676E6975737369;
      break;
    case 7:
      unint64_t result = 0xD000000000000013;
      break;
    case 8:
      unint64_t result = 0x726575737369;
      break;
    case 9:
      unint64_t result = 0x7463656A627573;
      break;
    case 10:
      unint64_t result = 0x726F666542746F6ELL;
      break;
    case 11:
      unint64_t result = 0x7265746641746F6ELL;
      break;
    case 12:
      unint64_t result = 0x6F69736E65747865;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1D79FC548(char a1)
{
  unint64_t result = 0x6369666974726563;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x754E6C6169726573;
      break;
    case 2:
      unint64_t result = 6908787;
      break;
    case 3:
      unint64_t result = 0x65707954636F64;
      break;
    case 4:
      unint64_t result = 0xD000000000000012;
      break;
    case 5:
      unint64_t result = 0xD000000000000010;
      break;
    case 6:
      unint64_t result = 0x43676E6975737369;
      break;
    case 7:
      unint64_t result = 0xD000000000000013;
      break;
    case 8:
      unint64_t result = 0x726575737369;
      break;
    case 9:
      unint64_t result = 0x7463656A627573;
      break;
    case 10:
      unint64_t result = 0x726F666542746F6ELL;
      break;
    case 11:
      unint64_t result = 0x7265746641746F6ELL;
      break;
    case 12:
      unint64_t result = 0x6F69736E65747865;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1D79FC6FC@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return VICALCertificateInfo.Extensions.init(from:)(a1, a2);
}

uint64_t sub_1D79FC714(void *a1)
{
  return VICALCertificateInfo.Extensions.encode(to:)(a1);
}

uint64_t sub_1D79FC72C(char *a1, char *a2)
{
  char v2 = *a2;
  unint64_t v3 = sub_1D79FC394(*a1);
  uint64_t v5 = v4;
  if (v3 == sub_1D79FC394(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_1D7A9D358();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1D79FC7B8()
{
  char v1 = *v0;
  sub_1D7A9D5D8();
  sub_1D79FC394(v1);
  sub_1D7A9C0B8();
  swift_bridgeObjectRelease();
  return sub_1D7A9D628();
}

uint64_t sub_1D79FC81C()
{
  sub_1D79FC394(*v0);
  sub_1D7A9C0B8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D79FC870()
{
  char v1 = *v0;
  sub_1D7A9D5D8();
  sub_1D79FC394(v1);
  sub_1D7A9C0B8();
  swift_bridgeObjectRelease();
  return sub_1D7A9D628();
}

uint64_t sub_1D79FC8D0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1D7A00510();
  *a1 = result;
  return result;
}

unint64_t sub_1D79FC900@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1D79FC394(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_1D79FC92C()
{
  return sub_1D79FC548(*v0);
}

uint64_t sub_1D79FC934@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1D7A00510();
  *a1 = result;
  return result;
}

uint64_t sub_1D79FC95C(uint64_t a1)
{
  unint64_t v2 = sub_1D79FCE50();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D79FC998(uint64_t a1)
{
  unint64_t v2 = sub_1D79FCE50();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t VICALCertificateInfo.encode(to:)(void *a1)
{
  unint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA846B30);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v7, v8, v9, v10, v11, v12, v13);
  uint64_t v15 = (char *)&v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D79FCE50();
  sub_1D7A9D6E8();
  long long v19 = *v3;
  char v21 = 0;
  sub_1D7871AD8();
  sub_1D7A9D228();
  if (!v2)
  {
    uint64_t v16 = *((void *)v3 + 4);
    long long v19 = v3[1];
    uint64_t v20 = v16;
    char v21 = 1;
    sub_1D79FC0D8();
    sub_1D7A9D228();
    long long v19 = *(long long *)((char *)v3 + 40);
    char v21 = 2;
    sub_1D7A9D228();
    *(void *)&long long v19 = *((void *)v3 + 7);
    char v21 = 3;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDF7900);
    sub_1D7919C34(&qword_1EBDF8230);
    sub_1D7A9D228();
    *(void *)&long long v19 = *((void *)v3 + 8);
    char v21 = 4;
    sub_1D7A9D1C8();
    LOBYTE(v19) = 5;
    sub_1D7A9D188();
    LOBYTE(v19) = 6;
    sub_1D7A9D188();
    LOBYTE(v19) = 7;
    sub_1D7A9D188();
    long long v19 = *(long long *)((char *)v3 + 120);
    char v21 = 8;
    sub_1D7A9D1C8();
    long long v19 = *(long long *)((char *)v3 + 136);
    char v21 = 9;
    sub_1D7A9D1C8();
    uint64_t v17 = type metadata accessor for VICALCertificateInfo(0);
    LOBYTE(v19) = 10;
    sub_1D7A9B148();
    sub_1D79FB4D0(&qword_1EA843E00, MEMORY[0x1E4F27928]);
    sub_1D7A9D1C8();
    LOBYTE(v19) = 11;
    sub_1D7A9D1C8();
    *(void *)&long long v19 = *(void *)((char *)v3 + *(int *)(v17 + 64));
    char v21 = 12;
    sub_1D79FCEA4();
    sub_1D7A9D1C8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v15, v5);
}

unint64_t sub_1D79FCE50()
{
  unint64_t result = qword_1EA846B38;
  if (!qword_1EA846B38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA846B38);
  }
  return result;
}

unint64_t sub_1D79FCEA4()
{
  unint64_t result = qword_1EA846B40;
  if (!qword_1EA846B40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA846B40);
  }
  return result;
}

uint64_t VICALCertificateInfo.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v53 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF9118);
  uint64_t v12 = MEMORY[0x1F4188790](v4 - 8, v5, v6, v7, v8, v9, v10, v11);
  uint64_t v14 = (char *)&v50 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12, v15, v16, v17, v18, v19, v20, v21);
  uint64_t v23 = (char *)&v50 - v22;
  uint64_t v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA846B48);
  uint64_t v24 = *(void *)(v55 - 8);
  MEMORY[0x1F4188790](v55, v25, v26, v27, v28, v29, v30, v31);
  uint64_t v33 = (char *)&v50 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = (int *)type metadata accessor for VICALCertificateInfo(0);
  MEMORY[0x1F4188790](v34, v35, v36, v37, v38, v39, v40, v41);
  uint64_t v56 = a1;
  uint64_t v57 = (_OWORD *)((char *)&v50 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D79FCE50();
  uint64_t v54 = v33;
  sub_1D7A9D6A8();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v56);
  }
  char v51 = v14;
  uint64_t v52 = v23;
  char v60 = 0;
  sub_1D786073C();
  sub_1D7A9D148();
  uint64_t v43 = v57;
  *uint64_t v57 = v58;
  char v60 = 1;
  sub_1D79FC340();
  sub_1D7A9D148();
  uint64_t v44 = v59;
  v43[1] = v58;
  *((void *)v43 + 4) = v44;
  char v60 = 2;
  sub_1D7A9D148();
  *(_OWORD *)((char *)v43 + 40) = v58;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDF7900);
  char v60 = 3;
  uint64_t v50 = sub_1D7919C34(&qword_1EBDF7A30);
  sub_1D7A9D148();
  *((void *)v43 + 7) = v58;
  char v60 = 4;
  sub_1D7A9D0E8();
  *((void *)v43 + 8) = v58;
  LOBYTE(v58) = 5;
  *((void *)v43 + 9) = sub_1D7A9D0A8();
  *((void *)v43 + 10) = v45;
  LOBYTE(v58) = 6;
  *((void *)v43 + 11) = sub_1D7A9D0A8();
  *((void *)v43 + 12) = v46;
  LOBYTE(v58) = 7;
  *((void *)v43 + 13) = sub_1D7A9D0A8();
  *((void *)v43 + 14) = v47;
  char v60 = 8;
  sub_1D7A9D0E8();
  *(_OWORD *)((char *)v43 + 120) = v58;
  char v60 = 9;
  sub_1D7A9D0E8();
  *(_OWORD *)((char *)v57 + 136) = v58;
  sub_1D7A9B148();
  LOBYTE(v58) = 10;
  sub_1D79FB4D0(&qword_1EA843DE0, MEMORY[0x1E4F27928]);
  sub_1D7A9D0E8();
  sub_1D7916474((uint64_t)v52, (uint64_t)v57 + v34[14]);
  LOBYTE(v58) = 11;
  sub_1D7A9D0E8();
  sub_1D7916474((uint64_t)v51, (uint64_t)v57 + v34[15]);
  char v60 = 12;
  sub_1D79FD77C();
  sub_1D7A9D0E8();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v54, v55);
  uint64_t v48 = (uint64_t)v57;
  *(void *)((char *)v57 + v34[16]) = v58;
  sub_1D79FD7D0(v48, v53, type metadata accessor for VICALCertificateInfo);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v56);
  return sub_1D79FD838(v48, type metadata accessor for VICALCertificateInfo);
}

unint64_t sub_1D79FD77C()
{
  unint64_t result = qword_1EA846B50;
  if (!qword_1EA846B50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA846B50);
  }
  return result;
}

uint64_t sub_1D79FD7D0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1D79FD838(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1D79FD898@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return VICALCertificateInfo.init(from:)(a1, a2);
}

uint64_t sub_1D79FD8B0(void *a1)
{
  return VICALCertificateInfo.encode(to:)(a1);
}

void *initializeBufferWithCopyOfBuffer for VICALDocument(void *a1, char *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v21 = *(void *)a2;
    *uint64_t v4 = *(void *)a2;
    uint64_t v4 = (void *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = *((void *)a2 + 1);
    *a1 = *(void *)a2;
    a1[1] = v7;
    uint64_t v8 = *((void *)a2 + 3);
    a1[2] = *((void *)a2 + 2);
    a1[3] = v8;
    uint64_t v9 = a3[6];
    uint64_t v23 = (char *)a1 + v9;
    uint64_t v10 = &a2[v9];
    uint64_t v11 = sub_1D7A9B148();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13(v23, v10, v11);
    uint64_t v14 = a3[7];
    uint64_t v15 = a3[8];
    uint64_t v16 = (char *)v4 + v14;
    uint64_t v17 = &a2[v14];
    *(void *)uint64_t v16 = *(void *)v17;
    v16[8] = v17[8];
    uint64_t v18 = (char *)v4 + v15;
    uint64_t v19 = &a2[v15];
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(&a2[v15], 1, v11))
    {
      uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF9118);
      memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64));
    }
    else
    {
      v13(v18, v19, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v18, 0, 1, v11);
    }
    *(void *)((char *)v4 + a3[9]) = *(void *)&a2[a3[9]];
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for VICALDocument(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_1D7A9B148();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  v7(v4, v5);
  uint64_t v8 = a1 + *(int *)(a2 + 32);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v8, 1, v5)) {
    v7(v8, v5);
  }
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for VICALDocument(void *a1, char *a2, int *a3)
{
  uint64_t v6 = *((void *)a2 + 1);
  *a1 = *(void *)a2;
  a1[1] = v6;
  uint64_t v7 = *((void *)a2 + 3);
  a1[2] = *((void *)a2 + 2);
  a1[3] = v7;
  uint64_t v8 = a3[6];
  uint64_t v21 = (char *)a1 + v8;
  uint64_t v9 = &a2[v8];
  uint64_t v10 = sub_1D7A9B148();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v12(v21, v9, v10);
  uint64_t v13 = a3[7];
  uint64_t v14 = a3[8];
  uint64_t v15 = (char *)a1 + v13;
  uint64_t v16 = &a2[v13];
  *(void *)uint64_t v15 = *(void *)v16;
  unsigned char v15[8] = v16[8];
  uint64_t v17 = (char *)a1 + v14;
  uint64_t v18 = &a2[v14];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(&a2[v14], 1, v10))
  {
    uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF9118);
    memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    v12(v17, v18, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v17, 0, 1, v10);
  }
  *(void *)((char *)a1 + a3[9]) = *(void *)&a2[a3[9]];
  swift_bridgeObjectRetain();
  return a1;
}

char *assignWithCopy for VICALDocument(char *a1, void *a2, int *a3)
{
  *(void *)a1 = *a2;
  *((void *)a1 + 1) = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)a1 + 2) = a2[2];
  *((void *)a1 + 3) = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[6];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1D7A9B148();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v22 = *(void (**)(char *, char *, uint64_t))(v10 + 24);
  v22(v7, v8, v9);
  uint64_t v11 = a3[7];
  uint64_t v12 = &a1[v11];
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = *(void *)v13;
  v12[8] = v13[8];
  *(void *)uint64_t v12 = v14;
  uint64_t v23 = a3;
  uint64_t v15 = a3[8];
  uint64_t v16 = &a1[v15];
  uint64_t v17 = (char *)a2 + v15;
  uint64_t v18 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  LODWORD(a3) = v18(&a1[v15], 1, v9);
  int v19 = v18(v17, 1, v9);
  if (!a3)
  {
    if (!v19)
    {
      v22(v16, v17, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v16, v9);
    goto LABEL_6;
  }
  if (v19)
  {
LABEL_6:
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF9118);
    memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v16, v17, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v16, 0, 1, v9);
LABEL_7:
  *(void *)&a1[v23[9]] = *(void *)((char *)a2 + v23[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *initializeWithTake for VICALDocument(_OWORD *a1, char *a2, int *a3)
{
  long long v6 = *((_OWORD *)a2 + 1);
  *a1 = *(_OWORD *)a2;
  a1[1] = v6;
  uint64_t v7 = a3[6];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = &a2[v7];
  uint64_t v10 = sub_1D7A9B148();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
  v12(v8, v9, v10);
  uint64_t v13 = a3[7];
  uint64_t v14 = a3[8];
  uint64_t v15 = (char *)a1 + v13;
  uint64_t v16 = &a2[v13];
  *(void *)uint64_t v15 = *(void *)v16;
  unsigned char v15[8] = v16[8];
  uint64_t v17 = (char *)a1 + v14;
  uint64_t v18 = &a2[v14];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(&a2[v14], 1, v10))
  {
    uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF9118);
    memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    v12(v17, v18, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v17, 0, 1, v10);
  }
  *(void *)((char *)a1 + a3[9]) = *(void *)&a2[a3[9]];
  return a1;
}

char *assignWithTake for VICALDocument(char *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *(void *)a1 = *a2;
  *((void *)a1 + 1) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  *((void *)a1 + 2) = a2[2];
  *((void *)a1 + 3) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a3[6];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = sub_1D7A9B148();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v23 = *(void (**)(char *, char *, uint64_t))(v12 + 40);
  v23(v9, v10, v11);
  uint64_t v13 = a3[7];
  uint64_t v14 = a3[8];
  uint64_t v24 = a3;
  uint64_t v15 = &a1[v13];
  uint64_t v16 = (char *)a2 + v13;
  *(void *)uint64_t v15 = *(void *)v16;
  unsigned char v15[8] = v16[8];
  uint64_t v17 = &a1[v14];
  uint64_t v18 = (char *)a2 + v14;
  uint64_t v19 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48);
  LODWORD(a3) = v19(&a1[v14], 1, v11);
  int v20 = v19(v18, 1, v11);
  if (!a3)
  {
    if (!v20)
    {
      v23(v17, v18, v11);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v17, v11);
    goto LABEL_6;
  }
  if (v20)
  {
LABEL_6:
    uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF9118);
    memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v17, v18, v11);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v17, 0, 1, v11);
LABEL_7:
  *(void *)&a1[v24[9]] = *(void *)((char *)a2 + v24[9]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for VICALDocument(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1D79FE318);
}

uint64_t sub_1D79FE318(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1D7A9B148();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 24);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF9118);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 32);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t storeEnumTagSinglePayload for VICALDocument(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1D79FE45C);
}

uint64_t sub_1D79FE45C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = sub_1D7A9B148();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 24);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF9118);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 32);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

void sub_1D79FE58C()
{
  sub_1D7A9B148();
  if (v0 <= 0x3F)
  {
    sub_1D787010C();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

unint64_t initializeBufferWithCopyOfBuffer for VICALCertificateInfo(unint64_t a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v19 = *a2;
    *(void *)a1 = *a2;
    a1 = v19 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v7 = *a2;
    unint64_t v8 = a2[1];
    sub_1D7860790(*a2, v8);
    *(void *)a1 = v7;
    *(void *)(a1 + 8) = v8;
    uint64_t v9 = a2[3];
    *(void *)(a1 + 16) = a2[2];
    unint64_t v10 = a2[4];
    sub_1D7860790(v9, v10);
    *(void *)(a1 + 24) = v9;
    *(void *)(a1 + 32) = v10;
    uint64_t v11 = a2[5];
    unint64_t v12 = a2[6];
    sub_1D7860790(v11, v12);
    *(void *)(a1 + 40) = v11;
    *(void *)(a1 + 48) = v12;
    uint64_t v13 = a2[8];
    *(void *)(a1 + 56) = a2[7];
    *(void *)(a1 + 64) = v13;
    uint64_t v14 = a2[10];
    *(void *)(a1 + 72) = a2[9];
    *(void *)(a1 + 80) = v14;
    uint64_t v15 = a2[12];
    *(void *)(a1 + 88) = a2[11];
    *(void *)(a1 + 96) = v15;
    uint64_t v16 = a2[14];
    *(void *)(a1 + 104) = a2[13];
    *(void *)(a1 + 112) = v16;
    uint64_t v17 = a2 + 15;
    unint64_t v18 = a2[16];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v18 >> 60 == 15)
    {
      *(_OWORD *)(a1 + 120) = *(_OWORD *)v17;
    }
    else
    {
      uint64_t v20 = *v17;
      sub_1D7860790(*v17, v18);
      *(void *)(a1 + 120) = v20;
      *(void *)(a1 + 128) = v18;
    }
    uint64_t v21 = a2 + 17;
    unint64_t v22 = a2[18];
    if (v22 >> 60 == 15)
    {
      *(_OWORD *)(a1 + 136) = *(_OWORD *)v21;
    }
    else
    {
      uint64_t v23 = *v21;
      sub_1D7860790(*v21, a2[18]);
      *(void *)(a1 + 136) = v23;
      *(void *)(a1 + 144) = v22;
    }
    uint64_t v24 = a3[14];
    uint64_t v25 = (void *)(a1 + v24);
    uint64_t v26 = (char *)a2 + v24;
    uint64_t v27 = sub_1D7A9B148();
    uint64_t v28 = *(void *)(v27 - 8);
    uint64_t v29 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48);
    if (v29(v26, 1, v27))
    {
      uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF9118);
      memcpy(v25, v26, *(void *)(*(void *)(v30 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v28 + 16))(v25, v26, v27);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
    }
    uint64_t v31 = a3[15];
    uint64_t v32 = (void *)(a1 + v31);
    uint64_t v33 = (char *)a2 + v31;
    if (v29((char *)a2 + v31, 1, v27))
    {
      uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF9118);
      memcpy(v32, v33, *(void *)(*(void *)(v34 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v28 + 16))(v32, v33, v27);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v28 + 56))(v32, 0, 1, v27);
    }
    uint64_t v35 = a3[16];
    uint64_t v36 = *(uint64_t *)((char *)a2 + v35);
    if (v36 == 1)
    {
      *(void *)(a1 + v35) = 1;
    }
    else
    {
      *(void *)(a1 + v35) = v36;
      swift_bridgeObjectRetain();
    }
  }
  return a1;
}

uint64_t destroy for VICALCertificateInfo(uint64_t *a1, int *a2)
{
  sub_1D78607E8(*a1, a1[1]);
  sub_1D78607E8(a1[3], a1[4]);
  sub_1D78607E8(a1[5], a1[6]);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v4 = a1[16];
  if (v4 >> 60 != 15) {
    sub_1D78607E8(a1[15], v4);
  }
  unint64_t v5 = a1[18];
  if (v5 >> 60 != 15) {
    sub_1D78607E8(a1[17], v5);
  }
  uint64_t v6 = (char *)a1 + a2[14];
  uint64_t v7 = sub_1D7A9B148();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
  if (!v9(v6, 1, v7)) {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v6, v7);
  }
  unint64_t v10 = (char *)a1 + a2[15];
  if (!v9(v10, 1, v7)) {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  uint64_t result = *(uint64_t *)((char *)a1 + a2[16]);
  if (result != 1)
  {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for VICALCertificateInfo(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v6 = *a2;
  unint64_t v7 = a2[1];
  sub_1D7860790(*a2, v7);
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v7;
  uint64_t v8 = a2[3];
  *(void *)(a1 + 16) = a2[2];
  unint64_t v9 = a2[4];
  sub_1D7860790(v8, v9);
  *(void *)(a1 + 24) = v8;
  *(void *)(a1 + 32) = v9;
  uint64_t v10 = a2[5];
  unint64_t v11 = a2[6];
  sub_1D7860790(v10, v11);
  *(void *)(a1 + 40) = v10;
  *(void *)(a1 + 48) = v11;
  uint64_t v12 = a2[8];
  *(void *)(a1 + 56) = a2[7];
  *(void *)(a1 + 64) = v12;
  uint64_t v13 = a2[10];
  *(void *)(a1 + 72) = a2[9];
  *(void *)(a1 + 80) = v13;
  uint64_t v14 = a2[12];
  *(void *)(a1 + 88) = a2[11];
  *(void *)(a1 + 96) = v14;
  uint64_t v15 = a2[14];
  *(void *)(a1 + 104) = a2[13];
  *(void *)(a1 + 112) = v15;
  uint64_t v16 = a2 + 15;
  unint64_t v17 = a2[16];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v17 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 120) = *(_OWORD *)v16;
  }
  else
  {
    uint64_t v18 = *v16;
    sub_1D7860790(*v16, v17);
    *(void *)(a1 + 120) = v18;
    *(void *)(a1 + 128) = v17;
  }
  uint64_t v19 = a2 + 17;
  unint64_t v20 = a2[18];
  if (v20 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 136) = *(_OWORD *)v19;
  }
  else
  {
    uint64_t v21 = *v19;
    sub_1D7860790(*v19, a2[18]);
    *(void *)(a1 + 136) = v21;
    *(void *)(a1 + 144) = v20;
  }
  uint64_t v22 = a3[14];
  uint64_t v23 = (void *)(a1 + v22);
  uint64_t v24 = (char *)a2 + v22;
  uint64_t v25 = sub_1D7A9B148();
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v27 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48);
  if (v27(v24, 1, v25))
  {
    uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF9118);
    memcpy(v23, v24, *(void *)(*(void *)(v28 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v26 + 16))(v23, v24, v25);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
  }
  uint64_t v29 = a3[15];
  uint64_t v30 = (void *)(a1 + v29);
  uint64_t v31 = (char *)a2 + v29;
  if (v27((char *)a2 + v29, 1, v25))
  {
    uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF9118);
    memcpy(v30, v31, *(void *)(*(void *)(v32 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v26 + 16))(v30, v31, v25);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v26 + 56))(v30, 0, 1, v25);
  }
  uint64_t v33 = a3[16];
  uint64_t v34 = *(uint64_t *)((char *)a2 + v33);
  if (v34 != 1) {
    uint64_t v34 = swift_bridgeObjectRetain();
  }
  *(void *)(a1 + v33) = v34;
  return a1;
}

uint64_t *assignWithCopy for VICALCertificateInfo(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v6 = *a2;
  unint64_t v7 = a2[1];
  sub_1D7860790(*a2, v7);
  uint64_t v8 = *a1;
  unint64_t v9 = a1[1];
  *a1 = v6;
  a1[1] = v7;
  sub_1D78607E8(v8, v9);
  a1[2] = a2[2];
  uint64_t v10 = a2[3];
  unint64_t v11 = a2[4];
  sub_1D7860790(v10, v11);
  uint64_t v12 = a1[3];
  unint64_t v13 = a1[4];
  a1[3] = v10;
  a1[4] = v11;
  sub_1D78607E8(v12, v13);
  uint64_t v14 = a2[5];
  unint64_t v15 = a2[6];
  sub_1D7860790(v14, v15);
  uint64_t v16 = a1[5];
  unint64_t v17 = a1[6];
  a1[5] = v14;
  a1[6] = v15;
  sub_1D78607E8(v16, v17);
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[9] = a2[9];
  a1[10] = a2[10];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[11] = a2[11];
  a1[12] = a2[12];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[13] = a2[13];
  a1[14] = a2[14];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v18 = a2 + 15;
  unint64_t v19 = a2[16];
  if ((unint64_t)a1[16] >> 60 == 15)
  {
    if (v19 >> 60 != 15)
    {
      uint64_t v20 = *v18;
      sub_1D7860790(*v18, a2[16]);
      a1[15] = v20;
      a1[16] = v19;
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v19 >> 60 == 15)
  {
    sub_1D7870C24((uint64_t)(a1 + 15));
LABEL_6:
    *(_OWORD *)(a1 + 15) = *(_OWORD *)v18;
    goto LABEL_8;
  }
  uint64_t v21 = *v18;
  sub_1D7860790(*v18, a2[16]);
  uint64_t v22 = a1[15];
  unint64_t v23 = a1[16];
  a1[15] = v21;
  a1[16] = v19;
  sub_1D78607E8(v22, v23);
LABEL_8:
  uint64_t v24 = a2 + 17;
  unint64_t v25 = a2[18];
  if ((unint64_t)a1[18] >> 60 == 15)
  {
    if (v25 >> 60 != 15)
    {
      uint64_t v26 = *v24;
      sub_1D7860790(*v24, a2[18]);
      a1[17] = v26;
      a1[18] = v25;
      goto LABEL_15;
    }
    goto LABEL_13;
  }
  if (v25 >> 60 == 15)
  {
    sub_1D7870C24((uint64_t)(a1 + 17));
LABEL_13:
    *(_OWORD *)(a1 + 17) = *(_OWORD *)v24;
    goto LABEL_15;
  }
  uint64_t v27 = *v24;
  sub_1D7860790(*v24, a2[18]);
  uint64_t v28 = a1[17];
  unint64_t v29 = a1[18];
  a1[17] = v27;
  a1[18] = v25;
  sub_1D78607E8(v28, v29);
LABEL_15:
  uint64_t v30 = a3[14];
  uint64_t v31 = (char *)a1 + v30;
  uint64_t v32 = (char *)a2 + v30;
  uint64_t v33 = sub_1D7A9B148();
  uint64_t v34 = *(void *)(v33 - 8);
  uint64_t v35 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v34 + 48);
  int v36 = v35(v31, 1, v33);
  int v37 = v35(v32, 1, v33);
  if (v36)
  {
    if (!v37)
    {
      (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v31, v32, v33);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
      goto LABEL_21;
    }
    goto LABEL_20;
  }
  if (v37)
  {
    (*(void (**)(char *, uint64_t))(v34 + 8))(v31, v33);
LABEL_20:
    uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF9118);
    memcpy(v31, v32, *(void *)(*(void *)(v38 - 8) + 64));
    goto LABEL_21;
  }
  (*(void (**)(char *, char *, uint64_t))(v34 + 24))(v31, v32, v33);
LABEL_21:
  uint64_t v39 = a3[15];
  uint64_t v40 = (char *)a1 + v39;
  uint64_t v41 = (char *)a2 + v39;
  int v42 = v35((char *)a1 + v39, 1, v33);
  int v43 = v35(v41, 1, v33);
  if (v42)
  {
    if (!v43)
    {
      (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v40, v41, v33);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v34 + 56))(v40, 0, 1, v33);
      goto LABEL_27;
    }
    goto LABEL_26;
  }
  if (v43)
  {
    (*(void (**)(char *, uint64_t))(v34 + 8))(v40, v33);
LABEL_26:
    uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF9118);
    memcpy(v40, v41, *(void *)(*(void *)(v44 - 8) + 64));
    goto LABEL_27;
  }
  (*(void (**)(char *, char *, uint64_t))(v34 + 24))(v40, v41, v33);
LABEL_27:
  uint64_t v45 = a3[16];
  uint64_t v46 = (uint64_t *)((char *)a1 + v45);
  uint64_t v47 = *(uint64_t *)((char *)a2 + v45);
  if (*(uint64_t *)((char *)a1 + v45) == 1)
  {
    if (v47 != 1)
    {
      *uint64_t v46 = v47;
      swift_bridgeObjectRetain();
      return a1;
    }
    uint64_t v48 = 1;
  }
  else
  {
    if (v47 != 1)
    {
      *uint64_t v46 = v47;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1D79FF320((uint64_t)a1 + v45);
    uint64_t v48 = *(uint64_t *)((char *)a2 + v45);
  }
  *uint64_t v46 = v48;
  return a1;
}

uint64_t sub_1D79FF320(uint64_t a1)
{
  return a1;
}

uint64_t initializeWithTake for VICALCertificateInfo(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  uint64_t v7 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v7;
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  uint64_t v8 = a3[14];
  unint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (const void *)(a2 + v8);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  uint64_t v11 = sub_1D7A9B148();
  uint64_t v12 = *(void *)(v11 - 8);
  unint64_t v13 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48);
  if (v13(v10, 1, v11))
  {
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF9118);
    memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v12 + 32))(v9, v10, v11);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  uint64_t v15 = a3[15];
  uint64_t v16 = (void *)(a1 + v15);
  unint64_t v17 = (const void *)(a2 + v15);
  if (v13((const void *)(a2 + v15), 1, v11))
  {
    uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF9118);
    memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v12 + 32))(v16, v17, v11);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v16, 0, 1, v11);
  }
  *(void *)(a1 + a3[16]) = *(void *)(a2 + a3[16]);
  return a1;
}

uint64_t assignWithTake for VICALCertificateInfo(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)a1;
  unint64_t v7 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  sub_1D78607E8(v6, v7);
  uint64_t v8 = *(void *)(a2 + 32);
  uint64_t v9 = *(void *)(a1 + 24);
  unint64_t v10 = *(void *)(a1 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = v8;
  sub_1D78607E8(v9, v10);
  uint64_t v11 = *(void *)(a1 + 40);
  unint64_t v12 = *(void *)(a1 + 48);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  sub_1D78607E8(v11, v12);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRelease();
  uint64_t v13 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v13;
  swift_bridgeObjectRelease();
  uint64_t v14 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v14;
  swift_bridgeObjectRelease();
  uint64_t v15 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v15;
  swift_bridgeObjectRelease();
  uint64_t v16 = (_OWORD *)(a2 + 120);
  unint64_t v17 = *(void *)(a1 + 128);
  if (v17 >> 60 == 15) {
    goto LABEL_4;
  }
  unint64_t v18 = *(void *)(a2 + 128);
  if (v18 >> 60 == 15)
  {
    sub_1D7870C24(a1 + 120);
LABEL_4:
    *(_OWORD *)(a1 + 120) = *v16;
    goto LABEL_6;
  }
  uint64_t v19 = *(void *)(a1 + 120);
  *(void *)(a1 + 120) = *(void *)v16;
  *(void *)(a1 + 128) = v18;
  sub_1D78607E8(v19, v17);
LABEL_6:
  uint64_t v20 = (_OWORD *)(a2 + 136);
  unint64_t v21 = *(void *)(a1 + 144);
  if (v21 >> 60 == 15)
  {
LABEL_9:
    *(_OWORD *)(a1 + 136) = *v20;
    goto LABEL_11;
  }
  unint64_t v22 = *(void *)(a2 + 144);
  if (v22 >> 60 == 15)
  {
    sub_1D7870C24(a1 + 136);
    goto LABEL_9;
  }
  uint64_t v23 = *(void *)(a1 + 136);
  *(void *)(a1 + 136) = *(void *)v20;
  *(void *)(a1 + 144) = v22;
  sub_1D78607E8(v23, v21);
LABEL_11:
  uint64_t v24 = a3[14];
  unint64_t v25 = (void *)(a1 + v24);
  uint64_t v26 = (void *)(a2 + v24);
  uint64_t v27 = sub_1D7A9B148();
  uint64_t v28 = *(void *)(v27 - 8);
  unint64_t v29 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v28 + 48);
  int v30 = v29(v25, 1, v27);
  int v31 = v29(v26, 1, v27);
  if (v30)
  {
    if (!v31)
    {
      (*(void (**)(void *, void *, uint64_t))(v28 + 32))(v25, v26, v27);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
      goto LABEL_17;
    }
    goto LABEL_16;
  }
  if (v31)
  {
    (*(void (**)(void *, uint64_t))(v28 + 8))(v25, v27);
LABEL_16:
    uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF9118);
    memcpy(v25, v26, *(void *)(*(void *)(v32 - 8) + 64));
    goto LABEL_17;
  }
  (*(void (**)(void *, void *, uint64_t))(v28 + 40))(v25, v26, v27);
LABEL_17:
  uint64_t v33 = a3[15];
  uint64_t v34 = (void *)(a1 + v33);
  uint64_t v35 = (void *)(a2 + v33);
  int v36 = v29((void *)(a1 + v33), 1, v27);
  int v37 = v29(v35, 1, v27);
  if (v36)
  {
    if (!v37)
    {
      (*(void (**)(void *, void *, uint64_t))(v28 + 32))(v34, v35, v27);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v28 + 56))(v34, 0, 1, v27);
      goto LABEL_23;
    }
    goto LABEL_22;
  }
  if (v37)
  {
    (*(void (**)(void *, uint64_t))(v28 + 8))(v34, v27);
LABEL_22:
    uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF9118);
    memcpy(v34, v35, *(void *)(*(void *)(v38 - 8) + 64));
    goto LABEL_23;
  }
  (*(void (**)(void *, void *, uint64_t))(v28 + 40))(v34, v35, v27);
LABEL_23:
  uint64_t v39 = a3[16];
  uint64_t v40 = (void *)(a1 + v39);
  uint64_t v41 = *(void *)(a2 + v39);
  if (*(void *)(a1 + v39) != 1)
  {
    if (v41 != 1)
    {
      *uint64_t v40 = v41;
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1D79FF320(a1 + v39);
    uint64_t v41 = *(void *)(a2 + v39);
  }
  *uint64_t v40 = v41;
  return a1;
}

uint64_t getEnumTagSinglePayload for VICALCertificateInfo(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1D79FF96C);
}

uint64_t sub_1D79FF96C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 56);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF9118);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 56);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for VICALCertificateInfo(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1D79FFA34);
}

uint64_t sub_1D79FFA34(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 56) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF9118);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 56);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_1D79FFAE0()
{
  sub_1D787010C();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

ValueMetadata *type metadata accessor for VICALCertificateInfo.Extensions()
{
  return &type metadata for VICALCertificateInfo.Extensions;
}

unsigned char *storeEnumTagSinglePayload for VICALCertificateInfo.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 12 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 12) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF4) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF3)
  {
    unsigned int v6 = ((a2 - 244) >> 8) + 1;
    *uint64_t result = a2 + 12;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D79FFC9CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 12;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for VICALCertificateInfo.CodingKeys()
{
  return &type metadata for VICALCertificateInfo.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for VICALCertificateInfo.Extensions.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1D79FFD70);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for VICALCertificateInfo.Extensions.CodingKeys()
{
  return &type metadata for VICALCertificateInfo.Extensions.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for VICALDocument.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D79FFE74);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for VICALDocument.CodingKeys()
{
  return &type metadata for VICALDocument.CodingKeys;
}

unint64_t sub_1D79FFEB0()
{
  unint64_t result = qword_1EA846B78;
  if (!qword_1EA846B78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA846B78);
  }
  return result;
}

unint64_t sub_1D79FFF08()
{
  unint64_t result = qword_1EA846B80;
  if (!qword_1EA846B80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA846B80);
  }
  return result;
}

unint64_t sub_1D79FFF60()
{
  unint64_t result = qword_1EA846B88;
  if (!qword_1EA846B88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA846B88);
  }
  return result;
}

unint64_t sub_1D79FFFB8()
{
  unint64_t result = qword_1EA846B90;
  if (!qword_1EA846B90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA846B90);
  }
  return result;
}

unint64_t sub_1D7A00010()
{
  unint64_t result = qword_1EA846B98;
  if (!qword_1EA846B98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA846B98);
  }
  return result;
}

unint64_t sub_1D7A00068()
{
  unint64_t result = qword_1EA846BA0;
  if (!qword_1EA846BA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA846BA0);
  }
  return result;
}

unint64_t sub_1D7A000C0()
{
  unint64_t result = qword_1EA846BA8;
  if (!qword_1EA846BA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA846BA8);
  }
  return result;
}

unint64_t sub_1D7A00118()
{
  unint64_t result = qword_1EA846BB0;
  if (!qword_1EA846BB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA846BB0);
  }
  return result;
}

unint64_t sub_1D7A00170()
{
  unint64_t result = qword_1EA846BB8;
  if (!qword_1EA846BB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA846BB8);
  }
  return result;
}

uint64_t sub_1D7A001C4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E6F6973726576 && a2 == 0xE700000000000000;
  if (v2 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6F72506C61636976 && a2 == 0xED00007265646976 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1702125924 && a2 == 0xE400000000000000 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7373496C61636976 && a2 == 0xED00004449726575 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x616470557478656ELL && a2 == 0xEA00000000006574 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001D7AC89C0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v6 = sub_1D7A9D358();
    swift_bridgeObjectRelease();
    if (v6) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

uint64_t sub_1D7A00488(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000019 && a2 == 0x80000001D7AC89E0)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = sub_1D7A9D358();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t sub_1D7A00510()
{
  unint64_t v0 = sub_1D7A9D058();
  swift_bridgeObjectRelease();
  if (v0 >= 0xD) {
    return 13;
  }
  else {
    return v0;
  }
}

uint64_t static ISO18013ReaderRequest.supportedVersion.getter()
{
  return 3157553;
}

uint64_t ISO18013ReaderRequest.version.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ISO18013ReaderRequest.docRequests.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1D7A005A4(char *a1, char *a2)
{
  return sub_1D7996708(*a1, *a2);
}

uint64_t sub_1D7A005B0()
{
  return sub_1D7A9D628();
}

uint64_t sub_1D7A0063C()
{
  sub_1D7A9C0B8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D7A006B4()
{
  return sub_1D7A9D628();
}

uint64_t sub_1D7A0073C@<X0>(char *a1@<X8>)
{
  return sub_1D79835B0(a1);
}

void sub_1D7A00748(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x6E6F6973726576;
  if (*v1) {
    uint64_t v2 = 0x6575716552636F64;
  }
  unint64_t v3 = 0xE700000000000000;
  if (*v1) {
    unint64_t v3 = 0xEB00000000737473;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1D7A00790()
{
  if (*v0) {
    return 0x6575716552636F64;
  }
  else {
    return 0x6E6F6973726576;
  }
}

uint64_t sub_1D7A007D4@<X0>(char *a1@<X8>)
{
  return sub_1D798369C(a1);
}

uint64_t sub_1D7A007E0(uint64_t a1)
{
  unint64_t v2 = sub_1D7A00DAC();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D7A0081C(uint64_t a1)
{
  unint64_t v2 = sub_1D7A00DAC();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D7A00858@<X0>(char *a1@<X8>)
{
  return sub_1D79835B0(a1);
}

uint64_t sub_1D7A00864@<X0>(char *a1@<X8>)
{
  return sub_1D798369C(a1);
}

uint64_t sub_1D7A00870(uint64_t a1)
{
  unint64_t v2 = sub_1D7A00D0C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D7A008AC(uint64_t a1)
{
  unint64_t v2 = sub_1D7A00D0C();
  return MEMORY[0x1F41862B0](a1, v2);
}

CoreIDVShared::ISO18013ReaderRequest __swiftcall ISO18013ReaderRequest.init(version:docRequests:)(Swift::String version, Swift::OpaquePointer docRequests)
{
  *(Swift::String *)uint64_t v2 = version;
  *(Swift::OpaquePointer *)(v2 + 16) = docRequests;
  result.version = version;
  result.docRequests = docRequests;
  return result;
}

uint64_t ISO18013ReaderRequest.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v39 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA846BC0);
  uint64_t v40 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3, v4, v5, v6, v7, v8, v9, v10);
  uint64_t v41 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA846BC8);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12, v14, v15, v16, v17, v18, v19, v20);
  unint64_t v22 = (char *)&v38 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = a1[3];
  uint64_t v24 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v23);
  Decoder.codingKeyFormat.getter(v23, v24, &v45);
  char v25 = v45;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  if ((v25 & 1) == 0)
  {
    sub_1D7A00DAC();
    uint64_t v30 = v42;
    sub_1D7A9D6A8();
    if (!v30)
    {
      LOBYTE(v43) = 0;
      uint64_t v32 = sub_1D7A9D0F8();
      uint64_t v34 = v35;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA846BD8);
      char v44 = 1;
      sub_1D7A01158(&qword_1EA846BE0, &qword_1EA846BE8);
      sub_1D7A9D148();
      (*(void (**)(char *, uint64_t))(v13 + 8))(v22, v12);
      goto LABEL_7;
    }
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v26 = v40;
  sub_1D7A00D0C();
  uint64_t v28 = v41;
  uint64_t v27 = v42;
  sub_1D7A9D6A8();
  if (v27) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  LOBYTE(v43) = 0;
  uint64_t v29 = v3;
  uint64_t v32 = sub_1D7A9D0F8();
  uint64_t v34 = v33;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA846BD8);
  char v44 = 1;
  sub_1D7A01158(&qword_1EA846BE0, &qword_1EA846BE8);
  sub_1D7A9D148();
  (*(void (**)(char *, uint64_t))(v26 + 8))(v28, v29);
LABEL_7:
  uint64_t v36 = v43;
  int v37 = v39;
  uint64_t *v39 = v32;
  v37[1] = v34;
  _OWORD v37[2] = v36;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

unint64_t sub_1D7A00D0C()
{
  unint64_t result = qword_1EA846BD0;
  if (!qword_1EA846BD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA846BD0);
  }
  return result;
}

uint64_t type metadata accessor for ISO18013ReaderRequest.DocRequest()
{
  uint64_t result = qword_1EA846CD8;
  if (!qword_1EA846CD8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_1D7A00DAC()
{
  unint64_t result = qword_1EA846BF0;
  if (!qword_1EA846BF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA846BF0);
  }
  return result;
}

uint64_t ISO18013ReaderRequest.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA846BF8);
  uint64_t v33 = *(void *)(v3 - 8);
  uint64_t v34 = v3;
  MEMORY[0x1F4188790](v3, v4, v5, v6, v7, v8, v9, v10);
  uint64_t v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA846C00);
  uint64_t v32 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13, v14, v15, v16, v17, v18, v19, v20);
  unint64_t v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = *v1;
  uint64_t v31 = v1[2];
  uint64_t v23 = a1[3];
  uint64_t v24 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v23);
  Encoder.codingKeyFormat.getter(v23, v24, &v39);
  char v25 = v39;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  if (v25)
  {
    sub_1D7A00D0C();
    sub_1D7A9D6E8();
    LOBYTE(v37) = 0;
    uint64_t v26 = v34;
    uint64_t v27 = v36;
    sub_1D7A9D1D8();
    if (!v27)
    {
      uint64_t v37 = v31;
      char v38 = 1;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA846BD8);
      sub_1D7A01158(&qword_1EA846C08, &qword_1EA846C10);
      sub_1D7A9D228();
    }
    return (*(uint64_t (**)(char *, uint64_t))(v33 + 8))(v12, v26);
  }
  else
  {
    sub_1D7A00DAC();
    sub_1D7A9D6E8();
    LOBYTE(v37) = 0;
    uint64_t v29 = v36;
    sub_1D7A9D1D8();
    if (!v29)
    {
      uint64_t v37 = v31;
      char v38 = 1;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA846BD8);
      sub_1D7A01158(&qword_1EA846C08, &qword_1EA846C10);
      sub_1D7A9D228();
    }
    return (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v22, v13);
  }
}

uint64_t sub_1D7A01158(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA846BD8);
    sub_1D7A03128(a2, (void (*)(uint64_t))type metadata accessor for ISO18013ReaderRequest.DocRequest);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1D7A011EC@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return ISO18013ReaderRequest.init(from:)(a1, a2);
}

uint64_t sub_1D7A01204(void *a1)
{
  return ISO18013ReaderRequest.encode(to:)(a1);
}

uint64_t ISO18013ReaderRequest.DocRequest.itemsRequest.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 8);
  uint64_t v3 = *(void *)(v1 + 32);
  uint64_t v4 = *(void *)(v1 + 40);
  uint64_t v5 = *(void *)(v1 + 48);
  *(void *)a1 = *(void *)v1;
  *(void *)(a1 + 8) = v2;
  long long v6 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(a1 + 16) = v6;
  *(void *)(a1 + 32) = v3;
  *(void *)(a1 + 40) = v4;
  *(void *)(a1 + 48) = v5;
  sub_1D7860790(v2, v6);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t ISO18013ReaderRequest.DocRequest.readerAuth.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ISO18013ReaderRequest.DocRequest() + 20);
  return sub_1D7A012D0(v3, a1);
}

uint64_t sub_1D7A012D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA842478);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D7A01338(char *a1, char *a2)
{
  return sub_1D79968F0(*a1, *a2);
}

uint64_t sub_1D7A01344()
{
  return sub_1D7A9D628();
}

uint64_t sub_1D7A013D4()
{
  sub_1D7A9C0B8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D7A01450()
{
  return sub_1D7A9D628();
}

uint64_t sub_1D7A014DC@<X0>(char *a1@<X8>)
{
  return sub_1D79835B0(a1);
}

void sub_1D7A014E8(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x716552736D657469;
  if (*v1) {
    uint64_t v2 = 0x7541726564616572;
  }
  unint64_t v3 = 0xEC00000074736575;
  if (*v1) {
    unint64_t v3 = 0xEA00000000006874;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1D7A01534()
{
  if (*v0) {
    return 0x7541726564616572;
  }
  else {
    return 0x716552736D657469;
  }
}

uint64_t sub_1D7A0157C@<X0>(char *a1@<X8>)
{
  return sub_1D798369C(a1);
}

uint64_t sub_1D7A01588(uint64_t a1)
{
  unint64_t v2 = sub_1D7A01D1C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D7A015C4(uint64_t a1)
{
  unint64_t v2 = sub_1D7A01D1C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D7A01600@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_1D7A9D058();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_1D7A01654@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_1D7A9D058();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_1D7A016AC(uint64_t a1)
{
  unint64_t v2 = sub_1D7A01CC8();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D7A016E8(uint64_t a1)
{
  unint64_t v2 = sub_1D7A01CC8();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t ISO18013ReaderRequest.DocRequest.init(itemsRequest:readerAuth:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = *(void *)(a1 + 48);
  long long v6 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)a3 = *(_OWORD *)a1;
  *(_OWORD *)(a3 + 16) = v6;
  *(_OWORD *)(a3 + 32) = *(_OWORD *)(a1 + 32);
  *(void *)(a3 + 48) = v5;
  uint64_t v7 = type metadata accessor for ISO18013ReaderRequest.DocRequest();
  return sub_1D7871D78(a2, a3 + *(int *)(v7 + 20), &qword_1EA842478);
}

uint64_t ISO18013ReaderRequest.DocRequest.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v58 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA846C18);
  uint64_t v61 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3, v4, v5, v6, v7, v8, v9, v10);
  char v62 = (char *)&v56 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA842478);
  MEMORY[0x1F4188790](v12 - 8, v13, v14, v15, v16, v17, v18, v19);
  uint64_t v21 = (char *)&v56 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA846C20);
  uint64_t v60 = *(void *)(v22 - 8);
  MEMORY[0x1F4188790](v22, v23, v24, v25, v26, v27, v28, v29);
  uint64_t v31 = (char *)&v56 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = type metadata accessor for ISO18013ReaderRequest.DocRequest();
  MEMORY[0x1F4188790](v57, v32, v33, v34, v35, v36, v37, v38);
  uint64_t v59 = (_OWORD *)((char *)&v56 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v40 = a1[3];
  uint64_t v41 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v40);
  Decoder.codingKeyFormat.getter(v40, v41, &v69);
  char v42 = v69;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  if ((v42 & 1) == 0)
  {
    uint64_t v51 = v60;
    sub_1D7A01D1C();
    uint64_t v52 = v63;
    sub_1D7A9D6A8();
    if (!v52)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA846C30);
      char v68 = 0;
      sub_1D7A020CC(&qword_1EA846C38);
      sub_1D7A9D148();
      uint64_t v54 = v67;
      long long v55 = v65;
      uint64_t v48 = (uint64_t)v59;
      *uint64_t v59 = v64;
      *(_OWORD *)(v48 + 16) = v55;
      *(_OWORD *)(v48 + 32) = v66;
      *(void *)(v48 + 48) = v54;
      sub_1D7A9B328();
      LOBYTE(v64) = 1;
      sub_1D7A03128(&qword_1EA843380, MEMORY[0x1E4F50D80]);
      sub_1D7A9D0E8();
      (*(void (**)(char *, uint64_t))(v51 + 8))(v31, v22);
      sub_1D7871D78((uint64_t)v21, v48 + *(int *)(v57 + 20), &qword_1EA842478);
      goto LABEL_7;
    }
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v43 = v61;
  sub_1D7A01CC8();
  char v45 = v62;
  uint64_t v44 = v63;
  sub_1D7A9D6A8();
  if (v44) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA846C30);
  sub_1D7A020CC(&qword_1EA846C38);
  sub_1D7A9D148();
  (*(void (**)(char *, uint64_t))(v43 + 8))(v45, v3);
  uint64_t v46 = v67;
  long long v47 = v65;
  uint64_t v48 = (uint64_t)v59;
  *uint64_t v59 = v64;
  *(_OWORD *)(v48 + 16) = v47;
  *(_OWORD *)(v48 + 32) = v66;
  *(void *)(v48 + 48) = v46;
  uint64_t v49 = v48 + *(int *)(v57 + 20);
  uint64_t v50 = sub_1D7A9B328();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 56))(v49, 1, 1, v50);
LABEL_7:
  sub_1D7A050EC(v48, v58, (uint64_t (*)(void))type metadata accessor for ISO18013ReaderRequest.DocRequest);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_1D7A05154(v48, (uint64_t (*)(void))type metadata accessor for ISO18013ReaderRequest.DocRequest);
}

unint64_t sub_1D7A01CC8()
{
  unint64_t result = qword_1EA846C28;
  if (!qword_1EA846C28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA846C28);
  }
  return result;
}

unint64_t sub_1D7A01D1C()
{
  unint64_t result = qword_1EA846C40;
  if (!qword_1EA846C40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA846C40);
  }
  return result;
}

uint64_t ISO18013ReaderRequest.DocRequest.encode(to:)(void *a1)
{
  unint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA846C48);
  uint64_t v34 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4, v5, v6, v7, v8, v9, v10, v11);
  uint64_t v13 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA846C50);
  uint64_t v35 = *(void *)(v14 - 8);
  uint64_t v36 = v14;
  MEMORY[0x1F4188790](v14, v15, v16, v17, v18, v19, v20, v21);
  uint64_t v23 = (char *)&v34 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = a1[3];
  uint64_t v25 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v24);
  Encoder.codingKeyFormat.getter(v24, v25, &v43);
  char v26 = v43;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  if (v26)
  {
    sub_1D7A01CC8();
    sub_1D7A9D6E8();
    uint64_t v27 = *((void *)v2 + 6);
    long long v28 = v2[1];
    long long v38 = *v2;
    long long v39 = v28;
    long long v40 = v2[2];
    uint64_t v41 = v27;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA846C30);
    sub_1D7A020CC(&qword_1EA846C58);
    sub_1D7A9D228();
    return (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v13, v4);
  }
  else
  {
    sub_1D7A01D1C();
    sub_1D7A9D6E8();
    uint64_t v30 = *((void *)v2 + 6);
    long long v31 = v2[1];
    long long v38 = *v2;
    long long v39 = v31;
    long long v40 = v2[2];
    uint64_t v41 = v30;
    char v42 = 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA846C30);
    sub_1D7A020CC(&qword_1EA846C58);
    uint64_t v33 = v36;
    uint64_t v32 = v37;
    sub_1D7A9D228();
    if (!v32)
    {
      type metadata accessor for ISO18013ReaderRequest.DocRequest();
      LOBYTE(v38) = 1;
      sub_1D7A9B328();
      sub_1D7A03128(&qword_1EA8433A8, MEMORY[0x1E4F50D80]);
      sub_1D7A9D1C8();
    }
    return (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v23, v33);
  }
}

uint64_t sub_1D7A020CC(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA846C30);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1D7A02114@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ISO18013ReaderRequest.DocRequest.init(from:)(a1, a2);
}

uint64_t sub_1D7A0212C(void *a1)
{
  return ISO18013ReaderRequest.DocRequest.encode(to:)(a1);
}

uint64_t ISO18013ReaderRequest.ItemsRequest.docType.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ISO18013ReaderRequest.ItemsRequest.namespaces.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ISO18013ReaderRequest.ItemsRequest.requestInfo.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1D7A02184(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1D79967BC(*a1, *a2);
}

uint64_t sub_1D7A02190()
{
  return sub_1D7A9D628();
}

uint64_t sub_1D7A02240()
{
  sub_1D7A9C0B8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D7A022DC()
{
  return sub_1D7A9D628();
}

uint64_t sub_1D7A02388@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1D7A050A0();
  *a1 = result;
  return result;
}

void sub_1D7A023B8(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE700000000000000;
  unint64_t v4 = 0xEA00000000007365;
  uint64_t v5 = 0x63617053656D616ELL;
  if (v2 != 1)
  {
    uint64_t v5 = 0x4974736575716572;
    unint64_t v4 = 0xEB000000006F666ELL;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x65707954636F64;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1D7A02424()
{
  uint64_t v1 = 0x63617053656D616ELL;
  if (*v0 != 1) {
    uint64_t v1 = 0x4974736575716572;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x65707954636F64;
  }
}

uint64_t sub_1D7A0248C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1D7A050A0();
  *a1 = result;
  return result;
}

uint64_t sub_1D7A024B4(uint64_t a1)
{
  unint64_t v2 = sub_1D7A02B2C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D7A024F0(uint64_t a1)
{
  unint64_t v2 = sub_1D7A02B2C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D7A0252C@<X0>(char *a1@<X8>)
{
  return sub_1D79835B0(a1);
}

uint64_t sub_1D7A02538@<X0>(char *a1@<X8>)
{
  return sub_1D798369C(a1);
}

uint64_t sub_1D7A02544(uint64_t a1)
{
  unint64_t v2 = sub_1D7A02A38();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D7A02580(uint64_t a1)
{
  unint64_t v2 = sub_1D7A02A38();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t ISO18013ReaderRequest.ItemsRequest.init(docType:namespaces:requestInfo:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  *a5 = result;
  a5[1] = a2;
  a5[2] = a3;
  a5[3] = a4;
  return result;
}

uint64_t ISO18013ReaderRequest.ItemsRequest.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  char v42 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA846C60);
  uint64_t v43 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3, v4, v5, v6, v7, v8, v9, v10);
  uint64_t v44 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA846C68);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12, v14, v15, v16, v17, v18, v19, v20);
  uint64_t v22 = (char *)&v41 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = a1[3];
  uint64_t v24 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v23);
  Decoder.codingKeyFormat.getter(v23, v24, &v48);
  char v25 = v48;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  if ((v25 & 1) == 0)
  {
    sub_1D7A02B2C();
    uint64_t v29 = v45;
    sub_1D7A9D6A8();
    if (!v29)
    {
      LOBYTE(v46) = 0;
      uint64_t v30 = v12;
      uint64_t v32 = sub_1D7A9D0F8();
      uint64_t v36 = v35;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA846C78);
      char v47 = 1;
      sub_1D7A02A8C();
      sub_1D7A9D148();
      uint64_t v45 = v36;
      uint64_t v38 = v46;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA846CA0);
      char v47 = 2;
      sub_1D7A02B80();
      sub_1D7A9D0E8();
      (*(void (**)(char *, uint64_t))(v13 + 8))(v22, v30);
      uint64_t v37 = v46;
      goto LABEL_7;
    }
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v26 = v43;
  sub_1D7A02A38();
  long long v28 = v44;
  uint64_t v27 = v45;
  sub_1D7A9D6A8();
  if (v27) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  LOBYTE(v46) = 0;
  uint64_t v32 = sub_1D7A9D0F8();
  uint64_t v34 = v33;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA846C78);
  char v47 = 1;
  sub_1D7A02A8C();
  sub_1D7A9D148();
  uint64_t v45 = v34;
  (*(void (**)(char *, uint64_t))(v26 + 8))(v28, v3);
  uint64_t v37 = 0;
  uint64_t v38 = v46;
LABEL_7:
  long long v39 = v42;
  uint64_t v40 = v45;
  uint64_t *v42 = v32;
  v39[1] = v40;
  _OWORD v39[2] = v38;
  v39[3] = v37;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

unint64_t sub_1D7A02A38()
{
  unint64_t result = qword_1EA846C70;
  if (!qword_1EA846C70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA846C70);
  }
  return result;
}

unint64_t sub_1D7A02A8C()
{
  unint64_t result = qword_1EA846C80;
  if (!qword_1EA846C80)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA846C78);
    sub_1D7A03014(&qword_1EA846C88);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA846C80);
  }
  return result;
}

unint64_t sub_1D7A02B2C()
{
  unint64_t result = qword_1EA846C98;
  if (!qword_1EA846C98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA846C98);
  }
  return result;
}

unint64_t sub_1D7A02B80()
{
  unint64_t result = qword_1EA846CA8;
  if (!qword_1EA846CA8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA846CA0);
    sub_1D7A03128(&qword_1EA843D60, (void (*)(uint64_t))type metadata accessor for AnyCodable);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA846CA8);
  }
  return result;
}

uint64_t ISO18013ReaderRequest.ItemsRequest.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA846CB0);
  uint64_t v36 = *(void *)(v3 - 8);
  uint64_t v37 = v3;
  MEMORY[0x1F4188790](v3, v4, v5, v6, v7, v8, v9, v10);
  uint64_t v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA846CB8);
  uint64_t v13 = *(void *)(v38 - 8);
  MEMORY[0x1F4188790](v38, v14, v15, v16, v17, v18, v19, v20);
  uint64_t v22 = (char *)&v35 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = *v1;
  uint64_t v39 = v1[1];
  uint64_t v40 = v23;
  uint64_t v24 = v1[3];
  uint64_t v35 = v1[2];
  uint64_t v25 = a1[3];
  uint64_t v26 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v25);
  Encoder.codingKeyFormat.getter(v25, v26, &v44);
  char v27 = v44;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  if (v27)
  {
    uint64_t v28 = v36;
    sub_1D7A02A38();
    sub_1D7A9D6E8();
    LOBYTE(v42) = 0;
    uint64_t v29 = v37;
    uint64_t v30 = v41;
    sub_1D7A9D1D8();
    if (!v30)
    {
      uint64_t v42 = v35;
      char v43 = 1;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA846C78);
      sub_1D7A02F74();
      sub_1D7A9D228();
    }
    return (*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v12, v29);
  }
  else
  {
    uint64_t v32 = v24;
    sub_1D7A02B2C();
    sub_1D7A9D6E8();
    LOBYTE(v42) = 0;
    uint64_t v33 = v38;
    uint64_t v34 = v41;
    sub_1D7A9D1D8();
    if (!v34)
    {
      uint64_t v42 = v35;
      char v43 = 1;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA846C78);
      sub_1D7A02F74();
      sub_1D7A9D228();
      uint64_t v42 = v32;
      char v43 = 2;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA846CA0);
      sub_1D7A0307C();
      sub_1D7A9D1C8();
    }
    return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v22, v33);
  }
}

unint64_t sub_1D7A02F74()
{
  unint64_t result = qword_1EA846CC0;
  if (!qword_1EA846CC0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA846C78);
    sub_1D7A03014(&qword_1EA846CC8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA846CC0);
  }
  return result;
}

uint64_t sub_1D7A03014(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA846C90);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1D7A0307C()
{
  unint64_t result = qword_1EA846CD0;
  if (!qword_1EA846CD0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA846CA0);
    sub_1D7A03128(&qword_1EA843D90, (void (*)(uint64_t))type metadata accessor for AnyCodable);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA846CD0);
  }
  return result;
}

uint64_t sub_1D7A03128(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1D7A03174(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  uint64_t v2 = result;
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v3 = 0;
  uint64_t v4 = result + 64;
  uint64_t v5 = 1 << *(unsigned char *)(result + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(result + 64);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      unint64_t v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v10 = v9 | (v3 << 6);
      goto LABEL_24;
    }
    int64_t v11 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v11 >= v8) {
      return 1;
    }
    unint64_t v12 = *(void *)(v4 + 8 * v11);
    ++v3;
    if (!v12)
    {
      int64_t v3 = v11 + 1;
      if (v11 + 1 >= v8) {
        return 1;
      }
      unint64_t v12 = *(void *)(v4 + 8 * v3);
      if (!v12)
      {
        int64_t v3 = v11 + 2;
        if (v11 + 2 >= v8) {
          return 1;
        }
        unint64_t v12 = *(void *)(v4 + 8 * v3);
        if (!v12)
        {
          int64_t v3 = v11 + 3;
          if (v11 + 3 >= v8) {
            return 1;
          }
          unint64_t v12 = *(void *)(v4 + 8 * v3);
          if (!v12) {
            break;
          }
        }
      }
    }
LABEL_23:
    unint64_t v7 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v3 << 6);
LABEL_24:
    uint64_t v14 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v10);
    uint64_t v15 = *v14;
    uint64_t v16 = v14[1];
    uint64_t v17 = *(void *)(*(void *)(v2 + 56) + 8 * v10);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1D7A18684(v15, v16);
    char v19 = v18;
    swift_bridgeObjectRelease();
    if ((v19 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
    uint64_t v20 = swift_bridgeObjectRetain();
    char v21 = sub_1D7A03828(v20, v17);
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    if ((v21 & 1) == 0) {
      return 0;
    }
  }
  int64_t v13 = v11 + 4;
  if (v13 >= v8) {
    return 1;
  }
  unint64_t v12 = *(void *)(v4 + 8 * v13);
  if (v12)
  {
    int64_t v3 = v13;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v3 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v3 >= v8) {
      return 1;
    }
    unint64_t v12 = *(void *)(v4 + 8 * v3);
    ++v13;
    if (v12) {
      goto LABEL_23;
    }
  }
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_1D7A03354(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AnyCodable();
  uint64_t v76 = *(void *)(v4 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v4 - 8, v5, v6, v7, v8, v9, v10, v11);
  uint64_t v74 = (uint64_t)&v69 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12, v14, v15, v16, v17, v18, v19, v20);
  uint64_t v22 = (char *)&v69 - v21;
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA845398);
  uint64_t v31 = MEMORY[0x1F4188790](v23 - 8, v24, v25, v26, v27, v28, v29, v30);
  uint64_t v33 = (uint64_t *)((char *)&v69 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t result = MEMORY[0x1F4188790](v31, v34, v35, v36, v37, v38, v39, v40);
  char v43 = (uint64_t *)((char *)&v69 - v42);
  if (a1 == a2) {
    return 1;
  }
  if (*(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v75 = 0;
  uint64_t v73 = a1;
  uint64_t v44 = *(void *)(a1 + 64);
  uint64_t v71 = a1 + 64;
  uint64_t v45 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v46 = -1;
  if (v45 < 64) {
    uint64_t v46 = ~(-1 << v45);
  }
  unint64_t v47 = v46 & v44;
  int64_t v72 = (unint64_t)(v45 + 63) >> 6;
  int64_t v70 = v72 - 1;
  while (1)
  {
    if (v47)
    {
      unint64_t v48 = __clz(__rbit64(v47));
      v47 &= v47 - 1;
      unint64_t v49 = v48 | (v75 << 6);
LABEL_8:
      uint64_t v50 = *(void *)(v73 + 56);
      uint64_t v51 = (void *)(*(void *)(v73 + 48) + 16 * v49);
      uint64_t v52 = v51[1];
      *uint64_t v33 = *v51;
      v33[1] = v52;
      uint64_t v53 = v50 + *(void *)(v76 + 72) * v49;
      uint64_t v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8453A0);
      sub_1D7A050EC(v53, (uint64_t)v33 + *(int *)(v54 + 48), (uint64_t (*)(void))type metadata accessor for AnyCodable);
      (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v54 - 8) + 56))(v33, 0, 1, v54);
      swift_bridgeObjectRetain();
      goto LABEL_30;
    }
    int64_t v55 = v75 + 1;
    if (__OFADD__(v75, 1))
    {
      __break(1u);
      goto LABEL_39;
    }
    if (v55 < v72)
    {
      unint64_t v56 = *(void *)(v71 + 8 * v55);
      if (v56) {
        goto LABEL_12;
      }
      int64_t v57 = v75 + 2;
      ++v75;
      if (v55 + 1 < v72)
      {
        unint64_t v56 = *(void *)(v71 + 8 * v57);
        if (v56) {
          goto LABEL_15;
        }
        int64_t v75 = v55 + 1;
        if (v55 + 2 < v72)
        {
          unint64_t v56 = *(void *)(v71 + 8 * (v55 + 2));
          if (v56)
          {
            v55 += 2;
            goto LABEL_12;
          }
          int64_t v75 = v55 + 2;
          if (v55 + 3 < v72)
          {
            unint64_t v56 = *(void *)(v71 + 8 * (v55 + 3));
            if (v56)
            {
              v55 += 3;
              goto LABEL_12;
            }
            int64_t v57 = v55 + 4;
            int64_t v75 = v55 + 3;
            if (v55 + 4 < v72) {
              break;
            }
          }
        }
      }
    }
LABEL_29:
    uint64_t v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8453A0);
    (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v58 - 8) + 56))(v33, 1, 1, v58);
    unint64_t v47 = 0;
LABEL_30:
    sub_1D7871D78((uint64_t)v33, (uint64_t)v43, &qword_1EA845398);
    uint64_t v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8453A0);
    int v60 = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v59 - 8) + 48))(v43, 1, v59);
    BOOL v61 = v60 == 1;
    if (v60 == 1) {
      return v61;
    }
    uint64_t v63 = *v43;
    uint64_t v62 = v43[1];
    sub_1D7969D70((uint64_t)v43 + *(int *)(v59 + 48), (uint64_t)v22);
    uint64_t v64 = sub_1D7A18684(v63, v62);
    LOBYTE(v63) = v65;
    swift_bridgeObjectRelease();
    if ((v63 & 1) == 0)
    {
      sub_1D7A05154((uint64_t)v22, (uint64_t (*)(void))type metadata accessor for AnyCodable);
      return 0;
    }
    uint64_t v66 = *(void *)(a2 + 56) + *(void *)(v76 + 72) * v64;
    uint64_t v67 = v74;
    sub_1D7A050EC(v66, v74, (uint64_t (*)(void))type metadata accessor for AnyCodable);
    char v68 = static AnyCodable.== infix(_:_:)(v67, v22);
    sub_1D7A05154(v67, (uint64_t (*)(void))type metadata accessor for AnyCodable);
    uint64_t result = sub_1D7A05154((uint64_t)v22, (uint64_t (*)(void))type metadata accessor for AnyCodable);
    if ((v68 & 1) == 0) {
      return v61;
    }
  }
  unint64_t v56 = *(void *)(v71 + 8 * v57);
  if (v56)
  {
LABEL_15:
    int64_t v55 = v57;
LABEL_12:
    unint64_t v47 = (v56 - 1) & v56;
    unint64_t v49 = __clz(__rbit64(v56)) + (v55 << 6);
    int64_t v75 = v55;
    goto LABEL_8;
  }
  while (1)
  {
    int64_t v55 = v57 + 1;
    if (__OFADD__(v57, 1)) {
      break;
    }
    if (v55 >= v72)
    {
      int64_t v75 = v70;
      goto LABEL_29;
    }
    unint64_t v56 = *(void *)(v71 + 8 * v55);
    ++v57;
    if (v56) {
      goto LABEL_12;
    }
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_1D7A03828(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  uint64_t v3 = result;
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v4 = 0;
  uint64_t v5 = result + 64;
  uint64_t v6 = 1 << *(unsigned char *)(result + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(result + 64);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      unint64_t v10 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v11 = v10 | (v4 << 6);
      goto LABEL_24;
    }
    int64_t v12 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v12 >= v9) {
      return 1;
    }
    unint64_t v13 = *(void *)(v5 + 8 * v12);
    ++v4;
    if (!v13)
    {
      int64_t v4 = v12 + 1;
      if (v12 + 1 >= v9) {
        return 1;
      }
      unint64_t v13 = *(void *)(v5 + 8 * v4);
      if (!v13)
      {
        int64_t v4 = v12 + 2;
        if (v12 + 2 >= v9) {
          return 1;
        }
        unint64_t v13 = *(void *)(v5 + 8 * v4);
        if (!v13)
        {
          int64_t v4 = v12 + 3;
          if (v12 + 3 >= v9) {
            return 1;
          }
          unint64_t v13 = *(void *)(v5 + 8 * v4);
          if (!v13) {
            break;
          }
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v13 - 1) & v13;
    unint64_t v11 = __clz(__rbit64(v13)) + (v4 << 6);
LABEL_24:
    uint64_t v15 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v11);
    uint64_t v16 = *v15;
    uint64_t v17 = v15[1];
    int v18 = *(unsigned __int8 *)(*(void *)(v3 + 56) + v11);
    swift_bridgeObjectRetain();
    uint64_t v19 = sub_1D7A18684(v16, v17);
    char v21 = v20;
    uint64_t result = swift_bridgeObjectRelease();
    if ((v21 & 1) == 0 || v18 != *(unsigned __int8 *)(*(void *)(a2 + 56) + v19)) {
      return 0;
    }
  }
  int64_t v14 = v12 + 4;
  if (v14 >= v9) {
    return 1;
  }
  unint64_t v13 = *(void *)(v5 + 8 * v14);
  if (v13)
  {
    int64_t v4 = v14;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v4 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v4 >= v9) {
      return 1;
    }
    unint64_t v13 = *(void *)(v5 + 8 * v4);
    ++v14;
    if (v13) {
      goto LABEL_23;
    }
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_1D7A039D4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return ISO18013ReaderRequest.ItemsRequest.init(from:)(a1, a2);
}

uint64_t sub_1D7A039EC(void *a1)
{
  return ISO18013ReaderRequest.ItemsRequest.encode(to:)(a1);
}

uint64_t _s13CoreIDVShared21ISO18013ReaderRequestV05ItemsE0V2eeoiySbAE_AEtFZ_0(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  uint64_t v3 = a1[3];
  uint64_t v5 = a2[2];
  uint64_t v4 = a2[3];
  BOOL v6 = *a1 == *a2 && a1[1] == a2[1];
  if (v6 || (char v7 = sub_1D7A9D358(), result = 0, (v7 & 1) != 0))
  {
    if (sub_1D7A03174(v2, v5))
    {
      if (v3)
      {
        if (v4)
        {
          swift_bridgeObjectRetain();
          uint64_t v9 = swift_bridgeObjectRetain();
          char v10 = sub_1D7A03354(v9, v4);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v10) {
            return 1;
          }
        }
      }
      else if (!v4)
      {
        return 1;
      }
    }
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for ISO18013ReaderRequest()
{
  return &type metadata for ISO18013ReaderRequest;
}

uint64_t *initializeBufferWithCopyOfBuffer for ISO18013ReaderRequest.DocRequest(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v19 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    unint64_t v8 = a2[2];
    sub_1D7860790(v7, v8);
    v4[1] = v7;
    v4[2] = v8;
    uint64_t v9 = a2[4];
    v4[3] = a2[3];
    v4[4] = v9;
    uint64_t v10 = a2[5];
    uint64_t v11 = a2[6];
    uint64_t v12 = *(int *)(a3 + 20);
    unint64_t v13 = (char *)v4 + v12;
    int64_t v14 = (char *)a2 + v12;
    v4[5] = v10;
    v4[6] = v11;
    uint64_t v15 = sub_1D7A9B328();
    uint64_t v16 = *(void *)(v15 - 8);
    uint64_t v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v17(v14, 1, v15))
    {
      uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA842478);
      memcpy(v13, v14, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
    }
  }
  return v4;
}

uint64_t destroy for ISO18013ReaderRequest.DocRequest(uint64_t a1, uint64_t a2)
{
  sub_1D78607E8(*(void *)(a1 + 8), *(void *)(a1 + 16));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_1D7A9B328();
  uint64_t v8 = *(void *)(v5 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v4, 1, v5);
  if (!result)
  {
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8);
    return v7(v4, v5);
  }
  return result;
}

void *initializeWithCopy for ISO18013ReaderRequest.DocRequest(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  unint64_t v7 = a2[2];
  sub_1D7860790(v6, v7);
  a1[1] = v6;
  a1[2] = v7;
  uint64_t v8 = a2[4];
  a1[3] = a2[3];
  a1[4] = v8;
  uint64_t v9 = a2[5];
  uint64_t v10 = a2[6];
  uint64_t v11 = *(int *)(a3 + 20);
  uint64_t v12 = (char *)a1 + v11;
  unint64_t v13 = (char *)a2 + v11;
  a1[5] = v9;
  a1[6] = v10;
  uint64_t v14 = sub_1D7A9B328();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v16(v13, 1, v14))
  {
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA842478);
    memcpy(v12, v13, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v12, v13, v14);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  return a1;
}

void *assignWithCopy for ISO18013ReaderRequest.DocRequest(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = a2[1];
  unint64_t v7 = a2[2];
  sub_1D7860790(v6, v7);
  uint64_t v8 = a1[1];
  unint64_t v9 = a1[2];
  a1[1] = v6;
  a1[2] = v7;
  sub_1D78607E8(v8, v9);
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = *(int *)(a3 + 20);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_1D7A9B328();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  LODWORD(v7) = v15(v11, 1, v13);
  int v16 = v15(v12, 1, v13);
  if (!v7)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 24))(v11, v12, v13);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v14 + 8))(v11, v13);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA842478);
    memcpy(v11, v12, *(void *)(*(void *)(v17 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  return a1;
}

uint64_t initializeWithTake for ISO18013ReaderRequest.DocRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = (void *)(a1 + v5);
  unint64_t v7 = (const void *)(a2 + v5);
  uint64_t v8 = sub_1D7A9B328();
  uint64_t v9 = *(void *)(v8 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
  {
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA842478);
    memcpy(v6, v7, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v9 + 32))(v6, v7, v8);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  }
  return a1;
}

uint64_t assignWithTake for ISO18013ReaderRequest.DocRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)(a1 + 8);
  unint64_t v8 = *(void *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v6;
  sub_1D78607E8(v7, v8);
  uint64_t v9 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v9;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  uint64_t v10 = *(int *)(a3 + 20);
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  uint64_t v13 = sub_1D7A9B328();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v14 + 48);
  int v16 = v15(v11, 1, v13);
  int v17 = v15(v12, 1, v13);
  if (!v16)
  {
    if (!v17)
    {
      (*(void (**)(void *, void *, uint64_t))(v14 + 40))(v11, v12, v13);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v14 + 8))(v11, v13);
    goto LABEL_6;
  }
  if (v17)
  {
LABEL_6:
    uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA842478);
    memcpy(v11, v12, *(void *)(*(void *)(v18 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v14 + 32))(v11, v12, v13);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  return a1;
}

uint64_t getEnumTagSinglePayload for ISO18013ReaderRequest.DocRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1D7A043C4);
}

uint64_t sub_1D7A043C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 32);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA842478);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for ISO18013ReaderRequest.DocRequest(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1D7A0448C);
}

uint64_t sub_1D7A0448C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 32) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA842478);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_1D7A04538()
{
  sub_1D7A045D0();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_1D7A045D0()
{
  if (!qword_1EA8458E8)
  {
    sub_1D7A9B328();
    unint64_t v0 = sub_1D7A9C9A8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA8458E8);
    }
  }
}

void *initializeWithCopy for ISO18013ReaderRequest.ItemsRequest(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for ISO18013ReaderRequest.ItemsRequest(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ISO18013ReaderRequest.ItemsRequest(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for ISO18013ReaderRequest.ItemsRequest()
{
  return &type metadata for ISO18013ReaderRequest.ItemsRequest;
}

unsigned char *storeEnumTagSinglePayload for ISO18013ReaderRequest.ItemsRequest.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D7A0482CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ISO18013ReaderRequest.ItemsRequest.CodingKeys()
{
  return &type metadata for ISO18013ReaderRequest.ItemsRequest.CodingKeys;
}

ValueMetadata *type metadata accessor for ISO18013ReaderRequest.ItemsRequest.ACWGCodingKeys()
{
  return &type metadata for ISO18013ReaderRequest.ItemsRequest.ACWGCodingKeys;
}

ValueMetadata *type metadata accessor for ISO18013ReaderRequest.DocRequest.CodingKeys()
{
  return &type metadata for ISO18013ReaderRequest.DocRequest.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for ISO18013ReaderRequest.DocRequest.ACWGCodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1D7A04924);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ISO18013ReaderRequest.DocRequest.ACWGCodingKeys()
{
  return &type metadata for ISO18013ReaderRequest.DocRequest.ACWGCodingKeys;
}

ValueMetadata *type metadata accessor for ISO18013ReaderRequest.CodingKeys()
{
  return &type metadata for ISO18013ReaderRequest.CodingKeys;
}

unsigned char *_s13CoreIDVShared21ISO18013ReaderRequestV12ItemsRequestV14ACWGCodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D7A04A38);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ISO18013ReaderRequest.ACWGCodingKeys()
{
  return &type metadata for ISO18013ReaderRequest.ACWGCodingKeys;
}

unint64_t sub_1D7A04A74()
{
  unint64_t result = qword_1EA846CE8;
  if (!qword_1EA846CE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA846CE8);
  }
  return result;
}

unint64_t sub_1D7A04ACC()
{
  unint64_t result = qword_1EA846CF0;
  if (!qword_1EA846CF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA846CF0);
  }
  return result;
}

unint64_t sub_1D7A04B24()
{
  unint64_t result = qword_1EA846CF8;
  if (!qword_1EA846CF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA846CF8);
  }
  return result;
}

unint64_t sub_1D7A04B7C()
{
  unint64_t result = qword_1EA846D00;
  if (!qword_1EA846D00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA846D00);
  }
  return result;
}

unint64_t sub_1D7A04BD4()
{
  unint64_t result = qword_1EA846D08;
  if (!qword_1EA846D08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA846D08);
  }
  return result;
}

unint64_t sub_1D7A04C2C()
{
  unint64_t result = qword_1EA846D10;
  if (!qword_1EA846D10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA846D10);
  }
  return result;
}

unint64_t sub_1D7A04C84()
{
  unint64_t result = qword_1EA846D18;
  if (!qword_1EA846D18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA846D18);
  }
  return result;
}

unint64_t sub_1D7A04CDC()
{
  unint64_t result = qword_1EA846D20;
  if (!qword_1EA846D20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA846D20);
  }
  return result;
}

unint64_t sub_1D7A04D34()
{
  unint64_t result = qword_1EA846D28;
  if (!qword_1EA846D28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA846D28);
  }
  return result;
}

unint64_t sub_1D7A04D8C()
{
  unint64_t result = qword_1EA846D30;
  if (!qword_1EA846D30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA846D30);
  }
  return result;
}

unint64_t sub_1D7A04DE4()
{
  unint64_t result = qword_1EA846D38;
  if (!qword_1EA846D38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA846D38);
  }
  return result;
}

unint64_t sub_1D7A04E3C()
{
  unint64_t result = qword_1EA846D40;
  if (!qword_1EA846D40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA846D40);
  }
  return result;
}

unint64_t sub_1D7A04E94()
{
  unint64_t result = qword_1EA846D48;
  if (!qword_1EA846D48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA846D48);
  }
  return result;
}

unint64_t sub_1D7A04EEC()
{
  unint64_t result = qword_1EA846D50;
  if (!qword_1EA846D50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA846D50);
  }
  return result;
}

unint64_t sub_1D7A04F44()
{
  unint64_t result = qword_1EA846D58;
  if (!qword_1EA846D58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA846D58);
  }
  return result;
}

unint64_t sub_1D7A04F9C()
{
  unint64_t result = qword_1EA846D60;
  if (!qword_1EA846D60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA846D60);
  }
  return result;
}

unint64_t sub_1D7A04FF4()
{
  unint64_t result = qword_1EA846D68;
  if (!qword_1EA846D68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA846D68);
  }
  return result;
}

unint64_t sub_1D7A0504C()
{
  unint64_t result = qword_1EA846D70;
  if (!qword_1EA846D70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA846D70);
  }
  return result;
}

uint64_t sub_1D7A050A0()
{
  unint64_t v0 = sub_1D7A9D058();
  swift_bridgeObjectRelease();
  if (v0 >= 3) {
    return 3;
  }
  else {
    return v0;
  }
}

uint64_t sub_1D7A050EC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1D7A05154(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

CoreIDVShared::DigitalPresentmentAlertDisplayConfiguration __swiftcall DigitalPresentmentAlertDisplayConfiguration.init(isFaceIDDevice:)(CoreIDVShared::DigitalPresentmentAlertDisplayConfiguration isFaceIDDevice)
{
  v1->isFaceIDDevice = isFaceIDDevice.isFaceIDDevice;
  return isFaceIDDevice;
}

uint64_t DigitalPresentmentAlertDisplayConfiguration.options.getter()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8477F0);
  uint64_t v9 = MEMORY[0x1F4188790](v1 - 8, v2, v3, v4, v5, v6, v7, v8);
  uint64_t v11 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9, v12, v13, v14, v15, v16, v17, v18);
  uint64_t v46 = (uint64_t)&v45 - v19;
  int v20 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA846D78);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1D7AA4E90;
  v51[0] = *(id *)MEMORY[0x1E4F1D990];
  id v22 = v51[0];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF8238);
  sub_1D7A05658();
  sub_1D7A9CBF8();
  unint64_t v23 = 0xD00000000000002CLL;
  BOOL v24 = v20 == 0;
  if (!v20) {
    unint64_t v23 = 0xD00000000000002DLL;
  }
  unint64_t v25 = 0x80000001D7AC8AF0;
  if (!v20) {
    unint64_t v25 = 0x80000001D7AC8A00;
  }
  uint64_t v26 = MEMORY[0x1E4FBB1A0];
  *(void *)(inited + 96) = MEMORY[0x1E4FBB1A0];
  *(void *)(inited + 72) = v23;
  *(void *)(inited + 80) = v25;
  uint64_t v27 = (void *)*MEMORY[0x1E4F1D9A8];
  v51[0] = *(id *)MEMORY[0x1E4F1D9A8];
  if (v24) {
    unint64_t v28 = 0xD00000000000002ELL;
  }
  else {
    unint64_t v28 = 0xD00000000000002DLL;
  }
  if (v24) {
    unint64_t v29 = 0x80000001D7AC8A30;
  }
  else {
    unint64_t v29 = 0x80000001D7AC8AC0;
  }
  id v30 = v27;
  sub_1D7A9CBF8();
  *(void *)(inited + 168) = v26;
  *(void *)(inited + 144) = v28;
  *(void *)(inited + 152) = v29;
  v51[0] = *(id *)MEMORY[0x1E4F1D9D0];
  id v31 = v51[0];
  sub_1D7A9CBF8();
  *(void *)(inited + 240) = v26;
  *(void *)(inited + 216) = 0xD000000000000026;
  *(void *)(inited + 224) = 0x80000001D7AC8A60;
  v51[0] = *(id *)MEMORY[0x1E4F1D9E0];
  id v32 = v51[0];
  sub_1D7A9CBF8();
  *(void *)(inited + 312) = v26;
  *(void *)(inited + 288) = 0xD00000000000002DLL;
  *(void *)(inited + 296) = 0x80000001D7AC8A90;
  unint64_t v52 = sub_1D785FD70(inited);
  *(void *)&long long v49 = *MEMORY[0x1E4F1DA00];
  id v33 = (id)v49;
  sub_1D7A9CBF8();
  if (qword_1EA841638 != -1) {
    swift_once();
  }
  id v34 = objc_msgSend((id)qword_1EA86F340, sel_resourceURL);
  if (v34)
  {
    uint64_t v35 = v34;
    sub_1D7A9AF38();

    uint64_t v36 = sub_1D7A9AF68();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v11, 0, 1, v36);
  }
  else
  {
    uint64_t v36 = sub_1D7A9AF68();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v11, 1, 1, v36);
  }
  uint64_t v37 = (uint64_t)v11;
  uint64_t v38 = v46;
  sub_1D7A05724(v37, v46);
  sub_1D7A9AF68();
  uint64_t v39 = *(void *)(v36 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v39 + 48))(v38, 1, v36) == 1)
  {
    sub_1D7871C4C(v38, &qword_1EA8477F0);
    sub_1D789F52C((uint64_t)v51, &v49);
    sub_1D78A2748((uint64_t)v51);
    sub_1D7871C4C((uint64_t)&v49, (uint64_t *)&unk_1EBDF9680);
  }
  else
  {
    uint64_t v50 = v36;
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v49);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v39 + 32))(boxed_opaque_existential_0, v38, v36);
    sub_1D7860E50(&v49, v48);
    unint64_t v41 = v52;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v47 = v41;
    sub_1D78A1C50(v48, (uint64_t)v51, isUniquelyReferenced_nonNull_native);
    swift_bridgeObjectRelease();
    sub_1D78A2748((uint64_t)v51);
  }
  uint64_t v43 = sub_1D7A9BE98();
  swift_bridgeObjectRelease();
  return v43;
}

unint64_t sub_1D7A05658()
{
  unint64_t result = qword_1EA846D80;
  if (!qword_1EA846D80)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBDF8238);
    sub_1D7A056CC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA846D80);
  }
  return result;
}

unint64_t sub_1D7A056CC()
{
  unint64_t result = qword_1EA841FC8;
  if (!qword_1EA841FC8)
  {
    type metadata accessor for CFString(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA841FC8);
  }
  return result;
}

uint64_t sub_1D7A05724(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8477F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t getEnumTagSinglePayload for DigitalPresentmentAlertDisplayConfiguration(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for DigitalPresentmentAlertDisplayConfiguration(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D7A058F8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DigitalPresentmentAlertDisplayConfiguration()
{
  return &type metadata for DigitalPresentmentAlertDisplayConfiguration;
}

unint64_t IdentityBoundACLType.init(rawValue:)(unint64_t result)
{
  if (result > 2) {
    return 0;
  }
  return result;
}

unint64_t sub_1D7A05948()
{
  unint64_t result = qword_1EA846D88;
  if (!qword_1EA846D88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA846D88);
  }
  return result;
}

uint64_t sub_1D7A0599C()
{
  return sub_1D7A9D628();
}

uint64_t sub_1D7A059E4()
{
  return sub_1D7A9D5E8();
}

uint64_t sub_1D7A05A10()
{
  return sub_1D7A9D628();
}

ValueMetadata *type metadata accessor for IdentityBoundACLType()
{
  return &type metadata for IdentityBoundACLType;
}

uint64_t DIPFileUploadCryptor.Options.init(eraseInputFileData:copyDataForInternalDiagnostics:uuid:key:nonce:publicKey:)@<X0>(uint64_t result@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11)
{
  *(unsigned char *)a9 = result;
  *(unsigned char *)(a9 + 1) = a2;
  *(void *)(a9 + 8) = a3;
  *(void *)(a9 + 16) = a4;
  *(void *)(a9 + 24) = a5;
  *(void *)(a9 + 32) = a6;
  *(void *)(a9 + 40) = a7;
  *(void *)(a9 + 48) = a8;
  *(void *)(a9 + 56) = a10;
  *(void *)(a9 + 64) = a11;
  return result;
}

uint64_t DIPFileUploadCryptor.Result.encryptedFileURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1D7A9AF68();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t DIPFileUploadCryptor.Result.internalDiagnosticsURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for DIPFileUploadCryptor.Result() + 20);
  return sub_1D78CDC8C(v3, a1);
}

uint64_t type metadata accessor for DIPFileUploadCryptor.Result()
{
  uint64_t result = qword_1EA846D90;
  if (!qword_1EA846D90) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void static DIPFileUploadCryptor.encryptFileHandle(_:withOptions:)(void *a1@<X0>, unsigned __int8 *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v238 = a1;
  uint64_t v218 = a3;
  v242[6] = *MEMORY[0x1E4F143B8];
  uint64_t v4 = sub_1D7A9B5F8();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v231 = v4;
  uint64_t v232 = v5;
  uint64_t v13 = MEMORY[0x1F4188790](v4, v6, v7, v8, v9, v10, v11, v12);
  uint64_t v221 = (char *)&v205 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = MEMORY[0x1F4188790](v13, v15, v16, v17, v18, v19, v20, v21);
  uint64_t v222 = (char *)&v205 - v23;
  uint64_t v31 = MEMORY[0x1F4188790](v22, v24, v25, v26, v27, v28, v29, v30);
  uint64_t v233 = (char *)&v205 - v32;
  MEMORY[0x1F4188790](v31, v33, v34, v35, v36, v37, v38, v39);
  uint64_t v225 = (char *)&v205 - v40;
  uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8477F0);
  uint64_t v49 = MEMORY[0x1F4188790](v41 - 8, v42, v43, v44, v45, v46, v47, v48);
  uint64_t v227 = (uint64_t)&v205 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = MEMORY[0x1F4188790](v49, v51, v52, v53, v54, v55, v56, v57);
  uint64_t v226 = (uint64_t)&v205 - v59;
  MEMORY[0x1F4188790](v58, v60, v61, v62, v63, v64, v65, v66);
  uint64_t v235 = (uint64_t)&v205 - v67;
  uint64_t v234 = sub_1D7A9AF68();
  uint64_t v236 = *(void *)(v234 - 8);
  uint64_t v75 = MEMORY[0x1F4188790](v234, v68, v69, v70, v71, v72, v73, v74);
  id v77 = (char *)&v205 - ((v76 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v85 = MEMORY[0x1F4188790](v75, v78, v79, v80, v81, v82, v83, v84);
  os_log_type_t v87 = (char *)&v205 - v86;
  uint64_t v95 = MEMORY[0x1F4188790](v85, v88, v89, v90, v91, v92, v93, v94);
  os_log_type_t v97 = (void (*)(char *, uint64_t))((char *)&v205 - v96);
  MEMORY[0x1F4188790](v95, v98, v99, v100, v101, v102, v103, v104);
  uint64_t v106 = (char *)&v205 - v105;
  int v220 = *a2;
  int v224 = a2[1];
  uint64_t v108 = *((void *)a2 + 1);
  uint64_t v107 = *((void *)a2 + 2);
  uint64_t v228 = *((void *)a2 + 3);
  unint64_t v223 = *((void *)a2 + 4);
  unint64_t v109 = *((void *)a2 + 6);
  uint64_t v229 = *((void *)a2 + 5);
  uint64_t v110 = *((void *)a2 + 7);
  unint64_t v111 = *((void *)a2 + 8);
  id v112 = v237;
  sub_1D7A06BAC((uint8_t *)&v205 - v105);
  id v237 = v112;
  if (!v112)
  {
    uint64_t v219 = v97;
    uint64_t v215 = v107;
    uint64_t v216 = v108;
    uint64_t v230 = v106;
    uint64_t v208 = v87;
    uint64_t v217 = v77;
    unint64_t v209 = v109;
    unint64_t v210 = v111;
    uint64_t v211 = v110;
    uint64_t v113 = v236;
    uint64_t v114 = v234;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v236 + 56))(v235, 1, 1, v234);
    if (qword_1EBDF9DC8 != -1) {
      swift_once();
    }
    uint64_t v115 = v231;
    uint64_t v116 = __swift_project_value_buffer(v231, (uint64_t)qword_1EBDFBE70);
    swift_beginAccess();
    uint64_t v117 = v232;
    uint64_t v118 = *(void (**)(char *, uint64_t, uint64_t))(v232 + 16);
    uint64_t v119 = v225;
    uint64_t v214 = v116;
    uint64_t v213 = v232 + 16;
    uint64_t v212 = v118;
    v118(v225, v116, v115);
    uint64_t v120 = *(void (**)(char *, uint64_t, uint64_t))(v113 + 16);
    uint64_t v121 = v219;
    uint64_t v207 = v113 + 16;
    uint64_t v206 = v120;
    v120((char *)v219, (uint64_t)v230, v114);
    uint64_t v122 = sub_1D7A9B5D8();
    os_log_type_t v123 = sub_1D7A9C748();
    BOOL v124 = os_log_type_enabled(v122, v123);
    id v125 = v237;
    if (v124)
    {
      os_log_t v205 = v122;
      uint64_t v126 = (uint8_t *)swift_slowAlloc();
      uint64_t v127 = (char *)v121;
      uint64_t v128 = swift_slowAlloc();
      v242[0] = v128;
      *(_DWORD *)uint64_t v126 = 136315138;
      uint64_t v129 = sub_1D7A9AF48();
      v239[1] = (id)sub_1D7923300(v129, v130, v242);
      id v125 = v237;
      uint64_t v115 = v231;
      sub_1D7A9C9E8();
      swift_bridgeObjectRelease();
      uint64_t v219 = *(void (**)(char *, uint64_t))(v113 + 8);
      v219(v127, v234);
      os_log_t v131 = v205;
      _os_log_impl(&dword_1D7853000, v205, v123, "Successfully created temporary file at %s. Encrypting data & copying from FileHandle", v126, 0xCu);
      swift_arrayDestroy();
      uint64_t v114 = v234;
      MEMORY[0x1D947D740](v128, -1, -1);
      MEMORY[0x1D947D740](v126, -1, -1);

      uint64_t v132 = *(void (**)(char *, uint64_t))(v232 + 8);
    }
    else
    {
      uint64_t v219 = *(void (**)(char *, uint64_t))(v113 + 8);
      v219((char *)v121, v114);

      uint64_t v132 = *(void (**)(char *, uint64_t))(v117 + 8);
    }
    v132(v119, v115);
    uint64_t v133 = v235;
    uint64_t v225 = (char *)v132;
    uint64_t v134 = v233;
    uint64_t v135 = v226;
    if (!v224)
    {
      uint64_t v138 = v236;
      uint64_t v137 = v217;
      goto LABEL_16;
    }
    sub_1D7A078DC(v216, v215, v226);
    if (v125)
    {
      uint64_t v136 = v221;
      v212(v221, v214, v115);
      DIPLogError(_:message:log:)(v125, 0xD000000000000061, 0x80000001D7AC8B40);

      v132(v136, v115);
      id v125 = 0;
      uint64_t v137 = v217;
    }
    else
    {
      uint64_t v139 = v114;
      sub_1D7A084F4(v135, v133);
      v212(v134, v214, v115);
      uint64_t v140 = v115;
      uint64_t v141 = sub_1D7A9B5D8();
      os_log_type_t v142 = sub_1D7A9C748();
      if (os_log_type_enabled(v141, v142))
      {
        uint64_t v143 = (uint8_t *)swift_slowAlloc();
        uint64_t v226 = swift_slowAlloc();
        v242[0] = v226;
        *(_DWORD *)uint64_t v143 = 136315138;
        swift_beginAccess();
        int v144 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v236 + 48))(v133, 1, v139);
        id v237 = 0;
        if (v144)
        {
          uint64_t v145 = 0;
          unint64_t v146 = 0xE000000000000000;
        }
        else
        {
          uint64_t v199 = v208;
          v206(v208, v133, v139);
          uint64_t v145 = sub_1D7A9AF48();
          unint64_t v146 = v200;
          v219(v199, v139);
        }
        uint64_t v137 = v217;
        uint64_t v240 = sub_1D7923300(v145, v146, v242);
        sub_1D7A9C9E8();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1D7853000, v141, v142, "Successfully created internal diagnostics URL at %s", v143, 0xCu);
        uint64_t v201 = v226;
        swift_arrayDestroy();
        MEMORY[0x1D947D740](v201, -1, -1);
        MEMORY[0x1D947D740](v143, -1, -1);

        ((void (*)(char *, uint64_t))v225)(v233, v231);
        uint64_t v114 = v234;
        uint64_t v133 = v235;
        uint64_t v138 = v236;
        id v125 = v237;
LABEL_16:
        sub_1D7A9AF48();
        uint64_t v147 = (void *)sub_1D7A9BF98();
        swift_bridgeObjectRelease();
        uint64_t v148 = self;
        id v237 = objc_msgSend(v148, sel_fileHandleForWritingAtPath_, v147);

        swift_beginAccess();
        uint64_t v149 = v227;
        sub_1D78CDC8C(v133, v227);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v138 + 48))(v149, 1, v114) == 1)
        {
          sub_1D7891060(v149);
          uint64_t v233 = 0;
          uint64_t v150 = v219;
        }
        else
        {
          (*(void (**)(char *, uint64_t, uint64_t))(v138 + 32))(v137, v149, v114);
          sub_1D7A9AF48();
          uint64_t v151 = v114;
          uint64_t v152 = v137;
          id v153 = v125;
          uint64_t v154 = (void *)sub_1D7A9BF98();
          swift_bridgeObjectRelease();
          uint64_t v233 = (char *)objc_msgSend(v148, sel_fileHandleForWritingAtPath_, v154);

          id v125 = v153;
          uint64_t v155 = v152;
          uint64_t v114 = v151;
          uint64_t v150 = v219;
          ((void (*)(char *))v219)(v155);
        }
        uint64_t v156 = v229;
        uint64_t v157 = v228;
        uint64_t v158 = sub_1D7A9C728();
        if (v125)
        {
          v150(v230, v114);

          uint64_t v160 = v133;
LABEL_43:
          sub_1D7891060(v160);
          return;
        }
        unint64_t v161 = v159;
        uint64_t v219 = v150;
        uint64_t v240 = v158;
        unint64_t v241 = v159;
        id v162 = objc_allocWithZone((Class)DIPStreamingCryptor);
        unint64_t v163 = v223;
        sub_1D7860790(v157, v223);
        uint64_t v164 = (void *)sub_1D7A9AFF8();
        id v165 = objc_msgSend(v162, sel_initWithKey_, v164);
        uint64_t v166 = v157;
        uint64_t v167 = v165;
        sub_1D78607E8(v166, v163);

        unint64_t v168 = v209;
        if (v209 >> 60 != 15)
        {
          sub_1D7860790(v156, v209);
          uint64_t v169 = (void *)sub_1D7A9AFF8();
          objc_msgSend(v167, sel_addIVParameter_, v169);

          sub_1D7871BDC(v156, v168);
        }
        unint64_t v170 = v210;
        uint64_t v171 = v211;
        if (v210 >> 60 != 15)
        {
          sub_1D7860790(v211, v210);
          uint64_t v172 = (void *)sub_1D7A9AFF8();
          objc_msgSend(v167, sel_addAuthParameter_, v172);

          sub_1D7871BDC(v171, v170);
        }
        uint64_t v173 = v236;
        if (v161 >> 60 == 15)
        {
          id v174 = v237;
        }
        else
        {
          id v174 = v237;
          id v175 = v233;
          do
          {
            uint64_t v176 = v240;
            sub_1D786E9D8(v240, v161);
            id v177 = v175;
            uint64_t v178 = (void *)MEMORY[0x1D947CCE0]();
            sub_1D7A081D8(v167, v176, v161, v238, v174, v175, &v240, 500000);
            sub_1D7871BDC(v176, v161);

            unint64_t v161 = v241;
          }
          while (v241 >> 60 != 15);
        }
        id v179 = objc_msgSend(v167, sel_finish);
        uint64_t v180 = sub_1D7A9B028();
        unint64_t v182 = v181;

        if (v174)
        {
          id v183 = v174;
          uint64_t v184 = (void *)sub_1D7A9AFF8();
          objc_msgSend(v183, sel_writeData_, v184);
        }
        uint64_t v185 = v222;
        if (v220)
        {
          v239[0] = 0;
          unsigned int v186 = objc_msgSend(v238, sel_truncateAtOffset_error_, 0, v239);
          id v187 = v239[0];
          if (!v186) {
            goto LABEL_42;
          }
          id v188 = v239[0];
        }
        id v237 = 0;
        v239[0] = 0;
        unsigned int v189 = objc_msgSend(v238, sel_closeAndReturnError_, v239);
        id v187 = v239[0];
        if (v189)
        {
          if (!v174
            || (v239[0] = 0,
                id v190 = v187,
                unsigned int v191 = objc_msgSend(v174, sel_closeAndReturnError_, v239),
                id v187 = v239[0],
                v191))
          {
            id v192 = v187;
            if (!v233)
            {
LABEL_40:
              v212(v185, v214, v231);
              uint64_t v195 = sub_1D7A9B5D8();
              os_log_type_t v196 = sub_1D7A9C748();
              if (os_log_type_enabled(v195, v196))
              {
                uint64_t v197 = (uint8_t *)swift_slowAlloc();
                *(_WORD *)uint64_t v197 = 0;
                _os_log_impl(&dword_1D7853000, v195, v196, "Finished encrypting data in original liveness FileHandle", v197, 2u);
                MEMORY[0x1D947D740](v197, -1, -1);

                sub_1D78607E8(v180, v182);
              }
              else
              {

                sub_1D78607E8(v180, v182);
              }

              ((void (*)(char *, uint64_t))v225)(v222, v231);
              uint64_t v202 = v218;
              (*(void (**)(uint64_t, char *, uint64_t))(v173 + 32))(v218, v230, v234);
              uint64_t v203 = v202 + *(int *)(type metadata accessor for DIPFileUploadCryptor.Result() + 20);
              uint64_t v204 = v235;
              sub_1D78CDC8C(v235, v203);
              sub_1D7871BDC(v240, v241);

              uint64_t v160 = v204;
              goto LABEL_43;
            }
            v239[0] = 0;
            unsigned int v193 = objc_msgSend(v233, sel_closeAndReturnError_, v239);
            id v187 = v239[0];
            if (v193)
            {
              id v194 = v239[0];
              goto LABEL_40;
            }
          }
        }
LABEL_42:
        id v198 = v187;
        sub_1D7A9AE58();

        swift_willThrow();
        sub_1D78607E8(v180, v182);

        v219(v230, v234);
        sub_1D7871BDC(v240, v241);

        uint64_t v160 = v235;
        goto LABEL_43;
      }

      v132(v134, v140);
      uint64_t v137 = v217;
      uint64_t v114 = v139;
    }
    uint64_t v138 = v236;
    goto LABEL_16;
  }
}

void sub_1D7A06BAC(uint8_t *a1@<X8>)
{
  uint64_t v151 = *MEMORY[0x1E4F143B8];
  uint64_t v142 = sub_1D7A9B5F8();
  uint64_t v144 = *(void *)(v142 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v142, v2, v3, v4, v5, v6, v7, v8);
  uint64_t v135 = (char *)&v132 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x1F4188790](v9, v11, v12, v13, v14, v15, v16, v17);
  uint64_t v137 = (char *)&v132 - v19;
  uint64_t v27 = MEMORY[0x1F4188790](v18, v20, v21, v22, v23, v24, v25, v26);
  uint64_t v138 = (void (*)(char *, uint64_t))((char *)&v132 - v28);
  MEMORY[0x1F4188790](v27, v29, v30, v31, v32, v33, v34, v35);
  uint64_t v136 = (char *)&v132 - v36;
  uint64_t v37 = sub_1D7A9AF68();
  uint64_t v38 = *(void *)(v37 - 8);
  uint64_t v46 = MEMORY[0x1F4188790](v37, v39, v40, v41, v42, v43, v44, v45);
  uint64_t v134 = (char *)&v132 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = MEMORY[0x1F4188790](v46, v48, v49, v50, v51, v52, v53, v54);
  uint64_t v57 = (char *)&v132 - v56;
  MEMORY[0x1F4188790](v55, v58, v59, v60, v61, v62, v63, v64);
  uint64_t v66 = (char *)&v132 - v65;
  sub_1D7A9AED8();
  sub_1D7A9AF18();
  uint64_t v133 = v38;
  uint64_t v67 = *(void (**)(char *, uint64_t))(v38 + 8);
  v67(v57, v37);
  sub_1D7A9AF48();
  sub_1D7A9AEC8();
  swift_bridgeObjectRelease();
  uint64_t v140 = a1;
  sub_1D7A9AF28();
  uint64_t v141 = v37;
  uint64_t v139 = v67;
  v67(v57, v37);
  char v146 = 0;
  uint64_t v68 = self;
  id v69 = objc_msgSend(v68, sel_defaultManager);
  uint64_t v143 = v66;
  sub_1D7A9AF48();
  uint64_t v70 = (void *)sub_1D7A9BF98();
  swift_bridgeObjectRelease();
  unsigned int v71 = objc_msgSend(v69, sel_fileExistsAtPath_isDirectory_, v70, &v146);

  if (v71)
  {
    if ((v146 & 1) == 0)
    {
      unint64_t v149 = 0;
      unint64_t v150 = 0xE000000000000000;
      sub_1D7A9CC48();
      swift_bridgeObjectRelease();
      unint64_t v149 = 0xD000000000000014;
      unint64_t v150 = 0x80000001D7AC8CD0;
      sub_1D7A9AF48();
      sub_1D7A9C128();
      swift_bridgeObjectRelease();
      sub_1D7A9C128();
      uint64_t v120 = v149;
      uint64_t v121 = v150;
      LOWORD(v149) = 222;
      unint64_t v122 = sub_1D785EAF8(MEMORY[0x1E4FBC860]);
      sub_1D7860544();
      uint64_t v119 = (void *)swift_allocError();
      DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, v120, v121, (__int16 *)&v149, 0, v122, 0xD00000000000005DLL, 0x80000001D7AC8BB0, v123, 0xD00000000000002DLL, 0x80000001D7AC8C70, 130);
      swift_willThrow();
      uint64_t v78 = v140;
      goto LABEL_29;
    }
    if (qword_1EBDF9DC8 != -1) {
      swift_once();
    }
    uint64_t v72 = v142;
    uint64_t v73 = __swift_project_value_buffer(v142, (uint64_t)qword_1EBDFBE70);
    swift_beginAccess();
    uint64_t v74 = *(void (**)(char *, uint64_t, uint64_t))(v144 + 16);
    v74(v136, v73, v72);
    uint64_t v75 = sub_1D7A9B5D8();
    os_log_type_t v76 = sub_1D7A9C748();
    BOOL v77 = os_log_type_enabled(v75, v76);
    uint64_t v78 = v140;
    if (v77)
    {
      uint64_t v79 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v79 = 0;
      _os_log_impl(&dword_1D7853000, v75, v76, "uploads path exists", v79, 2u);
      MEMORY[0x1D947D740](v79, -1, -1);
    }

    uint64_t v138 = *(void (**)(char *, uint64_t))(v144 + 8);
    v138(v136, v72);
  }
  else
  {
    if (qword_1EBDF9DC8 != -1) {
      swift_once();
    }
    uint64_t v80 = v142;
    uint64_t v81 = __swift_project_value_buffer(v142, (uint64_t)qword_1EBDFBE70);
    swift_beginAccess();
    uint64_t v74 = *(void (**)(char *, uint64_t, uint64_t))(v144 + 16);
    v74((char *)v138, v81, v80);
    uint64_t v82 = sub_1D7A9B5D8();
    os_log_type_t v83 = sub_1D7A9C748();
    BOOL v84 = os_log_type_enabled(v82, v83);
    uint64_t v78 = v140;
    if (v84)
    {
      uint64_t v85 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v85 = 0;
      _os_log_impl(&dword_1D7853000, v82, v83, "uploads path doesn't exist. Creating the directory...", v85, 2u);
      MEMORY[0x1D947D740](v85, -1, -1);
    }

    uint64_t v86 = (char *)v138;
    uint64_t v138 = *(void (**)(char *, uint64_t))(v144 + 8);
    v138(v86, v80);
    id v87 = objc_msgSend(v68, sel_defaultManager);
    sub_1D7A9AF48();
    uint64_t v88 = (void *)sub_1D7A9BF98();
    swift_bridgeObjectRelease();
    v148[0] = 0;
    unsigned int v89 = objc_msgSend(v87, sel_createDirectoryAtPath_withIntermediateDirectories_attributes_error_, v88, 1, 0, v148);

    id v90 = v148[0];
    if (!v89)
    {
LABEL_26:
      id v118 = v90;
      uint64_t v119 = (void *)sub_1D7A9AE58();

      swift_willThrow();
LABEL_29:
      uint64_t v126 = v141;
      uint64_t v127 = v139;
      v139((char *)v78, v141);
      v127(v143, v126);
      LOWORD(v148[0]) = 0;
      id v128 = v119;
      unint64_t v129 = sub_1D785EAF8(MEMORY[0x1E4FBC860]);
      sub_1D7860544();
      swift_allocError();
      DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(v119, 0, 0xE000000000000000, (__int16 *)v148, 0, v129, 0xD00000000000005DLL, 0x80000001D7AC8BB0, v130, 0xD00000000000002DLL, 0x80000001D7AC8C70, 152);
      swift_willThrow();

      return;
    }
    id v91 = v148[0];
    uint64_t v72 = v142;
  }
  id v92 = objc_msgSend(v68, sel_defaultManager);
  sub_1D7A9AF48();
  uint64_t v93 = (void *)sub_1D7A9BF98();
  swift_bridgeObjectRelease();
  unsigned int v94 = objc_msgSend(v92, sel_fileExistsAtPath_, v93);

  if (!v94) {
    goto LABEL_21;
  }
  if (qword_1EBDF9DC8 != -1) {
    swift_once();
  }
  uint64_t v95 = __swift_project_value_buffer(v72, (uint64_t)qword_1EBDFBE70);
  swift_beginAccess();
  v74(v137, v95, v72);
  uint64_t v96 = sub_1D7A9B5D8();
  os_log_type_t v97 = sub_1D7A9C748();
  if (os_log_type_enabled(v96, v97))
  {
    uint64_t v98 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v98 = 0;
    _os_log_impl(&dword_1D7853000, v96, v97, "coreidvd temporary liveness video file exists. Deleting to copy new liveness video.", v98, 2u);
    MEMORY[0x1D947D740](v98, -1, -1);
  }

  v138(v137, v72);
  id v99 = objc_msgSend(v68, sel_defaultManager);
  sub_1D7A9AF48();
  uint64_t v100 = (void *)sub_1D7A9BF98();
  swift_bridgeObjectRelease();
  v148[0] = 0;
  unsigned int v101 = objc_msgSend(v99, sel_removeItemAtPath_error_, v100, v148);

  id v90 = v148[0];
  if (!v101) {
    goto LABEL_26;
  }
  id v102 = v148[0];
  uint64_t v72 = v142;
LABEL_21:
  id v103 = objc_msgSend(v68, sel_defaultManager);
  sub_1D7A9AF48();
  uint64_t v104 = (void *)sub_1D7A9BF98();
  swift_bridgeObjectRelease();
  unsigned __int8 v105 = objc_msgSend(v103, sel_createFileAtPath_contents_attributes_, v104, 0, 0);

  if ((v105 & 1) == 0)
  {
    LOWORD(v148[0]) = 550;
    unint64_t v124 = sub_1D785EAF8(MEMORY[0x1E4FBC860]);
    sub_1D7860544();
    uint64_t v119 = (void *)swift_allocError();
    DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xD00000000000002BLL, 0x80000001D7AC8CA0, (__int16 *)v148, 0, v124, 0xD00000000000005DLL, 0x80000001D7AC8BB0, v125, 0xD00000000000002DLL, 0x80000001D7AC8C70, 146);
    swift_willThrow();
    goto LABEL_29;
  }
  if (qword_1EBDF9DC8 != -1) {
    swift_once();
  }
  uint64_t v106 = __swift_project_value_buffer(v72, (uint64_t)qword_1EBDFBE70);
  swift_beginAccess();
  uint64_t v107 = v135;
  v74(v135, v106, v72);
  uint64_t v108 = v134;
  uint64_t v109 = v141;
  (*(void (**)(char *, uint8_t *, uint64_t))(v133 + 16))(v134, v78, v141);
  uint64_t v110 = sub_1D7A9B5D8();
  os_log_type_t v111 = sub_1D7A9C748();
  if (os_log_type_enabled(v110, v111))
  {
    id v112 = (uint8_t *)swift_slowAlloc();
    uint64_t v113 = swift_slowAlloc();
    uint64_t v147 = v113;
    *(_DWORD *)id v112 = 136315138;
    uint64_t v140 = v112 + 4;
    uint64_t v114 = sub_1D7A9AF48();
    uint64_t v145 = sub_1D7923300(v114, v115, &v147);
    sub_1D7A9C9E8();
    swift_bridgeObjectRelease();
    uint64_t v116 = v141;
    uint64_t v117 = v139;
    v139(v108, v141);
    _os_log_impl(&dword_1D7853000, v110, v111, "Successfully created temporary file at %s. Will start encrypting data & copying from FileHandle", v112, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D947D740](v113, -1, -1);
    MEMORY[0x1D947D740](v112, -1, -1);

    v138(v107, v142);
    v117(v143, v116);
  }
  else
  {

    os_log_t v131 = v139;
    v139(v108, v109);
    v138(v107, v72);
    v131(v143, v109);
  }
}

void sub_1D7A078DC(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v101 = a1;
  uint64_t v102 = a2;
  uint64_t v104 = a3;
  _OWORD v105[4] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8477F0);
  MEMORY[0x1F4188790](v5 - 8, v6, v7, v8, v9, v10, v11, v12);
  id v103 = (char *)v97 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1D7A9AF68();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v23 = MEMORY[0x1F4188790](v14, v16, v17, v18, v19, v20, v21, v22);
  uint64_t v25 = (char *)v97 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = MEMORY[0x1F4188790](v23, v26, v27, v28, v29, v30, v31, v32);
  uint64_t v35 = (char *)v97 - v34;
  MEMORY[0x1F4188790](v33, v36, v37, v38, v39, v40, v41, v42);
  uint64_t v44 = (char *)v97 - v43;
  uint64_t v45 = sub_1D7A9B5F8();
  uint64_t v46 = *(void *)(v45 - 8);
  MEMORY[0x1F4188790](v45, v47, v48, v49, v50, v51, v52, v53);
  uint64_t v55 = (char *)v97 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((os_variant_allows_internal_security_policies() & 1) == 0)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 56))(v104, 1, 1, v14);
    return;
  }
  uint64_t v98 = v25;
  uint64_t v100 = v35;
  if (qword_1EBDF9DC8 != -1) {
    swift_once();
  }
  uint64_t v56 = __swift_project_value_buffer(v45, (uint64_t)qword_1EBDFBE70);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v46 + 16))(v55, v56, v45);
  uint64_t v57 = sub_1D7A9B5D8();
  os_log_type_t v58 = sub_1D7A9C748();
  if (os_log_type_enabled(v57, v58))
  {
    uint64_t v59 = (uint8_t *)swift_slowAlloc();
    id v99 = v44;
    uint64_t v60 = v59;
    *(_WORD *)uint64_t v59 = 0;
    _os_log_impl(&dword_1D7853000, v57, v58, "Internal build detected", v59, 2u);
    uint64_t v61 = v60;
    uint64_t v4 = v3;
    uint64_t v44 = v99;
    MEMORY[0x1D947D740](v61, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v46 + 8))(v55, v45);
  uint64_t v62 = self;
  id v63 = objc_msgSend(v62, sel_defaultManager);
  id v64 = objc_msgSend(v63, sel_URLsForDirectory_inDomains_, 13, 1);

  uint64_t v65 = sub_1D7A9C318();
  if (*(void *)(v65 + 16))
  {
    uint64_t v66 = (uint64_t)v103;
    (*(void (**)(char *, unint64_t, uint64_t))(v15 + 16))(v103, v65 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80)), v14);
    uint64_t v67 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 56);
    v67(v66, 0, 1, v14);
  }
  else
  {
    uint64_t v67 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 56);
    uint64_t v66 = (uint64_t)v103;
    v67((uint64_t)v103, 1, 1, v14);
  }
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v66, 1, v14) == 1)
  {
    sub_1D7891060(v66);
    v67(v104, 1, 1, v14);
    return;
  }
  id v103 = v4;
  v97[0] = *(void *)(v15 + 32);
  v97[1] = v15 + 32;
  ((void (*)(char *, uint64_t, uint64_t))v97[0])(v44, v66, v14);
  uint64_t v68 = v100;
  sub_1D7A9AF28();
  id v69 = objc_msgSend(v62, byte_1E6A8733B);
  uint64_t v70 = (void *)sub_1D7A9AF08();
  v105[0] = 0;
  unsigned int v71 = objc_msgSend(v69, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v70, 1, 0, v105);

  if (v71)
  {
    id v99 = v44;
    id v72 = v105[0];
    uint64_t v73 = v98;
    sub_1D7A9AF28();
    id v74 = objc_msgSend(v62, sel_defaultManager);
    sub_1D7A9AF48();
    uint64_t v75 = (void *)sub_1D7A9BF98();
    swift_bridgeObjectRelease();
    unsigned int v76 = objc_msgSend(v74, sel_fileExistsAtPath_, v75);

    if (v76)
    {
      id v77 = objc_msgSend(v62, sel_defaultManager);
      uint64_t v78 = (void *)sub_1D7A9AF08();
      v105[0] = 0;
      unsigned int v79 = objc_msgSend(v77, sel_removeItemAtURL_error_, v78, v105);

      if (!v79)
      {
        id v92 = v105[0];
        id v87 = (void *)sub_1D7A9AE58();

        swift_willThrow();
        uint64_t v93 = *(void (**)(char *, uint64_t))(v15 + 8);
        v93(v73, v14);
        v93(v100, v14);
        v93(v99, v14);
        goto LABEL_21;
      }
      id v80 = v105[0];
    }
    id v81 = objc_msgSend(v62, sel_defaultManager);
    sub_1D7A9AF48();
    uint64_t v82 = (void *)sub_1D7A9BF98();
    swift_bridgeObjectRelease();
    unsigned __int8 v83 = objc_msgSend(v81, sel_createFileAtPath_contents_attributes_, v82, 0, 0);

    if (v83)
    {
      BOOL v84 = *(void (**)(char *, uint64_t))(v15 + 8);
      v84(v100, v14);
      v84(v99, v14);
      uint64_t v85 = v104;
      ((void (*)(uint64_t, char *, uint64_t))v97[0])(v104, v73, v14);
      v67(v85, 0, 1, v14);
      return;
    }
    LOWORD(v105[0]) = 554;
    unint64_t v89 = sub_1D785EAF8(MEMORY[0x1E4FBC860]);
    sub_1D7860544();
    id v87 = (void *)swift_allocError();
    DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xD00000000000002ALL, 0x80000001D7AC8C40, (__int16 *)v105, 0, v89, 0xD00000000000005DLL, 0x80000001D7AC8BB0, v90, 0xD000000000000027, 0x80000001D7AC8C10, 170);
    swift_willThrow();
    id v91 = *(void (**)(char *, uint64_t))(v15 + 8);
    v91(v73, v14);
    v91(v100, v14);
    v91(v99, v14);
  }
  else
  {
    id v86 = v105[0];
    id v87 = (void *)sub_1D7A9AE58();

    swift_willThrow();
    uint64_t v88 = *(void (**)(char *, uint64_t))(v15 + 8);
    v88(v68, v14);
    v88(v44, v14);
  }
LABEL_21:
  LOWORD(v105[0]) = 0;
  id v94 = v87;
  unint64_t v95 = sub_1D785EAF8(MEMORY[0x1E4FBC860]);
  sub_1D7860544();
  swift_allocError();
  DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(v87, 0, 0xE000000000000000, (__int16 *)v105, 0, v95, 0xD00000000000005DLL, 0x80000001D7AC8BB0, v96, 0xD000000000000027, 0x80000001D7AC8C10, 175);
  swift_willThrow();
}

uint64_t sub_1D7A081D8(void *a1, uint64_t a2, uint64_t a3, void *a4, void *a5, void *a6, uint64_t *a7, uint64_t a8)
{
  uint64_t v51 = a8;
  uint64_t v47 = a7;
  uint64_t v12 = sub_1D7A9B5F8();
  uint64_t v49 = *(void *)(v12 - 8);
  uint64_t v50 = v12;
  MEMORY[0x1F4188790](v12, v13, v14, v15, v16, v17, v18, v19);
  uint64_t v48 = (char *)&v46 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = (void *)sub_1D7A9AFF8();
  id v22 = objc_msgSend(a1, sel_encryptBuffer_, v21);

  uint64_t v23 = sub_1D7A9B028();
  unint64_t v25 = v24;

  id v46 = objc_msgSend(a4, sel_offsetInFile);
  if (a5)
  {
    uint64_t v26 = (void *)sub_1D7A9AFF8();
    objc_msgSend(a5, sel_writeData_, v26);
  }
  unint64_t v27 = v25;
  if (a6)
  {
    uint64_t v28 = (void *)sub_1D7A9AFF8();
    objc_msgSend(a6, sel_writeData_, v28);
  }
  unint64_t v29 = v52;
  uint64_t v30 = sub_1D7A9C728();
  if (v29) {
    return sub_1D78607E8(v23, v25);
  }
  uint64_t v33 = v47;
  uint64_t v34 = *v47;
  unint64_t v35 = v47[1];
  *uint64_t v47 = v30;
  v33[1] = v31;
  sub_1D7871BDC(v34, v35);
  uint64_t v36 = v23;
  if (qword_1EBDF9DC8 != -1) {
    swift_once();
  }
  uint64_t v37 = v50;
  uint64_t v38 = __swift_project_value_buffer(v50, (uint64_t)qword_1EBDFBE70);
  swift_beginAccess();
  uint64_t v40 = v48;
  uint64_t v39 = v49;
  (*(void (**)(char *, uint64_t, uint64_t))(v49 + 16))(v48, v38, v37);
  uint64_t v41 = sub_1D7A9B5D8();
  os_log_type_t v42 = sub_1D7A9C748();
  if (os_log_type_enabled(v41, v42))
  {
    uint64_t v43 = (uint8_t *)swift_slowAlloc();
    unint64_t v52 = v27;
    uint64_t v44 = v43;
    *(_DWORD *)uint64_t v43 = 134217984;
    uint64_t v36 = v23;
    id v53 = v46;
    sub_1D7A9C9E8();
    _os_log_impl(&dword_1D7853000, v41, v42, "Encrypted 0.5 MB from FileHandle starting at offset: %llu", v44, 0xCu);
    uint64_t v45 = v44;
    unint64_t v27 = v52;
    MEMORY[0x1D947D740](v45, -1, -1);
  }
  sub_1D78607E8(v36, v27);

  return (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v40, v37);
}

uint64_t sub_1D7A084F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8477F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

ValueMetadata *type metadata accessor for DIPFileUploadCryptor()
{
  return &type metadata for DIPFileUploadCryptor;
}

uint64_t destroy for DIPFileUploadCryptor.Options(void *a1)
{
  swift_bridgeObjectRelease();
  uint64_t result = sub_1D78607E8(a1[3], a1[4]);
  unint64_t v3 = a1[6];
  if (v3 >> 60 != 15) {
    uint64_t result = sub_1D78607E8(a1[5], v3);
  }
  unint64_t v4 = a1[8];
  if (v4 >> 60 != 15)
  {
    uint64_t v5 = a1[7];
    return sub_1D78607E8(v5, v4);
  }
  return result;
}

uint64_t initializeWithCopy for DIPFileUploadCryptor.Options(uint64_t a1, uint64_t a2)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  unint64_t v6 = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  sub_1D7860790(v5, v6);
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  uint64_t v7 = (uint64_t *)(a2 + 40);
  unint64_t v8 = *(void *)(a2 + 48);
  if (v8 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 40) = *(_OWORD *)v7;
  }
  else
  {
    uint64_t v9 = *v7;
    sub_1D7860790(*v7, *(void *)(a2 + 48));
    *(void *)(a1 + 40) = v9;
    *(void *)(a1 + 48) = v8;
  }
  uint64_t v10 = (uint64_t *)(a2 + 56);
  unint64_t v11 = *(void *)(a2 + 64);
  if (v11 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 56) = *(_OWORD *)v10;
  }
  else
  {
    uint64_t v12 = *v10;
    sub_1D7860790(*v10, v11);
    *(void *)(a1 + 56) = v12;
    *(void *)(a1 + 64) = v11;
  }
  return a1;
}

uint64_t assignWithCopy for DIPFileUploadCryptor.Options(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 24);
  unint64_t v5 = *(void *)(a2 + 32);
  sub_1D7860790(v4, v5);
  uint64_t v6 = *(void *)(a1 + 24);
  unint64_t v7 = *(void *)(a1 + 32);
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = v5;
  sub_1D78607E8(v6, v7);
  unint64_t v8 = (uint64_t *)(a2 + 40);
  unint64_t v9 = *(void *)(a2 + 48);
  if (*(void *)(a1 + 48) >> 60 == 15)
  {
    if (v9 >> 60 != 15)
    {
      uint64_t v10 = *v8;
      sub_1D7860790(*v8, *(void *)(a2 + 48));
      *(void *)(a1 + 40) = v10;
      *(void *)(a1 + 48) = v9;
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v9 >> 60 == 15)
  {
    sub_1D7870C24(a1 + 40);
LABEL_6:
    *(_OWORD *)(a1 + 40) = *(_OWORD *)v8;
    goto LABEL_8;
  }
  uint64_t v11 = *v8;
  sub_1D7860790(*v8, *(void *)(a2 + 48));
  uint64_t v12 = *(void *)(a1 + 40);
  unint64_t v13 = *(void *)(a1 + 48);
  *(void *)(a1 + 40) = v11;
  *(void *)(a1 + 48) = v9;
  sub_1D78607E8(v12, v13);
LABEL_8:
  uint64_t v14 = (uint64_t *)(a2 + 56);
  unint64_t v15 = *(void *)(a2 + 64);
  if (*(void *)(a1 + 64) >> 60 != 15)
  {
    if (v15 >> 60 != 15)
    {
      uint64_t v17 = *v14;
      sub_1D7860790(*v14, v15);
      uint64_t v18 = *(void *)(a1 + 56);
      unint64_t v19 = *(void *)(a1 + 64);
      *(void *)(a1 + 56) = v17;
      *(void *)(a1 + 64) = v15;
      sub_1D78607E8(v18, v19);
      return a1;
    }
    sub_1D7870C24(a1 + 56);
    goto LABEL_13;
  }
  if (v15 >> 60 == 15)
  {
LABEL_13:
    *(_OWORD *)(a1 + 56) = *(_OWORD *)v14;
    return a1;
  }
  uint64_t v16 = *v14;
  sub_1D7860790(*v14, v15);
  *(void *)(a1 + 56) = v16;
  *(void *)(a1 + 64) = v15;
  return a1;
}

__n128 __swift_memcpy72_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for DIPFileUploadCryptor.Options(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a1 + 24);
  unint64_t v6 = *(void *)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  sub_1D78607E8(v5, v6);
  unint64_t v7 = (_OWORD *)(a2 + 40);
  unint64_t v8 = *(void *)(a1 + 48);
  if (v8 >> 60 == 15) {
    goto LABEL_4;
  }
  unint64_t v9 = *(void *)(a2 + 48);
  if (v9 >> 60 == 15)
  {
    sub_1D7870C24(a1 + 40);
LABEL_4:
    *(_OWORD *)(a1 + 40) = *v7;
    goto LABEL_6;
  }
  uint64_t v10 = *(void *)(a1 + 40);
  *(void *)(a1 + 40) = *(void *)v7;
  *(void *)(a1 + 48) = v9;
  sub_1D78607E8(v10, v8);
LABEL_6:
  uint64_t v11 = (void *)(a2 + 56);
  unint64_t v12 = *(void *)(a1 + 64);
  if (v12 >> 60 != 15)
  {
    unint64_t v13 = *(void *)(a2 + 64);
    if (v13 >> 60 != 15)
    {
      uint64_t v14 = *(void *)(a1 + 56);
      *(void *)(a1 + 56) = *v11;
      *(void *)(a1 + 64) = v13;
      sub_1D78607E8(v14, v12);
      return a1;
    }
    sub_1D7870C24(a1 + 56);
  }
  *(_OWORD *)(a1 + 56) = *(_OWORD *)v11;
  return a1;
}

uint64_t getEnumTagSinglePayload for DIPFileUploadCryptor.Options(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 72)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DIPFileUploadCryptor.Options(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 72) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 72) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DIPFileUploadCryptor.Options()
{
  return &type metadata for DIPFileUploadCryptor.Options;
}

uint64_t *initializeBufferWithCopyOfBuffer for DIPFileUploadCryptor.Result(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1D7A9AF68();
    uint64_t v8 = *(void *)(v7 - 8);
    unint64_t v9 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16);
    v9(a1, a2, v7);
    uint64_t v10 = *(int *)(a3 + 20);
    uint64_t v11 = (char *)a1 + v10;
    unint64_t v12 = (char *)a2 + v10;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v12, 1, v7))
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8477F0);
      memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      v9((uint64_t *)v11, (uint64_t *)v12, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v11, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t destroy for DIPFileUploadCryptor.Result(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D7A9AF68();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v8(a1, v4);
  uint64_t v6 = a1 + *(int *)(a2 + 20);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v6, 1, v4);
  if (!result)
  {
    return ((uint64_t (*)(uint64_t, uint64_t))v8)(v6, v4);
  }
  return result;
}

char *initializeWithCopy for DIPFileUploadCryptor.Result(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_1D7A9AF68();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 16);
  v8(a1, a2, v6);
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v11, 1, v6))
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8477F0);
    memcpy(v10, v11, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    v8(v10, v11, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
  }
  return a1;
}

char *assignWithCopy for DIPFileUploadCryptor.Result(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_1D7A9AF68();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 24);
  v8(a1, a2, v6);
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  uint64_t v12 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v7 + 48);
  int v13 = v12(&a1[v9], 1, v6);
  int v14 = v12(v11, 1, v6);
  if (!v13)
  {
    if (!v14)
    {
      v8(v10, v11, v6);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8477F0);
    memcpy(v10, v11, *(void *)(*(void *)(v15 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v11, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
  return a1;
}

char *initializeWithTake for DIPFileUploadCryptor.Result(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_1D7A9AF68();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 32);
  v8(a1, a2, v6);
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v11, 1, v6))
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8477F0);
    memcpy(v10, v11, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    v8(v10, v11, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
  }
  return a1;
}

char *assignWithTake for DIPFileUploadCryptor.Result(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_1D7A9AF68();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 40);
  v8(a1, a2, v6);
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  uint64_t v12 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v7 + 48);
  int v13 = v12(&a1[v9], 1, v6);
  int v14 = v12(v11, 1, v6);
  if (!v13)
  {
    if (!v14)
    {
      v8(v10, v11, v6);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8477F0);
    memcpy(v10, v11, *(void *)(*(void *)(v15 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v10, v11, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for DIPFileUploadCryptor.Result(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1D7A09288);
}

uint64_t sub_1D7A09288(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1D7A9AF68();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8477F0);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t storeEnumTagSinglePayload for DIPFileUploadCryptor.Result(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1D7A09398);
}

uint64_t sub_1D7A09398(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_1D7A9AF68();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8477F0);
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

void sub_1D7A094A0()
{
  sub_1D7A9AF68();
  if (v0 <= 0x3F)
  {
    sub_1D7A09568();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_1D7A09568()
{
  if (!qword_1EA846DA0)
  {
    sub_1D7A9AF68();
    unint64_t v0 = sub_1D7A9C9A8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA846DA0);
    }
  }
}

uint64_t static IdentityBindingDetails.supportsSecureCoding.getter()
{
  return 1;
}

uint64_t IdentityBindingDetails.templateUUIDs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t IdentityBindingDetails.passDescriptions.getter()
{
  return swift_bridgeObjectRetain();
}

id IdentityBindingDetails.__allocating_init(templateUUIDs:passDescriptions:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (char *)objc_allocWithZone(v2);
  *(void *)&v5[OBJC_IVAR____TtC13CoreIDVShared22IdentityBindingDetails_templateUUIDs] = a1;
  *(void *)&v5[OBJC_IVAR____TtC13CoreIDVShared22IdentityBindingDetails_passDescriptions] = a2;
  v7.receiver = v5;
  v7.super_class = v2;
  return objc_msgSendSuper2(&v7, sel_init);
}

id IdentityBindingDetails.init(templateUUIDs:passDescriptions:)(uint64_t a1, uint64_t a2)
{
  ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v2[OBJC_IVAR____TtC13CoreIDVShared22IdentityBindingDetails_templateUUIDs] = a1;
  *(void *)&v2[OBJC_IVAR____TtC13CoreIDVShared22IdentityBindingDetails_passDescriptions] = a2;
  v7.receiver = v2;
  v7.super_class = ObjectType;
  return objc_msgSendSuper2(&v7, sel_init);
}

Swift::Void __swiftcall IdentityBindingDetails.encode(with:)(NSCoder with)
{
  sub_1D7A9B1A8();
  unint64_t v2 = (void *)sub_1D7A9C2F8();
  long long v3 = (void *)sub_1D7A9BF98();
  [(objc_class *)with.super.isa encodeObject:v2 forKey:v3];

  uint64_t v4 = (void *)sub_1D7A9C2F8();
  id v5 = (id)sub_1D7A9BF98();
  [(objc_class *)with.super.isa encodeObject:v4 forKey:v5];
}

id IdentityBindingDetails.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return IdentityBindingDetails.init(coder:)(a1);
}

id IdentityBindingDetails.init(coder:)(void *a1)
{
  unint64_t v2 = v1;
  ObjectType = (objc_class *)swift_getObjectType();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA843600);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1D7AA0A40;
  uint64_t v6 = sub_1D78C4038(0, (unint64_t *)&qword_1EBDF90E0);
  *(void *)(v5 + 32) = v6;
  *(void *)(v5 + 40) = sub_1D78C4038(0, (unint64_t *)&unk_1EA846DC0);
  objc_super v7 = v2;
  sub_1D7A9C918();
  swift_bridgeObjectRelease();
  if (!v14)
  {

    sub_1D7867598((uint64_t)v13);
LABEL_11:
    swift_deallocPartialClassInstance();
    return 0;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA846DD0);
  if ((swift_dynamicCast() & 1) == 0)
  {

    goto LABEL_11;
  }
  *(void *)&v7[OBJC_IVAR____TtC13CoreIDVShared22IdentityBindingDetails_templateUUIDs] = v12;
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1D7AA0A40;
  *(void *)(v8 + 32) = v6;
  *(void *)(v8 + 40) = sub_1D78C4038(0, (unint64_t *)&qword_1EBDF8260);
  sub_1D7A9C918();
  swift_bridgeObjectRelease();
  if (!v14)
  {

    sub_1D7867598((uint64_t)v13);
LABEL_10:

    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDF7900);
  if ((swift_dynamicCast() & 1) == 0)
  {

    goto LABEL_10;
  }
  *(void *)&v7[OBJC_IVAR____TtC13CoreIDVShared22IdentityBindingDetails_passDescriptions] = v12;

  v11.receiver = v7;
  v11.super_class = ObjectType;
  id v9 = objc_msgSendSuper2(&v11, sel_init);

  return v9;
}

id IdentityBindingDetails.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void IdentityBindingDetails.init()()
{
}

id IdentityBindingDetails.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for IdentityBindingDetails()
{
  return self;
}

uint64_t method lookup function for IdentityBindingDetails(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for IdentityBindingDetails);
}

uint64_t dispatch thunk of IdentityBindingDetails.__allocating_init(templateUUIDs:passDescriptions:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of IdentityBindingDetails.__allocating_init(coder:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t *ISO18013ReaderAuthentication.sessionTranscript.getter@<X0>(_OWORD *a1@<X8>)
{
  long long v3 = v1[5];
  long long v13 = v1[4];
  long long v2 = v13;
  long long v14 = v3;
  long long v5 = v1[7];
  long long v15 = v1[6];
  long long v4 = v15;
  long long v16 = v5;
  long long v6 = v1[1];
  v10[0] = *v1;
  v10[1] = v6;
  long long v8 = v1[3];
  long long v11 = v1[2];
  long long v7 = v11;
  long long v12 = v8;
  *a1 = v10[0];
  a1[1] = v6;
  a1[2] = v7;
  a1[3] = v8;
  a1[4] = v2;
  a1[5] = v3;
  a1[6] = v4;
  a1[7] = v5;
  return sub_1D79F98E0((uint64_t *)v10, (void (*)(void))sub_1D7860790, (void (*)(uint64_t, uint64_t))sub_1D786E9D8, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1D79AA0A8, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1D79AA11C);
}

uint64_t ISO18013ReaderAuthentication.itemsRequestBytes.getter()
{
  uint64_t v1 = *(void *)(v0 + 128);
  sub_1D7860790(v1, *(void *)(v0 + 136));
  return v1;
}

uint64_t ISO18013ReaderAuthentication.dataValue.getter()
{
  sub_1D7A9B3F8();
  swift_allocObject();
  sub_1D7A9B3E8();
  sub_1D7A09EE4();
  uint64_t v0 = sub_1D7A9B3C8();
  unint64_t v2 = v1;
  swift_release();
  swift_allocObject();
  sub_1D7860790(v0, v2);
  sub_1D7A9B3E8();
  sub_1D7860790(v0, v2);
  sub_1D7871AD8();
  uint64_t v3 = sub_1D7A9B3B8();
  unint64_t v5 = v4;
  swift_release();
  sub_1D78607E8(v0, v2);
  sub_1D78607E8(v0, v2);
  sub_1D7860790(v3, v5);
  sub_1D78607E8(v3, v5);
  sub_1D78607E8(v0, v2);
  return v3;
}

unint64_t sub_1D7A09EE4()
{
  unint64_t result = qword_1EA846DD8;
  if (!qword_1EA846DD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA846DD8);
  }
  return result;
}

__n128 ISO18013ReaderAuthentication.init(sessionTranscript:itemsRequestBytes:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  long long v4 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(a4 + 64) = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(a4 + 80) = v4;
  long long v5 = *(_OWORD *)(a1 + 112);
  *(_OWORD *)(a4 + 96) = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(a4 + 112) = v5;
  long long v6 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)a4 = *(_OWORD *)a1;
  *(_OWORD *)(a4 + 16) = v6;
  __n128 result = *(__n128 *)(a1 + 32);
  long long v8 = *(_OWORD *)(a1 + 48);
  *(__n128 *)(a4 + 32) = result;
  *(_OWORD *)(a4 + 48) = v8;
  *(void *)(a4 + 128) = a2;
  *(void *)(a4 + 136) = a3;
  return result;
}

uint64_t *ISO18013ReaderAuthentication.init(from:)@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D7A9D678();
  if (v2) {
    return (uint64_t *)__swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v38, v39);
  sub_1D7A9D2A8();
  swift_bridgeObjectRelease();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v38, v39);
  sub_1D79F988C();
  sub_1D7A9D2B8();
  long long v26 = v34;
  long long v27 = v35;
  long long v28 = v36;
  long long v29 = v37;
  long long v22 = v30;
  long long v23 = v31;
  long long v24 = v32;
  long long v25 = v33;
  long long v40 = v30;
  long long v41 = v31;
  long long v42 = v32;
  long long v43 = v33;
  long long v46 = v36;
  long long v47 = v37;
  long long v44 = v34;
  long long v45 = v35;
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v38, v39);
  sub_1D79F98E0((uint64_t *)&v22, (void (*)(void))sub_1D7860790, (void (*)(uint64_t, uint64_t))sub_1D786E9D8, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1D79AA0A8, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1D79AA11C);
  sub_1D786073C();
  sub_1D7A9D2B8();
  long long v5 = v21;
  sub_1D7860790(v21, *((unint64_t *)&v21 + 1));
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
  long long v15 = v26;
  long long v16 = v27;
  long long v17 = v28;
  long long v18 = v29;
  long long v11 = v22;
  long long v12 = v23;
  long long v13 = v24;
  long long v14 = v25;
  long long v19 = v21;
  sub_1D7A0A2EC((uint64_t *)&v11);
  sub_1D78607E8(v5, *((unint64_t *)&v5 + 1));
  sub_1D79F98E0((uint64_t *)&v22, (void (*)(void))sub_1D78607E8, (void (*)(uint64_t, uint64_t))sub_1D7871BDC, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1D79AC044, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1D79F9A44);
  long long v6 = v18;
  a2[6] = v17;
  a2[7] = v6;
  a2[8] = v19;
  long long v7 = v14;
  a2[2] = v13;
  a2[3] = v7;
  long long v8 = v16;
  a2[4] = v15;
  a2[5] = v8;
  long long v9 = v12;
  *a2 = v11;
  a2[1] = v9;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v20[4] = v44;
  v20[5] = v45;
  v20[6] = v46;
  v20[7] = v47;
  v20[0] = v40;
  v20[1] = v41;
  void v20[2] = v42;
  v20[3] = v43;
  void v20[8] = v5;
  return sub_1D7A0A3D0((uint64_t *)v20);
}

uint64_t *sub_1D7A0A2EC(uint64_t *a1)
{
  uint64_t v2 = a1[8];
  unint64_t v3 = a1[9];
  uint64_t v4 = a1[10];
  uint64_t v5 = a1[11];
  uint64_t v6 = a1[12];
  uint64_t v7 = a1[13];
  uint64_t v8 = a1[14];
  unint64_t v9 = a1[15];
  uint64_t v10 = a1[16];
  unint64_t v12 = a1[17];
  sub_1D79F9994(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], (void (*)(void))sub_1D7860790, (void (*)(uint64_t, uint64_t))sub_1D786E9D8, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1D79AA0A8);
  sub_1D79AA11C(v2, v3, v4, v5, v6, v7, v8, v9);
  sub_1D7860790(v10, v12);
  return a1;
}

uint64_t *sub_1D7A0A3D0(uint64_t *a1)
{
  uint64_t v2 = a1[8];
  unint64_t v3 = a1[9];
  uint64_t v4 = a1[10];
  uint64_t v5 = a1[11];
  uint64_t v6 = a1[12];
  uint64_t v7 = a1[13];
  uint64_t v8 = a1[14];
  unint64_t v9 = a1[15];
  uint64_t v10 = a1[16];
  unint64_t v12 = a1[17];
  sub_1D79F9994(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], (void (*)(void))sub_1D78607E8, (void (*)(uint64_t, uint64_t))sub_1D7871BDC, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1D79AC044);
  sub_1D79F9A44(v2, v3, v4, v5, v6, v7, v8, v9);
  sub_1D78607E8(v10, v12);
  return a1;
}

uint64_t ISO18013ReaderAuthentication.encode(to:)(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D7A9D6C8();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v3, v4);
  sub_1D7A9D2E8();
  if (!v1)
  {
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v3, v4);
    sub_1D79F9E90();
    sub_1D7A9D2F8();
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v3, v4);
    sub_1D79AC094();
    sub_1D7A9D2F8();
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v3);
}

uint64_t *sub_1D7A0A614@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  return ISO18013ReaderAuthentication.init(from:)(a1, a2);
}

uint64_t sub_1D7A0A62C(void *a1)
{
  return ISO18013ReaderAuthentication.encode(to:)(a1);
}

uint64_t destroy for ISO18013ReaderAuthentication(uint64_t *a1)
{
  unint64_t v2 = a1[1];
  if (v2 >> 60 != 15)
  {
    sub_1D78607E8(*a1, v2);
    unint64_t v3 = a1[3];
    if (v3 >> 60 != 15) {
      sub_1D78607E8(a1[2], v3);
    }
    unint64_t v4 = a1[5];
    if (v4 >> 60 != 15)
    {
      sub_1D78607E8(a1[4], v4);
      unint64_t v5 = a1[7];
      if (v5 >> 60 != 15) {
        sub_1D78607E8(a1[6], v5);
      }
    }
  }
  if (a1[11])
  {
    sub_1D78607E8(a1[8], a1[9]);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1D78607E8(a1[14], a1[15]);
  }
  uint64_t v6 = a1[16];
  unint64_t v7 = a1[17];
  return sub_1D78607E8(v6, v7);
}

uint64_t initializeWithCopy for ISO18013ReaderAuthentication(uint64_t a1, uint64_t *a2)
{
  unint64_t v4 = a2[1];
  if (v4 >> 60 == 15)
  {
    long long v5 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
    long long v6 = *((_OWORD *)a2 + 3);
    *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
    *(_OWORD *)(a1 + 48) = v6;
    uint64_t v7 = a2[11];
    if (!v7) {
      goto LABEL_14;
    }
  }
  else
  {
    uint64_t v8 = *a2;
    sub_1D7860790(*a2, a2[1]);
    *(void *)a1 = v8;
    *(void *)(a1 + 8) = v4;
    unint64_t v9 = a2 + 2;
    unint64_t v10 = a2[3];
    if (v10 >> 60 == 15)
    {
      *(_OWORD *)(a1 + 16) = *(_OWORD *)v9;
    }
    else
    {
      uint64_t v11 = *v9;
      sub_1D7860790(*v9, a2[3]);
      *(void *)(a1 + 16) = v11;
      *(void *)(a1 + 24) = v10;
    }
    unint64_t v12 = a2[5];
    if (v12 >> 60 != 15)
    {
      uint64_t v14 = a2[4];
      sub_1D7860790(v14, a2[5]);
      *(void *)(a1 + 32) = v14;
      *(void *)(a1 + 40) = v12;
      long long v15 = a2 + 6;
      unint64_t v16 = a2[7];
      if (v16 >> 60 == 15)
      {
        *(_OWORD *)(a1 + 48) = *(_OWORD *)v15;
        uint64_t v7 = a2[11];
        if (v7) {
          goto LABEL_12;
        }
      }
      else
      {
        uint64_t v22 = *v15;
        sub_1D7860790(*v15, a2[7]);
        *(void *)(a1 + 48) = v22;
        *(void *)(a1 + 56) = v16;
        uint64_t v7 = a2[11];
        if (v7) {
          goto LABEL_12;
        }
      }
LABEL_14:
      long long v23 = *((_OWORD *)a2 + 5);
      *(_OWORD *)(a1 + 64) = *((_OWORD *)a2 + 4);
      *(_OWORD *)(a1 + 80) = v23;
      long long v24 = *((_OWORD *)a2 + 7);
      *(_OWORD *)(a1 + 96) = *((_OWORD *)a2 + 6);
      *(_OWORD *)(a1 + 112) = v24;
      goto LABEL_15;
    }
    long long v13 = *((_OWORD *)a2 + 3);
    *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
    *(_OWORD *)(a1 + 48) = v13;
    uint64_t v7 = a2[11];
    if (!v7) {
      goto LABEL_14;
    }
  }
LABEL_12:
  uint64_t v17 = a2[8];
  unint64_t v18 = a2[9];
  sub_1D7860790(v17, v18);
  *(void *)(a1 + 64) = v17;
  *(void *)(a1 + 72) = v18;
  *(void *)(a1 + 80) = a2[10];
  *(void *)(a1 + 88) = v7;
  uint64_t v19 = a2[13];
  *(void *)(a1 + 96) = a2[12];
  *(void *)(a1 + 104) = v19;
  uint64_t v20 = a2[14];
  unint64_t v21 = a2[15];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1D7860790(v20, v21);
  *(void *)(a1 + 112) = v20;
  *(void *)(a1 + 120) = v21;
LABEL_15:
  uint64_t v26 = a2[16];
  unint64_t v25 = a2[17];
  sub_1D7860790(v26, v25);
  *(void *)(a1 + 128) = v26;
  *(void *)(a1 + 136) = v25;
  return a1;
}

uint64_t assignWithCopy for ISO18013ReaderAuthentication(uint64_t a1, long long *a2)
{
  unint64_t v4 = *((void *)a2 + 1);
  if (*(void *)(a1 + 8) >> 60 == 15)
  {
    if (v4 >> 60 == 15)
    {
      long long v5 = *a2;
      long long v6 = a2[1];
      long long v7 = a2[3];
      *(_OWORD *)(a1 + 32) = a2[2];
      *(_OWORD *)(a1 + 48) = v7;
      *(_OWORD *)a1 = v5;
      *(_OWORD *)(a1 + 16) = v6;
      goto LABEL_34;
    }
    uint64_t v11 = *(void *)a2;
    sub_1D7860790(*(void *)a2, *((void *)a2 + 1));
    *(void *)a1 = v11;
    *(void *)(a1 + 8) = v4;
    unint64_t v12 = (uint64_t *)(a2 + 1);
    unint64_t v13 = *((void *)a2 + 3);
    if (v13 >> 60 == 15)
    {
      *(_OWORD *)(a1 + 16) = *(_OWORD *)v12;
    }
    else
    {
      uint64_t v20 = *v12;
      sub_1D7860790(*v12, *((void *)a2 + 3));
      *(void *)(a1 + 16) = v20;
      *(void *)(a1 + 24) = v13;
    }
    unint64_t v21 = *((void *)a2 + 5);
    if (v21 >> 60 == 15)
    {
      long long v22 = a2[3];
      *(_OWORD *)(a1 + 32) = a2[2];
      *(_OWORD *)(a1 + 48) = v22;
      goto LABEL_34;
    }
LABEL_21:
    uint64_t v29 = *((void *)a2 + 4);
    sub_1D7860790(v29, v21);
    *(void *)(a1 + 32) = v29;
    *(void *)(a1 + 40) = v21;
    long long v30 = a2 + 3;
    unint64_t v31 = *((void *)a2 + 7);
    if (v31 >> 60 == 15)
    {
      *(_OWORD *)(a1 + 48) = *v30;
      goto LABEL_34;
    }
    uint64_t v33 = *(void *)v30;
    goto LABEL_26;
  }
  if (v4 >> 60 == 15)
  {
    sub_1D79AC84C((uint64_t *)a1);
    long long v8 = a2[3];
    long long v10 = *a2;
    long long v9 = a2[1];
    *(_OWORD *)(a1 + 32) = a2[2];
    *(_OWORD *)(a1 + 48) = v8;
    *(_OWORD *)a1 = v10;
    *(_OWORD *)(a1 + 16) = v9;
    goto LABEL_34;
  }
  uint64_t v14 = *(void *)a2;
  sub_1D7860790(*(void *)a2, *((void *)a2 + 1));
  uint64_t v15 = *(void *)a1;
  unint64_t v16 = *(void *)(a1 + 8);
  *(void *)a1 = v14;
  *(void *)(a1 + 8) = v4;
  sub_1D78607E8(v15, v16);
  uint64_t v17 = (uint64_t *)(a2 + 1);
  unint64_t v18 = *((void *)a2 + 3);
  if (*(void *)(a1 + 24) >> 60 == 15)
  {
    if (v18 >> 60 != 15)
    {
      uint64_t v19 = *v17;
      sub_1D7860790(*v17, *((void *)a2 + 3));
      *(void *)(a1 + 16) = v19;
      *(void *)(a1 + 24) = v18;
      goto LABEL_18;
    }
    goto LABEL_16;
  }
  if (v18 >> 60 == 15)
  {
    sub_1D7870C24(a1 + 16);
LABEL_16:
    *(_OWORD *)(a1 + 16) = *(_OWORD *)v17;
    goto LABEL_18;
  }
  uint64_t v23 = *v17;
  sub_1D7860790(*v17, *((void *)a2 + 3));
  uint64_t v24 = *(void *)(a1 + 16);
  unint64_t v25 = *(void *)(a1 + 24);
  *(void *)(a1 + 16) = v23;
  *(void *)(a1 + 24) = v18;
  sub_1D78607E8(v24, v25);
LABEL_18:
  uint64_t v26 = (_OWORD *)(a1 + 32);
  long long v27 = a2 + 2;
  unint64_t v21 = *((void *)a2 + 5);
  if (*(void *)(a1 + 40) >> 60 == 15)
  {
    if (v21 >> 60 == 15)
    {
      long long v28 = a2[3];
      *uint64_t v26 = *v27;
      *(_OWORD *)(a1 + 48) = v28;
      goto LABEL_34;
    }
    goto LABEL_21;
  }
  if (v21 >> 60 == 15)
  {
    sub_1D79AC81C((uint64_t *)(a1 + 32));
    long long v32 = a2[3];
    *uint64_t v26 = *v27;
    *(_OWORD *)(a1 + 48) = v32;
    goto LABEL_34;
  }
  uint64_t v34 = *((void *)a2 + 4);
  sub_1D7860790(v34, *((void *)a2 + 5));
  uint64_t v35 = *(void *)(a1 + 32);
  unint64_t v36 = *(void *)(a1 + 40);
  *(void *)(a1 + 32) = v34;
  *(void *)(a1 + 40) = v21;
  sub_1D78607E8(v35, v36);
  long long v37 = (uint64_t *)(a2 + 3);
  unint64_t v31 = *((void *)a2 + 7);
  if (*(void *)(a1 + 56) >> 60 == 15)
  {
    if (v31 >> 60 != 15)
    {
      uint64_t v33 = *v37;
LABEL_26:
      sub_1D7860790(v33, v31);
      *(void *)(a1 + 48) = v33;
      *(void *)(a1 + 56) = v31;
      goto LABEL_34;
    }
    goto LABEL_32;
  }
  if (v31 >> 60 == 15)
  {
    sub_1D7870C24(a1 + 48);
LABEL_32:
    *(_OWORD *)(a1 + 48) = *(_OWORD *)v37;
    goto LABEL_34;
  }
  uint64_t v38 = *v37;
  sub_1D7860790(*v37, *((void *)a2 + 7));
  uint64_t v39 = *(void *)(a1 + 48);
  unint64_t v40 = *(void *)(a1 + 56);
  *(void *)(a1 + 48) = v38;
  *(void *)(a1 + 56) = v31;
  sub_1D78607E8(v39, v40);
LABEL_34:
  long long v41 = (_OWORD *)(a1 + 64);
  long long v42 = a2 + 4;
  uint64_t v43 = *((void *)a2 + 11);
  if (*(void *)(a1 + 88))
  {
    if (v43)
    {
      uint64_t v44 = *((void *)a2 + 8);
      unint64_t v45 = *((void *)a2 + 9);
      sub_1D7860790(v44, v45);
      uint64_t v46 = *(void *)(a1 + 64);
      unint64_t v47 = *(void *)(a1 + 72);
      *(void *)(a1 + 64) = v44;
      *(void *)(a1 + 72) = v45;
      sub_1D78607E8(v46, v47);
      *(void *)(a1 + 80) = *((void *)a2 + 10);
      *(void *)(a1 + 88) = *((void *)a2 + 11);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 96) = *((void *)a2 + 12);
      *(void *)(a1 + 104) = *((void *)a2 + 13);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v48 = *((void *)a2 + 14);
      unint64_t v49 = *((void *)a2 + 15);
      sub_1D7860790(v48, v49);
      uint64_t v50 = *(void *)(a1 + 112);
      unint64_t v51 = *(void *)(a1 + 120);
      *(void *)(a1 + 112) = v48;
      *(void *)(a1 + 120) = v49;
      sub_1D78607E8(v50, v51);
    }
    else
    {
      sub_1D79AC87C(a1 + 64);
      long long v56 = a2[7];
      long long v58 = *v42;
      long long v57 = a2[5];
      *(_OWORD *)(a1 + 96) = a2[6];
      *(_OWORD *)(a1 + 112) = v56;
      _OWORD *v41 = v58;
      *(_OWORD *)(a1 + 80) = v57;
    }
  }
  else if (v43)
  {
    uint64_t v52 = *((void *)a2 + 8);
    unint64_t v53 = *((void *)a2 + 9);
    sub_1D7860790(v52, v53);
    *(void *)(a1 + 64) = v52;
    *(void *)(a1 + 72) = v53;
    *(void *)(a1 + 80) = *((void *)a2 + 10);
    *(void *)(a1 + 88) = *((void *)a2 + 11);
    *(void *)(a1 + 96) = *((void *)a2 + 12);
    *(void *)(a1 + 104) = *((void *)a2 + 13);
    uint64_t v54 = *((void *)a2 + 14);
    unint64_t v55 = *((void *)a2 + 15);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1D7860790(v54, v55);
    *(void *)(a1 + 112) = v54;
    *(void *)(a1 + 120) = v55;
  }
  else
  {
    long long v59 = *v42;
    long long v60 = a2[5];
    long long v61 = a2[7];
    *(_OWORD *)(a1 + 96) = a2[6];
    *(_OWORD *)(a1 + 112) = v61;
    _OWORD *v41 = v59;
    *(_OWORD *)(a1 + 80) = v60;
  }
  uint64_t v63 = *((void *)a2 + 16);
  unint64_t v62 = *((void *)a2 + 17);
  sub_1D7860790(v63, v62);
  uint64_t v64 = *(void *)(a1 + 128);
  unint64_t v65 = *(void *)(a1 + 136);
  *(void *)(a1 + 128) = v63;
  *(void *)(a1 + 136) = v62;
  sub_1D78607E8(v64, v65);
  return a1;
}

__n128 __swift_memcpy144_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  long long v2 = *(_OWORD *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  __n128 result = *(__n128 *)(a2 + 80);
  long long v6 = *(_OWORD *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v7;
  *(__n128 *)(a1 + 80) = result;
  *(_OWORD *)(a1 + 96) = v6;
  return result;
}

uint64_t assignWithTake for ISO18013ReaderAuthentication(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void *)(a1 + 8);
  if (v4 >> 60 == 15) {
    goto LABEL_4;
  }
  unint64_t v5 = *(void *)(a2 + 8);
  if (v5 >> 60 == 15)
  {
    sub_1D79AC84C((uint64_t *)a1);
LABEL_4:
    long long v6 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v6;
    long long v7 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v7;
    goto LABEL_19;
  }
  uint64_t v8 = *(void *)a1;
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v5;
  sub_1D78607E8(v8, v4);
  long long v9 = (_OWORD *)(a2 + 16);
  unint64_t v10 = *(void *)(a1 + 24);
  if (v10 >> 60 == 15) {
    goto LABEL_8;
  }
  unint64_t v11 = *(void *)(a2 + 24);
  if (v11 >> 60 == 15)
  {
    sub_1D7870C24(a1 + 16);
LABEL_8:
    *(_OWORD *)(a1 + 16) = *v9;
    goto LABEL_10;
  }
  uint64_t v12 = *(void *)(a1 + 16);
  *(void *)(a1 + 16) = *(void *)v9;
  *(void *)(a1 + 24) = v11;
  sub_1D78607E8(v12, v10);
LABEL_10:
  unint64_t v13 = *(void *)(a1 + 40);
  if (v13 >> 60 == 15)
  {
LABEL_13:
    long long v15 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v15;
    goto LABEL_19;
  }
  unint64_t v14 = *(void *)(a2 + 40);
  if (v14 >> 60 == 15)
  {
    sub_1D79AC81C((uint64_t *)(a1 + 32));
    goto LABEL_13;
  }
  uint64_t v16 = *(void *)(a1 + 32);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v14;
  sub_1D78607E8(v16, v13);
  uint64_t v17 = (_OWORD *)(a2 + 48);
  unint64_t v18 = *(void *)(a1 + 56);
  if (v18 >> 60 == 15) {
    goto LABEL_17;
  }
  unint64_t v19 = *(void *)(a2 + 56);
  if (v19 >> 60 == 15)
  {
    sub_1D7870C24(a1 + 48);
LABEL_17:
    *(_OWORD *)(a1 + 48) = *v17;
    goto LABEL_19;
  }
  uint64_t v20 = *(void *)(a1 + 48);
  *(void *)(a1 + 48) = *(void *)v17;
  *(void *)(a1 + 56) = v19;
  sub_1D78607E8(v20, v18);
LABEL_19:
  if (!*(void *)(a1 + 88))
  {
LABEL_23:
    long long v27 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v27;
    long long v28 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v28;
    goto LABEL_24;
  }
  uint64_t v21 = *(void *)(a2 + 88);
  if (!v21)
  {
    sub_1D79AC87C(a1 + 64);
    goto LABEL_23;
  }
  uint64_t v22 = *(void *)(a1 + 64);
  unint64_t v23 = *(void *)(a1 + 72);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  sub_1D78607E8(v22, v23);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v21;
  swift_bridgeObjectRelease();
  uint64_t v24 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v24;
  swift_bridgeObjectRelease();
  uint64_t v25 = *(void *)(a1 + 112);
  unint64_t v26 = *(void *)(a1 + 120);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  sub_1D78607E8(v25, v26);
LABEL_24:
  uint64_t v29 = *(void *)(a1 + 128);
  unint64_t v30 = *(void *)(a1 + 136);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  sub_1D78607E8(v29, v30);
  return a1;
}

uint64_t getEnumTagSinglePayload for ISO18013ReaderAuthentication(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 144)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 88);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ISO18013ReaderAuthentication(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 136) = 0;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 144) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 144) = 0;
    }
    if (a2) {
      *(void *)(result + 88) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ISO18013ReaderAuthentication()
{
  return &type metadata for ISO18013ReaderAuthentication;
}

uint64_t CBOREncodedCBOR.init(value:tag:encoder:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X3>, void *a4@<X8>)
{
  *a4 = 24;
  long long v9 = (char *)a4 + *(int *)(type metadata accessor for CBOREncodedCBOR() + 48);
  uint64_t v10 = *(void *)(a3 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v9, a1, a3);
  if (a2) {
    uint64_t v11 = sub_1D7A9B3B8();
  }
  else {
    uint64_t v11 = sub_1D7A9B3C8();
  }
  uint64_t v13 = v11;
  uint64_t v14 = v12;
  swift_release();
  if (v4)
  {
    long long v15 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
    v15(a1, a3);
    return ((uint64_t (*)(char *, uint64_t))v15)(v9, a3);
  }
  else
  {
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 8))(a1, a3);
    a4[1] = v13;
    a4[2] = v14;
  }
  return result;
}

uint64_t type metadata accessor for CBOREncodedCBOR()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t TaggedCBOR.init(data:tag:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  *a4 = result;
  a4[1] = a2;
  a4[2] = a3;
  return result;
}

uint64_t Base64URLEncodedString.dataValue.getter()
{
  uint64_t v1 = *(void *)v0;
  sub_1D7860790(*(void *)v0, *(void *)(v0 + 8));
  return v1;
}

uint64_t Base64URLEncodedString.stringValue.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Base64URLEncodedString.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D7A9D688();
  if (!v2)
  {
    __swift_project_boxed_opaque_existential_1(v25, v25[3]);
    uint64_t v5 = sub_1D7A9D378();
    uint64_t v7 = v6;
    uint64_t v26 = v5;
    unint64_t v8 = sub_1D791118C();
    uint64_t v9 = MEMORY[0x1E4FBB1A0];
    sub_1D7A9CA58();
    unint64_t v23 = v8;
    unint64_t v24 = v8;
    uint64_t v21 = v9;
    unint64_t v22 = v8;
    sub_1D7A9CA58();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1D7A9C0D8();
    swift_bridgeObjectRelease();
    uint64_t v11 = v10 & 3;
    if (v10 <= 0) {
      uint64_t v11 = -(-v10 & 3);
    }
    if (v11 >= 1)
    {
      MEMORY[0x1D947AF40](61, 0xE100000000000000, 4 - v11);
      sub_1D7A9C128();
      swift_bridgeObjectRelease();
    }
    uint64_t v12 = sub_1D7A9AFB8();
    unint64_t v14 = v13;
    sub_1D786E9D8(v12, v13);
    swift_bridgeObjectRelease();
    if (v14 >> 60 == 15)
    {
      swift_bridgeObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF9400);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1D7AA08E0;
      *(void *)(inited + 32) = sub_1D7A9BFC8();
      *(void *)(inited + 40) = v16;
      *(void *)(inited + 72) = v9;
      *(void *)(inited + 48) = 0xD000000000000029;
      *(void *)(inited + 56) = 0x80000001D7AC8810;
      sub_1D785F2A0(inited);
      id v17 = objc_allocWithZone(MEMORY[0x1E4F28C58]);
      unint64_t v18 = (void *)sub_1D7A9BF98();
      unint64_t v19 = (void *)sub_1D7A9BE98();
      swift_bridgeObjectRelease();
      objc_msgSend(v17, sel_initWithDomain_code_userInfo_, v18, -1, v19, v21, v22, v23, v24);

      swift_willThrow();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
    }
    else
    {
      sub_1D7871BDC(v12, v14);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
      *a2 = v12;
      a2[1] = v14;
      a2[2] = v26;
      a2[3] = v7;
    }
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1D7A0B4B4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return Base64URLEncodedString.init(from:)(a1, a2);
}

uint64_t Base64URLEncodedCBOR.stringValue.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Base64URLEncodedCBOR.value.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2 + *(int *)(a1 + 44));
}

uint64_t Base64URLEncodedCBOR.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v38 = a9;
  uint64_t v37 = *(void *)(a2 - 8);
  MEMORY[0x1F4188790](a1, a2, a3, a4, a5, a6, a7, a8);
  unint64_t v13 = (char *)v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for Base64URLEncodedCBOR();
  uint64_t v36 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14, v15, v16, v17, v18, v19, v20, v21);
  unint64_t v23 = (char *)v33 - v22;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v24 = (uint64_t)v44;
  sub_1D7A9D688();
  if (v24) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  v33[1] = a3;
  uint64_t v34 = v13;
  uint64_t v44 = a1;
  uint64_t v35 = v23;
  __swift_project_boxed_opaque_existential_1(v43, v43[3]);
  sub_1D7A0B8E0();
  sub_1D7A9D3D8();
  uint64_t v25 = v39;
  unint64_t v26 = v40;
  uint64_t v27 = v42;
  long long v28 = v35;
  *uint64_t v35 = v41;
  v28[1] = v27;
  sub_1D7A9B378();
  swift_allocObject();
  swift_bridgeObjectRetain();
  sub_1D7A9B368();
  uint64_t v29 = v34;
  sub_1D7A9B338();
  sub_1D78607E8(v25, v26);
  swift_release();
  swift_bridgeObjectRelease();
  unint64_t v30 = v35;
  (*(void (**)(char *, char *, uint64_t))(v37 + 32))((char *)v35 + *(int *)(v14 + 44), v29, a2);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v43);
  uint64_t v31 = v36;
  (*(void (**)(uint64_t, void *, uint64_t))(v36 + 16))(v38, v30, v14);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v44);
  return (*(uint64_t (**)(void *, uint64_t))(v31 + 8))(v30, v14);
}

uint64_t type metadata accessor for Base64URLEncodedCBOR()
{
  return __swift_instantiateGenericMetadata();
}

unint64_t sub_1D7A0B8E0()
{
  unint64_t result = qword_1EA846DE0;
  if (!qword_1EA846DE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA846DE0);
  }
  return result;
}

void *sub_1D7A0B934(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v91 = a4;
  uint64_t v92 = a2;
  uint64_t v93 = a3;
  uint64_t v5 = sub_1D7A9CCE8();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v14 = MEMORY[0x1F4188790](v5, v7, v8, v9, v10, v11, v12, v13);
  uint64_t v16 = (char *)&v83 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14, v17, v18, v19, v20, v21, v22, v23);
  uint64_t v25 = (char *)&v83 - v24;
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA846F10);
  MEMORY[0x1F4188790](v26 - 8, v27, v28, v29, v30, v31, v32, v33);
  uint64_t v35 = (char *)&v83 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = sub_1D7A9CCF8();
  uint64_t v37 = *(void *)(v36 - 8);
  uint64_t v45 = MEMORY[0x1F4188790](v36, v38, v39, v40, v41, v42, v43, v44);
  unint64_t v47 = (long long *)((char *)&v83 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v45, v48, v49, v50, v51, v52, v53, v54);
  long long v56 = (long long *)((char *)&v83 - v55);
  *(void *)&v95[0] = a1;
  id v57 = a1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDF9740);
  int v58 = swift_dynamicCast();
  long long v59 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v37 + 56);
  if (v58)
  {
    long long v60 = v25;
    uint64_t v90 = v16;
    v59(v35, 0, 1, v36);
    long long v61 = *(void (**)(long long *, char *, uint64_t))(v37 + 32);
    v61(v56, v35, v36);
    id v87 = *(void (**)(long long *, long long *, uint64_t))(v37 + 16);
    v87(v47, v56, v36);
    int v62 = (*(uint64_t (**)(long long *, uint64_t))(v37 + 88))(v47, v36);
    int v63 = *MEMORY[0x1E4FBBA70];
    uint64_t v88 = v37 + 16;
    unint64_t v89 = v56;
    uint64_t v85 = v5;
    uint64_t v86 = v6;
    if (v62 == v63)
    {
      (*(void (**)(long long *, uint64_t))(v37 + 96))(v47, v36);
      uint64_t v64 = *(void *)v47;
      uint64_t v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA843728);
      uint64_t v66 = v60;
      (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v60, (char *)v47 + *(int *)(v65 + 48), v5);
      *(void *)(swift_allocObject() + 16) = v64;
      uint64_t v67 = sub_1D7A0FCEC;
    }
    else if (v62 == *MEMORY[0x1E4FBBA80])
    {
      (*(void (**)(long long *, uint64_t))(v37 + 96))(v47, v36);
      uint64_t v69 = *(void *)v47;
      uint64_t v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA843728);
      uint64_t v66 = v60;
      (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v60, (char *)v47 + *(int *)(v70 + 48), v5);
      *(void *)(swift_allocObject() + 16) = v69;
      uint64_t v67 = sub_1D7A0FCB8;
    }
    else if (v62 == *MEMORY[0x1E4FBBA68])
    {
      (*(void (**)(long long *, uint64_t))(v37 + 96))(v47, v36);
      unsigned int v71 = (char *)v47 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA846F18) + 48);
      sub_1D79A0894(v47, (uint64_t)v95);
      uint64_t v66 = v60;
      (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v60, v71, v5);
      sub_1D79A0894(v95, (uint64_t)v94);
      uint64_t v72 = swift_allocObject();
      sub_1D79A0894(v94, v72 + 16);
      uint64_t v67 = sub_1D7A0FCA0;
    }
    else
    {
      if (v62 != *MEMORY[0x1E4FBBA78])
      {
        a1 = (void *)swift_allocError();
        v61(v82, (char *)v56, v36);
        goto LABEL_12;
      }
      (*(void (**)(long long *, uint64_t))(v37 + 96))(v47, v36);
      uint64_t v66 = v60;
      (*(void (**)(char *, long long *, uint64_t))(v6 + 32))(v60, v47, v5);
      uint64_t v67 = sub_1D7A0DE40;
    }
    BOOL v84 = v67;
    uint64_t v74 = v92;
    uint64_t v73 = v93;
    __swift_project_boxed_opaque_existential_1(v91, v91[3]);
    *(void *)&v94[0] = sub_1D7A9D668();
    uint64_t v75 = sub_1D7A9CCC8();
    sub_1D78CCB80(v75);
    *(void *)&v95[0] = v74;
    *((void *)&v95[0] + 1) = v73;
    swift_bridgeObjectRetain();
    sub_1D7A9C128();
    sub_1D7A9CCD8();
    sub_1D7A9C128();
    swift_bridgeObjectRelease();
    swift_allocError();
    unint64_t v47 = v89;
    v87(v76, v89, v36);
    id v77 = v90;
    sub_1D7A9CCB8();
    a1 = (void *)v84((uint64_t)v77);
    swift_release();
    uint64_t v78 = *(void (**)(char *, uint64_t))(v86 + 8);
    unsigned int v79 = v77;
    uint64_t v80 = v85;
    v78(v79, v85);
    v78(v66, v80);
LABEL_12:
    (*(void (**)(long long *, uint64_t))(v37 + 8))(v47, v36);
    return a1;
  }
  v59(v35, 1, 1, v36);
  sub_1D7871C4C((uint64_t)v35, &qword_1EA846F10);
  id v68 = a1;
  return a1;
}

uint64_t Base64URLEncodedCBOR.encode(to:)(void (*a1)(uint64_t, char *, uint64_t))
{
  __swift_project_boxed_opaque_existential_1(a1, *((void *)a1 + 3));
  sub_1D7A9D6D8();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v4, v5);
  sub_1D7A9D3F8();
  if (v1)
  {
    sub_1D7A9CC48();
    sub_1D7A9C128();
    sub_1D7A9D758();
    sub_1D7A9C128();
    swift_bridgeObjectRelease();
    sub_1D7A0C120(v1, 0, 0xE000000000000000, a1);
    swift_bridgeObjectRelease();
    swift_willThrow();
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v4);
}

void *sub_1D7A0C120(void *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, char *, uint64_t))
{
  uint64_t v85 = a4;
  uint64_t v86 = a2;
  uint64_t v87 = a3;
  uint64_t v5 = sub_1D7A9CD38();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v14 = MEMORY[0x1F4188790](v5, v7, v8, v9, v10, v11, v12, v13);
  uint64_t v16 = (char *)&v78 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14, v17, v18, v19, v20, v21, v22, v23);
  uint64_t v25 = (char *)&v78 - v24;
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA846F00);
  MEMORY[0x1F4188790](v26 - 8, v27, v28, v29, v30, v31, v32, v33);
  uint64_t v35 = (char *)&v78 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = sub_1D7A9CD48();
  uint64_t v37 = *(void *)(v36 - 8);
  uint64_t v45 = MEMORY[0x1F4188790](v36, v38, v39, v40, v41, v42, v43, v44);
  unint64_t v47 = (_OWORD *)((char *)&v78 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v45, v48, v49, v50, v51, v52, v53, v54);
  long long v56 = (char *)&v78 - v55;
  *(void *)&v92[0] = a1;
  id v57 = a1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDF9740);
  int v58 = swift_dynamicCast();
  long long v59 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v37 + 56);
  if (v58)
  {
    id v81 = v16;
    uint64_t v82 = v6;
    uint64_t v83 = v25;
    uint64_t v84 = v5;
    v59(v35, 0, 1, v36);
    long long v60 = *(void (**)(char *, char *, uint64_t))(v37 + 32);
    v60(v56, v35, v36);
    long long v61 = *(void **)(v37 + 16);
    ((void (*)(_OWORD *, char *, uint64_t))v61)(v47, v56, v36);
    unsigned int v62 = (*(uint64_t (**)(_OWORD *, uint64_t))(v37 + 88))(v47, v36);
    if (v62 == *MEMORY[0x1E4FBBAA0])
    {
      int v63 = *(void (**)(_OWORD *, uint64_t))(v37 + 96);
      unsigned int v80 = v62;
      v63(v47, v36);
      uint64_t v79 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA846F08);
      uint64_t v64 = (char *)v47 + *(int *)(v79 + 48);
      sub_1D7860E50(v47, v92);
      uint64_t v65 = v82;
      (*(void (**)(char *, char *, uint64_t))(v82 + 32))(v83, v64, v84);
      sub_1D7860E50(v92, v91);
      __swift_project_boxed_opaque_existential_1(v85, *((void *)v85 + 3));
      uint64_t v85 = (void (*)(uint64_t, char *, uint64_t))v61;
      uint64_t v90 = sub_1D7A9D6B8();
      uint64_t v66 = sub_1D7A9CCC8();
      sub_1D78CCB80(v66);
      uint64_t v88 = v86;
      uint64_t v89 = v87;
      swift_bridgeObjectRetain();
      sub_1D7A9C128();
      sub_1D7A9CCD8();
      sub_1D7A9C128();
      swift_bridgeObjectRelease();
      swift_allocError();
      v85(v67, v56, v36);
      id v68 = v81;
      sub_1D7A9CCB8();
      a1 = (void *)swift_allocError();
      uint64_t v70 = v69;
      uint64_t v71 = v69 + *(int *)(v79 + 48);
      sub_1D78907D8((uint64_t)v91, v69);
      uint64_t v72 = v71;
      uint64_t v73 = v84;
      (*(void (**)(uint64_t, char *, uint64_t))(v65 + 16))(v72, v68, v84);
      (*(void (**)(uint64_t, void, uint64_t))(v37 + 104))(v70, v80, v36);
      uint64_t v74 = *(void (**)(char *, uint64_t))(v65 + 8);
      v74(v68, v73);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v91);
      v74(v83, v73);
      (*(void (**)(char *, uint64_t))(v37 + 8))(v56, v36);
    }
    else
    {
      a1 = (void *)swift_allocError();
      v60(v76, v56, v36);
      (*(void (**)(_OWORD *, uint64_t))(v37 + 8))(v47, v36);
    }
  }
  else
  {
    v59(v35, 1, 1, v36);
    sub_1D7871C4C((uint64_t)v35, &qword_1EA846F00);
    id v75 = a1;
  }
  return a1;
}

uint64_t sub_1D7A0C638@<X0>(void *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X7>, uint64_t a7@<X8>)
{
  return Base64URLEncodedCBOR.init(from:)(a1, a2[2], a2[3], a2[4], a3, a4, a5, a6, a7);
}

uint64_t sub_1D7A0C65C(void (*a1)(uint64_t, char *, uint64_t))
{
  return Base64URLEncodedCBOR.encode(to:)(a1);
}

uint64_t CBOREncodedCBOR.dataValue.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  sub_1D7860790(v1, *(void *)(v0 + 16));
  return v1;
}

uint64_t CBOREncodedCBOR.value.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2 + *(int *)(a1 + 48));
}

uint64_t CBOREncodedCBOR.init(_:dataValue:decoder:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, char *a9@<X8>)
{
  v21[1] = a7;
  uint64_t v14 = *(void *)(a5 - 8);
  MEMORY[0x1F4188790](a1, a2, a3, a4, a5, a6, a7, a8);
  uint64_t v16 = (char *)v21 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)a9 = 24;
  *((void *)a9 + 1) = v17;
  *((void *)a9 + 2) = v18;
  sub_1D7860790(v17, v18);
  sub_1D7A9B338();
  swift_release();
  sub_1D78607E8(a2, a3);
  if (v9) {
    return sub_1D78607E8(a2, a3);
  }
  uint64_t v20 = type metadata accessor for CBOREncodedCBOR();
  return (*(uint64_t (**)(char *, char *, uint64_t))(v14 + 32))(&a9[*(int *)(v20 + 48)], v16, a5);
}

uint64_t CBOREncodedCBOR.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v40 = a9;
  uint64_t v39 = *(void *)(a2 - 8);
  MEMORY[0x1F4188790](a1, a2, a3, a4, a5, a6, a7, a8);
  uint64_t v13 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for CBOREncodedCBOR();
  uint64_t v38 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14, v15, v16, v17, v18, v19, v20, v21);
  uint64_t v23 = (char *)&v34 - v22;
  *(uint64_t *)((char *)&v34 - v22) = 24;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v24 = v44;
  sub_1D7A9D688();
  if (v24) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v36 = a3;
  uint64_t v37 = v23;
  uint64_t v44 = v13;
  uint64_t v35 = v14;
  __swift_project_boxed_opaque_existential_1(v43, v43[3]);
  sub_1D786073C();
  sub_1D7A9D3D8();
  uint64_t v25 = v41;
  unint64_t v26 = v42;
  uint64_t v27 = v37;
  *((void *)v37 + 1) = v41;
  *((void *)v27 + 2) = v26;
  sub_1D7A9B378();
  swift_allocObject();
  sub_1D7860790(v25, v26);
  sub_1D7A9B368();
  uint64_t v28 = (uint64_t)a1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D7A9D698();
  sub_1D7A9B358();
  uint64_t v29 = v44;
  sub_1D7A9B338();
  sub_1D78607E8(v25, v26);
  swift_release();
  uint64_t v30 = v35;
  uint64_t v31 = v37;
  (*(void (**)(char *, char *, uint64_t))(v39 + 32))(&v37[*(int *)(v35 + 48)], v29, a2);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v43);
  uint64_t v32 = v38;
  (*(void (**)(uint64_t, char *, uint64_t))(v38 + 16))(v40, v31, v30);
  __swift_destroy_boxed_opaque_existential_1(v28);
  return (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v31, v30);
}

uint64_t CBOREncodedCBOR.encode(to:)(void (*a1)(uint64_t, char *, uint64_t))
{
  __swift_project_boxed_opaque_existential_1(a1, *((void *)a1 + 3));
  sub_1D7A9D6D8();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v4, v5);
  sub_1D79AC094();
  sub_1D7A9D458();
  if (v1)
  {
    sub_1D7A9CC48();
    swift_bridgeObjectRelease();
    sub_1D7A9D758();
    sub_1D7A9C128();
    swift_bridgeObjectRelease();
    sub_1D7A0C120(v1, 0xD00000000000002ELL, 0x80000001D7AC8E70, a1);
    swift_bridgeObjectRelease();
    swift_willThrow();
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v4);
}

uint64_t sub_1D7A0CD60@<X0>(void *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X7>, uint64_t a7@<X8>)
{
  return CBOREncodedCBOR.init(from:)(a1, a2[2], a2[3], a2[4], a3, a4, a5, a6, a7);
}

uint64_t sub_1D7A0CD84(void (*a1)(uint64_t, char *, uint64_t))
{
  return CBOREncodedCBOR.encode(to:)(a1);
}

uint64_t static CBOREncodedCBOR<>.== infix(_:_:)(void *a1, void *a2)
{
  if (*a1 != *a2 || (sub_1D788583C(a1[1], a1[2], a2[1], a2[2]) & 1) == 0) {
    return 0;
  }
  type metadata accessor for CBOREncodedCBOR();
  return sub_1D7A9BF88() & 1;
}

uint64_t sub_1D7A0CE3C(void *a1, void *a2)
{
  return static CBOREncodedCBOR<>.== infix(_:_:)(a1, a2);
}

uint64_t BigUIntCBOR.value.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  sub_1D7860790(v1, *(void *)(v0 + 16));
  return v1;
}

uint64_t BigUIntCBOR.description.getter()
{
  sub_1D79F1750(*(void *)(v0 + 8), *(void *)(v0 + 16));
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDF7900);
  sub_1D78AC5E4();
  uint64_t v1 = sub_1D7A9BF38();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t BigUIntCBOR.init(value:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = 2;
  a3[1] = result;
  a3[2] = a2;
  return result;
}

uint64_t BigUIntCBOR.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D7A9D688();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(v8, v8[3]);
  sub_1D786073C();
  sub_1D7A9D3D8();
  sub_1D7860790(v6, v7);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
  *a2 = 2;
  a2[1] = v6;
  a2[2] = v7;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_1D78607E8(v6, v7);
}

uint64_t BigUIntCBOR.encode(to:)(void (*a1)(uint64_t, char *, uint64_t))
{
  __swift_project_boxed_opaque_existential_1(a1, *((void *)a1 + 3));
  sub_1D7A9D6D8();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v4, v5);
  sub_1D79AC094();
  sub_1D7A9D458();
  if (v1)
  {
    sub_1D7A9CC48();
    swift_bridgeObjectRelease();
    sub_1D7A0C120(v1, 0xD000000000000032, 0x80000001D7AC8EA0, a1);
    swift_willThrow();
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v4);
}

uint64_t BigUIntCBOR.hash(into:)()
{
  uint64_t v1 = *(void *)(v0 + 8);
  unint64_t v2 = *(void *)(v0 + 16);
  sub_1D7A9D5E8();
  sub_1D7860790(v1, v2);
  sub_1D7A9B038();
  return sub_1D78607E8(v1, v2);
}

uint64_t static BigUIntCBOR.== infix(_:_:)(void *a1, void *a2)
{
  if (*a1 == *a2) {
    return sub_1D788583C(a1[1], a1[2], a2[1], a2[2]);
  }
  else {
    return 0;
  }
}

uint64_t BigUIntCBOR.hashValue.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  unint64_t v2 = *(void *)(v0 + 16);
  sub_1D7A9D5D8();
  sub_1D7A9D5E8();
  sub_1D7860790(v1, v2);
  sub_1D7A9B038();
  sub_1D78607E8(v1, v2);
  return sub_1D7A9D628();
}

uint64_t sub_1D7A0D24C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return BigUIntCBOR.init(from:)(a1, a2);
}

uint64_t sub_1D7A0D264(void (*a1)(uint64_t, char *, uint64_t))
{
  return BigUIntCBOR.encode(to:)(a1);
}

uint64_t sub_1D7A0D27C()
{
  uint64_t v1 = *(void *)(v0 + 8);
  unint64_t v2 = *(void *)(v0 + 16);
  sub_1D7A9D5D8();
  sub_1D7A9D5E8();
  sub_1D7860790(v1, v2);
  sub_1D7A9B038();
  sub_1D78607E8(v1, v2);
  return sub_1D7A9D628();
}

uint64_t sub_1D7A0D2F8()
{
  uint64_t v1 = *(void *)(v0 + 8);
  unint64_t v2 = *(void *)(v0 + 16);
  sub_1D7A9D5E8();
  sub_1D7860790(v1, v2);
  sub_1D7A9B038();
  return sub_1D78607E8(v1, v2);
}

uint64_t sub_1D7A0D364()
{
  uint64_t v1 = *(void *)(v0 + 8);
  unint64_t v2 = *(void *)(v0 + 16);
  sub_1D7A9D5D8();
  sub_1D7A9D5E8();
  sub_1D7860790(v1, v2);
  sub_1D7A9B038();
  sub_1D78607E8(v1, v2);
  return sub_1D7A9D628();
}

uint64_t sub_1D7A0D3DC(void *a1, void *a2)
{
  if (*a1 == *a2) {
    return sub_1D788583C(a1[1], a1[2], a2[1], a2[2]);
  }
  else {
    return 0;
  }
}

uint64_t sub_1D7A0D400()
{
  sub_1D79F1750(*(void *)(v0 + 8), *(void *)(v0 + 16));
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDF7900);
  sub_1D78AC5E4();
  uint64_t v1 = sub_1D7A9BF38();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t TaggedCBOR.data.getter()
{
  uint64_t v1 = *(void *)v0;
  sub_1D7860790(*(void *)v0, *(void *)(v0 + 8));
  return v1;
}

uint64_t TaggedCBOR.tag.getter()
{
  return *(void *)(v0 + 16);
}

uint64_t TaggedCBOR.encode(to:)(void (*a1)(uint64_t, char *, uint64_t))
{
  uint64_t v21 = sub_1D7A9B418();
  v18[0] = *(void *)(v21 - 8);
  MEMORY[0x1F4188790](v21, v4, v5, v6, v7, v8, v9, v10);
  uint64_t v12 = (char *)v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *v1;
  unint64_t v14 = v1[1];
  __swift_project_boxed_opaque_existential_1(a1, *((void *)a1 + 3));
  sub_1D7A9D6D8();
  sub_1D7860840();
  v18[1] = v13;
  void v18[2] = v14;
  sub_1D7860790(v13, v14);
  sub_1D7871AD8();
  sub_1D7A9C8E8();
  if (v2)
  {
    sub_1D7A0C120(v2, 0xD00000000000001ALL, 0x80000001D7AC8EE0, a1);
    swift_willThrow();
  }
  else
  {
    uint64_t v15 = v18[0];
    sub_1D7A9B408();
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v19, v20);
    sub_1D7860880();
    uint64_t v16 = v21;
    sub_1D7A9D458();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v12, v16);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
}

uint64_t sub_1D7A0D6C8(void (*a1)(uint64_t, char *, uint64_t))
{
  return TaggedCBOR.encode(to:)(a1);
}

uint64_t ISO8601DateString.dateValue.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1D7A9B148();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t ISO8601DateString.stringValue.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for ISO8601DateString() + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ISO8601DateString.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v70 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF9118);
  MEMORY[0x1F4188790](v3 - 8, v4, v5, v6, v7, v8, v9, v10);
  uint64_t v72 = (char *)&v63 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1D7A9B148();
  uint64_t v71 = *(void *)(v12 - 8);
  uint64_t v20 = MEMORY[0x1F4188790](v12, v13, v14, v15, v16, v17, v18, v19);
  uint64_t v22 = (char *)&v63 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v20, v23, v24, v25, v26, v27, v28, v29);
  uint64_t v31 = (char *)&v63 - v30;
  uint64_t v32 = type metadata accessor for ISO8601DateString();
  MEMORY[0x1F4188790](v32, v33, v34, v35, v36, v37, v38, v39);
  uint64_t v41 = (char *)&v63 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v42 = (uint64_t)v74;
  sub_1D7A9D688();
  if (!v42)
  {
    id v68 = v22;
    uint64_t v66 = v41;
    uint64_t v74 = a1;
    uint64_t v67 = v31;
    uint64_t v69 = v12;
    __swift_project_boxed_opaque_existential_1(v73, v73[3]);
    uint64_t v43 = sub_1D7A9D378();
    uint64_t v45 = v44;
    uint64_t v65 = 0;
    id v46 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28D48]), sel_init);
    unint64_t v47 = (void *)sub_1D7A9BF98();
    id v48 = objc_msgSend(v46, sel_dateFromString_, v47);

    if (v48)
    {
      uint64_t v64 = v43;
      uint64_t v49 = v68;
      sub_1D7A9B118();

      uint64_t v51 = v71;
      uint64_t v50 = (uint64_t)v72;
      uint64_t v52 = *(void (**)(char *, char *, uint64_t))(v71 + 32);
      uint64_t v53 = v69;
      v52(v72, v49, v69);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v51 + 56))(v50, 0, 1, v53);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v51 + 48))(v50, 1, v53) != 1)
      {

        uint64_t v54 = v67;
        v52(v67, (char *)v50, v53);
        uint64_t v55 = (uint64_t)v66;
        long long v56 = (uint64_t *)&v66[*(int *)(v32 + 20)];
        *long long v56 = v64;
        v56[1] = v45;
        v52((char *)v55, v54, v53);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v73);
        sub_1D7A0DF58(v55, v70);
        return __swift_destroy_boxed_opaque_existential_1((uint64_t)v74);
      }
    }
    else
    {
      uint64_t v50 = (uint64_t)v72;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v71 + 56))(v72, 1, 1, v69);
    }
    swift_bridgeObjectRelease();
    sub_1D7871C4C(v50, &qword_1EBDF9118);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF9400);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1D7AA08E0;
    *(void *)(inited + 32) = sub_1D7A9BFC8();
    *(void *)(inited + 40) = v59;
    *(void *)(inited + 72) = MEMORY[0x1E4FBB1A0];
    *(void *)(inited + 48) = 0xD00000000000002FLL;
    *(void *)(inited + 56) = 0x80000001D7AC8F20;
    sub_1D785F2A0(inited);
    id v60 = objc_allocWithZone(MEMORY[0x1E4F28C58]);
    long long v61 = (void *)sub_1D7A9BF98();
    unsigned int v62 = (void *)sub_1D7A9BE98();
    swift_bridgeObjectRelease();
    objc_msgSend(v60, sel_initWithDomain_code_userInfo_, v61, -1, v62);

    swift_willThrow();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v73);
    a1 = v74;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1D7A0DC3C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ISO8601DateString.init(from:)(a1, a2);
}

uint64_t sub_1D7A0DC54(uint64_t a1, uint64_t a2, unsigned int *a3)
{
  uint64_t v6 = sub_1D7A9CCF8();
  uint64_t v7 = swift_allocError();
  uint64_t v9 = v8;
  uint64_t v10 = (char *)v8 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA843728) + 48);
  *uint64_t v9 = a2;
  uint64_t v11 = sub_1D7A9CCE8();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(v10, a1, v11);
  (*(void (**)(void *, void, uint64_t))(*(void *)(v6 - 8) + 104))(v9, *a3, v6);
  return v7;
}

uint64_t sub_1D7A0DD48(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D7A9CCF8();
  uint64_t v5 = swift_allocError();
  uint64_t v7 = v6;
  uint64_t v8 = v6 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA846F18) + 48);
  sub_1D7869658(a2, v7);
  uint64_t v9 = sub_1D7A9CCE8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16))(v8, a1, v9);
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v4 - 8) + 104))(v7, *MEMORY[0x1E4FBBA68], v4);
  return v5;
}

uint64_t sub_1D7A0DE40(uint64_t a1)
{
  uint64_t v2 = sub_1D7A9CCF8();
  uint64_t v3 = swift_allocError();
  uint64_t v5 = v4;
  uint64_t v6 = sub_1D7A9CCE8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(v5, a1, v6);
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v2 - 8) + 104))(v5, *MEMORY[0x1E4FBBA78], v2);
  return v3;
}

uint64_t type metadata accessor for ISO8601DateString()
{
  uint64_t result = qword_1EA846EF0;
  if (!qword_1EA846EF0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1D7A0DF58(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ISO8601DateString();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1D7A0DFC0()
{
  unint64_t result = qword_1EA846DE8[0];
  if (!qword_1EA846DE8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EA846DE8);
  }
  return result;
}

uint64_t destroy for Base64URLEncodedString(uint64_t a1)
{
  sub_1D78607E8(*(void *)a1, *(void *)(a1 + 8));
  return swift_bridgeObjectRelease();
}

uint64_t *initializeWithCopy for Base64URLEncodedString(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  unint64_t v5 = a2[1];
  sub_1D7860790(*a2, v5);
  *a1 = v4;
  a1[1] = v5;
  uint64_t v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t *assignWithCopy for Base64URLEncodedString(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  unint64_t v5 = a2[1];
  sub_1D7860790(*a2, v5);
  uint64_t v6 = *a1;
  unint64_t v7 = a1[1];
  *a1 = v4;
  a1[1] = v5;
  sub_1D78607E8(v6, v7);
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t *assignWithTake for Base64URLEncodedString(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  unint64_t v5 = a1[1];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  sub_1D78607E8(v4, v5);
  uint64_t v6 = *(void *)(a2 + 24);
  a1[2] = *(void *)(a2 + 16);
  a1[3] = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for IQComplexSignal(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for IQComplexSignal(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Base64URLEncodedString()
{
  return &type metadata for Base64URLEncodedString;
}

uint64_t sub_1D7A0E1F4()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1D7A0E290(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(_DWORD *)(v5 + 80);
  if (v6 > 7
    || (*(_DWORD *)(v5 + 80) & 0x100000) != 0
    || ((v6 + 16) & (unint64_t)~v6) + *(void *)(v5 + 64) > 0x18)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 & 0xF8 ^ 0x1F8) & (v6 + 16)));
    swift_retain();
  }
  else
  {
    uint64_t v10 = a2[1];
    *a1 = *a2;
    a1[1] = v10;
    uint64_t v11 = ((unint64_t)a1 + v6 + 16) & ~v6;
    uint64_t v12 = ((unint64_t)a2 + v6 + 16) & ~v6;
    uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    swift_bridgeObjectRetain();
    v13(v11, v12, v4);
  }
  return a1;
}

uint64_t sub_1D7A0E398(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v5 = *(uint64_t (**)(unint64_t))(v4 + 8);
  unint64_t v6 = (a1 + *(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  return v5(v6);
}

void *sub_1D7A0E40C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(void *)(a3 + 16);
  unint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  uint64_t v7 = *(unsigned __int8 *)(*(void *)(v5 - 8) + 80);
  uint64_t v8 = ((unint64_t)a1 + v7 + 16) & ~v7;
  uint64_t v9 = ((unint64_t)a2 + v7 + 16) & ~v7;
  swift_bridgeObjectRetain();
  v6(v8, v9, v5);
  return a1;
}

void *sub_1D7A0E49C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v6 + 24))(((unint64_t)a1 + *(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  return a1;
}

_OWORD *sub_1D7A0E534(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v4 + 32))(((unint64_t)a1 + *(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a1;
}

void *sub_1D7A0E5A4(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 40))(((unint64_t)a1 + *(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_1D7A0E62C(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  int v8 = a2 - v7;
  if (a2 <= v7) {
    goto LABEL_23;
  }
  uint64_t v9 = ((v6 + 16) & ~v6) + *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  char v10 = 8 * v9;
  if (v9 <= 3)
  {
    unsigned int v13 = ((v8 + ~(-1 << v10)) >> v10) + 1;
    if (HIWORD(v13))
    {
      int v11 = *(_DWORD *)((char *)a1 + v9);
      if (!v11) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v13 > 0xFF)
    {
      int v11 = *(unsigned __int16 *)((char *)a1 + v9);
      if (!*(unsigned __int16 *)((char *)a1 + v9)) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v13 < 2)
    {
LABEL_23:
      if ((v5 & 0x80000000) != 0) {
        return (*(uint64_t (**)(unint64_t))(v4 + 48))(((unint64_t)a1 + v6 + 16) & ~v6);
      }
      unint64_t v15 = *((void *)a1 + 1);
      if (v15 >= 0xFFFFFFFF) {
        LODWORD(v15) = -1;
      }
      return (v15 + 1);
    }
  }
  int v11 = *((unsigned __int8 *)a1 + v9);
  if (!*((unsigned char *)a1 + v9)) {
    goto LABEL_23;
  }
LABEL_15:
  int v14 = (v11 - 1) << v10;
  if (v9 > 3) {
    int v14 = 0;
  }
  if (v9)
  {
    if (v9 > 3) {
      LODWORD(v9) = 4;
    }
    switch((int)v9)
    {
      case 2:
        LODWORD(v9) = *a1;
        break;
      case 3:
        LODWORD(v9) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v9) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v9) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v7 + (v9 | v14) + 1;
}

void sub_1D7A0E7CC(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(unsigned __int8 *)(v6 + 80);
  size_t v10 = ((v9 + 16) & ~v9) + *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  BOOL v11 = a3 >= v8;
  unsigned int v12 = a3 - v8;
  if (v12 != 0 && v11)
  {
    if (v10 <= 3)
    {
      unsigned int v16 = ((v12 + ~(-1 << (8 * v10))) >> (8 * v10)) + 1;
      if (HIWORD(v16))
      {
        int v13 = 4;
      }
      else if (v16 >= 0x100)
      {
        int v13 = 2;
      }
      else
      {
        int v13 = v16 > 1;
      }
    }
    else
    {
      int v13 = 1;
    }
  }
  else
  {
    int v13 = 0;
  }
  if (v8 < a2)
  {
    unsigned int v14 = ~v8 + a2;
    if (v10 < 4)
    {
      int v15 = (v14 >> (8 * v10)) + 1;
      if (v10)
      {
        int v17 = v14 & ~(-1 << (8 * v10));
        bzero(a1, v10);
        if (v10 == 3)
        {
          *(_WORD *)a1 = v17;
          a1[2] = BYTE2(v17);
        }
        else if (v10 == 2)
        {
          *(_WORD *)a1 = v17;
        }
        else
        {
          *a1 = v17;
        }
      }
    }
    else
    {
      bzero(a1, v10);
      *(_DWORD *)a1 = v14;
      int v15 = 1;
    }
    switch(v13)
    {
      case 1:
        a1[v10] = v15;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        return;
      case 3:
        goto LABEL_41;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        return;
      default:
        return;
    }
  }
  switch(v13)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 3:
LABEL_41:
      __break(1u);
      JUMPOUT(0x1D7A0EA2CLL);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_23;
    default:
LABEL_23:
      if (a2)
      {
LABEL_24:
        if ((v7 & 0x80000000) != 0)
        {
          unint64_t v18 = (unint64_t)&a1[v9 + 16] & ~v9;
          uint64_t v19 = *(void (**)(unint64_t))(v6 + 56);
          v19(v18);
        }
        else if ((a2 & 0x80000000) != 0)
        {
          *(void *)a1 = a2 ^ 0x80000000;
          *((void *)a1 + 1) = 0;
        }
        else
        {
          *((void *)a1 + 1) = a2 - 1;
        }
      }
      return;
  }
}

uint64_t sub_1D7A0EA54()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1D7A0EAFC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(_DWORD *)(v5 + 80);
  if (v6 > 7
    || (*(_DWORD *)(v5 + 80) & 0x100000) != 0
    || ((v6 + 24) & (unint64_t)~v6) + *(void *)(v5 + 64) > 0x18)
  {
    uint64_t v9 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v9 + ((v6 & 0xF8 ^ 0x1F8) & (v6 + 16)));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    size_t v10 = (void *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
    BOOL v11 = (uint64_t *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v12 = *v11;
    unint64_t v13 = v11[1];
    sub_1D7860790(*v11, v13);
    *size_t v10 = v12;
    v10[1] = v13;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 16))(((unint64_t)v10 + v6 + 16) & ~v6, ((unint64_t)v11 + v6 + 16) & ~v6, v4);
  }
  return v3;
}

uint64_t sub_1D7A0EC2C(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = (a1 + 15) & 0xFFFFFFFFFFFFFFF8;
  sub_1D78607E8(*(void *)v3, *(void *)(v3 + 8));
  uint64_t v4 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v5 = *(uint64_t (**)(unint64_t))(v4 + 8);
  unint64_t v6 = (v3 + *(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  return v5(v6);
}

void *sub_1D7A0ECA4(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v5 = (void *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v6 = (uint64_t *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v7 = *v6;
  unint64_t v8 = v6[1];
  sub_1D7860790(*v6, v8);
  *uint64_t v5 = v7;
  v5[1] = v8;
  uint64_t v9 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v9 + 16))(((unint64_t)v5 + *(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80), ((unint64_t)v6 + *(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
  return a1;
}

void *sub_1D7A0ED48(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v5 = (uint64_t *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v6 = (uint64_t *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v7 = *v6;
  unint64_t v8 = v6[1];
  sub_1D7860790(*v6, v8);
  uint64_t v9 = *v5;
  unint64_t v10 = v5[1];
  *uint64_t v5 = v7;
  v5[1] = v8;
  sub_1D78607E8(v9, v10);
  uint64_t v11 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v11 + 24))(((unint64_t)v5 + *(unsigned __int8 *)(v11 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80), ((unint64_t)v6 + *(unsigned __int8 *)(v11 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
  return a1;
}

void *sub_1D7A0EDF4(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = (_OWORD *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v5 = (_OWORD *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v4 = *v5;
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v6 + 32))(((unint64_t)v4 + *(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), ((unint64_t)v5 + *(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  return a1;
}

void *sub_1D7A0EE78(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v5 = (uint64_t *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v6 = (_OWORD *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v7 = *v5;
  unint64_t v8 = v5[1];
  *(_OWORD *)uint64_t v5 = *v6;
  sub_1D78607E8(v7, v8);
  uint64_t v9 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v9 + 40))(((unint64_t)v5 + *(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80), ((unint64_t)v6 + *(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
  return a1;
}

uint64_t sub_1D7A0EF10(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  if (v5 <= 0xC) {
    unsigned int v7 = 12;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  int v8 = a2 - v7;
  if (a2 <= v7) {
    goto LABEL_23;
  }
  uint64_t v9 = ((v6 + 24) & ~v6) + *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  char v10 = 8 * v9;
  if (v9 <= 3)
  {
    unsigned int v13 = ((v8 + ~(-1 << v10)) >> v10) + 1;
    if (HIWORD(v13))
    {
      int v11 = *(_DWORD *)((char *)a1 + v9);
      if (!v11) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v13 > 0xFF)
    {
      int v11 = *(unsigned __int16 *)((char *)a1 + v9);
      if (!*(unsigned __int16 *)((char *)a1 + v9)) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v13 < 2)
    {
LABEL_23:
      unint64_t v15 = ((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8;
      if (v5 > 0xC) {
        return (*(uint64_t (**)(unint64_t))(v4 + 48))((v15 + v6 + 16) & ~v6);
      }
      uint64_t v16 = *(void *)(v15 + 8) >> 60;
      if (((4 * v16) & 0xC) != 0) {
        return 16 - ((4 * v16) & 0xC | (v16 >> 2));
      }
      else {
        return 0;
      }
    }
  }
  int v11 = *((unsigned __int8 *)a1 + v9);
  if (!*((unsigned char *)a1 + v9)) {
    goto LABEL_23;
  }
LABEL_15:
  int v14 = (v11 - 1) << v10;
  if (v9 > 3) {
    int v14 = 0;
  }
  if (v9)
  {
    if (v9 > 3) {
      LODWORD(v9) = 4;
    }
    switch((int)v9)
    {
      case 2:
        LODWORD(v9) = *a1;
        break;
      case 3:
        LODWORD(v9) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v9) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v9) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v7 + (v9 | v14) + 1;
}

void sub_1D7A0F0CC(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0xC) {
    unsigned int v8 = 12;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(unsigned __int8 *)(v6 + 80);
  size_t v10 = ((v9 + 24) & ~v9) + *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  BOOL v11 = a3 >= v8;
  unsigned int v12 = a3 - v8;
  if (v12 != 0 && v11)
  {
    if (v10 <= 3)
    {
      unsigned int v16 = ((v12 + ~(-1 << (8 * v10))) >> (8 * v10)) + 1;
      if (HIWORD(v16))
      {
        int v13 = 4;
      }
      else if (v16 >= 0x100)
      {
        int v13 = 2;
      }
      else
      {
        int v13 = v16 > 1;
      }
    }
    else
    {
      int v13 = 1;
    }
  }
  else
  {
    int v13 = 0;
  }
  if (v8 < a2)
  {
    unsigned int v14 = ~v8 + a2;
    if (v10 < 4)
    {
      int v15 = (v14 >> (8 * v10)) + 1;
      if (v10)
      {
        int v17 = v14 & ~(-1 << (8 * v10));
        bzero(a1, v10);
        if (v10 == 3)
        {
          *(_WORD *)a1 = v17;
          a1[2] = BYTE2(v17);
        }
        else if (v10 == 2)
        {
          *(_WORD *)a1 = v17;
        }
        else
        {
          *a1 = v17;
        }
      }
    }
    else
    {
      bzero(a1, v10);
      *(_DWORD *)a1 = v14;
      int v15 = 1;
    }
    switch(v13)
    {
      case 1:
        a1[v10] = v15;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        return;
      case 3:
        goto LABEL_41;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        return;
      default:
        return;
    }
  }
  switch(v13)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 3:
LABEL_41:
      __break(1u);
      JUMPOUT(0x1D7A0F348);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_23;
    default:
LABEL_23:
      if (a2)
      {
LABEL_24:
        unint64_t v18 = (void *)((unint64_t)(a1 + 15) & 0xFFFFFFFFFFFFFFF8);
        if (v7 > 0xC)
        {
          uint64_t v19 = *(void (**)(unint64_t))(v6 + 56);
          v19(((unint64_t)v18 + v9 + 16) & ~v9);
        }
        else if (a2 > 0xC)
        {
          *unint64_t v18 = a2 - 13;
          v18[1] = 0;
        }
        else
        {
          *unint64_t v18 = 0;
          v18[1] = (unint64_t)(((-a2 >> 2) & 3) - 4 * a2) << 60;
        }
      }
      return;
  }
}

void *sub_1D7A0F374(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  unint64_t v4 = a2[2];
  sub_1D7860790(v3, v4);
  a1[1] = v3;
  a1[2] = v4;
  return a1;
}

void *assignWithCopy for BigUIntCBOR(void *a1, void *a2)
{
  *a1 = *a2;
  uint64_t v3 = a2[1];
  unint64_t v4 = a2[2];
  sub_1D7860790(v3, v4);
  uint64_t v5 = a1[1];
  unint64_t v6 = a1[2];
  a1[1] = v3;
  a1[2] = v4;
  sub_1D78607E8(v5, v6);
  return a1;
}

uint64_t assignWithTake for BigUIntCBOR(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v4 = *(void *)(a1 + 8);
  unint64_t v5 = *(void *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v3;
  sub_1D78607E8(v4, v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for BigUIntCBOR(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xD && *(unsigned char *)(a1 + 24)) {
    return (*(_DWORD *)a1 + 13);
  }
  unsigned int v3 = (((*(void *)(a1 + 16) >> 60) >> 2) & 0xFFFFFFF3 | (4 * ((*(void *)(a1 + 16) >> 60) & 3))) ^ 0xF;
  if (v3 >= 0xC) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for BigUIntCBOR(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xC)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)uint64_t result = a2 - 13;
    if (a3 >= 0xD) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if (a3 >= 0xD) {
      *(unsigned char *)(result + 24) = 0;
    }
    if (a2)
    {
      *(void *)(result + 8) = 0;
      *(void *)(result + 16) = (unint64_t)(((-a2 >> 2) & 3) - 4 * a2) << 60;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BigUIntCBOR()
{
  return &type metadata for BigUIntCBOR;
}

uint64_t destroy for TaggedCBOR(uint64_t a1)
{
  return sub_1D78607E8(*(void *)a1, *(void *)(a1 + 8));
}

uint64_t *_s13CoreIDVShared10TaggedCBORVwCP_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  unint64_t v5 = a2[1];
  sub_1D7860790(*a2, v5);
  *a1 = v4;
  a1[1] = v5;
  a1[2] = a2[2];
  return a1;
}

uint64_t *assignWithCopy for TaggedCBOR(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  unint64_t v5 = a2[1];
  sub_1D7860790(*a2, v5);
  uint64_t v6 = *a1;
  unint64_t v7 = a1[1];
  *a1 = v4;
  a1[1] = v5;
  sub_1D78607E8(v6, v7);
  a1[2] = a2[2];
  return a1;
}

uint64_t *assignWithTake for TaggedCBOR(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  unint64_t v5 = a1[1];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  sub_1D78607E8(v4, v5);
  a1[2] = *(void *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for TaggedCBOR(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xD && *(unsigned char *)(a1 + 24)) {
    return (*(_DWORD *)a1 + 13);
  }
  unsigned int v3 = (((*(void *)(a1 + 8) >> 60) >> 2) & 0xFFFFFFF3 | (4 * ((*(void *)(a1 + 8) >> 60) & 3))) ^ 0xF;
  if (v3 >= 0xC) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for TaggedCBOR(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xC)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)uint64_t result = a2 - 13;
    if (a3 >= 0xD) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if (a3 >= 0xD) {
      *(unsigned char *)(result + 24) = 0;
    }
    if (a2)
    {
      *(void *)uint64_t result = 0;
      *(void *)(result + 8) = (unint64_t)(((-a2 >> 2) & 3) - 4 * a2) << 60;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TaggedCBOR()
{
  return &type metadata for TaggedCBOR;
}

uint64_t *initializeBufferWithCopyOfBuffer for ISO8601DateString(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1D7A9B148();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (uint64_t *)((char *)a1 + v8);
    size_t v10 = (uint64_t *)((char *)a2 + v8);
    uint64_t v11 = v10[1];
    *uint64_t v9 = *v10;
    v9[1] = v11;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for ISO8601DateString(uint64_t a1)
{
  uint64_t v2 = sub_1D7A9B148();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ISO8601DateString(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1D7A9B148();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = v9[1];
  *uint64_t v8 = *v9;
  v8[1] = v10;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ISO8601DateString(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1D7A9B148();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for ISO8601DateString(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1D7A9B148();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for ISO8601DateString(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1D7A9B148();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  *uint64_t v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ISO8601DateString(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1D7A0FA3C);
}

uint64_t sub_1D7A0FA3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1D7A9B148();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for ISO8601DateString(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1D7A0FB14);
}

uint64_t sub_1D7A0FB14(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1D7A9B148();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t sub_1D7A0FBD4()
{
  uint64_t result = sub_1D7A9B148();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1D7A0FC68()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return MEMORY[0x1F4186498](v0, 56, 7);
}

uint64_t sub_1D7A0FCA0(uint64_t a1)
{
  return sub_1D7A0DD48(a1, v1 + 16);
}

uint64_t sub_1D7A0FCA8()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1D7A0FCB8(uint64_t a1)
{
  return sub_1D7A0DC54(a1, *(void *)(v1 + 16), MEMORY[0x1E4FBBA80]);
}

uint64_t sub_1D7A0FCDC()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1D7A0FCEC(uint64_t a1)
{
  return sub_1D7A0DC54(a1, *(void *)(v1 + 16), MEMORY[0x1E4FBBA70]);
}

void static DIPCertUsage.japanNationalIDCardIssuerAuth.getter(unsigned char *a1@<X8>)
{
  *a1 = 19;
}

uint64_t sub_1D7A0FD1C()
{
  int v1 = *v0;
  int v2 = 983040;
  int v3 = v1;
  switch(*v0)
  {
    case 1:
      int v1 = 0;
      int v2 = 0x100000;
      int v3 = 256;
      break;
    case 2:
      int v1 = 0;
      int v2 = 0x100000;
      int v3 = 512;
      break;
    case 3:
      int v1 = 0;
      int v2 = 0x100000;
      int v3 = 768;
      break;
    case 4:
      int v1 = 0;
      int v2 = 0x100000;
      int v3 = 1024;
      break;
    case 5:
      int v1 = 0;
      int v2 = 0x100000;
      int v3 = 1280;
      break;
    case 6:
      int v1 = 0;
      int v2 = 0x100000;
      int v3 = 1536;
      break;
    case 7:
      int v1 = 0;
      int v2 = 0x100000;
      int v3 = 1792;
      break;
    case 8:
      int v1 = 0;
      int v2 = 0x100000;
      int v3 = 2048;
      break;
    case 9:
      int v1 = 0;
      int v2 = 0x100000;
      int v3 = 2304;
      break;
    case 0xA:
      int v2 = 1245184;
      int v3 = 4864;
      int v1 = 1;
      break;
    case 0xB:
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF82C8);
      uint64_t v5 = swift_allocObject();
      *(_OWORD *)(v5 + 16) = xmmword_1D7AA08E0;
      CFOptionFlags v6 = 3;
      goto LABEL_15;
    case 0xC:
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF82C8);
      uint64_t v5 = swift_allocObject();
      *(_OWORD *)(v5 + 16) = xmmword_1D7AA08E0;
      CFOptionFlags v6 = 16;
LABEL_15:
      *(void *)(v5 + 32) = SecPolicyCreateRevocation(v6);
      sub_1D7A9C338();
      int v2 = 1245184;
      int v3 = 4864;
      int v1 = 2;
      break;
    case 0xD:
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF82C8);
      uint64_t v7 = swift_allocObject();
      *(_OWORD *)(v7 + 16) = xmmword_1D7AA08E0;
      *(void *)(v7 + 32) = SecPolicyCreateRevocation(3uLL);
      sub_1D7A9C338();
      int v2 = 1245184;
      int v3 = 4864;
      int v1 = 3;
      break;
    case 0xE:
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF82C8);
      uint64_t v8 = swift_allocObject();
      *(_OWORD *)(v8 + 16) = xmmword_1D7AA08E0;
      *(void *)(v8 + 32) = SecPolicyCreateRevocation(0x10uLL);
      sub_1D7A9C338();
      int v2 = 1245184;
      int v3 = 4864;
      int v1 = 3;
      break;
    case 0xF:
      int v1 = 0;
      int v2 = 0x100000;
      int v3 = 2816;
      break;
    case 0x10:
      int v1 = 0;
      int v2 = 0x100000;
      int v3 = 3072;
      break;
    case 0x11:
      int v1 = 0;
      int v2 = 1179648;
      int v3 = 3328;
      break;
    case 0x12:
    case 0x13:
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF82C8);
      uint64_t v4 = swift_allocObject();
      *(_OWORD *)(v4 + 16) = xmmword_1D7AA08E0;
      *(void *)(v4 + 32) = SecPolicyCreateRevocation(0x10uLL);
      sub_1D7A9C338();
      int v2 = 1245184;
      int v3 = 4864;
      int v1 = 4;
      break;
    case 0x14:
      int v1 = 0;
      int v2 = 1114112;
      int v3 = 3584;
      break;
    default:
      return v3 | v1 | v2;
  }
  return v3 | v1 | v2;
}

CoreIDVShared::DIPCertUsage_optional __swiftcall DIPCertUsage.init(rawValue:)(Swift::String rawValue)
{
  int v2 = v1;
  uint64_t v3 = sub_1D7A9D478();
  result.value = swift_bridgeObjectRelease();
  char v5 = 0;
  char v6 = 3;
  switch(v3)
  {
    case 0:
      goto LABEL_5;
    case 1:
      char v5 = 1;
      goto LABEL_5;
    case 2:
      char v5 = 2;
LABEL_5:
      char v6 = v5;
      break;
    case 3:
      break;
    case 4:
      char v6 = 4;
      break;
    case 5:
      char v6 = 5;
      break;
    case 6:
      char v6 = 6;
      break;
    case 7:
      char v6 = 7;
      break;
    case 8:
      char v6 = 8;
      break;
    case 9:
      char v6 = 9;
      break;
    case 10:
      char v6 = 10;
      break;
    case 11:
      char v6 = 11;
      break;
    case 12:
      char v6 = 12;
      break;
    case 13:
      char v6 = 13;
      break;
    case 14:
      char v6 = 14;
      break;
    case 15:
      char v6 = 15;
      break;
    case 16:
      char v6 = 16;
      break;
    case 17:
      char v6 = 17;
      break;
    case 18:
      char v6 = 18;
      break;
    case 19:
      char v6 = 19;
      break;
    case 20:
      char v6 = 20;
      break;
    default:
      char v6 = 21;
      break;
  }
  *int v2 = v6;
  return result;
}

uint64_t DIPCertUsage.rawValue.getter()
{
  uint64_t result = 0x6449746E65696C63;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0xD000000000000013;
      break;
    case 2:
      uint64_t result = 0xD000000000000016;
      break;
    case 3:
      uint64_t result = 0xD00000000000001ELL;
      break;
    case 4:
      uint64_t result = 0xD000000000000021;
      break;
    case 5:
      unsigned int v2 = 1399811689;
      goto LABEL_19;
    case 6:
      uint64_t result = 0x7972636E456F6E69;
      break;
    case 7:
      uint64_t result = 0x6E696E6769537073;
      break;
    case 8:
      uint64_t result = 0x707972636E457073;
      break;
    case 9:
      uint64_t result = 0xD00000000000001BLL;
      break;
    case 0xA:
      uint64_t result = 0xD000000000000017;
      break;
    case 0xB:
    case 0x11:
    case 0x13:
    case 0x14:
      uint64_t result = 0xD000000000000012;
      break;
    case 0xC:
      uint64_t result = 0xD00000000000001BLL;
      break;
    case 0xD:
      uint64_t result = 0xD00000000000001DLL;
      break;
    case 0xE:
      uint64_t result = 0xD000000000000026;
      break;
    case 0xF:
      uint64_t result = 0xD00000000000001ALL;
      break;
    case 0x10:
      uint64_t result = 0xD000000000000017;
      break;
    case 0x12:
      unsigned int v2 = 1399616107;
LABEL_19:
      uint64_t result = v2 | 0x696E676900000000;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1D7A1043C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1D7998A78(*a1, *a2);
}

uint64_t sub_1D7A10448()
{
  return sub_1D7A9D628();
}

uint64_t sub_1D7A104B0()
{
  DIPCertUsage.rawValue.getter();
  sub_1D7A9C0B8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D7A10514()
{
  return sub_1D7A9D628();
}

CoreIDVShared::DIPCertUsage_optional sub_1D7A10578(Swift::String *a1)
{
  return DIPCertUsage.init(rawValue:)(*a1);
}

uint64_t sub_1D7A10584@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = DIPCertUsage.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t sub_1D7A105AC(char a1)
{
  unint64_t result = 0xD000000000000019;
  switch(a1)
  {
    case 7:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 8:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 10:
      unint64_t result = 0xD000000000000018;
      break;
    case 11:
      unint64_t result = 0xD000000000000017;
      break;
    case 12:
      unint64_t result = 0xD000000000000017;
      break;
    case 13:
      unint64_t result = 0xD000000000000017;
      break;
    case 14:
      unint64_t result = 0xD000000000000018;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t DIPOIDVerifier.init()@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1D785FEB4(MEMORY[0x1E4FBC860]);
  *a1 = result;
  a1[1] = 0;
  return result;
}

Swift::Void __swiftcall DIPOIDVerifier.setIntermediates(fromBase64DER:)(Swift::OpaquePointer fromBase64DER)
{
  uint64_t v2 = sub_1D7A9B5F8();
  uint64_t v10 = MEMORY[0x1F4188790](v2, v3, v4, v5, v6, v7, v8, v9);
  uint64_t v12 = (char *)v76 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10, v13, v14, v15, v16, v17, v18, v19);
  id v81 = (char *)v76 - v21;
  uint64_t v22 = *((void *)fromBase64DER._rawValue + 2);
  if (!v22) {
    return;
  }
  CFAllocatorRef v23 = (const __CFAllocator *)*MEMORY[0x1E4F1CF80];
  uint64_t v90 = (void (**)(char *, uint64_t, uint64_t))(v20 + 16);
  CFAllocatorRef v88 = v23;
  uint64_t v89 = (void (**)(char *, uint64_t))(v20 + 8);
  swift_bridgeObjectRetain();
  unint64_t v91 = sub_1D791118C();
  v76[1] = fromBase64DER._rawValue;
  uint64_t v24 = (uint64_t *)((char *)fromBase64DER._rawValue + 40);
  unint64_t v79 = (unint64_t)"to/CryptoHelpers.swift";
  uint64_t v87 = 0x80000001D7AC8FE0;
  uint64_t v86 = 0x80000001D7AC8F50;
  unint64_t v78 = (unint64_t)"64 decoding failed";
  uint64_t v85 = 0x80000001D7AC8F80;
  *(void *)&long long v25 = 136446210;
  long long v83 = v25;
  uint64_t v82 = MEMORY[0x1E4FBC840] + 8;
  uint64_t v77 = 0x80000001D7AC9010;
  unsigned int v80 = v12;
  while (1)
  {
    uint64_t v26 = *v24;
    v96[0] = *(v24 - 1);
    v96[1] = v26;
    uint64_t v94 = 10;
    unint64_t v95 = 0xE100000000000000;
    uint64_t v92 = 0;
    unint64_t v93 = 0xE000000000000000;
    swift_bridgeObjectRetain();
    sub_1D7A9CA58();
    uint64_t v27 = sub_1D7A9AFB8();
    unint64_t v29 = v28;
    swift_bridgeObjectRelease();
    if (v29 >> 60 == 15)
    {
      LOWORD(v96[0]) = 119;
      unint64_t v30 = sub_1D785EAF8(MEMORY[0x1E4FBC860]);
      sub_1D7860544();
      uint64_t v31 = (void *)swift_allocError();
      DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xD000000000000022, v86, (__int16 *)v96, 0, v30, 0xD000000000000056, v85, v32, 0xD000000000000021, v87, 200);
      swift_willThrow();
LABEL_15:
      swift_bridgeObjectRelease();
      if (qword_1EBDF9DC8 != -1) {
        swift_once();
      }
      uint64_t v55 = __swift_project_value_buffer(v2, (uint64_t)qword_1EBDFBE70);
      swift_beginAccess();
      (*v90)(v12, v55, v2);
      id v56 = v31;
      id v57 = v31;
      int v58 = sub_1D7A9B5D8();
      os_log_type_t v59 = sub_1D7A9C758();
      if (os_log_type_enabled(v58, v59))
      {
        uint64_t v60 = swift_slowAlloc();
        uint64_t v61 = swift_slowAlloc();
        v96[0] = v61;
        *(_DWORD *)uint64_t v60 = v83;
        swift_getErrorValue();
        uint64_t v62 = sub_1D7A9D548();
        *(void *)(v60 + 4) = sub_1D7923300(v62, v63, v96);
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_1D7853000, v58, v59, "Error decoding intermediate certificate; skipping: %{public}s",
          (uint8_t *)v60,
          0xCu);
        swift_arrayDestroy();
        MEMORY[0x1D947D740](v61, -1, -1);
        MEMORY[0x1D947D740](v60, -1, -1);
      }
      else
      {
      }
      (*v89)(v12, v2);
      goto LABEL_5;
    }
    CFDataRef v33 = (const __CFData *)sub_1D7A9AFF8();
    uint64_t v34 = SecCertificateCreateWithData(v88, v33);

    if (!v34)
    {
      LOWORD(v96[0]) = 152;
      unint64_t v53 = sub_1D785EAF8(MEMORY[0x1E4FBC860]);
      sub_1D7860544();
      uint64_t v31 = (void *)swift_allocError();
      DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xD00000000000002ALL, v77, (__int16 *)v96, 0, v53, 0xD000000000000056, v78 | 0x8000000000000000, v54, 0xD000000000000021, v79 | 0x8000000000000000, 203);
      swift_willThrow();
      sub_1D7871BDC(v27, v29);
      goto LABEL_15;
    }
    sub_1D7871BDC(v27, v29);
    swift_bridgeObjectRelease();
    CFDataRef v35 = SecCertificateCopyNormalizedSubjectSequence(v34);
    if (!v35)
    {
      if (qword_1EBDF9DC8 != -1) {
        swift_once();
      }
      uint64_t v64 = __swift_project_value_buffer(v2, (uint64_t)qword_1EBDFBE70);
      swift_beginAccess();
      (*v90)(v81, v64, v2);
      uint64_t v65 = sub_1D7A9B5D8();
      os_log_type_t v66 = sub_1D7A9C758();
      if (os_log_type_enabled(v65, v66))
      {
        uint64_t v67 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v67 = 0;
        _os_log_impl(&dword_1D7853000, v65, v66, "No normalized subject sequence was returned from intermediate cert; skipping",
          v67,
          2u);
        MEMORY[0x1D947D740](v67, -1, -1);
        id v68 = v34;
      }
      else
      {
        id v68 = v65;
        uint64_t v65 = v34;
      }

      (*v89)(v81, v2);
      goto LABEL_5;
    }
    CFDataRef v36 = v35;
    uint64_t v37 = v2;
    uint64_t v38 = sub_1D7A9B028();
    unint64_t v40 = v39;

    sub_1D7860790(v38, v40);
    sub_1D7860790(v38, v40);
    uint64_t v41 = v34;
    uint64_t v42 = v84;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v96[0] = *v42;
    uint64_t v44 = v96[0];
    uint64_t *v42 = 0x8000000000000000;
    unint64_t v46 = sub_1D7A18F78(v38, v40);
    uint64_t v47 = *(void *)(v44 + 16);
    BOOL v48 = (v45 & 1) == 0;
    uint64_t v49 = v47 + v48;
    if (__OFADD__(v47, v48)) {
      break;
    }
    char v50 = v45;
    if (*(void *)(v44 + 24) >= v49)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        sub_1D79749B8();
      }
    }
    else
    {
      sub_1D7972558(v49, isUniquelyReferenced_nonNull_native);
      uint64_t v51 = sub_1D7A18F78(v38, v40);
      if ((v50 & 1) != (v52 & 1)) {
        goto LABEL_36;
      }
      unint64_t v46 = v51;
    }
    uint64_t v2 = v37;
    uint64_t v69 = (void *)v96[0];
    uint64_t v12 = v80;
    if (v50)
    {
      uint64_t v70 = *(void *)(v96[0] + 56);
      uint64_t v71 = 8 * v46;

      *(void *)(v70 + v71) = v41;
    }
    else
    {
      *(void *)(v96[0] + 8 * (v46 >> 6) + 64) |= 1 << v46;
      uint64_t v72 = (uint64_t *)(v69[6] + 16 * v46);
      *uint64_t v72 = v38;
      v72[1] = v40;
      *(void *)(v69[7] + 8 * v46) = v41;
      uint64_t v73 = v69[2];
      BOOL v74 = __OFADD__(v73, 1);
      uint64_t v75 = v73 + 1;
      if (v74) {
        goto LABEL_35;
      }
      void v69[2] = v75;
      sub_1D7860790(v38, v40);
    }
    *uint64_t v84 = (uint64_t)v69;
    swift_bridgeObjectRelease();
    sub_1D78607E8(v38, v40);
    sub_1D78607E8(v38, v40);
    sub_1D78607E8(v38, v40);

LABEL_5:
    v24 += 2;
    if (!--v22)
    {
      swift_bridgeObjectRelease();
      return;
    }
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  sub_1D7A9D4F8();
  __break(1u);
}

Swift::Void __swiftcall DIPOIDVerifier.setTrustedRoots(_:)(Swift::OpaquePointer a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v1[1]._rawValue = a1._rawValue;
}

uint64_t DIPOIDVerifier.verifyChain(_:forUsage:)(uint64_t a1, unsigned char *a2)
{
  *(void *)(v3 + 16) = a1;
  *(void *)(v3 + 24) = type metadata accessor for DIPSignpost.Config(0);
  *(void *)(v3 + 32) = swift_task_alloc();
  type metadata accessor for DIPSignpost(0);
  uint64_t v5 = swift_task_alloc();
  *(unsigned char *)(v3 + 96) = *a2;
  uint64_t v6 = *v2;
  uint64_t v7 = v2[1];
  *(void *)(v3 + 40) = v5;
  *(void *)(v3 + 48) = v6;
  *(void *)(v3 + 56) = v7;
  return MEMORY[0x1F4188298](sub_1D7A110F0, 0, 0);
}

uint64_t sub_1D7A110F0()
{
  uint64_t v10 = v0;
  unint64_t v1 = *(void *)(v0 + 16);
  v9[0] = *(unsigned char *)(v0 + 96);
  uint64_t v2 = sub_1D7A11654(v1, v9);
  *(void *)(v0 + 64) = v2;
  *(void *)(v0 + 72) = 0;
  uint64_t v3 = v2;
  if (qword_1EBDF7AF0 != -1) {
    swift_once();
  }
  uint64_t v5 = *(const char **)(v0 + 32);
  uint64_t v4 = *(void *)(v0 + 40);
  uint64_t v6 = __swift_project_value_buffer(*(void *)(v0 + 24), (uint64_t)qword_1EBDF76D0);
  sub_1D78912C4(v6, (uint64_t)v5);
  DIPSignpost.init(_:)(v5, v4);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v0 + 80) = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_1D7A11324;
  v7[2] = v3;
  return MEMORY[0x1F4188298](sub_1D7A12430, 0, 0);
}

uint64_t sub_1D7A11324(uint64_t a1, char a2)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 88) = a1;
  *(unsigned char *)(v3 + 97) = a2;
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1D7A11428, 0, 0);
}

uint64_t sub_1D7A11428()
{
  uint64_t v24 = v0;
  unint64_t v1 = *(void **)(v0 + 88);
  uint64_t v3 = *(__SecTrust **)(v0 + 64);
  uint64_t v2 = *(void **)(v0 + 72);
  uint64_t v5 = *(void *)(v0 + 48);
  uint64_t v4 = *(void *)(v0 + 56);
  unsigned __int8 v6 = *(unsigned char *)(v0 + 96);
  unint64_t v7 = *(void *)(v0 + 16);
  char v8 = *(unsigned char *)(v0 + 97) & 1;
  DIPSignpost.end(workflowID:isBackground:)((Swift::String_optional)0, (Swift::Bool_optional)2);
  v22[0] = v5;
  v22[1] = v4;
  v23[0] = v6;
  sub_1D7A126E0(v1, v8, v7, v3, v23);
  char v9 = *(unsigned char *)(v0 + 97);
  uint64_t v10 = *(void **)(v0 + 88);
  if (v2)
  {
    uint64_t v11 = v2;
    uint64_t v12 = *(void **)(v0 + 64);
    char v13 = v9 & 1;
    sub_1D78AB48C(*(void *)(v0 + 40));

    sub_1D78C2100(v10, v13);
    LOWORD(v22[0]) = 0;
    id v14 = v11;
    unint64_t v15 = sub_1D785EAF8(MEMORY[0x1E4FBC860]);
    sub_1D7860544();
    swift_allocError();
    DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(v11, 0, 0xE000000000000000, (__int16 *)v22, 0, v15, 0xD000000000000057, 0x80000001D7AC9040, v16, 0xD000000000000018, 0x80000001D7AC90A0, 314);
    swift_willThrow();

    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v17 = *(uint64_t (**)(void))(v0 + 8);
    return v17();
  }
  else
  {
    char v19 = v9 & 1;
    sub_1D78AB48C(*(void *)(v0 + 40));
    sub_1D78C2100(v10, v19);
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v20 = *(uint64_t (**)(uint64_t))(v0 + 8);
    uint64_t v21 = *(void *)(v0 + 64);
    return v20(v21);
  }
}

uint64_t sub_1D7A11654(unint64_t a1, unsigned char *a2)
{
  trust[13] = *(SecTrustRef *)MEMORY[0x1E4F143B8];
  uint64_t v130 = sub_1D7A9B5F8();
  uint64_t v5 = *(void *)(v130 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v130, v6, v7, v8, v9, v10, v11, v12);
  uint64_t v126 = (char *)&v125 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = MEMORY[0x1F4188790](v13, v15, v16, v17, v18, v19, v20, v21);
  uint64_t v24 = (char *)&v125 - v23;
  uint64_t v32 = MEMORY[0x1F4188790](v22, v25, v26, v27, v28, v29, v30, v31);
  uint64_t v34 = (char *)&v125 - v33;
  uint64_t v42 = MEMORY[0x1F4188790](v32, v35, v36, v37, v38, v39, v40, v41);
  uint64_t v44 = (char *)&v125 - v43;
  MEMORY[0x1F4188790](v42, v45, v46, v47, v48, v49, v50, v51);
  unint64_t v53 = (char *)&v125 - v52;
  LOBYTE(a2) = *a2;
  uint64_t v129 = *(void *)(v2 + 8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF8678);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1D7AA08E0;
  *(unsigned char *)(inited + 32) = 17;
  *(void *)(inited + 64) = &type metadata for DIPCertUsage;
  char v55 = (char)a2;
  *(unsigned char *)(inited + 40) = (_BYTE)a2;
  unint64_t v56 = sub_1D785EC20(inited);
  if (!(a1 >> 62))
  {
    uint64_t v57 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v57 >= 1) {
      goto LABEL_3;
    }
LABEL_55:
    LOWORD(v134) = 256;
    sub_1D7860544();
    swift_allocError();
    DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xD000000000000030, 0x80000001D7AC92A0, (__int16 *)&v134, 0, v56, 0xD000000000000057, 0x80000001D7AC9040, v123, 0xD000000000000017, 0x80000001D7AC92E0, 358);
    swift_willThrow();
    return v57;
  }
  swift_bridgeObjectRetain();
  uint64_t v57 = sub_1D7A9CFB8();
  swift_bridgeObjectRelease();
  if (v57 < 1) {
    goto LABEL_55;
  }
LABEL_3:
  unint64_t v128 = a1;
  unint64_t v127 = v56;
  char v58 = v55;
  LOBYTE(v134) = v55;
  char v59 = sub_1D7A0FD1C();
  swift_bridgeObjectRelease();
  uint64_t v60 = v5;
  switch(v59)
  {
    case 1:
      uint64_t v81 = v130;
      if (qword_1EBDF9DC8 != -1) {
        swift_once();
      }
      uint64_t v82 = __swift_project_value_buffer(v81, (uint64_t)qword_1EBDFBE70);
      swift_beginAccess();
      (*(void (**)(char *, uint64_t, uint64_t))(v60 + 16))(v44, v82, v81);
      long long v83 = sub_1D7A9B5D8();
      os_log_type_t v84 = sub_1D7A9C748();
      if (os_log_type_enabled(v83, v84))
      {
        uint64_t v85 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v85 = 0;
        _os_log_impl(&dword_1D7853000, v83, v84, "OIDVerifier using APMS policy", v85, 2u);
        MEMORY[0x1D947D740](v85, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v60 + 8))(v44, v81);
      uint64_t ApplePayModelSigning = DIPSecPolicyCreateApplePayModelSigning(0);
      goto LABEL_31;
    case 2:
      uint64_t v68 = v130;
      if (qword_1EBDF9DC8 != -1) {
        swift_once();
      }
      uint64_t v69 = __swift_project_value_buffer(v68, (uint64_t)qword_1EBDFBE70);
      swift_beginAccess();
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v34, v69, v68);
      uint64_t v70 = sub_1D7A9B5D8();
      os_log_type_t v71 = sub_1D7A9C748();
      if (os_log_type_enabled(v70, v71))
      {
        uint64_t v72 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v72 = 0;
        _os_log_impl(&dword_1D7853000, v70, v71, "OIDVerifier using mDL TA policy", v72, 2u);
        MEMORY[0x1D947D740](v72, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v5 + 8))(v34, v68);
      goto LABEL_30;
    case 3:
      uint64_t v86 = v130;
      if (qword_1EBDF9DC8 != -1) {
        swift_once();
      }
      uint64_t v87 = __swift_project_value_buffer(v86, (uint64_t)qword_1EBDFBE70);
      swift_beginAccess();
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v24, v87, v86);
      CFAllocatorRef v88 = sub_1D7A9B5D8();
      os_log_type_t v89 = sub_1D7A9C748();
      if (os_log_type_enabled(v88, v89))
      {
        uint64_t v90 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v90 = 0;
        _os_log_impl(&dword_1D7853000, v88, v89, "OIDVerifier using JP-NID TA policy", v90, 2u);
        MEMORY[0x1D947D740](v90, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v5 + 8))(v24, v86);
LABEL_30:
      uint64_t ApplePayModelSigning = SecPolicyCreateMDLTerminalAuth();
      goto LABEL_31;
    case 4:
      uint64_t v73 = v130;
      if (qword_1EBDF9DC8 != -1) {
        swift_once();
      }
      uint64_t v74 = __swift_project_value_buffer(v73, (uint64_t)qword_1EBDFBE70);
      swift_beginAccess();
      uint64_t v75 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
      unsigned int v76 = v126;
      v75(v126, v74, v73);
      uint64_t v77 = sub_1D7A9B5D8();
      os_log_type_t v78 = sub_1D7A9C748();
      if (os_log_type_enabled(v77, v78))
      {
        unint64_t v79 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)unint64_t v79 = 0;
        _os_log_impl(&dword_1D7853000, v77, v78, "OIDVerifier using BasicX509 policy", v79, 2u);
        MEMORY[0x1D947D740](v79, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v60 + 8))(v76, v73);
      uint64_t ApplePayModelSigning = (uint64_t)SecPolicyCreateBasicX509();
LABEL_31:
      ApplePinned = (void *)ApplePayModelSigning;
      break;
    default:
      uint64_t v61 = v130;
      if (qword_1EBDF9DC8 != -1) {
        swift_once();
      }
      uint64_t v62 = __swift_project_value_buffer(v61, (uint64_t)qword_1EBDFBE70);
      swift_beginAccess();
      (*(void (**)(char *, uint64_t, uint64_t))(v60 + 16))(v53, v62, v61);
      unint64_t v63 = sub_1D7A9B5D8();
      os_log_type_t v64 = sub_1D7A9C748();
      if (os_log_type_enabled(v63, v64))
      {
        uint64_t v65 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v65 = 0;
        _os_log_impl(&dword_1D7853000, v63, v64, "OIDVerifier using AP policy", v65, 2u);
        MEMORY[0x1D947D740](v65, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v60 + 8))(v53, v61);
      LOBYTE(v134) = v58;
      char v66 = sub_1D7A0FD1C() >> 16;
      swift_bridgeObjectRelease();
      if (v66 == 19)
      {
        uint64_t v67 = 0;
      }
      else
      {
        sub_1D7A105AC(v66);
        uint64_t v67 = (void *)sub_1D7A9BF98();
        swift_bridgeObjectRelease();
      }
      LOBYTE(v134) = v58;
      char v118 = (unsigned __int16)sub_1D7A0FD1C() >> 8;
      swift_bridgeObjectRelease();
      if (v118 == 19)
      {
        uint64_t v119 = 0;
      }
      else
      {
        sub_1D7A105AC(v118);
        uint64_t v119 = (void *)sub_1D7A9BF98();
        swift_bridgeObjectRelease();
      }
      LOBYTE(v134) = v58;
      DIPCertUsage.rawValue.getter();
      uint64_t v120 = (void *)sub_1D7A9BF98();
      swift_bridgeObjectRelease();
      ApplePinned = (void *)DIPSecPolicyCreateApplePinned();

      break;
  }
  LOBYTE(v134) = v58;
  sub_1D7A0FD1C();
  uint64_t v132 = v92;
  id v93 = ApplePinned;
  MEMORY[0x1D947B060]();
  if (*(void *)(v132 + 16) >= *(void *)(v132 + 24) >> 1) {
    sub_1D7A9C368();
  }
  sub_1D7A9C3A8();
  sub_1D7A9C338();
  trust[0] = 0;
  type metadata accessor for SecCertificate(0);
  uint64_t v94 = (void *)sub_1D7A9C2F8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF8248);
  unint64_t v95 = (void *)sub_1D7A9C2F8();
  swift_bridgeObjectRelease();
  OSStatus v96 = SecTrustCreateWithCertificates(v94, v95, trust);

  if (v96 || (uint64_t v57 = (uint64_t)trust[0]) == 0)
  {
    uint64_t v135 = MEMORY[0x1E4FBC150];
    LODWORD(v134) = v96;
    sub_1D7860E50(&v134, v133);
    unint64_t v108 = v127;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v131 = v108;
    sub_1D78A1D9C(v133, 20, isUniquelyReferenced_nonNull_native);
    uint64_t v110 = v131;
    swift_bridgeObjectRelease();
    *(void *)&long long v134 = 0;
    *((void *)&v134 + 1) = 0xE000000000000000;
    sub_1D7A9CC48();
    sub_1D7A9C128();
    CFStringRef v111 = SecCopyErrorMessageString(v96, 0);
    if (v111)
    {
      id v112 = (__CFString *)v111;
      uint64_t v113 = sub_1D7A9BFC8();
      uint64_t v115 = v114;
    }
    else
    {
      uint64_t v113 = 0;
      uint64_t v115 = 0;
    }
    *(void *)&v133[0] = v113;
    *((void *)&v133[0] + 1) = v115;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8437D8);
    sub_1D7A9CE78();
    swift_bridgeObjectRelease();
    uint64_t v57 = *((void *)&v134 + 1);
    uint64_t v116 = v134;
    LOWORD(v134) = 152;
    sub_1D7860544();
    swift_allocError();
    DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, v116, v57, (__int16 *)&v134, 0, v110, 0xD000000000000057, 0x80000001D7AC9040, v117, 0xD000000000000017, 0x80000001D7AC92E0, 401);
    swift_willThrow();
    goto LABEL_53;
  }
  if (v129)
  {
    os_log_type_t v97 = trust[0];
    CFArrayRef v98 = (const __CFArray *)sub_1D7A9C2F8();
    OSStatus v99 = SecTrustSetAnchorCertificates(v97, v98);

    if (v99)
    {
      uint64_t v135 = MEMORY[0x1E4FBC150];
      LODWORD(v134) = v99;
      sub_1D7860E50(&v134, v133);
      unint64_t v100 = v127;
      char v101 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v131 = v100;
      sub_1D78A1D9C(v133, 20, v101);
      uint64_t v102 = v131;
      swift_bridgeObjectRelease();
      *(void *)&long long v134 = 0;
      *((void *)&v134 + 1) = 0xE000000000000000;
      sub_1D7A9CC48();
      sub_1D7A9C128();
      CFStringRef v103 = SecCopyErrorMessageString(v99, 0);
      if (v103)
      {
        uint64_t v104 = (__CFString *)v103;
        uint64_t v105 = sub_1D7A9BFC8();
        uint64_t v107 = v106;
      }
      else
      {
        uint64_t v105 = 0;
        uint64_t v107 = 0;
      }
      *(void *)&v133[0] = v105;
      *((void *)&v133[0] + 1) = v107;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8437D8);
      sub_1D7A9CE78();
      swift_bridgeObjectRelease();
      uint64_t v57 = *((void *)&v134 + 1);
      uint64_t v121 = v134;
      LOWORD(v134) = 152;
      sub_1D7860544();
      swift_allocError();
      DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, v121, v57, (__int16 *)&v134, 0, v102, 0xD000000000000057, 0x80000001D7AC9040, v122, 0xD000000000000017, 0x80000001D7AC92E0, 410);
      swift_willThrow();

LABEL_53:
      return v57;
    }
  }
  swift_bridgeObjectRelease();

  return v57;
}

uint64_t sub_1D7A12410(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return MEMORY[0x1F4188298](sub_1D7A12430, 0, 0);
}

uint64_t sub_1D7A12430()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = swift_task_alloc();
  v0[3] = v2;
  *(void *)(v2 + 16) = v1;
  uint64_t v3 = (void *)swift_task_alloc();
  v0[4] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_1D7A1252C;
  uint64_t v4 = MEMORY[0x1E4FBB390];
  return MEMORY[0x1F4188160](v0 + 6, 0, 0, 0xD000000000000017, 0x80000001D7AC9280, sub_1D7A16014, v2, v4);
}

uint64_t sub_1D7A1252C()
{
  *(void *)(*(void *)v1 + 40) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1D7A1266C;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_1D7A12648;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D7A12648()
{
  return (*(uint64_t (**)(void, BOOL))(v0 + 8))(*(unsigned __int8 *)(v0 + 48), *(void *)(v0 + 40) != 0);
}

uint64_t sub_1D7A1266C()
{
  uint64_t v1 = *(void *)(v0 + 40);
  swift_task_dealloc();
  BOOL v2 = *(void *)(v0 + 40) != 0;
  uint64_t v3 = *(uint64_t (**)(uint64_t, BOOL))(v0 + 8);
  return v3(v1, v2);
}

void sub_1D7A126E0(void *a1, char a2, unint64_t a3, __SecTrust *a4, unsigned __int8 *a5)
{
  uint64_t v121 = *MEMORY[0x1E4F143B8];
  uint64_t v10 = sub_1D7A9B5F8();
  uint64_t v18 = MEMORY[0x1F4188790](v10, v11, v12, v13, v14, v15, v16, v17);
  MEMORY[0x1F4188790](v18, v19, v20, v21, v22, v23, v24, v25);
  uint64_t v29 = (char *)&v105 - v28;
  LODWORD(a5) = *a5;
  if (a2)
  {
    uint64_t v115 = v26;
    unint64_t v116 = a3;
    uint64_t v114 = v27;
    uint64_t v119 = (uint64_t)a1;
    id v36 = a1;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDF9740);
    swift_willThrowTypedImpl();
    id v37 = objc_msgSend(self, sel_standardUserDefaults);
    if (qword_1EBDF9690 != -1) {
      swift_once();
    }
    if (byte_1EBDFBE68)
    {
      uint64_t v38 = sub_1D7A9BF98();
      LODWORD(v113) = a5;
      a5 = (unsigned __int8 *)v38;
      unsigned __int8 v39 = objc_msgSend(v37, sel_BOOLForKey_, v38);

      LOBYTE(a5) = (_BYTE)v113;
      if (v39)
      {
        uint64_t v107 = v5;
        if (qword_1EBDF9DC8 != -1) {
          swift_once();
        }
        uint64_t v40 = __swift_project_value_buffer(v10, (uint64_t)qword_1EBDFBE70);
        swift_beginAccess();
        uint64_t v41 = v115;
        uint64_t v42 = *(void (**)(uint64_t, void *, uint64_t))(v115 + 16);
        uint64_t v109 = v115 + 16;
        uint64_t v110 = (void *)v40;
        unint64_t v108 = v42;
        v42((uint64_t)v29, (void *)v40, v10);
        uint64_t v43 = sub_1D7A9B5D8();
        os_log_type_t v44 = sub_1D7A9C748();
        BOOL v45 = os_log_type_enabled(v43, v44);
        id v112 = a1;
        if (v45)
        {
          uint64_t v46 = (uint8_t *)swift_slowAlloc();
          uint64_t v106 = (void (*)(void, void))swift_slowAlloc();
          *(void *)unint64_t result = v106;
          *(_DWORD *)uint64_t v46 = 136446210;
          LOBYTE(v117) = (_BYTE)a5;
          uint64_t v47 = DIPCertUsage.rawValue.getter();
          uint64_t v117 = sub_1D7923300(v47, v48, (uint64_t *)result);
          sub_1D7A9C9E8();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1D7853000, v43, v44, "Treating certificate validation for %{public}s as non-fatal because certificate pinning is disabled in user defaults", v46, 0xCu);
          uint64_t v49 = v106;
          swift_arrayDestroy();
          MEMORY[0x1D947D740](v49, -1, -1);
          uint64_t v50 = v46;
          a1 = v112;
          MEMORY[0x1D947D740](v50, -1, -1);

          uint64_t v51 = v115;
        }
        else
        {

          uint64_t v51 = v41;
        }
        uint64_t v106 = *(void (**)(void, void))(v51 + 8);
        v106(v29, v10);
        uint64_t v60 = v114;
        unint64_t v61 = v116;
        if (v116 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v62 = sub_1D7A9CFB8();
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v62 = *(void *)((v116 & 0xFFFFFFFFFFFFFF8) + 0x10);
        }
        uint64_t v111 = v10;
        if (v62)
        {
          *(void *)unint64_t result = MEMORY[0x1E4FBC860];
          sub_1D78AB4E8(0, v62 & ~(v62 >> 63), 0);
          if (v62 < 0) {
            __break(1u);
          }
          uint64_t v63 = *(void *)result;
          if ((v61 & 0xC000000000000001) != 0)
          {
            uint64_t v64 = 0;
            do
            {
              uint64_t v65 = (__SecCertificate *)MEMORY[0x1D947BA10](v64, v61);
              CFDataRef v66 = SecCertificateCopyData(v65);
              uint64_t v67 = sub_1D7A9B028();
              unint64_t v69 = v68;

              uint64_t v70 = sub_1D7A9B008();
              uint64_t v72 = v71;
              sub_1D78607E8(v67, v69);
              swift_unknownObjectRelease();
              *(void *)unint64_t result = v63;
              unint64_t v74 = *(void *)(v63 + 16);
              unint64_t v73 = *(void *)(v63 + 24);
              if (v74 >= v73 >> 1)
              {
                sub_1D78AB4E8(v73 > 1, v74 + 1, 1);
                uint64_t v63 = *(void *)result;
              }
              ++v64;
              *(void *)(v63 + 16) = v74 + 1;
              uint64_t v75 = v63 + 16 * v74;
              *(void *)(v75 + 32) = v70;
              *(void *)(v75 + 40) = v72;
              unint64_t v61 = v116;
            }
            while (v62 != v64);
          }
          else
          {
            unsigned int v76 = (id *)(v61 + 32);
            do
            {
              uint64_t v77 = (__SecCertificate *)*v76;
              CFDataRef v78 = SecCertificateCopyData(v77);
              uint64_t v79 = sub_1D7A9B028();
              unint64_t v81 = v80;

              uint64_t v82 = sub_1D7A9B008();
              uint64_t v84 = v83;
              sub_1D78607E8(v79, v81);

              *(void *)unint64_t result = v63;
              unint64_t v86 = *(void *)(v63 + 16);
              unint64_t v85 = *(void *)(v63 + 24);
              if (v86 >= v85 >> 1)
              {
                sub_1D78AB4E8(v85 > 1, v86 + 1, 1);
                uint64_t v63 = *(void *)result;
              }
              *(void *)(v63 + 16) = v86 + 1;
              uint64_t v87 = v63 + 16 * v86;
              *(void *)(v87 + 32) = v82;
              *(void *)(v87 + 40) = v84;
              ++v76;
              --v62;
            }
            while (v62);
          }
          uint64_t v10 = v111;
          a1 = v112;
          uint64_t v60 = v114;
        }
        v108(v60, v110, v10);
        sub_1D78C2118(a1, 1);
        sub_1D78C2118(a1, 1);
        swift_bridgeObjectRetain();
        CFAllocatorRef v88 = sub_1D7A9B5D8();
        uint64_t v89 = v10;
        os_log_type_t v90 = sub_1D7A9C758();
        if (os_log_type_enabled(v88, v90))
        {
          uint64_t v91 = swift_slowAlloc();
          uint64_t v92 = (void *)swift_slowAlloc();
          uint64_t v110 = v92;
          unint64_t v116 = swift_slowAlloc();
          *(void *)unint64_t result = v116;
          *(_DWORD *)uint64_t v91 = 136446722;
          LOBYTE(v117) = (_BYTE)v113;
          uint64_t v93 = DIPCertUsage.rawValue.getter();
          os_log_t v113 = v88;
          uint64_t v117 = sub_1D7923300(v93, v94, (uint64_t *)result);
          sub_1D7A9C9E8();
          swift_bridgeObjectRelease();
          *(_WORD *)(v91 + 12) = 2112;
          sub_1D78C2118(a1, 1);
          uint64_t v95 = _swift_stdlib_bridgeErrorToNSError();
          uint64_t v117 = v95;
          sub_1D7A9C9E8();
          *uint64_t v92 = v95;
          sub_1D78C2100(a1, 1);
          sub_1D78C2100(a1, 1);
          *(_WORD *)(v91 + 22) = 2080;
          uint64_t v96 = swift_bridgeObjectRetain();
          uint64_t v97 = MEMORY[0x1D947B0A0](v96, MEMORY[0x1E4FBB1A0]);
          unint64_t v99 = v98;
          swift_bridgeObjectRelease();
          uint64_t v117 = sub_1D7923300(v97, v99, (uint64_t *)result);
          sub_1D7A9C9E8();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          os_log_t v100 = v113;
          _os_log_impl(&dword_1D7853000, v113, v90, "Certificate verification for usage %{public}s failed due to error: %@\nCertificate Chain:\n%s", (uint8_t *)v91, 0x20u);
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDF8C60);
          char v101 = v110;
          swift_arrayDestroy();
          MEMORY[0x1D947D740](v101, -1, -1);
          unint64_t v102 = v116;
          swift_arrayDestroy();
          MEMORY[0x1D947D740](v102, -1, -1);
          MEMORY[0x1D947D740](v91, -1, -1);

          sub_1D78C2100(a1, 1);
          uint64_t v103 = v114;
          uint64_t v104 = v111;
        }
        else
        {
          sub_1D78C2100(a1, 1);
          sub_1D78C2100(a1, 1);
          sub_1D78C2100(a1, 1);

          swift_bridgeObjectRelease_n();
          uint64_t v103 = v60;
          uint64_t v104 = v89;
        }
        v106(v103, v104);
        return;
      }
    }
    else
    {
    }
    LOWORD(v119) = 256;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF8678);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1D7AA08E0;
    *(unsigned char *)(inited + 32) = 17;
    *(void *)(inited + 64) = &type metadata for DIPCertUsage;
    *(unsigned char *)(inited + 40) = (_BYTE)a5;
    id v53 = a1;
    unint64_t v54 = sub_1D785EC20(inited);
    sub_1D7860544();
    swift_allocError();
    DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(a1, 0xD00000000000001ALL, 0x80000001D7AC9190, (__int16 *)&v119, 0, v54, 0xD000000000000057, 0x80000001D7AC9040, v55, 0xD000000000000031, 0x80000001D7AC91B0, 437);
    swift_willThrow();
    sub_1D78C2100(a1, 1);
    return;
  }
  result[0] = kSecTrustResultInvalid;
  if (SecTrustGetTrustResult(a4, result)
    || (result[0] != kSecTrustResultUnspecified ? (BOOL v56 = result[0] == kSecTrustResultProceed) : (BOOL v56 = 1), !v56))
  {
    uint64_t v119 = 0;
    unint64_t v120 = 0xE000000000000000;
    sub_1D7A9CC48();
    sub_1D7A9C128();
    LODWORD(v117) = result[0];
    sub_1D7A9D258();
    sub_1D7A9C128();
    swift_bridgeObjectRelease();
    uint64_t v31 = v119;
    uint64_t v32 = v120;
    LOWORD(v119) = 256;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF8678);
    uint64_t v33 = swift_initStackObject();
    *(_OWORD *)(v33 + 16) = xmmword_1D7AA08E0;
    *(unsigned char *)(v33 + 32) = 17;
    *(void *)(v33 + 64) = &type metadata for DIPCertUsage;
    *(unsigned char *)(v33 + 40) = (_BYTE)a5;
    unint64_t v34 = sub_1D785EC20(v33);
    sub_1D7860544();
    swift_allocError();
    DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, v31, v32, (__int16 *)&v119, 0, v34, 0xD000000000000057, 0x80000001D7AC9040, v35, 0xD000000000000031, 0x80000001D7AC91B0, 445);
LABEL_4:
    swift_willThrow();
    return;
  }
  if ((a1 & 1) == 0)
  {
    LOWORD(v119) = 256;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF8678);
    uint64_t v57 = swift_initStackObject();
    *(_OWORD *)(v57 + 16) = xmmword_1D7AA08E0;
    *(unsigned char *)(v57 + 32) = 17;
    *(void *)(v57 + 64) = &type metadata for DIPCertUsage;
    *(unsigned char *)(v57 + 40) = (_BYTE)a5;
    unint64_t v58 = sub_1D785EC20(v57);
    sub_1D7860544();
    swift_allocError();
    DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xD000000000000035, 0x80000001D7AC9240, (__int16 *)&v119, 0, v58, 0xD000000000000057, 0x80000001D7AC9040, v59, 0xD000000000000031, 0x80000001D7AC91B0, 449);
    goto LABEL_4;
  }
}

SecTrustRef __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> DIPOIDVerifier.verifyChain(_:forUsage:)(Swift::OpaquePointer _, CoreIDVShared::DIPCertUsage forUsage)
{
  uint64_t v3 = (unsigned __int8 *)forUsage;
  uint64_t v54 = *MEMORY[0x1E4F143B8];
  uint64_t v5 = type metadata accessor for DIPSignpost.Config(0);
  MEMORY[0x1F4188790](v5, v6, v7, v8, v9, v10, v11, v12);
  uint64_t v14 = (char *)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for DIPSignpost(0);
  MEMORY[0x1F4188790](v15 - 8, v16, v17, v18, v19, v20, v21, v22);
  uint64_t v24 = (char *)&v47 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned __int8 v25 = *v3;
  CFErrorRef v26 = *(CFErrorRef *)v2;
  uint64_t v27 = *(void *)(v2 + 8);
  CFErrorRef error = *(CFErrorRef *)v2;
  uint64_t v53 = v27;
  unsigned __int8 v51 = v25;
  uint64_t v28 = v50;
  uint64_t v29 = sub_1D7A11654((unint64_t)_._rawValue, &v51);
  uint64_t v30 = (__SecTrust *)v29;
  if (v28)
  {
    uint64_t v31 = (__SecTrust *)v29;
    LOWORD(error) = 0;
    uint64_t v43 = v28;
    unint64_t v44 = sub_1D785EAF8(MEMORY[0x1E4FBC860]);
    sub_1D7860544();
    swift_allocError();
    DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(v28, 0, 0xE000000000000000, (__int16 *)&error, 0, v44, 0xD000000000000057, 0x80000001D7AC9040, v45, 0xD000000000000018, 0x80000001D7AC90A0, 349);
    swift_willThrow();
  }
  else
  {
    uint64_t v47 = v26;
    uint64_t v48 = v27;
    rawValue = _._rawValue;
    if (qword_1EBDF7AF0 != -1) {
      swift_once();
    }
    uint64_t v32 = __swift_project_value_buffer(v5, (uint64_t)qword_1EBDF76D0);
    sub_1D78912C4(v32, (uint64_t)v14);
    DIPSignpost.init(_:)(v14, (uint64_t)v24);
    CFErrorRef error = 0;
    uint64_t v50 = v30;
    BOOL v33 = SecTrustEvaluateWithError(v30, &error);
    CFErrorRef v34 = error;
    unsigned __int8 v35 = v25;
    id v37 = v47;
    uint64_t v36 = v48;
    if (error)
    {
      type metadata accessor for CFError(0);
      sub_1D7A15420();
      uint64_t v38 = swift_allocError();
      CFErrorRef *v39 = v34;
      CFErrorRef v40 = error;
    }
    else
    {
      CFErrorRef v40 = 0;
      uint64_t v38 = v33;
    }
    uint64_t v41 = v34;

    DIPSignpost.end(workflowID:isBackground:)((Swift::String_optional)0, (Swift::Bool_optional)2);
    CFErrorRef error = v37;
    uint64_t v53 = v36;
    unsigned __int8 v51 = v35;
    uint64_t v42 = v50;
    sub_1D7A126E0((void *)v38, v34 != 0, (unint64_t)rawValue, v50, &v51);
    sub_1D78AB48C((uint64_t)v24);
    sub_1D78C2100((id)v38, v34 != 0);
    return v42;
  }
  return v31;
}

uint64_t DIPOIDVerifier.verifyChain(fromBase64DER:forUsage:)(uint64_t a1, unsigned char *a2)
{
  *(unsigned char *)(v3 + 81) = *a2;
  uint64_t v4 = *v2;
  uint64_t v5 = v2[1];
  *(void *)(v3 + 32) = a1;
  *(void *)(v3 + 40) = v4;
  *(void *)(v3 + 48) = v5;
  return MEMORY[0x1F4188298](sub_1D7A135FC, 0, 0);
}

uint64_t sub_1D7A135FC()
{
  uint64_t v1 = decodeCertificateChain(fromBase64DER:)(*(void *)(v0 + 32));
  *(void *)(v0 + 56) = v1;
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)(v0 + 48);
  char v4 = *(unsigned char *)(v0 + 81);
  *(void *)(v0 + 16) = *(void *)(v0 + 40);
  *(void *)(v0 + 24) = v3;
  *(unsigned char *)(v0 + 80) = v4;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 64) = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_1D7A13704;
  return DIPOIDVerifier.verifyChain(_:forUsage:)(v2, (unsigned char *)(v0 + 80));
}

uint64_t sub_1D7A13704(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(v4 + 72) = v1;
  swift_task_dealloc();
  if (v1)
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x1F4188298](sub_1D7A1385C, 0, 0);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v5 = *(uint64_t (**)(uint64_t))(v4 + 8);
    return v5(a1);
  }
}

uint64_t sub_1D7A1385C()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

SecTrustRef __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> DIPOIDVerifier.verifyChain(fromBase64DER:forUsage:)(Swift::OpaquePointer fromBase64DER, CoreIDVShared::DIPCertUsage forUsage)
{
  char v4 = *(unsigned char *)forUsage;
  uint64_t v5 = *(__SecTrust **)(v2 + 8);
  uint64_t v6 = decodeCertificateChain(fromBase64DER:)((uint64_t)fromBase64DER._rawValue);
  if (!v3)
  {
    char v8 = v4;
    uint64_t v5 = DIPOIDVerifier.verifyChain(_:forUsage:)((Swift::OpaquePointer)v6, (CoreIDVShared::DIPCertUsage)&v8);
    swift_bridgeObjectRelease();
  }
  return v5;
}

uint64_t DIPOIDVerifier.verifyLeaf(_:forUsage:)(uint64_t a1, unsigned char *a2)
{
  *(void *)(v3 + 200) = a1;
  uint64_t v5 = sub_1D7A9B5F8();
  *(void *)(v3 + 208) = v5;
  *(void *)(v3 + 216) = *(void *)(v5 - 8);
  uint64_t v6 = swift_task_alloc();
  *(unsigned char *)(v3 + 322) = *a2;
  uint64_t v7 = *v2;
  uint64_t v8 = v2[1];
  *(void *)(v3 + 224) = v6;
  *(void *)(v3 + 232) = v7;
  *(void *)(v3 + 240) = v8;
  return MEMORY[0x1F4188298](sub_1D7A139C8, 0, 0);
}

uint64_t sub_1D7A139C8()
{
  uint64_t v50 = v0;
  CFDataRef v1 = SecCertificateCopyNormalizedIssuerSequence(*(SecCertificateRef *)(v0 + 200));
  if (v1)
  {
    CFDataRef v2 = v1;
    uint64_t v3 = *(void *)(v0 + 232);
    uint64_t v4 = sub_1D7A9B028();
    unint64_t v6 = v5;

    *(void *)(v0 + 248) = v4;
    *(void *)(v0 + 256) = v6;
    if (*(void *)(v3 + 16))
    {
      sub_1D7860790(v4, v6);
      uint64_t v7 = sub_1D7A18F78(v4, v6);
      if (v8)
      {
        uint64_t v9 = (unsigned char *)(v0 + 321);
        uint64_t v11 = *(void *)(v0 + 232);
        uint64_t v10 = *(void *)(v0 + 240);
        char v12 = *(unsigned char *)(v0 + 322);
        uint64_t v13 = *(void **)(v0 + 200);
        uint64_t v14 = *(void **)(*(void *)(v11 + 56) + 8 * v7);
        *(void *)(v0 + 264) = v14;
        id v15 = v14;
        sub_1D78607E8(v4, v6);
        *(void *)(v0 + 176) = v11;
        *(void *)(v0 + 184) = v10;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF99C0);
        uint64_t v16 = swift_allocObject();
        *(_OWORD *)(v16 + 16) = xmmword_1D7AA91C0;
        *(void *)(v16 + 32) = v13;
        *(void *)(v16 + 40) = v15;
        v49[0] = v16;
        sub_1D7A9C338();
        uint64_t v17 = v49[0];
        *(void *)(v0 + 272) = v49[0];
        *(unsigned char *)(v0 + 321) = v12;
        id v18 = v15;
        id v19 = v13;
        uint64_t v20 = (void *)swift_task_alloc();
        *(void *)(v0 + 280) = v20;
        *uint64_t v20 = v0;
        uint64_t v21 = sub_1D7A13F00;
LABEL_15:
        v20[1] = v21;
        return DIPOIDVerifier.verifyChain(_:forUsage:)(v17, v9);
      }
      sub_1D78607E8(v4, v6);
    }
    if (qword_1EBDF9DC8 != -1) {
      swift_once();
    }
    uint64_t v29 = *(void *)(v0 + 216);
    uint64_t v28 = *(void *)(v0 + 224);
    uint64_t v30 = *(void *)(v0 + 208);
    uint64_t v31 = __swift_project_value_buffer(v30, (uint64_t)qword_1EBDFBE70);
    swift_beginAccess();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 16))(v28, v31, v30);
    uint64_t v32 = sub_1D7A9B5D8();
    os_log_type_t v33 = sub_1D7A9C748();
    if (os_log_type_enabled(v32, v33))
    {
      uint64_t v34 = *(void *)(v0 + 216);
      uint64_t v48 = *(void *)(v0 + 224);
      uint64_t v47 = *(void *)(v0 + 208);
      unsigned __int8 v35 = (uint8_t *)swift_slowAlloc();
      uint64_t v36 = swift_slowAlloc();
      v49[0] = v36;
      *(_DWORD *)unsigned __int8 v35 = 136446210;
      uint64_t v37 = DIPCertUsage.rawValue.getter();
      *(void *)(v0 + 192) = sub_1D7923300(v37, v38, v49);
      sub_1D7A9C9E8();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1D7853000, v32, v33, "Could not find matching intermediate cert for usage = %{public}s", v35, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D947D740](v36, -1, -1);
      MEMORY[0x1D947D740](v35, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v48, v47);
    }
    else
    {
      uint64_t v40 = *(void *)(v0 + 216);
      uint64_t v39 = *(void *)(v0 + 224);
      uint64_t v41 = *(void *)(v0 + 208);

      (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v39, v41);
    }
    uint64_t v9 = (unsigned char *)(v0 + 320);
    uint64_t v42 = *(void *)(v0 + 240);
    char v43 = *(unsigned char *)(v0 + 322);
    unint64_t v44 = *(void **)(v0 + 200);
    *(void *)(v0 + 160) = *(void *)(v0 + 232);
    *(void *)(v0 + 168) = v42;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF99C0);
    uint64_t v45 = swift_allocObject();
    *(_OWORD *)(v45 + 16) = xmmword_1D7AA97B0;
    *(void *)(v45 + 32) = v44;
    v49[0] = v45;
    sub_1D7A9C338();
    uint64_t v17 = v49[0];
    *(void *)(v0 + 296) = v49[0];
    *(unsigned char *)(v0 + 320) = v43;
    id v46 = v44;
    uint64_t v20 = (void *)swift_task_alloc();
    *(void *)(v0 + 304) = v20;
    *uint64_t v20 = v0;
    uint64_t v21 = sub_1D7A140AC;
    goto LABEL_15;
  }
  char v22 = *(unsigned char *)(v0 + 322);
  LOWORD(v49[0]) = 121;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF8678);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1D7AA08E0;
  *(unsigned char *)(inited + 32) = 17;
  *(void *)(inited + 64) = &type metadata for DIPCertUsage;
  *(unsigned char *)(inited + 40) = v22;
  unint64_t v24 = sub_1D785EC20(inited);
  sub_1D7860544();
  swift_allocError();
  DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xD00000000000003BLL, 0x80000001D7AC90C0, (__int16 *)v49, 0, v24, 0xD000000000000057, 0x80000001D7AC9040, v25, 0xD000000000000017, 0x80000001D7AC9100, 473);
  swift_willThrow();
  swift_task_dealloc();
  CFErrorRef v26 = *(uint64_t (**)(void))(v0 + 8);
  return v26();
}

uint64_t sub_1D7A13F00(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  v3[14] = v2;
  v3[15] = a1;
  unsigned char v3[16] = v1;
  v3[36] = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v1) {
    uint64_t v4 = sub_1D7A14250;
  }
  else {
    uint64_t v4 = sub_1D7A1402C;
  }
  return MEMORY[0x1F4188298](v4, 0, 0);
}

uint64_t sub_1D7A1402C()
{
  uint64_t v1 = *(void *)(v0 + 120);
  sub_1D78607E8(*(void *)(v0 + 248), *(void *)(v0 + 256));
  swift_task_dealloc();
  CFDataRef v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_1D7A140AC(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  v3[17] = v2;
  v3[18] = a1;
  v3[19] = v1;
  v3[39] = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v1) {
    uint64_t v4 = sub_1D7A142C4;
  }
  else {
    uint64_t v4 = sub_1D7A141D8;
  }
  return MEMORY[0x1F4188298](v4, 0, 0);
}

uint64_t sub_1D7A141D8()
{
  uint64_t v1 = v0[18];
  sub_1D78607E8(v0[31], v0[32]);
  swift_task_dealloc();
  CFDataRef v2 = (uint64_t (*)(uint64_t))v0[1];
  return v2(v1);
}

uint64_t sub_1D7A14250()
{
  uint64_t v1 = (void *)v0[33];
  sub_1D78607E8(v0[31], v0[32]);

  swift_task_dealloc();
  CFDataRef v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_1D7A142C4()
{
  sub_1D78607E8(v0[31], v0[32]);
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t DIPOIDVerifier.verifyLeaf(fromBase64DER:forUsage:)(uint64_t a1, uint64_t a2, unsigned char *a3)
{
  *(void *)(v4 + 80) = a1;
  *(void *)(v4 + 88) = a2;
  *(unsigned char *)(v4 + 145) = *a3;
  uint64_t v5 = v3[1];
  *(void *)(v4 + 96) = *v3;
  *(void *)(v4 + 104) = v5;
  return MEMORY[0x1F4188298](sub_1D7A14360, 0, 0);
}

uint64_t sub_1D7A14360()
{
  uint64_t v19 = v0;
  *(void *)(v0 + 16) = *(void *)(v0 + 80);
  *(void *)(v0 + 24) = *(void *)(v0 + 88);
  *(void *)(v0 + 32) = 10;
  *(void *)(v0 + 40) = 0xE100000000000000;
  *(void *)(v0 + 48) = 0;
  *(void *)(v0 + 56) = 0xE000000000000000;
  sub_1D791118C();
  sub_1D7A9CA58();
  uint64_t v1 = sub_1D7A9AFB8();
  unint64_t v3 = v2;
  swift_bridgeObjectRelease();
  if (v3 >> 60 == 15)
  {
    __int16 v17 = 119;
    unint64_t v4 = sub_1D785EAF8(MEMORY[0x1E4FBC860]);
    sub_1D7860544();
    swift_allocError();
    DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xD000000000000022, 0x80000001D7AC8F50, &v17, 0, v4, 0xD000000000000056, 0x80000001D7AC8F80, v5, 0xD000000000000021, 0x80000001D7AC8FE0, 200);
    swift_willThrow();
LABEL_8:
    uint64_t v16 = *(uint64_t (**)(void))(v0 + 8);
    return v16();
  }
  CFAllocatorRef v6 = (const __CFAllocator *)*MEMORY[0x1E4F1CF80];
  CFDataRef v7 = (const __CFData *)sub_1D7A9AFF8();
  SecCertificateRef v8 = SecCertificateCreateWithData(v6, v7);
  *(void *)(v0 + 112) = v8;

  if (!v8)
  {
    v18[0] = 152;
    unint64_t v14 = sub_1D785EAF8(MEMORY[0x1E4FBC860]);
    sub_1D7860544();
    swift_allocError();
    DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xD00000000000002ALL, 0x80000001D7AC9010, v18, 0, v14, 0xD000000000000056, 0x80000001D7AC8F80, v15, 0xD000000000000021, 0x80000001D7AC8FE0, 203);
    swift_willThrow();
    sub_1D7871BDC(v1, v3);
    goto LABEL_8;
  }
  uint64_t v10 = *(void *)(v0 + 96);
  uint64_t v9 = *(void *)(v0 + 104);
  char v11 = *(unsigned char *)(v0 + 145);
  sub_1D7871BDC(v1, v3);
  *(void *)(v0 + 64) = v10;
  *(void *)(v0 + 72) = v9;
  *(unsigned char *)(v0 + 144) = v11;
  char v12 = (void *)swift_task_alloc();
  *(void *)(v0 + 120) = v12;
  *char v12 = v0;
  v12[1] = sub_1D7A146A0;
  return DIPOIDVerifier.verifyLeaf(_:forUsage:)((uint64_t)v8, (unsigned char *)(v0 + 144));
}

uint64_t sub_1D7A146A0(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 128) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_1D7A14830;
  }
  else
  {
    *(void *)(v4 + 136) = a1;
    uint64_t v5 = sub_1D7A147C8;
  }
  return MEMORY[0x1F4188298](v5, 0, 0);
}

uint64_t sub_1D7A147C8()
{
  uint64_t v1 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v2 = *(void *)(v0 + 136);
  return v1(v2);
}

uint64_t sub_1D7A14830()
{
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

SecTrustRef __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> DIPOIDVerifier.verifyLeaf(fromBase64DER:forUsage:)(Swift::String fromBase64DER, CoreIDVShared::DIPCertUsage forUsage)
{
  uint64_t v4 = (char *)forUsage;
  object = fromBase64DER._object;
  uint64_t countAndFlagsBits = fromBase64DER._countAndFlagsBits;
  uint64_t v7 = sub_1D7A9B5F8();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7, v9, v10, v11, v12, v13, v14, v15);
  __int16 v17 = (char *)&v58 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v18 = *v4;
  uint64_t v70 = *v2;
  unint64_t v64 = v2[1];
  uint64_t v65 = countAndFlagsBits;
  unint64_t v66 = (unint64_t)object;
  uint64_t v68 = 10;
  unint64_t v69 = 0xE100000000000000;
  v67[0] = 0;
  v67[1] = 0xE000000000000000;
  sub_1D791118C();
  sub_1D7A9CA58();
  uint64_t v19 = sub_1D7A9AFB8();
  unint64_t v21 = v20;
  swift_bridgeObjectRelease();
  if (v21 >> 60 == 15)
  {
    LOWORD(v65) = 119;
    unint64_t v21 = sub_1D785EAF8(MEMORY[0x1E4FBC860]);
    sub_1D7860544();
    swift_allocError();
    DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xD000000000000022, 0x80000001D7AC8F50, (__int16 *)&v65, 0, v21, 0xD000000000000056, 0x80000001D7AC8F80, v22, 0xD000000000000021, 0x80000001D7AC8FE0, 200);
    swift_willThrow();
    return (SecTrustRef)v21;
  }
  uint64_t v63 = v3;
  CFAllocatorRef v23 = (const __CFAllocator *)*MEMORY[0x1E4F1CF80];
  CFDataRef v24 = (const __CFData *)sub_1D7A9AFF8();
  uint64_t v25 = SecCertificateCreateWithData(v23, v24);

  if (!v25)
  {
    LOWORD(v65) = 152;
    unint64_t v42 = sub_1D785EAF8(MEMORY[0x1E4FBC860]);
    sub_1D7860544();
    swift_allocError();
    DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xD00000000000002ALL, 0x80000001D7AC9010, (__int16 *)&v65, 0, v42, 0xD000000000000056, 0x80000001D7AC8F80, v43, 0xD000000000000021, 0x80000001D7AC8FE0, 203);
    swift_willThrow();
    sub_1D7871BDC(v19, v21);
    return (SecTrustRef)v21;
  }
  sub_1D7871BDC(v19, v21);
  CFDataRef v26 = SecCertificateCopyNormalizedIssuerSequence(v25);
  if (!v26)
  {
    LOWORD(v65) = 121;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF8678);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1D7AA08E0;
    *(unsigned char *)(inited + 32) = 17;
    *(void *)(inited + 64) = &type metadata for DIPCertUsage;
    *(unsigned char *)(inited + 40) = v18;
    unint64_t v21 = sub_1D785EC20(inited);
    sub_1D7860544();
    swift_allocError();
    DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xD00000000000003BLL, 0x80000001D7AC90C0, (__int16 *)&v65, 0, v21, 0xD000000000000057, 0x80000001D7AC9040, v45, 0xD000000000000023, 0x80000001D7AC9120, 499);
    swift_willThrow();
LABEL_11:

    return (SecTrustRef)v21;
  }
  CFDataRef v27 = v26;
  uint64_t v28 = sub_1D7A9B028();
  unint64_t v30 = v29;

  uint64_t v31 = v70;
  if (*(void *)(v70 + 16))
  {
    char v32 = v18;
    sub_1D7860790(v28, v30);
    uint64_t v33 = sub_1D7A18F78(v28, v30);
    if (v34)
    {
      id v35 = *(id *)(*(void *)(v31 + 56) + 8 * v33);
      sub_1D78607E8(v28, v30);
      uint64_t v65 = v31;
      unint64_t v66 = v64;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF99C0);
      uint64_t v36 = swift_allocObject();
      *(_OWORD *)(v36 + 16) = xmmword_1D7AA91C0;
      *(void *)(v36 + 32) = v25;
      *(void *)(v36 + 40) = v35;
      uint64_t v68 = v36;
      sub_1D7A9C338();
      unint64_t v37 = v30;
      v38._rawValue = (void *)v68;
      LOBYTE(v68) = v32;
      id v39 = v35;
      uint64_t v25 = v25;
      unint64_t v21 = (unint64_t)&v65;
      SecTrustRef v40 = DIPOIDVerifier.verifyChain(_:forUsage:)(v38, (CoreIDVShared::DIPCertUsage)&v68);
      if (!v41)
      {
        unint64_t v21 = (unint64_t)v40;
        swift_bridgeObjectRelease();
        sub_1D78607E8(v28, v37);

        return (SecTrustRef)v21;
      }
      swift_bridgeObjectRelease();
      sub_1D78607E8(v28, v37);

      goto LABEL_11;
    }
    sub_1D78607E8(v28, v30);
  }
  uint64_t v61 = v28;
  unint64_t v62 = v30;
  if (qword_1EBDF9DC8 != -1) {
    swift_once();
  }
  uint64_t v46 = __swift_project_value_buffer(v7, (uint64_t)qword_1EBDFBE70);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v17, v46, v7);
  uint64_t v47 = sub_1D7A9B5D8();
  os_log_type_t v48 = sub_1D7A9C748();
  if (os_log_type_enabled(v47, v48))
  {
    uint64_t v49 = (uint8_t *)swift_slowAlloc();
    uint64_t v60 = swift_slowAlloc();
    uint64_t v68 = v60;
    uint64_t v59 = v49;
    *(_DWORD *)uint64_t v49 = 136446210;
    unint64_t v58 = v49 + 4;
    LOBYTE(v67[0]) = v18;
    uint64_t v50 = DIPCertUsage.rawValue.getter();
    v67[0] = sub_1D7923300(v50, v51, &v68);
    sub_1D7A9C9E8();
    swift_bridgeObjectRelease();
    uint64_t v52 = v59;
    _os_log_impl(&dword_1D7853000, v47, v48, "Could not find matching intermediate cert for usage = %{public}s", v59, 0xCu);
    uint64_t v53 = v60;
    swift_arrayDestroy();
    MEMORY[0x1D947D740](v53, -1, -1);
    MEMORY[0x1D947D740](v52, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v8 + 8))(v17, v7);
  uint64_t v68 = v70;
  unint64_t v69 = v64;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF99C0);
  uint64_t v54 = swift_allocObject();
  *(_OWORD *)(v54 + 16) = xmmword_1D7AA97B0;
  *(void *)(v54 + 32) = v25;
  v67[0] = v54;
  sub_1D7A9C338();
  v55._rawValue = (void *)v67[0];
  LOBYTE(v67[0]) = v18;
  BOOL v56 = v25;
  unint64_t v21 = (unint64_t)DIPOIDVerifier.verifyChain(_:forUsage:)(v55, (CoreIDVShared::DIPCertUsage)v67);
  swift_bridgeObjectRelease();
  sub_1D78607E8(v61, v62);

  return (SecTrustRef)v21;
}

uint64_t sub_1D7A15004(uint64_t a1)
{
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 8) = a1;
  return result;
}

uint64_t sub_1D7A15040(uint64_t a1, unsigned char *a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1D7A1601C;
  return DIPOIDVerifier.verifyChain(_:forUsage:)(a1, a2);
}

uint64_t sub_1D7A150E4(uint64_t a1, unsigned char *a2)
{
  uint64_t v6 = swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *(void *)uint64_t v6 = v3;
  *(void *)(v6 + 8) = sub_1D7A1601C;
  *(unsigned char *)(v6 + 81) = *a2;
  uint64_t v7 = *v2;
  uint64_t v8 = v2[1];
  *(void *)(v6 + 32) = a1;
  *(void *)(v6 + 40) = v7;
  *(void *)(v6 + 48) = v8;
  return MEMORY[0x1F4188298](sub_1D7A135FC, 0, 0);
}

uint64_t sub_1D7A151AC(uint64_t a1, unsigned char *a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1D7A1601C;
  return DIPOIDVerifier.verifyLeaf(_:forUsage:)(a1, a2);
}

uint64_t sub_1D7A15250(uint64_t a1, uint64_t a2, unsigned char *a3)
{
  uint64_t v8 = swift_task_alloc();
  *(void *)(v4 + 16) = v8;
  *(void *)uint64_t v8 = v4;
  *(void *)(v8 + 8) = sub_1D7A1531C;
  *(void *)(v8 + 80) = a1;
  *(void *)(v8 + 88) = a2;
  *(unsigned char *)(v8 + 145) = *a3;
  uint64_t v9 = v3[1];
  *(void *)(v8 + 96) = *v3;
  *(void *)(v8 + 104) = v9;
  return MEMORY[0x1F4188298](sub_1D7A14360, 0, 0);
}

uint64_t sub_1D7A1531C(uint64_t a1)
{
  uint64_t v7 = *v2;
  uint64_t v4 = swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(uint64_t))(v7 + 8);
  if (!v1) {
    uint64_t v4 = a1;
  }
  return v5(v4);
}

unint64_t sub_1D7A15420()
{
  unint64_t result = qword_1EBDF9578;
  if (!qword_1EBDF9578)
  {
    type metadata accessor for CFError(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBDF9578);
  }
  return result;
}

uint64_t _s13CoreIDVShared14DIPOIDVerifierV27getSpecificCertificateErrorys0G0_psAE_pFZ_0(void *a1)
{
  uint64_t v2 = sub_1D7A9B5F8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2, v4, v5, v6, v7, v8, v9, v10);
  uint64_t v12 = (char *)v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getErrorValue();
  Error.dipErrorCode.getter(v41[2], v13, v14, v15, v16, v17, v18, &v39);
  if (v39 != 256) {
    goto LABEL_23;
  }
  v41[0] = a1;
  id v19 = a1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDF9740);
  if (!swift_dynamicCast()) {
    goto LABEL_23;
  }
  id v20 = v40;
  id v21 = v40;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  if (!v20) {
    goto LABEL_23;
  }
  swift_getErrorValue();
  uint64_t v22 = sub_1D7A9D568();
  uint64_t v24 = v23;
  if (v22 == sub_1D7A9BFC8() && v24 == v25)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v26 = sub_1D7A9D358();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v26 & 1) == 0)
    {
LABEL_22:

LABEL_23:
      id v34 = a1;
      return (uint64_t)a1;
    }
  }
  if (qword_1EBDF9DC8 != -1) {
    swift_once();
  }
  uint64_t v27 = __swift_project_value_buffer(v2, (uint64_t)qword_1EBDFBE70);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v12, v27, v2);
  id v28 = v20;
  unint64_t v29 = sub_1D7A9B5D8();
  os_log_type_t v30 = sub_1D7A9C758();
  if (os_log_type_enabled(v29, v30))
  {
    uint64_t v31 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v31 = 134217984;
    v38[1] = v31 + 4;
    swift_getErrorValue();
    v41[0] = sub_1D7A9D558();
    sub_1D7A9C9E8();

    _os_log_impl(&dword_1D7853000, v29, v30, "Untrusted certificate underlying security error: %ld", v31, 0xCu);
    MEMORY[0x1D947D740](v31, -1, -1);
  }
  else
  {
  }
  (*(void (**)(char *, uint64_t))(v3 + 8))(v12, v2);
  swift_getErrorValue();
  uint64_t result = sub_1D7A9D558();
  if (result < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
  }
  else if (result <= 0x7FFFFFFF)
  {
    if ((int)result > -67819)
    {
      if (result == -25318)
      {
        __int16 v33 = 260;
        goto LABEL_27;
      }
      if (result == -67818)
      {
        __int16 v33 = 258;
        goto LABEL_27;
      }
    }
    else
    {
      if (result == -67820)
      {
        __int16 v33 = 257;
        goto LABEL_27;
      }
      if (result == -67819)
      {
        __int16 v33 = 259;
LABEL_27:
        LOWORD(v41[0]) = v33;
        id v35 = v20;
        unint64_t v36 = sub_1D785EAF8(MEMORY[0x1E4FBC860]);
        sub_1D7860544();
        a1 = (void *)swift_allocError();
        DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(v20, 0xD000000000000011, 0x80000001D7AC9150, (__int16 *)v41, 0, v36, 0xD000000000000057, 0x80000001D7AC9040, v37, 0xD00000000000001FLL, 0x80000001D7AC9170, 557);

        return (uint64_t)a1;
      }
    }
    goto LABEL_22;
  }
  __break(1u);
  return result;
}

unint64_t sub_1D7A15940()
{
  unint64_t result = qword_1EA846F48;
  if (!qword_1EA846F48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA846F48);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for DIPCertUsage(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xEC) {
    goto LABEL_17;
  }
  if (a2 + 20 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 20) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 20;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 20;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 20;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x15;
  int v8 = v6 - 21;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for DIPCertUsage(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 20 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 20) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xEC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xEB)
  {
    unsigned int v6 = ((a2 - 236) >> 8) + 1;
    *unint64_t result = a2 + 20;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D7A15AF0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 20;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DIPCertUsage()
{
  return &type metadata for DIPCertUsage;
}

uint64_t dispatch thunk of OIDVerifying.setIntermediates(fromBase64DER:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of OIDVerifying.setTrustedRoots(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of OIDVerifying.verifyChain(_:forUsage:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a4 + 24) + **(int **)(a4 + 24));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_1D79D8780;
  return v11(a1, a2, a3, a4);
}

uint64_t dispatch thunk of OIDVerifying.verifyChain(fromBase64DER:forUsage:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a4 + 32) + **(int **)(a4 + 32));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_1D79D8780;
  return v11(a1, a2, a3, a4);
}

uint64_t dispatch thunk of OIDVerifying.verifyLeaf(_:forUsage:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a4 + 40) + **(int **)(a4 + 40));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_1D79D8780;
  return v11(a1, a2, a3, a4);
}

uint64_t dispatch thunk of OIDVerifying.verifyLeaf(fromBase64DER:forUsage:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a5 + 48) + **(int **)(a5 + 48));
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v11;
  *uint64_t v11 = v5;
  v11[1] = sub_1D79B7D7C;
  return v13(a1, a2, a3, a4, a5);
}

uint64_t dispatch thunk of static OIDVerifying.getSpecificCertificateError(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

void *assignWithCopy for DIPOIDVerifier(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for DIPOIDVerifier()
{
  return &type metadata for DIPOIDVerifier;
}

uint64_t sub_1D7A16014(uint64_t a1)
{
  return sub_1D7A6EDB8(a1, *(void **)(v1 + 16));
}

uint64_t Logotype.readerMetadata.getter@<X0>(char *a1@<X8>)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8477F0);
  MEMORY[0x1F4188790](v3 - 8, v4, v5, v6, v7, v8, v9, v10);
  uint64_t v12 = (char *)&v63 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1D7A9AF68();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13, v15, v16, v17, v18, v19, v20, v21);
  uint64_t v23 = (char *)&v63 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA846F90);
  MEMORY[0x1F4188790](v24 - 8, v25, v26, v27, v28, v29, v30, v31);
  __int16 v33 = (char *)&v63 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v34 = v1[1];
  if (v34 >= 2)
  {
    uint64_t v38 = v1[2];
    uint64_t v39 = *(void *)(v38 + 16);
    if (v39)
    {
      unint64_t v64 = v23;
      uint64_t v65 = v14;
      uint64_t v66 = v13;
      uint64_t v67 = v12;
      uint64_t v71 = a1;
      uint64_t v40 = *v1;
      swift_bridgeObjectRetain_n();
      uint64_t v68 = v40;
      unint64_t v70 = v34;
      sub_1D7933F4C(v40, v34);
      uint64_t v74 = sub_1D7A9B228();
      uint64_t v41 = *(void *)(v74 - 8);
      unint64_t v42 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v41 + 56);
      uint64_t v72 = v41 + 56;
      unint64_t v73 = v42;
      uint64_t v69 = v38;
      uint64_t v43 = (uint64_t *)(v38 + 96);
      while (1)
      {
        uint64_t v45 = *(v43 - 3);
        unint64_t v44 = *(v43 - 2);
        uint64_t v46 = *v43;
        uint64_t v77 = *(v43 - 1);
        uint64_t v78 = v46;
        uint64_t v75 = 0x2F2F3A7370747468;
        unint64_t v76 = 0xE800000000000000;
        v73(v33, 1, 1, v74);
        swift_unknownObjectRetain();
        swift_bridgeObjectRetain();
        sub_1D7860790(v45, v44);
        sub_1D791118C();
        swift_bridgeObjectRetain();
        sub_1D7A9CA68();
        char v48 = v47;
        sub_1D7871C4C((uint64_t)v33, &qword_1EA846F90);
        swift_bridgeObjectRelease();
        if ((v48 & 1) == 0) {
          break;
        }
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
        sub_1D78607E8(v45, v44);
        swift_bridgeObjectRelease();
        v43 += 9;
        if (!--v39)
        {
          swift_bridgeObjectRelease_n();
          sub_1D7933FA4(v68, v70);
          a1 = v71;
          goto LABEL_10;
        }
      }
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      sub_1D78607E8(v45, v44);
      uint64_t v52 = (uint64_t)v67;
      sub_1D7A9AF58();
      swift_bridgeObjectRelease();
      uint64_t v54 = v65;
      uint64_t v53 = v66;
      int v55 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v65 + 48))(v52, 1, v66);
      uint64_t v57 = v70;
      BOOL v56 = v71;
      uint64_t v58 = v68;
      if (v55 != 1)
      {
        uint64_t v59 = *(void (**)(char *, uint64_t, uint64_t))(v54 + 32);
        uint64_t v60 = v64;
        v59(v64, v52, v53);
        uint64_t v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA846F98);
        unint64_t v62 = (uint64_t *)&v56[*(int *)(v61 + 48)];
        v59(v56, (uint64_t)v60, v53);
        swift_bridgeObjectRetain();
        sub_1D7933FA4(v58, v57);
        *unint64_t v62 = v58;
        v62[1] = v57;
        return (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(*(void *)(v61 - 8) + 56))(v56, 0, 1, v61);
      }
      sub_1D7933FA4(v68, v70);
      sub_1D7871C4C(v52, &qword_1EA8477F0);
      uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA846F98);
      uint64_t v50 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v49 - 8) + 56);
      unint64_t v51 = v56;
    }
    else
    {
LABEL_10:
      uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA846F98);
      uint64_t v50 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v49 - 8) + 56);
      unint64_t v51 = a1;
    }
    return v50((uint64_t)v51, 1, 1, v49);
  }
  else
  {
    uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA846F98);
    unint64_t v36 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56);
    return v36((uint64_t)a1, 1, 1, v35);
  }
}

uint64_t sub_1D7A16528(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 24))
  {
    sub_1D7860E50((_OWORD *)a1, v9);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v8 = *v2;
    *int v2 = 0x8000000000000000;
    sub_1D78A0704(v9, a2, isUniquelyReferenced_nonNull_native);
    *int v2 = v8;
    swift_bridgeObjectRelease();
    uint64_t v5 = sub_1D7A9CEA8();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a2, v5);
  }
  else
  {
    sub_1D7871C4C(a1, (uint64_t *)&unk_1EBDF9680);
    sub_1D789F020(a2, v9);
    uint64_t v7 = sub_1D7A9CEA8();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(a2, v7);
    return sub_1D7871C4C((uint64_t)v9, (uint64_t *)&unk_1EBDF9680);
  }
}

uint64_t sub_1D7A16648(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a1 + 24))
  {
    sub_1D7860E50((_OWORD *)a1, v9);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v8 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_1D78A095C(v9, a2, a3, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v8;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_1D7871C4C(a1, (uint64_t *)&unk_1EBDF9680);
    sub_1D789F14C(a2, a3, v9);
    swift_bridgeObjectRelease();
    return sub_1D7871C4C((uint64_t)v9, (uint64_t *)&unk_1EBDF9680);
  }
}

uint64_t sub_1D7A16720(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDF9120);
  MEMORY[0x1F4188790](v8 - 8, v9, v10, v11, v12, v13, v14, v15);
  uint64_t v17 = (char *)&v30 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF9118);
  MEMORY[0x1F4188790](v18, v19, v18, v20, v21, v22, v23, v24);
  uint64_t v26 = (char *)&v30 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v27 + 48))(a1, 1) == 1)
  {
    sub_1D7871C4C(a1, (uint64_t *)&unk_1EBDF9120);
    sub_1D789F384(a2, a3, (uint64_t)v17);
    swift_bridgeObjectRelease();
    return sub_1D7871C4C((uint64_t)v17, (uint64_t *)&unk_1EBDF9120);
  }
  else
  {
    sub_1D7916474(a1, (uint64_t)v26);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v31 = *v4;
    *uint64_t v4 = 0x8000000000000000;
    sub_1D78A1818((uint64_t)v26, a2, a3, isUniquelyReferenced_nonNull_native);
    *uint64_t v4 = v31;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
}

uint64_t CBOREncoder.codingKeyFormat.setter(char *a1)
{
  return sub_1D7A18264(a1, MEMORY[0x1E4F50DC0]);
}

uint64_t Decoder.codingKeyFormat.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  return sub_1D7A16928(a1, a2, MEMORY[0x1E4FBC5C0], a3);
}

uint64_t Encoder.codingKeyFormat.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  return sub_1D7A16928(a1, a2, MEMORY[0x1E4FBC5D8], a3);
}

uint64_t sub_1D7A16928@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t)@<X2>, unsigned char *a4@<X8>)
{
  uint64_t v8 = sub_1D7A9CEA8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8, v10, v11, v12, v13, v14, v15, v16);
  uint64_t v18 = &v25[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v19 = a3(a1, a2);
  if (qword_1EA841630 != -1) {
    swift_once();
  }
  uint64_t v20 = __swift_project_value_buffer(v8, (uint64_t)qword_1EA846FB8);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v9 + 16))(v18, v20, v8);
  if (*(void *)(v19 + 16) && (unint64_t v21 = sub_1D7A187CC((uint64_t)v18), (v22 & 1) != 0))
  {
    sub_1D78907D8(*(void *)(v19 + 56) + 32 * v21, (uint64_t)&v26);
  }
  else
  {
    long long v26 = 0u;
    long long v27 = 0u;
  }
  swift_bridgeObjectRelease();
  (*(void (**)(unsigned char *, uint64_t))(v9 + 8))(v18, v8);
  if (!*((void *)&v27 + 1))
  {
    uint64_t result = sub_1D7871C4C((uint64_t)&v26, (uint64_t *)&unk_1EBDF9680);
    goto LABEL_11;
  }
  uint64_t result = swift_dynamicCast();
  if (!result)
  {
LABEL_11:
    char v24 = 0;
    goto LABEL_12;
  }
  char v24 = v25[15];
LABEL_12:
  *a4 = v24;
  return result;
}

uint64_t CBOREncoder.codingKeyFormat.getter@<X0>(unsigned char *a1@<X8>)
{
  return sub_1D7A17F28(MEMORY[0x1E4F50DC8], a1);
}

uint64_t Decoder.presentmentType.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  return sub_1D7A16B48(a1, a2, MEMORY[0x1E4FBC5C0], a3);
}

uint64_t Encoder.presentmentType.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  return sub_1D7A16B48(a1, a2, MEMORY[0x1E4FBC5D8], a3);
}

uint64_t sub_1D7A16B48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t)@<X2>, unsigned char *a4@<X8>)
{
  uint64_t v8 = sub_1D7A9CEA8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8, v10, v11, v12, v13, v14, v15, v16);
  uint64_t v18 = (char *)&v24 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = a3(a1, a2);
  if (qword_1EA841628 != -1) {
    swift_once();
  }
  uint64_t v20 = __swift_project_value_buffer(v8, (uint64_t)qword_1EA846FA0);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v18, v20, v8);
  if (*(void *)(v19 + 16) && (unint64_t v21 = sub_1D7A187CC((uint64_t)v18), (v22 & 1) != 0))
  {
    sub_1D78907D8(*(void *)(v19 + 56) + 32 * v21, (uint64_t)&v24);
  }
  else
  {
    long long v24 = 0u;
    long long v25 = 0u;
  }
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v18, v8);
  if (!*((void *)&v25 + 1))
  {
    uint64_t result = sub_1D7871C4C((uint64_t)&v24, (uint64_t *)&unk_1EBDF9680);
    goto LABEL_11;
  }
  uint64_t result = swift_dynamicCast();
  if ((result & 1) == 0) {
LABEL_11:
  }
    *a4 = 2;
  return result;
}

uint64_t sub_1D7A16D1C(uint64_t a1)
{
  return sub_1D7A16D78(a1, qword_1EA846FA0);
}

uint64_t static CodingUserInfoKey.iso18013PresentmentType.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D7A16EC0(&qword_1EA841628, (uint64_t)qword_1EA846FA0, a1);
}

uint64_t sub_1D7A16D5C(uint64_t a1)
{
  return sub_1D7A16D78(a1, qword_1EA846FB8);
}

uint64_t sub_1D7A16D78(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA846FF8);
  MEMORY[0x1F4188790](v3 - 8, v4, v5, v6, v7, v8, v9, v10);
  uint64_t v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1D7A9CEA8();
  __swift_allocate_value_buffer(v13, a2);
  uint64_t v14 = __swift_project_value_buffer(v13, (uint64_t)a2);
  sub_1D7A9CE98();
  uint64_t v15 = *(void *)(v13 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48))(v12, 1, v13);
  if (result != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v15 + 32))(v14, v12, v13);
  }
  __break(1u);
  return result;
}

uint64_t static CodingUserInfoKey.iso18013CodingKeyFormat.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D7A16EC0(&qword_1EA841630, (uint64_t)qword_1EA846FB8, a1);
}

uint64_t sub_1D7A16EC0@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_1D7A9CEA8();
  uint64_t v6 = __swift_project_value_buffer(v5, a2);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  return v7(a3, v6, v5);
}

CoreIDVShared::ISO18013PresentmentType_optional __swiftcall ISO18013PresentmentType.init(rawValue:)(Swift::String rawValue)
{
  return (CoreIDVShared::ISO18013PresentmentType_optional)sub_1D78BC830(v1);
}

uint64_t ISO18013PresentmentType.rawValue.getter()
{
  if (*v0) {
    return 0x6C617469676964;
  }
  else {
    return 0x6C61636973796870;
  }
}

uint64_t sub_1D7A16FA0(char *a1, char *a2)
{
  return sub_1D7995EA0(*a1, *a2);
}

uint64_t sub_1D7A16FAC()
{
  return sub_1D7A9D628();
}

uint64_t sub_1D7A17030()
{
  sub_1D7A9C0B8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D7A170A0()
{
  return sub_1D7A9D628();
}

CoreIDVShared::ISO18013PresentmentType_optional sub_1D7A17120(Swift::String *a1)
{
  return ISO18013PresentmentType.init(rawValue:)(*a1);
}

void sub_1D7A1712C(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x6C61636973796870;
  if (*v1) {
    uint64_t v2 = 0x6C617469676964;
  }
  unint64_t v3 = 0xE800000000000000;
  if (*v1) {
    unint64_t v3 = 0xE700000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

CoreIDVShared::ISO18013CodingKeyFormat_optional __swiftcall ISO18013CodingKeyFormat.init(rawValue:)(Swift::String rawValue)
{
  return (CoreIDVShared::ISO18013CodingKeyFormat_optional)sub_1D78BC830(v1);
}

uint64_t ISO18013CodingKeyFormat.rawValue.getter()
{
  if (*v0) {
    return 1196901185;
  }
  else {
    return 0x647261646E617473;
  }
}

uint64_t sub_1D7A171AC(char *a1, char *a2)
{
  return sub_1D7996134(*a1, *a2);
}

uint64_t sub_1D7A171B8()
{
  return sub_1D7A9D628();
}

uint64_t sub_1D7A17234()
{
  sub_1D7A9C0B8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D7A1729C()
{
  return sub_1D7A9D628();
}

CoreIDVShared::ISO18013CodingKeyFormat_optional sub_1D7A17314(Swift::String *a1)
{
  return ISO18013CodingKeyFormat.init(rawValue:)(*a1);
}

void sub_1D7A17320(uint64_t *a1@<X8>)
{
  uint64_t v2 = 1196901185;
  if (!*v1) {
    uint64_t v2 = 0x647261646E617473;
  }
  unint64_t v3 = 0xE800000000000000;
  if (*v1) {
    unint64_t v3 = 0xE400000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t ISO18013DictionaryEncodingStrategy.cborEncoderStrategy.getter@<X0>(uint64_t *a1@<X8>)
{
  if (*v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA846FD0);
    uint64_t v3 = swift_allocBox();
    uint64_t v5 = v4;
    uint64_t v6 = *MEMORY[0x1E4F50DB8];
    uint64_t v7 = sub_1D7A9B3A8();
    uint64_t v15 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104);
    ((void (*)(void *__return_ptr, uint64_t, uint64_t, uint64_t))v15)((void *)(v7 - 8), v5, v6, v7);
    *a1 = v3;
    uint64_t v8 = *MEMORY[0x1E4F50DB0];
    uint64_t v9 = a1;
    uint64_t v10 = v7;
    uint64_t v11 = v15;
  }
  else
  {
    uint64_t v12 = *MEMORY[0x1E4F50DB8];
    uint64_t v13 = sub_1D7A9B3A8();
    uint64_t v11 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 104);
    uint64_t v10 = v13;
    uint64_t v9 = a1;
    uint64_t v8 = v12;
  }
  return v11(v9, v8, v10);
}

CoreIDVShared::ISO18013DictionaryEncodingStrategy_optional __swiftcall ISO18013DictionaryEncodingStrategy.init(rawValue:)(Swift::String rawValue)
{
  return (CoreIDVShared::ISO18013DictionaryEncodingStrategy_optional)sub_1D78BC830(v1);
}

uint64_t ISO18013DictionaryEncodingStrategy.rawValue.getter()
{
  if (*v0) {
    return 0x4164656966696E75;
  }
  else {
    return 0xD000000000000011;
  }
}

uint64_t sub_1D7A174D0(char *a1, char *a2)
{
  return sub_1D7995050(*a1, *a2);
}

uint64_t sub_1D7A174DC()
{
  return sub_1D7A9D628();
}

uint64_t sub_1D7A17570()
{
  sub_1D7A9C0B8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D7A175F0()
{
  return sub_1D7A9D628();
}

CoreIDVShared::ISO18013DictionaryEncodingStrategy_optional sub_1D7A17680(Swift::String *a1)
{
  return ISO18013DictionaryEncodingStrategy.init(rawValue:)(*a1);
}

void sub_1D7A1768C(unint64_t *a1@<X8>)
{
  unint64_t v2 = 0xD000000000000011;
  if (*v1) {
    unint64_t v2 = 0x4164656966696E75;
  }
  unint64_t v3 = 0x80000001D7ABCB00;
  if (*v1) {
    unint64_t v3 = 0xED00007373656363;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t CBOREncoder.presentmentType.getter@<X0>(unsigned char *a1@<X8>)
{
  return sub_1D7A178DC(MEMORY[0x1E4F50DC8], a1);
}

uint64_t CBOREncoder.presentmentType.setter(unsigned __int8 *a1)
{
  return sub_1D7A17AB0(a1, MEMORY[0x1E4F50DC0]);
}

void (*CBOREncoder.presentmentType.modify(void *a1))(uint64_t a1, char a2)
{
  unint64_t v3 = malloc(0x70uLL);
  *a1 = v3;
  v3[8] = v1;
  uint64_t v4 = sub_1D7A9CEA8();
  v3[9] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[10] = v5;
  size_t v6 = *(void *)(v5 + 64);
  v3[11] = malloc(v6);
  v3[12] = malloc(v6);
  CBOREncoder.presentmentType.getter((unsigned char *)v3 + 104);
  return sub_1D7A177DC;
}

void sub_1D7A177DC(uint64_t a1, char a2)
{
}

void (*CBOREncoder.codingKeyFormat.modify(void *a1))(uint64_t a1, char a2)
{
  unint64_t v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[8] = v1;
  uint64_t v4 = sub_1D7A9CEA8();
  v3[9] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[10] = v5;
  v3[11] = malloc(*(void *)(v5 + 64));
  CBOREncoder.codingKeyFormat.getter((unsigned char *)v3 + 96);
  return sub_1D7A178AC;
}

void sub_1D7A178AC(uint64_t a1, char a2)
{
}

uint64_t CBORDecoder.presentmentType.getter@<X0>(unsigned char *a1@<X8>)
{
  return sub_1D7A178DC(MEMORY[0x1E4F50DA0], a1);
}

uint64_t sub_1D7A178DC@<X0>(uint64_t (*a1)(uint64_t)@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v4 = sub_1D7A9CEA8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4, v6, v7, v8, v9, v10, v11, v12);
  uint64_t v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EA841628 != -1) {
    swift_once();
  }
  uint64_t v15 = __swift_project_value_buffer(v4, (uint64_t)qword_1EA846FA0);
  uint64_t v16 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 16))(v14, v15, v4);
  uint64_t v17 = a1(v16);
  if (*(void *)(v17 + 16) && (unint64_t v18 = sub_1D7A187CC((uint64_t)v14), (v19 & 1) != 0))
  {
    sub_1D78907D8(*(void *)(v17 + 56) + 32 * v18, (uint64_t)&v21);
  }
  else
  {
    long long v21 = 0u;
    long long v22 = 0u;
  }
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v14, v4);
  if (!*((void *)&v22 + 1))
  {
    uint64_t result = sub_1D7871C4C((uint64_t)&v21, (uint64_t *)&unk_1EBDF9680);
    goto LABEL_11;
  }
  uint64_t result = swift_dynamicCast();
  if ((result & 1) == 0) {
LABEL_11:
  }
    *a2 = 2;
  return result;
}

uint64_t CBORDecoder.presentmentType.setter(unsigned __int8 *a1)
{
  return sub_1D7A17AB0(a1, MEMORY[0x1E4F50D98]);
}

uint64_t sub_1D7A17AB0(unsigned __int8 *a1, uint64_t (*a2)(unsigned char *))
{
  uint64_t v4 = sub_1D7A9CEA8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4, v6, v7, v8, v9, v10, v11, v12);
  uint64_t v14 = &v19[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  int v15 = *a1;
  if (qword_1EA841628 != -1) {
    swift_once();
  }
  uint64_t v16 = __swift_project_value_buffer(v4, (uint64_t)qword_1EA846FA0);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v5 + 16))(v14, v16, v4);
  if (v15 == 2)
  {
    long long v20 = 0u;
    long long v21 = 0u;
  }
  else
  {
    *((void *)&v21 + 1) = &type metadata for ISO18013PresentmentType;
    LOBYTE(v20) = v15 & 1;
  }
  uint64_t v17 = (uint64_t (*)(unsigned char *, void))a2(v19);
  sub_1D7A16528((uint64_t)&v20, (uint64_t)v14);
  return v17(v19, 0);
}

void (*CBORDecoder.presentmentType.modify(void *a1))(uint64_t a1, char a2)
{
  unint64_t v3 = malloc(0x70uLL);
  *a1 = v3;
  v3[8] = v1;
  uint64_t v4 = sub_1D7A9CEA8();
  v3[9] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[10] = v5;
  size_t v6 = *(void *)(v5 + 64);
  v3[11] = malloc(v6);
  v3[12] = malloc(v6);
  CBORDecoder.presentmentType.getter((unsigned char *)v3 + 104);
  return sub_1D7A17CF4;
}

void sub_1D7A17CF4(uint64_t a1, char a2)
{
}

void sub_1D7A17D0C(uint64_t a1, char a2, uint64_t (*a3)(void *))
{
  uint64_t v4 = *(void **)a1;
  int v5 = *(unsigned __int8 *)(*(void *)a1 + 104);
  if (a2)
  {
    if (qword_1EA841628 != -1) {
      swift_once();
    }
    uint64_t v7 = v4[10];
    uint64_t v6 = v4[11];
    uint64_t v8 = v4[9];
    uint64_t v9 = __swift_project_value_buffer(v8, (uint64_t)qword_1EA846FA0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v6, v9, v8);
    if (v5 == 2)
    {
      long long v18 = 0u;
      long long v19 = 0u;
    }
    else
    {
      *((void *)&v19 + 1) = &type metadata for ISO18013PresentmentType;
      LOBYTE(v18) = v5 & 1;
    }
    int v15 = (void *)v4[11];
    uint64_t v14 = (void *)v4[12];
    uint64_t v16 = (void (*)(void *, void))a3(v4);
    sub_1D7A16528((uint64_t)&v18, (uint64_t)v15);
    v16(v4, 0);
  }
  else
  {
    if (qword_1EA841628 != -1) {
      swift_once();
    }
    uint64_t v10 = v4[12];
    uint64_t v11 = v4[9];
    uint64_t v12 = v4[10];
    uint64_t v13 = __swift_project_value_buffer(v11, (uint64_t)qword_1EA846FA0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v10, v13, v11);
    if (v5 == 2)
    {
      long long v18 = 0u;
      long long v19 = 0u;
    }
    else
    {
      *((void *)&v19 + 1) = &type metadata for ISO18013PresentmentType;
      LOBYTE(v18) = v5 & 1;
    }
    int v15 = (void *)v4[11];
    uint64_t v14 = (void *)v4[12];
    uint64_t v17 = (void (*)(void *, void))a3(v4 + 4);
    sub_1D7A16528((uint64_t)&v18, (uint64_t)v14);
    v17(v4 + 4, 0);
  }
  free(v14);
  free(v15);
  free(v4);
}

uint64_t CBORDecoder.codingKeyFormat.getter@<X0>(unsigned char *a1@<X8>)
{
  return sub_1D7A17F28(MEMORY[0x1E4F50DA0], a1);
}

uint64_t sub_1D7A17F28@<X0>(uint64_t (*a1)(uint64_t)@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v4 = sub_1D7A9CEA8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4, v6, v7, v8, v9, v10, v11, v12);
  uint64_t v14 = &v22[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_1EA841630 != -1) {
    swift_once();
  }
  uint64_t v15 = __swift_project_value_buffer(v4, (uint64_t)qword_1EA846FB8);
  uint64_t v16 = (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v5 + 16))(v14, v15, v4);
  uint64_t v17 = a1(v16);
  if (*(void *)(v17 + 16) && (unint64_t v18 = sub_1D7A187CC((uint64_t)v14), (v19 & 1) != 0))
  {
    sub_1D78907D8(*(void *)(v17 + 56) + 32 * v18, (uint64_t)&v23);
  }
  else
  {
    long long v23 = 0u;
    long long v24 = 0u;
  }
  swift_bridgeObjectRelease();
  (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v14, v4);
  if (!*((void *)&v24 + 1))
  {
    uint64_t result = sub_1D7871C4C((uint64_t)&v23, (uint64_t *)&unk_1EBDF9680);
    goto LABEL_11;
  }
  uint64_t result = swift_dynamicCast();
  if (!result)
  {
LABEL_11:
    char v21 = 0;
    goto LABEL_12;
  }
  char v21 = v22[15];
LABEL_12:
  *a2 = v21;
  return result;
}

uint64_t sub_1D7A180E8(char *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(unsigned char *))
{
  uint64_t v7 = sub_1D7A9CEA8();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7, v9, v10, v11, v12, v13, v14, v15);
  uint64_t v17 = &v22[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  char v18 = *a1;
  if (qword_1EA841630 != -1) {
    swift_once();
  }
  uint64_t v19 = __swift_project_value_buffer(v7, (uint64_t)qword_1EA846FB8);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v8 + 16))(v17, v19, v7);
  long long v24 = &type metadata for ISO18013CodingKeyFormat;
  v23[0] = v18;
  long long v20 = (uint64_t (*)(unsigned char *, void))a5(v22);
  sub_1D7A16528((uint64_t)v23, (uint64_t)v17);
  return v20(v22, 0);
}

uint64_t CBORDecoder.codingKeyFormat.setter(char *a1)
{
  return sub_1D7A18264(a1, MEMORY[0x1E4F50D98]);
}

uint64_t sub_1D7A18264(char *a1, uint64_t (*a2)(unsigned char *))
{
  uint64_t v4 = sub_1D7A9CEA8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4, v6, v7, v8, v9, v10, v11, v12);
  uint64_t v14 = &v19[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  char v15 = *a1;
  if (qword_1EA841630 != -1) {
    swift_once();
  }
  uint64_t v16 = __swift_project_value_buffer(v4, (uint64_t)qword_1EA846FB8);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v5 + 16))(v14, v16, v4);
  char v21 = &type metadata for ISO18013CodingKeyFormat;
  v20[0] = v15;
  uint64_t v17 = (uint64_t (*)(unsigned char *, void))a2(v19);
  sub_1D7A16528((uint64_t)v20, (uint64_t)v14);
  return v17(v19, 0);
}

void (*CBORDecoder.codingKeyFormat.modify(void *a1))(uint64_t a1, char a2)
{
  unint64_t v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[8] = v1;
  uint64_t v4 = sub_1D7A9CEA8();
  v3[9] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[10] = v5;
  v3[11] = malloc(*(void *)(v5 + 64));
  CBORDecoder.codingKeyFormat.getter((unsigned char *)v3 + 96);
  return sub_1D7A18478;
}

void sub_1D7A18478(uint64_t a1, char a2)
{
}

void sub_1D7A18490(uint64_t a1, char a2, uint64_t (*a3)(void *))
{
  uint64_t v4 = *(void **)a1;
  char v5 = *(unsigned char *)(*(void *)a1 + 96);
  if (a2)
  {
    if (qword_1EA841630 != -1) {
      swift_once();
    }
    uint64_t v7 = v4[10];
    uint64_t v6 = (void *)v4[11];
    uint64_t v8 = v4[9];
    uint64_t v9 = __swift_project_value_buffer(v8, (uint64_t)qword_1EA846FB8);
    (*(void (**)(void *, uint64_t, uint64_t))(v7 + 16))(v6, v9, v8);
    uint64_t v16 = &type metadata for ISO18013CodingKeyFormat;
    v15[0] = v5;
    uint64_t v10 = (void (*)(void *, void))a3(v4);
    sub_1D7A16528((uint64_t)v15, (uint64_t)v6);
    v10(v4, 0);
  }
  else
  {
    if (qword_1EA841630 != -1) {
      swift_once();
    }
    uint64_t v11 = v4[10];
    uint64_t v6 = (void *)v4[11];
    uint64_t v12 = v4[9];
    uint64_t v13 = __swift_project_value_buffer(v12, (uint64_t)qword_1EA846FB8);
    (*(void (**)(void *, uint64_t, uint64_t))(v11 + 16))(v6, v13, v12);
    uint64_t v16 = &type metadata for ISO18013CodingKeyFormat;
    v15[0] = v5;
    uint64_t v14 = (void (*)(void *, void))a3(v4 + 4);
    sub_1D7A16528((uint64_t)v15, (uint64_t)v6);
    v14(v4 + 4, 0);
  }
  free(v6);
  free(v4);
}

unint64_t sub_1D7A18648(uint64_t a1)
{
  uint64_t v2 = sub_1D7A9D5C8();
  return sub_1D7A1A7B4(a1, v2);
}

uint64_t sub_1D7A18684(uint64_t a1, uint64_t a2)
{
  return sub_1D7A18FA4(a1, a2, MEMORY[0x1E4FBB120], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1D7A19148);
}

unint64_t sub_1D7A186B0(uint64_t a1)
{
  sub_1D7A9D5D8();
  DIPError.PropertyKey.rawValue.getter();
  sub_1D7A9C0B8();
  swift_bridgeObjectRelease();
  uint64_t v2 = sub_1D7A9D628();
  return sub_1D7A1922C(a1, v2);
}

unint64_t sub_1D7A18740(char a1)
{
  sub_1D7A9D5D8();
  DIPError.PropertyKey.rawValue.getter();
  sub_1D7A9C0B8();
  swift_bridgeObjectRelease();
  uint64_t v2 = sub_1D7A9D628();
  return sub_1D7A1934C(a1, v2);
}

unint64_t sub_1D7A187CC(uint64_t a1)
{
  sub_1D7A9CEA8();
  uint64_t v2 = sub_1D7A9BEF8();
  return sub_1D7A19BA8(a1, v2);
}

unint64_t sub_1D7A18834()
{
  unint64_t result = qword_1EA846FD8;
  if (!qword_1EA846FD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA846FD8);
  }
  return result;
}

unint64_t sub_1D7A1888C()
{
  unint64_t result = qword_1EA846FE0;
  if (!qword_1EA846FE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA846FE0);
  }
  return result;
}

unint64_t sub_1D7A188E4()
{
  unint64_t result = qword_1EA846FE8;
  if (!qword_1EA846FE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA846FE8);
  }
  return result;
}

uint64_t sub_1D7A18938@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = CBOREncoder.presentmentType.getter(&v3);
  *a1 = v3;
  return result;
}

uint64_t sub_1D7A18974(unsigned __int8 *a1)
{
  unsigned __int8 v2 = *a1;
  return CBOREncoder.presentmentType.setter(&v2);
}

void *sub_1D7A189AC@<X0>(unsigned char *a1@<X8>)
{
  return keypath_get_3Tm((void *(*)(uint64_t *__return_ptr))CBOREncoder.codingKeyFormat.getter, a1);
}

uint64_t sub_1D7A189C4(char *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D7A180E8(a1, a2, a3, a4, MEMORY[0x1E4F50DC0]);
}

uint64_t sub_1D7A189F0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = CBORDecoder.presentmentType.getter(&v3);
  *a1 = v3;
  return result;
}

uint64_t sub_1D7A18A2C(unsigned __int8 *a1)
{
  unsigned __int8 v2 = *a1;
  return CBORDecoder.presentmentType.setter(&v2);
}

void *sub_1D7A18A64@<X0>(unsigned char *a1@<X8>)
{
  return keypath_get_3Tm((void *(*)(uint64_t *__return_ptr))CBORDecoder.codingKeyFormat.getter, a1);
}

void *keypath_get_3Tm@<X0>(void *(*a1)(uint64_t *__return_ptr)@<X3>, unsigned char *a2@<X8>)
{
  uint64_t result = a1(&v4);
  *a2 = v4;
  return result;
}

uint64_t sub_1D7A18ABC(char *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D7A180E8(a1, a2, a3, a4, MEMORY[0x1E4F50D98]);
}

ValueMetadata *type metadata accessor for ISO18013PresentmentType()
{
  return &type metadata for ISO18013PresentmentType;
}

ValueMetadata *type metadata accessor for ISO18013CodingKeyFormat()
{
  return &type metadata for ISO18013CodingKeyFormat;
}

unsigned char *_s13CoreIDVShared23ISO18013PresentmentTypeOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D7A18BD8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ISO18013DictionaryEncodingStrategy()
{
  return &type metadata for ISO18013DictionaryEncodingStrategy;
}