PreviewsMessagingOS::DynamicLoadablePreviewProduct::Location_optional __swiftcall DynamicLoadablePreviewProduct.Location.init(rawValue:)(Swift::String rawValue)
{
  char *v1;

  return (PreviewsMessagingOS::DynamicLoadablePreviewProduct::Location_optional)sub_25A54CE7C(v1);
}

uint64_t DynamicLoadablePreviewProduct.Location.rawValue.getter()
{
  if (*v0) {
    return 0xD000000000000012;
  }
  else {
    return 0x6574756C6F736261;
  }
}

uint64_t sub_25A549308(char *a1, char *a2)
{
  return sub_25A5E862C(*a1, *a2);
}

PreviewsMessagingOS::DynamicLoadablePreviewProduct::Location_optional sub_25A549314(Swift::String *a1)
{
  return DynamicLoadablePreviewProduct.Location.init(rawValue:)(*a1);
}

uint64_t sub_25A549320@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = DynamicLoadablePreviewProduct.Location.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_25A549348(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_25A54F03C();
  uint64_t v5 = MEMORY[0x263F60648];

  return MEMORY[0x270F55C68](a1, a2, v4, v5);
}

uint64_t sub_25A5493A4()
{
  return sub_25A622B20();
}

uint64_t sub_25A54940C()
{
  return sub_25A616F44();
}

uint64_t sub_25A549414()
{
  return sub_25A549C94();
}

uint64_t sub_25A54941C()
{
  sub_25A622DF0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25A54945C()
{
  sub_25A622DF0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25A5494B0()
{
  sub_25A622DF0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25A549504()
{
  sub_25A622DF0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25A549558()
{
  sub_25A622DF0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25A5495C0()
{
  sub_25A622DF0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25A549624()
{
  sub_25A622DF0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25A549694()
{
  sub_25A622DF0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25A549764()
{
  sub_25A622DF0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25A5497E8()
{
  sub_25A622DF0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25A549864()
{
  sub_25A622DF0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25A5498F0()
{
  sub_25A622DF0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25A549988()
{
  sub_25A622DF0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25A549A04()
{
  sub_25A622DF0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25A549A64()
{
  sub_25A622DF0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25A549AD8()
{
  sub_25A622DF0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25A549BD0()
{
  sub_25A622DF0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25A549C40()
{
  sub_25A622DF0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25A549C94()
{
  sub_25A622DF0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25A549D04()
{
  sub_25A622DF0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25A549E44()
{
  sub_25A622DF0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25A549EAC()
{
  sub_25A622DF0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25A549F14()
{
  sub_25A622DF0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25A549F7C()
{
  sub_25A622DF0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25A549FD0()
{
  sub_25A622DF0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25A54A04C()
{
  sub_25A622DF0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25A54A0D0()
{
  sub_25A622DF0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25A54A16C()
{
  sub_25A622DF0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25A54A1EC()
{
  sub_25A622DF0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25A54A25C()
{
  sub_25A622DF0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25A54A2B0()
{
  sub_25A622DF0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25A54A344()
{
  sub_25A622DF0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25A54A398()
{
  sub_25A622DF0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25A54A3EC()
{
  sub_25A622DF0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25A54A434()
{
  sub_25A622DF0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25A54A4B0()
{
  sub_25A622DF0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25A54A590()
{
  sub_25A622DF0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25A54A5E8()
{
  sub_25A622DF0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25A54A664()
{
  sub_25A622DF0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25A54A6C8()
{
  sub_25A622DF0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25A54A71C()
{
  sub_25A622DF0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25A54A794()
{
  sub_25A622DF0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25A54A7E8()
{
  sub_25A622DF0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25A54A858()
{
  sub_25A622DF0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25A54A8AC()
{
  sub_25A622DF0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25A54A974()
{
  sub_25A622DF0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25A54AA88()
{
  sub_25A622DF0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25A54AB84()
{
  sub_25A622DF0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25A54AC6C()
{
  sub_25A622DF0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25A54AD68()
{
  sub_25A622DF0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25A54ADBC()
{
  sub_25A622DF0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25A54AE34()
{
  sub_25A622DF0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25A54AF08()
{
  sub_25A622DF0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25A54AF84()
{
  sub_25A622DF0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25A54B0B8()
{
  sub_25A622DF0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25A54B1E4()
{
  sub_25A622DF0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25A54B238()
{
  sub_25A622DF0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25A54B2A4()
{
  sub_25A622DF0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25A54B318()
{
  sub_25A622DF0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25A54B384()
{
  sub_25A622DF0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25A54B400()
{
  sub_25A622DF0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25A54B568()
{
  sub_25A622DF0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25A54B5E8()
{
  sub_25A622DF0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25A54B63C()
{
  sub_25A622DF0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25A54B694()
{
  sub_25A622DF0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25A54B6E8()
{
  sub_25A622DF0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25A54B7D4()
{
  sub_25A622DF0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25A54B828()
{
  sub_25A622DF0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25A54B970()
{
  sub_25A622DF0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25A54BA10()
{
  sub_25A622DF0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25A54BA68()
{
  sub_25A622DF0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25A54BBC0()
{
  sub_25A622DF0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25A54BC5C()
{
  sub_25A622DF0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25A54BCB4()
{
  sub_25A622DF0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25A54BDA4()
{
  sub_25A622DF0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25A54BE08()
{
  sub_25A622DF0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25A54BEA4()
{
  sub_25A622DF0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25A54BEF8()
{
  sub_25A622DF0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25A54BF4C()
{
  sub_25A622DF0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25A54BFC4()
{
  sub_25A622DF0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25A54C030()
{
  sub_25A622DF0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25A54C0A4()
{
  sub_25A622DF0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25A54C18C()
{
  sub_25A622DF0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25A54C208()
{
  sub_25A622DF0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25A54C26C()
{
  sub_25A622DF0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25A54C2E0()
{
  sub_25A622DF0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25A54C3FC()
{
  sub_25A622DF0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25A54C4E0()
{
  sub_25A622DF0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25A54C5A8()
{
  sub_25A622DF0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25A54C5FC()
{
  sub_25A622DF0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25A54C650()
{
  sub_25A622DF0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25A54C6C0()
{
  sub_25A622DF0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25A54C738()
{
  sub_25A622DF0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25A54C78C()
{
  sub_25A622DF0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25A54C7E0()
{
  sub_25A622DF0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25A54C834()
{
  sub_25A622DF0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25A54C884()
{
  sub_25A622DF0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25A54C8FC()
{
  sub_25A622DF0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25A54C978()
{
  sub_25A622DF0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25A54C9F8()
{
  sub_25A622DF0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25A54CA4C()
{
  sub_25A622DF0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25A54CA9C()
{
  sub_25A622DF0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25A54CB84()
{
  sub_25A622DF0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25A54CBF4()
{
  sub_25A622DF0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25A54CC48()
{
  sub_25A622DF0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25A54CCB8()
{
  return sub_25A61E06C();
}

PreviewsMessagingOS::DynamicLoadablePreviewProduct::LoadingStrategy_optional __swiftcall DynamicLoadablePreviewProduct.LoadingStrategy.init(rawValue:)(Swift::String rawValue)
{
  v2 = v1;
  unint64_t v3 = sub_25A6232B0();
  result.value = swift_bridgeObjectRelease();
  char v5 = 3;
  if (v3 < 3) {
    char v5 = v3;
  }
  char *v2 = v5;
  return result;
}

uint64_t DynamicLoadablePreviewProduct.LoadingStrategy.rawValue.getter()
{
  return *(void *)&aBundle_4[8 * *v0];
}

uint64_t sub_25A54CD40(char *a1, char *a2)
{
  return sub_25A5E86D4(*a1, *a2);
}

PreviewsMessagingOS::DynamicLoadablePreviewProduct::LoadingStrategy_optional sub_25A54CD4C(Swift::String *a1)
{
  return DynamicLoadablePreviewProduct.LoadingStrategy.init(rawValue:)(*a1);
}

uint64_t sub_25A54CD58@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = DynamicLoadablePreviewProduct.LoadingStrategy.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_25A54CD80(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_25A54EFE8();
  uint64_t v5 = MEMORY[0x263F60648];

  return MEMORY[0x270F55C68](a1, a2, v4, v5);
}

uint64_t sub_25A54CDDC()
{
  return sub_25A622B20();
}

uint64_t sub_25A54CE44()
{
  return sub_25A616FCC();
}

uint64_t sub_25A54CE4C()
{
  return sub_25A549C40();
}

uint64_t sub_25A54CE54()
{
  return sub_25A61DE30();
}

uint64_t DynamicLoadablePreviewProduct.ExternalFunctionBinding.dlopenMode.getter()
{
  if (*v0) {
    return 2;
  }
  else {
    return 0;
  }
}

PreviewsMessagingOS::DynamicLoadablePreviewProduct::ExternalFunctionBinding_optional __swiftcall DynamicLoadablePreviewProduct.ExternalFunctionBinding.init(rawValue:)(Swift::String rawValue)
{
  return (PreviewsMessagingOS::DynamicLoadablePreviewProduct::ExternalFunctionBinding_optional)sub_25A54CE7C(v1);
}

uint64_t sub_25A54CE7C@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_25A6232B0();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t DynamicLoadablePreviewProduct.ExternalFunctionBinding.rawValue.getter()
{
  if (*v0) {
    return 0x74616964656D6D69;
  }
  else {
    return 0x746C7561666564;
  }
}

uint64_t sub_25A54CF1C(char *a1, char *a2)
{
  return sub_25A5E875C(*a1, *a2);
}

PreviewsMessagingOS::DynamicLoadablePreviewProduct::ExternalFunctionBinding_optional sub_25A54CF28(Swift::String *a1)
{
  return DynamicLoadablePreviewProduct.ExternalFunctionBinding.init(rawValue:)(*a1);
}

uint64_t sub_25A54CF34@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = DynamicLoadablePreviewProduct.ExternalFunctionBinding.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_25A54CF5C(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_25A54EF94();
  uint64_t v5 = MEMORY[0x263F60648];

  return MEMORY[0x270F55C68](a1, a2, v4, v5);
}

uint64_t sub_25A54CFB8()
{
  return sub_25A622B20();
}

uint64_t sub_25A54D020()
{
  return sub_25A617038();
}

uint64_t sub_25A54D028()
{
  return sub_25A549BD0();
}

uint64_t sub_25A54D030()
{
  return sub_25A61DE98();
}

uint64_t DynamicLoadablePreviewProduct.path.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DynamicLoadablePreviewProduct.path.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  void *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*DynamicLoadablePreviewProduct.path.modify())()
{
  return nullsub_1;
}

uint64_t DynamicLoadablePreviewProduct.executablePath.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DynamicLoadablePreviewProduct.executablePath.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t (*DynamicLoadablePreviewProduct.executablePath.modify())()
{
  return nullsub_1;
}

void DynamicLoadablePreviewProduct.location.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 32);
}

unsigned char *DynamicLoadablePreviewProduct.location.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 32) = *result;
  return result;
}

uint64_t (*DynamicLoadablePreviewProduct.location.modify())()
{
  return nullsub_1;
}

void DynamicLoadablePreviewProduct.loadingStrategy.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 33);
}

unsigned char *DynamicLoadablePreviewProduct.loadingStrategy.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 33) = *result;
  return result;
}

uint64_t (*DynamicLoadablePreviewProduct.loadingStrategy.modify())()
{
  return nullsub_1;
}

uint64_t DynamicLoadablePreviewProduct.moduleName.getter()
{
  uint64_t v1 = *(void *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DynamicLoadablePreviewProduct.moduleName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 40) = a1;
  *(void *)(v2 + 48) = a2;
  return result;
}

uint64_t (*DynamicLoadablePreviewProduct.moduleName.modify())()
{
  return nullsub_1;
}

void DynamicLoadablePreviewProduct.externalFunctionBinding.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 56);
}

unsigned char *DynamicLoadablePreviewProduct.externalFunctionBinding.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 56) = *result;
  return result;
}

uint64_t (*DynamicLoadablePreviewProduct.externalFunctionBinding.modify())()
{
  return nullsub_1;
}

uint64_t DynamicLoadablePreviewProduct.isRequired.getter()
{
  return *(unsigned __int8 *)(v0 + 57);
}

uint64_t DynamicLoadablePreviewProduct.isRequired.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 57) = result;
  return result;
}

uint64_t (*DynamicLoadablePreviewProduct.isRequired.modify())()
{
  return nullsub_1;
}

void __swiftcall DynamicLoadablePreviewProduct.init(path:executablePath:location:loadingStrategy:moduleName:externalFunctionBinding:isRequired:)(PreviewsMessagingOS::DynamicLoadablePreviewProduct *__return_ptr retstr, Swift::String path, Swift::String executablePath, PreviewsMessagingOS::DynamicLoadablePreviewProduct::Location location, PreviewsMessagingOS::DynamicLoadablePreviewProduct::LoadingStrategy loadingStrategy, Swift::String moduleName, PreviewsMessagingOS::DynamicLoadablePreviewProduct::ExternalFunctionBinding externalFunctionBinding, Swift::Bool isRequired)
{
  PreviewsMessagingOS::DynamicLoadablePreviewProduct::Location v8 = *(unsigned char *)location;
  PreviewsMessagingOS::DynamicLoadablePreviewProduct::LoadingStrategy v9 = *(unsigned char *)loadingStrategy;
  PreviewsMessagingOS::DynamicLoadablePreviewProduct::ExternalFunctionBinding v10 = *(unsigned char *)externalFunctionBinding;
  retstr->path = path;
  retstr->executablePath = executablePath;
  retstr->location = v8;
  retstr->loadingStrategy = v9;
  retstr->moduleName = moduleName;
  retstr->externalFunctionBinding = v10;
  retstr->isRequired = v11;
}

uint64_t DynamicLoadablePreviewProduct.hash(into:)()
{
  return sub_25A623470();
}

uint64_t DynamicLoadablePreviewProduct.hashValue.getter()
{
  return sub_25A6234A0();
}

uint64_t sub_25A54D500()
{
  return sub_25A6234A0();
}

uint64_t sub_25A54D580()
{
  return sub_25A6234A0();
}

unint64_t sub_25A54D5F8(char a1)
{
  unint64_t result = 0xD000000000000017;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6261747563657865;
      break;
    case 2:
      unint64_t result = 0x6E6F697461636F6CLL;
      break;
    case 3:
      unint64_t result = 0x53676E6964616F6CLL;
      break;
    case 4:
      unint64_t result = 0x614E656C75646F6DLL;
      break;
    case 5:
      return result;
    case 6:
      unint64_t result = 0x7269757165527369;
      break;
    default:
      unint64_t result = 1752457584;
      break;
  }
  return result;
}

uint64_t sub_25A54D708(unsigned __int8 *a1, char *a2)
{
  return sub_25A5E8804(*a1, *a2);
}

uint64_t sub_25A54D714()
{
  return sub_25A61DF1C();
}

uint64_t sub_25A54D720()
{
  return sub_25A549D04();
}

uint64_t sub_25A54D728()
{
  return sub_25A61DF1C();
}

uint64_t sub_25A54D730@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_25A54EF48();
  *a1 = result;
  return result;
}

unint64_t sub_25A54D760@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_25A54D5F8(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_25A54D78C()
{
  return sub_25A54D5F8(*v0);
}

uint64_t DynamicLoadablePreviewProduct.propertyListValue.getter()
{
  return sub_25A622780();
}

uint64_t sub_25A54D7EC()
{
  return sub_25A622A30();
}

uint64_t DynamicLoadablePreviewProduct.init(propertyListValue:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  v22 = &type metadata for DynamicLoadablePreviewProduct.Key;
  unint64_t v5 = sub_25A54E108();
  unint64_t v23 = v5;
  v21[0] = 0;
  sub_25A622710();
  if (v2)
  {
    uint64_t v6 = sub_25A6227C0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
    uint64_t v8 = v24;
    uint64_t v7 = v25;
    v22 = &type metadata for DynamicLoadablePreviewProduct.Key;
    unint64_t v23 = v5;
    v21[0] = 1;
    sub_25A622710();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
    v22 = &type metadata for DynamicLoadablePreviewProduct.Key;
    unint64_t v23 = v5;
    v21[0] = 2;
    sub_25A54E1AC();
    sub_25A622760();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
    v22 = &type metadata for DynamicLoadablePreviewProduct.Key;
    unint64_t v23 = v5;
    v21[0] = 3;
    sub_25A54E200();
    sub_25A622710();
    int v26 = v17;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
    char v9 = v29;
    v22 = &type metadata for DynamicLoadablePreviewProduct.Key;
    unint64_t v23 = v5;
    v21[0] = 4;
    sub_25A622710();
    char v16 = v9;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
    v22 = &type metadata for DynamicLoadablePreviewProduct.Key;
    unint64_t v23 = v5;
    v21[0] = 5;
    sub_25A54E254();
    sub_25A622710();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
    char v11 = v28;
    v22 = &type metadata for DynamicLoadablePreviewProduct.Key;
    unint64_t v23 = v5;
    v21[0] = 6;
    sub_25A622760();
    char v12 = v26 & 1;
    uint64_t v13 = sub_25A6227C0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(a1, v13);
    uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
    char v14 = v27;
    BOOL v15 = v27 == 2;
    *(void *)a2 = v8;
    *(void *)(a2 + 8) = v7;
    *(void *)(a2 + 16) = v19;
    *(void *)(a2 + 24) = v20;
    *(unsigned char *)(a2 + 32) = v12;
    *(unsigned char *)(a2 + 33) = v16;
    *(void *)(a2 + 40) = v17;
    *(void *)(a2 + 48) = v18;
    *(unsigned char *)(a2 + 56) = v11;
    *(unsigned char *)(a2 + 57) = (v15 | v14) & 1;
  }
  return result;
}

uint64_t sub_25A54DD24()
{
  return sub_25A622780();
}

uint64_t sub_25A54DD7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return DynamicLoadablePreviewProduct.init(propertyListValue:)(a1, a2);
}

_DWORD *sub_25A54DD94@<X0>(_DWORD *result@<X0>, _DWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

void sub_25A54DDA0(void *a1@<X8>)
{
  *a1 = 0;
}

_DWORD *sub_25A54DDA8@<X0>(_DWORD *result@<X0>, int *a2@<X8>)
{
  *a2 = *v2 & *result;
  return result;
}

_DWORD *sub_25A54DDBC(_DWORD *result)
{
  *v1 |= *result;
  return result;
}

_DWORD *sub_25A54DDD0(_DWORD *result)
{
  *v1 &= *result;
  return result;
}

BOOL sub_25A54DDE4(_DWORD *a1)
{
  return (*v1 & ~*a1) == 0;
}

BOOL sub_25A54DDF8(_DWORD *a1)
{
  return (*a1 & ~*v1) == 0;
}

void *sub_25A54DE0C@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *result;
  return result;
}

BOOL sub_25A54DE18(_DWORD *a1, _DWORD *a2)
{
  return *a1 == *a2;
}

uint64_t _s19PreviewsMessagingOS29DynamicLoadablePreviewProductV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  int v4 = *(unsigned __int8 *)(a1 + 32);
  uint64_t v5 = *(char *)(a1 + 33);
  uint64_t v6 = *(void *)(a1 + 40);
  int v28 = *(unsigned __int8 *)(a1 + 57);
  uint64_t v7 = *(void *)(a2 + 16);
  uint64_t v8 = *(void *)(a2 + 24);
  int v9 = *(unsigned __int8 *)(a2 + 32);
  uint64_t v10 = *(char *)(a2 + 33);
  uint64_t v11 = *(void *)(a2 + 40);
  uint64_t v31 = *(void *)(a2 + 48);
  uint64_t v32 = *(void *)(a1 + 48);
  int v29 = *(unsigned __int8 *)(a2 + 56);
  int v30 = *(unsigned __int8 *)(a1 + 56);
  int v27 = *(unsigned __int8 *)(a2 + 57);
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8)
    || (v12 = sub_25A6233B0(), uint64_t result = 0, (v12 & 1) != 0))
  {
    if (v2 == v7 && v3 == v8 || (v14 = sub_25A6233B0(), uint64_t result = 0, (v14 & 1) != 0))
    {
      unint64_t v15 = v4 ? 0xD000000000000012 : 0x6574756C6F736261;
      unint64_t v16 = v4 ? 0x800000025A634E10 : 0xE800000000000000;
      unint64_t v17 = v9 ? 0xD000000000000012 : 0x6574756C6F736261;
      unint64_t v18 = v9 ? 0x800000025A634E10 : 0xE800000000000000;
      if (v15 == v17 && v16 == v18)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        char v19 = sub_25A6233B0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t result = 0;
        if ((v19 & 1) == 0) {
          return result;
        }
      }
      if (*(void *)&aBundle_4[8 * v5] == *(void *)&aBundle_4[8 * v10]
        && qword_25A624858[v5] == qword_25A624858[v10])
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        char v20 = sub_25A6233B0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t result = 0;
        if ((v20 & 1) == 0) {
          return result;
        }
      }
      if (v6 == v11 && v32 == v31 || (v21 = sub_25A6233B0(), uint64_t result = 0, (v21 & 1) != 0))
      {
        if (v30) {
          uint64_t v22 = 0x74616964656D6D69;
        }
        else {
          uint64_t v22 = 0x746C7561666564;
        }
        if (v30) {
          unint64_t v23 = 0xE900000000000065;
        }
        else {
          unint64_t v23 = 0xE700000000000000;
        }
        if (v29) {
          uint64_t v24 = 0x74616964656D6D69;
        }
        else {
          uint64_t v24 = 0x746C7561666564;
        }
        if (v29) {
          unint64_t v25 = 0xE900000000000065;
        }
        else {
          unint64_t v25 = 0xE700000000000000;
        }
        if (v22 == v24 && v23 == v25)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        else
        {
          char v26 = sub_25A6233B0();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t result = 0;
          if ((v26 & 1) == 0) {
            return result;
          }
        }
        return v28 ^ v27 ^ 1u;
      }
    }
  }
  return result;
}

uint64_t sub_25A54E100()
{
  return sub_25A54D7EC();
}

unint64_t sub_25A54E108()
{
  unint64_t result = qword_26A4291E8;
  if (!qword_26A4291E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4291E8);
  }
  return result;
}

uint64_t __swift_destroy_boxed_opaque_existential_1(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

unint64_t sub_25A54E1AC()
{
  unint64_t result = qword_26A4291F0;
  if (!qword_26A4291F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4291F0);
  }
  return result;
}

unint64_t sub_25A54E200()
{
  unint64_t result = qword_26A4291F8;
  if (!qword_26A4291F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4291F8);
  }
  return result;
}

unint64_t sub_25A54E254()
{
  unint64_t result = qword_26A429200;
  if (!qword_26A429200)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A429200);
  }
  return result;
}

uint64_t sub_25A54E2A8()
{
  return MEMORY[0x263F60648];
}

unint64_t sub_25A54E2B8()
{
  unint64_t result = qword_26A429208;
  if (!qword_26A429208)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A429208);
  }
  return result;
}

unint64_t sub_25A54E310()
{
  unint64_t result = qword_26A429210;
  if (!qword_26A429210)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A429210);
  }
  return result;
}

unint64_t sub_25A54E368()
{
  unint64_t result = qword_26A429218;
  if (!qword_26A429218)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A429218);
  }
  return result;
}

unint64_t sub_25A54E3C0()
{
  unint64_t result = qword_26A429220;
  if (!qword_26A429220)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A429220);
  }
  return result;
}

uint64_t sub_25A54E414()
{
  return MEMORY[0x263F604F8];
}

uint64_t initializeBufferWithCopyOfBuffer for DynamicLoadablePreviewProduct(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t destroy for DynamicLoadablePreviewProduct()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for DynamicLoadablePreviewProduct(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(unsigned char *)(a1 + 57) = *(unsigned char *)(a2 + 57);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for DynamicLoadablePreviewProduct(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(unsigned char *)(a1 + 57) = *(unsigned char *)(a2 + 57);
  return a1;
}

__n128 __swift_memcpy58_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 42) = *(_OWORD *)(a2 + 42);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for DynamicLoadablePreviewProduct(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  uint64_t v6 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v6;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(unsigned char *)(a1 + 57) = *(unsigned char *)(a2 + 57);
  return a1;
}

uint64_t getEnumTagSinglePayload for DynamicLoadablePreviewProduct(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 58)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DynamicLoadablePreviewProduct(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 56) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 58) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 58) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DynamicLoadablePreviewProduct()
{
  return &type metadata for DynamicLoadablePreviewProduct;
}

unsigned char *__swift_memcpy1_1(unsigned char *result, unsigned char *a2)
{
  *__n128 result = *a2;
  return result;
}

ValueMetadata *type metadata accessor for DynamicLoadablePreviewProduct.Location()
{
  return &type metadata for DynamicLoadablePreviewProduct.Location;
}

uint64_t getEnumTagSinglePayload for DynamicLoadablePreviewProduct.LoadingStrategy(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for DynamicLoadablePreviewProduct.LoadingStrategy(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *__n128 result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25A54E880);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 2;
        break;
    }
  }
  return result;
}

uint64_t sub_25A54E8A8(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_25A54E8B0(unsigned char *result, char a2)
{
  *__n128 result = a2;
  return result;
}

ValueMetadata *type metadata accessor for DynamicLoadablePreviewProduct.LoadingStrategy()
{
  return &type metadata for DynamicLoadablePreviewProduct.LoadingStrategy;
}

uint64_t getEnumTagSinglePayload for BitmapDescription.ByteOrder(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s19PreviewsMessagingOS29DynamicLoadablePreviewProductV8LocationOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25A54EA24);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

unsigned char *sub_25A54EA4C(unsigned char *result, char a2)
{
  *__n128 result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for DynamicLoadablePreviewProduct.ExternalFunctionBinding()
{
  return &type metadata for DynamicLoadablePreviewProduct.ExternalFunctionBinding;
}

__n128 __swift_memcpy32_4(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for LayerHostPayload(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for LayerHostPayload(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 32) = v3;
  return result;
}

void type metadata accessor for audit_token_t(uint64_t a1)
{
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

void type metadata accessor for CGRect(uint64_t a1)
{
}

void type metadata accessor for OSLogType(uint64_t a1)
{
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for GridIndex(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for GridIndex(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 16) = v3;
  return result;
}

void type metadata accessor for CGSize(uint64_t a1)
{
}

uint64_t getEnumTagSinglePayload for DynamicLoadablePreviewProduct.Key(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFA) {
    goto LABEL_17;
  }
  if (a2 + 6 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 6) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 6;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 7;
  int v8 = v6 - 7;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for DynamicLoadablePreviewProduct.Key(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *__n128 result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25A54ECCCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DynamicLoadablePreviewProduct.Key()
{
  return &type metadata for DynamicLoadablePreviewProduct.Key;
}

unint64_t sub_25A54ED08()
{
  unint64_t result = qword_26A429248;
  if (!qword_26A429248)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A429248);
  }
  return result;
}

uint64_t sub_25A54ED5C()
{
  return sub_25A622DF0();
}

uint64_t sub_25A54ED78()
{
  return sub_25A622DF0();
}

uint64_t sub_25A54ED88()
{
  return sub_25A622DF0();
}

uint64_t sub_25A54ED94()
{
  return sub_25A622DF0();
}

uint64_t sub_25A54EDA8()
{
  return sub_25A622DF0();
}

uint64_t sub_25A54EDC4()
{
  return sub_25A622DF0();
}

uint64_t sub_25A54EDE0()
{
  return sub_25A622DF0();
}

uint64_t sub_25A54EE00()
{
  return sub_25A622DF0();
}

uint64_t sub_25A54EE20()
{
  return sub_25A622DF0();
}

uint64_t sub_25A54EE40()
{
  return sub_25A622DF0();
}

uint64_t sub_25A54EE60()
{
  return sub_25A622DF0();
}

uint64_t sub_25A54EE84()
{
  return sub_25A622DF0();
}

uint64_t sub_25A54EEA8()
{
  return sub_25A622DF0();
}

uint64_t sub_25A54EECC()
{
  return sub_25A622DF0();
}

uint64_t sub_25A54EEE0()
{
  return sub_25A622DF0();
}

uint64_t sub_25A54EEF8()
{
  return sub_25A622DF0();
}

uint64_t sub_25A54EF10()
{
  return sub_25A622DF0();
}

uint64_t sub_25A54EF24()
{
  return sub_25A622DF0();
}

uint64_t sub_25A54EF48()
{
  unint64_t v0 = sub_25A6232B0();
  swift_bridgeObjectRelease();
  if (v0 >= 7) {
    return 7;
  }
  else {
    return v0;
  }
}

unint64_t sub_25A54EF94()
{
  unint64_t result = qword_26A429250;
  if (!qword_26A429250)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A429250);
  }
  return result;
}

unint64_t sub_25A54EFE8()
{
  unint64_t result = qword_26A429258;
  if (!qword_26A429258)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A429258);
  }
  return result;
}

unint64_t sub_25A54F03C()
{
  unint64_t result = qword_26A429260;
  if (!qword_26A429260)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A429260);
  }
  return result;
}

void type metadata accessor for CGPoint(uint64_t a1)
{
}

void sub_25A54F0A4(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4) {
      atomic_store(ForeignTypeMetadata, a2);
    }
  }
}

ValueMetadata *type metadata accessor for HostToProcessExitService()
{
  return &type metadata for HostToProcessExitService;
}

ValueMetadata *type metadata accessor for ProcessExitServiceToHost()
{
  return &type metadata for ProcessExitServiceToHost;
}

uint64_t AsyncMessageStream.invalidationHandle.getter()
{
  return swift_retain();
}

uint64_t AsyncMessageStream.description.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_25A54F164@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v33 = a2;
  uint64_t v34 = a3;
  uint64_t v32 = a1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A429288);
  uint64_t v28 = *(void *)(v5 - 8);
  uint64_t v6 = v28;
  uint64_t v37 = *(void *)(v28 + 64);
  MEMORY[0x270FA5388](v5);
  v36 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for AsyncMessageStream(0);
  MEMORY[0x270FA5388](v8);
  uint64_t v35 = (uint64_t)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = type metadata accessor for AsyncMessageStream.Event(0);
  MEMORY[0x270FA5388](v30);
  uint64_t v11 = (uint64_t (**)())((char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A429280);
  uint64_t v12 = *(void *)(v31 - 8);
  MEMORY[0x270FA5388](v31);
  char v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25A622B90();
  swift_allocObject();
  *a4 = sub_25A622B80();
  uint64_t v29 = v8;
  unint64_t v15 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  uint64_t v16 = v32;
  v15((char *)a4 + *(int *)(v8 + 24), v32, v5);
  uint64_t v17 = v34;
  a4[1] = v33;
  a4[2] = v17;
  char v38 = 0;
  uint64_t v18 = sub_25A622C30();
  *(uint64_t *)((char *)a4 + *(int *)(v8 + 28)) = v18;
  *uint64_t v11 = sub_25A551E90;
  v11[1] = (uint64_t (*)())v18;
  swift_storeEnumTagMultiPayload();
  swift_retain_n();
  sub_25A623010();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v31);
  uint64_t v19 = (uint64_t)a4;
  uint64_t v20 = v35;
  sub_25A551E98(v19, v35);
  char v21 = v36;
  uint64_t v22 = v16;
  v15(v36, v16, v5);
  uint64_t v23 = v28;
  unint64_t v24 = (*(unsigned __int8 *)(v28 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
  uint64_t v25 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v23 + 32))(v25 + v24, v21, v5);
  sub_25A550B60(&qword_26A4292C0);
  sub_25A622AE0();
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v22, v5);
  return sub_25A552004(v20, type metadata accessor for AsyncMessageStream);
}

uint64_t sub_25A54F570()
{
  return swift_release();
}

uint64_t sub_25A54F5F0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AsyncMessageStream.Event(0);
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A429280);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_25A6228E0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16))(v4, a1, v9);
  swift_storeEnumTagMultiPayload();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A429288);
  sub_25A623010();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return sub_25A623020();
}

uint64_t AsyncMessageStream.wasInterrupted.getter()
{
  type metadata accessor for AsyncMessageStream(0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A429270);
  sub_25A54F874();
  sub_25A622B70();
  return v1;
}

uint64_t type metadata accessor for AsyncMessageStream(uint64_t a1)
{
  return sub_25A54FD94(a1, (uint64_t *)&unk_26A4292D0);
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

unint64_t sub_25A54F874()
{
  unint64_t result = qword_26A429278;
  if (!qword_26A429278)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A429270);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A429278);
  }
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

uint64_t sub_25A54F918(uint64_t (*a1)(uint64_t), uint64_t (*a2)(uint64_t))
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for AsyncMessageStream.Event(0);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (uint64_t (**)(uint64_t))((char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A429280);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for AsyncMessageStream(0);
  *uint64_t v8 = a1;
  v8[1] = a2;
  swift_storeEnumTagMultiPayload();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A429288);
  sub_25A623010();
  int v14 = (*(uint64_t (**)(char *, uint64_t))(v10 + 88))(v12, v9);
  LODWORD(v8) = *MEMORY[0x263F8F550];
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  if (v14 == v8)
  {
    uint64_t v16 = *(void *)(v3 + *(int *)(v13 + 28));
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A429270);
    sub_25A54F874();
    uint64_t result = sub_25A622B70();
    if (v17 == 1) {
      return a1(result);
    }
  }
  return result;
}

uint64_t sub_25A54FB40()
{
  return swift_retain();
}

uint64_t sub_25A54FB48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_25A550B60(&qword_26A4292C0);

  return MEMORY[0x270F55BD0](a1, a2, a3, v6);
}

uint64_t AsyncMessageStream.activate(receiver:interruptionHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for AsyncMessageStream.Event(0);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (uint64_t *)((char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A429280);
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  int v14 = (char *)&v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for AsyncMessageStream(0);
  *uint64_t v10 = a3;
  v10[1] = a4;
  swift_storeEnumTagMultiPayload();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A429288);
  sub_25A623010();
  unint64_t v15 = *(void (**)(char *, uint64_t))(v12 + 8);
  v15(v14, v11);
  *uint64_t v10 = a1;
  v10[1] = a2;
  swift_storeEnumTagMultiPayload();
  swift_retain();
  sub_25A623010();
  return ((uint64_t (*)(char *, uint64_t))v15)(v14, v11);
}

uint64_t type metadata accessor for AsyncMessageStream.Event(uint64_t a1)
{
  return sub_25A54FD94(a1, (uint64_t *)&unk_26A429370);
}

uint64_t sub_25A54FD94(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t AsyncMessageStream.sender.getter()
{
  *(void *)(v1 + 32) = v0;
  return MEMORY[0x270FA2498](sub_25A54FDEC, 0, 0);
}

uint64_t sub_25A54FDEC()
{
  uint64_t v1 = v0[4];
  uint64_t v2 = swift_task_alloc();
  v0[5] = v2;
  *(void *)(v2 + 16) = v1;
  uint64_t v3 = (void *)swift_task_alloc();
  v0[6] = v3;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A429298);
  *uint64_t v3 = v0;
  v3[1] = sub_25A54FEE8;
  return MEMORY[0x270FA2360](v0 + 2, 0, 0, 0x7265646E6573, 0xE600000000000000, sub_25A550374, v2, v4);
}

uint64_t sub_25A54FEE8()
{
  *(void *)(*(void *)v1 + 56) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_25A550094;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_25A550004;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_25A550004()
{
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = *(_OWORD *)(v0 + 16);
  uint64_t v2 = *(uint64_t (**)(uint64_t (*)(), uint64_t))(v0 + 8);
  return v2(sub_25A5503DC, v1);
}

uint64_t sub_25A550094()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_25A5500F8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AsyncMessageStream.Event(0);
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A429280);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)v17 - v10;
  type metadata accessor for AsyncMessageStream(0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A429368);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16))(v4, a1, v12);
  swift_storeEnumTagMultiPayload();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A429288);
  sub_25A623010();
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v9, v11, v5);
  int v13 = (*(uint64_t (**)(char *, uint64_t))(v6 + 88))(v9, v5);
  int v14 = *(void (**)(char *, uint64_t))(v6 + 8);
  if (v13 == *MEMORY[0x263F8F550])
  {
    v14(v9, v5);
    sub_25A552064();
    v17[1] = swift_allocError();
    sub_25A622F90();
    unint64_t v15 = v11;
  }
  else
  {
    v14(v11, v5);
    unint64_t v15 = v9;
  }
  return ((uint64_t (*)(char *, uint64_t))v14)(v15, v5);
}

uint64_t sub_25A550374(uint64_t a1)
{
  return sub_25A5500F8(a1);
}

uint64_t sub_25A55037C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  return a3();
}

uint64_t sub_25A5503A4()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_25A5503DC()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t AsyncMessageStream.legacyMessageKey.getter()
{
  return 0x64616F6C796170;
}

uint64_t sub_25A550430()
{
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  void *v2 = v1;
  v2[1] = sub_25A5504D8;
  v2[4] = v0;
  return MEMORY[0x270FA2498](sub_25A54FDEC, 0, 0);
}

uint64_t sub_25A5504D8(uint64_t a1, uint64_t a2)
{
  uint64_t v10 = *v3;
  uint64_t v6 = swift_task_dealloc();
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8);
  if (!v2)
  {
    uint64_t v6 = a1;
    uint64_t v7 = a2;
  }
  return v8(v6, v7);
}

uint64_t sub_25A5505E8()
{
  return AsyncMessageStream.legacyMessageKey.getter();
}

uint64_t sub_25A550600()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AsyncMessageStream.activate<A>(forReceiving:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for AsyncMessageStream(0);
  uint64_t v6 = sub_25A550B60(&qword_26A4292A0);

  return Transport.activate<A>(forReceivingMessages:)(a2, v5, a2, v6, a3);
}

__n128 sub_25A5506BC@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *(void *)(a1 + 24);
  *(void *)a2 = *(void *)a1;
  *(_OWORD *)(a2 + 8) = *(_OWORD *)(a1 + 8);
  *(void *)(a2 + 24) = v2;
  __n128 result = *(__n128 *)(a1 + 32);
  *(__n128 *)(a2 + 32) = result;
  return result;
}

uint64_t AsyncMessageStream.sender<A>(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 + 64) = a1;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v3 + 72) = v5;
  uint64_t v6 = type metadata accessor for AsyncMessageStream(0);
  uint64_t v7 = sub_25A550B60(&qword_26A4292A0);
  *uint64_t v5 = v3;
  v5[1] = sub_25A5507D8;
  return Transport.transportSender<A>(for:)(v3 + 16, a3, v6, a3, v7);
}

uint64_t sub_25A5507D8()
{
  *(void *)(*(void *)v1 + 80) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_25A550928;
  }
  else {
    uint64_t v2 = sub_25A5508EC;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_25A5508EC()
{
  uint64_t v1 = *(void *)(v0 + 64);
  uint64_t v2 = *(void *)(v0 + 40);
  long long v3 = *(_OWORD *)(v0 + 24);
  long long v4 = *(_OWORD *)(v0 + 48);
  *(void *)uint64_t v1 = *(void *)(v0 + 16);
  *(_OWORD *)(v1 + 8) = v3;
  *(void *)(v1 + 24) = v2;
  *(_OWORD *)(v1 + 32) = v4;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_25A550928()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t AsyncMessageStream.Sender<>.send(oneWay:)(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for TransportSender();
  uint64_t WitnessTable = swift_getWitnessTable();
  return TransportSenderProtocol<>.send(oneWay:)(a1, v5, WitnessTable, a3);
}

uint64_t AsyncMessageStream.Sender<>.send(message:)(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for TransportSender();
  uint64_t WitnessTable = swift_getWitnessTable();
  return TransportSenderProtocol<>.send(message:)(a1, v5, WitnessTable, a3);
}

uint64_t AsyncMessageStream.Sender<>.send<A>(message:expecting:)(char *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10 = type metadata accessor for TransportSender();
  uint64_t WitnessTable = swift_getWitnessTable();
  return TransportSenderProtocol<>.send<A>(message:expecting:)(a1, a4, v10, a4, WitnessTable, a5, a6);
}

uint64_t sub_25A550B2C()
{
  return sub_25A550B60(&qword_26A4292B0);
}

uint64_t sub_25A550B60(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for AsyncMessageStream(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_25A550BA4(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_25A550B60(&qword_26A4292C0);
  uint64_t result = sub_25A550B60(&qword_26A4292C8);
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for AsyncMessageStream(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v5 = *a2;
  *a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = (uint64_t *)(v5 + ((v4 + 16) & ~(unint64_t)v4));
  }
  else
  {
    uint64_t v8 = a2[2];
    a1[1] = a2[1];
    a1[2] = v8;
    uint64_t v9 = *(int *)(a3 + 24);
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    swift_retain();
    swift_bridgeObjectRetain();
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A429288);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 28)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 28));
  }
  swift_retain();
  return a1;
}

uint64_t destroy for AsyncMessageStream(uint64_t a1, uint64_t a2)
{
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A429288);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);

  return swift_release();
}

void *initializeWithCopy for AsyncMessageStream(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  a1[2] = a2[2];
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A429288);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  *(void *)((char *)a1 + *(int *)(a3 + 28)) = *(void *)((char *)a2 + *(int *)(a3 + 28));
  swift_retain();
  return a1;
}

void *assignWithCopy for AsyncMessageStream(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A429288);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  *(void *)((char *)a1 + *(int *)(a3 + 28)) = *(void *)((char *)a2 + *(int *)(a3 + 28));
  swift_retain();
  swift_release();
  return a1;
}

uint64_t initializeWithTake for AsyncMessageStream(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A429288);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  *(void *)(a1 + *(int *)(a3 + 28)) = *(void *)(a2 + *(int *)(a3 + 28));
  return a1;
}

void *assignWithTake for AsyncMessageStream(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_release();
  uint64_t v6 = a2[2];
  a1[1] = a2[1];
  a1[2] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A429288);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  *(void *)((char *)a1 + *(int *)(a3 + 28)) = *(void *)((char *)a2 + *(int *)(a3 + 28));
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for AsyncMessageStream(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25A5510A0);
}

uint64_t sub_25A5510A0(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A429288);
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for AsyncMessageStream(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25A551168);
}

void *sub_25A551168(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A429288);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 24);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_25A551214()
{
  sub_25A5512B8();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_25A5512B8()
{
  if (!qword_26A4292E0[0])
  {
    type metadata accessor for AsyncMessageStream.Event(255);
    unint64_t v0 = sub_25A623030();
    if (!v1) {
      atomic_store(v0, qword_26A4292E0);
    }
  }
}

uint64_t sub_25A551310(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 24);
}

uint64_t sub_25A551318()
{
  swift_bridgeObjectRelease();
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25A55135C(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  uint64_t v3 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v3;
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_25A5513C0(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_retain();
  swift_release();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy48_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t sub_25A55145C(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = v4;
  swift_release();
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for BuiltTargetDescription.PlatformVersion(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for BuiltTargetDescription.PlatformVersion(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t type metadata accessor for AsyncMessageStream.Sender()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t *sub_25A551568(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v6 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v6 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 2u:
        uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A429368);
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
        break;
      case 3u:
        uint64_t v8 = sub_25A6228E0();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
        break;
      default:
        uint64_t v9 = a2[1];
        *a1 = *a2;
        a1[1] = v9;
        swift_retain();
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_25A551700(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
    case 1:
      uint64_t result = swift_release();
      break;
    case 2:
      uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A429368);
      goto LABEL_7;
    case 3:
      uint64_t v3 = sub_25A6228E0();
LABEL_7:
      uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
      uint64_t result = v4(a1, v3);
      break;
    default:
      return result;
  }
  return result;
}

void *sub_25A5517E0(void *a1, void *a2)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 2u:
      uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A429368);
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
      break;
    case 3u:
      uint64_t v5 = sub_25A6228E0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v5 - 8) + 16))(a1, a2, v5);
      break;
    default:
      uint64_t v6 = a2[1];
      *a1 = *a2;
      a1[1] = v6;
      swift_retain();
      break;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_25A551928(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_25A552004((uint64_t)a1, type metadata accessor for AsyncMessageStream.Event);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 2u:
        uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A429368);
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v5 - 8) + 16))(a1, a2, v5);
        break;
      case 3u:
        uint64_t v6 = sub_25A6228E0();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
        break;
      default:
        uint64_t v4 = a2[1];
        *a1 = *a2;
        a1[1] = v4;
        swift_retain();
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_25A551A94(void *a1, const void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 3)
  {
    uint64_t v8 = sub_25A6228E0();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload == 2)
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A429368);
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void *sub_25A551BA8(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_25A552004((uint64_t)a1, type metadata accessor for AsyncMessageStream.Event);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 3)
    {
      uint64_t v8 = sub_25A6228E0();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload == 2)
    {
      uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A429368);
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for LazyPropertyList(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(void *)(a3 - 8) + 48))();
}

uint64_t storeEnumTagSinglePayload for LazyPropertyList(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(void *)(a4 - 8) + 56))();
}

uint64_t sub_25A551D34()
{
  return swift_storeEnumTagMultiPayload();
}

void sub_25A551D44()
{
  sub_25A551E18();
  if (v0 <= 0x3F)
  {
    sub_25A6228E0();
    if (v1 <= 0x3F) {
      swift_initEnumMetadataMultiPayload();
    }
  }
}

void sub_25A551E18()
{
  if (!qword_26A429380)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A429298);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A429388);
    unint64_t v0 = sub_25A622FB0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26A429380);
    }
  }
}

uint64_t sub_25A551E90()
{
  return sub_25A54F570();
}

uint64_t sub_25A551E98(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AsyncMessageStream(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_25A551EFC()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A429288);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x270FA0238](v0, v5, v6);
}

uint64_t sub_25A551F90(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A429288);

  return sub_25A54F5F0(a1);
}

uint64_t sub_25A552004(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_25A552064()
{
  unint64_t result = qword_26A429390;
  if (!qword_26A429390)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A429390);
  }
  return result;
}

uint64_t __swift_instantiateGenericMetadata()
{
  return swift_getGenericMetadata();
}

ValueMetadata *type metadata accessor for AsyncMessageStream.Invalidated()
{
  return &type metadata for AsyncMessageStream.Invalidated;
}

uint64_t static BuiltTargetDescription.writeBuiltTargetDescriptionDiagnosticsToSeparateFiles.getter()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4293B0);
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = &v6[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_26A4291C0 != -1) {
    swift_once();
  }
  uint64_t v4 = __swift_project_value_buffer(v0, (uint64_t)qword_26A429398);
  swift_beginAccess();
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v1 + 16))(v3, v4, v0);
  sub_25A6225A0();
  (*(void (**)(unsigned char *, uint64_t))(v1 + 8))(v3, v0);
  return v6[7];
}

uint64_t static BuiltTargetDescription.writeBuiltTargetDescriptionDiagnosticsToSeparateFiles.setter()
{
  if (qword_26A4291C0 != -1) {
    swift_once();
  }
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4293B0);
  __swift_project_value_buffer(v0, (uint64_t)qword_26A429398);
  swift_beginAccess();
  sub_25A6225B0();
  return swift_endAccess();
}

void (*static BuiltTargetDescription.writeBuiltTargetDescriptionDiagnosticsToSeparateFiles.modify(void *a1))(void *a1)
{
  uint64_t v2 = malloc(0x40uLL);
  *a1 = v2;
  if (qword_26A4291C0 != -1) {
    swift_once();
  }
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4293B0);
  __swift_project_value_buffer(v3, (uint64_t)qword_26A429398);
  swift_beginAccess();
  v2[7] = sub_25A622590();
  return sub_25A5523BC;
}

void sub_25A5523BC(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void, void))(*a1 + 56))(*a1, 0);
  swift_endAccess();

  free(v1);
}

uint64_t sub_25A552414()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4293B0);
  __swift_allocate_value_buffer(v0, qword_26A429398);
  __swift_project_value_buffer(v0, (uint64_t)qword_26A429398);
  return sub_25A6225D0();
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

void sub_25A5524F4(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t static BuiltTargetDescription.$writeBuiltTargetDescriptionDiagnosticsToSeparateFiles.getter()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4293B0);
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26A4291C0 != -1) {
    swift_once();
  }
  uint64_t v4 = __swift_project_value_buffer(v0, (uint64_t)qword_26A429398);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v4, v0);
  sub_25A6225C0();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t BuiltTargetDescription.installName.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t BuiltTargetDescription.installName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  void *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*BuiltTargetDescription.installName.modify())()
{
  return nullsub_1;
}

uint64_t BuiltTargetDescription.isExecutable.getter()
{
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t BuiltTargetDescription.isExecutable.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 16) = result;
  return result;
}

uint64_t (*BuiltTargetDescription.isExecutable.modify())()
{
  return nullsub_1;
}

uint64_t BuiltTargetDescription.buildableName.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t BuiltTargetDescription.buildableName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = a2;
  return result;
}

uint64_t (*BuiltTargetDescription.buildableName.modify())()
{
  return nullsub_1;
}

uint64_t BuiltTargetDescription.platformVersion.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1[5];
  uint64_t v3 = v1[6];
  uint64_t v4 = v1[7];
  uint64_t v5 = v1[8];
  uint64_t v6 = v1[9];
  uint64_t v7 = v1[10];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  return sub_25A5527AC(v2, v3);
}

uint64_t sub_25A5527AC(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

__n128 BuiltTargetDescription.platformVersion.setter(long long *a1)
{
  __n128 v5 = (__n128)a1[1];
  long long v6 = *a1;
  uint64_t v2 = *((void *)a1 + 4);
  uint64_t v3 = *((void *)a1 + 5);
  sub_25A55285C(*(void *)(v1 + 40), *(void *)(v1 + 48));
  *(_OWORD *)(v1 + 40) = v6;
  __n128 result = v5;
  *(__n128 *)(v1 + 56) = v5;
  *(void *)(v1 + 72) = v2;
  *(void *)(v1 + 80) = v3;
  return result;
}

uint64_t sub_25A55285C(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t (*BuiltTargetDescription.platformVersion.modify())()
{
  return nullsub_1;
}

uint64_t BuiltTargetDescription.objectFiles.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t BuiltTargetDescription.objectFiles.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 88) = a1;
  return result;
}

uint64_t (*BuiltTargetDescription.objectFiles.modify())()
{
  return nullsub_1;
}

uint64_t BuiltTargetDescription.staticArchives.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t BuiltTargetDescription.staticArchives.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 96) = a1;
  return result;
}

uint64_t (*BuiltTargetDescription.staticArchives.modify())()
{
  return nullsub_1;
}

uint64_t BuiltTargetDescription.rpaths.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t BuiltTargetDescription.rpaths.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 104) = a1;
  return result;
}

uint64_t (*BuiltTargetDescription.rpaths.modify())()
{
  return nullsub_1;
}

uint64_t BuiltTargetDescription.loadCommands.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t BuiltTargetDescription.loadCommands.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 112) = a1;
  return result;
}

uint64_t (*BuiltTargetDescription.loadCommands.modify())()
{
  return nullsub_1;
}

uint64_t BuiltTargetDescription.architectures.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t BuiltTargetDescription.architectures.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 120) = a1;
  return result;
}

uint64_t (*BuiltTargetDescription.architectures.modify())()
{
  return nullsub_1;
}

uint64_t BuiltTargetDescription.linkerFlags.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t BuiltTargetDescription.linkerFlags.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 128) = a1;
  return result;
}

uint64_t (*BuiltTargetDescription.linkerFlags.modify())()
{
  return nullsub_1;
}

uint64_t BuiltTargetDescription.opaqueTypeErasureEnabled.getter()
{
  return *(unsigned __int8 *)(v0 + 136);
}

uint64_t BuiltTargetDescription.opaqueTypeErasureEnabled.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 136) = result;
  return result;
}

uint64_t (*BuiltTargetDescription.opaqueTypeErasureEnabled.modify())()
{
  return nullsub_1;
}

uint64_t BuiltTargetDescription.output.getter()
{
  uint64_t v1 = *(void *)(v0 + 144);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t BuiltTargetDescription.output.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 144) = a1;
  *(void *)(v2 + 152) = a2;
  return result;
}

uint64_t (*BuiltTargetDescription.output.modify())()
{
  return nullsub_1;
}

uint64_t BuiltTargetDescription.diagnosticInfo.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t BuiltTargetDescription.diagnosticInfo.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 160) = a1;
  return result;
}

uint64_t (*BuiltTargetDescription.diagnosticInfo.modify())()
{
  return nullsub_1;
}

__n128 BuiltTargetDescription.init(installName:isExecutable:buildableName:platformVersion:objectFiles:staticArchives:rpaths:loadCommands:architectures:linkerFlags:opaqueTypeErasureEnabled:output:diagnosticInfo:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _OWORD *a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, long long a10, uint64_t a11, uint64_t a12, char a13, __n128 a14, uint64_t a15)
{
  __n128 result = a14;
  long long v16 = a6[1];
  *(_OWORD *)(a9 + 40) = *a6;
  *(void *)a9 = a1;
  *(void *)(a9 + 8) = a2;
  *(unsigned char *)(a9 + 16) = a3;
  *(void *)(a9 + 24) = a4;
  *(void *)(a9 + 32) = a5;
  *(_OWORD *)(a9 + 56) = v16;
  *(_OWORD *)(a9 + 72) = a6[2];
  *(void *)(a9 + 88) = a7;
  *(void *)(a9 + 96) = a8;
  *(_OWORD *)(a9 + 104) = a10;
  *(void *)(a9 + 120) = a11;
  *(void *)(a9 + 128) = a12;
  *(unsigned char *)(a9 + 136) = a13;
  *(__n128 *)(a9 + 144) = a14;
  *(void *)(a9 + 160) = a15;
  return result;
}

__n128 BuiltTargetDescription.remappedTransferredPathsForDestination(_:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  long long v5 = v2[8];
  __n128 v6 = (__n128)v2[9];
  long long v7 = v2[6];
  *(_OWORD *)&v31[16] = v2[7];
  *(_OWORD *)&v31[32] = v5;
  __n128 v32 = v6;
  uint64_t v33 = *((void *)v2 + 20);
  long long v8 = v2[5];
  *(_OWORD *)&v29[48] = v2[4];
  long long v30 = v8;
  *(_OWORD *)uint64_t v31 = v7;
  long long v9 = v2[1];
  long long v28 = *v2;
  *(_OWORD *)uint64_t v29 = v9;
  long long v10 = v2[3];
  *(_OWORD *)&v29[16] = v2[2];
  *(_OWORD *)&v29[32] = v10;
  uint64_t v11 = *((void *)&v30 + 1);
  uint64_t v12 = v7;
  uint64_t v27 = v33;
  __n128 v26 = v32;
  char v25 = v31[40];
  long long v23 = *(_OWORD *)&v29[40];
  long long v24 = *(_OWORD *)&v29[24];
  uint64_t v13 = v30;
  uint64_t v22 = *(void *)&v29[56];
  long long v21 = *(_OWORD *)&v29[8];
  char v14 = v9;
  long long v15 = v28;
  swift_bridgeObjectRetain();
  long long v19 = *(_OWORD *)&v31[24];
  long long v20 = *(_OWORD *)&v31[8];
  sub_25A55C394((uint64_t)&v28);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v16 = sub_25A55C21C(v11, a1);
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  uint64_t v17 = sub_25A55C484(v12, a1);
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  *(_OWORD *)a2 = v15;
  *(unsigned char *)(a2 + 16) = v14;
  *(_OWORD *)(a2 + 24) = v21;
  *(_OWORD *)(a2 + 40) = v24;
  *(_OWORD *)(a2 + 56) = v23;
  *(void *)(a2 + 72) = v22;
  *(void *)(a2 + 80) = v13;
  *(void *)(a2 + 88) = v16;
  *(void *)(a2 + 96) = v17;
  *(_OWORD *)(a2 + 104) = v20;
  *(_OWORD *)(a2 + 120) = v19;
  *(unsigned char *)(a2 + 136) = v25;
  __n128 result = v26;
  *(__n128 *)(a2 + 144) = v26;
  *(void *)(a2 + 160) = v27;
  return result;
}

uint64_t BuiltTargetDescription.mergeChild(_:)(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4293B8);
  MEMORY[0x270FA5388](v2);
  v46 = (char *)v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4293C0);
  MEMORY[0x270FA5388](v44);
  v43 = (char *)v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4293C8);
  MEMORY[0x270FA5388](v41);
  v40 = (char *)v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4293D0);
  MEMORY[0x270FA5388](v37);
  v36[3] = (char *)v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36[2] = *(void *)(a1 + 88);
  uint64_t v7 = *(void *)(a1 + 96);
  uint64_t v42 = *(void *)(a1 + 104);
  uint64_t v8 = *(void *)(a1 + 112);
  uint64_t v38 = v7;
  uint64_t v39 = v8;
  int v45 = *(unsigned __int8 *)(a1 + 136);
  uint64_t v9 = *(void *)(a1 + 152);
  if (!v9) {
    goto LABEL_32;
  }
  v36[1] = v2;
  uint64_t v10 = *(void *)(a1 + 144);
  uint64_t v11 = *(void **)(v47 + 88);
  uint64_t v12 = v11[2];
  if (v12)
  {
    uint64_t v13 = -v12;
    uint64_t v14 = (48 * v12) | 8;
    while (v12 <= v11[2])
    {
      BOOL v17 = *(void *)((char *)v11 + v14 - 8) == v10 && v9 == *(void *)((char *)v11 + v14);
      if (v17 || (sub_25A6233B0() & 1) != 0)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v11 = sub_25A5594B8(v11);
        }
        uint64_t v18 = v11[2];
        if (v12 > v18) {
          goto LABEL_34;
        }
        if (v13 + v18 < 0) {
          goto LABEL_37;
        }
        uint64_t v15 = v18 - 1;
        memmove((char *)v11 + v14 - 24, (char *)v11 + v14 + 24, 48 * (v13 + v18));
        v11[2] = v15;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        *(void *)(v47 + 88) = v11;
      }
      v14 -= 48;
      --v12;
      BOOL v16 = __CFADD__(v13++, 1);
      if (v16) {
        goto LABEL_17;
      }
    }
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
LABEL_17:
  long long v19 = *(void **)(v47 + 96);
  uint64_t v20 = v19[2];
  if (!v20)
  {
LABEL_32:
    uint64_t v26 = v47;
    uint64_t v48 = *(void *)(v47 + 88);
    swift_bridgeObjectRetain();
    uint64_t v27 = swift_bridgeObjectRetain();
    sub_25A5550C4(v27, &qword_26A4295B0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A4293D8);
    sub_25A55C5D8();
    sub_25A55DAA4(&qword_26A4293E8, &qword_26A4293D8);
    sub_25A6223A0();
    sub_25A55DAA4(&qword_26A4293F0, &qword_26A4293D0);
    uint64_t v28 = sub_25A622E20();
    swift_bridgeObjectRelease();
    *(void *)(v26 + 88) = v28;
    uint64_t v48 = *(void *)(v26 + 96);
    swift_bridgeObjectRetain();
    uint64_t v29 = swift_bridgeObjectRetain();
    sub_25A554C30(v29);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A4293F8);
    sub_25A55C62C();
    sub_25A55DAA4(&qword_26A429408, &qword_26A4293F8);
    sub_25A6223A0();
    sub_25A55DAA4(&qword_26A429410, &qword_26A4293C8);
    uint64_t v30 = sub_25A622E20();
    swift_bridgeObjectRelease();
    *(void *)(v26 + 96) = v30;
    uint64_t v48 = *(void *)(v26 + 112);
    swift_bridgeObjectRetain();
    uint64_t v31 = swift_bridgeObjectRetain();
    sub_25A554AD4(v31);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A429418);
    sub_25A55C680();
    sub_25A55DAA4(&qword_26A429428, &qword_26A429418);
    sub_25A6223A0();
    sub_25A55DAA4(&qword_26A429430, &qword_26A4293C0);
    uint64_t v32 = sub_25A622E20();
    swift_bridgeObjectRelease();
    *(void *)(v26 + 112) = v32;
    uint64_t v48 = *(void *)(v26 + 104);
    swift_bridgeObjectRetain();
    uint64_t v33 = swift_bridgeObjectRetain();
    sub_25A554980(v33);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A429438);
    sub_25A55DAA4(&qword_26A429440, &qword_26A429438);
    sub_25A6223A0();
    sub_25A55DAA4(&qword_26A429448, &qword_26A4293B8);
    uint64_t v34 = sub_25A622E20();
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)(v26 + 104) = v34;
    *(unsigned char *)(v26 + 136) &= v45;
    return result;
  }
  uint64_t v21 = 32 * v20 + 32;
  uint64_t v22 = -v20;
  while (v20 <= v19[2])
  {
    BOOL v24 = *(void *)((char *)v19 + v21 - 16) == v10 && v9 == *(void *)((char *)v19 + v21 - 8);
    if (v24 || (sub_25A6233B0() & 1) != 0)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        long long v19 = sub_25A5594A4(v19);
      }
      uint64_t v25 = v19[2];
      if (v20 > v25) {
        goto LABEL_36;
      }
      if (v22 + v25 < 0) {
        goto LABEL_37;
      }
      uint64_t v23 = v25 - 1;
      memmove((char *)v19 + v21 - 32, (char *)v19 + v21, 32 * (v22 + v25));
      v19[2] = v23;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *(void *)(v47 + 96) = v19;
    }
    v21 -= 32;
    --v20;
    BOOL v16 = __CFADD__(v22++, 1);
    if (v16) {
      goto LABEL_32;
    }
  }
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  uint64_t result = sub_25A6232A0();
  __break(1u);
  return result;
}

unint64_t sub_25A553488(char a1)
{
  unint64_t result = 0xD000000000000018;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x7475636578457369;
      break;
    case 2:
      unint64_t result = 0x6C6261646C697562;
      break;
    case 3:
      unint64_t result = 0x6D726F6674616C70;
      break;
    case 4:
      unint64_t result = 0x69467463656A626FLL;
      break;
    case 5:
      unint64_t result = 0x7241636974617473;
      break;
    case 6:
      unint64_t result = 0x736874617072;
      break;
    case 7:
      unint64_t result = 0x6D6D6F4364616F6CLL;
      break;
    case 8:
      unint64_t result = 0x6365746968637261;
      break;
    case 9:
      unint64_t result = 0x6C4672656B6E696CLL;
      break;
    case 10:
      return result;
    case 11:
      unint64_t result = 0x74757074756FLL;
      break;
    case 12:
      unint64_t result = 0x74736F6E67616964;
      break;
    default:
      unint64_t result = 0x4E6C6C6174736E69;
      break;
  }
  return result;
}

uint64_t sub_25A55367C(char *a1, char *a2)
{
  char v2 = *a2;
  unint64_t v3 = sub_25A553488(*a1);
  uint64_t v5 = v4;
  if (v3 == sub_25A553488(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_25A6233B0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_25A553708()
{
  char v1 = *v0;
  sub_25A623450();
  sub_25A553488(v1);
  sub_25A622DF0();
  swift_bridgeObjectRelease();
  return sub_25A6234A0();
}

uint64_t sub_25A55376C()
{
  sub_25A553488(*v0);
  sub_25A622DF0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25A5537C0()
{
  char v1 = *v0;
  sub_25A623450();
  sub_25A553488(v1);
  sub_25A622DF0();
  swift_bridgeObjectRelease();
  return sub_25A6234A0();
}

uint64_t sub_25A553820@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_25A55CDF8();
  *a1 = result;
  return result;
}

unint64_t sub_25A553850@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_25A553488(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_25A55387C()
{
  return sub_25A553488(*v0);
}

uint64_t BuiltTargetDescription.propertyListValue.getter()
{
  long long v1 = v0[9];
  long long v21 = v0[8];
  long long v22 = v1;
  uint64_t v23 = *((void *)v0 + 20);
  long long v2 = v0[5];
  void v17[2] = v0[4];
  long long v18 = v2;
  long long v3 = v0[7];
  long long v19 = v0[6];
  long long v20 = v3;
  long long v4 = v0[1];
  long long v15 = *v0;
  long long v16 = v4;
  long long v5 = v0[3];
  v17[0] = v0[2];
  v17[1] = v5;
  unint64_t v6 = sub_25A55C6E8();
  sub_25A6227A0();
  sub_25A55C73C((uint64_t)&v16 + 8, (uint64_t)v26, &qword_26A429458);
  sub_25A55C73C((uint64_t)v26, (uint64_t)v27, &qword_26A429458);
  if (v28)
  {
    sub_25A55C73C((uint64_t)v26, (uint64_t)v25, &qword_26A429458);
    uint64_t v31 = &type metadata for BuiltTargetDescription.Key;
    unint64_t v32 = v6;
    v29[0] = 2;
    sub_25A622700();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
  }
  sub_25A55C73C((uint64_t)v17 + 8, (uint64_t)v25, &qword_26A429460);
  sub_25A55C73C((uint64_t)v25, (uint64_t)v29, &qword_26A429460);
  if (v30)
  {
    sub_25A55C73C((uint64_t)v25, (uint64_t)v11, &qword_26A429460);
    v10[3] = &type metadata for BuiltTargetDescription.Key;
    v10[4] = v6;
    LOBYTE(v10[0]) = 3;
    sub_25A55C8F0();
    sub_25A622700();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
  }
  if (*(void *)(*((void *)&v18 + 1) + 16))
  {
    v10[0] = *((void *)&v18 + 1);
    uint64_t v12 = &type metadata for BuiltTargetDescription.Key;
    unint64_t v13 = v6;
    LOBYTE(v11[0]) = 4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A4293D8);
    sub_25A55C944(&qword_26A429468, &qword_26A4293D8, (void (*)(void))sub_25A55C7A0);
    sub_25A622700();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
  }
  if (*(void *)(v19 + 16))
  {
    v10[0] = v19;
    uint64_t v12 = &type metadata for BuiltTargetDescription.Key;
    unint64_t v13 = v6;
    LOBYTE(v11[0]) = 5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A4293F8);
    sub_25A55C944(&qword_26A429478, &qword_26A4293F8, (void (*)(void))sub_25A55C7F4);
    sub_25A622700();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
  }
  if (*(void *)(*((void *)&v19 + 1) + 16))
  {
    v10[0] = *((void *)&v19 + 1);
    uint64_t v12 = &type metadata for BuiltTargetDescription.Key;
    unint64_t v13 = v6;
    LOBYTE(v11[0]) = 6;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A429438);
    sub_25A55CA1C((unint64_t *)&qword_26A429488, &qword_26A429438);
    sub_25A622700();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
  }
  if (*(void *)(v20 + 16))
  {
    v10[0] = v20;
    uint64_t v12 = &type metadata for BuiltTargetDescription.Key;
    unint64_t v13 = v6;
    LOBYTE(v11[0]) = 7;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A429418);
    sub_25A55C944(&qword_26A429490, &qword_26A429418, (void (*)(void))sub_25A55C848);
    sub_25A622700();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
  }
  if (*(void *)(*((void *)&v20 + 1) + 16))
  {
    v10[0] = *((void *)&v20 + 1);
    uint64_t v12 = &type metadata for BuiltTargetDescription.Key;
    unint64_t v13 = v6;
    LOBYTE(v11[0]) = 8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A429438);
    sub_25A55CA1C((unint64_t *)&qword_26A429488, &qword_26A429438);
    sub_25A622700();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
  }
  uint64_t v7 = v21;
  if (*(void *)(v21 + 16))
  {
    swift_bridgeObjectRetain_n();
    uint64_t v8 = sub_25A559618(v7);
    swift_bridgeObjectRelease();
    v11[0] = v8;
    sub_25A559594(v11, sub_25A5FD538, sub_25A55A05C);
    swift_bridgeObjectRelease();
    v10[0] = v11[0];
    uint64_t v12 = &type metadata for BuiltTargetDescription.Key;
    unint64_t v13 = v6;
    LOBYTE(v11[0]) = 9;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A4294A0);
    sub_25A55C944(&qword_26A4294A8, &qword_26A4294A0, (void (*)(void))sub_25A55C89C);
    sub_25A622700();
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
  }
  sub_25A55C73C((uint64_t)&v22, (uint64_t)v24, &qword_26A429458);
  uint64_t result = sub_25A55C73C((uint64_t)v24, (uint64_t)v10, &qword_26A429458);
  if (v10[1])
  {
    sub_25A55C73C((uint64_t)v24, (uint64_t)v14, &qword_26A429458);
    uint64_t v12 = &type metadata for BuiltTargetDescription.Key;
    unint64_t v13 = v6;
    LOBYTE(v11[0]) = 11;
    sub_25A622700();
    uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
  }
  if (*(void *)(v23 + 16))
  {
    v14[0] = v23;
    uint64_t v12 = &type metadata for BuiltTargetDescription.Key;
    unint64_t v13 = v6;
    LOBYTE(v11[0]) = 12;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A429438);
    sub_25A55CA1C((unint64_t *)&qword_26A429488, &qword_26A429438);
    sub_25A622700();
    uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
  }
  if ((BYTE8(v21) & 1) == 0)
  {
    LOBYTE(v14[0]) = 0;
    uint64_t v12 = &type metadata for BuiltTargetDescription.Key;
    unint64_t v13 = v6;
    LOBYTE(v11[0]) = 10;
    sub_25A622700();
    uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
  }
  if (v16 == 1)
  {
    LOBYTE(v14[0]) = v16;
    uint64_t v12 = &type metadata for BuiltTargetDescription.Key;
    unint64_t v13 = v6;
    LOBYTE(v11[0]) = v16;
    sub_25A622700();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
  }
  return result;
}

uint64_t BuiltTargetDescription.init(propertyListValue:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v44 = &type metadata for BuiltTargetDescription.Key;
  unint64_t v5 = sub_25A55C6E8();
  unint64_t v45 = v5;
  LOBYTE(v43[0]) = 0;
  sub_25A622710();
  if (v2)
  {
    uint64_t v6 = sub_25A6227C0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v43);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v43);
    uint64_t v7 = v49;
    uint64_t v8 = v50;
    uint64_t v44 = &type metadata for BuiltTargetDescription.Key;
    unint64_t v45 = v5;
    LOBYTE(v43[0]) = 1;
    sub_25A622760();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v43);
    uint64_t v44 = &type metadata for BuiltTargetDescription.Key;
    unint64_t v45 = v5;
    LOBYTE(v43[0]) = 2;
    sub_25A622760();
    int v52 = v40[0];
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v43);
    uint64_t v10 = v47;
    uint64_t v11 = v48;
    uint64_t v41 = &type metadata for BuiltTargetDescription.Key;
    unint64_t v42 = v5;
    v40[0] = 3;
    sub_25A55C8F0();
    sub_25A622760();
    uint64_t v27 = v10;
    uint64_t v28 = v11;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v40);
    uint64_t v29 = v43[0];
    uint64_t v30 = v43[1];
    uint64_t v31 = v43[2];
    unint64_t v32 = v44;
    unint64_t v33 = v45;
    uint64_t v34 = v46;
    uint64_t v41 = &type metadata for BuiltTargetDescription.Key;
    unint64_t v42 = v5;
    v40[0] = 4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A4293D8);
    sub_25A55C944(&qword_26A429468, &qword_26A4293D8, (void (*)(void))sub_25A55C7A0);
    sub_25A622710();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v40);
    uint64_t v41 = &type metadata for BuiltTargetDescription.Key;
    unint64_t v42 = v5;
    v40[0] = 5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A4293F8);
    sub_25A55C944(&qword_26A429478, &qword_26A4293F8, (void (*)(void))sub_25A55C7F4);
    sub_25A622760();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v40);
    uint64_t v12 = v37;
    if (!v37) {
      uint64_t v12 = MEMORY[0x263F8EE78];
    }
    uint64_t v26 = v12;
    uint64_t v41 = &type metadata for BuiltTargetDescription.Key;
    unint64_t v42 = v5;
    v40[0] = 6;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A429438);
    sub_25A55CA1C((unint64_t *)&qword_26A429488, &qword_26A429438);
    sub_25A622760();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v40);
    uint64_t v13 = v37;
    if (!v37) {
      uint64_t v13 = MEMORY[0x263F8EE78];
    }
    uint64_t v25 = v13;
    uint64_t v41 = &type metadata for BuiltTargetDescription.Key;
    unint64_t v42 = v5;
    v40[0] = 7;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A429418);
    sub_25A55C944(&qword_26A429490, &qword_26A429418, (void (*)(void))sub_25A55C848);
    sub_25A622760();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v40);
    uint64_t v14 = MEMORY[0x263F8EE78];
    if (v37) {
      uint64_t v15 = v37;
    }
    else {
      uint64_t v15 = MEMORY[0x263F8EE78];
    }
    uint64_t v41 = &type metadata for BuiltTargetDescription.Key;
    unint64_t v42 = v5;
    v40[0] = 8;
    sub_25A622760();
    uint64_t v23 = v15;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v40);
    uint64_t v16 = v37;
    if (!v37) {
      uint64_t v16 = v14;
    }
    uint64_t v24 = v16;
    uint64_t v41 = &type metadata for BuiltTargetDescription.Key;
    unint64_t v42 = v5;
    v40[0] = 9;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A4294C0);
    sub_25A55C944(&qword_26A4294C8, &qword_26A4294C0, (void (*)(void))sub_25A55C89C);
    sub_25A622760();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v40);
    uint64_t v17 = v37;
    if (!v37) {
      uint64_t v17 = MEMORY[0x263F8EE88];
    }
    uint64_t v22 = v17;
    uint64_t v41 = &type metadata for BuiltTargetDescription.Key;
    unint64_t v42 = v5;
    v40[0] = 10;
    sub_25A622760();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v40);
    BOOL v51 = v37 == 2;
    uint64_t v41 = &type metadata for BuiltTargetDescription.Key;
    unint64_t v42 = v5;
    v40[0] = 11;
    sub_25A622760();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v40);
    uint64_t v41 = &type metadata for BuiltTargetDescription.Key;
    unint64_t v42 = v5;
    v40[0] = 12;
    sub_25A622760();
    char v18 = v52 & 1;
    char v19 = v51 | v37;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v40);
    if (v36) {
      uint64_t v20 = v36;
    }
    else {
      uint64_t v20 = MEMORY[0x263F8EE78];
    }
    uint64_t v21 = sub_25A6227C0();
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v21 - 8) + 8))(a1, v21);
    *(void *)a2 = v7;
    *(void *)(a2 + 8) = v8;
    *(unsigned char *)(a2 + 16) = v18;
    *(_DWORD *)(a2 + 17) = *(_DWORD *)v40;
    *(_DWORD *)(a2 + 20) = *(_DWORD *)&v40[3];
    *(void *)(a2 + 24) = v27;
    *(void *)(a2 + 32) = v28;
    *(void *)(a2 + 40) = v29;
    *(void *)(a2 + 48) = v30;
    *(void *)(a2 + 56) = v31;
    *(void *)(a2 + 64) = v32;
    *(void *)(a2 + 72) = v33;
    *(void *)(a2 + 80) = v34;
    *(void *)(a2 + 88) = v39;
    *(void *)(a2 + 96) = v26;
    *(void *)(a2 + 104) = v25;
    *(void *)(a2 + 112) = v23;
    *(void *)(a2 + 120) = v24;
    *(void *)(a2 + 128) = v22;
    *(unsigned char *)(a2 + 136) = v19 & 1;
    *(_DWORD *)(a2 + 140) = *(_DWORD *)&v35[3];
    *(_DWORD *)(a2 + 137) = *(_DWORD *)v35;
    *(void *)(a2 + 144) = v37;
    *(void *)(a2 + 152) = v38;
    *(void *)(a2 + 160) = v20;
  }
  return result;
}

uint64_t sub_25A5547D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return BuiltTargetDescription.init(propertyListValue:)(a1, a2);
}

void *BuiltTargetDescription.buildProductPathsForDiagnostics.getter()
{
  uint64_t v3 = *(void *)(v1[12] + 16);
  uint64_t v4 = *(void *)(v1[11] + 16);
  BOOL v5 = __OFADD__(v3, v4);
  uint64_t v6 = v3 + v4;
  if (v5)
  {
    __break(1u);
LABEL_9:
    long long v1 = sub_25A558EE0(0, v1[2] + 1, 1, v1);
    goto LABEL_4;
  }
  uint64_t v2 = v1[18];
  uint64_t v0 = v1[19];
  uint64_t v13 = sub_25A558EE0(0, v6 & ~(v6 >> 63), 0, MEMORY[0x263F8EE78]);
  uint64_t v7 = swift_bridgeObjectRetain();
  sub_25A554D84(v7, (uint64_t)sub_25A554974, 0, (uint64_t)sub_25A55B7F4, sub_25A55B9FC);
  uint64_t v8 = swift_bridgeObjectRetain();
  sub_25A554D84(v8, (uint64_t)sub_25A554974, 0, (uint64_t)sub_25A55B6B0, sub_25A55B924);
  long long v1 = v13;
  if (!v0) {
    return v1;
  }
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    goto LABEL_9;
  }
LABEL_4:
  unint64_t v10 = v1[2];
  unint64_t v9 = v1[3];
  if (v10 >= v9 >> 1) {
    long long v1 = sub_25A558EE0((void *)(v9 > 1), v10 + 1, 1, v1);
  }
  v1[2] = v10 + 1;
  uint64_t v11 = &v1[2 * v10];
  v11[4] = v2;
  v11[5] = v0;
  return v1;
}

uint64_t sub_25A554974@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  *a2 = v2;
  a2[1] = v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_25A554980(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  uint64_t v3 = sub_25A558EE0(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v9 = (unint64_t)&v3[2 * v8 + 4];
  if (a1 + 32 < v9 + 16 * v2 && v9 < a1 + 32 + 16 * v2) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v11 = v3[2];
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_25A6232A0();
  __break(1u);
  return result;
}

uint64_t sub_25A554AD4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  uint64_t v3 = sub_25A558FF0(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v9 = (unint64_t)&v3[3 * v8 + 4];
  if (a1 + 32 < v9 + 24 * v2 && v9 < a1 + 32 + 24 * v2) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v11 = v3[2];
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_25A6232A0();
  __break(1u);
  return result;
}

uint64_t sub_25A554C30(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  uint64_t v3 = sub_25A559114(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v9 = (unint64_t)&v3[4 * v8 + 4];
  if (a1 + 32 < v9 + 32 * v2 && v9 < a1 + 32 + 32 * v2) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v11 = v3[2];
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_25A6232A0();
  __break(1u);
  return result;
}

uint64_t sub_25A554D84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v7 = v5;
  uint64_t v8 = *(void *)(a1 + 16);
  unint64_t v9 = (void *)*v5;
  int64_t v10 = *(void *)(*v5 + 16);
  int64_t v11 = v10 + v8;
  if (__OFADD__(v10, v8))
  {
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v6 = a5;
  isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || (int64_t v17 = v9[3] >> 1, v17 < v11))
  {
    if (v10 <= v11) {
      int64_t v18 = v10 + v8;
    }
    else {
      int64_t v18 = v10;
    }
    unint64_t v9 = sub_25A558EE0(isUniquelyReferenced_nonNull_native, v18, 1, v9);
    int64_t v17 = v9[3] >> 1;
  }
  uint64_t v19 = v9[2];
  uint64_t v20 = v17 - v19;
  uint64_t v21 = ((uint64_t (*)(uint64_t *, void *, int64_t, uint64_t, uint64_t, uint64_t))a4)(v34, &v9[2 * v19 + 4], v17 - v19, a1, a2, a3);
  if (v21 < v8) {
    goto LABEL_15;
  }
  if (v21)
  {
    uint64_t v22 = v9[2];
    BOOL v23 = __OFADD__(v22, v21);
    uint64_t v24 = v22 + v21;
    if (v23)
    {
      __break(1u);
      goto LABEL_28;
    }
    v9[2] = v24;
  }
  if (v21 == v20)
  {
LABEL_16:
    a4 = v9[2];
    uint64_t v26 = v6();
    if (!v27) {
      goto LABEL_13;
    }
    while (1)
    {
      unint64_t v28 = v9[3];
      uint64_t v29 = (uint64_t (*)(void, void, void, void, void, void))(v28 >> 1);
      if ((uint64_t)(v28 >> 1) < a4 + 1)
      {
        uint64_t v31 = v26;
        uint64_t v32 = v27;
        unint64_t v33 = sub_25A558EE0((void *)(v28 > 1), a4 + 1, 1, v9);
        uint64_t v27 = v32;
        unint64_t v9 = v33;
        uint64_t v26 = v31;
        uint64_t v29 = (uint64_t (*)(void, void, void, void, void, void))(v9[3] >> 1);
        if (a4 < (uint64_t)v29)
        {
LABEL_21:
          uint64_t v30 = &v9[2 * a4 + 5];
          while (1)
          {
            *(v30 - 1) = v26;
            *uint64_t v30 = v27;
            ++a4;
            uint64_t v26 = v6();
            if (!v27) {
              break;
            }
            v30 += 2;
            if (v29 == (uint64_t (*)(void, void, void, void, void, void))a4)
            {
              a4 = (uint64_t)v29;
              goto LABEL_18;
            }
          }
LABEL_28:
          v9[2] = a4;
          break;
        }
      }
      else if (a4 < (uint64_t)v29)
      {
        goto LABEL_21;
      }
LABEL_18:
      v9[2] = a4;
    }
  }
LABEL_13:
  swift_bridgeObjectRelease();
  uint64_t result = swift_release();
  *uint64_t v7 = v9;
  return result;
}

uint64_t sub_25A554F58(uint64_t a1)
{
  unint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    unint64_t v8 = *(void *)(a1 + 16);
    if (v8) {
      goto LABEL_5;
    }
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
  if (v4 <= v5) {
    int64_t v15 = v4 + v2;
  }
  else {
    int64_t v15 = v4;
  }
  uint64_t v3 = sub_25A559224(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  unint64_t v8 = *(void *)(a1 + 16);
  if (!v8) {
    goto LABEL_18;
  }
LABEL_5:
  uint64_t v9 = v3[2];
  if ((v3[3] >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v10 = (unint64_t)&v3[2 * v9 + 4];
  if (a1 + 32 < v10 + 16 * v8 && v10 < a1 + 32 + 16 * v8) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v12 = v3[2];
  BOOL v13 = __OFADD__(v12, v8);
  uint64_t v14 = v12 + v8;
  if (!v13)
  {
    v3[2] = v14;
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_25A6232A0();
  __break(1u);
  return result;
}

uint64_t sub_25A5550B0(uint64_t a1)
{
  return sub_25A5550C4(a1, &qword_26A429578);
}

uint64_t sub_25A5550C4(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *(void *)(a1 + 16);
  int64_t v4 = *(void **)v2;
  int64_t v5 = *(void *)(*(void *)v2 + 16);
  int64_t v6 = v5 + v3;
  if (__OFADD__(v5, v3))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v6 <= v4[3] >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v5 <= v6) {
    int64_t v16 = v5 + v3;
  }
  else {
    int64_t v16 = v5;
  }
  int64_t v4 = sub_25A559334(isUniquelyReferenced_nonNull_native, v16, 1, v4, a2);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v3) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v10 = v4[2];
  if ((v4[3] >> 1) - v10 < v3)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v11 = (unint64_t)&v4[6 * v10 + 4];
  if (a1 + 32 < v11 + 48 * v3 && v11 < a1 + 32 + 48 * v3) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (!v3)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v2 = v4;
    return result;
  }
  uint64_t v13 = v4[2];
  BOOL v14 = __OFADD__(v13, v3);
  uint64_t v15 = v13 + v3;
  if (!v14)
  {
    v4[2] = v15;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_25A6232A0();
  __break(1u);
  return result;
}

uint64_t BuiltTargetDescription.hash(into:)(uint64_t a1)
{
  uint64_t v3 = v1[4];
  uint64_t v4 = v1[6];
  uint64_t v5 = v1[11];
  uint64_t v16 = v1[12];
  uint64_t v17 = v1[13];
  uint64_t v6 = v1[15];
  uint64_t v18 = v1[14];
  uint64_t v19 = v1[16];
  uint64_t v7 = v1[20];
  uint64_t v20 = v1[19];
  swift_bridgeObjectRetain();
  sub_25A622DF0();
  swift_bridgeObjectRelease();
  sub_25A623470();
  sub_25A623470();
  if (v3)
  {
    swift_bridgeObjectRetain();
    sub_25A622DF0();
    swift_bridgeObjectRelease();
  }
  uint64_t v8 = v7;
  sub_25A623470();
  if (v4)
  {
    swift_bridgeObjectRetain();
    sub_25A622DF0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_25A622DF0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_25A622DF0();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  sub_25A55AEB0(a1, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_25A55ADD8(a1, v16);
  swift_bridgeObjectRelease();
  sub_25A623460();
  uint64_t v9 = *(void *)(v17 + 16);
  if (v9)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = v17 + 40;
    do
    {
      swift_bridgeObjectRetain();
      sub_25A622DF0();
      swift_bridgeObjectRelease();
      v10 += 16;
      --v9;
    }
    while (v9);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  sub_25A55AD0C(a1, v18);
  swift_bridgeObjectRelease();
  sub_25A623460();
  uint64_t v11 = *(void *)(v6 + 16);
  if (v11)
  {
    swift_bridgeObjectRetain();
    uint64_t v12 = v6 + 40;
    do
    {
      swift_bridgeObjectRetain();
      sub_25A622DF0();
      swift_bridgeObjectRelease();
      v12 += 16;
      --v11;
    }
    while (v11);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  sub_25A55B16C(a1, v19);
  swift_bridgeObjectRelease();
  sub_25A623470();
  sub_25A623470();
  if (v20)
  {
    swift_bridgeObjectRetain();
    sub_25A622DF0();
    swift_bridgeObjectRelease();
  }
  uint64_t result = sub_25A623460();
  uint64_t v14 = *(void *)(v8 + 16);
  if (v14)
  {
    swift_bridgeObjectRetain();
    uint64_t v15 = v8 + 40;
    do
    {
      swift_bridgeObjectRetain();
      sub_25A622DF0();
      swift_bridgeObjectRelease();
      v15 += 16;
      --v14;
    }
    while (v14);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t BuiltTargetDescription.hashValue.getter()
{
  sub_25A623450();
  BuiltTargetDescription.hash(into:)((uint64_t)v1);
  return sub_25A6234A0();
}

uint64_t sub_25A555618()
{
  sub_25A623450();
  BuiltTargetDescription.hash(into:)((uint64_t)v1);
  return sub_25A6234A0();
}

uint64_t sub_25A55565C()
{
  sub_25A623450();
  BuiltTargetDescription.hash(into:)((uint64_t)v1);
  return sub_25A6234A0();
}

uint64_t BuiltObjectFileDescription.identifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t BuiltObjectFileDescription.identifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  void *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*BuiltObjectFileDescription.identifier.modify())()
{
  return nullsub_1;
}

uint64_t BuiltObjectFileDescription.path.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t BuiltObjectFileDescription.path.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t (*BuiltObjectFileDescription.path.modify())()
{
  return nullsub_1;
}

uint64_t BuiltObjectFileDescription.sourceFilePaths.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t BuiltObjectFileDescription.sourceFilePaths.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 32) = a1;
  return result;
}

uint64_t (*BuiltObjectFileDescription.sourceFilePaths.modify())()
{
  return nullsub_1;
}

uint64_t BuiltObjectFileDescription.forReplacement.getter()
{
  return *(unsigned __int8 *)(v0 + 40);
}

uint64_t BuiltObjectFileDescription.forReplacement.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 40) = result;
  return result;
}

uint64_t (*BuiltObjectFileDescription.forReplacement.modify())()
{
  return nullsub_1;
}

uint64_t BuiltObjectFileDescription.init(identifier:builtPath:sourceFilePaths:forReplacement:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X8>)
{
  *(void *)a7 = result;
  *(void *)(a7 + 8) = a2;
  *(void *)(a7 + 16) = a3;
  *(void *)(a7 + 24) = a4;
  *(void *)(a7 + 32) = a5;
  *(unsigned char *)(a7 + 40) = a6;
  return result;
}

uint64_t sub_25A555844(char a1)
{
  return *(void *)&aIdentifipath_0[8 * a1];
}

uint64_t sub_25A555864(char *a1, char *a2)
{
  return sub_25A5E8DF0(*a1, *a2);
}

uint64_t sub_25A555870()
{
  return sub_25A6170C0();
}

uint64_t sub_25A555878()
{
  return sub_25A549F7C();
}

uint64_t sub_25A555880()
{
  return sub_25A61DC54();
}

uint64_t sub_25A555888@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_25A55D02C();
  *a1 = result;
  return result;
}

uint64_t sub_25A5558B8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_25A555844(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_25A5558E4()
{
  return sub_25A555844(*v0);
}

uint64_t BuiltObjectFileDescription.propertyListValue.getter()
{
  unint64_t v1 = sub_25A55C9C8();
  sub_25A6227A0();
  sub_25A55C73C(v0, (uint64_t)v7, &qword_26A429458);
  uint64_t result = sub_25A55C73C((uint64_t)v7, (uint64_t)v8, &qword_26A429458);
  if (v9)
  {
    sub_25A55C73C((uint64_t)v7, (uint64_t)&v3, &qword_26A429458);
    uint64_t v5 = &type metadata for BuiltObjectFileDescription.Key;
    unint64_t v6 = v1;
    v4[0] = 0;
    sub_25A622700();
    uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v4);
  }
  if (*(void *)(*(void *)(v0 + 32) + 16))
  {
    uint64_t v3 = *(void *)(v0 + 32);
    uint64_t v5 = &type metadata for BuiltObjectFileDescription.Key;
    unint64_t v6 = v1;
    v4[0] = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A4294D8);
    sub_25A55CA1C(&qword_26A4294E0, &qword_26A4294D8);
    sub_25A622700();
    uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v4);
  }
  if ((*(unsigned char *)(v0 + 40) & 1) == 0)
  {
    LOBYTE(v3) = 0;
    uint64_t v5 = &type metadata for BuiltObjectFileDescription.Key;
    unint64_t v6 = v1;
    v4[0] = 3;
    sub_25A622700();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v4);
  }
  return result;
}

double BuiltObjectFileDescription.init(propertyListValue:)@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  sub_25A55D078(a1, (uint64_t)&v6);
  if (!v2)
  {
    long long v5 = v7[0];
    *a2 = v6;
    a2[1] = v5;
    double result = *(double *)((char *)v7 + 9);
    *(_OWORD *)((char *)a2 + 25) = *(_OWORD *)((char *)v7 + 9);
  }
  return result;
}

uint64_t sub_25A555AD4()
{
  return BuiltObjectFileDescription.propertyListValue.getter();
}

double sub_25A555B10@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  sub_25A55D078(a1, (uint64_t)&v6);
  if (!v2)
  {
    long long v5 = v7[0];
    *a2 = v6;
    a2[1] = v5;
    double result = *(double *)((char *)v7 + 9);
    *(_OWORD *)((char *)a2 + 25) = *(_OWORD *)((char *)v7 + 9);
  }
  return result;
}

uint64_t BuiltObjectFileDescription.hash(into:)(uint64_t a1)
{
  uint64_t v2 = v1;
  if (*(void *)(v2 + 8))
  {
    sub_25A623470();
    swift_bridgeObjectRetain();
    sub_25A622DF0();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_25A623470();
  }
  swift_bridgeObjectRetain();
  sub_25A622DF0();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(v2 + 32);
  swift_bridgeObjectRetain();
  sub_25A55AFD4(a1, v4);
  swift_bridgeObjectRelease();
  return sub_25A623470();
}

uint64_t BuiltObjectFileDescription.hashValue.getter()
{
  sub_25A623450();
  if (*(void *)(v0 + 8))
  {
    sub_25A623470();
    swift_bridgeObjectRetain();
    sub_25A622DF0();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_25A623470();
  }
  swift_bridgeObjectRetain();
  sub_25A622DF0();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  sub_25A55AFD4((uint64_t)v3, v1);
  swift_bridgeObjectRelease();
  sub_25A623470();
  return sub_25A6234A0();
}

uint64_t sub_25A555CFC()
{
  uint64_t v1 = *(void *)(v0 + 8);
  uint64_t v2 = *(void *)(v0 + 32);
  sub_25A623450();
  sub_25A623470();
  if (v1)
  {
    swift_bridgeObjectRetain();
    sub_25A622DF0();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  sub_25A622DF0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_25A55AFD4((uint64_t)v4, v2);
  swift_bridgeObjectRelease();
  sub_25A623470();
  return sub_25A6234A0();
}

uint64_t sub_25A555DDC(long long *a1, long long *a2)
{
  long long v2 = a1[1];
  long long v5 = *a1;
  v6[0] = v2;
  *(_OWORD *)((char *)v6 + 9) = *(long long *)((char *)a1 + 25);
  long long v3 = a2[1];
  long long v7 = *a2;
  v8[0] = v3;
  *(_OWORD *)((char *)v8 + 9) = *(long long *)((char *)a2 + 25);
  return _s19PreviewsMessagingOS26BuiltObjectFileDescriptionV2eeoiySbAC_ACtFZ_0((uint64_t)&v5, (uint64_t)&v7) & 1;
}

uint64_t BuiltStaticArchiveDescription.identifier.getter(uint64_t a1)
{
  return a1;
}

uint64_t BuiltStaticArchiveDescription.identifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  void *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*BuiltStaticArchiveDescription.identifier.modify())()
{
  return nullsub_1;
}

uint64_t BuiltStaticArchiveDescription.path.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a3;
}

uint64_t BuiltStaticArchiveDescription.path.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t (*BuiltStaticArchiveDescription.path.modify())()
{
  return nullsub_1;
}

uint64_t sub_25A555F44(char a1)
{
  if (a1) {
    return 1752457584;
  }
  else {
    return 0x696669746E656469;
  }
}

uint64_t sub_25A555F78(char *a1, char *a2)
{
  return sub_25A5E8A88(*a1, *a2);
}

uint64_t sub_25A555F84()
{
  return sub_25A61712C();
}

uint64_t sub_25A555F8C()
{
  return sub_25A549E44();
}

uint64_t sub_25A555F94()
{
  return sub_25A61DDB4();
}

uint64_t sub_25A555F9C@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_25A6232B0();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_25A555FFC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_25A555F44(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_25A556028()
{
  return sub_25A555F44(*v0);
}

uint64_t BuiltStaticArchiveDescription.propertyListValue.getter(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_25A55D398();
  uint64_t result = sub_25A6227A0();
  if (a2)
  {
    uint64_t v9 = a1;
    uint64_t v10 = a2;
    long long v7 = &type metadata for BuiltStaticArchiveDescription.Key;
    unint64_t v8 = v4;
    v6[0] = 0;
    sub_25A622700();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
  }
  return result;
}

uint64_t BuiltStaticArchiveDescription.init(propertyListValue:)(uint64_t a1)
{
  uint64_t result = sub_25A55D3EC(a1);
  if (v1) {
    return v3;
  }
  return result;
}

uint64_t sub_25A556120()
{
  uint64_t v1 = *v0;
  long long v4 = *(_OWORD *)(v0 + 1);
  unint64_t v2 = sub_25A55D398();
  uint64_t result = sub_25A6227A0();
  if ((void)v4)
  {
    uint64_t v8 = v1;
    uint64_t v9 = v4;
    long long v6 = &type metadata for BuiltStaticArchiveDescription.Key;
    unint64_t v7 = v2;
    v5[0] = 0;
    sub_25A622700();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
  }
  return result;
}

uint64_t sub_25A5561FC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_25A55D3EC(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
    a2[3] = v7;
  }
  return result;
}

uint64_t BuiltStaticArchiveDescription.hash(into:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    sub_25A623470();
    swift_bridgeObjectRetain();
    sub_25A622DF0();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_25A623470();
  }
  swift_bridgeObjectRetain();
  sub_25A622DF0();

  return swift_bridgeObjectRelease();
}

uint64_t BuiltStaticArchiveDescription.hashValue.getter(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    sub_25A622DF0();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  sub_25A622DF0();
  swift_bridgeObjectRelease();
  return sub_25A6234A0();
}

uint64_t sub_25A556388()
{
  uint64_t v1 = *(void *)(v0 + 8);
  sub_25A623450();
  sub_25A623470();
  if (v1)
  {
    swift_bridgeObjectRetain();
    sub_25A622DF0();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  sub_25A622DF0();
  swift_bridgeObjectRelease();
  return sub_25A6234A0();
}

uint64_t sub_25A556434()
{
  if (*(void *)(v0 + 8))
  {
    sub_25A623470();
    swift_bridgeObjectRetain();
    sub_25A622DF0();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_25A623470();
  }
  swift_bridgeObjectRetain();
  sub_25A622DF0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25A5564DC()
{
  uint64_t v1 = *(void *)(v0 + 8);
  sub_25A623450();
  sub_25A623470();
  if (v1)
  {
    swift_bridgeObjectRetain();
    sub_25A622DF0();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  sub_25A622DF0();
  swift_bridgeObjectRelease();
  return sub_25A6234A0();
}

uint64_t sub_25A556584(uint64_t *a1, uint64_t *a2)
{
  return _s19PreviewsMessagingOS29BuiltStaticArchiveDescriptionV2eeoiySbAC_ACtFZ_0(*a1, a1[1], a1[2], a1[3], *a2, a2[1], a2[2], a2[3]);
}

uint64_t BuiltTargetDescription.PlatformVersion.name.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t BuiltTargetDescription.PlatformVersion.name.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  void *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*BuiltTargetDescription.PlatformVersion.name.modify())()
{
  return nullsub_1;
}

uint64_t BuiltTargetDescription.PlatformVersion.minVersion.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t BuiltTargetDescription.PlatformVersion.minVersion.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t (*BuiltTargetDescription.PlatformVersion.minVersion.modify())()
{
  return nullsub_1;
}

uint64_t BuiltTargetDescription.PlatformVersion.sdkVersion.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t BuiltTargetDescription.PlatformVersion.sdkVersion.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 40) = a2;
  return result;
}

uint64_t (*BuiltTargetDescription.PlatformVersion.sdkVersion.modify())()
{
  return nullsub_1;
}

void __swiftcall BuiltTargetDescription.PlatformVersion.init(name:minVersion:sdkVersion:)(PreviewsMessagingOS::BuiltTargetDescription::PlatformVersion *__return_ptr retstr, Swift::String name, Swift::String minVersion, Swift::String sdkVersion)
{
  retstr->name = name;
  retstr->minVersion = minVersion;
  retstr->sdkVersion = sdkVersion;
}

uint64_t BuiltTargetDescription.PlatformVersion.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_25A622DF0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_25A622DF0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_25A622DF0();

  return swift_bridgeObjectRelease();
}

uint64_t BuiltTargetDescription.PlatformVersion.hashValue.getter()
{
  return sub_25A6234A0();
}

uint64_t sub_25A5568B0(char a1)
{
  return *(void *)&aName_5[8 * a1];
}

uint64_t sub_25A5568D0()
{
  return sub_25A6234A0();
}

uint64_t sub_25A556984()
{
  swift_bridgeObjectRetain();
  sub_25A622DF0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_25A622DF0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_25A622DF0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25A556A34()
{
  return sub_25A6234A0();
}

uint64_t sub_25A556AE8(char *a1, char *a2)
{
  return sub_25A5E9A98(*a1, *a2);
}

uint64_t sub_25A556AF4()
{
  return sub_25A6171AC();
}

uint64_t sub_25A556AFC()
{
  return sub_25A54A6C8();
}

uint64_t sub_25A556B04()
{
  return sub_25A61D328();
}

uint64_t sub_25A556B0C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_25A55EDA0();
  *a1 = result;
  return result;
}

uint64_t sub_25A556B3C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_25A5568B0(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_25A556B68()
{
  return sub_25A5568B0(*v0);
}

uint64_t BuiltTargetDescription.PlatformVersion.propertyListValue.getter()
{
  return sub_25A622780();
}

uint64_t sub_25A556BC0()
{
  return sub_25A622A70();
}

uint64_t BuiltTargetDescription.PlatformVersion.init(propertyListValue:)@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v16 = &type metadata for BuiltTargetDescription.PlatformVersion.Key;
  unint64_t v5 = sub_25A55D594();
  unint64_t v17 = v5;
  v15[0] = 0;
  sub_25A622710();
  if (v2)
  {
    uint64_t v6 = sub_25A6227C0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
    uint64_t v8 = v18;
    uint64_t v7 = v19;
    uint64_t v16 = &type metadata for BuiltTargetDescription.PlatformVersion.Key;
    unint64_t v17 = v5;
    v15[0] = 1;
    sub_25A622710();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
    uint64_t v16 = &type metadata for BuiltTargetDescription.PlatformVersion.Key;
    unint64_t v17 = v5;
    v15[0] = 2;
    sub_25A622710();
    uint64_t v10 = sub_25A6227C0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(a1, v10);
    uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
    *a2 = v8;
    a2[1] = v7;
    a2[2] = v13;
    a2[3] = v14;
    a2[4] = v11;
    a2[5] = v12;
  }
  return result;
}

uint64_t sub_25A556E84()
{
  return sub_25A622780();
}

uint64_t sub_25A556ED4@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return BuiltTargetDescription.PlatformVersion.init(propertyListValue:)(a1, a2);
}

Swift::Void __swiftcall BuiltTargetDescription.describe(with:)(Swift::OpaquePointer *with)
{
  uint64_t v3 = sub_25A622BA0();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  BOOL v51 = &v48[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v50 = &v48[-v8];
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v11 = &v48[-v10];
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = &v48[-v12];
  long long v14 = v1[9];
  long long v62 = v1[8];
  long long v63 = v14;
  uint64_t v64 = *((void *)v1 + 20);
  long long v15 = v1[5];
  v60[2] = v1[4];
  v60[3] = v15;
  long long v16 = v1[7];
  v60[4] = v1[6];
  long long v61 = v16;
  long long v17 = v1[1];
  long long v58 = *v1;
  long long v59 = v17;
  long long v18 = v1[3];
  v60[0] = v1[2];
  v60[1] = v18;
  *uint64_t v13 = 123;
  v13[1] = 0xE100000000000000;
  uint64_t v19 = *(void (**)(void))(v4 + 104);
  unsigned int v49 = *MEMORY[0x263F605C8];
  v55 = (void (*)(unsigned char *, void, uint64_t))v19;
  v19(&v48[-v12]);
  rawValue = (char *)with->_rawValue;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    rawValue = (char *)sub_25A558C78(0, *((void *)rawValue + 2) + 1, 1, (unint64_t)rawValue);
  }
  unint64_t v22 = *((void *)rawValue + 2);
  unint64_t v21 = *((void *)rawValue + 3);
  if (v22 >= v21 >> 1) {
    rawValue = (char *)sub_25A558C78(v21 > 1, v22 + 1, 1, (unint64_t)rawValue);
  }
  *((void *)rawValue + 2) = v22 + 1;
  uint64_t v24 = *(void (**)(char *, unsigned char *, uint64_t))(v4 + 32);
  uint64_t v23 = v4 + 32;
  unint64_t v53 = (*(unsigned __int8 *)(v23 + 48) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 48);
  v54 = v24;
  uint64_t v52 = *(void *)(v23 + 40);
  v24(&rawValue[v53 + v52 * v22], v13, v3);
  v55(v11, *MEMORY[0x263F605D0], v3);
  unint64_t v26 = *((void *)rawValue + 2);
  unint64_t v25 = *((void *)rawValue + 3);
  if (v26 >= v25 >> 1) {
    rawValue = (char *)sub_25A558C78(v25 > 1, v26 + 1, 1, (unint64_t)rawValue);
  }
  *((void *)rawValue + 2) = v26 + 1;
  v54(&rawValue[v53 + v26 * v52], v11, v3);
  with->_rawValue = rawValue;
  v71[0] = v58;
  swift_bridgeObjectRetain();
  sub_25A622ED0();
  swift_bridgeObjectRelease();
  sub_25A55C73C((uint64_t)&v59 + 8, (uint64_t)v68, &qword_26A429458);
  sub_25A55C73C((uint64_t)v68, (uint64_t)v69, &qword_26A429458);
  if (v70)
  {
    sub_25A55C73C((uint64_t)v68, (uint64_t)v71, &qword_26A429458);
    sub_25A55D664((uint64_t)v68);
    sub_25A622ED0();
    sub_25A55D690((uint64_t)v68);
  }
  sub_25A55C73C((uint64_t)v60 + 8, (uint64_t)v67, &qword_26A429460);
  uint64_t v27 = sub_25A55C73C((uint64_t)v67, (uint64_t)v71, &qword_26A429460);
  if (*((void *)&v71[0] + 1))
  {
    v56[0] = v71[0];
    v56[1] = v71[1];
    v56[2] = v71[2];
    sub_25A55D6BC();
    uint64_t v27 = sub_25A622EF0();
  }
  if (v59 == 1)
  {
    LOBYTE(v56[0]) = 1;
    uint64_t v27 = sub_25A622ED0();
  }
  MEMORY[0x270FA5388](v27);
  *(void *)&v48[-16] = &v58;
  uint64_t v28 = sub_25A622EC0();
  MEMORY[0x270FA5388](v28);
  *(void *)&v48[-16] = &v58;
  uint64_t v29 = sub_25A622EC0();
  MEMORY[0x270FA5388](v29);
  *(void *)&v48[-16] = &v58;
  uint64_t v30 = sub_25A622EC0();
  MEMORY[0x270FA5388](v30);
  *(void *)&v48[-16] = &v58;
  sub_25A622EC0();
  uint64_t v66 = *((void *)&v61 + 1);
  if (*(void *)(*((void *)&v61 + 1) + 16))
  {
    *(void *)&v56[0] = *((void *)&v61 + 1);
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A429438);
    sub_25A55DAA4(&qword_26A4294F8, &qword_26A429438);
    uint64_t v31 = sub_25A622D90();
    uint64_t v33 = v32;
    sub_25A55EEB8((uint64_t)&v66);
    *(void *)&v56[0] = v31;
    *((void *)&v56[0] + 1) = v33;
    sub_25A622ED0();
    swift_bridgeObjectRelease();
  }
  if (*(void *)(v62 + 16))
  {
    sub_25A55D608();
    sub_25A623100();
    uint64_t v34 = swift_bridgeObjectRetain();
    uint64_t v35 = sub_25A559884(v34, &qword_26A429590, (uint64_t (*)(uint64_t *, void *, uint64_t, uint64_t))sub_25A55B31C);
    swift_bridgeObjectRelease();
    *(void *)&v56[0] = v35;
    sub_25A559594((uint64_t *)v56, sub_25A5FD524, sub_25A559970);
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A429438);
    sub_25A55DAA4(&qword_26A4294F8, &qword_26A429438);
    uint64_t v36 = sub_25A622D90();
    uint64_t v38 = v37;
    swift_release();
    *(void *)&v56[0] = v36;
    *((void *)&v56[0] + 1) = v38;
    sub_25A622ED0();
    swift_bridgeObjectRelease();
  }
  LOBYTE(v56[0]) = BYTE8(v62);
  sub_25A622ED0();
  sub_25A55C73C((uint64_t)&v63, (uint64_t)v65, &qword_26A429458);
  uint64_t v39 = sub_25A55C73C((uint64_t)v65, (uint64_t)v56, &qword_26A429458);
  if (*((void *)&v56[0] + 1))
  {
    sub_25A55C73C((uint64_t)v65, (uint64_t)&v57, &qword_26A429458);
    sub_25A55D664((uint64_t)v65);
    sub_25A622ED0();
    uint64_t v39 = sub_25A55D690((uint64_t)v65);
  }
  MEMORY[0x270FA5388](v39);
  *(void *)&v48[-16] = &v58;
  sub_25A622EC0();
  v40 = v50;
  v55(v50, *MEMORY[0x263F605D8], v3);
  uint64_t v41 = (char *)with->_rawValue;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v43 = v51;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    uint64_t v41 = (char *)sub_25A558C78(0, *((void *)v41 + 2) + 1, 1, (unint64_t)v41);
  }
  unint64_t v45 = *((void *)v41 + 2);
  unint64_t v44 = *((void *)v41 + 3);
  if (v45 >= v44 >> 1) {
    uint64_t v41 = (char *)sub_25A558C78(v44 > 1, v45 + 1, 1, (unint64_t)v41);
  }
  *((void *)v41 + 2) = v45 + 1;
  v54(&v41[v53 + v45 * v52], v40, v3);
  void *v43 = 125;
  v43[1] = 0xE100000000000000;
  v55(v43, v49, v3);
  unint64_t v47 = *((void *)v41 + 2);
  unint64_t v46 = *((void *)v41 + 3);
  if (v47 >= v46 >> 1) {
    uint64_t v41 = (char *)sub_25A558C78(v46 > 1, v47 + 1, 1, (unint64_t)v41);
  }
  *((void *)v41 + 2) = v47 + 1;
  v54(&v41[v53 + v47 * v52], v43, v3);
  with->_rawValue = v41;
}

uint64_t sub_25A55795C(unint64_t *a1, uint64_t a2)
{
  uint64_t v4 = sub_25A622BA0();
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  unint64_t v42 = (char *)&v28 - v9;
  uint64_t result = *(void *)(a2 + 88);
  uint64_t v45 = result;
  uint64_t v11 = *(void *)(result + 16);
  if (v11)
  {
    unsigned int v30 = *MEMORY[0x263F605D0];
    uint64_t v32 = v8;
    uint64_t v40 = v8 + 32;
    uint64_t v41 = (void (**)(char *, void, uint64_t))(v8 + 104);
    unsigned int v29 = *MEMORY[0x263F605D8];
    uint64_t v12 = (unsigned __int8 *)(swift_bridgeObjectRetain() + 72);
    uint64_t v33 = v4;
    uint64_t v31 = v7;
    do
    {
      uint64_t v39 = v11;
      uint64_t v13 = *((void *)v12 - 5);
      uint64_t v14 = *((void *)v12 - 4);
      uint64_t v15 = *((void *)v12 - 3);
      uint64_t v16 = *((void *)v12 - 2);
      uint64_t v17 = *((void *)v12 - 1);
      int v18 = *v12;
      v46[0] = v13;
      v46[1] = v14;
      v46[2] = v15;
      v46[3] = v16;
      v46[4] = v17;
      char v47 = v18;
      uint64_t v43 = v15;
      uint64_t v44 = v16;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v38 = v17;
      swift_bridgeObjectRetain();
      sub_25A622F00();
      uint64_t v37 = *v41;
      v37(v42, v30, v4);
      unint64_t v19 = *a1;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v19 = sub_25A558C78(0, *(void *)(v19 + 16) + 1, 1, v19);
      }
      unint64_t v21 = *(void *)(v19 + 16);
      unint64_t v20 = *(void *)(v19 + 24);
      if (v21 >= v20 >> 1) {
        unint64_t v19 = sub_25A558C78(v20 > 1, v21 + 1, 1, v19);
      }
      *(void *)(v19 + 16) = v21 + 1;
      unint64_t v35 = (*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80);
      uint64_t v34 = *(void *)(v32 + 72);
      unint64_t v22 = v19 + v35 + v34 * v21;
      uint64_t v4 = v33;
      uint64_t v36 = *(uint64_t (**)(unint64_t, char *, uint64_t))(v32 + 32);
      uint64_t v23 = v36(v22, v42, v33);
      *a1 = v19;
      if (v14 && (v13 != v15 || v14 != v16))
      {
        uint64_t v23 = sub_25A6233B0();
        if ((v23 & 1) == 0)
        {
          uint64_t v43 = v13;
          uint64_t v44 = v14;
          swift_bridgeObjectRetain();
          sub_25A622ED0();
          uint64_t v23 = swift_bridgeObjectRelease();
        }
      }
      if (v18)
      {
        LOBYTE(v43) = v18;
        uint64_t v23 = sub_25A622ED0();
      }
      MEMORY[0x270FA5388](v23);
      *(&v28 - 2) = (uint64_t)v46;
      sub_25A622EC0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v24 = v31;
      v37(v31, v29, v4);
      unint64_t v25 = *a1;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v25 = sub_25A558C78(0, *(void *)(v25 + 16) + 1, 1, v25);
      }
      unint64_t v27 = *(void *)(v25 + 16);
      unint64_t v26 = *(void *)(v25 + 24);
      if (v27 >= v26 >> 1) {
        unint64_t v25 = sub_25A558C78(v26 > 1, v27 + 1, 1, v25);
      }
      *(void *)(v25 + 16) = v27 + 1;
      v36(v25 + v35 + v27 * v34, v24, v4);
      *a1 = v25;
      v12 += 48;
      uint64_t v11 = v39 - 1;
    }
    while (v39 != 1);
    return sub_25A55EEB8((uint64_t)&v45);
  }
  return result;
}

uint64_t sub_25A557DD4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 32);
  swift_bridgeObjectRetain_n();
  uint64_t v3 = sub_25A559884(v2, &qword_26A429590, (uint64_t (*)(uint64_t *, void *, uint64_t, uint64_t))sub_25A55B31C);
  swift_bridgeObjectRelease();
  v8[0] = (uint64_t)v3;
  sub_25A559594(v8, sub_25A5FD524, sub_25A559970);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(v8[0] + 16);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(v8[0] + 40);
    do
    {
      uint64_t v6 = *v5;
      v8[0] = *(v5 - 1);
      v8[1] = v6;
      sub_25A622F00();
      v5 += 2;
      --v4;
    }
    while (v4);
  }
  else if (((vars8 ^ (2 * vars8)) & 0x4000000000000000) != 0)
  {
    __break(0xC471u);
  }
  return swift_release();
}

uint64_t sub_25A557F14(unint64_t *a1, uint64_t a2)
{
  uint64_t v4 = sub_25A622BA0();
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v38 = (char *)&v29 - v9;
  uint64_t result = *(void *)(a2 + 96);
  uint64_t v41 = result;
  uint64_t v11 = *(void *)(result + 16);
  if (v11)
  {
    unsigned int v31 = *MEMORY[0x263F605D0];
    uint64_t v32 = v8;
    uint64_t v36 = v8 + 32;
    uint64_t v37 = (void (**)(char *, void, uint64_t))(v8 + 104);
    unsigned int v30 = *MEMORY[0x263F605D8];
    uint64_t v12 = (uint64_t *)(swift_bridgeObjectRetain() + 56);
    unsigned int v29 = v7;
    do
    {
      uint64_t v33 = *(v12 - 3);
      uint64_t v13 = v4;
      uint64_t v15 = *(v12 - 2);
      uint64_t v14 = *(v12 - 1);
      uint64_t v16 = *v12;
      uint64_t v39 = v14;
      uint64_t v40 = v16;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain_n();
      sub_25A622ED0();
      swift_bridgeObjectRelease();
      uint64_t v17 = v13;
      uint64_t v34 = *v37;
      v34(v38, v31, v13);
      unint64_t v18 = *a1;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v18 = sub_25A558C78(0, *(void *)(v18 + 16) + 1, 1, v18);
      }
      unint64_t v20 = *(void *)(v18 + 16);
      unint64_t v19 = *(void *)(v18 + 24);
      if (v20 >= v19 >> 1) {
        unint64_t v18 = sub_25A558C78(v19 > 1, v20 + 1, 1, v18);
      }
      *(void *)(v18 + 16) = v20 + 1;
      unint64_t v35 = (*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80);
      uint64_t v21 = *(void *)(v32 + 72);
      unint64_t v22 = v18 + v35 + v21 * v20;
      uint64_t v23 = *(void (**)(unint64_t, char *, uint64_t))(v32 + 32);
      v23(v22, v38, v17);
      *a1 = v18;
      if (v15)
      {
        uint64_t v24 = v33;
        if (v33 == v14 && v15 == v16 || (sub_25A6233B0() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v39 = v24;
          uint64_t v40 = v15;
          swift_bridgeObjectRetain();
          sub_25A622ED0();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
        }
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      uint64_t v4 = v17;
      unint64_t v25 = v29;
      v34(v29, v30, v4);
      unint64_t v26 = *a1;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v26 = sub_25A558C78(0, *(void *)(v26 + 16) + 1, 1, v26);
      }
      unint64_t v28 = *(void *)(v26 + 16);
      unint64_t v27 = *(void *)(v26 + 24);
      if (v28 >= v27 >> 1) {
        unint64_t v26 = sub_25A558C78(v27 > 1, v28 + 1, 1, v26);
      }
      v12 += 4;
      *(void *)(v26 + 16) = v28 + 1;
      v23(v26 + v35 + v28 * v21, v25, v4);
      *a1 = v26;
      --v11;
    }
    while (v11);
    return sub_25A55EEB8((uint64_t)&v41);
  }
  return result;
}

uint64_t sub_25A5582D8(uint64_t a1, uint64_t a2)
{
  uint64_t result = *(void *)(a2 + 104);
  uint64_t v5 = result;
  uint64_t v3 = *(void *)(result + 16);
  if (v3)
  {
    uint64_t v4 = swift_bridgeObjectRetain() + 40;
    do
    {
      sub_25A622F00();
      v4 += 16;
      --v3;
    }
    while (v3);
    return sub_25A55EEB8((uint64_t)&v5);
  }
  return result;
}

uint64_t sub_25A558364(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 112);
  uint64_t v6 = v2;
  uint64_t v3 = *(void *)(v2 + 16);
  if (v3)
  {
    sub_25A55EE64();
    swift_bridgeObjectRetain();
    uint64_t v4 = v2 + 48;
    do
    {
      v4 += 24;
      sub_25A622EF0();
      --v3;
    }
    while (v3);
    return sub_25A55EEB8((uint64_t)&v6);
  }
  return result;
}

uint64_t BuiltTargetDescription.LinkerFlag.rawValue.getter()
{
  if (*v0) {
    return 1131045487;
  }
  else {
    return 0x64616F4C6C6C61;
  }
}

unsigned char *sub_25A55842C@<X0>(unsigned char *result@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2 = 1131045487;
  if (!*result) {
    uint64_t v2 = 0x64616F4C6C6C61;
  }
  unint64_t v3 = 0xE700000000000000;
  if (*result) {
    unint64_t v3 = 0xE400000000000000;
  }
  *a2 = v2;
  a2[1] = v3;
  return result;
}

uint64_t sub_25A558464(uint64_t a1, uint64_t a2)
{
  uint64_t result = *(void *)(a2 + 160);
  uint64_t v5 = result;
  uint64_t v3 = *(void *)(result + 16);
  if (v3)
  {
    uint64_t v4 = swift_bridgeObjectRetain() + 40;
    do
    {
      sub_25A622F00();
      v4 += 16;
      --v3;
    }
    while (v3);
    return sub_25A55EEB8((uint64_t)&v5);
  }
  return result;
}

uint64_t BuiltTargetDescription.summary.getter()
{
  long long v1 = *(_OWORD *)(v0 + 144);
  v9[8] = *(_OWORD *)(v0 + 128);
  v9[9] = v1;
  uint64_t v10 = *(void *)(v0 + 160);
  long long v2 = *(_OWORD *)(v0 + 80);
  v9[4] = *(_OWORD *)(v0 + 64);
  v9[5] = v2;
  long long v3 = *(_OWORD *)(v0 + 112);
  v9[6] = *(_OWORD *)(v0 + 96);
  v9[7] = v3;
  long long v4 = *(_OWORD *)(v0 + 16);
  v9[0] = *(_OWORD *)v0;
  v9[1] = v4;
  long long v5 = *(_OWORD *)(v0 + 48);
  v9[2] = *(_OWORD *)(v0 + 32);
  v9[3] = v5;
  with._rawValue = (void *)MEMORY[0x263F8EE78];
  sub_25A55C394((uint64_t)v9);
  BuiltTargetDescription.describe(with:)(&with);
  uint64_t v6 = sub_25A622EB0();
  swift_bridgeObjectRelease();
  sub_25A55D710((uint64_t)v9);
  return v6;
}

uint64_t sub_25A558598()
{
  sub_25A622EE0();
  uint64_t v0 = sub_25A622EB0();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_25A558644()
{
  with._rawValue = (void *)MEMORY[0x263F8EE78];
  BuiltTargetDescription.describe(with:)(&with);
  uint64_t v0 = sub_25A622EB0();
  swift_bridgeObjectRelease();
  return v0;
}

Swift::Void __swiftcall BuiltTargetDescription.PlatformVersion.describe(with:)(Swift::OpaquePointer *with)
{
}

uint64_t sub_25A558734()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_25A558838()
{
  return sub_25A558598();
}

uint64_t Array<A>.opaqueTypeErasureEnabled.getter(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return 1;
  }
  uint64_t v2 = v1 - 1;
  long long v3 = (unsigned __int8 *)(a1 + 168);
  do
  {
    uint64_t result = *v3;
    BOOL v6 = v2-- != 0;
    if (result != 1) {
      break;
    }
    v3 += 168;
  }
  while (v6);
  return result;
}

PreviewsMessagingOS::BuiltTargetDescription::LinkerFlag_optional __swiftcall BuiltTargetDescription.LinkerFlag.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  uint64_t v3 = sub_25A6232B0();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1) {
    char v5 = 1;
  }
  else {
    char v5 = 2;
  }
  if (!v3) {
    char v5 = 0;
  }
  char *v2 = v5;
  return result;
}

void *static BuiltTargetDescription.LinkerFlag.allCases.getter()
{
  return &unk_27083D288;
}

uint64_t sub_25A55891C(char *a1, char *a2)
{
  return sub_25A5E99FC(*a1, *a2);
}

uint64_t sub_25A558928()
{
  return sub_25A617218();
}

uint64_t sub_25A558930()
{
  return sub_25A54A664();
}

uint64_t sub_25A558938()
{
  return sub_25A61ABA4();
}

PreviewsMessagingOS::BuiltTargetDescription::LinkerFlag_optional sub_25A558940(Swift::String *a1)
{
  return BuiltTargetDescription.LinkerFlag.init(rawValue:)(*a1);
}

uint64_t sub_25A55894C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = BuiltTargetDescription.LinkerFlag.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_25A558974(void *a1@<X8>)
{
  *a1 = &unk_27083D2B0;
}

uint64_t sub_25A558984(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_25A55EDEC();
  uint64_t v5 = MEMORY[0x263F60648];

  return MEMORY[0x270F55C68](a1, a2, v4, v5);
}

uint64_t sub_25A5589E0()
{
  return sub_25A622B20();
}

uint64_t sub_25A558A50(char *a1, char *a2)
{
  return sub_25A558A5C(*a1, *a2);
}

uint64_t sub_25A558A5C(char a1, char a2)
{
  if (a2) {
    uint64_t v3 = 1131045487;
  }
  else {
    uint64_t v3 = 0x64616F4C6C6C61;
  }
  if (a2) {
    unint64_t v4 = 0xE400000000000000;
  }
  else {
    unint64_t v4 = 0xE700000000000000;
  }
  if (a1) {
    uint64_t v5 = 1131045487;
  }
  else {
    uint64_t v5 = 0x64616F4C6C6C61;
  }
  if (a1) {
    unint64_t v6 = 0xE400000000000000;
  }
  else {
    unint64_t v6 = 0xE700000000000000;
  }
  if (v3 == v5 && v4 == v6)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v7 = 1;
  }
  else
  {
    char v8 = sub_25A6233B0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v7 = v8 ^ 1;
  }
  return v7 & 1;
}

uint64_t sub_25A558B10(char *a1, char *a2)
{
  return sub_25A558B1C(*a1, *a2);
}

uint64_t sub_25A558B1C(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 1131045487;
  }
  else {
    uint64_t v3 = 0x64616F4C6C6C61;
  }
  if (v2) {
    unint64_t v4 = 0xE700000000000000;
  }
  else {
    unint64_t v4 = 0xE400000000000000;
  }
  if (a2) {
    uint64_t v5 = 1131045487;
  }
  else {
    uint64_t v5 = 0x64616F4C6C6C61;
  }
  if (a2) {
    unint64_t v6 = 0xE400000000000000;
  }
  else {
    unint64_t v6 = 0xE700000000000000;
  }
  if (v3 == v5 && v4 == v6)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v7 = 1;
  }
  else
  {
    char v8 = sub_25A6233B0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v7 = v8 ^ 1;
  }
  return v7 & 1;
}

uint64_t sub_25A558BCC(char *a1, char *a2)
{
  return sub_25A558BD8(*a1, *a2);
}

uint64_t sub_25A558BD8(char a1, char a2)
{
  if (a2) {
    uint64_t v3 = 1131045487;
  }
  else {
    uint64_t v3 = 0x64616F4C6C6C61;
  }
  if (a2) {
    unint64_t v4 = 0xE400000000000000;
  }
  else {
    unint64_t v4 = 0xE700000000000000;
  }
  if (a1) {
    uint64_t v5 = 1131045487;
  }
  else {
    uint64_t v5 = 0x64616F4C6C6C61;
  }
  if (a1) {
    unint64_t v6 = 0xE400000000000000;
  }
  else {
    unint64_t v6 = 0xE700000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 0;
  }
  else {
    char v7 = sub_25A6233B0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_25A558C78(char a1, int64_t a2, char a3, unint64_t a4)
{
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v7 = a2;
      }
    }
  }
  else
  {
    uint64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    uint64_t v13 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4295A0);
  uint64_t v10 = *(void *)(sub_25A622BA0() - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = (void *)swift_allocObject();
  size_t v14 = _swift_stdlib_malloc_size(v13);
  if (!v11 || (v14 - v12 == 0x8000000000000000 ? (BOOL v15 = v11 == -1) : (BOOL v15 = 0), v15))
  {
LABEL_29:
    uint64_t result = sub_25A623280();
    __break(1u);
    return result;
  }
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  uint64_t v16 = *(void *)(sub_25A622BA0() - 8);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  unint64_t v18 = (unint64_t)v13 + v17;
  if (a1)
  {
    if ((unint64_t)v13 < a4 || v18 >= a4 + v17 + *(void *)(v16 + 72) * v8)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_25A55C0C4(0, v8, v18, a4);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v13;
}

void *sub_25A558EE0(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A429590);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_25A55CC64(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_25A558FF0(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A4295C0);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[3 * v8 + 4]) {
          memmove(v12, a4 + 4, 24 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v12 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_25A55CB6C(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_25A559114(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A4295B8);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 1;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4]) {
          memmove(v13, a4 + 4, 32 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_25A55CA78(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_25A559224(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A429588);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_25A55CE44(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_25A559334(void *result, int64_t a2, char a3, void *a4, uint64_t *a5)
{
  char v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v8 = a2;
    goto LABEL_8;
  }
  unint64_t v7 = a4[3];
  uint64_t v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v8 + 0x4000000000000000 >= 0)
  {
    uint64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v8 = a2;
    }
LABEL_8:
    uint64_t v9 = a4[2];
    if (v8 <= v9) {
      uint64_t v10 = a4[2];
    }
    else {
      uint64_t v10 = v8;
    }
    if (v10)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      int64_t v11 = (void *)swift_allocObject();
      size_t v12 = _swift_stdlib_malloc_size(v11);
      v11[2] = v9;
      uint64_t v11[3] = 2 * ((uint64_t)(v12 - 32) / 48);
      uint64_t v13 = v11 + 4;
      if (v6)
      {
LABEL_13:
        if (v11 != a4 || v13 >= &a4[6 * v9 + 4]) {
          memmove(v13, a4 + 4, 48 * v9);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      int64_t v11 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_25A55CF38(0, v9, (unint64_t)v13, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

uint64_t sub_25A559464(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_25A5FC260(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_25A559484(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_25A5FC3CC(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

void *sub_25A5594A4(void *a1)
{
  return sub_25A559114(0, a1[2], 0, a1);
}

void *sub_25A5594B8(void *a1)
{
  return sub_25A559334(0, a1[2], 0, a1, &qword_26A4295B0);
}

uint64_t sub_25A5594F0(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 1131045487;
  }
  else {
    uint64_t v3 = 0x64616F4C6C6C61;
  }
  if (v2) {
    unint64_t v4 = 0xE700000000000000;
  }
  else {
    unint64_t v4 = 0xE400000000000000;
  }
  if (a2) {
    uint64_t v5 = 1131045487;
  }
  else {
    uint64_t v5 = 0x64616F4C6C6C61;
  }
  if (a2) {
    unint64_t v6 = 0xE400000000000000;
  }
  else {
    unint64_t v6 = 0xE700000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 0;
  }
  else {
    char v7 = sub_25A6233B0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_25A559594(uint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t (*a3)(void *))
{
  uint64_t v6 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v6 = a2(v6);
  }
  uint64_t v7 = *(void *)(v6 + 16);
  v9[0] = v6 + 32;
  v9[1] = v7;
  uint64_t result = a3(v9);
  *a1 = v6;
  return result;
}

uint64_t sub_25A559618(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return MEMORY[0x263F8EE78];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4295A8);
  uint64_t v3 = swift_allocObject();
  size_t v4 = _swift_stdlib_malloc_size((const void *)v3);
  *(void *)(v3 + 16) = v1;
  *(void *)(v3 + 24) = 2 * v4 - 64;
  uint64_t v5 = sub_25A55B51C(&v7, (unsigned char *)(v3 + 32), v1, a1);
  swift_bridgeObjectRetain();
  sub_25A55EE5C();
  if (v5 != (void *)v1)
  {
    __break(1u);
    return MEMORY[0x263F8EE78];
  }
  return v3;
}

uint64_t sub_25A5596F0(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4 = a4 >> 1;
  uint64_t v5 = (a4 >> 1) - a3;
  if (!__OFSUB__(a4 >> 1, a3))
  {
    if (!v5) {
      return MEMORY[0x263F8EE78];
    }
    uint64_t v8 = 2 * v5;
    if (v5 <= 0)
    {
      uint64_t v9 = (void *)MEMORY[0x263F8EE78];
      if (v4 != a3)
      {
LABEL_7:
        if (v5 < 0) {
          goto LABEL_19;
        }
        unint64_t v12 = a2 + 16 * a3;
        if (v12 < (unint64_t)&v9[v8 + 4] && (unint64_t)(v9 + 4) < v12 + v8 * 8) {
          goto LABEL_19;
        }
        swift_arrayInitWithCopy();
        return (uint64_t)v9;
      }
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A429588);
      uint64_t v9 = (void *)swift_allocObject();
      int64_t v10 = _swift_stdlib_malloc_size(v9);
      uint64_t v11 = v10 - 32;
      if (v10 < 32) {
        uint64_t v11 = v10 - 17;
      }
      void v9[2] = v5;
      v9[3] = 2 * (v11 >> 4);
      if (v4 != a3) {
        goto LABEL_7;
      }
    }
    __break(1u);
  }
  __break(1u);
LABEL_19:
  uint64_t result = sub_25A6232A0();
  __break(1u);
  return result;
}

void *sub_25A559864(uint64_t a1)
{
  return sub_25A559884(a1, &qword_26A429580, (uint64_t (*)(uint64_t *, void *, uint64_t, uint64_t))sub_25A55B31C);
}

void *sub_25A559884(uint64_t a1, uint64_t *a2, uint64_t (*a3)(uint64_t *, void *, uint64_t, uint64_t))
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3) {
    return (void *)MEMORY[0x263F8EE78];
  }
  __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v6 = (void *)swift_allocObject();
  int64_t v7 = _swift_stdlib_malloc_size(v6);
  uint64_t v8 = v7 - 32;
  if (v7 < 32) {
    uint64_t v8 = v7 - 17;
  }
  _OWORD v6[2] = v3;
  v6[3] = 2 * (v8 >> 4);
  uint64_t v9 = a3(&v11, v6 + 4, v3, a1);
  swift_bridgeObjectRetain();
  sub_25A55EE5C();
  if (v9 != v3)
  {
    __break(1u);
    return (void *)MEMORY[0x263F8EE78];
  }
  return v6;
}

uint64_t sub_25A559970(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_25A623340();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_152;
    }
    if (v3) {
      return sub_25A55A740(0, v3, 1, a1);
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_160;
  }
  uint64_t v105 = result;
  v102 = a1;
  if (v3 < 2)
  {
    uint64_t v8 = MEMORY[0x263F8EE78];
    __dst = (char *)(MEMORY[0x263F8EE78] + 32);
    if (v3 != 1)
    {
      unint64_t v12 = *(void *)(MEMORY[0x263F8EE78] + 16);
      uint64_t v11 = (char *)MEMORY[0x263F8EE78];
LABEL_118:
      v94 = v11;
      uint64_t v104 = v8;
      if (v12 >= 2)
      {
        uint64_t v95 = *v102;
        do
        {
          unint64_t v96 = v12 - 2;
          if (v12 < 2) {
            goto LABEL_147;
          }
          if (!v95) {
            goto LABEL_159;
          }
          v97 = v94;
          uint64_t v98 = *(void *)&v94[16 * v96 + 32];
          uint64_t v99 = *(void *)&v94[16 * v12 + 24];
          sub_25A55A810((char *)(v95 + 16 * v98), (char *)(v95 + 16 * *(void *)&v94[16 * v12 + 16]), v95 + 16 * v99, __dst);
          if (v1) {
            break;
          }
          if (v99 < v98) {
            goto LABEL_148;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            v97 = sub_25A5FD4FC((uint64_t)v97);
          }
          if (v96 >= *((void *)v97 + 2)) {
            goto LABEL_149;
          }
          v100 = &v97[16 * v96 + 32];
          *(void *)v100 = v98;
          *((void *)v100 + 1) = v99;
          unint64_t v101 = *((void *)v97 + 2);
          if (v12 > v101) {
            goto LABEL_150;
          }
          memmove(&v97[16 * v12 + 16], &v97[16 * v12 + 32], 16 * (v101 - v12));
          v94 = v97;
          *((void *)v97 + 2) = v101 - 1;
          unint64_t v12 = v101 - 1;
        }
        while (v101 > 2);
      }
LABEL_115:
      swift_bridgeObjectRelease();
      *(void *)(v104 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v104 = MEMORY[0x263F8EE78];
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    uint64_t v7 = sub_25A622F20();
    *(void *)(v7 + 16) = v6;
    uint64_t v104 = v7;
    __dst = (char *)(v7 + 32);
  }
  uint64_t v9 = 0;
  uint64_t v10 = *a1;
  uint64_t v103 = v10 + 8;
  uint64_t v11 = (char *)MEMORY[0x263F8EE78];
  uint64_t v106 = v3;
  while (1)
  {
    uint64_t v13 = v9++;
    if (v9 >= v3) {
      goto LABEL_46;
    }
    size_t v14 = (uint64_t *)(v10 + 16 * v9);
    uint64_t v15 = *v14;
    uint64_t v16 = v14[1];
    unint64_t v17 = (void *)(v10 + 16 * v13);
    if (v15 == *v17 && v16 == v17[1])
    {
      uint64_t v20 = v13 + 2;
      if (v13 + 2 >= v3) {
        goto LABEL_45;
      }
      int v19 = 0;
    }
    else
    {
      int v19 = sub_25A6233B0();
      uint64_t v20 = v13 + 2;
      if (v13 + 2 >= v3) {
        goto LABEL_36;
      }
    }
    uint64_t v21 = (void *)(v103 + 16 * v20);
    do
    {
      uint64_t v23 = (void *)(v10 + 16 * v9);
      if (*(v21 - 1) == *v23 && *v21 == v23[1])
      {
        if (v19) {
          goto LABEL_37;
        }
      }
      else if ((v19 ^ sub_25A6233B0()))
      {
        goto LABEL_36;
      }
      v21 += 2;
      uint64_t v22 = v20 + 1;
      uint64_t v9 = v20;
      uint64_t v20 = v22;
    }
    while (v22 < v3);
    uint64_t v20 = v22;
LABEL_36:
    uint64_t v9 = v20;
    if (v19)
    {
LABEL_37:
      if (v20 < v13) {
        goto LABEL_155;
      }
      if (v13 < v20)
      {
        uint64_t v25 = 16 * v20;
        uint64_t v26 = 16 * v13;
        uint64_t v27 = v20;
        uint64_t v28 = v13;
        do
        {
          if (v28 != --v27)
          {
            if (!v10) {
              goto LABEL_158;
            }
            uint64_t v29 = v10 + v25;
            uint64_t v30 = *(void *)(v10 + v26);
            uint64_t v31 = *(void *)(v10 + v26 + 8);
            *(_OWORD *)(v10 + v26) = *(_OWORD *)(v10 + v25 - 16);
            *(void *)(v29 - 16) = v30;
            *(void *)(v29 - 8) = v31;
          }
          ++v28;
          v25 -= 16;
          v26 += 16;
        }
        while (v28 < v27);
      }
LABEL_45:
      uint64_t v9 = v20;
    }
LABEL_46:
    if (v9 < v3)
    {
      if (__OFSUB__(v9, v13)) {
        goto LABEL_151;
      }
      if (v9 - v13 < v105) {
        break;
      }
    }
LABEL_67:
    if (v9 < v13) {
      goto LABEL_146;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v11 = sub_25A5FD2A0(0, *((void *)v11 + 2) + 1, 1, v11);
    }
    unint64_t v41 = *((void *)v11 + 2);
    unint64_t v40 = *((void *)v11 + 3);
    unint64_t v12 = v41 + 1;
    if (v41 >= v40 >> 1) {
      uint64_t v11 = sub_25A5FD2A0((char *)(v40 > 1), v41 + 1, 1, v11);
    }
    *((void *)v11 + 2) = v12;
    unint64_t v42 = v11 + 32;
    uint64_t v43 = &v11[16 * v41 + 32];
    *(void *)uint64_t v43 = v13;
    *((void *)v43 + 1) = v9;
    if (v41)
    {
      uint64_t v107 = v9;
      while (1)
      {
        unint64_t v44 = v12 - 1;
        if (v12 >= 4)
        {
          unsigned int v49 = &v42[16 * v12];
          uint64_t v50 = *((void *)v49 - 8);
          uint64_t v51 = *((void *)v49 - 7);
          BOOL v55 = __OFSUB__(v51, v50);
          uint64_t v52 = v51 - v50;
          if (v55) {
            goto LABEL_135;
          }
          uint64_t v54 = *((void *)v49 - 6);
          uint64_t v53 = *((void *)v49 - 5);
          BOOL v55 = __OFSUB__(v53, v54);
          uint64_t v47 = v53 - v54;
          char v48 = v55;
          if (v55) {
            goto LABEL_136;
          }
          unint64_t v56 = v12 - 2;
          uint64_t v57 = &v42[16 * v12 - 32];
          uint64_t v59 = *(void *)v57;
          uint64_t v58 = *((void *)v57 + 1);
          BOOL v55 = __OFSUB__(v58, v59);
          uint64_t v60 = v58 - v59;
          if (v55) {
            goto LABEL_138;
          }
          BOOL v55 = __OFADD__(v47, v60);
          uint64_t v61 = v47 + v60;
          if (v55) {
            goto LABEL_141;
          }
          if (v61 >= v52)
          {
            v79 = &v42[16 * v44];
            uint64_t v81 = *(void *)v79;
            uint64_t v80 = *((void *)v79 + 1);
            BOOL v55 = __OFSUB__(v80, v81);
            uint64_t v82 = v80 - v81;
            if (v55) {
              goto LABEL_145;
            }
            BOOL v72 = v47 < v82;
            goto LABEL_105;
          }
        }
        else
        {
          if (v12 != 3)
          {
            uint64_t v73 = *((void *)v11 + 4);
            uint64_t v74 = *((void *)v11 + 5);
            BOOL v55 = __OFSUB__(v74, v73);
            uint64_t v66 = v74 - v73;
            char v67 = v55;
            goto LABEL_99;
          }
          uint64_t v46 = *((void *)v11 + 4);
          uint64_t v45 = *((void *)v11 + 5);
          BOOL v55 = __OFSUB__(v45, v46);
          uint64_t v47 = v45 - v46;
          char v48 = v55;
        }
        if (v48) {
          goto LABEL_137;
        }
        unint64_t v56 = v12 - 2;
        long long v62 = &v42[16 * v12 - 32];
        uint64_t v64 = *(void *)v62;
        uint64_t v63 = *((void *)v62 + 1);
        BOOL v65 = __OFSUB__(v63, v64);
        uint64_t v66 = v63 - v64;
        char v67 = v65;
        if (v65) {
          goto LABEL_140;
        }
        v68 = &v42[16 * v44];
        uint64_t v70 = *(void *)v68;
        uint64_t v69 = *((void *)v68 + 1);
        BOOL v55 = __OFSUB__(v69, v70);
        uint64_t v71 = v69 - v70;
        if (v55) {
          goto LABEL_143;
        }
        if (__OFADD__(v66, v71)) {
          goto LABEL_144;
        }
        if (v66 + v71 >= v47)
        {
          BOOL v72 = v47 < v71;
LABEL_105:
          if (v72) {
            unint64_t v44 = v56;
          }
          goto LABEL_107;
        }
LABEL_99:
        if (v67) {
          goto LABEL_139;
        }
        v75 = &v42[16 * v44];
        uint64_t v77 = *(void *)v75;
        uint64_t v76 = *((void *)v75 + 1);
        BOOL v55 = __OFSUB__(v76, v77);
        uint64_t v78 = v76 - v77;
        if (v55) {
          goto LABEL_142;
        }
        if (v78 < v66) {
          goto LABEL_15;
        }
LABEL_107:
        unint64_t v83 = v44 - 1;
        if (v44 - 1 >= v12)
        {
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
          goto LABEL_154;
        }
        uint64_t v84 = v10;
        if (!v10) {
          goto LABEL_157;
        }
        v85 = v11;
        v86 = &v42[16 * v83];
        uint64_t v87 = *(void *)v86;
        v88 = v42;
        unint64_t v89 = v44;
        v90 = &v42[16 * v44];
        uint64_t v91 = *((void *)v90 + 1);
        uint64_t v92 = v84;
        sub_25A55A810((char *)(v84 + 16 * *(void *)v86), (char *)(v84 + 16 * *(void *)v90), v84 + 16 * v91, __dst);
        if (v1) {
          goto LABEL_115;
        }
        if (v91 < v87) {
          goto LABEL_132;
        }
        if (v89 > *((void *)v85 + 2)) {
          goto LABEL_133;
        }
        *(void *)v86 = v87;
        *(void *)&v88[16 * v83 + 8] = v91;
        unint64_t v93 = *((void *)v85 + 2);
        if (v89 >= v93) {
          goto LABEL_134;
        }
        uint64_t v11 = v85;
        unint64_t v12 = v93 - 1;
        memmove(v90, v90 + 16, 16 * (v93 - 1 - v89));
        unint64_t v42 = v88;
        *((void *)v85 + 2) = v93 - 1;
        uint64_t v10 = v92;
        uint64_t v9 = v107;
        if (v93 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v12 = 1;
LABEL_15:
    uint64_t v3 = v106;
    if (v9 >= v106)
    {
      uint64_t v8 = v104;
      goto LABEL_118;
    }
  }
  if (__OFADD__(v13, v105)) {
    goto LABEL_153;
  }
  if (v13 + v105 >= v3) {
    uint64_t v32 = v3;
  }
  else {
    uint64_t v32 = v13 + v105;
  }
  if (v32 >= v13)
  {
    if (v9 != v32)
    {
      uint64_t v33 = (void *)(v10 + 16 * v9);
      do
      {
        uint64_t v34 = (uint64_t *)(v10 + 16 * v9);
        uint64_t v35 = *v34;
        uint64_t v36 = v34[1];
        uint64_t v37 = v13;
        uint64_t v38 = v33;
        do
        {
          BOOL v39 = v35 == *(v38 - 2) && v36 == *(v38 - 1);
          if (v39 || (sub_25A6233B0() & 1) == 0) {
            break;
          }
          if (!v10) {
            goto LABEL_156;
          }
          uint64_t v35 = *v38;
          uint64_t v36 = v38[1];
          *(_OWORD *)uint64_t v38 = *((_OWORD *)v38 - 1);
          *(v38 - 1) = v36;
          *(v38 - 2) = v35;
          v38 -= 2;
          ++v37;
        }
        while (v9 != v37);
        ++v9;
        v33 += 2;
      }
      while (v9 != v32);
      uint64_t v9 = v32;
    }
    goto LABEL_67;
  }
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  __break(1u);
LABEL_160:
  uint64_t result = sub_25A623280();
  __break(1u);
  return result;
}

uint64_t sub_25A55A05C(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_25A623340();
  uint64_t v98 = v3;
  if (result < v3)
  {
    if (v3 >= 0) {
      uint64_t v5 = v3;
    }
    else {
      uint64_t v5 = v3 + 1;
    }
    if (v3 < -1) {
      goto LABEL_150;
    }
    uint64_t v99 = v3 - 2;
    uint64_t v95 = a1;
    uint64_t v96 = result;
    if (v3 < 2)
    {
      size_t v14 = (char *)MEMORY[0x263F8EE78];
      unint64_t v101 = (char *)(MEMORY[0x263F8EE78] + 32);
      uint64_t v97 = MEMORY[0x263F8EE78];
      if (v3 != 1)
      {
        unint64_t v27 = *(void *)(MEMORY[0x263F8EE78] + 16);
LABEL_107:
        if (v27 >= 2)
        {
          uint64_t v85 = *v95;
          do
          {
            unint64_t v86 = v27 - 2;
            if (v27 < 2) {
              goto LABEL_135;
            }
            if (!v85) {
              goto LABEL_149;
            }
            uint64_t v87 = v14;
            v88 = v14 + 32;
            uint64_t v89 = *(void *)&v14[16 * v86 + 32];
            uint64_t v90 = *(void *)&v14[16 * v27 + 24];
            sub_25A55AAAC((char *)(v85 + v89), (char *)(v85 + *(void *)&v88[16 * v27 - 16]), v85 + v90, v101);
            if (v1) {
              break;
            }
            if (v90 < v89) {
              goto LABEL_136;
            }
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v87 = sub_25A5FD4FC((uint64_t)v87);
            }
            if (v86 >= *((void *)v87 + 2)) {
              goto LABEL_137;
            }
            uint64_t v91 = v87;
            uint64_t v92 = v87 + 32;
            unint64_t v93 = &v87[16 * v86 + 32];
            *(void *)unint64_t v93 = v89;
            *((void *)v93 + 1) = v90;
            unint64_t v94 = *((void *)v87 + 2);
            if (v27 > v94) {
              goto LABEL_138;
            }
            size_t v14 = v91;
            memmove(&v92[16 * v27 - 16], &v92[16 * v27], 16 * (v94 - v27));
            *((void *)v14 + 2) = v94 - 1;
            unint64_t v27 = v94 - 1;
          }
          while (v94 > 2);
        }
LABEL_118:
        swift_bridgeObjectRelease();
        *(void *)(v97 + 16) = 0;
        return swift_bridgeObjectRelease();
      }
    }
    else
    {
      uint64_t v6 = v5 >> 1;
      uint64_t v7 = sub_25A622F20();
      *(void *)(v7 + 16) = v6;
      uint64_t v3 = v98;
      uint64_t v97 = v7;
      unint64_t v101 = (char *)(v7 + 32);
    }
    uint64_t v15 = 0;
    uint64_t v16 = *a1;
    size_t v14 = (char *)MEMORY[0x263F8EE78];
    while (1)
    {
      uint64_t v17 = v15++;
      if (v15 >= v3) {
        goto LABEL_36;
      }
      int v18 = sub_25A5594F0(*(unsigned char *)(v16 + v15), *(unsigned char *)(v16 + v17));
      if (v1) {
        goto LABEL_118;
      }
      int v19 = v18;
      uint64_t v15 = v17 + 2;
      uint64_t v20 = v17;
      if (v17 + 2 >= v3) {
        goto LABEL_26;
      }
      do
      {
        if ((v19 ^ sub_25A5594F0(*(unsigned char *)(v16 + v20 + 2), *(unsigned char *)(v16 + v20 + 1))))
        {
          uint64_t v15 = v20 + 2;
          if (v19) {
            goto LABEL_27;
          }
          goto LABEL_36;
        }
        ++v20;
      }
      while (v99 != v20);
      uint64_t v15 = v3;
LABEL_26:
      if (v19)
      {
LABEL_27:
        if (v15 >= v17)
        {
          if (v17 < v15)
          {
            uint64_t v21 = v15 - 1;
            uint64_t v22 = v17;
            while (1)
            {
              if (v22 != v21)
              {
                if (!v16) {
                  goto LABEL_148;
                }
                char v23 = *(unsigned char *)(v16 + v22);
                *(unsigned char *)(v16 + v22) = *(unsigned char *)(v16 + v21);
                *(unsigned char *)(v16 + v21) = v23;
              }
              BOOL v58 = ++v22 < v21--;
              if (!v58) {
                goto LABEL_36;
              }
            }
          }
          goto LABEL_36;
        }
LABEL_144:
        __break(1u);
LABEL_145:
        __break(1u);
LABEL_146:
        __break(1u);
LABEL_147:
        __break(1u);
LABEL_148:
        __break(1u);
LABEL_149:
        __break(1u);
LABEL_150:
        uint64_t result = sub_25A623280();
        __break(1u);
        return result;
      }
LABEL_36:
      if (v15 >= v3) {
        goto LABEL_153;
      }
      if (__OFSUB__(v15, v17)) {
        goto LABEL_141;
      }
      if (v15 - v17 >= v96) {
        goto LABEL_153;
      }
      if (__OFADD__(v17, v96)) {
        goto LABEL_142;
      }
      if (v17 + v96 >= v3) {
        uint64_t v24 = v3;
      }
      else {
        uint64_t v24 = v17 + v96;
      }
      if (v24 < v17)
      {
LABEL_143:
        __break(1u);
        goto LABEL_144;
      }
      if (v15 == v24)
      {
LABEL_153:
        if (v15 < v17) {
          goto LABEL_139;
        }
      }
      else
      {
        v79 = v14;
        uint64_t v80 = (char *)(v16 + v15);
        do
        {
          char v81 = *(unsigned char *)(v16 + v15);
          uint64_t v82 = v17;
          unint64_t v83 = v80;
          do
          {
            char v84 = sub_25A5594F0(v81 & 1, *(v83 - 1));
            if (v1) {
              goto LABEL_118;
            }
            if ((v84 & 1) == 0) {
              break;
            }
            if (!v16) {
              goto LABEL_147;
            }
            char v81 = *v83;
            *unint64_t v83 = *(v83 - 1);
            *(v83 - 1) = v81;
            ++v82;
            --v83;
          }
          while (v15 != v82);
          ++v15;
          ++v80;
        }
        while (v15 != v24);
        uint64_t v15 = v24;
        size_t v14 = v79;
        if (v24 < v17) {
          goto LABEL_139;
        }
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        size_t v14 = sub_25A5FD2A0(0, *((void *)v14 + 2) + 1, 1, v14);
      }
      unint64_t v26 = *((void *)v14 + 2);
      unint64_t v25 = *((void *)v14 + 3);
      unint64_t v27 = v26 + 1;
      if (v26 >= v25 >> 1) {
        size_t v14 = sub_25A5FD2A0((char *)(v25 > 1), v26 + 1, 1, v14);
      }
      *((void *)v14 + 2) = v27;
      uint64_t v28 = v14 + 32;
      uint64_t v29 = &v14[16 * v26 + 32];
      *(void *)uint64_t v29 = v17;
      *((void *)v29 + 1) = v15;
      if (v26) {
        break;
      }
      unint64_t v27 = 1;
LABEL_94:
      uint64_t v3 = v98;
      if (v15 >= v98) {
        goto LABEL_107;
      }
    }
    uint64_t v100 = v15;
    while (1)
    {
      unint64_t v30 = v27 - 1;
      if (v27 >= 4)
      {
        uint64_t v35 = &v28[16 * v27];
        uint64_t v36 = *((void *)v35 - 8);
        uint64_t v37 = *((void *)v35 - 7);
        BOOL v41 = __OFSUB__(v37, v36);
        uint64_t v38 = v37 - v36;
        if (v41) {
          goto LABEL_124;
        }
        uint64_t v40 = *((void *)v35 - 6);
        uint64_t v39 = *((void *)v35 - 5);
        BOOL v41 = __OFSUB__(v39, v40);
        uint64_t v33 = v39 - v40;
        char v34 = v41;
        if (v41) {
          goto LABEL_125;
        }
        unint64_t v42 = v27 - 2;
        uint64_t v43 = &v28[16 * v27 - 32];
        uint64_t v45 = *(void *)v43;
        uint64_t v44 = *((void *)v43 + 1);
        BOOL v41 = __OFSUB__(v44, v45);
        uint64_t v46 = v44 - v45;
        if (v41) {
          goto LABEL_127;
        }
        BOOL v41 = __OFADD__(v33, v46);
        uint64_t v47 = v33 + v46;
        if (v41) {
          goto LABEL_130;
        }
        if (v47 >= v38)
        {
          BOOL v65 = &v28[16 * v30];
          uint64_t v67 = *(void *)v65;
          uint64_t v66 = *((void *)v65 + 1);
          BOOL v41 = __OFSUB__(v66, v67);
          uint64_t v68 = v66 - v67;
          if (v41) {
            goto LABEL_134;
          }
          BOOL v58 = v33 < v68;
          goto LABEL_83;
        }
      }
      else
      {
        if (v27 != 3)
        {
          uint64_t v59 = *((void *)v14 + 4);
          uint64_t v60 = *((void *)v14 + 5);
          BOOL v41 = __OFSUB__(v60, v59);
          uint64_t v52 = v60 - v59;
          char v53 = v41;
          goto LABEL_77;
        }
        uint64_t v32 = *((void *)v14 + 4);
        uint64_t v31 = *((void *)v14 + 5);
        BOOL v41 = __OFSUB__(v31, v32);
        uint64_t v33 = v31 - v32;
        char v34 = v41;
      }
      if (v34) {
        goto LABEL_126;
      }
      unint64_t v42 = v27 - 2;
      char v48 = &v28[16 * v27 - 32];
      uint64_t v50 = *(void *)v48;
      uint64_t v49 = *((void *)v48 + 1);
      BOOL v51 = __OFSUB__(v49, v50);
      uint64_t v52 = v49 - v50;
      char v53 = v51;
      if (v51) {
        goto LABEL_129;
      }
      uint64_t v54 = &v28[16 * v30];
      uint64_t v56 = *(void *)v54;
      uint64_t v55 = *((void *)v54 + 1);
      BOOL v41 = __OFSUB__(v55, v56);
      uint64_t v57 = v55 - v56;
      if (v41) {
        goto LABEL_132;
      }
      if (__OFADD__(v52, v57)) {
        goto LABEL_133;
      }
      if (v52 + v57 >= v33)
      {
        BOOL v58 = v33 < v57;
LABEL_83:
        if (v58) {
          unint64_t v30 = v42;
        }
        goto LABEL_85;
      }
LABEL_77:
      if (v53) {
        goto LABEL_128;
      }
      uint64_t v61 = &v28[16 * v30];
      uint64_t v63 = *(void *)v61;
      uint64_t v62 = *((void *)v61 + 1);
      BOOL v41 = __OFSUB__(v62, v63);
      uint64_t v64 = v62 - v63;
      if (v41) {
        goto LABEL_131;
      }
      if (v64 < v52) {
        goto LABEL_94;
      }
LABEL_85:
      uint64_t v69 = v14;
      unint64_t v70 = v30 - 1;
      if (v30 - 1 >= v27)
      {
        __break(1u);
LABEL_121:
        __break(1u);
LABEL_122:
        __break(1u);
LABEL_123:
        __break(1u);
LABEL_124:
        __break(1u);
LABEL_125:
        __break(1u);
LABEL_126:
        __break(1u);
LABEL_127:
        __break(1u);
LABEL_128:
        __break(1u);
LABEL_129:
        __break(1u);
LABEL_130:
        __break(1u);
LABEL_131:
        __break(1u);
LABEL_132:
        __break(1u);
LABEL_133:
        __break(1u);
LABEL_134:
        __break(1u);
LABEL_135:
        __break(1u);
LABEL_136:
        __break(1u);
LABEL_137:
        __break(1u);
LABEL_138:
        __break(1u);
LABEL_139:
        __break(1u);
LABEL_140:
        __break(1u);
LABEL_141:
        __break(1u);
LABEL_142:
        __break(1u);
        goto LABEL_143;
      }
      if (!v16) {
        goto LABEL_146;
      }
      uint64_t v71 = v16;
      BOOL v72 = &v28[16 * v70];
      uint64_t v73 = *(void *)v72;
      uint64_t v74 = v28;
      v75 = &v28[16 * v30];
      uint64_t v76 = *((void *)v75 + 1);
      uint64_t v77 = v71;
      sub_25A55AAAC((char *)(v71 + *(void *)v72), (char *)(v71 + *(void *)v75), v71 + v76, v101);
      if (v1) {
        goto LABEL_118;
      }
      if (v76 < v73) {
        goto LABEL_121;
      }
      if (v30 > *((void *)v69 + 2)) {
        goto LABEL_122;
      }
      *(void *)BOOL v72 = v73;
      *(void *)&v74[16 * v70 + 8] = v76;
      unint64_t v78 = *((void *)v69 + 2);
      if (v30 >= v78) {
        goto LABEL_123;
      }
      size_t v14 = v69;
      unint64_t v27 = v78 - 1;
      memmove(v75, v75 + 16, 16 * (v78 - 1 - v30));
      uint64_t v28 = v74;
      *((void *)v69 + 2) = v78 - 1;
      uint64_t v16 = v77;
      uint64_t v15 = v100;
      if (v78 <= 2) {
        goto LABEL_94;
      }
    }
  }
  if (v3 < 0) {
    goto LABEL_140;
  }
  if ((unint64_t)v3 >= 2)
  {
    uint64_t v8 = 0;
    uint64_t v9 = *a1;
    for (uint64_t i = 1; i != v98; ++i)
    {
      char v11 = *(unsigned char *)(v9 + i);
      uint64_t v12 = v8;
      do
      {
        uint64_t v13 = v9 + v12;
        uint64_t result = sub_25A5594F0(v11 & 1, *(unsigned char *)(v9 + v12));
        if (v1) {
          return result;
        }
        if ((result & 1) == 0) {
          break;
        }
        if (!v9) {
          goto LABEL_145;
        }
        char v11 = *(unsigned char *)(v13 + 1);
        *(unsigned char *)(v13 + 1) = *(unsigned char *)(v9 + v12);
        *(unsigned char *)(v9 + v12--) = v11;
      }
      while (v12 != -1);
      ++v8;
    }
  }
  return result;
}

uint64_t sub_25A55A740(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v6 = result;
    uint64_t v7 = *a4;
    uint64_t v8 = *a4 + 16 * a3;
LABEL_5:
    uint64_t v9 = (uint64_t *)(v7 + 16 * v4);
    uint64_t result = *v9;
    uint64_t v10 = v9[1];
    uint64_t v11 = v6;
    uint64_t v12 = (uint64_t *)v8;
    while (1)
    {
      BOOL v13 = result == *(v12 - 2) && v10 == *(v12 - 1);
      if (v13 || (uint64_t result = sub_25A6233B0(), (result & 1) == 0))
      {
LABEL_4:
        ++v4;
        v8 += 16;
        if (v4 == a2) {
          return result;
        }
        goto LABEL_5;
      }
      if (!v7) {
        break;
      }
      uint64_t result = *v12;
      uint64_t v10 = v12[1];
      *(_OWORD *)uint64_t v12 = *((_OWORD *)v12 - 1);
      *(v12 - 1) = v10;
      *(v12 - 2) = result;
      v12 -= 2;
      if (v4 == ++v11) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_25A55A810(char *__src, char *a2, unint64_t a3, char *__dst)
{
  uint64_t v4 = __dst;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = a2 - __src;
  int64_t v9 = a2 - __src + 15;
  if (a2 - __src >= 0) {
    int64_t v9 = a2 - __src;
  }
  uint64_t v10 = v9 >> 4;
  uint64_t v11 = a3 - (void)a2;
  uint64_t v12 = a3 - (void)a2 + 15;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v12 = a3 - (void)a2;
  }
  uint64_t v13 = v12 >> 4;
  unint64_t v27 = __src;
  unint64_t v26 = __dst;
  if (v10 >= v12 >> 4)
  {
    if (v11 >= -15)
    {
      if (__dst != a2 || &a2[16 * v13] <= __dst) {
        memmove(__dst, a2, 16 * v13);
      }
      uint64_t v17 = &v4[16 * v13];
      unint64_t v25 = v17;
      unint64_t v27 = v6;
      if (v7 < v6 && v11 >= 16)
      {
        int v18 = (char *)(a3 - 16);
        int v19 = v6;
        while (1)
        {
          uint64_t v20 = v18 + 16;
          uint64_t v21 = *((void *)v19 - 2);
          uint64_t v22 = *((void *)v19 - 1);
          v19 -= 16;
          BOOL v23 = *((void *)v17 - 2) == v21 && *((void *)v17 - 1) == v22;
          if (v23 || (sub_25A6233B0() & 1) == 0)
          {
            unint64_t v25 = v17 - 16;
            if (v20 < v17 || v18 >= v17 || v20 != v17) {
              *(_OWORD *)int v18 = *((_OWORD *)v17 - 1);
            }
            int v19 = v6;
            v17 -= 16;
            if (v6 <= v7) {
              goto LABEL_50;
            }
          }
          else
          {
            if (v20 != v6 || v18 >= v6) {
              *(_OWORD *)int v18 = *(_OWORD *)v19;
            }
            unint64_t v27 = v19;
            if (v19 <= v7) {
              goto LABEL_50;
            }
          }
          v18 -= 16;
          uint64_t v6 = v19;
          if (v17 <= v4) {
            goto LABEL_50;
          }
        }
      }
      goto LABEL_50;
    }
  }
  else if (v8 >= -15)
  {
    if (__dst != __src || &__src[16 * v10] <= __dst) {
      memmove(__dst, __src, 16 * v10);
    }
    size_t v14 = &v4[16 * v10];
    unint64_t v25 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 16)
    {
      do
      {
        BOOL v15 = *(void *)v6 == *(void *)v4 && *((void *)v6 + 1) == *((void *)v4 + 1);
        if (v15 || (sub_25A6233B0() & 1) == 0)
        {
          if (v7 != v4) {
            *(_OWORD *)uint64_t v7 = *(_OWORD *)v4;
          }
          v4 += 16;
          unint64_t v26 = v4;
          uint64_t v16 = v6;
        }
        else
        {
          uint64_t v16 = v6 + 16;
          if (v7 < v6 || v7 >= v16 || v7 != v6) {
            *(_OWORD *)uint64_t v7 = *(_OWORD *)v6;
          }
        }
        v7 += 16;
        if (v4 >= v14) {
          break;
        }
        uint64_t v6 = v16;
      }
      while ((unint64_t)v16 < a3);
      unint64_t v27 = v7;
    }
LABEL_50:
    sub_25A5FD440((void **)&v27, (const void **)&v26, &v25);
    return 1;
  }
  uint64_t result = sub_25A6232A0();
  __break(1u);
  return result;
}

uint64_t sub_25A55AAAC(char *__src, char *a2, unint64_t a3, char *__dst)
{
  uint64_t v22 = __src;
  uint64_t v5 = __dst;
  uint64_t v7 = a2;
  int64_t v8 = __src;
  size_t v9 = a2 - __src;
  unint64_t v10 = a3 - (void)a2;
  uint64_t v21 = __dst;
  if (a2 - __src >= (uint64_t)(a3 - (void)a2))
  {
    if ((v10 & 0x8000000000000000) == 0)
    {
      if (__dst != a2 || a3 <= (unint64_t)__dst) {
        memmove(__dst, a2, a3 - (void)a2);
      }
      size_t v14 = &v5[v10];
      uint64_t v20 = &v5[v10];
      uint64_t v22 = v7;
      if (v8 < v7 && (char *)a3 != v7)
      {
        BOOL v15 = (char *)(a3 - 1);
        while (1)
        {
          char v16 = sub_25A5594F0(*(v14 - 1), *(v7 - 1));
          if (v4) {
            break;
          }
          uint64_t v17 = v15 + 1;
          if (v16)
          {
            int v18 = v7 - 1;
            if (v17 != v7 || v15 >= v7) {
              *BOOL v15 = *v18;
            }
            uint64_t v22 = v7 - 1;
            if (v18 <= v8) {
              goto LABEL_40;
            }
          }
          else
          {
            uint64_t v20 = v14 - 1;
            if (v17 < v14 || v15 >= v14 || v17 != v14) {
              *BOOL v15 = *(v14 - 1);
            }
            int v18 = v7;
            --v14;
            if (v7 <= v8) {
              goto LABEL_40;
            }
          }
          --v15;
          uint64_t v7 = v18;
          if (v14 <= v5) {
            goto LABEL_40;
          }
        }
      }
      goto LABEL_40;
    }
  }
  else if ((v9 & 0x8000000000000000) == 0)
  {
    if (__dst != __src || a2 <= __dst) {
      memmove(__dst, __src, v9);
    }
    uint64_t v11 = &v5[v9];
    uint64_t v20 = v11;
    if (v7 != v8 && (unint64_t)v7 < a3)
    {
      do
      {
        char v12 = sub_25A5594F0(*v7, *v5);
        if (v4) {
          break;
        }
        if (v12)
        {
          uint64_t v13 = v7 + 1;
          if (v8 < v7 || v8 >= v13 || v8 != v7) {
            *int64_t v8 = *v7;
          }
        }
        else
        {
          if (v8 != v5) {
            *int64_t v8 = *v5;
          }
          uint64_t v21 = ++v5;
          uint64_t v13 = v7;
        }
        uint64_t v22 = ++v8;
        if (v5 >= v11) {
          break;
        }
        uint64_t v7 = v13;
      }
      while ((unint64_t)v13 < a3);
    }
LABEL_40:
    sub_25A5FD39C((void **)&v22, (const void **)&v21, &v20);
    return 1;
  }
  uint64_t result = sub_25A6232A0();
  __break(1u);
  return result;
}

uint64_t sub_25A55AD0C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t result = sub_25A623460();
  if (v3)
  {
    uint64_t v5 = a2 + 48;
    do
    {
      v5 += 24;
      sub_25A623460();
      swift_bridgeObjectRetain();
      sub_25A622DF0();
      sub_25A622DF0();
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      --v3;
    }
    while (v3);
  }
  return result;
}

uint64_t sub_25A55ADD8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t result = sub_25A623460();
  if (v3)
  {
    uint64_t v5 = a2 + 56;
    do
    {
      if (*(void *)(v5 - 16))
      {
        sub_25A623470();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_25A622DF0();
      }
      else
      {
        sub_25A623470();
        swift_bridgeObjectRetain();
      }
      v5 += 32;
      swift_bridgeObjectRetain();
      sub_25A622DF0();
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease_n();
      --v3;
    }
    while (v3);
  }
  return result;
}

uint64_t sub_25A55AEB0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 16);
  uint64_t result = sub_25A623460();
  if (v4)
  {
    uint64_t v6 = a2 + 72;
    do
    {
      uint64_t v7 = *(void *)(v6 - 8);
      if (*(void *)(v6 - 32))
      {
        sub_25A623470();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_25A622DF0();
      }
      else
      {
        sub_25A623470();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      swift_bridgeObjectRetain();
      sub_25A622DF0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_25A55AFD4(a1, v7);
      swift_bridgeObjectRelease();
      sub_25A623470();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      v6 += 48;
      --v4;
    }
    while (v4);
  }
  return result;
}

uint64_t sub_25A55AFD4(uint64_t a1, uint64_t a2)
{
  sub_25A6234A0();
  uint64_t v3 = a2 + 56;
  uint64_t v4 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  uint64_t v6 = v5 & *(void *)(a2 + 56);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v9 = 0;
  int64_t v10 = 0;
  while (1)
  {
    if (v6)
    {
      v6 &= v6 - 1;
      goto LABEL_5;
    }
    if (__OFADD__(v10++, 1)) {
      goto LABEL_19;
    }
    if (v10 >= v7)
    {
LABEL_17:
      swift_release();
      return sub_25A623460();
    }
    uint64_t v13 = *(void *)(v3 + 8 * v10);
    if (!v13) {
      break;
    }
LABEL_16:
    uint64_t v6 = (v13 - 1) & v13;
LABEL_5:
    sub_25A623450();
    swift_bridgeObjectRetain();
    sub_25A622DF0();
    uint64_t v11 = sub_25A6234A0();
    uint64_t result = swift_bridgeObjectRelease();
    v9 ^= v11;
  }
  int64_t v14 = v10 + 1;
  if (v10 + 1 >= v7) {
    goto LABEL_17;
  }
  uint64_t v13 = *(void *)(v3 + 8 * v14);
  if (v13)
  {
    ++v10;
    goto LABEL_16;
  }
  while (1)
  {
    int64_t v10 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v10 >= v7) {
      goto LABEL_17;
    }
    uint64_t v13 = *(void *)(v3 + 8 * v10);
    ++v14;
    if (v13) {
      goto LABEL_16;
    }
  }
  __break(1u);
LABEL_19:
  __break(1u);
  return result;
}

uint64_t sub_25A55B16C(uint64_t a1, uint64_t a2)
{
  sub_25A6234A0();
  uint64_t v3 = a2 + 56;
  uint64_t v4 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  uint64_t v6 = v5 & *(void *)(a2 + 56);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v9 = 0;
  int64_t v10 = 0;
  while (1)
  {
    if (v6)
    {
      v6 &= v6 - 1;
      goto LABEL_5;
    }
    if (__OFADD__(v10++, 1)) {
      goto LABEL_19;
    }
    if (v10 >= v7)
    {
LABEL_17:
      swift_release();
      return sub_25A623460();
    }
    uint64_t v12 = *(void *)(v3 + 8 * v10);
    if (!v12) {
      break;
    }
LABEL_16:
    uint64_t v6 = (v12 - 1) & v12;
LABEL_5:
    sub_25A623450();
    sub_25A622DF0();
    swift_bridgeObjectRelease();
    uint64_t result = sub_25A6234A0();
    v9 ^= result;
  }
  int64_t v13 = v10 + 1;
  if (v10 + 1 >= v7) {
    goto LABEL_17;
  }
  uint64_t v12 = *(void *)(v3 + 8 * v13);
  if (v12)
  {
    ++v10;
    goto LABEL_16;
  }
  while (1)
  {
    int64_t v10 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v10 >= v7) {
      goto LABEL_17;
    }
    uint64_t v12 = *(void *)(v3 + 8 * v10);
    ++v13;
    if (v12) {
      goto LABEL_16;
    }
  }
  __break(1u);
LABEL_19:
  __break(1u);
  return result;
}

uint64_t sub_25A55B31C(uint64_t result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 56;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 56);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    *uint64_t v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    uint64_t v20 = (void *)(*(void *)(a4 + 48) + 16 * v16);
    uint64_t v21 = v20[1];
    *uint64_t v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 2;
    uint64_t result = swift_bridgeObjectRetain();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

void *sub_25A55B51C(void *result, unsigned char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4 + 56;
  uint64_t v5 = -1;
  uint64_t v6 = -1 << *(unsigned char *)(a4 + 32);
  if (-v6 < 64) {
    uint64_t v5 = ~(-1 << -(char)v6);
  }
  unint64_t v7 = v5 & *(void *)(a4 + 56);
  if (!a2)
  {
    int64_t v8 = 0;
    a3 = 0;
LABEL_35:
    *uint64_t result = a4;
    result[1] = v4;
    result[2] = ~v6;
    result[3] = v8;
    result[4] = v7;
    return (void *)a3;
  }
  if (!a3)
  {
    int64_t v8 = 0;
    goto LABEL_35;
  }
  if (a3 < 0)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  int64_t v8 = 0;
  uint64_t v9 = 0;
  int64_t v10 = (unint64_t)(63 - v6) >> 6;
  while (v7)
  {
    unint64_t v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    unint64_t v12 = v11 | (v8 << 6);
LABEL_8:
    ++v9;
    *a2++ = *(unsigned char *)(*(void *)(a4 + 48) + v12);
    if (v9 == a3) {
      goto LABEL_35;
    }
  }
  int64_t v13 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_37;
  }
  if (v13 >= v10) {
    goto LABEL_30;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v13);
  if (v14) {
    goto LABEL_19;
  }
  v8 += 2;
  if (v13 + 1 >= v10)
  {
    unint64_t v7 = 0;
    int64_t v8 = v13;
    goto LABEL_34;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v8);
  if (v14)
  {
LABEL_15:
    int64_t v13 = v8;
LABEL_19:
    unint64_t v16 = __clz(__rbit64(v14));
    unint64_t v7 = (v14 - 1) & v14;
    unint64_t v12 = v16 + (v13 << 6);
    int64_t v8 = v13;
    goto LABEL_8;
  }
  int64_t v15 = v13 + 2;
  if (v13 + 2 >= v10) {
    goto LABEL_30;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v15);
  if (v14)
  {
LABEL_18:
    int64_t v13 = v15;
    goto LABEL_19;
  }
  int64_t v8 = v13 + 3;
  if (v13 + 3 >= v10)
  {
    unint64_t v7 = 0;
    int64_t v8 = v13 + 2;
    goto LABEL_34;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v8);
  if (v14) {
    goto LABEL_15;
  }
  int64_t v15 = v13 + 4;
  if (v13 + 4 >= v10)
  {
LABEL_30:
    unint64_t v7 = 0;
LABEL_34:
    a3 = v9;
    goto LABEL_35;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v15);
  if (v14) {
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v13 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v13 >= v10)
    {
      unint64_t v7 = 0;
      int64_t v8 = v10 - 1;
      goto LABEL_34;
    }
    unint64_t v14 = *(void *)(v4 + 8 * v13);
    ++v15;
    if (v14) {
      goto LABEL_19;
    }
  }
LABEL_38:
  __break(1u);
  return result;
}

void *sub_25A55B6B0(void *result, void *a2, uint64_t a3, uint64_t a4, void (*a5)(void *__return_ptr, uint64_t *), uint64_t a6)
{
  if (!a2)
  {
LABEL_11:
    uint64_t v8 = 0;
    goto LABEL_15;
  }
  uint64_t v8 = a3;
  if (!a3)
  {
LABEL_15:
    *uint64_t result = a4;
    result[1] = v8;
    result[2] = a5;
    result[3] = a6;
    return (void *)v8;
  }
  if ((a3 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = *(void *)(a4 + 16);
    if (v9)
    {
      int64_t v10 = a2;
      unint64_t v18 = result;
      unint64_t v11 = (long long *)(a4 + 40);
      unint64_t v12 = 1;
      while (1)
      {
        uint64_t v13 = *((void *)v11 + 2);
        uint64_t v14 = *((void *)v11 + 3);
        char v15 = *((unsigned char *)v11 + 32);
        uint64_t v21 = *((void *)v11 - 1);
        long long v22 = *v11;
        uint64_t v23 = v13;
        uint64_t v24 = v14;
        char v25 = v15;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        a5(v20, &v21);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t result = (void *)swift_bridgeObjectRelease();
        uint64_t v16 = v20[1];
        *int64_t v10 = v20[0];
        v10[1] = v16;
        if (v8 == v12) {
          break;
        }
        if (v9 == v12)
        {
          uint64_t v8 = v9;
          break;
        }
        v11 += 3;
        v10 += 2;
        if (v12++ >= *(void *)(a4 + 16))
        {
          __break(1u);
          goto LABEL_11;
        }
      }
      uint64_t result = v18;
    }
    else
    {
      uint64_t v8 = 0;
    }
    goto LABEL_15;
  }
  __break(1u);
  return result;
}

void *sub_25A55B7F4(void *result, void *a2, uint64_t a3, uint64_t a4, void (*a5)(void *__return_ptr, uint64_t *), uint64_t a6)
{
  if (!a2)
  {
LABEL_10:
    a3 = 0;
    goto LABEL_14;
  }
  if (!a3)
  {
LABEL_14:
    *uint64_t result = a4;
    result[1] = a3;
    result[2] = a5;
    result[3] = a6;
    return (void *)a3;
  }
  if ((a3 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = *(void *)(a4 + 16);
    if (v9)
    {
      int64_t v10 = a2;
      uint64_t v18 = a3;
      int64_t v19 = result;
      unint64_t v11 = 0;
      unint64_t v12 = (void *)(a4 + 56);
      uint64_t v13 = a3 - 1;
      uint64_t v17 = *(void *)(a4 + 16);
      uint64_t v14 = v9 - 1;
      while (1)
      {
        uint64_t v15 = *v12;
        uint64_t v21 = *(v12 - 3);
        long long v22 = *((_OWORD *)v12 - 1);
        uint64_t v23 = v15;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        a5(v20, &v21);
        swift_bridgeObjectRelease();
        uint64_t result = (void *)swift_bridgeObjectRelease();
        uint64_t v16 = v20[1];
        *int64_t v10 = v20[0];
        v10[1] = v16;
        if (v13 == v11)
        {
          a3 = v18;
          uint64_t result = v19;
          goto LABEL_14;
        }
        if (v14 == v11) {
          break;
        }
        ++v11;
        v12 += 4;
        v10 += 2;
        if (v11 >= *(void *)(a4 + 16))
        {
          __break(1u);
          goto LABEL_10;
        }
      }
      a3 = v17;
      uint64_t result = v19;
    }
    else
    {
      a3 = 0;
    }
    goto LABEL_14;
  }
  __break(1u);
  return result;
}

uint64_t sub_25A55B924()
{
  void (*v8)(uint64_t *__return_ptr, uint64_t *);
  long long v9;
  uint64_t v10;
  uint64_t v11;
  long long v12;
  uint64_t v13;
  uint64_t v14;
  char v15;

  unint64_t v1 = v0[1];
  unint64_t v2 = *(void *)(*v0 + 16);
  if (v1 == v2) {
    return 0;
  }
  if (v1 >= v2)
  {
    __break(1u);
  }
  else
  {
    uint64_t v4 = *v0 + 48 * v1;
    char v5 = *(unsigned char *)(v4 + 72);
    uint64_t v7 = *(void *)(v4 + 56);
    uint64_t v6 = *(void *)(v4 + 64);
    uint64_t v8 = (void (*)(uint64_t *__return_ptr, uint64_t *))v0[2];
    unint64_t v11 = *(void *)(v4 + 32);
    uint64_t v9 = *(_OWORD *)(v4 + 40);
    v0[1] = v1 + 1;
    unint64_t v12 = v9;
    uint64_t v13 = v7;
    uint64_t v14 = v6;
    uint64_t v15 = v5;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v8(&v10, &v11);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v10;
  }
  return result;
}

uint64_t sub_25A55B9FC()
{
  void (*v7)(uint64_t *__return_ptr, uint64_t *);
  long long v8;
  uint64_t v9;
  uint64_t v10;
  long long v11;
  uint64_t v12;

  unint64_t v1 = v0[1];
  unint64_t v2 = *(void *)(*v0 + 16);
  if (v1 == v2) {
    return 0;
  }
  if (v1 >= v2)
  {
    __break(1u);
  }
  else
  {
    unint64_t v4 = v1 + 1;
    uint64_t v5 = *v0 + 32 * v1;
    uint64_t v6 = *(void *)(v5 + 56);
    uint64_t v7 = (void (*)(uint64_t *__return_ptr, uint64_t *))v0[2];
    int64_t v10 = *(void *)(v5 + 32);
    uint64_t v8 = *(_OWORD *)(v5 + 40);
    v0[1] = v4;
    unint64_t v11 = v8;
    unint64_t v12 = v6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v7(&v9, &v10);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v9;
  }
  return result;
}

uint64_t _s19PreviewsMessagingOS22BuiltTargetDescriptionV15PlatformVersionV2eeoiySbAE_AEtFZ_0(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  uint64_t v4 = a1[3];
  uint64_t v3 = a1[4];
  uint64_t v5 = a1[5];
  uint64_t v6 = a2[2];
  uint64_t v7 = a2[3];
  uint64_t v8 = a2[4];
  uint64_t v9 = a2[5];
  if (*a1 == *a2 && a1[1] == a2[1] || (v10 = sub_25A6233B0(), uint64_t result = 0, (v10 & 1) != 0))
  {
    if (v2 == v6 && v4 == v7 || (v12 = sub_25A6233B0(), uint64_t result = 0, (v12 & 1) != 0))
    {
      if (v3 == v8 && v5 == v9)
      {
        return 1;
      }
      else
      {
        return sub_25A6233B0();
      }
    }
  }
  return result;
}

uint64_t _s19PreviewsMessagingOS22BuiltTargetDescriptionV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  int v2 = *(unsigned __int8 *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t v4 = *(void *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 48);
  uint64_t v37 = *(void *)(a1 + 56);
  uint64_t v39 = *(void *)(a1 + 40);
  uint64_t v40 = *(void *)(a1 + 64);
  uint64_t v35 = *(void *)(a1 + 72);
  uint64_t v38 = *(void *)(a1 + 80);
  uint64_t v32 = *(void *)(a1 + 88);
  uint64_t v30 = *(void *)(a1 + 96);
  uint64_t v28 = *(void **)(a1 + 104);
  uint64_t v26 = *(void *)(a1 + 112);
  uint64_t v24 = *(void **)(a1 + 120);
  uint64_t v22 = *(void *)(a1 + 128);
  int v20 = *(unsigned __int8 *)(a1 + 136);
  uint64_t v16 = *(void *)(a1 + 144);
  uint64_t v18 = *(void *)(a1 + 152);
  uint64_t v14 = *(void **)(a1 + 160);
  int v6 = *(unsigned __int8 *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  uint64_t v8 = *(void *)(a2 + 32);
  uint64_t v10 = *(void *)(a2 + 40);
  uint64_t v9 = *(void *)(a2 + 48);
  uint64_t v11 = *(void *)(a2 + 56);
  uint64_t v36 = *(void *)(a2 + 64);
  uint64_t v34 = *(void *)(a2 + 72);
  uint64_t v33 = *(void *)(a2 + 80);
  uint64_t v31 = *(void *)(a2 + 88);
  uint64_t v29 = *(void *)(a2 + 96);
  unint64_t v27 = *(void **)(a2 + 104);
  uint64_t v25 = *(void *)(a2 + 112);
  uint64_t v23 = *(void **)(a2 + 120);
  uint64_t v21 = *(void *)(a2 + 128);
  int v19 = *(unsigned __int8 *)(a2 + 136);
  uint64_t v15 = *(void *)(a2 + 144);
  uint64_t v17 = *(void *)(a2 + 152);
  uint64_t v13 = *(void **)(a2 + 160);
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8))
  {
    if (v2 != v6) {
      return 0;
    }
  }
  else if (sub_25A6233B0() & 1) == 0 || ((v2 ^ v6))
  {
    return 0;
  }
  if (v4)
  {
    if (!v8 || (v3 != v7 || v4 != v8) && (sub_25A6233B0() & 1) == 0) {
      return 0;
    }
  }
  else if (v8)
  {
    return 0;
  }
  if (!v5)
  {
    if (!v9) {
      goto LABEL_27;
    }
LABEL_41:
    sub_25A5527AC(v10, v9);
    sub_25A55285C(v39, v5);
    sub_25A55285C(v10, v9);
    return 0;
  }
  if (!v9)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    goto LABEL_41;
  }
  if ((v39 != v10 || v5 != v9) && (sub_25A6233B0() & 1) == 0
    || (v37 != v11 || v40 != v36) && (sub_25A6233B0() & 1) == 0
    || (v35 != v34 || v38 != v33) && (sub_25A6233B0() & 1) == 0)
  {
    return 0;
  }
LABEL_27:
  if ((sub_25A56755C(v32, v31) & 1) == 0
    || (sub_25A5676EC(v30, v29) & 1) == 0
    || (sub_25A5677CC(v28, v27) & 1) == 0
    || (sub_25A567894(v26, v25) & 1) == 0
    || (sub_25A5677CC(v24, v23) & 1) == 0
    || (sub_25A603690(v22, v21) & 1) == 0
    || ((v20 ^ v19) & 1) != 0)
  {
    return 0;
  }
  if (!v18)
  {
    if (!v17) {
      goto LABEL_44;
    }
    return 0;
  }
  if (!v17 || (v16 != v15 || v18 != v17) && (sub_25A6233B0() & 1) == 0) {
    return 0;
  }
LABEL_44:

  return sub_25A5677CC(v14, v13);
}

uint64_t _s19PreviewsMessagingOS26BuiltObjectFileDescriptionV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a2 + 8);
  if (!v4)
  {
    if (v5) {
      goto LABEL_17;
    }
    goto LABEL_10;
  }
  if (!v5) {
    goto LABEL_17;
  }
  BOOL v6 = *(void *)a1 == *(void *)a2 && v4 == v5;
  if (v6 || (v7 = sub_25A6233B0(), char v8 = 0, (v7 & 1) != 0))
  {
LABEL_10:
    if (*(void *)(a1 + 16) != *(void *)(a2 + 16) || *(void *)(a1 + 24) != *(void *)(a2 + 24))
    {
      char v10 = sub_25A6233B0();
      char v8 = 0;
      if ((v10 & 1) == 0) {
        return v8 & 1;
      }
    }
    if (sub_25A603408(*(void *)(a1 + 32), *(void *)(a2 + 32)))
    {
      char v8 = ((*(unsigned char *)(a1 + 40) & 1) == 0) ^ *(unsigned char *)(a2 + 40);
      return v8 & 1;
    }
LABEL_17:
    char v8 = 0;
  }
  return v8 & 1;
}

uint64_t _s19PreviewsMessagingOS29BuiltStaticArchiveDescriptionV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (!a2)
  {
    if (!a6)
    {
LABEL_9:
      if (a3 == a7 && a4 == a8) {
        return 1;
      }
      return sub_25A6233B0();
    }
    return 0;
  }
  if (!a6) {
    return 0;
  }
  if (a1 == a5 && a2 == a6) {
    goto LABEL_9;
  }
  char v12 = sub_25A6233B0();
  uint64_t result = 0;
  if (v12) {
    goto LABEL_9;
  }
  return result;
}

uint64_t sub_25A55C0C4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v8 = *(void *)(sub_25A622BA0() - 8);
    uint64_t v9 = a4 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    uint64_t v10 = *(void *)(v8 + 72);
    unint64_t v11 = v9 + v10 * a1;
    unint64_t v12 = a3 + v10 * v4;
    if (v11 >= v12 || v11 + v10 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v12;
    }
  }
  uint64_t result = sub_25A6232A0();
  __break(1u);
  return result;
}

uint64_t sub_25A55C21C(uint64_t a1, uint64_t a2)
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = MEMORY[0x263F8EE78];
  if (v2)
  {
    uint64_t v23 = MEMORY[0x263F8EE78];
    sub_25A559484(0, v2, 0);
    uint64_t v5 = a2;
    uint64_t v3 = v23;
    BOOL v6 = (unsigned char *)(a1 + 72);
    do
    {
      uint64_t v21 = *((void *)v6 - 5);
      uint64_t v22 = *((void *)v6 - 4);
      uint64_t v7 = *((void *)v6 - 3);
      uint64_t v8 = *((void *)v6 - 2);
      uint64_t v9 = *((void *)v6 - 1);
      char v20 = *v6;
      uint64_t v10 = *(void *)(v5 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v10)
      {
        swift_bridgeObjectRetain();
        unint64_t v11 = sub_25A56D114(v7, v8);
        uint64_t v12 = v8;
        if (v13)
        {
          uint64_t v14 = (uint64_t *)(*(void *)(a2 + 56) + 16 * v11);
          uint64_t v7 = *v14;
          uint64_t v12 = v14[1];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
        uint64_t v8 = v12;
        uint64_t v5 = a2;
      }
      unint64_t v16 = *(void *)(v23 + 16);
      unint64_t v15 = *(void *)(v23 + 24);
      if (v16 >= v15 >> 1)
      {
        sub_25A559484(v15 > 1, v16 + 1, 1);
        uint64_t v5 = a2;
      }
      *(void *)(v23 + 16) = v16 + 1;
      uint64_t v17 = v23 + 48 * v16;
      *(void *)(v17 + 32) = v21;
      *(void *)(v17 + 40) = v22;
      *(void *)(v17 + 48) = v7;
      *(void *)(v17 + 56) = v8;
      *(void *)(v17 + 64) = v9;
      *(unsigned char *)(v17 + 72) = v20;
      v6 += 48;
      --v2;
    }
    while (v2);
  }
  return v3;
}

uint64_t sub_25A55C394(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 40);
  uint64_t v3 = *(void *)(a1 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25A5527AC(v2, v3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_25A55C484(uint64_t a1, uint64_t a2)
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = MEMORY[0x263F8EE78];
  if (v2)
  {
    uint64_t v21 = MEMORY[0x263F8EE78];
    sub_25A559464(0, v2, 0);
    uint64_t v5 = a2;
    uint64_t v3 = v21;
    BOOL v6 = (uint64_t *)(a1 + 56);
    do
    {
      uint64_t v7 = *(v6 - 2);
      uint64_t v20 = *(v6 - 3);
      uint64_t v8 = *(v6 - 1);
      uint64_t v9 = *v6;
      uint64_t v10 = *(void *)(v5 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v10)
      {
        swift_bridgeObjectRetain();
        unint64_t v11 = sub_25A56D114(v8, v9);
        uint64_t v12 = v9;
        if (v13)
        {
          uint64_t v14 = (uint64_t *)(*(void *)(a2 + 56) + 16 * v11);
          uint64_t v8 = *v14;
          uint64_t v12 = v14[1];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
        uint64_t v9 = v12;
        uint64_t v5 = a2;
      }
      unint64_t v16 = *(void *)(v21 + 16);
      unint64_t v15 = *(void *)(v21 + 24);
      if (v16 >= v15 >> 1)
      {
        sub_25A559464(v15 > 1, v16 + 1, 1);
        uint64_t v5 = a2;
      }
      v6 += 4;
      *(void *)(v21 + 16) = v16 + 1;
      uint64_t v17 = (void *)(v21 + 32 * v16);
      v17[4] = v20;
      v17[5] = v7;
      v17[6] = v8;
      v17[7] = v9;
      --v2;
    }
    while (v2);
  }
  return v3;
}

unint64_t sub_25A55C5D8()
{
  unint64_t result = qword_26A4293E0;
  if (!qword_26A4293E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4293E0);
  }
  return result;
}

unint64_t sub_25A55C62C()
{
  unint64_t result = qword_26A429400;
  if (!qword_26A429400)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A429400);
  }
  return result;
}

unint64_t sub_25A55C680()
{
  unint64_t result = qword_26A429420;
  if (!qword_26A429420)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A429420);
  }
  return result;
}

uint64_t sub_25A55C6D4(unsigned char *a1, void *a2)
{
  uint64_t v3 = *(void **)(v2 + 16);
  *a1 = 0;
  uint64_t v4 = v3[1];
  *a2 = *v3;
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

unint64_t sub_25A55C6E8()
{
  unint64_t result = qword_26A429450;
  if (!qword_26A429450)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A429450);
  }
  return result;
}

uint64_t sub_25A55C73C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_25A55C7A0()
{
  unint64_t result = qword_26A429470;
  if (!qword_26A429470)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A429470);
  }
  return result;
}

unint64_t sub_25A55C7F4()
{
  unint64_t result = qword_26A429480;
  if (!qword_26A429480)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A429480);
  }
  return result;
}

unint64_t sub_25A55C848()
{
  unint64_t result = qword_26A429498;
  if (!qword_26A429498)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A429498);
  }
  return result;
}

unint64_t sub_25A55C89C()
{
  unint64_t result = qword_26A4294B0;
  if (!qword_26A4294B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4294B0);
  }
  return result;
}

unint64_t sub_25A55C8F0()
{
  unint64_t result = qword_26A4294B8;
  if (!qword_26A4294B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4294B8);
  }
  return result;
}

uint64_t sub_25A55C944(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_25A55C9B0(unsigned char *a1, void *a2)
{
  uint64_t v3 = *(void *)(v2 + 16);
  *a1 = 1;
  uint64_t v4 = *(void *)(v3 + 24);
  *a2 = *(void *)(v3 + 16);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

unint64_t sub_25A55C9C8()
{
  unint64_t result = qword_26A4294D0;
  if (!qword_26A4294D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4294D0);
  }
  return result;
}

uint64_t sub_25A55CA1C(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_25A55CA78(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_25A6232A0();
  __break(1u);
  return result;
}

uint64_t sub_25A55CB6C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 24 * a1 + 32;
    unint64_t v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_25A6232A0();
  __break(1u);
  return result;
}

uint64_t sub_25A55CC64(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_25A6232A0();
  __break(1u);
  return result;
}

uint64_t _s19PreviewsMessagingOS22BuiltTargetDescriptionV10LinkerFlagO1loiySbAE_AEtFZ_0(unsigned char *a1, unsigned char *a2)
{
  BOOL v2 = *a1 == 0;
  if (*a1) {
    uint64_t v3 = 1131045487;
  }
  else {
    uint64_t v3 = 0x64616F4C6C6C61;
  }
  if (v2) {
    unint64_t v4 = 0xE700000000000000;
  }
  else {
    unint64_t v4 = 0xE400000000000000;
  }
  if (*a2) {
    uint64_t v5 = 1131045487;
  }
  else {
    uint64_t v5 = 0x64616F4C6C6C61;
  }
  if (*a2) {
    unint64_t v6 = 0xE400000000000000;
  }
  else {
    unint64_t v6 = 0xE700000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v8 = 0;
  }
  else {
    char v8 = sub_25A6233B0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_25A55CDF8()
{
  unint64_t v0 = sub_25A6232B0();
  swift_bridgeObjectRelease();
  if (v0 >= 0xD) {
    return 13;
  }
  else {
    return v0;
  }
}

uint64_t sub_25A55CE44(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_25A6232A0();
  __break(1u);
  return result;
}

uint64_t sub_25A55CF38(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 48 * a1 + 32;
    unint64_t v6 = a3 + 48 * v4;
    if (v5 >= v6 || v5 + 48 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_25A6232A0();
  __break(1u);
  return result;
}

uint64_t sub_25A55D02C()
{
  unint64_t v0 = sub_25A6232B0();
  swift_bridgeObjectRelease();
  if (v0 >= 4) {
    return 4;
  }
  else {
    return v0;
  }
}

uint64_t sub_25A55D078@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v17 = &type metadata for BuiltObjectFileDescription.Key;
  unint64_t v5 = sub_25A55C9C8();
  unint64_t v18 = v5;
  v16[0] = 0;
  sub_25A622760();
  if (v2)
  {
    uint64_t v6 = sub_25A6227C0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
    uint64_t v8 = v19;
    uint64_t v7 = v20;
    uint64_t v17 = &type metadata for BuiltObjectFileDescription.Key;
    unint64_t v18 = v5;
    v16[0] = 1;
    sub_25A622710();
    uint64_t v13 = v8;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
    uint64_t v17 = &type metadata for BuiltObjectFileDescription.Key;
    unint64_t v18 = v5;
    v16[0] = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A4294D8);
    sub_25A55CA1C(&qword_26A4294E0, &qword_26A4294D8);
    sub_25A622760();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
    if (v21) {
      uint64_t v9 = v21;
    }
    else {
      uint64_t v9 = MEMORY[0x263F8EE88];
    }
    uint64_t v17 = &type metadata for BuiltObjectFileDescription.Key;
    unint64_t v18 = v5;
    v16[0] = 3;
    sub_25A622760();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
    char v11 = (v21 == 2) | v21;
    uint64_t v12 = sub_25A6227C0();
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(a1, v12);
    *(void *)a2 = v13;
    *(void *)(a2 + 8) = v7;
    *(void *)(a2 + 16) = v14;
    *(void *)(a2 + 24) = v15;
    *(void *)(a2 + 32) = v9;
    *(unsigned char *)(a2 + 40) = v11 & 1;
  }
  return result;
}

unint64_t sub_25A55D398()
{
  unint64_t result = qword_26A4294E8;
  if (!qword_26A4294E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4294E8);
  }
  return result;
}

uint64_t sub_25A55D3EC(uint64_t a1)
{
  uint64_t v9 = &type metadata for BuiltStaticArchiveDescription.Key;
  unint64_t v4 = sub_25A55D398();
  unint64_t v10 = v4;
  v8[0] = 0;
  sub_25A622760();
  if (v1)
  {
    uint64_t v5 = sub_25A6227C0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
    uint64_t v2 = v11;
    uint64_t v9 = &type metadata for BuiltStaticArchiveDescription.Key;
    unint64_t v10 = v4;
    v8[0] = 1;
    sub_25A622710();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
    uint64_t v7 = sub_25A6227C0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(a1, v7);
  }
  return v2;
}

uint64_t sub_25A55D58C()
{
  return sub_25A556BC0();
}

unint64_t sub_25A55D594()
{
  unint64_t result = qword_26A4294F0;
  if (!qword_26A4294F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4294F0);
  }
  return result;
}

uint64_t sub_25A55D5E8(unint64_t *a1)
{
  return sub_25A55795C(a1, *(void *)(v1 + 16));
}

uint64_t sub_25A55D5F0(unint64_t *a1)
{
  return sub_25A557F14(a1, *(void *)(v1 + 16));
}

uint64_t sub_25A55D5F8(uint64_t a1)
{
  return sub_25A5582D8(a1, *(void *)(v1 + 16));
}

uint64_t sub_25A55D600(uint64_t a1)
{
  return sub_25A558364(a1, *(void *)(v1 + 16));
}

unint64_t sub_25A55D608()
{
  unint64_t result = qword_26A429500;
  if (!qword_26A429500)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A429500);
  }
  return result;
}

uint64_t sub_25A55D65C(uint64_t a1)
{
  return sub_25A558464(a1, *(void *)(v1 + 16));
}

uint64_t sub_25A55D664(uint64_t a1)
{
  return a1;
}

uint64_t sub_25A55D690(uint64_t a1)
{
  return a1;
}

unint64_t sub_25A55D6BC()
{
  unint64_t result = qword_26A429508;
  if (!qword_26A429508)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A429508);
  }
  return result;
}

uint64_t sub_25A55D710(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 40);
  uint64_t v3 = *(void *)(a1 + 48);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_25A55285C(v2, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_25A55D7F8()
{
  return sub_25A558734();
}

unint64_t sub_25A55D804()
{
  unint64_t result = qword_26A429510;
  if (!qword_26A429510)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A429510);
  }
  return result;
}

unint64_t sub_25A55D85C()
{
  unint64_t result = qword_26A429518;
  if (!qword_26A429518)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A429518);
  }
  return result;
}

unint64_t sub_25A55D8B4()
{
  unint64_t result = qword_26A429520;
  if (!qword_26A429520)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A429520);
  }
  return result;
}

unint64_t sub_25A55D90C()
{
  unint64_t result = qword_26A429528;
  if (!qword_26A429528)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A429528);
  }
  return result;
}

unint64_t sub_25A55D964()
{
  unint64_t result = qword_26A429530;
  if (!qword_26A429530)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A429530);
  }
  return result;
}

unint64_t sub_25A55D9BC()
{
  unint64_t result = qword_26A429538;
  if (!qword_26A429538)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A429538);
  }
  return result;
}

unint64_t sub_25A55DA14()
{
  unint64_t result = qword_26A429540;
  if (!qword_26A429540)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A429540);
  }
  return result;
}

uint64_t sub_25A55DA68()
{
  return sub_25A55DAA4(&qword_26A429548, &qword_26A4294A0);
}

uint64_t sub_25A55DAA4(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t destroy for BuiltTargetDescription(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 48))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for BuiltTargetDescription(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  uint64_t v6 = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v6)
  {
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    *(void *)(a1 + 48) = v6;
    uint64_t v7 = *(void *)(a2 + 64);
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    *(void *)(a1 + 64) = v7;
    uint64_t v8 = *(void *)(a2 + 80);
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
    *(void *)(a1 + 80) = v8;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v9 = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 56) = v9;
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  }
  uint64_t v10 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v10;
  uint64_t v11 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v11;
  uint64_t v12 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v12;
  *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
  uint64_t v13 = *(void *)(a2 + 152);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = v13;
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for BuiltTargetDescription(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (_OWORD *)(a1 + 40);
  uint64_t v5 = (_OWORD *)(a2 + 40);
  uint64_t v6 = *(void *)(a2 + 48);
  if (*(void *)(a1 + 48))
  {
    if (v6)
    {
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_25A55DEE4(a1 + 40);
      long long v8 = *(_OWORD *)(a2 + 56);
      long long v7 = *(_OWORD *)(a2 + 72);
      *uint64_t v4 = *v5;
      *(_OWORD *)(a1 + 56) = v8;
      *(_OWORD *)(a1 + 72) = v7;
    }
  }
  else if (v6)
  {
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v9 = *v5;
    long long v10 = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 72) = v10;
    *uint64_t v4 = v9;
  }
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_25A55DEE4(uint64_t a1)
{
  return a1;
}

__n128 __swift_memcpy168_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  long long v4 = a2[3];
  long long v5 = a2[4];
  long long v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  __n128 result = (__n128)a2[7];
  long long v8 = a2[8];
  long long v9 = a2[9];
  *(void *)(a1 + 160) = *((void *)a2 + 20);
  *(_OWORD *)(a1 + 128) = v8;
  *(_OWORD *)(a1 + 144) = v9;
  *(__n128 *)(a1 + 112) = result;
  return result;
}

uint64_t assignWithTake for BuiltTargetDescription(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  if (!*(void *)(a1 + 48)) {
    goto LABEL_5;
  }
  uint64_t v6 = *(void *)(a2 + 48);
  if (!v6)
  {
    sub_25A55DEE4(a1 + 40);
LABEL_5:
    long long v9 = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 56) = v9;
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    goto LABEL_6;
  }
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v8;
  swift_bridgeObjectRelease();
LABEL_6:
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
  uint64_t v10 = *(void *)(a2 + 152);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = v10;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for BuiltTargetDescription(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 168)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for BuiltTargetDescription(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 168) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 168) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BuiltTargetDescription()
{
  return &type metadata for BuiltTargetDescription;
}

uint64_t destroy for BuiltObjectFileDescription()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for BuiltObjectFileDescription(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for BuiltObjectFileDescription(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  return a1;
}

__n128 __swift_memcpy41_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for BuiltObjectFileDescription(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for BuiltObjectFileDescription(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 41)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for BuiltObjectFileDescription(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 40) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 41) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 41) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BuiltObjectFileDescription()
{
  return &type metadata for BuiltObjectFileDescription;
}

uint64_t destroy for BuiltStaticArchiveDescription()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for BuiltStaticArchiveDescription(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for BuiltStaticArchiveDescription(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for BuiltStaticArchiveDescription(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for BuiltStaticArchiveDescription(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for BuiltStaticArchiveDescription(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BuiltStaticArchiveDescription()
{
  return &type metadata for BuiltStaticArchiveDescription;
}

uint64_t destroy for BuiltTargetDescription.PlatformVersion()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for BuiltTargetDescription.PlatformVersion(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for BuiltTargetDescription.PlatformVersion(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for BuiltTargetDescription.PlatformVersion(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for BuiltTargetDescription.PlatformVersion()
{
  return &type metadata for BuiltTargetDescription.PlatformVersion;
}

ValueMetadata *type metadata accessor for BuiltTargetDescription.LinkerFlag()
{
  return &type metadata for BuiltTargetDescription.LinkerFlag;
}

unsigned char *storeEnumTagSinglePayload for BuiltTargetDescription.PlatformVersion.Key(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *__n128 result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25A55E7DCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BuiltTargetDescription.PlatformVersion.Key()
{
  return &type metadata for BuiltTargetDescription.PlatformVersion.Key;
}

unsigned char *_s19PreviewsMessagingOS22BuiltTargetDescriptionV10LinkerFlagOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25A55E8E0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BuiltStaticArchiveDescription.Key()
{
  return &type metadata for BuiltStaticArchiveDescription.Key;
}

uint64_t getEnumTagSinglePayload for BuiltObjectFileDescription.Key(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 3 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 3) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 3;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v8 = v6 - 4;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for BuiltObjectFileDescription.Key(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *__n128 result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25A55EA74);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BuiltObjectFileDescription.Key()
{
  return &type metadata for BuiltObjectFileDescription.Key;
}

uint64_t getEnumTagSinglePayload for BuiltTargetDescription.Key(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF4) {
    goto LABEL_17;
  }
  if (a2 + 12 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 12) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 12;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 12;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 12;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xD;
  int v8 = v6 - 13;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for BuiltTargetDescription.Key(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 12 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 12) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF4) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF3)
  {
    unsigned int v6 = ((a2 - 244) >> 8) + 1;
    *__n128 result = a2 + 12;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25A55EC08);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 12;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BuiltTargetDescription.Key()
{
  return &type metadata for BuiltTargetDescription.Key;
}

unint64_t sub_25A55EC44()
{
  unint64_t result = qword_26A429550;
  if (!qword_26A429550)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A429550);
  }
  return result;
}

unint64_t sub_25A55EC9C()
{
  unint64_t result = qword_26A429558;
  if (!qword_26A429558)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A429558);
  }
  return result;
}

unint64_t sub_25A55ECF4()
{
  unint64_t result = qword_26A429560;
  if (!qword_26A429560)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A429560);
  }
  return result;
}

unint64_t sub_25A55ED4C()
{
  unint64_t result = qword_26A429568;
  if (!qword_26A429568)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A429568);
  }
  return result;
}

uint64_t sub_25A55EDA0()
{
  unint64_t v0 = sub_25A6232B0();
  swift_bridgeObjectRelease();
  if (v0 >= 3) {
    return 3;
  }
  else {
    return v0;
  }
}

unint64_t sub_25A55EDEC()
{
  unint64_t result = qword_26A429570;
  if (!qword_26A429570)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A429570);
  }
  return result;
}

uint64_t sub_25A55EE40(unsigned char *a1, void *a2)
{
  uint64_t v4 = *(void *)(v2 + 32);
  uint64_t v3 = *(void *)(v2 + 40);
  *a1 = 1;
  *a2 = v4;
  a2[1] = v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_25A55EE5C()
{
  return swift_release();
}

unint64_t sub_25A55EE64()
{
  unint64_t result = qword_26A429598;
  if (!qword_26A429598)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A429598);
  }
  return result;
}

uint64_t sub_25A55EEB8(uint64_t a1)
{
  return a1;
}

uint64_t sub_25A55EEE4(uint64_t a1)
{
  return sub_25A557DD4(a1, *(void *)(v1 + 16));
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t *sub_25A55EF58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_25A55EFAC(a1, a2, a3);
}

uint64_t *sub_25A55EFAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *v3;
  v3[2] = a1;
  v3[3] = a3;
  uint64_t v8 = *(void *)(v7 + 80);
  long long v9 = (void *)swift_allocObject();
  void v9[2] = v8;
  v9[3] = a2;
  v9[4] = a3;
  v9[5] = a1;
  v3[4] = (uint64_t)&unk_26A429900;
  v3[5] = (uint64_t)v9;
  swift_unknownObjectRetain();
  return v3;
}

uint64_t sub_25A55F038(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v15 = (void *)swift_task_alloc();
  *(void *)(v8 + 16) = v15;
  *uint64_t v15 = v8;
  v15[1] = sub_25A55F118;
  return sub_25A55F20C(a1, a2, a3, a4, a7, a8);
}

uint64_t sub_25A55F118()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_25A55F20C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v7[7] = a6;
  v7[8] = v6;
  v7[5] = a4;
  v7[6] = a5;
  v7[3] = a2;
  v7[4] = a3;
  _OWORD v7[2] = a1;
  v7[9] = *(void *)(a6 + 8);
  uint64_t v9 = sub_25A622F70();
  v7[10] = v9;
  v7[11] = v8;
  return MEMORY[0x270FA2498](sub_25A55F294, v9, v8);
}

uint64_t sub_25A55F294()
{
  uint64_t v2 = v0[3];
  uint64_t v1 = v0[4];
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for Outlet();
  uint64_t v3 = sub_25A595600(v2, v1);
  uint64_t v5 = v4;
  v0[12] = v3;
  v0[13] = v4;
  uint64_t v6 = (void *)swift_task_alloc();
  v0[14] = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_25A55F3F8;
  uint64_t v7 = v0[7];
  uint64_t v8 = v0[6];
  return sub_25A560A88(v5, v8, v7);
}

uint64_t sub_25A55F3F8()
{
  uint64_t v2 = (void *)*v1;
  v2[15] = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = v2[10];
    uint64_t v4 = v2[11];
    return MEMORY[0x270FA2498](sub_25A55F718, v3, v4);
  }
  else
  {
    uint64_t v5 = (void *)swift_task_alloc();
    v2[16] = v5;
    *uint64_t v5 = v2;
    v5[1] = sub_25A55F570;
    uint64_t v6 = v2[8];
    uint64_t v7 = v2[9];
    uint64_t v8 = v2[5];
    uint64_t v9 = v2[2];
    return sub_25A595920(v9, v6, v7, v8);
  }
}

uint64_t sub_25A55F570()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 136) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 88);
  uint64_t v4 = *(void *)(v2 + 80);
  if (v0) {
    uint64_t v5 = sub_25A55F784;
  }
  else {
    uint64_t v5 = sub_25A55F6AC;
  }
  return MEMORY[0x270FA2498](v5, v4, v3);
}

uint64_t sub_25A55F6AC()
{
  swift_release();
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_25A55F718()
{
  swift_release();
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_25A55F784()
{
  swift_release();
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t *MessagePipe.__allocating_init(makeRightTransport:)(uint64_t a1, uint64_t a2)
{
  return sub_25A55F9B8(a1, a2, (uint64_t (*)(void, void, void))type metadata accessor for StraightBridgeBuilder);
}

uint64_t type metadata accessor for StraightBridgeBuilder()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t *MessagePipe.__allocating_init<A>(branchingFunction:makeRightTransport:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for BranchingBridgeBuilder();
  swift_allocObject();
  uint64_t v9 = sub_25A5629B8(a1, a2, a3, a4);
  uint64_t WitnessTable = swift_getWitnessTable();
  swift_allocObject();
  return sub_25A55EFAC((uint64_t)v9, v8, WitnessTable);
}

uint64_t type metadata accessor for BranchingBridgeBuilder()
{
  return swift_getGenericMetadata();
}

void *sub_25A55F928(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_25A5629B8(a1, a2, a3, a4);
}

uint64_t *MessagePipe.__allocating_init(streamHandler:)(uint64_t a1, uint64_t a2)
{
  return sub_25A55F9B8(a1, a2, (uint64_t (*)(void, void, void))type metadata accessor for BranchingOutletBuilder);
}

uint64_t *sub_25A55F9B8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void, void, void))
{
  uint64_t v4 = v3;
  uint64_t v7 = a3(0, *(void *)(v4 + 80), *(void *)(v4 + 88));
  swift_allocObject();
  uint64_t v8 = sub_25A563C58(a1, a2);
  uint64_t WitnessTable = swift_getWitnessTable();
  swift_allocObject();
  return sub_25A55EFAC((uint64_t)v8, v7, WitnessTable);
}

uint64_t type metadata accessor for BranchingOutletBuilder()
{
  return __swift_instantiateGenericMetadata();
}

void *sub_25A55FA80(uint64_t a1, uint64_t a2)
{
  return sub_25A563C58(a1, a2);
}

uint64_t MessagePipe.addMessageStream(origin:destination:context:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[5] = a4;
  v5[6] = v4;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  return MEMORY[0x270FA2498](sub_25A55FAF4, 0, 0);
}

uint64_t sub_25A55FAF4()
{
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v0[6] + 32) + **(int **)(v0[6] + 32));
  uint64_t v1 = (void *)swift_task_alloc();
  v0[7] = v1;
  void *v1 = v0;
  v1[1] = sub_25A55FBCC;
  uint64_t v2 = v0[4];
  uint64_t v3 = v0[5];
  uint64_t v4 = v0[2];
  uint64_t v5 = v0[3];
  return v7(v4, v5, v2, v3);
}

uint64_t sub_25A55FBCC()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t MessagePipe.addLeftTransport(_:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return MEMORY[0x270FA2498](sub_25A55FCE0, 0, 0);
}

uint64_t sub_25A55FCE0()
{
  uint64_t v1 = *(void *)(v0[3] + 24);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v3 = (void *)swift_task_alloc();
  v0[4] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_25A55FD98;
  uint64_t v4 = v0[2];
  return sub_25A55FE8C(v4, ObjectType, v1);
}

uint64_t sub_25A55FD98()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_25A55FE8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[3] = a3;
  v4[4] = v3;
  v4[2] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A429820);
  v4[5] = swift_task_alloc();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for Bridge();
  uint64_t v7 = *(void *)(a3 + 8);
  v4[6] = v7;
  uint64_t v8 = (void *)swift_task_alloc();
  v4[7] = v8;
  *uint64_t v8 = v4;
  v8[1] = sub_25A56002C;
  return sub_25A5D0DB0(v3, v7, a1);
}

uint64_t sub_25A56002C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)*v3;
  uint64_t v6 = (void *)*v3;
  v5[8] = a1;
  v5[9] = a2;
  swift_task_dealloc();
  if (v2)
  {
    swift_task_dealloc();
    uint64_t v7 = (uint64_t (*)(void))v6[1];
    return v7();
  }
  else
  {
    uint64_t v9 = (void *)swift_task_alloc();
    v5[10] = v9;
    *uint64_t v9 = v6;
    v9[1] = sub_25A5601B4;
    uint64_t v10 = v5[3];
    uint64_t v11 = v5[2];
    return sub_25A560A88(a2, v11, v10);
  }
}

uint64_t sub_25A5601B4()
{
  *(void *)(*(void *)v1 + 88) = v0;
  swift_task_dealloc();
  uint64_t v3 = sub_25A622F70();
  if (v0) {
    uint64_t v4 = sub_25A560450;
  }
  else {
    uint64_t v4 = sub_25A560320;
  }
  return MEMORY[0x270FA2498](v4, v3, v2);
}

uint64_t sub_25A560320()
{
  uint64_t v1 = *(void *)(v0 + 64);
  uint64_t v2 = *(void *)(v0 + 40);
  uint64_t v3 = *(void *)(v0 + 48);
  uint64_t v4 = *(void *)(v0 + 32);
  uint64_t v5 = sub_25A622FD0();
  long long v9 = *(_OWORD *)(v0 + 16);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v2, 1, 1, v5);
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v4;
  *(void *)(v6 + 24) = v3;
  *(_OWORD *)(v6 + 32) = v9;
  *(void *)(v6 + 48) = v1;
  *(void *)(v6 + 56) = v4;
  swift_unknownObjectRetain_n();
  sub_25A60C0D8(v2, (uint64_t)&unk_26A4298F0, v6);
  swift_release();
  swift_release();
  swift_task_dealloc();
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t sub_25A560450()
{
  swift_release();
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t MessagePipe.teardown(file:line:column:function:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  *(void *)(v9 + 56) = a7;
  *(void *)(v9 + 64) = v8;
  *(unsigned char *)(v9 + 121) = a8;
  *(void *)(v9 + 40) = a5;
  *(void *)(v9 + 48) = a6;
  *(void *)(v9 + 24) = a2;
  *(void *)(v9 + 32) = a4;
  *(unsigned char *)(v9 + 120) = a3;
  *(void *)(v9 + 16) = a1;
  uint64_t v10 = sub_25A622C10();
  *(void *)(v9 + 72) = v10;
  *(void *)(v9 + 80) = *(void *)(v10 - 8);
  *(void *)(v9 + 88) = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_25A560598, 0, 0);
}

uint64_t sub_25A560598()
{
  uint64_t v1 = v0[8];
  v0[12] = *(void *)(v1 + 16);
  v0[13] = *(void *)(v1 + 24);
  v0[14] = swift_getObjectType();
  sub_25A622C20();
  uint64_t v3 = sub_25A622F70();
  return MEMORY[0x270FA2498](sub_25A560698, v3, v2);
}

uint64_t sub_25A560698()
{
  uint64_t v1 = v0[11];
  uint64_t v2 = v0[9];
  uint64_t v3 = v0[10];
  sub_25A56072C(v1, v0[14], v0[13]);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_25A56072C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v14[1] = a1;
  uint64_t v5 = sub_25A6228E0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for MergingFork();
  swift_getWitnessTable();
  uint64_t v9 = sub_25A6228C0();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)v14 - v11;
  (*(void (**)(uint64_t, uint64_t))(a3 + 32))(a2, a3);
  sub_25A6228D0();
  sub_25A622890();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t MessagePipe.deinit()
{
  swift_unknownObjectRelease();
  swift_release();
  return v0;
}

uint64_t MessagePipe.__deallocating_deinit()
{
  swift_unknownObjectRelease();
  swift_release();

  return MEMORY[0x270FA0228](v0, 48, 7);
}

uint64_t sub_25A560A04()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for MessagePipe()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t method lookup function for MessagePipe(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for MessagePipe);
}

uint64_t sub_25A560A88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[5] = a3;
  v4[6] = v3;
  v4[3] = a1;
  v4[4] = a2;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for MergingFork();
  swift_getWitnessTable();
  uint64_t v6 = sub_25A6228C0();
  v4[7] = v6;
  v4[8] = *(void *)(v6 - 8);
  v4[9] = swift_task_alloc();
  v4[10] = *(void *)(a3 + 8);
  uint64_t v8 = sub_25A622F70();
  v4[11] = v8;
  v4[12] = v7;
  return MEMORY[0x270FA2498](sub_25A560C48, v8, v7);
}

uint64_t sub_25A560C48()
{
  (*(void (**)(void))(v0[5] + 32))(v0[4]);
  uint64_t v1 = (void *)swift_task_alloc();
  v0[13] = v1;
  void *v1 = v0;
  v1[1] = sub_25A560D0C;
  uint64_t v2 = v0[10];
  uint64_t v3 = v0[6];
  uint64_t v4 = v0[7];
  return MEMORY[0x270F55970](v0 + 2, v3, v2, v4);
}

uint64_t sub_25A560D0C()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 72);
  uint64_t v4 = *(void *)(*v1 + 64);
  uint64_t v5 = *(void *)(*v1 + 56);
  *(void *)(*v1 + 112) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  uint64_t v6 = *(void *)(v2 + 96);
  uint64_t v7 = *(void *)(v2 + 88);
  if (v0) {
    uint64_t v8 = sub_25A560F1C;
  }
  else {
    uint64_t v8 = sub_25A560EA4;
  }
  return MEMORY[0x270FA2498](v8, v7, v6);
}

uint64_t sub_25A560EA4()
{
  sub_25A5DB370(*(void **)(v0 + 24));
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_25A560F1C()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_25A560F80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v9 = *(void *)(a7 + 8);
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v7 + 16) = v10;
  *uint64_t v10 = v7;
  v10[1] = sub_25A566D38;
  return sub_25A5D1530(a5, v9);
}

uint64_t sub_25A56102C(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  uint64_t v5 = sub_25A622F70();
  v3[5] = v5;
  v3[6] = v4;
  return MEMORY[0x270FA2498](sub_25A5610A4, v5, v4);
}

uint64_t sub_25A5610A4()
{
  uint64_t v7 = v0[3];
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v0[7] = swift_getAssociatedTypeWitness();
  v0[8] = swift_getAssociatedConformanceWitness();
  type metadata accessor for MergingFork();
  v0[9] = sub_25A5DB6A4();
  v0[10] = v1;
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v7 + 40) + **(int **)(v7 + 40));
  uint64_t v2 = (void *)swift_task_alloc();
  v0[11] = v2;
  void *v2 = v0;
  v2[1] = sub_25A561250;
  uint64_t v3 = v0[3];
  uint64_t v4 = v0[2];
  return v6(v4, v3);
}

uint64_t sub_25A561250(uint64_t a1)
{
  uint64_t v4 = *(void **)v2;
  *(void *)(*(void *)v2 + 96) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = v4[5];
    uint64_t v6 = v4[6];
    uint64_t v7 = sub_25A561468;
  }
  else
  {
    v4[13] = a1;
    uint64_t v5 = v4[5];
    uint64_t v6 = v4[6];
    uint64_t v7 = sub_25A561378;
  }
  return MEMORY[0x270FA2498](v7, v5, v6);
}

uint64_t sub_25A561378()
{
  uint64_t v1 = v0[13];
  uint64_t v2 = v0[10];
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for Junction();
  sub_25A5B6AE8(v2, v1);
  swift_release();
  swift_release();
  uint64_t v3 = (uint64_t (*)(uint64_t))v0[1];
  uint64_t v4 = v0[9];
  return v3(v4);
}

uint64_t sub_25A561468()
{
  swift_release();
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_25A5614D4@<X0>(uint64_t a1@<X8>)
{
  return sub_25A563820((uint64_t)&unk_270841D58, (uint64_t)&unk_26A4298D8, (uint64_t)&unk_26A4298C8, a1);
}

uint64_t sub_25A561508()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  uint64_t v2 = type metadata accessor for StraightBridgeBuilder();
  uint64_t WitnessTable = swift_getWitnessTable();
  void *v1 = v0;
  v1[1] = sub_25A561600;
  return sub_25A56102C(v2, WitnessTable);
}

uint64_t sub_25A561600(uint64_t a1)
{
  uint64_t v7 = *v2;
  uint64_t v4 = swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(uint64_t))(v7 + 8);
  if (!v1) {
    uint64_t v4 = a1;
  }
  return v5(v4);
}

uint64_t sub_25A561700(uint64_t a1, int *a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v5 = (uint64_t (*)(void))((char *)a2 + *a2);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v3;
  *uint64_t v3 = v2;
  v3[1] = sub_25A566D34;
  return v5();
}

uint64_t sub_25A5617D0()
{
  v1[7] = v0;
  v1[8] = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A429820);
  v1[9] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_25A56188C, v0, 0);
}

uint64_t sub_25A56188C()
{
  uint64_t v3 = (uint64_t (*)(uint64_t))(*(void *)(*(void *)(v0 + 56) + 112)
                                       + **(int **)(*(void *)(v0 + 56) + 112));
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 80) = v1;
  void *v1 = v0;
  v1[1] = sub_25A561968;
  return v3(v0 + 16);
}

uint64_t sub_25A561968()
{
  uint64_t v2 = (void *)*v1;
  v2[11] = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = v2[7];
    return MEMORY[0x270FA2498](sub_25A561E64, v3, 0);
  }
  else
  {
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    type metadata accessor for Bridge();
    type metadata accessor for StraightBridgeBuilder();
    uint64_t WitnessTable = swift_getWitnessTable();
    v2[12] = WitnessTable;
    uint64_t v5 = (void *)swift_task_alloc();
    v2[13] = v5;
    *uint64_t v5 = v2;
    v5[1] = sub_25A561BE8;
    uint64_t v6 = v2[7];
    return sub_25A5D0DB0(v6, WitnessTable, (uint64_t)(v2 + 2));
  }
}

uint64_t sub_25A561BE8(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = (void *)*v3;
  v6[14] = v2;
  swift_task_dealloc();
  uint64_t v7 = v6[7];
  if (v2)
  {
    uint64_t v8 = sub_25A561EC8;
  }
  else
  {
    v6[15] = a2;
    v6[16] = a1;
    uint64_t v8 = sub_25A561D28;
  }
  return MEMORY[0x270FA2498](v8, v7, 0);
}

uint64_t sub_25A561D28()
{
  uint64_t v1 = v0[16];
  uint64_t v2 = v0[12];
  uint64_t v3 = v0[9];
  uint64_t v4 = v0[7];
  uint64_t v5 = sub_25A622FD0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v3, 1, 1, v5);
  uint64_t v6 = (void *)swift_allocObject();
  _OWORD v6[2] = v4;
  v6[3] = v2;
  v6[4] = v1;
  v6[5] = v4;
  swift_retain_n();
  swift_retain();
  sub_25A60C0D8(v3, (uint64_t)&unk_26A4298C0, (uint64_t)v6);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 2));
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(uint64_t))v0[1];
  uint64_t v8 = v0[15];
  return v7(v8);
}

uint64_t sub_25A561E64()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_25A561EC8()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_25A561F34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  type metadata accessor for StraightBridgeBuilder();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v8;
  *uint64_t v8 = v5;
  v8[1] = sub_25A566D38;
  return sub_25A5D1530(a5, WitnessTable);
}

uint64_t sub_25A562030()
{
  uint64_t v0 = sub_25A5650C0();

  return MEMORY[0x270FA2418](v0);
}

uint64_t sub_25A562058()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for MergingFork();
  swift_getWitnessTable();
  sub_25A6228C0();
  uint64_t result = sub_25A623180();
  if (v1 <= 0x3F) {
    return swift_initClassMetadata2();
  }
  return result;
}

uint64_t sub_25A5621A0()
{
  return v0;
}

uint64_t sub_25A5621B4()
{
  unint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_25A566D3C;
  return sub_25A5617D0();
}

uint64_t sub_25A562240@<X0>(uint64_t a1@<X8>)
{
  uint64_t v22 = (void *)*v1;
  uint64_t v2 = v22;
  uint64_t v23 = a1;
  uint64_t v3 = v22[12];
  uint64_t v4 = v22[10];
  swift_getAssociatedTypeWitness();
  uint64_t v21 = v3;
  swift_getAssociatedConformanceWitness();
  type metadata accessor for MergingFork();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v5 = sub_25A6228C0();
  uint64_t v6 = sub_25A623180();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&WitnessTable - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&WitnessTable - v11;
  uint64_t v13 = (char *)v1 + v2[17];
  swift_beginAccess();
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v12, v13, v6);
  uint64_t v14 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v5) != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v14 + 32))(v23, v12, v5);
  }
  (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
  uint64_t v15 = (void *)swift_allocObject();
  v15[2] = v4;
  unint64_t v16 = v22;
  uint64_t v17 = v21;
  v15[3] = v22[11];
  v15[4] = v17;
  v15[5] = v16[13];
  v15[6] = &unk_26A4298B0;
  v15[7] = v1;
  swift_retain();
  uint64_t v18 = v23;
  sub_25A6228A0();
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v10, v18, v5);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v10, 0, 1, v5);
  swift_beginAccess();
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(v13, v10, v6);
  return swift_endAccess();
}

uint64_t sub_25A5625D4(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 48) = v3;
  long long v4 = *(_OWORD *)(v2 + 96);
  *(_OWORD *)(v1 + 16) = *(_OWORD *)(v2 + 80);
  *(_OWORD *)(v1 + 32) = v4;
  uint64_t v5 = type metadata accessor for BranchingBridgeBuilder();
  uint64_t WitnessTable = swift_getWitnessTable();
  *uint64_t v3 = v1;
  v3[1] = sub_25A5626D8;
  return sub_25A56102C(v5, WitnessTable);
}

uint64_t sub_25A5626D8(uint64_t a1)
{
  uint64_t v7 = *v2;
  uint64_t v4 = swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(uint64_t))(v7 + 8);
  if (!v1) {
    uint64_t v4 = a1;
  }
  return v5(v4);
}

uint64_t sub_25A5627D8(uint64_t a1, int *a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v5 = (uint64_t (*)(void))((char *)a2 + *a2);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v3;
  *uint64_t v3 = v2;
  v3[1] = sub_25A5628A8;
  return v5();
}

uint64_t sub_25A5628A8(uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *v2;
  swift_task_dealloc();
  if (!v1) {
    **(void **)(v4 + 16) = a1;
  }
  uint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
  return v6();
}

void *sub_25A5629B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_defaultActor_initialize();
  uint64_t v9 = (char *)v4 + *(void *)(*v4 + 136);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for MergingFork();
  swift_getWitnessTable();
  uint64_t v10 = sub_25A6228C0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v9, 1, 1, v10);
  v4[14] = a1;
  v4[15] = a2;
  v4[16] = a3;
  v4[17] = a4;
  return v4;
}

uint64_t sub_25A562B18()
{
  *(void *)(v1 + 48) = v0;
  *(void *)(v1 + 56) = *v0;
  return MEMORY[0x270FA2498](sub_25A562B60, v0, 0);
}

uint64_t sub_25A562B60()
{
  uint64_t v1 = v0[6];
  uint64_t v2 = v0[7];
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v4 = *(void *)(v2 + 88);
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v6 = *(void *)(v2 + 104);
  v0[2] = AssociatedTypeWitness;
  v0[3] = v4;
  v0[4] = AssociatedConformanceWitness;
  v0[5] = v6;
  type metadata accessor for BranchingFork();
  uint64_t v7 = *(void *)(v1 + 112);
  uint64_t v8 = *(void *)(v1 + 120);
  swift_retain();
  sub_25A5DB70C(v7, v8, (uint64_t)sub_25A565AF8, v1);
  uint64_t v10 = v9;
  swift_release();
  swift_release();
  uint64_t v11 = (uint64_t (*)(uint64_t))v0[1];
  return v11(v10);
}

uint64_t sub_25A562CDC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v35 = a2;
  uint64_t v36 = a4;
  uint64_t v31 = a1;
  uint64_t v5 = *(void **)a3;
  uint64_t v6 = *(void *)(*(void *)a3 + 88);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v34 = *(void *)(v7 + 64);
  MEMORY[0x270FA5388](a1);
  uint64_t v30 = (char *)&v25 - v8;
  uint64_t v9 = v5[12];
  uint64_t v10 = v5[10];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v28 = v9;
  uint64_t v32 = AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v12 = swift_getAssociatedTypeWitness();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  MEMORY[0x270FA5388](v12);
  unint64_t v16 = (char *)&v25 - v15;
  uint64_t v27 = v5[13];
  uint64_t v37 = v10;
  uint64_t v38 = v6;
  uint64_t v17 = v6;
  uint64_t v39 = v9;
  uint64_t v40 = v27;
  type metadata accessor for BranchingBridgeBuilder();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v18 = v12;
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v16, v31, v12);
  uint64_t v26 = v7;
  uint64_t v19 = v30;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v30, v35, v6);
  unint64_t v20 = (*(unsigned __int8 *)(v13 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  unint64_t v21 = (v14 + *(unsigned __int8 *)(v7 + 80) + v20) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v22 = (char *)swift_allocObject();
  *((void *)v22 + 2) = v10;
  *((void *)v22 + 3) = v17;
  uint64_t v23 = v27;
  *((void *)v22 + 4) = v28;
  *((void *)v22 + 5) = v23;
  *((void *)v22 + 6) = a3;
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(&v22[v20], v16, v18);
  (*(void (**)(char *, char *, uint64_t))(v26 + 32))(&v22[v21], v19, v17);
  type metadata accessor for Junction();
  swift_retain_n();
  return sub_25A6226B0();
}

uint64_t sub_25A56305C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[2] = a1;
  v4[3] = a2;
  uint64_t v6 = (void *)swift_task_alloc();
  v4[4] = v6;
  *uint64_t v6 = v4;
  v6[1] = sub_25A5630FC;
  return sub_25A565E64(a4);
}

uint64_t sub_25A5630FC(uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *v2;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
    return v6();
  }
  else
  {
    uint64_t v8 = *(void *)(v4 + 24);
    *(void *)(v4 + 40) = a1;
    return MEMORY[0x270FA2498](sub_25A563248, v8, 0);
  }
}

uint64_t sub_25A563248()
{
  **(void **)(v0 + 16) = *(void *)(v0 + 40);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_25A56326C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  long long v7 = *(_OWORD *)(*(void *)a5 + 96);
  *(_OWORD *)(v5 + 16) = *(_OWORD *)(*(void *)a5 + 80);
  *(_OWORD *)(v5 + 32) = v7;
  type metadata accessor for BranchingBridgeBuilder();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v5 + 48) = v9;
  *uint64_t v9 = v5;
  v9[1] = sub_25A563370;
  return sub_25A5D1530(a5, WitnessTable);
}

uint64_t sub_25A563370()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_25A563464()
{
  swift_release();
  swift_release();
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 136);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for MergingFork();
  swift_getWitnessTable();
  sub_25A6228C0();
  uint64_t v2 = sub_25A623180();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_defaultActor_destroy();
  return v0;
}

uint64_t sub_25A5635B0()
{
  uint64_t v0 = sub_25A563464();

  return MEMORY[0x270FA2418](v0);
}

uint64_t sub_25A5635D8()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for MergingFork();
  swift_getWitnessTable();
  sub_25A6228C0();
  uint64_t result = sub_25A623180();
  if (v1 <= 0x3F) {
    return swift_initClassMetadata2();
  }
  return result;
}

uint64_t sub_25A56371C()
{
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  void *v2 = v1;
  v2[1] = sub_25A566D3C;
  v2[6] = v0;
  v2[7] = *v0;
  return MEMORY[0x270FA2498](sub_25A562B60, v0, 0);
}

uint64_t sub_25A5637EC@<X0>(uint64_t a1@<X8>)
{
  return sub_25A563820((uint64_t)&unk_270841C90, (uint64_t)&unk_26A429860, (uint64_t)&unk_26A429850, a1);
}

uint64_t sub_25A563820@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v24 = a2;
  uint64_t v25 = a3;
  v22[1] = a1;
  uint64_t v26 = a4;
  uint64_t v5 = *v4;
  uint64_t v6 = *(void *)(*v4 + 88);
  uint64_t v7 = *(void *)(*v4 + 80);
  swift_getAssociatedTypeWitness();
  uint64_t v23 = v6;
  swift_getAssociatedConformanceWitness();
  type metadata accessor for MergingFork();
  v22[0] = swift_getWitnessTable();
  uint64_t v8 = sub_25A6228C0();
  uint64_t v9 = sub_25A623180();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)v22 - v14;
  uint64_t v16 = (uint64_t)v4 + *(void *)(v5 + 112);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v15, v16, v9);
  uint64_t v17 = *(void *)(v8 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v8) != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v17 + 32))(v26, v15, v8);
  }
  (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
  uint64_t v18 = (void *)swift_allocObject();
  uint64_t v19 = v23;
  v18[2] = v7;
  v18[3] = v19;
  v18[4] = v24;
  v18[5] = v4;
  swift_retain();
  uint64_t v20 = v26;
  sub_25A6228A0();
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v13, v20, v8);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v13, 0, 1, v8);
  swift_beginAccess();
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 40))(v16, v13, v9);
  return swift_endAccess();
}

uint64_t sub_25A563B60()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  uint64_t v2 = type metadata accessor for BranchingOutletBuilder();
  uint64_t WitnessTable = swift_getWitnessTable();
  void *v1 = v0;
  v1[1] = sub_25A566D3C;
  return sub_25A56102C(v2, WitnessTable);
}

void *sub_25A563C58(uint64_t a1, uint64_t a2)
{
  swift_defaultActor_initialize();
  uint64_t v5 = (char *)v2 + *(void *)(*v2 + 112);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for MergingFork();
  swift_getWitnessTable();
  uint64_t v6 = sub_25A6228C0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v5, 1, 1, v6);
  v2[14] = a1;
  v2[15] = a2;
  return v2;
}

uint64_t sub_25A563DA4()
{
  *(void *)(v1 + 48) = v0;
  *(void *)(v1 + 56) = *v0;
  return MEMORY[0x270FA2498](sub_25A563DEC, v0, 0);
}

uint64_t sub_25A563DEC()
{
  uint64_t v2 = v0[6];
  uint64_t v1 = v0[7];
  uint64_t v4 = *(void *)(v1 + 80);
  uint64_t v3 = *(void *)(v1 + 88);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v7 = swift_getAssociatedTypeWitness();
  uint64_t v8 = swift_getAssociatedConformanceWitness();
  v0[2] = AssociatedTypeWitness;
  v0[3] = v7;
  v0[4] = AssociatedConformanceWitness;
  v0[5] = v8;
  type metadata accessor for BranchingFork();
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v4;
  *(void *)(v9 + 24) = v3;
  swift_retain();
  sub_25A5DB70C((uint64_t)sub_25A56552C, v9, (uint64_t)sub_25A565534, v2);
  uint64_t v11 = v10;
  swift_release();
  swift_release();
  swift_release();
  uint64_t v12 = (uint64_t (*)(uint64_t))v0[1];
  return v12(v11);
}

uint64_t sub_25A563FD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16);

  return v5(a2, a1, AssociatedTypeWitness);
}

uint64_t sub_25A5640F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v31 = a1;
  uint64_t v32 = a2;
  uint64_t v33 = a3;
  uint64_t v34 = a4;
  uint64_t v4 = *(void *)(*(void *)a3 + 88);
  uint64_t v28 = *(void *)(*(void *)a3 + 80);
  uint64_t v25 = v4;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  uint64_t v29 = AssociatedTypeWitness;
  uint64_t v30 = AssociatedConformanceWitness;
  swift_getAssociatedConformanceWitness();
  uint64_t v26 = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(v26 - 8);
  MEMORY[0x270FA5388](v26);
  uint64_t v9 = (char *)&v23 - v8;
  uint64_t v24 = (char *)&v23 - v8;
  uint64_t v10 = swift_getAssociatedTypeWitness();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v23 - v13;
  uint64_t v15 = v28;
  type metadata accessor for BranchingOutletBuilder();
  uint64_t WitnessTable = swift_getWitnessTable();
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v14, v31, v10);
  uint64_t v16 = v9;
  uint64_t v17 = v26;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v16, v32, v26);
  unint64_t v18 = (*(unsigned __int8 *)(v11 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  unint64_t v19 = (v12 + *(unsigned __int8 *)(v7 + 80) + v18) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v20 = (char *)swift_allocObject();
  uint64_t v21 = v25;
  *((void *)v20 + 2) = v15;
  *((void *)v20 + 3) = v21;
  *((void *)v20 + 4) = v33;
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(&v20[v18], v14, v10);
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(&v20[v19], v24, v17);
  type metadata accessor for Junction();
  swift_retain_n();
  return sub_25A6226B0();
}

uint64_t sub_25A56448C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[2] = a1;
  v4[3] = a2;
  uint64_t v7 = (void *)swift_task_alloc();
  v4[4] = v7;
  *uint64_t v7 = v4;
  v7[1] = sub_25A56453C;
  return sub_25A564688(a3, a4);
}

uint64_t sub_25A56453C(uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *v2;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
    return v6();
  }
  else
  {
    uint64_t v8 = *(void *)(v4 + 24);
    *(void *)(v4 + 40) = a1;
    return MEMORY[0x270FA2498](sub_25A566D44, v8, 0);
  }
}

uint64_t sub_25A564688(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  v3[5] = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A429820);
  v3[6] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_25A564748, v2, 0);
}

uint64_t sub_25A564748()
{
  uint64_t v1 = v0[6];
  uint64_t v2 = v0[4];
  uint64_t v12 = v0[3];
  uint64_t v3 = v0[2];
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for Outlet();
  uint64_t v4 = sub_25A595600(v12, v3);
  uint64_t v6 = v5;
  uint64_t v7 = sub_25A622FD0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v1, 1, 1, v7);
  type metadata accessor for BranchingOutletBuilder();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v9 = (void *)swift_allocObject();
  void v9[2] = v2;
  v9[3] = WitnessTable;
  v9[4] = v4;
  v9[5] = v2;
  swift_retain_n();
  sub_25A564F40(v1, (uint64_t)&unk_26A429830, (uint64_t)v9);
  swift_release();
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(uint64_t))v0[1];
  return v10(v6);
}

uint64_t sub_25A564958(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[2] = a5;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5[3] = AssociatedTypeWitness;
  v5[4] = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v8 = swift_task_alloc();
  v5[5] = v8;
  type metadata accessor for AsyncMessageStream(0);
  uint64_t v9 = swift_task_alloc();
  v5[6] = v9;
  type metadata accessor for BranchingOutletBuilder();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v11 = (void *)swift_task_alloc();
  v5[7] = v11;
  *uint64_t v11 = v5;
  v11[1] = sub_25A564B34;
  return sub_25A596418(v9, v8, a5, WitnessTable);
}

uint64_t sub_25A564B34()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 64) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 16);
  if (v0) {
    uint64_t v4 = sub_25A564ED4;
  }
  else {
    uint64_t v4 = sub_25A564C60;
  }
  return MEMORY[0x270FA2498](v4, v3, 0);
}

uint64_t sub_25A564C60()
{
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v0[2] + 112) + **(int **)(v0[2] + 112));
  uint64_t v1 = (void *)swift_task_alloc();
  v0[9] = v1;
  void *v1 = v0;
  v1[1] = sub_25A564D34;
  uint64_t v2 = v0[5];
  uint64_t v3 = v0[6];
  return v5(v3, v2);
}

uint64_t sub_25A564D34()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 16);
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_25A564E44, v1, 0);
}

uint64_t sub_25A564E44()
{
  uint64_t v1 = v0[6];
  (*(void (**)(void, void))(v0[4] + 8))(v0[5], v0[3]);
  sub_25A5654C0(v1);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_25A564ED4()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_25A564F40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_25A622FD0();
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v5) != 1)
  {
    sub_25A622FC0();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    if (!*(void *)(a3 + 16)) {
      return swift_task_create();
    }
    goto LABEL_3;
  }
  sub_25A565460(a1);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_25A622F70();
    swift_unknownObjectRelease();
  }
  return swift_task_create();
}

uint64_t sub_25A5650C0()
{
  swift_release();
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 112);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for MergingFork();
  swift_getWitnessTable();
  sub_25A6228C0();
  uint64_t v2 = sub_25A623180();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_defaultActor_destroy();
  return v0;
}

uint64_t sub_25A565208()
{
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  void *v2 = v1;
  v2[1] = sub_25A566D3C;
  v2[6] = v0;
  v2[7] = *v0;
  return MEMORY[0x270FA2498](sub_25A563DEC, v0, 0);
}

uint64_t sub_25A5652D8(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_25A565314(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 96);
}

uint64_t sub_25A56531C(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_25A565358(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 88);
}

uint64_t sub_25A565360(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_25A5653A0(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_25A566D38;
  return sub_25A564958(a1, v4, v5, v7, v6);
}

uint64_t sub_25A565460(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A429820);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_25A5654C0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AsyncMessageStream(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_25A56551C()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_25A56552C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_25A563FD0(a1, a2);
}

uint64_t sub_25A565534@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_25A5640F4(a1, a2, v3, a3);
}

uint64_t sub_25A56553C()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v2 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v6 = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (v5 + v8) & ~v8;
  uint64_t v10 = v9 + *(void *)(v7 + 64);
  uint64_t v11 = v3 | v8 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, AssociatedTypeWitness);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);

  return MEMORY[0x270FA0238](v0, v10, v11);
}

uint64_t sub_25A56574C(uint64_t a1)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v4 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v6 = v5 + *(void *)(v4 + 64);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v7 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v8 = *(void *)(v1 + 32);
  uint64_t v9 = v1 + v5;
  uint64_t v10 = v1 + ((v6 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  *uint64_t v11 = v2;
  v11[1] = sub_25A566D38;
  return sub_25A56448C(a1, v8, v9, v10);
}

uint64_t sub_25A565964()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_25A56599C(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 32);
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *unint64_t v5 = v2;
  v5[1] = sub_25A566D38;
  unint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_26A429848 + dword_26A429848);
  return v6(a1, v4);
}

uint64_t sub_25A565A68()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_25A566D50;
  return sub_25A563B60();
}

uint64_t sub_25A565AF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_25A562CDC(a1, a2, v3, a3);
}

uint64_t sub_25A565B00()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v3 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = (v4 + 56) & ~v4;
  uint64_t v6 = *(void *)(v1 - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = (v5 + *(void *)(v3 + 64) + v7) & ~v7;
  uint64_t v9 = v8 + *(void *)(v6 + 64);
  uint64_t v10 = v4 | v7 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0 + v5, AssociatedTypeWitness);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v8, v1);

  return MEMORY[0x270FA0238](v0, v9, v10);
}

uint64_t sub_25A565CB0(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 24);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v5 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v1 + 48);
  uint64_t v8 = v1 + v6;
  uint64_t v9 = v1
     + ((v6 + *(void *)(v5 + 64) + *(unsigned __int8 *)(*(void *)(v4 - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v4 - 8) + 80));
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_25A566D38;
  return sub_25A56305C(a1, v7, v8, v9);
}

uint64_t sub_25A565E64(uint64_t a1)
{
  v2[11] = a1;
  v2[12] = v1;
  v2[13] = *v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A429820);
  v2[14] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_25A565F20, v1, 0);
}

uint64_t sub_25A565F20()
{
  uint64_t v4 = (uint64_t (*)(void *, uint64_t))(*(void *)(v0[12] + 128) + **(int **)(v0[12] + 128));
  uint64_t v1 = (void *)swift_task_alloc();
  v0[15] = v1;
  void *v1 = v0;
  v1[1] = sub_25A566000;
  uint64_t v2 = v0[11];
  return v4(v0 + 2, v2);
}

uint64_t sub_25A566000()
{
  uint64_t v2 = (void *)*v1;
  v2[16] = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = v2[12];
    return MEMORY[0x270FA2498](sub_25A566510, v3, 0);
  }
  else
  {
    uint64_t v4 = (void *)v2[13];
    uint64_t v5 = v4[12];
    uint64_t v6 = v4[10];
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    type metadata accessor for Bridge();
    v2[7] = v6;
    uint64_t v7 = v4[13];
    v2[8] = v4[11];
    v2[9] = v5;
    v2[10] = v7;
    type metadata accessor for BranchingBridgeBuilder();
    uint64_t WitnessTable = swift_getWitnessTable();
    v2[17] = WitnessTable;
    uint64_t v9 = (void *)swift_task_alloc();
    v2[18] = v9;
    *uint64_t v9 = v2;
    v9[1] = sub_25A566294;
    uint64_t v10 = v2[12];
    return sub_25A5D0DB0(v10, WitnessTable, (uint64_t)(v2 + 2));
  }
}

uint64_t sub_25A566294(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = (void *)*v3;
  v6[19] = v2;
  swift_task_dealloc();
  uint64_t v7 = v6[12];
  if (v2)
  {
    uint64_t v8 = sub_25A566574;
  }
  else
  {
    v6[20] = a2;
    v6[21] = a1;
    uint64_t v8 = sub_25A5663D4;
  }
  return MEMORY[0x270FA2498](v8, v7, 0);
}

uint64_t sub_25A5663D4()
{
  uint64_t v1 = v0[21];
  uint64_t v2 = v0[17];
  uint64_t v3 = v0[14];
  uint64_t v4 = v0[12];
  uint64_t v5 = sub_25A622FD0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v3, 1, 1, v5);
  uint64_t v6 = (void *)swift_allocObject();
  _OWORD v6[2] = v4;
  v6[3] = v2;
  v6[4] = v1;
  v6[5] = v4;
  swift_retain_n();
  swift_retain();
  sub_25A60C0D8(v3, (uint64_t)&unk_26A429890, (uint64_t)v6);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 2));
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(uint64_t))v0[1];
  uint64_t v8 = v0[20];
  return v7(v8);
}

uint64_t sub_25A566510()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_25A566574()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_25A5665E4(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_25A566D38;
  return sub_25A56326C(a1, v4, v5, v7, v6);
}

uint64_t sub_25A5666A4()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 64, 7);
}

uint64_t sub_25A5666DC(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 48);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_25A55F118;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_26A429898 + dword_26A429898);
  return v6(a1, v4);
}

uint64_t sub_25A5667BC()
{
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  void *v2 = v1;
  v2[1] = sub_25A566D50;
  return sub_25A5625D4(v0);
}

uint64_t objectdestroyTm()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();

  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_25A566898(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_25A55F118;
  return sub_25A561F34(a1, v4, v5, v7, v6);
}

uint64_t sub_25A566958()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_25A5669E8;
  return sub_25A561508();
}

uint64_t sub_25A5669E8(uint64_t a1)
{
  uint64_t v5 = *v1;
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v5 + 8);
  return v3(a1);
}

uint64_t sub_25A566AE4()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_unknownObjectRelease();

  return MEMORY[0x270FA0238](v0, 64, 7);
}

uint64_t sub_25A566B2C()
{
  uint64_t v2 = *(void *)(v0 + 40);
  uint64_t v3 = *(void *)(v0 + 56);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_25A566D38;
  uint64_t v5 = *(void *)(v2 + 8);
  uint64_t v6 = (void *)swift_task_alloc();
  v4[2] = v6;
  *uint64_t v6 = v4;
  v6[1] = sub_25A566D38;
  return sub_25A5D1530(v3, v5);
}

uint64_t sub_25A566C1C()
{
  swift_unknownObjectRelease();

  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_25A566C54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v10 = v4[2];
  uint64_t v11 = v4[3];
  uint64_t v13 = v4[4];
  uint64_t v12 = v4[5];
  uint64_t v14 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v14;
  *uint64_t v14 = v5;
  v14[1] = sub_25A566D38;
  return sub_25A55F038(a1, a2, a3, a4, v12, v10, v11, v13);
}

uint64_t sub_25A566D54(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    uint64_t v3 = 0;
    uint64_t v22 = a2 + 32;
    uint64_t v23 = a1 + 32;
    while (1)
    {
      uint64_t v5 = v23 + 48 * v3;
      uint64_t v6 = *(void *)(v5 + 16);
      uint64_t v7 = *(void *)(v5 + 24);
      uint64_t v8 = *(void *)(v5 + 32);
      int v9 = *(unsigned __int8 *)(v5 + 40);
      uint64_t v10 = v22 + 48 * v3;
      uint64_t v11 = *(void *)(v10 + 16);
      uint64_t v12 = *(void *)(v10 + 24);
      uint64_t v13 = *(void *)(v10 + 32);
      int v14 = *(unsigned __int8 *)(v10 + 40);
      BOOL v15 = *(void *)v5 == *(void *)v10 && *(void *)(v5 + 8) == *(void *)(v10 + 8);
      if (!v15 && (sub_25A6233B0() & 1) == 0) {
        return 0;
      }
      BOOL v16 = v6 == v11 && v7 == v12;
      if (!v16 && (sub_25A6233B0() & 1) == 0) {
        return 0;
      }
      uint64_t v17 = *(void *)(v8 + 16);
      if (v17 != *(void *)(v13 + 16)) {
        return 0;
      }
      if (v17) {
        BOOL v18 = v8 == v13;
      }
      else {
        BOOL v18 = 1;
      }
      if (!v18)
      {
        unint64_t v19 = (void *)(v8 + 40);
        uint64_t v20 = (void *)(v13 + 40);
        do
        {
          BOOL v21 = *(v19 - 1) == *(v20 - 1) && *v19 == *v20;
          if (!v21 && (sub_25A6233B0() & 1) == 0) {
            return 0;
          }
          v19 += 2;
          v20 += 2;
        }
        while (--v17);
      }
      if (v9 == 4)
      {
        if (v14 != 4) {
          return 0;
        }
      }
      else if (v14 == 4 || (sub_25A5E8B28(v9, v14) & 1) == 0)
      {
        return 0;
      }
      ++v3;
      uint64_t result = 1;
      if (v3 == v2) {
        return result;
      }
    }
  }
  return 1;
}

uint64_t sub_25A566EE0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 == *(void *)(a2 + 16))
  {
    if (!v2 || a1 == a2)
    {
      char v17 = 1;
    }
    else
    {
      uint64_t v3 = a1 + 32;
      uint64_t v4 = a2 + 32;
      uint64_t v5 = v2 - 1;
      do
      {
        uint64_t v6 = v5;
        long long v7 = *(_OWORD *)(v3 + 144);
        v21[8] = *(_OWORD *)(v3 + 128);
        v21[9] = v7;
        uint64_t v22 = *(void *)(v3 + 160);
        long long v8 = *(_OWORD *)(v3 + 80);
        v21[4] = *(_OWORD *)(v3 + 64);
        v21[5] = v8;
        long long v9 = *(_OWORD *)(v3 + 112);
        v21[6] = *(_OWORD *)(v3 + 96);
        v21[7] = v9;
        long long v10 = *(_OWORD *)(v3 + 16);
        v21[0] = *(_OWORD *)v3;
        v21[1] = v10;
        long long v11 = *(_OWORD *)(v3 + 48);
        v21[2] = *(_OWORD *)(v3 + 32);
        v21[3] = v11;
        long long v12 = *(_OWORD *)(v4 + 144);
        v19[8] = *(_OWORD *)(v4 + 128);
        v19[9] = v12;
        uint64_t v20 = *(void *)(v4 + 160);
        long long v13 = *(_OWORD *)(v4 + 80);
        v19[4] = *(_OWORD *)(v4 + 64);
        v19[5] = v13;
        long long v14 = *(_OWORD *)(v4 + 112);
        v19[6] = *(_OWORD *)(v4 + 96);
        v19[7] = v14;
        long long v15 = *(_OWORD *)(v4 + 16);
        v19[0] = *(_OWORD *)v4;
        v19[1] = v15;
        long long v16 = *(_OWORD *)(v4 + 48);
        v19[2] = *(_OWORD *)(v4 + 32);
        v19[3] = v16;
        char v17 = _s19PreviewsMessagingOS22BuiltTargetDescriptionV2eeoiySbAC_ACtFZ_0((uint64_t)v21, (uint64_t)v19);
        if ((v17 & 1) == 0) {
          break;
        }
        uint64_t v5 = v6 - 1;
        v4 += 168;
        v3 += 168;
      }
      while (v6);
    }
  }
  else
  {
    char v17 = 0;
  }
  return v17 & 1;
}

uint64_t sub_25A566FCC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  uint64_t v3 = 0;
  uint64_t v4 = a1 + 32;
  uint64_t v5 = a2 + 32;
  while (1)
  {
    uint64_t v6 = (void *)(v4 + 24 * v3);
    uint64_t v8 = v6[1];
    uint64_t v7 = v6[2];
    long long v9 = (void *)(v5 + 24 * v3);
    uint64_t v10 = v9[1];
    uint64_t v11 = v9[2];
    if (v8)
    {
      if (!v10) {
        return 0;
      }
      if (*v6 != *v9 || v8 != v10)
      {
        uint64_t v13 = v6[2];
        uint64_t v14 = v3;
        uint64_t v15 = v4;
        uint64_t v16 = v5;
        char v17 = sub_25A6233B0();
        uint64_t v7 = v13;
        uint64_t v5 = v16;
        uint64_t v4 = v15;
        uint64_t v3 = v14;
        if ((v17 & 1) == 0) {
          return 0;
        }
      }
    }
    else if (v10)
    {
      return 0;
    }
    uint64_t v18 = *(void *)(v7 + 16);
    if (v18 != *(void *)(v11 + 16)) {
      return 0;
    }
    if (v18 && v7 != v11) {
      break;
    }
LABEL_20:
    ++v3;
    uint64_t result = 1;
    if (v3 == v2) {
      return result;
    }
  }
  uint64_t v47 = v5;
  uint64_t v48 = v4;
  uint64_t v49 = v3;
  uint64_t v50 = v2;
  uint64_t v53 = v11 + 32;
  uint64_t v54 = v7 + 32;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v21 = 0;
  uint64_t v52 = v11;
  uint64_t v51 = v18;
  while (2)
  {
    if (v21 >= *(void *)(v11 + 16))
    {
      __break(1u);
      JUMPOUT(0x25A5674B4);
    }
    uint64_t v22 = (uint64_t *)(v54 + 48 * v21);
    uint64_t v23 = *v22;
    uint64_t v24 = v22[1];
    uint64_t v26 = v22[2];
    uint64_t v25 = v22[3];
    uint64_t v27 = v22[4];
    int v28 = *((unsigned __int8 *)v22 + 40);
    uint64_t v29 = v53 + 48 * v21;
    uint64_t v31 = *(void *)(v29 + 16);
    uint64_t v30 = *(void *)(v29 + 24);
    uint64_t v32 = *(void *)(v29 + 32);
    int v33 = *(unsigned __int8 *)(v29 + 40);
    BOOL v34 = v23 == *(void *)v29 && v24 == *(void *)(v29 + 8);
    uint64_t v55 = *(void *)(v29 + 24);
    if (!v34)
    {
      char v35 = sub_25A6233B0();
      uint64_t v30 = v55;
      if ((v35 & 1) == 0) {
        goto LABEL_65;
      }
    }
    BOOL v36 = v26 == v31 && v25 == v30;
    if (!v36 && (sub_25A6233B0() & 1) == 0) {
      goto LABEL_65;
    }
    uint64_t v37 = *(void *)(v27 + 16);
    if (v37 != *(void *)(v32 + 16)) {
      goto LABEL_65;
    }
    if (v37) {
      BOOL v38 = v27 == v32;
    }
    else {
      BOOL v38 = 1;
    }
    if (v38)
    {
LABEL_41:
      unint64_t v39 = 0x800000025A635E00;
      unint64_t v40 = 0xD000000000000012;
      switch(v28)
      {
        case 0:
          unint64_t v39 = 0xE800000000000000;
          unint64_t v40 = 0x7469617274726F70;
          break;
        case 1:
          break;
        case 2:
          unint64_t v39 = 0xED00007466654C65;
          goto LABEL_52;
        case 3:
          unint64_t v39 = 0xEE00746867695265;
LABEL_52:
          unint64_t v40 = 0x70616373646E616CLL;
          break;
        default:
          if (v33 == 4) {
            goto LABEL_23;
          }
          goto LABEL_65;
      }
      unint64_t v44 = 0x800000025A635E00;
      unint64_t v45 = 0xD000000000000012;
      switch(v33)
      {
        case 0:
          unint64_t v44 = 0xE800000000000000;
          unint64_t v45 = 0x7469617274726F70;
          goto LABEL_58;
        case 1:
          goto LABEL_58;
        case 2:
          unint64_t v44 = 0xED00007466654C65;
          goto LABEL_57;
        case 3:
          unint64_t v44 = 0xEE00746867695265;
LABEL_57:
          unint64_t v45 = 0x70616373646E616CLL;
LABEL_58:
          if (v40 == v45 && v39 == v44)
          {
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          else
          {
            char v46 = sub_25A6233B0();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((v46 & 1) == 0) {
              goto LABEL_65;
            }
          }
LABEL_23:
          ++v21;
          uint64_t v11 = v52;
          if (v21 != v51) {
            continue;
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v3 = v49;
          uint64_t v2 = v50;
          uint64_t v5 = v47;
          uint64_t v4 = v48;
          break;
        default:
          goto LABEL_65;
      }
      goto LABEL_20;
    }
    break;
  }
  BOOL v41 = (void *)(v27 + 40);
  unint64_t v42 = (void *)(v32 + 40);
  while (1)
  {
    BOOL v43 = *(v41 - 1) == *(v42 - 1) && *v41 == *v42;
    if (!v43 && (sub_25A6233B0() & 1) == 0) {
      break;
    }
    v41 += 2;
    v42 += 2;
    if (!--v37) {
      goto LABEL_41;
    }
  }
LABEL_65:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_25A5674D4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    uint64_t v3 = (void *)(a1 + 40);
    for (uint64_t i = (void *)(a2 + 40); ; i += 2)
    {
      BOOL v5 = *(v3 - 1) == *(i - 1) && *v3 == *i;
      if (!v5 && (sub_25A6233B0() & 1) == 0) {
        break;
      }
      v3 += 2;
      if (!--v2) {
        return 1;
      }
    }
    return 0;
  }
  return 1;
}

uint64_t sub_25A56755C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    uint64_t v3 = 0;
    do
    {
      uint64_t v4 = *(void *)(a1 + v3 + 40);
      uint64_t v5 = *(void *)(a1 + v3 + 48);
      uint64_t v6 = *(void *)(a1 + v3 + 56);
      uint64_t v7 = *(void *)(a1 + v3 + 64);
      uint64_t v8 = *(void *)(a2 + v3 + 40);
      uint64_t v9 = *(void *)(a2 + v3 + 48);
      uint64_t v10 = *(void *)(a2 + v3 + 56);
      uint64_t v11 = *(void *)(a2 + v3 + 64);
      int v18 = *(unsigned __int8 *)(a2 + v3 + 72);
      int v19 = *(unsigned __int8 *)(a1 + v3 + 72);
      if (v4)
      {
        if (!v8) {
          return 0;
        }
        BOOL v12 = *(void *)(a1 + v3 + 32) == *(void *)(a2 + v3 + 32) && v4 == v8;
        if (!v12 && (sub_25A6233B0() & 1) == 0) {
          return 0;
        }
      }
      else if (v8)
      {
        return 0;
      }
      BOOL v13 = v5 == v9 && v6 == v10;
      if (!v13 && (sub_25A6233B0() & 1) == 0) {
        return 0;
      }
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      char v14 = sub_25A603408(v7, v11);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = 0;
      if (v14 & 1) == 0 || ((v19 ^ v18)) {
        return result;
      }
      v3 += 48;
      --v2;
    }
    while (v2);
  }
  return 1;
}

uint64_t sub_25A5676EC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    uint64_t v3 = (uint64_t *)(a2 + 56);
    uint64_t v4 = (uint64_t *)(a1 + 56);
    do
    {
      uint64_t v5 = *(v4 - 2);
      uint64_t v6 = *(v4 - 1);
      uint64_t v7 = *v4;
      uint64_t v8 = *(v3 - 2);
      uint64_t v9 = *(v3 - 1);
      uint64_t v10 = *v3;
      if (v5)
      {
        if (!v8) {
          return 0;
        }
        BOOL v11 = *(v4 - 3) == *(v3 - 3) && v5 == v8;
        if (!v11 && (sub_25A6233B0() & 1) == 0) {
          return 0;
        }
      }
      else if (v8)
      {
        return 0;
      }
      BOOL v12 = v6 == v9 && v7 == v10;
      if (!v12 && (sub_25A6233B0() & 1) == 0) {
        return 0;
      }
      v3 += 4;
      v4 += 4;
      --v2;
    }
    while (v2);
  }
  return 1;
}

uint64_t sub_25A5677CC(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  if (v2 != a2[2]) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  BOOL v5 = a1[4] == a2[4] && a1[5] == a2[5];
  if (v5 || (v6 = sub_25A6233B0(), uint64_t result = 0, (v6 & 1) != 0))
  {
    uint64_t v8 = v2 - 1;
    if (!v8) {
      return 1;
    }
    uint64_t v9 = a2 + 7;
    for (uint64_t i = a1 + 7; ; i += 2)
    {
      BOOL v11 = *(i - 1) == *(v9 - 1) && *i == *v9;
      if (!v11 && (sub_25A6233B0() & 1) == 0) {
        break;
      }
      v9 += 2;
      if (!--v8) {
        return 1;
      }
    }
    return 0;
  }
  return result;
}

uint64_t sub_25A567894(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  char v5 = *(unsigned char *)(a1 + 48);
  char v6 = *(unsigned char *)(a2 + 48);
  BOOL v7 = *(void *)(a1 + 32) == *(void *)(a2 + 32) && *(void *)(a1 + 40) == *(void *)(a2 + 40);
  if (v7 || (v8 = sub_25A6233B0(), uint64_t result = 0, (v8 & 1) != 0))
  {
    uint64_t v10 = (unsigned char *)(a2 + 72);
    BOOL v11 = (unsigned char *)(a1 + 72);
    for (uint64_t i = v2 - 1; ; --i)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v13 = (v5 & 1) != 0 ? 1801545079 : 0x676E6F727473;
      unint64_t v14 = (v5 & 1) != 0 ? 0xE400000000000000 : 0xE600000000000000;
      uint64_t v15 = (v6 & 1) != 0 ? 1801545079 : 0x676E6F727473;
      unint64_t v16 = (v6 & 1) != 0 ? 0xE400000000000000 : 0xE600000000000000;
      if (v13 == v15 && v14 == v16)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        char v17 = sub_25A6233B0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v17 & 1) == 0) {
          return 0;
        }
      }
      if (!i) {
        break;
      }
      char v5 = *v11;
      char v6 = *v10;
      if ((*((void *)v11 - 2) != *((void *)v10 - 2) || *((void *)v11 - 1) != *((void *)v10 - 1))
        && (sub_25A6233B0() & 1) == 0)
      {
        return 0;
      }
      v10 += 24;
      v11 += 24;
    }
    return 1;
  }
  return result;
}

uint64_t StaticLinkablePreviewProduct.builtTargetDescriptions.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t StaticLinkablePreviewProduct.builtTargetDescriptions.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  void *v1 = a1;
  return result;
}

uint64_t (*StaticLinkablePreviewProduct.builtTargetDescriptions.modify())()
{
  return nullsub_1;
}

PreviewsMessagingOS::StaticLinkablePreviewProduct __swiftcall StaticLinkablePreviewProduct.init(builtTargetDescriptions:)(PreviewsMessagingOS::StaticLinkablePreviewProduct builtTargetDescriptions)
{
  v1->builtTargetDescriptions._rawValue = builtTargetDescriptions.builtTargetDescriptions._rawValue;
  return builtTargetDescriptions;
}

uint64_t StaticLinkablePreviewProduct.hash(into:)(uint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = *(void *)(*v1 + 16);
  uint64_t result = sub_25A623460();
  if (v4)
  {
    swift_bridgeObjectRetain();
    BuiltTargetDescription.hash(into:)(a1);
    uint64_t v6 = v4 - 1;
    if (v6)
    {
      uint64_t v7 = v3 + 200;
      do
      {
        BuiltTargetDescription.hash(into:)(a1);
        v7 += 168;
        --v6;
      }
      while (v6);
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t static StaticLinkablePreviewProduct.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  return sub_25A566EE0(*a1, *a2);
}

uint64_t StaticLinkablePreviewProduct.hashValue.getter()
{
  uint64_t v1 = *v0;
  sub_25A623450();
  uint64_t v2 = *(void *)(v1 + 16);
  sub_25A623460();
  if (v2)
  {
    swift_bridgeObjectRetain();
    BuiltTargetDescription.hash(into:)((uint64_t)v6);
    uint64_t v3 = v2 - 1;
    if (v3)
    {
      uint64_t v4 = v1 + 200;
      do
      {
        BuiltTargetDescription.hash(into:)((uint64_t)v6);
        v4 += 168;
        --v3;
      }
      while (v3);
    }
    swift_bridgeObjectRelease();
  }
  return sub_25A6234A0();
}

uint64_t sub_25A567CC4()
{
  uint64_t v1 = *v0;
  sub_25A623450();
  uint64_t v2 = *(void *)(v1 + 16);
  sub_25A623460();
  if (v2)
  {
    swift_bridgeObjectRetain();
    BuiltTargetDescription.hash(into:)((uint64_t)v6);
    uint64_t v3 = v2 - 1;
    if (v3)
    {
      uint64_t v4 = v1 + 200;
      do
      {
        BuiltTargetDescription.hash(into:)((uint64_t)v6);
        v4 += 168;
        --v3;
      }
      while (v3);
    }
    swift_bridgeObjectRelease();
  }
  return sub_25A6234A0();
}

uint64_t sub_25A567DC0(uint64_t *a1, uint64_t *a2)
{
  return sub_25A566EE0(*a1, *a2);
}

uint64_t sub_25A567DCC()
{
  return 1;
}

uint64_t sub_25A567DD4()
{
  return sub_25A6234A0();
}

uint64_t sub_25A567E2C()
{
  return sub_25A622DF0();
}

uint64_t sub_25A567E48()
{
  return sub_25A6234A0();
}

uint64_t sub_25A567E9C@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_25A6232B0();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_25A567EF0(void *a1@<X8>)
{
  *a1 = 0xD000000000000017;
  a1[1] = 0x800000025A634FD0;
}

unint64_t sub_25A567F10()
{
  return 0xD000000000000017;
}

uint64_t StaticLinkablePreviewProduct.propertyListValue.getter()
{
  uint64_t v1 = *v0;
  uint64_t result = sub_25A6227B0();
  if (*(void *)(v1 + 16))
  {
    v3[5] = v1;
    v3[3] = &type metadata for StaticLinkablePreviewProduct.Key;
    v3[4] = sub_25A567FB0();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A429918);
    sub_25A568004();
    sub_25A622700();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v3);
  }
  return result;
}

unint64_t sub_25A567FB0()
{
  unint64_t result = qword_26A429910;
  if (!qword_26A429910)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A429910);
  }
  return result;
}

unint64_t sub_25A568004()
{
  unint64_t result = qword_26A429920;
  if (!qword_26A429920)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A429918);
    sub_25A568078();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A429920);
  }
  return result;
}

unint64_t sub_25A568078()
{
  unint64_t result = qword_26A429928;
  if (!qword_26A429928)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A429928);
  }
  return result;
}

uint64_t StaticLinkablePreviewProduct.init(propertyListValue:)@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  v9[3] = &type metadata for StaticLinkablePreviewProduct.Key;
  v9[4] = sub_25A567FB0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A429918);
  sub_25A568004();
  sub_25A622760();
  if (v2)
  {
    uint64_t v5 = sub_25A6227C0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
    if (v10) {
      uint64_t v7 = v10;
    }
    else {
      uint64_t v7 = MEMORY[0x263F8EE78];
    }
    uint64_t v8 = sub_25A6227C0();
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(a1, v8);
    *a2 = v7;
  }
  return result;
}

unint64_t sub_25A5681F0()
{
  unint64_t result = qword_26A429930;
  if (!qword_26A429930)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A429930);
  }
  return result;
}

uint64_t sub_25A568248@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return StaticLinkablePreviewProduct.init(propertyListValue:)(a1, a2);
}

ValueMetadata *type metadata accessor for StaticLinkablePreviewProduct()
{
  return &type metadata for StaticLinkablePreviewProduct;
}

uint64_t getEnumTagSinglePayload for StaticLinkablePreviewProduct.Key(unsigned int *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if ((a2 + 1) >= 0x10000) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) < 0x100) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return *(unsigned __int8 *)a1;
}

unsigned char *storeEnumTagSinglePayload for StaticLinkablePreviewProduct.Key(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x25A568360);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_25A568388()
{
  return 0;
}

ValueMetadata *type metadata accessor for StaticLinkablePreviewProduct.Key()
{
  return &type metadata for StaticLinkablePreviewProduct.Key;
}

unint64_t sub_25A5683A4()
{
  unint64_t result = qword_26A429938;
  if (!qword_26A429938)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A429938);
  }
  return result;
}

uint64_t CanvasControlDescription.ControlType.TimelineConfiguration.TimelineStop.id.getter()
{
  return *(void *)v0;
}

uint64_t CanvasControlDescription.ControlType.TimelineConfiguration.TimelineStop.id.setter(uint64_t result)
{
  void *v1 = result;
  return result;
}

uint64_t (*CanvasControlDescription.ControlType.TimelineConfiguration.TimelineStop.id.modify())()
{
  return nullsub_1;
}

uint64_t CanvasControlDescription.ControlType.TimelineConfiguration.TimelineStop.name.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t CanvasControlDescription.ControlType.TimelineConfiguration.TimelineStop.name.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 8) = a1;
  *(void *)(v2 + 16) = a2;
  return result;
}

uint64_t (*CanvasControlDescription.ControlType.TimelineConfiguration.TimelineStop.name.modify())()
{
  return nullsub_1;
}

uint64_t CanvasControlDescription.ControlType.TimelineConfiguration.TimelineStop.sfSymbolName.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t CanvasControlDescription.ControlType.TimelineConfiguration.TimelineStop.sfSymbolName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = a2;
  return result;
}

uint64_t (*CanvasControlDescription.ControlType.TimelineConfiguration.TimelineStop.sfSymbolName.modify())()
{
  return nullsub_1;
}

void __swiftcall CanvasControlDescription.ControlType.TimelineConfiguration.TimelineStop.init(id:name:sfSymbolName:)(PreviewsMessagingOS::CanvasControlDescription::ControlType::TimelineConfiguration::TimelineStop *__return_ptr retstr, Swift::Int id, Swift::String name, Swift::String_optional sfSymbolName)
{
  retstr->id = id;
  retstr->name = name;
  retstr->sfSymbolName = sfSymbolName;
}

void sub_25A568548(void *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t CanvasControlDescription.ControlType.TimelineConfiguration.stops.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t CanvasControlDescription.ControlType.TimelineConfiguration.stops.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  void *v1 = a1;
  return result;
}

uint64_t (*CanvasControlDescription.ControlType.TimelineConfiguration.stops.modify())()
{
  return nullsub_1;
}

uint64_t CanvasControlDescription.ControlType.TimelineConfiguration.allowShuffle.getter()
{
  return *(unsigned __int8 *)(v0 + 8);
}

uint64_t CanvasControlDescription.ControlType.TimelineConfiguration.allowShuffle.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 8) = result;
  return result;
}

uint64_t (*CanvasControlDescription.ControlType.TimelineConfiguration.allowShuffle.modify())()
{
  return nullsub_1;
}

PreviewsMessagingOS::CanvasControlDescription::ControlType::TimelineConfiguration __swiftcall CanvasControlDescription.ControlType.TimelineConfiguration.init(stops:allowShuffle:)(Swift::OpaquePointer stops, Swift::Bool allowShuffle)
{
  *(Swift::OpaquePointer *)uint64_t v2 = stops;
  *(unsigned char *)(v2 + 8) = allowShuffle;
  result.stops = stops;
  result.allowShuffle = allowShuffle;
  return result;
}

uint64_t CanvasControlDescription.ControlType.ToggleConfiguration.sfSymbolName.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t CanvasControlDescription.ControlType.ToggleConfiguration.sfSymbolName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  void *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*CanvasControlDescription.ControlType.ToggleConfiguration.sfSymbolName.modify())()
{
  return nullsub_1;
}

uint64_t CanvasControlDescription.ControlType.ToggleConfiguration.title.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t CanvasControlDescription.ControlType.ToggleConfiguration.title.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t (*CanvasControlDescription.ControlType.ToggleConfiguration.title.modify())()
{
  return nullsub_1;
}

uint64_t CanvasControlDescription.ControlType.ToggleConfiguration.supportsInteractionEvents.getter()
{
  return *(unsigned __int8 *)(v0 + 32);
}

uint64_t CanvasControlDescription.ControlType.ToggleConfiguration.supportsInteractionEvents.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 32) = result;
  return result;
}

uint64_t (*CanvasControlDescription.ControlType.ToggleConfiguration.supportsInteractionEvents.modify())()
{
  return nullsub_1;
}

void __swiftcall CanvasControlDescription.ControlType.ToggleConfiguration.init(sfSymbolName:title:supportsInteractionEvents:)(PreviewsMessagingOS::CanvasControlDescription::ControlType::ToggleConfiguration *__return_ptr retstr, Swift::String sfSymbolName, Swift::String title, Swift::Bool supportsInteractionEvents)
{
  retstr->sfSymbolName = sfSymbolName;
  retstr->title = title;
  retstr->supportsInteractionEvents = supportsInteractionEvents;
}

uint64_t CanvasControlDescription.ControlType.GridConfiguration.Item.title.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t CanvasControlDescription.ControlType.GridConfiguration.Item.title.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  void *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*CanvasControlDescription.ControlType.GridConfiguration.Item.title.modify())()
{
  return nullsub_1;
}

PreviewsMessagingOS::CanvasControlDescription::ControlType::GridConfiguration::Item __swiftcall CanvasControlDescription.ControlType.GridConfiguration.Item.init(title:)(PreviewsMessagingOS::CanvasControlDescription::ControlType::GridConfiguration::Item title)
{
  PreviewsMessagingOS::CanvasControlDescription::ControlType::GridConfiguration::Item *v1 = title;
  return title;
}

uint64_t CanvasControlDescription.ControlType.GridConfiguration.Section.title.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t CanvasControlDescription.ControlType.GridConfiguration.Section.title.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  void *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*CanvasControlDescription.ControlType.GridConfiguration.Section.title.modify())()
{
  return nullsub_1;
}

uint64_t CanvasControlDescription.ControlType.GridConfiguration.Section.firstItem.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 24);
  *a1 = *(void *)(v1 + 16);
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t CanvasControlDescription.ControlType.GridConfiguration.Section.firstItem.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 16) = v2;
  *(void *)(v1 + 24) = v3;
  return result;
}

uint64_t (*CanvasControlDescription.ControlType.GridConfiguration.Section.firstItem.modify())()
{
  return nullsub_1;
}

uint64_t CanvasControlDescription.ControlType.GridConfiguration.Section.moreItems.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t CanvasControlDescription.ControlType.GridConfiguration.Section.moreItems.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 32) = a1;
  return result;
}

uint64_t (*CanvasControlDescription.ControlType.GridConfiguration.Section.moreItems.modify())()
{
  return nullsub_1;
}

void __swiftcall CanvasControlDescription.ControlType.GridConfiguration.Section.init(title:firstItem:moreItems:)(PreviewsMessagingOS::CanvasControlDescription::ControlType::GridConfiguration::Section *__return_ptr retstr, Swift::String_optional title, PreviewsMessagingOS::CanvasControlDescription::ControlType::GridConfiguration::Item firstItem, Swift::OpaquePointer moreItems)
{
  retstr->title = title;
  retstr->firstItem = *(PreviewsMessagingOS::CanvasControlDescription::ControlType::GridConfiguration::Item *)firstItem.title.value._countAndFlagsBits;
  retstr->moreItems._rawValue = firstItem.title.value._object;
}

void __swiftcall CanvasControlDescription.ControlType.GridConfiguration.Section.init(title:items:)(PreviewsMessagingOS::CanvasControlDescription::ControlType::GridConfiguration::Section_optional *__return_ptr retstr, Swift::String_optional title, Swift::OpaquePointer items)
{
  object = title.value._object;
  uint64_t v6 = *((void *)items._rawValue + 2);
  if (v6)
  {
    uint64_t countAndFlagsBits = title.value._countAndFlagsBits;
    uint64_t v8 = *((void *)items._rawValue + 4);
    uint64_t v9 = (void *)*((void *)items._rawValue + 5);
    sub_25A6233C0();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    uint64_t v10 = swift_dynamicCastClass();
    if (!v10)
    {
      swift_bridgeObjectRelease();
      uint64_t v10 = MEMORY[0x263F8EE78];
    }
    uint64_t v11 = *(void *)(v10 + 16);
    swift_release();
    if (v11 == v6 - 1)
    {
      BOOL v12 = (void *)swift_dynamicCastClass();
      if (!v12)
      {
        swift_bridgeObjectRelease();
        BOOL v12 = (void *)MEMORY[0x263F8EE78];
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      BOOL v12 = (void *)sub_25A5596F0((uint64_t)items._rawValue, (uint64_t)items._rawValue + 32, 1, (2 * v6) | 1);
    }
    swift_bridgeObjectRelease();
    retstr->value.title.value._uint64_t countAndFlagsBits = countAndFlagsBits;
    retstr->value.title.value._object = object;
    retstr->value.firstItem.title.value._uint64_t countAndFlagsBits = v8;
    retstr->value.firstItem.title.value._object = v9;
    retstr->value.moreItems._rawValue = v12;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    retstr->value.moreItems._rawValue = 0;
    retstr->value.title = 0u;
    retstr->value.firstItem = 0u;
  }
}

uint64_t CanvasControlDescription.ControlType.GridConfiguration.Section.items.getter()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v1 = *(void *)(v0 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A429588);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_25A625820;
  *(void *)(v3 + 32) = v2;
  *(void *)(v3 + 40) = v1;
  uint64_t v6 = v3;
  swift_bridgeObjectRetain();
  uint64_t v4 = swift_bridgeObjectRetain();
  sub_25A554F58(v4);
  return v6;
}

uint64_t CanvasControlDescription.ControlType.GridConfiguration.sections.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t CanvasControlDescription.ControlType.GridConfiguration.sections.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  void *v1 = a1;
  return result;
}

uint64_t (*CanvasControlDescription.ControlType.GridConfiguration.sections.modify())()
{
  return nullsub_1;
}

PreviewsMessagingOS::CanvasControlDescription::ControlType::GridConfiguration __swiftcall CanvasControlDescription.ControlType.GridConfiguration.init(sections:)(PreviewsMessagingOS::CanvasControlDescription::ControlType::GridConfiguration sections)
{
  v1->sections._rawValue = sections.sections._rawValue;
  return sections;
}

uint64_t CanvasControlDescription.controlType.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_25A56D490(v1, a1, type metadata accessor for CanvasControlDescription.ControlType);
}

uint64_t CanvasControlDescription.controlType.setter(uint64_t a1)
{
  return sub_25A56D518(a1, v1, type metadata accessor for CanvasControlDescription.ControlType);
}

uint64_t (*CanvasControlDescription.controlType.modify())()
{
  return nullsub_1;
}

uint64_t (*CanvasControlDescription.modifiers.modify())()
{
  return nullsub_1;
}

__n128 CanvasControlDescription.thumbnailGeometry.getter@<Q0>(__n128 *a1@<X8>)
{
  uint64_t v3 = (__n128 *)(v1 + *(int *)(type metadata accessor for CanvasControlDescription(0) + 24));
  unint64_t v4 = v3[1].n128_u64[0];
  unsigned __int8 v5 = v3[1].n128_u8[8];
  __n128 result = *v3;
  *a1 = *v3;
  a1[1].n128_u64[0] = v4;
  a1[1].n128_u8[8] = v5;
  return result;
}

__n128 CanvasControlDescription.thumbnailGeometry.setter(__n128 *a1)
{
  __n128 v6 = *a1;
  unint64_t v2 = a1[1].n128_u64[0];
  unsigned __int8 v3 = a1[1].n128_u8[8];
  unint64_t v4 = (__n128 *)(v1 + *(int *)(type metadata accessor for CanvasControlDescription(0) + 24));
  __n128 result = v6;
  *unint64_t v4 = v6;
  v4[1].n128_u64[0] = v2;
  v4[1].n128_u8[8] = v3;
  return result;
}

uint64_t (*CanvasControlDescription.thumbnailGeometry.modify())()
{
  return nullsub_1;
}

__n128 CanvasControlDescription.init(controlType:modifiers:thumbnailGeometry:)@<Q0>(uint64_t a1@<X0>, __n128 *a2@<X2>, uint64_t a3@<X8>)
{
  __n128 v9 = *a2;
  unint64_t v5 = a2[1].n128_u64[0];
  unsigned __int8 v6 = a2[1].n128_u8[8];
  uint64_t v7 = (__n128 *)(a3 + *(int *)(type metadata accessor for CanvasControlDescription(0) + 24));
  sub_25A56D580(a1, a3, type metadata accessor for CanvasControlDescription.ControlType);
  __n128 result = v9;
  *uint64_t v7 = v9;
  v7[1].n128_u64[0] = v5;
  v7[1].n128_u8[8] = v6;
  return result;
}

uint64_t static CanvasControlDescription.disabled.getter@<X0>(uint64_t a1@<X8>)
{
  type metadata accessor for CanvasControlDescription.ControlType(0);
  swift_storeEnumTagMultiPayload();
  uint64_t result = type metadata accessor for CanvasControlDescription(0);
  uint64_t v3 = a1 + *(int *)(result + 24);
  *(void *)uint64_t v3 = 0;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 16) = 0;
  *(unsigned char *)(v3 + 24) = 1;
  return result;
}

uint64_t sub_25A568DA8(char a1)
{
  if (!a1) {
    return 0x546C6F72746E6F63;
  }
  if (a1 == 1) {
    return 0x7265696669646F6DLL;
  }
  return 0xD000000000000011;
}

uint64_t sub_25A568E10(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_25A5E9094(*a1, *a2);
}

uint64_t sub_25A568E1C()
{
  return sub_25A617294();
}

uint64_t sub_25A568E24()
{
  return sub_25A54A0D0();
}

uint64_t sub_25A568E2C()
{
  return sub_25A61D9F8();
}

uint64_t sub_25A568E34@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_25A570B50();
  *a1 = result;
  return result;
}

uint64_t sub_25A568E6C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_25A568DA8(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_25A568E98()
{
  return sub_25A568DA8(*v0);
}

uint64_t CanvasControlDescription.init(propertyListValue:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = type metadata accessor for CanvasControlDescription.ControlType(0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v18 = &type metadata for CanvasControlDescription.Key;
  unint64_t v8 = sub_25A56D2B0();
  unint64_t v19 = v8;
  v17[0] = 0;
  sub_25A56D754(&qword_26A429948, (void (*)(uint64_t))type metadata accessor for CanvasControlDescription.ControlType);
  sub_25A622710();
  if (v2)
  {
    uint64_t v9 = sub_25A6227C0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(a1, v9);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
    int v18 = &type metadata for CanvasControlDescription.Key;
    unint64_t v19 = v8;
    v17[0] = 1;
    sub_25A56D304();
    sub_25A622710();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
    int v18 = &type metadata for CanvasControlDescription.Key;
    unint64_t v19 = v8;
    v17[0] = 2;
    sub_25A56D3B4();
    sub_25A622760();
    uint64_t v11 = sub_25A6227C0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(a1, v11);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
    *(_OWORD *)uint64_t v15 = *(_OWORD *)&v15[3];
    uint64_t v12 = v15[5];
    char v13 = v16;
    uint64_t v14 = a2 + *(int *)(type metadata accessor for CanvasControlDescription(0) + 24);
    uint64_t result = sub_25A56D580((uint64_t)v7, a2, type metadata accessor for CanvasControlDescription.ControlType);
    *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
    *(void *)(v14 + 16) = v12;
    *(unsigned char *)(v14 + 24) = v13;
  }
  return result;
}

uint64_t CanvasControlDescription.propertyListValue.getter()
{
  return sub_25A622780();
}

uint64_t sub_25A569170(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A429B00);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A429B08);
  uint64_t v6 = v5 - 8;
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)v20 - v10;
  uint64_t v12 = (char *)v20 + *(int *)(v6 + 56) - v10;
  *((unsigned char *)v20 - v10) = 0;
  sub_25A56D490(a1, (uint64_t)v12, type metadata accessor for CanvasControlDescription.ControlType);
  uint64_t v13 = a1 + *(int *)(type metadata accessor for CanvasControlDescription(0) + 24);
  v20[0] = *(_OWORD *)v13;
  uint64_t v14 = *(void *)(v13 + 16);
  char v15 = *(unsigned char *)(v13 + 24);
  uint64_t v16 = (uint64_t)&v9[*(int *)(v6 + 56)];
  *uint64_t v9 = 0;
  sub_25A56D490((uint64_t)v12, v16, type metadata accessor for CanvasControlDescription.ControlType);
  sub_25A56D580(v16, (uint64_t)v4, type metadata accessor for CanvasControlDescription.ControlType);
  uint64_t v17 = type metadata accessor for CanvasControlDescription.ControlType(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v4, 0, 1, v17);
  char v26 = 0;
  char v25 = 1;
  char v24 = 0;
  char v23 = 2;
  v20[1] = v20[0];
  uint64_t v21 = v14;
  char v22 = v15;
  sub_25A56D2B0();
  sub_25A56D754(&qword_26A429948, (void (*)(uint64_t))type metadata accessor for CanvasControlDescription.ControlType);
  sub_25A56D304();
  sub_25A56D3B4();
  uint64_t v18 = sub_25A622A70();
  sub_25A570C60((uint64_t)v4, &qword_26A429B00);
  sub_25A570C60((uint64_t)v11, &qword_26A429B08);
  return v18;
}

uint64_t sub_25A56940C()
{
  return sub_25A622780();
}

uint64_t sub_25A569448@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return CanvasControlDescription.init(propertyListValue:)(a1, a2);
}

double ThumbnailGeometry.size.getter()
{
  return *(double *)v0;
}

void ThumbnailGeometry.size.setter(double a1, double a2)
{
  double *v2 = a1;
  v2[1] = a2;
}

uint64_t (*ThumbnailGeometry.size.modify())()
{
  return nullsub_1;
}

double ThumbnailGeometry.cornerRadius.getter()
{
  return *(double *)(v0 + 16);
}

void ThumbnailGeometry.cornerRadius.setter(double a1)
{
  *(double *)(v1 + 16) = a1;
}

uint64_t (*ThumbnailGeometry.cornerRadius.modify())()
{
  return nullsub_1;
}

void ThumbnailGeometry.init(size:cornerRadius:)(double *a1@<X8>, double a2@<D0>, double a3@<D1>, double a4@<D2>)
{
  *a1 = a2;
  a1[1] = a3;
  a1[2] = a4;
}

uint64_t sub_25A5694CC(char a1)
{
  if (a1) {
    return 0x615272656E726F63;
  }
  else {
    return 1702521203;
  }
}

uint64_t sub_25A569504(char *a1, char *a2)
{
  return sub_25A5EADF8(*a1, *a2);
}

uint64_t sub_25A569510()
{
  return sub_25A617348();
}

uint64_t sub_25A569518()
{
  return sub_25A54B238();
}

uint64_t sub_25A569520()
{
  return sub_25A61C740();
}

uint64_t sub_25A569528@<X0>(char *a1@<X8>)
{
  return sub_25A56B748(a1);
}

uint64_t sub_25A569534@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_25A5694CC(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_25A569560()
{
  return sub_25A5694CC(*v0);
}

uint64_t ThumbnailGeometry.init(propertyListValue:)@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v13 = &type metadata for ThumbnailGeometry.Key;
  unint64_t v5 = sub_25A56D410();
  unint64_t v14 = v5;
  v12[0] = 0;
  type metadata accessor for CGSize(0);
  sub_25A622710();
  if (v2)
  {
    uint64_t v8 = sub_25A6227C0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(a1, v8);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
    uint64_t v6 = v15;
    uint64_t v7 = v16;
    uint64_t v13 = &type metadata for ThumbnailGeometry.Key;
    unint64_t v14 = v5;
    v12[0] = 1;
    sub_25A622710();
    uint64_t v9 = sub_25A6227C0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(a1, v9);
    uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
    uint64_t v11 = v17;
    *a2 = v6;
    a2[1] = v7;
    a2[2] = v11;
  }
  return result;
}

uint64_t ThumbnailGeometry.propertyListValue.getter()
{
  return sub_25A622780();
}

uint64_t sub_25A569714()
{
  return sub_25A622A80();
}

uint64_t sub_25A5697A8()
{
  return sub_25A622780();
}

uint64_t sub_25A5697F0@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return ThumbnailGeometry.init(propertyListValue:)(a1, a2);
}

PreviewsMessagingOS::CanvasControlEvent::Event_optional __swiftcall CanvasControlEvent.Event.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v1 = sub_25A6232B0();
  swift_bridgeObjectRelease();
  if (v1 == 1) {
    v2.value = PreviewsMessagingOS_CanvasControlEvent_Event_thumbnailRequest;
  }
  else {
    v2.value = PreviewsMessagingOS_CanvasControlEvent_Event_unknownDefault;
  }
  if (v1) {
    return v2;
  }
  else {
    return 0;
  }
}

uint64_t CanvasControlEvent.Event.rawValue.getter(char a1)
{
  if (a1) {
    return 0xD000000000000010;
  }
  else {
    return 0x7463617265746E69;
  }
}

uint64_t sub_25A5698A0(char *a1, char *a2)
{
  char v2 = *a2;
  uint64_t v3 = CanvasControlEvent.Event.rawValue.getter(*a1);
  uint64_t v5 = v4;
  if (v3 == CanvasControlEvent.Event.rawValue.getter(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_25A6233B0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_25A56992C()
{
  char v1 = *v0;
  sub_25A623450();
  CanvasControlEvent.Event.rawValue.getter(v1);
  sub_25A622DF0();
  swift_bridgeObjectRelease();
  return sub_25A6234A0();
}

uint64_t sub_25A569990()
{
  CanvasControlEvent.Event.rawValue.getter(*v0);
  sub_25A622DF0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25A5699E4()
{
  char v1 = *v0;
  sub_25A623450();
  CanvasControlEvent.Event.rawValue.getter(v1);
  sub_25A622DF0();
  swift_bridgeObjectRelease();
  return sub_25A6234A0();
}

uint64_t sub_25A569A44@<X0>(char *a1@<X8>)
{
  return sub_25A56B748(a1);
}

uint64_t sub_25A569A50@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = CanvasControlEvent.Event.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_25A569A7C(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_25A570BA4();
  uint64_t v5 = MEMORY[0x263F60648];

  return MEMORY[0x270F55C68](a1, a2, v4, v5);
}

uint64_t sub_25A569AD8()
{
  return sub_25A622B20();
}

uint64_t CanvasControlEvent.event.getter()
{
  return *v0;
}

uint64_t CanvasControlEvent.event.setter(uint64_t result)
{
  unsigned char *v1 = result & 1;
  return result;
}

uint64_t (*CanvasControlEvent.event.modify())()
{
  return nullsub_1;
}

uint64_t CanvasControlEvent.controlIndex.getter()
{
  return *(void *)(v0 + 8);
}

uint64_t CanvasControlEvent.controlIndex.setter(uint64_t result)
{
  *(void *)(v1 + 8) = result;
  return result;
}

uint64_t (*CanvasControlEvent.controlIndex.modify())()
{
  return nullsub_1;
}

uint64_t CanvasControlEvent.stateBox.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for CanvasControlEvent(0);
  return sub_25A56D490(v1 + *(int *)(v3 + 24), a1, type metadata accessor for PlistValueBox);
}

uint64_t CanvasControlEvent.stateBox.setter(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for CanvasControlEvent(0);
  return sub_25A56D518(a1, v1 + *(int *)(v3 + 24), type metadata accessor for PlistValueBox);
}

uint64_t (*CanvasControlEvent.stateBox.modify())()
{
  return nullsub_1;
}

uint64_t CanvasControlEvent.init<A>(event:controlIndex:state:)@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  char v11 = a1 & 1;
  uint64_t v12 = sub_25A623180();
  MEMORY[0x270FA5388](v12 - 8);
  unint64_t v14 = (char *)&v21 - v13;
  uint64_t v15 = type metadata accessor for PlistValueBox(0);
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v17 = (char *)&v21 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = *(void *)(a4 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v14, a3, a4);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v14, 0, 1, a4);
  PlistValueBox.init<A>(value:)((uint64_t)v14, a4, a5, (uint64_t)v17);
  (*(void (**)(uint64_t, uint64_t))(v18 + 8))(a3, a4);
  *(unsigned char *)a6 = v11;
  *(void *)(a6 + 8) = a2;
  uint64_t v19 = type metadata accessor for CanvasControlEvent(0);
  return sub_25A56D580((uint64_t)v17, a6 + *(int *)(v19 + 24), type metadata accessor for PlistValueBox);
}

uint64_t PlistValueBox.init<A>(value:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = sub_25A6227C0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  char v11 = &v14[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v15 = a2;
  uint64_t v16 = a3;
  uint64_t v17 = a1;
  sub_25A56D658();
  sub_25A6227A0();
  uint64_t v12 = sub_25A623180();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(a1, v12);
  return (*(uint64_t (**)(uint64_t, unsigned char *, uint64_t))(v9 + 32))(a4, v11, v8);
}

uint64_t sub_25A569F90(char a1)
{
  return *(void *)&aEvent_4[8 * a1];
}

uint64_t sub_25A569FB0(char *a1, char *a2)
{
  return sub_25A5EAD70(*a1, *a2);
}

uint64_t sub_25A569FBC()
{
  return sub_25A6173CC();
}

uint64_t sub_25A569FC4()
{
  return sub_25A54B1E4();
}

uint64_t sub_25A569FCC()
{
  return sub_25A61C7C0();
}

uint64_t sub_25A569FD4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_25A570B50();
  *a1 = result;
  return result;
}

uint64_t sub_25A56A00C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_25A569F90(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_25A56A038()
{
  return sub_25A569F90(*v0);
}

uint64_t CanvasControlEvent.init(propertyListValue:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = type metadata accessor for PlistValueBox(0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = &v16[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  uint64_t v17 = &type metadata for CanvasControlEvent.Key;
  unint64_t v8 = sub_25A56D6AC();
  unint64_t v18 = v8;
  v16[0] = 0;
  sub_25A56D700();
  sub_25A622710();
  if (v2)
  {
    uint64_t v11 = sub_25A6227C0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(a1, v11);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
    char v9 = v19;
    uint64_t v17 = &type metadata for CanvasControlEvent.Key;
    unint64_t v18 = v8;
    v16[0] = 1;
    sub_25A622710();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
    uint64_t v10 = v15;
    uint64_t v17 = &type metadata for CanvasControlEvent.Key;
    unint64_t v18 = v8;
    v16[0] = 2;
    sub_25A56D754((unint64_t *)&qword_26A429980, (void (*)(uint64_t))type metadata accessor for PlistValueBox);
    sub_25A622710();
    uint64_t v12 = sub_25A6227C0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(a1, v12);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
    *(unsigned char *)a2 = v9;
    *(void *)(a2 + 8) = v10;
    uint64_t v13 = type metadata accessor for CanvasControlEvent(0);
    return sub_25A56D580((uint64_t)v7, a2 + *(int *)(v13 + 24), type metadata accessor for PlistValueBox);
  }
}

uint64_t CanvasControlEvent.propertyListValue.getter()
{
  return sub_25A622780();
}

uint64_t sub_25A56A2C4(char *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A429AF0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = &v20[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A429AF8);
  uint64_t v6 = v5 - 8;
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  char v9 = &v20[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = &v20[-v10];
  char v12 = *a1;
  uint64_t v13 = *((void *)a1 + 1);
  unint64_t v14 = &v20[*(int *)(v6 + 56) - v10];
  v20[-v10] = 2;
  uint64_t v15 = type metadata accessor for CanvasControlEvent(0);
  sub_25A56D490((uint64_t)&a1[*(int *)(v15 + 24)], (uint64_t)v14, type metadata accessor for PlistValueBox);
  char v25 = 0;
  char v24 = v12;
  char v23 = 1;
  uint64_t v21 = v13;
  char v22 = 0;
  uint64_t v16 = (uint64_t)&v9[*(int *)(v6 + 56)];
  *char v9 = 2;
  sub_25A56D490((uint64_t)v14, v16, type metadata accessor for PlistValueBox);
  sub_25A56D580(v16, (uint64_t)v4, type metadata accessor for PlistValueBox);
  uint64_t v17 = type metadata accessor for PlistValueBox(0);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v4, 0, 1, v17);
  v20[15] = 2;
  sub_25A56D6AC();
  sub_25A56D700();
  sub_25A56D754((unint64_t *)&qword_26A429980, (void (*)(uint64_t))type metadata accessor for PlistValueBox);
  uint64_t v18 = sub_25A622A70();
  sub_25A570C60((uint64_t)v4, &qword_26A429AF0);
  sub_25A570C60((uint64_t)v11, &qword_26A429AF8);
  return v18;
}

uint64_t CanvasControlEvent.description.getter()
{
  return 0;
}

uint64_t sub_25A56A684()
{
  return sub_25A622780();
}

uint64_t sub_25A56A6C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return CanvasControlEvent.init(propertyListValue:)(a1, a2);
}

void static MessageStreamInstanceIdentifier.canvasControlEvents.getter(void *a1@<X8>)
{
  *a1 = 0xD00000000000001FLL;
  a1[1] = 0x800000025A636560;
}

uint64_t sub_25A56A70C@<X0>(BOOL *a1@<X8>)
{
  return sub_25A56C88C(a1);
}

uint64_t sub_25A56A718@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_25A570A70();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t PlistValueBox.getValue<A>()(uint64_t a1, uint64_t a2)
{
  return sub_25A56A79C(a1, a2, MEMORY[0x263F604E0]);
}

uint64_t PlistValueBox.getOptionalValue<A>()(uint64_t a1, uint64_t a2)
{
  return sub_25A56A79C(a1, a2, MEMORY[0x263F604E8]);
}

uint64_t sub_25A56A79C(uint64_t a1, uint64_t a2, void (*a3)(unsigned char *, uint64_t, uint64_t))
{
  uint64_t v8 = &type metadata for PlistValueBox.Key;
  unint64_t v9 = sub_25A56D658();
  a3(v7, a1, a2);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
}

uint64_t PlistValueBox.init(propertyListValue:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_25A6227C0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
}

uint64_t PlistValueBox.propertyListValue.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_25A6227C0();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t PlistValueBox.description.getter()
{
  uint64_t v0 = sub_25A622750();
  if (*(void *)(v0 + 16) && (unint64_t v1 = sub_25A56D114(0x65756C6176, 0xE500000000000000), (v2 & 1) != 0)) {
    sub_25A56D81C(*(void *)(v0 + 56) + 32 * v1, (uint64_t)v8);
  }
  else {
    memset(v8, 0, sizeof(v8));
  }
  swift_bridgeObjectRelease();
  sub_25A56D7A4((uint64_t)v8, (uint64_t)&v6);
  if (v7)
  {
    sub_25A56D80C(&v6, v5);
    sub_25A623270();
    uint64_t v3 = 0;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
    sub_25A570C60((uint64_t)v8, &qword_26A429988);
  }
  else
  {
    sub_25A570C60((uint64_t)v8, &qword_26A429988);
    return 7104878;
  }
  return v3;
}

uint64_t sub_25A56AA00(char a1)
{
  return *(void *)&aTimelinetoggle_0[8 * a1];
}

uint64_t sub_25A56AA20@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_25A6227C0();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t sub_25A56AA88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_25A6227C0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
}

uint64_t sub_25A56AAFC(char *a1, char *a2)
{
  return sub_25A5E9544(*a1, *a2);
}

uint64_t sub_25A56AB08()
{
  return sub_25A617438();
}

uint64_t sub_25A56AB10()
{
  return sub_25A54A398();
}

uint64_t sub_25A56AB18()
{
  return sub_25A61D700();
}

uint64_t sub_25A56AB20@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_25A570B04();
  *a1 = result;
  return result;
}

uint64_t sub_25A56AB50@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_25A56AA00(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_25A56AB7C(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_25A570A84();
  uint64_t v5 = MEMORY[0x263F60648];

  return MEMORY[0x270F55C68](a1, a2, v4, v5);
}

uint64_t sub_25A56ABD8()
{
  return sub_25A622B20();
}

uint64_t sub_25A56AC40(char a1)
{
  if (a1) {
    return 0x72756769666E6F63;
  }
  else {
    return 0x696D697263736964;
  }
}

uint64_t sub_25A56AC8C(char *a1, char *a2)
{
  return sub_25A5E91BC(*a1, *a2);
}

uint64_t sub_25A56AC98()
{
  return sub_25A6174A4();
}

uint64_t sub_25A56ACA0()
{
  return sub_25A54A16C();
}

uint64_t sub_25A56ACA8()
{
  return sub_25A61D964();
}

uint64_t sub_25A56ACB0@<X0>(char *a1@<X8>)
{
  return sub_25A56B748(a1);
}

uint64_t sub_25A56ACBC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_25A56AC40(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_25A56ACE8()
{
  return sub_25A56AC40(*v0);
}

uint64_t CanvasControlDescription.ControlType.init(propertyListValue:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v39 = a2;
  uint64_t v4 = type metadata accessor for CanvasControlDescription.ControlType(0);
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x270FA5388](v5);
  uint64_t v10 = (char *)&v30 - v9;
  uint64_t v11 = MEMORY[0x270FA5388](v8);
  uint64_t v13 = (char *)&v30 - v12;
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v30 - v14;
  uint64_t v37 = &type metadata for CanvasControlDescription.ControlType.Key;
  unint64_t v16 = sub_25A56D878();
  unint64_t v38 = v16;
  v36[0] = 0;
  sub_25A56D8CC();
  sub_25A622710();
  if (v2)
  {
    uint64_t v17 = sub_25A6227C0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8))(a1, v17);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v36);
  }
  else
  {
    uint64_t v31 = v10;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v36);
    switch((char)v32)
    {
      case 1:
        uint64_t v37 = &type metadata for CanvasControlDescription.ControlType.Key;
        unint64_t v38 = v16;
        v36[0] = 1;
        sub_25A56D974();
        sub_25A622710();
        uint64_t v22 = sub_25A6227C0();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v22 - 8) + 8))(a1, v22);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v36);
        uint64_t v23 = v33;
        uint64_t v24 = v34;
        char v25 = v35;
        *(_OWORD *)uint64_t v13 = v32;
        *((void *)v13 + 2) = v23;
        *((void *)v13 + 3) = v24;
        v13[32] = v25;
        swift_storeEnumTagMultiPayload();
        uint64_t v21 = (uint64_t)v13;
        goto LABEL_10;
      case 2:
        uint64_t v37 = &type metadata for CanvasControlDescription.ControlType.Key;
        unint64_t v38 = v16;
        v36[0] = 1;
        sub_25A56D920();
        sub_25A622710();
        uint64_t v26 = sub_25A6227C0();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v26 - 8) + 8))(a1, v26);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v36);
        uint64_t v27 = v31;
        *uint64_t v31 = v32;
        swift_storeEnumTagMultiPayload();
        uint64_t v21 = (uint64_t)v27;
        goto LABEL_10;
      case 3:
        uint64_t v37 = &type metadata for CanvasControlDescription.ControlType.Key;
        unint64_t v38 = v16;
        v36[0] = 1;
        uint64_t v28 = sub_25A6227C0();
        sub_25A622710();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v28 - 8) + 8))(a1, v28);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v36);
        swift_storeEnumTagMultiPayload();
        uint64_t v21 = (uint64_t)v7;
        goto LABEL_10;
      case 4:
        uint64_t v29 = sub_25A6227C0();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v29 - 8) + 8))(a1, v29);
        return swift_storeEnumTagMultiPayload();
      default:
        uint64_t v37 = &type metadata for CanvasControlDescription.ControlType.Key;
        unint64_t v38 = v16;
        v36[0] = 1;
        sub_25A56D9C8();
        sub_25A622710();
        uint64_t v19 = sub_25A6227C0();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v19 - 8) + 8))(a1, v19);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v36);
        char v20 = BYTE8(v32);
        *(void *)uint64_t v15 = v32;
        v15[8] = v20;
        swift_storeEnumTagMultiPayload();
        uint64_t v21 = (uint64_t)v15;
LABEL_10:
        uint64_t result = sub_25A56D580(v21, v39, type metadata accessor for CanvasControlDescription.ControlType);
        break;
    }
  }
  return result;
}

uint64_t CanvasControlDescription.ControlType.propertyListValue.getter()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4299B8);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = &v18[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v4 = sub_25A6227C0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = &v18[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = type metadata accessor for CanvasControlDescription.ControlType(0);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = &v18[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v19 = v0;
  unint64_t v11 = sub_25A56D878();
  sub_25A56D8CC();
  sub_25A6227A0();
  sub_25A56D490(v0, (uint64_t)v10, type metadata accessor for CanvasControlDescription.ControlType);
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 1:
      uint64_t v14 = *((void *)v10 + 1);
      uint64_t v15 = *((void *)v10 + 2);
      uint64_t v16 = *((void *)v10 + 3);
      char v17 = v10[32];
      uint64_t v20 = *(void *)v10;
      uint64_t v21 = v14;
      uint64_t v22 = v15;
      uint64_t v23 = v16;
      char v24 = v17;
      uint64_t v26 = &type metadata for CanvasControlDescription.ControlType.Key;
      unint64_t v27 = v11;
      v25[0] = 1;
      sub_25A56D974();
      sub_25A622700();
      swift_bridgeObjectRelease();
      goto LABEL_6;
    case 2:
      uint64_t v20 = *(void *)v10;
      uint64_t v26 = &type metadata for CanvasControlDescription.ControlType.Key;
      unint64_t v27 = v11;
      v25[0] = 1;
      sub_25A56D920();
      goto LABEL_5;
    case 3:
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v5 + 32))(v7, v10, v4);
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v5 + 16))(v3, v7, v4);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v5 + 56))(v3, 0, 1, v4);
      uint64_t v26 = &type metadata for CanvasControlDescription.ControlType.Key;
      unint64_t v27 = v11;
      v25[0] = 1;
      sub_25A622700();
      sub_25A570C60((uint64_t)v3, &qword_26A4299B8);
      (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
    case 4:
      return result;
    default:
      char v13 = v10[8];
      uint64_t v20 = *(void *)v10;
      LOBYTE(v21) = v13;
      uint64_t v26 = &type metadata for CanvasControlDescription.ControlType.Key;
      unint64_t v27 = v11;
      v25[0] = 1;
      sub_25A56D9C8();
LABEL_5:
      sub_25A622700();
LABEL_6:
      swift_bridgeObjectRelease();
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
  }
}

uint64_t sub_25A56B55C(unsigned char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for CanvasControlDescription.ControlType(0);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  *a1 = 0;
  sub_25A56D490(a3, (uint64_t)v8, type metadata accessor for CanvasControlDescription.ControlType);
  uint64_t result = swift_getEnumCaseMultiPayload();
  char v10 = 4;
  switch((int)result)
  {
    case 1:
      uint64_t result = sub_25A56D358((uint64_t)v8);
      char v10 = 1;
      break;
    case 2:
      uint64_t result = sub_25A56D358((uint64_t)v8);
      char v10 = 2;
      break;
    case 3:
      uint64_t v11 = sub_25A6227C0();
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(*(void *)(v11 - 8) + 8))(v8, v11);
      char v10 = 3;
      break;
    case 4:
      break;
    default:
      uint64_t result = sub_25A56D358((uint64_t)v8);
      char v10 = 0;
      break;
  }
  *a2 = v10;
  return result;
}

uint64_t sub_25A56B6C0(char a1)
{
  if (a1) {
    return 0x756853776F6C6C61;
  }
  else {
    return 0x73706F7473;
  }
}

uint64_t sub_25A56B700@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return CanvasControlDescription.ControlType.init(propertyListValue:)(a1, a2);
}

uint64_t sub_25A56B718(char *a1, char *a2)
{
  return sub_25A5E9274(*a1, *a2);
}

uint64_t sub_25A56B724()
{
  return sub_25A61753C();
}

uint64_t sub_25A56B72C()
{
  return sub_25A54A1EC();
}

uint64_t sub_25A56B734()
{
  return sub_25A61D8E0();
}

uint64_t sub_25A56B73C@<X0>(char *a1@<X8>)
{
  return sub_25A56B748(a1);
}

uint64_t sub_25A56B748@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_25A6232B0();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_25A56B7A4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_25A56B6C0(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_25A56B7D0()
{
  return sub_25A56B6C0(*v0);
}

uint64_t CanvasControlDescription.ControlType.TimelineConfiguration.init(propertyListValue:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v12 = &type metadata for CanvasControlDescription.ControlType.TimelineConfiguration.Key;
  unint64_t v5 = sub_25A56DA24();
  unint64_t v13 = v5;
  v11[0] = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4299C8);
  sub_25A56DD4C(&qword_26A4299D0, &qword_26A4299C8, (void (*)(void))sub_25A56DA78);
  sub_25A622710();
  if (v2)
  {
    uint64_t v6 = sub_25A6227C0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
    uint64_t v7 = v14;
    uint64_t v12 = &type metadata for CanvasControlDescription.ControlType.TimelineConfiguration.Key;
    unint64_t v13 = v5;
    v11[0] = 1;
    sub_25A622710();
    uint64_t v9 = sub_25A6227C0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(a1, v9);
    uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
    *(void *)a2 = v7;
    *(unsigned char *)(a2 + 8) = v10;
  }
  return result;
}

uint64_t CanvasControlDescription.ControlType.TimelineConfiguration.propertyListValue.getter()
{
  return sub_25A622780();
}

uint64_t sub_25A56B9F0()
{
  return sub_25A622A80();
}

uint64_t sub_25A56BAAC(char a1)
{
  return qword_25A626898[a1];
}

uint64_t sub_25A56BACC()
{
  return sub_25A622780();
}

uint64_t sub_25A56BB14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return CanvasControlDescription.ControlType.TimelineConfiguration.init(propertyListValue:)(a1, a2);
}

uint64_t sub_25A56BB2C(char *a1, char *a2)
{
  return sub_25A5E931C(*a1, *a2);
}

uint64_t sub_25A56BB38()
{
  return sub_25A6175C4();
}

uint64_t sub_25A56BB40()
{
  return sub_25A54A25C();
}

uint64_t sub_25A56BB48()
{
  return sub_25A61D878();
}

uint64_t sub_25A56BB50@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_25A570B50();
  *a1 = result;
  return result;
}

uint64_t sub_25A56BB88@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_25A56BAAC(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_25A56BBB4()
{
  return sub_25A56BAAC(*v0);
}

uint64_t CanvasControlDescription.ControlType.TimelineConfiguration.TimelineStop.init(propertyListValue:)@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v15 = &type metadata for CanvasControlDescription.ControlType.TimelineConfiguration.TimelineStop.Key;
  unint64_t v5 = sub_25A56DAD8();
  unint64_t v16 = v5;
  v14[0] = 0;
  sub_25A622710();
  if (v2)
  {
    uint64_t v7 = sub_25A6227C0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(a1, v7);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
    uint64_t v6 = v17;
    uint64_t v15 = &type metadata for CanvasControlDescription.ControlType.TimelineConfiguration.TimelineStop.Key;
    unint64_t v16 = v5;
    v14[0] = 1;
    sub_25A622710();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
    uint64_t v15 = &type metadata for CanvasControlDescription.ControlType.TimelineConfiguration.TimelineStop.Key;
    unint64_t v16 = v5;
    v14[0] = 2;
    sub_25A622760();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
    uint64_t v8 = sub_25A6227C0();
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(a1, v8);
    *a2 = v6;
    a2[1] = v12;
    a2[2] = v13;
    a2[3] = v10;
    a2[4] = v11;
  }
  return result;
}

uint64_t CanvasControlDescription.ControlType.TimelineConfiguration.TimelineStop.propertyListValue.getter()
{
  return sub_25A622780();
}

uint64_t sub_25A56BDF4(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = a1[1];
  uint64_t v3 = a1[2];
  sub_25A570BF8((uint64_t)(a1 + 3), (uint64_t)v12);
  char v11 = 0;
  uint64_t v9 = v1;
  char v10 = 0;
  char v8 = 1;
  uint64_t v6 = v2;
  uint64_t v7 = v3;
  v5[23] = 2;
  sub_25A570BF8((uint64_t)v12, (uint64_t)v5);
  sub_25A56DAD8();
  return sub_25A622A70();
}

uint64_t sub_25A56BEBC(char a1)
{
  if (!a1) {
    return 0x6C6F626D79536673;
  }
  if (a1 == 1) {
    return 0x656C746974;
  }
  return 0xD000000000000019;
}

uint64_t sub_25A56BF1C()
{
  return sub_25A622780();
}

uint64_t sub_25A56BF6C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return CanvasControlDescription.ControlType.TimelineConfiguration.TimelineStop.init(propertyListValue:)(a1, a2);
}

uint64_t sub_25A56BF84(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_25A5E93A4(*a1, *a2);
}

uint64_t sub_25A56BF90()
{
  return sub_25A617630();
}

uint64_t sub_25A56BF98()
{
  return sub_25A54A2B0();
}

uint64_t sub_25A56BFA0()
{
  return sub_25A61D7D0();
}

uint64_t sub_25A56BFA8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_25A570B50();
  *a1 = result;
  return result;
}

uint64_t sub_25A56BFE0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_25A56BEBC(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_25A56C00C()
{
  return sub_25A56BEBC(*v0);
}

uint64_t CanvasControlDescription.ControlType.ToggleConfiguration.init(propertyListValue:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v15 = &type metadata for CanvasControlDescription.ControlType.ToggleConfiguration.Key;
  unint64_t v5 = sub_25A56DB34();
  unint64_t v16 = v5;
  v14[0] = 0;
  sub_25A622710();
  if (v2)
  {
    uint64_t v6 = sub_25A6227C0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
    uint64_t v8 = v17;
    uint64_t v7 = v18;
    uint64_t v15 = &type metadata for CanvasControlDescription.ControlType.ToggleConfiguration.Key;
    unint64_t v16 = v5;
    v14[0] = 1;
    sub_25A622710();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
    uint64_t v15 = &type metadata for CanvasControlDescription.ControlType.ToggleConfiguration.Key;
    unint64_t v16 = v5;
    v14[0] = 2;
    sub_25A622710();
    uint64_t v10 = sub_25A6227C0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(a1, v10);
    uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
    char v11 = v19;
    *(void *)a2 = v8;
    *(void *)(a2 + 8) = v7;
    *(void *)(a2 + 16) = v12;
    *(void *)(a2 + 24) = v13;
    *(unsigned char *)(a2 + 32) = v11;
  }
  return result;
}

uint64_t CanvasControlDescription.ControlType.ToggleConfiguration.propertyListValue.getter()
{
  return sub_25A622780();
}

uint64_t sub_25A56C294()
{
  return sub_25A622A70();
}

uint64_t sub_25A56C338()
{
  return sub_25A622780();
}

uint64_t sub_25A56C388@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return CanvasControlDescription.ControlType.ToggleConfiguration.init(propertyListValue:)(a1, a2);
}

uint64_t CanvasControlDescription.Modifiers.init(propertyListValue:)(uint64_t a1)
{
  uint64_t v2 = sub_25A6227C0();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
}

uint64_t sub_25A56C408(uint64_t a1)
{
  uint64_t v2 = sub_25A6227C0();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
}

uint64_t sub_25A56C474@<X0>(BOOL *a1@<X8>)
{
  return sub_25A56C88C(a1);
}

uint64_t sub_25A56C480@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_25A570AD8();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t CanvasControlDescription.ControlType.GridConfiguration.propertyListValue.getter()
{
  return sub_25A6227A0();
}

uint64_t CanvasControlDescription.ControlType.GridConfiguration.init(propertyListValue:)@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v8 = &type metadata for CanvasControlDescription.ControlType.GridConfiguration.Key;
  unint64_t v9 = sub_25A56DB9C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4299F0);
  sub_25A56DD4C(&qword_26A429A00, &qword_26A4299F0, (void (*)(void))sub_25A56DBF0);
  sub_25A622710();
  uint64_t v5 = sub_25A6227C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
  if (!v2) {
    *a2 = v10;
  }
  return result;
}

uint64_t sub_25A56C690()
{
  return sub_25A6227A0();
}

uint64_t sub_25A56C73C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v8 = &type metadata for CanvasControlDescription.ControlType.GridConfiguration.Key;
  unint64_t v9 = sub_25A56DB9C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A4299F0);
  sub_25A56DD4C(&qword_26A429A00, &qword_26A4299F0, (void (*)(void))sub_25A56DBF0);
  sub_25A622710();
  uint64_t v5 = sub_25A6227C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
  if (!v2) {
    *a2 = v10;
  }
  return result;
}

uint64_t sub_25A56C880@<X0>(BOOL *a1@<X8>)
{
  return sub_25A56C88C(a1);
}

uint64_t sub_25A56C88C@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_25A6232B0();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_25A56C8DC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_25A570AF0();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t CanvasControlDescription.ControlType.GridConfiguration.Item.propertyListValue.getter()
{
  return sub_25A6227A0();
}

double CanvasControlDescription.ControlType.GridConfiguration.Item.init(propertyListValue:)@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v8 = &type metadata for CanvasControlDescription.ControlType.GridConfiguration.Item.Key;
  unint64_t v9 = sub_25A56DC48();
  sub_25A622760();
  uint64_t v5 = sub_25A6227C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
  if (!v2)
  {
    double result = *(double *)&v10;
    *a2 = v10;
  }
  return result;
}

uint64_t sub_25A56CA78(char a1)
{
  return *(void *)&aTitle_4[8 * a1];
}

uint64_t sub_25A56CA98()
{
  return sub_25A6227A0();
}

double sub_25A56CB08@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v8 = &type metadata for CanvasControlDescription.ControlType.GridConfiguration.Item.Key;
  unint64_t v9 = sub_25A56DC48();
  sub_25A622760();
  uint64_t v5 = sub_25A6227C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
  if (!v2)
  {
    double result = *(double *)&v10;
    *a2 = v10;
  }
  return result;
}

uint64_t sub_25A56CC08(char *a1, char *a2)
{
  return sub_25A5E94BC(*a1, *a2);
}

uint64_t sub_25A56CC14()
{
  return sub_25A6176DC();
}

uint64_t sub_25A56CC1C()
{
  return sub_25A54A344();
}

uint64_t sub_25A56CC24()
{
  return sub_25A61D768();
}

uint64_t sub_25A56CC2C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_25A570B50();
  *a1 = result;
  return result;
}

uint64_t sub_25A56CC64@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_25A56CA78(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_25A56CC90()
{
  return sub_25A56CA78(*v0);
}

uint64_t CanvasControlDescription.ControlType.GridConfiguration.Section.propertyListValue.getter()
{
  return sub_25A622780();
}

uint64_t sub_25A56CCE8(uint64_t a1)
{
  sub_25A570BF8(a1, (uint64_t)v3);
  v2[23] = 0;
  sub_25A570BF8((uint64_t)v3, (uint64_t)v2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A429A28);
  sub_25A56DCA4();
  sub_25A56DCF8();
  sub_25A56DD4C(&qword_26A429A30, &qword_26A429A28, (void (*)(void))sub_25A56DCF8);
  return sub_25A622A70();
}

uint64_t CanvasControlDescription.ControlType.GridConfiguration.Section.init(propertyListValue:)@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v15 = &type metadata for CanvasControlDescription.ControlType.GridConfiguration.Section.Key;
  unint64_t v5 = sub_25A56DCA4();
  unint64_t v16 = v5;
  v14[0] = 0;
  sub_25A622760();
  if (v2)
  {
    uint64_t v6 = sub_25A6227C0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
    uint64_t v8 = v17;
    uint64_t v7 = v18;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v15 = &type metadata for CanvasControlDescription.ControlType.GridConfiguration.Section.Key;
    unint64_t v16 = v5;
    v14[0] = 1;
    sub_25A56DCF8();
    sub_25A622710();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
    uint64_t v10 = v17;
    uint64_t v9 = v18;
    uint64_t v15 = &type metadata for CanvasControlDescription.ControlType.GridConfiguration.Section.Key;
    unint64_t v16 = v5;
    v14[0] = 2;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A429A28);
    sub_25A56DD4C(&qword_26A429A30, &qword_26A429A28, (void (*)(void))sub_25A56DCF8);
    sub_25A622710();
    uint64_t v11 = sub_25A6227C0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(a1, v11);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
    uint64_t v12 = v17;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *a2 = v8;
    a2[1] = v7;
    a2[2] = v10;
    a2[3] = v9;
    a2[4] = v12;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_25A56D0AC()
{
  return sub_25A622780();
}

uint64_t sub_25A56D0FC@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return CanvasControlDescription.ControlType.GridConfiguration.Section.init(propertyListValue:)(a1, a2);
}

unint64_t sub_25A56D114(uint64_t a1, uint64_t a2)
{
  sub_25A623450();
  sub_25A622DF0();
  uint64_t v4 = sub_25A6234A0();

  return sub_25A56D18C(a1, a2, v4);
}

unint64_t sub_25A56D18C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    uint64_t v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_25A6233B0() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        uint64_t v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_25A6233B0() & 1) == 0);
    }
  }
  return v6;
}

uint64_t type metadata accessor for CanvasControlDescription.ControlType(uint64_t a1)
{
  return sub_25A54FD94(a1, (uint64_t *)&unk_26A429A50);
}

uint64_t type metadata accessor for CanvasControlDescription(uint64_t a1)
{
  return sub_25A54FD94(a1, (uint64_t *)&unk_26A429A40);
}

unint64_t sub_25A56D2B0()
{
  unint64_t result = qword_26A429940;
  if (!qword_26A429940)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A429940);
  }
  return result;
}

unint64_t sub_25A56D304()
{
  unint64_t result = qword_26A429950;
  if (!qword_26A429950)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A429950);
  }
  return result;
}

uint64_t sub_25A56D358(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for CanvasControlDescription.ControlType(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_25A56D3B4()
{
  unint64_t result = qword_26A429958;
  if (!qword_26A429958)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A429958);
  }
  return result;
}

uint64_t sub_25A56D408()
{
  return sub_25A569170(*(void *)(v0 + 16));
}

unint64_t sub_25A56D410()
{
  unint64_t result = qword_26A429960;
  if (!qword_26A429960)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A429960);
  }
  return result;
}

uint64_t sub_25A56D464()
{
  return sub_25A569714();
}

uint64_t type metadata accessor for CanvasControlEvent(uint64_t a1)
{
  return sub_25A54FD94(a1, (uint64_t *)&unk_26A429A60);
}

uint64_t sub_25A56D490(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t type metadata accessor for PlistValueBox(uint64_t a1)
{
  return sub_25A54FD94(a1, (uint64_t *)&unk_26A429A70);
}

uint64_t sub_25A56D518(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t sub_25A56D580(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_25A56D5E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(v2 + 32);
  uint64_t v5 = sub_25A623180();
  unint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v6(a2, v4, v5);
}

unint64_t sub_25A56D658()
{
  unint64_t result = qword_26A429968;
  if (!qword_26A429968)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A429968);
  }
  return result;
}

unint64_t sub_25A56D6AC()
{
  unint64_t result = qword_26A429970;
  if (!qword_26A429970)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A429970);
  }
  return result;
}

unint64_t sub_25A56D700()
{
  unint64_t result = qword_26A429978;
  if (!qword_26A429978)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A429978);
  }
  return result;
}

uint64_t sub_25A56D754(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_25A56D79C()
{
  return sub_25A56A2C4(*(char **)(v0 + 16));
}

uint64_t sub_25A56D7A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A429988);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

_OWORD *sub_25A56D80C(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_25A56D81C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

unint64_t sub_25A56D878()
{
  unint64_t result = qword_26A429990;
  if (!qword_26A429990)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A429990);
  }
  return result;
}

unint64_t sub_25A56D8CC()
{
  unint64_t result = qword_26A429998;
  if (!qword_26A429998)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A429998);
  }
  return result;
}

unint64_t sub_25A56D920()
{
  unint64_t result = qword_26A4299A0;
  if (!qword_26A4299A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4299A0);
  }
  return result;
}

unint64_t sub_25A56D974()
{
  unint64_t result = qword_26A4299A8;
  if (!qword_26A4299A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4299A8);
  }
  return result;
}

unint64_t sub_25A56D9C8()
{
  unint64_t result = qword_26A4299B0;
  if (!qword_26A4299B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4299B0);
  }
  return result;
}

uint64_t sub_25A56DA1C(unsigned char *a1, char *a2)
{
  return sub_25A56B55C(a1, a2, *(void *)(v2 + 16));
}

unint64_t sub_25A56DA24()
{
  unint64_t result = qword_26A4299C0;
  if (!qword_26A4299C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4299C0);
  }
  return result;
}

unint64_t sub_25A56DA78()
{
  unint64_t result = qword_26A4299D8;
  if (!qword_26A4299D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4299D8);
  }
  return result;
}

uint64_t sub_25A56DACC()
{
  return sub_25A56B9F0();
}

unint64_t sub_25A56DAD8()
{
  unint64_t result = qword_26A4299E0;
  if (!qword_26A4299E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4299E0);
  }
  return result;
}

uint64_t sub_25A56DB2C()
{
  return sub_25A56BDF4(*(uint64_t **)(v0 + 16));
}

unint64_t sub_25A56DB34()
{
  unint64_t result = qword_26A4299E8;
  if (!qword_26A4299E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4299E8);
  }
  return result;
}

uint64_t sub_25A56DB88()
{
  return sub_25A56C294();
}

uint64_t sub_25A56DB90(uint64_t a1, void *a2)
{
  *a2 = *(void *)(v2 + 16);
  return swift_bridgeObjectRetain();
}

unint64_t sub_25A56DB9C()
{
  unint64_t result = qword_26A4299F8;
  if (!qword_26A4299F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A4299F8);
  }
  return result;
}

unint64_t sub_25A56DBF0()
{
  unint64_t result = qword_26A429A08;
  if (!qword_26A429A08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A429A08);
  }
  return result;
}

unint64_t sub_25A56DC48()
{
  unint64_t result = qword_26A429A10;
  if (!qword_26A429A10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A429A10);
  }
  return result;
}

uint64_t sub_25A56DC9C()
{
  return sub_25A56CCE8(*(void *)(v0 + 16));
}

unint64_t sub_25A56DCA4()
{
  unint64_t result = qword_26A429A18;
  if (!qword_26A429A18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A429A18);
  }
  return result;
}

unint64_t sub_25A56DCF8()
{
  unint64_t result = qword_26A429A20;
  if (!qword_26A429A20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A429A20);
  }
  return result;
}

uint64_t sub_25A56DD4C(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_25A56DDC4()
{
  return MEMORY[0x263F8D6D8];
}

unint64_t sub_25A56DDD4()
{
  unint64_t result = qword_26A429A38;
  if (!qword_26A429A38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A429A38);
  }
  return result;
}

char *initializeBufferWithCopyOfBuffer for CanvasControlDescription(char *a1, char *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = (char *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for CanvasControlDescription.ControlType(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        *(void *)a1 = *(void *)a2;
        a1[8] = a2[8];
        swift_bridgeObjectRetain();
        goto LABEL_9;
      case 1u:
        uint64_t v9 = *((void *)a2 + 1);
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = v9;
        uint64_t v10 = *((void *)a2 + 3);
        *((void *)a1 + 2) = *((void *)a2 + 2);
        *((void *)a1 + 3) = v10;
        a1[32] = a2[32];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_9;
      case 2u:
        *(void *)a1 = *(void *)a2;
        swift_bridgeObjectRetain();
        goto LABEL_9;
      case 3u:
        uint64_t v11 = sub_25A6227C0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
LABEL_9:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
        break;
    }
    uint64_t v12 = *(int *)(a3 + 24);
    uint64_t v13 = &a1[v12];
    BOOL v14 = &a2[v12];
    *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
    *(_OWORD *)(v13 + 9) = *(_OWORD *)(v14 + 9);
  }
  return a1;
}

uint64_t destroy for CanvasControlDescription(uint64_t a1)
{
  type metadata accessor for CanvasControlDescription.ControlType(0);
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
    case 2:
      goto LABEL_3;
    case 1:
      swift_bridgeObjectRelease();
LABEL_3:
      uint64_t result = swift_bridgeObjectRelease();
      break;
    case 3:
      uint64_t v3 = sub_25A6227C0();
      uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
      uint64_t result = v4(a1, v3);
      break;
    default:
      return result;
  }
  return result;
}

char *initializeWithCopy for CanvasControlDescription(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for CanvasControlDescription.ControlType(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      *(void *)a1 = *(void *)a2;
      a1[8] = a2[8];
      swift_bridgeObjectRetain();
      goto LABEL_7;
    case 1u:
      uint64_t v7 = *((void *)a2 + 1);
      *(void *)a1 = *(void *)a2;
      *((void *)a1 + 1) = v7;
      uint64_t v8 = *((void *)a2 + 3);
      *((void *)a1 + 2) = *((void *)a2 + 2);
      *((void *)a1 + 3) = v8;
      a1[32] = a2[32];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_7;
    case 2u:
      *(void *)a1 = *(void *)a2;
      swift_bridgeObjectRetain();
      goto LABEL_7;
    case 3u:
      uint64_t v9 = sub_25A6227C0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
LABEL_7:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
      break;
  }
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
  *(_OWORD *)(v11 + 9) = *(_OWORD *)(v12 + 9);
  return a1;
}

char *assignWithCopy for CanvasControlDescription(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_25A56D358((uint64_t)a1);
    uint64_t v6 = type metadata accessor for CanvasControlDescription.ControlType(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        *(void *)a1 = *(void *)a2;
        a1[8] = a2[8];
        swift_bridgeObjectRetain();
        goto LABEL_8;
      case 1u:
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = *((void *)a2 + 1);
        *((void *)a1 + 2) = *((void *)a2 + 2);
        *((void *)a1 + 3) = *((void *)a2 + 3);
        a1[32] = a2[32];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_8;
      case 2u:
        *(void *)a1 = *(void *)a2;
        swift_bridgeObjectRetain();
        goto LABEL_8;
      case 3u:
        uint64_t v7 = sub_25A6227C0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
LABEL_8:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
        break;
    }
  }
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  long long v11 = *(_OWORD *)v10;
  *(_OWORD *)(v9 + 9) = *(_OWORD *)(v10 + 9);
  *(_OWORD *)uint64_t v9 = v11;
  return a1;
}

char *initializeWithTake for CanvasControlDescription(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for CanvasControlDescription.ControlType(0);
  if (swift_getEnumCaseMultiPayload() == 3)
  {
    uint64_t v7 = sub_25A6227C0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
  *(_OWORD *)(v9 + 9) = *(_OWORD *)(v10 + 9);
  return a1;
}

char *assignWithTake for CanvasControlDescription(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_25A56D358((uint64_t)a1);
    uint64_t v6 = type metadata accessor for CanvasControlDescription.ControlType(0);
    if (swift_getEnumCaseMultiPayload() == 3)
    {
      uint64_t v7 = sub_25A6227C0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
  *(_OWORD *)(v9 + 9) = *(_OWORD *)(v10 + 9);
  return a1;
}

uint64_t getEnumTagSinglePayload for CanvasControlDescription(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25A56E61C);
}

uint64_t sub_25A56E61C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_indexTm(a1, a2, a3, type metadata accessor for CanvasControlDescription.ControlType);
}

uint64_t storeEnumTagSinglePayload for CanvasControlDescription(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25A56E648);
}

uint64_t sub_25A56E648(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_indexTm(a1, a2, a3, a4, type metadata accessor for CanvasControlDescription.ControlType);
}

uint64_t sub_25A56E660()
{
  uint64_t result = type metadata accessor for CanvasControlDescription.ControlType(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *initializeBufferWithCopyOfBuffer for CanvasControlDescription.ControlType(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v7 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = (unsigned char *)(v7 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        *(void *)a1 = *(void *)a2;
        a1[8] = a2[8];
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 1u:
        uint64_t v9 = *((void *)a2 + 1);
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = v9;
        uint64_t v10 = *((void *)a2 + 3);
        *((void *)a1 + 2) = *((void *)a2 + 2);
        *((void *)a1 + 3) = v10;
        a1[32] = a2[32];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 2u:
        *(void *)a1 = *(void *)a2;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 3u:
        uint64_t v11 = sub_25A6227C0();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(v6 + 64));
        break;
    }
  }
  return a1;
}

uint64_t destroy for CanvasControlDescription.ControlType(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
    case 2:
      goto LABEL_3;
    case 1:
      swift_bridgeObjectRelease();
LABEL_3:
      uint64_t result = swift_bridgeObjectRelease();
      break;
    case 3:
      uint64_t v3 = sub_25A6227C0();
      uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
      uint64_t result = v4(a1, v3);
      break;
    default:
      return result;
  }
  return result;
}

unsigned char *initializeWithCopy for CanvasControlDescription.ControlType(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      *(void *)a1 = *(void *)a2;
      a1[8] = a2[8];
      swift_bridgeObjectRetain();
      goto LABEL_7;
    case 1u:
      uint64_t v6 = *((void *)a2 + 1);
      *(void *)a1 = *(void *)a2;
      *((void *)a1 + 1) = v6;
      uint64_t v7 = *((void *)a2 + 3);
      *((void *)a1 + 2) = *((void *)a2 + 2);
      *((void *)a1 + 3) = v7;
      a1[32] = a2[32];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_7;
    case 2u:
      *(void *)a1 = *(void *)a2;
      swift_bridgeObjectRetain();
      goto LABEL_7;
    case 3u:
      uint64_t v8 = sub_25A6227C0();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
LABEL_7:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

unsigned char *assignWithCopy for CanvasControlDescription.ControlType(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_25A56D358((uint64_t)a1);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        *(void *)a1 = *(void *)a2;
        a1[8] = a2[8];
        swift_bridgeObjectRetain();
        goto LABEL_8;
      case 1u:
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = *((void *)a2 + 1);
        *((void *)a1 + 2) = *((void *)a2 + 2);
        *((void *)a1 + 3) = *((void *)a2 + 3);
        a1[32] = a2[32];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_8;
      case 2u:
        *(void *)a1 = *(void *)a2;
        swift_bridgeObjectRetain();
        goto LABEL_8;
      case 3u:
        uint64_t v6 = sub_25A6227C0();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
LABEL_8:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

void *initializeWithTake for CanvasControlDescription.ControlType(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 3)
  {
    uint64_t v6 = sub_25A6227C0();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void *assignWithTake for CanvasControlDescription.ControlType(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_25A56D358((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() == 3)
    {
      uint64_t v6 = sub_25A6227C0();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_25A56EDF4()
{
  uint64_t result = sub_25A6227C0();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for CanvasControlDescription.ControlType.TimelineConfiguration(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for CanvasControlDescription.ControlType.TimelineConfiguration()
{
  return swift_bridgeObjectRelease();
}

uint64_t assignWithCopy for CanvasControlDescription.ControlType.TimelineConfiguration(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  return a1;
}

uint64_t __swift_memcpy9_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(unsigned char *)(result + 8) = *((unsigned char *)a2 + 8);
  *(void *)uint64_t result = v2;
  return result;
}

uint64_t assignWithTake for CanvasControlDescription.ControlType.TimelineConfiguration(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  return a1;
}

uint64_t getEnumTagSinglePayload for CanvasControlDescription.ControlType.TimelineConfiguration(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 9)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CanvasControlDescription.ControlType.TimelineConfiguration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 9) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CanvasControlDescription.ControlType.TimelineConfiguration()
{
  return &type metadata for CanvasControlDescription.ControlType.TimelineConfiguration;
}

uint64_t destroy for CanvasControlDescription.ControlType.TimelineConfiguration.TimelineStop()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for CanvasControlDescription.ControlType.TimelineConfiguration.TimelineStop(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for CanvasControlDescription.ControlType.TimelineConfiguration.TimelineStop(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for CanvasControlDescription.ControlType.TimelineConfiguration.TimelineStop(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for CanvasControlDescription.ControlType.TimelineConfiguration.TimelineStop(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CanvasControlDescription.ControlType.TimelineConfiguration.TimelineStop(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CanvasControlDescription.ControlType.TimelineConfiguration.TimelineStop()
{
  return &type metadata for CanvasControlDescription.ControlType.TimelineConfiguration.TimelineStop;
}

uint64_t initializeWithCopy for CanvasControlDescription.ControlType.ToggleConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for CanvasControlDescription.ControlType.ToggleConfiguration(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

__n128 __swift_memcpy33_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for CanvasControlDescription.ControlType.ToggleConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for CanvasControlDescription.ControlType.ToggleConfiguration(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 33)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CanvasControlDescription.ControlType.ToggleConfiguration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 33) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CanvasControlDescription.ControlType.ToggleConfiguration()
{
  return &type metadata for CanvasControlDescription.ControlType.ToggleConfiguration;
}

ValueMetadata *type metadata accessor for CanvasControlDescription.ControlType.GridConfiguration()
{
  return &type metadata for CanvasControlDescription.ControlType.GridConfiguration;
}

void *initializeBufferWithCopyOfBuffer for CanvasControlDescription.ControlType.GridConfiguration.Item(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for JITLoadCommand.LoadDylib()
{
  return swift_bridgeObjectRelease();
}

void *assignWithCopy for CanvasControlDescription.ControlType.GridConfiguration.Item(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for CanvasControlDescription.ControlType.GridConfiguration.Item(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for CanvasControlDescription.ControlType.GridConfiguration.Item(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for CanvasControlDescription.ControlType.GridConfiguration.Item(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CanvasControlDescription.ControlType.GridConfiguration.Item()
{
  return &type metadata for CanvasControlDescription.ControlType.GridConfiguration.Item;
}

void *initializeWithCopy for CanvasControlDescription.ControlType.GridConfiguration.Section(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for CanvasControlDescription.ControlType.GridConfiguration.Section(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for CanvasControlDescription.ControlType.GridConfiguration.Section(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for CanvasControlDescription.ControlType.GridConfiguration.Section(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CanvasControlDescription.ControlType.GridConfiguration.Section(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 32) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CanvasControlDescription.ControlType.GridConfiguration.Section()
{
  return &type metadata for CanvasControlDescription.ControlType.GridConfiguration.Section;
}

ValueMetadata *type metadata accessor for CanvasControlDescription.Modifiers()
{
  return &type metadata for CanvasControlDescription.Modifiers;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for ThumbnailGeometry(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 24)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for ThumbnailGeometry(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 24) = v3;
  return result;
}

ValueMetadata *type metadata accessor for ThumbnailGeometry()
{
  return &type metadata for ThumbnailGeometry;
}

uint64_t *initializeBufferWithCopyOfBuffer for CanvasControlEvent(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  char v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *char v3 = *a2;
    char v3 = (uint64_t *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    a1[1] = a2[1];
    uint64_t v5 = *(int *)(a3 + 24);
    uint64_t v6 = (char *)a1 + v5;
    uint64_t v7 = (char *)a2 + v5;
    uint64_t v8 = sub_25A6227C0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
  }
  return v3;
}

uint64_t destroy for CanvasControlEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 24);
  uint64_t v3 = sub_25A6227C0();
  int v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);

  return v4(v2, v3);
}

uint64_t initializeWithCopy for CanvasControlEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_25A6227C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

uint64_t assignWithCopy for CanvasControlEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_25A6227C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

uint64_t initializeWithTake for CanvasControlEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_25A6227C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t assignWithTake for CanvasControlEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_25A6227C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for CanvasControlEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25A56FB10);
}

uint64_t sub_25A56FB10(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 254)
  {
    unsigned int v4 = *a1;
    if (v4 >= 2) {
      return v4 - 1;
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v8 = type metadata accessor for PlistValueBox(0);
    uint64_t v9 = *(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = &a1[*(int *)(a3 + 24)];
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for CanvasControlEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25A56FBCC);
}

unsigned char *sub_25A56FBCC(unsigned char *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 254)
  {
    *__n128 result = a2 + 1;
  }
  else
  {
    uint64_t v7 = type metadata accessor for PlistValueBox(0);
    uint64_t v8 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = &v5[*(int *)(a4 + 24)];
    return (unsigned char *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_25A56FC70()
{
  uint64_t result = sub_25A6227C0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for CanvasControlEvent.Event()
{
  return &type metadata for CanvasControlEvent.Event;
}

uint64_t initializeBufferWithCopyOfBuffer for PlistValueBox(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_25A6227C0();
  uint64_t v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);

  return v5(a1, a2, v4);
}

uint64_t destroy for PlistValueBox(uint64_t a1)
{
  uint64_t v2 = sub_25A6227C0();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(a1, v2);
}

uint64_t initializeWithCopy for PlistValueBox(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_25A6227C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for PlistValueBox(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_25A6227C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for PlistValueBox(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_25A6227C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for PlistValueBox(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_25A6227C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for PlistValueBox(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25A56FF9C);
}

uint64_t sub_25A56FF9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_indexTm(a1, a2, a3, MEMORY[0x263F60500]);
}

uint64_t __swift_get_extra_inhabitant_indexTm(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t v6 = a4(0);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48);

  return v7(a1, a2, v6);
}

uint64_t storeEnumTagSinglePayload for PlistValueBox(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25A570038);
}

uint64_t sub_25A570038(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_indexTm(a1, a2, a3, a4, MEMORY[0x263F60500]);
}

uint64_t __swift_store_extra_inhabitant_indexTm(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v7 = a5(0);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);

  return v8(a1, a2, a2, v7);
}

uint64_t sub_25A5700C4()
{
  uint64_t result = sub_25A6227C0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for CanvasControlDescription.ControlType.GridConfiguration.Section.Key()
{
  return &type metadata for CanvasControlDescription.ControlType.GridConfiguration.Section.Key;
}

ValueMetadata *type metadata accessor for CanvasControlDescription.ControlType.GridConfiguration.Item.Key()
{
  return &type metadata for CanvasControlDescription.ControlType.GridConfiguration.Item.Key;
}

ValueMetadata *type metadata accessor for CanvasControlDescription.ControlType.GridConfiguration.Key()
{
  return &type metadata for CanvasControlDescription.ControlType.GridConfiguration.Key;
}

ValueMetadata *type metadata accessor for CanvasControlDescription.ControlType.ToggleConfiguration.Key()
{
  return &type metadata for CanvasControlDescription.ControlType.ToggleConfiguration.Key;
}

ValueMetadata *type metadata accessor for CanvasControlDescription.ControlType.TimelineConfiguration.TimelineStop.Key()
{
  return &type metadata for CanvasControlDescription.ControlType.TimelineConfiguration.TimelineStop.Key;
}

ValueMetadata *type metadata accessor for CanvasControlDescription.ControlType.TimelineConfiguration.Key()
{
  return &type metadata for CanvasControlDescription.ControlType.TimelineConfiguration.Key;
}

uint64_t getEnumTagSinglePayload for CanvasControlDescription.ControlType.Discriminant(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFC) {
    goto LABEL_17;
  }
  if (a2 + 4 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 4) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 4;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 5;
  int v8 = v6 - 5;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for CanvasControlDescription.ControlType.Discriminant(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25A57031CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CanvasControlDescription.ControlType.Discriminant()
{
  return &type metadata for CanvasControlDescription.ControlType.Discriminant;
}

ValueMetadata *type metadata accessor for CanvasControlDescription.ControlType.Key()
{
  return &type metadata for CanvasControlDescription.ControlType.Key;
}

ValueMetadata *type metadata accessor for CanvasControlEvent.Key()
{
  return &type metadata for CanvasControlEvent.Key;
}

unsigned char *_s19PreviewsMessagingOS24CanvasControlDescriptionV11ControlTypeO17GridConfigurationV4ItemV3KeyOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x25A570410);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for PlistValueBox.Key()
{
  return &type metadata for PlistValueBox.Key;
}

unsigned char *_s19PreviewsMessagingOS18CanvasControlEventV5EventOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25A570514);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ThumbnailGeometry.Key()
{
  return &type metadata for ThumbnailGeometry.Key;
}

unsigned char *_s19PreviewsMessagingOS24CanvasControlDescriptionV11ControlTypeO17GridConfigurationV7SectionV3KeyOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25A570618);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CanvasControlDescription.Key()
{
  return &type metadata for CanvasControlDescription.Key;
}

unint64_t sub_25A570654()
{
  unint64_t result = qword_26A429A80;
  if (!qword_26A429A80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A429A80);
  }
  return result;
}

unint64_t sub_25A5706AC()
{
  unint64_t result = qword_26A429A88;
  if (!qword_26A429A88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A429A88);
  }
  return result;
}

unint64_t sub_25A570704()
{
  unint64_t result = qword_26A429A90;
  if (!qword_26A429A90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A429A90);
  }
  return result;
}

unint64_t sub_25A57075C()
{
  unint64_t result = qword_26A429A98;
  if (!qword_26A429A98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A429A98);
  }
  return result;
}

unint64_t sub_25A5707B4()
{
  unint64_t result = qword_26A429AA0;
  if (!qword_26A429AA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A429AA0);
  }
  return result;
}

unint64_t sub_25A57080C()
{
  unint64_t result = qword_26A429AA8;
  if (!qword_26A429AA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A429AA8);
  }
  return result;
}

unint64_t sub_25A570864()
{
  unint64_t result = qword_26A429AB0;
  if (!qword_26A429AB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A429AB0);
  }
  return result;
}

unint64_t sub_25A5708BC()
{
  unint64_t result = qword_26A429AB8;
  if (!qword_26A429AB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A429AB8);
  }
  return result;
}

unint64_t sub_25A570914()
{
  unint64_t result = qword_26A429AC0;
  if (!qword_26A429AC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A429AC0);
  }
  return result;
}

unint64_t sub_25A57096C()
{
  unint64_t result = qword_26A429AC8;
  if (!qword_26A429AC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A429AC8);
  }
  return result;
}

unint64_t sub_25A5709C4()
{
  unint64_t result = qword_26A429AD0;
  if (!qword_26A429AD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A429AD0);
  }
  return result;
}

unint64_t sub_25A570A1C()
{
  unint64_t result = qword_26A429AD8;
  if (!qword_26A429AD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A429AD8);
  }
  return result;
}

uint64_t sub_25A570A70()
{
  return 0x65756C6176;
}

unint64_t sub_25A570A84()
{
  unint64_t result = qword_26A429AE0;
  if (!qword_26A429AE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A429AE0);
  }
  return result;
}

uint64_t sub_25A570AD8()
{
  return 0x736E6F6974636573;
}

uint64_t sub_25A570AF0()
{
  return 0x656C746974;
}

uint64_t sub_25A570B04()
{
  unint64_t v0 = sub_25A6232B0();
  swift_bridgeObjectRelease();
  if (v0 >= 5) {
    return 5;
  }
  else {
    return v0;
  }
}

uint64_t sub_25A570B50()
{
  unint64_t v0 = sub_25A6232B0();
  swift_bridgeObjectRelease();
  if (v0 >= 3) {
    return 3;
  }
  else {
    return v0;
  }
}

uint64_t sub_25A570B98(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void *)(v2 + 24);
  *a2 = *(void *)(v2 + 16);
  a2[1] = v3;
  return swift_bridgeObjectRetain();
}

unint64_t sub_25A570BA4()
{
  unint64_t result = qword_26A429AE8;
  if (!qword_26A429AE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A429AE8);
  }
  return result;
}

uint64_t sub_25A570BF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A429458);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_25A570C60(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t ShellUpdatePayload.pid.getter()
{
  return *v0;
}

void ShellUpdatePayload.hostUpdateSeed.getter(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 16);
  *(void *)a1 = *(void *)(v1 + 8);
  *(unsigned char *)(a1 + 8) = v2;
}

uint64_t ShellUpdatePayload.previewType.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 24);
  unint64_t v3 = *(void *)(v1 + 32);
  *a1 = v2;
  a1[1] = v3;
  return sub_25A570D0C(v2, v3);
}

uint64_t sub_25A570D0C(uint64_t a1, unint64_t a2)
{
  if (a2 != 4) {
    return sub_25A570D1C(a1, a2);
  }
  return a1;
}

uint64_t sub_25A570D1C(uint64_t a1, unint64_t a2)
{
  if (a2 >= 4) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t ShellUpdatePayload.contentIdentifier.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 48);
  *a1 = *(void *)(v1 + 40);
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t ShellUpdatePayload.contentCategory.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 64);
  *a1 = *(void *)(v1 + 56);
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t ShellUpdatePayload.contentOverride.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 80);
  *a1 = *(void *)(v1 + 72);
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t ShellUpdatePayload.contentPayload.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ShellUpdatePayload() + 40);
  uint64_t v4 = sub_25A6227C0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for ShellUpdatePayload()
{
  uint64_t result = qword_26A429C00;
  if (!qword_26A429C00) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t ShellUpdatePayload.staticProducts.getter()
{
  type metadata accessor for ShellUpdatePayload();

  return swift_bridgeObjectRetain();
}

uint64_t ShellUpdatePayload.setupPayload.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ShellUpdatePayload() + 48);
  char v4 = *(unsigned char *)(v3 + 8);
  uint64_t v6 = *(void *)(v3 + 16);
  uint64_t v5 = *(void *)(v3 + 24);
  uint64_t v7 = *(void *)(v3 + 32);
  uint64_t v8 = *(void *)(v3 + 40);
  *(void *)a1 = *(void *)v3;
  *(unsigned char *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t ShellUpdatePayload.controlStates.getter()
{
  type metadata accessor for ShellUpdatePayload();

  return swift_bridgeObjectRetain();
}

__n128 ShellUpdatePayload.init(pid:hostUpdateSeed:previewType:contentIdentifier:contentCategory:contentOverride:contentPayload:staticProducts:setupPayload:controlStates:)@<Q0>(int a1@<W0>, uint64_t *a2@<X1>, _OWORD *a3@<X2>, uint64_t *a4@<X3>, uint64_t *a5@<X4>, _OWORD *a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, __n128 *a10, uint64_t a11)
{
  uint64_t v14 = *a2;
  char v15 = *((unsigned char *)a2 + 8);
  uint64_t v16 = *a4;
  uint64_t v17 = a4[1];
  uint64_t v18 = *a5;
  uint64_t v19 = a5[1];
  unint64_t v20 = a10->n128_u64[0];
  unsigned __int8 v21 = a10->n128_u8[8];
  __n128 v29 = a10[1];
  unint64_t v22 = a10[2].n128_u64[0];
  unint64_t v23 = a10[2].n128_u64[1];
  *(_DWORD *)a9 = a1;
  *(void *)(a9 + 8) = v14;
  *(unsigned char *)(a9 + 16) = v15;
  *(_OWORD *)(a9 + 24) = *a3;
  *(void *)(a9 + 40) = v16;
  *(void *)(a9 + 48) = v17;
  *(void *)(a9 + 56) = v18;
  *(void *)(a9 + 64) = v19;
  *(_OWORD *)(a9 + 72) = *a6;
  updated = (int *)type metadata accessor for ShellUpdatePayload();
  uint64_t v25 = a9 + updated[10];
  uint64_t v26 = sub_25A6227C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 32))(v25, a7, v26);
  *(void *)(a9 + updated[11]) = a8;
  unint64_t v27 = (__n128 *)(a9 + updated[12]);
  v27->n128_u64[0] = v20;
  v27->n128_u8[8] = v21;
  __n128 result = v29;
  v27[1] = v29;
  v27[2].n128_u64[0] = v22;
  v27[2].n128_u64[1] = v23;
  *(void *)(a9 + updated[13]) = a11;
  return result;
}

unint64_t sub_25A571018(char a1)
{
  unint64_t result = 0xD000000000000011;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6164705574736F68;
      break;
    case 2:
      unint64_t result = 0x5477656976657270;
      break;
    case 3:
      return result;
    case 4:
      unint64_t result = 0x43746E65746E6F63;
      break;
    case 5:
      unint64_t result = 0x4F746E65746E6F63;
      break;
    case 6:
      unint64_t result = 0x50746E65746E6F63;
      break;
    case 7:
      unint64_t result = 0x7250636974617473;
      break;
    case 8:
      unint64_t result = 0x7961507075746573;
      break;
    case 9:
      unint64_t result = 0x536C6F72746E6F63;
      break;
    default:
      unint64_t result = 6580592;
      break;
  }
  return result;
}

uint64_t sub_25A5711A8(char *a1, char *a2)
{
  char v2 = *a2;
  unint64_t v3 = sub_25A571018(*a1);
  uint64_t v5 = v4;
  if (v3 == sub_25A571018(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_25A6233B0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_25A571234()
{
  char v1 = *v0;
  sub_25A623450();
  sub_25A571018(v1);
  sub_25A622DF0();
  swift_bridgeObjectRelease();
  return sub_25A6234A0();
}

uint64_t sub_25A571298()
{
  sub_25A571018(*v0);
  sub_25A622DF0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25A5712EC()
{
  char v1 = *v0;
  sub_25A623450();
  sub_25A571018(v1);
  sub_25A622DF0();
  swift_bridgeObjectRelease();
  return sub_25A6234A0();
}

uint64_t sub_25A57134C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_25A575C60();
  *a1 = result;
  return result;
}

unint64_t sub_25A57137C@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_25A571018(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_25A5713A8()
{
  return sub_25A571018(*v0);
}

uint64_t ShellUpdatePayload.propertyListValue.getter()
{
  return sub_25A622780();
}

uint64_t sub_25A5713EC(int *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4299B8);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v47 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A429C50);
  uint64_t v5 = v4 - 8;
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  unint64_t v44 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v45 = (uint64_t)&v26 - v8;
  int v28 = *a1;
  uint64_t v30 = *((void *)a1 + 1);
  int v29 = *((unsigned __int8 *)a1 + 16);
  uint64_t v27 = *((void *)a1 + 3);
  uint64_t v9 = v27;
  unint64_t v31 = *((void *)a1 + 4);
  uint64_t v33 = *((void *)a1 + 5);
  uint64_t v32 = *((void *)a1 + 6);
  uint64_t v42 = *((void *)a1 + 7);
  uint64_t v38 = *((void *)a1 + 8);
  uint64_t v10 = *((void *)a1 + 10);
  uint64_t v43 = *((void *)a1 + 9);
  uint64_t v11 = (char *)&v26 + *(int *)(v5 + 56) - v8;
  *((unsigned char *)&v26 - v8) = 6;
  updated = (int *)type metadata accessor for ShellUpdatePayload();
  uint64_t v13 = (uint64_t)a1 + updated[10];
  uint64_t v46 = sub_25A6227C0();
  uint64_t v14 = *(void *)(v46 - 8);
  char v15 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
  v15(v11, v13, v46);
  uint64_t v16 = updated[12];
  uint64_t v34 = *(void *)((char *)a1 + updated[11]);
  uint64_t v41 = *(void *)((char *)a1 + v16);
  uint64_t v40 = *((unsigned __int8 *)a1 + v16 + 8);
  long long v37 = *(_OWORD *)((char *)a1 + v16 + 16);
  uint64_t v17 = *(void *)((char *)a1 + v16 + 40);
  uint64_t v36 = *(void *)((char *)a1 + v16 + 32);
  uint64_t v35 = v17;
  uint64_t v39 = *(void *)((char *)a1 + updated[13]);
  char v76 = 0;
  int v74 = v28;
  char v75 = 0;
  char v73 = 1;
  uint64_t v71 = v30;
  char v72 = v29;
  char v70 = 2;
  uint64_t v68 = v9;
  unint64_t v18 = v31;
  unint64_t v69 = v31;
  char v67 = 3;
  uint64_t v65 = v33;
  uint64_t v66 = v32;
  char v64 = 4;
  uint64_t v62 = v42;
  uint64_t v63 = v38;
  char v61 = 5;
  uint64_t v59 = v43;
  uint64_t v60 = v10;
  uint64_t v19 = &v44[*(int *)(v5 + 56)];
  *unint64_t v44 = 6;
  unint64_t v20 = v11;
  uint64_t v21 = v46;
  v15(v19, (uint64_t)v20, v46);
  unint64_t v22 = v47;
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v47, v19, v21);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v22, 0, 1, v21);
  char v58 = 6;
  char v57 = 7;
  uint64_t v56 = v34;
  char v55 = 8;
  uint64_t v50 = v41;
  uint64_t v51 = v40;
  long long v52 = v37;
  uint64_t v53 = v36;
  uint64_t v54 = v35;
  char v49 = 9;
  uint64_t v48 = v39;
  sub_25A570D0C(v27, v18);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A429B50);
  unint64_t v44 = (unsigned char *)__swift_instantiateConcreteTypeFromMangledName(&qword_26A429B68);
  sub_25A5723CC();
  sub_25A572474();
  sub_25A5724C8();
  sub_25A57251C();
  sub_25A572594();
  sub_25A5725E8();
  sub_25A573344(&qword_26A429B58, &qword_26A429B50, (void (*)(void))sub_25A57263C);
  sub_25A572420();
  sub_25A573344((unint64_t *)&qword_26A429B70, &qword_26A429B68, (void (*)(void))sub_25A572690);
  uint64_t v23 = (uint64_t)v47;
  uint64_t v24 = sub_25A622A10();
  sub_25A570C60(v23, &qword_26A4299B8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_25A575D20(v68, v69);
  sub_25A570C60(v45, &qword_26A429C50);
  return v24;
}

uint64_t sub_25A571A3C()
{
  return sub_25A5713EC(*(int **)(v0 + 16));
}

uint64_t ShellUpdatePayload.init(propertyListValue:)@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t v5 = sub_25A6227C0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70[3] = &type metadata for ShellUpdatePayload.Key;
  unint64_t v9 = sub_25A5723CC();
  v70[4] = v9;
  LOBYTE(v70[0]) = 8;
  sub_25A572420();
  sub_25A622710();
  if (v2)
  {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v70);
  }
  else
  {
    uint64_t v59 = v6;
    uint64_t v60 = v5;
    char v58 = v8;
    char v57 = a2;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v70);
    uint64_t v10 = v71;
    int v11 = v72;
    uint64_t v13 = v73;
    uint64_t v12 = v74;
    unint64_t v14 = v75;
    uint64_t v15 = v76;
    int v74 = &type metadata for ShellUpdatePayload.Key;
    unint64_t v75 = v9;
    LOBYTE(v71) = 0;
    sub_25A622710();
    uint64_t v53 = v12;
    int v77 = v11;
    uint64_t v56 = v15;
    uint64_t v54 = v13;
    unint64_t v55 = v14;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v71);
    LODWORD(v12) = v78;
    int v74 = &type metadata for ShellUpdatePayload.Key;
    unint64_t v75 = v9;
    LOBYTE(v71) = 1;
    sub_25A572474();
    sub_25A622760();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v71);
    uint64_t v16 = v68;
    int v17 = v69;
    int v74 = &type metadata for ShellUpdatePayload.Key;
    unint64_t v75 = v9;
    LOBYTE(v71) = 2;
    sub_25A5724C8();
    sub_25A622710();
    uint64_t v18 = v10;
    int v51 = v17;
    uint64_t v52 = v16;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v71);
    uint64_t v21 = v70[0];
    uint64_t v20 = v70[1];
    int v74 = &type metadata for ShellUpdatePayload.Key;
    unint64_t v75 = v9;
    LOBYTE(v71) = 3;
    sub_25A57251C();
    sub_25A622710();
    uint64_t v50 = v21;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v71);
    uint64_t v22 = v66;
    uint64_t v23 = v67;
    int v74 = &type metadata for ShellUpdatePayload.Key;
    unint64_t v75 = v9;
    LOBYTE(v71) = 4;
    sub_25A572594();
    sub_25A622710();
    uint64_t v47 = v22;
    uint64_t v49 = v23;
    int v48 = (int)v12;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v71);
    uint64_t v25 = v64;
    uint64_t v24 = v65;
    int v74 = &type metadata for ShellUpdatePayload.Key;
    unint64_t v75 = v9;
    LOBYTE(v71) = 5;
    sub_25A5725E8();
    sub_25A622760();
    uint64_t v43 = v25;
    uint64_t v44 = v20;
    uint64_t v45 = v24;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v71);
    uint64_t v26 = v62;
    uint64_t v46 = v63;
    int v74 = &type metadata for ShellUpdatePayload.Key;
    unint64_t v75 = v9;
    LOBYTE(v71) = 6;
    uint64_t v27 = v58;
    sub_25A622710();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v71);
    int v74 = &type metadata for ShellUpdatePayload.Key;
    unint64_t v75 = v9;
    LOBYTE(v71) = 7;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A429B50);
    sub_25A573344(&qword_26A429B58, &qword_26A429B50, (void (*)(void))sub_25A57263C);
    sub_25A622760();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v71);
    uint64_t v28 = v61;
    if (!v61)
    {
      uint64_t v28 = v56;
      swift_bridgeObjectRetain();
    }
    int v29 = v27;
    int v74 = &type metadata for ShellUpdatePayload.Key;
    unint64_t v75 = v9;
    LOBYTE(v71) = 9;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A429B68);
    sub_25A573344((unint64_t *)&qword_26A429B70, &qword_26A429B68, (void (*)(void))sub_25A572690);
    sub_25A622760();
    uint64_t v30 = v28;
    uint64_t v31 = v59;
    uint64_t v32 = v60;
    (*(void (**)(uint64_t, uint64_t))(v59 + 8))(a1, v60);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v71);
    uint64_t v42 = v61;
    uint64_t v33 = v57;
    *char v57 = v48;
    *((void *)v33 + 1) = v52;
    *((unsigned char *)v33 + 16) = v51;
    uint64_t v34 = v44;
    *((void *)v33 + 3) = v50;
    *((void *)v33 + 4) = v34;
    uint64_t v35 = v49;
    *((void *)v33 + 5) = v47;
    *((void *)v33 + 6) = v35;
    uint64_t v36 = v45;
    *((void *)v33 + 7) = v43;
    *((void *)v33 + 8) = v36;
    uint64_t v37 = v46;
    *((void *)v33 + 9) = v26;
    *((void *)v33 + 10) = v37;
    updated = (int *)type metadata accessor for ShellUpdatePayload();
    uint64_t result = (*(uint64_t (**)(char *, char *, uint64_t))(v31 + 32))((char *)v33 + updated[10], v29, v32);
    *(void *)((char *)v33 + updated[11]) = v30;
    uint64_t v39 = (char *)v33 + updated[12];
    *(void *)uint64_t v39 = v18;
    v39[8] = v77;
    uint64_t v40 = v53;
    *((void *)v39 + 2) = v54;
    *((void *)v39 + 3) = v40;
    uint64_t v41 = v56;
    *((void *)v39 + 4) = v55;
    *((void *)v39 + 5) = v41;
    *(void *)((char *)v33 + updated[13]) = v42;
  }
  return result;
}

unint64_t sub_25A5723CC()
{
  unint64_t result = qword_26A429B18;
  if (!qword_26A429B18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A429B18);
  }
  return result;
}

unint64_t sub_25A572420()
{
  unint64_t result = qword_26A429B20;
  if (!qword_26A429B20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A429B20);
  }
  return result;
}

unint64_t sub_25A572474()
{
  unint64_t result = qword_26A429B28;
  if (!qword_26A429B28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A429B28);
  }
  return result;
}

unint64_t sub_25A5724C8()
{
  unint64_t result = qword_26A429B30;
  if (!qword_26A429B30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A429B30);
  }
  return result;
}

unint64_t sub_25A57251C()
{
  unint64_t result = qword_26A429B38;
  if (!qword_26A429B38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A429B38);
  }
  return result;
}

uint64_t sub_25A572570(uint64_t a1, unint64_t a2)
{
  if (a2 != 4) {
    return sub_25A572580(a1, a2);
  }
  return a1;
}

uint64_t sub_25A572580(uint64_t a1, unint64_t a2)
{
  if (a2 >= 4) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_25A572594()
{
  unint64_t result = qword_26A429B40;
  if (!qword_26A429B40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A429B40);
  }
  return result;
}

unint64_t sub_25A5725E8()
{
  unint64_t result = qword_26A429B48;
  if (!qword_26A429B48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A429B48);
  }
  return result;
}

unint64_t sub_25A57263C()
{
  unint64_t result = qword_26A429B60;
  if (!qword_26A429B60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A429B60);
  }
  return result;
}

unint64_t sub_25A572690()
{
  unint64_t result = qword_26A429980;
  if (!qword_26A429980)
  {
    type metadata accessor for PlistValueBox(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A429980);
  }
  return result;
}

uint64_t sub_25A5726E8()
{
  return sub_25A622780();
}

uint64_t sub_25A572724@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  return ShellUpdatePayload.init(propertyListValue:)(a1, a2);
}

uint64_t UpdateSetupPayload.dynamicProducts.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t UpdateSetupPayload.shellDidLoadStaticProducts.getter()
{
  return *(unsigned __int8 *)(v0 + 8);
}

uint64_t UpdateSetupPayload.shellDidLoadStaticProducts.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 8) = result;
  return result;
}

uint64_t (*UpdateSetupPayload.shellDidLoadStaticProducts.modify())()
{
  return nullsub_1;
}

uint64_t UpdateSetupPayload.updates.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t UpdateSetupPayload.loggingOutputPath.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t UpdateSetupPayload.staticProducts.getter()
{
  return swift_bridgeObjectRetain();
}

void __swiftcall UpdateSetupPayload.init(dynamicProducts:staticProducts:shellDidLoadStaticProducts:updates:loggingOutputPath:)(PreviewsMessagingOS::UpdateSetupPayload *__return_ptr retstr, Swift::OpaquePointer dynamicProducts, Swift::OpaquePointer staticProducts, Swift::Bool shellDidLoadStaticProducts, Swift::OpaquePointer updates, Swift::String_optional loggingOutputPath)
{
  retstr->dynamicProducts = dynamicProducts;
  retstr->shellDidLoadStaticProducts = shellDidLoadStaticProducts;
  retstr->updates = updates;
  retstr->loggingOutputPath = loggingOutputPath;
  retstr->staticProducts = staticProducts;
}

uint64_t static HostUpdateSeed.next.getter@<X0>(void *a1@<X8>)
{
  if (qword_26A4291C8 != -1) {
    swift_once();
  }
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A429B78);
  sub_25A572958();
  sub_25A622B60();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t *sub_25A5728C8@<X0>(uint64_t *result@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2 = *result + 1;
  *uint64_t result = v2;
  *a2 = v2;
  return result;
}

uint64_t HostUpdateSeed.description.getter()
{
  return sub_25A623350();
}

uint64_t sub_25A572920()
{
  uint64_t result = sub_25A622C30();
  qword_26A429B10 = result;
  return result;
}

unint64_t sub_25A572958()
{
  unint64_t result = qword_26A429B80;
  if (!qword_26A429B80)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A429B78);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A429B80);
  }
  return result;
}

uint64_t HostUpdateSeed.hash(into:)()
{
  return sub_25A623490();
}

BOOL static HostUpdateSeed.== infix(_:_:)(void *a1, void *a2)
{
  return *a1 == *a2;
}

uint64_t HostUpdateSeed.hashValue.getter()
{
  return sub_25A6234A0();
}

unint64_t sub_25A572A3C(char a1)
{
  unint64_t result = 0xD00000000000001ALL;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x7250636974617473;
      break;
    case 2:
      return result;
    case 3:
      unint64_t result = 0x73657461647075;
      break;
    case 4:
      unint64_t result = 0xD000000000000011;
      break;
    default:
      unint64_t result = 0x73746375646F7270;
      break;
  }
  return result;
}

uint64_t sub_25A572B04()
{
  return sub_25A6234A0();
}

uint64_t sub_25A572B4C()
{
  return sub_25A623490();
}

uint64_t sub_25A572B78()
{
  return sub_25A6234A0();
}

uint64_t sub_25A572BBC()
{
  return sub_25A623350();
}

BOOL sub_25A572C00(void *a1, void *a2)
{
  return *a1 == *a2;
}

uint64_t sub_25A572C14(char *a1, char *a2)
{
  return sub_25A5EA128(*a1, *a2);
}

uint64_t sub_25A572C20()
{
  return sub_25A617748();
}

uint64_t sub_25A572C28()
{
  return sub_25A54AA88();
}

uint64_t sub_25A572C30()
{
  return sub_25A61CE30();
}

uint64_t sub_25A572C38@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_25A575CAC();
  *a1 = result;
  return result;
}

unint64_t sub_25A572C70@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_25A572A3C(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_25A572C9C()
{
  return sub_25A572A3C(*v0);
}

uint64_t UpdateSetupPayload.propertyListValue.getter()
{
  return sub_25A622780();
}

uint64_t sub_25A572CF4(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = a1[5];
  char v3 = *((unsigned char *)a1 + 8);
  uint64_t v4 = a1[2];
  sub_25A570BF8((uint64_t)(a1 + 3), (uint64_t)v15);
  char v14 = 0;
  uint64_t v13 = v1;
  char v12 = 1;
  uint64_t v11 = v2;
  char v10 = 2;
  char v9 = v3;
  char v8 = 3;
  uint64_t v7 = v4;
  v6[23] = 4;
  sub_25A570BF8((uint64_t)v15, (uint64_t)v6);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A429B90);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A429B50);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A429BA8);
  sub_25A57329C();
  sub_25A573344(&qword_26A429B98, &qword_26A429B90, (void (*)(void))sub_25A5732F0);
  sub_25A573344(&qword_26A429B58, &qword_26A429B50, (void (*)(void))sub_25A57263C);
  sub_25A573344(&qword_26A429BB0, &qword_26A429BA8, (void (*)(void))sub_25A5733BC);
  return sub_25A622A50();
}

uint64_t sub_25A572ECC()
{
  return sub_25A572CF4(*(uint64_t **)(v0 + 16));
}

uint64_t UpdateSetupPayload.init(propertyListValue:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v16 = &type metadata for UpdateSetupPayload.Key;
  unint64_t v5 = sub_25A57329C();
  unint64_t v17 = v5;
  v15[0] = 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A429B50);
  sub_25A573344(&qword_26A429B58, &qword_26A429B50, (void (*)(void))sub_25A57263C);
  sub_25A622760();
  if (v2)
  {
    uint64_t v6 = sub_25A6227C0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
    if ((void)v13) {
      uint64_t v7 = v13;
    }
    else {
      uint64_t v7 = MEMORY[0x263F8EE78];
    }
    uint64_t v16 = &type metadata for UpdateSetupPayload.Key;
    unint64_t v17 = v5;
    v15[0] = 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A429B90);
    sub_25A573344(&qword_26A429B98, &qword_26A429B90, (void (*)(void))sub_25A5732F0);
    sub_25A622710();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
    uint64_t v8 = v18;
    uint64_t v16 = &type metadata for UpdateSetupPayload.Key;
    unint64_t v17 = v5;
    v15[0] = 2;
    sub_25A622760();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
    if (v13 == 2) {
      BOOL v9 = *(void *)(v7 + 16) != 0;
    }
    else {
      BOOL v9 = v13 & 1;
    }
    BOOL v12 = v9;
    uint64_t v16 = &type metadata for UpdateSetupPayload.Key;
    unint64_t v17 = v5;
    v15[0] = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A429BA8);
    sub_25A573344(&qword_26A429BB0, &qword_26A429BA8, (void (*)(void))sub_25A5733BC);
    sub_25A622710();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
    uint64_t v16 = &type metadata for UpdateSetupPayload.Key;
    unint64_t v17 = v5;
    v15[0] = 4;
    sub_25A622760();
    uint64_t v11 = sub_25A6227C0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(a1, v11);
    uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
    *(void *)a2 = v8;
    *(unsigned char *)(a2 + 8) = v12;
    *(void *)(a2 + 16) = v14;
    *(_OWORD *)(a2 + 24) = v13;
    *(void *)(a2 + 40) = v7;
  }
  return result;
}

unint64_t sub_25A57329C()
{
  unint64_t result = qword_26A429B88;
  if (!qword_26A429B88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A429B88);
  }
  return result;
}

unint64_t sub_25A5732F0()
{
  unint64_t result = qword_26A429BA0;
  if (!qword_26A429BA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A429BA0);
  }
  return result;
}

uint64_t sub_25A573344(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_25A5733BC()
{
  unint64_t result = qword_26A429BB8;
  if (!qword_26A429BB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A429BB8);
  }
  return result;
}

uint64_t sub_25A573410(char a1)
{
  return *(void *)&aMainscensimdis_0[8 * a1];
}

uint64_t sub_25A573430()
{
  return sub_25A622780();
}

uint64_t sub_25A573480@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return UpdateSetupPayload.init(propertyListValue:)(a1, a2);
}

uint64_t sub_25A573498(char *a1, char *a2)
{
  return sub_25A5ED7BC(*a1, *a2);
}

uint64_t sub_25A5734A4()
{
  return sub_25A617858();
}

uint64_t sub_25A5734AC()
{
  return sub_25A54C9F8();
}

uint64_t sub_25A5734B4()
{
  return sub_25A61AEF0();
}

uint64_t sub_25A5734BC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_25A575CAC();
  *a1 = result;
  return result;
}

uint64_t sub_25A5734F4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_25A573410(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_25A573520(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_25A575BB8();
  uint64_t v5 = MEMORY[0x263F60648];

  return MEMORY[0x270F55C68](a1, a2, v4, v5);
}

uint64_t sub_25A57357C()
{
  return sub_25A622B20();
}

uint64_t sub_25A5735E4(char a1)
{
  if (a1) {
    return 0x656449656E656373;
  }
  else {
    return 0x696D697263736964;
  }
}

uint64_t sub_25A573630(char *a1, char *a2)
{
  return sub_25A5ED704(*a1, *a2);
}

uint64_t sub_25A57363C()
{
  return sub_25A6178C4();
}

uint64_t sub_25A573644()
{
  return sub_25A54C978();
}

uint64_t sub_25A57364C()
{
  return sub_25A61AF58();
}

uint64_t sub_25A573654@<X0>(char *a1@<X8>)
{
  return sub_25A56B748(a1);
}

uint64_t sub_25A573660@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_25A5735E4(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_25A57368C()
{
  return sub_25A5735E4(*v0);
}

uint64_t PreviewType.HostLocation.propertyListValue.getter()
{
  uint64_t v2 = *v0;
  unint64_t v1 = v0[1];
  unint64_t v3 = sub_25A573760();
  sub_25A5737B4();
  uint64_t result = sub_25A6227A0();
  if (v1 >= 4)
  {
    uint64_t v8 = v2;
    unint64_t v9 = v1;
    uint64_t v6 = &type metadata for PreviewType.HostLocation.Key;
    unint64_t v7 = v3;
    v5[0] = 1;
    sub_25A622700();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
  }
  return result;
}

unint64_t sub_25A573760()
{
  unint64_t result = qword_26A429BC0;
  if (!qword_26A429BC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A429BC0);
  }
  return result;
}

unint64_t sub_25A5737B4()
{
  unint64_t result = qword_26A429BC8;
  if (!qword_26A429BC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A429BC8);
  }
  return result;
}

uint64_t PreviewType.HostLocation.init(propertyListValue:)@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v18 = &type metadata for PreviewType.HostLocation.Key;
  unint64_t v5 = sub_25A573760();
  unint64_t v19 = v5;
  v17[0] = 0;
  sub_25A5737B4();
  sub_25A622710();
  if (v2)
  {
    uint64_t v6 = sub_25A6227C0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
    switch((char)v15)
    {
      case 1:
        uint64_t v11 = sub_25A6227C0();
        uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(a1, v11);
        uint64_t v9 = 0;
        uint64_t v10 = 1;
        break;
      case 2:
        uint64_t v18 = &type metadata for PreviewType.HostLocation.Key;
        unint64_t v19 = v5;
        v17[0] = 1;
        sub_25A622710();
        uint64_t v12 = sub_25A6227C0();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(a1, v12);
        uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
        uint64_t v9 = v15;
        uint64_t v10 = v16;
        break;
      case 3:
        uint64_t v13 = sub_25A6227C0();
        uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(a1, v13);
        uint64_t v9 = 0;
        uint64_t v10 = 2;
        break;
      case 4:
        uint64_t v14 = sub_25A6227C0();
        uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(a1, v14);
        uint64_t v9 = 0;
        uint64_t v10 = 3;
        break;
      default:
        uint64_t v8 = sub_25A6227C0();
        uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(a1, v8);
        uint64_t v9 = 0;
        uint64_t v10 = 0;
        break;
    }
    *a2 = v9;
    a2[1] = v10;
  }
  return result;
}

uint64_t sub_25A573AA0(char a1)
{
  if (a1) {
    return 0x646574736F68;
  }
  else {
    return 0x636974617473;
  }
}

uint64_t sub_25A573AC8()
{
  uint64_t v2 = *v0;
  unint64_t v1 = v0[1];
  unint64_t v3 = sub_25A573760();
  sub_25A5737B4();
  uint64_t result = sub_25A6227A0();
  if (v1 >= 4)
  {
    uint64_t v8 = v2;
    unint64_t v9 = v1;
    uint64_t v6 = &type metadata for PreviewType.HostLocation.Key;
    unint64_t v7 = v3;
    v5[0] = 1;
    sub_25A622700();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
  }
  return result;
}

uint64_t sub_25A573B90@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return PreviewType.HostLocation.init(propertyListValue:)(a1, a2);
}

uint64_t sub_25A573BA8(char *a1, char *a2)
{
  return sub_25A5ED844(*a1, *a2);
}

uint64_t sub_25A573BB4()
{
  return sub_25A61795C();
}

uint64_t sub_25A573BBC()
{
  return sub_25A54CA4C();
}

uint64_t sub_25A573BC4()
{
  return sub_25A61AE84();
}

uint64_t sub_25A573BCC@<X0>(char *a1@<X8>)
{
  return sub_25A56B748(a1);
}

uint64_t sub_25A573BD8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_25A573AA0(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_25A573C04(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_25A575C0C();
  uint64_t v5 = MEMORY[0x263F60648];

  return MEMORY[0x270F55C68](a1, a2, v4, v5);
}

uint64_t sub_25A573C60()
{
  return sub_25A622B20();
}

uint64_t sub_25A573CC8(char a1)
{
  if (a1) {
    return 0x61636F4C74736F68;
  }
  else {
    return 0x696D697263736964;
  }
}

uint64_t sub_25A573D10(char *a1, char *a2)
{
  return sub_25A5ED650(*a1, *a2);
}

uint64_t sub_25A573D1C()
{
  return sub_25A6179CC();
}

uint64_t sub_25A573D24()
{
  return sub_25A54C8FC();
}

uint64_t sub_25A573D2C()
{
  return sub_25A61AFEC();
}

uint64_t sub_25A573D34@<X0>(char *a1@<X8>)
{
  return sub_25A56B748(a1);
}

uint64_t sub_25A573D40@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_25A573CC8(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_25A573D6C()
{
  return sub_25A573CC8(*v0);
}

uint64_t PreviewType.propertyListValue.getter()
{
  uint64_t v2 = *v0;
  uint64_t v1 = v0[1];
  unint64_t v3 = sub_25A573E54();
  sub_25A573EA8();
  uint64_t result = sub_25A6227A0();
  if (v1 != 4)
  {
    uint64_t v8 = v2;
    uint64_t v9 = v1;
    uint64_t v6 = &type metadata for PreviewType.Key;
    unint64_t v7 = v3;
    v5[0] = 1;
    sub_25A573EFC();
    sub_25A622700();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
  }
  return result;
}

unsigned char *sub_25A573E3C(unsigned char *result, BOOL *a2)
{
  uint64_t v3 = *(void *)(v2 + 24);
  *uint64_t result = 0;
  *a2 = v3 != 4;
  return result;
}

unint64_t sub_25A573E54()
{
  unint64_t result = qword_26A429BD0;
  if (!qword_26A429BD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A429BD0);
  }
  return result;
}

unint64_t sub_25A573EA8()
{
  unint64_t result = qword_26A429BD8;
  if (!qword_26A429BD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A429BD8);
  }
  return result;
}

unint64_t sub_25A573EFC()
{
  unint64_t result = qword_26A429BE0;
  if (!qword_26A429BE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A429BE0);
  }
  return result;
}

uint64_t PreviewType.init(propertyListValue:)@<X0>(uint64_t a1@<X0>, long long *a2@<X8>)
{
  uint64_t v13 = &type metadata for PreviewType.Key;
  unint64_t v5 = sub_25A573E54();
  unint64_t v14 = v5;
  v12[0] = 0;
  sub_25A573EA8();
  sub_25A622710();
  if (v2)
  {
    uint64_t v6 = sub_25A6227C0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
    if (v11)
    {
      uint64_t v13 = &type metadata for PreviewType.Key;
      unint64_t v14 = v5;
      v12[0] = 1;
      sub_25A573EFC();
      sub_25A622710();
      uint64_t v8 = sub_25A6227C0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(a1, v8);
      uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
      long long v9 = v11;
    }
    else
    {
      uint64_t v10 = sub_25A6227C0();
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(a1, v10);
      long long v9 = xmmword_25A626900;
    }
    *a2 = v9;
  }
  return result;
}

uint64_t sub_25A5740EC()
{
  uint64_t v2 = *v0;
  uint64_t v1 = v0[1];
  unint64_t v3 = sub_25A573E54();
  sub_25A573EA8();
  uint64_t result = sub_25A6227A0();
  if (v1 != 4)
  {
    uint64_t v8 = v2;
    uint64_t v9 = v1;
    uint64_t v6 = &type metadata for PreviewType.Key;
    unint64_t v7 = v3;
    v5[0] = 1;
    sub_25A573EFC();
    sub_25A622700();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
  }
  return result;
}

uint64_t sub_25A5741B4@<X0>(uint64_t a1@<X0>, long long *a2@<X8>)
{
  return PreviewType.init(propertyListValue:)(a1, a2);
}

uint64_t HostUpdateSeed.propertyListValue.getter()
{
  return *(void *)v0;
}

uint64_t HostUpdateSeed.init(propertyListValue:)@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  return result;
}

unint64_t sub_25A5741E0()
{
  unint64_t result = qword_26A429BE8;
  if (!qword_26A429BE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A429BE8);
  }
  return result;
}

uint64_t sub_25A574234()
{
  return MEMORY[0x263F606E0];
}

void *initializeBufferWithCopyOfBuffer for ShellUpdatePayload(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v21 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_DWORD *)a1 = *(_DWORD *)a2;
    *(void *)(a1 + 8) = a2[1];
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
    unint64_t v7 = a2 + 3;
    unint64_t v8 = a2[4];
    if (v8 > 4)
    {
      v4[3] = *v7;
      v4[4] = v8;
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)(v4 + 3) = *(_OWORD *)v7;
    }
    uint64_t v9 = a2[6];
    v4[5] = a2[5];
    v4[6] = v9;
    uint64_t v10 = a2[8];
    v4[7] = a2[7];
    v4[8] = v10;
    uint64_t v11 = a2[10];
    uint64_t v12 = a3[10];
    uint64_t v23 = (char *)v4 + v12;
    uint64_t v13 = (uint64_t)a2 + v12;
    v4[9] = a2[9];
    v4[10] = v11;
    uint64_t v14 = sub_25A6227C0();
    uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v15(v23, v13, v14);
    uint64_t v16 = a3[12];
    *(void *)((char *)v4 + a3[11]) = *(uint64_t *)((char *)a2 + a3[11]);
    unint64_t v17 = (char *)v4 + v16;
    uint64_t v18 = (uint64_t)a2 + v16;
    *(void *)unint64_t v17 = *(void *)v18;
    v17[8] = *(unsigned char *)(v18 + 8);
    uint64_t v19 = *(void *)(v18 + 24);
    *((void *)v17 + 2) = *(void *)(v18 + 16);
    *((void *)v17 + 3) = v19;
    uint64_t v20 = *(void *)(v18 + 40);
    *((void *)v17 + 4) = *(void *)(v18 + 32);
    *((void *)v17 + 5) = v20;
    *(void *)((char *)v4 + a3[13]) = *(uint64_t *)((char *)a2 + a3[13]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for ShellUpdatePayload(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 32) >= 5uLL) {
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 40);
  uint64_t v5 = sub_25A6227C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ShellUpdatePayload(uint64_t a1, uint64_t a2, int *a3)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v6 = (_OWORD *)(a1 + 24);
  unint64_t v7 = (_OWORD *)(a2 + 24);
  unint64_t v8 = *(void *)(a2 + 32);
  if (v8 <= 4)
  {
    *uint64_t v6 = *v7;
  }
  else
  {
    *(void *)(a1 + 24) = *(void *)v7;
    *(void *)(a1 + 32) = v8;
    swift_bridgeObjectRetain();
  }
  uint64_t v9 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v9;
  uint64_t v10 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v10;
  uint64_t v11 = *(void *)(a2 + 80);
  uint64_t v12 = a3[10];
  uint64_t v22 = a1 + v12;
  uint64_t v13 = a2 + v12;
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v11;
  uint64_t v14 = sub_25A6227C0();
  uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v15(v22, v13, v14);
  uint64_t v16 = a3[12];
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  *(void *)uint64_t v17 = *(void *)v18;
  *(unsigned char *)(v17 + 8) = *(unsigned char *)(v18 + 8);
  uint64_t v19 = *(void *)(v18 + 24);
  *(void *)(v17 + 16) = *(void *)(v18 + 16);
  *(void *)(v17 + 24) = v19;
  uint64_t v20 = *(void *)(v18 + 40);
  *(void *)(v17 + 32) = *(void *)(v18 + 32);
  *(void *)(v17 + 40) = v20;
  *(void *)(a1 + a3[13]) = *(void *)(a2 + a3[13]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ShellUpdatePayload(uint64_t a1, uint64_t a2, int *a3)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  uint64_t v6 = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 8) = v6;
  unint64_t v7 = (_OWORD *)(a1 + 24);
  unint64_t v8 = (_OWORD *)(a2 + 24);
  unint64_t v9 = *(void *)(a1 + 32);
  unint64_t v10 = *(void *)(a2 + 32);
  if (v9 == 4)
  {
    if (v10 > 4) {
      goto LABEL_8;
    }
LABEL_12:
    *unint64_t v7 = *v8;
    goto LABEL_13;
  }
  if (v10 == 4)
  {
    uint64_t v11 = (uint64_t *)&unk_26A429BF8;
LABEL_11:
    sub_25A570C60(a1 + 24, v11);
    goto LABEL_12;
  }
  if (v9 >= 4)
  {
    if (v10 >= 4)
    {
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_13;
    }
    uint64_t v11 = (uint64_t *)&unk_26A429BF0;
    goto LABEL_11;
  }
  if (v10 < 4) {
    goto LABEL_12;
  }
LABEL_8:
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
LABEL_13:
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v12 = a3[10];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = sub_25A6227C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 24))(v13, v14, v15);
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v16 = a3[12];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  *(void *)(a1 + v16) = *(void *)(a2 + v16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v17 + 8) = *(unsigned char *)(v18 + 8);
  *(void *)(v17 + 16) = *(void *)(v18 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v17 + 24) = *(void *)(v18 + 24);
  *(void *)(v17 + 32) = *(void *)(v18 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v17 + 40) = *(void *)(v18 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[13]) = *(void *)(a2 + a3[13]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for ShellUpdatePayload(uint64_t a1, uint64_t a2, int *a3)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  uint64_t v6 = a3[10];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  uint64_t v9 = sub_25A6227C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[12];
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  uint64_t v11 = (_OWORD *)(a1 + v10);
  uint64_t v12 = (_OWORD *)(a2 + v10);
  long long v13 = v12[1];
  *uint64_t v11 = *v12;
  v11[1] = v13;
  v11[2] = v12[2];
  *(void *)(a1 + a3[13]) = *(void *)(a2 + a3[13]);
  return a1;
}

uint64_t assignWithTake for ShellUpdatePayload(uint64_t a1, uint64_t a2, int *a3)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v6 = (_OWORD *)(a1 + 24);
  uint64_t v7 = (void *)(a2 + 24);
  unint64_t v8 = *(void *)(a1 + 32);
  if (v8 == 4) {
    goto LABEL_8;
  }
  unint64_t v9 = *(void *)(a2 + 32);
  if (v9 == 4)
  {
    uint64_t v10 = (uint64_t *)&unk_26A429BF8;
LABEL_7:
    sub_25A570C60((uint64_t)v6, v10);
    goto LABEL_8;
  }
  if (v8 >= 4)
  {
    if (v9 >= 4)
    {
      *(void *)(a1 + 24) = *v7;
      *(void *)(a1 + 32) = v9;
      swift_bridgeObjectRelease();
      goto LABEL_9;
    }
    uint64_t v10 = (uint64_t *)&unk_26A429BF0;
    goto LABEL_7;
  }
LABEL_8:
  *uint64_t v6 = *(_OWORD *)v7;
LABEL_9:
  uint64_t v11 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v12;
  swift_bridgeObjectRelease();
  uint64_t v13 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v13;
  swift_bridgeObjectRelease();
  uint64_t v14 = a3[10];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  uint64_t v17 = sub_25A6227C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 40))(v15, v16, v17);
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  swift_bridgeObjectRelease();
  uint64_t v18 = a3[12];
  uint64_t v19 = a1 + v18;
  uint64_t v20 = a2 + v18;
  *(void *)(a1 + v18) = *(void *)(a2 + v18);
  swift_bridgeObjectRelease();
  *(unsigned char *)(v19 + 8) = *(unsigned char *)(v20 + 8);
  *(void *)(v19 + 16) = *(void *)(v20 + 16);
  swift_bridgeObjectRelease();
  uint64_t v21 = *(void *)(v20 + 32);
  *(void *)(v19 + 24) = *(void *)(v20 + 24);
  *(void *)(v19 + 32) = v21;
  swift_bridgeObjectRelease();
  *(void *)(v19 + 40) = *(void *)(v20 + 40);
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[13]) = *(void *)(a2 + a3[13]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ShellUpdatePayload(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25A574B80);
}

uint64_t sub_25A574B80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 48);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_25A6227C0();
    unint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 40);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for ShellUpdatePayload(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25A574C44);
}

uint64_t sub_25A574C44(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 48) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_25A6227C0();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 40);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_25A574CEC()
{
  uint64_t result = sub_25A6227C0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t destroy for UpdateSetupPayload()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for UpdateSetupPayload(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for UpdateSetupPayload(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for UpdateSetupPayload(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for UpdateSetupPayload(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for UpdateSetupPayload(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for UpdateSetupPayload()
{
  return &type metadata for UpdateSetupPayload;
}

unint64_t destroy for PreviewType(uint64_t a1)
{
  unint64_t result = *(void *)(a1 + 8);
  int v2 = -1;
  if (result < 0xFFFFFFFF) {
    int v2 = result;
  }
  if (v2 - 4 < 0 && result >= 4) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

void *_s19PreviewsMessagingOS11PreviewTypeOwCP_0(void *a1, void *a2)
{
  unint64_t v3 = a2[1];
  LODWORD(v4) = -1;
  if (v3 < 0xFFFFFFFF) {
    uint64_t v4 = a2[1];
  }
  if ((int)v4 - 4 < 0 && v3 >= 4)
  {
    *a1 = *a2;
    a1[1] = v3;
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  return a1;
}

void *assignWithCopy for PreviewType(void *a1, void *a2)
{
  unint64_t v4 = a1[1];
  LODWORD(v5) = -1;
  if (v4 >= 0xFFFFFFFF) {
    LODWORD(v6) = -1;
  }
  else {
    uint64_t v6 = a1[1];
  }
  int v7 = v6 - 4;
  unint64_t v8 = a2[1];
  if (v8 < 0xFFFFFFFF) {
    uint64_t v5 = a2[1];
  }
  int v9 = v5 - 4;
  if (v7 < 0)
  {
    if ((v9 & 0x80000000) == 0)
    {
      if (v4 >= 4) {
        swift_bridgeObjectRelease();
      }
      goto LABEL_17;
    }
    if (v4 >= 4)
    {
      if (v8 >= 4)
      {
        *a1 = *a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        return a1;
      }
      sub_25A570C60((uint64_t)a1, &qword_26A429BF0);
      goto LABEL_17;
    }
  }
  else if ((v9 & 0x80000000) == 0)
  {
LABEL_17:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v8 < 4) {
    goto LABEL_17;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithTake for PreviewType(void *a1, void *a2)
{
  unint64_t v4 = a1[1];
  int v5 = -1;
  if (v4 < 0xFFFFFFFF) {
    int v5 = v4;
  }
  if (v5 - 4 < 0)
  {
    unint64_t v7 = a2[1];
    LODWORD(v8) = -1;
    if (v7 < 0xFFFFFFFF) {
      uint64_t v8 = a2[1];
    }
    if ((int)v8 - 4 < 0)
    {
      if (v4 >= 4)
      {
        if (v7 >= 4)
        {
          *a1 = *a2;
          a1[1] = v7;
          swift_bridgeObjectRelease();
          return a1;
        }
        sub_25A570C60((uint64_t)a1, &qword_26A429BF0);
      }
    }
    else if (v4 >= 4)
    {
      swift_bridgeObjectRelease();
    }
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
  return a1;
}

uint64_t getEnumTagSinglePayload for PreviewType(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 > 0x7FFFFFFA && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 2147483643);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 4;
  if (v4 < 0) {
    int v4 = -1;
  }
  if ((v4 + 1) >= 2) {
    return v4;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for PreviewType(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFB)
  {
    *(void *)unint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(_DWORD *)unint64_t result = a2 - 2147483643;
    if (a3 >= 0x7FFFFFFB) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFB) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2 + 4;
    }
  }
  return result;
}

uint64_t sub_25A5752F0(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  int v2 = v1 - 4;
  if (v2 < 0) {
    int v2 = -1;
  }
  return (v2 + 1);
}

void *sub_25A575314(void *result, unsigned int a2)
{
  if (a2 > 0x7FFFFFFB)
  {
    *unint64_t result = a2 - 2147483644;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = a2 + 3;
  }
  return result;
}

ValueMetadata *type metadata accessor for PreviewType()
{
  return &type metadata for PreviewType;
}

unint64_t destroy for PreviewType.HostLocation(uint64_t a1)
{
  unint64_t result = *(void *)(a1 + 8);
  if (result >= 0xFFFFFFFF) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s19PreviewsMessagingOS11PreviewTypeO12HostLocationOwCP_0(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if (v3 < 0xFFFFFFFF)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v3;
    swift_bridgeObjectRetain();
  }
  return a1;
}

void *assignWithCopy for PreviewType.HostLocation(void *a1, void *a2)
{
  unint64_t v4 = a2[1];
  if (a1[1] < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for PreviewType.HostLocation(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 8) < 0xFFFFFFFFuLL) {
    goto LABEL_5;
  }
  unint64_t v4 = *(void *)(a2 + 8);
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for PreviewType.HostLocation(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFC && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 2147483644);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 3;
  if (v4 >= 5) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for PreviewType.HostLocation(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFB)
  {
    *(void *)unint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(_DWORD *)unint64_t result = a2 - 2147483644;
    if (a3 >= 0x7FFFFFFC) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFC) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2 + 3;
    }
  }
  return result;
}

uint64_t sub_25A575578(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

void *sub_25A575590(void *result, int a2)
{
  if (a2 < 0)
  {
    *unint64_t result = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for PreviewType.HostLocation()
{
  return &type metadata for PreviewType.HostLocation;
}

ValueMetadata *type metadata accessor for HostUpdateSeed()
{
  return &type metadata for HostUpdateSeed;
}

ValueMetadata *type metadata accessor for PreviewType.Discriminant()
{
  return &type metadata for PreviewType.Discriminant;
}

ValueMetadata *type metadata accessor for PreviewType.Key()
{
  return &type metadata for PreviewType.Key;
}

ValueMetadata *type metadata accessor for PreviewType.HostLocation.Discriminant()
{
  return &type metadata for PreviewType.HostLocation.Discriminant;
}

unsigned char *_s19PreviewsMessagingOS11PreviewTypeO12DiscriminantOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25A5756D8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PreviewType.HostLocation.Key()
{
  return &type metadata for PreviewType.HostLocation.Key;
}

unsigned char *_s19PreviewsMessagingOS11PreviewTypeO12HostLocationO12DiscriminantOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25A5757DCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for UpdateSetupPayload.Key()
{
  return &type metadata for UpdateSetupPayload.Key;
}

uint64_t getEnumTagSinglePayload for ShellUpdatePayload.Key(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF7) {
    goto LABEL_17;
  }
  if (a2 + 9 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 9) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 9;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 9;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 9;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xA;
  int v8 = v6 - 10;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ShellUpdatePayload.Key(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 9 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 9) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF7) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF6)
  {
    unsigned int v6 = ((a2 - 247) >> 8) + 1;
    *unint64_t result = a2 + 9;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25A575970);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 9;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ShellUpdatePayload.Key()
{
  return &type metadata for ShellUpdatePayload.Key;
}

unint64_t sub_25A5759AC()
{
  unint64_t result = qword_26A429C10;
  if (!qword_26A429C10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A429C10);
  }
  return result;
}

unint64_t sub_25A575A04()
{
  unint64_t result = qword_26A429C18;
  if (!qword_26A429C18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A429C18);
  }
  return result;
}

unint64_t sub_25A575A5C()
{
  unint64_t result = qword_26A429C20;
  if (!qword_26A429C20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A429C20);
  }
  return result;
}

unint64_t sub_25A575AB4()
{
  unint64_t result = qword_26A429C28;
  if (!qword_26A429C28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A429C28);
  }
  return result;
}

unint64_t sub_25A575B0C()
{
  unint64_t result = qword_26A429C30;
  if (!qword_26A429C30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A429C30);
  }
  return result;
}

unint64_t sub_25A575B64()
{
  unint64_t result = qword_26A429C38;
  if (!qword_26A429C38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A429C38);
  }
  return result;
}

unint64_t sub_25A575BB8()
{
  unint64_t result = qword_26A429C40;
  if (!qword_26A429C40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A429C40);
  }
  return result;
}

unint64_t sub_25A575C0C()
{
  unint64_t result = qword_26A429C48;
  if (!qword_26A429C48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A429C48);
  }
  return result;
}

uint64_t sub_25A575C60()
{
  unint64_t v0 = sub_25A6232B0();
  swift_bridgeObjectRelease();
  if (v0 >= 0xA) {
    return 10;
  }
  else {
    return v0;
  }
}

uint64_t sub_25A575CAC()
{
  unint64_t v0 = sub_25A6232B0();
  swift_bridgeObjectRelease();
  if (v0 >= 5) {
    return 5;
  }
  else {
    return v0;
  }
}

unsigned char *sub_25A575CF4(unsigned char *result, char *a2)
{
  unint64_t v3 = *(void *)(v2 + 24);
  *unint64_t result = 0;
  if (v3 >= 4) {
    char v4 = 2;
  }
  else {
    char v4 = 0x4030100u >> (8 * v3);
  }
  *a2 = v4;
  return result;
}

uint64_t sub_25A575D20(uint64_t a1, unint64_t a2)
{
  if (a2 != 5) {
    return sub_25A572570(a1, a2);
  }
  return a1;
}

uint64_t sub_25A575D3C()
{
  uint64_t result = type metadata accessor for PipeEvent.Content();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_getAssociatedTypeWitness();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

void *sub_25A575E30(void *a1, unsigned __int8 *a2)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v2 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v3 = *(void *)(v2 + 64);
  uint64_t v4 = swift_getAssociatedTypeWitness();
  uint64_t v66 = *(void *)(v4 - 8);
  uint64_t v67 = v4;
  int v5 = *(_DWORD *)(v66 + 80);
  uint64_t v6 = v5;
  uint64_t v64 = v3 + v5;
  uint64_t v7 = (v3 + v6) & ~v6;
  uint64_t v8 = *(void *)(v66 + 64);
  uint64_t v71 = __swift_instantiateConcreteTypeFromMangledName(qword_26A429C58);
  uint64_t v9 = *(void *)(v71 - 8);
  int v10 = *(_DWORD *)(v9 + 80);
  uint64_t v11 = v10;
  uint64_t v65 = v8;
  uint64_t v12 = (v8 + v11 + v7) & ~v11;
  size_t v13 = *(void *)(v9 + 64);
  size_t v14 = v12 + v13;
  uint64_t v15 = sub_25A6227C0();
  size_t v16 = v13;
  uint64_t v63 = v15;
  uint64_t v17 = *(void *)(v15 - 8);
  size_t v61 = v16;
  uint64_t v62 = *(void *)(v17 + 64) + v10;
  uint64_t v70 = v9;
  int v69 = *(_DWORD *)(v9 + 84);
  if (v69) {
    size_t v18 = v16;
  }
  else {
    size_t v18 = v16 + 1;
  }
  size_t __n = v18;
  if (v18 + (v62 & ~(unint64_t)v10) > v14) {
    size_t v14 = v18 + (v62 & ~(unint64_t)v10);
  }
  if (v14 > 3
    || ((unsigned int v19 = ((1 << (8 * v14)) | 2u) >> (8 * v14), v19 <= 0xFFFD) ? (v20 = 2) : (v20 = 4), v19 <= 0xFD))
  {
    uint64_t v20 = 1;
  }
  uint64_t v21 = swift_getAssociatedTypeWitness();
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v23 = *(_DWORD *)(v22 + 80);
  uint64_t v24 = (*(unsigned char *)(v2 + 80) | *(unsigned char *)(v17 + 80) | v5 | v10 | *(unsigned char *)(v22 + 80));
  BOOL v25 = v24 > 7 || ((v20 + v14 + v23) & ~v23) + *(void *)(*(void *)(v21 - 8) + 64) > 0x18;
  if (!v25 && ((*(_DWORD *)(v2 + 80) | *(_DWORD *)(v17 + 80) | v5 | v10 | *(_DWORD *)(v22 + 80)) & 0x100000) == 0)
  {
    int v29 = a2;
    if (v14 > 3)
    {
LABEL_21:
      unsigned int v30 = a2[v14];
      goto LABEL_26;
    }
    unsigned int v31 = ((1 << (8 * v14)) | 2u) >> (8 * v14);
    if (v31 > 0xFFFD)
    {
      unsigned int v30 = *(_DWORD *)&a2[v14];
    }
    else
    {
      if (v31 <= 0xFD) {
        goto LABEL_21;
      }
      unsigned int v30 = *(unsigned __int16 *)&a2[v14];
    }
LABEL_26:
    unsigned int v32 = v30 - 2;
    if (v30 >= 2)
    {
      if (v14 <= 3) {
        uint64_t v33 = v14;
      }
      else {
        uint64_t v33 = 4;
      }
      switch(v33)
      {
        case 1:
          int v34 = *a2;
          if (v14 < 4) {
            goto LABEL_38;
          }
          goto LABEL_39;
        case 2:
          int v34 = *(unsigned __int16 *)a2;
          if (v14 >= 4) {
            goto LABEL_39;
          }
          goto LABEL_38;
        case 3:
          int v34 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          if (v14 >= 4) {
            goto LABEL_39;
          }
          goto LABEL_38;
        case 4:
          int v34 = *(_DWORD *)a2;
          if (v14 < 4) {
LABEL_38:
          }
            v34 |= v32 << (8 * v14);
LABEL_39:
          unsigned int v30 = v34 + 2;
          break;
        default:
          break;
      }
    }
    uint64_t v35 = ~v11;
    if (v30 != 1)
    {
      if (v30)
      {
        if (v14 > 3) {
          goto LABEL_55;
        }
        unsigned int v50 = ((1 << (8 * v14)) | 2u) >> (8 * v14);
        uint64_t v51 = 2;
        if (v50 > 0xFFFD) {
          uint64_t v51 = 4;
        }
        if (v50 <= 0xFD)
        {
LABEL_55:
          uint64_t v52 = ~v23;
          uint64_t v53 = v21;
          uint64_t v51 = 1;
        }
        else
        {
          uint64_t v52 = ~v23;
          uint64_t v53 = v21;
        }
        uint64_t v28 = a1;
        memcpy(a1, a2, v51 + v14);
        uint64_t v42 = v53;
        uint64_t v44 = v52;
        if (v14 > 3) {
          goto LABEL_85;
        }
        goto LABEL_82;
      }
      uint64_t v36 = ~v6;
      uint64_t v37 = *(void (**)(void *, unsigned __int8 *, uint64_t))(v2 + 16);
      uint64_t v38 = a1;
      uint64_t v39 = v21;
      v37(a1, a2, AssociatedTypeWitness);
      unint64_t v40 = ((unint64_t)a1 + v64) & ~v6;
      unint64_t v41 = (unint64_t)&a2[v64] & v36;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v66 + 16))(v40, v41, v67);
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v70 + 16))((v40 + v65 + v11) & v35, (v41 + v65 + v11) & v35, v71);
      uint64_t v42 = v39;
      if (v14 > 3) {
        goto LABEL_45;
      }
      unsigned int v43 = ((1 << (8 * v14)) | 2u) >> (8 * v14);
      if (v43 > 0xFFFD)
      {
        uint64_t v28 = a1;
        *(_DWORD *)((char *)a1 + v14) = 0;
      }
      else
      {
        uint64_t v38 = a1;
        if (v43 <= 0xFD)
        {
LABEL_45:
          *((unsigned char *)v38 + v14) = 0;
          uint64_t v28 = v38;
          int v29 = a2;
          uint64_t v44 = ~v23;
          if (v14 > 3) {
            goto LABEL_85;
          }
          goto LABEL_82;
        }
        *(_WORD *)((char *)a1 + v14) = 0;
        uint64_t v28 = a1;
      }
      int v29 = a2;
      uint64_t v44 = ~v23;
      goto LABEL_88;
    }
    uint64_t v45 = v21;
    uint64_t v28 = a1;
    (*(void (**)(void *, unsigned __int8 *, uint64_t))(v17 + 16))(a1, a2, v63);
    uint64_t v46 = (unsigned char *)(((unint64_t)a1 + v62) & v35);
    uint64_t v47 = (unsigned __int16 *)((unint64_t)&a2[v62] & v35);
    if (v69)
    {
      uint64_t v49 = v70;
      uint64_t v48 = v71;
      if (!(*(unsigned int (**)(unsigned __int16 *))(v70 + 48))(v47))
      {
LABEL_76:
        (*(void (**)(unsigned char *, unsigned __int16 *, uint64_t))(v49 + 16))(v46, v47, v48);
        if (!v69) {
          v46[v61] = 0;
        }
LABEL_78:
        uint64_t v42 = v45;
        uint64_t v44 = ~v23;
        if (v14 > 3) {
          goto LABEL_81;
        }
        unsigned int v43 = ((1 << (8 * v14)) | 2u) >> (8 * v14);
        if (v43 > 0xFFFD)
        {
          *(_DWORD *)((char *)a1 + v14) = 1;
          goto LABEL_88;
        }
        if (v43 <= 0xFD)
        {
LABEL_81:
          *((unsigned char *)a1 + v14) = 1;
          if (v14 > 3)
          {
LABEL_85:
            uint64_t v58 = 1;
LABEL_90:
            (*(void (**)(unint64_t, unint64_t, uint64_t))(v22 + 16))(((unint64_t)v28 + v23 + v58 + v14) & v44, (unint64_t)&v29[v23 + v58 + v14] & v44, v42);
            return v28;
          }
LABEL_82:
          unsigned int v57 = ((1 << (8 * v14)) | 2u) >> (8 * v14);
          uint64_t v58 = 2;
          if (v57 > 0xFFFD) {
            uint64_t v58 = 4;
          }
          if (v57 > 0xFD) {
            goto LABEL_90;
          }
          goto LABEL_85;
        }
        *(_WORD *)((char *)a1 + v14) = 1;
LABEL_88:
        BOOL v25 = v43 > 0xFFFD;
        uint64_t v58 = 2;
        if (v25) {
          uint64_t v58 = 4;
        }
        goto LABEL_90;
      }
    }
    else
    {
      uint64_t v49 = v70;
      uint64_t v48 = v71;
      if (!*((unsigned char *)v47 + v61)) {
        goto LABEL_76;
      }
      int v54 = (*((unsigned __int8 *)v47 + v61) - 1) << (8 * v61);
      if (v61 > 3) {
        int v54 = 0;
      }
      if (v61)
      {
        int v55 = v61 <= 3 ? v61 : 4;
        switch(v55)
        {
          case 2:
            int v56 = *v47;
            break;
          case 3:
            int v56 = *v47 | (*((unsigned __int8 *)v47 + 2) << 16);
            break;
          case 4:
            int v56 = *(_DWORD *)v47;
            break;
          default:
            int v56 = *(unsigned __int8 *)v47;
            break;
        }
      }
      else
      {
        int v56 = 0;
      }
      if ((v56 | v54) == 0xFFFFFFFF) {
        goto LABEL_76;
      }
    }
    memcpy(v46, v47, __n);
    goto LABEL_78;
  }
  uint64_t v27 = *(void *)a2;
  *a1 = *(void *)a2;
  uint64_t v28 = (void *)(v27 + ((v24 + 16) & ~v24));
  swift_retain();
  return v28;
}

uint64_t sub_25A576630(unsigned __int8 *a1)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v41 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v42 = AssociatedTypeWitness;
  uint64_t v3 = *(void *)(v41 + 64);
  uint64_t v40 = swift_getAssociatedTypeWitness();
  uint64_t v4 = *(void *)(v40 - 8);
  uint64_t v5 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v38 = v3 + v5;
  uint64_t v6 = *(void *)(v4 + 64);
  uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(qword_26A429C58);
  uint64_t v7 = *(void *)(v43 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v39 = v6;
  uint64_t v9 = (v6 + v8 + ((v3 + v5) & ~v5)) & ~v8;
  uint64_t v10 = *(void *)(v7 + 64);
  unint64_t v11 = v9 + v10;
  uint64_t v12 = sub_25A6227C0();
  uint64_t v13 = *(void *)(*(void *)(v12 - 8) + 64) + v8;
  uint64_t v14 = *(unsigned int *)(v7 + 84);
  unint64_t v15 = (v13 & ~v8) + v10;
  if (!v14) {
    ++v15;
  }
  if (v15 <= v11) {
    unint64_t v16 = v11;
  }
  else {
    unint64_t v16 = v15;
  }
  if (v16 > 3) {
    goto LABEL_7;
  }
  uint64_t v17 = a1;
  unsigned int v19 = ((1 << (8 * v16)) | 2u) >> (8 * v16);
  if (v19 > 0xFFFD)
  {
    unsigned int v18 = *(_DWORD *)&a1[v16];
  }
  else
  {
    if (v19 <= 0xFD)
    {
LABEL_7:
      uint64_t v17 = a1;
      unsigned int v18 = a1[v16];
      goto LABEL_12;
    }
    unsigned int v18 = *(unsigned __int16 *)&a1[v16];
  }
LABEL_12:
  unsigned int v20 = v18 - 2;
  if (v18 >= 2)
  {
    if (v16 <= 3) {
      uint64_t v21 = v16;
    }
    else {
      uint64_t v21 = 4;
    }
    switch(v21)
    {
      case 1:
        int v22 = *v17;
        if (v16 < 4) {
          goto LABEL_24;
        }
        goto LABEL_25;
      case 2:
        int v22 = *(unsigned __int16 *)v17;
        if (v16 >= 4) {
          goto LABEL_25;
        }
        goto LABEL_24;
      case 3:
        int v22 = *(unsigned __int16 *)v17 | (v17[2] << 16);
        if (v16 >= 4) {
          goto LABEL_25;
        }
        goto LABEL_24;
      case 4:
        int v22 = *(_DWORD *)v17;
        if (v16 < 4) {
LABEL_24:
        }
          v22 |= v20 << (8 * v16);
LABEL_25:
        unsigned int v18 = v22 + 2;
        break;
      default:
        break;
    }
  }
  uint64_t v23 = ~v8;
  if (v18 != 1)
  {
    uint64_t v24 = v17;
    if (!v18)
    {
      (*(void (**)(unsigned __int8 *, uint64_t))(v41 + 8))(v17, v42);
      unint64_t v25 = (unint64_t)&v24[v38] & ~v5;
      (*(void (**)(unint64_t, uint64_t))(v4 + 8))(v25, v40);
      uint64_t v26 = (unsigned __int16 *)((v25 + v39 + v8) & v23);
      goto LABEL_48;
    }
LABEL_31:
    if (v16 <= 3) {
      goto LABEL_49;
    }
    goto LABEL_53;
  }
  uint64_t v24 = v17;
  (*(void (**)(unsigned __int8 *, uint64_t))(*(void *)(v12 - 8) + 8))(v17, v12);
  uint64_t v26 = (unsigned __int16 *)((unint64_t)&v24[v13] & v23);
  if (v14)
  {
    if ((*(unsigned int (**)(unsigned __int16 *, uint64_t, uint64_t))(v7 + 48))(v26, v14, v43)) {
      goto LABEL_31;
    }
  }
  else if (*((unsigned char *)v26 + v10))
  {
    int v27 = (*((unsigned __int8 *)v26 + v10) - 1) << (8 * v10);
    if (v10 > 3) {
      int v27 = 0;
    }
    if (v10)
    {
      int v28 = v10 <= 3 ? v10 : 4;
      switch(v28)
      {
        case 2:
          int v29 = *v26;
          break;
        case 3:
          int v29 = *v26 | (*((unsigned __int8 *)v26 + 2) << 16);
          break;
        case 4:
          int v29 = *(_DWORD *)v26;
          break;
        default:
          int v29 = *(unsigned __int8 *)v26;
          break;
      }
    }
    else
    {
      int v29 = 0;
    }
    if ((v29 | v27) != 0xFFFFFFFF) {
      goto LABEL_31;
    }
  }
LABEL_48:
  (*(void (**)(unsigned __int16 *, uint64_t))(v7 + 8))(v26, v43);
  if (v16 <= 3)
  {
LABEL_49:
    unsigned int v30 = ((1 << (8 * v16)) | 2u) >> (8 * v16);
    if (v30 <= 0xFFFD) {
      uint64_t v31 = 2;
    }
    else {
      uint64_t v31 = 4;
    }
    if (v30 > 0xFD) {
      goto LABEL_54;
    }
  }
LABEL_53:
  uint64_t v31 = 1;
LABEL_54:
  uint64_t v32 = swift_getAssociatedTypeWitness();
  uint64_t v33 = *(void *)(v32 - 8);
  int v34 = *(uint64_t (**)(unint64_t, uint64_t))(v33 + 8);
  uint64_t v35 = v32;
  unint64_t v36 = (unint64_t)&v24[v16 + v31 + *(unsigned __int8 *)(v33 + 80)] & ~(unint64_t)*(unsigned __int8 *)(v33 + 80);

  return v34(v36, v35);
}

unsigned char *sub_25A576B90(unsigned char *a1, unsigned __int8 *a2)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v47 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v3 = *(void *)(v47 + 64);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v4 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v5 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = v3 + v5;
  uint64_t v7 = *(void *)(v4 + 64);
  uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(qword_26A429C58);
  uint64_t v8 = *(void *)(v49 - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v45 = v7;
  uint64_t v10 = (v7 + v9 + ((v3 + v5) & ~v5)) & ~v9;
  size_t v11 = *(void *)(v8 + 64);
  size_t v12 = v10 + v11;
  uint64_t v13 = sub_25A6227C0();
  uint64_t v14 = *(void *)(*(void *)(v13 - 8) + 64) + v9;
  if (*(_DWORD *)(v8 + 84)) {
    size_t v15 = v11;
  }
  else {
    size_t v15 = v11 + 1;
  }
  if (v15 + (v14 & ~v9) <= v12) {
    size_t v16 = v12;
  }
  else {
    size_t v16 = v15 + (v14 & ~v9);
  }
  __src = a2;
  if (v16 > 3) {
    goto LABEL_8;
  }
  unsigned int v19 = ((1 << (8 * v16)) | 2u) >> (8 * v16);
  if (v19 > 0xFFFD)
  {
    unsigned int v18 = a2;
    unsigned int v17 = *(_DWORD *)&a2[v16];
  }
  else
  {
    if (v19 <= 0xFD)
    {
LABEL_8:
      unsigned int v17 = a2[v16];
      unsigned int v18 = a2;
      goto LABEL_13;
    }
    unsigned int v17 = *(unsigned __int16 *)&a2[v16];
    unsigned int v18 = a2;
  }
LABEL_13:
  unsigned int v20 = v17 - 2;
  if (v17 >= 2)
  {
    if (v16 <= 3) {
      uint64_t v21 = v16;
    }
    else {
      uint64_t v21 = 4;
    }
    switch(v21)
    {
      case 1:
        int v22 = *v18;
        if (v16 < 4) {
          goto LABEL_25;
        }
        goto LABEL_26;
      case 2:
        int v22 = *(unsigned __int16 *)v18;
        if (v16 >= 4) {
          goto LABEL_26;
        }
        goto LABEL_25;
      case 3:
        int v22 = *(unsigned __int16 *)v18 | (v18[2] << 16);
        if (v16 >= 4) {
          goto LABEL_26;
        }
        goto LABEL_25;
      case 4:
        int v22 = *(_DWORD *)v18;
        if (v16 < 4) {
LABEL_25:
        }
          v22 |= v20 << (8 * v16);
LABEL_26:
        unsigned int v17 = v22 + 2;
        break;
      default:
        break;
    }
  }
  uint64_t v23 = ~v9;
  if (v17 == 1)
  {
    size_t __n = v15;
    unsigned int v30 = a1;
    uint64_t v31 = *(unsigned int *)(v8 + 84);
    (*(void (**)(unsigned char *, unsigned __int8 *, uint64_t))(*(void *)(v13 - 8) + 16))(a1, a2, v13);
    uint64_t v32 = (unsigned char *)((unint64_t)&a1[v14] & v23);
    uint64_t v33 = (unsigned __int16 *)((unint64_t)&a2[v14] & v23);
    if (v31)
    {
      uint64_t v34 = v49;
      if (!(*(unsigned int (**)(unsigned __int16 *, uint64_t, uint64_t))(v8 + 48))(v33, v31, v49)) {
        goto LABEL_62;
      }
    }
    else
    {
      uint64_t v34 = v49;
      if (!*((unsigned char *)v33 + v11)) {
        goto LABEL_62;
      }
      int v37 = (*((unsigned __int8 *)v33 + v11) - 1) << (8 * v11);
      if (v11 > 3) {
        int v37 = 0;
      }
      if (v11)
      {
        int v38 = v11 <= 3 ? v11 : 4;
        switch(v38)
        {
          case 2:
            int v39 = *v33;
            break;
          case 3:
            int v39 = *v33 | (*((unsigned __int8 *)v33 + 2) << 16);
            break;
          case 4:
            int v39 = *(_DWORD *)v33;
            break;
          default:
            int v39 = *(unsigned __int8 *)v33;
            break;
        }
      }
      else
      {
        int v39 = 0;
      }
      if ((v39 | v37) == 0xFFFFFFFF)
      {
LABEL_62:
        (*(void (**)(unsigned char *, unsigned __int16 *, uint64_t))(v8 + 16))(v32, v33, v34);
        if (v31)
        {
          if (v16 > 3) {
            goto LABEL_72;
          }
        }
        else
        {
          v32[v11] = 0;
          if (v16 > 3) {
            goto LABEL_72;
          }
        }
LABEL_64:
        unsigned int v29 = ((1 << (8 * v16)) | 2u) >> (8 * v16);
        if (v29 > 0xFFFD)
        {
          *(_DWORD *)&a1[v16] = 1;
          goto LABEL_68;
        }
        if (v29 > 0xFD)
        {
          *(_WORD *)&a1[v16] = 1;
          goto LABEL_68;
        }
LABEL_72:
        a1[v16] = 1;
        if (v16 > 3)
        {
LABEL_77:
          uint64_t v40 = 1;
          goto LABEL_78;
        }
        goto LABEL_73;
      }
    }
    memcpy(v32, v33, __n);
    if (v16 > 3) {
      goto LABEL_72;
    }
    goto LABEL_64;
  }
  if (!v17)
  {
    uint64_t v24 = ~v5;
    unint64_t v25 = a1;
    uint64_t v26 = v18;
    (*(void (**)(unsigned char *))(v47 + 16))(a1);
    unint64_t v27 = (unint64_t)&a1[v6] & v24;
    unint64_t v28 = (unint64_t)&v26[v6] & v24;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v4 + 16))(v27, v28, AssociatedTypeWitness);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 16))((v27 + v45 + v9) & v23, (v28 + v45 + v9) & v23, v49);
    if (v16 > 3) {
      goto LABEL_32;
    }
    unsigned int v29 = ((1 << (8 * v16)) | 2u) >> (8 * v16);
    if (v29 > 0xFFFD)
    {
      unsigned int v30 = a1;
      *(_DWORD *)&a1[v16] = 0;
    }
    else
    {
      unint64_t v25 = a1;
      if (v29 <= 0xFD)
      {
LABEL_32:
        v25[v16] = 0;
        unsigned int v30 = v25;
        if (v16 > 3) {
          goto LABEL_77;
        }
        goto LABEL_73;
      }
      *(_WORD *)&a1[v16] = 0;
      unsigned int v30 = a1;
    }
LABEL_68:
    if (v29 <= 0xFFFD) {
      uint64_t v40 = 2;
    }
    else {
      uint64_t v40 = 4;
    }
    goto LABEL_78;
  }
  if (v16 > 3) {
    goto LABEL_41;
  }
  unsigned int v35 = ((1 << (8 * v16)) | 2u) >> (8 * v16);
  uint64_t v36 = 2;
  if (v35 > 0xFFFD) {
    uint64_t v36 = 4;
  }
  if (v35 <= 0xFD) {
LABEL_41:
  }
    uint64_t v36 = 1;
  unsigned int v30 = a1;
  memcpy(a1, v18, v36 + v16);
  if (v16 > 3) {
    goto LABEL_77;
  }
LABEL_73:
  unsigned int v41 = ((1 << (8 * v16)) | 2u) >> (8 * v16);
  if (v41 <= 0xFFFD) {
    uint64_t v40 = 2;
  }
  else {
    uint64_t v40 = 4;
  }
  if (v41 <= 0xFD) {
    goto LABEL_77;
  }
LABEL_78:
  uint64_t v42 = swift_getAssociatedTypeWitness();
  uint64_t v43 = *(void *)(v42 - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v43 + 16))((unint64_t)&v30[v40 + v16 + *(unsigned __int8 *)(v43 + 80)] & ~(unint64_t)*(unsigned __int8 *)(v43 + 80), (unint64_t)&__src[v40 + v16 + *(unsigned __int8 *)(v43 + 80)] & ~(unint64_t)*(unsigned __int8 *)(v43 + 80), v42);
  return v30;
}

unsigned __int8 *sub_25A57726C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = AssociatedTypeWitness;
  if (a1 == a2) {
    goto LABEL_108;
  }
  uint64_t v76 = a2;
  uint64_t v73 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = *(void *)(v73 + 64);
  uint64_t v7 = swift_getAssociatedTypeWitness();
  uint64_t v71 = *(void *)(v7 - 8);
  uint64_t v72 = v7;
  uint64_t v8 = *(unsigned __int8 *)(v71 + 80);
  uint64_t v69 = v6 + v8;
  uint64_t v9 = (v6 + v8) & ~v8;
  uint64_t v10 = *(void *)(v71 + 64);
  uint64_t v75 = __swift_instantiateConcreteTypeFromMangledName(qword_26A429C58);
  uint64_t v11 = *(void *)(v75 - 8);
  uint64_t v12 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v70 = v10;
  uint64_t v13 = (v10 + v12 + v9) & ~v12;
  size_t v14 = *(void *)(v11 + 64);
  size_t v15 = v13 + v14;
  uint64_t v16 = sub_25A6227C0();
  uint64_t v17 = v16;
  uint64_t v18 = *(void *)(v16 - 8);
  uint64_t v68 = *(void *)(v18 + 64) + v12;
  unsigned int v74 = *(_DWORD *)(v11 + 84);
  size_t v65 = v14;
  if (v74) {
    size_t v19 = v14;
  }
  else {
    size_t v19 = v14 + 1;
  }
  if (v19 + (v68 & ~v12) <= v15) {
    size_t v20 = v15;
  }
  else {
    size_t v20 = v19 + (v68 & ~v12);
  }
  if (v20 > 3) {
    goto LABEL_9;
  }
  unsigned int v22 = ((1 << (8 * v20)) | 2u) >> (8 * v20);
  if (v22 > 0xFFFD)
  {
    unsigned int v21 = *(_DWORD *)&a1[v20];
  }
  else
  {
    if (v22 <= 0xFD)
    {
LABEL_9:
      unsigned int v21 = a1[v20];
      goto LABEL_14;
    }
    unsigned int v21 = *(unsigned __int16 *)&a1[v20];
  }
LABEL_14:
  unsigned int v23 = v21 - 2;
  if (v21 >= 2)
  {
    if (v20 <= 3) {
      uint64_t v24 = v20;
    }
    else {
      uint64_t v24 = 4;
    }
    switch(v24)
    {
      case 1:
        int v25 = *a1;
        if (v20 < 4) {
          goto LABEL_26;
        }
        goto LABEL_27;
      case 2:
        int v25 = *(unsigned __int16 *)a1;
        if (v20 >= 4) {
          goto LABEL_27;
        }
        goto LABEL_26;
      case 3:
        int v25 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        if (v20 >= 4) {
          goto LABEL_27;
        }
        goto LABEL_26;
      case 4:
        int v25 = *(_DWORD *)a1;
        if (v20 < 4) {
LABEL_26:
        }
          v25 |= v23 << (8 * v20);
LABEL_27:
        unsigned int v21 = v25 + 2;
        break;
      default:
        break;
    }
  }
  uint64_t v67 = ~v8;
  uint64_t v26 = ~v12;
  size_t __n = v19;
  if (v21 != 1)
  {
    if (v21) {
      goto LABEL_49;
    }
    uint64_t v66 = *(void *)(v16 - 8);
    uint64_t v27 = v16;
    (*(void (**)(unsigned __int8 *, uint64_t))(v73 + 8))(a1, v5);
    (*(void (**)(unint64_t, uint64_t))(v71 + 8))((unint64_t)&a1[v69] & v67, v72);
    unint64_t v28 = (unsigned __int16 *)((((unint64_t)&a1[v69] & v67) + v70 + v12) & v26);
    goto LABEL_48;
  }
  uint64_t v66 = *(void *)(v16 - 8);
  uint64_t v27 = v16;
  (*(void (**)(unsigned __int8 *, uint64_t))(v18 + 8))(a1, v16);
  unint64_t v28 = (unsigned __int16 *)((unint64_t)&a1[v68] & v26);
  if (v74)
  {
    int v29 = (*(uint64_t (**)(unint64_t))(v11 + 48))((unint64_t)&a1[v68] & v26);
    uint64_t v17 = v27;
    uint64_t v18 = v66;
    if (v29) {
      goto LABEL_49;
    }
    goto LABEL_48;
  }
  if (!*((unsigned char *)v28 + v65)) {
    goto LABEL_48;
  }
  int v30 = (*((unsigned __int8 *)v28 + v65) - 1) << (8 * v65);
  if (v65 > 3) {
    int v30 = 0;
  }
  if (v65)
  {
    int v31 = v65 <= 3 ? v65 : 4;
    uint64_t v18 = v66;
    uint64_t v17 = v27;
    switch(v31)
    {
      case 2:
        int v32 = *v28;
        break;
      case 3:
        int v32 = *v28 | (*(unsigned __int8 *)(((unint64_t)&a1[v68] & v26) + 2) << 16);
        break;
      case 4:
        int v32 = *(_DWORD *)v28;
        break;
      default:
        int v32 = *(unsigned __int8 *)v28;
        break;
    }
  }
  else
  {
    int v32 = 0;
    uint64_t v17 = v27;
    uint64_t v18 = v66;
  }
  if ((v32 | v30) == 0xFFFFFFFF)
  {
LABEL_48:
    (*(void (**)(unsigned __int16 *, uint64_t))(v11 + 8))(v28, v75);
    uint64_t v17 = v27;
    uint64_t v18 = v66;
  }
LABEL_49:
  a2 = v76;
  if (v20 > 3)
  {
LABEL_50:
    unsigned int v33 = v76[v20];
    goto LABEL_55;
  }
  unsigned int v34 = ((1 << (8 * v20)) | 2u) >> (8 * v20);
  if (v34 > 0xFFFD)
  {
    unsigned int v33 = *(_DWORD *)&v76[v20];
  }
  else
  {
    if (v34 <= 0xFD) {
      goto LABEL_50;
    }
    unsigned int v33 = *(unsigned __int16 *)&v76[v20];
  }
LABEL_55:
  unsigned int v35 = v33 - 2;
  if (v33 >= 2)
  {
    if (v20 <= 3) {
      uint64_t v36 = v20;
    }
    else {
      uint64_t v36 = 4;
    }
    switch(v36)
    {
      case 1:
        int v37 = *v76;
        if (v20 >= 4) {
          goto LABEL_79;
        }
        goto LABEL_65;
      case 2:
        int v37 = *(unsigned __int16 *)v76;
        if (v20 >= 4) {
          goto LABEL_79;
        }
        goto LABEL_65;
      case 3:
        int v37 = *(unsigned __int16 *)v76 | (v76[2] << 16);
        if (v20 < 4) {
          goto LABEL_65;
        }
        goto LABEL_79;
      case 4:
        int v37 = *(_DWORD *)v76;
        if (v20 < 4)
        {
LABEL_65:
          unsigned int v33 = (v37 | (v35 << (8 * v20))) + 2;
          break;
        }
LABEL_79:
        unsigned int v33 = v37 + 2;
        if (v33 == 1) {
          goto LABEL_80;
        }
        goto LABEL_67;
      default:
        break;
    }
  }
  if (v33 != 1)
  {
LABEL_67:
    if (v33)
    {
      if (v20 > 3) {
        goto LABEL_76;
      }
      unsigned int v40 = ((1 << (8 * v20)) | 2u) >> (8 * v20);
      uint64_t v41 = 2;
      if (v40 > 0xFFFD) {
        uint64_t v41 = 4;
      }
      if (v40 <= 0xFD) {
LABEL_76:
      }
        uint64_t v41 = 1;
      memcpy(a1, v76, v41 + v20);
    }
    else
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v73 + 16))(a1, v76, v5);
      unint64_t v38 = (unint64_t)&v76[v69] & v67;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v71 + 16))((unint64_t)&a1[v69] & v67, v38, v72);
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v11 + 16))((((unint64_t)&a1[v69] & v67) + v70 + v12) & v26, (v38 + v70 + v12) & v26, v75);
      if (v20 > 3)
      {
LABEL_71:
        a1[v20] = 0;
        a2 = v76;
        goto LABEL_108;
      }
      unsigned int v39 = ((1 << (8 * v20)) | 2u) >> (8 * v20);
      if (v39 > 0xFFFD)
      {
        *(_DWORD *)&a1[v20] = 0;
        a2 = v76;
      }
      else
      {
        if (v39 <= 0xFD) {
          goto LABEL_71;
        }
        *(_WORD *)&a1[v20] = 0;
        a2 = v76;
      }
    }
    goto LABEL_108;
  }
LABEL_80:
  (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v18 + 16))(a1, v76, v17);
  uint64_t v42 = (void *)((unint64_t)&a1[v68] & v26);
  uint64_t v43 = (unsigned __int16 *)((unint64_t)&v76[v68] & v26);
  if (!v74)
  {
    if (!*((unsigned char *)v43 + v65)) {
      goto LABEL_100;
    }
    int v44 = (*((unsigned __int8 *)v43 + v65) - 1) << (8 * v65);
    if (v65 > 3) {
      int v44 = 0;
    }
    if (v65)
    {
      int v45 = v65 <= 3 ? v65 : 4;
      switch(v45)
      {
        case 2:
          int v46 = *v43;
          break;
        case 3:
          int v46 = *(unsigned __int16 *)((unint64_t)&v76[v68] & v26) | (*(unsigned __int8 *)(((unint64_t)&v76[v68] & v26)
                                                                                               + 2) << 16);
          break;
        case 4:
          int v46 = *(_DWORD *)v43;
          break;
        default:
          int v46 = *(unsigned __int8 *)v43;
          break;
      }
    }
    else
    {
      int v46 = 0;
    }
    if ((v46 | v44) == 0xFFFFFFFF) {
      goto LABEL_100;
    }
LABEL_99:
    memcpy(v42, v43, __n);
    goto LABEL_102;
  }
  if ((*(unsigned int (**)(unsigned __int16 *, void, uint64_t))(v11 + 48))(v43, v74, v75)) {
    goto LABEL_99;
  }
LABEL_100:
  (*(void (**)(void *, unsigned __int16 *, uint64_t))(v11 + 16))(v42, v43, v75);
  if (!v74) {
    *((unsigned char *)v42 + v65) = 0;
  }
LABEL_102:
  a2 = v76;
  if (v20 > 3) {
    goto LABEL_105;
  }
  unsigned int v47 = ((1 << (8 * v20)) | 2u) >> (8 * v20);
  if (v47 > 0xFFFD)
  {
    *(_DWORD *)&a1[v20] = 1;
    goto LABEL_108;
  }
  if (v47 <= 0xFD)
  {
LABEL_105:
    a1[v20] = 1;
    goto LABEL_108;
  }
  *(_WORD *)&a1[v20] = 1;
LABEL_108:
  uint64_t v48 = *(void *)(*(void *)(v5 - 8) + 64);
  uint64_t v49 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unint64_t v50 = (v48 + *(unsigned __int8 *)(v49 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80);
  uint64_t v51 = *(void *)(v49 + 64);
  uint64_t v52 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(qword_26A429C58) - 8);
  uint64_t v53 = *(unsigned __int8 *)(v52 + 80);
  unint64_t v54 = (v50 + v51 + v53) & ~v53;
  uint64_t v55 = *(void *)(v52 + 64);
  unint64_t v56 = v54 + v55;
  unint64_t v57 = ((*(void *)(*(void *)(sub_25A6227C0() - 8) + 64) + v53) & ~v53) + v55;
  if (!*(_DWORD *)(v52 + 84)) {
    ++v57;
  }
  if (v57 <= v56) {
    unint64_t v58 = v56;
  }
  else {
    unint64_t v58 = v57;
  }
  if (v58 > 3
    || ((unsigned int v59 = ((1 << (8 * v58)) | 2u) >> (8 * v58), v59 <= 0xFFFD) ? (v60 = 2) : (v60 = 4), v59 <= 0xFD))
  {
    uint64_t v60 = 1;
  }
  uint64_t v61 = swift_getAssociatedTypeWitness();
  uint64_t v62 = *(void *)(v61 - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v62 + 24))((unint64_t)&a1[v60 + v58 + *(unsigned __int8 *)(v62 + 80)] & ~(unint64_t)*(unsigned __int8 *)(v62 + 80), (unint64_t)&a2[v60 + v58 + *(unsigned __int8 *)(v62 + 80)] & ~(unint64_t)*(unsigned __int8 *)(v62 + 80), v61);
  return a1;
}

unsigned char *sub_25A577CC0(unsigned char *a1, unsigned __int8 *a2)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v47 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v3 = *(void *)(v47 + 64);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v4 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v5 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = v3 + v5;
  uint64_t v7 = *(void *)(v4 + 64);
  uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(qword_26A429C58);
  uint64_t v8 = *(void *)(v49 - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v45 = v7;
  uint64_t v10 = (v7 + v9 + ((v3 + v5) & ~v5)) & ~v9;
  size_t v11 = *(void *)(v8 + 64);
  size_t v12 = v10 + v11;
  uint64_t v13 = sub_25A6227C0();
  uint64_t v14 = *(void *)(*(void *)(v13 - 8) + 64) + v9;
  if (*(_DWORD *)(v8 + 84)) {
    size_t v15 = v11;
  }
  else {
    size_t v15 = v11 + 1;
  }
  if (v15 + (v14 & ~v9) <= v12) {
    size_t v16 = v12;
  }
  else {
    size_t v16 = v15 + (v14 & ~v9);
  }
  __src = a2;
  if (v16 > 3) {
    goto LABEL_8;
  }
  unsigned int v19 = ((1 << (8 * v16)) | 2u) >> (8 * v16);
  if (v19 > 0xFFFD)
  {
    uint64_t v18 = a2;
    unsigned int v17 = *(_DWORD *)&a2[v16];
  }
  else
  {
    if (v19 <= 0xFD)
    {
LABEL_8:
      unsigned int v17 = a2[v16];
      uint64_t v18 = a2;
      goto LABEL_13;
    }
    unsigned int v17 = *(unsigned __int16 *)&a2[v16];
    uint64_t v18 = a2;
  }
LABEL_13:
  unsigned int v20 = v17 - 2;
  if (v17 >= 2)
  {
    if (v16 <= 3) {
      uint64_t v21 = v16;
    }
    else {
      uint64_t v21 = 4;
    }
    switch(v21)
    {
      case 1:
        int v22 = *v18;
        if (v16 < 4) {
          goto LABEL_25;
        }
        goto LABEL_26;
      case 2:
        int v22 = *(unsigned __int16 *)v18;
        if (v16 >= 4) {
          goto LABEL_26;
        }
        goto LABEL_25;
      case 3:
        int v22 = *(unsigned __int16 *)v18 | (v18[2] << 16);
        if (v16 >= 4) {
          goto LABEL_26;
        }
        goto LABEL_25;
      case 4:
        int v22 = *(_DWORD *)v18;
        if (v16 < 4) {
LABEL_25:
        }
          v22 |= v20 << (8 * v16);
LABEL_26:
        unsigned int v17 = v22 + 2;
        break;
      default:
        break;
    }
  }
  uint64_t v23 = ~v9;
  if (v17 == 1)
  {
    size_t __n = v15;
    int v30 = a1;
    uint64_t v31 = *(unsigned int *)(v8 + 84);
    (*(void (**)(unsigned char *, unsigned __int8 *, uint64_t))(*(void *)(v13 - 8) + 32))(a1, a2, v13);
    int v32 = (unsigned char *)((unint64_t)&a1[v14] & v23);
    unsigned int v33 = (unsigned __int16 *)((unint64_t)&a2[v14] & v23);
    if (v31)
    {
      uint64_t v34 = v49;
      if (!(*(unsigned int (**)(unsigned __int16 *, uint64_t, uint64_t))(v8 + 48))(v33, v31, v49)) {
        goto LABEL_62;
      }
    }
    else
    {
      uint64_t v34 = v49;
      if (!*((unsigned char *)v33 + v11)) {
        goto LABEL_62;
      }
      int v37 = (*((unsigned __int8 *)v33 + v11) - 1) << (8 * v11);
      if (v11 > 3) {
        int v37 = 0;
      }
      if (v11)
      {
        int v38 = v11 <= 3 ? v11 : 4;
        switch(v38)
        {
          case 2:
            int v39 = *v33;
            break;
          case 3:
            int v39 = *v33 | (*((unsigned __int8 *)v33 + 2) << 16);
            break;
          case 4:
            int v39 = *(_DWORD *)v33;
            break;
          default:
            int v39 = *(unsigned __int8 *)v33;
            break;
        }
      }
      else
      {
        int v39 = 0;
      }
      if ((v39 | v37) == 0xFFFFFFFF)
      {
LABEL_62:
        (*(void (**)(unsigned char *, unsigned __int16 *, uint64_t))(v8 + 32))(v32, v33, v34);
        if (v31)
        {
          if (v16 > 3) {
            goto LABEL_72;
          }
        }
        else
        {
          v32[v11] = 0;
          if (v16 > 3) {
            goto LABEL_72;
          }
        }
LABEL_64:
        unsigned int v29 = ((1 << (8 * v16)) | 2u) >> (8 * v16);
        if (v29 > 0xFFFD)
        {
          *(_DWORD *)&a1[v16] = 1;
          goto LABEL_68;
        }
        if (v29 > 0xFD)
        {
          *(_WORD *)&a1[v16] = 1;
          goto LABEL_68;
        }
LABEL_72:
        a1[v16] = 1;
        if (v16 > 3)
        {
LABEL_77:
          uint64_t v40 = 1;
          goto LABEL_78;
        }
        goto LABEL_73;
      }
    }
    memcpy(v32, v33, __n);
    if (v16 > 3) {
      goto LABEL_72;
    }
    goto LABEL_64;
  }
  if (!v17)
  {
    uint64_t v24 = ~v5;
    int v25 = a1;
    uint64_t v26 = v18;
    (*(void (**)(unsigned char *))(v47 + 32))(a1);
    unint64_t v27 = (unint64_t)&a1[v6] & v24;
    unint64_t v28 = (unint64_t)&v26[v6] & v24;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v4 + 32))(v27, v28, AssociatedTypeWitness);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 32))((v27 + v45 + v9) & v23, (v28 + v45 + v9) & v23, v49);
    if (v16 > 3) {
      goto LABEL_32;
    }
    unsigned int v29 = ((1 << (8 * v16)) | 2u) >> (8 * v16);
    if (v29 > 0xFFFD)
    {
      int v30 = a1;
      *(_DWORD *)&a1[v16] = 0;
    }
    else
    {
      int v25 = a1;
      if (v29 <= 0xFD)
      {
LABEL_32:
        v25[v16] = 0;
        int v30 = v25;
        if (v16 > 3) {
          goto LABEL_77;
        }
        goto LABEL_73;
      }
      *(_WORD *)&a1[v16] = 0;
      int v30 = a1;
    }
LABEL_68:
    if (v29 <= 0xFFFD) {
      uint64_t v40 = 2;
    }
    else {
      uint64_t v40 = 4;
    }
    goto LABEL_78;
  }
  if (v16 > 3) {
    goto LABEL_41;
  }
  unsigned int v35 = ((1 << (8 * v16)) | 2u) >> (8 * v16);
  uint64_t v36 = 2;
  if (v35 > 0xFFFD) {
    uint64_t v36 = 4;
  }
  if (v35 <= 0xFD) {
LABEL_41:
  }
    uint64_t v36 = 1;
  int v30 = a1;
  memcpy(a1, v18, v36 + v16);
  if (v16 > 3) {
    goto LABEL_77;
  }
LABEL_73:
  unsigned int v41 = ((1 << (8 * v16)) | 2u) >> (8 * v16);
  if (v41 <= 0xFFFD) {
    uint64_t v40 = 2;
  }
  else {
    uint64_t v40 = 4;
  }
  if (v41 <= 0xFD) {
    goto LABEL_77;
  }
LABEL_78:
  uint64_t v42 = swift_getAssociatedTypeWitness();
  uint64_t v43 = *(void *)(v42 - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v43 + 32))((unint64_t)&v30[v40 + v16 + *(unsigned __int8 *)(v43 + 80)] & ~(unint64_t)*(unsigned __int8 *)(v43 + 80), (unint64_t)&__src[v40 + v16 + *(unsigned __int8 *)(v43 + 80)] & ~(unint64_t)*(unsigned __int8 *)(v43 + 80), v42);
  return v30;
}

unsigned __int8 *sub_25A57839C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = AssociatedTypeWitness;
  if (a1 == a2) {
    goto LABEL_108;
  }
  uint64_t v76 = a2;
  uint64_t v73 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = *(void *)(v73 + 64);
  uint64_t v7 = swift_getAssociatedTypeWitness();
  uint64_t v71 = *(void *)(v7 - 8);
  uint64_t v72 = v7;
  uint64_t v8 = *(unsigned __int8 *)(v71 + 80);
  uint64_t v69 = v6 + v8;
  uint64_t v9 = (v6 + v8) & ~v8;
  uint64_t v10 = *(void *)(v71 + 64);
  uint64_t v75 = __swift_instantiateConcreteTypeFromMangledName(qword_26A429C58);
  uint64_t v11 = *(void *)(v75 - 8);
  uint64_t v12 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v70 = v10;
  uint64_t v13 = (v10 + v12 + v9) & ~v12;
  size_t v14 = *(void *)(v11 + 64);
  size_t v15 = v13 + v14;
  uint64_t v16 = sub_25A6227C0();
  uint64_t v17 = v16;
  uint64_t v18 = *(void *)(v16 - 8);
  uint64_t v68 = *(void *)(v18 + 64) + v12;
  unsigned int v74 = *(_DWORD *)(v11 + 84);
  size_t v65 = v14;
  if (v74) {
    size_t v19 = v14;
  }
  else {
    size_t v19 = v14 + 1;
  }
  if (v19 + (v68 & ~v12) <= v15) {
    size_t v20 = v15;
  }
  else {
    size_t v20 = v19 + (v68 & ~v12);
  }
  if (v20 > 3) {
    goto LABEL_9;
  }
  unsigned int v22 = ((1 << (8 * v20)) | 2u) >> (8 * v20);
  if (v22 > 0xFFFD)
  {
    unsigned int v21 = *(_DWORD *)&a1[v20];
  }
  else
  {
    if (v22 <= 0xFD)
    {
LABEL_9:
      unsigned int v21 = a1[v20];
      goto LABEL_14;
    }
    unsigned int v21 = *(unsigned __int16 *)&a1[v20];
  }
LABEL_14:
  unsigned int v23 = v21 - 2;
  if (v21 >= 2)
  {
    if (v20 <= 3) {
      uint64_t v24 = v20;
    }
    else {
      uint64_t v24 = 4;
    }
    switch(v24)
    {
      case 1:
        int v25 = *a1;
        if (v20 < 4) {
          goto LABEL_26;
        }
        goto LABEL_27;
      case 2:
        int v25 = *(unsigned __int16 *)a1;
        if (v20 >= 4) {
          goto LABEL_27;
        }
        goto LABEL_26;
      case 3:
        int v25 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        if (v20 >= 4) {
          goto LABEL_27;
        }
        goto LABEL_26;
      case 4:
        int v25 = *(_DWORD *)a1;
        if (v20 < 4) {
LABEL_26:
        }
          v25 |= v23 << (8 * v20);
LABEL_27:
        unsigned int v21 = v25 + 2;
        break;
      default:
        break;
    }
  }
  uint64_t v67 = ~v8;
  uint64_t v26 = ~v12;
  size_t __n = v19;
  if (v21 != 1)
  {
    if (v21) {
      goto LABEL_49;
    }
    uint64_t v66 = *(void *)(v16 - 8);
    uint64_t v27 = v16;
    (*(void (**)(unsigned __int8 *, uint64_t))(v73 + 8))(a1, v5);
    (*(void (**)(unint64_t, uint64_t))(v71 + 8))((unint64_t)&a1[v69] & v67, v72);
    unint64_t v28 = (unsigned __int16 *)((((unint64_t)&a1[v69] & v67) + v70 + v12) & v26);
    goto LABEL_48;
  }
  uint64_t v66 = *(void *)(v16 - 8);
  uint64_t v27 = v16;
  (*(void (**)(unsigned __int8 *, uint64_t))(v18 + 8))(a1, v16);
  unint64_t v28 = (unsigned __int16 *)((unint64_t)&a1[v68] & v26);
  if (v74)
  {
    int v29 = (*(uint64_t (**)(unint64_t))(v11 + 48))((unint64_t)&a1[v68] & v26);
    uint64_t v17 = v27;
    uint64_t v18 = v66;
    if (v29) {
      goto LABEL_49;
    }
    goto LABEL_48;
  }
  if (!*((unsigned char *)v28 + v65)) {
    goto LABEL_48;
  }
  int v30 = (*((unsigned __int8 *)v28 + v65) - 1) << (8 * v65);
  if (v65 > 3) {
    int v30 = 0;
  }
  if (v65)
  {
    int v31 = v65 <= 3 ? v65 : 4;
    uint64_t v18 = v66;
    uint64_t v17 = v27;
    switch(v31)
    {
      case 2:
        int v32 = *v28;
        break;
      case 3:
        int v32 = *v28 | (*(unsigned __int8 *)(((unint64_t)&a1[v68] & v26) + 2) << 16);
        break;
      case 4:
        int v32 = *(_DWORD *)v28;
        break;
      default:
        int v32 = *(unsigned __int8 *)v28;
        break;
    }
  }
  else
  {
    int v32 = 0;
    uint64_t v17 = v27;
    uint64_t v18 = v66;
  }
  if ((v32 | v30) == 0xFFFFFFFF)
  {
LABEL_48:
    (*(void (**)(unsigned __int16 *, uint64_t))(v11 + 8))(v28, v75);
    uint64_t v17 = v27;
    uint64_t v18 = v66;
  }
LABEL_49:
  a2 = v76;
  if (v20 > 3)
  {
LABEL_50:
    unsigned int v33 = v76[v20];
    goto LABEL_55;
  }
  unsigned int v34 = ((1 << (8 * v20)) | 2u) >> (8 * v20);
  if (v34 > 0xFFFD)
  {
    unsigned int v33 = *(_DWORD *)&v76[v20];
  }
  else
  {
    if (v34 <= 0xFD) {
      goto LABEL_50;
    }
    unsigned int v33 = *(unsigned __int16 *)&v76[v20];
  }
LABEL_55:
  unsigned int v35 = v33 - 2;
  if (v33 >= 2)
  {
    if (v20 <= 3) {
      uint64_t v36 = v20;
    }
    else {
      uint64_t v36 = 4;
    }
    switch(v36)
    {
      case 1:
        int v37 = *v76;
        if (v20 >= 4) {
          goto LABEL_79;
        }
        goto LABEL_65;
      case 2:
        int v37 = *(unsigned __int16 *)v76;
        if (v20 >= 4) {
          goto LABEL_79;
        }
        goto LABEL_65;
      case 3:
        int v37 = *(unsigned __int16 *)v76 | (v76[2] << 16);
        if (v20 < 4) {
          goto LABEL_65;
        }
        goto LABEL_79;
      case 4:
        int v37 = *(_DWORD *)v76;
        if (v20 < 4)
        {
LABEL_65:
          unsigned int v33 = (v37 | (v35 << (8 * v20))) + 2;
          break;
        }
LABEL_79:
        unsigned int v33 = v37 + 2;
        if (v33 == 1) {
          goto LABEL_80;
        }
        goto LABEL_67;
      default:
        break;
    }
  }
  if (v33 != 1)
  {
LABEL_67:
    if (v33)
    {
      if (v20 > 3) {
        goto LABEL_76;
      }
      unsigned int v40 = ((1 << (8 * v20)) | 2u) >> (8 * v20);
      uint64_t v41 = 2;
      if (v40 > 0xFFFD) {
        uint64_t v41 = 4;
      }
      if (v40 <= 0xFD) {
LABEL_76:
      }
        uint64_t v41 = 1;
      memcpy(a1, v76, v41 + v20);
    }
    else
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v73 + 32))(a1, v76, v5);
      unint64_t v38 = (unint64_t)&v76[v69] & v67;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v71 + 32))((unint64_t)&a1[v69] & v67, v38, v72);
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v11 + 32))((((unint64_t)&a1[v69] & v67) + v70 + v12) & v26, (v38 + v70 + v12) & v26, v75);
      if (v20 > 3)
      {
LABEL_71:
        a1[v20] = 0;
        a2 = v76;
        goto LABEL_108;
      }
      unsigned int v39 = ((1 << (8 * v20)) | 2u) >> (8 * v20);
      if (v39 > 0xFFFD)
      {
        *(_DWORD *)&a1[v20] = 0;
        a2 = v76;
      }
      else
      {
        if (v39 <= 0xFD) {
          goto LABEL_71;
        }
        *(_WORD *)&a1[v20] = 0;
        a2 = v76;
      }
    }
    goto LABEL_108;
  }
LABEL_80:
  (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v18 + 32))(a1, v76, v17);
  uint64_t v42 = (void *)((unint64_t)&a1[v68] & v26);
  uint64_t v43 = (unsigned __int16 *)((unint64_t)&v76[v68] & v26);
  if (!v74)
  {
    if (!*((unsigned char *)v43 + v65)) {
      goto LABEL_100;
    }
    int v44 = (*((unsigned __int8 *)v43 + v65) - 1) << (8 * v65);
    if (v65 > 3) {
      int v44 = 0;
    }
    if (v65)
    {
      int v45 = v65 <= 3 ? v65 : 4;
      switch(v45)
      {
        case 2:
          int v46 = *v43;
          break;
        case 3:
          int v46 = *(unsigned __int16 *)((unint64_t)&v76[v68] & v26) | (*(unsigned __int8 *)(((unint64_t)&v76[v68] & v26)
                                                                                               + 2) << 16);
          break;
        case 4:
          int v46 = *(_DWORD *)v43;
          break;
        default:
          int v46 = *(unsigned __int8 *)v43;
          break;
      }
    }
    else
    {
      int v46 = 0;
    }
    if ((v46 | v44) == 0xFFFFFFFF) {
      goto LABEL_100;
    }
LABEL_99:
    memcpy(v42, v43, __n);
    goto LABEL_102;
  }
  if ((*(unsigned int (**)(unsigned __int16 *, void, uint64_t))(v11 + 48))(v43, v74, v75)) {
    goto LABEL_99;
  }
LABEL_100:
  (*(void (**)(void *, unsigned __int16 *, uint64_t))(v11 + 32))(v42, v43, v75);
  if (!v74) {
    *((unsigned char *)v42 + v65) = 0;
  }
LABEL_102:
  a2 = v76;
  if (v20 > 3) {
    goto LABEL_105;
  }
  unsigned int v47 = ((1 << (8 * v20)) | 2u) >> (8 * v20);
  if (v47 > 0xFFFD)
  {
    *(_DWORD *)&a1[v20] = 1;
    goto LABEL_108;
  }
  if (v47 <= 0xFD)
  {
LABEL_105:
    a1[v20] = 1;
    goto LABEL_108;
  }
  *(_WORD *)&a1[v20] = 1;
LABEL_108:
  uint64_t v48 = *(void *)(*(void *)(v5 - 8) + 64);
  uint64_t v49 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unint64_t v50 = (v48 + *(unsigned __int8 *)(v49 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80);
  uint64_t v51 = *(void *)(v49 + 64);
  uint64_t v52 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(qword_26A429C58) - 8);
  uint64_t v53 = *(unsigned __int8 *)(v52 + 80);
  unint64_t v54 = (v50 + v51 + v53) & ~v53;
  uint64_t v55 = *(void *)(v52 + 64);
  unint64_t v56 = v54 + v55;
  unint64_t v57 = ((*(void *)(*(void *)(sub_25A6227C0() - 8) + 64) + v53) & ~v53) + v55;
  if (!*(_DWORD *)(v52 + 84)) {
    ++v57;
  }
  if (v57 <= v56) {
    unint64_t v58 = v56;
  }
  else {
    unint64_t v58 = v57;
  }
  if (v58 > 3
    || ((unsigned int v59 = ((1 << (8 * v58)) | 2u) >> (8 * v58), v59 <= 0xFFFD) ? (v60 = 2) : (v60 = 4), v59 <= 0xFD))
  {
    uint64_t v60 = 1;
  }
  uint64_t v61 = swift_getAssociatedTypeWitness();
  uint64_t v62 = *(void *)(v61 - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v62 + 40))((unint64_t)&a1[v60 + v58 + *(unsigned __int8 *)(v62 + 80)] & ~(unint64_t)*(unsigned __int8 *)(v62 + 80), (unint64_t)&a2[v60 + v58 + *(unsigned __int8 *)(v62 + 80)] & ~(unint64_t)*(unsigned __int8 *)(v62 + 80), v61);
  return a1;
}

uint64_t sub_25A578DF0(unsigned __int16 *a1, unsigned int a2)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v4 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  uint64_t v5 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unint64_t v6 = (v4 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64);
  uint64_t v8 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(qword_26A429C58) - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  unint64_t v10 = (v6 + v7 + v9) & ~v9;
  uint64_t v11 = *(void *)(v8 + 64);
  unint64_t v12 = v10 + v11;
  unint64_t v13 = ((*(void *)(*(void *)(sub_25A6227C0() - 8) + 64) + v9) & ~v9) + v11;
  if (!*(_DWORD *)(v8 + 84)) {
    ++v13;
  }
  if (v13 <= v12) {
    unint64_t v14 = v12;
  }
  else {
    unint64_t v14 = v13;
  }
  char v15 = 8 * v14;
  if (v14 > 3)
  {
    int v16 = 3;
    goto LABEL_10;
  }
  unsigned int v17 = ((1 << v15) | 2u) >> v15;
  if (v17 <= 0xFFFD)
  {
    int v16 = v17 + 2;
    if (v17 > 0xFD)
    {
      char v18 = 16;
LABEL_11:
      unsigned int v19 = (1 << v18) - v16;
      if ((v19 & 0x80000000) == 0) {
        goto LABEL_13;
      }
      goto LABEL_12;
    }
LABEL_10:
    char v18 = 8;
    goto LABEL_11;
  }
LABEL_12:
  unsigned int v19 = 0x7FFFFFFF;
LABEL_13:
  uint64_t v20 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unsigned int v21 = *(_DWORD *)(v20 + 84);
  if (v21 <= v19) {
    unsigned int v22 = v19;
  }
  else {
    unsigned int v22 = *(_DWORD *)(v20 + 84);
  }
  if (v14 > 3) {
    goto LABEL_20;
  }
  unsigned int v23 = ((1 << v15) | 2u) >> v15;
  uint64_t v24 = 2;
  if (v23 > 0xFFFD) {
    uint64_t v24 = 4;
  }
  if (v23 <= 0xFD) {
LABEL_20:
  }
    uint64_t v24 = 1;
  if (!a2) {
    return 0;
  }
  uint64_t v25 = *(unsigned __int8 *)(v20 + 80);
  if (a2 > v22)
  {
    uint64_t v26 = ((v14 + v25 + v24) & ~v25) + *(void *)(v20 + 64);
    char v27 = 8 * v26;
    if (v26 > 3) {
      goto LABEL_24;
    }
    unsigned int v29 = ((a2 - v22 + ~(-1 << v27)) >> v27) + 1;
    if (HIWORD(v29))
    {
      int v28 = *(_DWORD *)((char *)a1 + v26);
      if (!v28) {
        goto LABEL_40;
      }
      goto LABEL_32;
    }
    if (v29 > 0xFF)
    {
      int v28 = *(unsigned __int16 *)((char *)a1 + v26);
      if (!*(unsigned __int16 *)((char *)a1 + v26)) {
        goto LABEL_40;
      }
      goto LABEL_32;
    }
    if (v29 >= 2)
    {
LABEL_24:
      int v28 = *((unsigned __int8 *)a1 + v26);
      if (!*((unsigned char *)a1 + v26)) {
        goto LABEL_40;
      }
LABEL_32:
      int v30 = (v28 - 1) << v27;
      if (v26 > 3) {
        int v30 = 0;
      }
      if (v26)
      {
        if (v26 > 3) {
          LODWORD(v26) = 4;
        }
        switch((int)v26)
        {
          case 2:
            LODWORD(v26) = *a1;
            break;
          case 3:
            LODWORD(v26) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
            break;
          case 4:
            LODWORD(v26) = *(_DWORD *)a1;
            break;
          default:
            LODWORD(v26) = *(unsigned __int8 *)a1;
            break;
        }
      }
      int v53 = v22 + (v26 | v30);
      return (v53 + 1);
    }
  }
LABEL_40:
  if (!v22) {
    return 0;
  }
  if (v14 > 3)
  {
    int v31 = 3;
    goto LABEL_45;
  }
  unsigned int v32 = ((1 << v15) | 2u) >> v15;
  if (v32 <= 0xFFFD)
  {
    int v31 = v32 + 2;
    if (v32 > 0xFD)
    {
      char v33 = 16;
LABEL_46:
      unsigned int v34 = (1 << v33) - v31;
      if ((v34 & 0x80000000) == 0) {
        goto LABEL_48;
      }
      goto LABEL_47;
    }
LABEL_45:
    char v33 = 8;
    goto LABEL_46;
  }
LABEL_47:
  unsigned int v34 = 0x7FFFFFFF;
LABEL_48:
  if (v21 > v34) {
    unsigned int v34 = *(_DWORD *)(v20 + 84);
  }
  if (v14 > 3)
  {
    int v35 = 3;
LABEL_54:
    char v37 = 8;
    goto LABEL_55;
  }
  unsigned int v36 = ((1 << v15) | 2u) >> v15;
  if (v36 > 0xFFFD) {
    goto LABEL_59;
  }
  int v35 = v36 + 2;
  if (v36 <= 0xFD) {
    goto LABEL_54;
  }
  char v37 = 16;
LABEL_55:
  int v38 = (1 << v37) - v35;
  if ((v38 & 0x80000000) == 0)
  {
    if (v38 == v34) {
      goto LABEL_57;
    }
    goto LABEL_60;
  }
LABEL_59:
  if (v34 == 0x7FFFFFFF)
  {
LABEL_57:
    if (v14 <= 3)
    {
      unsigned int v44 = ((1 << v15) | 2u) >> v15;
      if (v44 > 0xFFFD) {
        goto LABEL_74;
      }
      int v39 = v44 + 2;
      if (v44 > 0xFD)
      {
        char v45 = 16;
LABEL_71:
        unsigned int v46 = (1 << v45) - v39;
        if ((v46 & 0x80000000) == 0)
        {
          if (v14 > 3) {
            goto LABEL_78;
          }
LABEL_75:
          unsigned int v47 = ((1 << v15) | 2u) >> v15;
          uint64_t v48 = 2;
          if (v47 > 0xFFFD) {
            uint64_t v48 = 4;
          }
          if (v47 > 0xFD)
          {
LABEL_79:
            if (!v34) {
              return 0;
            }
            unsigned int v49 = v34 - v46;
            if (v34 <= v46) {
              goto LABEL_105;
            }
            unint64_t v50 = v48 + v14;
            char v51 = 8 * (v48 + v14);
            if (v50 > 3)
            {
LABEL_82:
              int v52 = *((unsigned __int8 *)a1 + v50);
              goto LABEL_97;
            }
            unsigned int v54 = ((v49 + ~(-1 << v51)) >> v51) + 1;
            if (HIWORD(v54))
            {
              int v52 = *(_DWORD *)((char *)a1 + v50);
            }
            else
            {
              if (v54 <= 0xFF)
              {
                if (v54 < 2) {
                  goto LABEL_105;
                }
                goto LABEL_82;
              }
              int v52 = *(unsigned __int16 *)((char *)a1 + v50);
            }
LABEL_97:
            if (v52)
            {
              int v55 = (v52 - 1) << v51;
              if (v50 > 3) {
                int v55 = 0;
              }
              if (v50)
              {
                if (v50 > 3) {
                  LODWORD(v50) = 4;
                }
                switch((int)v50)
                {
                  case 2:
                    LODWORD(v50) = *a1;
                    break;
                  case 3:
                    LODWORD(v50) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
                    break;
                  case 4:
                    LODWORD(v50) = *(_DWORD *)a1;
                    break;
                  default:
                    LODWORD(v50) = *(unsigned __int8 *)a1;
                    break;
                }
              }
              int v53 = v46 + (v50 | v55);
              return (v53 + 1);
            }
LABEL_105:
            if (v46)
            {
              if (v14 <= 3)
              {
                unsigned int v61 = ((1 << v15) | 2u) >> v15;
                if (v61 > 0xFFFD)
                {
                  unsigned int v57 = *(_DWORD *)((char *)a1 + v14);
                  unsigned int v58 = ~v57;
LABEL_115:
                  unsigned int v64 = 0x7FFFFFFF;
LABEL_116:
                  if (v64 > v58) {
                    return -v57;
                  }
                  else {
                    return 0;
                  }
                }
                int v60 = v61 + 2;
                if (v61 > 0xFD)
                {
                  int v63 = *(unsigned __int16 *)((char *)a1 + v14);
                  unsigned int v57 = v63 | 0xFFFF0000;
                  unsigned int v58 = v63 ^ 0xFFFF;
                  char v59 = 16;
                }
                else
                {
                  int v62 = *((unsigned __int8 *)a1 + v14);
                  unsigned int v57 = v62 | 0xFFFFFF00;
                  unsigned int v58 = v62 ^ 0xFF;
                  char v59 = 8;
                }
              }
              else
              {
                int v56 = *((unsigned __int8 *)a1 + v14);
                unsigned int v57 = v56 | 0xFFFFFF00;
                unsigned int v58 = v56 ^ 0xFF;
                char v59 = 8;
                int v60 = 3;
              }
              unsigned int v64 = (1 << v59) - v60;
              if ((v64 & 0x80000000) == 0) {
                goto LABEL_116;
              }
              goto LABEL_115;
            }
            return 0;
          }
LABEL_78:
          uint64_t v48 = 1;
          goto LABEL_79;
        }
LABEL_74:
        unsigned int v46 = 0x7FFFFFFF;
        if (v14 > 3) {
          goto LABEL_78;
        }
        goto LABEL_75;
      }
    }
    else
    {
      int v39 = 3;
    }
    char v45 = 8;
    goto LABEL_71;
  }
LABEL_60:
  if (v14 > 3) {
    goto LABEL_64;
  }
  unsigned int v40 = ((1 << v15) | 2u) >> v15;
  uint64_t v41 = 2;
  if (v40 > 0xFFFD) {
    uint64_t v41 = 4;
  }
  if (v40 <= 0xFD) {
LABEL_64:
  }
    uint64_t v41 = 1;
  uint64_t v42 = *(uint64_t (**)(unint64_t))(v20 + 48);

  return v42(((unint64_t)a1 + v14 + v25 + v41) & ~v25);
}

void sub_25A579514(unsigned char *a1, uint64_t a2, unsigned int a3)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v6 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  uint64_t v7 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unint64_t v8 = (v6 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = *(void *)(v7 + 64);
  uint64_t v10 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(qword_26A429C58) - 8);
  uint64_t v11 = *(unsigned __int8 *)(v10 + 80);
  unint64_t v12 = (v8 + v9 + v11) & ~v11;
  uint64_t v13 = *(void *)(v10 + 64);
  unint64_t v14 = v12 + v13;
  unint64_t v15 = ((*(void *)(*(void *)(sub_25A6227C0() - 8) + 64) + v11) & ~v11) + v13;
  if (!*(_DWORD *)(v10 + 84)) {
    ++v15;
  }
  if (v15 <= v14) {
    unint64_t v16 = v14;
  }
  else {
    unint64_t v16 = v15;
  }
  char v17 = 8 * v16;
  if (v16 > 3)
  {
    int v18 = 3;
    goto LABEL_8;
  }
  unsigned int v21 = ((1 << v17) | 2u) >> v17;
  if (v21 <= 0xFFFD)
  {
    int v18 = v21 + 2;
    if (v21 > 0xFD)
    {
      char v19 = 16;
LABEL_9:
      unsigned int v20 = (1 << v19) - v18;
      if ((v20 & 0x80000000) == 0) {
        goto LABEL_15;
      }
      goto LABEL_14;
    }
LABEL_8:
    char v19 = 8;
    goto LABEL_9;
  }
LABEL_14:
  unsigned int v20 = 0x7FFFFFFF;
LABEL_15:
  uint64_t v22 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unsigned int v23 = *(_DWORD *)(v22 + 84);
  if (v23 <= v20) {
    unsigned int v24 = v20;
  }
  else {
    unsigned int v24 = *(_DWORD *)(v22 + 84);
  }
  if (v16 > 3) {
    goto LABEL_22;
  }
  unsigned int v25 = ((1 << v17) | 2u) >> v17;
  uint64_t v26 = 2;
  if (v25 > 0xFFFD) {
    uint64_t v26 = 4;
  }
  if (v25 <= 0xFD) {
LABEL_22:
  }
    uint64_t v26 = 1;
  uint64_t v27 = *(unsigned __int8 *)(v22 + 80);
  size_t v28 = ((v16 + v27 + v26) & ~v27) + *(void *)(v22 + 64);
  if (a3 <= v24)
  {
    int v29 = 0;
  }
  else if (v28 <= 3)
  {
    unsigned int v32 = ((a3 - v24 + ~(-1 << (8 * v28))) >> (8 * v28)) + 1;
    if (HIWORD(v32))
    {
      int v29 = 4;
    }
    else if (v32 >= 0x100)
    {
      int v29 = 2;
    }
    else
    {
      int v29 = v32 > 1;
    }
  }
  else
  {
    int v29 = 1;
  }
  if (v24 < a2)
  {
    unsigned int v30 = ~v24 + a2;
    if (v28 < 4)
    {
      int v31 = (v30 >> (8 * v28)) + 1;
      if (v28)
      {
        int v33 = v30 & ~(-1 << (8 * v28));
        bzero(a1, v28);
        if (v28 == 3)
        {
          *(_WORD *)a1 = v33;
          a1[2] = BYTE2(v33);
        }
        else if (v28 == 2)
        {
          *(_WORD *)a1 = v33;
        }
        else
        {
          *a1 = v33;
        }
      }
    }
    else
    {
      bzero(a1, v28);
      *(_DWORD *)a1 = v30;
      int v31 = 1;
    }
    switch(v29)
    {
      case 1:
        a1[v28] = v31;
        return;
      case 2:
        *(_WORD *)&a1[v28] = v31;
        return;
      case 3:
        goto LABEL_127;
      case 4:
        *(_DWORD *)&a1[v28] = v31;
        return;
      default:
        return;
    }
  }
  switch(v29)
  {
    case 1:
      a1[v28] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_43;
    case 2:
      *(_WORD *)&a1[v28] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_43;
    case 3:
LABEL_127:
      __break(1u);
      JUMPOUT(0x25A579CCCLL);
    case 4:
      *(_DWORD *)&a1[v28] = 0;
      goto LABEL_42;
    default:
LABEL_42:
      if (!a2) {
        return;
      }
LABEL_43:
      if (v16 > 3)
      {
        int v34 = 3;
LABEL_45:
        char v35 = 8;
        goto LABEL_46;
      }
      unsigned int v37 = ((1 << v17) | 2u) >> v17;
      if (v37 > 0xFFFD) {
        goto LABEL_51;
      }
      int v34 = v37 + 2;
      if (v37 <= 0xFD) {
        goto LABEL_45;
      }
      char v35 = 16;
LABEL_46:
      unsigned int v36 = (1 << v35) - v34;
      if ((v36 & 0x80000000) == 0) {
        goto LABEL_52;
      }
LABEL_51:
      unsigned int v36 = 0x7FFFFFFF;
LABEL_52:
      if (v23 > v36) {
        unsigned int v36 = v23;
      }
      if (v16 > 3)
      {
        int v38 = 3;
LABEL_56:
        char v39 = 8;
        goto LABEL_57;
      }
      unsigned int v44 = ((1 << v17) | 2u) >> v17;
      if (v44 > 0xFFFD) {
        goto LABEL_68;
      }
      int v38 = v44 + 2;
      if (v44 <= 0xFD) {
        goto LABEL_56;
      }
      char v39 = 16;
LABEL_57:
      int v40 = (1 << v39) - v38;
      if ((v40 & 0x80000000) == 0)
      {
        if (v40 == v36) {
          goto LABEL_59;
        }
        goto LABEL_69;
      }
LABEL_68:
      if (v36 == 0x7FFFFFFF)
      {
LABEL_59:
        if (v16 <= 3)
        {
          unsigned int v48 = ((1 << v17) | 2u) >> v17;
          if (v48 > 0xFFFD) {
            goto LABEL_83;
          }
          int v41 = v48 + 2;
          if (v48 > 0xFD)
          {
            char v42 = 16;
LABEL_62:
            unsigned int v43 = (1 << v42) - v41;
            if ((v43 & 0x80000000) == 0)
            {
              if (v16 > 3) {
                goto LABEL_87;
              }
              goto LABEL_84;
            }
LABEL_83:
            unsigned int v43 = 0x7FFFFFFF;
            if (v16 > 3)
            {
LABEL_87:
              uint64_t v50 = 1;
LABEL_88:
              size_t v51 = v50 + v16;
              if (v36 <= v43)
              {
                int v52 = 0;
              }
              else if (v51 <= 3)
              {
                unsigned int v55 = ((v36 - v43 + ~(-1 << (8 * v51))) >> (8 * v51)) + 1;
                if (HIWORD(v55))
                {
                  int v52 = 4;
                }
                else if (v55 >= 0x100)
                {
                  int v52 = 2;
                }
                else
                {
                  int v52 = v55 > 1;
                }
              }
              else
              {
                int v52 = 1;
              }
              if (v43 < a2)
              {
                unsigned int v53 = ~v43 + a2;
                if (v51 < 4)
                {
                  int v54 = (v53 >> (8 * v51)) + 1;
                  if (v51)
                  {
                    int v56 = v53 & ~(-1 << (8 * v51));
                    bzero(a1, v51);
                    if (v51 == 3)
                    {
                      *(_WORD *)a1 = v56;
                      a1[2] = BYTE2(v56);
                    }
                    else if (v51 == 2)
                    {
                      *(_WORD *)a1 = v56;
                    }
                    else
                    {
                      *a1 = v56;
                    }
                  }
                }
                else
                {
                  bzero(a1, v51);
                  *(_DWORD *)a1 = v53;
                  int v54 = 1;
                }
                switch(v52)
                {
                  case 1:
                    a1[v51] = v54;
                    return;
                  case 2:
                    *(_WORD *)&a1[v51] = v54;
                    return;
                  case 3:
                    goto LABEL_127;
                  case 4:
                    *(_DWORD *)&a1[v51] = v54;
                    return;
                  default:
                    return;
                }
              }
              switch(v52)
              {
                case 1:
                  a1[v51] = 0;
                  goto LABEL_113;
                case 2:
                  *(_WORD *)&a1[v51] = 0;
                  goto LABEL_113;
                case 3:
                  goto LABEL_127;
                case 4:
                  *(_DWORD *)&a1[v51] = 0;
                  goto LABEL_113;
                default:
LABEL_113:
                  int v57 = -(int)a2;
                  if (v16 > 3) {
                    goto LABEL_116;
                  }
                  unsigned int v58 = ((1 << v17) | 2u) >> v17;
                  if (v58 > 0xFFFD)
                  {
                    *(_DWORD *)&a1[v16] = v57;
                  }
                  else if (v58 > 0xFD)
                  {
                    *(_WORD *)&a1[v16] = v57;
                  }
                  else
                  {
LABEL_116:
                    a1[v16] = v57;
                  }
                  break;
              }
              return;
            }
LABEL_84:
            unsigned int v49 = ((1 << v17) | 2u) >> v17;
            uint64_t v50 = 2;
            if (v49 > 0xFFFD) {
              uint64_t v50 = 4;
            }
            if (v49 > 0xFD) {
              goto LABEL_88;
            }
            goto LABEL_87;
          }
        }
        else
        {
          int v41 = 3;
        }
        char v42 = 8;
        goto LABEL_62;
      }
LABEL_69:
      if (v16 > 3) {
        goto LABEL_73;
      }
      unsigned int v45 = ((1 << v17) | 2u) >> v17;
      uint64_t v46 = 2;
      if (v45 > 0xFFFD) {
        uint64_t v46 = 4;
      }
      if (v45 <= 0xFD) {
LABEL_73:
      }
        uint64_t v46 = 1;
      unsigned int v47 = *(void (**)(unint64_t, uint64_t))(v22 + 56);
      v47((unint64_t)&a1[v16 + v27 + v46] & ~v27, a2);
      return;
  }
}

uint64_t type metadata accessor for PipeEvent()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for PipeEvent.Content()
{
  return __swift_instantiateGenericMetadata();
}

void sub_25A579D4C()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  if (v0 <= 0x3F)
  {
    swift_getAssociatedTypeWitness();
    if (v1 <= 0x3F)
    {
      sub_25A57D4F4();
      if (v2 <= 0x3F)
      {
        swift_getTupleTypeLayout3();
        uint64_t v7 = &v6;
        sub_25A6227C0();
        if (v3 <= 0x3F)
        {
          sub_25A57D568();
          if (v4 <= 0x3F)
          {
            swift_getTupleTypeLayout2();
            unint64_t v8 = &v5;
            swift_initEnumMetadataMultiPayload();
          }
        }
      }
    }
  }
}

void *sub_25A579F60(void *a1, unsigned __int8 *a2)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v3 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  uint64_t v5 = swift_getAssociatedTypeWitness();
  uint64_t v55 = *(void *)(v5 - 8);
  uint64_t v56 = v5;
  int v6 = *(_DWORD *)(v55 + 80);
  uint64_t v7 = v6;
  uint64_t v53 = v4 + v6;
  uint64_t v8 = (v4 + v7) & ~v7;
  uint64_t v9 = *(void *)(v55 + 64);
  uint64_t v58 = __swift_instantiateConcreteTypeFromMangledName(qword_26A429C58);
  uint64_t v10 = *(void *)(v58 - 8);
  int v11 = *(_DWORD *)(v10 + 80);
  uint64_t v12 = v11;
  uint64_t v54 = v9;
  uint64_t v13 = (v9 + v12 + v8) & ~v12;
  size_t v14 = *(void *)(v10 + 64);
  size_t v15 = v13 + v14;
  uint64_t v16 = sub_25A6227C0();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = *(void *)(v17 + 64) + v11;
  size_t v52 = v14;
  if (*(_DWORD *)(v10 + 84)) {
    size_t v19 = v14;
  }
  else {
    size_t v19 = v14 + 1;
  }
  if (v19 + (v18 & ~(unint64_t)v11) > v15) {
    size_t v15 = v19 + (v18 & ~(unint64_t)v11);
  }
  if (v15 > 3) {
    goto LABEL_10;
  }
  unsigned int v20 = ((1 << (8 * v15)) | 2u) >> (8 * v15);
  uint64_t v21 = 2;
  if (v20 > 0xFFFD) {
    uint64_t v21 = 4;
  }
  if (v20 <= 0xFD) {
LABEL_10:
  }
    uint64_t v21 = 1;
  unint64_t v22 = v21 + v15;
  uint64_t v23 = (*(unsigned char *)(v3 + 80) | *(unsigned char *)(v17 + 80) | v6 | v11);
  BOOL v25 = v23 <= 7
     && v22 <= 0x18
     && ((*(_DWORD *)(v3 + 80) | *(_DWORD *)(v17 + 80) | v6 | v11) & 0x100000) == 0;
  uint64_t v26 = a2;
  if (!v25)
  {
    uint64_t v27 = *(void *)a2;
    *a1 = *(void *)a2;
    size_t v28 = (void *)(v27 + ((v23 + 16) & ~v23));
    swift_retain();
    return v28;
  }
  size_t v28 = a1;
  if (v15 > 3) {
    goto LABEL_20;
  }
  unsigned int v30 = ((1 << (8 * v15)) | 2u) >> (8 * v15);
  if (v30 > 0xFFFD)
  {
    unsigned int v29 = *(_DWORD *)&a2[v15];
  }
  else
  {
    if (v30 <= 0xFD)
    {
LABEL_20:
      unsigned int v29 = a2[v15];
      goto LABEL_25;
    }
    unsigned int v29 = *(unsigned __int16 *)&a2[v15];
  }
LABEL_25:
  unsigned int v31 = v29 - 2;
  if (v29 >= 2)
  {
    if (v15 <= 3) {
      uint64_t v32 = v15;
    }
    else {
      uint64_t v32 = 4;
    }
    switch(v32)
    {
      case 1:
        int v33 = *a2;
        if (v15 < 4) {
          goto LABEL_37;
        }
        goto LABEL_38;
      case 2:
        int v33 = *(unsigned __int16 *)a2;
        if (v15 >= 4) {
          goto LABEL_38;
        }
        goto LABEL_37;
      case 3:
        int v33 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        if (v15 >= 4) {
          goto LABEL_38;
        }
        goto LABEL_37;
      case 4:
        int v33 = *(_DWORD *)a2;
        if (v15 < 4) {
LABEL_37:
        }
          v33 |= v31 << (8 * v15);
LABEL_38:
        unsigned int v29 = v33 + 2;
        break;
      default:
        break;
    }
  }
  unint64_t v34 = ~(unint64_t)v11;
  if (v29 == 1)
  {
    size_t v39 = v19;
    uint64_t v40 = *(unsigned int *)(v10 + 84);
    (*(void (**)(void *, unsigned __int8 *, uint64_t))(v17 + 16))(a1, v26, v16);
    int v41 = (unsigned char *)(((unint64_t)a1 + v18) & v34);
    char v42 = (unsigned __int16 *)((unint64_t)&v26[v18] & v34);
    if (v40)
    {
      uint64_t v43 = v58;
      size_t v44 = v52;
      if (!(*(unsigned int (**)(unsigned __int16 *, uint64_t, uint64_t))(v10 + 48))(v42, v40, v58)) {
        goto LABEL_72;
      }
    }
    else
    {
      size_t v44 = v52;
      uint64_t v43 = v58;
      if (!*((unsigned char *)v42 + v52)) {
        goto LABEL_72;
      }
      int v47 = (*((unsigned __int8 *)v42 + v52) - 1) << (8 * v52);
      if (v52 > 3) {
        int v47 = 0;
      }
      if (v52)
      {
        int v48 = v52 <= 3 ? v52 : 4;
        switch(v48)
        {
          case 2:
            int v49 = *v42;
            break;
          case 3:
            int v49 = *v42 | (*((unsigned __int8 *)v42 + 2) << 16);
            break;
          case 4:
            int v49 = *(_DWORD *)v42;
            break;
          default:
            int v49 = *(unsigned __int8 *)v42;
            break;
        }
      }
      else
      {
        int v49 = 0;
      }
      if ((v49 | v47) == 0xFFFFFFFF)
      {
LABEL_72:
        (*(void (**)(unsigned char *, unsigned __int16 *, uint64_t))(v10 + 16))(v41, v42, v43);
        if (v40)
        {
          if (v15 > 3) {
            goto LABEL_79;
          }
        }
        else
        {
          v41[v44] = 0;
          if (v15 > 3) {
            goto LABEL_79;
          }
        }
LABEL_74:
        unsigned int v50 = ((1 << (8 * v15)) | 2u) >> (8 * v15);
        if (v50 > 0xFFFD)
        {
          *(_DWORD *)((char *)a1 + v15) = 1;
          return v28;
        }
        if (v50 > 0xFD)
        {
          *(_WORD *)((char *)a1 + v15) = 1;
          return v28;
        }
LABEL_79:
        *((unsigned char *)a1 + v15) = 1;
        return v28;
      }
    }
    memcpy(v41, v42, v39);
    if (v15 > 3) {
      goto LABEL_79;
    }
    goto LABEL_74;
  }
  if (v29)
  {
    if (v15 > 3) {
      goto LABEL_52;
    }
    unsigned int v45 = ((1 << (8 * v15)) | 2u) >> (8 * v15);
    uint64_t v46 = 2;
    if (v45 > 0xFFFD) {
      uint64_t v46 = 4;
    }
    if (v45 <= 0xFD) {
LABEL_52:
    }
      uint64_t v46 = 1;
    memcpy(a1, a2, v46 + v15);
  }
  else
  {
    uint64_t v35 = ~v7;
    (*(void (**)(void *, unsigned __int8 *, uint64_t))(v3 + 16))(a1, a2, AssociatedTypeWitness);
    unint64_t v36 = ((unint64_t)a1 + v53) & ~v7;
    unint64_t v37 = (unint64_t)&a2[v53] & v35;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v55 + 16))(v36, v37, v56);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v10 + 16))((v36 + v54 + v12) & v34, (v37 + v54 + v12) & v34, v58);
    if (v15 <= 3)
    {
      unsigned int v38 = ((1 << (8 * v15)) | 2u) >> (8 * v15);
      if (v38 > 0xFFFD)
      {
        *(_DWORD *)((char *)a1 + v15) = 0;
        return v28;
      }
      if (v38 > 0xFD)
      {
        *(_WORD *)((char *)a1 + v15) = 0;
        return v28;
      }
    }
    *((unsigned char *)a1 + v15) = 0;
  }
  return v28;
}

uint64_t sub_25A57A5E4(unsigned __int8 *a1)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v30 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v31 = AssociatedTypeWitness;
  uint64_t v3 = *(void *)(v30 + 64);
  uint64_t v29 = swift_getAssociatedTypeWitness();
  uint64_t v4 = *(void *)(v29 - 8);
  uint64_t v5 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = v3 + v5;
  uint64_t v7 = *(void *)(v4 + 64);
  uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(qword_26A429C58);
  uint64_t v33 = *(void *)(v32 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v33 + 80);
  uint64_t v9 = *(void *)(v33 + 64);
  unint64_t v10 = ((v7 + v8 + ((v3 + v5) & ~v5)) & ~v8) + v9;
  uint64_t v11 = sub_25A6227C0();
  uint64_t v12 = *(void *)(*(void *)(v11 - 8) + 64) + v8;
  uint64_t result = v33;
  uint64_t v14 = *(unsigned int *)(v33 + 84);
  unint64_t v15 = (v12 & ~v8) + v9;
  if (!v14) {
    ++v15;
  }
  if (v15 <= v10) {
    unint64_t v15 = v10;
  }
  if (v15 > 3) {
    goto LABEL_6;
  }
  unsigned int v17 = ((1 << (8 * v15)) | 2u) >> (8 * v15);
  if (v17 > 0xFFFD)
  {
    unsigned int v16 = *(_DWORD *)&a1[v15];
  }
  else
  {
    if (v17 <= 0xFD)
    {
LABEL_6:
      unsigned int v16 = a1[v15];
      goto LABEL_11;
    }
    unsigned int v16 = *(unsigned __int16 *)&a1[v15];
  }
LABEL_11:
  unsigned int v18 = v16 - 2;
  if (v16 >= 2)
  {
    if (v15 <= 3) {
      uint64_t v19 = v15;
    }
    else {
      uint64_t v19 = 4;
    }
    switch(v19)
    {
      case 1:
        int v20 = *a1;
        if (v15 < 4) {
          goto LABEL_21;
        }
        goto LABEL_23;
      case 2:
        int v20 = *(unsigned __int16 *)a1;
        if (v15 >= 4) {
          goto LABEL_23;
        }
        goto LABEL_21;
      case 3:
        int v20 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        if (v15 < 4) {
          goto LABEL_21;
        }
        goto LABEL_23;
      case 4:
        int v20 = *(_DWORD *)a1;
        if (v15 < 4) {
LABEL_21:
        }
          unsigned int v16 = (v20 | (v18 << (8 * v15))) + 2;
        else {
LABEL_23:
        }
          unsigned int v16 = v20 + 2;
        break;
      default:
        break;
    }
  }
  uint64_t v21 = ~v8;
  if (v16 != 1)
  {
    if (v16) {
      return result;
    }
    (*(void (**)(unsigned __int8 *, uint64_t))(v30 + 8))(a1, v31);
    unint64_t v22 = (unint64_t)&a1[v6] & ~v5;
    (*(void (**)(unint64_t, uint64_t))(v4 + 8))(v22, v29);
    uint64_t v23 = (unsigned __int16 *)((v22 + v7 + v8) & v21);
    goto LABEL_45;
  }
  (*(void (**)(unsigned __int8 *, uint64_t))(*(void *)(v11 - 8) + 8))(a1, v11);
  uint64_t v23 = (unsigned __int16 *)((unint64_t)&a1[v12] & v21);
  if (v14)
  {
    uint64_t result = (*(uint64_t (**)(unsigned __int16 *, uint64_t, uint64_t))(v33 + 48))(v23, v14, v32);
    if (result) {
      return result;
    }
    goto LABEL_45;
  }
  if (!*((unsigned char *)v23 + v9)) {
    goto LABEL_45;
  }
  int v24 = (*((unsigned __int8 *)v23 + v9) - 1) << (8 * v9);
  if (v9 > 3) {
    int v24 = 0;
  }
  if (v9)
  {
    int v25 = v9 <= 3 ? v9 : 4;
    switch(v25)
    {
      case 2:
        int v26 = *v23;
        break;
      case 3:
        int v26 = *v23 | (*((unsigned __int8 *)v23 + 2) << 16);
        break;
      case 4:
        int v26 = *(_DWORD *)v23;
        break;
      default:
        int v26 = *(unsigned __int8 *)v23;
        break;
    }
  }
  else
  {
    int v26 = 0;
  }
  int v27 = v26 | v24;
  uint64_t result = (v27 + 1);
  if (v27 == -1)
  {
LABEL_45:
    size_t v28 = *(uint64_t (**)(unsigned __int16 *, uint64_t))(v33 + 8);
    return v28(v23, v32);
  }
  return result;
}

unsigned char *sub_25A57AA84(unsigned char *a1, unsigned __int8 *a2)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v40 = *(void *)(AssociatedTypeWitness - 8);
  size_t __n = AssociatedTypeWitness;
  uint64_t v4 = *(void *)(v40 + 64);
  uint64_t v39 = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(v39 - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = v4 + v6;
  uint64_t v8 = *(void *)(v5 + 64);
  uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(qword_26A429C58);
  uint64_t v9 = *(void *)(v43 - 8);
  uint64_t v10 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v38 = v8;
  size_t v11 = *(void *)(v9 + 64);
  size_t v12 = ((v8 + v10 + (v7 & ~v6)) & ~v10) + v11;
  uint64_t v13 = sub_25A6227C0();
  uint64_t v14 = *(void *)(*(void *)(v13 - 8) + 64) + v10;
  if (*(_DWORD *)(v9 + 84)) {
    size_t v15 = v11;
  }
  else {
    size_t v15 = v11 + 1;
  }
  if (v15 + (v14 & ~v10) <= v12) {
    size_t v16 = v12;
  }
  else {
    size_t v16 = v15 + (v14 & ~v10);
  }
  if (v16 > 3) {
    goto LABEL_8;
  }
  unsigned int v18 = ((1 << (8 * v16)) | 2u) >> (8 * v16);
  if (v18 > 0xFFFD)
  {
    unsigned int v17 = *(_DWORD *)&a2[v16];
  }
  else
  {
    if (v18 <= 0xFD)
    {
LABEL_8:
      unsigned int v17 = a2[v16];
      goto LABEL_13;
    }
    unsigned int v17 = *(unsigned __int16 *)&a2[v16];
  }
LABEL_13:
  unsigned int v19 = v17 - 2;
  if (v17 >= 2)
  {
    if (v16 <= 3) {
      uint64_t v20 = v16;
    }
    else {
      uint64_t v20 = 4;
    }
    switch(v20)
    {
      case 1:
        int v21 = *a2;
        if (v16 < 4) {
          goto LABEL_25;
        }
        goto LABEL_26;
      case 2:
        int v21 = *(unsigned __int16 *)a2;
        if (v16 >= 4) {
          goto LABEL_26;
        }
        goto LABEL_25;
      case 3:
        int v21 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        if (v16 >= 4) {
          goto LABEL_26;
        }
        goto LABEL_25;
      case 4:
        int v21 = *(_DWORD *)a2;
        if (v16 < 4) {
LABEL_25:
        }
          v21 |= v19 << (8 * v16);
LABEL_26:
        unsigned int v17 = v21 + 2;
        break;
      default:
        break;
    }
  }
  uint64_t v22 = ~v10;
  if (v17 == 1)
  {
    size_t __na = v15;
    int v27 = a1;
    int v28 = *(_DWORD *)(v9 + 84);
    (*(void (**)(unsigned char *, unsigned __int8 *, uint64_t))(*(void *)(v13 - 8) + 16))(a1, a2, v13);
    uint64_t v29 = (unsigned __int16 *)((unint64_t)&a2[v14] & v22);
    if (v28)
    {
      uint64_t v30 = v43;
      if (!(*(unsigned int (**)(unsigned __int16 *))(v9 + 48))(v29)) {
        goto LABEL_60;
      }
    }
    else
    {
      uint64_t v30 = v43;
      if (!*((unsigned char *)v29 + v11)) {
        goto LABEL_60;
      }
      int v33 = (*((unsigned __int8 *)v29 + v11) - 1) << (8 * v11);
      if (v11 > 3) {
        int v33 = 0;
      }
      if (v11)
      {
        int v34 = v11 <= 3 ? v11 : 4;
        switch(v34)
        {
          case 2:
            int v35 = *v29;
            break;
          case 3:
            int v35 = *v29 | (*((unsigned __int8 *)v29 + 2) << 16);
            break;
          case 4:
            int v35 = *(_DWORD *)v29;
            break;
          default:
            int v35 = *(unsigned __int8 *)v29;
            break;
        }
      }
      else
      {
        int v35 = 0;
      }
      if ((v35 | v33) == 0xFFFFFFFF)
      {
LABEL_60:
        (*(void (**)(unint64_t, unsigned __int16 *, uint64_t))(v9 + 16))((unint64_t)&a1[v14] & v22, v29, v30);
        if (v28)
        {
          if (v16 > 3) {
            goto LABEL_67;
          }
        }
        else
        {
          *(unsigned char *)(((unint64_t)&a1[v14] & v22) + v11) = 0;
          if (v16 > 3) {
            goto LABEL_67;
          }
        }
LABEL_62:
        unsigned int v36 = ((1 << (8 * v16)) | 2u) >> (8 * v16);
        if (v36 > 0xFFFD)
        {
          *(_DWORD *)&a1[v16] = 1;
          return v27;
        }
        if (v36 > 0xFD)
        {
          *(_WORD *)&a1[v16] = 1;
          return v27;
        }
LABEL_67:
        a1[v16] = 1;
        return v27;
      }
    }
    memcpy((void *)((unint64_t)&a1[v14] & v22), v29, __na);
    if (v16 > 3) {
      goto LABEL_67;
    }
    goto LABEL_62;
  }
  if (v17)
  {
    if (v16 > 3) {
      goto LABEL_40;
    }
    unsigned int v31 = ((1 << (8 * v16)) | 2u) >> (8 * v16);
    uint64_t v32 = 2;
    if (v31 > 0xFFFD) {
      uint64_t v32 = 4;
    }
    if (v31 <= 0xFD) {
LABEL_40:
    }
      uint64_t v32 = 1;
    int v27 = a1;
    memcpy(a1, a2, v32 + v16);
  }
  else
  {
    uint64_t v23 = ~v6;
    int v24 = a1;
    (*(void (**)(unsigned char *, unsigned __int8 *, size_t))(v40 + 16))(a1, a2, __n);
    unint64_t v25 = (unint64_t)&a2[v7] & v23;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 16))((unint64_t)&a1[v7] & v23, v25, v39);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v9 + 16))((((unint64_t)&a1[v7] & v23) + v38 + v10) & v22, (v25 + v38 + v10) & v22, v43);
    if (v16 <= 3)
    {
      unsigned int v26 = ((1 << (8 * v16)) | 2u) >> (8 * v16);
      if (v26 > 0xFFFD)
      {
        int v27 = a1;
        *(_DWORD *)&a1[v16] = 0;
        return v27;
      }
      int v24 = a1;
      if (v26 > 0xFD)
      {
        *(_WORD *)&a1[v16] = 0;
        return a1;
      }
    }
    v24[v16] = 0;
    return v24;
  }
  return v27;
}

unsigned __int8 *sub_25A57B070(unsigned __int8 *a1, unsigned __int8 *a2)
{
  if (a1 == a2) {
    return a1;
  }
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v55 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v56 = AssociatedTypeWitness;
  uint64_t v5 = *(void *)(v55 + 64);
  uint64_t v54 = swift_getAssociatedTypeWitness();
  uint64_t v6 = *(unsigned __int8 *)(*(void *)(v54 - 8) + 80);
  uint64_t v51 = *(void *)(v54 - 8);
  uint64_t v52 = v5 + v6;
  uint64_t v7 = (v5 + v6) & ~v6;
  uint64_t v8 = *(void *)(v51 + 64);
  uint64_t v58 = __swift_instantiateConcreteTypeFromMangledName(qword_26A429C58);
  uint64_t v9 = *(void *)(v58 - 8);
  uint64_t v10 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v53 = v8;
  uint64_t v11 = (v8 + v10 + v7) & ~v10;
  size_t v12 = *(void *)(v9 + 64);
  size_t v13 = v11 + v12;
  uint64_t v14 = sub_25A6227C0();
  uint64_t v15 = v14;
  uint64_t v16 = *(void *)(v14 - 8);
  uint64_t v50 = *(void *)(v16 + 64) + v10;
  unsigned int v57 = *(_DWORD *)(v9 + 84);
  if (v57) {
    size_t v17 = v12;
  }
  else {
    size_t v17 = v12 + 1;
  }
  if (v17 + (v50 & ~v10) <= v13) {
    size_t v18 = v13;
  }
  else {
    size_t v18 = v17 + (v50 & ~v10);
  }
  if (v18 > 3) {
    goto LABEL_9;
  }
  unsigned int v20 = ((1 << (8 * v18)) | 2u) >> (8 * v18);
  if (v20 > 0xFFFD)
  {
    unsigned int v19 = *(_DWORD *)&a1[v18];
  }
  else
  {
    if (v20 <= 0xFD)
    {
LABEL_9:
      unsigned int v19 = a1[v18];
      goto LABEL_14;
    }
    unsigned int v19 = *(unsigned __int16 *)&a1[v18];
  }
LABEL_14:
  unsigned int v21 = v19 - 2;
  if (v19 >= 2)
  {
    if (v18 <= 3) {
      uint64_t v22 = v18;
    }
    else {
      uint64_t v22 = 4;
    }
    switch(v22)
    {
      case 1:
        int v23 = *a1;
        if (v18 < 4) {
          goto LABEL_26;
        }
        goto LABEL_27;
      case 2:
        int v23 = *(unsigned __int16 *)a1;
        if (v18 >= 4) {
          goto LABEL_27;
        }
        goto LABEL_26;
      case 3:
        int v23 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        if (v18 >= 4) {
          goto LABEL_27;
        }
        goto LABEL_26;
      case 4:
        int v23 = *(_DWORD *)a1;
        if (v18 < 4) {
LABEL_26:
        }
          v23 |= v21 << (8 * v18);
LABEL_27:
        unsigned int v19 = v23 + 2;
        break;
      default:
        break;
    }
  }
  size_t __n = v17;
  uint64_t v49 = ~v6;
  uint64_t v24 = ~v10;
  if (v19 == 1)
  {
    uint64_t v25 = *(void *)(v14 - 8);
    uint64_t v26 = v14;
    (*(void (**)(unsigned __int8 *, uint64_t))(v16 + 8))(a1, v14);
    int v27 = (unsigned __int16 *)((unint64_t)&a1[v50] & v24);
    if (v57)
    {
      int v28 = (*(uint64_t (**)(unint64_t))(v9 + 48))((unint64_t)&a1[v50] & v24);
      uint64_t v15 = v26;
      uint64_t v16 = v25;
      if (v28) {
        goto LABEL_33;
      }
    }
    else if (*((unsigned char *)v27 + v12))
    {
      int v29 = (*((unsigned __int8 *)v27 + v12) - 1) << (8 * v12);
      if (v12 > 3) {
        int v29 = 0;
      }
      if (v12)
      {
        int v30 = v12 <= 3 ? v12 : 4;
        uint64_t v15 = v26;
        uint64_t v16 = v25;
        switch(v30)
        {
          case 2:
            int v31 = *v27;
            break;
          case 3:
            int v31 = *v27 | (*(unsigned __int8 *)(((unint64_t)&a1[v50] & v24) + 2) << 16);
            break;
          case 4:
            int v31 = *(_DWORD *)v27;
            break;
          default:
            int v31 = *(unsigned __int8 *)v27;
            break;
        }
      }
      else
      {
        int v31 = 0;
        uint64_t v15 = v26;
        uint64_t v16 = v25;
      }
      if ((v31 | v29) != 0xFFFFFFFF) {
        goto LABEL_33;
      }
    }
LABEL_49:
    (*(void (**)(unsigned __int16 *, uint64_t, uint64_t))(v9 + 8))(v27, v58, v15);
    uint64_t v15 = v26;
    uint64_t v16 = v25;
    if (v18 > 3) {
      goto LABEL_52;
    }
    goto LABEL_50;
  }
  if (!v19)
  {
    uint64_t v25 = *(void *)(v14 - 8);
    uint64_t v26 = v14;
    (*(void (**)(unsigned __int8 *, uint64_t))(v55 + 8))(a1, v56);
    (*(void (**)(unint64_t, uint64_t))(v51 + 8))((unint64_t)&a1[v52] & v49, v54);
    int v27 = (unsigned __int16 *)((((unint64_t)&a1[v52] & v49) + v53 + v10) & v24);
    goto LABEL_49;
  }
LABEL_33:
  if (v18 > 3) {
    goto LABEL_52;
  }
LABEL_50:
  unsigned int v32 = ((1 << (8 * v18)) | 2u) >> (8 * v18);
  if (v32 <= 0xFFFD)
  {
    if (v32 > 0xFD)
    {
      unsigned int v33 = *(unsigned __int16 *)&a2[v18];
      unsigned int v34 = v33 - 2;
      if (v33 < 2) {
        goto LABEL_67;
      }
      goto LABEL_57;
    }
LABEL_52:
    unsigned int v33 = a2[v18];
    unsigned int v34 = v33 - 2;
    if (v33 < 2) {
      goto LABEL_67;
    }
LABEL_57:
    if (v18 <= 3) {
      uint64_t v35 = v18;
    }
    else {
      uint64_t v35 = 4;
    }
    switch(v35)
    {
      case 1:
        int v36 = *a2;
        if (v18 >= 4) {
          goto LABEL_80;
        }
        goto LABEL_66;
      case 2:
        int v36 = *(unsigned __int16 *)a2;
        if (v18 >= 4) {
          goto LABEL_80;
        }
        goto LABEL_66;
      case 3:
        int v36 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        if (v18 < 4) {
          goto LABEL_66;
        }
        goto LABEL_80;
      case 4:
        int v36 = *(_DWORD *)a2;
        if (v18 < 4)
        {
LABEL_66:
          unsigned int v33 = (v36 | (v34 << (8 * v18))) + 2;
          goto LABEL_67;
        }
LABEL_80:
        unsigned int v33 = v36 + 2;
        if (v33 == 1) {
          goto LABEL_81;
        }
        goto LABEL_68;
      default:
        goto LABEL_67;
    }
  }
  unsigned int v33 = *(_DWORD *)&a2[v18];
  unsigned int v34 = v33 - 2;
  if (v33 >= 2) {
    goto LABEL_57;
  }
LABEL_67:
  if (v33 == 1)
  {
LABEL_81:
    (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v16 + 16))(a1, a2, v15);
    int v41 = (unsigned char *)((unint64_t)&a1[v50] & v24);
    char v42 = (unsigned __int16 *)((unint64_t)&a2[v50] & v24);
    if (v57)
    {
      if (!(*(unsigned int (**)(unsigned __int16 *, void, uint64_t))(v9 + 48))(v42, v57, v58)) {
        goto LABEL_102;
      }
    }
    else
    {
      if (!*((unsigned char *)v42 + v12)) {
        goto LABEL_102;
      }
      int v43 = (*((unsigned __int8 *)v42 + v12) - 1) << (8 * v12);
      if (v12 > 3) {
        int v43 = 0;
      }
      if (v12)
      {
        int v44 = v12 <= 3 ? v12 : 4;
        switch(v44)
        {
          case 2:
            int v45 = *v42;
            break;
          case 3:
            int v45 = *v42 | (*((unsigned __int8 *)v42 + 2) << 16);
            break;
          case 4:
            int v45 = *(_DWORD *)v42;
            break;
          default:
            int v45 = *(unsigned __int8 *)v42;
            break;
        }
      }
      else
      {
        int v45 = 0;
      }
      if ((v45 | v43) == 0xFFFFFFFF)
      {
LABEL_102:
        (*(void (**)(unsigned char *, unsigned __int16 *, uint64_t))(v9 + 16))(v41, v42, v58);
        if (v57)
        {
          if (v18 > 3) {
            goto LABEL_109;
          }
        }
        else
        {
          v41[v12] = 0;
          if (v18 > 3) {
            goto LABEL_109;
          }
        }
LABEL_104:
        unsigned int v46 = ((1 << (8 * v18)) | 2u) >> (8 * v18);
        if (v46 > 0xFFFD)
        {
          *(_DWORD *)&a1[v18] = 1;
          return a1;
        }
        if (v46 > 0xFD)
        {
          *(_WORD *)&a1[v18] = 1;
          return a1;
        }
LABEL_109:
        a1[v18] = 1;
        return a1;
      }
    }
    memcpy(v41, v42, __n);
    if (v18 > 3) {
      goto LABEL_109;
    }
    goto LABEL_104;
  }
LABEL_68:
  if (v33)
  {
    if (v18 > 3) {
      goto LABEL_77;
    }
    unsigned int v39 = ((1 << (8 * v18)) | 2u) >> (8 * v18);
    uint64_t v40 = 2;
    if (v39 > 0xFFFD) {
      uint64_t v40 = 4;
    }
    if (v39 <= 0xFD) {
LABEL_77:
    }
      uint64_t v40 = 1;
    memcpy(a1, a2, v40 + v18);
  }
  else
  {
    (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v55 + 16))(a1, a2, v56);
    unint64_t v37 = (unint64_t)&a2[v52] & v49;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v51 + 16))((unint64_t)&a1[v52] & v49, v37, v54);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v9 + 16))((((unint64_t)&a1[v52] & v49) + v53 + v10) & v24, (v37 + v53 + v10) & v24, v58);
    if (v18 <= 3)
    {
      unsigned int v38 = ((1 << (8 * v18)) | 2u) >> (8 * v18);
      if (v38 > 0xFFFD)
      {
        *(_DWORD *)&a1[v18] = 0;
        return a1;
      }
      if (v38 > 0xFD)
      {
        *(_WORD *)&a1[v18] = 0;
        return a1;
      }
    }
    a1[v18] = 0;
  }
  return a1;
}

unsigned char *sub_25A57B8F8(unsigned char *a1, unsigned __int8 *a2)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v40 = *(void *)(AssociatedTypeWitness - 8);
  size_t __n = AssociatedTypeWitness;
  uint64_t v4 = *(void *)(v40 + 64);
  uint64_t v39 = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(v39 - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = v4 + v6;
  uint64_t v8 = *(void *)(v5 + 64);
  uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(qword_26A429C58);
  uint64_t v9 = *(void *)(v43 - 8);
  uint64_t v10 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v38 = v8;
  size_t v11 = *(void *)(v9 + 64);
  size_t v12 = ((v8 + v10 + (v7 & ~v6)) & ~v10) + v11;
  uint64_t v13 = sub_25A6227C0();
  uint64_t v14 = *(void *)(*(void *)(v13 - 8) + 64) + v10;
  if (*(_DWORD *)(v9 + 84)) {
    size_t v15 = v11;
  }
  else {
    size_t v15 = v11 + 1;
  }
  if (v15 + (v14 & ~v10) <= v12) {
    size_t v16 = v12;
  }
  else {
    size_t v16 = v15 + (v14 & ~v10);
  }
  if (v16 > 3) {
    goto LABEL_8;
  }
  unsigned int v18 = ((1 << (8 * v16)) | 2u) >> (8 * v16);
  if (v18 > 0xFFFD)
  {
    unsigned int v17 = *(_DWORD *)&a2[v16];
  }
  else
  {
    if (v18 <= 0xFD)
    {
LABEL_8:
      unsigned int v17 = a2[v16];
      goto LABEL_13;
    }
    unsigned int v17 = *(unsigned __int16 *)&a2[v16];
  }
LABEL_13:
  unsigned int v19 = v17 - 2;
  if (v17 >= 2)
  {
    if (v16 <= 3) {
      uint64_t v20 = v16;
    }
    else {
      uint64_t v20 = 4;
    }
    switch(v20)
    {
      case 1:
        int v21 = *a2;
        if (v16 < 4) {
          goto LABEL_25;
        }
        goto LABEL_26;
      case 2:
        int v21 = *(unsigned __int16 *)a2;
        if (v16 >= 4) {
          goto LABEL_26;
        }
        goto LABEL_25;
      case 3:
        int v21 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        if (v16 >= 4) {
          goto LABEL_26;
        }
        goto LABEL_25;
      case 4:
        int v21 = *(_DWORD *)a2;
        if (v16 < 4) {
LABEL_25:
        }
          v21 |= v19 << (8 * v16);
LABEL_26:
        unsigned int v17 = v21 + 2;
        break;
      default:
        break;
    }
  }
  uint64_t v22 = ~v10;
  if (v17 == 1)
  {
    size_t __na = v15;
    int v27 = a1;
    int v28 = *(_DWORD *)(v9 + 84);
    (*(void (**)(unsigned char *, unsigned __int8 *, uint64_t))(*(void *)(v13 - 8) + 32))(a1, a2, v13);
    int v29 = (unsigned __int16 *)((unint64_t)&a2[v14] & v22);
    if (v28)
    {
      uint64_t v30 = v43;
      if (!(*(unsigned int (**)(unsigned __int16 *))(v9 + 48))(v29)) {
        goto LABEL_60;
      }
    }
    else
    {
      uint64_t v30 = v43;
      if (!*((unsigned char *)v29 + v11)) {
        goto LABEL_60;
      }
      int v33 = (*((unsigned __int8 *)v29 + v11) - 1) << (8 * v11);
      if (v11 > 3) {
        int v33 = 0;
      }
      if (v11)
      {
        int v34 = v11 <= 3 ? v11 : 4;
        switch(v34)
        {
          case 2:
            int v35 = *v29;
            break;
          case 3:
            int v35 = *v29 | (*((unsigned __int8 *)v29 + 2) << 16);
            break;
          case 4:
            int v35 = *(_DWORD *)v29;
            break;
          default:
            int v35 = *(unsigned __int8 *)v29;
            break;
        }
      }
      else
      {
        int v35 = 0;
      }
      if ((v35 | v33) == 0xFFFFFFFF)
      {
LABEL_60:
        (*(void (**)(unint64_t, unsigned __int16 *, uint64_t))(v9 + 32))((unint64_t)&a1[v14] & v22, v29, v30);
        if (v28)
        {
          if (v16 > 3) {
            goto LABEL_67;
          }
        }
        else
        {
          *(unsigned char *)(((unint64_t)&a1[v14] & v22) + v11) = 0;
          if (v16 > 3) {
            goto LABEL_67;
          }
        }
LABEL_62:
        unsigned int v36 = ((1 << (8 * v16)) | 2u) >> (8 * v16);
        if (v36 > 0xFFFD)
        {
          *(_DWORD *)&a1[v16] = 1;
          return v27;
        }
        if (v36 > 0xFD)
        {
          *(_WORD *)&a1[v16] = 1;
          return v27;
        }
LABEL_67:
        a1[v16] = 1;
        return v27;
      }
    }
    memcpy((void *)((unint64_t)&a1[v14] & v22), v29, __na);
    if (v16 > 3) {
      goto LABEL_67;
    }
    goto LABEL_62;
  }
  if (v17)
  {
    if (v16 > 3) {
      goto LABEL_40;
    }
    unsigned int v31 = ((1 << (8 * v16)) | 2u) >> (8 * v16);
    uint64_t v32 = 2;
    if (v31 > 0xFFFD) {
      uint64_t v32 = 4;
    }
    if (v31 <= 0xFD) {
LABEL_40:
    }
      uint64_t v32 = 1;
    int v27 = a1;
    memcpy(a1, a2, v32 + v16);
  }
  else
  {
    uint64_t v23 = ~v6;
    uint64_t v24 = a1;
    (*(void (**)(unsigned char *, unsigned __int8 *, size_t))(v40 + 32))(a1, a2, __n);
    unint64_t v25 = (unint64_t)&a2[v7] & v23;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 32))((unint64_t)&a1[v7] & v23, v25, v39);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v9 + 32))((((unint64_t)&a1[v7] & v23) + v38 + v10) & v22, (v25 + v38 + v10) & v22, v43);
    if (v16 <= 3)
    {
      unsigned int v26 = ((1 << (8 * v16)) | 2u) >> (8 * v16);
      if (v26 > 0xFFFD)
      {
        int v27 = a1;
        *(_DWORD *)&a1[v16] = 0;
        return v27;
      }
      uint64_t v24 = a1;
      if (v26 > 0xFD)
      {
        *(_WORD *)&a1[v16] = 0;
        return a1;
      }
    }
    v24[v16] = 0;
    return v24;
  }
  return v27;
}

unsigned __int8 *sub_25A57BEE4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  if (a1 == a2) {
    return a1;
  }
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v55 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v56 = AssociatedTypeWitness;
  uint64_t v5 = *(void *)(v55 + 64);
  uint64_t v54 = swift_getAssociatedTypeWitness();
  uint64_t v6 = *(unsigned __int8 *)(*(void *)(v54 - 8) + 80);
  uint64_t v51 = *(void *)(v54 - 8);
  uint64_t v52 = v5 + v6;
  uint64_t v7 = (v5 + v6) & ~v6;
  uint64_t v8 = *(void *)(v51 + 64);
  uint64_t v58 = __swift_instantiateConcreteTypeFromMangledName(qword_26A429C58);
  uint64_t v9 = *(void *)(v58 - 8);
  uint64_t v10 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v53 = v8;
  uint64_t v11 = (v8 + v10 + v7) & ~v10;
  size_t v12 = *(void *)(v9 + 64);
  size_t v13 = v11 + v12;
  uint64_t v14 = sub_25A6227C0();
  uint64_t v15 = v14;
  uint64_t v16 = *(void *)(v14 - 8);
  uint64_t v50 = *(void *)(v16 + 64) + v10;
  unsigned int v57 = *(_DWORD *)(v9 + 84);
  if (v57) {
    size_t v17 = v12;
  }
  else {
    size_t v17 = v12 + 1;
  }
  if (v17 + (v50 & ~v10) <= v13) {
    size_t v18 = v13;
  }
  else {
    size_t v18 = v17 + (v50 & ~v10);
  }
  if (v18 > 3) {
    goto LABEL_9;
  }
  unsigned int v20 = ((1 << (8 * v18)) | 2u) >> (8 * v18);
  if (v20 > 0xFFFD)
  {
    unsigned int v19 = *(_DWORD *)&a1[v18];
  }
  else
  {
    if (v20 <= 0xFD)
    {
LABEL_9:
      unsigned int v19 = a1[v18];
      goto LABEL_14;
    }
    unsigned int v19 = *(unsigned __int16 *)&a1[v18];
  }
LABEL_14:
  unsigned int v21 = v19 - 2;
  if (v19 >= 2)
  {
    if (v18 <= 3) {
      uint64_t v22 = v18;
    }
    else {
      uint64_t v22 = 4;
    }
    switch(v22)
    {
      case 1:
        int v23 = *a1;
        if (v18 < 4) {
          goto LABEL_26;
        }
        goto LABEL_27;
      case 2:
        int v23 = *(unsigned __int16 *)a1;
        if (v18 >= 4) {
          goto LABEL_27;
        }
        goto LABEL_26;
      case 3:
        int v23 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        if (v18 >= 4) {
          goto LABEL_27;
        }
        goto LABEL_26;
      case 4:
        int v23 = *(_DWORD *)a1;
        if (v18 < 4) {
LABEL_26:
        }
          v23 |= v21 << (8 * v18);
LABEL_27:
        unsigned int v19 = v23 + 2;
        break;
      default:
        break;
    }
  }
  size_t __n = v17;
  uint64_t v49 = ~v6;
  uint64_t v24 = ~v10;
  if (v19 == 1)
  {
    uint64_t v25 = *(void *)(v14 - 8);
    uint64_t v26 = v14;
    (*(void (**)(unsigned __int8 *, uint64_t))(v16 + 8))(a1, v14);
    int v27 = (unsigned __int16 *)((unint64_t)&a1[v50] & v24);
    if (v57)
    {
      int v28 = (*(uint64_t (**)(unint64_t))(v9 + 48))((unint64_t)&a1[v50] & v24);
      uint64_t v15 = v26;
      uint64_t v16 = v25;
      if (v28) {
        goto LABEL_33;
      }
    }
    else if (*((unsigned char *)v27 + v12))
    {
      int v29 = (*((unsigned __int8 *)v27 + v12) - 1) << (8 * v12);
      if (v12 > 3) {
        int v29 = 0;
      }
      if (v12)
      {
        int v30 = v12 <= 3 ? v12 : 4;
        uint64_t v15 = v26;
        uint64_t v16 = v25;
        switch(v30)
        {
          case 2:
            int v31 = *v27;
            break;
          case 3:
            int v31 = *v27 | (*(unsigned __int8 *)(((unint64_t)&a1[v50] & v24) + 2) << 16);
            break;
          case 4:
            int v31 = *(_DWORD *)v27;
            break;
          default:
            int v31 = *(unsigned __int8 *)v27;
            break;
        }
      }
      else
      {
        int v31 = 0;
        uint64_t v15 = v26;
        uint64_t v16 = v25;
      }
      if ((v31 | v29) != 0xFFFFFFFF) {
        goto LABEL_33;
      }
    }
LABEL_49:
    (*(void (**)(unsigned __int16 *, uint64_t, uint64_t))(v9 + 8))(v27, v58, v15);
    uint64_t v15 = v26;
    uint64_t v16 = v25;
    if (v18 > 3) {
      goto LABEL_52;
    }
    goto LABEL_50;
  }
  if (!v19)
  {
    uint64_t v25 = *(void *)(v14 - 8);
    uint64_t v26 = v14;
    (*(void (**)(unsigned __int8 *, uint64_t))(v55 + 8))(a1, v56);
    (*(void (**)(unint64_t, uint64_t))(v51 + 8))((unint64_t)&a1[v52] & v49, v54);
    int v27 = (unsigned __int16 *)((((unint64_t)&a1[v52] & v49) + v53 + v10) & v24);
    goto LABEL_49;
  }
LABEL_33:
  if (v18 > 3) {
    goto LABEL_52;
  }
LABEL_50:
  unsigned int v32 = ((1 << (8 * v18)) | 2u) >> (8 * v18);
  if (v32 <= 0xFFFD)
  {
    if (v32 > 0xFD)
    {
      unsigned int v33 = *(unsigned __int16 *)&a2[v18];
      unsigned int v34 = v33 - 2;
      if (v33 < 2) {
        goto LABEL_67;
      }
      goto LABEL_57;
    }
LABEL_52:
    unsigned int v33 = a2[v18];
    unsigned int v34 = v33 - 2;
    if (v33 < 2) {
      goto LABEL_67;
    }
LABEL_57:
    if (v18 <= 3) {
      uint64_t v35 = v18;
    }
    else {
      uint64_t v35 = 4;
    }
    switch(v35)
    {
      case 1:
        int v36 = *a2;
        if (v18 >= 4) {
          goto LABEL_80;
        }
        goto LABEL_66;
      case 2:
        int v36 = *(unsigned __int16 *)a2;
        if (v18 >= 4) {
          goto LABEL_80;
        }
        goto LABEL_66;
      case 3:
        int v36 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        if (v18 < 4) {
          goto LABEL_66;
        }
        goto LABEL_80;
      case 4:
        int v36 = *(_DWORD *)a2;
        if (v18 < 4)
        {
LABEL_66:
          unsigned int v33 = (v36 | (v34 << (8 * v18))) + 2;
          goto LABEL_67;
        }
LABEL_80:
        unsigned int v33 = v36 + 2;
        if (v33 == 1) {
          goto LABEL_81;
        }
        goto LABEL_68;
      default:
        goto LABEL_67;
    }
  }
  unsigned int v33 = *(_DWORD *)&a2[v18];
  unsigned int v34 = v33 - 2;
  if (v33 >= 2) {
    goto LABEL_57;
  }
LABEL_67:
  if (v33 == 1)
  {
LABEL_81:
    (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v16 + 32))(a1, a2, v15);
    int v41 = (unsigned char *)((unint64_t)&a1[v50] & v24);
    char v42 = (unsigned __int16 *)((unint64_t)&a2[v50] & v24);
    if (v57)
    {
      if (!(*(unsigned int (**)(unsigned __int16 *, void, uint64_t))(v9 + 48))(v42, v57, v58)) {
        goto LABEL_102;
      }
    }
    else
    {
      if (!*((unsigned char *)v42 + v12)) {
        goto LABEL_102;
      }
      int v43 = (*((unsigned __int8 *)v42 + v12) - 1) << (8 * v12);
      if (v12 > 3) {
        int v43 = 0;
      }
      if (v12)
      {
        int v44 = v12 <= 3 ? v12 : 4;
        switch(v44)
        {
          case 2:
            int v45 = *v42;
            break;
          case 3:
            int v45 = *v42 | (*((unsigned __int8 *)v42 + 2) << 16);
            break;
          case 4:
            int v45 = *(_DWORD *)v42;
            break;
          default:
            int v45 = *(unsigned __int8 *)v42;
            break;
        }
      }
      else
      {
        int v45 = 0;
      }
      if ((v45 | v43) == 0xFFFFFFFF)
      {
LABEL_102:
        (*(void (**)(unsigned char *, unsigned __int16 *, uint64_t))(v9 + 32))(v41, v42, v58);
        if (v57)
        {
          if (v18 > 3) {
            goto LABEL_109;
          }
        }
        else
        {
          v41[v12] = 0;
          if (v18 > 3) {
            goto LABEL_109;
          }
        }
LABEL_104:
        unsigned int v46 = ((1 << (8 * v18)) | 2u) >> (8 * v18);
        if (v46 > 0xFFFD)
        {
          *(_DWORD *)&a1[v18] = 1;
          return a1;
        }
        if (v46 > 0xFD)
        {
          *(_WORD *)&a1[v18] = 1;
          return a1;
        }
LABEL_109:
        a1[v18] = 1;
        return a1;
      }
    }
    memcpy(v41, v42, __n);
    if (v18 > 3) {
      goto LABEL_109;
    }
    goto LABEL_104;
  }
LABEL_68:
  if (v33)
  {
    if (v18 > 3) {
      goto LABEL_77;
    }
    unsigned int v39 = ((1 << (8 * v18)) | 2u) >> (8 * v18);
    uint64_t v40 = 2;
    if (v39 > 0xFFFD) {
      uint64_t v40 = 4;
    }
    if (v39 <= 0xFD) {
LABEL_77:
    }
      uint64_t v40 = 1;
    memcpy(a1, a2, v40 + v18);
  }
  else
  {
    (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v55 + 32))(a1, a2, v56);
    unint64_t v37 = (unint64_t)&a2[v52] & v49;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v51 + 32))((unint64_t)&a1[v52] & v49, v37, v54);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v9 + 32))((((unint64_t)&a1[v52] & v49) + v53 + v10) & v24, (v37 + v53 + v10) & v24, v58);
    if (v18 <= 3)
    {
      unsigned int v38 = ((1 << (8 * v18)) | 2u) >> (8 * v18);
      if (v38 > 0xFFFD)
      {
        *(_DWORD *)&a1[v18] = 0;
        return a1;
      }
      if (v38 > 0xFD)
      {
        *(_WORD *)&a1[v18] = 0;
        return a1;
      }
    }
    a1[v18] = 0;
  }
  return a1;
}

uint64_t sub_25A57C76C(unsigned __int16 *a1, unsigned int a2)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v4 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  uint64_t v5 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unint64_t v6 = (v4 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64);
  uint64_t v8 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(qword_26A429C58) - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  unint64_t v10 = (v6 + v7 + v9) & ~v9;
  uint64_t v11 = *(void *)(v8 + 64);
  unint64_t v12 = v10 + v11;
  unint64_t v13 = ((*(void *)(*(void *)(sub_25A6227C0() - 8) + 64) + v9) & ~v9) + v11;
  if (!*(_DWORD *)(v8 + 84)) {
    ++v13;
  }
  if (v13 <= v12) {
    unint64_t v13 = v12;
  }
  if (v13 > 3)
  {
    int v14 = 3;
LABEL_9:
    char v16 = 8;
    goto LABEL_10;
  }
  unsigned int v15 = ((1 << (8 * v13)) | 2u) >> (8 * v13);
  if (v15 > 0xFFFD) {
    goto LABEL_13;
  }
  int v14 = v15 + 2;
  if (v15 <= 0xFD) {
    goto LABEL_9;
  }
  char v16 = 16;
LABEL_10:
  unsigned int v17 = (1 << v16) - v14;
  if ((v17 & 0x80000000) == 0)
  {
    if (v13 > 3) {
      goto LABEL_17;
    }
LABEL_14:
    unsigned int v18 = ((1 << (8 * v13)) | 2u) >> (8 * v13);
    uint64_t v19 = 2;
    if (v18 > 0xFFFD) {
      uint64_t v19 = 4;
    }
    if (v18 > 0xFD) {
      goto LABEL_18;
    }
    goto LABEL_17;
  }
LABEL_13:
  unsigned int v17 = 0x7FFFFFFF;
  if (v13 <= 3) {
    goto LABEL_14;
  }
LABEL_17:
  uint64_t v19 = 1;
LABEL_18:
  if (!a2) {
    return 0;
  }
  if (a2 <= v17) {
    goto LABEL_37;
  }
  unint64_t v20 = v19 + v13;
  char v21 = 8 * v20;
  if (v20 <= 3)
  {
    unsigned int v23 = ((a2 - v17 + ~(-1 << v21)) >> v21) + 1;
    if (HIWORD(v23))
    {
      int v22 = *(_DWORD *)((char *)a1 + v20);
      if (!v22) {
        goto LABEL_37;
      }
      goto LABEL_29;
    }
    if (v23 > 0xFF)
    {
      int v22 = *(unsigned __int16 *)((char *)a1 + v20);
      if (!*(unsigned __int16 *)((char *)a1 + v20)) {
        goto LABEL_37;
      }
      goto LABEL_29;
    }
    if (v23 < 2)
    {
LABEL_37:
      if (v17)
      {
        if (v13 <= 3)
        {
          unsigned int v31 = ((1 << (8 * v13)) | 2u) >> (8 * v13);
          if (v31 > 0xFFFD)
          {
            unsigned int v26 = *(_DWORD *)((char *)a1 + v13);
            unsigned int v27 = ~v26;
LABEL_47:
            unsigned int v34 = 0x7FFFFFFF;
LABEL_48:
            if (v34 > v27) {
              return -v26;
            }
            else {
              return 0;
            }
          }
          int v29 = v31 + 2;
          if (v31 > 0xFD)
          {
            int v33 = *(unsigned __int16 *)((char *)a1 + v13);
            unsigned int v26 = v33 | 0xFFFF0000;
            unsigned int v27 = v33 ^ 0xFFFF;
            char v28 = 16;
          }
          else
          {
            int v32 = *((unsigned __int8 *)a1 + v13);
            unsigned int v26 = v32 | 0xFFFFFF00;
            unsigned int v27 = v32 ^ 0xFF;
            char v28 = 8;
          }
        }
        else
        {
          int v25 = *((unsigned __int8 *)a1 + v13);
          unsigned int v26 = v25 | 0xFFFFFF00;
          unsigned int v27 = v25 ^ 0xFF;
          char v28 = 8;
          int v29 = 3;
        }
        unsigned int v34 = (1 << v28) - v29;
        if ((v34 & 0x80000000) == 0) {
          goto LABEL_48;
        }
        goto LABEL_47;
      }
      return 0;
    }
  }
  int v22 = *((unsigned __int8 *)a1 + v20);
  if (!*((unsigned char *)a1 + v20)) {
    goto LABEL_37;
  }
LABEL_29:
  int v24 = (v22 - 1) << v21;
  if (v20 > 3) {
    int v24 = 0;
  }
  if (v20)
  {
    if (v20 > 3) {
      LODWORD(v20) = 4;
    }
    switch((int)v20)
    {
      case 2:
        LODWORD(v20) = *a1;
        break;
      case 3:
        LODWORD(v20) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v20) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v20) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v17 + (v20 | v24) + 1;
}

void sub_25A57CB58(unsigned char *a1, unsigned int a2, unsigned int a3)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v6 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  uint64_t v7 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unint64_t v8 = (v6 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = *(void *)(v7 + 64);
  uint64_t v10 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(qword_26A429C58) - 8);
  uint64_t v11 = *(unsigned __int8 *)(v10 + 80);
  unint64_t v12 = (v8 + v9 + v11) & ~v11;
  uint64_t v13 = *(void *)(v10 + 64);
  unint64_t v14 = v12 + v13;
  unint64_t v15 = ((*(void *)(*(void *)(sub_25A6227C0() - 8) + 64) + v11) & ~v11) + v13;
  if (!*(_DWORD *)(v10 + 84)) {
    ++v15;
  }
  if (v15 <= v14) {
    unint64_t v15 = v14;
  }
  char v16 = 8 * v15;
  if (v15 > 3)
  {
    int v17 = 3;
LABEL_7:
    char v18 = 8;
    goto LABEL_8;
  }
  unsigned int v20 = ((1 << v16) | 2u) >> v16;
  if (v20 > 0xFFFD) {
    goto LABEL_14;
  }
  int v17 = v20 + 2;
  if (v20 <= 0xFD) {
    goto LABEL_7;
  }
  char v18 = 16;
LABEL_8:
  unsigned int v19 = (1 << v18) - v17;
  if ((v19 & 0x80000000) == 0)
  {
    if (v15 > 3) {
      goto LABEL_18;
    }
    goto LABEL_15;
  }
LABEL_14:
  unsigned int v19 = 0x7FFFFFFF;
  if (v15 > 3)
  {
LABEL_18:
    uint64_t v22 = 1;
    goto LABEL_19;
  }
LABEL_15:
  unsigned int v21 = ((1 << v16) | 2u) >> v16;
  uint64_t v22 = 2;
  if (v21 > 0xFFFD) {
    uint64_t v22 = 4;
  }
  if (v21 <= 0xFD) {
    goto LABEL_18;
  }
LABEL_19:
  size_t v23 = v22 + v15;
  if (a3 <= v19)
  {
    int v24 = 0;
  }
  else if (v23 <= 3)
  {
    unsigned int v27 = ((a3 - v19 + ~(-1 << (8 * v23))) >> (8 * v23)) + 1;
    if (HIWORD(v27))
    {
      int v24 = 4;
    }
    else if (v27 >= 0x100)
    {
      int v24 = 2;
    }
    else
    {
      int v24 = v27 > 1;
    }
  }
  else
  {
    int v24 = 1;
  }
  if (v19 < a2)
  {
    unsigned int v25 = ~v19 + a2;
    if (v23 < 4)
    {
      int v26 = (v25 >> (8 * v23)) + 1;
      if (v23)
      {
        int v28 = v25 & ~(-1 << (8 * v23));
        bzero(a1, v23);
        if (v23 == 3)
        {
          *(_WORD *)a1 = v28;
          a1[2] = BYTE2(v28);
        }
        else if (v23 == 2)
        {
          *(_WORD *)a1 = v28;
        }
        else
        {
          *a1 = v28;
        }
      }
    }
    else
    {
      bzero(a1, v23);
      *(_DWORD *)a1 = v25;
      int v26 = 1;
    }
    switch(v24)
    {
      case 1:
        a1[v23] = v26;
        return;
      case 2:
        *(_WORD *)&a1[v23] = v26;
        return;
      case 3:
        goto LABEL_55;
      case 4:
        *(_DWORD *)&a1[v23] = v26;
        return;
      default:
        return;
    }
  }
  switch(v24)
  {
    case 1:
      a1[v23] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_39;
    case 2:
      *(_WORD *)&a1[v23] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_39;
    case 3:
LABEL_55:
      __break(1u);
      JUMPOUT(0x25A57CF60);
    case 4:
      *(_DWORD *)&a1[v23] = 0;
      goto LABEL_38;
    default:
LABEL_38:
      if (!a2) {
        return;
      }
LABEL_39:
      int v29 = -a2;
      if (v15 > 3) {
        goto LABEL_40;
      }
      unsigned int v30 = ((1 << v16) | 2u) >> v16;
      if (v30 > 0xFFFD)
      {
        *(_DWORD *)&a1[v15] = v29;
      }
      else if (v30 <= 0xFD)
      {
LABEL_40:
        a1[v15] = v29;
      }
      else
      {
        *(_WORD *)&a1[v15] = v29;
      }
      return;
  }
}

uint64_t sub_25A57CF88(unsigned __int8 *a1)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v2 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  uint64_t v3 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unint64_t v4 = (v2 + *(unsigned __int8 *)(v3 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v3 + 64);
  uint64_t v6 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(qword_26A429C58) - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  unint64_t v8 = (v4 + v5 + v7) & ~v7;
  uint64_t v9 = *(void *)(v6 + 64);
  unint64_t v10 = v8 + v9;
  unint64_t v11 = ((*(void *)(*(void *)(sub_25A6227C0() - 8) + 64) + v7) & ~v7) + v9;
  if (!*(_DWORD *)(v6 + 84)) {
    ++v11;
  }
  if (v11 <= v10) {
    unint64_t v11 = v10;
  }
  if (v11 > 3) {
    goto LABEL_6;
  }
  unsigned int v13 = ((1 << (8 * v11)) | 2u) >> (8 * v11);
  if (v13 > 0xFFFD)
  {
    uint64_t result = *(unsigned int *)&a1[v11];
  }
  else
  {
    if (v13 <= 0xFD)
    {
LABEL_6:
      uint64_t result = a1[v11];
      goto LABEL_11;
    }
    uint64_t result = *(unsigned __int16 *)&a1[v11];
  }
LABEL_11:
  if (result >= 2)
  {
    if (v11 <= 3) {
      uint64_t v14 = v11;
    }
    else {
      uint64_t v14 = 4;
    }
    switch(v14)
    {
      case 1:
        int v15 = *a1;
        if (v11 < 4) {
          goto LABEL_21;
        }
        goto LABEL_23;
      case 2:
        int v15 = *(unsigned __int16 *)a1;
        if (v11 >= 4) {
          goto LABEL_23;
        }
        goto LABEL_21;
      case 3:
        int v15 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        if (v11 < 4) {
          goto LABEL_21;
        }
        goto LABEL_23;
      case 4:
        int v15 = *(_DWORD *)a1;
        if (v11 < 4) {
LABEL_21:
        }
          uint64_t result = (v15 | ((result - 2) << (8 * v11))) + 2;
        else {
LABEL_23:
        }
          uint64_t result = (v15 + 2);
        break;
      default:
        return result;
    }
  }
  return result;
}

void sub_25A57D218(unsigned char *a1, unsigned int a2)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v4 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  uint64_t v5 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unint64_t v6 = (v4 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64);
  uint64_t v8 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(qword_26A429C58) - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  unint64_t v10 = (v6 + v7 + v9) & ~v9;
  uint64_t v11 = *(void *)(v8 + 64);
  size_t v12 = v10 + v11;
  size_t v13 = ((*(void *)(*(void *)(sub_25A6227C0() - 8) + 64) + v9) & ~v9) + v11;
  if (!*(_DWORD *)(v8 + 84)) {
    ++v13;
  }
  if (v13 <= v12) {
    size_t v14 = v12;
  }
  else {
    size_t v14 = v13;
  }
  if (a2 > 1)
  {
    unsigned int v15 = a2 - 2;
    if (v14 < 4)
    {
      int v17 = (v15 >> (8 * v14)) + 2;
      v15 &= ~(-1 << (8 * v14));
      char v18 = (int *)&a1[v14];
      unsigned int v19 = ((1 << (8 * v14)) | 2u) >> (8 * v14);
      if (v19 > 0xFFFD)
      {
        *char v18 = v17;
      }
      else if (v19 > 0xFD)
      {
        *(_WORD *)char v18 = v17;
      }
      else
      {
        *(unsigned char *)char v18 = v17;
      }
    }
    else
    {
      a1[v14] = 2;
    }
    if (v14 >= 4) {
      int v20 = 4;
    }
    else {
      int v20 = v14;
    }
    bzero(a1, v14);
    switch(v20)
    {
      case 2:
        *(_WORD *)a1 = v15;
        break;
      case 3:
        *(_WORD *)a1 = v15;
        a1[2] = BYTE2(v15);
        break;
      case 4:
        *(_DWORD *)a1 = v15;
        break;
      default:
        *a1 = v15;
        break;
    }
  }
  else
  {
    if (v14 > 3)
    {
LABEL_8:
      a1[v14] = a2;
      return;
    }
    unsigned int v16 = ((1 << (8 * v14)) | 2u) >> (8 * v14);
    if (v16 > 0xFFFD)
    {
      *(_DWORD *)&a1[v14] = a2;
    }
    else
    {
      if (v16 <= 0xFD) {
        goto LABEL_8;
      }
      *(_WORD *)&a1[v14] = a2;
    }
  }
}

void sub_25A57D4F4()
{
  if (!qword_26A429D60)
  {
    type metadata accessor for LazyPropertyList();
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A429388);
    unint64_t v0 = sub_25A622680();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26A429D60);
    }
  }
}

void sub_25A57D568()
{
  if (!qword_26A429D68)
  {
    type metadata accessor for TransportReply();
    unint64_t v0 = sub_25A623180();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26A429D68);
    }
  }
}

unint64_t sub_25A57D5C0(uint64_t a1)
{
  unint64_t v3 = 0xD000000000000012;
  uint64_t v4 = sub_25A6227C0();
  uint64_t v21 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  unint64_t v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v22 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v8 = MEMORY[0x270FA5388](AssociatedTypeWitness);
  unint64_t v10 = (char *)&v21 - v9;
  MEMORY[0x270FA5388](v8);
  size_t v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v12, v1, a1);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v18 = (uint64_t)&v12[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A429D80) + 48)];
      uint64_t v19 = v21;
      (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v6, v12, v4);
      unint64_t v23 = 0;
      unint64_t v24 = 0xE000000000000000;
      sub_25A623210();
      swift_bridgeObjectRelease();
      unint64_t v23 = 0xD000000000000010;
      unint64_t v24 = 0x800000025A636710;
      sub_25A57E778();
      sub_25A623350();
      sub_25A622E00();
      swift_bridgeObjectRelease();
      unint64_t v3 = v23;
      (*(void (**)(char *, uint64_t))(v19 + 8))(v6, v4);
      sub_25A570C60(v18, &qword_26A429D70);
      break;
    case 2u:
      unint64_t v3 = 0x6F206D6165727473;
      break;
    case 3u:
    case 4u:
      return v3;
    default:
      swift_getAssociatedTypeWitness();
      swift_getAssociatedConformanceWitness();
      uint64_t v14 = swift_getAssociatedTypeWitness();
      type metadata accessor for TransportReply();
      TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
      uint64_t v16 = v22;
      (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v10, &v12[*(int *)(TupleTypeMetadata3 + 48)], AssociatedTypeWitness);
      unint64_t v23 = 0;
      unint64_t v24 = 0xE000000000000000;
      sub_25A623210();
      sub_25A622E00();
      sub_25A623380();
      uint64_t v17 = (uint64_t)&v12[*(int *)(TupleTypeMetadata3 + 64)];
      sub_25A622E00();
      unint64_t v3 = v23;
      (*(void (**)(char *, uint64_t))(v16 + 8))(v10, AssociatedTypeWitness);
      sub_25A57E6B8(v17);
      (*(void (**)(char *, uint64_t))(*(void *)(v14 - 8) + 8))(v12, v14);
      break;
  }
  return v3;
}

uint64_t sub_25A57DA5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = type metadata accessor for PipeEvent.Content();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a3, a1, v6);
  uint64_t v7 = a3 + *(int *)(type metadata accessor for PipeEvent() + 36);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 32);

  return v9(v7, a2, AssociatedTypeWitness);
}

uint64_t sub_25A57DB5C(void *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  id v87 = a1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A429D70);
  uint64_t v6 = MEMORY[0x270FA5388](v5 - 8);
  uint64_t v77 = (uint64_t)v68 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v76 = (uint64_t)v68 - v8;
  uint64_t v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A429D78);
  MEMORY[0x270FA5388](v78);
  uint64_t v80 = (void *)((char *)v68 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = sub_25A622C10();
  uint64_t v81 = *(void *)(v10 - 8);
  uint64_t v82 = v10;
  MEMORY[0x270FA5388](v10);
  v79 = (char *)v68 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v83 = type metadata accessor for TransportReply();
  uint64_t v74 = *(void *)(v83 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v83);
  uint64_t v75 = (uint64_t)v68 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v90 = a2;
  uint64_t v14 = *(void *)(a2 - 8);
  a2 -= 8;
  uint64_t v89 = v14;
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)v68 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_25A622C70();
  uint64_t v85 = *(void *)(v17 - 8);
  uint64_t v86 = v17;
  MEMORY[0x270FA5388](v17);
  uint64_t v91 = (char *)v68 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = *(void *)(a2 + 32);
  uint64_t v73 = *(void *)(a2 + 24);
  uint64_t v72 = v19;
  uint64_t v20 = type metadata accessor for PipeEvent.Content();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  unint64_t v24 = (char *)v68 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = MEMORY[0x270FA5388](v22);
  unsigned int v27 = (char *)v68 - v26;
  MEMORY[0x270FA5388](v25);
  int v29 = (char *)v68 - v28;
  uint64_t v30 = v3;
  v88 = *(void (**)(char *, uint64_t, uint64_t))(v21 + 16);
  v88((char *)v68 - v28, v3, v20);
  LODWORD(v3) = swift_getEnumCaseMultiPayload();
  unsigned int v31 = *(uint64_t (**)(char *, uint64_t))(v21 + 8);
  uint64_t result = v31(v29, v20);
  if (v3 != 4)
  {
    char v84 = v24;
    sub_25A622C40();
    uint64_t v33 = v30;
    (*(void (**)(char *, uint64_t, uint64_t))(v89 + 16))(v16, v30, v90);
    id v34 = v87;
    id v35 = v87;
    id v36 = v34;
    unint64_t v37 = sub_25A622C60();
    os_log_type_t v38 = sub_25A623130();
    if (os_log_type_enabled(v37, v38))
    {
      uint64_t v39 = swift_slowAlloc();
      uint64_t v71 = v33;
      uint64_t v40 = v39;
      uint64_t v69 = (void *)swift_slowAlloc();
      uint64_t v70 = swift_slowAlloc();
      uint64_t v93 = v70;
      *(_DWORD *)uint64_t v40 = 136446466;
      v68[1] = v40 + 4;
      v88(v27, (uint64_t)v16, v20);
      (*(void (**)(char *, uint64_t))(v89 + 8))(v16, v90);
      os_log_type_t v41 = v38;
      unint64_t v42 = sub_25A57D5C0(v20);
      unint64_t v44 = v43;
      v31(v27, v20);
      uint64_t v92 = sub_25A58497C(v42, v44, &v93);
      sub_25A623190();
      swift_bridgeObjectRelease();
      *(_WORD *)(v40 + 12) = 2114;
      id v45 = v87;
      id v46 = v87;
      uint64_t v47 = _swift_stdlib_bridgeErrorToNSError();
      uint64_t v92 = v47;
      sub_25A623190();
      int v48 = v69;
      *uint64_t v69 = v47;

      uint64_t v49 = v45;
      _os_log_impl(&dword_25A547000, v37, v41, "Failed to deliver pipe event: %{public}s\nError: %{public}@", (uint8_t *)v40, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A429D88);
      swift_arrayDestroy();
      MEMORY[0x261140C30](v48, -1, -1);
      uint64_t v50 = v70;
      swift_arrayDestroy();
      MEMORY[0x261140C30](v50, -1, -1);
      uint64_t v51 = v40;
      uint64_t v33 = v71;
      MEMORY[0x261140C30](v51, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v89 + 8))(v16, v90);

      uint64_t v49 = v34;
    }

    (*(void (**)(char *, uint64_t))(v85 + 8))(v91, v86);
    v88(v84, v33, v20);
    uint64_t result = swift_getEnumCaseMultiPayload();
    if ((result - 2) >= 3)
    {
      uint64_t v52 = v49;
      if (result)
      {
        uint64_t v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A429D80);
        uint64_t v56 = v84;
        uint64_t v63 = v76;
        sub_25A57E5E8((uint64_t)&v84[*(int *)(v62 + 48)], v76);
        uint64_t v64 = v77;
        sub_25A57E650(v63, v77);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v74 + 48))(v64, 1, v83) == 1)
        {
          sub_25A570C60(v63, &qword_26A429D70);
          sub_25A570C60(v64, &qword_26A429D70);
        }
        else
        {
          size_t v65 = v79;
          sub_25A622C20();
          uint64_t v66 = (uint64_t)v80;
          *uint64_t v80 = v52;
          swift_storeEnumTagMultiPayload();
          id v67 = v52;
          __swift_instantiateConcreteTypeFromMangledName(qword_26A429C58);
          sub_25A622640();
          sub_25A570C60(v66, &qword_26A429D78);
          (*(void (**)(char *, uint64_t))(v81 + 8))(v65, v82);
          sub_25A570C60(v63, &qword_26A429D70);
          sub_25A57E6B8(v64);
        }
        uint64_t AssociatedTypeWitness = sub_25A6227C0();
      }
      else
      {
        swift_getAssociatedTypeWitness();
        swift_getAssociatedConformanceWitness();
        uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
        uint64_t v54 = swift_getAssociatedTypeWitness();
        TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
        uint64_t v56 = v84;
        unsigned int v57 = &v84[*(int *)(TupleTypeMetadata3 + 48)];
        uint64_t v58 = v75;
        sub_25A57E714((uint64_t)&v84[*(int *)(TupleTypeMetadata3 + 64)], v75);
        char v59 = v79;
        sub_25A622C20();
        uint64_t v60 = (uint64_t)v80;
        *uint64_t v80 = v49;
        swift_storeEnumTagMultiPayload();
        id v61 = v49;
        __swift_instantiateConcreteTypeFromMangledName(qword_26A429C58);
        sub_25A622640();
        sub_25A570C60(v60, &qword_26A429D78);
        (*(void (**)(char *, uint64_t))(v81 + 8))(v59, v82);
        sub_25A57E6B8(v58);
        (*(void (**)(char *, uint64_t))(*(void *)(v54 - 8) + 8))(v57, v54);
      }
      return (*(uint64_t (**)(char *, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8))(v56, AssociatedTypeWitness);
    }
  }
  return result;
}

uint64_t sub_25A57E560(uint64_t (*a1)(uint64_t))
{
  return a1(v1);
}

uint64_t sub_25A57E5E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A429D70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_25A57E650(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A429D70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_25A57E6B8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for TransportReply();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_25A57E714(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TransportReply();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_25A57E778()
{
  unint64_t result = qword_26A429D90;
  if (!qword_26A429D90)
  {
    sub_25A6227C0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A429D90);
  }
  return result;
}

uint64_t static EndpointProtocol<>.encode(context:)()
{
  return sub_25A622AF0();
}

uint64_t static EndpointProtocol<>.decode(context:)(uint64_t a1)
{
  uint64_t v2 = sub_25A6227C0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getAssociatedTypeWitness();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  return sub_25A622B00();
}

uint64_t static EndpointProtocol<>.decode(context:)(uint64_t a1, uint64_t a2)
{
  uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
  *(void *)&long long v5 = a2;
  sub_25A57E9CC();
  swift_allocError();
  sub_25A56D80C(&v5, v3);
  return swift_willThrow();
}

unint64_t sub_25A57E9CC()
{
  unint64_t result = qword_26A429D98;
  if (!qword_26A429D98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A429D98);
  }
  return result;
}

uint64_t dispatch thunk of static EndpointProtocol.encode(context:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

uint64_t dispatch thunk of static EndpointProtocol.decode(context:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 64))();
}

uint64_t initializeWithCopy for NeverCreatesStreams(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 24) = v3;
  (**(void (***)(void))(v3 - 8))();
  return a1;
}

uint64_t *assignWithCopy for NeverCreatesStreams(uint64_t *a1, uint64_t *a2)
{
  return a1;
}

uint64_t *__swift_assign_boxed_opaque_existential_0(uint64_t *result, uint64_t *a2)
{
  if (result != a2)
  {
    uint64_t v3 = result;
    uint64_t v4 = result[3];
    uint64_t v5 = a2[3];
    if (v4 == v5)
    {
      uint64_t v10 = *(void *)(v4 - 8);
      if ((*(unsigned char *)(v10 + 82) & 2) != 0)
      {
        uint64_t v12 = *a2;
        swift_retain();
        unint64_t result = (uint64_t *)swift_release();
        *uint64_t v3 = v12;
      }
      else
      {
        uint64_t v11 = *(uint64_t (**)(void))(v10 + 24);
        return (uint64_t *)v11();
      }
    }
    else
    {
      result[3] = v5;
      uint64_t v6 = *(void *)(v4 - 8);
      uint64_t v7 = *(void *)(v5 - 8);
      uint64_t v8 = v7;
      int v9 = *(_DWORD *)(v7 + 80);
      if ((*(unsigned char *)(v6 + 82) & 2) != 0)
      {
        if ((v9 & 0x20000) != 0)
        {
          *unint64_t result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(unsigned char *, uint64_t *, uint64_t))(v6 + 32))(v13, result, v4);
        if ((v9 & 0x20000) != 0)
        {
          *uint64_t v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v13, v4);
      }
    }
  }
  return result;
}

_OWORD *assignWithTake for NeverCreatesStreams(_OWORD *a1, _OWORD *a2)
{
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  long long v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  return a1;
}

ValueMetadata *type metadata accessor for NeverCreatesStreams()
{
  return &type metadata for NeverCreatesStreams;
}

uint64_t sub_25A57ED48()
{
  return 0;
}

unint64_t sub_25A57EDFC()
{
  return 0xD000000000000017;
}

uint64_t sub_25A57EE1C()
{
  return 0;
}

uint64_t sub_25A57EE48(uint64_t a1)
{
  unint64_t v2 = sub_25A57EFB8();

  return MEMORY[0x270F55A28](a1, v2);
}

uint64_t sub_25A57EE90(uint64_t a1)
{
  unint64_t v2 = sub_25A57EFB8();

  return MEMORY[0x270F55A08](a1, v2);
}

unint64_t sub_25A57EED4()
{
  unint64_t result = qword_26A429DA0;
  if (!qword_26A429DA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A429DA0);
  }
  return result;
}

unint64_t sub_25A57EF2C()
{
  unint64_t result = qword_26A429DA8;
  if (!qword_26A429DA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A429DA8);
  }
  return result;
}

uint64_t sub_25A57EF80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 32))(a3, a1, a2);
}

unint64_t sub_25A57EFB8()
{
  unint64_t result = qword_26A429DB0;
  if (!qword_26A429DB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A429DB0);
  }
  return result;
}

uint64_t sub_25A57F00C()
{
  return 0;
}

uint64_t sub_25A57F0BC(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270F55A28](a1, WitnessTable);
}

uint64_t sub_25A57F110(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270F55A08](a1, WitnessTable);
}

uint64_t sub_25A57F168(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_25A57F2F8(a1, a2, a3, qword_26A429DD0);
}

uint64_t sub_25A57F188()
{
  return sub_25A622AF0();
}

uint64_t sub_25A57F1D4(uint64_t a1)
{
  uint64_t v2 = sub_25A6227C0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for HostAgentSystem.AgentEndpoint.StreamContext(0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  sub_25A57F4F8();
  return sub_25A622B00();
}

uint64_t sub_25A57F2D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_25A57F2F8(a1, a2, a3, &qword_26A429DC0);
}

uint64_t sub_25A57F2F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(a4);
  *(void *)&long long v7 = v4;
  sub_25A57E9CC();
  swift_allocError();
  sub_25A56D80C(&v7, v5);
  return swift_willThrow();
}

uint64_t sub_25A57F360()
{
  return sub_25A622AF0();
}

uint64_t sub_25A57F3BC(uint64_t a1)
{
  uint64_t v2 = sub_25A6227C0();
  MEMORY[0x270FA5388](v2);
  (*(void (**)(char *, uint64_t))(v4 + 16))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  sub_25A57F4A4();
  return sub_25A622B00();
}

unint64_t sub_25A57F4A4()
{
  unint64_t result = qword_26A429DB8;
  if (!qword_26A429DB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A429DB8);
  }
  return result;
}

unint64_t sub_25A57F4F8()
{
  unint64_t result = qword_26A429DC8;
  if (!qword_26A429DC8)
  {
    type metadata accessor for HostAgentSystem.AgentEndpoint.StreamContext(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A429DC8);
  }
  return result;
}

uint64_t sub_25A57F550(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 16);
}

uint64_t sub_25A57F558()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_25A57F5E8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = *(_DWORD *)(v4 + 80);
  if (v5 <= 7
    && *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 0x18uLL
    && (*(_DWORD *)(v4 + 80) & 0x100000) == 0)
  {
    (*(void (**)(uint64_t *))(v4 + 16))(a1);
  }
  else
  {
    uint64_t v8 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v8 + ((v5 + 16) & ~v5));
    swift_retain();
  }
  return v3;
}

uint64_t sub_25A57F6A0(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(*(void *)(*(void *)(a2 + 16) - 8) + 8))();
}

uint64_t sub_25A57F6CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_25A57F71C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_25A57F76C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_25A57F7BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_25A57F80C(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (!a2) {
    return 0;
  }
  unsigned int v7 = a2 - v5;
  if (a2 <= v5) {
    goto LABEL_19;
  }
  char v8 = 8 * v6;
  if (v6 <= 3)
  {
    unsigned int v10 = ((v7 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      int v9 = *(_DWORD *)((char *)a1 + v6);
      if (!v9) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      int v9 = *(unsigned __int16 *)((char *)a1 + v6);
      if (!*(unsigned __int16 *)((char *)a1 + v6)) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_19:
      if (v5) {
        return (*(uint64_t (**)(void))(v4 + 48))();
      }
      return 0;
    }
  }
  int v9 = *((unsigned __int8 *)a1 + v6);
  if (!*((unsigned char *)a1 + v6)) {
    goto LABEL_19;
  }
LABEL_11:
  int v11 = (v9 - 1) << v8;
  if (v6 > 3) {
    int v11 = 0;
  }
  if (v6)
  {
    if (v6 > 3) {
      LODWORD(v6) = 4;
    }
    switch((int)v6)
    {
      case 2:
        LODWORD(v6) = *a1;
        break;
      case 3:
        LODWORD(v6) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v6) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v6) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v5 + (v6 | v11) + 1;
}

void sub_25A57F968(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  size_t v8 = *(void *)(v6 + 64);
  BOOL v9 = a3 >= v7;
  unsigned int v10 = a3 - v7;
  if (v10 != 0 && v9)
  {
    if (v8 <= 3)
    {
      unsigned int v14 = ((v10 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v14))
      {
        int v11 = 4;
      }
      else if (v14 >= 0x100)
      {
        int v11 = 2;
      }
      else
      {
        int v11 = v14 > 1;
      }
    }
    else
    {
      int v11 = 1;
    }
  }
  else
  {
    int v11 = 0;
  }
  if (v7 < a2)
  {
    unsigned int v12 = ~v7 + a2;
    if (v8 < 4)
    {
      int v13 = (v12 >> (8 * v8)) + 1;
      if (v8)
      {
        int v15 = v12 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if (v8 == 3)
        {
          *(_WORD *)a1 = v15;
          a1[2] = BYTE2(v15);
        }
        else if (v8 == 2)
        {
          *(_WORD *)a1 = v15;
        }
        else
        {
          *a1 = v15;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v12;
      int v13 = 1;
    }
    switch(v11)
    {
      case 1:
        a1[v8] = v13;
        return;
      case 2:
        *(_WORD *)&a1[v8] = v13;
        return;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v8] = v13;
        return;
      default:
        return;
    }
  }
  switch(v11)
  {
    case 1:
      a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 2:
      *(_WORD *)&a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 3:
LABEL_34:
      __break(1u);
      JUMPOUT(0x25A57FB80);
    case 4:
      *(_DWORD *)&a1[v8] = 0;
      goto LABEL_20;
    default:
LABEL_20:
      if (a2)
      {
LABEL_21:
        uint64_t v16 = *(void (**)(void))(v6 + 56);
        v16();
      }
      return;
  }
}

uint64_t type metadata accessor for EndpointInvalidated()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_25A57FBC0()
{
  return swift_getWitnessTable();
}

uint64_t sub_25A57FBDC()
{
  return swift_getWitnessTable();
}

uint64_t sub_25A57FBF8()
{
  return swift_getWitnessTable();
}

uint64_t Transport.activate<A>(forReceivingMessages:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  type metadata accessor for TransportEvent();
  uint64_t v9 = sub_25A623080();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  int v13 = (char *)&v16 - v12;
  Transport.activate<A>(forReceivingEvents:)(v11, a2, a3, a4, a5);
  unsigned int v14 = (void *)swift_allocObject();
  void v14[2] = a2;
  void v14[3] = a3;
  v14[4] = a4;
  v14[5] = a5;
  type metadata accessor for TransportMessage();
  sub_25A623050();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v13, v9);
}

uint64_t type metadata accessor for TransportEvent()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t Transport.transportSender<A>(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v6[4] = a5;
  v6[5] = v5;
  _OWORD v6[2] = a1;
  v6[3] = a3;
  return MEMORY[0x270FA2498](sub_25A57FDC0, 0, 0);
}

uint64_t sub_25A57FDC0()
{
  uint64_t v6 = v0[4];
  sub_25A623390();
  v0[6] = 0;
  v0[7] = 0xE000000000000000;
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v6 + 32) + **(int **)(v6 + 32));
  unint64_t v1 = (void *)swift_task_alloc();
  v0[8] = v1;
  void *v1 = v0;
  v1[1] = sub_25A57FED0;
  uint64_t v2 = v0[4];
  uint64_t v3 = v0[3];
  return v5(v3, v2);
}

uint64_t sub_25A57FED0(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *v3;
  *(void *)(*v3 + 72) = v2;
  swift_task_dealloc();
  if (v2)
  {
    uint64_t v7 = sub_25A5800AC;
  }
  else
  {
    *(void *)(v6 + 80) = a2;
    *(void *)(v6 + 88) = a1;
    uint64_t v7 = sub_25A580004;
  }
  return MEMORY[0x270FA2498](v7, 0, 0);
}

uint64_t sub_25A580004()
{
  uint64_t v2 = *(void *)(v0 + 48);
  uint64_t v1 = *(void *)(v0 + 56);
  uint64_t v3 = *(int8x16_t **)(v0 + 16);
  int8x16_t v8 = *(int8x16_t *)(v0 + 80);
  uint64_t v4 = (*(uint64_t (**)(void))(*(void *)(v0 + 32) + 40))(*(void *)(v0 + 24));
  v3->i64[0] = v2;
  v3->i64[1] = v1;
  v3[1] = vextq_s8(v8, v8, 8uLL);
  v3[2].i64[0] = v4;
  v3[2].i64[1] = v5;
  uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

uint64_t sub_25A5800AC()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t TransportSenderProtocol<>.send(oneWay:)(char *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v55 = a4;
  uint64_t v60 = a1;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A429D70);
  MEMORY[0x270FA5388](v8 - 8);
  char v59 = (char *)v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for LazyPropertyList();
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v58 = (char *)v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v13 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v14 = MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v52 = (char *)v46 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)v46 - v17;
  uint64_t v19 = *(void *)(a2 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v21 = (char *)v46 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_25A622C70();
  uint64_t v54 = *(void *)(v22 - 8);
  MEMORY[0x270FA5388](v22);
  unint64_t v24 = (char *)v46 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25A622C50();
  uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t))(v19 + 16);
  uint64_t v56 = v5;
  v25(v21, v5, a2);
  uint64_t v26 = *(void (**)(char *, char *, uint64_t))(v13 + 16);
  uint64_t v53 = v18;
  unsigned int v27 = v18;
  uint64_t v28 = AssociatedTypeWitness;
  uint64_t v50 = v26;
  v26(v27, v60, AssociatedTypeWitness);
  int v29 = sub_25A622C60();
  os_log_type_t v30 = sub_25A623120();
  int v51 = v30;
  if (os_log_type_enabled(v29, v30))
  {
    uint64_t v31 = swift_slowAlloc();
    uint64_t v57 = a3;
    uint64_t v32 = v31;
    uint64_t v49 = swift_slowAlloc();
    uint64_t v62 = v49;
    *(_DWORD *)uint64_t v32 = 136446466;
    v46[1] = v32 + 4;
    os_log_t v47 = v29;
    uint64_t v33 = (*(uint64_t (**)(uint64_t, uint64_t))(v57 + 24))(a2, v57);
    uint64_t v61 = sub_25A58497C(v33, v34, &v62);
    uint64_t v48 = v22;
    sub_25A623190();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v21, a2);
    *(_WORD *)(v32 + 12) = 2082;
    id v35 = v53;
    v50(v52, v53, v28);
    uint64_t v36 = sub_25A622DD0();
    uint64_t v61 = sub_25A58497C(v36, v37, &v62);
    sub_25A623190();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v35, v28);
    os_log_t v38 = v47;
    _os_log_impl(&dword_25A547000, v47, (os_log_type_t)v51, "%{public}s sending one-way message: %{public}s", (uint8_t *)v32, 0x16u);
    uint64_t v39 = v49;
    swift_arrayDestroy();
    MEMORY[0x261140C30](v39, -1, -1);
    uint64_t v40 = v32;
    a3 = v57;
    MEMORY[0x261140C30](v40, -1, -1);

    (*(void (**)(char *, uint64_t))(v54 + 8))(v24, v48);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v19 + 8))(v21, a2);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v53, v28);

    (*(void (**)(char *, uint64_t))(v54 + 8))(v24, v22);
  }
  os_log_type_t v41 = (void (*)(uint64_t, uint64_t))(*(uint64_t (**)(uint64_t, uint64_t))(a3 + 32))(a2, a3);
  uint64_t v42 = (uint64_t)v58;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(a3 + 40))(v60, v28, v55, a2);
  uint64_t v43 = type metadata accessor for TransportReply();
  uint64_t v44 = (uint64_t)v59;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 56))(v59, 1, 1, v43);
  v41(v42, v44);
  swift_release();
  sub_25A570C60(v44, &qword_26A429D70);
  return sub_25A584FE4(v42, (uint64_t (*)(void))type metadata accessor for LazyPropertyList);
}

uint64_t TransportSenderProtocol<>.send(message:)(char *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v25 = a4;
  uint64_t v23 = a2;
  uint64_t v24 = a3;
  uint64_t v22 = a1;
  uint64_t v4 = type metadata accessor for TransportReply();
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A429E60);
  uint64_t v8 = v7 - 8;
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v11 = (uint64_t *)((char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (uint64_t *)((char *)&v21 - v12);
  uint64_t v14 = (char *)&v21 + *(int *)(v8 + 56) - v12;
  *uint64_t v13 = sub_25A6230A0();
  uint64_t v15 = (uint64_t)v11 + *(int *)(v8 + 56);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A429E68);
  uint64_t v17 = *(void *)(v16 - 8);
  (*(void (**)(uint64_t, char *, uint64_t))(v17 + 16))(v15, v14, v16);
  TransportReply.init(file:line:column:function:fulfilling:)((uint64_t)"/Library/Caches/com.apple.xbs/Sources/UITestingAgent/Shared/PreviewsMessaging/Sources/PreviewsMessaging/Transport+Interface.swift", 129, 2, 128, 34, (uint64_t)"send(message:)", 14, (uint64_t)v6, v15);
  TransportSenderProtocol<>.send(message:reply:)(v22, (uint64_t)v6, v23, v24, v25);
  sub_25A584FE4((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for TransportReply);
  uint64_t v18 = (char *)v11 + *(int *)(v8 + 56);
  uint64_t v19 = *v13;
  *uint64_t v11 = *v13;
  (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v18, v14, v16);
  (*(void (**)(char *, uint64_t))(v17 + 8))(v18, v16);
  return v19;
}

uint64_t TransportSenderProtocol<>.send<A>(message:expecting:)(char *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v29 = a7;
  uint64_t v25 = a6;
  uint64_t v26 = a1;
  uint64_t v27 = a3;
  uint64_t v28 = a5;
  uint64_t v8 = type metadata accessor for TransportReply();
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A429388);
  sub_25A6230E0();
  uint64_t v11 = sub_25A6230B0();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v13 = TupleTypeMetadata2 - 8;
  uint64_t v14 = MEMORY[0x270FA5388](TupleTypeMetadata2);
  uint64_t v16 = (uint64_t *)((char *)&v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (uint64_t *)((char *)&v25 - v17);
  uint64_t v19 = (char *)&v25 + *(int *)(v13 + 56) - v17;
  *uint64_t v18 = sub_25A6230A0();
  uint64_t v20 = (uint64_t)v16 + *(int *)(v13 + 56);
  uint64_t v21 = *(void *)(v11 - 8);
  (*(void (**)(uint64_t, char *, uint64_t))(v21 + 16))(v20, v19, v11);
  TransportReply.init<A>(file:line:column:function:fulfilling:)((uint64_t)"/Library/Caches/com.apple.xbs/Sources/UITestingAgent/Shared/PreviewsMessaging/Sources/PreviewsMessaging/Transport+Interface.swift", 129, 2, 138, 34, (uint64_t)"send(message:expecting:)", 24, 2, (uint64_t)v10, v20, a4, v25);
  TransportSenderProtocol<>.send(message:reply:)(v26, (uint64_t)v10, v27, v28, v29);
  sub_25A584FE4((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for TransportReply);
  uint64_t v22 = (char *)v16 + *(int *)(v13 + 56);
  uint64_t v23 = *v18;
  *uint64_t v16 = *v18;
  (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v22, v19, v11);
  (*(void (**)(char *, uint64_t))(v21 + 8))(v22, v11);
  return v23;
}

uint64_t TransportMessage<>.reply.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  MEMORY[0x270FA5388](a1);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v5 + 16))(v4);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    type metadata accessor for TransportReply();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    sub_25A57E714((uint64_t)&v4[*(int *)(TupleTypeMetadata2 + 48)], a2);
    return (*(uint64_t (**)(char *, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8))(v4, AssociatedTypeWitness);
  }
  else
  {
    uint64_t result = sub_25A6233A0();
    __break(1u);
  }
  return result;
}

uint64_t TransportMessage<>.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  MEMORY[0x270FA5388](a1);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v5 + 16))(v4);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    type metadata accessor for TransportReply();
    uint64_t v7 = (uint64_t)&v4[*(int *)(swift_getTupleTypeMetadata2() + 48)];
    (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 32))(a2, v4, AssociatedTypeWitness);
    return sub_25A584FE4(v7, (uint64_t (*)(void))type metadata accessor for TransportReply);
  }
  else
  {
    uint64_t result = sub_25A6233A0();
    __break(1u);
  }
  return result;
}

{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t AssociatedTypeWitness;
  uint64_t result;
  uint64_t v8;

  MEMORY[0x270FA5388](a1);
  uint64_t v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v5 + 16))(v4);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t result = sub_25A6233A0();
    __break(1u);
  }
  else
  {
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 32))(a2, v4, AssociatedTypeWitness);
  }
  return result;
}

uint64_t sub_25A581048@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, void *a7@<X8>)
{
  *a7 = result;
  a7[1] = a2;
  a7[2] = a3;
  a7[3] = a4;
  a7[4] = a5;
  a7[5] = a6;
  return result;
}

uint64_t TransportSender.transportDescription.getter()
{
  uint64_t v0 = sub_25A5850FC();
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t TransportSender.messageRelay.getter()
{
  uint64_t v0 = sub_25A585104();
  swift_retain();
  return v0;
}

uint64_t TransportSender.legacyMessageKey.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TransportSender.encode<A>(message:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v11 = sub_25A6227C0();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(v5 + 40))
  {
    MEMORY[0x270FA5388](v13);
    uint64_t v16 = *(void *)(a2 + 24);
    *(&v20 - 8) = *(void *)(a2 + 16);
    *(&v20 - 7) = a3;
    *(&v20 - 6) = v16;
    *(&v20 - 5) = a4;
    *(&v20 - 4) = v18;
    *(&v20 - 3) = v17;
    *(&v20 - 2) = a1;
    sub_25A6227A0();
  }
  else
  {
    sub_25A622AF0();
  }
  (*(void (**)(uint64_t, char *, uint64_t))(v12 + 16))(a5, v15, v11);
  type metadata accessor for LazyPropertyList();
  swift_storeEnumTagMultiPayload();
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v15, v11);
}

uint64_t sub_25A5812A8()
{
  uint64_t v0 = sub_25A5850FC();
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_25A5812E0()
{
  uint64_t v0 = sub_25A585104();
  swift_retain();
  return v0;
}

uint64_t sub_25A581318@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  return TransportSender.encode<A>(message:)(a1, a4, a2, a3, a5);
}

uint64_t sub_25A58132C@<X0>(uint64_t a1@<X8>)
{
  return TransportSenderProtocol.encode<A>(message:)(a1);
}

uint64_t TransportSenderProtocol.encode<A>(message:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_25A6227C0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25A622AF0();
  (*(void (**)(uint64_t, char *, uint64_t))(v3 + 16))(a1, v5, v2);
  type metadata accessor for LazyPropertyList();
  swift_storeEnumTagMultiPayload();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t TransportSenderProtocol<>.send(message:reply:)(char *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v59 = a5;
  uint64_t v61 = a2;
  uint64_t v64 = a1;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A429D70);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for LazyPropertyList();
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v62 = (char *)&v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getAssociatedTypeWitness();
  uint64_t v63 = a4;
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v14 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v15 = MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v55 = (char *)&v49 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v49 - v18;
  uint64_t v20 = *(void *)(a3 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v22 = (char *)&v49 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_25A622C70();
  uint64_t v56 = *(void *)(v23 - 8);
  uint64_t v57 = v23;
  MEMORY[0x270FA5388](v23);
  uint64_t v25 = (char *)&v49 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25A622C50();
  uint64_t v26 = *(void (**)(char *, uint64_t, uint64_t))(v20 + 16);
  uint64_t v60 = v5;
  v26(v22, v5, a3);
  uint64_t v27 = *(void (**)(char *, char *, uint64_t))(v14 + 16);
  uint64_t v58 = AssociatedTypeWitness;
  uint64_t v54 = v27;
  v27(v19, v64, AssociatedTypeWitness);
  uint64_t v28 = sub_25A622C60();
  os_log_type_t v29 = sub_25A623120();
  int v30 = v29;
  if (os_log_type_enabled(v28, v29))
  {
    uint64_t v31 = swift_slowAlloc();
    os_log_t v51 = v28;
    uint64_t v32 = v31;
    uint64_t v52 = swift_slowAlloc();
    uint64_t v66 = v52;
    *(_DWORD *)uint64_t v32 = 136446466;
    uint64_t v49 = v32 + 4;
    uint64_t v33 = *(uint64_t (**)(uint64_t))(v63 + 24);
    int v50 = v30;
    uint64_t v34 = v33(a3);
    uint64_t v65 = sub_25A58497C(v34, v35, &v66);
    uint64_t v53 = v10;
    sub_25A623190();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v22, a3);
    *(_WORD *)(v32 + 12) = 2082;
    uint64_t v36 = v58;
    v54(v55, v19, v58);
    uint64_t v37 = sub_25A622DD0();
    uint64_t v65 = sub_25A58497C(v37, v38, &v66);
    uint64_t v10 = v53;
    sub_25A623190();
    swift_bridgeObjectRelease();
    uint64_t v39 = v19;
    uint64_t v40 = v36;
    (*(void (**)(char *, uint64_t))(v14 + 8))(v39, v36);
    os_log_t v41 = v51;
    _os_log_impl(&dword_25A547000, v51, (os_log_type_t)v50, "%{public}s sending two-way message: %{public}s", (uint8_t *)v32, 0x16u);
    uint64_t v42 = v52;
    swift_arrayDestroy();
    MEMORY[0x261140C30](v42, -1, -1);
    MEMORY[0x261140C30](v32, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v20 + 8))(v22, a3);
    uint64_t v43 = v19;
    uint64_t v40 = v58;
    (*(void (**)(char *, uint64_t))(v14 + 8))(v43, v58);
  }
  (*(void (**)(char *, uint64_t))(v56 + 8))(v25, v57);
  uint64_t v44 = v63;
  id v45 = (void (*)(uint64_t, char *))(*(uint64_t (**)(uint64_t, uint64_t))(v63 + 32))(a3, v63);
  uint64_t v46 = (uint64_t)v62;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t, uint64_t))(v44 + 40))(v64, v40, v59, a3, v44);
  sub_25A5851D4(v61, (uint64_t)v10);
  uint64_t v47 = type metadata accessor for TransportReply();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v47 - 8) + 56))(v10, 0, 1, v47);
  v45(v46, v10);
  swift_release();
  sub_25A570C60((uint64_t)v10, &qword_26A429D70);
  return sub_25A584FE4(v46, (uint64_t (*)(void))type metadata accessor for LazyPropertyList);
}

uint64_t Transport.activate<A>(forReceivingEvents:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  type metadata accessor for TransportEvent();
  uint64_t v10 = sub_25A623000();
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = &v16[-v11];
  uint64_t v17 = a2;
  uint64_t v18 = a3;
  uint64_t v19 = a4;
  uint64_t v20 = a5;
  uint64_t v21 = v5;
  swift_checkMetadataState();
  uint64_t v13 = *MEMORY[0x263F8F580];
  uint64_t v14 = sub_25A623000();
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 104))(v12, v13, v14);
  return sub_25A623090();
}

uint64_t sub_25A581BC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for TransportEvent();
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v12 - v5;
  (*(void (**)(char *, uint64_t))(v7 + 16))((char *)&v12 - v5, a1);
  uint64_t v8 = type metadata accessor for TransportMessage();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = 1;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8) != 1)
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(a2, v6, v8);
    uint64_t v10 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a2, v10, 1, v8);
}

uint64_t sub_25A581D44()
{
  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_25A581D54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_25A581BC0(a1, a2);
}

uint64_t type metadata accessor for TransportMessage()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_25A581D78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v74 = a6;
  uint64_t v67 = a2;
  uint64_t v63 = a1;
  type metadata accessor for TransportEvent();
  uint64_t v11 = sub_25A623030();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v55 - v14;
  uint64_t v77 = 0;
  unint64_t v78 = 0xE000000000000000;
  sub_25A623390();
  uint64_t v62 = v77;
  unint64_t v69 = v78;
  uint64_t v79 = a3;
  uint64_t v80 = a5;
  uint64_t v16 = __swift_allocate_boxed_opaque_existential_1(&v77);
  uint64_t v17 = *(void *)(a3 - 8);
  uint64_t v59 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v17 + 16);
  uint64_t v60 = (uint64_t (*)(uint64_t, uint64_t))(v17 + 16);
  v59(v16, a2, a3);
  uint64_t v18 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  uint64_t v64 = v12 + 16;
  uint64_t v73 = v18;
  uint64_t v19 = v15;
  uint64_t v70 = v11;
  v18(v15, a1, v11);
  uint64_t v20 = *(unsigned __int8 *)(v12 + 80);
  uint64_t v76 = ((v20 + 48) & ~v20) + v13;
  uint64_t v21 = (v20 + 48) & ~v20;
  uint64_t v71 = v21;
  uint64_t v68 = v20 | 7;
  uint64_t v22 = (char *)swift_allocObject();
  *((void *)v22 + 2) = a3;
  *((void *)v22 + 3) = a4;
  uint64_t v23 = v74;
  *((void *)v22 + 4) = a5;
  *((void *)v22 + 5) = v23;
  uint64_t v24 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
  uint64_t v72 = v12 + 32;
  uint64_t v75 = v24;
  v24(&v22[v21], v15, v11);
  uint64_t v65 = static TransportInterface.makeOneWayMessageRelay(for:using:)((uint64_t)&v77, (uint64_t)sub_25A587BB0, (uint64_t)v22, a4, v23);
  uint64_t v61 = v25;
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v77);
  uint64_t v26 = a3;
  uint64_t v79 = a3;
  uint64_t v80 = a5;
  uint64_t v58 = a5;
  uint64_t v27 = __swift_allocate_boxed_opaque_existential_1(&v77);
  uint64_t v57 = a3;
  v59(v27, v67, a3);
  uint64_t v28 = v63;
  uint64_t v29 = v70;
  v73(v19, v63, v70);
  int v30 = (char *)swift_allocObject();
  *((void *)v30 + 2) = v26;
  *((void *)v30 + 3) = a4;
  *((void *)v30 + 4) = a5;
  *((void *)v30 + 5) = v23;
  v75(&v30[v71], v19, v29);
  uint64_t v66 = a4;
  uint64_t v31 = static TransportInterface.makeTwoWayMessageRelay(for:using:)((uint64_t)&v77, (uint64_t)sub_25A587BB0, (uint64_t)v30, a4, v23);
  uint64_t v33 = v32;
  uint64_t v59 = (void (*)(uint64_t *, uint64_t, uint64_t))v32;
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v77);
  uint64_t v34 = (void *)swift_allocObject();
  uint64_t v35 = v61;
  unint64_t v36 = v69;
  v34[2] = v62;
  uint64_t v34[3] = v36;
  uint64_t v37 = v65;
  v34[4] = v65;
  v34[5] = v35;
  v34[6] = v31;
  v34[7] = v33;
  uint64_t v60 = v31;
  uint64_t v56 = v19;
  uint64_t v38 = v70;
  v73(v19, v28, v70);
  uint64_t v39 = (char *)swift_allocObject();
  uint64_t v40 = v57;
  uint64_t v41 = v66;
  *((void *)v39 + 2) = v57;
  *((void *)v39 + 3) = v41;
  uint64_t v42 = v58;
  uint64_t v43 = v74;
  uint64_t v44 = v75;
  *((void *)v39 + 4) = v58;
  *((void *)v39 + 5) = v43;
  v44(&v39[v71], v19, v38);
  uint64_t v45 = v42;
  uint64_t v46 = *(void (**)(uint64_t (*)(uint64_t, uint64_t), void *, uint64_t (*)(), char *, uint64_t, uint64_t))(v42 + 24);
  swift_bridgeObjectRetain();
  sub_25A587B9C((uint64_t)v37);
  sub_25A587B9C((uint64_t)v31);
  uint64_t v47 = v40;
  v46(sub_25A587CD0, v34, sub_25A587CF8, v39, v40, v45);
  swift_release();
  swift_release();
  uint64_t v48 = v56;
  uint64_t v49 = v70;
  v73(v56, v63, v70);
  int v50 = (char *)swift_allocObject();
  uint64_t v51 = v66;
  *((void *)v50 + 2) = v47;
  *((void *)v50 + 3) = v51;
  uint64_t v52 = v74;
  uint64_t v53 = v75;
  *((void *)v50 + 4) = v45;
  *((void *)v50 + 5) = v52;
  v53(&v50[v71], v48, v49);
  sub_25A622AE0();
  swift_bridgeObjectRelease();
  sub_25A585334((uint64_t)v65);
  sub_25A585334((uint64_t)v60);
  return swift_release();
}

uint64_t (*static TransportInterface.makeOneWayMessageRelay(for:using:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5))(uint64_t a1)
{
  if (swift_getAssociatedTypeWitness() == MEMORY[0x263F8E628]) {
    return 0;
  }
  sub_25A585248(a1, (uint64_t)v13);
  uint64_t v11 = (void *)swift_allocObject();
  v11[2] = a4;
  uint64_t v11[3] = a5;
  v11[4] = a2;
  v11[5] = a3;
  v11[6] = v5;
  sub_25A5852B0(v13, (uint64_t)(v11 + 7));
  swift_retain();
  return sub_25A5852C8;
}

uint64_t sub_25A5823A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v31 = a2;
  uint64_t v9 = type metadata accessor for TransportMessage();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v29 = a6;
  int v30 = (char *)&v26 - v11;
  uint64_t v28 = a4;
  uint64_t v12 = type metadata accessor for TransportEvent();
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v26 - v13;
  uint64_t v15 = sub_25A622FF0();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)&v26 - v17;
  uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  uint64_t v27 = a1;
  uint64_t v20 = a1;
  uint64_t v21 = v19;
  v19(v14, v20, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v14, 0, 1, v9);
  sub_25A623030();
  sub_25A623010();
  LODWORD(v14) = (*(uint64_t (**)(char *, uint64_t))(v16 + 88))(v18, v15);
  int v22 = *MEMORY[0x263F8F550];
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  if (v14 == v22)
  {
    uint64_t v24 = v30;
    v21(v30, v27, v9);
    type metadata accessor for TransportInvalidated();
    swift_getWitnessTable();
    swift_allocError();
    (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(v25, v24, v9);
    return swift_willThrow();
  }
  return result;
}

uint64_t (*static TransportInterface.makeTwoWayMessageRelay(for:using:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5))(uint64_t a1, uint64_t a2)
{
  if (swift_getAssociatedTypeWitness() == MEMORY[0x263F8E628]) {
    return 0;
  }
  sub_25A585248(a1, (uint64_t)v13);
  uint64_t v11 = (void *)swift_allocObject();
  v11[2] = a4;
  uint64_t v11[3] = a5;
  v11[4] = a2;
  v11[5] = a3;
  v11[6] = v5;
  sub_25A5852B0(v13, (uint64_t)(v11 + 7));
  swift_retain();
  return sub_25A585320;
}

uint64_t sub_25A582764(uint64_t a1, uint64_t a2)
{
  return sub_25A582788(a1, a2);
}

uint64_t sub_25A582788(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A429D70);
  uint64_t v6 = MEMORY[0x270FA5388](v5 - 8);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v18 - v9;
  uint64_t v11 = type metadata accessor for TransportReply();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25A57E650(a2, (uint64_t)v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_25A570C60((uint64_t)v10, &qword_26A429D70);
    uint64_t v15 = (void (*)(uint64_t))v2[2];
    if (v15)
    {
      swift_retain();
      v15(a1);
      return sub_25A585334((uint64_t)v15);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v8, 1, 1, v11);
      sub_25A58753C(0xD000000000000010, 0x800000025A636890, (uint64_t)v8, *v2, v2[1]);
      return sub_25A570C60((uint64_t)v8, &qword_26A429D70);
    }
  }
  else
  {
    sub_25A57E714((uint64_t)v10, (uint64_t)v14);
    uint64_t v17 = (void (*)(uint64_t, char *))v2[4];
    if (v17)
    {
      swift_retain();
      v17(a1, v14);
      sub_25A585334((uint64_t)v17);
    }
    else
    {
      sub_25A5851D4((uint64_t)v14, (uint64_t)v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v8, 0, 1, v11);
      sub_25A58753C(0xD000000000000010, 0x800000025A6368B0, (uint64_t)v8, *v2, v2[1]);
      sub_25A570C60((uint64_t)v8, &qword_26A429D70);
    }
    return sub_25A584FE4((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for TransportReply);
  }
}

uint64_t TransportReceiverProtocol.handleMessage@Sendable (_:reply:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A429D70);
  uint64_t v9 = MEMORY[0x270FA5388](v8 - 8);
  uint64_t v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v23 - v12;
  uint64_t v14 = type metadata accessor for TransportReply();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v23 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25A57E650(a2, (uint64_t)v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    sub_25A570C60((uint64_t)v13, &qword_26A429D70);
    uint64_t v18 = (void (*)(uint64_t))(*(uint64_t (**)(uint64_t, uint64_t))(a4 + 16))(a3, a4);
    if (v18)
    {
      uint64_t v19 = (uint64_t)v18;
      v18(a1);
      return sub_25A585334(v19);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v11, 1, 1, v14);
      TransportReceiverProtocol.informNotHandled(_:reply:)((char *)0xD000000000000010, (char *)0x800000025A636890, (uint64_t)v11, a3, a4);
      return sub_25A570C60((uint64_t)v11, &qword_26A429D70);
    }
  }
  else
  {
    sub_25A57E714((uint64_t)v13, (uint64_t)v17);
    uint64_t v21 = (void (*)(uint64_t, char *))(*(uint64_t (**)(uint64_t, uint64_t))(a4 + 24))(a3, a4);
    if (v21)
    {
      uint64_t v22 = (uint64_t)v21;
      v21(a1, v17);
      sub_25A585334(v22);
    }
    else
    {
      sub_25A5851D4((uint64_t)v17, (uint64_t)v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v11, 0, 1, v14);
      TransportReceiverProtocol.informNotHandled(_:reply:)((char *)0xD000000000000010, (char *)0x800000025A6368B0, (uint64_t)v11, a3, a4);
      sub_25A570C60((uint64_t)v11, &qword_26A429D70);
    }
    return sub_25A584FE4((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for TransportReply);
  }
}

uint64_t sub_25A582D20()
{
  uint64_t v0 = type metadata accessor for TransportEvent();
  MEMORY[0x270FA5388](v0);
  uint64_t v2 = (char *)&v9 - v1;
  uint64_t v3 = sub_25A622FF0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v9 - v5;
  uint64_t v7 = type metadata accessor for TransportMessage();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v2, 1, 1, v7);
  sub_25A623030();
  sub_25A623010();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t Transport.activate(interruptionHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_25A623390();
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = 0;
  *(void *)(v8 + 24) = 0xE000000000000000;
  *(_OWORD *)(v8 + 32) = 0u;
  *(_OWORD *)(v8 + 48) = 0u;
  uint64_t v9 = *(void (**)(uint64_t (*)(uint64_t, uint64_t), uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a4 + 24);
  swift_bridgeObjectRetain();
  v9(sub_25A589670, v8, a1, a2, a3, a4);
  swift_bridgeObjectRelease();

  return swift_release();
}

uint64_t TransportReceiverProtocol.informNotHandled(_:reply:)(char *a1, char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v56 = a3;
  uint64_t v57 = a2;
  uint64_t v53 = a1;
  uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A429D78);
  MEMORY[0x270FA5388](v49);
  uint64_t v52 = (uint8_t **)((char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = sub_25A622C10();
  uint64_t v50 = *(void *)(v8 - 8);
  uint64_t v51 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v48 = (char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A429D70);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v58 = (uint64_t)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_25A622C70();
  uint64_t v54 = *(void *)(v12 - 8);
  uint64_t v55 = v12;
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v45 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_25A6227F0();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v45 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v21 = (char *)&v45 - v20;
  uint64_t v59 = 0;
  unint64_t v60 = 0xE000000000000000;
  sub_25A623210();
  uint64_t v22 = (*(uint64_t (**)(uint64_t, uint64_t))(a5 + 8))(a4, a5);
  unint64_t v24 = v23;
  swift_bridgeObjectRelease();
  uint64_t v59 = v22;
  unint64_t v60 = v24;
  sub_25A622E00();
  sub_25A622E00();
  sub_25A622800();
  sub_25A622C40();
  uint64_t v25 = *(void (**)(char *, char *, uint64_t))(v16 + 16);
  uint64_t v57 = v21;
  v25(v19, v21, v15);
  uint64_t v53 = v14;
  uint64_t v26 = sub_25A622C60();
  os_log_type_t v27 = sub_25A623130();
  BOOL v28 = os_log_type_enabled(v26, v27);
  uint64_t v47 = (void (*)(uint64_t, char *, uint64_t))v25;
  if (v28)
  {
    uint64_t v29 = (uint8_t *)swift_slowAlloc();
    int v30 = (void *)swift_slowAlloc();
    uint64_t v46 = v16;
    *(_DWORD *)uint64_t v29 = 138543362;
    uint64_t v45 = v29 + 4;
    sub_25A585498(&qword_26A429E70);
    swift_allocError();
    v25(v31, v19, v15);
    uint64_t v32 = _swift_stdlib_bridgeErrorToNSError();
    uint64_t v59 = v32;
    uint64_t v33 = v46;
    sub_25A623190();
    *int v30 = v32;
    uint64_t v34 = *(void (**)(char *, uint64_t))(v33 + 8);
    v34(v19, v15);
    _os_log_impl(&dword_25A547000, v26, v27, "%{public}@", v29, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A429D88);
    swift_arrayDestroy();
    MEMORY[0x261140C30](v30, -1, -1);
    MEMORY[0x261140C30](v29, -1, -1);
  }
  else
  {
    uint64_t v34 = *(void (**)(char *, uint64_t))(v16 + 8);
    v34(v19, v15);
  }
  uint64_t v35 = v15;

  (*(void (**)(char *, uint64_t))(v54 + 8))(v53, v55);
  uint64_t v36 = v58;
  sub_25A57E650(v56, v58);
  uint64_t v37 = type metadata accessor for TransportReply();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 48))(v36, 1, v37) == 1)
  {
    v34(v57, v15);
    return sub_25A570C60(v36, &qword_26A429D70);
  }
  else
  {
    sub_25A585498(&qword_26A429E70);
    uint64_t v39 = (void *)swift_allocError();
    uint64_t v40 = v57;
    v47(v41, v57, v15);
    uint64_t v42 = v48;
    sub_25A622C20();
    uint64_t v43 = (uint64_t)v52;
    *uint64_t v52 = v39;
    swift_storeEnumTagMultiPayload();
    id v44 = v39;
    __swift_instantiateConcreteTypeFromMangledName(qword_26A429C58);
    sub_25A622640();
    sub_25A570C60(v43, &qword_26A429D78);
    (*(void (**)(char *, uint64_t))(v50 + 8))(v42, v51);
    v34(v40, v35);

    return sub_25A584FE4(v36, (uint64_t (*)(void))type metadata accessor for TransportReply);
  }
}

uint64_t sub_25A583628(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v6[3] = MEMORY[0x263F8D310];
  v6[4] = MEMORY[0x263F60640];
  v6[0] = a1;
  v6[1] = a2;
  sub_25A622710();
  uint64_t v4 = sub_25A6227C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a3, v4);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
}

uint64_t static TransportInterface.unarchive<A>(_:for:)@<X0>(void *a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v44 = a4;
  uint64_t v38 = a5;
  uint64_t v9 = sub_25A6227C0();
  uint64_t v39 = *(void *)(v9 - 8);
  uint64_t v40 = v9;
  uint64_t v10 = MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v10);
  uint64_t v15 = (char *)&v36 - v14;
  MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v36 - v16;
  uint64_t v18 = swift_conformsToProtocol2();
  if (v18) {
    uint64_t v19 = v18;
  }
  else {
    uint64_t v19 = 0;
  }
  if (v18) {
    uint64_t v20 = a3;
  }
  else {
    uint64_t v20 = 0;
  }
  if (!v20)
  {
    uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
    *(void *)&long long v41 = a3;
    sub_25A585348();
    swift_allocError();
    uint64_t v31 = v44;
    *(void *)uint64_t v32 = a2;
    *(void *)(v32 + 8) = v31;
    sub_25A56D80C(&v41, (_OWORD *)(v32 + 16));
    return swift_willThrow();
  }
  uint64_t v44 = v19;
  uint64_t result = LazyPropertyList.propertyList.getter((uint64_t)v17);
  if (v5) {
    return result;
  }
  uint64_t v37 = 0;
  uint64_t v23 = a1[3];
  uint64_t v22 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v23);
  uint64_t v24 = (*(uint64_t (**)(uint64_t, uint64_t))(v22 + 40))(v23, v22);
  if (v25)
  {
    uint64_t v26 = v24;
    uint64_t v27 = v25;
    uint64_t v29 = v39;
    uint64_t v28 = v40;
    (*(void (**)(char *, char *, uint64_t))(v39 + 16))(v15, v17, v40);
    uint64_t MetatypeMetadata = v20;
    uint64_t v43 = v44;
    __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v41);
    uint64_t v30 = v37;
    sub_25A583628(v26, v27, (uint64_t)v15);
    if (v30)
    {
      (*(void (**)(char *, uint64_t))(v29 + 8))(v17, v28);
      return __swift_deallocate_boxed_opaque_existential_1((uint64_t)&v41);
    }
    (*(void (**)(char *, uint64_t))(v29 + 8))(v17, v28);
  }
  else
  {
    uint64_t v34 = v39;
    uint64_t v33 = v40;
    (*(void (**)(char *, char *, uint64_t))(v39 + 16))(v12, v17, v40);
    uint64_t MetatypeMetadata = v20;
    uint64_t v43 = v44;
    __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v41);
    uint64_t v35 = v37;
    sub_25A622B00();
    if (v35)
    {
      (*(void (**)(char *, uint64_t))(v34 + 8))(v17, v33);
      return __swift_deallocate_boxed_opaque_existential_1((uint64_t)&v41);
    }
    (*(void (**)(char *, uint64_t))(v34 + 8))(v17, v33);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A429E80);
  return swift_dynamicCast();
}

uint64_t static TransportInterface.invalidatedError.getter@<X0>(uint64_t *a1@<X8>)
{
  a1[3] = sub_25A6227F0();
  a1[4] = sub_25A585498(qword_26A429E88);
  __swift_allocate_boxed_opaque_existential_1(a1);
  return sub_25A622800();
}

uint64_t sub_25A583A74(uint64_t a1, void (*a2)(char *), uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v16 = a2;
  uint64_t v17 = sub_25A622C70();
  MEMORY[0x270FA5388](v17);
  uint64_t v10 = type metadata accessor for TransportMessage();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v16 - v12;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  static TransportInterface.unarchive<A>(_:for:)(a5, a6, AssociatedTypeWitness, a7, (uint64_t)v13);
  swift_storeEnumTagMultiPayload();
  v16(v13);
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
}

uint64_t sub_25A583DBC(uint64_t a1, uint64_t a2, void (*a3)(char *), uint64_t a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8)
{
  v21[1] = a4;
  uint64_t v22 = a3;
  uint64_t v29 = a2;
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A429D78);
  MEMORY[0x270FA5388](v26);
  uint64_t v11 = sub_25A622C10();
  uint64_t v27 = *(void *)(v11 - 8);
  uint64_t v28 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v25 = (char *)v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_25A622C70();
  uint64_t v23 = *(void *)(v13 - 8);
  uint64_t v24 = v13;
  MEMORY[0x270FA5388](v13);
  uint64_t v14 = type metadata accessor for TransportMessage();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)v21 - v16;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  static TransportInterface.unarchive<A>(_:for:)(a6, a7, AssociatedTypeWitness, a8, (uint64_t)v17);
  type metadata accessor for TransportReply();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  sub_25A5851D4(v29, (uint64_t)&v17[*(int *)(TupleTypeMetadata2 + 48)]);
  swift_storeEnumTagMultiPayload();
  v22(v17);
  return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v17, v14);
}

uint64_t sub_25A58428C()
{
  strcpy((char *)v1, "Interface = ");
  sub_25A623500();
  sub_25A622E00();
  swift_bridgeObjectRelease();
  return v1[0];
}

uint64_t sub_25A5842F4()
{
  return 0;
}

uint64_t sub_25A584388(uint64_t a1)
{
  unint64_t v2 = sub_25A5874E8();

  return MEMORY[0x270F55A28](a1, v2);
}

uint64_t sub_25A5843C4(uint64_t a1)
{
  unint64_t v2 = sub_25A5874E8();

  return MEMORY[0x270F55A08](a1, v2);
}

uint64_t sub_25A584400()
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v2 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v4 = (char *)&v15 - v3;
  uint64_t v5 = swift_getAssociatedTypeWitness();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v15 - v7;
  uint64_t v9 = type metadata accessor for TransportMessage();
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v15 - v10;
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))((char *)&v15 - v10, v0, v9);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v11, AssociatedTypeWitness);
    uint64_t v15 = 0;
    unint64_t v16 = 0xE000000000000000;
    type metadata accessor for TransportReply();
    uint64_t v13 = (uint64_t)&v11[*(int *)(swift_getTupleTypeMetadata2() + 48)];
    sub_25A622E00();
    sub_25A623380();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, AssociatedTypeWitness);
    sub_25A584FE4(v13, (uint64_t (*)(void))type metadata accessor for TransportReply);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v11, v5);
    uint64_t v15 = 0;
    unint64_t v16 = 0xE000000000000000;
    sub_25A622E00();
    sub_25A623380();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  uint64_t v15 = 0;
  unint64_t v16 = 0xE000000000000000;
  sub_25A623210();
  sub_25A622E00();
  sub_25A622E00();
  swift_bridgeObjectRelease();
  return v15;
}

uint64_t sub_25A584788(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270F55A28](a1, WitnessTable);
}

uint64_t sub_25A5847DC(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270F55A08](a1, WitnessTable);
}

uint64_t sub_25A584830(uint64_t result, unsigned char **a2)
{
  uint64_t v2 = *a2;
  unsigned char *v2 = result;
  *a2 = v2 + 1;
  return result;
}

uint64_t sub_25A584840(uint64_t (**a1)(uint64_t, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*a1)(a2, a3, a4);
}

uint64_t sub_25A58487C(void (*a1)(void))
{
  a1();

  return _swift_stdlib_bridgeErrorToNSError();
}

uint64_t sub_25A5848B4(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_25A5848DC(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_25A584904(uint64_t *a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(void))
{
  uint64_t v6 = a4();
  sub_25A58497C(v6, v7, a3);
  uint64_t v8 = *a1 + 8;
  sub_25A623190();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v8;
  return result;
}

uint64_t sub_25A58497C(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_25A584A50(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    uint64_t ObjectType = swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_25A56D81C((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    uint64_t ObjectType = MEMORY[0x263F8DBE0];
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_25A56D81C((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  return v7;
}

uint64_t sub_25A584A50(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (void *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_25A6231A0();
            uint64_t result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    uint64_t result = sub_25A584C0C(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0) {
    goto LABEL_13;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  uint64_t v8 = sub_25A623260();
  if (!v8)
  {
    sub_25A623280();
    __break(1u);
LABEL_17:
    uint64_t result = sub_25A6232A0();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

uint64_t sub_25A584C0C(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = sub_25A584CA4(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_25A584E84(0, *(void *)(v2 + 16) + 1, 1, (char *)v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_25A584E84(v3 > 1, v4 + 1, 1, (char *)v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_25A584CA4(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_10;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = sub_25A584E1C(v2, 0);
      if (v2 < 0) {
        break;
      }
      unint64_t v4 = v3;
      uint64_t v5 = sub_25A623220();
      if (v6) {
        goto LABEL_14;
      }
      if (v5 == v2) {
        return (uint64_t)v4;
      }
      sub_25A623280();
      __break(1u);
LABEL_10:
      uint64_t v2 = sub_25A622E10();
      if (!v2) {
        return MEMORY[0x263F8EE78];
      }
    }
    sub_25A6232A0();
    __break(1u);
LABEL_14:
    uint64_t result = sub_25A623280();
    __break(1u);
  }
  else
  {
    return MEMORY[0x263F8EE78];
  }
  return result;
}

void *sub_25A584E1C(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return (void *)MEMORY[0x263F8EE78];
  }
  __swift_instantiateConcreteTypeFromMangledName(qword_26A42A028);
  unint64_t v4 = (void *)swift_allocObject();
  size_t v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_25A584E84(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(qword_26A42A028);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_25A6232A0();
  __break(1u);
  return result;
}

unsigned char **sub_25A584FD4(unsigned char **result, uint64_t a2, uint64_t a3, char a4)
{
  unint64_t v4 = *result;
  *unint64_t v4 = a4;
  *uint64_t result = v4 + 1;
  return result;
}

uint64_t sub_25A584FE4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_25A585044(uint64_t *a1, void **a2, uint64_t a3, uint64_t (*a4)(void))
{
  unint64_t v6 = (void *)a4();
  uint64_t v7 = *a1 + 8;
  sub_25A623190();
  *a1 = v7;
  int64_t v8 = *a2;
  if (*a2)
  {
    *int64_t v8 = v6;
    *a2 = v8 + 1;
  }
  else
  {
  }
}

uint64_t sub_25A5850FC()
{
  return *(void *)v0;
}

uint64_t sub_25A585104()
{
  return *(void *)(v0 + 16);
}

uint64_t sub_25A58510C(void *a1, uint64_t a2)
{
  uint64_t v4 = v2[3];
  uint64_t v5 = v2[7];
  uint64_t v6 = v2[8];
  *a1 = v2[6];
  a1[1] = v5;
  uint64_t v7 = *(void *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(a2, v6, v4);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v7 + 56))(a2, 0, 1, v4);

  return swift_bridgeObjectRetain();
}

uint64_t sub_25A5851D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TransportReply();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_25A585238(uint64_t a1)
{
  return sub_25A581D78(a1, v1[6], v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_25A585248(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_25A5852B0(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_25A5852C8(uint64_t a1)
{
  return sub_25A583A74(a1, *(void (**)(char *))(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), (void *)(v1 + 56), *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t objectdestroy_4Tm()
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);

  return MEMORY[0x270FA0238](v0, 96, 7);
}

uint64_t sub_25A585320(uint64_t a1, uint64_t a2)
{
  return sub_25A583DBC(a1, a2, *(void (**)(char *))(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 48), (void *)(v2 + 56), *(void *)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_25A585334(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

unint64_t sub_25A585348()
{
  unint64_t result = qword_26A429E78;
  if (!qword_26A429E78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A429E78);
  }
  return result;
}

void *__swift_project_boxed_opaque_existential_1(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

uint64_t *__swift_allocate_boxed_opaque_existential_1(uint64_t *a1)
{
  uint64_t v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t __swift_deallocate_boxed_opaque_existential_1(uint64_t result)
{
  if ((*(_DWORD *)(*(void *)(*(void *)(result + 24) - 8) + 80) & 0x20000) != 0) {
    JUMPOUT(0x261140C30);
  }
  return result;
}

uint64_t sub_25A585498(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_25A6227F0();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_25A5854DC(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 24);
}

uint64_t sub_25A5854E4()
{
  uint64_t result = type metadata accessor for TransportMessage();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t *sub_25A585560(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unint64_t v4 = *(void *)(v3 + 64);
  uint64_t v5 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(qword_26A429C58);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(_DWORD *)(v8 + 80);
  uint64_t v10 = v6 + v9;
  uint64_t v11 = (v6 + v9) & ~v9;
  if (v11 + *(void *)(v8 + 64) <= v4) {
    unint64_t v12 = v4;
  }
  else {
    unint64_t v12 = v11 + *(void *)(v8 + 64);
  }
  size_t v13 = v12 + 1;
  uint64_t v14 = (*(unsigned char *)(v3 + 80) | *(unsigned char *)(v5 + 80) | *(unsigned char *)(v8 + 80));
  if (v14 > 7
    || ((*(_DWORD *)(v3 + 80) | *(_DWORD *)(v5 + 80) | *(_DWORD *)(v8 + 80)) & 0x100000) != 0
    || v13 > 0x18)
  {
    uint64_t v17 = *a2;
    *a1 = *a2;
    uint64_t v18 = (uint64_t *)(v17 + ((v14 + 16) & ~v14));
    swift_retain();
  }
  else
  {
    uint64_t v19 = v7;
    unsigned int v20 = *((unsigned __int8 *)a2 + v12);
    if (v20 > 1)
    {
      uint64_t v18 = a1;
      memcpy(a1, a2, v13);
    }
    else if (v20 == 1)
    {
      uint64_t v21 = ~v9;
      uint64_t v18 = a1;
      (*(void (**)(void))(v5 + 16))();
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 16))(((unint64_t)a1 + v10) & v21, ((unint64_t)a2 + v10) & v21, v19);
      *((unsigned char *)a1 + v12) = 1;
    }
    else
    {
      uint64_t v18 = a1;
      (*(void (**)(void))(v3 + 16))();
      *((unsigned char *)a1 + v12) = 0;
    }
  }
  return v18;
}

uint64_t sub_25A5857D4(uint64_t a1)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v17 = *(void *)(AssociatedTypeWitness - 8);
  unint64_t v3 = *(void *)(v17 + 64);
  uint64_t v4 = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t result = __swift_instantiateConcreteTypeFromMangledName(qword_26A429C58);
  uint64_t v8 = *(unsigned __int8 *)(*(void *)(result - 8) + 80);
  uint64_t v9 = v6 + v8;
  unint64_t v10 = (v9 & ~v8) + *(void *)(*(void *)(result - 8) + 64);
  if (v10 <= v3) {
    unint64_t v10 = v3;
  }
  unsigned int v11 = *(unsigned __int8 *)(a1 + v10);
  if (v11 <= 1)
  {
    uint64_t v12 = result;
    if (v11 == 1)
    {
      uint64_t v13 = ~v8;
      uint64_t v18 = *(void *)(result - 8);
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
      uint64_t v15 = (v9 + a1) & v13;
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t))(v18 + 8);
      uint64_t v16 = v12;
    }
    else
    {
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t))(v17 + 8);
      uint64_t v15 = a1;
      uint64_t v16 = AssociatedTypeWitness;
    }
    return v14(v15, v16);
  }
  return result;
}

void *sub_25A5859E4(void *a1, unsigned __int8 *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v19 = *(void *)(AssociatedTypeWitness - 8);
  unint64_t v5 = *(void *)(v19 + 64);
  uint64_t v6 = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(qword_26A429C58);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v12 = v8 + v11;
  uint64_t v13 = (v8 + v11) & ~v11;
  if (v13 + *(void *)(v10 + 64) <= v5) {
    unint64_t v14 = v5;
  }
  else {
    unint64_t v14 = v13 + *(void *)(v10 + 64);
  }
  unsigned int v15 = a2[v14];
  if (v15 > 1)
  {
    memcpy(a1, a2, v14 + 1);
  }
  else if (v15 == 1)
  {
    uint64_t v16 = v9;
    uint64_t v17 = ~v11;
    (*(void (**)(void *, unsigned __int8 *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v10 + 16))(((unint64_t)a1 + v12) & v17, (unint64_t)&a2[v12] & v17, v16);
    *((unsigned char *)a1 + v14) = 1;
  }
  else
  {
    (*(void (**)(void *, unsigned __int8 *, uint64_t))(v19 + 16))(a1, a2, AssociatedTypeWitness);
    *((unsigned char *)a1 + v14) = 0;
  }
  return a1;
}

unsigned __int8 *sub_25A585C0C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v27 = *(void *)(AssociatedTypeWitness - 8);
  unint64_t v5 = *(void *)(v27 + 64);
  uint64_t v6 = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(qword_26A429C58);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v12 = ~v11;
  uint64_t v13 = v8 + v11;
  unint64_t v14 = ((v8 + v11) & ~v11) + *(void *)(v10 + 64);
  if (v14 > v5) {
    unint64_t v5 = v14;
  }
  unsigned int v15 = a1[v5];
  unsigned int v16 = a2[v5];
  if (v15 > 1)
  {
    if (v16 <= 1)
    {
      if (v16 == 1)
      {
        uint64_t v18 = v12;
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v7 + 16))(a1, a2, v6);
        unint64_t v19 = (unint64_t)&a1[v13] & v18;
        unint64_t v20 = (unint64_t)&a2[v13] & v18;
LABEL_29:
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v10 + 16))(v19, v20, v9);
        a1[v5] = 1;
        return a1;
      }
      goto LABEL_31;
    }
    goto LABEL_14;
  }
  if (v16 > 1)
  {
    if (v15 == 1)
    {
      uint64_t v21 = v12;
      (*(void (**)(unsigned __int8 *, uint64_t))(v7 + 8))(a1, v6);
      (*(void (**)(unint64_t, uint64_t))(v10 + 8))((unint64_t)&a1[v13] & v21, v9);
    }
    else
    {
      (*(void (**)(unsigned __int8 *, uint64_t))(v27 + 8))(a1, AssociatedTypeWitness);
    }
LABEL_14:
    memcpy(a1, a2, v5 + 1);
    return a1;
  }
  if (a1 != a2)
  {
    uint64_t v17 = v12;
    if (v15 == 1)
    {
      (*(void (**)(unsigned __int8 *, uint64_t))(v7 + 8))(a1, v6);
      (*(void (**)(unint64_t, uint64_t))(v10 + 8))((unint64_t)&a1[v13] & v17, v9);
    }
    else
    {
      (*(void (**)(unsigned __int8 *, uint64_t))(v27 + 8))(a1, AssociatedTypeWitness);
    }
    unsigned int v22 = a2[v5];
    unsigned int v23 = v22 - 2;
    if (v22 >= 2)
    {
      if (v5 <= 3) {
        uint64_t v24 = v5;
      }
      else {
        uint64_t v24 = 4;
      }
      switch(v24)
      {
        case 1:
          int v25 = *a2;
          break;
        case 2:
          int v25 = *(unsigned __int16 *)a2;
          break;
        case 3:
          int v25 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          break;
        case 4:
          int v25 = *(_DWORD *)a2;
          break;
        default:
          goto LABEL_27;
      }
      if (v5 < 4)
      {
        if ((v25 | (v23 << (8 * v5))) == 0xFFFFFFFF) {
          goto LABEL_28;
        }
        goto LABEL_31;
      }
      unsigned int v22 = v25 + 2;
    }
LABEL_27:
    if (v22 == 1)
    {
LABEL_28:
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v7 + 16))(a1, a2, v6);
      unint64_t v19 = (unint64_t)&a1[v13] & v17;
      unint64_t v20 = (unint64_t)&a2[v13] & v17;
      goto LABEL_29;
    }
LABEL_31:
    (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v27 + 16))(a1, a2, AssociatedTypeWitness);
    a1[v5] = 0;
  }
  return a1;
}

void *sub_25A585FE0(void *a1, unsigned __int8 *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v19 = *(void *)(AssociatedTypeWitness - 8);
  unint64_t v5 = *(void *)(v19 + 64);
  uint64_t v6 = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(qword_26A429C58);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v12 = v8 + v11;
  uint64_t v13 = (v8 + v11) & ~v11;
  if (v13 + *(void *)(v10 + 64) <= v5) {
    unint64_t v14 = v5;
  }
  else {
    unint64_t v14 = v13 + *(void *)(v10 + 64);
  }
  unsigned int v15 = a2[v14];
  if (v15 > 1)
  {
    memcpy(a1, a2, v14 + 1);
  }
  else if (v15 == 1)
  {
    uint64_t v16 = v9;
    uint64_t v17 = ~v11;
    (*(void (**)(void *, unsigned __int8 *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v10 + 32))(((unint64_t)a1 + v12) & v17, (unint64_t)&a2[v12] & v17, v16);
    *((unsigned char *)a1 + v14) = 1;
  }
  else
  {
    (*(void (**)(void *, unsigned __int8 *, uint64_t))(v19 + 32))(a1, a2, AssociatedTypeWitness);
    *((unsigned char *)a1 + v14) = 0;
  }
  return a1;
}

unsigned __int8 *sub_25A586208(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v27 = *(void *)(AssociatedTypeWitness - 8);
  unint64_t v5 = *(void *)(v27 + 64);
  uint64_t v6 = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(qword_26A429C58);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v12 = ~v11;
  uint64_t v13 = v8 + v11;
  unint64_t v14 = ((v8 + v11) & ~v11) + *(void *)(v10 + 64);
  if (v14 > v5) {
    unint64_t v5 = v14;
  }
  unsigned int v15 = a1[v5];
  unsigned int v16 = a2[v5];
  if (v15 > 1)
  {
    if (v16 <= 1)
    {
      if (v16 == 1)
      {
        uint64_t v18 = v12;
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v7 + 32))(a1, a2, v6);
        unint64_t v19 = (unint64_t)&a1[v13] & v18;
        unint64_t v20 = (unint64_t)&a2[v13] & v18;
LABEL_29:
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v10 + 32))(v19, v20, v9);
        a1[v5] = 1;
        return a1;
      }
      goto LABEL_31;
    }
    goto LABEL_14;
  }
  if (v16 > 1)
  {
    if (v15 == 1)
    {
      uint64_t v21 = v12;
      (*(void (**)(unsigned __int8 *, uint64_t))(v7 + 8))(a1, v6);
      (*(void (**)(unint64_t, uint64_t))(v10 + 8))((unint64_t)&a1[v13] & v21, v9);
    }
    else
    {
      (*(void (**)(unsigned __int8 *, uint64_t))(v27 + 8))(a1, AssociatedTypeWitness);
    }
LABEL_14:
    memcpy(a1, a2, v5 + 1);
    return a1;
  }
  if (a1 != a2)
  {
    uint64_t v17 = v12;
    if (v15 == 1)
    {
      (*(void (**)(unsigned __int8 *, uint64_t))(v7 + 8))(a1, v6);
      (*(void (**)(unint64_t, uint64_t))(v10 + 8))((unint64_t)&a1[v13] & v17, v9);
    }
    else
    {
      (*(void (**)(unsigned __int8 *, uint64_t))(v27 + 8))(a1, AssociatedTypeWitness);
    }
    unsigned int v22 = a2[v5];
    unsigned int v23 = v22 - 2;
    if (v22 >= 2)
    {
      if (v5 <= 3) {
        uint64_t v24 = v5;
      }
      else {
        uint64_t v24 = 4;
      }
      switch(v24)
      {
        case 1:
          int v25 = *a2;
          break;
        case 2:
          int v25 = *(unsigned __int16 *)a2;
          break;
        case 3:
          int v25 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          break;
        case 4:
          int v25 = *(_DWORD *)a2;
          break;
        default:
          goto LABEL_27;
      }
      if (v5 < 4)
      {
        if ((v25 | (v23 << (8 * v5))) == 0xFFFFFFFF) {
          goto LABEL_28;
        }
        goto LABEL_31;
      }
      unsigned int v22 = v25 + 2;
    }
LABEL_27:
    if (v22 == 1)
    {
LABEL_28:
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v7 + 32))(a1, a2, v6);
      unint64_t v19 = (unint64_t)&a1[v13] & v17;
      unint64_t v20 = (unint64_t)&a2[v13] & v17;
      goto LABEL_29;
    }
LABEL_31:
    (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v27 + 32))(a1, a2, AssociatedTypeWitness);
    a1[v5] = 0;
  }
  return a1;
}

uint64_t sub_25A5865DC(unsigned __int16 *a1, unsigned int a2)
{
  unint64_t v4 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  uint64_t v5 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  uint64_t v6 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(qword_26A429C58) - 8);
  unint64_t v7 = ((v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80)) + *(void *)(v6 + 64);
  if (v7 <= v4) {
    unint64_t v8 = v4;
  }
  else {
    unint64_t v8 = v7;
  }
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_23;
  }
  unint64_t v9 = v8 + 1;
  char v10 = 8 * (v8 + 1);
  if ((v8 + 1) > 3) {
    goto LABEL_7;
  }
  unsigned int v13 = ((a2 + ~(-1 << v10) - 253) >> v10) + 1;
  if (HIWORD(v13))
  {
    int v11 = *(_DWORD *)((char *)a1 + v9);
    if (v11) {
      goto LABEL_15;
    }
LABEL_23:
    unsigned int v15 = *((unsigned __int8 *)a1 + v8);
    if (v15 >= 2) {
      unsigned int v16 = (v15 ^ 0xFF) + 1;
    }
    else {
      unsigned int v16 = 0;
    }
    if (v16 >= 2) {
      return v16 - 1;
    }
    else {
      return 0;
    }
  }
  if (v13 > 0xFF)
  {
    int v11 = *(unsigned __int16 *)((char *)a1 + v9);
    if (*(unsigned __int16 *)((char *)a1 + v9)) {
      goto LABEL_15;
    }
    goto LABEL_23;
  }
  if (v13 < 2) {
    goto LABEL_23;
  }
LABEL_7:
  int v11 = *((unsigned __int8 *)a1 + v9);
  if (!*((unsigned char *)a1 + v9)) {
    goto LABEL_23;
  }
LABEL_15:
  int v14 = (v11 - 1) << v10;
  if (v9 > 3) {
    int v14 = 0;
  }
  if (v9)
  {
    if (v9 > 3) {
      LODWORD(v9) = 4;
    }
    switch((int)v9)
    {
      case 2:
        LODWORD(v9) = *a1;
        break;
      case 3:
        LODWORD(v9) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v9) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v9) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return (v9 | v14) + 254;
}

void sub_25A5867F8(unsigned char *a1, unsigned int a2, unsigned int a3)
{
  unint64_t v6 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  uint64_t v7 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  uint64_t v8 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(qword_26A429C58) - 8);
  unint64_t v9 = ((v7 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80)) + *(void *)(v8 + 64);
  if (v9 <= v6) {
    unint64_t v9 = v6;
  }
  size_t v10 = v9 + 1;
  if (a3 < 0xFE)
  {
    int v11 = 0;
  }
  else if (v10 <= 3)
  {
    unsigned int v14 = ((a3 + ~(-1 << (8 * v10)) - 253) >> (8 * v10)) + 1;
    if (HIWORD(v14))
    {
      int v11 = 4;
    }
    else if (v14 >= 0x100)
    {
      int v11 = 2;
    }
    else
    {
      int v11 = v14 > 1;
    }
  }
  else
  {
    int v11 = 1;
  }
  if (a2 > 0xFD)
  {
    unsigned int v12 = a2 - 254;
    if (v10 < 4)
    {
      int v13 = (v12 >> (8 * v10)) + 1;
      if (v9 != -1)
      {
        int v15 = v12 & ~(-1 << (8 * v10));
        bzero(a1, v10);
        if (v10 == 3)
        {
          *(_WORD *)a1 = v15;
          a1[2] = BYTE2(v15);
        }
        else if (v10 == 2)
        {
          *(_WORD *)a1 = v15;
        }
        else
        {
          *a1 = v15;
        }
      }
    }
    else
    {
      bzero(a1, v9 + 1);
      *(_DWORD *)a1 = v12;
      int v13 = 1;
    }
    switch(v11)
    {
      case 1:
        a1[v10] = v13;
        break;
      case 2:
        *(_WORD *)&a1[v10] = v13;
        break;
      case 3:
LABEL_34:
        __break(1u);
        JUMPOUT(0x25A586A7CLL);
      case 4:
        *(_DWORD *)&a1[v10] = v13;
        break;
      default:
        return;
    }
  }
  else
  {
    switch(v11)
    {
      case 1:
        a1[v10] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      case 2:
        *(_WORD *)&a1[v10] = 0;
        goto LABEL_22;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v10] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      default:
LABEL_22:
        if (a2) {
LABEL_23:
        }
          a1[v9] = ~(_BYTE)a2;
        break;
    }
  }
}

uint64_t sub_25A586AA4(uint64_t a1)
{
  unint64_t v2 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  uint64_t v3 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  uint64_t v4 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(qword_26A429C58) - 8);
  unint64_t v5 = ((v3 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80)) + *(void *)(v4 + 64);
  if (v5 <= v2) {
    unint64_t v5 = v2;
  }
  unsigned int v6 = *(unsigned __int8 *)(a1 + v5);
  if (v6 >= 2) {
    return (v6 ^ 0xFF) + 1;
  }
  else {
    return 0;
  }
}

void sub_25A586BB4(unsigned char *a1, unsigned int a2)
{
  unint64_t v4 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  uint64_t v5 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  uint64_t v6 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(qword_26A429C58) - 8);
  unint64_t v7 = ((v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80)) + *(void *)(v6 + 64);
  if (v7 <= v4) {
    unint64_t v7 = v4;
  }
  if (a2 > 0xFE)
  {
    size_t v8 = (v7 + 1);
    int v9 = -1 << (8 * (v7 + 1));
    if (v8 <= 3) {
      int v10 = ~v9;
    }
    else {
      int v10 = -1;
    }
    if (v8)
    {
      int v11 = v10 & (a2 - 255);
      if (v8 <= 3) {
        int v12 = v8;
      }
      else {
        int v12 = 4;
      }
      bzero(a1, v8);
      switch(v12)
      {
        case 2:
          *(_WORD *)a1 = v11;
          break;
        case 3:
          *(_WORD *)a1 = v11;
          a1[2] = BYTE2(v11);
          break;
        case 4:
          *(_DWORD *)a1 = v11;
          break;
        default:
          *a1 = v11;
          break;
      }
    }
  }
  else if (a2)
  {
    a1[v7] = -(char)a2;
  }
}

void sub_25A586D60()
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    v4[4] = *(void *)(AssociatedTypeWitness - 8) + 64;
    swift_getAssociatedTypeWitness();
    if (v2 <= 0x3F)
    {
      sub_25A57D4F4();
      if (v3 <= 0x3F)
      {
        swift_getTupleTypeLayout2();
        v4[5] = v4;
        swift_initEnumMetadataMultiPayload();
      }
    }
  }
}

uint64_t sub_25A586EC8(unsigned __int8 *a1)
{
  unint64_t v2 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  uint64_t v3 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  uint64_t v4 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(qword_26A429C58) - 8);
  unint64_t v5 = ((v3 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80)) + *(void *)(v4 + 64);
  if (v5 <= v2) {
    unint64_t v5 = v2;
  }
  uint64_t result = a1[v5];
  if (result >= 2)
  {
    if (v5 <= 3) {
      uint64_t v7 = v5;
    }
    else {
      uint64_t v7 = 4;
    }
    switch(v7)
    {
      case 1:
        int v8 = *a1;
        goto LABEL_12;
      case 2:
        int v8 = *(unsigned __int16 *)a1;
        goto LABEL_12;
      case 3:
        int v8 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_12;
      case 4:
        int v8 = *(_DWORD *)a1;
LABEL_12:
        unsigned int v9 = (v8 | ((result - 2) << (8 * v5))) + 2;
        unsigned int v10 = v8 + 2;
        if (v5 >= 4) {
          uint64_t result = v10;
        }
        else {
          uint64_t result = v9;
        }
        break;
      default:
        return result;
    }
  }
  return result;
}

void sub_25A587054(unsigned char *a1, unsigned int a2)
{
  uint64_t v4 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v5 = v4;
  if (a2 > 1)
  {
    size_t v9 = *(void *)(v4 + 64);
    uint64_t v10 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
    uint64_t v11 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(qword_26A429C58) - 8);
    unint64_t v12 = ((v10 + *(unsigned __int8 *)(v11 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))
        + *(void *)(v11 + 64);
    if (v12 > v9) {
      size_t v9 = v12;
    }
    unsigned int v13 = a2 - 2;
    if (v9 < 4)
    {
      unsigned int v14 = v13 >> (8 * v9);
      int v15 = v13 & ~(-1 << (8 * v9));
      a1[v9] = v14 + 2;
      bzero(a1, v9);
      if (v9 == 3)
      {
        *(_WORD *)a1 = v15;
        a1[2] = BYTE2(v15);
      }
      else if (v9 == 2)
      {
        *(_WORD *)a1 = v15;
      }
      else
      {
        *a1 = v15;
      }
    }
    else
    {
      a1[v9] = 2;
      bzero(a1, v9);
      *(_DWORD *)a1 = v13;
    }
  }
  else
  {
    uint64_t v6 = *(void *)(swift_getAssociatedTypeWitness() - 8);
    uint64_t v7 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(qword_26A429C58) - 8);
    unint64_t v8 = ((*(void *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))
       + *(void *)(v7 + 64);
    if (v8 <= *(void *)(v5 + 64)) {
      unint64_t v8 = *(void *)(v5 + 64);
    }
    a1[v8] = a2;
  }
}

uint64_t sub_25A5872A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 32);
}

uint64_t type metadata accessor for TransportSender()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t dispatch thunk of TransportSenderProtocol.transportDescription.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of TransportSenderProtocol.messageRelay.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of TransportSenderProtocol.encode<A>(message:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 40))();
}

uint64_t dispatch thunk of TransportReceiverProtocol.transportDescription.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of TransportReceiverProtocol.oneWayMessageRelay.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of TransportReceiverProtocol.twoWayMessageRelay.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t destroy for InvalidInterfaceType(uint64_t a1)
{
  return __swift_destroy_boxed_opaque_existential_1(a1 + 16);
}

uint64_t initializeWithCopy for InvalidInterfaceType(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 40);
  *(void *)(a1 + 40) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a1 + 16, a2 + 16);
  return a1;
}

uint64_t assignWithCopy for InvalidInterfaceType(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __swift_assign_boxed_opaque_existential_0((uint64_t *)(a1 + 16), (uint64_t *)(a2 + 16));
  return a1;
}

_OWORD *assignWithTake for InvalidInterfaceType(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(a1 + 1));
  long long v4 = a2[2];
  a1[1] = a2[1];
  a1[2] = v4;
  return a1;
}

ValueMetadata *type metadata accessor for InvalidInterfaceType()
{
  return &type metadata for InvalidInterfaceType;
}

unint64_t sub_25A58743C()
{
  unint64_t result = qword_26A42A010;
  if (!qword_26A42A010)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42A010);
  }
  return result;
}

unint64_t sub_25A587494()
{
  unint64_t result = qword_26A42A018;
  if (!qword_26A42A018)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42A018);
  }
  return result;
}

unint64_t sub_25A5874E8()
{
  unint64_t result = qword_26A42A020;
  if (!qword_26A42A020)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42A020);
  }
  return result;
}

uint64_t sub_25A58753C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t v53 = a3;
  uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A429D78);
  MEMORY[0x270FA5388](v46);
  uint64_t v49 = (uint8_t **)((char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = sub_25A622C10();
  uint64_t v47 = *(void *)(v8 - 8);
  uint64_t v48 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v45 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A429D70);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v55 = (uint64_t)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_25A622C70();
  uint64_t v51 = *(void *)(v12 - 8);
  uint64_t v52 = v12;
  MEMORY[0x270FA5388](v12);
  unsigned int v14 = (char *)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_25A6227F0();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  unint64_t v19 = (char *)&v42 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v21 = (char *)&v42 - v20;
  uint64_t v56 = 0;
  unint64_t v57 = 0xE000000000000000;
  sub_25A623210();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v56 = a4;
  unint64_t v57 = a5;
  sub_25A622E00();
  sub_25A622E00();
  sub_25A622800();
  sub_25A622C40();
  unsigned int v22 = *(void (**)(char *, char *, uint64_t))(v16 + 16);
  uint64_t v54 = v21;
  v22(v19, v21, v15);
  uint64_t v50 = v14;
  unsigned int v23 = sub_25A622C60();
  os_log_type_t v24 = sub_25A623130();
  BOOL v25 = os_log_type_enabled(v23, v24);
  uint64_t v44 = (void (*)(uint64_t, char *, uint64_t))v22;
  if (v25)
  {
    uint64_t v26 = (uint8_t *)swift_slowAlloc();
    uint64_t v27 = (void *)swift_slowAlloc();
    uint64_t v43 = v16;
    *(_DWORD *)uint64_t v26 = 138543362;
    uint64_t v42 = v26 + 4;
    sub_25A585498(&qword_26A429E70);
    swift_allocError();
    v22(v28, v19, v15);
    uint64_t v29 = _swift_stdlib_bridgeErrorToNSError();
    uint64_t v56 = v29;
    uint64_t v30 = v43;
    sub_25A623190();
    *uint64_t v27 = v29;
    uint64_t v31 = *(void (**)(char *, uint64_t))(v30 + 8);
    v31(v19, v15);
    _os_log_impl(&dword_25A547000, v23, v24, "%{public}@", v26, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A429D88);
    swift_arrayDestroy();
    MEMORY[0x261140C30](v27, -1, -1);
    MEMORY[0x261140C30](v26, -1, -1);
  }
  else
  {
    uint64_t v31 = *(void (**)(char *, uint64_t))(v16 + 8);
    v31(v19, v15);
  }
  uint64_t v32 = v15;

  (*(void (**)(char *, uint64_t))(v51 + 8))(v50, v52);
  uint64_t v33 = v55;
  sub_25A57E650(v53, v55);
  uint64_t v34 = type metadata accessor for TransportReply();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 48))(v33, 1, v34) == 1)
  {
    v31(v54, v15);
    return sub_25A570C60(v33, &qword_26A429D70);
  }
  else
  {
    sub_25A585498(&qword_26A429E70);
    uint64_t v36 = (void *)swift_allocError();
    uint64_t v37 = v54;
    v44(v38, v54, v15);
    uint64_t v39 = v45;
    sub_25A622C20();
    uint64_t v40 = (uint64_t)v49;
    *uint64_t v49 = v36;
    swift_storeEnumTagMultiPayload();
    id v41 = v36;
    __swift_instantiateConcreteTypeFromMangledName(qword_26A429C58);
    sub_25A622640();
    sub_25A570C60(v40, &qword_26A429D78);
    (*(void (**)(char *, uint64_t))(v47 + 8))(v39, v48);
    v31(v37, v32);

    return sub_25A584FE4(v33, (uint64_t (*)(void))type metadata accessor for TransportReply);
  }
}

uint64_t sub_25A587B9C(uint64_t result)
{
  if (result) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_25A587BB0(uint64_t a1)
{
  return sub_25A587BCC(a1);
}

uint64_t sub_25A587BCC(uint64_t a1)
{
  uint64_t v3 = v1[2];
  uint64_t v4 = v1[3];
  uint64_t v5 = v1[4];
  uint64_t v6 = v1[5];
  type metadata accessor for TransportEvent();
  uint64_t v7 = *(void *)(sub_25A623030() - 8);
  return sub_25A5823A0(a1, (uint64_t)v1 + ((*(unsigned __int8 *)(v7 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80)), v3, v4, v5, v6);
}

uint64_t objectdestroy_10Tm()
{
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 32)) {
    swift_release();
  }
  if (*(void *)(v0 + 48)) {
    swift_release();
  }

  return MEMORY[0x270FA0238](v0, 64, 7);
}

uint64_t sub_25A587CD0(uint64_t a1, uint64_t a2)
{
  return sub_25A582788(a1, a2);
}

uint64_t sub_25A587CF8()
{
  type metadata accessor for TransportEvent();
  sub_25A623030();

  return sub_25A582D20();
}

uint64_t objectdestroy_15Tm()
{
  type metadata accessor for TransportEvent();
  uint64_t v1 = sub_25A623030();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 48) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x270FA0238](v0, v5, v6);
}

uint64_t sub_25A587E44()
{
  return sub_25A623020();
}

uint64_t type metadata accessor for TransportInvalidated()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_25A587ED0()
{
  uint64_t result = type metadata accessor for TransportMessage();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *sub_25A587F60(void *a1, unsigned __int8 *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v4 = *(void *)(AssociatedTypeWitness - 8);
  unint64_t v5 = *(void *)(v4 + 64);
  uint64_t v6 = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(qword_26A429C58);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(_DWORD *)(v10 + 80);
  uint64_t v12 = v8 + v11;
  uint64_t v13 = (v8 + v11) & ~v11;
  if (v13 + *(void *)(v10 + 64) <= v5) {
    unint64_t v14 = v5;
  }
  else {
    unint64_t v14 = v13 + *(void *)(v10 + 64);
  }
  uint64_t v15 = (*(unsigned char *)(v4 + 80) | *(unsigned char *)(v7 + 80) | *(unsigned char *)(v10 + 80));
  if (v15 > 7
    || ((*(_DWORD *)(v4 + 80) | *(_DWORD *)(v7 + 80) | *(_DWORD *)(v10 + 80)) & 0x100000) != 0
    || v14 + 1 > 0x18)
  {
    uint64_t v18 = *(void *)a2;
    *a1 = *(void *)a2;
    a1 = (void *)(v18 + ((v15 + 16) & ~v15));
    swift_retain();
  }
  else
  {
    uint64_t v19 = v9;
    unsigned int v20 = a2[v14];
    unsigned int v21 = v20 - 2;
    if (v20 >= 2)
    {
      if (v14 <= 3) {
        uint64_t v22 = v14;
      }
      else {
        uint64_t v22 = 4;
      }
      switch(v22)
      {
        case 1:
          int v23 = *a2;
          if (v14 >= 4) {
            goto LABEL_27;
          }
          goto LABEL_23;
        case 2:
          int v23 = *(unsigned __int16 *)a2;
          if (v14 >= 4) {
            goto LABEL_27;
          }
          goto LABEL_23;
        case 3:
          int v23 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          if (v14 < 4) {
            goto LABEL_23;
          }
          goto LABEL_27;
        case 4:
          int v23 = *(_DWORD *)a2;
          if (v14 < 4)
          {
LABEL_23:
            unsigned int v20 = (v23 | (v21 << (8 * v14))) + 2;
            break;
          }
LABEL_27:
          if (v23 != -1) {
            goto LABEL_28;
          }
          goto LABEL_25;
        default:
          break;
      }
    }
    if (v20 == 1)
    {
LABEL_25:
      uint64_t v24 = ~v11;
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v10 + 16))(((unint64_t)a1 + v12) & v24, (unint64_t)&a2[v12] & v24, v19);
      *((unsigned char *)a1 + v14) = 1;
    }
    else
    {
LABEL_28:
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v4 + 16))(a1, a2, AssociatedTypeWitness);
      *((unsigned char *)a1 + v14) = 0;
    }
  }
  return a1;
}

uint64_t sub_25A58825C(unsigned __int8 *a1)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v21 = *(void *)(AssociatedTypeWitness - 8);
  unint64_t v3 = *(void *)(v21 + 64);
  uint64_t v4 = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(qword_26A429C58);
  uint64_t v8 = *(unsigned __int8 *)(*(void *)(v7 - 8) + 80);
  uint64_t v9 = v6 + v8;
  unint64_t v10 = (v9 & ~v8) + *(void *)(*(void *)(v7 - 8) + 64);
  if (v10 <= v3) {
    unint64_t v10 = v3;
  }
  unsigned int v11 = a1[v10];
  unsigned int v12 = v11 - 2;
  if (v11 >= 2)
  {
    if (v10 <= 3) {
      uint64_t v13 = v10;
    }
    else {
      uint64_t v13 = 4;
    }
    switch(v13)
    {
      case 1:
        int v14 = *a1;
        goto LABEL_12;
      case 2:
        int v14 = *(unsigned __int16 *)a1;
        goto LABEL_12;
      case 3:
        int v14 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_12;
      case 4:
        int v14 = *(_DWORD *)a1;
LABEL_12:
        int v15 = (v14 | (v12 << (8 * v10))) + 2;
        unsigned int v11 = v14 + 2;
        if (v10 < 4) {
          unsigned int v11 = v15;
        }
        break;
      default:
        break;
    }
  }
  if (v11 == 1)
  {
    uint64_t v16 = ~v8;
    uint64_t v22 = *(void *)(v7 - 8);
    (*(void (**)(unsigned __int8 *, uint64_t))(v5 + 8))(a1, v4);
    uint64_t v17 = (unsigned __int8 *)((unint64_t)&a1[v9] & v16);
    uint64_t v18 = *(uint64_t (**)(unsigned __int8 *, uint64_t))(v22 + 8);
    uint64_t v19 = v7;
  }
  else
  {
    uint64_t v18 = *(uint64_t (**)(unsigned __int8 *, uint64_t))(v21 + 8);
    uint64_t v17 = a1;
    uint64_t v19 = AssociatedTypeWitness;
  }

  return v18(v17, v19);
}

uint64_t sub_25A5884D0(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v4 = *(void *)(AssociatedTypeWitness - 8);
  unint64_t v5 = *(void *)(v4 + 64);
  uint64_t v6 = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(qword_26A429C58);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v12 = v8 + v11;
  uint64_t v13 = (v8 + v11) & ~v11;
  if (v13 + *(void *)(v10 + 64) <= v5) {
    unint64_t v14 = v5;
  }
  else {
    unint64_t v14 = v13 + *(void *)(v10 + 64);
  }
  unsigned int v15 = a2[v14];
  unsigned int v16 = v15 - 2;
  if (v15 >= 2)
  {
    if (v14 <= 3) {
      uint64_t v17 = v14;
    }
    else {
      uint64_t v17 = 4;
    }
    switch(v17)
    {
      case 1:
        int v18 = *a2;
        goto LABEL_13;
      case 2:
        int v18 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v18 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v18 = *(_DWORD *)a2;
LABEL_13:
        int v19 = (v18 | (v16 << (8 * v14))) + 2;
        unsigned int v15 = v18 + 2;
        if (v14 < 4) {
          unsigned int v15 = v19;
        }
        break;
      default:
        break;
    }
  }
  if (v15 == 1)
  {
    uint64_t v20 = ~v11;
    (*(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v10 + 16))((v12 + a1) & v20, (unint64_t)&a2[v12] & v20, v9);
    char v21 = 1;
  }
  else
  {
    (*(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v4 + 16))(a1, a2, AssociatedTypeWitness);
    char v21 = 0;
  }
  *(unsigned char *)(a1 + v14) = v21;
  return a1;
}

unsigned __int8 *sub_25A588764(unsigned __int8 *a1, unsigned __int8 *a2)
{
  if (a1 != a2)
  {
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    uint64_t v4 = *(void *)(AssociatedTypeWitness - 8);
    unint64_t v5 = *(void *)(v4 + 64);
    uint64_t v6 = swift_getAssociatedTypeWitness();
    uint64_t v7 = *(void *)(v6 - 8);
    uint64_t v8 = *(void *)(v7 + 64);
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(qword_26A429C58);
    uint64_t v10 = *(void *)(v9 - 8);
    uint64_t v11 = *(unsigned __int8 *)(v10 + 80);
    uint64_t v12 = v8 + v11;
    uint64_t v13 = (v8 + v11) & ~v11;
    if (v13 + *(void *)(v10 + 64) <= v5) {
      unint64_t v14 = v5;
    }
    else {
      unint64_t v14 = v13 + *(void *)(v10 + 64);
    }
    unsigned int v15 = a1[v14];
    unsigned int v16 = v15 - 2;
    if (v15 >= 2)
    {
      if (v14 <= 3) {
        uint64_t v17 = v14;
      }
      else {
        uint64_t v17 = 4;
      }
      switch(v17)
      {
        case 1:
          int v18 = *a1;
          if (v14 < 4) {
            goto LABEL_15;
          }
          goto LABEL_17;
        case 2:
          int v18 = *(unsigned __int16 *)a1;
          if (v14 >= 4) {
            goto LABEL_17;
          }
          goto LABEL_15;
        case 3:
          int v18 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          if (v14 < 4) {
            goto LABEL_15;
          }
          goto LABEL_17;
        case 4:
          int v18 = *(_DWORD *)a1;
          if (v14 < 4) {
LABEL_15:
          }
            unsigned int v15 = (v18 | (v16 << (8 * v14))) + 2;
          else {
LABEL_17:
          }
            unsigned int v15 = v18 + 2;
          break;
        default:
          break;
      }
    }
    uint64_t v19 = ~v11;
    if (v15 == 1)
    {
      (*(void (**)(unsigned __int8 *, uint64_t))(v7 + 8))(a1, v6);
      (*(void (**)(unint64_t, uint64_t))(v10 + 8))((unint64_t)&a1[v12] & v19, v9);
    }
    else
    {
      (*(void (**)(unsigned __int8 *, uint64_t))(v4 + 8))(a1, AssociatedTypeWitness);
    }
    unsigned int v20 = a2[v14];
    unsigned int v21 = v20 - 2;
    if (v20 >= 2)
    {
      if (v14 <= 3) {
        uint64_t v22 = v14;
      }
      else {
        uint64_t v22 = 4;
      }
      switch(v22)
      {
        case 1:
          int v23 = *a2;
          if (v14 >= 4) {
            goto LABEL_35;
          }
          goto LABEL_31;
        case 2:
          int v23 = *(unsigned __int16 *)a2;
          if (v14 >= 4) {
            goto LABEL_35;
          }
          goto LABEL_31;
        case 3:
          int v23 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          if (v14 < 4) {
            goto LABEL_31;
          }
          goto LABEL_35;
        case 4:
          int v23 = *(_DWORD *)a2;
          if (v14 < 4)
          {
LABEL_31:
            unsigned int v20 = (v23 | (v21 << (8 * v14))) + 2;
            break;
          }
LABEL_35:
          if (v23 != -1) {
            goto LABEL_36;
          }
          goto LABEL_33;
        default:
          break;
      }
    }
    if (v20 == 1)
    {
LABEL_33:
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v10 + 16))((unint64_t)&a1[v12] & v19, (unint64_t)&a2[v12] & v19, v9);
      char v24 = 1;
    }
    else
    {
LABEL_36:
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v4 + 16))(a1, a2, AssociatedTypeWitness);
      char v24 = 0;
    }
    a1[v14] = v24;
  }
  return a1;
}

uint64_t sub_25A588B18(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v4 = *(void *)(AssociatedTypeWitness - 8);
  unint64_t v5 = *(void *)(v4 + 64);
  uint64_t v6 = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(qword_26A429C58);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v12 = v8 + v11;
  uint64_t v13 = (v8 + v11) & ~v11;
  if (v13 + *(void *)(v10 + 64) <= v5) {
    unint64_t v14 = v5;
  }
  else {
    unint64_t v14 = v13 + *(void *)(v10 + 64);
  }
  unsigned int v15 = a2[v14];
  unsigned int v16 = v15 - 2;
  if (v15 >= 2)
  {
    if (v14 <= 3) {
      uint64_t v17 = v14;
    }
    else {
      uint64_t v17 = 4;
    }
    switch(v17)
    {
      case 1:
        int v18 = *a2;
        goto LABEL_13;
      case 2:
        int v18 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v18 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v18 = *(_DWORD *)a2;
LABEL_13:
        int v19 = (v18 | (v16 << (8 * v14))) + 2;
        unsigned int v15 = v18 + 2;
        if (v14 < 4) {
          unsigned int v15 = v19;
        }
        break;
      default:
        break;
    }
  }
  if (v15 == 1)
  {
    uint64_t v20 = ~v11;
    (*(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v10 + 32))((v12 + a1) & v20, (unint64_t)&a2[v12] & v20, v9);
    char v21 = 1;
  }
  else
  {
    (*(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v4 + 32))(a1, a2, AssociatedTypeWitness);
    char v21 = 0;
  }
  *(unsigned char *)(a1 + v14) = v21;
  return a1;
}

unsigned __int8 *sub_25A588DAC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  if (a1 != a2)
  {
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    uint64_t v4 = *(void *)(AssociatedTypeWitness - 8);
    unint64_t v5 = *(void *)(v4 + 64);
    uint64_t v6 = swift_getAssociatedTypeWitness();
    uint64_t v7 = *(void *)(v6 - 8);
    uint64_t v8 = *(void *)(v7 + 64);
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(qword_26A429C58);
    uint64_t v10 = *(void *)(v9 - 8);
    uint64_t v11 = *(unsigned __int8 *)(v10 + 80);
    uint64_t v12 = v8 + v11;
    uint64_t v13 = (v8 + v11) & ~v11;
    if (v13 + *(void *)(v10 + 64) <= v5) {
      unint64_t v14 = v5;
    }
    else {
      unint64_t v14 = v13 + *(void *)(v10 + 64);
    }
    unsigned int v15 = a1[v14];
    unsigned int v16 = v15 - 2;
    if (v15 >= 2)
    {
      if (v14 <= 3) {
        uint64_t v17 = v14;
      }
      else {
        uint64_t v17 = 4;
      }
      switch(v17)
      {
        case 1:
          int v18 = *a1;
          if (v14 < 4) {
            goto LABEL_15;
          }
          goto LABEL_17;
        case 2:
          int v18 = *(unsigned __int16 *)a1;
          if (v14 >= 4) {
            goto LABEL_17;
          }
          goto LABEL_15;
        case 3:
          int v18 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          if (v14 < 4) {
            goto LABEL_15;
          }
          goto LABEL_17;
        case 4:
          int v18 = *(_DWORD *)a1;
          if (v14 < 4) {
LABEL_15:
          }
            unsigned int v15 = (v18 | (v16 << (8 * v14))) + 2;
          else {
LABEL_17:
          }
            unsigned int v15 = v18 + 2;
          break;
        default:
          break;
      }
    }
    uint64_t v19 = ~v11;
    if (v15 == 1)
    {
      (*(void (**)(unsigned __int8 *, uint64_t))(v7 + 8))(a1, v6);
      (*(void (**)(unint64_t, uint64_t))(v10 + 8))((unint64_t)&a1[v12] & v19, v9);
    }
    else
    {
      (*(void (**)(unsigned __int8 *, uint64_t))(v4 + 8))(a1, AssociatedTypeWitness);
    }
    unsigned int v20 = a2[v14];
    unsigned int v21 = v20 - 2;
    if (v20 >= 2)
    {
      if (v14 <= 3) {
        uint64_t v22 = v14;
      }
      else {
        uint64_t v22 = 4;
      }
      switch(v22)
      {
        case 1:
          int v23 = *a2;
          if (v14 >= 4) {
            goto LABEL_35;
          }
          goto LABEL_31;
        case 2:
          int v23 = *(unsigned __int16 *)a2;
          if (v14 >= 4) {
            goto LABEL_35;
          }
          goto LABEL_31;
        case 3:
          int v23 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          if (v14 < 4) {
            goto LABEL_31;
          }
          goto LABEL_35;
        case 4:
          int v23 = *(_DWORD *)a2;
          if (v14 < 4)
          {
LABEL_31:
            unsigned int v20 = (v23 | (v21 << (8 * v14))) + 2;
            break;
          }
LABEL_35:
          if (v23 != -1) {
            goto LABEL_36;
          }
          goto LABEL_33;
        default:
          break;
      }
    }
    if (v20 == 1)
    {
LABEL_33:
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v7 + 32))(a1, a2, v6);
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v10 + 32))((unint64_t)&a1[v12] & v19, (unint64_t)&a2[v12] & v19, v9);
      char v24 = 1;
    }
    else
    {
LABEL_36:
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v4 + 32))(a1, a2, AssociatedTypeWitness);
      char v24 = 0;
    }
    a1[v14] = v24;
  }
  return a1;
}

uint64_t sub_25A589160(unsigned __int16 *a1, unsigned int a2)
{
  unint64_t v4 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  uint64_t v5 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  uint64_t v6 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(qword_26A429C58) - 8);
  unint64_t v7 = ((v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80)) + *(void *)(v6 + 64);
  if (v7 <= v4) {
    unint64_t v8 = v4;
  }
  else {
    unint64_t v8 = v7;
  }
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_23;
  }
  unint64_t v9 = v8 + 1;
  char v10 = 8 * (v8 + 1);
  if ((v8 + 1) <= 3)
  {
    unsigned int v13 = ((a2 + ~(-1 << v10) - 254) >> v10) + 1;
    if (HIWORD(v13))
    {
      int v11 = *(_DWORD *)((char *)a1 + v9);
      if (!v11) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v13 > 0xFF)
    {
      int v11 = *(unsigned __int16 *)((char *)a1 + v9);
      if (!*(unsigned __int16 *)((char *)a1 + v9)) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v13 < 2)
    {
LABEL_23:
      unsigned int v15 = *((unsigned __int8 *)a1 + v8);
      if (v15 >= 2) {
        return (v15 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
  }
  int v11 = *((unsigned __int8 *)a1 + v9);
  if (!*((unsigned char *)a1 + v9)) {
    goto LABEL_23;
  }
LABEL_15:
  int v14 = (v11 - 1) << v10;
  if (v9 > 3) {
    int v14 = 0;
  }
  if (v9)
  {
    if (v9 > 3) {
      LODWORD(v9) = 4;
    }
    switch((int)v9)
    {
      case 2:
        LODWORD(v9) = *a1;
        break;
      case 3:
        LODWORD(v9) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v9) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v9) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return (v9 | v14) + 255;
}

void sub_25A589370(unsigned char *a1, unsigned int a2, unsigned int a3)
{
  unint64_t v6 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  uint64_t v7 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  uint64_t v8 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(qword_26A429C58) - 8);
  unint64_t v9 = ((v7 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80)) + *(void *)(v8 + 64);
  if (v9 <= v6) {
    unint64_t v9 = v6;
  }
  size_t v10 = v9 + 1;
  if (a3 < 0xFF)
  {
    int v11 = 0;
  }
  else if (v10 <= 3)
  {
    unsigned int v14 = ((a3 + ~(-1 << (8 * v10)) - 254) >> (8 * v10)) + 1;
    if (HIWORD(v14))
    {
      int v11 = 4;
    }
    else if (v14 >= 0x100)
    {
      int v11 = 2;
    }
    else
    {
      int v11 = v14 > 1;
    }
  }
  else
  {
    int v11 = 1;
  }
  if (a2 > 0xFE)
  {
    unsigned int v12 = a2 - 255;
    if (v10 < 4)
    {
      int v13 = (v12 >> (8 * v10)) + 1;
      if (v9 != -1)
      {
        int v15 = v12 & ~(-1 << (8 * v10));
        bzero(a1, v10);
        if (v10 == 3)
        {
          *(_WORD *)a1 = v15;
          a1[2] = BYTE2(v15);
        }
        else if (v10 == 2)
        {
          *(_WORD *)a1 = v15;
        }
        else
        {
          *a1 = v15;
        }
      }
    }
    else
    {
      bzero(a1, v9 + 1);
      *(_DWORD *)a1 = v12;
      int v13 = 1;
    }
    switch(v11)
    {
      case 1:
        a1[v10] = v13;
        break;
      case 2:
        *(_WORD *)&a1[v10] = v13;
        break;
      case 3:
LABEL_34:
        __break(1u);
        JUMPOUT(0x25A5895F4);
      case 4:
        *(_DWORD *)&a1[v10] = v13;
        break;
      default:
        return;
    }
  }
  else
  {
    switch(v11)
    {
      case 1:
        a1[v10] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      case 2:
        *(_WORD *)&a1[v10] = 0;
        goto LABEL_22;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v10] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      default:
LABEL_22:
        if (a2) {
LABEL_23:
        }
          a1[v9] = -(char)a2;
        break;
    }
  }
}

uint64_t sub_25A58961C()
{
  return swift_getWitnessTable();
}

uint64_t sub_25A589638()
{
  return swift_getWitnessTable();
}

uint64_t sub_25A589654()
{
  return swift_getWitnessTable();
}

PreviewsMessagingOS::ContentCategory __swiftcall ContentCategory.init(rawValue:)(PreviewsMessagingOS::ContentCategory rawValue)
{
  PreviewsMessagingOS::ContentCategory *v1 = rawValue;
  return rawValue;
}

PreviewsMessagingOS::ContentCategory __swiftcall ContentCategory.init(stringLiteral:)(PreviewsMessagingOS::ContentCategory stringLiteral)
{
  PreviewsMessagingOS::ContentCategory *v1 = stringLiteral;
  return stringLiteral;
}

void *sub_25A589684@<X0>(void *result@<X0>, void *a2@<X8>)
{
  uint64_t v2 = result[1];
  *a2 = *result;
  a2[1] = v2;
  return result;
}

uint64_t sub_25A589690@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t sub_25A5896AC(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_25A589FC8();
  uint64_t v5 = MEMORY[0x263F60648];

  return MEMORY[0x270F55C68](a1, a2, v4, v5);
}

uint64_t sub_25A589708()
{
  return sub_25A622B20();
}

uint64_t ContentCategory.description.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_25A5897A0()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

void static ContentCategory.applicationPreviewInstance.getter(void *a1@<X8>)
{
  *a1 = 0xD000000000000026;
  a1[1] = 0x800000025A636C50;
}

void static ContentCategory.widgetPreviewInstance.getter(void *a1@<X8>)
{
  *a1 = 0xD000000000000021;
  a1[1] = 0x800000025A636C80;
}

void static ContentCategory.complicationPreviewInstance.getter(void *a1@<X8>)
{
  *a1 = 0xD000000000000027;
  a1[1] = 0x800000025A636CB0;
}

void static ContentCategory.applicationMainPreview.getter(void *a1@<X8>)
{
  *a1 = 0xD000000000000022;
  a1[1] = 0x800000025A636CE0;
}

void static ContentCategory.runningAppPreview.getter(void *a1@<X8>)
{
  *a1 = 0xD00000000000001DLL;
  a1[1] = 0x800000025A636D10;
}

void static ContentCategory.previewProvider.getter(void *a1@<X8>)
{
  *a1 = 0xD00000000000001BLL;
  a1[1] = 0x800000025A636D30;
}

void static ContentCategory.previewPreflight.getter(void *a1@<X8>)
{
  *a1 = 0xD00000000000001CLL;
  a1[1] = 0x800000025A636D50;
}

void static ContentCategory.registryPreflight.getter(void *a1@<X8>)
{
  *a1 = 0xD00000000000001DLL;
  a1[1] = 0x800000025A636D70;
}

void static ContentCategory.registryExecution.getter(void *a1@<X8>)
{
  *a1 = 0xD00000000000001DLL;
  a1[1] = 0x800000025A636D90;
}

void static ContentCategory.cFunction.getter(void *a1@<X8>)
{
  *a1 = 0xD000000000000015;
  a1[1] = 0x800000025A636DB0;
}

uint64_t sub_25A589910(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_25A589F74();
  uint64_t v5 = MEMORY[0x263F60648];

  return MEMORY[0x270F55C68](a1, a2, v4, v5);
}

uint64_t sub_25A58996C()
{
  return sub_25A622B20();
}

uint64_t sub_25A5899D4()
{
  return sub_25A6234A0();
}

uint64_t sub_25A589A30()
{
  swift_bridgeObjectRetain();
  sub_25A622DF0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25A589A88()
{
  return sub_25A6234A0();
}

uint64_t sub_25A589AE0(void *a1, void *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1]) {
    return 1;
  }
  else {
    return sub_25A6233B0();
  }
}

uint64_t sub_25A589B10(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_25A589F20();
  uint64_t v5 = MEMORY[0x263F60648];

  return MEMORY[0x270F55C68](a1, a2, v4, v5);
}

uint64_t sub_25A589B6C()
{
  return sub_25A622B20();
}

unint64_t sub_25A589BD8()
{
  unint64_t result = qword_26A42A0B0;
  if (!qword_26A42A0B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42A0B0);
  }
  return result;
}

uint64_t sub_25A589C2C()
{
  return MEMORY[0x263F8D388];
}

unint64_t sub_25A589C3C()
{
  unint64_t result = qword_26A42A0B8;
  if (!qword_26A42A0B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42A0B8);
  }
  return result;
}

unint64_t sub_25A589C94()
{
  unint64_t result = qword_26A42A0C0;
  if (!qword_26A42A0C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42A0C0);
  }
  return result;
}

uint64_t sub_25A589CE8()
{
  return MEMORY[0x263F8D398];
}

uint64_t sub_25A589CF4()
{
  return MEMORY[0x263F8D390];
}

unint64_t sub_25A589D04()
{
  unint64_t result = qword_26A42A0C8;
  if (!qword_26A42A0C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42A0C8);
  }
  return result;
}

unint64_t sub_25A589D5C()
{
  unint64_t result = qword_26A42A0D0;
  if (!qword_26A42A0D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42A0D0);
  }
  return result;
}

unint64_t sub_25A589DB4()
{
  unint64_t result = qword_26A42A0D8;
  if (!qword_26A42A0D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42A0D8);
  }
  return result;
}

unint64_t sub_25A589E0C()
{
  unint64_t result = qword_26A42A0E0;
  if (!qword_26A42A0E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42A0E0);
  }
  return result;
}

ValueMetadata *type metadata accessor for ContentCategory()
{
  return &type metadata for ContentCategory;
}

ValueMetadata *type metadata accessor for ContentIdentifier()
{
  return &type metadata for ContentIdentifier;
}

uint64_t getEnumTagSinglePayload for AgentDescriptor.Bundle.MissingPathError(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AgentDescriptor.Bundle.MissingPathError(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ContentOverride()
{
  return &type metadata for ContentOverride;
}

unint64_t sub_25A589F20()
{
  unint64_t result = qword_26A42A0E8;
  if (!qword_26A42A0E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42A0E8);
  }
  return result;
}

unint64_t sub_25A589F74()
{
  unint64_t result = qword_26A42A0F0;
  if (!qword_26A42A0F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42A0F0);
  }
  return result;
}

unint64_t sub_25A589FC8()
{
  unint64_t result = qword_26A42A0F8;
  if (!qword_26A42A0F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42A0F8);
  }
  return result;
}

uint64_t sub_25A58A050(char a1)
{
  if (a1) {
    return 0x736172437478656ELL;
  }
  else {
    return 0xD000000000000016;
  }
}

uint64_t sub_25A58A098(char *a1, char *a2)
{
  return sub_25A5E9944(*a1, *a2);
}

uint64_t sub_25A58A0A4()
{
  return sub_25A617A60();
}

uint64_t sub_25A58A0AC()
{
  return sub_25A54A5E8();
}

uint64_t sub_25A58A0B4()
{
  return sub_25A61D390();
}

uint64_t sub_25A58A0BC@<X0>(char *a1@<X8>)
{
  return sub_25A56B748(a1);
}

uint64_t sub_25A58A0C8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_25A58A050(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_25A58A0F4(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_25A58F2E0();
  uint64_t v5 = MEMORY[0x263F60648];

  return MEMORY[0x270F55C68](a1, a2, v4, v5);
}

uint64_t sub_25A58A150()
{
  return sub_25A622B20();
}

uint64_t sub_25A58A1B8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_25A5E9940(*a1, *a2);
}

uint64_t sub_25A58A1C4()
{
  return sub_25A617AF4(*v0);
}

uint64_t sub_25A58A1CC(uint64_t a1)
{
  return sub_25A54A5E4(a1, *v1);
}

uint64_t sub_25A58A1D4(uint64_t a1)
{
  return sub_25A61C73C(a1, *v1);
}

uint64_t sub_25A58A1DC@<X0>(char *a1@<X8>)
{
  return sub_25A56B748(a1);
}

uint64_t CrashListenerInterface.TwoWayMessage.propertyListValue.getter()
{
  uint64_t v1 = *v0;
  uint64_t v2 = v0[1];
  uint64_t v4 = v0[2];
  uint64_t v3 = v0[3];
  unint64_t v5 = sub_25A58A2D0();
  sub_25A58A324();
  uint64_t result = sub_25A6227A0();
  if ((_BYTE)v4 != 0xFF)
  {
    uint64_t v10 = v1;
    uint64_t v11 = v2;
    uint64_t v12 = v4 & 1;
    uint64_t v13 = v3;
    uint64_t v8 = &type metadata for CrashListenerInterface.TwoWayMessage.Key;
    unint64_t v9 = v5;
    v7[0] = 1;
    sub_25A58A378();
    sub_25A622700();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
  }
  return result;
}

unint64_t sub_25A58A2D0()
{
  unint64_t result = qword_26A42A100;
  if (!qword_26A42A100)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42A100);
  }
  return result;
}

unint64_t sub_25A58A324()
{
  unint64_t result = qword_26A42A108;
  if (!qword_26A42A108)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42A108);
  }
  return result;
}

unint64_t sub_25A58A378()
{
  unint64_t result = qword_26A42A110;
  if (!qword_26A42A110)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42A110);
  }
  return result;
}

uint64_t CrashListenerInterface.TwoWayMessage.init(propertyListValue:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v17 = &type metadata for CrashListenerInterface.TwoWayMessage.Key;
  unint64_t v5 = sub_25A58A2D0();
  unint64_t v18 = v5;
  v16[0] = 0;
  sub_25A58A324();
  sub_25A622710();
  if (v2)
  {
    uint64_t v6 = sub_25A6227C0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
    if (v13)
    {
      uint64_t v17 = &type metadata for CrashListenerInterface.TwoWayMessage.Key;
      unint64_t v18 = v5;
      v16[0] = 1;
      sub_25A58A378();
      sub_25A622710();
      uint64_t v8 = sub_25A6227C0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(a1, v8);
      uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
      long long v9 = v13;
      uint64_t v10 = v14;
      uint64_t v11 = v15;
    }
    else
    {
      uint64_t v12 = sub_25A6227C0();
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(a1, v12);
      uint64_t v11 = 0;
      long long v9 = 0uLL;
      uint64_t v10 = 255;
    }
    *(_OWORD *)a2 = v9;
    *(void *)(a2 + 16) = v10;
    *(void *)(a2 + 24) = v11;
  }
  return result;
}

uint64_t sub_25A58A578()
{
  uint64_t v1 = *v0;
  uint64_t v2 = v0[1];
  uint64_t v4 = v0[2];
  uint64_t v3 = v0[3];
  unint64_t v5 = sub_25A58A2D0();
  sub_25A58A324();
  uint64_t result = sub_25A6227A0();
  if ((_BYTE)v4 != 0xFF)
  {
    uint64_t v10 = v1;
    uint64_t v11 = v2;
    uint64_t v12 = v4 & 1;
    uint64_t v13 = v3;
    uint64_t v8 = &type metadata for CrashListenerInterface.TwoWayMessage.Key;
    unint64_t v9 = v5;
    v7[0] = 1;
    sub_25A58A378();
    sub_25A622700();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
  }
  return result;
}

uint64_t sub_25A58A65C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return CrashListenerInterface.TwoWayMessage.init(propertyListValue:)(a1, a2);
}

uint64_t NextCrashRequest.process.getter()
{
  uint64_t v1 = *(void *)v0;
  sub_25A58A6BC(*(void *)v0, *(void *)(v0 + 8), *(unsigned char *)(v0 + 16));
  return v1;
}

uint64_t sub_25A58A6BC(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

double NextCrashRequest.timeout.getter()
{
  return *(double *)(v0 + 24);
}

uint64_t NextCrashRequest.init(process:timeout:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>, double a5@<D0>)
{
  *(void *)a4 = result;
  *(void *)(a4 + 8) = a2;
  *(unsigned char *)(a4 + 16) = a3 & 1;
  *(double *)(a4 + 24) = a5;
  return result;
}

uint64_t sub_25A58A6E8(char a1)
{
  if (a1) {
    return 0x74756F656D6974;
  }
  else {
    return 0x737365636F7270;
  }
}

uint64_t sub_25A58A718(char *a1, char *a2)
{
  return sub_25A5EB500(*a1, *a2);
}

uint64_t sub_25A58A724()
{
  return sub_25A617AF8();
}

uint64_t sub_25A58A72C()
{
  return sub_25A54B63C();
}

uint64_t sub_25A58A734()
{
  return sub_25A61C4BC();
}

uint64_t sub_25A58A73C@<X0>(char *a1@<X8>)
{
  return sub_25A56B748(a1);
}

uint64_t sub_25A58A748@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_25A58A6E8(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_25A58A774()
{
  return sub_25A58A6E8(*v0);
}

uint64_t NextCrashRequest.propertyListValue.getter()
{
  return sub_25A622780();
}

uint64_t sub_25A58A7CC()
{
  return sub_25A622A80();
}

uint64_t NextCrashRequest.init(propertyListValue:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unsigned __int8 v14 = &type metadata for NextCrashRequest.Key;
  unint64_t v5 = sub_25A58AA3C();
  unint64_t v15 = v5;
  v13[0] = 0;
  sub_25A58AA90();
  sub_25A622710();
  if (v2)
  {
    uint64_t v6 = sub_25A6227C0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
    uint64_t v8 = v16;
    uint64_t v9 = v17;
    char v10 = v18;
    char v19 = v18;
    unsigned __int8 v14 = &type metadata for NextCrashRequest.Key;
    unint64_t v15 = v5;
    v13[0] = 1;
    sub_25A58A6BC(v16, v17, v18);
    sub_25A622710();
    uint64_t v11 = sub_25A6227C0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(a1, v11);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
    uint64_t v12 = v16;
    *(void *)a2 = v8;
    *(void *)(a2 + 8) = v9;
    *(unsigned char *)(a2 + 16) = v10;
    *(void *)(a2 + 24) = v12;
    return sub_25A58AAE4(v8, v9, v19);
  }
}

unint64_t sub_25A58AA3C()
{
  unint64_t result = qword_26A42A118;
  if (!qword_26A42A118)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42A118);
  }
  return result;
}

unint64_t sub_25A58AA90()
{
  unint64_t result = qword_26A42A120;
  if (!qword_26A42A120)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42A120);
  }
  return result;
}

uint64_t sub_25A58AAE4(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_25A58AAF4()
{
  return sub_25A622780();
}

uint64_t sub_25A58AB44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return NextCrashRequest.init(propertyListValue:)(a1, a2);
}

uint64_t NextCrashResponse.crashReport.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_25A622560();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t NextCrashResponse.init(crashReport:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_25A622560();
  unint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32);

  return v5(a2, a1, v4);
}

uint64_t sub_25A58AC3C@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_25A6232B0();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_25A58AC90@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_25A58D84C();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t NextCrashResponse.propertyListValue.getter()
{
  return sub_25A6227A0();
}

unint64_t sub_25A58AD70()
{
  unint64_t result = qword_26A42A128;
  if (!qword_26A42A128)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42A128);
  }
  return result;
}

uint64_t NextCrashResponse.init(propertyListValue:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_25A622560();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = &v12[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  uint64_t v13 = &type metadata for NextCrashResponse.Key;
  unint64_t v14 = sub_25A58AD70();
  sub_25A58DD88((unint64_t *)&qword_26A42A130, MEMORY[0x263F604A0]);
  sub_25A622710();
  uint64_t v9 = sub_25A6227C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(a1, v9);
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  return (*(uint64_t (**)(uint64_t, unsigned char *, uint64_t))(v6 + 32))(a2, v8, v5);
}

uint64_t sub_25A58AF84()
{
  return sub_25A6227A0();
}

uint64_t sub_25A58B034@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_25A622560();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = &v12[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  uint64_t v13 = &type metadata for NextCrashResponse.Key;
  unint64_t v14 = sub_25A58AD70();
  sub_25A58DD88((unint64_t *)&qword_26A42A130, MEMORY[0x263F604A0]);
  sub_25A622710();
  uint64_t v9 = sub_25A6227C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(a1, v9);
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  return (*(uint64_t (**)(uint64_t, unsigned char *, uint64_t))(v6 + 32))(a2, v8, v5);
}

uint64_t ProcessIdentifier.description.getter(uint64_t a1, uint64_t a2, char a3)
{
  if (a3)
  {
    sub_25A623210();
    swift_bridgeObjectRelease();
    strcpy((char *)v4, "process name: ");
    HIBYTE(v4[1]) = -18;
    sub_25A622E00();
  }
  else
  {
    v4[0] = 0x203A646970;
    v4[1] = 0xE500000000000000;
    sub_25A623350();
    sub_25A622E00();
    swift_bridgeObjectRelease();
  }
  return v4[0];
}

uint64_t ProcessIdentifier.name.getter(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) == 0) {
    return 0;
  }
  uint64_t v3 = a1;
  swift_bridgeObjectRetain();
  return v3;
}

uint64_t ProcessIdentifier.hash(into:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if (a4)
  {
    sub_25A623460();
    return sub_25A622DF0();
  }
  else
  {
    sub_25A623460();
    return sub_25A623480();
  }
}

uint64_t static ProcessIdentifier.== infix(_:_:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  if (a3)
  {
    if (a6)
    {
      if (a1 == a4 && a2 == a5) {
        return 1;
      }
      else {
        return sub_25A6233B0();
      }
    }
    else
    {
      return 0;
    }
  }
  else
  {
    return (a6 & 1) == 0 && a1 == a4;
  }
}

uint64_t ProcessIdentifier.hashValue.getter(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    sub_25A622DF0();
  }
  else {
    sub_25A623480();
  }
  return sub_25A6234A0();
}

uint64_t sub_25A58B458(char a1)
{
  if (a1) {
    return 0x4E737365636F7270;
  }
  else {
    return 6580592;
  }
}

uint64_t sub_25A58B490()
{
  char v1 = *(unsigned char *)(v0 + 16);
  sub_25A623450();
  sub_25A623460();
  if (v1) {
    sub_25A622DF0();
  }
  else {
    sub_25A623480();
  }
  return sub_25A6234A0();
}

uint64_t sub_25A58B514()
{
  if (*(unsigned char *)(v0 + 16))
  {
    sub_25A623460();
    return sub_25A622DF0();
  }
  else
  {
    sub_25A623460();
    return sub_25A623480();
  }
}

uint64_t sub_25A58B598()
{
  char v1 = *(unsigned char *)(v0 + 16);
  sub_25A623450();
  sub_25A623460();
  if (v1) {
    sub_25A622DF0();
  }
  else {
    sub_25A623480();
  }
  return sub_25A6234A0();
}

uint64_t sub_25A58B618()
{
  return ProcessIdentifier.description.getter(*(void *)v0, *(void *)(v0 + 8), *(unsigned char *)(v0 + 16));
}

uint64_t sub_25A58B624(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *a2;
  if (a1[2])
  {
    if (a2[2])
    {
      uint64_t v5 = a1[1];
      if (v3 == v4 && v5 == a2[1]) {
        return 1;
      }
      else {
        return sub_25A6233B0();
      }
    }
    else
    {
      return 0;
    }
  }
  else
  {
    return (a2[2] & 1) == 0 && v3 == v4;
  }
}

uint64_t sub_25A58B684(char *a1, char *a2)
{
  return sub_25A5EAF48(*a1, *a2);
}

uint64_t sub_25A58B690()
{
  return sub_25A617B70();
}

uint64_t sub_25A58B698()
{
  return sub_25A54B318();
}

uint64_t sub_25A58B6A0()
{
  return sub_25A61C6BC();
}

uint64_t sub_25A58B6A8@<X0>(char *a1@<X8>)
{
  return sub_25A56B748(a1);
}

uint64_t sub_25A58B6B4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_25A58B458(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_25A58B6E0(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_25A58F334();
  uint64_t v5 = MEMORY[0x263F60648];

  return MEMORY[0x270F55C68](a1, a2, v4, v5);
}

uint64_t sub_25A58B73C()
{
  return sub_25A622B20();
}

uint64_t sub_25A58B7A4(char a1)
{
  if (a1) {
    return 0x64616F6C796170;
  }
  else {
    return 0x696D697263736964;
  }
}

uint64_t sub_25A58B7E4@<X0>(char *a1@<X8>)
{
  return sub_25A56B748(a1);
}

uint64_t sub_25A58B7F0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_25A58B7A4(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_25A58B81C()
{
  return sub_25A58B7A4(*v0);
}

uint64_t ProcessIdentifier.init(propertyListValue:)(uint64_t a1)
{
  uint64_t result = sub_25A58D86C(a1);
  if (v1) {
    return v3;
  }
  return result;
}

uint64_t ProcessIdentifier.propertyListValue.getter(uint64_t a1, uint64_t a2, char a3)
{
  unint64_t v6 = sub_25A58DA50();
  sub_25A58DAA4();
  sub_25A6227A0();
  if (a3)
  {
    uint64_t v11 = a1;
    uint64_t v12 = a2;
  }
  else
  {
    LODWORD(v11) = a1;
    BYTE4(v11) = 0;
  }
  uint64_t v9 = &type metadata for ProcessIdentifier.Key;
  unint64_t v10 = v6;
  v8[0] = 1;
  sub_25A622700();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
}

uint64_t sub_25A58B944(char a1)
{
  return qword_25A628970[a1];
}

uint64_t sub_25A58B964()
{
  return ProcessIdentifier.propertyListValue.getter(*(void *)v0, *(void *)(v0 + 8), *(unsigned char *)(v0 + 16));
}

uint64_t sub_25A58B970@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_25A58D86C(a1);
  if (!v2)
  {
    *(void *)a2 = result;
    *(void *)(a2 + 8) = v5;
    *(unsigned char *)(a2 + 16) = v6 & 1;
  }
  return result;
}

uint64_t sub_25A58B9A4(char *a1, char *a2)
{
  return sub_25A5E7A50(*a1, *a2);
}

uint64_t sub_25A58B9B0()
{
  return sub_25A6234A0();
}

uint64_t sub_25A58B9F8()
{
  return sub_25A5494B0();
}

uint64_t sub_25A58BA00()
{
  return sub_25A6234A0();
}

uint64_t sub_25A58BA44@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_25A58F388();
  *a1 = result;
  return result;
}

uint64_t sub_25A58BA74@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_25A58B944(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_25A58BAA0()
{
  return sub_25A58B944(*v0);
}

uint64_t CrashReport.init(propertyListValue:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v31 = a2;
  uint64_t v4 = sub_25A6222E0();
  uint64_t v32 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  char v6 = (char *)v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A42A148);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_25A6223E0();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = &_s3KeyON_1;
  unint64_t v14 = sub_25A58DAF8();
  unint64_t v40 = v14;
  v38[0] = 0;
  sub_25A58DD88(&qword_26A42A158, MEMORY[0x263F60488]);
  sub_25A622760();
  if (v2)
  {
    uint64_t v15 = sub_25A6227C0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(a1, v15);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
  }
  uint64_t v29 = v6;
  uint64_t v30 = 0;
  uint64_t v33 = v13;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
  int v16 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10);
  uint64_t v28 = v4;
  uint64_t v17 = v10;
  if (v16 == 1)
  {
    sub_25A6223D0();
    sub_25A570C60((uint64_t)v9, &qword_26A42A148);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v33, v9, v10);
  }
  uint64_t v39 = &_s3KeyON_1;
  unint64_t v40 = v14;
  v38[0] = 1;
  uint64_t v18 = v30;
  sub_25A622710();
  if (v18)
  {
    uint64_t v19 = sub_25A6227C0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v19 - 8) + 8))(a1, v19);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v33, v10);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
  uint64_t v21 = v37;
  uint64_t v39 = &_s3KeyON_1;
  unint64_t v40 = v14;
  v38[0] = 2;
  sub_25A622710();
  v27[2] = v21;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
  uint64_t v22 = v36;
  uint64_t v39 = &_s3KeyON_1;
  unint64_t v40 = v14;
  v38[0] = 3;
  sub_25A622710();
  v27[1] = v22;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
  LODWORD(v22) = v42;
  uint64_t v39 = &_s3KeyON_1;
  unint64_t v40 = v14;
  v38[0] = 4;
  sub_25A622710();
  int v41 = v22;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
  uint64_t v39 = &_s3KeyON_1;
  unint64_t v40 = v14;
  v38[0] = 5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A42A160);
  sub_25A58DB4C();
  sub_25A622760();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
  uint64_t v23 = v35;
  uint64_t v39 = &_s3KeyON_1;
  unint64_t v40 = v14;
  v38[0] = 6;
  uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A42A170);
  sub_25A58DC40();
  sub_25A622710();
  uint64_t v30 = 0;
  v27[0] = v23;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
  uint64_t v39 = &_s3KeyON_1;
  unint64_t v40 = v14;
  v38[0] = 7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A42A188);
  sub_25A58DCE4();
  uint64_t v24 = v30;
  sub_25A622710();
  if (v24)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v25 = sub_25A6227C0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v25 - 8) + 8))(a1, v25);
    (*(void (**)(char *, uint64_t))(v32 + 8))(v29, v28);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v33, v17);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
    uint64_t v30 = v34;
    uint64_t v39 = &_s3KeyON_1;
    unint64_t v40 = v14;
    v38[0] = 8;
    sub_25A622760();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
    sub_25A622400();
    uint64_t v26 = sub_25A6227C0();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v26 - 8) + 8))(a1, v26);
  }
}

uint64_t CrashReport.propertyListValue.getter()
{
  return sub_25A622780();
}

uint64_t sub_25A58C2FC()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A42A220);
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v53 = &v39[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A42A148);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v52 = &v39[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A42A228);
  uint64_t v5 = v4 - 8;
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = &v39[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = &v39[-v9];
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A42A230);
  uint64_t v12 = v11 - 8;
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v15 = &v39[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v13);
  uint64_t v51 = &v39[-v16];
  uint64_t v17 = &v39[*(int *)(v12 + 56) - v16];
  v39[-v16] = 0;
  sub_25A622410();
  uint64_t v44 = sub_25A622440();
  uint64_t v43 = v18;
  uint64_t v42 = sub_25A622550();
  uint64_t v41 = v19;
  int v40 = sub_25A622430();
  uint64_t v20 = *(int *)(v5 + 56);
  uint64_t v21 = v10;
  uint64_t v50 = v10;
  uint64_t v22 = &v10[v20];
  *uint64_t v21 = 4;
  sub_25A622450();
  uint64_t v23 = sub_25A622420();
  uint64_t v49 = v23;
  uint64_t v24 = sub_25A622540();
  uint64_t v47 = v24;
  uint64_t v25 = sub_25A622530();
  uint64_t v48 = v25;
  uint64_t v46 = sub_25A6223B0();
  uint64_t v45 = v26;
  uint64_t v27 = &v15[*(int *)(v12 + 56)];
  *uint64_t v15 = 0;
  uint64_t v28 = sub_25A6223E0();
  uint64_t v29 = *(void *)(v28 - 8);
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v29 + 16))(v27, v17, v28);
  uint64_t v30 = v52;
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v29 + 32))(v52, v27, v28);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v29 + 56))(v30, 0, 1, v28);
  char v73 = 0;
  char v72 = 1;
  uint64_t v70 = v44;
  uint64_t v71 = v43;
  char v69 = 2;
  uint64_t v67 = v42;
  uint64_t v68 = v41;
  char v66 = 3;
  int v64 = v40;
  char v65 = 0;
  uint64_t v31 = &v8[*(int *)(v5 + 56)];
  *uint64_t v8 = 4;
  uint64_t v32 = sub_25A6222E0();
  uint64_t v33 = *(void *)(v32 - 8);
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v33 + 16))(v31, v22, v32);
  uint64_t v34 = v53;
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v33 + 32))(v53, v31, v32);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v33 + 56))(v34, 0, 1, v32);
  char v63 = 4;
  char v62 = 5;
  uint64_t v61 = v23;
  char v60 = 6;
  uint64_t v59 = v24;
  char v58 = 7;
  uint64_t v57 = v25;
  char v56 = 8;
  uint64_t v54 = v46;
  uint64_t v55 = v45;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A42A160);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A42A170);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A42A188);
  sub_25A58DAF8();
  sub_25A58DD88(&qword_26A42A158, MEMORY[0x263F60488]);
  sub_25A58DB4C();
  sub_25A58DC40();
  sub_25A58DCE4();
  uint64_t v35 = (uint64_t)v53;
  uint64_t v36 = (uint64_t)v52;
  uint64_t v37 = sub_25A622A20();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_25A570C60(v35, &qword_26A42A220);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_25A570C60(v36, &qword_26A42A148);
  sub_25A570C60((uint64_t)v50, &qword_26A42A228);
  sub_25A570C60((uint64_t)v51, &qword_26A42A230);
  return v37;
}

uint64_t sub_25A58C934()
{
  return sub_25A622780();
}

uint64_t sub_25A58C970@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return CrashReport.init(propertyListValue:)(a1, a2);
}

uint64_t CrashReport.ID.propertyListValue.getter()
{
  uint64_t v0 = sub_25A622310();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25A6223C0();
  uint64_t v4 = sub_25A622300();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4;
}

uint64_t CrashReport.ID.init(propertyListValue:)()
{
  uint64_t v1 = sub_25A622310();
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t result = sub_25A6222F0();
  if (!v0) {
    return sub_25A6223F0();
  }
  return result;
}

uint64_t sub_25A58CB18(char a1)
{
  return *(void *)&aImageindimageo_0[8 * a1];
}

uint64_t sub_25A58CB38@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_25A622310();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25A6223C0();
  uint64_t v6 = sub_25A622300();
  uint64_t v8 = v7;
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  *a1 = v6;
  a1[1] = v8;
  return result;
}

uint64_t sub_25A58CC18()
{
  uint64_t v1 = sub_25A622310();
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t result = sub_25A6222F0();
  if (!v0) {
    return sub_25A6223F0();
  }
  return result;
}

uint64_t sub_25A58CCB8(char *a1, char *a2)
{
  return sub_25A5E79C8(*a1, *a2);
}

uint64_t sub_25A58CCC4()
{
  return sub_25A617BF4();
}

uint64_t sub_25A58CCCC()
{
  return sub_25A54945C();
}

uint64_t sub_25A58CCD4()
{
  return sub_25A61E9B4();
}

uint64_t sub_25A58CCDC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_25A58F3D4();
  *a1 = result;
  return result;
}

uint64_t sub_25A58CD0C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_25A58CB18(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_25A58CD38()
{
  return sub_25A58CB18(*v0);
}

uint64_t CrashReport.Frame.init(propertyListValue:)(uint64_t a1)
{
  uint64_t v8 = &_s3KeyON_0;
  unint64_t v3 = sub_25A58DDD8();
  unint64_t v9 = v3;
  v7[0] = 0;
  sub_25A622710();
  if (v1)
  {
    uint64_t v4 = sub_25A6227C0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
    uint64_t v8 = &_s3KeyON_0;
    unint64_t v9 = v3;
    v7[0] = 1;
    sub_25A622710();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
    uint64_t v8 = &_s3KeyON_0;
    unint64_t v9 = v3;
    v7[0] = 2;
    sub_25A622760();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
    uint64_t v8 = &_s3KeyON_0;
    unint64_t v9 = v3;
    v7[0] = 3;
    sub_25A622760();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
    uint64_t v8 = &_s3KeyON_0;
    unint64_t v9 = v3;
    v7[0] = 4;
    sub_25A622760();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
    uint64_t v8 = &_s3KeyON_0;
    unint64_t v9 = v3;
    v7[0] = 5;
    sub_25A622760();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
    sub_25A622460();
    uint64_t v5 = sub_25A6227C0();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  }
}

uint64_t CrashReport.Frame.propertyListValue.getter()
{
  return sub_25A622780();
}

uint64_t sub_25A58D0AC()
{
  sub_25A622470();
  sub_25A6224A0();
  sub_25A6224C0();
  sub_25A6224B0();
  sub_25A622480();
  sub_25A622490();
  sub_25A58DDD8();
  uint64_t v0 = sub_25A622A40();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_25A58D238(char a1)
{
  return *(void *)&aUuid_2[8 * a1];
}

uint64_t sub_25A58D250()
{
  return sub_25A622780();
}

uint64_t sub_25A58D28C(uint64_t a1)
{
  return CrashReport.Frame.init(propertyListValue:)(a1);
}

uint64_t sub_25A58D2A4(char *a1, char *a2)
{
  return sub_25A5E7960(*a1, *a2);
}

uint64_t sub_25A58D2B0()
{
  return sub_25A617C60();
}

uint64_t sub_25A58D2B8()
{
  return sub_25A54941C();
}

uint64_t sub_25A58D2C0()
{
  return sub_25A61EA1C();
}

uint64_t sub_25A58D2C8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_25A58F420();
  *a1 = result;
  return result;
}

uint64_t sub_25A58D2F8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_25A58D238(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_25A58D324()
{
  return sub_25A58D238(*v0);
}

uint64_t CrashReport.Image.init(propertyListValue:)(uint64_t a1)
{
  uint64_t v8 = &_s3KeyON;
  unint64_t v3 = sub_25A58DE34();
  unint64_t v9 = v3;
  v7[0] = 0;
  sub_25A622710();
  if (v1)
  {
    uint64_t v4 = sub_25A6227C0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
    uint64_t v8 = &_s3KeyON;
    unint64_t v9 = v3;
    v7[0] = 1;
    sub_25A622760();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
    uint64_t v8 = &_s3KeyON;
    unint64_t v9 = v3;
    v7[0] = 2;
    sub_25A622710();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
    uint64_t v8 = &_s3KeyON;
    unint64_t v9 = v3;
    v7[0] = 3;
    sub_25A622760();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
    uint64_t v8 = &_s3KeyON;
    unint64_t v9 = v3;
    v7[0] = 4;
    sub_25A622760();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
    sub_25A622510();
    uint64_t v6 = sub_25A6227C0();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
  }
}

uint64_t CrashReport.Image.propertyListValue.getter()
{
  return sub_25A622780();
}

uint64_t sub_25A58D694()
{
  sub_25A622520();
  sub_25A6224D0();
  sub_25A6224E0();
  sub_25A622500();
  sub_25A6224F0();
  sub_25A58DE34();
  uint64_t v0 = sub_25A622A50();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_25A58D7F8()
{
  return sub_25A622780();
}

uint64_t sub_25A58D834(uint64_t a1)
{
  return CrashReport.Image.init(propertyListValue:)(a1);
}

uint64_t sub_25A58D84C()
{
  return 0x7065526873617263;
}

uint64_t sub_25A58D86C(uint64_t a1)
{
  unint64_t v9 = &type metadata for ProcessIdentifier.Key;
  unint64_t v3 = sub_25A58DA50();
  unint64_t v10 = v3;
  v8[0] = 0;
  sub_25A58DAA4();
  sub_25A622710();
  if (v1)
  {
    uint64_t v4 = sub_25A6227C0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
    unint64_t v9 = &type metadata for ProcessIdentifier.Key;
    unint64_t v10 = v3;
    v8[0] = 1;
    sub_25A622710();
    uint64_t v6 = sub_25A6227C0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
    if (v7) {
      return v7;
    }
    else {
      return v7;
    }
  }
}

unsigned char *sub_25A58DA40(unsigned char *result, unsigned char *a2)
{
  char v3 = *(unsigned char *)(v2 + 32);
  *uint64_t result = 0;
  *a2 = v3;
  return result;
}

unint64_t sub_25A58DA50()
{
  unint64_t result = qword_26A42A138;
  if (!qword_26A42A138)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42A138);
  }
  return result;
}

unint64_t sub_25A58DAA4()
{
  unint64_t result = qword_26A42A140;
  if (!qword_26A42A140)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42A140);
  }
  return result;
}

unint64_t sub_25A58DAF8()
{
  unint64_t result = qword_26A42A150;
  if (!qword_26A42A150)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42A150);
  }
  return result;
}

unint64_t sub_25A58DB4C()
{
  unint64_t result = qword_26A42A168;
  if (!qword_26A42A168)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A42A160);
    sub_25A58DBD4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42A168);
  }
  return result;
}

unint64_t sub_25A58DBD4()
{
  unint64_t result = qword_26A429488;
  if (!qword_26A429488)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A429438);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A429488);
  }
  return result;
}

unint64_t sub_25A58DC40()
{
  unint64_t result = qword_26A42A178;
  if (!qword_26A42A178)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A42A170);
    sub_25A58DD88(&qword_26A42A180, MEMORY[0x263F60498]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42A178);
  }
  return result;
}

unint64_t sub_25A58DCE4()
{
  unint64_t result = qword_26A42A190;
  if (!qword_26A42A190)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A42A188);
    sub_25A58DD88(&qword_26A42A198, MEMORY[0x263F60490]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42A190);
  }
  return result;
}

uint64_t sub_25A58DD88(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_25A58DDD0()
{
  return sub_25A58C2FC();
}

unint64_t sub_25A58DDD8()
{
  unint64_t result = qword_26A42A1A0;
  if (!qword_26A42A1A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42A1A0);
  }
  return result;
}

uint64_t sub_25A58DE2C()
{
  return sub_25A58D0AC();
}

unint64_t sub_25A58DE34()
{
  unint64_t result = qword_26A42A1A8;
  if (!qword_26A42A1A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42A1A8);
  }
  return result;
}

uint64_t sub_25A58DE88()
{
  return sub_25A58D694();
}

unint64_t sub_25A58DE94()
{
  unint64_t result = qword_26A42A1B0;
  if (!qword_26A42A1B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42A1B0);
  }
  return result;
}

ValueMetadata *type metadata accessor for CrashListenerInterface()
{
  return &type metadata for CrashListenerInterface;
}

uint64_t destroy for CrashListenerInterface.TwoWayMessage(uint64_t result)
{
  unsigned int v1 = *(unsigned __int8 *)(result + 16);
  if (v1 <= 1) {
    return sub_25A58AAE4(*(void *)result, *(void *)(result + 8), v1 != 0);
  }
  return result;
}

uint64_t initializeWithCopy for CrashListenerInterface.TwoWayMessage(uint64_t a1, uint64_t *a2)
{
  unsigned int v4 = *((unsigned __int8 *)a2 + 16);
  if (v4 > 1)
  {
    long long v8 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v8;
  }
  else
  {
    BOOL v5 = v4 != 0;
    uint64_t v6 = *a2;
    uint64_t v7 = a2[1];
    sub_25A58A6BC(*a2, v7, v4 != 0);
    *(void *)a1 = v6;
    *(void *)(a1 + 8) = v7;
    *(unsigned char *)(a1 + 16) = v5;
    *(void *)(a1 + 24) = a2[3];
  }
  return a1;
}

uint64_t assignWithCopy for CrashListenerInterface.TwoWayMessage(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = *(unsigned __int8 *)(a1 + 16);
  unsigned int v5 = *(unsigned __int8 *)(a2 + 16);
  if (v4 > 1)
  {
    if (v5 <= 1)
    {
      BOOL v12 = v5 != 0;
      uint64_t v13 = *(void *)a2;
      uint64_t v14 = *(void *)(a2 + 8);
      sub_25A58A6BC(*(void *)a2, v14, v5 != 0);
      *(void *)a1 = v13;
      *(void *)(a1 + 8) = v14;
      *(unsigned char *)(a1 + 16) = v12;
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      return a1;
    }
LABEL_7:
    long long v15 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v15;
    return a1;
  }
  if (v5 > 1)
  {
    sub_25A58AAE4(*(void *)a1, *(void *)(a1 + 8), v4 & 1);
    goto LABEL_7;
  }
  BOOL v6 = v5 != 0;
  uint64_t v7 = *(void *)a2;
  uint64_t v8 = *(void *)(a2 + 8);
  sub_25A58A6BC(*(void *)a2, v8, v5 != 0);
  uint64_t v9 = *(void *)a1;
  uint64_t v10 = *(void *)(a1 + 8);
  char v11 = *(unsigned char *)(a1 + 16);
  *(void *)a1 = v7;
  *(void *)(a1 + 8) = v8;
  *(unsigned char *)(a1 + 16) = v6;
  sub_25A58AAE4(v9, v10, v11);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  return a1;
}

uint64_t assignWithTake for CrashListenerInterface.TwoWayMessage(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = *(unsigned __int8 *)(a1 + 16);
  if (v4 > 1) {
    goto LABEL_5;
  }
  unsigned int v5 = *(unsigned __int8 *)(a2 + 16);
  char v6 = v4 & 1;
  if (v5 > 1)
  {
    sub_25A58AAE4(*(void *)a1, *(void *)(a1 + 8), v6);
LABEL_5:
    long long v9 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v9;
    return a1;
  }
  uint64_t v7 = *(void *)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v5 != 0;
  sub_25A58AAE4(v7, v8, v6);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for CrashListenerInterface.TwoWayMessage(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 1) {
    unsigned int v4 = -1;
  }
  else {
    unsigned int v4 = v3 ^ 0xFF;
  }
  if (v4 + 1 >= 2) {
    return v4;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for CrashListenerInterface.TwoWayMessage(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_OWORD *)unint64_t result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)unint64_t result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 32) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = ~(_BYTE)a2;
    }
  }
  return result;
}

uint64_t sub_25A58E17C(uint64_t a1)
{
  unsigned int v1 = *(unsigned __int8 *)(a1 + 16);
  if (v1 > 1) {
    return (v1 ^ 0xFF) + 1;
  }
  else {
    return 0;
  }
}

void *sub_25A58E190(void *result, unsigned int a2)
{
  if (a2 > 0xFE)
  {
    result[2] = 0;
    result[3] = 0;
    *unint64_t result = a2 - 255;
    result[1] = 0;
  }
  else if (a2)
  {
    *((unsigned char *)result + 16) = -(char)a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for CrashListenerInterface.TwoWayMessage()
{
  return &type metadata for CrashListenerInterface.TwoWayMessage;
}

uint64_t destroy for NextCrashRequest(uint64_t a1)
{
  return sub_25A58AAE4(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t initializeWithCopy for NextCrashRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  char v6 = *(unsigned char *)(a2 + 16);
  sub_25A58A6BC(*(void *)a2, v5, v6);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  return a1;
}

uint64_t assignWithCopy for NextCrashRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  char v6 = *(unsigned char *)(a2 + 16);
  sub_25A58A6BC(*(void *)a2, v5, v6);
  uint64_t v7 = *(void *)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  char v9 = *(unsigned char *)(a1 + 16);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 16) = v6;
  sub_25A58AAE4(v7, v8, v9);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  return a1;
}

uint64_t assignWithTake for NextCrashRequest(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a2 + 16);
  uint64_t v5 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  char v7 = *(unsigned char *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v4;
  sub_25A58AAE4(v5, v6, v7);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for NextCrashRequest(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for NextCrashRequest(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)unint64_t result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 32) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NextCrashRequest()
{
  return &type metadata for NextCrashRequest;
}

uint64_t initializeBufferWithCopyOfBuffer for NextCrashResponse(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_25A622560();
  uint64_t v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);

  return v5(a1, a2, v4);
}

uint64_t destroy for NextCrashResponse(uint64_t a1)
{
  uint64_t v2 = sub_25A622560();
  unsigned int v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(a1, v2);
}

uint64_t initializeWithCopy for NextCrashResponse(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_25A622560();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for NextCrashResponse(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_25A622560();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for NextCrashResponse(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_25A622560();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for NextCrashResponse(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_25A622560();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for NextCrashResponse(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25A58E604);
}

uint64_t sub_25A58E604(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_25A622560();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for NextCrashResponse(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25A58E684);
}

uint64_t sub_25A58E684(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_25A622560();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for NextCrashResponse()
{
  uint64_t result = qword_26A42A1B8;
  if (!qword_26A42A1B8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_25A58E740()
{
  uint64_t result = sub_25A622560();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_25A58E7D0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_25A58A6BC(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for ProcessIdentifier(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_25A58A6BC(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  char v8 = *(unsigned char *)(a1 + 16);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  sub_25A58AAE4(v6, v7, v8);
  return a1;
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for ProcessIdentifier(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  char v6 = *(unsigned char *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v3;
  sub_25A58AAE4(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for ProcessIdentifier(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ProcessIdentifier(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_25A58E95C(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16);
}

uint64_t sub_25A58E964(uint64_t result, char a2)
{
  *(unsigned char *)(result + 16) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for ProcessIdentifier()
{
  return &type metadata for ProcessIdentifier;
}

unsigned char *_s3KeyOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *__n128 result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25A58EA4CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *_s3KeyOMa()
{
  return &_s3KeyON;
}

uint64_t _s3KeyOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFB) {
    goto LABEL_17;
  }
  if (a2 + 5 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 5) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 5;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 6;
  int v8 = v6 - 6;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s3KeyOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *__n128 result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25A58EBE0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *_s3KeyOMa_0()
{
  return &_s3KeyON_0;
}

uint64_t _s3KeyOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF8) {
    goto LABEL_17;
  }
  if (a2 + 8 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 8) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 8;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 8;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 8;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 9;
  int v8 = v6 - 9;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s3KeyOwst_1(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *__n128 result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25A58ED74);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *_s3KeyOMa_1()
{
  return &_s3KeyON_1;
}

ValueMetadata *type metadata accessor for ProcessIdentifier.Discriminant()
{
  return &type metadata for ProcessIdentifier.Discriminant;
}

ValueMetadata *type metadata accessor for ProcessIdentifier.Key()
{
  return &type metadata for ProcessIdentifier.Key;
}

unsigned char *storeEnumTagSinglePayload for NextCrashResponse.Key(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *__n128 result = a2;
        return result;
      case 2:
        *(_WORD *)__n128 result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)__n128 result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *__n128 result = 0;
      break;
    case 2:
      *(_WORD *)__n128 result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x25A58EE6CLL);
    case 4:
      *(_DWORD *)__n128 result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for NextCrashResponse.Key()
{
  return &type metadata for NextCrashResponse.Key;
}

ValueMetadata *type metadata accessor for NextCrashRequest.Key()
{
  return &type metadata for NextCrashRequest.Key;
}

ValueMetadata *type metadata accessor for CrashListenerInterface.TwoWayMessage.Discriminant()
{
  return &type metadata for CrashListenerInterface.TwoWayMessage.Discriminant;
}

unsigned char *_s19PreviewsMessagingOS17ProcessIdentifierO12DiscriminantOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25A58EF90);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CrashListenerInterface.TwoWayMessage.Key()
{
  return &type metadata for CrashListenerInterface.TwoWayMessage.Key;
}

unint64_t sub_25A58EFCC()
{
  unint64_t result = qword_26A42A1C8;
  if (!qword_26A42A1C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42A1C8);
  }
  return result;
}

unint64_t sub_25A58F024()
{
  unint64_t result = qword_26A42A1D0;
  if (!qword_26A42A1D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42A1D0);
  }
  return result;
}

unint64_t sub_25A58F07C()
{
  unint64_t result = qword_26A42A1D8;
  if (!qword_26A42A1D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42A1D8);
  }
  return result;
}

unint64_t sub_25A58F0D4()
{
  unint64_t result = qword_26A42A1E0;
  if (!qword_26A42A1E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42A1E0);
  }
  return result;
}

unint64_t sub_25A58F12C()
{
  unint64_t result = qword_26A42A1E8;
  if (!qword_26A42A1E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42A1E8);
  }
  return result;
}

unint64_t sub_25A58F184()
{
  unint64_t result = qword_26A42A1F0;
  if (!qword_26A42A1F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42A1F0);
  }
  return result;
}

unint64_t sub_25A58F1DC()
{
  unint64_t result = qword_26A42A1F8;
  if (!qword_26A42A1F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42A1F8);
  }
  return result;
}

unint64_t sub_25A58F234()
{
  unint64_t result = qword_26A42A200;
  if (!qword_26A42A200)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42A200);
  }
  return result;
}

unint64_t sub_25A58F28C()
{
  unint64_t result = qword_26A42A208;
  if (!qword_26A42A208)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42A208);
  }
  return result;
}

unint64_t sub_25A58F2E0()
{
  unint64_t result = qword_26A42A210;
  if (!qword_26A42A210)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42A210);
  }
  return result;
}

unint64_t sub_25A58F334()
{
  unint64_t result = qword_26A42A218;
  if (!qword_26A42A218)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42A218);
  }
  return result;
}

uint64_t sub_25A58F388()
{
  unint64_t v0 = sub_25A6232B0();
  swift_bridgeObjectRelease();
  if (v0 >= 9) {
    return 9;
  }
  else {
    return v0;
  }
}

uint64_t sub_25A58F3D4()
{
  unint64_t v0 = sub_25A6232B0();
  swift_bridgeObjectRelease();
  if (v0 >= 6) {
    return 6;
  }
  else {
    return v0;
  }
}

uint64_t sub_25A58F420()
{
  unint64_t v0 = sub_25A6232B0();
  swift_bridgeObjectRelease();
  if (v0 >= 5) {
    return 5;
  }
  else {
    return v0;
  }
}

uint64_t sub_25A58F46C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(v2 + 16);
  uint64_t v5 = sub_25A622560();
  uint64_t v8 = *(void *)(v5 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(a2, v4, v5);
  unsigned int v6 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v8 + 56);

  return v6(a2, 0, 1, v5);
}

uint64_t sub_25A58F53C()
{
  return sub_25A58A7CC();
}

unsigned char *sub_25A58F554(unsigned char *result, BOOL *a2)
{
  int v3 = ~*(_DWORD *)(v2 + 32);
  *unint64_t result = 0;
  *a2 = v3 != 0;
  return result;
}

uint64_t TransportReply.send(error:file:line:column:function:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v18[4] = a8;
  v18[2] = a6;
  v18[3] = a7;
  v18[1] = a5;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A429D78);
  MEMORY[0x270FA5388](v9);
  char v11 = (void *)((char *)v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = sub_25A622C10();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  long long v15 = (char *)v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25A622C20();
  *char v11 = a1;
  swift_storeEnumTagMultiPayload();
  id v16 = a1;
  __swift_instantiateConcreteTypeFromMangledName(qword_26A429C58);
  sub_25A622640();
  sub_25A570C60((uint64_t)v11, &qword_26A429D78);
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
}

uint64_t TransportReply.init(file:line:column:function:fulfilling:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>, uint64_t a9)
{
  return sub_25A592470(a1, a2, a3, a4, a5, a6, a7, a8, a9, &qword_26A429E68, (uint64_t)&unk_270843BD8, (uint64_t)sub_25A592A5C);
}

uint64_t TransportReply.init<A>(file:line:column:function:fulfilling:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, int a8@<W7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12)
{
  return sub_25A591E5C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, MEMORY[0x263F60670], (uint64_t)&unk_270843C00, (uint64_t)sub_25A592A94);
}

uint64_t TransportReply.continuation.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(qword_26A429C58);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t TransportReply.init(wrapping:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(qword_26A429C58);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32);

  return v5(a2, a1, v4);
}

uint64_t TransportReply.send<A>(_:file:line:column:function:)(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned __int8 a9, uint64_t a10, uint64_t a11)
{
  v25[1] = a3;
  uint64_t v32 = a7;
  uint64_t v33 = a8;
  uint64_t v28 = a5;
  uint64_t v29 = a6;
  uint64_t v35 = a1;
  uint64_t v30 = a11;
  uint64_t v31 = a10;
  int v26 = a9;
  int v27 = a4;
  uint64_t v11 = sub_25A6227C0();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A429D78);
  MEMORY[0x270FA5388](v34);
  id v16 = (char *)v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = sub_25A622C10();
  uint64_t v17 = *(void *)(v36 - 8);
  MEMORY[0x270FA5388](v36);
  uint64_t v19 = (char *)v25 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(qword_26A429C58);
  uint64_t v21 = *(void *)(v20 - 8);
  MEMORY[0x270FA5388](v20);
  uint64_t v23 = (char *)v25 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v21 + 16))(v23, v25[0], v20);
  sub_25A622C20();
  sub_25A622AF0();
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v16, v14, v11);
  type metadata accessor for LazyPropertyList();
  swift_storeEnumTagMultiPayload();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  swift_storeEnumTagMultiPayload();
  sub_25A622640();
  sub_25A570C60((uint64_t)v16, &qword_26A429D78);
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v36);
  return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v23, v20);
}

uint64_t TransportReply.send<A>(result:file:line:column:function:)(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned __int8 a9, uint64_t a10, uint64_t a11)
{
  v25[1] = a3;
  uint64_t v30 = a7;
  uint64_t v31 = a8;
  uint64_t v28 = a5;
  uint64_t v29 = a6;
  uint64_t v32 = a1;
  int v26 = a9;
  int v27 = a4;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A429D78);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = (char *)v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_25A622C10();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(qword_26A429C58);
  uint64_t v19 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v21 = (char *)v25 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v19 + 16))(v21, v25[0], v18);
  sub_25A622C20();
  uint64_t v35 = a10;
  uint64_t v36 = a11;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v33 = a11;
  uint64_t v34 = KeyPath;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A429388);
  uint64_t v23 = sub_25A6234B0();
  type metadata accessor for LazyPropertyList();
  sub_25A58FF1C((void (*)(char *))sub_25A592B28, v23, (uint64_t)v13);
  swift_release();
  sub_25A622640();
  sub_25A570C60((uint64_t)v13, &qword_26A429D78);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  return (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v21, v18);
}

uint64_t sub_25A58FE98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_25A6227C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  type metadata accessor for LazyPropertyList();

  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_25A58FF1C@<X0>(void (*a1)(char *)@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](a1);
  uint64_t v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v13 + 16))(v12, v14);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(uint64_t, char *, void))(*(void *)(*(void *)(a2 + 24) - 8) + 32))(a3, v12, *(void *)(a2 + 24));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v10, v12, v6);
    a1(v10);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  }
  sub_25A6234B0();
  return swift_storeEnumTagMultiPayload();
}

uint64_t TransportReply.send(file:line:column:function:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v17 = a8;
  v16[0] = a6;
  v16[1] = a7;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A429D78);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_25A622C10();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)v16 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25A622C20();
  _s19PreviewsMessagingOS24CanvasControlDescriptionV9ModifiersV17propertyListValue0a10FoundationC008PropertyI0Vvg_0();
  type metadata accessor for LazyPropertyList();
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  __swift_instantiateConcreteTypeFromMangledName(qword_26A429C58);
  sub_25A622640();
  sub_25A570C60((uint64_t)v10, &qword_26A429D78);
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
}

uint64_t TransportReply.send(result:file:line:column:function:)(void *a1, int a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unsigned __int8 a10)
{
  uint64_t v11 = v10;
  uint64_t v35 = a8;
  uint64_t v32 = a6;
  uint64_t v33 = a7;
  int v31 = a5;
  int v27 = a1;
  uint64_t v28 = a4;
  int v34 = a2;
  uint64_t v30 = a9;
  int v29 = a10;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A429D78);
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (uint64_t *)((char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = sub_25A622C10();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)&v26 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(qword_26A429C58);
  uint64_t v20 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  uint64_t v22 = (char *)&v26 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))(v22, v11, v19);
  sub_25A622C20();
  if (v34)
  {
    uint64_t v23 = v27;
    *uint64_t v14 = v27;
    swift_storeEnumTagMultiPayload();
    id v24 = v23;
  }
  else
  {
    _s19PreviewsMessagingOS24CanvasControlDescriptionV9ModifiersV17propertyListValue0a10FoundationC008PropertyI0Vvg_0();
    type metadata accessor for LazyPropertyList();
    swift_storeEnumTagMultiPayload();
    swift_storeEnumTagMultiPayload();
  }
  sub_25A622640();
  sub_25A570C60((uint64_t)v14, &qword_26A429D78);
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v22, v19);
}

uint64_t TransportReply.track<A, B>(task:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  v20[0] = a4;
  v20[1] = a1;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(qword_26A429C58);
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A429388);
  uint64_t v14 = sub_25A622680();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)v20 - v16;
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v6, v10);
  uint64_t v18 = (void *)swift_allocObject();
  v18[2] = a2;
  v18[3] = a3;
  v18[4] = v20[0];
  void v18[5] = a5;
  sub_25A622660();
  swift_release();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  sub_25A622630();
  return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v17, v14);
}

uint64_t sub_25A5907E4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_25A6227C0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25A622AF0();
  (*(void (**)(uint64_t, char *, uint64_t))(v3 + 16))(a1, v5, v2);
  type metadata accessor for LazyPropertyList();
  swift_storeEnumTagMultiPayload();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t TransportReply.track<A>(task:)()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A42A238);
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(qword_26A429C58);
  sub_25A622660();
  sub_25A622630();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_25A590A60()
{
  _s19PreviewsMessagingOS24CanvasControlDescriptionV9ModifiersV17propertyListValue0a10FoundationC008PropertyI0Vvg_0();
  type metadata accessor for LazyPropertyList();

  return swift_storeEnumTagMultiPayload();
}

uint64_t TransportReply.wrappingError(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(qword_26A429C58);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v17 - v13;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, v4, v8);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = a1;
  *(void *)(v15 + 24) = a2;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A429388);
  sub_25A6225E0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v9 + 32))(a3, v14, v8);
}

uint64_t TransportReply.loggingResult(logger:level:for:)@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v6 = v5;
  uint64_t v28 = a3;
  uint64_t v29 = a4;
  int v27 = a2;
  uint64_t v30 = a5;
  uint64_t v8 = sub_25A622C70();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(qword_26A429C58);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v26 = (char *)&v25 - v17;
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v16, v6, v12);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
  unint64_t v18 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v19 = v18 + v10;
  uint64_t v20 = swift_allocObject();
  unint64_t v21 = (v19 & 0xFFFFFFFFFFFFFFF8) + v20;
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v20 + v18, v11, v8);
  *(unsigned char *)(v20 + v19) = v27;
  uint64_t v22 = v29;
  *(void *)(v21 + 8) = v28;
  *(void *)(v21 + 16) = v22;
  type metadata accessor for LazyPropertyList();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A429388);
  uint64_t v23 = v26;
  sub_25A6225F0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v13 + 32))(v30, v23, v12);
}

uint64_t sub_25A590F44@<X0>(uint64_t a1@<X0>, os_log_type_t a2@<W2>, uint64_t a3@<X3>, unint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A429D78);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (void **)((char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_25A595264(a1, (uint64_t)v12, &qword_26A429D78);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v13 = *v12;
    swift_bridgeObjectRetain();
    id v14 = v13;
    swift_bridgeObjectRetain();
    id v15 = v13;
    uint64_t v16 = sub_25A622C60();
    os_log_type_t v17 = sub_25A623130();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = swift_slowAlloc();
      uint64_t v19 = (void *)swift_slowAlloc();
      uint64_t v20 = swift_slowAlloc();
      uint64_t v31 = v20;
      *(_DWORD *)uint64_t v18 = 136446466;
      uint64_t v29 = a5;
      swift_bridgeObjectRetain();
      uint64_t v30 = sub_25A58497C(a3, a4, &v31);
      sub_25A623190();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v18 + 12) = 2114;
      id v21 = v13;
      uint64_t v22 = _swift_stdlib_bridgeErrorToNSError();
      uint64_t v30 = v22;
      a5 = v29;
      sub_25A623190();
      *uint64_t v19 = v22;

      _os_log_impl(&dword_25A547000, v16, v17, "Sending reply 'Failure' for %{public}s\nError: %{public}@", (uint8_t *)v18, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A429D88);
      swift_arrayDestroy();
      MEMORY[0x261140C30](v19, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x261140C30](v20, -1, -1);
      MEMORY[0x261140C30](v18, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
  }
  else
  {
    swift_bridgeObjectRetain_n();
    uint64_t v23 = sub_25A622C60();
    os_log_type_t v24 = a2;
    if (os_log_type_enabled(v23, a2))
    {
      uint64_t v29 = a1;
      uint64_t v25 = (uint8_t *)swift_slowAlloc();
      uint64_t v26 = swift_slowAlloc();
      uint64_t v31 = v26;
      *(_DWORD *)uint64_t v25 = 136446210;
      swift_bridgeObjectRetain();
      uint64_t v30 = sub_25A58497C(a3, a4, &v31);
      a1 = v29;
      sub_25A623190();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_25A547000, v23, v24, "Sending reply 'Success' for %{public}s", v25, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x261140C30](v26, -1, -1);
      MEMORY[0x261140C30](v25, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    sub_25A570C60((uint64_t)v12, &qword_26A429D78);
  }
  return sub_25A595264(a1, a5, &qword_26A429D78);
}

uint64_t TransportReply.init<A>(file:line:column:function:handler:)@<X0>(int a1@<W2>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, int a6@<W7>, uint64_t a7@<X8>, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  int v28 = a6;
  uint64_t v26 = a4;
  uint64_t v27 = a5;
  uint64_t v24 = a2;
  uint64_t v25 = a3;
  v23[3] = a1;
  uint64_t v31 = a7;
  uint64_t v29 = a11;
  uint64_t v30 = a8;
  uint64_t v11 = sub_25A622AC0();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  id v14 = (char *)v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_25A622C10();
  MEMORY[0x270FA5388](v15 - 8);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A429388);
  uint64_t v16 = sub_25A622680();
  MEMORY[0x270FA5388](v16 - 8);
  uint64_t v18 = (char *)v23 - v17;
  sub_25A622C20();
  uint64_t v19 = (void *)swift_allocObject();
  uint64_t v21 = v29;
  uint64_t v20 = v30;
  v19[2] = a10;
  v19[3] = v21;
  v19[4] = v20;
  v19[5] = a9;
  (*(void (**)(char *, void, uint64_t))(v12 + 104))(v14, *MEMORY[0x263F60560], v11);
  swift_retain();
  sub_25A622650();
  TransportReply.init<A>(resuming:)((uint64_t)v18, a10, v21, v31);
  return swift_release();
}

uint64_t TransportReply.init<A>(resuming:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(qword_26A429C58);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a2;
  *(void *)(v12 + 24) = a3;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A429388);
  uint64_t v14 = sub_25A622680();
  type metadata accessor for LazyPropertyList();
  sub_25A622670();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(a1, v14);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v9 + 32))(a4, v11, v8);
}

uint64_t TransportReply.init(file:line:column:function:handler:)@<X0>(uint64_t a1@<X1>, int a2@<W2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, int a7@<W7>, uint64_t a8@<X8>, uint64_t a9, uint64_t a10)
{
  int v30 = a7;
  uint64_t v28 = a5;
  uint64_t v29 = a6;
  uint64_t v26 = a3;
  uint64_t v27 = a4;
  int v25 = a2;
  v24[1] = a1;
  uint64_t v34 = a8;
  uint64_t v31 = a9;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(qword_26A429C58);
  uint64_t v32 = *(void *)(v10 - 8);
  uint64_t v33 = v10;
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_25A622AC0();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_25A622C10();
  MEMORY[0x270FA5388](v17 - 8);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A42A238);
  uint64_t v19 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v21 = (char *)v24 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25A622C20();
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = v31;
  *(void *)(v22 + 24) = a10;
  (*(void (**)(char *, void, uint64_t))(v14 + 104))(v16, *MEMORY[0x263F60560], v13);
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A429388);
  sub_25A622650();
  type metadata accessor for LazyPropertyList();
  sub_25A622660();
  (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
  (*(void (**)(uint64_t, char *, uint64_t))(v32 + 32))(v34, v12, v33);
  return swift_release();
}

uint64_t TransportReply.init(resuming:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(qword_26A429C58);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A42A238);
  type metadata accessor for LazyPropertyList();
  sub_25A622660();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(a1, v9);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v5 + 32))(a2, v7, v4);
}

uint64_t static TransportReply.ignored.getter()
{
  uint64_t v0 = type metadata accessor for LazyPropertyList();
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A429388);
  uint64_t v2 = MEMORY[0x263F8E4E0];

  return MEMORY[0x270F557A0](v0, v1, v2);
}

uint64_t sub_25A591C9C()
{
  uint64_t v1 = sub_25A6227C0();
  MEMORY[0x270FA5388](v1);
  uint64_t result = LazyPropertyList.propertyList.getter((uint64_t)&v4 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!v0) {
    return sub_25A622B00();
  }
  return result;
}

uint64_t sub_25A591D50()
{
  uint64_t v1 = sub_25A6227C0();
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t result = LazyPropertyList.propertyList.getter((uint64_t)&v4 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!v0) {
    return sub_25A622B00();
  }
  return result;
}

uint64_t TransportReply.init<A>(file:line:column:function:resuming:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, int a8@<W7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12)
{
  return sub_25A591E5C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, MEMORY[0x263F8F480], (uint64_t)&unk_270843D18, (uint64_t)sub_25A592E9C);
}

uint64_t sub_25A591E5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, int a8@<W7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t (*a13)(void, uint64_t, uint64_t, void), uint64_t a14, uint64_t a15)
{
  int v35 = a8;
  uint64_t v33 = a6;
  uint64_t v34 = a7;
  uint64_t v31 = a4;
  uint64_t v32 = a5;
  int v30 = a3;
  v29[1] = a1;
  v29[2] = a2;
  uint64_t v41 = a9;
  uint64_t v40 = a15;
  uint64_t v37 = a14;
  v29[0] = a10;
  uint64_t v15 = sub_25A622AC0();
  uint64_t v38 = *(void *)(v15 - 8);
  uint64_t v39 = v15;
  MEMORY[0x270FA5388](v15);
  uint64_t v36 = (char *)v29 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A429388);
  uint64_t v18 = a13(0, a11, v17, MEMORY[0x263F8E4E0]);
  uint64_t v19 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v21 = (char *)v29 - v20;
  uint64_t v22 = sub_25A622C10();
  MEMORY[0x270FA5388](v22 - 8);
  uint64_t v23 = sub_25A622680();
  MEMORY[0x270FA5388](v23 - 8);
  int v25 = (char *)v29 - v24;
  sub_25A622C20();
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v21, a10, v18);
  unint64_t v26 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  uint64_t v27 = swift_allocObject();
  *(void *)(v27 + 16) = a11;
  *(void *)(v27 + 24) = a12;
  (*(void (**)(unint64_t, char *, uint64_t))(v19 + 32))(v27 + v26, v21, v18);
  (*(void (**)(char *, void, uint64_t))(v38 + 104))(v36, *MEMORY[0x263F60560], v39);
  sub_25A622650();
  TransportReply.init<A>(resuming:)((uint64_t)v25, a11, a12, v41);
  return (*(uint64_t (**)(void, uint64_t))(v19 + 8))(v29[0], v18);
}

uint64_t sub_25A592188(uint64_t a1, uint64_t a2)
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A429388);
  uint64_t v3 = sub_25A622FB0();
  return sub_25A5921E8(a2, v3);
}

uint64_t sub_25A5921E8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](a1);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)(v8 + 24);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_25A6234B0();
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)&v18 - v14;
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))((char *)&v18 - v14, a1, v13);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v15, v9);
    return sub_25A622F90();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v7, v15, v3);
    return sub_25A622FA0();
  }
}

uint64_t TransportReply.init(file:line:column:function:resuming:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>, uint64_t a9)
{
  return sub_25A592470(a1, a2, a3, a4, a5, a6, a7, a8, a9, &qword_26A42A240, (uint64_t)&unk_270843D40, (uint64_t)sub_25A59302C);
}

uint64_t sub_25A592470@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>, uint64_t a9, uint64_t *a10, uint64_t a11, uint64_t a12)
{
  uint64_t v33 = a6;
  uint64_t v34 = a7;
  uint64_t v31 = a4;
  uint64_t v32 = a5;
  int v30 = a3;
  v29[1] = a1;
  v29[2] = a2;
  uint64_t v41 = a8;
  uint64_t v36 = a11;
  uint64_t v37 = a12;
  uint64_t v42 = a9;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(qword_26A429C58);
  uint64_t v39 = *(void *)(v12 - 8);
  uint64_t v40 = v12;
  MEMORY[0x270FA5388](v12);
  uint64_t v38 = (char *)v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = sub_25A622AC0();
  uint64_t v14 = *(void *)(v35 - 8);
  MEMORY[0x270FA5388](v35);
  v29[0] = (char *)v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(a10);
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = *(void *)(v17 + 64);
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = sub_25A622C10();
  MEMORY[0x270FA5388](v19 - 8);
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A42A238);
  uint64_t v21 = *(void *)(v20 - 8);
  MEMORY[0x270FA5388](v20);
  uint64_t v23 = (char *)v29 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25A622C20();
  uint64_t v24 = v16;
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))((char *)v29 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0), v42, v16);
  unint64_t v25 = (*(unsigned __int8 *)(v17 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  unint64_t v26 = swift_allocObject() + v25;
  (*(void (**)(unint64_t, char *, uint64_t))(v17 + 32))(v26, (char *)v29 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0), v24);
  (*(void (**)(void, void, uint64_t))(v14 + 104))(v29[0], *MEMORY[0x263F60560], v35);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A429388);
  sub_25A622650();
  type metadata accessor for LazyPropertyList();
  uint64_t v27 = v38;
  sub_25A622660();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v23, v20);
  (*(void (**)(uint64_t, char *, uint64_t))(v39 + 32))(v41, v27, v40);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 8))(v42, v24);
}

uint64_t sub_25A5928B0(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)(a2 + 8))
  {
    id v2 = *(id *)a2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A42A240);
    return sub_25A622F90();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A42A240);
    return sub_25A622FA0();
  }
}

uint64_t sub_25A59291C()
{
  return sub_25A622840();
}

uint64_t sub_25A5929CC()
{
  return sub_25A622840();
}

uint64_t sub_25A592A50()
{
  return objectdestroyTm_0(&qword_26A429E68);
}

uint64_t sub_25A592A5C(uint64_t a1, uint64_t a2)
{
  return sub_25A59304C(a1, a2, &qword_26A429E68, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_25A5929CC);
}

uint64_t sub_25A592A7C()
{
  return objectdestroy_2Tm(MEMORY[0x263F60670]);
}

uint64_t sub_25A592A94(uint64_t a1, uint64_t a2)
{
  return sub_25A592EC8(a1, a2, MEMORY[0x263F60670], (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_25A59291C);
}

uint64_t sub_25A592AC0(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

uint64_t sub_25A592AC8()
{
  return sub_25A622AF0();
}

uint64_t sub_25A592AF4()
{
  return 16;
}

__n128 sub_25A592B00(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_25A592B10()
{
  return 16;
}

__n128 sub_25A592B1C(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_25A592B28(uint64_t a1)
{
  return MEMORY[0x270FA0310](a1, *(void *)(v1 + 24));
}

uint64_t sub_25A592B30()
{
  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_25A592B40@<X0>(uint64_t a1@<X8>)
{
  return sub_25A5907E4(a1);
}

uint64_t sub_25A592B4C()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_25A592B84@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v2 + 16))(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_25A592BB8()
{
  uint64_t v1 = sub_25A622C70();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((v4 + *(void *)(v2 + 64)) & 0xFFFFFFFFFFFFFFF8) + 24;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, v6, v5);
}

uint64_t sub_25A592C5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(sub_25A622C70() - 8);
  unint64_t v6 = ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))
     + *(void *)(v5 + 64);
  uint64_t v7 = (v6 & 0xFFFFFFFFFFFFFFF8) + v2;
  uint64_t v8 = *(void *)(v7 + 8);
  unint64_t v9 = *(void *)(v7 + 16);
  os_log_type_t v10 = *(unsigned char *)(v2 + v6);

  return sub_25A590F44(a1, v10, v8, v9, a2);
}

uint64_t sub_25A592D0C()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_25A592D44(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t))(v2 + 32))(a2);
}

uint64_t sub_25A592D70()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_25A592D80()
{
  return sub_25A591D50();
}

uint64_t sub_25A592D9C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void, void))(v2 + 16))(*(void *)a2, *(unsigned __int8 *)(a2 + 8));
}

uint64_t sub_25A592DCC()
{
  return objectdestroy_2Tm(MEMORY[0x263F8F480]);
}

uint64_t objectdestroy_2Tm(uint64_t (*a1)(void, uint64_t, uint64_t, void))
{
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A429388);
  uint64_t v5 = a1(0, v3, v4, MEMORY[0x263F8E4E0]);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = (v7 + 32) & ~v7;
  uint64_t v9 = v8 + *(void *)(v6 + 64);
  uint64_t v10 = v7 | 7;
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v1 + v8, v5);

  return MEMORY[0x270FA0238](v1, v9, v10);
}

uint64_t sub_25A592E9C(uint64_t a1, uint64_t a2)
{
  return sub_25A592EC8(a1, a2, MEMORY[0x263F8F480], (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_25A592188);
}

uint64_t sub_25A592EC8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void, uint64_t, uint64_t, void), uint64_t (*a4)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v8 = *(void *)(v4 + 16);
  uint64_t v9 = *(void *)(v4 + 24);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A429388);
  uint64_t v11 = *(void *)(a3(0, v8, v10, MEMORY[0x263F8E4E0]) - 8);
  uint64_t v12 = v4 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));

  return a4(a1, a2, v12, v8, v9);
}

uint64_t sub_25A592F94()
{
  return objectdestroyTm_0(&qword_26A42A240);
}

uint64_t objectdestroyTm_0(uint64_t *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = (v4 + 16) & ~v4;
  uint64_t v6 = v5 + *(void *)(v3 + 64);
  uint64_t v7 = v4 | 7;
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1 + v5, v2);

  return MEMORY[0x270FA0238](v1, v6, v7);
}

uint64_t sub_25A59302C(uint64_t a1, uint64_t a2)
{
  return sub_25A59304C(a1, a2, &qword_26A42A240, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_25A5928B0);
}

uint64_t sub_25A59304C(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v7 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(a3) - 8);
  uint64_t v8 = v4 + ((*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));

  return a4(a1, a2, v8);
}

uint64_t TransportReply.init<A>(file:line:column:function:fulfilling:)@<X0>(int a1@<W2>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, int a6@<W7>, uint64_t a7@<X8>, uint64_t *a8, uint64_t a9)
{
  int v27 = a6;
  uint64_t v25 = a4;
  uint64_t v26 = a5;
  uint64_t v23 = a2;
  uint64_t v24 = a3;
  v22[1] = a1;
  uint64_t v29 = a7;
  uint64_t v28 = a9;
  uint64_t v9 = *a8;
  uint64_t v10 = sub_25A622AC0();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_25A622C10();
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v15 = *(void *)(v9 + *MEMORY[0x263F60608]);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A429388);
  uint64_t v16 = sub_25A622680();
  MEMORY[0x270FA5388](v16 - 8);
  uint64_t v18 = (char *)v22 - v17;
  sub_25A622C20();
  uint64_t v19 = swift_allocObject();
  uint64_t v20 = v28;
  *(void *)(v19 + 16) = v28;
  *(void *)(v19 + 24) = a8;
  (*(void (**)(char *, void, uint64_t))(v11 + 104))(v13, *MEMORY[0x263F60560], v10);
  swift_retain();
  sub_25A622650();
  TransportReply.init<A>(resuming:)((uint64_t)v18, v15, v20, v29);
  return swift_release();
}

uint64_t sub_25A59336C()
{
  return sub_25A622C00();
}

uint64_t (*TransportReply.makeEncodedReplyHandler(file:line:column:function:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8))(void *a1, void *a2)
{
  int v25 = a8;
  v23[3] = a6;
  _DWORD v23[4] = a7;
  v23[1] = a4;
  v23[2] = a5;
  uint64_t v8 = type metadata accessor for TransportReply();
  uint64_t v24 = *(void *)(v8 - 8);
  uint64_t v9 = *(void *)(v24 + 64);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_25A622C10();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  uint64_t v14 = MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)v23 - v16;
  sub_25A622C20();
  sub_25A5851D4(v26, (uint64_t)v10);
  uint64_t v18 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
  v18(v15, v17, v11);
  unint64_t v19 = (*(unsigned __int8 *)(v24 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
  unint64_t v20 = (v9 + *(unsigned __int8 *)(v12 + 80) + v19) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  uint64_t v21 = swift_allocObject();
  sub_25A5951A0((uint64_t)v10, v21 + v19, (uint64_t (*)(void))type metadata accessor for TransportReply);
  v18((char *)(v21 + v20), v15, v11);
  return sub_25A593BE0;
}

uint64_t type metadata accessor for TransportReply()
{
  uint64_t result = qword_26A42A250;
  if (!qword_26A42A250) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_25A59361C(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(qword_26A429C58);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)v39 - v13;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A429D78);
  uint64_t v16 = MEMORY[0x270FA5388](v15);
  uint64_t v18 = (void *)((char *)v39 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v19 = MEMORY[0x270FA5388](v16);
  uint64_t v21 = (void *)((char *)v39 - v20);
  if (a1)
  {
    id v22 = a1;
    id v23 = objc_msgSend(v22, sel_data);
    uint64_t v24 = sub_25A6222D0();
    uint64_t v26 = v25;

    *uint64_t v21 = v24;
    v21[1] = v26;
    type metadata accessor for LazyPropertyList();
    swift_storeEnumTagMultiPayload();
    swift_storeEnumTagMultiPayload();
    sub_25A622640();

    return sub_25A570C60((uint64_t)v21, &qword_26A429D78);
  }
  else
  {
    uint64_t v40 = v9;
    if (a2)
    {
      uint64_t v28 = a2;
      v39[0] = v19;
      v39[1] = a4;
      (*(void (**)(char *, uint64_t, uint64_t))(v40 + 16))(v12, a3, v8);
      swift_getErrorValue();
      id v29 = a2;
      sub_25A623400();
      uint64_t v30 = v42;
      uint64_t v31 = __swift_project_boxed_opaque_existential_1(v41, v42);
      uint64_t v32 = *(void *)(v30 - 8);
      MEMORY[0x270FA5388](v31);
      uint64_t v34 = (char *)v39 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v32 + 16))(v34);
      uint64_t v35 = sub_25A623370();
      if (v35)
      {
        uint64_t v36 = v35;
        (*(void (**)(char *, uint64_t))(v32 + 8))(v34, v30);
      }
      else
      {
        uint64_t v36 = swift_allocError();
        (*(void (**)(uint64_t, char *, uint64_t))(v32 + 32))(v38, v34, v30);
      }
      *uint64_t v18 = v36;
      swift_storeEnumTagMultiPayload();
      sub_25A622640();

      sub_25A570C60((uint64_t)v18, &qword_26A429D78);
      (*(void (**)(char *, uint64_t))(v40 + 8))(v12, v8);
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v41);
    }
    else
    {
      uint64_t v37 = v40;
      (*(void (**)(char *, uint64_t, uint64_t))(v40 + 16))(v14, a3, v8);
      sub_25A5952C8();
      *uint64_t v21 = swift_allocError();
      swift_storeEnumTagMultiPayload();
      sub_25A622640();
      sub_25A570C60((uint64_t)v21, &qword_26A429D78);
      return (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v14, v8);
    }
  }
}

uint64_t sub_25A593A78()
{
  uint64_t v1 = *(void *)(type metadata accessor for TransportReply() - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  uint64_t v5 = sub_25A622C10();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = (v3 + v4 + v7) & ~v7;
  uint64_t v9 = v8 + *(void *)(v6 + 64);
  uint64_t v10 = v2 | v7 | 7;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(qword_26A429C58);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v0 + v3, v11);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v8, v5);

  return MEMORY[0x270FA0238](v0, v9, v10);
}

uint64_t sub_25A593BE0(void *a1, void *a2)
{
  uint64_t v5 = *(void *)(type metadata accessor for TransportReply() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64);
  uint64_t v8 = *(void *)(sub_25A622C10() - 8);
  uint64_t v9 = v2 + ((v6 + v7 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));

  return sub_25A59361C(a1, a2, v2 + v6, v9);
}

uint64_t TransportReply.init(encodedReplyHandler:for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_25A622AC0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)(swift_allocObject() + 16) = a3;
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x263F60568], v6);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a1;
  *(void *)(v10 + 24) = a2;
  type metadata accessor for LazyPropertyList();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A429388);
  return sub_25A622600();
}

unint64_t sub_25A593E68(void *a1)
{
  uint64_t v2 = sub_25A6227C0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for LazyPropertyList();
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (uint64_t *)((char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4299B8);
  uint64_t v10 = MEMORY[0x270FA5388](v9 - 8);
  uint64_t v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v20 - v13;
  id v15 = objc_msgSend(a1, sel_data);
  uint64_t v16 = sub_25A6222D0();
  uint64_t v18 = v17;

  *uint64_t v8 = v16;
  v8[1] = v18;
  swift_storeEnumTagMultiPayload();
  LazyPropertyList.propertyList.getter((uint64_t)v14);
  sub_25A595208((uint64_t)v8);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v3 + 56))(v14, 0, 1, v2);
  sub_25A595264((uint64_t)v14, (uint64_t)v12, &qword_26A4299B8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v12, 1, v2) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v12, v2);
    sub_25A57E778();
    sub_25A623350();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  sub_25A570C60((uint64_t)v14, &qword_26A4299B8);
  unint64_t v21 = 0;
  unint64_t v22 = 0xE000000000000000;
  sub_25A623210();
  swift_bridgeObjectRelease();
  unint64_t v21 = 0xD000000000000013;
  unint64_t v22 = 0x800000025A636F00;
  sub_25A622E00();
  swift_bridgeObjectRelease();
  return v21;
}

uint64_t sub_25A59417C()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

unint64_t sub_25A5941B4()
{
  return sub_25A593E68(*(void **)(v0 + 16));
}

uint64_t sub_25A5941BC(uint64_t a1, void (*a2)(id, void *))
{
  uint64_t v4 = type metadata accessor for LazyPropertyList();
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v15[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A429D78);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (void **)((char *)&v15[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_25A595264(a1, (uint64_t)v9, &qword_26A429D78);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = *v9;
    swift_getErrorValue();
    sub_25A623400();
    __swift_project_boxed_opaque_existential_1(v15, v15[3]);
    uint64_t v11 = (void *)sub_25A622990();
    a2(0, v11);

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
  }
  else
  {
    sub_25A5951A0((uint64_t)v9, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for LazyPropertyList);
    id v13 = LazyPropertyList.encoded.getter();
    a2(v13, 0);

    return sub_25A595208((uint64_t)v6);
  }
}

uint64_t sub_25A594380(uint64_t a1)
{
  return sub_25A5941BC(a1, *(void (**)(id, void *))(v1 + 16));
}

uint64_t (*TransportReply.makeEagerReplyHandler(file:line:column:function:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8))(uint64_t a1)
{
  uint64_t v9 = v8;
  int v32 = a8;
  uint64_t v30 = a6;
  uint64_t v31 = a7;
  uint64_t v28 = a4;
  uint64_t v29 = a5;
  uint64_t v13 = type metadata accessor for TransportReply();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(void *)(v14 + 64);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v16 = (char *)&v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25A5851D4(v9, (uint64_t)v16);
  unint64_t v17 = (*(unsigned __int8 *)(v14 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  unint64_t v18 = (v17 + v15 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v19 = (v17 + v15 + 31) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v20 = (v19 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v21 = swift_allocObject();
  sub_25A5951A0((uint64_t)v16, v21 + v17, (uint64_t (*)(void))type metadata accessor for TransportReply);
  unint64_t v22 = v21 + v18;
  *(void *)unint64_t v22 = a1;
  *(void *)(v22 + 8) = a2;
  *(unsigned char *)(v22 + 16) = a3;
  *(void *)(v21 + v19) = v28;
  uint64_t v23 = v30;
  *(void *)(v21 + v20) = v29;
  unint64_t v24 = v21 + ((v20 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v25 = v31;
  *(void *)unint64_t v24 = v23;
  *(void *)(v24 + 8) = v25;
  *(unsigned char *)(v24 + 16) = v32;
  return sub_25A5949CC;
}

uint64_t sub_25A594514(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unsigned __int8 a10)
{
  uint64_t v38 = a1;
  uint64_t v39 = a8;
  uint64_t v36 = a6;
  uint64_t v37 = a7;
  int v35 = a5;
  uint64_t v31 = a3;
  uint64_t v32 = a4;
  uint64_t v30 = a2;
  uint64_t v34 = a9;
  int v33 = a10;
  uint64_t v29 = sub_25A6227C0();
  uint64_t v10 = *(void *)(v29 - 8);
  MEMORY[0x270FA5388](v29);
  uint64_t v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A42A260);
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (uint64_t *)((char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A429D78);
  MEMORY[0x270FA5388](v40);
  unint64_t v17 = (uint64_t *)((char *)&v28 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v41 = sub_25A622C10();
  uint64_t v18 = *(void *)(v41 - 8);
  MEMORY[0x270FA5388](v41);
  unint64_t v20 = (char *)&v28 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(qword_26A429C58);
  uint64_t v22 = *(void *)(v21 - 8);
  MEMORY[0x270FA5388](v21);
  unint64_t v24 = (char *)&v28 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v22 + 16))(v24, v30, v21);
  sub_25A622C20();
  sub_25A595264(v38, (uint64_t)v15, &qword_26A42A260);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *unint64_t v17 = *v15;
  }
  else
  {
    uint64_t v25 = v15;
    uint64_t v26 = v29;
    (*(void (**)(char *, void *, uint64_t))(v10 + 32))(v12, v25, v29);
    (*(void (**)(void *, char *, uint64_t))(v10 + 16))(v17, v12, v26);
    type metadata accessor for LazyPropertyList();
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v26);
  }
  swift_storeEnumTagMultiPayload();
  sub_25A622640();
  sub_25A570C60((uint64_t)v17, &qword_26A429D78);
  (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v41);
  return (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v24, v21);
}

uint64_t sub_25A5948D4()
{
  uint64_t v1 = *(void *)(type metadata accessor for TransportReply() - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v2 | 7;
  unint64_t v5 = ((((((*(void *)(v1 + 64) + v3 + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
     + 17;
  uint64_t v6 = v0 + v3;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(qword_26A429C58);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);

  return MEMORY[0x270FA0238](v0, v5, v4);
}

uint64_t sub_25A5949CC(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for TransportReply() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = v4 + *(void *)(v3 + 64);
  unint64_t v6 = (v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v7 = (v5 + 31) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v7 + 15) & 0xFFFFFFFFFFFFFFF8;
  return sub_25A594514(a1, v1 + v4, *(void *)(v1 + v6), *(void *)(v1 + v6 + 8), *(unsigned __int8 *)(v1 + v6 + 16), *(void *)(v1 + v7), *(void *)(v1 + v8), *(void *)(v1 + ((v8 + 15) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v1 + ((v8 + 15) & 0xFFFFFFFFFFFFFFF8) + 8), *(unsigned char *)(v1 + ((v8 + 15) & 0xFFFFFFFFFFFFFFF8) + 16));
}

uint64_t TransportReply.init(eagerReplyHandler:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  v14[1] = a1;
  uint64_t v16 = a2;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(qword_26A429C58);
  uint64_t v2 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  unint64_t v4 = (char *)v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_25A622AC0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  unint64_t v8 = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A42A248);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)v14 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x263F60560], v5);
  sub_25A6227C0();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A429388);
  sub_25A622600();
  type metadata accessor for LazyPropertyList();
  sub_25A622670();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  (*(void (**)(uint64_t, char *, uint64_t))(v2 + 32))(v16, v4, v15);
  return swift_release();
}

uint64_t initializeBufferWithCopyOfBuffer for TransportReply(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(qword_26A429C58);
  uint64_t v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);

  return v5(a1, a2, v4);
}

uint64_t destroy for TransportReply(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(qword_26A429C58);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(a1, v2);
}

uint64_t initializeWithCopy for TransportReply(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(qword_26A429C58);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for TransportReply(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(qword_26A429C58);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for TransportReply(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(qword_26A429C58);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for TransportReply(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(qword_26A429C58);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for TransportReply(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25A59501C);
}

uint64_t sub_25A59501C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(qword_26A429C58);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for TransportReply(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25A5950A0);
}

uint64_t sub_25A5950A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(qword_26A429C58);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

void sub_25A595114()
{
  sub_25A57D4F4();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_25A5951A0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_25A595208(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for LazyPropertyList();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_25A595264(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unint64_t sub_25A5952C8()
{
  unint64_t result = qword_26A42A268;
  if (!qword_26A42A268)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42A268);
  }
  return result;
}

unint64_t sub_25A59531C()
{
  unint64_t result = qword_26A42A270[0];
  if (!qword_26A42A270[0])
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A429E68);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26A42A270);
  }
  return result;
}

ValueMetadata *type metadata accessor for TransportReply.EmptyReply()
{
  return &type metadata for TransportReply.EmptyReply;
}

void sub_25A595394()
{
  uint64_t v9 = MEMORY[0x263F8CF88] + 64;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    uint64_t v10 = *(void *)(AssociatedTypeWitness - 8) + 64;
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    uint64_t v2 = swift_getAssociatedTypeWitness();
    if (v3 <= 0x3F)
    {
      uint64_t v11 = *(void *)(v2 - 8) + 64;
      sub_25A59B634();
      if (v4 <= 0x3F)
      {
        swift_getTupleTypeLayout2();
        uint64_t v12 = &v8;
        swift_getTupleTypeLayout2();
        uint64_t v13 = &v7;
        swift_getAssociatedTypeWitness();
        __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A429388);
        sub_25A6226F0();
        if (v5 <= 0x3F)
        {
          swift_getTupleTypeLayout2();
          uint64_t v14 = &v6;
          uint64_t v15 = "\b";
          uint64_t v16 = &unk_25A628BB8;
          swift_initClassMetadata2();
        }
      }
    }
  }
}

uint64_t sub_25A595600(uint64_t a1, uint64_t a2)
{
  uint64_t v14 = a1;
  uint64_t v15 = a2;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v3 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  unint64_t v5 = (char *)&v13 - v4;
  uint64_t v6 = swift_getAssociatedTypeWitness();
  MEMORY[0x270FA5388](v6);
  char v8 = (char *)&v13 - v7;
  (*(void (**)(char *, uint64_t))(v9 + 16))((char *)&v13 - v7, v14);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v15, AssociatedTypeWitness);
  swift_allocObject();
  uint64_t v10 = sub_25A59733C((uint64_t)v8, (uint64_t)v5);
  type metadata accessor for Junction();
  uint64_t WitnessTable = swift_getWitnessTable();
  swift_retain();
  *(void *)(v10 + *(void *)(*(void *)v10 + 144)) = sub_25A5B6D34(v10, WitnessTable, 0, 0, (uint64_t)sub_25A59C24C, v10, (uint64_t)sub_25A59C1E0, v10);
  swift_retain_n();
  swift_retain();
  swift_release();
  uint64_t v16 = v10;
  swift_retain();
  swift_getWitnessTable();
  sub_25A622AA0();
  swift_release();
  return v10;
}

uint64_t sub_25A595920(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[6] = a4;
  v5[7] = v4;
  v5[4] = a2;
  v5[5] = a3;
  v5[3] = a1;
  v5[8] = *v4;
  v5[9] = *v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A429820);
  v5[10] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for AsyncMessageStream(0);
  v5[11] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  v5[12] = v7;
  v5[13] = *(void *)(v7 + 64);
  v5[14] = swift_task_alloc();
  v5[15] = swift_task_alloc();
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A42A310);
  v5[16] = v8;
  v5[17] = *(void *)(v8 - 8);
  v5[18] = swift_task_alloc();
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A42A318);
  v5[19] = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  v5[20] = v10;
  v5[21] = *(void *)(v10 + 64);
  v5[22] = swift_task_alloc();
  v5[23] = swift_task_alloc();
  char v5[24] = swift_task_alloc();
  swift_getObjectType();
  uint64_t v12 = sub_25A622F70();
  v5[25] = v12;
  v5[26] = v11;
  return MEMORY[0x270FA2498](sub_25A595B90, v12, v11);
}

uint64_t sub_25A595B90()
{
  uint64_t v1 = v0[23];
  uint64_t v2 = v0[24];
  uint64_t v36 = v0[22];
  uint64_t v40 = v0[21];
  uint64_t v3 = v0[19];
  uint64_t v38 = v0[20];
  uint64_t v5 = v0[17];
  uint64_t v4 = v0[18];
  uint64_t v6 = v0[16];
  uint64_t v42 = (uint64_t *)v0[15];
  uint64_t v32 = v0[14];
  uint64_t v33 = v0[12];
  uint64_t v27 = v0[9];
  uint64_t v7 = v0[7];
  uint64_t v35 = v0[10];
  uint64_t v41 = v0[6];
  uint64_t v8 = v2 + *(int *)(v3 + 48);
  uint64_t v39 = v0[5];
  uint64_t v37 = v0[4];
  type metadata accessor for AsyncMessageStream.Event(0);
  (*(void (**)(uint64_t, void, uint64_t))(v5 + 104))(v4, *MEMORY[0x263F8F580], v6);
  sub_25A622FE0();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  uint64_t v9 = v1;
  uint64_t v26 = v1;
  uint64_t v10 = v1 + *(int *)(v3 + 48);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A42A320);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v34 = *(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16);
  v34(v9, v2, v11);
  uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A429288);
  uint64_t v30 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 16);
  v30(v10, v8, v31);
  sub_25A623210();
  sub_25A622E00();
  uint64_t v13 = *(void *)(v27 + 88);
  uint64_t v28 = *(void *)(v27 + 80);
  uint64_t v29 = v13;
  swift_getAssociatedTypeWitness();
  sub_25A623380();
  sub_25A54F164(v10, 0, 0xE000000000000000, v42);
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v26, v11);
  v0[2] = v7;
  sub_25A59D59C((uint64_t)v42, v32, type metadata accessor for AsyncMessageStream);
  unint64_t v14 = (*(unsigned __int8 *)(v33 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80);
  uint64_t v15 = swift_allocObject();
  sub_25A59D608(v32, v15 + v14, type metadata accessor for AsyncMessageStream);
  swift_getWitnessTable();
  sub_25A622AA0();
  swift_release();
  uint64_t v16 = sub_25A622FD0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v35, 1, 1, v16);
  uint64_t v17 = v36 + *(int *)(v3 + 48);
  v34(v36, v2, v11);
  v30(v17, v8, v31);
  unint64_t v18 = (*(unsigned __int8 *)(v38 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80);
  uint64_t v19 = (void *)swift_allocObject();
  v19[2] = v37;
  v19[3] = v39;
  v19[4] = v28;
  v19[5] = v29;
  v19[6] = v7;
  sub_25A55C73C(v36, (uint64_t)v19 + v18, &qword_26A42A318);
  unint64_t v20 = (void *)((char *)v19 + ((v40 + v18 + 7) & 0xFFFFFFFFFFFFFFF8));
  *unint64_t v20 = v37;
  v20[1] = v39;
  swift_unknownObjectRetain_n();
  swift_retain();
  sub_25A60C0D8(v35, (uint64_t)&unk_26A42A3F8, (uint64_t)v19);
  swift_release();
  uint64_t v21 = (void *)swift_task_alloc();
  v0[27] = v21;
  void v21[2] = v7;
  v21[3] = v41;
  v21[4] = v42;
  uint64_t v22 = (void *)swift_task_alloc();
  v0[28] = v22;
  void *v22 = v0;
  v22[1] = sub_25A5960E8;
  uint64_t v23 = v0[11];
  uint64_t v24 = v0[3];
  return MEMORY[0x270FA2360](v24, v37, v39, 0xD000000000000020, 0x800000025A637190, sub_25A59D9B4, v21, v23);
}

uint64_t sub_25A5960E8()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 232) = v0;
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 208);
  uint64_t v4 = *(void *)(v2 + 200);
  if (v0) {
    uint64_t v5 = sub_25A59632C;
  }
  else {
    uint64_t v5 = sub_25A596240;
  }
  return MEMORY[0x270FA2498](v5, v4, v3);
}

uint64_t sub_25A596240()
{
  uint64_t v1 = v0[15];
  sub_25A570C60(v0[24], &qword_26A42A318);
  sub_25A59D9C0(v1, type metadata accessor for AsyncMessageStream);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_25A59632C()
{
  uint64_t v1 = v0[15];
  sub_25A570C60(v0[24], &qword_26A42A318);
  sub_25A59D9C0(v1, type metadata accessor for AsyncMessageStream);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_25A596418(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[5] = a4;
  v5[6] = v4;
  v5[3] = a2;
  v5[4] = a3;
  _OWORD v5[2] = a1;
  uint64_t v6 = *v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A429820);
  v5[7] = swift_task_alloc();
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A42A310);
  v5[8] = v7;
  v5[9] = *(void *)(v7 - 8);
  v5[10] = swift_task_alloc();
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A42A318);
  v5[11] = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  v5[12] = v9;
  v5[13] = *(void *)(v9 + 64);
  v5[14] = swift_task_alloc();
  v5[15] = swift_task_alloc();
  v5[16] = swift_task_alloc();
  v5[17] = *(void *)(v6 + 88);
  v5[18] = *(void *)(v6 + 80);
  swift_getAssociatedTypeWitness();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A429388);
  v5[19] = sub_25A6226F0();
  sub_25A6226D0();
  v5[20] = swift_getTupleTypeMetadata2();
  v5[21] = swift_task_alloc();
  swift_getObjectType();
  uint64_t v11 = sub_25A622F70();
  v5[22] = v11;
  v5[23] = v10;
  return MEMORY[0x270FA2498](sub_25A5966A8, v11, v10);
}

uint64_t sub_25A5966A8()
{
  uint64_t v1 = v0[21];
  uint64_t v2 = v0[6] + *(void *)(*(void *)v0[6] + 136);
  uint64_t v3 = *(int *)(v0[20] + 48);
  uint64_t v4 = *(void *)(v0[19] - 8);
  v0[24] = v4;
  (*(void (**)(uint64_t, uint64_t))(v4 + 16))(v1, v2);
  *(void *)(v1 + v3) = *(void *)(v2 + v3);
  uint64_t v5 = (void *)swift_task_alloc();
  v0[25] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_25A5967E0;
  uint64_t v6 = v0[19];
  uint64_t v7 = v0[4];
  uint64_t v8 = v0[5];
  uint64_t v9 = v0[3];
  return MEMORY[0x270F55810](v9, v7, v8, v6);
}

uint64_t sub_25A5967E0()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 208) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = v2[22];
    uint64_t v4 = v2[23];
    uint64_t v5 = sub_25A596D40;
  }
  else
  {
    (*(void (**)(void, void))(v2[24] + 8))(v2[21], v2[19]);
    uint64_t v3 = v2[22];
    uint64_t v4 = v2[23];
    uint64_t v5 = sub_25A596910;
  }
  return MEMORY[0x270FA2498](v5, v3, v4);
}

uint64_t sub_25A596910()
{
  uint64_t v21 = v0[18];
  uint64_t v1 = v0[16];
  uint64_t v30 = v0[15];
  uint64_t v31 = v0[17];
  uint64_t v26 = v0[13];
  uint64_t v2 = v0[11];
  uint64_t v24 = v0[14];
  uint64_t v25 = v0[12];
  uint64_t v3 = v0[9];
  uint64_t v4 = v0[10];
  uint64_t v5 = v0[8];
  uint64_t v23 = v0[7];
  uint64_t v29 = v0[6];
  uint64_t v27 = v0[4];
  uint64_t v28 = v0[5];
  uint64_t v22 = (uint64_t *)v0[2];
  uint64_t v6 = v1 + *(int *)(v2 + 48);
  type metadata accessor for AsyncMessageStream.Event(0);
  (*(void (**)(uint64_t, void, uint64_t))(v3 + 104))(v4, *MEMORY[0x263F8F580], v5);
  uint64_t v19 = v1;
  sub_25A622FE0();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v4, v5);
  uint64_t v7 = v30 + *(int *)(v2 + 48);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A42A320);
  uint64_t v9 = *(void *)(v8 - 8);
  unint64_t v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16);
  v20(v30, v1, v8);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A429288);
  unint64_t v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16);
  v18(v7, v6, v10);
  sub_25A623210();
  sub_25A622E00();
  swift_getAssociatedTypeWitness();
  sub_25A623380();
  sub_25A54F164(v7, 0, 0xE000000000000000, v22);
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v30, v8);
  uint64_t v11 = sub_25A622FD0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v23, 1, 1, v11);
  uint64_t v12 = v24 + *(int *)(v2 + 48);
  v20(v24, v19, v8);
  v18(v12, v6, v10);
  unint64_t v13 = (*(unsigned __int8 *)(v25 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
  unint64_t v14 = (void *)swift_allocObject();
  void v14[2] = v27;
  void v14[3] = v28;
  v14[4] = v21;
  v14[5] = v31;
  v14[6] = v29;
  sub_25A55C73C(v24, (uint64_t)v14 + v13, &qword_26A42A318);
  uint64_t v15 = (void *)((char *)v14 + ((v26 + v13 + 7) & 0xFFFFFFFFFFFFFFF8));
  *uint64_t v15 = v27;
  v15[1] = v28;
  swift_unknownObjectRetain_n();
  swift_retain();
  sub_25A60C0D8(v23, (uint64_t)&unk_26A42A330, (uint64_t)v14);
  swift_release();
  sub_25A570C60(v19, &qword_26A42A318);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v16 = (uint64_t (*)(void))v0[1];
  return v16();
}

uint64_t sub_25A596D40()
{
  (*(void (**)(void, void))(v0[24] + 8))(v0[21], v0[19]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_25A596E0C(uint64_t a1, uint64_t a2)
{
  return sub_25A59733C(a1, a2);
}

uint64_t sub_25A596E58()
{
  return sub_25A622AB0();
}

uint64_t sub_25A596F2C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  swift_getAssociatedTypeWitness();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A429388);
  uint64_t v28 = sub_25A6226F0();
  uint64_t v29 = sub_25A6226D0();
  uint64_t v26 = swift_getTupleTypeMetadata2() - 8;
  MEMORY[0x270FA5388](v26);
  uint64_t v27 = (char *)&v25 - v4;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A42A300);
  uint64_t v6 = v5 - 8;
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(uint64_t *)((char *)a2 + *(void *)(v3 + 144)) = 0;
  swift_release();
  uint64_t v9 = (uint64_t)a2 + *(void *)(*a2 + 120);
  uint64_t v10 = *(int *)(v6 + 56);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A42A358);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  v25(v8, v9, v11);
  uint64_t v13 = *(void *)(v9 + v10);
  *(void *)&v8[v10] = v13;
  uint64_t v30 = v13;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A42A3D0);
  sub_25A59C1F0();
  sub_25A622830();
  unint64_t v14 = *(void (**)(char *, uint64_t))(v12 + 8);
  v14(v8, v11);
  uint64_t v15 = (uint64_t)a2 + *(void *)(*a2 + 128);
  uint64_t v16 = *(int *)(v6 + 56);
  v25(v8, v15, v11);
  uint64_t v17 = *(void *)(v15 + v16);
  *(void *)&v8[v16] = v17;
  uint64_t v30 = v17;
  sub_25A622830();
  v14(v8, v11);
  uint64_t v18 = (uint64_t)a2 + *(void *)(*a2 + 136);
  uint64_t v19 = v27;
  uint64_t v20 = *(int *)(v26 + 56);
  uint64_t v21 = v28;
  uint64_t v22 = *(void *)(v28 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v22 + 16))(v27, v18, v28);
  uint64_t v23 = *(void *)(v18 + v20);
  *(void *)&v19[v20] = v23;
  uint64_t v30 = v23;
  swift_getWitnessTable();
  sub_25A622830();
  return (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v19, v21);
}

uint64_t sub_25A59733C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  sub_25A622B40();
  swift_allocObject();
  *(void *)(v2 + 16) = sub_25A622B30();
  uint64_t v4 = v3 + *(void *)(*(void *)v3 + 120);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A42A300);
  uint64_t v6 = *(int *)(v5 + 48);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A429388);
  *(void *)(v4 + v6) = sub_25A6226C0();
  uint64_t v7 = v3 + *(void *)(*(void *)v3 + 128);
  uint64_t v8 = *(int *)(v5 + 48);
  *(void *)(v7 + v8) = sub_25A6226C0();
  uint64_t v9 = v3 + *(void *)(*(void *)v3 + 136);
  swift_getAssociatedTypeWitness();
  sub_25A6226F0();
  sub_25A6226D0();
  uint64_t v10 = *(int *)(swift_getTupleTypeMetadata2() + 48);
  *(void *)(v9 + v10) = sub_25A6226C0();
  *(void *)(v3 + *(void *)(*(void *)v3 + 144)) = 0;
  uint64_t v11 = (void *)(v3 + *(void *)(*(void *)v3 + 152));
  *uint64_t v11 = 0;
  v11[1] = 0;
  uint64_t v12 = v3 + *(void *)(*(void *)v3 + 104);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 32))(v12, a1, AssociatedTypeWitness);
  uint64_t v14 = v3 + *(void *)(*(void *)v3 + 112);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v15 = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 32))(v14, a2, v15);
  return v3;
}

uint64_t sub_25A597718()
{
  return sub_25A622870();
}

uint64_t sub_25A5977C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v7 + 16) = v11;
  *uint64_t v11 = v7;
  v11[1] = sub_25A566D38;
  return sub_25A597874(a5, a6, a7);
}

uint64_t sub_25A597874(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void v4[6] = a3;
  v4[7] = v3;
  v4[4] = a1;
  v4[5] = a2;
  v4[8] = *v3;
  uint64_t v5 = sub_25A6228E0();
  v4[9] = v5;
  v4[10] = *(void *)(v5 - 8);
  v4[11] = swift_task_alloc();
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A429368);
  v4[12] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  v4[13] = v7;
  v4[14] = *(void *)(v7 + 64);
  v4[15] = swift_task_alloc();
  v4[16] = swift_task_alloc();
  v4[17] = __swift_instantiateConcreteTypeFromMangledName(&qword_26A42A300);
  v4[18] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A42A340);
  v4[19] = swift_task_alloc();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v8 = type metadata accessor for PipeEvent.Content();
  v4[20] = v8;
  v4[21] = *(void *)(v8 - 8);
  v4[22] = swift_task_alloc();
  uint64_t v9 = type metadata accessor for AsyncMessageStream.Event(0);
  v4[23] = v9;
  unsigned char v4[24] = *(void *)(v9 - 8);
  v4[25] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A42A348);
  v4[26] = swift_task_alloc();
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A42A350);
  v4[27] = v10;
  v4[28] = *(void *)(v10 - 8);
  v4[29] = swift_task_alloc();
  swift_getObjectType();
  uint64_t v12 = sub_25A622F70();
  v4[30] = v12;
  v4[31] = v11;
  return MEMORY[0x270FA2498](sub_25A597C30, v12, v11);
}

uint64_t sub_25A597C30()
{
  uint64_t v1 = *(uint64_t **)(v0 + 56);
  swift_getObjectType();
  sub_25A622F80();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A42A320);
  sub_25A623040();
  uint64_t v2 = *v1;
  *(_OWORD *)(v0 + 256) = *(_OWORD *)(*v1 + 120);
  *(void *)(v0 + 272) = *(void *)(v2 + 152);
  uint64_t v3 = *(void *)(v0 + 40);
  uint64_t v4 = *(void *)(v0 + 48);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 280) = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_25A597D9C;
  uint64_t v6 = *(void *)(v0 + 208);
  uint64_t v7 = *(void *)(v0 + 216);
  return MEMORY[0x270FA1F68](v6, v3, v4, v7);
}

uint64_t sub_25A597D9C()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 248);
  uint64_t v3 = *(void *)(v1 + 240);
  return MEMORY[0x270FA2498](sub_25A597EBC, v3, v2);
}

uint64_t sub_25A597EBC()
{
  uint64_t v1 = v0[26];
  if ((*(unsigned int (**)(uint64_t, uint64_t, void))(v0[24] + 48))(v1, 1, v0[23]) == 1)
  {
    (*(void (**)(void, void))(v0[28] + 8))(v0[29], v0[27]);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v2 = (uint64_t (*)(void))v0[1];
    return v2();
  }
  else
  {
    sub_25A59D608(v1, v0[25], type metadata accessor for AsyncMessageStream.Event);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v29 = (uint64_t *)v0[25];
        uint64_t v30 = v0[18];
        uint64_t v31 = v0[19];
        uint64_t v32 = v0[7] + v0[33];
        uint64_t v34 = *v29;
        uint64_t v33 = v29[1];
        uint64_t v35 = *(int *)(v0[17] + 48);
        uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A42A358);
        uint64_t v37 = *(void *)(v36 - 8);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v37 + 16))(v30, v32, v36);
        *(void *)(v30 + v35) = *(void *)(v32 + v35);
        uint64_t v38 = swift_allocObject();
        *(void *)(v38 + 16) = v34;
        *(void *)(v38 + 24) = v33;
        swift_retain();
        sub_25A6226A0();
        swift_release();
        (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v30, v36);
        uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A42A360);
        uint64_t v40 = *(void *)(v39 - 8);
        int v41 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v40 + 48))(v31, 1, v39);
        uint64_t v42 = v0[19];
        if (v41 == 1)
        {
          swift_release();
          sub_25A570C60(v42, &qword_26A42A340);
        }
        else
        {
          v0[3] = v0[7];
          swift_getWitnessTable();
          sub_25A622880();
          swift_release();
          (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v42, v39);
        }
        break;
      case 2u:
        uint64_t v11 = v0[17];
        uint64_t v12 = v0[16];
        uint64_t v13 = v0[13];
        uint64_t v52 = v0[14];
        uint64_t v48 = v0[12];
        uint64_t v49 = v0[15];
        uint64_t v14 = v0[6];
        uint64_t v15 = v0[5];
        uint64_t v16 = v0[7] + v0[32];
        uint64_t v53 = *(void (**)(unint64_t, uint64_t, uint64_t))(v13 + 32);
        uint64_t v54 = v0[18];
        ((void (*)(uint64_t, void))v53)(v12, v0[25]);
        uint64_t v17 = sub_25A599014(v15, v14);
        uint64_t v50 = v18;
        uint64_t v51 = v17;
        uint64_t v19 = *(int *)(v11 + 48);
        uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A42A358);
        uint64_t v21 = *(void *)(v20 - 8);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 16))(v54, v16, v20);
        *(void *)(v54 + v19) = *(void *)(v16 + v19);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16))(v49, v12, v48);
        unint64_t v22 = (*(unsigned __int8 *)(v13 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
        uint64_t v23 = swift_allocObject();
        v53(v23 + v22, v49, v48);
        uint64_t v24 = (uint64_t (**)(uint64_t, uint64_t))(v23 + ((v52 + v22 + 7) & 0xFFFFFFFFFFFFFFF8));
        *uint64_t v24 = v51;
        v24[1] = v50;
        swift_retain();
        sub_25A622690();
        swift_release();
        swift_release();
        (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v48);
        (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v54, v20);
        break;
      case 3u:
        uint64_t v26 = v0[10];
        uint64_t v25 = v0[11];
        uint64_t v27 = v0[9];
        uint64_t v28 = v0[7];
        (*(void (**)(uint64_t, void, uint64_t))(v26 + 32))(v25, v0[25], v27);
        v0[2] = v28;
        swift_getWitnessTable();
        sub_25A622870();
        (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v25, v27);
        break;
      default:
        uint64_t v4 = (uint64_t *)v0[25];
        uint64_t v6 = v0[21];
        uint64_t v5 = v0[22];
        uint64_t v7 = v0[20];
        uint64_t v8 = (uint64_t *)(v0[7] + v0[34]);
        uint64_t v9 = v4[1];
        uint64_t v10 = *v8;
        *uint64_t v8 = *v4;
        v8[1] = v9;
        swift_retain();
        sub_25A585334(v10);
        swift_storeEnumTagMultiPayload();
        sub_25A598D3C(v5);
        swift_release();
        (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
        break;
    }
    uint64_t v43 = v0[5];
    uint64_t v44 = v0[6];
    uint64_t v45 = (void *)swift_task_alloc();
    v0[35] = v45;
    *uint64_t v45 = v0;
    v45[1] = sub_25A597D9C;
    uint64_t v46 = v0[26];
    uint64_t v47 = v0[27];
    return MEMORY[0x270FA1F68](v46, v43, v44, v47);
  }
}

uint64_t sub_25A598564(uint64_t a1, char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v47 = a3;
  uint64_t v48 = a4;
  uint64_t v40 = a1;
  uint64_t v5 = *(void *)a2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(qword_26A429C58);
  uint64_t v54 = *(void *)(v6 - 8);
  uint64_t v55 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v53 = (char *)v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = type metadata accessor for AsyncMessageStream(0);
  uint64_t v45 = *(void *)(v38 - 8);
  uint64_t v43 = *(void *)(v45 + 64);
  MEMORY[0x270FA5388](v38);
  uint64_t v42 = (uint64_t)v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A42A238);
  uint64_t v52 = *(void *)(v50 - 8);
  MEMORY[0x270FA5388](v50);
  uint64_t v46 = (char *)v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v41 = a2;
  v37[2] = *(void *)(v5 + 88);
  swift_getAssociatedTypeWitness();
  v37[1] = swift_getAssociatedConformanceWitness();
  uint64_t v49 = type metadata accessor for PipeEvent.Content();
  uint64_t v51 = *(void *)(v49 - 8);
  MEMORY[0x270FA5388](v49);
  uint64_t v11 = (char *)v37 - v10;
  uint64_t v12 = sub_25A622AC0();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A42A400);
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)v37 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(qword_26A42A408);
  uint64_t v44 = *(void *)(v39 - 8);
  MEMORY[0x270FA5388](v39);
  uint64_t v21 = (char *)v37 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v19, v40, v16);
  (*(void (**)(char *, void, uint64_t))(v13 + 104))(v15, *MEMORY[0x263F60560], v12);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A429388);
  sub_25A622610();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v23 = swift_getAssociatedTypeWitness();
  type metadata accessor for TransportReply();
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  uint64_t v25 = &v11[*(int *)(TupleTypeMetadata3 + 48)];
  uint64_t v26 = &v11[*(int *)(TupleTypeMetadata3 + 64)];
  (*(void (**)(char *, char *, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16))(v11, &v41[*(void *)(*(void *)v41 + 104)], AssociatedTypeWitness);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v23 - 8) + 16))(v25, v47, v23);
  uint64_t v27 = v42;
  sub_25A59D59C(v48, v42, type metadata accessor for AsyncMessageStream);
  unint64_t v28 = (*(unsigned __int8 *)(v45 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80);
  uint64_t v29 = swift_allocObject();
  sub_25A59D608(v27, v29 + v28, type metadata accessor for AsyncMessageStream);
  uint64_t v30 = swift_allocObject();
  *(void *)(v30 + 16) = sub_25A59DB30;
  *(void *)(v30 + 24) = v29;
  uint64_t v31 = v39;
  uint64_t v32 = v46;
  sub_25A622660();
  swift_release();
  type metadata accessor for LazyPropertyList();
  uint64_t v33 = v50;
  uint64_t v34 = v53;
  sub_25A622660();
  (*(void (**)(char *, uint64_t))(v52 + 8))(v32, v33);
  (*(void (**)(char *, char *, uint64_t))(v54 + 32))(v26, v34, v55);
  uint64_t v35 = v49;
  swift_storeEnumTagMultiPayload();
  sub_25A598D3C((uint64_t)v11);
  (*(void (**)(char *, uint64_t))(v51 + 8))(v11, v35);
  return (*(uint64_t (**)(char *, uint64_t))(v44 + 8))(v21, v31);
}

uint64_t sub_25A598D3C(uint64_t a1)
{
  uint64_t v17 = a1;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v15 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v16 = AssociatedTypeWitness;
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v4 = (char *)&v14 - v3;
  uint64_t v5 = type metadata accessor for PipeEvent.Content();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v14 - v7;
  uint64_t v9 = type metadata accessor for PipeEvent();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v14 - v11;
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v17, v5);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v4, v1 + *(void *)(*(void *)v1 + 112), v16);
  sub_25A57DA5C((uint64_t)v8, (uint64_t)v4, (uint64_t)v12);
  sub_25A57E560(sub_25A59BAB0);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t (*sub_25A599014(uint64_t a1, uint64_t a2))(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v58 = a1;
  uint64_t v59 = a2;
  uint64_t v56 = *v2;
  uint64_t v73 = *(void *)(v56 + 88);
  uint64_t v72 = *(void *)(v56 + 80);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v62 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v61 = (char *)&v50 - v4;
  uint64_t v66 = type metadata accessor for EndpointInvalidated();
  uint64_t v64 = *(void *)(v66 - 8);
  uint64_t v65 = *(void *)(v64 + 64);
  uint64_t v5 = MEMORY[0x270FA5388](v66);
  char v63 = (char *)&v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v57 = (uint64_t)&v50 - v7;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A429820);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v55 = (char *)&v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A42A368);
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v50 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A42A370);
  uint64_t v15 = v14 - 8;
  uint64_t v69 = *(void *)(v14 - 8);
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v50 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = v17;
  MEMORY[0x270FA5388](v16);
  uint64_t v21 = (char *)&v50 - v20;
  unint64_t v22 = (char *)&v50 + *(int *)(v15 + 56) - v20;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A42A378);
  (*(void (**)(char *, void, uint64_t))(v11 + 104))(v13, *MEMORY[0x263F8F580], v10);
  uint64_t v71 = v21;
  uint64_t v68 = v22;
  sub_25A622FE0();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  uint64_t v74 = v3;
  uint64_t v23 = &v18[*(int *)(v15 + 56)];
  uint64_t v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A42A380);
  uint64_t v54 = *(void *)(v70 - 8);
  uint64_t v51 = *(void (**)(char *, char *, uint64_t))(v54 + 16);
  v51(v18, v21, v70);
  uint64_t v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A42A388);
  uint64_t v53 = *(void *)(v67 - 8);
  uint64_t v50 = *(void (**)(char *, char *, uint64_t))(v53 + 16);
  v50(v23, v22, v67);
  uint64_t v24 = *(unsigned __int8 *)(v69 + 80);
  uint64_t v52 = v19;
  uint64_t v69 = v24 | 7;
  uint64_t v25 = swift_allocObject();
  sub_25A55C73C((uint64_t)v18, v25 + ((v24 + 16) & ~v24), &qword_26A42A370);
  swift_getWitnessTable();
  sub_25A622AA0();
  swift_release();
  uint64_t v26 = sub_25A622FD0();
  uint64_t v27 = (uint64_t)v55;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v55, 1, 1, v26);
  unint64_t v28 = &v18[*(int *)(v15 + 56)];
  v51(v18, v71, v70);
  v50(v28, v68, v67);
  uint64_t v29 = (v24 + 56) & ~v24;
  unint64_t v30 = (v19 + v29 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v31 = (void *)swift_allocObject();
  uint64_t v33 = v58;
  uint64_t v32 = v59;
  v31[2] = v58;
  v31[3] = v32;
  uint64_t v34 = v73;
  v31[4] = v72;
  v31[5] = v34;
  v31[6] = v3;
  sub_25A55C73C((uint64_t)v18, (uint64_t)v31 + v29, &qword_26A42A370);
  uint64_t v35 = (void *)((char *)v31 + v30);
  *uint64_t v35 = v33;
  v35[1] = v32;
  swift_unknownObjectRetain_n();
  swift_retain();
  sub_25A60C0D8(v27, (uint64_t)&unk_26A42A398, (uint64_t)v31);
  swift_release();
  uint64_t v36 = (uint64_t)v61;
  uint64_t v37 = AssociatedTypeWitness;
  (*(void (**)(char *, char *, uint64_t))(v62 + 16))(v61, (char *)v3 + *(void *)(*v3 + 104), AssociatedTypeWitness);
  uint64_t v38 = v57;
  sub_25A57EF80(v36, v37, v57);
  uint64_t v39 = &v18[*(int *)(v15 + 56)];
  (*(void (**)(char *, char *, uint64_t))(v54 + 32))(v18, v71, v70);
  (*(void (**)(char *, char *, uint64_t))(v53 + 32))(v39, v68, v67);
  uint64_t v40 = v63;
  uint64_t v41 = v64 + 32;
  uint64_t v42 = *(void (**)(char *, uint64_t, uint64_t))(v64 + 32);
  uint64_t v43 = v38;
  uint64_t v44 = v66;
  v42(v63, v43, v66);
  uint64_t v45 = (v24 + 32) & ~v24;
  unint64_t v46 = (v45 + v52 + *(unsigned __int8 *)(v41 + 48)) & ~(unint64_t)*(unsigned __int8 *)(v41 + 48);
  uint64_t v47 = swift_allocObject();
  uint64_t v48 = v73;
  *(void *)(v47 + 16) = v72;
  *(void *)(v47 + 24) = v48;
  sub_25A55C73C((uint64_t)v18, v47 + v45, &qword_26A42A370);
  v42((char *)(v47 + v46), (uint64_t)v40, v44);
  return sub_25A59C014;
}

uint64_t sub_25A5997A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (*(unsigned char *)(a1 + 8))
  {
    sub_25A59BACC(*(id *)a1, 1);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A429368);
    return sub_25A622F90();
  }
  else
  {
    uint64_t v7 = swift_allocObject();
    *(void *)(v7 + 16) = a3;
    *(void *)(v7 + 24) = a4;
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A429368);
    return sub_25A622FA0();
  }
}

uint64_t sub_25A599858()
{
  return sub_25A623020();
}

uint64_t sub_25A59989C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v7 + 16) = v11;
  *uint64_t v11 = v7;
  v11[1] = sub_25A566D38;
  return sub_25A599950(a5, a6, a7);
}

uint64_t sub_25A599950(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[18] = a3;
  v4[19] = v3;
  v4[16] = a1;
  v4[17] = a2;
  v4[20] = __swift_instantiateConcreteTypeFromMangledName(&qword_26A429D78);
  v4[21] = swift_task_alloc();
  uint64_t v5 = sub_25A622C10();
  v4[22] = v5;
  v4[23] = *(void *)(v5 - 8);
  unsigned char v4[24] = swift_task_alloc();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v6 = type metadata accessor for PipeEvent.Content();
  v4[25] = v6;
  v4[26] = *(void *)(v6 - 8);
  v4[27] = swift_task_alloc();
  uint64_t v7 = sub_25A6227C0();
  v4[28] = v7;
  v4[29] = *(void *)(v7 - 8);
  v4[30] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A429D70);
  v4[31] = swift_task_alloc();
  v4[32] = swift_task_alloc();
  v4[33] = type metadata accessor for LazyPropertyList();
  v4[34] = swift_task_alloc();
  v4[35] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A42A3B0);
  v4[36] = swift_task_alloc();
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A42A3B8);
  v4[37] = v8;
  v4[38] = *(void *)(v8 - 8);
  v4[39] = swift_task_alloc();
  swift_getObjectType();
  uint64_t v9 = sub_25A622F70();
  v4[40] = v9;
  v4[41] = v10;
  return MEMORY[0x270FA2498](sub_25A599CF0, v9, v10);
}

uint64_t sub_25A599CF0()
{
  swift_getObjectType();
  sub_25A622F80();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A42A380);
  sub_25A623040();
  uint64_t v1 = v0[17];
  uint64_t v2 = v0[18];
  uint64_t v3 = (void *)swift_task_alloc();
  v0[42] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_25A599E3C;
  uint64_t v4 = v0[36];
  uint64_t v5 = v0[37];
  return MEMORY[0x270FA1F68](v4, v1, v2, v5);
}

uint64_t sub_25A599E3C()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 328);
  uint64_t v3 = *(void *)(v1 + 320);
  return MEMORY[0x270FA2498](sub_25A599F90, v3, v2);
}

uint64_t sub_25A599F90()
{
  uint64_t v1 = *(void *)(v0 + 288);
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A42A378);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(v1, 1, v2) == 1)
  {
    (*(void (**)(void, void))(*(void *)(v0 + 304) + 8))(*(void *)(v0 + 312), *(void *)(v0 + 296));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
    return v3();
  }
  uint64_t v6 = *(void *)(v0 + 272);
  uint64_t v5 = *(void *)(v0 + 280);
  uint64_t v7 = *(void *)(v0 + 256);
  uint64_t v8 = v1 + *(int *)(v2 + 48);
  sub_25A59D608(v1, v5, (uint64_t (*)(void))type metadata accessor for LazyPropertyList);
  sub_25A55C73C(v8, v7, &qword_26A429D70);
  sub_25A59D59C(v5, v6, (uint64_t (*)(void))type metadata accessor for LazyPropertyList);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v10 = *(uint64_t **)(v0 + 272);
  if (EnumCaseMultiPayload != 1)
  {
    (*(void (**)(void, uint64_t *, void))(*(void *)(v0 + 232) + 32))(*(void *)(v0 + 240), v10, *(void *)(v0 + 224));
    goto LABEL_10;
  }
  uint64_t v11 = *v10;
  unint64_t v12 = v10[1];
  uint64_t v13 = self;
  uint64_t v14 = (void *)sub_25A6222C0();
  *(void *)(v0 + 112) = 0;
  id v15 = objc_msgSend(v13, sel_propertyListWithData_options_format_error_, v14, 0, 0, v0 + 112);

  id v16 = *(id *)(v0 + 112);
  if (v15)
  {
    sub_25A6231C0();
    swift_unknownObjectRelease();
    sub_25A56D81C(v0 + 16, v0 + 48);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A42A3C0);
    if (swift_dynamicCast())
    {
      sub_25A622740();
      sub_25A59C134(v11, v12);
      __swift_destroy_boxed_opaque_existential_1(v0 + 16);
LABEL_10:
      uint64_t v46 = *(void *)(v0 + 280);
      uint64_t v17 = *(void *)(v0 + 256);
      uint64_t v19 = *(void *)(v0 + 232);
      uint64_t v18 = *(void *)(v0 + 240);
      uint64_t v21 = *(void *)(v0 + 216);
      uint64_t v20 = *(void *)(v0 + 224);
      uint64_t v23 = *(void *)(v0 + 200);
      uint64_t v22 = *(void *)(v0 + 208);
      uint64_t v24 = v21 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A429D80) + 48);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 16))(v21, v18, v20);
      sub_25A57E650(v17, v24);
      swift_storeEnumTagMultiPayload();
      sub_25A598D3C(v21);
      (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v21, v23);
      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
      sub_25A570C60(v17, &qword_26A429D70);
      uint64_t v25 = type metadata accessor for LazyPropertyList;
      uint64_t v26 = v46;
LABEL_16:
      sub_25A59D9C0(v26, (uint64_t (*)(void))v25);
      goto LABEL_17;
    }
    sub_25A56D81C(v0 + 16, v0 + 80);
    sub_25A59C18C();
    unint64_t v28 = (void *)swift_allocError();
    sub_25A56D80C((_OWORD *)(v0 + 80), v29);
    swift_willThrow();
    sub_25A59C134(v11, v12);
    __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  }
  else
  {
    uint64_t v27 = v16;
    unint64_t v28 = (void *)sub_25A622240();

    swift_willThrow();
    sub_25A59C134(v11, v12);
  }
  uint64_t v30 = *(void *)(v0 + 248);
  sub_25A57E650(*(void *)(v0 + 256), v30);
  uint64_t v31 = type metadata accessor for TransportReply();
  int v32 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 48))(v30, 1, v31);
  uint64_t v33 = *(void *)(v0 + 280);
  uint64_t v34 = *(void *)(v0 + 248);
  uint64_t v35 = *(void *)(v0 + 256);
  if (v32 != 1)
  {
    uint64_t v37 = *(void *)(v0 + 184);
    uint64_t v36 = *(void *)(v0 + 192);
    uint64_t v39 = *(void **)(v0 + 168);
    uint64_t v38 = *(void *)(v0 + 176);
    sub_25A622C20();
    *uint64_t v39 = v28;
    swift_storeEnumTagMultiPayload();
    id v40 = v28;
    __swift_instantiateConcreteTypeFromMangledName(qword_26A429C58);
    sub_25A622640();
    sub_25A570C60((uint64_t)v39, &qword_26A429D78);
    (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v36, v38);

    sub_25A570C60(v35, &qword_26A429D70);
    sub_25A59D9C0(v33, (uint64_t (*)(void))type metadata accessor for LazyPropertyList);
    uint64_t v25 = type metadata accessor for TransportReply;
    uint64_t v26 = v34;
    goto LABEL_16;
  }

  sub_25A570C60(v35, &qword_26A429D70);
  sub_25A59D9C0(v33, (uint64_t (*)(void))type metadata accessor for LazyPropertyList);
  sub_25A570C60(v34, &qword_26A429D70);
LABEL_17:
  uint64_t v41 = *(void *)(v0 + 136);
  uint64_t v42 = *(void *)(v0 + 144);
  uint64_t v43 = (void *)swift_task_alloc();
  *(void *)(v0 + 336) = v43;
  void *v43 = v0;
  v43[1] = sub_25A599E3C;
  uint64_t v44 = *(void *)(v0 + 288);
  uint64_t v45 = *(void *)(v0 + 296);
  return MEMORY[0x270FA1F68](v44, v41, v42, v45);
}

uint64_t sub_25A59A608(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v32[0] = a6;
  v32[1] = a5;
  uint64_t v33 = a4;
  uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A429D78);
  MEMORY[0x270FA5388](v35);
  uint64_t v38 = (void *)((char *)v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = sub_25A622C10();
  uint64_t v36 = *(void *)(v9 - 8);
  uint64_t v37 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v34 = (char *)v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A429D70);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = (char *)v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A42A378);
  uint64_t v15 = v14 - 8;
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A42A3A0);
  uint64_t v19 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v21 = (char *)v32 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A42A370);
  uint64_t v22 = (uint64_t)&v17[*(int *)(v15 + 56)];
  sub_25A59D59C(a1, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for LazyPropertyList);
  sub_25A57E650(a2, v22);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A42A388);
  sub_25A623010();
  int v23 = (*(uint64_t (**)(char *, uint64_t))(v19 + 88))(v21, v18);
  LODWORD(v17) = *MEMORY[0x263F8F550];
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v21, v18);
  if (v23 == v17)
  {
    sub_25A57E650(a2, (uint64_t)v13);
    uint64_t v25 = type metadata accessor for TransportReply();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v25 - 8) + 48))(v13, 1, v25) == 1)
    {
      return sub_25A570C60((uint64_t)v13, &qword_26A429D70);
    }
    else
    {
      swift_getAssociatedTypeWitness();
      uint64_t v26 = type metadata accessor for EndpointInvalidated();
      swift_getWitnessTable();
      uint64_t v27 = (void *)swift_allocError();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 16))(v28, v33, v26);
      uint64_t v29 = v34;
      sub_25A622C20();
      uint64_t v30 = (uint64_t)v38;
      *uint64_t v38 = v27;
      swift_storeEnumTagMultiPayload();
      id v31 = v27;
      __swift_instantiateConcreteTypeFromMangledName(qword_26A429C58);
      sub_25A622640();
      sub_25A570C60(v30, &qword_26A429D78);
      (*(void (**)(char *, uint64_t))(v36 + 8))(v29, v37);

      return sub_25A59D9C0((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for TransportReply);
    }
  }
  return result;
}

uint64_t sub_25A59AAA4(uint64_t a1, char *a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)a2;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v9 = (char *)&v12 - v8;
  if (*(void *)&a2[*(void *)(v4 + 144)])
  {
    swift_retain();
    sub_25A5B6DB4(a1);
    return swift_release();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v9, &a2[*(void *)(v5 + 112)], AssociatedTypeWitness);
    type metadata accessor for EndpointInvalidated();
    swift_getWitnessTable();
    swift_allocError();
    sub_25A57EF80((uint64_t)v9, AssociatedTypeWitness, v11);
    return swift_willThrow();
  }
}

uint64_t sub_25A59ACD4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v9 = swift_getAssociatedTypeWitness();
  uint64_t v10 = a4 + *(int *)(swift_getTupleTypeMetadata2() + 48);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 32))(a4, a1, AssociatedTypeWitness);
  uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32);
  v13(v10, a2, v9);
  uint64_t v11 = a4 + *(int *)(type metadata accessor for Outlet.EndpointCollision() + 36);

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v13)(v11, a3, v9);
}

uint64_t sub_25A59AE80(uint64_t a1)
{
  uint64_t v27 = a1;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v3 = swift_getAssociatedTypeWitness();
  uint64_t v4 = swift_getTupleTypeMetadata2() - 8;
  uint64_t v25 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v18 - v5;
  uint64_t v28 = 0;
  unint64_t v29 = 0xE000000000000000;
  sub_25A623210();
  sub_25A622E00();
  uint64_t v7 = *(int *)(v4 + 56);
  uint64_t v8 = &v6[v7];
  uint64_t v19 = v1;
  uint64_t v20 = AssociatedTypeWitness;
  uint64_t v9 = v1 + v7;
  uint64_t v24 = v19 + v7;
  uint64_t v10 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v26 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v26(v6, v19, AssociatedTypeWitness);
  uint64_t v11 = *(void *)(v3 - 8);
  int v23 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  v23(v8, v9, v3);
  sub_25A623380();
  uint64_t v12 = *(void (**)(char *, uint64_t))(v11 + 8);
  v12(v8, v3);
  uint64_t v22 = *(void (**)(char *, uint64_t))(v10 + 8);
  v22(v6, AssociatedTypeWitness);
  sub_25A622E00();
  uint64_t v13 = v19;
  sub_25A623380();
  sub_25A622E00();
  uint64_t v27 = v28;
  uint64_t v28 = 0;
  unint64_t v21 = v29;
  unint64_t v29 = 0xE000000000000000;
  sub_25A623210();
  sub_25A622E00();
  uint64_t v14 = &v6[*(int *)(v25 + 56)];
  uint64_t v15 = v13;
  uint64_t v16 = v20;
  v26(v6, v15, v20);
  v23(v14, v24, v3);
  sub_25A623380();
  v12(v14, v3);
  v22(v6, v16);
  sub_25A622E00();
  uint64_t v28 = v27;
  unint64_t v29 = v21;
  sub_25A622E00();
  sub_25A622E00();
  swift_bridgeObjectRelease();
  return v28;
}

unint64_t sub_25A59B238()
{
  return 0xD00000000000002BLL;
}

uint64_t sub_25A59B258(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270F55A28](a1, WitnessTable);
}

uint64_t sub_25A59B2AC(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270F55A08](a1, WitnessTable);
}

uint64_t sub_25A59B300()
{
  swift_release();
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 104);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8))(v1, AssociatedTypeWitness);
  uint64_t v3 = v0 + *(void *)(*(void *)v0 + 112);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v4 = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  sub_25A570C60(v0 + *(void *)(*(void *)v0 + 120), &qword_26A42A300);
  sub_25A570C60(v0 + *(void *)(*(void *)v0 + 128), &qword_26A42A300);
  uint64_t v5 = v0 + *(void *)(*(void *)v0 + 136);
  swift_getAssociatedTypeWitness();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A429388);
  sub_25A6226F0();
  sub_25A6226D0();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(TupleTypeMetadata2 - 8) + 8))(v5, TupleTypeMetadata2);
  swift_release();
  sub_25A585334(*(void *)(v0 + *(void *)(*(void *)v0 + 152)));
  return v0;
}

uint64_t sub_25A59B5C4()
{
  sub_25A59B300();
  uint64_t v1 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v2 = *(unsigned __int16 *)(*(void *)v0 + 52);

  return MEMORY[0x270FA0228](v0, v1, v2);
}

uint64_t type metadata accessor for Outlet()
{
  return __swift_instantiateGenericMetadata();
}

void sub_25A59B634()
{
  if (!qword_26A42A2F8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A429388);
    unint64_t v0 = sub_25A6226F0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26A42A2F8);
    }
  }
}

uint64_t sub_25A59B6A4()
{
  return swift_retain();
}

uint64_t sub_25A59B6B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270F55B80](a1, a2, a3, WitnessTable);
}

uint64_t sub_25A59B71C()
{
  return swift_getWitnessTable();
}

uint64_t sub_25A59B738(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_25A59B774()
{
  return objectdestroyTm_1(&qword_26A42A318, &qword_26A42A320, &qword_26A429288);
}

uint64_t sub_25A59B790()
{
  uint64_t v2 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A42A318) - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = v0 + v3;
  uint64_t v5 = (uint64_t *)(v0 + ((*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v6 = *v5;
  uint64_t v7 = v5[1];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v8;
  *uint64_t v8 = v1;
  v8[1] = sub_25A566D38;
  uint64_t v9 = (void *)swift_task_alloc();
  _OWORD v8[2] = v9;
  *uint64_t v9 = v8;
  v9[1] = sub_25A566D38;
  return sub_25A597874(v4, v6, v7);
}

uint64_t sub_25A59B8F4()
{
  return 0;
}

uint64_t sub_25A59B900()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A429368);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();

  return MEMORY[0x270FA0238](v0, v6, v5);
}

uint64_t sub_25A59B9AC(uint64_t a1)
{
  uint64_t v3 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A429368) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = v1 + v4;
  unint64_t v6 = (uint64_t *)(v1 + ((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v7 = *v6;
  uint64_t v8 = v6[1];

  return sub_25A5997A0(a1, v5, v7, v8);
}

uint64_t sub_25A59BA50()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_25A59BA88()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_25A59BAB0(uint64_t a1)
{
  return sub_25A59AAA4(a1, v1);
}

id sub_25A59BACC(id result, char a2)
{
  if (a2) {
    return result;
  }
  return result;
}

uint64_t sub_25A59BAD8()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_25A59BB00()
{
  uint64_t v1 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A42A370) - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v3 + *(void *)(*(void *)v1 + 64);
  uint64_t v5 = v2 | 7;
  uint64_t v6 = v0 + v3;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A42A380);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  uint64_t v8 = v6 + v1[14];
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A42A388);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);

  return MEMORY[0x270FA0238](v0, v4, v5);
}

uint64_t sub_25A59BC30()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A42A370);

  return sub_25A599858();
}

uint64_t sub_25A59BCA4()
{
  return objectdestroyTm_1(&qword_26A42A370, &qword_26A42A380, &qword_26A42A388);
}

uint64_t sub_25A59BCC0()
{
  uint64_t v2 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A42A370) - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = v0 + v3;
  uint64_t v5 = (uint64_t *)(v0 + ((*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v6 = *v5;
  uint64_t v7 = v5[1];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v8;
  *uint64_t v8 = v1;
  v8[1] = sub_25A55F118;
  uint64_t v9 = (void *)swift_task_alloc();
  _OWORD v8[2] = v9;
  *uint64_t v9 = v8;
  v9[1] = sub_25A566D38;
  return sub_25A599950(v4, v6, v7);
}

uint64_t sub_25A59BE24()
{
  uint64_t v1 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A42A370) - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  uint64_t v4 = v3 + *(void *)(*(void *)v1 + 64);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v6 = *(void *)(type metadata accessor for EndpointInvalidated() - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = (v4 + v7) & ~v7;
  uint64_t v9 = v8 + *(void *)(v6 + 64);
  uint64_t v10 = v2 | v7 | 7;
  uint64_t v11 = v0 + v3;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A42A380);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  uint64_t v13 = v11 + v1[14];
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A42A388);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8))(v0 + v8, AssociatedTypeWitness);

  return MEMORY[0x270FA0238](v0, v9, v10);
}

uint64_t sub_25A59C014(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(v2 + 16);
  uint64_t v6 = *(void *)(v2 + 24);
  uint64_t v7 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A42A370) - 8);
  unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  unint64_t v9 = v8 + *(void *)(v7 + 64);
  swift_getAssociatedTypeWitness();
  uint64_t v10 = *(void *)(type metadata accessor for EndpointInvalidated() - 8);
  uint64_t v11 = v2 + ((v9 + *(unsigned __int8 *)(v10 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));

  return sub_25A59A608(a1, a2, v2 + v8, v11, v5, v6);
}

uint64_t sub_25A59C134(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }

  return swift_release();
}

unint64_t sub_25A59C18C()
{
  unint64_t result = qword_26A42A3C8;
  if (!qword_26A42A3C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42A3C8);
  }
  return result;
}

uint64_t sub_25A59C1E0()
{
  return sub_25A596E58();
}

uint64_t sub_25A59C1E8(uint64_t a1)
{
  return sub_25A596F2C(a1, v1);
}

unint64_t sub_25A59C1F0()
{
  unint64_t result = qword_26A42A3D8;
  if (!qword_26A42A3D8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A42A3D0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42A3D8);
  }
  return result;
}

uint64_t sub_25A59C24C(uint64_t a1)
{
  return sub_25A59C264(a1);
}

uint64_t sub_25A59C264(uint64_t a1)
{
  uint64_t v131 = a1;
  uint64_t v116 = *v1;
  uint64_t v2 = v116;
  uint64_t v3 = *(void *)(v116 + 88);
  uint64_t v4 = *(void *)(v116 + 80);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v100 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v117 = (uint64_t)&v86 - v5;
  uint64_t v89 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A429D78);
  MEMORY[0x270FA5388](v89);
  uint64_t v91 = (char *)&v86 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v92 = sub_25A622C10();
  uint64_t v90 = *(void *)(v92 - 8);
  MEMORY[0x270FA5388](v92);
  v88 = (char *)&v86 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = swift_getAssociatedTypeWitness();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A429388);
  uint64_t v9 = sub_25A6226F0();
  uint64_t v10 = sub_25A6226D0();
  uint64_t v101 = v9;
  uint64_t v98 = v10;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  MEMORY[0x270FA5388](TupleTypeMetadata2);
  uint64_t v99 = (char *)&v86 - v11;
  uint64_t v110 = type metadata accessor for TransportReply();
  uint64_t v12 = MEMORY[0x270FA5388](v110);
  uint64_t v118 = (uint64_t)&v86 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v126 = v8;
  uint64_t v127 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v12);
  v121 = (char *)&v86 - v14;
  uint64_t v15 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v111 = v15;
  uint64_t v125 = swift_getAssociatedTypeWitness();
  uint64_t v120 = *(void *)(v125 - 8);
  uint64_t v16 = MEMORY[0x270FA5388](v125);
  uint64_t v95 = (char *)&v86 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  unint64_t v94 = (char *)&v86 - v19;
  MEMORY[0x270FA5388](v18);
  v122 = (char *)&v86 - v20;
  uint64_t v103 = type metadata accessor for LazyPropertyList();
  MEMORY[0x270FA5388](v103);
  v102 = (char *)&v86 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A429D70);
  MEMORY[0x270FA5388](v22 - 8);
  uint64_t v113 = (uint64_t)&v86 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_25A6227C0();
  uint64_t v114 = *(void *)(v24 - 8);
  uint64_t v115 = v24;
  MEMORY[0x270FA5388](v24);
  v112 = (char *)&v86 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v108 = sub_25A6228E0();
  uint64_t v107 = *(void *)(v108 - 8);
  MEMORY[0x270FA5388](v108);
  uint64_t v105 = (char *)&v86 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v119 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A42A300);
  uint64_t v27 = MEMORY[0x270FA5388](v119);
  uint64_t v106 = (char *)&v86 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v27);
  uint64_t v104 = (char *)&v86 - v29;
  uint64_t v30 = type metadata accessor for PipeEvent.Content();
  uint64_t v31 = *(void *)(v30 - 8);
  MEMORY[0x270FA5388](v30);
  uint64_t v33 = (char *)&v86 - v32;
  type metadata accessor for PipeEvent();
  uint64_t v34 = v2;
  uint64_t v35 = v131;
  uint64_t v36 = *(void *)(v34 + 104);
  v124 = v1;
  uint64_t v37 = (char *)v1 + v36;
  uint64_t v97 = v3;
  uint64_t v38 = AssociatedTypeWitness;
  uint64_t v93 = v4;
  swift_getAssociatedConformanceWitness();
  if (sub_25A622DA0())
  {
    id v87 = v37;
    (*(void (**)(char *, uint64_t, uint64_t))(v31 + 16))(v33, v35, v30);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v41 = v126;
    uint64_t v40 = v127;
    uint64_t v42 = v124;
    uint64_t v43 = v125;
    switch(EnumCaseMultiPayload)
    {
      case 1:
        uint64_t v60 = (uint64_t)&v33[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A429D80) + 48)];
        uint64_t v61 = v114;
        uint64_t v62 = v112;
        char v63 = v33;
        uint64_t v64 = v115;
        (*(void (**)(char *, char *, uint64_t))(v114 + 32))(v112, v63, v115);
        uint64_t v65 = v113;
        sub_25A55C73C(v60, v113, &qword_26A429D70);
        uint64_t v66 = *(void (**)(uint64_t, uint64_t))((char *)v42 + *(void *)(*v42 + 152));
        if (v66)
        {
          uint64_t v67 = (uint64_t)v102;
          (*(void (**)(char *, char *, uint64_t))(v61 + 16))(v102, v62, v64);
          swift_storeEnumTagMultiPayload();
          swift_retain();
          v66(v67, v65);
          sub_25A585334((uint64_t)v66);
          sub_25A59D9C0(v67, (uint64_t (*)(void))type metadata accessor for LazyPropertyList);
        }
        else
        {
          sub_25A622570();
          sub_25A59DBD0(&qword_26A42A3E0, MEMORY[0x263F604C0]);
          swift_allocError();
          sub_25A622580();
          swift_willThrow();
        }
        sub_25A570C60(v65, &qword_26A429D70);
        uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v61 + 8))(v62, v64);
        break;
      case 2:
        uint64_t v68 = (char *)v124 + *(void *)(*v124 + 120);
        uint64_t v69 = *(int *)(v119 + 48);
        uint64_t v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A42A358);
        uint64_t v71 = *(void *)(v70 - 8);
        uint64_t v72 = v104;
        (*(void (**)(char *, char *, uint64_t))(v71 + 16))(v104, v68, v70);
        uint64_t v73 = *(void **)&v68[v69];
        *(void *)&v72[v69] = v73;
        v129 = v73;
        __swift_instantiateConcreteTypeFromMangledName(&qword_26A42A3D0);
        sub_25A59C1F0();
        goto LABEL_12;
      case 3:
        uint64_t v74 = (char *)v124 + *(void *)(*v124 + 128);
        uint64_t v75 = *(int *)(v119 + 48);
        uint64_t v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A42A358);
        uint64_t v71 = *(void *)(v70 - 8);
        uint64_t v72 = v106;
        (*(void (**)(char *, char *, uint64_t))(v71 + 16))(v106, v74, v70);
        uint64_t v76 = *(void **)&v74[v75];
        *(void *)&v72[v75] = v76;
        v129 = v76;
        __swift_instantiateConcreteTypeFromMangledName(&qword_26A42A3D0);
        sub_25A59C1F0();
LABEL_12:
        sub_25A622820();
        uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v71 + 8))(v72, v70);
        break;
      case 4:
        v129 = v124;
        swift_getWitnessTable();
        uint64_t v77 = v105;
        sub_25A5B6E80();
        sub_25A622870();
        uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v107 + 8))(v77, v108);
        break;
      default:
        TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
        uint64_t v45 = &v33[*(int *)(TupleTypeMetadata3 + 48)];
        uint64_t v46 = (uint64_t)&v33[*(int *)(TupleTypeMetadata3 + 64)];
        (*(void (**)(char *, char *, uint64_t))(v120 + 32))(v122, v33, v43);
        (*(void (**)(char *, char *, uint64_t))(v40 + 32))(v121, v45, v41);
        uint64_t v47 = v118;
        sub_25A59D608(v46, v118, (uint64_t (*)(void))type metadata accessor for TransportReply);
        uint64_t v48 = (uint64_t)v42 + *(void *)(*v42 + 112);
        swift_getAssociatedConformanceWitness();
        if (sub_25A622DA0())
        {
          uint64_t v49 = v127;
          uint64_t v50 = v41;
          uint64_t v51 = (uint64_t)v42 + *(void *)(*v42 + 136);
          uint64_t v52 = *(int *)(TupleTypeMetadata2 + 48);
          uint64_t v53 = v101;
          uint64_t v54 = *(void *)(v101 - 8);
          uint64_t v55 = v99;
          (*(void (**)(char *, uint64_t, uint64_t))(v54 + 16))(v99, v51, v101);
          uint64_t v56 = *(void **)(v51 + v52);
          *(void *)&v55[v52] = v56;
          v129 = v56;
          swift_getWitnessTable();
          uint64_t v57 = v121;
          uint64_t v58 = v123;
          sub_25A622810();
          if (v58)
          {
            sub_25A59D9C0(v118, (uint64_t (*)(void))type metadata accessor for TransportReply);
            (*(void (**)(char *, uint64_t))(v49 + 8))(v57, v50);
            (*(void (**)(char *, uint64_t))(v120 + 8))(v122, v125);
            uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v54 + 8))(v55, v53);
          }
          else
          {
            (*(void (**)(char *, uint64_t))(v54 + 8))(v55, v53);
            uint64_t v83 = v88;
            sub_25A622C20();
            uint64_t v84 = (uint64_t)v91;
            _s19PreviewsMessagingOS24CanvasControlDescriptionV9ModifiersV17propertyListValue0a10FoundationC008PropertyI0Vvg_0();
            swift_storeEnumTagMultiPayload();
            swift_storeEnumTagMultiPayload();
            __swift_instantiateConcreteTypeFromMangledName(qword_26A429C58);
            uint64_t v85 = v118;
            sub_25A622640();
            sub_25A570C60(v84, &qword_26A429D78);
            (*(void (**)(char *, uint64_t))(v90 + 8))(v83, v92);
            sub_25A59D9C0(v85, (uint64_t (*)(void))type metadata accessor for TransportReply);
            (*(void (**)(char *, uint64_t))(v49 + 8))(v57, v50);
            uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v120 + 8))(v122, v125);
          }
        }
        else
        {
          (*(void (**)(uint64_t, char *, uint64_t))(v100 + 16))(v117, v87, v38);
          uint64_t v78 = v120;
          uint64_t v79 = *(void (**)(char *, uint64_t, uint64_t))(v120 + 16);
          uint64_t v80 = (uint64_t)v94;
          v79(v94, v48, v43);
          uint64_t v81 = (uint64_t)v95;
          v79(v95, (uint64_t)v122, v43);
          type metadata accessor for Outlet.EndpointCollision();
          swift_getWitnessTable();
          swift_allocError();
          sub_25A59ACD4(v117, v80, v81, v82);
          swift_willThrow();
          sub_25A59D9C0(v47, (uint64_t (*)(void))type metadata accessor for TransportReply);
          (*(void (**)(char *, uint64_t))(v127 + 8))(v121, v126);
          uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v78 + 8))(v122, v43);
        }
        break;
    }
  }
  else
  {
    v129 = 0;
    unint64_t v130 = 0xE000000000000000;
    sub_25A623210();
    sub_25A622E00();
    sub_25A623380();
    sub_25A622E00();
    sub_25A623380();
    sub_25A622E00();
    sub_25A622570();
    sub_25A59DBD0(&qword_26A42A3E0, MEMORY[0x263F604C0]);
    swift_allocError();
    sub_25A622580();
    return swift_willThrow();
  }
  return result;
}

uint64_t type metadata accessor for Outlet.EndpointCollision()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_25A59D59C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_25A59D608(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_25A59D670()
{
  type metadata accessor for AsyncMessageStream(0);

  return sub_25A597718();
}

uint64_t sub_25A59D6E0()
{
  return objectdestroyTm_1(&qword_26A42A318, &qword_26A42A320, &qword_26A429288);
}

uint64_t objectdestroyTm_1(uint64_t *a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t v6 = (int *)(__swift_instantiateConcreteTypeFromMangledName(a1) - 8);
  uint64_t v7 = *(unsigned __int8 *)(*(void *)v6 + 80);
  uint64_t v8 = (v7 + 56) & ~v7;
  uint64_t v9 = v7 | 7;
  unint64_t v10 = ((*(void *)(*(void *)v6 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  swift_unknownObjectRelease();
  swift_release();
  uint64_t v11 = v3 + v8;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  uint64_t v13 = v11 + v6[14];
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
  swift_unknownObjectRelease();

  return MEMORY[0x270FA0238](v3, v10, v9);
}

uint64_t sub_25A59D850()
{
  uint64_t v2 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A42A318) - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = v0 + v3;
  uint64_t v5 = (uint64_t *)(v0 + ((*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v6 = *v5;
  uint64_t v7 = v5[1];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v8;
  *uint64_t v8 = v1;
  v8[1] = sub_25A566D38;
  uint64_t v9 = (void *)swift_task_alloc();
  _OWORD v8[2] = v9;
  *uint64_t v9 = v8;
  v9[1] = sub_25A566D38;
  return sub_25A597874(v4, v6, v7);
}

uint64_t sub_25A59D9B4(uint64_t a1)
{
  return sub_25A598564(a1, *(char **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_25A59D9C0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t objectdestroy_29Tm()
{
  uint64_t v1 = (int *)(type metadata accessor for AsyncMessageStream(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v3 + *(void *)(*(void *)v1 + 64);
  uint64_t v5 = v2 | 7;
  uint64_t v6 = v0 + v3;
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v7 = v6 + v1[8];
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A429288);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  swift_release();

  return MEMORY[0x270FA0238](v0, v4, v5);
}

uint64_t sub_25A59DB30@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(type metadata accessor for AsyncMessageStream(0) - 8);
  return sub_25A59D59C(v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)), a1, type metadata accessor for AsyncMessageStream);
}

uint64_t sub_25A59DBA8()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_25A59DBD0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_25A59DC18()
{
  uint64_t result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    uint64_t result = swift_getAssociatedTypeWitness();
    if (v2 <= 0x3F)
    {
      uint64_t v3 = *(void *)(result - 8) + 64;
      swift_getTupleTypeLayout2();
      v4[4] = v4;
      v4[5] = v3;
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_25A59DD78(uint64_t *a1, uint64_t *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v7 = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(_DWORD *)(v8 + 80);
  uint64_t v10 = v6 + v9;
  uint64_t v11 = *(void *)(v8 + 64);
  uint64_t v12 = ((v6 + v9) & ~v9) + v11 + v9;
  unint64_t v13 = (v12 & ~v9) + v11;
  uint64_t v14 = (*(unsigned char *)(v5 + 80) | *(unsigned char *)(v8 + 80));
  if (v14 > 7 || ((*(_DWORD *)(v5 + 80) | *(_DWORD *)(v8 + 80)) & 0x100000) != 0 || v13 > 0x18)
  {
    uint64_t v17 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v17 + ((v14 + 16) & ~v14));
    swift_retain();
  }
  else
  {
    uint64_t v18 = v7;
    uint64_t v19 = ~v9;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
    uint64_t v20 = *(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 16);
    v20(((unint64_t)a1 + v10) & v19, ((unint64_t)a2 + v10) & v19, v18);
    v20(((unint64_t)a1 + v12) & v19, ((unint64_t)a2 + v12) & v19, v18);
  }
  return a1;
}

uint64_t sub_25A59DF90(uint64_t a1)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v3 = *(void *)(AssociatedTypeWitness - 8) + 8;
  (*(void (**)(uint64_t, uint64_t))v3)(a1, AssociatedTypeWitness);
  uint64_t v4 = *(void *)(v3 + 56);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v5 = swift_getAssociatedTypeWitness();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v11 = v6 + 8;
  uint64_t v12 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = v7 + a1;
  v12((v8 + v4) & ~v7, v5);
  uint64_t v9 = (v8 + *(void *)(v11 + 56) + ((v4 + v7) & ~v7)) & ~v7;

  return ((uint64_t (*)(uint64_t, uint64_t))v12)(v9, v5);
}

uint64_t sub_25A59E104(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8) + 16;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v5)(a1, a2, AssociatedTypeWitness);
  uint64_t v6 = *(void *)(v5 + 48);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v7 = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16);
  uint64_t v10 = v8 + 16;
  uint64_t v11 = *(unsigned __int8 *)(v8 + 80);
  v9((v6 + v11 + a1) & ~v11, (v6 + v11 + a2) & ~v11, v7);
  uint64_t v12 = ((v6 + v11) & ~v11) + *(void *)(v10 + 48);
  v9((v11 + a1 + v12) & ~v11, (v11 + a2 + v12) & ~v11, v7);
  return a1;
}

uint64_t sub_25A59E278(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8) + 24;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v5)(a1, a2, AssociatedTypeWitness);
  uint64_t v6 = *(void *)(v5 + 40);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v7 = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 24);
  uint64_t v10 = v8 + 24;
  uint64_t v11 = *(unsigned __int8 *)(v8 + 80);
  v9((v6 + v11 + a1) & ~v11, (v6 + v11 + a2) & ~v11, v7);
  uint64_t v12 = ((v6 + v11) & ~v11) + *(void *)(v10 + 40);
  v9((v11 + a1 + v12) & ~v11, (v11 + a2 + v12) & ~v11, v7);
  return a1;
}

uint64_t sub_25A59E3EC(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8) + 32;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v5)(a1, a2, AssociatedTypeWitness);
  uint64_t v6 = *(void *)(v5 + 32);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v7 = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32);
  uint64_t v10 = v8 + 32;
  uint64_t v11 = *(unsigned __int8 *)(v8 + 80);
  v9((v6 + v11 + a1) & ~v11, (v6 + v11 + a2) & ~v11, v7);
  uint64_t v12 = ((v6 + v11) & ~v11) + *(void *)(v10 + 32);
  v9((v11 + a1 + v12) & ~v11, (v11 + a2 + v12) & ~v11, v7);
  return a1;
}

uint64_t sub_25A59E560(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8) + 40;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v5)(a1, a2, AssociatedTypeWitness);
  uint64_t v6 = *(void *)(v5 + 24);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v7 = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 40);
  uint64_t v10 = v8 + 40;
  uint64_t v11 = *(unsigned __int8 *)(v8 + 80);
  v9((v6 + v11 + a1) & ~v11, (v6 + v11 + a2) & ~v11, v7);
  uint64_t v12 = ((v6 + v11) & ~v11) + *(void *)(v10 + 24);
  v9((v11 + a1 + v12) & ~v11, (v11 + a2 + v12) & ~v11, v7);
  return a1;
}

uint64_t sub_25A59E6D4(unsigned __int16 *a1, unsigned int a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v24 = AssociatedTypeWitness;
  uint64_t v6 = *(unsigned int *)(v5 + 84);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v7 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v8 = v7;
  unsigned int v9 = *(_DWORD *)(v7 + 84);
  if (v9 <= v6) {
    unsigned int v10 = v6;
  }
  else {
    unsigned int v10 = *(_DWORD *)(v7 + 84);
  }
  uint64_t v11 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v12 = *(void *)(v7 + 64);
  if (!a2) {
    return 0;
  }
  uint64_t v13 = *(void *)(v5 + 64) + v11;
  if (a2 <= v10) {
    goto LABEL_24;
  }
  uint64_t v14 = ((v12 + v11 + (v13 & ~v11)) & ~v11) + v12;
  char v15 = 8 * v14;
  if (v14 <= 3)
  {
    unsigned int v17 = ((a2 - v10 + ~(-1 << v15)) >> v15) + 1;
    if (HIWORD(v17))
    {
      int v16 = *(_DWORD *)((char *)a1 + v14);
      if (!v16) {
        goto LABEL_24;
      }
      goto LABEL_14;
    }
    if (v17 > 0xFF)
    {
      int v16 = *(unsigned __int16 *)((char *)a1 + v14);
      if (!*(unsigned __int16 *)((char *)a1 + v14)) {
        goto LABEL_24;
      }
      goto LABEL_14;
    }
    if (v17 < 2)
    {
LABEL_24:
      if (v10)
      {
        if (v6 >= v9)
        {
          uint64_t v23 = *(uint64_t (**)(unsigned __int16 *, uint64_t, uint64_t))(v5 + 48);
          return v23(a1, v6, v24);
        }
        else
        {
          uint64_t v21 = *(uint64_t (**)(unint64_t))(v8 + 48);
          return v21(((unint64_t)a1 + v13) & ~v11);
        }
      }
      return 0;
    }
  }
  int v16 = *((unsigned __int8 *)a1 + v14);
  if (!*((unsigned char *)a1 + v14)) {
    goto LABEL_24;
  }
LABEL_14:
  int v18 = (v16 - 1) << v15;
  if (v14 > 3) {
    int v18 = 0;
  }
  if (v14)
  {
    if (v14 <= 3) {
      int v19 = v14;
    }
    else {
      int v19 = 4;
    }
    switch(v19)
    {
      case 2:
        int v20 = *a1;
        break;
      case 3:
        int v20 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        int v20 = *(_DWORD *)a1;
        break;
      default:
        int v20 = *(unsigned __int8 *)a1;
        break;
    }
  }
  else
  {
    int v20 = 0;
  }
  return v10 + (v20 | v18) + 1;
}

void sub_25A59E9F0(unsigned char *a1, unsigned int a2, unsigned int a3)
{
  uint64_t v5 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unsigned int v6 = *(_DWORD *)(v5 + 84);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v7 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v8 = v7;
  unsigned int v9 = *(_DWORD *)(v7 + 84);
  if (v9 <= v6) {
    unsigned int v10 = v6;
  }
  else {
    unsigned int v10 = *(_DWORD *)(v7 + 84);
  }
  uint64_t v11 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v12 = *(void *)(v5 + 64) + v11;
  size_t v13 = ((*(void *)(v7 + 64) + v11 + (v12 & ~v11)) & ~v11) + *(void *)(v7 + 64);
  unsigned int v14 = a3 - v10;
  if (a3 <= v10)
  {
    int v16 = 0;
    char v15 = a1;
  }
  else
  {
    char v15 = a1;
    if (v13 <= 3)
    {
      unsigned int v19 = ((v14 + ~(-1 << (8 * v13))) >> (8 * v13)) + 1;
      if (HIWORD(v19))
      {
        int v16 = 4;
      }
      else if (v19 >= 0x100)
      {
        int v16 = 2;
      }
      else
      {
        int v16 = v19 > 1;
      }
    }
    else
    {
      int v16 = 1;
    }
  }
  if (v10 < a2)
  {
    unsigned int v17 = ~v10 + a2;
    if (v13 < 4)
    {
      int v18 = (v17 >> (8 * v13)) + 1;
      if (v13)
      {
        int v20 = v17 & ~(-1 << (8 * v13));
        bzero(v15, v13);
        if (v13 == 3)
        {
          *(_WORD *)char v15 = v20;
          v15[2] = BYTE2(v20);
        }
        else if (v13 == 2)
        {
          *(_WORD *)char v15 = v20;
        }
        else
        {
          *char v15 = v20;
        }
      }
    }
    else
    {
      bzero(v15, v13);
      *(_DWORD *)char v15 = v17;
      int v18 = 1;
    }
    switch(v16)
    {
      case 1:
        v15[v13] = v18;
        return;
      case 2:
        *(_WORD *)&v15[v13] = v18;
        return;
      case 3:
        goto LABEL_41;
      case 4:
        *(_DWORD *)&v15[v13] = v18;
        return;
      default:
        return;
    }
  }
  switch(v16)
  {
    case 1:
      v15[v13] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 2:
      *(_WORD *)&v15[v13] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 3:
LABEL_41:
      __break(1u);
      JUMPOUT(0x25A59ED80);
    case 4:
      *(_DWORD *)&v15[v13] = 0;
      goto LABEL_23;
    default:
LABEL_23:
      if (a2)
      {
LABEL_24:
        if (v6 >= v9)
        {
          uint64_t v22 = *(void (**)(unsigned char *))(v5 + 56);
          v22(v15);
        }
        else
        {
          uint64_t v21 = *(void (**)(unint64_t))(v8 + 56);
          v21((unint64_t)&v15[v12] & ~v11);
        }
      }
      return;
  }
}

uint64_t sub_25A59EDA8()
{
  return swift_getWitnessTable();
}

uint64_t sub_25A59EDC4()
{
  return swift_getWitnessTable();
}

uint64_t sub_25A59EDE0()
{
  return swift_getWitnessTable();
}

uint64_t Transport.legacyMessageKey.getter()
{
  return 0;
}

uint64_t Transport.activation.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(a2 + 32) + **(int **)(a2 + 32));
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_25A59EF00;
  return v7(a1, a2);
}

uint64_t sub_25A59EF00()
{
  uint64_t v2 = *v1;
  swift_task_dealloc();
  if (!v0) {
    swift_release();
  }
  uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
  return v3();
}

uint64_t Transport.invalidatedError.getter@<X0>(uint64_t *a1@<X8>)
{
  a1[3] = sub_25A6227F0();
  a1[4] = sub_25A59F0CC();
  __swift_allocate_boxed_opaque_existential_1(a1);
  return sub_25A622800();
}

unint64_t sub_25A59F0CC()
{
  unint64_t result = qword_26A429E88[0];
  if (!qword_26A429E88[0])
  {
    sub_25A6227F0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26A429E88);
  }
  return result;
}

uint64_t dispatch thunk of Transport.activate(receiver:interruptionHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 24))();
}

uint64_t dispatch thunk of Transport.sender.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(a2 + 32) + **(int **)(a2 + 32));
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_25A59F228;
  return v7(a1, a2);
}

uint64_t sub_25A59F228(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = *v2;
  swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(v7 + 8);
  return v5(a1, a2);
}

uint64_t dispatch thunk of Transport.legacyMessageKey.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t UVPropertyList.decoded.getter@<X0>(uint64_t *a1@<X8>)
{
  id v3 = objc_msgSend(v1, sel_data);
  uint64_t v4 = sub_25A6222D0();
  uint64_t v6 = v5;

  *a1 = v4;
  a1[1] = v6;
  type metadata accessor for LazyPropertyList();

  return swift_storeEnumTagMultiPayload();
}

id LazyPropertyList.encoded.getter()
{
  uint64_t v0 = sub_25A622C70();
  MEMORY[0x270FA5388](v0);
  unint64_t v1 = LazyPropertyList.data.getter();
  unint64_t v3 = v2;
  id v4 = objc_allocWithZone(MEMORY[0x263F60FE0]);
  uint64_t v5 = (void *)sub_25A6222C0();
  id v6 = objc_msgSend(v4, sel_initWithData_, v5);
  sub_25A59C134((uint64_t)v1, v3);

  return v6;
}

id PropertyList.encoded.getter()
{
  uint64_t v1 = type metadata accessor for LazyPropertyList();
  MEMORY[0x270FA5388](v1);
  unint64_t v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_25A6227C0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(v3, v0, v4);
  swift_storeEnumTagMultiPayload();
  id v5 = LazyPropertyList.encoded.getter();
  sub_25A595208((uint64_t)v3);
  return v5;
}

uint64_t UVPropertyList.eagerlyDecoded.getter()
{
  id v1 = objc_msgSend(v0, sel_dictionary);
  sub_25A622D00();

  return sub_25A622740();
}

PreviewsMessagingOS::BitmapDescription::ByteOrder_optional __swiftcall BitmapDescription.ByteOrder.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v1 = sub_25A6232B0();
  swift_bridgeObjectRelease();
  if (v1 == 1) {
    v2.value = PreviewsMessagingOS_BitmapDescription_ByteOrder_big;
  }
  else {
    v2.value = PreviewsMessagingOS_BitmapDescription_ByteOrder_unknownDefault;
  }
  if (v1) {
    return v2;
  }
  else {
    return 0;
  }
}

uint64_t BitmapDescription.ByteOrder.rawValue.getter(char a1)
{
  if (a1) {
    return 6777186;
  }
  else {
    return 0x656C7474696CLL;
  }
}

uint64_t sub_25A59F854(char *a1, char *a2)
{
  char v2 = *a2;
  uint64_t v3 = BitmapDescription.ByteOrder.rawValue.getter(*a1);
  uint64_t v5 = v4;
  if (v3 == BitmapDescription.ByteOrder.rawValue.getter(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_25A6233B0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_25A59F8E0()
{
  char v1 = *v0;
  sub_25A623450();
  BitmapDescription.ByteOrder.rawValue.getter(v1);
  sub_25A622DF0();
  swift_bridgeObjectRelease();
  return sub_25A6234A0();
}

uint64_t sub_25A59F944()
{
  BitmapDescription.ByteOrder.rawValue.getter(*v0);
  sub_25A622DF0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25A59F998()
{
  char v1 = *v0;
  sub_25A623450();
  BitmapDescription.ByteOrder.rawValue.getter(v1);
  sub_25A622DF0();
  swift_bridgeObjectRelease();
  return sub_25A6234A0();
}

uint64_t sub_25A59F9F8@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_25A6232B0();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_25A59FA58@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = BitmapDescription.ByteOrder.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_25A59FA84(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_25A5A125C();
  uint64_t v5 = MEMORY[0x263F60648];

  return MEMORY[0x270F55C68](a1, a2, v4, v5);
}

uint64_t sub_25A59FAE0()
{
  return sub_25A622B20();
}

uint64_t BitmapDescription.data.getter()
{
  uint64_t v1 = *(void *)v0;
  sub_25A59FB7C(*(void *)v0, *(void *)(v0 + 8));
  return v1;
}

uint64_t sub_25A59FB7C(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_retain();
  }

  return swift_retain();
}

uint64_t BitmapDescription.data.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_25A59C134(*(void *)v2, *(void *)(v2 + 8));
  *(void *)uint64_t v2 = a1;
  *(void *)(v2 + 8) = a2;
  return result;
}

uint64_t (*BitmapDescription.data.modify())()
{
  return nullsub_1;
}

uint64_t BitmapDescription.width.getter()
{
  return *(void *)(v0 + 16);
}

uint64_t BitmapDescription.width.setter(uint64_t result)
{
  *(void *)(v1 + 16) = result;
  return result;
}

uint64_t (*BitmapDescription.width.modify())()
{
  return nullsub_1;
}

uint64_t BitmapDescription.height.getter()
{
  return *(void *)(v0 + 24);
}

uint64_t BitmapDescription.height.setter(uint64_t result)
{
  *(void *)(v1 + 24) = result;
  return result;
}

uint64_t (*BitmapDescription.height.modify())()
{
  return nullsub_1;
}

uint64_t BitmapDescription.bytesPerRow.getter()
{
  return *(void *)(v0 + 32);
}

uint64_t BitmapDescription.bytesPerRow.setter(uint64_t result)
{
  *(void *)(v1 + 32) = result;
  return result;
}

uint64_t (*BitmapDescription.bytesPerRow.modify())()
{
  return nullsub_1;
}

uint64_t BitmapDescription.bitmapInfo.getter()
{
  return *(unsigned int *)(v0 + 40);
}

uint64_t BitmapDescription.bitmapInfo.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 40) = result;
  return result;
}

uint64_t (*BitmapDescription.bitmapInfo.modify())()
{
  return nullsub_1;
}

uint64_t BitmapDescription.bitsPerComponent.getter()
{
  return *(void *)(v0 + 48);
}

uint64_t BitmapDescription.bitsPerComponent.setter(uint64_t result)
{
  *(void *)(v1 + 48) = result;
  return result;
}

uint64_t (*BitmapDescription.bitsPerComponent.modify())()
{
  return nullsub_1;
}

uint64_t BitmapDescription.bitsPerPixel.getter()
{
  return *(void *)(v0 + 56);
}

uint64_t BitmapDescription.bitsPerPixel.setter(uint64_t result)
{
  *(void *)(v1 + 56) = result;
  return result;
}

uint64_t (*BitmapDescription.bitsPerPixel.modify())()
{
  return nullsub_1;
}

uint64_t BitmapDescription.colorSpace.getter()
{
  uint64_t v1 = *(void *)(v0 + 64);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t BitmapDescription.colorSpace.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 64) = a1;
  *(void *)(v2 + 72) = a2;
  return result;
}

uint64_t (*BitmapDescription.colorSpace.modify())()
{
  return nullsub_1;
}

uint64_t BitmapDescription.init(data:width:height:bytesPerRow:bitmapInfo:bitsPerComponent:bitsPerPixel:colorSpace:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, int a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11)
{
  *(void *)a9 = result;
  *(void *)(a9 + 8) = a2;
  *(void *)(a9 + 16) = a3;
  *(void *)(a9 + 24) = a4;
  *(void *)(a9 + 32) = a5;
  *(_DWORD *)(a9 + 40) = a6;
  *(void *)(a9 + 48) = a7;
  *(void *)(a9 + 56) = a8;
  *(void *)(a9 + 64) = a10;
  *(void *)(a9 + 72) = a11;
  return result;
}

BOOL sub_25A59FDF4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_25A59FE08()
{
  return sub_25A6234A0();
}

uint64_t sub_25A59FE50()
{
  return sub_25A623460();
}

uint64_t sub_25A59FE7C()
{
  return sub_25A6234A0();
}

CGImageRef __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> BitmapDescription.makeImage()()
{
  size_t v1 = *(void *)(v0 + 16);
  size_t v2 = *(void *)(v0 + 24);
  size_t bytesPerRow = *(void *)(v0 + 32);
  CGBitmapInfo bitmapInfo = *(_DWORD *)(v0 + 40);
  size_t v4 = *(void *)(v0 + 48);
  uint64_t v3 = *(CGImage **)(v0 + 56);
  CFDataRef v5 = (const __CFData *)sub_25A6222C0();
  CGDataProviderRef v6 = CGDataProviderCreateWithCFData(v5);
  if (!v6)
  {
    sub_25A5A0054();
    swift_allocError();
    *uint64_t v11 = 0;
    swift_willThrow();
    CGColorSpaceRef v9 = v5;
LABEL_8:

    return v3;
  }
  uint64_t v7 = v6;
  char v8 = (__CFString *)sub_25A622DB0();
  CGColorSpaceRef v9 = CGColorSpaceCreateWithName(v8);

  if (!v9)
  {
    sub_25A5A0054();
    swift_allocError();
    *uint64_t v12 = 1;
    swift_willThrow();

    CGColorSpaceRef v9 = v7;
    goto LABEL_8;
  }
  CGImageRef v10 = CGImageCreate(v1, v2, v4, (size_t)v3, bytesPerRow, v9, bitmapInfo, v7, 0, 0, kCGRenderingIntentDefault);
  if (!v10)
  {
    sub_25A5A0054();
    swift_allocError();
    *size_t v13 = 2;
    swift_willThrow();

    goto LABEL_8;
  }
  uint64_t v3 = v10;

  return v3;
}

unint64_t sub_25A5A0054()
{
  unint64_t result = qword_26A42A4A0;
  if (!qword_26A42A4A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42A4A0);
  }
  return result;
}

unint64_t sub_25A5A00A8(char a1)
{
  unint64_t result = 0xD000000000000010;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6874646977;
      break;
    case 2:
      unint64_t result = 0x746867696568;
      break;
    case 3:
      unint64_t result = 0x7265507365747962;
      break;
    case 4:
      unint64_t result = 0x6564724F65747962;
      break;
    case 5:
      unint64_t result = 0x6E4970616D746962;
      break;
    case 6:
      return result;
    case 7:
      unint64_t result = 0x5072655073746962;
      break;
    case 8:
      unint64_t result = 0x617053726F6C6F63;
      break;
    default:
      unint64_t result = 1635017060;
      break;
  }
  return result;
}

uint64_t sub_25A5A01DC(unsigned __int8 *a1, char *a2)
{
  return sub_25A5EB0A4(*a1, *a2);
}

uint64_t sub_25A5A01E8()
{
  return sub_25A6234A0();
}

uint64_t sub_25A5A0230()
{
  return sub_25A54B400();
}

uint64_t sub_25A5A0238()
{
  return sub_25A6234A0();
}

uint64_t sub_25A5A027C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_25A5A1210();
  *a1 = result;
  return result;
}

unint64_t sub_25A5A02AC@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_25A5A00A8(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_25A5A02D8()
{
  return sub_25A5A00A8(*v0);
}

uint64_t BitmapDescription.propertyListValue.getter()
{
  return sub_25A622780();
}

uint64_t sub_25A5A0338()
{
  return sub_25A622A20();
}

uint64_t sub_25A5A04FC()
{
  return sub_25A5A0338();
}

uint64_t BitmapDescription.init(propertyListValue:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_25A6227C0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  char v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = &type metadata for BitmapDescription.Key;
  unint64_t v9 = sub_25A5A0A64();
  unint64_t v42 = v9;
  v40[0] = 5;
  sub_25A622760();
  if (v2)
  {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v40);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v40);
    int v34 = v43;
    char v10 = v44;
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a1, v5);
    if (v10)
    {
      uint64_t v41 = &type metadata for BitmapDescription.Key;
      unint64_t v42 = v9;
      v40[0] = 4;
      sub_25A5A0AB8();
      sub_25A622710();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v40);
      if ((_BYTE)v38) {
        int v11 = 16386;
      }
      else {
        int v11 = 8194;
      }
      int v34 = v11;
    }
    uint64_t v12 = v8;
    size_t v13 = *(void (**)(char *, uint64_t))(v6 + 8);
    v13(v12, v5);
    uint64_t v41 = &type metadata for BitmapDescription.Key;
    unint64_t v42 = v9;
    v40[0] = 6;
    sub_25A622760();
    uint64_t v33 = (void (*)(uint64_t, uint64_t))v13;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v40);
    if ((_BYTE)v39) {
      uint64_t v14 = 8;
    }
    else {
      uint64_t v14 = v38;
    }
    uint64_t v41 = &type metadata for BitmapDescription.Key;
    unint64_t v42 = v9;
    v40[0] = 7;
    sub_25A622760();
    uint64_t v32 = v14;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v40);
    if ((_BYTE)v39) {
      uint64_t v15 = 32;
    }
    else {
      uint64_t v15 = v38;
    }
    uint64_t v41 = &type metadata for BitmapDescription.Key;
    unint64_t v42 = v9;
    v40[0] = 8;
    sub_25A622760();
    uint64_t v30 = v15;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v40);
    if (v39)
    {
      uint64_t v31 = v39;
      uint64_t v29 = v38;
    }
    else
    {
      uint64_t v29 = sub_25A622DC0();
      uint64_t v31 = v17;
    }
    uint64_t v41 = &type metadata for BitmapDescription.Key;
    unint64_t v42 = v9;
    v40[0] = 0;
    sub_25A622710();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v40);
    uint64_t v18 = v38;
    uint64_t v28 = v39;
    uint64_t v41 = &type metadata for BitmapDescription.Key;
    unint64_t v42 = v9;
    v40[0] = 1;
    sub_25A622710();
    uint64_t v27 = v18;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v40);
    uint64_t v19 = v37;
    uint64_t v41 = &type metadata for BitmapDescription.Key;
    unint64_t v42 = v9;
    v40[0] = 2;
    sub_25A622710();
    uint64_t v26 = v19;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v40);
    uint64_t v20 = v36;
    uint64_t v41 = &type metadata for BitmapDescription.Key;
    unint64_t v42 = v9;
    v40[0] = 3;
    sub_25A622710();
    v33(a1, v5);
    uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v40);
    uint64_t v21 = v35;
    uint64_t v22 = v28;
    *(void *)a2 = v27;
    *(void *)(a2 + 8) = v22;
    *(void *)(a2 + 16) = v26;
    *(void *)(a2 + 24) = v20;
    *(void *)(a2 + 32) = v21;
    *(_DWORD *)(a2 + 40) = v34;
    uint64_t v23 = v30;
    *(void *)(a2 + 48) = v32;
    *(void *)(a2 + 56) = v23;
    uint64_t v24 = v31;
    *(void *)(a2 + 64) = v29;
    *(void *)(a2 + 72) = v24;
  }
  return result;
}

unint64_t sub_25A5A0A64()
{
  unint64_t result = qword_26A42A4A8;
  if (!qword_26A42A4A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42A4A8);
  }
  return result;
}

unint64_t sub_25A5A0AB8()
{
  unint64_t result = qword_26A42A4B0;
  if (!qword_26A42A4B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42A4B0);
  }
  return result;
}

uint64_t sub_25A5A0B0C()
{
  return sub_25A622780();
}

uint64_t sub_25A5A0B64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return BitmapDescription.init(propertyListValue:)(a1, a2);
}

unint64_t sub_25A5A0B80()
{
  unint64_t result = qword_26A42A4B8;
  if (!qword_26A42A4B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42A4B8);
  }
  return result;
}

uint64_t destroy for BitmapDescription(uint64_t a1)
{
  sub_25A59C134(*(void *)a1, *(void *)(a1 + 8));

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for BitmapDescription(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  unint64_t v5 = *(void *)(a2 + 8);
  sub_25A59FB7C(*(void *)a2, v5);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  uint64_t v6 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v6;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for BitmapDescription(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  unint64_t v5 = *(void *)(a2 + 8);
  sub_25A59FB7C(*(void *)a2, v5);
  uint64_t v6 = *(void *)a1;
  unint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  sub_25A59C134(v6, v7);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy80_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(__n128 *)(a1 + 16) = result;
  *(_OWORD *)(a1 + 32) = v3;
  return result;
}

uint64_t assignWithTake for BitmapDescription(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a1;
  unint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  sub_25A59C134(v4, v5);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  uint64_t v6 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for BitmapDescription(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 80)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 72);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for BitmapDescription(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 80) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 72) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 80) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BitmapDescription()
{
  return &type metadata for BitmapDescription;
}

unsigned char *storeEnumTagSinglePayload for BitmapDescription.ByteOrder(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25A5A0F20);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BitmapDescription.ByteOrder()
{
  return &type metadata for BitmapDescription.ByteOrder;
}

unsigned char *storeEnumTagSinglePayload for BitmapDescription.Key(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *__n128 result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25A5A1024);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BitmapDescription.Key()
{
  return &type metadata for BitmapDescription.Key;
}

unsigned char *storeEnumTagSinglePayload for BitmapDescription.RenderingError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *__n128 result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25A5A1128);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BitmapDescription.RenderingError()
{
  return &type metadata for BitmapDescription.RenderingError;
}

unint64_t sub_25A5A1164()
{
  unint64_t result = qword_26A42A4C0;
  if (!qword_26A42A4C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42A4C0);
  }
  return result;
}

unint64_t sub_25A5A11BC()
{
  unint64_t result = qword_26A42A4C8;
  if (!qword_26A42A4C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42A4C8);
  }
  return result;
}

uint64_t sub_25A5A1210()
{
  unint64_t v0 = sub_25A6232B0();
  swift_bridgeObjectRelease();
  if (v0 >= 9) {
    return 9;
  }
  else {
    return v0;
  }
}

unint64_t sub_25A5A125C()
{
  unint64_t result = qword_26A42A4D0;
  if (!qword_26A42A4D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42A4D0);
  }
  return result;
}

uint64_t SelectableRegion.path.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

double SelectableRegion.rect.getter()
{
  return *(double *)(v0 + 16);
}

uint64_t SelectableRegion.accessibilityElement.getter()
{
  uint64_t v1 = *(void *)(v0 + 48);
  sub_25A5A1324(v1, *(void *)(v0 + 56));
  return v1;
}

uint64_t sub_25A5A1324(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_25A59FB7C(a1, a2);
  }
  return a1;
}

uint64_t SelectableRegion.init(path:rect:accessibilityElement:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>, double a6@<D0>, double a7@<D1>, double a8@<D2>, double a9@<D3>)
{
  *(void *)a5 = result;
  *(void *)(a5 + 8) = a2;
  *(double *)(a5 + 16) = a6;
  *(double *)(a5 + 24) = a7;
  *(double *)(a5 + 32) = a8;
  *(double *)(a5 + 40) = a9;
  *(void *)(a5 + 48) = a3;
  *(void *)(a5 + 56) = a4;
  return result;
}

uint64_t SelectableRegion.scaledBy(_:)@<X0>(uint64_t a1@<X8>, double a2@<D0>)
{
  double v6 = *v2;
  uint64_t v5 = *((void *)v2 + 1);
  double v7 = v2[2];
  double v8 = v2[3];
  CGFloat v10 = v2[4];
  double v9 = v2[5];
  uint64_t v11 = *((void *)v2 + 6);
  unint64_t v12 = *((void *)v2 + 7);
  swift_bridgeObjectRetain();
  v16.origin.x = v7;
  v16.origin.y = v8;
  v16.size.width = v10;
  v16.size.height = v9;
  if (!CGRectIsNull(v16))
  {
    v17.origin.x = v7;
    v17.origin.y = v8;
    v17.size.width = v10;
    v17.size.height = v9;
    if (!CGRectIsInfinite(v17))
    {
      v18.origin.x = v7;
      v18.origin.y = v8;
      v18.size.width = v10;
      v18.size.height = v9;
      CGFloat v13 = CGRectGetWidth(v18) * a2;
      v19.origin.x = v7;
      v19.origin.y = v8;
      v19.size.width = v10;
      v19.size.height = v9;
      double v9 = CGRectGetHeight(v19) * a2;
      double v7 = v7 * a2;
      double v8 = v8 * a2;
      CGFloat v10 = v13;
    }
  }
  *(double *)a1 = v6;
  *(void *)(a1 + 8) = v5;
  *(double *)(a1 + 16) = v7;
  *(double *)(a1 + 24) = v8;
  *(CGFloat *)(a1 + 32) = v10;
  *(double *)(a1 + 40) = v9;
  *(void *)(a1 + 48) = v11;
  *(void *)(a1 + 56) = v12;

  return sub_25A5A1324(v11, v12);
}

uint64_t sub_25A5A1454(char a1)
{
  if (!a1) {
    return 1752457584;
  }
  if (a1 == 1) {
    return 1952671090;
  }
  return 0xD00000000000001ELL;
}

uint64_t sub_25A5A14A0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_25A5EB388(*a1, *a2);
}

uint64_t sub_25A5A14AC()
{
  return sub_25A617CC0();
}

uint64_t sub_25A5A14B4()
{
  return sub_25A54B568();
}

uint64_t sub_25A5A14BC()
{
  return sub_25A61C598();
}

uint64_t sub_25A5A14C4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_25A5A1DF4();
  *a1 = result;
  return result;
}

uint64_t sub_25A5A14F4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_25A5A1454(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_25A5A1520()
{
  return sub_25A5A1454(*v0);
}

uint64_t SelectableRegion.propertyListValue.getter()
{
  return sub_25A622780();
}

uint64_t sub_25A5A1578(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = a1[1];
  long long v6 = *((_OWORD *)a1 + 1);
  uint64_t v3 = a1[4];
  uint64_t v4 = a1[5];
  sub_25A5A1E40((uint64_t)(a1 + 6), (uint64_t)v16);
  char v15 = 0;
  uint64_t v13 = v1;
  uint64_t v14 = v2;
  char v12 = 1;
  long long v8 = v6;
  uint64_t v9 = v3;
  uint64_t v10 = v4;
  char v11 = 0;
  v7[23] = 2;
  sub_25A5A1E40((uint64_t)v16, (uint64_t)v7);
  type metadata accessor for CGRect(0);
  sub_25A5A187C();
  return sub_25A622A70();
}

uint64_t sub_25A5A1670()
{
  return sub_25A5A1578(*(uint64_t **)(v0 + 16));
}

uint64_t SelectableRegion.init(propertyListValue:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  CGRect v17 = &type metadata for SelectableRegion.Key;
  unint64_t v5 = sub_25A5A187C();
  unint64_t v18 = v5;
  v16[0] = 0;
  sub_25A622710();
  if (v2)
  {
    uint64_t v6 = sub_25A6227C0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
    uint64_t v8 = v19;
    uint64_t v7 = v20;
    CGRect v17 = &type metadata for SelectableRegion.Key;
    unint64_t v18 = v5;
    v16[0] = 1;
    type metadata accessor for CGRect(0);
    sub_25A622710();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
    CGRect v17 = &type metadata for SelectableRegion.Key;
    unint64_t v18 = v5;
    v16[0] = 2;
    sub_25A622760();
    uint64_t v10 = sub_25A6227C0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(a1, v10);
    uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
    *(void *)a2 = v8;
    *(void *)(a2 + 8) = v7;
    *(void *)(a2 + 16) = v12;
    *(void *)(a2 + 24) = v13;
    *(void *)(a2 + 32) = v14;
    *(void *)(a2 + 40) = v15;
    *(_OWORD *)(a2 + 48) = v11;
  }
  return result;
}

unint64_t sub_25A5A187C()
{
  unint64_t result = qword_26A42A4D8;
  if (!qword_26A42A4D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42A4D8);
  }
  return result;
}

uint64_t sub_25A5A18D0()
{
  return sub_25A622780();
}

uint64_t sub_25A5A1920@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return SelectableRegion.init(propertyListValue:)(a1, a2);
}

uint64_t destroy for SelectableRegion(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  unint64_t v3 = *(void *)(a1 + 56);
  if (v3 >> 60 != 15)
  {
    uint64_t v4 = *(void *)(a1 + 48);
    return sub_25A59C134(v4, v3);
  }
  return result;
}

uint64_t initializeWithCopy for SelectableRegion(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v4;
  unint64_t v5 = (_OWORD *)(a2 + 48);
  unint64_t v6 = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  if (v6 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 48) = *v5;
  }
  else
  {
    uint64_t v7 = *(void *)v5;
    sub_25A59FB7C(v7, v6);
    *(void *)(a1 + 48) = v7;
    *(void *)(a1 + 56) = v6;
  }
  return a1;
}

void *assignWithCopy for SelectableRegion(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  long long v4 = a2 + 6;
  unint64_t v5 = a2[7];
  if (a1[7] >> 60 != 15)
  {
    if (v5 >> 60 != 15)
    {
      uint64_t v7 = *v4;
      sub_25A59FB7C(*v4, v5);
      uint64_t v8 = a1[6];
      unint64_t v9 = a1[7];
      a1[6] = v7;
      a1[7] = v5;
      sub_25A59C134(v8, v9);
      return a1;
    }
    sub_25A5A1AF4((uint64_t)(a1 + 6));
    goto LABEL_6;
  }
  if (v5 >> 60 == 15)
  {
LABEL_6:
    *((_OWORD *)a1 + 3) = *(_OWORD *)v4;
    return a1;
  }
  uint64_t v6 = *v4;
  sub_25A59FB7C(*v4, v5);
  a1[6] = v6;
  a1[7] = v5;
  return a1;
}

uint64_t sub_25A5A1AF4(uint64_t a1)
{
  return a1;
}

__n128 __swift_memcpy64_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for SelectableRegion(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  long long v5 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v5;
  uint64_t v6 = (void *)(a2 + 48);
  unint64_t v7 = *(void *)(a1 + 56);
  if (v7 >> 60 != 15)
  {
    unint64_t v8 = *(void *)(a2 + 56);
    if (v8 >> 60 != 15)
    {
      uint64_t v9 = *(void *)(a1 + 48);
      *(void *)(a1 + 48) = *v6;
      *(void *)(a1 + 56) = v8;
      sub_25A59C134(v9, v7);
      return a1;
    }
    sub_25A5A1AF4(a1 + 48);
  }
  *(_OWORD *)(a1 + 48) = *(_OWORD *)v6;
  return a1;
}

uint64_t getEnumTagSinglePayload for PreviewIncrementalUpdate(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 64)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PreviewIncrementalUpdate(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SelectableRegion()
{
  return &type metadata for SelectableRegion;
}

unsigned char *storeEnumTagSinglePayload for SelectableRegion.Key(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *__n128 result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25A5A1D64);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SelectableRegion.Key()
{
  return &type metadata for SelectableRegion.Key;
}

unint64_t sub_25A5A1DA0()
{
  unint64_t result = qword_26A42A4E0;
  if (!qword_26A42A4E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42A4E0);
  }
  return result;
}

uint64_t sub_25A5A1DF4()
{
  unint64_t v0 = sub_25A6232B0();
  swift_bridgeObjectRelease();
  if (v0 >= 3) {
    return 3;
  }
  else {
    return v0;
  }
}

uint64_t sub_25A5A1E40(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A42A4E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void __swiftcall Error.makeNSError()(NSError *__return_ptr retstr)
{
  uint64_t v3 = v2;
  uint64_t v4 = v1;
  uint64_t v5 = *(void *)(v1 - 8);
  uint64_t v6 = ((uint64_t (*)())MEMORY[0x270FA5388])();
  uint64_t v32 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v31 - v9;
  uint64_t v11 = MEMORY[0x270FA5388](v8);
  uint64_t v13 = (char *)&v31 - v12;
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v31 - v14;
  CGRect v16 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v16((char *)&v31 - v14, v3, v4);
  uint64_t v17 = sub_25A623370();
  if (v17)
  {
    unint64_t v18 = (void *)v17;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v15, v4);
  }
  else
  {
    unint64_t v18 = (void *)swift_allocError();
    (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v19, v15, v4);
  }
  uint64_t v20 = (void *)sub_25A622230();

  id v21 = objc_msgSend(v20, sel_userInfo);
  uint64_t v22 = sub_25A622D00();

  unint64_t v23 = *(void *)(v22 + 16);
  swift_bridgeObjectRelease();
  if (v23 < 2)
  {
    v16(v10, v3, v4);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A42A4F0);
    if (swift_dynamicCast())
    {
      sub_25A5852B0(&v33, (uint64_t)v36);
      uint64_t v26 = self;
      __swift_project_boxed_opaque_existential_1(v36, v37);
      sub_25A623350();
      uint64_t v27 = (void *)sub_25A622DB0();
      swift_bridgeObjectRelease();
      objc_msgSend(v26, sel_uv_errorWithDescription_, v27);
    }
    else
    {
      uint64_t v35 = 0;
      long long v33 = 0u;
      long long v34 = 0u;
      sub_25A570C60((uint64_t)&v33, &qword_26A42A4F8);
      v16(v32, v3, v4);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A42A500);
      if (!swift_dynamicCast())
      {
        uint64_t v35 = 0;
        long long v33 = 0u;
        long long v34 = 0u;
        sub_25A570C60((uint64_t)&v33, &qword_26A42A508);
        uint64_t v29 = self;
        v36[0] = 0;
        v36[1] = 0xE000000000000000;
        sub_25A623380();
        uint64_t v30 = (void *)sub_25A622DB0();
        swift_bridgeObjectRelease();
        objc_msgSend(v29, sel_uv_errorWithDescription_, v30);

        return;
      }
      sub_25A5852B0(&v33, (uint64_t)v36);
      __swift_project_boxed_opaque_existential_1(v36, v37);
      sub_25A622990();
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v36);
    return;
  }
  v16(v13, v3, v4);
  uint64_t v24 = sub_25A623370();
  if (v24)
  {
    uint64_t v25 = (void *)v24;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v13, v4);
  }
  else
  {
    uint64_t v25 = (void *)swift_allocError();
    (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v28, v13, v4);
  }
  sub_25A622230();
}

uint64_t sub_25A5A2350@<X0>(BOOL *a1@<X8>)
{
  return sub_25A56C88C(a1);
}

uint64_t sub_25A5A235C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_25A5A9640();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t ProviderPayload.propertyListValue.getter()
{
  return sub_25A6227A0();
}

unint64_t sub_25A5A23F8()
{
  unint64_t result = qword_26A42A510;
  if (!qword_26A42A510)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42A510);
  }
  return result;
}

uint64_t ProviderPayload.init(propertyListValue:)@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v9 = &type metadata for ProviderPayload.Key;
  unint64_t v10 = sub_25A5A23F8();
  sub_25A622710();
  uint64_t v5 = sub_25A6227C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
  if (!v2)
  {
    uint64_t v7 = v12;
    *a2 = v11;
    a2[1] = v7;
  }
  return result;
}

uint64_t sub_25A5A254C()
{
  return sub_25A6227A0();
}

uint64_t sub_25A5A25BC@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v9 = &type metadata for ProviderPayload.Key;
  unint64_t v10 = sub_25A5A23F8();
  sub_25A622710();
  uint64_t v5 = sub_25A6227C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
  if (!v2)
  {
    uint64_t v7 = v12;
    *a2 = v11;
    a2[1] = v7;
  }
  return result;
}

uint64_t RegistryType.rawValue.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  void *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*RegistryType.rawValue.modify())()
{
  return nullsub_1;
}

PreviewsMessagingOS::RegistryType __swiftcall RegistryType.init(rawValue:)(PreviewsMessagingOS::RegistryType rawValue)
{
  PreviewsMessagingOS::RegistryType *v1 = rawValue;
  return rawValue;
}

uint64_t RegistryType.description.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_25A5A274C(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_25A5B05AC();
  uint64_t v5 = MEMORY[0x263F60648];

  return MEMORY[0x270F55C68](a1, a2, v4, v5);
}

uint64_t sub_25A5A27A8()
{
  return sub_25A622B20();
}

void static RegistryType.preview.getter(void *a1@<X8>)
{
  *a1 = 0x77656976657270;
  a1[1] = 0xE700000000000000;
}

void static RegistryType.test.getter(void *a1@<X8>)
{
  *a1 = 1953719668;
  a1[1] = 0xE400000000000000;
}

uint64_t RegistryID.init(sourceFilePath:registryType:registryIndexInFile:sidecarIdentifier:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void *a6@<X8>)
{
  uint64_t v8 = *a3;
  uint64_t v9 = a3[1];
  *a6 = a1;
  a6[1] = a2;
  a6[2] = v8;
  a6[3] = v9;
  a6[4] = a4;
  uint64_t v10 = type metadata accessor for RegistryID(0);
  return sub_25A55C73C(a5, (uint64_t)a6 + *(int *)(v10 + 28), &qword_26A42A518);
}

uint64_t type metadata accessor for RegistryID(uint64_t a1)
{
  return sub_25A54FD94(a1, (uint64_t *)&unk_26A42A648);
}

unint64_t sub_25A5A28B4(char a1)
{
  unint64_t result = 0xD000000000000013;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x7972747369676572;
      break;
    case 2:
      return result;
    case 3:
      unint64_t result = 0xD000000000000011;
      break;
    default:
      unint64_t result = 0x6946656372756F73;
      break;
  }
  return result;
}

uint64_t sub_25A5A2968(char *a1, char *a2)
{
  return sub_25A5ED8BC(*a1, *a2);
}

uint64_t sub_25A5A2974()
{
  return sub_25A617D58();
}

uint64_t sub_25A5A297C()
{
  return sub_25A54CA9C();
}

uint64_t sub_25A5A2984()
{
  return sub_25A61AD8C();
}

uint64_t sub_25A5A298C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_25A5B0564();
  *a1 = result;
  return result;
}

unint64_t sub_25A5A29C4@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_25A5A28B4(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_25A5A29F0()
{
  return sub_25A5A28B4(*v0);
}

uint64_t RegistryID.propertyListValue.getter()
{
  return sub_25A622780();
}

uint64_t sub_25A5A2A34(uint64_t *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A42A788);
  uint64_t v3 = v2 - 8;
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  uint64_t v6 = &v19[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = &v19[-v7];
  uint64_t v9 = *a1;
  uint64_t v10 = a1[1];
  uint64_t v11 = a1[2];
  uint64_t v12 = a1[3];
  uint64_t v13 = a1[4];
  uint64_t v14 = &v19[*(int *)(v3 + 56) - v7];
  v19[-v7] = 3;
  uint64_t v15 = type metadata accessor for RegistryID(0);
  sub_25A5A3664((uint64_t)a1 + *(int *)(v15 + 28), (uint64_t)v14);
  char v28 = 0;
  uint64_t v26 = v9;
  uint64_t v27 = v10;
  char v25 = 1;
  uint64_t v23 = v11;
  uint64_t v24 = v12;
  char v22 = 2;
  uint64_t v20 = v13;
  char v21 = 0;
  uint64_t v16 = (uint64_t)&v6[*(int *)(v3 + 56)];
  *uint64_t v6 = 3;
  sub_25A5A3664((uint64_t)v14, v16);
  v19[15] = 3;
  sub_25A622310();
  sub_25A5A2F88();
  sub_25A5A2FDC();
  uint64_t v17 = sub_25A622A60();
  sub_25A570C60((uint64_t)v8, &qword_26A42A788);
  sub_25A570C60(v16, &qword_26A42A518);
  return v17;
}

uint64_t sub_25A5A2C24()
{
  return sub_25A5A2A34(*(uint64_t **)(v0 + 16));
}

uint64_t RegistryID.init(propertyListValue:)@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A42A518);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v25 = &type metadata for RegistryID.Key;
  unint64_t v8 = sub_25A5A2F88();
  unint64_t v26 = v8;
  v24[0] = 0;
  sub_25A622710();
  if (v2)
  {
    uint64_t v9 = sub_25A6227C0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(a1, v9);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
    uint64_t v11 = v27;
    uint64_t v10 = v28;
    char v25 = &type metadata for RegistryID.Key;
    unint64_t v26 = v8;
    v24[0] = 1;
    sub_25A5A2FDC();
    sub_25A622760();
    uint64_t v29 = v11;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
    if (v23) {
      uint64_t v12 = v22;
    }
    else {
      uint64_t v12 = 0x77656976657270;
    }
    if (v23) {
      unint64_t v13 = v23;
    }
    else {
      unint64_t v13 = 0xE700000000000000;
    }
    char v25 = &type metadata for RegistryID.Key;
    unint64_t v26 = v8;
    v24[0] = 2;
    sub_25A622710();
    uint64_t v20 = v12;
    unint64_t v21 = v13;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
    uint64_t v14 = v22;
    char v25 = &type metadata for RegistryID.Key;
    unint64_t v26 = v8;
    v24[0] = 3;
    sub_25A622310();
    sub_25A622760();
    uint64_t v16 = sub_25A6227C0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(a1, v16);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
    *a2 = v29;
    a2[1] = v10;
    unint64_t v17 = v21;
    a2[2] = v20;
    a2[3] = v17;
    a2[4] = v14;
    uint64_t v18 = type metadata accessor for RegistryID(0);
    return sub_25A55C73C((uint64_t)v7, (uint64_t)a2 + *(int *)(v18 + 28), &qword_26A42A518);
  }
}

unint64_t sub_25A5A2F88()
{
  unint64_t result = qword_26A42A520;
  if (!qword_26A42A520)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42A520);
  }
  return result;
}

unint64_t sub_25A5A2FDC()
{
  unint64_t result = qword_26A42A528;
  if (!qword_26A42A528)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42A528);
  }
  return result;
}

uint64_t RegistryID.description.getter()
{
  uint64_t v1 = sub_25A622250();
  uint64_t v25 = *(void *)(v1 - 8);
  uint64_t v26 = v1;
  MEMORY[0x270FA5388](v1);
  uint64_t v28 = (char *)&v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A42A530);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_25A6222B0();
  uint64_t v6 = *(void *)(v27 - 8);
  MEMORY[0x270FA5388](v27);
  unint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A42A518);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_25A622310();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for RegistryID(0);
  sub_25A5A3664(v0 + *(int *)(v16 + 28), (uint64_t)v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    sub_25A570C60((uint64_t)v11, &qword_26A42A518);
    uint64_t v30 = 0;
    unint64_t v31 = 0xE000000000000000;
    sub_25A623210();
    swift_bridgeObjectRelease();
    uint64_t v30 = 0x7972747369676552;
    unint64_t v31 = 0xE90000000000002DLL;
    uint64_t v17 = v27;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v5, 1, 1, v27);
    (*(void (**)(char *, void, uint64_t))(v25 + 104))(v28, *MEMORY[0x263F06E50], v26);
    swift_bridgeObjectRetain();
    sub_25A6222A0();
    sub_25A622270();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v17);
    sub_25A622E00();
    swift_bridgeObjectRelease();
    sub_25A622E00();
    uint64_t v29 = *(void *)(v0 + 32);
    sub_25A623350();
    sub_25A622E00();
    swift_bridgeObjectRelease();
    sub_25A622E00();
    swift_bridgeObjectRetain();
    sub_25A622E00();
    swift_bridgeObjectRelease();
    sub_25A622E00();
    return v30;
  }
  else
  {
    unint64_t v23 = v15;
    uint64_t v24 = v13;
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v11, v12);
    uint64_t v30 = 0;
    unint64_t v31 = 0xE000000000000000;
    sub_25A623210();
    swift_bridgeObjectRelease();
    uint64_t v30 = 0x7972747369676552;
    unint64_t v31 = 0xE90000000000002DLL;
    uint64_t v19 = v27;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v5, 1, 1, v27);
    (*(void (**)(char *, void, uint64_t))(v25 + 104))(v28, *MEMORY[0x263F06E50], v26);
    swift_bridgeObjectRetain();
    sub_25A6222A0();
    sub_25A622270();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v19);
    sub_25A622E00();
    swift_bridgeObjectRelease();
    sub_25A622E00();
    sub_25A5A38F0(&qword_26A42A538, MEMORY[0x263F07508]);
    uint64_t v20 = v23;
    sub_25A623350();
    sub_25A622E00();
    swift_bridgeObjectRelease();
    sub_25A622E00();
    uint64_t v29 = *(void *)(v0 + 32);
    sub_25A623350();
    sub_25A622E00();
    swift_bridgeObjectRelease();
    sub_25A622E00();
    swift_bridgeObjectRetain();
    sub_25A622E00();
    swift_bridgeObjectRelease();
    sub_25A622E00();
    uint64_t v18 = v30;
    (*(void (**)(char *, uint64_t))(v24 + 8))(v20, v12);
  }
  return v18;
}

uint64_t sub_25A5A3664(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A42A518);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t RegistryID.hash(into:)()
{
  uint64_t v1 = sub_25A622310();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A42A518);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  sub_25A622DF0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_25A622DF0();
  swift_bridgeObjectRelease();
  sub_25A623460();
  uint64_t v8 = type metadata accessor for RegistryID(0);
  sub_25A5A3664(v0 + *(int *)(v8 + 28), (uint64_t)v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v1) == 1) {
    return sub_25A623470();
  }
  (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v7, v1);
  sub_25A623470();
  sub_25A5A38F0((unint64_t *)&qword_26A42A540, MEMORY[0x263F07508]);
  sub_25A622D80();
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
}

uint64_t sub_25A5A38F0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t RegistryID.hashValue.getter()
{
  return sub_25A6234A0();
}

uint64_t sub_25A5A397C()
{
  return sub_25A622780();
}

uint64_t sub_25A5A39B8@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return RegistryID.init(propertyListValue:)(a1, a2);
}

uint64_t sub_25A5A39D4()
{
  return sub_25A6234A0();
}

uint64_t sub_25A5A3A18()
{
  return sub_25A6234A0();
}

uint64_t RuntimeRegistryLocation.file.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  uint64_t v3 = v1[2];
  uint64_t v4 = v1[3];
  *a1 = *v1;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

__n128 RuntimeRegistryLocation.file.setter(__n128 *a1)
{
  __n128 v5 = *a1;
  unint64_t v2 = a1[1].n128_u64[0];
  unint64_t v3 = a1[1].n128_u64[1];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __n128 result = v5;
  __n128 *v1 = v5;
  v1[1].n128_u64[0] = v2;
  v1[1].n128_u64[1] = v3;
  return result;
}

uint64_t (*RuntimeRegistryLocation.file.modify())()
{
  return nullsub_1;
}

uint64_t RuntimeRegistryLocation.line.getter()
{
  return *(void *)(v0 + 32);
}

uint64_t RuntimeRegistryLocation.line.setter(uint64_t result)
{
  *(void *)(v1 + 32) = result;
  return result;
}

uint64_t (*RuntimeRegistryLocation.line.modify())()
{
  return nullsub_1;
}

void __swiftcall RuntimeRegistryLocation.init(file:line:)(PreviewsMessagingOS::RuntimeRegistryLocation *__return_ptr retstr, PreviewsMessagingOS::FileID file, Swift::Int line)
{
  uint64_t v3 = *(void *)(file.moduleName._countAndFlagsBits + 16);
  uint64_t v4 = *(void **)(file.moduleName._countAndFlagsBits + 24);
  retstr->file.moduleName = *(Swift::String *)file.moduleName._countAndFlagsBits;
  retstr->file.fileName._uint64_t countAndFlagsBits = v3;
  retstr->file.fileName._object = v4;
  retstr->line = (Swift::Int)file.moduleName._object;
}

uint64_t sub_25A5A3B5C(char a1)
{
  if (a1) {
    return 1701734764;
  }
  else {
    return 1701603686;
  }
}

uint64_t sub_25A5A3B7C(char *a1, char *a2)
{
  return sub_25A5E95CC(*a1, *a2);
}

uint64_t sub_25A5A3B88()
{
  return sub_25A617E54();
}

uint64_t sub_25A5A3B90()
{
  return sub_25A54A3EC();
}

uint64_t sub_25A5A3B98()
{
  return sub_25A61D69C();
}

uint64_t sub_25A5A3BA0@<X0>(char *a1@<X8>)
{
  return sub_25A56B748(a1);
}

uint64_t sub_25A5A3BAC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_25A5A3B5C(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_25A5A3BD8()
{
  return sub_25A5A3B5C(*v0);
}

uint64_t RuntimeRegistryLocation.propertyListValue.getter()
{
  return sub_25A622780();
}

uint64_t sub_25A5A3C30()
{
  return sub_25A622A80();
}

uint64_t RuntimeRegistryLocation.init(propertyListValue:)@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v15 = &type metadata for RuntimeRegistryLocation.Key;
  unint64_t v5 = sub_25A5A9D10();
  unint64_t v16 = v5;
  v14[0] = 0;
  sub_25A5A9D64();
  sub_25A622710();
  if (v2)
  {
    uint64_t v6 = sub_25A6227C0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
    uint64_t v8 = v17;
    uint64_t v7 = v18;
    uint64_t v10 = v19;
    uint64_t v9 = v20;
    uint64_t v15 = &type metadata for RuntimeRegistryLocation.Key;
    unint64_t v16 = v5;
    v14[0] = 1;
    sub_25A622710();
    uint64_t v12 = sub_25A6227C0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(a1, v12);
    uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
    uint64_t v13 = v21;
    *a2 = v8;
    a2[1] = v7;
    a2[2] = v10;
    a2[3] = v9;
    a2[4] = v13;
  }
  return result;
}

uint64_t sub_25A5A3E80(char a1)
{
  if (a1) {
    return 0x7972747369676572;
  }
  else {
    return 0x72656469766F7270;
  }
}

uint64_t sub_25A5A3EBC()
{
  return sub_25A622780();
}

uint64_t sub_25A5A3F0C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return RuntimeRegistryLocation.init(propertyListValue:)(a1, a2);
}

uint64_t sub_25A5A3F24(char *a1, char *a2)
{
  return sub_25A5E9C58(*a1, *a2);
}

uint64_t sub_25A5A3F30()
{
  return sub_25A617EBC();
}

uint64_t sub_25A5A3F38()
{
  return sub_25A54A7E8();
}

uint64_t sub_25A5A3F40()
{
  return sub_25A61D1A8();
}

uint64_t sub_25A5A3F48@<X0>(char *a1@<X8>)
{
  return sub_25A56B748(a1);
}

uint64_t sub_25A5A3F54@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_25A5A3E80(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_25A5A3F80(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_25A5B04BC();
  uint64_t v5 = MEMORY[0x263F60648];

  return MEMORY[0x270F55C68](a1, a2, v4, v5);
}

uint64_t sub_25A5A3FDC()
{
  return sub_25A622B20();
}

uint64_t sub_25A5A4044(char a1)
{
  return *(void *)&aDiscrimiprovid_0[8 * a1];
}

uint64_t sub_25A5A4064(char *a1, char *a2)
{
  return sub_25A5E9BD0(*a1, *a2);
}

uint64_t sub_25A5A4070()
{
  return sub_25A617F4C();
}

uint64_t sub_25A5A4078()
{
  return sub_25A54A794();
}

uint64_t sub_25A5A4080()
{
  return sub_25A61D234();
}

uint64_t sub_25A5A4088@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_25A575CAC();
  *a1 = result;
  return result;
}

uint64_t sub_25A5A40C0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_25A5A4044(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_25A5A40EC()
{
  return sub_25A5A4044(*v0);
}

uint64_t PreviewSpecification.Value.propertyListValue.getter()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A42A558);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for RegistryID(0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for PreviewSpecification.Value(0);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (uint64_t *)((char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v24 = v0;
  unint64_t v11 = sub_25A5A9DE0();
  sub_25A5A9E34();
  sub_25A6227A0();
  sub_25A5A9E88(v0, (uint64_t)v10, type metadata accessor for PreviewSpecification.Value);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v12 = (uint64_t *)((char *)v10 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A42A570) + 48));
    uint64_t v13 = *v12;
    uint64_t v14 = v12[1];
    uint64_t v15 = (ValueMetadata *)v12[3];
    uint64_t v22 = v12[2];
    uint64_t v23 = v13;
    unint64_t v21 = v12[4];
    sub_25A5A9F98((uint64_t)v10, (uint64_t)v7, type metadata accessor for RegistryID);
    sub_25A5A9E88((uint64_t)v7, (uint64_t)v3, type metadata accessor for RegistryID);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(v3, 0, 1, v4);
    uint64_t v30 = &type metadata for PreviewSpecification.Value.Key;
    unint64_t v31 = v11;
    LOBYTE(v29[0]) = 3;
    sub_25A5A38F0(&qword_26A42A578, (void (*)(uint64_t))type metadata accessor for RegistryID);
    sub_25A622700();
    sub_25A570C60((uint64_t)v3, &qword_26A42A558);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
    v29[0] = v23;
    v29[1] = v14;
    v29[2] = v22;
    uint64_t v30 = v15;
    unint64_t v31 = v21;
    uint64_t v27 = &type metadata for PreviewSpecification.Value.Key;
    unint64_t v28 = v11;
    LOBYTE(v25) = 4;
    sub_25A5A9EF0();
    sub_25A622700();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_25A5AA220((uint64_t)v7, type metadata accessor for RegistryID);
    unint64_t v16 = &v25;
  }
  else
  {
    uint64_t v17 = v10[1];
    uint64_t v18 = v10[2];
    uint64_t v25 = *v10;
    uint64_t v26 = v17;
    uint64_t v30 = &type metadata for PreviewSpecification.Value.Key;
    unint64_t v31 = v11;
    LOBYTE(v29[0]) = 1;
    sub_25A5A9F44();
    sub_25A622700();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
    uint64_t v25 = v18;
    LOBYTE(v26) = 0;
    uint64_t v30 = &type metadata for PreviewSpecification.Value.Key;
    unint64_t v31 = v11;
    LOBYTE(v29[0]) = 2;
    sub_25A622700();
    unint64_t v16 = v29;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
}

uint64_t sub_25A5A44B0(unsigned char *a1, BOOL *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for PreviewSpecification.Value(0);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  *a1 = 0;
  sub_25A5A9E88(a3, (uint64_t)v8, type metadata accessor for PreviewSpecification.Value);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v10 = type metadata accessor for PreviewSpecification.Value;
  if (EnumCaseMultiPayload == 1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A42A570);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v10 = type metadata accessor for RegistryID;
  }
  uint64_t result = sub_25A5AA220((uint64_t)v8, v10);
  *a2 = EnumCaseMultiPayload == 1;
  return result;
}

uint64_t PreviewSpecification.Value.init(propertyListValue:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = type metadata accessor for PreviewSpecification.Value(0);
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (uint64_t *)((char *)&v20 - v9);
  uint64_t v24 = &type metadata for PreviewSpecification.Value.Key;
  unint64_t v11 = sub_25A5A9DE0();
  unint64_t v25 = v11;
  v23[0] = 0;
  sub_25A5A9E34();
  sub_25A622710();
  if (v2)
  {
    uint64_t v12 = sub_25A6227C0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(a1, v12);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
    uint64_t v24 = &type metadata for PreviewSpecification.Value.Key;
    unint64_t v25 = v11;
    if (v21)
    {
      v23[0] = 3;
      type metadata accessor for RegistryID(0);
      sub_25A5A38F0(&qword_26A42A578, (void (*)(uint64_t))type metadata accessor for RegistryID);
      sub_25A622710();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A42A570);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
      uint64_t v24 = &type metadata for PreviewSpecification.Value.Key;
      unint64_t v25 = v11;
      v23[0] = 4;
      sub_25A5A9EF0();
      sub_25A622710();
      uint64_t v16 = sub_25A6227C0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(a1, v16);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
      swift_storeEnumTagMultiPayload();
      uint64_t v17 = (uint64_t)v8;
    }
    else
    {
      v23[0] = 1;
      sub_25A5A9F44();
      sub_25A622710();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
      uint64_t v15 = v21;
      uint64_t v14 = v22;
      uint64_t v24 = &type metadata for PreviewSpecification.Value.Key;
      unint64_t v25 = v11;
      v23[0] = 2;
      sub_25A622710();
      uint64_t v18 = sub_25A6227C0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(a1, v18);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
      uint64_t v19 = v26;
      *uint64_t v10 = v15;
      v10[1] = v14;
      v10[2] = v19;
      swift_storeEnumTagMultiPayload();
      uint64_t v17 = (uint64_t)v10;
    }
    return sub_25A5A9F98(v17, a2, type metadata accessor for PreviewSpecification.Value);
  }
}

uint64_t sub_25A5A49E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return PreviewSpecification.Value.init(propertyListValue:)(a1, a2);
}

uint64_t PreviewSpecification.value.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_25A5A9E88(v1, a1, type metadata accessor for PreviewSpecification.Value);
}

uint64_t PreviewSpecification.value.setter(uint64_t a1)
{
  return sub_25A5AA020(a1, v1, type metadata accessor for PreviewSpecification.Value);
}

uint64_t (*PreviewSpecification.value.modify())()
{
  return nullsub_1;
}

uint64_t PreviewSpecification.init(propertyListValue:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_25A6227C0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for PreviewSpecification.Value(0);
  MEMORY[0x270FA5388](v9 - 8);
  unint64_t v11 = (char *)v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a1, v5);
  PreviewSpecification.Value.init(propertyListValue:)((uint64_t)v8, (uint64_t)v11);
  if (v2) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
  }
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
  return sub_25A5A9F98((uint64_t)v11, a2, type metadata accessor for PreviewSpecification.Value);
}

uint64_t static PreviewSpecification.providerPreview(provider:indexInProvider:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v3 = a1[1];
  *a3 = *a1;
  a3[1] = v3;
  a3[2] = a2;
  type metadata accessor for PreviewSpecification.Value(0);
  swift_storeEnumTagMultiPayload();

  return swift_bridgeObjectRetain();
}

uint64_t static PreviewSpecification.registryPreview(stableID:location:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = *a2;
  uint64_t v5 = a2[1];
  uint64_t v8 = a2[2];
  uint64_t v7 = a2[3];
  uint64_t v9 = a2[4];
  uint64_t v10 = (void *)(a3 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A42A570) + 48));
  sub_25A5A9E88(a1, a3, type metadata accessor for RegistryID);
  *uint64_t v10 = v6;
  v10[1] = v5;
  v10[2] = v8;
  v10[3] = v7;
  v10[4] = v9;
  type metadata accessor for PreviewSpecification.Value(0);
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t PreviewSpecification.description.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for RegistryID(0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for PreviewSpecification.Value(0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (void *)((char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_25A5A9E88(v1, (uint64_t)v7, type metadata accessor for PreviewSpecification.Value);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A42A570);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_25A5A9F98((uint64_t)v7, (uint64_t)v4, type metadata accessor for RegistryID);
    uint64_t v8 = RegistryID.description.getter();
    sub_25A5AA220((uint64_t)v4, type metadata accessor for RegistryID);
  }
  else
  {
    uint64_t v9 = *v7;
    uint64_t v10 = v7[1];
    uint64_t v11 = v7[2];
    uint64_t v14 = v9;
    uint64_t v15 = v10;
    sub_25A622E00();
    v13[1] = v11;
    sub_25A623350();
    sub_25A622E00();
    swift_bridgeObjectRelease();
    return v14;
  }
  return v8;
}

uint64_t sub_25A5A4EE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_25A6227C0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for PreviewSpecification.Value(0);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a1, v5);
  PreviewSpecification.Value.init(propertyListValue:)((uint64_t)v8, (uint64_t)v11);
  if (v2) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
  }
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
  return sub_25A5A9F98((uint64_t)v11, a2, type metadata accessor for PreviewSpecification.Value);
}

uint64_t PreviewPayload.previewSpecification.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_25A5A9E88(v1, a1, type metadata accessor for PreviewSpecification);
}

uint64_t PreviewPayload.previewSpecification.setter(uint64_t a1)
{
  return sub_25A5AA020(a1, v1, type metadata accessor for PreviewSpecification);
}

uint64_t (*PreviewPayload.previewSpecification.modify())()
{
  return nullsub_1;
}

uint64_t PreviewPayload.renderEffects.getter()
{
  type metadata accessor for PreviewPayload(0);

  return swift_bridgeObjectRetain();
}

uint64_t PreviewPayload.renderEffects.setter(uint64_t a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for PreviewPayload(0) + 20);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + v3) = a1;
  return result;
}

uint64_t (*PreviewPayload.renderEffects.modify())()
{
  return nullsub_1;
}

uint64_t PreviewPayload.init(previewSpecification:renderEffects:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_25A5A9F98(a1, a3, type metadata accessor for PreviewSpecification);
  uint64_t result = type metadata accessor for PreviewPayload(0);
  *(void *)(a3 + *(int *)(result + 20)) = a2;
  return result;
}

uint64_t sub_25A5A520C(char a1)
{
  if (a1) {
    return 0x66457265646E6572;
  }
  else {
    return 0xD000000000000014;
  }
}

uint64_t sub_25A5A5254(char *a1, char *a2)
{
  return sub_25A5EC9B8(*a1, *a2);
}

uint64_t sub_25A5A5260()
{
  return sub_25A617FB8();
}

uint64_t sub_25A5A5268()
{
  return sub_25A54C18C();
}

uint64_t sub_25A5A5270()
{
  return sub_25A61B88C();
}

uint64_t sub_25A5A5278@<X0>(char *a1@<X8>)
{
  return sub_25A56B748(a1);
}

uint64_t sub_25A5A5284@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_25A5A520C(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_25A5A52B0()
{
  return sub_25A5A520C(*v0);
}

uint64_t PreviewPayload.propertyListValue.getter()
{
  return sub_25A622780();
}

uint64_t sub_25A5A52F4(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A42A768);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A42A770);
  uint64_t v6 = v5 - 8;
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v18 - v10;
  uint64_t v12 = (char *)&v18 + *(int *)(v6 + 56) - v10;
  *((unsigned char *)&v18 - v10) = 0;
  sub_25A5A9E88(a1, (uint64_t)v12, type metadata accessor for PreviewSpecification);
  uint64_t v13 = *(void *)(a1 + *(int *)(type metadata accessor for PreviewPayload(0) + 20));
  uint64_t v14 = (uint64_t)&v9[*(int *)(v6 + 56)];
  *uint64_t v9 = 0;
  sub_25A5A9E88((uint64_t)v12, v14, type metadata accessor for PreviewSpecification);
  sub_25A5A9F98(v14, (uint64_t)v4, type metadata accessor for PreviewSpecification);
  uint64_t v15 = type metadata accessor for PreviewSpecification(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v4, 0, 1, v15);
  char v20 = 0;
  char v19 = 1;
  uint64_t v18 = v13;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A42A5A8);
  sub_25A5AA0B0();
  sub_25A5A38F0(&qword_26A42A598, (void (*)(uint64_t))type metadata accessor for PreviewSpecification);
  sub_25A5AA158();
  uint64_t v16 = sub_25A622A80();
  sub_25A570C60((uint64_t)v4, &qword_26A42A768);
  sub_25A570C60((uint64_t)v11, &qword_26A42A770);
  return v16;
}

void PreviewPayload.init(propertyListValue:)(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v17 = a2;
  uint64_t v4 = sub_25A6227C0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for PreviewSpecification(0);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v20 = &type metadata for PreviewPayload.Key;
  unint64_t v11 = sub_25A5AA0B0();
  unint64_t v21 = v11;
  LOBYTE(v18) = 0;
  sub_25A5A38F0(&qword_26A42A598, (void (*)(uint64_t))type metadata accessor for PreviewSpecification);
  sub_25A622710();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v18);
  if (v2)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
    sub_25A5AA104();
    sub_25A622B00();
    uint64_t v12 = v19;
    uint64_t v13 = v20;
    uint64_t v14 = v17;
    *uint64_t v17 = v18;
    *((void *)v14 + 2) = v12;
    type metadata accessor for PreviewSpecification.Value(0);
    swift_storeEnumTagMultiPayload();

    *(void *)((char *)v14 + *(int *)(type metadata accessor for PreviewPayload(0) + 20)) = v13;
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  }
  else
  {
    char v20 = &type metadata for PreviewPayload.Key;
    unint64_t v21 = v11;
    LOBYTE(v18) = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A42A5A8);
    sub_25A5AA158();
    sub_25A622710();
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v18);
    uint64_t v15 = v22;
    uint64_t v16 = v17;
    sub_25A5A9F98((uint64_t)v10, (uint64_t)v17, type metadata accessor for PreviewSpecification);
    *(void *)((char *)v16 + *(int *)(type metadata accessor for PreviewPayload(0) + 20)) = v15;
  }
}

uint64_t PreviewPayload.init(providerPreviewPayload:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 24);
  *(_OWORD *)a2 = *(_OWORD *)a1;
  *(void *)(a2 + 16) = v3;
  type metadata accessor for PreviewSpecification.Value(0);
  swift_storeEnumTagMultiPayload();
  uint64_t result = type metadata accessor for PreviewPayload(0);
  *(void *)(a2 + *(int *)(result + 20)) = v4;
  return result;
}

uint64_t sub_25A5A5904()
{
  return sub_25A622780();
}

void sub_25A5A5940(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
}

uint64_t ProviderPreviewPayload.providerPayload.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t ProviderPreviewPayload.previewID.getter()
{
  return *(void *)(v0 + 16);
}

uint64_t ProviderPreviewPayload.renderEffects.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ProviderPreviewPayload.providerName.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

PreviewsMessagingOS::ProviderPreviewPayload __swiftcall ProviderPreviewPayload.init(providerPayload:previewID:renderEffects:)(PreviewsMessagingOS::ProviderPayload providerPayload, Swift::Int previewID, Swift::OpaquePointer renderEffects)
{
  uint64_t v4 = *(void *)(providerPayload.providerName._countAndFlagsBits + 8);
  *uint64_t v3 = *(void *)providerPayload.providerName._countAndFlagsBits;
  v3[1] = v4;
  v3[2] = providerPayload.providerName._object;
  v3[3] = previewID;
  result.providerPayload = providerPayload;
  result.renderEffects = renderEffects;
  result.previewID = previewID;
  return result;
}

uint64_t sub_25A5A59B4(char a1)
{
  return qword_25A62A8B0[a1];
}

uint64_t sub_25A5A59D4(char *a1, char *a2)
{
  return sub_25A5E98B8(*a1, *a2);
}

uint64_t sub_25A5A59E0()
{
  return sub_25A61804C();
}

uint64_t sub_25A5A59E8()
{
  return sub_25A54A590();
}

uint64_t sub_25A5A59F0()
{
  return sub_25A61D4A8();
}

uint64_t sub_25A5A59F8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_25A570B50();
  *a1 = result;
  return result;
}

uint64_t sub_25A5A5A30@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_25A5A59B4(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_25A5A5A5C()
{
  return sub_25A5A59B4(*v0);
}

uint64_t ProviderPreviewPayload.propertyListValue.getter()
{
  return sub_25A5A5F14();
}

uint64_t sub_25A5A5A7C()
{
  return sub_25A622A70();
}

uint64_t ProviderPreviewPayload.init(propertyListValue:)@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v15 = &type metadata for ProviderPreviewPayload.Key;
  unint64_t v5 = sub_25A5AA28C();
  unint64_t v16 = v5;
  v14[0] = 0;
  sub_25A5A9F44();
  sub_25A622710();
  if (v2)
  {
    uint64_t v6 = sub_25A6227C0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
    uint64_t v8 = v17;
    uint64_t v7 = v18;
    uint64_t v15 = &type metadata for ProviderPreviewPayload.Key;
    unint64_t v16 = v5;
    v14[0] = 1;
    sub_25A622710();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
    uint64_t v15 = &type metadata for ProviderPreviewPayload.Key;
    unint64_t v16 = v5;
    v14[0] = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A42A5A8);
    sub_25A5AA158();
    sub_25A622760();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
    if (v12) {
      uint64_t v10 = v12;
    }
    else {
      uint64_t v10 = MEMORY[0x263F8EE78];
    }
    uint64_t v11 = sub_25A6227C0();
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(a1, v11);
    *a2 = v8;
    a2[1] = v7;
    a2[2] = v13;
    a2[3] = v10;
  }
  return result;
}

uint64_t sub_25A5A5D40()
{
  return sub_25A5A62F0();
}

uint64_t sub_25A5A5D58@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return ProviderPreviewPayload.init(propertyListValue:)(a1, a2);
}

uint64_t FileID.moduleName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  void *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*FileID.moduleName.modify())()
{
  return nullsub_1;
}

uint64_t FileID.fileName.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FileID.fileName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t (*FileID.fileName.modify())()
{
  return nullsub_1;
}

PreviewsMessagingOS::FileID __swiftcall FileID.init(moduleName:fileName:)(Swift::String moduleName, Swift::String fileName)
{
  Swift::String *v2 = moduleName;
  v2[1] = fileName;
  result.fileName = fileName;
  result.moduleName = moduleName;
  return result;
}

uint64_t sub_25A5A5E5C(char a1)
{
  if (a1) {
    return 0x656D614E656C6966;
  }
  else {
    return 0x614E656C75646F6DLL;
  }
}

uint64_t sub_25A5A5E98(char *a1, char *a2)
{
  return sub_25A5E7C9C(*a1, *a2);
}

uint64_t sub_25A5A5EA4()
{
  return sub_25A6180B8();
}

uint64_t sub_25A5A5EAC()
{
  return sub_25A549624();
}

uint64_t sub_25A5A5EB4()
{
  return sub_25A61E7D4();
}

uint64_t sub_25A5A5EBC@<X0>(char *a1@<X8>)
{
  return sub_25A56B748(a1);
}

uint64_t sub_25A5A5EC8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_25A5A5E5C(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_25A5A5EF4()
{
  return sub_25A5A5E5C(*v0);
}

uint64_t FileID.propertyListValue.getter()
{
  return sub_25A5A5F14();
}

uint64_t sub_25A5A5F14()
{
  return sub_25A622780();
}

uint64_t sub_25A5A5F48()
{
  return sub_25A622A80();
}

uint64_t FileID.init(propertyListValue:)@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v14 = &type metadata for FileID.Key;
  unint64_t v5 = sub_25A5AA2EC();
  unint64_t v15 = v5;
  v13[0] = 0;
  sub_25A622710();
  if (v2)
  {
    uint64_t v6 = sub_25A6227C0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
    uint64_t v8 = v16;
    uint64_t v7 = v17;
    uint64_t v14 = &type metadata for FileID.Key;
    unint64_t v15 = v5;
    v13[0] = 1;
    sub_25A622710();
    uint64_t v10 = sub_25A6227C0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(a1, v10);
    uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
    *a2 = v8;
    a2[1] = v7;
    a2[2] = v11;
    a2[3] = v12;
  }
  return result;
}

uint64_t FileID.description.getter()
{
  uint64_t v2 = *v0;
  swift_bridgeObjectRetain();
  sub_25A622E00();
  swift_bridgeObjectRetain();
  sub_25A622E00();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t FileID.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_25A622DF0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_25A622DF0();

  return swift_bridgeObjectRelease();
}

uint64_t FileID.hashValue.getter()
{
  return sub_25A6234A0();
}

uint64_t sub_25A5A62D8()
{
  return sub_25A5A62F0();
}

uint64_t sub_25A5A62F0()
{
  return sub_25A622780();
}

uint64_t sub_25A5A6328@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return FileID.init(propertyListValue:)(a1, a2);
}

uint64_t sub_25A5A6340()
{
  return sub_25A6234A0();
}

uint64_t sub_25A5A63C8()
{
  swift_bridgeObjectRetain();
  sub_25A622DF0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_25A622DF0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25A5A644C()
{
  return sub_25A6234A0();
}

uint64_t RegistryPayload.stableID.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_25A5A9E88(v1, a1, type metadata accessor for RegistryID);
}

uint64_t RegistryPayload.stableID.setter(uint64_t a1)
{
  return sub_25A5AA020(a1, v1, type metadata accessor for RegistryID);
}

uint64_t (*RegistryPayload.stableID.modify())()
{
  return nullsub_1;
}

uint64_t RegistryPayload.location.getter@<X0>(void *a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for RegistryPayload(0) + 20));
  uint64_t v5 = *v3;
  uint64_t v4 = v3[1];
  uint64_t v6 = v3[2];
  uint64_t v7 = v3[3];
  uint64_t v8 = v3[4];
  *a1 = v5;
  a1[1] = v4;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

__n128 RegistryPayload.location.setter(long long *a1)
{
  __n128 v5 = (__n128)a1[1];
  long long v6 = *a1;
  uint64_t v2 = *((void *)a1 + 4);
  uint64_t v3 = v1 + *(int *)(type metadata accessor for RegistryPayload(0) + 20);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __n128 result = v5;
  *(_OWORD *)uint64_t v3 = v6;
  *(__n128 *)(v3 + 16) = v5;
  *(void *)(v3 + 32) = v2;
  return result;
}

uint64_t (*RegistryPayload.location.modify())()
{
  return nullsub_1;
}

__n128 RegistryPayload.init(stableID:location:)@<Q0>(uint64_t a1@<X0>, long long *a2@<X1>, uint64_t a3@<X8>)
{
  __n128 v7 = (__n128)a2[1];
  long long v8 = *a2;
  uint64_t v4 = *((void *)a2 + 4);
  sub_25A5A9F98(a1, a3, type metadata accessor for RegistryID);
  uint64_t v5 = a3 + *(int *)(type metadata accessor for RegistryPayload(0) + 20);
  __n128 result = v7;
  *(_OWORD *)uint64_t v5 = v8;
  *(__n128 *)(v5 + 16) = v7;
  *(void *)(v5 + 32) = v4;
  return result;
}

uint64_t RegistryPayload.registryType.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 24);
  *a1 = *(void *)(v1 + 16);
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t sub_25A5A66F4(char a1)
{
  if (a1) {
    return 0x6E6F697461636F6CLL;
  }
  else {
    return 0x4449656C62617473;
  }
}

uint64_t sub_25A5A6724(char *a1, char *a2)
{
  return sub_25A5EBBF8(*a1, *a2);
}

uint64_t sub_25A5A6730()
{
  return sub_25A618140();
}

uint64_t sub_25A5A6738()
{
  return sub_25A54BA10();
}

uint64_t sub_25A5A6740()
{
  return sub_25A61C1C8();
}

uint64_t sub_25A5A6748@<X0>(char *a1@<X8>)
{
  return sub_25A56B748(a1);
}

uint64_t sub_25A5A6754@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_25A5A66F4(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_25A5A6780()
{
  return sub_25A5A66F4(*v0);
}

uint64_t RegistryPayload.propertyListValue.getter()
{
  return sub_25A622780();
}

uint64_t sub_25A5A67C4(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A42A558);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A42A760);
  uint64_t v6 = v5 - 8;
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v20 - v10;
  uint64_t v12 = (char *)&v20 + *(int *)(v6 + 56) - v10;
  *((unsigned char *)&v20 - v10) = 0;
  sub_25A5A9E88(a1, (uint64_t)v12, type metadata accessor for RegistryID);
  uint64_t v13 = a1 + *(int *)(type metadata accessor for RegistryPayload(0) + 20);
  long long v14 = *(_OWORD *)v13;
  long long v20 = *(_OWORD *)(v13 + 16);
  long long v21 = v14;
  uint64_t v15 = *(void *)(v13 + 32);
  uint64_t v16 = (uint64_t)&v9[*(int *)(v6 + 56)];
  *uint64_t v9 = 0;
  sub_25A5A9E88((uint64_t)v12, v16, type metadata accessor for RegistryID);
  sub_25A5A9F98(v16, (uint64_t)v4, type metadata accessor for RegistryID);
  uint64_t v17 = type metadata accessor for RegistryID(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v4, 0, 1, v17);
  char v26 = 0;
  char v25 = 1;
  long long v22 = v21;
  long long v23 = v20;
  uint64_t v24 = v15;
  sub_25A5AA368();
  sub_25A5A38F0(&qword_26A42A578, (void (*)(uint64_t))type metadata accessor for RegistryID);
  sub_25A5A9EF0();
  uint64_t v18 = sub_25A622A80();
  sub_25A570C60((uint64_t)v4, &qword_26A42A558);
  sub_25A570C60((uint64_t)v11, &qword_26A42A760);
  return v18;
}

uint64_t RegistryPayload.init(propertyListValue:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = type metadata accessor for RegistryID(0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  *((void *)&v21 + 1) = &type metadata for RegistryPayload.Key;
  unint64_t v8 = sub_25A5AA368();
  unint64_t v22 = v8;
  LOBYTE(v20) = 0;
  sub_25A5A38F0(&qword_26A42A578, (void (*)(uint64_t))type metadata accessor for RegistryID);
  sub_25A622710();
  if (v2)
  {
    uint64_t v9 = sub_25A6227C0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(a1, v9);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v20);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v20);
    uint64_t v18 = &type metadata for RegistryPayload.Key;
    unint64_t v19 = v8;
    v17[0] = 1;
    sub_25A5A9EF0();
    sub_25A622710();
    uint64_t v11 = sub_25A6227C0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(a1, v11);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
    long long v15 = v21;
    long long v16 = v20;
    unint64_t v12 = v22;
    sub_25A5A9F98((uint64_t)v7, a2, type metadata accessor for RegistryID);
    uint64_t result = type metadata accessor for RegistryPayload(0);
    uint64_t v13 = a2 + *(int *)(result + 20);
    long long v14 = v15;
    *(_OWORD *)uint64_t v13 = v16;
    *(_OWORD *)(v13 + 16) = v14;
    *(void *)(v13 + 32) = v12;
  }
  return result;
}

uint64_t sub_25A5A6CC8()
{
  return sub_25A622780();
}

uint64_t sub_25A5A6D04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return RegistryPayload.init(propertyListValue:)(a1, a2);
}

uint64_t MainPreviewPayload.renderEffects.getter()
{
  return swift_bridgeObjectRetain();
}

PreviewsMessagingOS::MainPreviewPayload __swiftcall MainPreviewPayload.init(renderEffects:)(PreviewsMessagingOS::MainPreviewPayload renderEffects)
{
  v1->renderEffects._rawValue = renderEffects.renderEffects._rawValue;
  return renderEffects;
}

uint64_t sub_25A5A6D2C(char a1)
{
  if (a1) {
    return 0xD000000000000014;
  }
  else {
    return 0x66457265646E6572;
  }
}

uint64_t sub_25A5A6D74(char *a1, char *a2)
{
  return sub_25A5EA7FC(*a1, *a2);
}

uint64_t sub_25A5A6D80()
{
  return sub_25A6181B8();
}

uint64_t sub_25A5A6D88()
{
  return sub_25A54AF08();
}

uint64_t sub_25A5A6D90()
{
  return sub_25A61CAA8();
}

uint64_t sub_25A5A6D98@<X0>(char *a1@<X8>)
{
  return sub_25A56B748(a1);
}

uint64_t sub_25A5A6DA4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_25A5A6D2C(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_25A5A6DD0()
{
  return sub_25A5A6D2C(*v0);
}

uint64_t MainPreviewPayload.propertyListValue.getter()
{
  return sub_25A622780();
}

uint64_t sub_25A5A6E18()
{
  return sub_25A622A80();
}

uint64_t MainPreviewPayload.init(propertyListValue:)@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v10 = &type metadata for MainPreviewPayload.Key;
  unint64_t v11 = sub_25A5AA3C4();
  v9[0] = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A42A5A8);
  sub_25A5AA158();
  sub_25A622760();
  if (v2)
  {
    uint64_t v5 = sub_25A6227C0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
    if (v12) {
      uint64_t v7 = v12;
    }
    else {
      uint64_t v7 = MEMORY[0x263F8EE78];
    }
    uint64_t v8 = sub_25A6227C0();
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(a1, v8);
    *a2 = v7;
  }
  return result;
}

uint64_t sub_25A5A6FD0(char a1)
{
  return *(void *)&aMain_4[8 * a1];
}

uint64_t sub_25A5A6FF0()
{
  return sub_25A622780();
}

uint64_t sub_25A5A7030@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return MainPreviewPayload.init(propertyListValue:)(a1, a2);
}

uint64_t sub_25A5A7048(char *a1, char *a2)
{
  return sub_25A5EC4F4(*a1, *a2);
}

uint64_t sub_25A5A7054()
{
  return sub_25A61824C();
}

uint64_t sub_25A5A705C()
{
  return sub_25A54BEA4();
}

uint64_t sub_25A5A7064()
{
  return sub_25A61BC10();
}

uint64_t sub_25A5A706C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_25A570B50();
  *a1 = result;
  return result;
}

uint64_t sub_25A5A70A4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_25A5A6FD0(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_25A5A70D0(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_25A5B0510();
  uint64_t v5 = MEMORY[0x263F60648];

  return MEMORY[0x270F55C68](a1, a2, v4, v5);
}

uint64_t sub_25A5A712C()
{
  return sub_25A622B20();
}

uint64_t sub_25A5A7194(char a1)
{
  if (!a1) {
    return 0x696D697263736964;
  }
  if (a1 == 1) {
    return 0xD000000000000010;
  }
  return 0x6150656C646E7562;
}

uint64_t sub_25A5A71FC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_25A5EC3D0(*a1, *a2);
}

uint64_t sub_25A5A7208()
{
  return sub_25A6182B8();
}

uint64_t sub_25A5A7210()
{
  return sub_25A54BE08();
}

uint64_t sub_25A5A7218()
{
  return sub_25A61BC78();
}

uint64_t sub_25A5A7220@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_25A570B50();
  *a1 = result;
  return result;
}

uint64_t sub_25A5A7258@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_25A5A7194(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_25A5A7284()
{
  return sub_25A5A7194(*v0);
}

uint64_t CFunctionBundle.propertyListValue.getter()
{
  uint64_t v1 = *v0;
  uint64_t v2 = v0[1];
  int v3 = *((unsigned __int8 *)v0 + 16);
  unint64_t v4 = sub_25A5AA434();
  sub_25A5AA488();
  uint64_t result = sub_25A6227A0();
  if (v3)
  {
    if (v3 != 1) {
      return result;
    }
    uint64_t v10 = v1;
    uint64_t v11 = v2;
    uint64_t v8 = &type metadata for CFunctionBundle.Key;
    unint64_t v9 = v4;
    char v6 = 2;
  }
  else
  {
    uint64_t v10 = v1;
    uint64_t v11 = v2;
    uint64_t v8 = &type metadata for CFunctionBundle.Key;
    unint64_t v9 = v4;
    char v6 = 1;
  }
  v7[0] = v6;
  sub_25A622700();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
}

uint64_t CFunctionBundle.init(propertyListValue:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v17 = &type metadata for CFunctionBundle.Key;
  unint64_t v5 = sub_25A5AA434();
  unint64_t v18 = v5;
  v16[0] = 0;
  sub_25A5AA488();
  sub_25A622710();
  if (v2)
  {
    uint64_t v6 = sub_25A6227C0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
    if ((_BYTE)v14)
    {
      uint64_t v17 = &type metadata for CFunctionBundle.Key;
      unint64_t v18 = v5;
      if (v14 == 1)
      {
        v16[0] = 1;
        sub_25A622710();
        uint64_t v8 = sub_25A6227C0();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(a1, v8);
        uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
        char v9 = 0;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
      }
      else
      {
        v16[0] = 2;
        sub_25A622710();
        uint64_t v13 = sub_25A6227C0();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(a1, v13);
        uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        char v9 = 1;
      }
    }
    else
    {
      uint64_t v12 = sub_25A6227C0();
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(a1, v12);
      uint64_t v10 = 0;
      uint64_t v11 = 0;
      char v9 = 2;
    }
    *(void *)a2 = v10;
    *(void *)(a2 + 8) = v11;
    *(unsigned char *)(a2 + 16) = v9;
  }
  return result;
}

uint64_t CFunctionBundle.hash(into:)()
{
  if (*(unsigned char *)(v0 + 16) && *(unsigned char *)(v0 + 16) != 1) {
    return sub_25A623460();
  }
  sub_25A623460();

  return sub_25A622DF0();
}

uint64_t CFunctionBundle.hashValue.getter()
{
  unsigned int v1 = *(unsigned __int8 *)(v0 + 16);
  sub_25A623450();
  sub_25A623460();
  if (v1 <= 1) {
    sub_25A622DF0();
  }
  return sub_25A6234A0();
}

uint64_t sub_25A5A76B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return CFunctionBundle.init(propertyListValue:)(a1, a2);
}

uint64_t sub_25A5A76D0()
{
  unsigned int v1 = *(unsigned __int8 *)(v0 + 16);
  sub_25A623450();
  sub_25A623460();
  if (v1 <= 1) {
    sub_25A622DF0();
  }
  return sub_25A6234A0();
}

uint64_t sub_25A5A775C()
{
  if (*(unsigned char *)(v0 + 16) && *(unsigned char *)(v0 + 16) != 1) {
    return sub_25A623460();
  }
  sub_25A623460();

  return sub_25A622DF0();
}

uint64_t sub_25A5A77E4()
{
  unsigned int v1 = *(unsigned __int8 *)(v0 + 16);
  sub_25A623450();
  sub_25A623460();
  if (v1 <= 1) {
    sub_25A622DF0();
  }
  return sub_25A6234A0();
}

uint64_t CFunctionPayload.bundle.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)v1;
  uint64_t v3 = *(void *)(v1 + 8);
  *(void *)a1 = *(void *)v1;
  *(void *)(a1 + 8) = v3;
  unsigned __int8 v4 = *(unsigned char *)(v1 + 16);
  *(unsigned char *)(a1 + 16) = v4;
  return sub_25A5AA4DC(v2, v3, v4);
}

uint64_t CFunctionPayload.bundle.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  char v4 = *((unsigned char *)a1 + 16);
  uint64_t result = sub_25A5AA4F4(*(void *)v1, *(void *)(v1 + 8), *(unsigned char *)(v1 + 16));
  *(void *)uint64_t v1 = v2;
  *(void *)(v1 + 8) = v3;
  *(unsigned char *)(v1 + 16) = v4;
  return result;
}

uint64_t (*CFunctionPayload.bundle.modify())()
{
  return nullsub_1;
}

uint64_t CFunctionPayload.functionName.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t CFunctionPayload.functionName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = a2;
  return result;
}

uint64_t (*CFunctionPayload.functionName.modify())()
{
  return nullsub_1;
}

uint64_t CFunctionPayload.functionInput.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for CFunctionPayload(0) + 24);
  uint64_t v4 = sub_25A6227C0();
  unint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t CFunctionPayload.functionInput.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for CFunctionPayload(0) + 24);
  uint64_t v4 = sub_25A6227C0();
  unint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*CFunctionPayload.functionInput.modify())()
{
  return nullsub_1;
}

uint64_t CFunctionPayload.streamsOutput.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for CFunctionPayload(0) + 28));
}

uint64_t CFunctionPayload.streamsOutput.setter(char a1)
{
  uint64_t result = type metadata accessor for CFunctionPayload(0);
  *(unsigned char *)(v1 + *(int *)(result + 28)) = a1;
  return result;
}

uint64_t (*CFunctionPayload.streamsOutput.modify())()
{
  return nullsub_1;
}

uint64_t CFunctionPayload.init(bundle:functionName:functionInput:streamsOutput:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X8>)
{
  char v9 = *(unsigned char *)(a1 + 16);
  *(_OWORD *)a6 = *(_OWORD *)a1;
  *(unsigned char *)(a6 + 16) = v9;
  *(void *)(a6 + 24) = a2;
  *(void *)(a6 + 32) = a3;
  uint64_t v10 = type metadata accessor for CFunctionPayload(0);
  uint64_t v11 = a6 + *(int *)(v10 + 24);
  uint64_t v12 = sub_25A6227C0();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 32))(v11, a4, v12);
  *(unsigned char *)(a6 + *(int *)(v10 + 28)) = a5;
  return result;
}

uint64_t sub_25A5A7BE4(char a1)
{
  return *(void *)&aBundle_6[8 * a1];
}

uint64_t sub_25A5A7C04(char *a1, char *a2)
{
  return sub_25A5EB7D8(*a1, *a2);
}

uint64_t sub_25A5A7C10()
{
  return sub_25A61836C();
}

uint64_t sub_25A5A7C18()
{
  return sub_25A54B7D4();
}

uint64_t sub_25A5A7C20()
{
  return sub_25A61C2F0();
}

uint64_t sub_25A5A7C28@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_25A5B0564();
  *a1 = result;
  return result;
}

uint64_t sub_25A5A7C60@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_25A5A7BE4(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_25A5A7C8C()
{
  return sub_25A5A7BE4(*v0);
}

uint64_t CFunctionPayload.propertyListValue.getter()
{
  return sub_25A622780();
}

uint64_t sub_25A5A7CD0(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4299B8);
  MEMORY[0x270FA5388](v2 - 8);
  long long v33 = &v26[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A42A750);
  uint64_t v5 = v4 - 8;
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v32 = &v26[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = *(void *)a1;
  uint64_t v28 = *(void *)(a1 + 8);
  uint64_t v29 = v8;
  uint64_t v31 = *(void *)(a1 + 24);
  uint64_t v9 = *(void *)(a1 + 32);
  long long v34 = &v26[-v10];
  uint64_t v35 = v9;
  uint64_t v11 = &v26[*(int *)(v5 + 56) - v10];
  v26[-v10] = 2;
  unsigned __int8 v12 = *(unsigned char *)(a1 + 16);
  int v27 = v12;
  uint64_t v13 = type metadata accessor for CFunctionPayload(0);
  uint64_t v14 = a1 + *(int *)(v13 + 24);
  uint64_t v15 = sub_25A6227C0();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v16 + 16);
  v17(v11, v14, v15);
  int v30 = *(unsigned __int8 *)(a1 + *(int *)(v13 + 28));
  char v45 = 0;
  uint64_t v19 = v28;
  uint64_t v18 = v29;
  uint64_t v42 = v29;
  uint64_t v43 = v28;
  unsigned __int8 v44 = v12;
  char v41 = 1;
  long long v20 = v32;
  uint64_t v39 = v31;
  uint64_t v40 = v35;
  uint64_t v21 = *(int *)(v5 + 56);
  unint64_t v22 = &v32[v21];
  *uint64_t v32 = 2;
  v17(&v20[v21], (uint64_t)v11, v15);
  uint64_t v23 = (uint64_t)v33;
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v16 + 32))(v33, v22, v15);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v16 + 56))(v23, 0, 1, v15);
  char v38 = 2;
  char v37 = 3;
  char v36 = v30;
  sub_25A5AA4DC(v18, v19, v27);
  sub_25A5AA534();
  sub_25A5AA588();
  swift_bridgeObjectRetain();
  uint64_t v24 = sub_25A622A60();
  sub_25A570C60(v23, &qword_26A4299B8);
  swift_bridgeObjectRelease();
  sub_25A5AA5DC(v42, v43, v44);
  sub_25A570C60((uint64_t)v34, &qword_26A42A750);
  return v24;
}

uint64_t CFunctionPayload.init(propertyListValue:)@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = sub_25A6227C0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v33 = &type metadata for CFunctionPayload.Key;
  unint64_t v9 = sub_25A5AA534();
  unint64_t v34 = v9;
  v32[0] = 0;
  sub_25A5AA588();
  sub_25A622760();
  if (v2)
  {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v32);
  }
  else
  {
    uint64_t v31 = a2;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v32);
    uint64_t v10 = v35;
    uint64_t v11 = v36;
    int v12 = v37;
    if (v37 == 255) {
      uint64_t v13 = 0;
    }
    else {
      uint64_t v13 = v35;
    }
    if (v37 == 255) {
      uint64_t v14 = 0;
    }
    else {
      uint64_t v14 = v36;
    }
    uint64_t v29 = v14;
    uint64_t v30 = v13;
    if (v37 == 255) {
      int v15 = 2;
    }
    else {
      int v15 = v37;
    }
    int v38 = v15;
    long long v33 = &type metadata for CFunctionPayload.Key;
    unint64_t v34 = v9;
    v32[0] = 1;
    sub_25A622710();
    int v27 = v12;
    uint64_t v26 = v10;
    uint64_t v28 = v11;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v32);
    uint64_t v17 = v35;
    uint64_t v16 = v36;
    long long v33 = &type metadata for CFunctionPayload.Key;
    unint64_t v34 = v9;
    v32[0] = 2;
    sub_25A622710();
    uint64_t v25 = v17;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v32);
    long long v33 = &type metadata for CFunctionPayload.Key;
    unint64_t v34 = v9;
    v32[0] = 3;
    sub_25A622760();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v32);
    char v19 = v39 & 1;
    uint64_t v20 = v16;
    uint64_t v21 = v31;
    uint64_t v22 = v29;
    *uint64_t v31 = v30;
    v21[1] = v22;
    *((unsigned char *)v21 + 16) = v38;
    v21[3] = v25;
    v21[4] = v20;
    uint64_t v23 = type metadata accessor for CFunctionPayload(0);
    uint64_t result = (*(uint64_t (**)(char *, char *, uint64_t))(v6 + 32))((char *)v21 + *(int *)(v23 + 24), v8, v5);
    *((unsigned char *)v21 + *(int *)(v23 + 28)) = v19;
  }
  return result;
}

uint64_t sub_25A5A8360()
{
  return sub_25A622780();
}

uint64_t sub_25A5A839C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return CFunctionPayload.init(propertyListValue:)(a1, a2);
}

void static MessageStreamInstanceIdentifier.cFunctionStreamingOutput.getter(void *a1@<X8>)
{
  *a1 = 0xD000000000000024;
  a1[1] = 0x800000025A637280;
}

void static MessageStreamInstanceIdentifier.registryRuntimeEvents.getter(void *a1@<X8>)
{
  *a1 = 0xD000000000000021;
  a1[1] = 0x800000025A6372B0;
}

__n128 StaticLayerHostPayload.layerHostPayload.getter@<Q0>(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 32);
  __n128 result = *(__n128 *)v1;
  long long v4 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v1;
  *(_OWORD *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 32) = v2;
  return result;
}

uint64_t StaticLayerHostPayload.renderPayload.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 40);
  int v3 = *(_DWORD *)(v1 + 80);
  uint64_t v4 = *(void *)(v1 + 104);
  uint64_t v5 = *(void *)(v1 + 112);
  uint64_t v6 = *(void *)(v1 + 120);
  *(void *)a1 = v2;
  long long v7 = *(_OWORD *)(v1 + 48);
  long long v8 = *(_OWORD *)(v1 + 64);
  *(_OWORD *)(a1 + 8) = v7;
  *(_OWORD *)(a1 + 24) = v8;
  *(_DWORD *)(a1 + 40) = v3;
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(v1 + 88);
  *(void *)(a1 + 64) = v4;
  *(void *)(a1 + 72) = v5;
  *(void *)(a1 + 80) = v6;
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(v1 + 128);
  sub_25A59FB7C(v2, v7);
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

__n128 StaticLayerHostPayload.init(layerHostPayload:renderPayload:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = *(void *)(a2 + 32);
  int v5 = *(_DWORD *)(a2 + 40);
  uint64_t v6 = *(void *)(a2 + 64);
  char v3 = *(unsigned char *)(a1 + 32);
  long long v7 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)a3 = *(_OWORD *)a1;
  *(_OWORD *)(a3 + 16) = v7;
  *(unsigned char *)(a3 + 32) = v3;
  long long v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a3 + 40) = *(_OWORD *)a2;
  *(_OWORD *)(a3 + 56) = v8;
  *(void *)(a3 + 72) = v4;
  *(_DWORD *)(a3 + 80) = v5;
  *(_OWORD *)(a3 + 88) = *(_OWORD *)(a2 + 48);
  *(void *)(a3 + 104) = v6;
  __n128 result = *(__n128 *)(a2 + 72);
  long long v10 = *(_OWORD *)(a2 + 88);
  *(__n128 *)(a3 + 112) = result;
  *(_OWORD *)(a3 + 128) = v10;
  return result;
}

uint64_t sub_25A5A84E4(char a1)
{
  if (a1) {
    return 0x61507265646E6572;
  }
  else {
    return 0xD000000000000010;
  }
}

uint64_t sub_25A5A852C(char *a1, char *a2)
{
  return sub_25A5E963C(*a1, *a2);
}

uint64_t sub_25A5A8538()
{
  return sub_25A6183D8();
}

uint64_t sub_25A5A8540()
{
  return sub_25A54A434();
}

uint64_t sub_25A5A8548()
{
  return sub_25A61D60C();
}

uint64_t sub_25A5A8550@<X0>(char *a1@<X8>)
{
  return sub_25A56B748(a1);
}

uint64_t sub_25A5A855C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_25A5A84E4(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_25A5A8588()
{
  return sub_25A5A84E4(*v0);
}

uint64_t StaticLayerHostPayload.propertyListValue.getter()
{
  return sub_25A622780();
}

uint64_t sub_25A5A85F8(uint64_t a1)
{
  sub_25A55C73C(a1, (uint64_t)v3, &qword_26A42A748);
  v2[39] = 0;
  sub_25A55C73C((uint64_t)v3, (uint64_t)v2, &qword_26A42A748);
  sub_25A5AA5F8();
  sub_25A5AA64C();
  sub_25A5AA6A0();
  return sub_25A622A80();
}

uint64_t StaticLayerHostPayload.init(propertyListValue:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *((void *)&v23 + 1) = &type metadata for StaticLayerHostPayload.Key;
  unint64_t v5 = sub_25A5AA5F8();
  unint64_t v24 = v5;
  LOBYTE(v22) = 0;
  sub_25A5AA64C();
  sub_25A622760();
  if (v2)
  {
    uint64_t v6 = sub_25A6227C0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v22);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v22);
    uint64_t v35 = v30;
    uint64_t v8 = v32;
    uint64_t v17 = v31;
    uint64_t v9 = v33;
    char v10 = v34;
    uint64_t v20 = &type metadata for StaticLayerHostPayload.Key;
    unint64_t v21 = v5;
    v19[0] = 1;
    sub_25A5AA6A0();
    sub_25A622710();
    uint64_t v11 = sub_25A6227C0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(a1, v11);
    uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
    unint64_t v12 = v24;
    int v13 = v25;
    uint64_t v14 = v27;
    *(void *)a2 = v35;
    *(void *)(a2 + 8) = v17;
    *(void *)(a2 + 16) = v8;
    *(void *)(a2 + 24) = v9;
    *(unsigned char *)(a2 + 32) = v10;
    *(_DWORD *)(a2 + 33) = *(_DWORD *)v18;
    *(_DWORD *)(a2 + 36) = *(_DWORD *)&v18[3];
    long long v15 = v23;
    *(_OWORD *)(a2 + 40) = v22;
    *(_OWORD *)(a2 + 56) = v15;
    *(void *)(a2 + 72) = v12;
    *(_DWORD *)(a2 + 80) = v13;
    *(_OWORD *)(a2 + 88) = v26;
    *(void *)(a2 + 104) = v14;
    long long v16 = v29;
    *(_OWORD *)(a2 + 112) = v28;
    *(_OWORD *)(a2 + 128) = v16;
  }
  return result;
}

uint64_t sub_25A5A891C()
{
  return sub_25A622780();
}

uint64_t sub_25A5A8984@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return StaticLayerHostPayload.init(propertyListValue:)(a1, a2);
}

uint64_t NSPreviewHostablePreviewReply.auditToken.getter()
{
  return *(void *)v0;
}

uint64_t NSPreviewHostablePreviewReply.windowNumber.getter()
{
  return *(void *)(v0 + 32);
}

double NSPreviewHostablePreviewReply.size.getter()
{
  return *(double *)(v0 + 40);
}

double NSPreviewHostablePreviewReply.scaleFactor.getter()
{
  return *(double *)(v0 + 56);
}

uint64_t NSPreviewHostablePreviewReply.initialRenderPayload.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 64);
  int v3 = *(_DWORD *)(v1 + 104);
  uint64_t v4 = *(void *)(v1 + 128);
  uint64_t v5 = *(void *)(v1 + 136);
  uint64_t v6 = *(void *)(v1 + 144);
  *(void *)a1 = v2;
  long long v7 = *(_OWORD *)(v1 + 72);
  *(_OWORD *)(a1 + 8) = v7;
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(v1 + 88);
  *(_DWORD *)(a1 + 40) = v3;
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(v1 + 112);
  *(void *)(a1 + 64) = v4;
  *(void *)(a1 + 72) = v5;
  *(void *)(a1 + 80) = v6;
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(v1 + 152);
  sub_25A59FB7C(v2, v7);
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

__n128 NSPreviewHostablePreviewReply.init(auditToken:windowNumber:size:scaleFactor:initialRenderPayload:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>, double a8@<D0>, double a9@<D1>, double a10@<D2>)
{
  uint64_t v10 = *(void *)(a6 + 32);
  int v11 = *(_DWORD *)(a6 + 40);
  uint64_t v12 = *(void *)(a6 + 64);
  *(void *)a7 = a1;
  *(void *)(a7 + 8) = a2;
  *(void *)(a7 + 16) = a3;
  *(void *)(a7 + 24) = a4;
  *(void *)(a7 + 32) = a5;
  *(double *)(a7 + 40) = a8;
  *(double *)(a7 + 48) = a9;
  *(double *)(a7 + 56) = a10;
  long long v13 = *(_OWORD *)(a6 + 16);
  *(_OWORD *)(a7 + 64) = *(_OWORD *)a6;
  *(_OWORD *)(a7 + 80) = v13;
  *(void *)(a7 + 96) = v10;
  *(_DWORD *)(a7 + 104) = v11;
  *(_OWORD *)(a7 + 112) = *(_OWORD *)(a6 + 48);
  *(void *)(a7 + 128) = v12;
  *(_OWORD *)(a7 + 136) = *(_OWORD *)(a6 + 72);
  __n128 result = *(__n128 *)(a6 + 88);
  *(__n128 *)(a7 + 152) = result;
  return result;
}

unint64_t sub_25A5A8AB0(char a1)
{
  unint64_t result = 0xD000000000000014;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x754E776F646E6977;
      break;
    case 2:
      unint64_t result = 1702521203;
      break;
    case 3:
      unint64_t result = 0x636146656C616373;
      break;
    case 4:
      return result;
    default:
      unint64_t result = 0x6B6F547469647561;
      break;
  }
  return result;
}

uint64_t sub_25A5A8B70(unsigned __int8 *a1, char *a2)
{
  return sub_25A5E8448(*a1, *a2);
}

uint64_t sub_25A5A8B7C()
{
  return sub_25A61846C();
}

uint64_t sub_25A5A8B84()
{
  return sub_25A549AD8();
}

uint64_t sub_25A5A8B8C()
{
  return sub_25A61E1E4();
}

uint64_t sub_25A5A8B94@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_25A575CAC();
  *a1 = result;
  return result;
}

unint64_t sub_25A5A8BCC@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_25A5A8AB0(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_25A5A8BF8()
{
  return sub_25A5A8AB0(*v0);
}

uint64_t NSPreviewHostablePreviewReply.propertyListValue.getter()
{
  return sub_25A622780();
}

uint64_t sub_25A5A8C70()
{
  return sub_25A622A50();
}

uint64_t NSPreviewHostablePreviewReply.init(propertyListValue:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *((void *)&v25 + 1) = &type metadata for NSPreviewHostablePreviewReply.Key;
  unint64_t v5 = sub_25A5AA6FC();
  unint64_t v26 = v5;
  LOBYTE(v24) = 0;
  type metadata accessor for audit_token_t(0);
  sub_25A622710();
  if (v2)
  {
    uint64_t v13 = sub_25A6227C0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(a1, v13);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v24);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v24);
    uint64_t v6 = v36;
    uint64_t v7 = v37;
    uint64_t v8 = v38;
    uint64_t v9 = v39;
    *((void *)&v25 + 1) = &type metadata for NSPreviewHostablePreviewReply.Key;
    unint64_t v26 = v5;
    LOBYTE(v24) = 1;
    sub_25A622710();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v24);
    uint64_t v10 = v35;
    *((void *)&v25 + 1) = &type metadata for NSPreviewHostablePreviewReply.Key;
    unint64_t v26 = v5;
    LOBYTE(v24) = 2;
    type metadata accessor for CGSize(0);
    sub_25A622710();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v24);
    uint64_t v11 = v33;
    uint64_t v12 = v34;
    *((void *)&v25 + 1) = &type metadata for NSPreviewHostablePreviewReply.Key;
    unint64_t v26 = v5;
    LOBYTE(v24) = 3;
    sub_25A622710();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v24);
    uint64_t v14 = v32;
    long long v22 = &type metadata for NSPreviewHostablePreviewReply.Key;
    unint64_t v23 = v5;
    v21[0] = 4;
    sub_25A5AA6A0();
    sub_25A622710();
    uint64_t v15 = sub_25A6227C0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(a1, v15);
    uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
    unint64_t v17 = v26;
    int v18 = v27;
    uint64_t v19 = v29;
    *(void *)a2 = v6;
    *(void *)(a2 + 8) = v7;
    *(void *)(a2 + 16) = v8;
    *(void *)(a2 + 24) = v9;
    *(void *)(a2 + 32) = v10;
    *(void *)(a2 + 40) = v11;
    *(void *)(a2 + 48) = v12;
    *(void *)(a2 + 56) = v14;
    long long v20 = v25;
    *(_OWORD *)(a2 + 64) = v24;
    *(_OWORD *)(a2 + 80) = v20;
    *(void *)(a2 + 96) = v17;
    *(_DWORD *)(a2 + 104) = v18;
    *(_OWORD *)(a2 + 112) = v28;
    *(void *)(a2 + 128) = v19;
    *(_OWORD *)(a2 + 136) = v30;
    *(_OWORD *)(a2 + 152) = v31;
  }
  return result;
}

uint64_t sub_25A5A90AC()
{
  return sub_25A622780();
}

uint64_t sub_25A5A911C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return NSPreviewHostablePreviewReply.init(propertyListValue:)(a1, a2);
}

uint64_t MacOSSnapshotPayload.renderPayload.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)v1;
  int v3 = *(_DWORD *)(v1 + 40);
  uint64_t v4 = *(void *)(v1 + 64);
  uint64_t v5 = *(void *)(v1 + 72);
  uint64_t v6 = *(void *)(v1 + 80);
  *(void *)a1 = *(void *)v1;
  long long v7 = *(_OWORD *)(v1 + 8);
  *(_OWORD *)(a1 + 8) = v7;
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(v1 + 24);
  *(_DWORD *)(a1 + 40) = v3;
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(v1 + 48);
  *(void *)(a1 + 64) = v4;
  *(void *)(a1 + 72) = v5;
  *(void *)(a1 + 80) = v6;
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(v1 + 88);
  sub_25A59FB7C(v2, v7);
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

__n128 MacOSSnapshotPayload.init(renderPayload:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *(void *)(a1 + 32);
  int v3 = *(_DWORD *)(a1 + 40);
  uint64_t v4 = *(void *)(a1 + 64);
  long long v5 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)a2 = *(_OWORD *)a1;
  *(_OWORD *)(a2 + 16) = v5;
  *(void *)(a2 + 32) = v2;
  *(_DWORD *)(a2 + 40) = v3;
  *(_OWORD *)(a2 + 48) = *(_OWORD *)(a1 + 48);
  *(void *)(a2 + 64) = v4;
  *(_OWORD *)(a2 + 72) = *(_OWORD *)(a1 + 72);
  __n128 result = *(__n128 *)(a1 + 88);
  *(__n128 *)(a2 + 88) = result;
  return result;
}

uint64_t sub_25A5A9204@<X0>(BOOL *a1@<X8>)
{
  return sub_25A56C88C(a1);
}

uint64_t sub_25A5A9210@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_25A5A9660();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t MacOSSnapshotPayload.propertyListValue.getter()
{
  return sub_25A6227A0();
}

uint64_t sub_25A5A92D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(a3 + 32);
  uint64_t v4 = *(unsigned int *)(a3 + 40);
  uint64_t v5 = *(void *)(a3 + 64);
  long long v6 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)a2 = *(_OWORD *)a3;
  *(_OWORD *)(a2 + 16) = v6;
  *(void *)(a2 + 32) = v3;
  *(void *)(a2 + 40) = v4;
  *(_OWORD *)(a2 + 48) = *(_OWORD *)(a3 + 48);
  *(void *)(a2 + 64) = v5;
  *(_OWORD *)(a2 + 72) = *(_OWORD *)(a3 + 72);
  *(_OWORD *)(a2 + 88) = *(_OWORD *)(a3 + 88);
  return sub_25A5B0600(a3);
}

__n128 MacOSSnapshotPayload.init(propertyListValue:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v14 = &type metadata for MacOSSnapshotPayload.Key;
  unint64_t v15 = sub_25A5AA758();
  sub_25A5AA6A0();
  sub_25A622710();
  uint64_t v5 = sub_25A6227C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
  if (!v2)
  {
    uint64_t v7 = v18;
    int v8 = v19;
    uint64_t v9 = v21;
    __n128 result = v23;
    long long v10 = v22;
    long long v11 = v17;
    long long v12 = v20;
    *(_OWORD *)a2 = v16;
    *(_OWORD *)(a2 + 16) = v11;
    *(void *)(a2 + 32) = v7;
    *(_DWORD *)(a2 + 40) = v8;
    *(_OWORD *)(a2 + 48) = v12;
    *(void *)(a2 + 64) = v9;
    *(_OWORD *)(a2 + 72) = v10;
    *(__n128 *)(a2 + 88) = result;
  }
  return result;
}

uint64_t sub_25A5A943C()
{
  return sub_25A6227A0();
}

__n128 sub_25A5A94D0@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v14 = &type metadata for MacOSSnapshotPayload.Key;
  unint64_t v15 = sub_25A5AA758();
  sub_25A5AA6A0();
  sub_25A622710();
  uint64_t v5 = sub_25A6227C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
  if (!v2)
  {
    uint64_t v7 = v18;
    int v8 = v19;
    uint64_t v9 = v21;
    __n128 result = v23;
    long long v10 = v22;
    long long v11 = v17;
    long long v12 = v20;
    *(_OWORD *)a2 = v16;
    *(_OWORD *)(a2 + 16) = v11;
    *(void *)(a2 + 32) = v7;
    *(_DWORD *)(a2 + 40) = v8;
    *(_OWORD *)(a2 + 48) = v12;
    *(void *)(a2 + 64) = v9;
    *(_OWORD *)(a2 + 72) = v10;
    *(__n128 *)(a2 + 88) = result;
  }
  return result;
}

void static MessageStreamInstanceIdentifier.macOSSnapshots.getter(void *a1@<X8>)
{
  *a1 = 0xD00000000000001ALL;
  a1[1] = 0x800000025A6372E0;
}

void static MessageStreamInstanceIdentifier.nsPreviewSuppressedPresentations.getter(void *a1@<X8>)
{
  *a1 = 0xD00000000000002CLL;
  a1[1] = 0x800000025A637300;
}

uint64_t sub_25A5A9640()
{
  return 0x72656469766F7270;
}

uint64_t sub_25A5A9660()
{
  return 0x61507265646E6572;
}

uint64_t _s19PreviewsMessagingOS15CFunctionBundleO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a1;
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = *(unsigned __int8 *)(a1 + 16);
  uint64_t v6 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  int v7 = *(unsigned __int8 *)(a2 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    if (v4 == 1)
    {
      if (v7 == 1)
      {
        if (v3 == v6 && v2 == v5) {
          char v9 = 1;
        }
        else {
          char v9 = sub_25A6233B0();
        }
        sub_25A5AA4DC(v6, v5, 1u);
        sub_25A5AA4DC(v3, v2, 1u);
        sub_25A5AA4F4(v3, v2, 1u);
        uint64_t v12 = v6;
        uint64_t v13 = v5;
        unsigned __int8 v14 = 1;
LABEL_25:
        sub_25A5AA4F4(v12, v13, v14);
        return v9 & 1;
      }
    }
    else if (v7 == 2 && (v5 | v6) == 0)
    {
      sub_25A5AA4F4(*(void *)a1, v2, 2u);
      sub_25A5AA4F4(0, 0, 2u);
      char v9 = 1;
      return v9 & 1;
    }
  }
  else if (!*(unsigned char *)(a2 + 16))
  {
    if (v3 == v6 && v2 == v5) {
      char v9 = 1;
    }
    else {
      char v9 = sub_25A6233B0();
    }
    sub_25A5AA4DC(v6, v5, 0);
    sub_25A5AA4DC(v3, v2, 0);
    sub_25A5AA4F4(v3, v2, 0);
    uint64_t v12 = v6;
    uint64_t v13 = v5;
    unsigned __int8 v14 = 0;
    goto LABEL_25;
  }
  sub_25A5AA4DC(*(void *)a2, *(void *)(a2 + 8), v7);
  sub_25A5AA4DC(v3, v2, v4);
  sub_25A5AA4F4(v3, v2, v4);
  sub_25A5AA4F4(v6, v5, v7);
  char v9 = 0;
  return v9 & 1;
}

uint64_t _s19PreviewsMessagingOS6FileIDV2eeoiySbAC_ACtFZ_0(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  uint64_t v3 = a1[3];
  uint64_t v4 = a2[2];
  uint64_t v5 = a2[3];
  BOOL v6 = *a1 == *a2 && a1[1] == a2[1];
  if (v6 || (v7 = sub_25A6233B0(), uint64_t result = 0, (v7 & 1) != 0))
  {
    if (v2 == v4 && v3 == v5)
    {
      return 1;
    }
    else
    {
      return sub_25A6233B0();
    }
  }
  return result;
}

BOOL _s19PreviewsMessagingOS10RegistryIDV2eeoiySbAC_ACtFZ_0(void *a1, void *a2)
{
  uint64_t v4 = sub_25A622310();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  char v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A42A778);
  MEMORY[0x270FA5388](v8);
  long long v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A42A518);
  uint64_t v12 = MEMORY[0x270FA5388](v11 - 8);
  unsigned __int8 v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x270FA5388](v12);
  long long v17 = (char *)&v33 - v16;
  MEMORY[0x270FA5388](v15);
  int v19 = (char *)&v33 - v18;
  if (*a1 == *a2 && a1[1] == a2[1] || (v20 = sub_25A6233B0(), BOOL result = 0, (v20 & 1) != 0))
  {
    if (a1[2] == a2[2] && a1[3] == a2[3] || (v22 = sub_25A6233B0(), BOOL result = 0, (v22 & 1) != 0))
    {
      if (a1[4] == a2[4])
      {
        uint64_t v34 = v7;
        uint64_t v23 = v5;
        uint64_t v24 = type metadata accessor for RegistryID(0);
        sub_25A5A3664((uint64_t)a1 + *(int *)(v24 + 28), (uint64_t)v19);
        uint64_t v25 = *(int *)(v24 + 28);
        uint64_t v26 = v23;
        sub_25A5A3664((uint64_t)a2 + v25, (uint64_t)v17);
        uint64_t v27 = (uint64_t)&v10[*(int *)(v8 + 48)];
        sub_25A5A3664((uint64_t)v19, (uint64_t)v10);
        sub_25A5A3664((uint64_t)v17, v27);
        long long v28 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48);
        if (v28((uint64_t)v10, 1, v4) == 1)
        {
          sub_25A570C60((uint64_t)v17, &qword_26A42A518);
          sub_25A570C60((uint64_t)v19, &qword_26A42A518);
          if (v28(v27, 1, v4) == 1)
          {
            sub_25A570C60((uint64_t)v10, &qword_26A42A518);
            return 1;
          }
        }
        else
        {
          sub_25A5A3664((uint64_t)v10, (uint64_t)v14);
          if (v28(v27, 1, v4) != 1)
          {
            uint64_t v29 = *(void (**)(char *, uint64_t, uint64_t))(v23 + 32);
            long long v30 = v34;
            v29(v34, v27, v4);
            sub_25A5A38F0(&qword_26A42A780, MEMORY[0x263F07508]);
            char v31 = sub_25A622DA0();
            uint64_t v32 = *(void (**)(char *, uint64_t))(v26 + 8);
            v32(v30, v4);
            sub_25A570C60((uint64_t)v17, &qword_26A42A518);
            sub_25A570C60((uint64_t)v19, &qword_26A42A518);
            v32(v14, v4);
            sub_25A570C60((uint64_t)v10, &qword_26A42A518);
            return (v31 & 1) != 0;
          }
          sub_25A570C60((uint64_t)v17, &qword_26A42A518);
          sub_25A570C60((uint64_t)v19, &qword_26A42A518);
          (*(void (**)(char *, uint64_t))(v23 + 8))(v14, v4);
        }
        sub_25A570C60((uint64_t)v10, &qword_26A42A778);
      }
      return 0;
    }
  }
  return result;
}

uint64_t sub_25A5A9D08()
{
  return sub_25A5A3C30();
}

unint64_t sub_25A5A9D10()
{
  unint64_t result = qword_26A42A548;
  if (!qword_26A42A548)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42A548);
  }
  return result;
}

unint64_t sub_25A5A9D64()
{
  unint64_t result = qword_26A42A550;
  if (!qword_26A42A550)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42A550);
  }
  return result;
}

uint64_t type metadata accessor for PreviewSpecification.Value(uint64_t a1)
{
  return sub_25A54FD94(a1, (uint64_t *)&unk_26A42A670);
}

uint64_t sub_25A5A9DD8(unsigned char *a1, BOOL *a2)
{
  return sub_25A5A44B0(a1, a2, *(void *)(v2 + 16));
}

unint64_t sub_25A5A9DE0()
{
  unint64_t result = qword_26A42A560;
  if (!qword_26A42A560)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42A560);
  }
  return result;
}

unint64_t sub_25A5A9E34()
{
  unint64_t result = qword_26A42A568;
  if (!qword_26A42A568)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42A568);
  }
  return result;
}

uint64_t sub_25A5A9E88(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unint64_t sub_25A5A9EF0()
{
  unint64_t result = qword_26A42A580;
  if (!qword_26A42A580)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42A580);
  }
  return result;
}

unint64_t sub_25A5A9F44()
{
  unint64_t result = qword_26A42A588;
  if (!qword_26A42A588)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42A588);
  }
  return result;
}

uint64_t sub_25A5A9F98(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t type metadata accessor for PreviewSpecification(uint64_t a1)
{
  return sub_25A54FD94(a1, (uint64_t *)&unk_26A42A660);
}

uint64_t sub_25A5AA020(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t type metadata accessor for PreviewPayload(uint64_t a1)
{
  return sub_25A54FD94(a1, (uint64_t *)&unk_26A42A680);
}

uint64_t sub_25A5AA0A8()
{
  return sub_25A5A52F4(*(void *)(v0 + 16));
}

unint64_t sub_25A5AA0B0()
{
  unint64_t result = qword_26A42A590;
  if (!qword_26A42A590)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42A590);
  }
  return result;
}

unint64_t sub_25A5AA104()
{
  unint64_t result = qword_26A42A5A0;
  if (!qword_26A42A5A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42A5A0);
  }
  return result;
}

unint64_t sub_25A5AA158()
{
  unint64_t result = qword_26A42A5B0;
  if (!qword_26A42A5B0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A42A5A8);
    sub_25A5AA1CC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42A5B0);
  }
  return result;
}

unint64_t sub_25A5AA1CC()
{
  unint64_t result = qword_26A42A5B8;
  if (!qword_26A42A5B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42A5B8);
  }
  return result;
}

uint64_t sub_25A5AA220(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_25A5AA280()
{
  return sub_25A5A5A7C();
}

unint64_t sub_25A5AA28C()
{
  unint64_t result = qword_26A42A5C0;
  if (!qword_26A42A5C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42A5C0);
  }
  return result;
}

uint64_t sub_25A5AA2E0()
{
  return sub_25A5A5F48();
}

unint64_t sub_25A5AA2EC()
{
  unint64_t result = qword_26A42A5C8;
  if (!qword_26A42A5C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42A5C8);
  }
  return result;
}

uint64_t type metadata accessor for RegistryPayload(uint64_t a1)
{
  return sub_25A54FD94(a1, (uint64_t *)&unk_26A42A690);
}

uint64_t sub_25A5AA360()
{
  return sub_25A5A67C4(*(void *)(v0 + 16));
}

unint64_t sub_25A5AA368()
{
  unint64_t result = qword_26A42A5D0;
  if (!qword_26A42A5D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42A5D0);
  }
  return result;
}

uint64_t sub_25A5AA3BC()
{
  return sub_25A5A6E18();
}

unint64_t sub_25A5AA3C4()
{
  unint64_t result = qword_26A42A5D8;
  if (!qword_26A42A5D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42A5D8);
  }
  return result;
}

unsigned char *sub_25A5AA418(unsigned char *result, unsigned char *a2)
{
  char v3 = *(unsigned char *)(v2 + 32);
  *unint64_t result = 0;
  *a2 = 0x201u >> (8 * v3);
  return result;
}

unint64_t sub_25A5AA434()
{
  unint64_t result = qword_26A42A5E0;
  if (!qword_26A42A5E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42A5E0);
  }
  return result;
}

unint64_t sub_25A5AA488()
{
  unint64_t result = qword_26A42A5E8;
  if (!qword_26A42A5E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42A5E8);
  }
  return result;
}

uint64_t sub_25A5AA4DC(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 1u) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_25A5AA4F4(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 1u) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t type metadata accessor for CFunctionPayload(uint64_t a1)
{
  return sub_25A54FD94(a1, (uint64_t *)&unk_26A42A6A0);
}

uint64_t sub_25A5AA52C()
{
  return sub_25A5A7CD0(*(void *)(v0 + 16));
}

unint64_t sub_25A5AA534()
{
  unint64_t result = qword_26A42A5F0;
  if (!qword_26A42A5F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42A5F0);
  }
  return result;
}

unint64_t sub_25A5AA588()
{
  unint64_t result = qword_26A42A5F8;
  if (!qword_26A42A5F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42A5F8);
  }
  return result;
}

uint64_t sub_25A5AA5DC(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 != 0xFF) {
    return sub_25A5AA4F4(a1, a2, a3);
  }
  return a1;
}

uint64_t sub_25A5AA5F0()
{
  return sub_25A5A85F8(*(void *)(v0 + 16));
}

unint64_t sub_25A5AA5F8()
{
  unint64_t result = qword_26A42A600;
  if (!qword_26A42A600)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42A600);
  }
  return result;
}

unint64_t sub_25A5AA64C()
{
  unint64_t result = qword_26A42A608;
  if (!qword_26A42A608)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42A608);
  }
  return result;
}

unint64_t sub_25A5AA6A0()
{
  unint64_t result = qword_26A42A610;
  if (!qword_26A42A610)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42A610);
  }
  return result;
}

uint64_t sub_25A5AA6F4()
{
  return sub_25A5A8C70();
}

unint64_t sub_25A5AA6FC()
{
  unint64_t result = qword_26A42A618;
  if (!qword_26A42A618)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42A618);
  }
  return result;
}

uint64_t sub_25A5AA750(uint64_t a1, uint64_t a2)
{
  return sub_25A5A92D0(a1, a2, *(void *)(v2 + 16));
}

unint64_t sub_25A5AA758()
{
  unint64_t result = qword_26A42A620;
  if (!qword_26A42A620)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42A620);
  }
  return result;
}

unint64_t sub_25A5AA7B0()
{
  unint64_t result = qword_26A42A628;
  if (!qword_26A42A628)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42A628);
  }
  return result;
}

uint64_t sub_25A5AA804()
{
  return sub_25A5A38F0(&qword_26A42A630, (void (*)(uint64_t))type metadata accessor for RegistryID);
}

unint64_t sub_25A5AA850()
{
  unint64_t result = qword_26A42A638;
  if (!qword_26A42A638)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42A638);
  }
  return result;
}

unint64_t sub_25A5AA8A8()
{
  unint64_t result = qword_26A42A640;
  if (!qword_26A42A640)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42A640);
  }
  return result;
}

ValueMetadata *type metadata accessor for ProviderPayload()
{
  return &type metadata for ProviderPayload;
}

ValueMetadata *type metadata accessor for RegistryType()
{
  return &type metadata for RegistryType;
}

uint64_t *initializeBufferWithCopyOfBuffer for RegistryID(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  char v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *char v3 = *a2;
    char v3 = (uint64_t *)(v14 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    uint64_t v7 = *(int *)(a3 + 28);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    a1[4] = a2[4];
    uint64_t v10 = sub_25A622310();
    uint64_t v11 = *(void *)(v10 - 8);
    uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v12(v9, 1, v10))
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A42A518);
      memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
  }
  return v3;
}

uint64_t destroy for RegistryID(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  uint64_t v5 = sub_25A622310();
  uint64_t v8 = *(void *)(v5 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v4, 1, v5);
  if (!result)
  {
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8);
    return v7(v4, v5);
  }
  return result;
}

void *initializeWithCopy for RegistryID(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  a1[4] = a2[4];
  uint64_t v6 = *(int *)(a3 + 28);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_25A622310();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v11(v8, 1, v9))
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A42A518);
    memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  return a1;
}

void *assignWithCopy for RegistryID(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  uint64_t v6 = *(int *)(a3 + 28);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_25A622310();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A42A518);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  return a1;
}

uint64_t initializeWithTake for RegistryID(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v5 = *(int *)(a3 + 28);
  uint64_t v6 = (void *)(a1 + v5);
  uint64_t v7 = (const void *)(a2 + v5);
  uint64_t v8 = sub_25A622310();
  uint64_t v9 = *(void *)(v8 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
  {
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A42A518);
    memcpy(v6, v7, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v9 + 32))(v6, v7, v8);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  }
  return a1;
}

void *assignWithTake for RegistryID(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  uint64_t v8 = *(int *)(a3 + 28);
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = sub_25A622310();
  uint64_t v12 = *(void *)(v11 - 8);
  int v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48);
  int v14 = v13(v9, 1, v11);
  int v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 40))(v9, v10, v11);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v9, v11);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A42A518);
    memcpy(v9, v10, *(void *)(*(void *)(v16 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for RegistryID(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25A5AB15C);
}

uint64_t sub_25A5AB15C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A42A518);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 28);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for RegistryID(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25A5AB224);
}

uint64_t sub_25A5AB224(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A42A518);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 28);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_25A5AB2D0()
{
  sub_25A5AB378();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_25A5AB378()
{
  if (!qword_26A42A658)
  {
    sub_25A622310();
    unint64_t v0 = sub_25A623180();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26A42A658);
    }
  }
}

void *initializeWithCopy for RuntimeRegistryLocation(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for RuntimeRegistryLocation(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  return a1;
}

void *assignWithTake for RuntimeRegistryLocation(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  return a1;
}

uint64_t getEnumTagSinglePayload for RuntimeRegistryLocation(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RuntimeRegistryLocation(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RuntimeRegistryLocation()
{
  return &type metadata for RuntimeRegistryLocation;
}

uint64_t *initializeBufferWithCopyOfBuffer for PreviewSpecification(uint64_t *a1, uint64_t *a2)
{
  int v4 = *(_DWORD *)(*(void *)(type metadata accessor for PreviewSpecification.Value(0) - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v7 = a2[3];
      a1[2] = a2[2];
      a1[3] = v7;
      a1[4] = a2[4];
      uint64_t v8 = *(int *)(type metadata accessor for RegistryID(0) + 28);
      __dst = (char *)a1 + v8;
      uint64_t v9 = (char *)a2 + v8;
      uint64_t v10 = sub_25A622310();
      uint64_t v11 = *(void *)(v10 - 8);
      uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v12(v9, 1, v10))
      {
        uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A42A518);
        memcpy(__dst, v9, *(void *)(*(void *)(v13 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v11 + 16))(__dst, v9, v10);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(__dst, 0, 1, v10);
      }
      uint64_t v15 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A42A570) + 48);
      uint64_t v16 = (uint64_t *)((char *)a1 + v15);
      long long v17 = (uint64_t *)((char *)a2 + v15);
      uint64_t v18 = v17[1];
      *uint64_t v16 = *v17;
      v16[1] = v18;
      uint64_t v19 = v17[3];
      void v16[2] = v17[2];
      v16[3] = v19;
      v16[4] = v17[4];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      a1[2] = a2[2];
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for PreviewSpecification(uint64_t a1)
{
  type metadata accessor for PreviewSpecification.Value(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t result = swift_bridgeObjectRelease();
  if (EnumCaseMultiPayload == 1)
  {
    swift_bridgeObjectRelease();
    uint64_t v4 = a1 + *(int *)(type metadata accessor for RegistryID(0) + 28);
    uint64_t v5 = sub_25A622310();
    uint64_t v6 = *(void *)(v5 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A42A570);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void *initializeWithCopy for PreviewSpecification(void *a1, void *a2)
{
  type metadata accessor for PreviewSpecification.Value(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    a1[4] = a2[4];
    uint64_t v7 = *(int *)(type metadata accessor for RegistryID(0) + 28);
    __dst = (char *)a1 + v7;
    uint64_t v8 = (char *)a2 + v7;
    uint64_t v9 = sub_25A622310();
    uint64_t v10 = *(void *)(v9 - 8);
    uint64_t v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v11(v8, 1, v9))
    {
      uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A42A518);
      memcpy(__dst, v8, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(__dst, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(__dst, 0, 1, v9);
    }
    uint64_t v13 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A42A570) + 48);
    uint64_t v14 = (void *)((char *)a1 + v13);
    uint64_t v15 = (void *)((char *)a2 + v13);
    uint64_t v16 = v15[1];
    *uint64_t v14 = *v15;
    v14[1] = v16;
    uint64_t v17 = v15[3];
    void v14[2] = v15[2];
    void v14[3] = v17;
    v14[4] = v15[4];
    swift_bridgeObjectRetain();
  }
  else
  {
    a1[2] = a2[2];
  }
  swift_bridgeObjectRetain();
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *assignWithCopy for PreviewSpecification(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_25A5AA220((uint64_t)a1, type metadata accessor for PreviewSpecification.Value);
    type metadata accessor for PreviewSpecification.Value(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *a1 = *a2;
    a1[1] = a2[1];
    if (EnumCaseMultiPayload == 1)
    {
      a1[2] = a2[2];
      a1[3] = a2[3];
      a1[4] = a2[4];
      uint64_t v5 = *(int *)(type metadata accessor for RegistryID(0) + 28);
      __dst = (char *)a1 + v5;
      uint64_t v6 = (char *)a2 + v5;
      uint64_t v7 = sub_25A622310();
      uint64_t v8 = *(void *)(v7 - 8);
      uint64_t v9 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v9(v6, 1, v7))
      {
        uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A42A518);
        memcpy(__dst, v6, *(void *)(*(void *)(v10 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v8 + 16))(__dst, v6, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(__dst, 0, 1, v7);
      }
      uint64_t v11 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A42A570) + 48);
      uint64_t v12 = (void *)((char *)a1 + v11);
      uint64_t v13 = (void *)((char *)a2 + v11);
      *uint64_t v12 = *v13;
      v12[1] = v13[1];
      v12[2] = v13[2];
      uint64_t v12[3] = v13[3];
      v12[4] = v13[4];
      swift_bridgeObjectRetain();
    }
    else
    {
      a1[2] = a2[2];
    }
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *initializeWithTake for PreviewSpecification(_OWORD *a1, _OWORD *a2)
{
  uint64_t v4 = type metadata accessor for PreviewSpecification.Value(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    long long v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    *((void *)a1 + 4) = *((void *)a2 + 4);
    uint64_t v6 = *(int *)(type metadata accessor for RegistryID(0) + 28);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = sub_25A622310();
    uint64_t v10 = *(void *)(v9 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
    {
      uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A42A518);
      memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
    }
    uint64_t v12 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A42A570) + 48);
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    long long v15 = *((_OWORD *)v14 + 1);
    *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
    *((_OWORD *)v13 + 1) = v15;
    *((void *)v13 + 4) = *((void *)v14 + 4);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v4 - 8) + 64));
  }
  return a1;
}

_OWORD *assignWithTake for PreviewSpecification(_OWORD *a1, _OWORD *a2)
{
  if (a1 != a2)
  {
    sub_25A5AA220((uint64_t)a1, type metadata accessor for PreviewSpecification.Value);
    uint64_t v4 = type metadata accessor for PreviewSpecification.Value(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      long long v5 = a2[1];
      *a1 = *a2;
      a1[1] = v5;
      *((void *)a1 + 4) = *((void *)a2 + 4);
      uint64_t v6 = *(int *)(type metadata accessor for RegistryID(0) + 28);
      uint64_t v7 = (char *)a1 + v6;
      uint64_t v8 = (char *)a2 + v6;
      uint64_t v9 = sub_25A622310();
      uint64_t v10 = *(void *)(v9 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
      {
        uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A42A518);
        memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      }
      uint64_t v12 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A42A570) + 48);
      uint64_t v13 = (char *)a1 + v12;
      uint64_t v14 = (char *)a2 + v12;
      long long v15 = *((_OWORD *)v14 + 1);
      *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
      *((_OWORD *)v13 + 1) = v15;
      *((void *)v13 + 4) = *((void *)v14 + 4);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v4 - 8) + 64));
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for PreviewSpecification(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25A5AC070);
}

uint64_t sub_25A5AC070(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PreviewSpecification.Value(0);
  long long v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for PreviewSpecification(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25A5AC0F0);
}

uint64_t sub_25A5AC0F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PreviewSpecification.Value(0);
  long long v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t sub_25A5AC160()
{
  uint64_t result = type metadata accessor for PreviewSpecification.Value(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for PreviewSpecification.Value(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v8 = a2[3];
      a1[2] = a2[2];
      a1[3] = v8;
      a1[4] = a2[4];
      uint64_t v9 = *(int *)(type metadata accessor for RegistryID(0) + 28);
      __dst = (char *)a1 + v9;
      uint64_t v10 = (char *)a2 + v9;
      uint64_t v11 = sub_25A622310();
      uint64_t v12 = *(void *)(v11 - 8);
      uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v13(v10, 1, v11))
      {
        uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A42A518);
        memcpy(__dst, v10, *(void *)(*(void *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v12 + 16))(__dst, v10, v11);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(__dst, 0, 1, v11);
      }
      uint64_t v16 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A42A570) + 48);
      uint64_t v17 = (uint64_t *)((char *)a1 + v16);
      uint64_t v18 = (uint64_t *)((char *)a2 + v16);
      uint64_t v19 = v18[1];
      *uint64_t v17 = *v18;
      v17[1] = v19;
      uint64_t v20 = v18[3];
      void v17[2] = v18[2];
      _OWORD v17[3] = v20;
      v17[4] = v18[4];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      a1[2] = a2[2];
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for PreviewSpecification.Value(uint64_t a1)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t result = swift_bridgeObjectRelease();
  if (EnumCaseMultiPayload == 1)
  {
    swift_bridgeObjectRelease();
    uint64_t v4 = a1 + *(int *)(type metadata accessor for RegistryID(0) + 28);
    uint64_t v5 = sub_25A622310();
    uint64_t v6 = *(void *)(v5 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A42A570);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void *initializeWithCopy for PreviewSpecification.Value(void *a1, void *a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    a1[4] = a2[4];
    uint64_t v7 = *(int *)(type metadata accessor for RegistryID(0) + 28);
    __dst = (char *)a1 + v7;
    uint64_t v8 = (char *)a2 + v7;
    uint64_t v9 = sub_25A622310();
    uint64_t v10 = *(void *)(v9 - 8);
    uint64_t v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v11(v8, 1, v9))
    {
      uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A42A518);
      memcpy(__dst, v8, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(__dst, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(__dst, 0, 1, v9);
    }
    uint64_t v13 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A42A570) + 48);
    uint64_t v14 = (void *)((char *)a1 + v13);
    uint64_t v15 = (void *)((char *)a2 + v13);
    uint64_t v16 = v15[1];
    *uint64_t v14 = *v15;
    v14[1] = v16;
    uint64_t v17 = v15[3];
    void v14[2] = v15[2];
    void v14[3] = v17;
    v14[4] = v15[4];
    swift_bridgeObjectRetain();
  }
  else
  {
    a1[2] = a2[2];
  }
  swift_bridgeObjectRetain();
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *assignWithCopy for PreviewSpecification.Value(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_25A5AA220((uint64_t)a1, type metadata accessor for PreviewSpecification.Value);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *a1 = *a2;
    a1[1] = a2[1];
    if (EnumCaseMultiPayload == 1)
    {
      a1[2] = a2[2];
      a1[3] = a2[3];
      a1[4] = a2[4];
      uint64_t v5 = *(int *)(type metadata accessor for RegistryID(0) + 28);
      __dst = (char *)a1 + v5;
      uint64_t v6 = (char *)a2 + v5;
      uint64_t v7 = sub_25A622310();
      uint64_t v8 = *(void *)(v7 - 8);
      uint64_t v9 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v9(v6, 1, v7))
      {
        uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A42A518);
        memcpy(__dst, v6, *(void *)(*(void *)(v10 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v8 + 16))(__dst, v6, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(__dst, 0, 1, v7);
      }
      uint64_t v11 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A42A570) + 48);
      uint64_t v12 = (void *)((char *)a1 + v11);
      uint64_t v13 = (void *)((char *)a2 + v11);
      *uint64_t v12 = *v13;
      v12[1] = v13[1];
      v12[2] = v13[2];
      uint64_t v12[3] = v13[3];
      v12[4] = v13[4];
      swift_bridgeObjectRetain();
    }
    else
    {
      a1[2] = a2[2];
    }
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *initializeWithTake for PreviewSpecification.Value(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    long long v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    *((void *)a1 + 4) = *((void *)a2 + 4);
    uint64_t v7 = *(int *)(type metadata accessor for RegistryID(0) + 28);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_25A622310();
    uint64_t v11 = *(void *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    {
      uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A42A518);
      memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
    uint64_t v13 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A42A570) + 48);
    uint64_t v14 = (char *)a1 + v13;
    uint64_t v15 = (char *)a2 + v13;
    long long v16 = *((_OWORD *)v15 + 1);
    *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
    *((_OWORD *)v14 + 1) = v16;
    *((void *)v14 + 4) = *((void *)v15 + 4);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

_OWORD *assignWithTake for PreviewSpecification.Value(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_25A5AA220((uint64_t)a1, type metadata accessor for PreviewSpecification.Value);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      long long v6 = a2[1];
      *a1 = *a2;
      a1[1] = v6;
      *((void *)a1 + 4) = *((void *)a2 + 4);
      uint64_t v7 = *(int *)(type metadata accessor for RegistryID(0) + 28);
      uint64_t v8 = (char *)a1 + v7;
      uint64_t v9 = (char *)a2 + v7;
      uint64_t v10 = sub_25A622310();
      uint64_t v11 = *(void *)(v10 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
      {
        uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A42A518);
        memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      }
      uint64_t v13 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A42A570) + 48);
      uint64_t v14 = (char *)a1 + v13;
      uint64_t v15 = (char *)a2 + v13;
      long long v16 = *((_OWORD *)v15 + 1);
      *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
      *((_OWORD *)v14 + 1) = v16;
      *((void *)v14 + 4) = *((void *)v15 + 4);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_25A5ACC8C()
{
  v2[4] = &unk_25A629A50;
  uint64_t result = type metadata accessor for RegistryID(319);
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    v2[5] = v2;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for PreviewPayload(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    type metadata accessor for PreviewSpecification.Value(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v8 = a2[1];
    *a1 = *a2;
    a1[1] = v8;
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v9 = a2[3];
      a1[2] = a2[2];
      a1[3] = v9;
      a1[4] = a2[4];
      uint64_t v10 = *(int *)(type metadata accessor for RegistryID(0) + 28);
      __dst = (char *)a1 + v10;
      uint64_t v11 = (char *)a2 + v10;
      uint64_t v12 = sub_25A622310();
      uint64_t v13 = *(void *)(v12 - 8);
      uint64_t v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v14(v11, 1, v12))
      {
        uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A42A518);
        memcpy(__dst, v11, *(void *)(*(void *)(v15 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v13 + 16))(__dst, v11, v12);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(__dst, 0, 1, v12);
      }
      uint64_t v17 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A42A570) + 48);
      uint64_t v18 = (uint64_t *)((char *)a1 + v17);
      uint64_t v19 = (uint64_t *)((char *)a2 + v17);
      uint64_t v20 = v19[1];
      *uint64_t v18 = *v19;
      v18[1] = v20;
      uint64_t v21 = v19[3];
      v18[2] = v19[2];
      v18[3] = v21;
      v18[4] = v19[4];
      swift_bridgeObjectRetain();
    }
    else
    {
      a1[2] = a2[2];
    }
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for PreviewPayload(uint64_t a1)
{
  type metadata accessor for PreviewSpecification.Value(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  swift_bridgeObjectRelease();
  if (EnumCaseMultiPayload == 1)
  {
    swift_bridgeObjectRelease();
    uint64_t v3 = a1 + *(int *)(type metadata accessor for RegistryID(0) + 28);
    uint64_t v4 = sub_25A622310();
    uint64_t v5 = *(void *)(v4 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A42A570);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for PreviewPayload(void *a1, void *a2, uint64_t a3)
{
  type metadata accessor for PreviewSpecification.Value(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v7 = a2[1];
  *a1 = *a2;
  a1[1] = v7;
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v22 = a3;
    uint64_t v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    a1[4] = a2[4];
    uint64_t v9 = *(int *)(type metadata accessor for RegistryID(0) + 28);
    __dst = (char *)a1 + v9;
    uint64_t v10 = (char *)a2 + v9;
    uint64_t v11 = sub_25A622310();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A42A518);
      memcpy(__dst, v10, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(__dst, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(__dst, 0, 1, v11);
    }
    uint64_t v15 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A42A570) + 48);
    uint64_t v16 = (void *)((char *)a1 + v15);
    uint64_t v17 = (void *)((char *)a2 + v15);
    uint64_t v18 = v17[1];
    *uint64_t v16 = *v17;
    v16[1] = v18;
    uint64_t v19 = v17[3];
    void v16[2] = v17[2];
    v16[3] = v19;
    v16[4] = v17[4];
    swift_bridgeObjectRetain();
    a3 = v22;
  }
  else
  {
    a1[2] = a2[2];
  }
  swift_bridgeObjectRetain();
  swift_storeEnumTagMultiPayload();
  *(void *)((char *)a1 + *(int *)(a3 + 20)) = *(void *)((char *)a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for PreviewPayload(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_25A5AA220((uint64_t)a1, type metadata accessor for PreviewSpecification.Value);
    type metadata accessor for PreviewSpecification.Value(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *a1 = *a2;
    a1[1] = a2[1];
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v18 = a3;
      a1[2] = a2[2];
      a1[3] = a2[3];
      a1[4] = a2[4];
      uint64_t v7 = *(int *)(type metadata accessor for RegistryID(0) + 28);
      __dst = (char *)a1 + v7;
      uint64_t v8 = (char *)a2 + v7;
      uint64_t v9 = sub_25A622310();
      uint64_t v10 = *(void *)(v9 - 8);
      uint64_t v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v11(v8, 1, v9))
      {
        uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A42A518);
        memcpy(__dst, v8, *(void *)(*(void *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v10 + 16))(__dst, v8, v9);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(__dst, 0, 1, v9);
      }
      uint64_t v13 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A42A570) + 48);
      uint64_t v14 = (void *)((char *)a1 + v13);
      uint64_t v15 = (void *)((char *)a2 + v13);
      *uint64_t v14 = *v15;
      v14[1] = v15[1];
      void v14[2] = v15[2];
      void v14[3] = v15[3];
      v14[4] = v15[4];
      swift_bridgeObjectRetain();
      a3 = v18;
    }
    else
    {
      a1[2] = a2[2];
    }
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
  *(void *)((char *)a1 + *(int *)(a3 + 20)) = *(void *)((char *)a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *initializeWithTake for PreviewPayload(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for PreviewSpecification.Value(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    long long v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    *((void *)a1 + 4) = *((void *)a2 + 4);
    uint64_t v8 = *(int *)(type metadata accessor for RegistryID(0) + 28);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_25A622310();
    uint64_t v12 = *(void *)(v11 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A42A518);
      memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    uint64_t v14 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A42A570) + 48);
    uint64_t v15 = (char *)a1 + v14;
    uint64_t v16 = (char *)a2 + v14;
    long long v17 = *((_OWORD *)v16 + 1);
    *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
    *((_OWORD *)v15 + 1) = v17;
    *((void *)v15 + 4) = *((void *)v16 + 4);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  *(void *)((char *)a1 + *(int *)(a3 + 20)) = *(void *)((char *)a2 + *(int *)(a3 + 20));
  return a1;
}

_OWORD *assignWithTake for PreviewPayload(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_25A5AA220((uint64_t)a1, type metadata accessor for PreviewSpecification.Value);
    uint64_t v6 = type metadata accessor for PreviewSpecification.Value(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      long long v7 = a2[1];
      *a1 = *a2;
      a1[1] = v7;
      *((void *)a1 + 4) = *((void *)a2 + 4);
      uint64_t v8 = *(int *)(type metadata accessor for RegistryID(0) + 28);
      uint64_t v9 = (char *)a1 + v8;
      uint64_t v10 = (char *)a2 + v8;
      uint64_t v11 = sub_25A622310();
      uint64_t v12 = *(void *)(v11 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
      {
        uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A42A518);
        memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      }
      uint64_t v14 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A42A570) + 48);
      uint64_t v15 = (char *)a1 + v14;
      uint64_t v16 = (char *)a2 + v14;
      long long v17 = *((_OWORD *)v16 + 1);
      *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
      *((_OWORD *)v15 + 1) = v17;
      *((void *)v15 + 4) = *((void *)v16 + 4);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  *(void *)((char *)a1 + *(int *)(a3 + 20)) = *(void *)((char *)a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for PreviewPayload(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25A5AD8A4);
}

uint64_t sub_25A5AD8A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for PreviewSpecification(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for PreviewPayload(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25A5AD978);
}

uint64_t sub_25A5AD978(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for PreviewSpecification(0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

uint64_t sub_25A5ADA34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_25A5AE698(a1, a2, a3, type metadata accessor for PreviewSpecification.Value);
}

ValueMetadata *type metadata accessor for ProviderPreviewPayload()
{
  return &type metadata for ProviderPreviewPayload;
}

uint64_t _s19PreviewsMessagingOS6FileIDVwet_0(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_25A5ADAC4(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FileID()
{
  return &type metadata for FileID;
}

uint64_t *initializeBufferWithCopyOfBuffer for RegistryPayload(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    a1[4] = a2[4];
    uint64_t v9 = *(int *)(type metadata accessor for RegistryID(0) + 28);
    __dst = (char *)v4 + v9;
    unint64_t v10 = (char *)a2 + v9;
    uint64_t v11 = sub_25A622310();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A42A518);
      memcpy(__dst, v10, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(__dst, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(__dst, 0, 1, v11);
    }
    uint64_t v16 = *(int *)(a3 + 20);
    long long v17 = (uint64_t *)((char *)v4 + v16);
    uint64_t v18 = (uint64_t *)((char *)a2 + v16);
    uint64_t v19 = v18[1];
    *long long v17 = *v18;
    v17[1] = v19;
    uint64_t v20 = v18[3];
    void v17[2] = v18[2];
    _OWORD v17[3] = v20;
    v17[4] = v18[4];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for RegistryPayload(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v2 = a1 + *(int *)(type metadata accessor for RegistryID(0) + 28);
  uint64_t v3 = sub_25A622310();
  uint64_t v4 = *(void *)(v3 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3)) {
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  }
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for RegistryPayload(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  uint64_t v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  a1[4] = a2[4];
  uint64_t v7 = *(int *)(type metadata accessor for RegistryID(0) + 28);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_25A622310();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A42A518);
    memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v14 = *(int *)(a3 + 20);
  uint64_t v15 = (void *)((char *)a1 + v14);
  uint64_t v16 = (void *)((char *)a2 + v14);
  uint64_t v17 = v16[1];
  *uint64_t v15 = *v16;
  v15[1] = v17;
  uint64_t v18 = v16[3];
  v15[2] = v16[2];
  v15[3] = v18;
  void v15[4] = v16[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for RegistryPayload(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  uint64_t v6 = *(int *)(type metadata accessor for RegistryID(0) + 28);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_25A622310();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A42A518);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  uint64_t v15 = *(int *)(a3 + 20);
  uint64_t v16 = (void *)((char *)a1 + v15);
  uint64_t v17 = (void *)((char *)a2 + v15);
  *uint64_t v16 = *(void *)((char *)a2 + v15);
  v16[1] = *(void *)((char *)a2 + v15 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  void v16[2] = v17[2];
  v16[3] = v17[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16[4] = v17[4];
  return a1;
}

uint64_t initializeWithTake for RegistryPayload(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v7 = *(int *)(type metadata accessor for RegistryID(0) + 28);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = sub_25A622310();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A42A518);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v13 = *(int *)(a3 + 20);
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  long long v16 = *(_OWORD *)(v15 + 16);
  *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
  *(_OWORD *)(v14 + 16) = v16;
  *(void *)(v14 + 32) = *(void *)(v15 + 32);
  return a1;
}

void *assignWithTake for RegistryPayload(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  uint64_t v8 = *(int *)(type metadata accessor for RegistryID(0) + 28);
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = sub_25A622310();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48);
  int v14 = v13(v9, 1, v11);
  int v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 40))(v9, v10, v11);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v9, v11);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A42A518);
    memcpy(v9, v10, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
LABEL_7:
  uint64_t v17 = *(int *)(a3 + 20);
  uint64_t v18 = (void *)((char *)a1 + v17);
  uint64_t v19 = (void *)((char *)a2 + v17);
  uint64_t v20 = v19[1];
  *uint64_t v18 = *v19;
  v18[1] = v20;
  swift_bridgeObjectRelease();
  uint64_t v21 = v19[3];
  v18[2] = v19[2];
  v18[3] = v21;
  swift_bridgeObjectRelease();
  v18[4] = v19[4];
  return a1;
}

uint64_t getEnumTagSinglePayload for RegistryPayload(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25A5AE4E0);
}

uint64_t sub_25A5AE4E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for RegistryID(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for RegistryPayload(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25A5AE5B8);
}

uint64_t sub_25A5AE5B8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for RegistryID(0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t sub_25A5AE678(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_25A5AE698(a1, a2, a3, type metadata accessor for RegistryID);
}

uint64_t sub_25A5AE698(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t result = a4(319);
  if (v5 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for MainPreviewPayload()
{
  return &type metadata for MainPreviewPayload;
}

uint64_t destroy for CFunctionBundle(uint64_t a1)
{
  return sub_25A5AA4F4(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t _s19PreviewsMessagingOS15CFunctionBundleOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_25A5AA4DC(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for CFunctionBundle(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_25A5AA4DC(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  unsigned __int8 v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_25A5AA4F4(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for CFunctionBundle(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  unsigned __int8 v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_25A5AA4F4(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for CFunctionBundle(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 2) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for CFunctionBundle(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)uint64_t result = a2 - 254;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_25A5AE8C8(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 1u) {
    return *(unsigned __int8 *)(a1 + 16);
  }
  else {
    return (*(_DWORD *)a1 + 2);
  }
}

uint64_t sub_25A5AE8E0(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(void *)uint64_t result = a2 - 2;
    *(void *)(result + 8) = 0;
    LOBYTE(a2) = 2;
  }
  *(unsigned char *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for CFunctionBundle()
{
  return &type metadata for CFunctionBundle;
}

unint64_t initializeBufferWithCopyOfBuffer for CFunctionPayload(unint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = v16 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v7 = *(void *)a2;
    uint64_t v8 = *(void *)(a2 + 8);
    unsigned __int8 v9 = *(unsigned char *)(a2 + 16);
    sub_25A5AA4DC(*(void *)a2, v8, v9);
    *(void *)a1 = v7;
    *(void *)(a1 + 8) = v8;
    *(unsigned char *)(a1 + 16) = v9;
    uint64_t v10 = *(void *)(a2 + 32);
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    *(void *)(a1 + 32) = v10;
    uint64_t v11 = *(int *)(a3 + 24);
    uint64_t v12 = a1 + v11;
    uint64_t v13 = a2 + v11;
    uint64_t v14 = sub_25A6227C0();
    int v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16);
    swift_bridgeObjectRetain();
    v15(v12, v13, v14);
    *(unsigned char *)(a1 + *(int *)(a3 + 28)) = *(unsigned char *)(a2 + *(int *)(a3 + 28));
  }
  return a1;
}

uint64_t destroy for CFunctionPayload(uint64_t a1, uint64_t a2)
{
  sub_25A5AA4F4(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_25A6227C0();
  unsigned __int8 v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

uint64_t initializeWithCopy for CFunctionPayload(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)a2;
  uint64_t v7 = *(void *)(a2 + 8);
  unsigned __int8 v8 = *(unsigned char *)(a2 + 16);
  sub_25A5AA4DC(*(void *)a2, v7, v8);
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v7;
  *(unsigned char *)(a1 + 16) = v8;
  uint64_t v9 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v9;
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = sub_25A6227C0();
  uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16);
  swift_bridgeObjectRetain();
  v14(v11, v12, v13);
  *(unsigned char *)(a1 + *(int *)(a3 + 28)) = *(unsigned char *)(a2 + *(int *)(a3 + 28));
  return a1;
}

uint64_t assignWithCopy for CFunctionPayload(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)a2;
  uint64_t v7 = *(void *)(a2 + 8);
  unsigned __int8 v8 = *(unsigned char *)(a2 + 16);
  sub_25A5AA4DC(*(void *)a2, v7, v8);
  uint64_t v9 = *(void *)a1;
  uint64_t v10 = *(void *)(a1 + 8);
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v7;
  unsigned __int8 v11 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v8;
  sub_25A5AA4F4(v9, v10, v11);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v12 = *(int *)(a3 + 24);
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = sub_25A6227C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 24))(v13, v14, v15);
  *(unsigned char *)(a1 + *(int *)(a3 + 28)) = *(unsigned char *)(a2 + *(int *)(a3 + 28));
  return a1;
}

uint64_t initializeWithTake for CFunctionPayload(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_25A6227C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  *(unsigned char *)(a1 + *(int *)(a3 + 28)) = *(unsigned char *)(a2 + *(int *)(a3 + 28));
  return a1;
}

uint64_t assignWithTake for CFunctionPayload(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v6 = *(unsigned char *)(a2 + 16);
  uint64_t v7 = *(void *)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  unsigned __int8 v9 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v6;
  sub_25A5AA4F4(v7, v8, v9);
  uint64_t v10 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_25A6227C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  *(unsigned char *)(a1 + *(int *)(a3 + 28)) = *(unsigned char *)(a2 + *(int *)(a3 + 28));
  return a1;
}

uint64_t getEnumTagSinglePayload for CFunctionPayload(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25A5AEDE0);
}

uint64_t sub_25A5AEDE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 32);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_25A6227C0();
    unsigned __int8 v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for CFunctionPayload(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25A5AEEA4);
}

uint64_t sub_25A5AEEA4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 32) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_25A6227C0();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_25A5AEF4C()
{
  uint64_t result = sub_25A6227C0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t destroy for StaticLayerHostPayload(uint64_t a1)
{
  sub_25A59C134(*(void *)(a1 + 40), *(void *)(a1 + 48));
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for StaticLayerHostPayload(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 40);
  unint64_t v6 = *(void *)(a2 + 48);
  sub_25A59FB7C(v5, v6);
  *(void *)(a1 + 40) = v5;
  *(void *)(a1 + 48) = v6;
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  uint64_t v7 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v7;
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for StaticLayerHostPayload(uint64_t a1, long long *a2)
{
  long long v4 = *a2;
  long long v5 = a2[1];
  *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
  *(_OWORD *)a1 = v4;
  *(_OWORD *)(a1 + 16) = v5;
  uint64_t v6 = *((void *)a2 + 5);
  unint64_t v7 = *((void *)a2 + 6);
  sub_25A59FB7C(v6, v7);
  uint64_t v8 = *(void *)(a1 + 40);
  unint64_t v9 = *(void *)(a1 + 48);
  *(void *)(a1 + 40) = v6;
  *(void *)(a1 + 48) = v7;
  sub_25A59C134(v8, v9);
  *(void *)(a1 + 56) = *((void *)a2 + 7);
  *(void *)(a1 + 64) = *((void *)a2 + 8);
  *(void *)(a1 + 72) = *((void *)a2 + 9);
  *(_DWORD *)(a1 + 80) = *((_DWORD *)a2 + 20);
  *(void *)(a1 + 88) = *((void *)a2 + 11);
  *(void *)(a1 + 96) = *((void *)a2 + 12);
  *(void *)(a1 + 104) = *((void *)a2 + 13);
  *(void *)(a1 + 112) = *((void *)a2 + 14);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 120) = *((void *)a2 + 15);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 128) = *((void *)a2 + 16);
  *(void *)(a1 + 136) = *((void *)a2 + 17);
  return a1;
}

__n128 __swift_memcpy144_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  long long v2 = *(_OWORD *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  __n128 result = *(__n128 *)(a2 + 80);
  long long v6 = *(_OWORD *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v7;
  *(__n128 *)(a1 + 80) = result;
  *(_OWORD *)(a1 + 96) = v6;
  return result;
}

uint64_t assignWithTake for StaticLayerHostPayload(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  unint64_t v6 = *(void *)(a1 + 48);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  sub_25A59C134(v5, v6);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  return a1;
}

uint64_t getEnumTagSinglePayload for StaticLayerHostPayload(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 144)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 112);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for StaticLayerHostPayload(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 136) = 0;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 144) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 112) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 144) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StaticLayerHostPayload()
{
  return &type metadata for StaticLayerHostPayload;
}

uint64_t destroy for NSPreviewHostablePreviewReply(uint64_t a1)
{
  sub_25A59C134(*(void *)(a1 + 64), *(void *)(a1 + 72));
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for NSPreviewHostablePreviewReply(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  uint64_t v5 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  unint64_t v6 = *(void *)(a2 + 72);
  sub_25A59FB7C(v5, v6);
  *(void *)(a1 + 64) = v5;
  *(void *)(a1 + 72) = v6;
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(_DWORD *)(a1 + 104) = *(_DWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  uint64_t v7 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v7;
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for NSPreviewHostablePreviewReply(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_DWORD *)(a1 + 12) = *(_DWORD *)(a2 + 12);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = *(_DWORD *)(a2 + 20);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 28) = *(_DWORD *)(a2 + 28);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  uint64_t v4 = *(void *)(a2 + 64);
  unint64_t v5 = *(void *)(a2 + 72);
  sub_25A59FB7C(v4, v5);
  uint64_t v6 = *(void *)(a1 + 64);
  unint64_t v7 = *(void *)(a1 + 72);
  *(void *)(a1 + 64) = v4;
  *(void *)(a1 + 72) = v5;
  sub_25A59C134(v6, v7);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(_DWORD *)(a1 + 104) = *(_DWORD *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  return a1;
}

uint64_t assignWithTake for NSPreviewHostablePreviewReply(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  uint64_t v5 = *(void *)(a1 + 64);
  unint64_t v6 = *(void *)(a1 + 72);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  sub_25A59C134(v5, v6);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(_DWORD *)(a1 + 104) = *(_DWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  return a1;
}

uint64_t getEnumTagSinglePayload for NSPreviewHostablePreviewReply(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 168)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 136);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for NSPreviewHostablePreviewReply(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 168) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 136) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 168) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NSPreviewHostablePreviewReply()
{
  return &type metadata for NSPreviewHostablePreviewReply;
}

uint64_t destroy for RenderPayload(uint64_t a1)
{
  sub_25A59C134(*(void *)a1, *(void *)(a1 + 8));
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for RenderPayload(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  unint64_t v5 = *(void *)(a2 + 8);
  sub_25A59FB7C(*(void *)a2, v5);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  uint64_t v6 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v6;
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for RenderPayload(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  unint64_t v5 = *(void *)(a2 + 8);
  sub_25A59FB7C(*(void *)a2, v5);
  uint64_t v6 = *(void *)a1;
  unint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  sub_25A59C134(v6, v7);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  return a1;
}

__n128 __swift_memcpy104_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  __n128 result = (__n128)a2[3];
  long long v5 = a2[4];
  long long v6 = a2[5];
  *(void *)(a1 + 96) = *((void *)a2 + 12);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  *(__n128 *)(a1 + 48) = result;
  return result;
}

uint64_t assignWithTake for RenderPayload(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a1;
  unint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  sub_25A59C134(v4, v5);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  return a1;
}

uint64_t getEnumTagSinglePayload for RenderPayload(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 104)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 72);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RenderPayload(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 104) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 72) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 104) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MacOSSnapshotPayload()
{
  return &type metadata for MacOSSnapshotPayload;
}

ValueMetadata *type metadata accessor for MacOSSnapshotPayload.Key()
{
  return &type metadata for MacOSSnapshotPayload.Key;
}

ValueMetadata *type metadata accessor for NSPreviewHostablePreviewReply.Key()
{
  return &type metadata for NSPreviewHostablePreviewReply.Key;
}

ValueMetadata *type metadata accessor for StaticLayerHostPayload.Key()
{
  return &type metadata for StaticLayerHostPayload.Key;
}

ValueMetadata *type metadata accessor for CFunctionPayload.Key()
{
  return &type metadata for CFunctionPayload.Key;
}

ValueMetadata *type metadata accessor for CFunctionBundle.Discriminant()
{
  return &type metadata for CFunctionBundle.Discriminant;
}

ValueMetadata *type metadata accessor for CFunctionBundle.Key()
{
  return &type metadata for CFunctionBundle.Key;
}

ValueMetadata *type metadata accessor for MainPreviewPayload.Key()
{
  return &type metadata for MainPreviewPayload.Key;
}

ValueMetadata *type metadata accessor for RegistryPayload.Key()
{
  return &type metadata for RegistryPayload.Key;
}

ValueMetadata *type metadata accessor for FileID.Key()
{
  return &type metadata for FileID.Key;
}

unsigned char *_s19PreviewsMessagingOS15CFunctionBundleO12DiscriminantOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *__n128 result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25A5AFB04);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ProviderPreviewPayload.Key()
{
  return &type metadata for ProviderPreviewPayload.Key;
}

ValueMetadata *type metadata accessor for PreviewPayload.Key()
{
  return &type metadata for PreviewPayload.Key;
}

ValueMetadata *type metadata accessor for PreviewSpecification.Value.Discriminant()
{
  return &type metadata for PreviewSpecification.Value.Discriminant;
}

unsigned char *_s19PreviewsMessagingOS29NSPreviewHostablePreviewReplyV3KeyOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *__n128 result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25A5AFC28);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PreviewSpecification.Value.Key()
{
  return &type metadata for PreviewSpecification.Value.Key;
}

unsigned char *_s19PreviewsMessagingOS22StaticLayerHostPayloadV3KeyOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25A5AFD2CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RuntimeRegistryLocation.Key()
{
  return &type metadata for RuntimeRegistryLocation.Key;
}

unsigned char *_s19PreviewsMessagingOS16CFunctionPayloadV3KeyOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *__n128 result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25A5AFE30);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RegistryID.Key()
{
  return &type metadata for RegistryID.Key;
}

unsigned char *_s19PreviewsMessagingOS20MacOSSnapshotPayloadV3KeyOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *__n128 result = a2;
        return result;
      case 2:
        *(_WORD *)__n128 result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)__n128 result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *__n128 result = 0;
      break;
    case 2:
      *(_WORD *)__n128 result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x25A5AFF04);
    case 4:
      *(_DWORD *)__n128 result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ProviderPayload.Key()
{
  return &type metadata for ProviderPayload.Key;
}

unint64_t sub_25A5AFF40()
{
  unint64_t result = qword_26A42A6B0;
  if (!qword_26A42A6B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42A6B0);
  }
  return result;
}

unint64_t sub_25A5AFF98()
{
  unint64_t result = qword_26A42A6B8;
  if (!qword_26A42A6B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42A6B8);
  }
  return result;
}

unint64_t sub_25A5AFFF0()
{
  unint64_t result = qword_26A42A6C0;
  if (!qword_26A42A6C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42A6C0);
  }
  return result;
}

unint64_t sub_25A5B0048()
{
  unint64_t result = qword_26A42A6C8;
  if (!qword_26A42A6C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42A6C8);
  }
  return result;
}

unint64_t sub_25A5B00A0()
{
  unint64_t result = qword_26A42A6D0;
  if (!qword_26A42A6D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42A6D0);
  }
  return result;
}

unint64_t sub_25A5B00F8()
{
  unint64_t result = qword_26A42A6D8;
  if (!qword_26A42A6D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42A6D8);
  }
  return result;
}

unint64_t sub_25A5B0150()
{
  unint64_t result = qword_26A42A6E0;
  if (!qword_26A42A6E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42A6E0);
  }
  return result;
}

unint64_t sub_25A5B01A8()
{
  unint64_t result = qword_26A42A6E8;
  if (!qword_26A42A6E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42A6E8);
  }
  return result;
}

unint64_t sub_25A5B0200()
{
  unint64_t result = qword_26A42A6F0;
  if (!qword_26A42A6F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42A6F0);
  }
  return result;
}

unint64_t sub_25A5B0258()
{
  unint64_t result = qword_26A42A6F8;
  if (!qword_26A42A6F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42A6F8);
  }
  return result;
}

unint64_t sub_25A5B02B0()
{
  unint64_t result = qword_26A42A700;
  if (!qword_26A42A700)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42A700);
  }
  return result;
}

unint64_t sub_25A5B0308()
{
  unint64_t result = qword_26A42A708;
  if (!qword_26A42A708)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42A708);
  }
  return result;
}

unint64_t sub_25A5B0360()
{
  unint64_t result = qword_26A42A710;
  if (!qword_26A42A710)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42A710);
  }
  return result;
}

unint64_t sub_25A5B03B8()
{
  unint64_t result = qword_26A42A718;
  if (!qword_26A42A718)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42A718);
  }
  return result;
}

unint64_t sub_25A5B0410()
{
  unint64_t result = qword_26A42A720;
  if (!qword_26A42A720)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42A720);
  }
  return result;
}

unint64_t sub_25A5B0468()
{
  unint64_t result = qword_26A42A728;
  if (!qword_26A42A728)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42A728);
  }
  return result;
}

unint64_t sub_25A5B04BC()
{
  unint64_t result = qword_26A42A730;
  if (!qword_26A42A730)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42A730);
  }
  return result;
}

unint64_t sub_25A5B0510()
{
  unint64_t result = qword_26A42A738;
  if (!qword_26A42A738)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42A738);
  }
  return result;
}

uint64_t sub_25A5B0564()
{
  unint64_t v0 = sub_25A6232B0();
  swift_bridgeObjectRelease();
  if (v0 >= 4) {
    return 4;
  }
  else {
    return v0;
  }
}

unint64_t sub_25A5B05AC()
{
  unint64_t result = qword_26A42A740;
  if (!qword_26A42A740)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42A740);
  }
  return result;
}

uint64_t sub_25A5B0600(uint64_t a1)
{
  return a1;
}

unint64_t sub_25A5B064C()
{
  unint64_t result = qword_26A42A758;
  if (!qword_26A42A758)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42A758);
  }
  return result;
}

uint64_t sub_25A5B06DC(uint64_t a1)
{
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 40) = v1;
  return MEMORY[0x270FA2498](sub_25A5B06FC, 0, 0);
}

uint64_t sub_25A5B06FC()
{
  uint64_t v1 = v0[5];
  v0[6] = *(void *)(v1 + 8);
  v0[7] = *(void *)(v1 + 16);
  swift_bridgeObjectRetain();
  uint64_t v2 = swift_task_alloc();
  v0[8] = v2;
  *(void *)(v2 + 16) = v1;
  int v3 = (void *)swift_task_alloc();
  v0[9] = v3;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A429298);
  *int v3 = v0;
  v3[1] = sub_25A5B080C;
  return MEMORY[0x270FA2360](v0 + 2, 0, 0, 0x7265646E6573, 0xE600000000000000, sub_25A550374, v2, v4);
}

uint64_t sub_25A5B080C()
{
  *(void *)(*(void *)v1 + 80) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_25A5B09D4;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_25A5B0928;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_25A5B0928()
{
  uint64_t v1 = *(void *)(v0 + 48);
  uint64_t v2 = *(void *)(v0 + 56);
  uint64_t v3 = *(void *)(v0 + 32);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = *(_OWORD *)(v0 + 16);
  *(void *)uint64_t v3 = v1;
  *(void *)(v3 + 8) = v2;
  *(void *)(v3 + 16) = sub_25A5B6498;
  *(void *)(v3 + 24) = v4;
  *(_OWORD *)(v3 + 32) = xmmword_25A62A950;
  uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

uint64_t sub_25A5B09D4()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_25A5B0A40(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A429D70);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for LazyPropertyList();
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_25A622C70();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25A622C50();
  sub_25A5B612C((uint64_t)v3);
  swift_bridgeObjectRetain();
  sub_25A5B612C((uint64_t)v3);
  swift_bridgeObjectRetain();
  uint64_t v16 = sub_25A622C60();
  os_log_type_t v17 = sub_25A623120();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v18 = swift_slowAlloc();
    uint64_t v33 = a1;
    uint64_t v19 = v18;
    uint64_t v29 = swift_slowAlloc();
    uint64_t v36 = v29;
    *(_DWORD *)uint64_t v19 = 136446466;
    char v31 = v11;
    uint64_t v32 = v8;
    uint64_t v30 = v12;
    uint64_t v21 = *v3;
    unint64_t v20 = v3[1];
    swift_bridgeObjectRetain();
    uint64_t v34 = sub_25A58497C(v21, v20, &v36);
    sub_25A623190();
    swift_bridgeObjectRelease();
    sub_25A5B6178((uint64_t)v3);
    sub_25A5B6178((uint64_t)v3);
    *(_WORD *)(v19 + 12) = 2082;
    uint64_t v34 = v33;
    uint64_t v35 = a2;
    swift_bridgeObjectRetain();
    uint64_t v22 = sub_25A622DD0();
    uint64_t v34 = sub_25A58497C(v22, v23, &v36);
    uint64_t v11 = v31;
    sub_25A623190();
    swift_bridgeObjectRelease_n();
    uint64_t v8 = v32;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_25A547000, v16, v17, "%{public}s sending one-way message: %{public}s", (uint8_t *)v19, 0x16u);
    uint64_t v24 = v29;
    swift_arrayDestroy();
    MEMORY[0x261140C30](v24, -1, -1);
    uint64_t v25 = v19;
    a1 = v33;
    MEMORY[0x261140C30](v25, -1, -1);

    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v30);
  }
  else
  {
    sub_25A5B6178((uint64_t)v3);
    sub_25A5B6178((uint64_t)v3);

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  }
  uint64_t v26 = (void (*)(char *, char *))v3[2];
  swift_retain();
  sub_25A5B0E34(a1, a2, (uint64_t)v11);
  uint64_t v27 = type metadata accessor for TransportReply();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v8, 1, 1, v27);
  v26(v11, v8);
  swift_release();
  sub_25A570C60((uint64_t)v8, &qword_26A429D70);
  return sub_25A5B6A20((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for LazyPropertyList);
}

uint64_t sub_25A5B0E34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = sub_25A6227C0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15[0] = a1;
  v15[1] = a2;
  sub_25A55C73C(v3 + 32, (uint64_t)v16, &qword_26A429458);
  uint64_t v11 = sub_25A55C73C((uint64_t)v16, (uint64_t)v17, &qword_26A429458);
  if (v17[1])
  {
    MEMORY[0x270FA5388](v11);
    v15[-4] = v13;
    v15[-3] = v12;
    v15[-2] = v15;
    sub_25A6227A0();
  }
  else
  {
    sub_25A622AF0();
  }
  (*(void (**)(uint64_t, char *, uint64_t))(v8 + 16))(a3, v10, v7);
  type metadata accessor for LazyPropertyList();
  swift_storeEnumTagMultiPayload();
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_25A5B1008(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A429D70);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for LazyPropertyList();
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_25A622C70();
  uint64_t v36 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25A622C50();
  sub_25A5B612C((uint64_t)v4);
  swift_bridgeObjectRetain();
  sub_25A5B612C((uint64_t)v4);
  swift_bridgeObjectRetain();
  os_log_type_t v17 = sub_25A622C60();
  os_log_type_t v18 = sub_25A623120();
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v19 = swift_slowAlloc();
    uint64_t v35 = a1;
    uint64_t v20 = v19;
    uint64_t v31 = swift_slowAlloc();
    uint64_t v39 = v31;
    *(_DWORD *)uint64_t v20 = 136446466;
    uint64_t v33 = a3;
    uint64_t v34 = v13;
    uint64_t v32 = v14;
    uint64_t v22 = *v4;
    unint64_t v21 = v4[1];
    swift_bridgeObjectRetain();
    uint64_t v37 = sub_25A58497C(v22, v21, &v39);
    sub_25A623190();
    swift_bridgeObjectRelease();
    sub_25A5B6178((uint64_t)v4);
    sub_25A5B6178((uint64_t)v4);
    *(_WORD *)(v20 + 12) = 2082;
    uint64_t v37 = v35;
    uint64_t v38 = a2;
    swift_bridgeObjectRetain();
    uint64_t v23 = sub_25A622DD0();
    uint64_t v37 = sub_25A58497C(v23, v24, &v39);
    a3 = v33;
    sub_25A623190();
    swift_bridgeObjectRelease_n();
    uint64_t v13 = v34;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_25A547000, v17, v18, "%{public}s sending two-way message: %{public}s", (uint8_t *)v20, 0x16u);
    uint64_t v25 = v31;
    swift_arrayDestroy();
    MEMORY[0x261140C30](v25, -1, -1);
    uint64_t v26 = v20;
    a1 = v35;
    MEMORY[0x261140C30](v26, -1, -1);

    (*(void (**)(char *, uint64_t))(v36 + 8))(v16, v32);
  }
  else
  {
    sub_25A5B6178((uint64_t)v4);
    sub_25A5B6178((uint64_t)v4);

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v36 + 8))(v16, v14);
  }
  uint64_t v27 = (void (*)(char *, char *))v4[2];
  swift_retain();
  sub_25A5B0E34(a1, a2, (uint64_t)v13);
  sub_25A5B66C8(a3, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for TransportReply);
  uint64_t v28 = type metadata accessor for TransportReply();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v10, 0, 1, v28);
  v27(v13, v10);
  swift_release();
  sub_25A570C60((uint64_t)v10, &qword_26A429D70);
  return sub_25A5B6A20((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for LazyPropertyList);
}

uint64_t sub_25A5B1428@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>, uint64_t a9)
{
  uint64_t v31 = a6;
  uint64_t v32 = a7;
  uint64_t v29 = a4;
  uint64_t v30 = a5;
  int v28 = a3;
  v27[1] = a1;
  v27[2] = a2;
  uint64_t v37 = a8;
  uint64_t v38 = a9;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(qword_26A429C58);
  uint64_t v35 = *(void *)(v9 - 8);
  uint64_t v36 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v34 = (char *)v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = sub_25A622AC0();
  uint64_t v11 = *(void *)(v33 - 8);
  MEMORY[0x270FA5388](v33);
  uint64_t v13 = (char *)v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A42A818);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(void *)(v15 + 64);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = sub_25A622C10();
  MEMORY[0x270FA5388](v17 - 8);
  v27[0] = __swift_instantiateConcreteTypeFromMangledName(&qword_26A42A830);
  uint64_t v18 = *(void *)(v27[0] - 8);
  MEMORY[0x270FA5388](v27[0]);
  uint64_t v20 = (char *)v27 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25A622C20();
  uint64_t v21 = v14;
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))((char *)v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0), v38, v14);
  unint64_t v22 = (*(unsigned __int8 *)(v15 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  uint64_t v23 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v15 + 32))(v23 + v22, (char *)v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0), v21);
  (*(void (**)(char *, void, uint64_t))(v11 + 104))(v13, *MEMORY[0x263F60560], v33);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A42A810);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A429388);
  sub_25A622650();
  type metadata accessor for LazyPropertyList();
  uint64_t v24 = v27[0];
  uint64_t v25 = v34;
  sub_25A622670();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v24);
  (*(void (**)(uint64_t, char *, uint64_t))(v35 + 32))(v37, v25, v36);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 8))(v38, v21);
}

uint64_t sub_25A5B1884@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A42A870);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25A595264(a1, (uint64_t)v6, &qword_26A42A870);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A42A878);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = 1;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) != 1)
  {
    sub_25A55C73C((uint64_t)v6, a2, &qword_26A42A878);
    uint64_t v9 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(a2, v9, 1, v7);
}

uint64_t sub_25A5B19B8(uint64_t a1, uint64_t a2)
{
  uint64_t v53 = a1;
  uint64_t v45 = type metadata accessor for AsyncMessageStream.Event(0);
  MEMORY[0x270FA5388](v45);
  uint64_t v43 = (uint64_t (**)())((char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A429280);
  uint64_t v46 = *(void *)(v47 - 8);
  MEMORY[0x270FA5388](v47);
  unsigned __int8 v44 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A42A8B0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = *(void *)(a2 + 8);
  uint64_t v10 = *(void *)(a2 + 16);
  uint64_t v60 = a2;
  uint64_t v61 = v10;
  uint64_t v59 = type metadata accessor for AsyncMessageStream(0);
  uint64_t v64 = v59;
  uint64_t v48 = (void (*)(uint64_t))type metadata accessor for AsyncMessageStream;
  uint64_t v11 = sub_25A5B6970(&qword_26A4292A0, (void (*)(uint64_t))type metadata accessor for AsyncMessageStream);
  uint64_t v65 = v11;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v63);
  sub_25A5B66C8(a2, (uint64_t)boxed_opaque_existential_1, type metadata accessor for AsyncMessageStream);
  uint64_t v54 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  uint64_t v52 = v7 + 16;
  v54(v9, a1, v6);
  uint64_t v13 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v14 = (v13 + 16) & ~v13;
  uint64_t v51 = v14;
  uint64_t v57 = v13 | 7;
  uint64_t v58 = v14 + v8;
  uint64_t v15 = swift_allocObject();
  uint64_t v16 = *(void (**)(uint64_t, char *, uint64_t))(v7 + 32);
  v16(v15 + v14, v9, v6);
  sub_25A585248((uint64_t)v63, (uint64_t)v62);
  uint64_t v17 = swift_allocObject();
  uint64_t v55 = v17;
  *(void *)(v17 + 16) = sub_25A5B673C;
  *(void *)(v17 + 24) = v15;
  sub_25A5852B0(v62, v17 + 32);
  uint64_t v18 = v61;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v63);
  uint64_t v64 = v59;
  uint64_t v65 = v11;
  uint64_t v19 = __swift_allocate_boxed_opaque_existential_1(v63);
  sub_25A5B66C8(v60, (uint64_t)v19, type metadata accessor for AsyncMessageStream);
  uint64_t v49 = v9;
  uint64_t v20 = v53;
  uint64_t v50 = v6;
  uint64_t v21 = v54;
  v54(v9, v53, v6);
  uint64_t v22 = swift_allocObject();
  uint64_t v23 = v51;
  uint64_t v40 = v16;
  uint64_t v41 = v7 + 32;
  v16(v22 + v51, v9, v6);
  sub_25A585248((uint64_t)v63, (uint64_t)v62);
  uint64_t v24 = swift_allocObject();
  *(void *)(v24 + 16) = sub_25A5B673C;
  *(void *)(v24 + 24) = v22;
  uint64_t v56 = v24;
  sub_25A5852B0(v62, v24 + 32);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v63);
  uint64_t v25 = (uint64_t (*)(uint64_t, uint64_t))swift_allocObject();
  *((void *)v25 + 2) = v42;
  *((void *)v25 + 3) = v18;
  uint64_t v26 = v55;
  *((void *)v25 + 4) = sub_25A5B6758;
  *((void *)v25 + 5) = v26;
  *((void *)v25 + 6) = sub_25A5B6824;
  *((void *)v25 + 7) = v24;
  uint64_t v27 = v49;
  uint64_t v28 = v20;
  uint64_t v29 = v50;
  v21(v49, v28, v50);
  uint64_t v30 = swift_allocObject();
  v16(v30 + v23, v27, v29);
  uint64_t v31 = (uint64_t (**)(uint64_t, uint64_t))v43;
  void *v43 = sub_25A5B689C;
  v31[1] = (uint64_t (*)(uint64_t, uint64_t))v30;
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A429288);
  uint64_t v32 = v44;
  sub_25A623010();
  uint64_t v33 = *(void (**)(char *, uint64_t))(v46 + 8);
  uint64_t v34 = v47;
  v33(v32, v47);
  *uint64_t v31 = sub_25A5B6888;
  v31[1] = v25;
  swift_storeEnumTagMultiPayload();
  swift_retain();
  sub_25A623010();
  v33(v32, v34);
  swift_release();
  swift_release();
  uint64_t v35 = v49;
  uint64_t v36 = v50;
  v54(v49, v53, v50);
  uint64_t v37 = swift_allocObject();
  v40(v37 + v51, v35, v36);
  sub_25A5B6970(&qword_26A4292C0, v48);
  sub_25A622AE0();
  swift_release();
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_25A5B2054(uint64_t a1, uint64_t a2)
{
  v17[1] = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A42A878);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A42A870);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A42A8B8);
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = a1;
  sub_25A595264(a1, (uint64_t)v9, &qword_26A42A878);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v4 + 56))(v9, 0, 1, v3);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A42A8B0);
  sub_25A623010();
  LODWORD(a1) = (*(uint64_t (**)(char *, uint64_t))(v11 + 88))(v13, v10);
  LODWORD(v3) = *MEMORY[0x263F8F550];
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  if (a1 == v3)
  {
    sub_25A595264(v14, (uint64_t)v6, &qword_26A42A878);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A42A8C0);
    sub_25A55DAA4(qword_26A42A8C8, &qword_26A42A8C0);
    swift_allocError();
    sub_25A55C73C((uint64_t)v6, v16, &qword_26A42A878);
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_25A5B230C()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A42A870);
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v2 = (char *)&v9 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A42A8B8);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A42A878);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v2, 1, 1, v7);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A42A8B0);
  sub_25A623010();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_25A5B247C(uint64_t a1, void *a2)
{
  uint64_t v4 = sub_25A6227C0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v25[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v6);
  uint64_t v11 = (char *)&v25[-1] - v10;
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v25[-1] - v12;
  uint64_t result = swift_conformsToProtocol2();
  if (result)
  {
    uint64_t v15 = result;
    uint64_t result = LazyPropertyList.propertyList.getter((uint64_t)v13);
    if (!v2)
    {
      uint64_t v24 = v5;
      uint64_t v29 = v4;
      uint64_t v17 = a2[3];
      uint64_t v16 = a2[4];
      __swift_project_boxed_opaque_existential_1(a2, v17);
      uint64_t v18 = (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 40))(v17, v16);
      if (v19)
      {
        uint64_t v20 = v18;
        uint64_t v21 = v19;
        uint64_t v22 = v24;
        uint64_t v23 = v29;
        (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v11, v13, v29);
        uint64_t v26 = MEMORY[0x263F8D310];
        uint64_t v27 = v15;
        __swift_allocate_boxed_opaque_existential_1(v25);
        sub_25A583628(v20, v21, (uint64_t)v11);
      }
      else
      {
        uint64_t v22 = v24;
        uint64_t v23 = v29;
        (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v8, v13, v29);
        uint64_t v26 = MEMORY[0x263F8D310];
        uint64_t v27 = v15;
        __swift_allocate_boxed_opaque_existential_1(v25);
        sub_25A622B00();
      }
      (*(void (**)(char *, uint64_t))(v22 + 8))(v13, v23);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A429E80);
      swift_dynamicCast();
      return v28;
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_25A5B2738(uint64_t a1, void (*a2)(uint64_t *), uint64_t a3, void *a4)
{
  uint64_t v7 = sub_25A622C70();
  MEMORY[0x270FA5388](v7);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A42A878);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (uint64_t *)((char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  *uint64_t v10 = sub_25A5B247C(a1, a4);
  v10[1] = v11;
  swift_storeEnumTagMultiPayload();
  a2(v10);
  return sub_25A570C60((uint64_t)v10, &qword_26A42A878);
}

uint64_t sub_25A5B2A10(uint64_t a1, uint64_t a2, void (*a3)(uint64_t *), uint64_t a4, void *a5)
{
  uint64_t v21 = a3;
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A429D78);
  MEMORY[0x270FA5388](v25);
  uint64_t v8 = sub_25A622C10();
  MEMORY[0x270FA5388](v8);
  uint64_t v24 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_25A622C70();
  uint64_t v22 = *(void *)(v10 - 8);
  uint64_t v23 = v10;
  MEMORY[0x270FA5388](v10);
  uint64_t v26 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A42A878);
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (uint64_t *)((char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = sub_25A5B247C(a1, a5);
  uint64_t v17 = v16;
  uint64_t v18 = (uint64_t)v14 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A42A8A8) + 48);
  *uint64_t v14 = v15;
  v14[1] = v17;
  sub_25A5B66C8(a2, v18, (uint64_t (*)(void))type metadata accessor for TransportReply);
  swift_storeEnumTagMultiPayload();
  v21(v14);
  return sub_25A570C60((uint64_t)v14, &qword_26A42A878);
}

uint64_t sub_25A5B2E94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unsigned __int8 a10)
{
  v26[1] = a3;
  uint64_t v31 = a7;
  uint64_t v32 = a8;
  uint64_t v30 = a6;
  int v29 = a5;
  v26[2] = a4;
  uint64_t v28 = a9;
  int v27 = a10;
  uint64_t v33 = sub_25A6227C0();
  uint64_t v12 = *(void *)(v33 - 8);
  MEMORY[0x270FA5388](v33);
  uint64_t v14 = (char *)v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A429D78);
  MEMORY[0x270FA5388](v34);
  uint64_t v16 = (char *)v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = sub_25A622C10();
  uint64_t v17 = *(void *)(v35 - 8);
  MEMORY[0x270FA5388](v35);
  uint64_t v19 = (char *)v26 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(qword_26A429C58);
  uint64_t v21 = *(void *)(v20 - 8);
  MEMORY[0x270FA5388](v20);
  uint64_t v23 = (char *)v26 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = a1;
  uint64_t v37 = a2;
  (*(void (**)(char *, void, uint64_t))(v21 + 16))(v23, v26[0], v20);
  sub_25A622C20();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A42A810);
  sub_25A55DAA4(&qword_26A42A838, &qword_26A42A810);
  sub_25A622AF0();
  uint64_t v24 = v33;
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v16, v14, v33);
  type metadata accessor for LazyPropertyList();
  swift_storeEnumTagMultiPayload();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v24);
  swift_storeEnumTagMultiPayload();
  sub_25A622640();
  sub_25A570C60((uint64_t)v16, &qword_26A429D78);
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v35);
  return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v23, v20);
}

void static MessageStreamInstanceIdentifier.sampleMessageStream.getter(void *a1@<X8>)
{
  *a1 = 0xD00000000000001FLL;
  a1[1] = 0x800000025A637330;
}

uint64_t SampleStreamAgent.__allocating_init(messageStream:description:offset:)(uint64_t a1, uint64_t a2, uint64_t a3, double a4)
{
  uint64_t v8 = swift_allocObject();
  SampleStreamAgent.init(messageStream:description:offset:)(a1, a2, a3, a4);
  return v8;
}

uint64_t SampleStreamAgent.init(messageStream:description:offset:)(uint64_t a1, uint64_t a2, uint64_t a3, double a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = type metadata accessor for MessageStream(0);
  v26[0] = *(void *)(v10 - 8);
  v26[1] = v10;
  uint64_t v11 = *(void *)(v26[0] + 64);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A429820);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v15 = (char *)v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A429590);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_25A62A960;
  *(void *)(v16 + 32) = 0x7379656B6E6F6DLL;
  *(void *)(v16 + 40) = 0xE700000000000000;
  *(void *)(v16 + 48) = 0x73746F626F72;
  *(void *)(v16 + 56) = 0xE600000000000000;
  *(void *)(v16 + 64) = 0x73646E65697266;
  *(void *)(v16 + 72) = 0xE700000000000000;
  *(void *)(v16 + 80) = 0x736F70706968;
  *(void *)(v16 + 88) = 0xE600000000000000;
  *(void *)(v16 + 96) = 0x736C6573616577;
  *(void *)(v16 + 104) = 0xE700000000000000;
  *(void *)(v16 + 112) = 0x73746962626172;
  *(void *)(v16 + 120) = 0xE700000000000000;
  uint64_t v17 = OBJC_IVAR____TtC19PreviewsMessagingOS17SampleStreamAgent_messages;
  *(void *)(v16 + 128) = 0x7365666661726967;
  *(void *)(v16 + 136) = 0xE800000000000000;
  *(void *)(v5 + v17) = v16;
  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_25A62A970;
  *(void *)(v18 + 32) = 0x68636977646E6173;
  *(void *)(v18 + 40) = 0xEA00000000007365;
  *(void *)(v18 + 48) = 0x657365656863;
  *(void *)(v18 + 56) = 0xE600000000000000;
  *(void *)(v18 + 64) = 0x736B63616E73;
  *(void *)(v18 + 72) = 0xE600000000000000;
  *(void *)(v18 + 80) = 0x7370696E727574;
  *(void *)(v18 + 88) = 0xE700000000000000;
  *(void *)(v18 + 96) = 0x7365696B6F6F63;
  *(void *)(v18 + 104) = 0xE700000000000000;
  uint64_t v19 = OBJC_IVAR____TtC19PreviewsMessagingOS17SampleStreamAgent_replies;
  *(void *)(v18 + 112) = 0x6968636174736970;
  *(void *)(v18 + 120) = 0xEA0000000000736FLL;
  *(void *)(v5 + v19) = v18;
  sub_25A5B66C8(a1, v5 + OBJC_IVAR____TtC19PreviewsMessagingOS17SampleStreamAgent_messageStream, type metadata accessor for MessageStream);
  uint64_t v20 = (void *)(v5 + OBJC_IVAR____TtC19PreviewsMessagingOS17SampleStreamAgent_description);
  *uint64_t v20 = a2;
  v20[1] = a3;
  sub_25A5B3784(1953066601, 0xE400000000000000);
  swift_retain();
  sub_25A5B4D64((uint64_t)sub_25A5B3EA4, v5);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A42A7B0);
  uint64_t v21 = sub_25A622FD0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v15, 1, 1, v21);
  sub_25A5B66C8(a1, (uint64_t)v12, type metadata accessor for MessageStream);
  unint64_t v22 = (*(unsigned __int8 *)(v26[0] + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v26[0] + 80);
  uint64_t v23 = swift_allocObject();
  sub_25A5B69B8((uint64_t)v12, v23 + v22, type metadata accessor for MessageStream);
  sub_25A622BE0();
  swift_release();
  uint64_t v24 = swift_allocObject();
  *(void *)(v24 + 16) = v5;
  *(double *)(v24 + 24) = a4;
  swift_retain();
  sub_25A622BC0();
  swift_release();
  sub_25A5B6970(&qword_26A42A7C8, (void (*)(uint64_t))type metadata accessor for MessageStream);
  swift_retain();
  sub_25A6227D0();
  swift_release();
  swift_release();
  sub_25A5B6A20(a1, type metadata accessor for MessageStream);
  return v5;
}

uint64_t sub_25A5B3784(uint64_t a1, unint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_25A622C70();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25A622C40();
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v10 = sub_25A622C60();
  os_log_type_t v11 = sub_25A623140();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = swift_slowAlloc();
    uint64_t v19 = swift_slowAlloc();
    uint64_t v22 = v19;
    *(_DWORD *)uint64_t v12 = 136315394;
    uint64_t v18 = a1;
    uint64_t v20 = v6;
    uint64_t v14 = *(void *)(v3 + OBJC_IVAR____TtC19PreviewsMessagingOS17SampleStreamAgent_description);
    unint64_t v13 = *(void *)(v3 + OBJC_IVAR____TtC19PreviewsMessagingOS17SampleStreamAgent_description + 8);
    swift_bridgeObjectRetain();
    uint64_t v21 = sub_25A58497C(v14, v13, &v22);
    sub_25A623190();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v12 + 12) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v21 = sub_25A58497C(v18, a2, &v22);
    sub_25A623190();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_25A547000, v10, v11, "StreamAgent[%s]: %s", (uint8_t *)v12, 0x16u);
    uint64_t v15 = v19;
    swift_arrayDestroy();
    MEMORY[0x261140C30](v15, -1, -1);
    MEMORY[0x261140C30](v12, -1, -1);

    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v20);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_release_n();
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
}

unint64_t sub_25A5B3A14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v27 = a3;
  uint64_t v5 = sub_25A622390();
  uint64_t v26 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A42A890);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for MessageStream.Responder(0);
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *(void *)(a1 + 8);
  sub_25A595264(a2, (uint64_t)v10, &qword_26A42A890);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_25A570C60((uint64_t)v10, &qword_26A42A890);
    v28[0] = 0;
    v28[1] = 0xE000000000000000;
    sub_25A623210();
    swift_bridgeObjectRelease();
    v28[0] = 0xD000000000000015;
    v28[1] = 0x800000025A6374E0;
    sub_25A622E00();
    sub_25A622E00();
    sub_25A5B3784(v28[0], v28[1]);
    return swift_bridgeObjectRelease();
  }
  unint64_t result = sub_25A5B69B8((uint64_t)v10, (uint64_t)v14, type metadata accessor for MessageStream.Responder);
  uint64_t v17 = *(void *)(v27 + OBJC_IVAR____TtC19PreviewsMessagingOS17SampleStreamAgent_replies);
  unint64_t v18 = *(void *)(v17 + 16);
  if (v18)
  {
    swift_bridgeObjectRetain();
    unint64_t result = sub_25A5B5F88(v18);
    if ((result & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (result < *(void *)(v17 + 16))
    {
      uint64_t v19 = v17 + 16 * result;
      uint64_t v21 = *(void *)(v19 + 32);
      uint64_t v20 = *(void *)(v19 + 40);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v28[0] = 45;
      v28[1] = 0xE100000000000000;
      sub_25A622380();
      sub_25A5B6970(&qword_26A42A808, MEMORY[0x263F60460]);
      sub_25A623350();
      v25[1] = v15;
      uint64_t v22 = (uint64_t)v14;
      sub_25A622E00();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v26 + 8))(v7, v5);
      v28[0] = v21;
      v28[1] = v20;
      swift_bridgeObjectRetain();
      sub_25A622E00();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v24 = v28[0];
      uint64_t v23 = v28[1];
      v28[0] = 0;
      v28[1] = 0xE000000000000000;
      sub_25A623210();
      swift_bridgeObjectRelease();
      strcpy((char *)v28, "got message '");
      HIWORD(v28[1]) = -4864;
      sub_25A622E00();
      sub_25A622E00();
      sub_25A622E00();
      sub_25A622E00();
      sub_25A5B3784(v28[0], v28[1]);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_25A5B2E94(v24, v23, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/UITestingAgent/Shared/PreviewsMessaging/Sources/PreviewsMessaging/MessageStream.swift", 123, 2, 138, 32, (uint64_t)"reply(payload:)", 15, 2u);
      swift_bridgeObjectRelease();
      sub_25A5B6A20(v22, type metadata accessor for MessageStream.Responder);
      return swift_bridgeObjectRelease();
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

unint64_t sub_25A5B3EA4(uint64_t a1, uint64_t a2)
{
  return sub_25A5B3A14(a1, a2, v2);
}

uint64_t sub_25A5B3EAC(uint64_t *a1, double a2)
{
  uint64_t v4 = a1[5];
  long long v7 = *(_OWORD *)(a1 + 3);
  uint64_t v5 = *a1;
  sub_25A5B3784(0x646E657320746F67, 0xEA00000000007265);
  uint64_t v8 = v5;
  long long v9 = *(_OWORD *)(a1 + 1);
  long long v10 = v7;
  uint64_t v11 = v4;
  return sub_25A5B3F3C((long long *)&v8, a2);
}

uint64_t sub_25A5B3F3C(long long *a1, double a2)
{
  uint64_t v4 = sub_25A622C80();
  uint64_t v29 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_25A622CA0();
  uint64_t v27 = *(void *)(v7 - 8);
  uint64_t v28 = v7;
  MEMORY[0x270FA5388](v7);
  long long v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_25A622CC0();
  uint64_t v26 = v10;
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v24 - v15;
  long long v17 = a1[1];
  long long v31 = *a1;
  long long v32 = v17;
  long long v33 = a1[2];
  sub_25A5B55A8();
  unint64_t v18 = (void *)sub_25A623170();
  sub_25A622CB0();
  MEMORY[0x26113FD50](v14, a2);
  uint64_t v25 = *(void (**)(char *, uint64_t))(v11 + 8);
  v25(v14, v10);
  uint64_t v19 = swift_allocObject();
  swift_weakInit();
  uint64_t v20 = swift_allocObject();
  long long v21 = v32;
  *(_OWORD *)(v20 + 24) = v31;
  *(void *)(v20 + 16) = v19;
  *(_OWORD *)(v20 + 40) = v21;
  *(_OWORD *)(v20 + 56) = v33;
  aBlock[4] = sub_25A5B5670;
  aBlock[5] = v20;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_25A5B4C48;
  aBlock[3] = &block_descriptor;
  uint64_t v22 = _Block_copy(aBlock);
  sub_25A5B612C((uint64_t)&v31);
  swift_release();
  sub_25A622C90();
  aBlock[0] = MEMORY[0x263F8EE78];
  sub_25A5B6970(&qword_26A42A7E8, MEMORY[0x263F8F030]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A42A7F0);
  sub_25A55DAA4(&qword_26A42A7F8, &qword_26A42A7F0);
  sub_25A6231D0();
  MEMORY[0x2611401E0](v16, v9, v6, v22);
  _Block_release(v22);

  (*(void (**)(char *, uint64_t))(v29 + 8))(v6, v4);
  (*(void (**)(char *, uint64_t))(v27 + 8))(v9, v28);
  return ((uint64_t (*)(char *, uint64_t))v25)(v16, v26);
}

uint64_t SampleStreamAgent.deinit()
{
  sub_25A5B3784(0x74696E696564, 0xE600000000000000);
  sub_25A5B6A20(v0 + OBJC_IVAR____TtC19PreviewsMessagingOS17SampleStreamAgent_messageStream, type metadata accessor for MessageStream);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t SampleStreamAgent.__deallocating_deinit()
{
  sub_25A5B3784(0x74696E696564, 0xE600000000000000);
  sub_25A5B6A20(v0 + OBJC_IVAR____TtC19PreviewsMessagingOS17SampleStreamAgent_messageStream, type metadata accessor for MessageStream);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v2 = *(unsigned __int16 *)(*(void *)v0 + 52);

  return MEMORY[0x270FA0228](v0, v1, v2);
}

uint64_t sub_25A5B4490(uint64_t a1, long long *a2)
{
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    long long v3 = a2[1];
    long long v6 = *a2;
    long long v7 = v3;
    long long v8 = a2[2];
    sub_25A5B4550((uint64_t *)&v6);
    swift_release();
  }
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    long long v5 = a2[1];
    long long v6 = *a2;
    long long v7 = v5;
    long long v8 = a2[2];
    sub_25A5B3F3C(&v6, 20.0);
    return swift_release();
  }
  return result;
}

unint64_t sub_25A5B4550(uint64_t *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A429820);
  MEMORY[0x270FA5388](v3 - 8);
  long long v5 = (char *)v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for TransportReply();
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v46 = (uint64_t)v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A42A800);
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  uint64_t v45 = (char *)v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  unsigned __int8 v44 = (void *)((char *)v42 - v11);
  uint64_t v12 = sub_25A622390();
  uint64_t v13 = *(void *)(v12 - 8);
  unint64_t result = MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = v1;
  uint64_t v17 = *(void *)(v1 + OBJC_IVAR____TtC19PreviewsMessagingOS17SampleStreamAgent_messages);
  unint64_t v18 = *(void *)(v17 + 16);
  if (!v18) {
    goto LABEL_10;
  }
  unint64_t v19 = a1[1];
  uint64_t v20 = a1[2];
  uint64_t v21 = a1[3];
  uint64_t v47 = *a1;
  uint64_t v48 = v20;
  uint64_t v49 = a1[4];
  uint64_t v51 = a1[5];
  swift_bridgeObjectRetain();
  unint64_t result = sub_25A5B5F88(v18);
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (result >= *(void *)(v17 + 16))
  {
LABEL_9:
    __break(1u);
LABEL_10:
    __break(1u);
    return result;
  }
  uint64_t v50 = v21;
  uint64_t v22 = v17 + 16 * result;
  uint64_t v23 = *(void *)(v22 + 32);
  unint64_t v24 = *(void *)(v22 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v53 = 45;
  unint64_t v54 = 0xE100000000000000;
  sub_25A622380();
  sub_25A5B6970(&qword_26A42A808, MEMORY[0x263F60460]);
  sub_25A623350();
  sub_25A622E00();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
  uint64_t v53 = v23;
  unint64_t v54 = v24;
  swift_bridgeObjectRetain();
  sub_25A622E00();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v25 = v53;
  uint64_t v26 = v54;
  uint64_t v53 = 0;
  MEMORY[0x261140C40](&v53, 8);
  if ((v53 & 0x20000) != 0)
  {
    uint64_t v53 = 0;
    unint64_t v54 = 0xE000000000000000;
    sub_25A623210();
    swift_bridgeObjectRelease();
    uint64_t v53 = 0xD000000000000011;
    unint64_t v54 = 0x800000025A637480;
    sub_25A622E00();
    sub_25A622E00();
    uint64_t v43 = v5;
    sub_25A5B3784(v53, v54);
    swift_bridgeObjectRelease();
    uint64_t v53 = v47;
    unint64_t v54 = v19;
    v42[1] = v19;
    uint64_t v55 = v48;
    uint64_t v56 = v50;
    uint64_t v57 = v49;
    uint64_t v58 = v51;
    uint64_t v27 = v44;
    uint64_t v28 = (char *)v44 + *(int *)(v8 + 48);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A42A810);
    *uint64_t v27 = sub_25A6230A0();
    uint64_t v29 = (uint64_t *)v45;
    uint64_t v30 = &v45[*(int *)(v8 + 48)];
    uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A42A818);
    uint64_t v32 = v8;
    uint64_t v33 = v25;
    uint64_t v34 = *(void *)(v31 - 8);
    (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v30, v28, v31);
    uint64_t v41 = (uint64_t)v30;
    uint64_t v35 = v46;
    sub_25A5B1428((uint64_t)"/Library/Caches/com.apple.xbs/Sources/UITestingAgent/Shared/PreviewsMessaging/Sources/PreviewsMessaging/Transport+Interface.swift", 129, 2, 138, 34, (uint64_t)"send(message:expecting:)", 24, v46, v41);
    sub_25A5B1008(v33, v26, v35);
    sub_25A5B6A20(v35, (uint64_t (*)(void))type metadata accessor for TransportReply);
    uint64_t v36 = (char *)v29 + *(int *)(v32 + 48);
    uint64_t v37 = *v27;
    *uint64_t v29 = *v27;
    (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v36, v28, v31);
    (*(void (**)(char *, uint64_t))(v34 + 8))(v36, v31);
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v38 = sub_25A622FD0();
    uint64_t v39 = (uint64_t)v43;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56))(v43, 1, 1, v38);
    uint64_t v40 = (void *)swift_allocObject();
    v40[2] = 0;
    v40[3] = 0;
    v40[4] = sub_25A5B6014;
    v40[5] = v52;
    v40[6] = v37;
    swift_retain();
    sub_25A60C0D8(v39, (uint64_t)&unk_26A42A828, (uint64_t)v40);
    swift_bridgeObjectRelease();
    swift_release();
    return swift_release();
  }
  else
  {
    uint64_t v53 = 0;
    unint64_t v54 = 0xE000000000000000;
    sub_25A623210();
    swift_bridgeObjectRelease();
    uint64_t v53 = 0xD000000000000019;
    unint64_t v54 = 0x800000025A6374A0;
    sub_25A622E00();
    sub_25A622E00();
    sub_25A5B3784(v53, v54);
    swift_bridgeObjectRelease();
    uint64_t v53 = v47;
    unint64_t v54 = v19;
    uint64_t v55 = v48;
    uint64_t v56 = v50;
    uint64_t v57 = v49;
    uint64_t v58 = v51;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    sub_25A5B0A40(v25, v26);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_25A5B4C48(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  v1(v2);

  return swift_release();
}

uint64_t sub_25A5B4C8C()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_25A5B4D64(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v31 = a1;
  uint64_t v32 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A429820);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v30 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A42A858);
  uint64_t v6 = *(void *)(v28 - 8);
  MEMORY[0x270FA5388](v28);
  uint64_t v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A42A860);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A42A868);
  uint64_t v13 = *(void *)(v29 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  uint64_t v15 = MEMORY[0x270FA5388](v29);
  uint64_t v16 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  unint64_t v18 = (char *)&v27 - v17;
  uint64_t v33 = v3 + *(int *)(type metadata accessor for MessageStream(0) + 20);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A42A870);
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x263F8F580], v28);
  sub_25A623090();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A42A878);
  sub_25A623050();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  uint64_t v19 = sub_25A622FD0();
  uint64_t v20 = (uint64_t)v30;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v30, 1, 1, v19);
  uint64_t v21 = v29;
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v16, v18, v29);
  unint64_t v22 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v23 = swift_allocObject();
  *(void *)(v23 + 16) = 0;
  *(void *)(v23 + 24) = 0;
  (*(void (**)(unint64_t, char *, uint64_t))(v13 + 32))(v23 + v22, v16, v21);
  unint64_t v24 = (void *)(v23 + ((v14 + v22 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v25 = v32;
  *unint64_t v24 = v31;
  v24[1] = v25;
  swift_retain();
  sub_25A60C0D8(v20, (uint64_t)&unk_26A42A888, v23);
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v18, v21);
}

uint64_t sub_25A5B5158(uint64_t a1)
{
  *(void *)(v1 + 64) = a1;
  type metadata accessor for MessageStream(0);
  uint64_t v4 = (uint64_t (*)(uint64_t))((char *)&dword_26A42A850 + dword_26A42A850);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 72) = v2;
  void *v2 = v1;
  v2[1] = sub_25A5507D8;
  return v4(v1 + 16);
}

uint64_t sub_25A5B5220()
{
  uint64_t v1 = (int *)(type metadata accessor for MessageStream(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v3 + *(void *)(*(void *)v1 + 64);
  uint64_t v5 = v2 | 7;
  uint64_t v6 = v0 + v3;
  swift_release();
  uint64_t v7 = v6 + v1[7];
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v8 = v7 + *(int *)(type metadata accessor for AsyncMessageStream(0) + 24);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A429288);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  swift_release();

  return MEMORY[0x270FA0238](v0, v4, v5);
}

uint64_t sub_25A5B5348(uint64_t a1)
{
  type metadata accessor for MessageStream(0);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_25A55F118;
  return sub_25A5B5158(a1);
}

uint64_t sub_25A5B5420()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_25A5B5458(uint64_t *a1)
{
  return sub_25A5B3EAC(a1, *(double *)(v1 + 24));
}

uint64_t sub_25A5B5464()
{
  return sub_25A5B3784(0xD00000000000001BLL, 0x800000025A637450);
}

uint64_t sub_25A5B5480()
{
  return type metadata accessor for SampleStreamAgent();
}

uint64_t type metadata accessor for SampleStreamAgent()
{
  uint64_t result = qword_26A42A7D0;
  if (!qword_26A42A7D0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_25A5B54D4()
{
  uint64_t result = type metadata accessor for MessageStream(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for SampleStreamAgent(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for SampleStreamAgent);
}

uint64_t dispatch thunk of SampleStreamAgent.__allocating_init(messageStream:description:offset:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

unint64_t sub_25A5B55A8()
{
  unint64_t result = qword_26A42A7E0;
  if (!qword_26A42A7E0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26A42A7E0);
  }
  return result;
}

uint64_t sub_25A5B55E8()
{
  swift_weakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_25A5B5620()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 72, 7);
}

uint64_t sub_25A5B5670()
{
  return sub_25A5B4490(*(void *)(v0 + 16), (long long *)(v0 + 24));
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

uint64_t sub_25A5B5694(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[7] = a5;
  unsigned char v6[8] = a6;
  v6[6] = a4;
  type metadata accessor for TransportReply();
  v6[9] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A42A890);
  v6[10] = swift_task_alloc();
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A42A878);
  v6[11] = v7;
  v6[12] = *(void *)(v7 - 8);
  v6[13] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A42A898);
  v6[14] = swift_task_alloc();
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A42A8A0);
  v6[15] = v8;
  v6[16] = *(void *)(v8 - 8);
  v6[17] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_25A5B5848, 0, 0);
}

uint64_t sub_25A5B5848()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A42A868);
  sub_25A623040();
  unint64_t v1 = (void *)swift_task_alloc();
  v0[18] = v1;
  void *v1 = v0;
  v1[1] = sub_25A5B5908;
  uint64_t v2 = v0[14];
  uint64_t v3 = v0[15];
  return MEMORY[0x270FA1F68](v2, 0, 0, v3);
}

uint64_t sub_25A5B5908()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_25A5B5A04, 0, 0);
}

uint64_t sub_25A5B5A04()
{
  uint64_t v1 = v0[14];
  if ((*(unsigned int (**)(uint64_t, uint64_t, void))(v0[12] + 48))(v1, 1, v0[11]) == 1)
  {
    (*(void (**)(void, void))(v0[16] + 8))(v0[17], v0[15]);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v2 = (uint64_t (*)(void))v0[1];
    return v2();
  }
  else
  {
    sub_25A55C73C(v1, v0[13], &qword_26A42A878);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v5 = (uint64_t *)v0[13];
    uint64_t v6 = v0[10];
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v7 = v0[9];
      uint64_t v8 = (void (*)(void *, uint64_t))v0[7];
      uint64_t v9 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A42A8A8) + 48);
      uint64_t v10 = *v5;
      v0[3] = v5[1];
      v0[2] = v10;
      sub_25A5B69B8((uint64_t)v5 + v9, v7, (uint64_t (*)(void))type metadata accessor for TransportReply);
      sub_25A5B66C8(v7, v6, (uint64_t (*)(void))type metadata accessor for TransportReply);
      uint64_t v11 = type metadata accessor for MessageStream.Responder(0);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v6, 0, 1, v11);
      v8(v0 + 2, v6);
      sub_25A570C60(v6, &qword_26A42A890);
      sub_25A5B6A20(v7, (uint64_t (*)(void))type metadata accessor for TransportReply);
    }
    else
    {
      uint64_t v12 = *v5;
      v0[5] = v5[1];
      uint64_t v13 = (void (*)(void *, uint64_t))v0[7];
      v0[4] = v12;
      uint64_t v14 = type metadata accessor for MessageStream.Responder(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v6, 1, 1, v14);
      v13(v0 + 4, v6);
      sub_25A570C60(v6, &qword_26A42A890);
    }
    swift_bridgeObjectRelease();
    uint64_t v15 = (void *)swift_task_alloc();
    v0[18] = v15;
    *uint64_t v15 = v0;
    v15[1] = sub_25A5B5908;
    uint64_t v16 = v0[14];
    uint64_t v17 = v0[15];
    return MEMORY[0x270FA1F68](v16, 0, 0, v17);
  }
}

uint64_t sub_25A5B5D14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  unsigned char v6[8] = a4;
  v6[9] = a5;
  uint64_t v8 = (void *)swift_task_alloc();
  v6[10] = v8;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A42A810);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A429388);
  *uint64_t v8 = v6;
  v8[1] = sub_25A5B5DF0;
  uint64_t v11 = MEMORY[0x263F8E4E0];
  return MEMORY[0x270FA1FB8](v6 + 5, a6, v9, v10, v11);
}

uint64_t sub_25A5B5DF0()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_25A5B5EEC, 0, 0);
}

uint64_t sub_25A5B5EEC()
{
  uint64_t v1 = *(void (**)(uint64_t))(v0 + 64);
  uint64_t v2 = *(void **)(v0 + 40);
  uint64_t v3 = *(void *)(v0 + 48);
  char v4 = *(unsigned char *)(v0 + 56);
  if (v4) {
    uint64_t v5 = 0;
  }
  else {
    uint64_t v5 = *(void *)(v0 + 48);
  }
  *(void *)(v0 + 16) = v2;
  *(void *)(v0 + 24) = v5;
  *(unsigned char *)(v0 + 32) = v4;
  v1(v0 + 16);
  sub_25A5B6210(v2, v3, v4);
  uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

unint64_t sub_25A5B5F88(unint64_t result)
{
  if (result)
  {
    unint64_t v1 = result;
    unint64_t v3 = 0;
    MEMORY[0x261140C40](&v3, 8);
    unint64_t result = (v3 * (unsigned __int128)v1) >> 64;
    if (v3 * v1 < v1)
    {
      unint64_t v2 = -(uint64_t)v1 % v1;
      if (v2 > v3 * v1)
      {
        do
        {
          unint64_t v3 = 0;
          MEMORY[0x261140C40](&v3, 8);
        }
        while (v2 > v3 * v1);
        return (v3 * (unsigned __int128)v1) >> 64;
      }
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_25A5B6014()
{
  return sub_25A5B4C8C();
}

uint64_t sub_25A5B601C()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();

  return MEMORY[0x270FA0238](v0, 56, 7);
}

uint64_t sub_25A5B6064(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_25A566D38;
  return sub_25A5B5D14(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_25A5B612C(uint64_t a1)
{
  return a1;
}

uint64_t sub_25A5B6178(uint64_t a1)
{
  return a1;
}

uint64_t sub_25A5B61C4(void *a1, void *a2)
{
  uint64_t v3 = v2[2];
  uint64_t v4 = v2[3];
  uint64_t v5 = (uint64_t *)v2[4];
  uint64_t v7 = *v5;
  uint64_t v6 = v5[1];
  *a2 = v7;
  a2[1] = v6;
  *a1 = v3;
  a1[1] = v4;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

void sub_25A5B6210(void *a1, uint64_t a2, char a3)
{
  if (a3) {

  }
  else {
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_25A5B6220()
{
  return sub_25A622840();
}

uint64_t sub_25A5B62D0()
{
  return objectdestroyTm_0(&qword_26A42A818);
}

uint64_t sub_25A5B62DC()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A42A818);

  return sub_25A5B6220();
}

uint64_t sub_25A5B6360@<X0>(void *a1@<X8>)
{
  uint64_t v3 = sub_25A6227C0();
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t result = LazyPropertyList.propertyList.getter((uint64_t)v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A42A810);
    sub_25A55DAA4(&qword_26A42A838, &qword_26A42A810);
    uint64_t result = sub_25A622B00();
    uint64_t v6 = v7[1];
    *a1 = v7[0];
    a1[1] = v6;
  }
  return result;
}

uint64_t sub_25A5B6460()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_25A5B6498(uint64_t a1, uint64_t a2)
{
  return sub_25A55037C(a1, a2, *(uint64_t (**)(void))(v2 + 16));
}

uint64_t sub_25A5B64A0(uint64_t a1)
{
  return sub_25A5B19B8(a1, *(void *)(v1 + 16));
}

uint64_t sub_25A5B64A8()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A42A868);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();

  return MEMORY[0x270FA0238](v0, v6, v5);
}

uint64_t sub_25A5B6598(uint64_t a1)
{
  uint64_t v4 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A42A868) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v1 + 16);
  uint64_t v7 = *(void *)(v1 + 24);
  uint64_t v8 = v1 + v5;
  uint64_t v9 = (uint64_t *)(v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v10 = *v9;
  uint64_t v11 = v9[1];
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v12;
  *uint64_t v12 = v2;
  v12[1] = sub_25A55F118;
  return sub_25A5B5694(a1, v6, v7, v8, v10, v11);
}

uint64_t sub_25A5B66C8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_25A5B6730()
{
  return objectdestroyTm_0(&qword_26A42A8B0);
}

uint64_t sub_25A5B673C(uint64_t a1)
{
  return sub_25A5B6770(a1);
}

uint64_t sub_25A5B6758(uint64_t a1)
{
  return sub_25A5B2738(a1, *(void (**)(uint64_t *))(v1 + 16), *(void *)(v1 + 24), (void *)(v1 + 32));
}

uint64_t sub_25A5B6764()
{
  return objectdestroyTm_0(&qword_26A42A8B0);
}

uint64_t sub_25A5B6770(uint64_t a1)
{
  uint64_t v3 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A42A8B0) - 8);
  return sub_25A5B2054(a1, v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)));
}

uint64_t objectdestroy_37Tm()
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 32);

  return MEMORY[0x270FA0238](v0, 72, 7);
}

uint64_t sub_25A5B6824(uint64_t a1, uint64_t a2)
{
  return sub_25A5B2A10(a1, a2, *(void (**)(uint64_t *))(v2 + 16), *(void *)(v2 + 24), (void *)(v2 + 32));
}

uint64_t sub_25A5B6830()
{
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 32)) {
    swift_release();
  }
  if (*(void *)(v0 + 48)) {
    swift_release();
  }

  return MEMORY[0x270FA0238](v0, 64, 7);
}

uint64_t sub_25A5B6888(uint64_t a1, uint64_t a2)
{
  return sub_25A582764(a1, a2);
}

uint64_t sub_25A5B6890()
{
  return objectdestroyTm_0(&qword_26A42A8B0);
}

uint64_t sub_25A5B689C()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A42A8B0);

  return sub_25A5B230C();
}

uint64_t sub_25A5B6900()
{
  return objectdestroyTm_0(&qword_26A42A8B0);
}

uint64_t sub_25A5B690C()
{
  return sub_25A623020();
}

uint64_t sub_25A5B6970(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_25A5B69B8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_25A5B6A20(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_25A5B6A80()
{
  return swift_initClassMetadata2();
}

uint64_t sub_25A5B6AE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_25A6228E0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(a1 + 80) || *(void *)(a2 + 80))
  {
    sub_25A6228F0();
    uint64_t v8 = *(void *)(a1 + 16);
    swift_getObjectType();
    uint64_t v13 = v8;
    swift_unknownObjectRetain();
    sub_25A6228D0();
    sub_25A622870();
    uint64_t v9 = *(void (**)(char *, uint64_t))(v5 + 8);
    v9(v7, v4);
    swift_unknownObjectRelease();
    uint64_t v10 = *(void *)(a2 + 16);
    swift_getObjectType();
    uint64_t v13 = v10;
    swift_unknownObjectRetain();
    sub_25A6228D0();
    sub_25A622870();
    v9(v7, v4);
    return swift_unknownObjectRelease();
  }
  else
  {
    sub_25A5B702C(a2);
    return sub_25A5B702C(a1);
  }
}

void *sub_25A5B6D34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t result = (void *)swift_allocObject();
  result[9] = a8;
  result[10] = 0;
  result[2] = a1;
  result[3] = a2;
  result[4] = a3;
  result[5] = a4;
  result[6] = a5;
  result[7] = a6;
  result[8] = a7;
  return result;
}

uint64_t sub_25A5B6DB4(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + 80);
  if (!v2) {
    return sub_25A6228F0();
  }
  uint64_t v4 = *(void (**)(uint64_t, uint64_t))(v2 + 48);
  swift_retain();
  swift_retain();
  v4(a1, v2);
  swift_release();
  return swift_release();
}

void *sub_25A5B6E84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[9] = a8;
  v8[10] = 0;
  _OWORD v8[2] = a1;
  uint64_t v8[3] = a2;
  v8[4] = a3;
  v8[5] = a4;
  v8[6] = a5;
  v8[7] = a6;
  unsigned char v8[8] = a7;
  return v8;
}

uint64_t sub_25A5B6EA0()
{
  if (*(void *)(v0 + 40))
  {
    sub_25A622E00();
    sub_25A622E00();
  }
  sub_25A622E00();
  swift_bridgeObjectRelease();
  sub_25A622E00();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A42A950);
  sub_25A623270();
  sub_25A622E00();
  swift_bridgeObjectRetain();
  sub_25A622E00();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 0x6E6F6974636E754ALL;
}

unint64_t sub_25A5B6FE8()
{
  return 0xD000000000000052;
}

uint64_t sub_25A5B7004()
{
  *(void *)(v0 + 80) = 0;
  return swift_release();
}

unint64_t sub_25A5B7010()
{
  return 0xD000000000000035;
}

uint64_t sub_25A5B702C(uint64_t a1)
{
  *(void *)(v1 + 80) = a1;
  swift_release();
  uint64_t v3 = *(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 64);
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = *(void *)(a1 + 24);
  swift_retain();
  v3(v4, v5, v1);
  swift_getObjectType();
  swift_unknownObjectRetain();
  swift_retain();
  sub_25A622AA0();
  swift_release();
  return swift_unknownObjectRelease();
}

uint64_t sub_25A5B70F8()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_25A5B7138()
{
  sub_25A5B70F8();

  return MEMORY[0x270FA0228](v0, 88, 7);
}

uint64_t type metadata accessor for Junction()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_25A5B7184()
{
  return sub_25A5B6EA0();
}

uint64_t ServiceMessage.identifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ServiceMessage.identifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  void *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*ServiceMessage.identifier.modify())()
{
  return nullsub_1;
}

uint64_t ServiceMessage.content.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ServiceMessage(0) + 20);

  return sub_25A5B7294(v3, a1);
}

uint64_t type metadata accessor for ServiceMessage(uint64_t a1)
{
  return sub_25A54FD94(a1, (uint64_t *)&unk_26A42AB18);
}

uint64_t sub_25A5B7294(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ServiceMessage.Content(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for ServiceMessage.Content(uint64_t a1)
{
  return sub_25A54FD94(a1, (uint64_t *)&unk_26A42AB28);
}

uint64_t ServiceMessage.content.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ServiceMessage(0) + 20);

  return sub_25A5B735C(a1, v3);
}

uint64_t sub_25A5B735C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ServiceMessage.Content(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t (*ServiceMessage.content.modify())()
{
  return nullsub_1;
}

uint64_t ServiceMessage.description.getter()
{
  BYTE8(v1) = 0;
  sub_25A623210();
  sub_25A622E00();
  swift_bridgeObjectRetain();
  sub_25A622E00();
  swift_bridgeObjectRelease();
  sub_25A622E00();
  *(void *)&long long v1 = ServiceMessage.messageType.getter();
  sub_25A623270();
  sub_25A622E00();
  return *(void *)((char *)&v1 + 1);
}

uint64_t ServiceMessage.messageType.getter()
{
  uint64_t v1 = type metadata accessor for ServiceMessage.Content(0);
  MEMORY[0x270FA5388](v1);
  uint64_t v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for ServiceMessage(0);
  sub_25A5B7294(v0 + *(int *)(v4 + 20), (uint64_t)v3);
  uint64_t EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t result = 0;
  switch(EnumCaseMultiPayload)
  {
    case 1:
      sub_25A5B7FD0((uint64_t)v3, type metadata accessor for ServiceMessage.Content);
      uint64_t result = 3;
      break;
    case 2:
      sub_25A5B7FD0((uint64_t)v3, type metadata accessor for ServiceMessage.Content);
      uint64_t result = 4;
      break;
    case 3:
      uint64_t result = 5;
      break;
    case 4:
      sub_25A5B7FD0((uint64_t)v3, type metadata accessor for ServiceMessage.Content);
      uint64_t result = 6;
      break;
    case 5:
      sub_25A5B7FD0((uint64_t)v3, type metadata accessor for ServiceMessage.Content);
      uint64_t result = 7;
      break;
    case 6:
      uint64_t result = 8;
      break;
    case 7:
      uint64_t result = 9;
      break;
    case 8:
      sub_25A5B7FD0((uint64_t)v3, type metadata accessor for ServiceMessage.Content);
      uint64_t result = 10;
      break;
    case 9:
      sub_25A5B7FD0((uint64_t)v3, type metadata accessor for ServiceMessage.Content);
      uint64_t result = 11;
      break;
    case 10:
      sub_25A5B7FD0((uint64_t)v3, type metadata accessor for ServiceMessage.Content);
      uint64_t result = 12;
      break;
    case 11:
      return result;
    default:
      uint64_t result = 1;
      break;
  }
  return result;
}

uint64_t ServiceMessage.payload.getter@<X0>(char *a1@<X8>)
{
  uint64_t v71 = a1;
  uint64_t updated = type metadata accessor for ShellUpdatePayload();
  MEMORY[0x270FA5388](updated);
  uint64_t v4 = (char *)&v62 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for ForwardPayload(0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v62 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_25A6227C0();
  uint64_t v68 = *(void *)(v8 - 8);
  uint64_t v69 = v8;
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  uint64_t v67 = (char *)&v62 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v66 = (char *)&v62 - v12;
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v62 - v14;
  MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v62 - v16;
  uint64_t v18 = type metadata accessor for ServiceMessage.Content(0);
  MEMORY[0x270FA5388](v18);
  uint64_t v20 = (unsigned __int8 *)&v62 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = *(int *)(type metadata accessor for ServiceMessage(0) + 20);
  uint64_t v70 = v1;
  sub_25A5B7294((uint64_t)v1 + v21, (uint64_t)v20);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      long long v27 = *((_OWORD *)v20 + 7);
      long long v28 = *((_OWORD *)v20 + 5);
      long long v88 = *((_OWORD *)v20 + 6);
      long long v89 = v27;
      long long v29 = *((_OWORD *)v20 + 7);
      long long v90 = *((_OWORD *)v20 + 8);
      long long v30 = *((_OWORD *)v20 + 3);
      long long v31 = *((_OWORD *)v20 + 1);
      long long v84 = *((_OWORD *)v20 + 2);
      long long v85 = v30;
      long long v32 = *((_OWORD *)v20 + 3);
      long long v33 = *((_OWORD *)v20 + 5);
      long long v86 = *((_OWORD *)v20 + 4);
      long long v87 = v33;
      long long v34 = *((_OWORD *)v20 + 1);
      long long v82 = *(_OWORD *)v20;
      long long v83 = v34;
      long long v78 = v88;
      long long v79 = v29;
      long long v80 = *((_OWORD *)v20 + 8);
      long long v74 = v84;
      long long v75 = v32;
      long long v76 = v86;
      long long v77 = v28;
      unsigned __int8 v91 = v20[144];
      uint64_t v35 = *((void *)v20 + 20);
      uint64_t v64 = *((void *)v20 + 19);
      uint64_t v36 = v64;
      uint64_t v65 = v35;
      uint64_t v37 = *((void *)v20 + 21);
      uint64_t v38 = *((void *)v20 + 22);
      uint64_t v40 = *((void *)v20 + 24);
      uint64_t v63 = *((void *)v20 + 23);
      uint64_t v39 = v63;
      uint64_t v42 = *((void *)v20 + 25);
      uint64_t v41 = *((void *)v20 + 26);
      unsigned __int8 v81 = v20[144];
      long long v72 = v82;
      long long v73 = v31;
      sub_25A5B8134();
      uint64_t v43 = v66;
      sub_25A622AF0();
      sub_25A5B8188((uint64_t)&v82);
      *(void *)&long long v72 = v36;
      uint64_t v44 = v65;
      *((void *)&v72 + 1) = v65;
      *(void *)&long long v73 = v37;
      *((void *)&v73 + 1) = v38;
      *(void *)&long long v74 = v39;
      *((void *)&v74 + 1) = v40;
      *(void *)&long long v75 = v42;
      *((void *)&v75 + 1) = v41;
      sub_25A5B8210();
      uint64_t v45 = v67;
      sub_25A622AF0();
      sub_25A5B8264(v64, v44);
      sub_25A622730();
      uint64_t v46 = v69;
      uint64_t v47 = *(void (**)(char *, uint64_t))(v68 + 8);
      v47(v45, v69);
      v47(v43, v46);
      break;
    case 2u:
      uint64_t v48 = *((void *)v20 + 1);
      uint64_t v49 = *((void *)v20 + 2);
      uint64_t v50 = *((void *)v20 + 3);
      uint64_t v51 = *((void *)v20 + 4);
      uint64_t v52 = *((void *)v20 + 5);
      *(void *)&long long v82 = *(void *)v20;
      *((void *)&v82 + 1) = v48;
      *(void *)&long long v83 = v49;
      *((void *)&v83 + 1) = v50;
      *(void *)&long long v84 = v51;
      *((void *)&v84 + 1) = v52;
      sub_25A5B80E0();
      sub_25A622AF0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_13;
    case 3u:
    case 6u:
    case 7u:
      unsigned __int8 v22 = v20[32];
      long long v23 = *((_OWORD *)v20 + 1);
      long long v82 = *(_OWORD *)v20;
      long long v83 = v23;
      LOBYTE(v84) = v22;
      sub_25A5B7F7C();
      sub_25A622AF0();
      break;
    case 4u:
      sub_25A5B8030((uint64_t)v20, (uint64_t)v7, type metadata accessor for ForwardPayload);
      sub_25A5B8098(&qword_26A42A990, (void (*)(uint64_t))type metadata accessor for ForwardPayload);
      sub_25A622AF0();
      sub_25A5B7FD0((uint64_t)v7, type metadata accessor for ForwardPayload);
      break;
    case 5u:
      sub_25A5B8030((uint64_t)v20, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for ShellUpdatePayload);
      sub_25A5B8098(&qword_26A42A988, (void (*)(uint64_t))type metadata accessor for ShellUpdatePayload);
      sub_25A622AF0();
      sub_25A5B7FD0((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for ShellUpdatePayload);
      break;
    case 8u:
      uint64_t v56 = *((void *)v20 + 1);
      unsigned __int8 v57 = v20[16];
      *(void *)&long long v82 = *(void *)v20;
      *((void *)&v82 + 1) = v56;
      LOBYTE(v83) = v57;
      sub_25A5B7F28();
      sub_25A622AF0();
      goto LABEL_13;
    case 9u:
      uint64_t v53 = *((void *)v20 + 1);
      uint64_t v54 = *((void *)v20 + 2);
      uint64_t v55 = *((void *)v20 + 3);
      *(void *)&long long v82 = *(void *)v20;
      *((void *)&v82 + 1) = v53;
      *(void *)&long long v83 = v54;
      *((void *)&v83 + 1) = v55;
      sub_25A5B7ED4();
      sub_25A622AF0();
      swift_bridgeObjectRelease();
      goto LABEL_13;
    case 0xAu:
      uint64_t v58 = *((void *)v20 + 1);
      uint64_t v59 = *((void *)v20 + 2);
      *(void *)&long long v82 = *(void *)v20;
      *((void *)&v82 + 1) = v58;
      *(void *)&long long v83 = v59;
      sub_25A5B7E2C();
      sub_25A622AF0();
      swift_bridgeObjectRelease();
LABEL_13:
      swift_bridgeObjectRelease();
      break;
    case 0xBu:
      _s19PreviewsMessagingOS24CanvasControlDescriptionV9ModifiersV17propertyListValue0a10FoundationC008PropertyI0Vvg_0();
      break;
    default:
      int v24 = *v20;
      if (v24 == 2)
      {
        _s19PreviewsMessagingOS24CanvasControlDescriptionV9ModifiersV17propertyListValue0a10FoundationC008PropertyI0Vvg_0();
        uint64_t v25 = v69;
        uint64_t v26 = *(void (**)(char *, char *, uint64_t))(v68 + 32);
      }
      else
      {
        LOBYTE(v82) = v24 & 1;
        sub_25A5B82B4();
        sub_25A622AF0();
        uint64_t v26 = *(void (**)(char *, char *, uint64_t))(v68 + 32);
        uint64_t v60 = v15;
        uint64_t v25 = v69;
        v26(v17, v60, v69);
      }
      v26(v71, v17, v25);
      break;
  }
  long long v72 = *v70;
  *((void *)&v83 + 1) = &type metadata for ServiceMessage.PayloadKey;
  *(void *)&long long v84 = sub_25A5B7E80();
  sub_25A622700();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v82);
}

uint64_t type metadata accessor for ForwardPayload(uint64_t a1)
{
  return sub_25A54FD94(a1, (uint64_t *)&unk_26A42AB38);
}

unint64_t sub_25A5B7E2C()
{
  unint64_t result = qword_26A42A960;
  if (!qword_26A42A960)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42A960);
  }
  return result;
}

unint64_t sub_25A5B7E80()
{
  unint64_t result = qword_26A42A968;
  if (!qword_26A42A968)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42A968);
  }
  return result;
}

unint64_t sub_25A5B7ED4()
{
  unint64_t result = qword_26A42A970;
  if (!qword_26A42A970)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42A970);
  }
  return result;
}

unint64_t sub_25A5B7F28()
{
  unint64_t result = qword_26A42A978;
  if (!qword_26A42A978)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42A978);
  }
  return result;
}

unint64_t sub_25A5B7F7C()
{
  unint64_t result = qword_26A42A980;
  if (!qword_26A42A980)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42A980);
  }
  return result;
}

uint64_t sub_25A5B7FD0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_25A5B8030(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_25A5B8098(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_25A5B80E0()
{
  unint64_t result = qword_26A42A998;
  if (!qword_26A42A998)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42A998);
  }
  return result;
}

unint64_t sub_25A5B8134()
{
  unint64_t result = qword_26A42A9A0;
  if (!qword_26A42A9A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42A9A0);
  }
  return result;
}

uint64_t sub_25A5B8188(uint64_t a1)
{
  return a1;
}

unint64_t sub_25A5B8210()
{
  unint64_t result = qword_26A42A9A8;
  if (!qword_26A42A9A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42A9A8);
  }
  return result;
}

uint64_t sub_25A5B8264(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_25A5B82B4()
{
  unint64_t result = qword_26A42A9B0;
  if (!qword_26A42A9B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42A9B0);
  }
  return result;
}

uint64_t sub_25A5B8308(char a1)
{
  if (a1) {
    return 0x64616F6C796170;
  }
  else {
    return 0x546567617373656DLL;
  }
}

uint64_t sub_25A5B8348(char *a1, char *a2)
{
  return sub_25A5EC75C(*a1, *a2);
}

uint64_t sub_25A5B8354()
{
  return sub_25A618574();
}

uint64_t sub_25A5B835C()
{
  return sub_25A54C030();
}

uint64_t sub_25A5B8364()
{
  return sub_25A61BA14();
}

uint64_t sub_25A5B836C@<X0>(char *a1@<X8>)
{
  return sub_25A56B748(a1);
}

uint64_t sub_25A5B8378@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_25A5B8308(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_25A5B83A4()
{
  return sub_25A5B8308(*v0);
}

uint64_t sub_25A5B83AC()
{
  return sub_25A6234A0();
}

uint64_t sub_25A5B8404()
{
  return sub_25A622DF0();
}

uint64_t sub_25A5B8420()
{
  return sub_25A6234A0();
}

uint64_t sub_25A5B8474@<X0>(BOOL *a1@<X8>)
{
  return sub_25A56C88C(a1);
}

void sub_25A5B8480(void *a1@<X8>)
{
  *a1 = 0xD000000000000023;
  a1[1] = 0x800000025A6355D0;
}

unint64_t sub_25A5B84A0()
{
  return 0xD000000000000023;
}

uint64_t ServiceMessage.propertyListValue.getter()
{
  return sub_25A622780();
}

uint64_t sub_25A5B84F8()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4299B8);
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v2 = &v17[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A42AC58);
  uint64_t v4 = v3 - 8;
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  uint64_t v7 = &v17[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = &v17[-v8];
  char v10 = ServiceMessage.messageType.getter();
  uint64_t v11 = &v9[*(int *)(v4 + 56)];
  *uint64_t v9 = 1;
  ServiceMessage.payload.getter(v11);
  v17[15] = 0;
  v17[14] = v10;
  uint64_t v12 = &v7[*(int *)(v4 + 56)];
  *uint64_t v7 = 1;
  uint64_t v13 = sub_25A6227C0();
  uint64_t v14 = *(void *)(v13 - 8);
  (*(void (**)(unsigned char *, char *, uint64_t))(v14 + 16))(v12, v11, v13);
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v14 + 32))(v2, v12, v13);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v14 + 56))(v2, 0, 1, v13);
  v17[13] = 1;
  sub_25A5B88EC();
  sub_25A5B8940();
  uint64_t v15 = sub_25A622A80();
  sub_25A570C60((uint64_t)v2, &qword_26A4299B8);
  sub_25A570C60((uint64_t)v9, &qword_26A42AC58);
  return v15;
}

uint64_t sub_25A5B873C()
{
  return sub_25A5B84F8();
}

uint64_t ServiceMessage.init(propertyListValue:)@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = sub_25A6227C0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = &v13[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  uint64_t v14 = &type metadata for ServiceMessage.Key;
  unint64_t v9 = sub_25A5B88EC();
  unint64_t v15 = v9;
  v13[0] = 0;
  sub_25A5B8940();
  sub_25A622710();
  if (v2)
  {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
    uint64_t v10 = v16;
    uint64_t v14 = &type metadata for ServiceMessage.Key;
    unint64_t v15 = v9;
    v13[0] = 1;
    sub_25A622710();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
    ServiceMessage.init(messageType:payload:)(v10, (uint64_t)v8, a2);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
  }
}

unint64_t sub_25A5B88EC()
{
  unint64_t result = qword_26A42A9B8;
  if (!qword_26A42A9B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42A9B8);
  }
  return result;
}

unint64_t sub_25A5B8940()
{
  unint64_t result = qword_26A42A9C0;
  if (!qword_26A42A9C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42A9C0);
  }
  return result;
}

uint64_t ServiceMessage.init(messageType:payload:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v144 = a1;
  uint64_t v5 = sub_25A6227C0();
  uint64_t v146 = *(void *)(v5 - 8);
  uint64_t v147 = v5;
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  v145 = (char *)&v119 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  v143 = (char *)&v119 - v9;
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  v136 = (char *)&v119 - v11;
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  v141 = (char *)&v119 - v13;
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  v140 = (char *)&v119 - v15;
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  v142 = (char *)&v119 - v17;
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  v132 = (char *)&v119 - v19;
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  v139 = (char *)&v119 - v21;
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  v138 = (char *)&v119 - v23;
  uint64_t v24 = MEMORY[0x270FA5388](v22);
  v134 = (char *)&v119 - v25;
  uint64_t v26 = MEMORY[0x270FA5388](v24);
  v137 = (char *)&v119 - v27;
  MEMORY[0x270FA5388](v26);
  v135 = (char *)&v119 - v28;
  uint64_t v133 = type metadata accessor for ServiceMessage.Content(0);
  uint64_t v29 = MEMORY[0x270FA5388](v133);
  uint64_t v131 = (uint64_t *)((char *)&v119 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v31 = MEMORY[0x270FA5388](v29);
  unint64_t v130 = (uint64_t *)((char *)&v119 - v32);
  uint64_t v33 = MEMORY[0x270FA5388](v31);
  v129 = (uint64_t *)((char *)&v119 - v34);
  uint64_t v35 = MEMORY[0x270FA5388](v33);
  v128 = (_OWORD *)((char *)&v119 - v36);
  uint64_t v37 = MEMORY[0x270FA5388](v35);
  uint64_t v127 = (_OWORD *)((char *)&v119 - v38);
  uint64_t v39 = MEMORY[0x270FA5388](v37);
  uint64_t v41 = (char *)&v119 - v40;
  uint64_t v42 = MEMORY[0x270FA5388](v39);
  uint64_t v44 = (char *)&v119 - v43;
  uint64_t v45 = MEMORY[0x270FA5388](v42);
  uint64_t v47 = (char *)&v119 - v46;
  uint64_t v48 = MEMORY[0x270FA5388](v45);
  uint64_t v50 = (char *)&v119 - v49;
  uint64_t v51 = MEMORY[0x270FA5388](v48);
  uint64_t v53 = (char *)&v119 - v52;
  MEMORY[0x270FA5388](v51);
  uint64_t v55 = (char *)&v119 - v54;
  *a3 = 0;
  a3[1] = 0;
  v182 = a3;
  *((void *)&v149[1] + 1) = &type metadata for ServiceMessage.PayloadKey;
  *(void *)&long long v150 = sub_25A5B7E80();
  uint64_t v56 = v148;
  sub_25A622760();
  if (v56)
  {
    (*(void (**)(uint64_t, uint64_t))(v146 + 8))(a2, v147);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v149);
    return swift_bridgeObjectRelease();
  }
  else
  {
    v122 = v47;
    uint64_t v123 = v55;
    uint64_t v120 = v53;
    v121 = v50;
    v124 = v44;
    uint64_t v125 = v41;
    uint64_t v58 = v134;
    uint64_t v59 = v136;
    uint64_t v148 = a2;
    uint64_t v60 = v147;
    uint64_t v126 = 0;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v149);
    long long v61 = v172;
    swift_bridgeObjectRelease();
    _OWORD *v182 = v61;
    uint64_t v62 = v142;
    switch((char)v144)
    {
      case 1:
        uint64_t v67 = v182;
        uint64_t v68 = v146;
        uint64_t v69 = v148;
        uint64_t v70 = v60;
        (*(void (**)(char *, uint64_t, uint64_t))(v146 + 16))(v135, v148, v60);
        sub_25A5B82B4();
        uint64_t v71 = v126;
        sub_25A622B00();
        if (v71)
        {

          char v72 = 2;
        }
        else
        {
          char v72 = v149[0];
        }
        uint64_t v105 = v123;
        (*(void (**)(uint64_t, uint64_t))(v68 + 8))(v69, v70);
        *uint64_t v105 = v72;
        swift_storeEnumTagMultiPayload();
        uint64_t v106 = type metadata accessor for ServiceMessage(0);
        return sub_25A5B8030((uint64_t)v105, (uint64_t)v67 + *(int *)(v106 + 20), type metadata accessor for ServiceMessage.Content);
      case 2:
      case 3:
        uint64_t v63 = v146;
        uint64_t v64 = *(void (**)(char *, uint64_t, uint64_t))(v146 + 16);
        uint64_t v65 = v148;
        v64(v137, v148, v60);
        sub_25A5B8134();
        uint64_t v66 = v126;
        sub_25A622B00();
        if (v66)
        {
          (*(void (**)(uint64_t, uint64_t))(v63 + 8))(v65, v60);
          return swift_bridgeObjectRelease();
        }
        long long v168 = v178;
        long long v169 = v179;
        long long v170 = v180;
        char v171 = v181;
        long long v164 = v174;
        long long v165 = v175;
        long long v166 = v176;
        long long v167 = v177;
        long long v162 = v172;
        long long v163 = v173;
        v64(v58, v65, v60);
        sub_25A5B8210();
        sub_25A622B00();
        (*(void (**)(uint64_t, uint64_t))(v63 + 8))(v65, v60);
        long long v154 = v168;
        long long v155 = v169;
        long long v156 = v170;
        LOBYTE(v157) = v171;
        long long v109 = v164;
        long long v150 = v164;
        long long v151 = v165;
        long long v152 = v166;
        long long v153 = v167;
        v149[0] = v162;
        v149[1] = v163;
        long long v110 = v169;
        uint64_t v111 = (uint64_t)v120;
        *((_OWORD *)v120 + 6) = v168;
        *(_OWORD *)(v111 + 112) = v110;
        *(_OWORD *)(v111 + 128) = v156;
        *(void *)(v111 + 144) = v157;
        long long v112 = v151;
        long long v113 = v152;
        long long v114 = v153;
        *(_OWORD *)(v111 + 32) = v109;
        *(_OWORD *)(v111 + 48) = v112;
        *(_OWORD *)(v111 + 64) = v113;
        *(_OWORD *)(v111 + 80) = v114;
        long long v115 = v149[1];
        *(_OWORD *)uint64_t v111 = v149[0];
        *(_OWORD *)(v111 + 16) = v115;
        long long v116 = v159;
        *(_OWORD *)(v111 + 152) = v158;
        *(_OWORD *)(v111 + 168) = v116;
        long long v117 = v161;
        *(_OWORD *)(v111 + 184) = v160;
        *(_OWORD *)(v111 + 200) = v117;
        swift_storeEnumTagMultiPayload();
        uint64_t v118 = type metadata accessor for ServiceMessage(0);
        return sub_25A5B8030(v111, (uint64_t)v182 + *(int *)(v118 + 20), type metadata accessor for ServiceMessage.Content);
      case 4:
        long long v73 = v182;
        uint64_t v74 = v146;
        uint64_t v75 = v148;
        (*(void (**)(char *, uint64_t, uint64_t))(v146 + 16))(v138, v148, v60);
        sub_25A5B80E0();
        long long v76 = v126;
        sub_25A622B00();
        if (v76) {
          goto LABEL_28;
        }
        (*(void (**)(uint64_t, uint64_t))(v74 + 8))(v75, v60);
        long long v77 = v149[1];
        long long v78 = v121;
        _OWORD *v121 = v149[0];
        v78[1] = v77;
        v78[2] = v150;
        goto LABEL_35;
      case 5:
        long long v73 = v182;
        uint64_t v74 = v146;
        uint64_t v75 = v148;
        (*(void (**)(char *, uint64_t, uint64_t))(v146 + 16))(v139, v148, v60);
        sub_25A5B7F7C();
        long long v79 = v126;
        sub_25A622B00();
        if (v79) {
          goto LABEL_28;
        }
        (*(void (**)(uint64_t, uint64_t))(v74 + 8))(v75, v60);
        char v80 = v150;
        long long v81 = v149[1];
        long long v78 = v122;
        _OWORD *v122 = v149[0];
        v78[1] = v81;
        *((unsigned char *)v78 + 32) = v80;
        goto LABEL_35;
      case 6:
        long long v82 = v182;
        uint64_t v83 = v148;
        type metadata accessor for ForwardPayload(0);
        uint64_t v84 = v146;
        uint64_t v85 = v60;
        (*(void (**)(char *, uint64_t, uint64_t))(v146 + 16))(v132, v83, v60);
        sub_25A5B8098(&qword_26A42A990, (void (*)(uint64_t))type metadata accessor for ForwardPayload);
        uint64_t v86 = (uint64_t)v124;
        long long v87 = v126;
        sub_25A622B00();
        if (v87)
        {
          (*(void (**)(uint64_t, uint64_t))(v84 + 8))(v83, v85);
          return swift_bridgeObjectRelease();
        }
        (*(void (**)(uint64_t, uint64_t))(v84 + 8))(v83, v85);
        swift_storeEnumTagMultiPayload();
        uint64_t v107 = (uint64_t)v82 + *(int *)(type metadata accessor for ServiceMessage(0) + 20);
        uint64_t v108 = v86;
        goto LABEL_36;
      case 7:
        long long v88 = v182;
        uint64_t v89 = v148;
        type metadata accessor for ShellUpdatePayload();
        uint64_t v90 = v146;
        (*(void (**)(char *, uint64_t, uint64_t))(v146 + 16))(v62, v89, v60);
        sub_25A5B8098(&qword_26A42A988, (void (*)(uint64_t))type metadata accessor for ShellUpdatePayload);
        uint64_t v92 = (uint64_t)v125;
        unsigned __int8 v91 = v126;
        sub_25A622B00();
        if (v91)
        {
          (*(void (**)(uint64_t, uint64_t))(v90 + 8))(v89, v60);
          return swift_bridgeObjectRelease();
        }
        (*(void (**)(uint64_t, uint64_t))(v90 + 8))(v89, v60);
        swift_storeEnumTagMultiPayload();
        uint64_t v107 = (uint64_t)v88 + *(int *)(type metadata accessor for ServiceMessage(0) + 20);
        uint64_t v108 = v92;
        goto LABEL_36;
      case 8:
        long long v73 = v182;
        uint64_t v74 = v146;
        uint64_t v75 = v148;
        (*(void (**)(char *, uint64_t, uint64_t))(v146 + 16))(v140, v148, v60);
        sub_25A5B7F7C();
        uint64_t v93 = v126;
        sub_25A622B00();
        if (v93) {
          goto LABEL_28;
        }
        (*(void (**)(uint64_t, uint64_t))(v74 + 8))(v75, v60);
        char v94 = v150;
        long long v95 = v149[1];
        long long v78 = v127;
        *uint64_t v127 = v149[0];
        v78[1] = v95;
        *((unsigned char *)v78 + 32) = v94;
        goto LABEL_35;
      case 9:
        long long v73 = v182;
        uint64_t v74 = v146;
        uint64_t v75 = v148;
        (*(void (**)(char *, uint64_t, uint64_t))(v146 + 16))(v141, v148, v60);
        sub_25A5B7F7C();
        uint64_t v96 = v126;
        sub_25A622B00();
        if (v96) {
          goto LABEL_28;
        }
        (*(void (**)(uint64_t, uint64_t))(v74 + 8))(v75, v60);
        char v97 = v150;
        long long v98 = v149[1];
        long long v78 = v128;
        _OWORD *v128 = v149[0];
        v78[1] = v98;
        *((unsigned char *)v78 + 32) = v97;
        goto LABEL_35;
      case 10:
        long long v73 = v182;
        uint64_t v74 = v146;
        uint64_t v75 = v148;
        (*(void (**)(char *, uint64_t, uint64_t))(v146 + 16))(v59, v148, v60);
        sub_25A5B7F28();
        uint64_t v99 = v126;
        sub_25A622B00();
        if (v99) {
          goto LABEL_28;
        }
        (*(void (**)(uint64_t, uint64_t))(v74 + 8))(v75, v60);
        uint64_t v100 = *((void *)&v149[0] + 1);
        char v101 = v149[1];
        long long v78 = v129;
        void *v129 = *(void *)&v149[0];
        *((void *)v78 + 1) = v100;
        *((unsigned char *)v78 + 16) = v101;
        goto LABEL_35;
      case 11:
        long long v73 = v182;
        uint64_t v74 = v146;
        uint64_t v75 = v148;
        (*(void (**)(char *, uint64_t, uint64_t))(v146 + 16))(v143, v148, v60);
        sub_25A5B7ED4();
        v102 = v126;
        sub_25A622B00();
        if (v102) {
          goto LABEL_28;
        }
        (*(void (**)(uint64_t, uint64_t))(v74 + 8))(v75, v60);
        uint64_t v103 = *((void *)&v149[0] + 1);
        long long v78 = v130;
        *unint64_t v130 = *(void *)&v149[0];
        *((void *)v78 + 1) = v103;
        v78[1] = v149[1];
        goto LABEL_35;
      case 12:
        long long v73 = v182;
        uint64_t v74 = v146;
        uint64_t v75 = v148;
        (*(void (**)(char *, uint64_t, uint64_t))(v146 + 16))(v145, v148, v60);
        sub_25A5B7E2C();
        uint64_t v104 = v126;
        sub_25A622B00();
        if (v104)
        {
LABEL_28:
          (*(void (**)(uint64_t, uint64_t))(v74 + 8))(v75, v60);
          return swift_bridgeObjectRelease();
        }
        (*(void (**)(uint64_t, uint64_t))(v74 + 8))(v75, v60);
        long long v78 = v131;
        *uint64_t v131 = *(void *)&v149[0];
        *(_OWORD *)((char *)v78 + 8) = *(_OWORD *)((char *)v149 + 8);
LABEL_35:
        swift_storeEnumTagMultiPayload();
        uint64_t v107 = (uint64_t)v73 + *(int *)(type metadata accessor for ServiceMessage(0) + 20);
        uint64_t v108 = (uint64_t)v78;
LABEL_36:
        uint64_t result = sub_25A5B8030(v108, v107, type metadata accessor for ServiceMessage.Content);
        break;
      default:
        (*(void (**)(uint64_t, uint64_t))(v146 + 8))(v148, v60);
        type metadata accessor for ServiceMessage(0);
        return swift_storeEnumTagMultiPayload();
    }
  }
  return result;
}

uint64_t ServiceMessage.init(_:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  if (qword_26A4291D0 != -1) {
    swift_once();
  }
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A429B78);
  sub_25A55DAA4((unint64_t *)&qword_26A429B80, &qword_26A429B78);
  sub_25A622B60();
  swift_release();
  *a2 = sub_25A623350();
  a2[1] = v4;
  uint64_t v5 = type metadata accessor for ServiceMessage(0);
  return sub_25A5B8030(a1, (uint64_t)a2 + *(int *)(v5 + 20), type metadata accessor for ServiceMessage.Content);
}

uint64_t sub_25A5B99CC()
{
  return sub_25A622780();
}

uint64_t sub_25A5B9A08@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return ServiceMessage.init(propertyListValue:)(a1, a2);
}

unint64_t ServiceMessage.MessageType.rawValue.getter(char a1)
{
  unint64_t result = 0xD000000000000011;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x696C696261706163;
      break;
    case 2:
      unint64_t result = 0x68636E75616CLL;
      break;
    case 3:
      unint64_t result = 0x68636E75616C6572;
      break;
    case 4:
      return result;
    case 5:
      unint64_t result = 0x7463656E6E6F63;
      break;
    case 6:
      unint64_t result = 0x64726177726F66;
      break;
    case 7:
      unint64_t result = 0x657461647075;
      break;
    case 8:
      unint64_t result = 1886352499;
      break;
    case 9:
      unint64_t result = 1819044203;
      break;
    case 10:
      unint64_t result = 0x6567727570;
      break;
    case 11:
      unint64_t result = 0x73746E6169726176;
      break;
    case 12:
      unint64_t result = 0x4F746E65746E6F63;
      break;
    default:
      unint64_t result = 1735289200;
      break;
  }
  return result;
}

uint64_t sub_25A5B9BAC(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4)
{
  return sub_25A5BCE04(a1, a2, a3, a4, (uint64_t (*)(uint64_t))ServiceMessage.MessageType.rawValue.getter);
}

uint64_t sub_25A5B9BC4(uint64_t a1, uint64_t a2)
{
  return sub_25A5BCEB4(a1, a2, (void (*)(uint64_t))ServiceMessage.MessageType.rawValue.getter);
}

uint64_t sub_25A5B9BDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_25A5BCF38(a1, a2, a3, (void (*)(void))ServiceMessage.MessageType.rawValue.getter);
}

uint64_t sub_25A5B9BF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_25A5BCFA8(a1, a2, a3, (void (*)(uint64_t))ServiceMessage.MessageType.rawValue.getter);
}

uint64_t sub_25A5B9C0C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = _s19PreviewsMessagingOS14ServiceMessageV0E4TypeO8rawValueAESgSS_tcfC_0();
  *a1 = result;
  return result;
}

unint64_t sub_25A5B9C3C@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = ServiceMessage.MessageType.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_25A5B9C68(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_25A5C8F84();
  uint64_t v5 = MEMORY[0x263F60648];

  return MEMORY[0x270F55C68](a1, a2, v4, v5);
}

uint64_t sub_25A5B9CC4()
{
  return sub_25A622B20();
}

uint64_t sub_25A5B9D2C()
{
  uint64_t result = sub_25A622C30();
  qword_26A42A958 = result;
  return result;
}

void *sub_25A5B9D64@<X0>(void *result@<X0>, void *a2@<X8>)
{
  uint64_t v2 = (*result)++;
  *a2 = v2;
  return result;
}

PreviewsMessagingOS::OSCapabilities __swiftcall OSCapabilities.init(supportsExecutionPoints:supportsPreviewVariants:supportsContentOverrides:supportsScreenshotRequests:supportsNSPreviewHostableMacPreviews:supportsNSPreviewHostableCatalystPreviews:supportsPerUpdateMessageStreams:supportsRegistryPreviews:supportsExternalRegistries:jitCapabilities:)(Swift::Bool supportsExecutionPoints, Swift::Bool supportsPreviewVariants, Swift::Bool supportsContentOverrides, Swift::Bool supportsScreenshotRequests, Swift::Bool supportsNSPreviewHostableMacPreviews, Swift::Bool supportsNSPreviewHostableCatalystPreviews, Swift::Bool supportsPerUpdateMessageStreams, Swift::Bool supportsRegistryPreviews, Swift::Bool supportsExternalRegistries, PreviewsMessagingOS::JITCapabilities jitCapabilities)
{
  *uint64_t v10 = supportsExecutionPoints;
  v10[1] = supportsPreviewVariants;
  v10[2] = supportsContentOverrides;
  v10[3] = supportsScreenshotRequests;
  v10[4] = supportsNSPreviewHostableMacPreviews;
  void v10[5] = supportsNSPreviewHostableCatalystPreviews;
  v10[6] = supportsPerUpdateMessageStreams;
  v10[7] = supportsRegistryPreviews;
  v10[8] = supportsExternalRegistries;
  v10[9] = jitCapabilities.supportsJITLinking;
  v10[10] = jitCapabilities.supportsLoadCommands;
  result.supportsExternalRegistries = supportsPreviewVariants;
  result.supportsExecutionPoints = supportsExecutionPoints;
  return result;
}

void static OSCapabilities.empty.getter(uint64_t a1@<X8>)
{
  *(_DWORD *)(a1 + 7) = 0;
  *(void *)a1 = 0;
}

uint64_t OSCapabilities.supportsExecutionPoints.getter()
{
  return *v0;
}

uint64_t OSCapabilities.supportsExecutionPoints.setter(uint64_t result)
{
  unsigned char *v1 = result;
  return result;
}

uint64_t (*OSCapabilities.supportsExecutionPoints.modify())()
{
  return nullsub_1;
}

uint64_t OSCapabilities.supportsPreviewVariants.getter()
{
  return *(unsigned __int8 *)(v0 + 1);
}

uint64_t OSCapabilities.supportsPreviewVariants.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 1) = result;
  return result;
}

uint64_t (*OSCapabilities.supportsPreviewVariants.modify())()
{
  return nullsub_1;
}

uint64_t OSCapabilities.supportsContentOverrides.getter()
{
  return *(unsigned __int8 *)(v0 + 2);
}

uint64_t OSCapabilities.supportsContentOverrides.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 2) = result;
  return result;
}

uint64_t (*OSCapabilities.supportsContentOverrides.modify())()
{
  return nullsub_1;
}

uint64_t OSCapabilities.supportsScreenshotRequests.getter()
{
  return *(unsigned __int8 *)(v0 + 3);
}

uint64_t OSCapabilities.supportsScreenshotRequests.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 3) = result;
  return result;
}

uint64_t (*OSCapabilities.supportsScreenshotRequests.modify())()
{
  return nullsub_1;
}

uint64_t OSCapabilities.supportsNSPreviewHostableMacPreviews.getter()
{
  return *(unsigned __int8 *)(v0 + 4);
}

uint64_t OSCapabilities.supportsNSPreviewHostableMacPreviews.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 4) = result;
  return result;
}

uint64_t (*OSCapabilities.supportsNSPreviewHostableMacPreviews.modify())()
{
  return nullsub_1;
}

uint64_t OSCapabilities.supportsNSPreviewHostableCatalystPreviews.getter()
{
  return *(unsigned __int8 *)(v0 + 5);
}

uint64_t OSCapabilities.supportsNSPreviewHostableCatalystPreviews.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 5) = result;
  return result;
}

uint64_t (*OSCapabilities.supportsNSPreviewHostableCatalystPreviews.modify())()
{
  return nullsub_1;
}

uint64_t OSCapabilities.supportsPerUpdateMessageStreams.getter()
{
  return *(unsigned __int8 *)(v0 + 6);
}

uint64_t OSCapabilities.supportsPerUpdateMessageStreams.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 6) = result;
  return result;
}

uint64_t (*OSCapabilities.supportsPerUpdateMessageStreams.modify())()
{
  return nullsub_1;
}

uint64_t OSCapabilities.supportsRegistryPreviews.getter()
{
  return *(unsigned __int8 *)(v0 + 7);
}

uint64_t OSCapabilities.supportsRegistryPreviews.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 7) = result;
  return result;
}

uint64_t (*OSCapabilities.supportsRegistryPreviews.modify())()
{
  return nullsub_1;
}

uint64_t OSCapabilities.supportsExternalRegistries.getter()
{
  return *(unsigned __int8 *)(v0 + 8);
}

uint64_t OSCapabilities.supportsExternalRegistries.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 8) = result;
  return result;
}

uint64_t (*OSCapabilities.supportsExternalRegistries.modify())()
{
  return nullsub_1;
}

uint64_t OSCapabilities.jitCapabilities.getter()
{
  if (*(unsigned char *)(v0 + 10)) {
    int v1 = 256;
  }
  else {
    int v1 = 0;
  }
  return v1 | *(unsigned __int8 *)(v0 + 9);
}

uint64_t OSCapabilities.jitCapabilities.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 9) = result & 1;
  *(unsigned char *)(v1 + 10) = BYTE1(result) & 1;
  return result;
}

uint64_t (*OSCapabilities.jitCapabilities.modify())()
{
  return nullsub_1;
}

unint64_t sub_25A5B9FC4(char a1)
{
  unint64_t result = 0xD000000000000017;
  switch(a1)
  {
    case 2:
      unint64_t result = 0xD000000000000018;
      break;
    case 3:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 4:
      unint64_t result = 0xD000000000000024;
      break;
    case 5:
      unint64_t result = 0xD000000000000029;
      break;
    case 6:
      unint64_t result = 0xD00000000000001FLL;
      break;
    case 7:
      unint64_t result = 0xD000000000000018;
      break;
    case 8:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 9:
      unint64_t result = 0x626170614374696ALL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_25A5BA0D4(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4)
{
  return sub_25A5BCE04(a1, a2, a3, a4, (uint64_t (*)(uint64_t))sub_25A5B9FC4);
}

uint64_t sub_25A5BA0EC(uint64_t a1, uint64_t a2)
{
  return sub_25A5BCEB4(a1, a2, (void (*)(uint64_t))sub_25A5B9FC4);
}

uint64_t sub_25A5BA104(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_25A5BCF38(a1, a2, a3, (void (*)(void))sub_25A5B9FC4);
}

uint64_t sub_25A5BA11C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_25A5BCFA8(a1, a2, a3, (void (*)(uint64_t))sub_25A5B9FC4);
}

uint64_t sub_25A5BA134@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_25A5C2D00();
  *a1 = result;
  return result;
}

unint64_t sub_25A5BA164@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_25A5B9FC4(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_25A5BA190()
{
  return sub_25A5B9FC4(*v0);
}

uint64_t OSCapabilities.propertyListValue.getter()
{
  return sub_25A622780();
}

uint64_t sub_25A5BA228()
{
  return sub_25A622A10();
}

uint64_t OSCapabilities.init(propertyListValue:)@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t KeyPath = swift_getKeyPath();
  sub_25A5BA6FC(KeyPath, a1, 0);
  if (v2)
  {
    uint64_t v15 = sub_25A6227C0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(a1, v15);
    return swift_release();
  }
  else
  {
    swift_release();
    uint64_t v6 = swift_getKeyPath();
    sub_25A5BA6FC(v6, a1, 1);
    swift_release();
    uint64_t v7 = swift_getKeyPath();
    sub_25A5BA6FC(v7, a1, 2);
    swift_release();
    uint64_t v8 = swift_getKeyPath();
    sub_25A5BA6FC(v8, a1, 3);
    swift_release();
    uint64_t v9 = swift_getKeyPath();
    sub_25A5BA6FC(v9, a1, 4);
    swift_release();
    uint64_t v10 = swift_getKeyPath();
    sub_25A5BA6FC(v10, a1, 5);
    swift_release();
    uint64_t v11 = swift_getKeyPath();
    sub_25A5BA6FC(v11, a1, 6);
    swift_release();
    uint64_t v12 = swift_getKeyPath();
    sub_25A5BA6FC(v12, a1, 7);
    swift_release();
    uint64_t v13 = swift_getKeyPath();
    sub_25A5BA6FC(v13, a1, 8);
    swift_release();
    uint64_t v14 = swift_getKeyPath();
    sub_25A5BA7B8(v14, a1, 9);
    uint64_t v16 = sub_25A6227C0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(a1, v16);
    uint64_t result = swift_release();
    *a2 = 0;
    a2[1] = 0;
    a2[2] = 0;
    a2[3] = 0;
    a2[4] = 0;
    a2[5] = 0;
    a2[6] = 0;
    a2[7] = 0;
    a2[8] = 0;
    a2[9] = 0;
    a2[10] = 0;
  }
  return result;
}

uint64_t sub_25A5BA6FC(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v7 = &type metadata for OSCapabilities.Key;
  unint64_t v8 = sub_25A5C902C();
  v6[0] = a3;
  sub_25A622760();
  uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
  if (!v3 && v9 != 2)
  {
    v6[0] = v9 & 1;
    return swift_setAtWritableKeyPath();
  }
  return result;
}

uint64_t sub_25A5BA7B8(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v7 = &type metadata for OSCapabilities.Key;
  unint64_t v8 = sub_25A5C902C();
  v6[0] = a3;
  sub_25A5C9080();
  sub_25A622760();
  uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
  if (!v3 && v9 != 2)
  {
    v6[0] = v9 & 1;
    v6[1] = v10 & 1;
    return swift_setAtWritableKeyPath();
  }
  return result;
}

uint64_t sub_25A5BA884()
{
  return sub_25A622780();
}

uint64_t sub_25A5BA914@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return OSCapabilities.init(propertyListValue:)(a1, a2);
}

uint64_t AgentDescriptor.idAcrossRelaunches.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AgentDescriptor.idAcrossRelaunches.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  void *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*AgentDescriptor.idAcrossRelaunches.modify())()
{
  return nullsub_1;
}

uint64_t AgentDescriptor.bundle.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[3];
  uint64_t v4 = v1[4];
  uint64_t v3 = v1[5];
  *a1 = v1[2];
  a1[1] = v2;
  a1[2] = v4;
  a1[3] = v3;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

__n128 AgentDescriptor.bundle.setter(__n128 *a1)
{
  __n128 v5 = *a1;
  unint64_t v2 = a1[1].n128_u64[0];
  unint64_t v3 = a1[1].n128_u64[1];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __n128 result = v5;
  v1[1] = v5;
  v1[2].n128_u64[0] = v2;
  v1[2].n128_u64[1] = v3;
  return result;
}

uint64_t (*AgentDescriptor.bundle.modify())()
{
  return nullsub_1;
}

void __swiftcall AgentDescriptor.init(idAcrossRelaunches:bundle:)(PreviewsMessagingOS::AgentDescriptor *__return_ptr retstr, Swift::String idAcrossRelaunches, PreviewsMessagingOS::AgentDescriptor::Bundle bundle)
{
  uint64_t v3 = *(void *)bundle.bundleID._countAndFlagsBits;
  uint64_t v4 = *(void **)(bundle.bundleID._countAndFlagsBits + 8);
  retstr->idAcrossRelaunches = idAcrossRelaunches;
  retstr->bundle.bundleID._uint64_t countAndFlagsBits = v3;
  retstr->bundle.bundleID._object = v4;
  retstr->bundle.path = *(Swift::String_optional *)(bundle.bundleID._countAndFlagsBits + 16);
}

uint64_t sub_25A5BAA8C(char a1)
{
  if (a1) {
    return 0x656C646E7562;
  }
  else {
    return 0xD000000000000012;
  }
}

uint64_t sub_25A5BAAC4(char *a1, char *a2)
{
  return sub_25A5EC6B4(*a1, *a2);
}

uint64_t sub_25A5BAAD0()
{
  return sub_25A618600();
}

uint64_t sub_25A5BAAD8()
{
  return sub_25A54BFC4();
}

uint64_t sub_25A5BAAE0()
{
  return sub_25A61BA9C();
}

uint64_t sub_25A5BAAE8@<X0>(char *a1@<X8>)
{
  return sub_25A56B748(a1);
}

uint64_t sub_25A5BAAF4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_25A5BAA8C(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_25A5BAB20()
{
  return sub_25A5BAA8C(*v0);
}

uint64_t AgentDescriptor.propertyListValue.getter()
{
  uint64_t v1 = sub_25A6227C0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = &v7[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  long long v5 = v0[1];
  long long v11 = *v0;
  long long v12 = v5;
  long long v13 = v0[2];
  unint64_t v8 = &v11;
  sub_25A622780();
  long long v9 = v12;
  long long v10 = v13;
  sub_25A5C25FC();
  sub_25A622AF0();
  sub_25A622720();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v2 + 8))(v4, v1);
}

uint64_t sub_25A5BAC58()
{
  return sub_25A622A80();
}

void AgentDescriptor.init(propertyListValue:)(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_25A6227C0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  unint64_t v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  *((void *)&v18 + 1) = &type metadata for AgentDescriptor.Key;
  unint64_t v9 = sub_25A5C2650();
  unint64_t v19 = v9;
  LOBYTE(v17[0]) = 0;
  sub_25A622710();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
  if (v2)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a1, v5);
    sub_25A5C25FC();
    sub_25A622B00();

    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    uint64_t v10 = 0;
    uint64_t v11 = v17[0];
    uint64_t v12 = v17[1];
    unint64_t v13 = 0xE000000000000000;
    long long v14 = v18;
  }
  else
  {
    v15[0] = v20;
    unint64_t v22 = v21;
    *((void *)&v18 + 1) = &type metadata for AgentDescriptor.Key;
    unint64_t v19 = v9;
    LOBYTE(v17[0]) = 1;
    sub_25A5C25FC();
    sub_25A622710();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
    uint64_t v11 = v15[1];
    uint64_t v12 = v15[2];
    long long v14 = v16;
    uint64_t v10 = v15[0];
    unint64_t v13 = v22;
  }
  *(void *)a2 = v10;
  *(void *)(a2 + 8) = v13;
  *(void *)(a2 + 16) = v11;
  *(void *)(a2 + 24) = v12;
  *(_OWORD *)(a2 + 32) = v14;
}

uint64_t AgentDescriptor.hash(into:)()
{
  uint64_t v1 = *(void *)(v0 + 40);
  swift_bridgeObjectRetain();
  sub_25A622DF0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25A622DF0();
  if (v1)
  {
    sub_25A623470();
    swift_bridgeObjectRetain();
    sub_25A622DF0();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease_n();
  }
  else
  {
    sub_25A623470();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
}

uint64_t AgentDescriptor.hashValue.getter()
{
  uint64_t v1 = *(void *)(v0 + 40);
  sub_25A623450();
  swift_bridgeObjectRetain();
  sub_25A622DF0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25A622DF0();
  sub_25A623470();
  if (v1)
  {
    swift_bridgeObjectRetain();
    sub_25A622DF0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return sub_25A6234A0();
}

uint64_t sub_25A5BB150()
{
  uint64_t v1 = sub_25A6227C0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = &v7[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  long long v5 = v0[1];
  long long v11 = *v0;
  long long v12 = v5;
  long long v13 = v0[2];
  unint64_t v8 = &v11;
  sub_25A622780();
  long long v9 = v12;
  long long v10 = v13;
  sub_25A5C25FC();
  sub_25A622AF0();
  sub_25A622720();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v2 + 8))(v4, v1);
}

void sub_25A5BB280(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
}

uint64_t sub_25A5BB29C()
{
  uint64_t v1 = *(void *)(v0 + 40);
  swift_bridgeObjectRetain();
  sub_25A622DF0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25A622DF0();
  if (v1)
  {
    sub_25A623470();
    swift_bridgeObjectRetain();
    sub_25A622DF0();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease_n();
  }
  else
  {
    sub_25A623470();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_25A5BB39C()
{
  uint64_t v1 = *(void *)(v0 + 40);
  sub_25A623450();
  swift_bridgeObjectRetain();
  sub_25A622DF0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25A622DF0();
  sub_25A623470();
  if (v1)
  {
    swift_bridgeObjectRetain();
    sub_25A622DF0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return sub_25A6234A0();
}

uint64_t AgentDescriptor.bundleID.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AgentDescriptor.path.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AgentDescriptor.description.getter()
{
  uint64_t v1 = v0[5];
  uint64_t v3 = *v0;
  swift_bridgeObjectRetain();
  sub_25A622E00();
  swift_bridgeObjectRetain_n();
  if (v1)
  {
    swift_bridgeObjectRetain();
    sub_25A622E00();
    sub_25A622E00();
  }
  sub_25A622E00();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t AgentDescriptor.Bundle.bundleID.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AgentDescriptor.Bundle.bundleID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  void *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*AgentDescriptor.Bundle.bundleID.modify())()
{
  return nullsub_1;
}

uint64_t AgentDescriptor.Bundle.path.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AgentDescriptor.Bundle.path.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t (*AgentDescriptor.Bundle.path.modify())()
{
  return nullsub_1;
}

PreviewsMessagingOS::AgentDescriptor::Bundle __swiftcall AgentDescriptor.Bundle.init(bundleID:path:)(Swift::String bundleID, Swift::String_optional path)
{
  v2->value = bundleID;
  v2[1] = path;
  result.path = path;
  result.bundleID = bundleID;
  return result;
}

uint64_t sub_25A5BB6E8(char a1)
{
  return *(void *)&aBundleidpath_0[8 * a1];
}

uint64_t sub_25A5BB708(char a1)
{
  if (a1) {
    return 0x42646E4168746170;
  }
  else {
    return 0x4449656C646E7562;
  }
}

uint64_t sub_25A5BB74C(char *a1, char *a2)
{
  return sub_25A5EC57C(*a1, *a2);
}

uint64_t sub_25A5BB758()
{
  return sub_25A618684();
}

uint64_t sub_25A5BB760()
{
  return sub_25A54BEF8();
}

uint64_t sub_25A5BB768()
{
  return sub_25A61BBA8();
}

uint64_t sub_25A5BB770@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_25A570B50();
  *a1 = result;
  return result;
}

uint64_t sub_25A5BB7A8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_25A5BB6E8(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_25A5BB7D4()
{
  return sub_25A5BB6E8(*v0);
}

uint64_t sub_25A5BB7DC(char *a1, char *a2)
{
  return sub_25A5EC604(*a1, *a2);
}

uint64_t sub_25A5BB7E8()
{
  return sub_25A6186F0();
}

uint64_t sub_25A5BB7F0()
{
  return sub_25A54BF4C();
}

uint64_t sub_25A5BB7F8()
{
  return sub_25A61BB1C();
}

uint64_t sub_25A5BB800@<X0>(char *a1@<X8>)
{
  return sub_25A56B748(a1);
}

uint64_t sub_25A5BB80C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_25A5BB708(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_25A5BB838(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_25A5C938C();
  uint64_t v5 = MEMORY[0x263F60648];

  return MEMORY[0x270F55C68](a1, a2, v4, v5);
}

uint64_t sub_25A5BB894()
{
  return sub_25A622B20();
}

uint64_t AgentDescriptor.Bundle.propertyListValue.getter()
{
  return sub_25A5C1048();
}

uint64_t sub_25A5BB914()
{
  return sub_25A622A70();
}

uint64_t AgentDescriptor.Bundle.init(propertyListValue:)@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  long long v14 = &type metadata for AgentDescriptor.Bundle.Key;
  unint64_t v5 = sub_25A5C26B0();
  unint64_t v15 = v5;
  v13[0] = 0;
  sub_25A622710();
  if (v2)
  {
    uint64_t v6 = sub_25A6227C0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
    uint64_t v8 = v16;
    uint64_t v7 = v17;
    long long v14 = &type metadata for AgentDescriptor.Bundle.Key;
    unint64_t v15 = v5;
    v13[0] = 1;
    sub_25A622760();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
    uint64_t v10 = sub_25A6227C0();
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(a1, v10);
    *a2 = v8;
    a2[1] = v7;
    a2[2] = v11;
    a2[3] = v12;
  }
  return result;
}

uint64_t AgentDescriptor.Bundle.hash(into:)()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  sub_25A622DF0();
  swift_bridgeObjectRelease();
  if (!v1) {
    return sub_25A623470();
  }
  sub_25A623470();
  swift_bridgeObjectRetain();
  sub_25A622DF0();

  return swift_bridgeObjectRelease();
}

uint64_t AgentDescriptor.Bundle.hashValue.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  sub_25A623450();
  sub_25A622DF0();
  sub_25A623470();
  if (v1)
  {
    swift_bridgeObjectRetain();
    sub_25A622DF0();
    swift_bridgeObjectRelease();
  }
  return sub_25A6234A0();
}

uint64_t sub_25A5BBCB0()
{
  return sub_25A5C12BC();
}

uint64_t sub_25A5BBCC8@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return AgentDescriptor.Bundle.init(propertyListValue:)(a1, a2);
}

uint64_t sub_25A5BBCE0()
{
  uint64_t v1 = *(void *)(v0 + 24);
  sub_25A623450();
  sub_25A622DF0();
  sub_25A623470();
  if (v1)
  {
    swift_bridgeObjectRetain();
    sub_25A622DF0();
    swift_bridgeObjectRelease();
  }
  return sub_25A6234A0();
}

uint64_t sub_25A5BBD7C()
{
  uint64_t v1 = *(void *)(v0 + 24);
  sub_25A622DF0();
  if (!v1) {
    return sub_25A623470();
  }
  sub_25A623470();
  swift_bridgeObjectRetain();
  sub_25A622DF0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25A5BBE08()
{
  uint64_t v1 = *(void *)(v0 + 24);
  sub_25A623450();
  sub_25A622DF0();
  sub_25A623470();
  if (v1)
  {
    swift_bridgeObjectRetain();
    sub_25A622DF0();
    swift_bridgeObjectRelease();
  }
  return sub_25A6234A0();
}

uint64_t AgentDescriptor.Bundle.fileURL.getter@<X0>(uint64_t a1@<X8>)
{
  if (*(void *)(v1 + 24))
  {
    swift_bridgeObjectRetain();
    sub_25A622260();
    uint64_t v3 = sub_25A6222B0();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(a1, 0, 1, v3);
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v5 = sub_25A6222B0();
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56);
    return v6(a1, 1, 1, v5);
  }
}

uint64_t AgentDescriptor.Bundle.description.getter()
{
  uint64_t v1 = *v0;
  if (v0[3])
  {
    uint64_t v3 = *v0;
    swift_bridgeObjectRetain();
    sub_25A622E00();
    sub_25A622E00();
    return v3;
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  return v1;
}

uint64_t AgentDescriptor.Bundle.missingPathError.getter@<X0>(void *a1@<X8>)
{
  uint64_t v4 = *v1;
  uint64_t v3 = v1[1];
  a1[3] = &type metadata for AgentDescriptor.Bundle.MissingPathError;
  a1[4] = sub_25A5C2704();
  *a1 = v4;
  a1[1] = v3;

  return swift_bridgeObjectRetain();
}

unint64_t sub_25A5BC080()
{
  return 0xD000000000000011;
}

unint64_t sub_25A5BC110()
{
  return 0xD000000000000043;
}

unint64_t sub_25A5BC12C()
{
  return sub_25A5BC080();
}

uint64_t sub_25A5BC134(uint64_t a1)
{
  unint64_t v2 = sub_25A5C2704();

  return MEMORY[0x270F55A28](a1, v2);
}

uint64_t sub_25A5BC170(uint64_t a1)
{
  unint64_t v2 = sub_25A5C2704();

  return MEMORY[0x270F55A08](a1, v2);
}

uint64_t PreviewAgentRole.displayName.getter()
{
  return *(void *)&aPreviewsrunnin_0[8 * *v0];
}

uint64_t PreviewAgentRole.description.getter()
{
  return *(void *)&aPreviewsrunnin_0[8 * *v0];
}

PreviewsMessagingOS::PreviewAgentRole_optional __swiftcall PreviewAgentRole.init(rawValue:)(Swift::String rawValue)
{
  unint64_t v2 = v1;
  unint64_t v3 = sub_25A6232B0();
  result.value = swift_bridgeObjectRelease();
  char v5 = 3;
  if (v3 < 3) {
    char v5 = v3;
  }
  char *v2 = v5;
  return result;
}

uint64_t PreviewAgentRole.rawValue.getter()
{
  return *(void *)&aPreviewsrunnin_1[8 * *v0];
}

uint64_t sub_25A5BC278(char *a1, char *a2)
{
  return sub_25A5EB478(*a1, *a2);
}

uint64_t sub_25A5BC284()
{
  return sub_25A618780();
}

uint64_t sub_25A5BC28C()
{
  return sub_25A54B5E8();
}

uint64_t sub_25A5BC294()
{
  return sub_25A61C530();
}

PreviewsMessagingOS::PreviewAgentRole_optional sub_25A5BC29C(Swift::String *a1)
{
  return PreviewAgentRole.init(rawValue:)(*a1);
}

uint64_t sub_25A5BC2A8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = PreviewAgentRole.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_25A5BC2D4(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_25A5C8E78();
  uint64_t v5 = MEMORY[0x263F60648];

  return MEMORY[0x270F55C68](a1, a2, v4, v5);
}

uint64_t sub_25A5BC330()
{
  return sub_25A622B20();
}

uint64_t PreviewAgentBootstrapMode.displayName.getter(char a1)
{
  if (a1) {
    return 0x636578452054494ALL;
  }
  else {
    return 0x6E6942206C6C7546;
  }
}

uint64_t PreviewAgentBootstrapMode.description.getter(char a1)
{
  if (a1) {
    return 0x636578452054494ALL;
  }
  else {
    return 0x6E6942206C6C7546;
  }
}

PreviewsMessagingOS::PreviewAgentBootstrapMode_optional __swiftcall PreviewAgentBootstrapMode.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v1 = sub_25A6232B0();
  swift_bridgeObjectRelease();
  if (v1 == 1) {
    v2.value = PreviewsMessagingOS_PreviewAgentBootstrapMode_jitExecutor;
  }
  else {
    v2.value = PreviewsMessagingOS_PreviewAgentBootstrapMode_unknownDefault;
  }
  if (v1) {
    return v2;
  }
  else {
    return 0;
  }
}

uint64_t PreviewAgentBootstrapMode.rawValue.getter(char a1)
{
  if (a1) {
    return 0x756365784574696ALL;
  }
  else {
    return 0x616E69426C6C7566;
  }
}

uint64_t sub_25A5BC4C0(char *a1, char *a2)
{
  char v2 = *a2;
  uint64_t v3 = PreviewAgentBootstrapMode.rawValue.getter(*a1);
  uint64_t v5 = v4;
  if (v3 == PreviewAgentBootstrapMode.rawValue.getter(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_25A6233B0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_25A5BC54C()
{
  char v1 = *v0;
  sub_25A623450();
  PreviewAgentBootstrapMode.rawValue.getter(v1);
  sub_25A622DF0();
  swift_bridgeObjectRelease();
  return sub_25A6234A0();
}

uint64_t sub_25A5BC5B0()
{
  PreviewAgentBootstrapMode.rawValue.getter(*v0);
  sub_25A622DF0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25A5BC604()
{
  char v1 = *v0;
  sub_25A623450();
  PreviewAgentBootstrapMode.rawValue.getter(v1);
  sub_25A622DF0();
  swift_bridgeObjectRelease();
  return sub_25A6234A0();
}

uint64_t sub_25A5BC664@<X0>(char *a1@<X8>)
{
  return sub_25A56B748(a1);
}

uint64_t sub_25A5BC670@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = PreviewAgentBootstrapMode.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_25A5BC69C()
{
  return PreviewAgentBootstrapMode.description.getter(*v0);
}

uint64_t sub_25A5BC6A4(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_25A5C8E24();
  uint64_t v5 = MEMORY[0x263F60648];

  return MEMORY[0x270F55C68](a1, a2, v4, v5);
}

uint64_t sub_25A5BC700()
{
  return sub_25A622B20();
}

uint64_t CapabilitiesPayload.isRunningInXTP.getter()
{
  return *v0;
}

uint64_t CapabilitiesPayload.isRunningInXTP.setter(uint64_t result)
{
  unsigned char *v1 = result;
  return result;
}

uint64_t (*CapabilitiesPayload.isRunningInXTP.modify())()
{
  return nullsub_1;
}

PreviewsMessagingOS::CapabilitiesPayload __swiftcall CapabilitiesPayload.init()()
{
  char v1 = v0;
  result.isRunningInXTP = sub_25A622BB0();
  Swift::Bool *v1 = result.isRunningInXTP;
  return result;
}

uint64_t LaunchPayload.workspaceID.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t LaunchPayload.workspaceID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  void *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*LaunchPayload.workspaceID.modify())()
{
  return nullsub_1;
}

uint64_t LaunchPayload.agentDescriptor.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  uint64_t v4 = v1[5];
  uint64_t v6 = v1[6];
  uint64_t v5 = v1[7];
  *a1 = v1[2];
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  a1[4] = v6;
  a1[5] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

__n128 LaunchPayload.agentDescriptor.setter(long long *a1)
{
  __n128 v5 = (__n128)a1[1];
  long long v6 = *a1;
  uint64_t v2 = *((void *)a1 + 4);
  uint64_t v3 = *((void *)a1 + 5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __n128 result = v5;
  *(_OWORD *)(v1 + 16) = v6;
  *(__n128 *)(v1 + 32) = v5;
  *(void *)(v1 + 48) = v2;
  *(void *)(v1 + 56) = v3;
  return result;
}

uint64_t (*LaunchPayload.agentDescriptor.modify())()
{
  return nullsub_1;
}

void LaunchPayload.agentRole.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 64);
}

unsigned char *LaunchPayload.agentRole.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 64) = *result;
  return result;
}

uint64_t (*LaunchPayload.agentRole.modify())()
{
  return nullsub_1;
}

uint64_t LaunchPayload.agentBootstrapMode.getter()
{
  return *(unsigned __int8 *)(v0 + 65);
}

uint64_t LaunchPayload.agentBootstrapMode.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 65) = result & 1;
  return result;
}

uint64_t (*LaunchPayload.agentBootstrapMode.modify())()
{
  return nullsub_1;
}

uint64_t LaunchPayload.environment.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t LaunchPayload.environment.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 72) = a1;
  return result;
}

uint64_t (*LaunchPayload.environment.modify())()
{
  return nullsub_1;
}

uint64_t LaunchPayload.arguments.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t LaunchPayload.arguments.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 80) = a1;
  return result;
}

uint64_t (*LaunchPayload.arguments.modify())()
{
  return nullsub_1;
}

void LaunchPayload.processType.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 88);
}

unsigned char *LaunchPayload.processType.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 88) = *result;
  return result;
}

uint64_t (*LaunchPayload.processType.modify())()
{
  return nullsub_1;
}

double LaunchPayload.binaryType.getter@<D0>(double *a1@<X8>)
{
  double result = *(double *)(v1 + 92);
  *a1 = result;
  return result;
}

double LaunchPayload.binaryType.setter(double *a1)
{
  double result = *a1;
  *(double *)(v1 + 92) = *a1;
  return result;
}

uint64_t (*LaunchPayload.binaryType.modify())()
{
  return nullsub_1;
}

uint64_t LaunchPayload.targetDescriptions.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t LaunchPayload.targetDescriptions.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 104) = a1;
  return result;
}

uint64_t (*LaunchPayload.targetDescriptions.modify())()
{
  return nullsub_1;
}

__n128 LaunchPayload.hostAuditToken.getter@<Q0>(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 144);
  __n128 result = *(__n128 *)(v1 + 112);
  long long v4 = *(_OWORD *)(v1 + 128);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 32) = v2;
  return result;
}

uint64_t LaunchPayload.hostAuditToken.setter(uint64_t a1)
{
  return sub_25A55C73C(a1, v1 + 112, &qword_26A42A9E8);
}

uint64_t (*LaunchPayload.hostAuditToken.modify())()
{
  return nullsub_1;
}

double LaunchPayload.init(workspaceID:agentDescriptor:agentRole:agentBootstrapMode:environment:arguments:processType:binaryType:targetDescriptions:hostAuditToken:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, long long *a3@<X2>, char *a4@<X3>, char a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char *a8@<X7>, uint64_t a9@<X8>, void *a10, uint64_t a11, uint64_t a12)
{
  char v19 = a5 & 1;
  sub_25A55C73C(a12, (uint64_t)v28, &qword_26A42A9E8);
  long long v20 = *a3;
  uint64_t v21 = *((void *)a3 + 2);
  uint64_t v22 = *((void *)a3 + 3);
  char v23 = *a4;
  char v24 = *a8;
  char v30 = v29;
  *(void *)a9 = a1;
  *(void *)(a9 + 8) = a2;
  *(_OWORD *)(a9 + 16) = v20;
  *(void *)(a9 + 32) = v21;
  *(void *)(a9 + 40) = v22;
  *(_OWORD *)(a9 + 48) = a3[2];
  *(unsigned char *)(a9 + 64) = v23;
  *(unsigned char *)(a9 + 65) = v19;
  *(void *)(a9 + 72) = a6;
  *(void *)(a9 + 80) = a7;
  *(unsigned char *)(a9 + 88) = v24;
  *(void *)(a9 + 92) = *a10;
  *(void *)(a9 + 104) = a11;
  double result = *(double *)v28;
  long long v26 = v28[1];
  *(_OWORD *)(a9 + 112) = v28[0];
  *(_OWORD *)(a9 + 128) = v26;
  *(unsigned char *)(a9 + 144) = v30;
  return result;
}

unint64_t sub_25A5BCC48(char a1)
{
  unint64_t result = 0xD000000000000012;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x656449746E656761;
      break;
    case 2:
      unint64_t result = 0x6C6F52746E656761;
      break;
    case 3:
    case 8:
      return result;
    case 4:
      unint64_t result = 0x6D6E6F7269766E65;
      break;
    case 5:
      unint64_t result = 0x746E656D75677261;
      break;
    case 6:
      unint64_t result = 0x54737365636F7270;
      break;
    case 7:
      unint64_t result = 0x79547972616E6962;
      break;
    case 9:
      unint64_t result = 0x736544746E656761;
      break;
    case 10:
      unint64_t result = 0x6964754174736F68;
      break;
    default:
      unint64_t result = 0x636170736B726F77;
      break;
  }
  return result;
}

uint64_t sub_25A5BCDEC(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4)
{
  return sub_25A5BCE04(a1, a2, a3, a4, (uint64_t (*)(uint64_t))sub_25A5BCC48);
}

uint64_t sub_25A5BCE04(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t))
{
  uint64_t v6 = *a2;
  uint64_t v7 = a5(*a1);
  uint64_t v9 = v8;
  if (v7 == a5(v6) && v9 == v10) {
    char v12 = 1;
  }
  else {
    char v12 = sub_25A6233B0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v12 & 1;
}

uint64_t sub_25A5BCE9C(uint64_t a1, uint64_t a2)
{
  return sub_25A5BCEB4(a1, a2, (void (*)(uint64_t))sub_25A5BCC48);
}

uint64_t sub_25A5BCEB4(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t v5 = *v3;
  sub_25A623450();
  a3(v5);
  sub_25A622DF0();
  swift_bridgeObjectRelease();
  return sub_25A6234A0();
}

uint64_t sub_25A5BCF20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_25A5BCF38(a1, a2, a3, (void (*)(void))sub_25A5BCC48);
}

uint64_t sub_25A5BCF38(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  a4(*v4);
  sub_25A622DF0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25A5BCF90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_25A5BCFA8(a1, a2, a3, (void (*)(uint64_t))sub_25A5BCC48);
}

uint64_t sub_25A5BCFA8(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v6 = *v4;
  sub_25A623450();
  a4(v6);
  sub_25A622DF0();
  swift_bridgeObjectRelease();
  return sub_25A6234A0();
}

uint64_t sub_25A5BD010@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_25A5C2D4C();
  *a1 = result;
  return result;
}

unint64_t sub_25A5BD040@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_25A5BCC48(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_25A5BD06C()
{
  return sub_25A5BCC48(*v0);
}

uint64_t LaunchPayload.propertyListValue.getter()
{
  return sub_25A622780();
}

uint64_t sub_25A5BD0E4(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = a1[1];
  uint64_t v3 = a1[2];
  uint64_t v4 = a1[3];
  uint64_t v5 = a1[4];
  uint64_t v6 = a1[5];
  uint64_t v7 = a1[6];
  uint64_t v8 = a1[7];
  char v9 = *((unsigned char *)a1 + 64);
  char v11 = *((unsigned char *)a1 + 65);
  uint64_t v12 = a1[9];
  uint64_t v13 = a1[10];
  char v14 = *((unsigned char *)a1 + 88);
  uint64_t v15 = *(uint64_t *)((char *)a1 + 92);
  uint64_t v16 = a1[13];
  sub_25A55C73C((uint64_t)(a1 + 14), (uint64_t)v48, &qword_26A42A9E8);
  char v47 = 0;
  uint64_t v45 = v1;
  uint64_t v46 = v2;
  char v44 = 1;
  uint64_t v40 = v5;
  uint64_t v41 = v6;
  uint64_t v42 = v7;
  uint64_t v43 = v8;
  char v39 = 9;
  uint64_t v33 = v3;
  uint64_t v34 = v4;
  uint64_t v35 = v5;
  uint64_t v36 = v6;
  uint64_t v37 = v7;
  uint64_t v38 = v8;
  char v32 = 2;
  char v31 = v9;
  char v30 = 3;
  char v29 = v11;
  char v28 = 4;
  uint64_t v27 = v12;
  char v26 = 5;
  uint64_t v25 = v13;
  char v24 = 6;
  char v23 = v14;
  char v22 = 7;
  uint64_t v20 = v15;
  char v21 = 0;
  char v19 = 8;
  uint64_t v18 = v16;
  v17[35] = 10;
  sub_25A55C73C((uint64_t)v48, (uint64_t)v17, &qword_26A42A9E8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A42AA10);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A429438);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A429918);
  type metadata accessor for audit_token_t(0);
  sub_25A5C2760();
  sub_25A5C25FC();
  sub_25A5C27B4();
  sub_25A5C2808();
  sub_25A5C285C();
  sub_25A5C28B0();
  sub_25A58DBD4();
  sub_25A5C2928();
  sub_25A5C297C();
  sub_25A5C332C((unint64_t *)&qword_26A429920, &qword_26A429918, (void (*)(void))sub_25A568078);
  return sub_25A622A00();
}

uint64_t LaunchPayload.init(propertyListValue:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *((void *)&v32 + 1) = &type metadata for LaunchPayload.Key;
  unint64_t v5 = sub_25A5C2760();
  unint64_t v33 = v5;
  LOBYTE(v31) = 9;
  sub_25A5C27B4();
  sub_25A622710();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v31);
    *((void *)&v32 + 1) = &type metadata for LaunchPayload.Key;
    unint64_t v33 = v5;
    LOBYTE(v31) = 1;
    sub_25A622710();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v31);
  uint64_t v6 = v34[1];
  uint64_t v7 = v35;
  uint64_t v18 = v34[2];
  uint64_t v19 = v34[0];
  uint64_t v8 = v37;
  unint64_t v17 = v36;
  uint64_t v35 = &type metadata for LaunchPayload.Key;
  unint64_t v36 = v5;
  LOBYTE(v34[0]) = 0;
  sub_25A622710();
  uint64_t v16 = v7;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
  uint64_t v35 = &type metadata for LaunchPayload.Key;
  unint64_t v36 = v5;
  LOBYTE(v34[0]) = 2;
  sub_25A5C2808();
  sub_25A622760();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
  if (v31 == 3) {
    char v9 = 0;
  }
  else {
    char v9 = v31;
  }
  uint64_t v35 = &type metadata for LaunchPayload.Key;
  unint64_t v36 = v5;
  LOBYTE(v34[0]) = 3;
  sub_25A5C285C();
  sub_25A622760();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
  char v10 = v31;
  uint64_t v35 = &type metadata for LaunchPayload.Key;
  unint64_t v36 = v5;
  LOBYTE(v34[0]) = 4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A42AA10);
  sub_25A5C28B0();
  sub_25A622710();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
  uint64_t v35 = &type metadata for LaunchPayload.Key;
  unint64_t v36 = v5;
  LOBYTE(v34[0]) = 5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A429438);
  sub_25A58DBD4();
  sub_25A622710();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
  uint64_t v35 = &type metadata for LaunchPayload.Key;
  unint64_t v36 = v5;
  LOBYTE(v34[0]) = 6;
  sub_25A5C2928();
  sub_25A622710();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
  uint64_t v35 = &type metadata for LaunchPayload.Key;
  unint64_t v36 = v5;
  LOBYTE(v34[0]) = 7;
  sub_25A5C297C();
  sub_25A622710();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
  uint64_t v35 = &type metadata for LaunchPayload.Key;
  unint64_t v36 = v5;
  LOBYTE(v34[0]) = 8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A429918);
  sub_25A5C332C((unint64_t *)&qword_26A429920, &qword_26A429918, (void (*)(void))sub_25A568078);
  sub_25A622760();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
  uint64_t v11 = v31;
  if (!(void)v31) {
    uint64_t v11 = MEMORY[0x263F8EE78];
  }
  uint64_t v15 = v11;
  uint64_t v35 = &type metadata for LaunchPayload.Key;
  unint64_t v36 = v5;
  LOBYTE(v34[0]) = 10;
  type metadata accessor for audit_token_t(0);
  sub_25A622760();
  uint64_t v12 = sub_25A6227C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(a1, v12);
  uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
  char v20 = v33;
  *(void *)a2 = v29;
  *(void *)(a2 + 8) = v30;
  *(void *)(a2 + 16) = v19;
  *(void *)(a2 + 24) = v6;
  *(void *)(a2 + 32) = v18;
  *(void *)(a2 + 40) = v16;
  *(void *)(a2 + 48) = v17;
  *(void *)(a2 + 56) = v8;
  *(unsigned char *)(a2 + 64) = v9;
  *(unsigned char *)(a2 + 65) = v10 & 1;
  *(_DWORD *)(a2 + 66) = v23;
  *(_WORD *)(a2 + 70) = v24;
  *(void *)(a2 + 72) = v28;
  *(void *)(a2 + 80) = v27;
  *(unsigned char *)(a2 + 88) = v26;
  *(_WORD *)(a2 + 89) = v21;
  *(unsigned char *)(a2 + 91) = v22;
  *(void *)(a2 + 92) = v25;
  *(void *)(a2 + 104) = v15;
  long long v14 = v32;
  *(_OWORD *)(a2 + 112) = v31;
  *(_OWORD *)(a2 + 128) = v14;
  *(unsigned char *)(a2 + 144) = v20;
  return result;
}

uint64_t sub_25A5BDB04()
{
  return sub_25A622780();
}

uint64_t sub_25A5BDB74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return LaunchPayload.init(propertyListValue:)(a1, a2);
}

uint64_t BinaryType.cpuType.getter()
{
  return *v0;
}

uint64_t BinaryType.cpuType.setter(uint64_t result)
{
  _DWORD *v1 = result;
  return result;
}

uint64_t (*BinaryType.cpuType.modify())()
{
  return nullsub_1;
}

uint64_t BinaryType.cpuSubtype.getter()
{
  return *(unsigned int *)(v0 + 4);
}

uint64_t BinaryType.cpuSubtype.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 4) = result;
  return result;
}

uint64_t (*BinaryType.cpuSubtype.modify())()
{
  return nullsub_1;
}

uint64_t BinaryType.init(cpuType:cpuSubtype:)@<X0>(uint64_t result@<X0>, int a2@<W1>, _DWORD *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

double static BinaryType.unspecified.getter@<D0>(void *a1@<X8>)
{
  double result = NAN;
  *a1 = -1;
  return result;
}

uint64_t sub_25A5BDC00(char a1)
{
  if (a1) {
    return 0x7974627553757063;
  }
  else {
    return 0x65707954757063;
  }
}

uint64_t sub_25A5BDC3C(char *a1, char *a2)
{
  return sub_25A5EDBAC(*a1, *a2);
}

uint64_t sub_25A5BDC48()
{
  return sub_25A6187EC();
}

uint64_t sub_25A5BDC50()
{
  return sub_25A54CC48();
}

uint64_t sub_25A5BDC58()
{
  return sub_25A61AC1C();
}

uint64_t sub_25A5BDC60@<X0>(char *a1@<X8>)
{
  return sub_25A56B748(a1);
}

uint64_t sub_25A5BDC6C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_25A5BDC00(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_25A5BDC98()
{
  return sub_25A5BDC00(*v0);
}

uint64_t BinaryType.propertyListValue.getter()
{
  return sub_25A622780();
}

uint64_t sub_25A5BDCE0()
{
  return sub_25A622A80();
}

uint64_t BinaryType.init(propertyListValue:)@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t v12 = &type metadata for BinaryType.Key;
  unint64_t v5 = sub_25A5C29D8();
  unint64_t v13 = v5;
  v11[0] = 0;
  sub_25A622710();
  if (v2)
  {
    uint64_t v7 = sub_25A6227C0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(a1, v7);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
    int v6 = v14;
    uint64_t v12 = &type metadata for BinaryType.Key;
    unint64_t v13 = v5;
    v11[0] = 1;
    sub_25A622710();
    uint64_t v8 = sub_25A6227C0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(a1, v8);
    uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
    *a2 = v6;
    a2[1] = v10;
  }
  return result;
}

uint64_t sub_25A5BDEB0()
{
  return sub_25A622780();
}

uint64_t sub_25A5BDEF0@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  return BinaryType.init(propertyListValue:)(a1, a2);
}

void static ProcessType.homeScreenExtension.getter(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

PreviewsMessagingOS::ProcessType_optional __swiftcall ProcessType.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  uint64_t v3 = sub_25A6232B0();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1) {
    char v5 = 1;
  }
  else {
    char v5 = 2;
  }
  if (!v3) {
    char v5 = 0;
  }
  char *v2 = v5;
  return result;
}

uint64_t ProcessType.rawValue.getter()
{
  if (*v0) {
    return 0xD000000000000013;
  }
  else {
    return 0x746163696C707061;
  }
}

uint64_t sub_25A5BDFC0(char a1)
{
  if (a1) {
    return 0x6574616C756D6973;
  }
  else {
    return 0x746C7561666564;
  }
}

uint64_t sub_25A5BDFFC(char *a1, char *a2)
{
  return sub_25A5ED5A0(*a1, *a2);
}

uint64_t sub_25A5BE008()
{
  return sub_25A618874();
}

uint64_t sub_25A5BE010()
{
  return sub_25A54C884();
}

uint64_t sub_25A5BE018()
{
  return sub_25A61B07C();
}

PreviewsMessagingOS::ProcessType_optional sub_25A5BE020(Swift::String *a1)
{
  return ProcessType.init(rawValue:)(*a1);
}

uint64_t sub_25A5BE02C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = ProcessType.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_25A5BE054(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_25A5C8DD0();
  uint64_t v5 = MEMORY[0x263F60648];

  return MEMORY[0x270F55C68](a1, a2, v4, v5);
}

uint64_t sub_25A5BE0B0()
{
  return sub_25A622B20();
}

uint64_t sub_25A5BE118(char *a1, char *a2)
{
  return sub_25A5EDA7C(*a1, *a2);
}

uint64_t sub_25A5BE124()
{
  return sub_25A618904();
}

uint64_t sub_25A5BE12C()
{
  return sub_25A54CB84();
}

uint64_t sub_25A5BE134()
{
  return sub_25A61AD08();
}

uint64_t sub_25A5BE13C@<X0>(char *a1@<X8>)
{
  return sub_25A56B748(a1);
}

uint64_t sub_25A5BE148@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_25A5BDFC0(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_25A5BE174(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_25A5C8C98();
  uint64_t v5 = MEMORY[0x263F60648];

  return MEMORY[0x270F55C68](a1, a2, v4, v5);
}

uint64_t sub_25A5BE1D0()
{
  return sub_25A622B20();
}

uint64_t sub_25A5BE244@<X0>(BOOL *a1@<X8>)
{
  return sub_25A56C88C(a1);
}

uint64_t sub_25A5BE250@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_25A5C22E4();
  *a1 = result;
  a1[1] = v3;
  return result;
}

_OWORD *DeviceType.propertyListValue.getter()
{
  uint64_t v1 = sub_25A6227C0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  unint64_t v4 = &v6[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_25A5C2A2C(v0, v12);
  uint64_t v7 = v12;
  sub_25A5C2A48();
  sub_25A5C2A9C();
  sub_25A6227A0();
  uint64_t result = sub_25A5C2A2C(v12, v13);
  if (*((void *)&v13[0] + 1))
  {
    long long v8 = v13[0];
    long long v9 = v13[1];
    long long v10 = v13[2];
    long long v11 = v13[3];
    sub_25A5C2AF0();
    sub_25A622AF0();
    sub_25A622720();
    return (_OWORD *)(*(uint64_t (**)(unsigned char *, uint64_t))(v2 + 8))(v4, v1);
  }
  return result;
}

uint64_t DeviceType.init(propertyListValue:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_25A6227C0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  long long v9 = (char *)&v20[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  long long v11 = (char *)&v20[-1] - v10;
  *((void *)&v21 + 1) = &type metadata for DeviceType.Key;
  unint64_t v22 = sub_25A5C2A48();
  sub_25A5C2A9C();
  sub_25A622760();
  if (v2)
  {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
  if (v25 == 2)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v11, a1, v5);
    sub_25A5C2AF0();
    sub_25A622B00();
LABEL_8:
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    uint64_t v13 = v20[0];
    uint64_t v14 = v20[1];
    long long v17 = v21;
    unint64_t v15 = v22;
    uint64_t v16 = v23;
    long long v18 = v24;
    goto LABEL_9;
  }
  if (v25)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v9, a1, v5);
    sub_25A5C2AF0();
    sub_25A622B00();
    goto LABEL_8;
  }
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
  uint64_t v13 = 0;
  uint64_t v14 = 0;
  unint64_t v15 = 0;
  uint64_t v16 = 0;
  long long v17 = 0uLL;
  long long v18 = 0uLL;
LABEL_9:
  *(void *)a2 = v13;
  *(void *)(a2 + 8) = v14;
  *(_OWORD *)(a2 + 16) = v17;
  *(void *)(a2 + 32) = v15;
  *(void *)(a2 + 40) = v16;
  *(_OWORD *)(a2 + 48) = v18;
  return result;
}

uint64_t static DeviceType.== infix(_:_:)(void *a1, void *a2)
{
  uint64_t v3 = a1[1];
  uint64_t v4 = a2[1];
  if (!v3) {
    return v4 == 0;
  }
  if (!v4) {
    return 0;
  }
  if (*a1 == *a2 && v3 == v4) {
    return 1;
  }
  else {
    return sub_25A6233B0();
  }
}

uint64_t DeviceType.hash(into:)()
{
  if (!*(void *)(v0 + 8)) {
    return sub_25A623460();
  }
  sub_25A623460();
  swift_bridgeObjectRetain();
  sub_25A622DF0();

  return swift_bridgeObjectRelease();
}

uint64_t DeviceType.hashValue.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  sub_25A623450();
  sub_25A623460();
  if (v1)
  {
    swift_bridgeObjectRetain();
    sub_25A622DF0();
    swift_bridgeObjectRelease();
  }
  return sub_25A6234A0();
}

_OWORD *sub_25A5BE800()
{
  uint64_t v1 = sub_25A6227C0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = &v6[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_25A5C2A2C(v0, v12);
  uint64_t v7 = v12;
  sub_25A5C2A48();
  sub_25A5C2A9C();
  sub_25A6227A0();
  uint64_t result = sub_25A5C2A2C(v12, v13);
  if (*((void *)&v13[0] + 1))
  {
    long long v8 = v13[0];
    long long v9 = v13[1];
    long long v10 = v13[2];
    long long v11 = v13[3];
    sub_25A5C2AF0();
    sub_25A622AF0();
    sub_25A622720();
    return (_OWORD *)(*(uint64_t (**)(unsigned char *, uint64_t))(v2 + 8))(v4, v1);
  }
  return result;
}

uint64_t sub_25A5BE978@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return DeviceType.init(propertyListValue:)(a1, a2);
}

uint64_t sub_25A5BE990()
{
  uint64_t v1 = *(void *)(v0 + 8);
  sub_25A623450();
  sub_25A623460();
  if (v1)
  {
    swift_bridgeObjectRetain();
    sub_25A622DF0();
    swift_bridgeObjectRelease();
  }
  return sub_25A6234A0();
}

uint64_t sub_25A5BEA10()
{
  if (!*(void *)(v0 + 8)) {
    return sub_25A623460();
  }
  sub_25A623460();
  swift_bridgeObjectRetain();
  sub_25A622DF0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25A5BEA98()
{
  sub_25A623450();
  if (*(void *)(v0 + 8))
  {
    sub_25A623460();
    swift_bridgeObjectRetain();
    sub_25A622DF0();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_25A623460();
  }
  return sub_25A6234A0();
}

uint64_t sub_25A5BEB1C(void *a1, void *a2)
{
  uint64_t v3 = a1[1];
  uint64_t v4 = a2[1];
  if (!v3) {
    return v4 == 0;
  }
  if (!v4) {
    return 0;
  }
  if (*a1 == *a2 && v3 == v4) {
    return 1;
  }
  else {
    return sub_25A6233B0();
  }
}

uint64_t SimulatorDevicePayload.deviceIdentifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SimulatorDevicePayload.deviceIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  void *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*SimulatorDevicePayload.deviceIdentifier.modify())()
{
  return nullsub_1;
}

double SimulatorDevicePayload.displaySize.getter()
{
  return *(double *)(v0 + 16);
}

void SimulatorDevicePayload.displaySize.setter(double a1, double a2)
{
  *(double *)(v2 + 16) = a1;
  *(double *)(v2 + 24) = a2;
}

uint64_t (*SimulatorDevicePayload.displaySize.modify())()
{
  return nullsub_1;
}

double SimulatorDevicePayload.displayScale.getter()
{
  return *(double *)(v0 + 32);
}

void SimulatorDevicePayload.displayScale.setter(double a1)
{
  *(double *)(v1 + 32) = a1;
}

uint64_t (*SimulatorDevicePayload.displayScale.modify())()
{
  return nullsub_1;
}

uint64_t SimulatorDevicePayload.deviceEnvironment.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SimulatorDevicePayload.deviceEnvironment.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 40) = a1;
  return result;
}

uint64_t (*SimulatorDevicePayload.deviceEnvironment.modify())()
{
  return nullsub_1;
}

uint64_t SimulatorDevicePayload.frameBufferMaskPath.getter()
{
  uint64_t v1 = *(void *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SimulatorDevicePayload.frameBufferMaskPath.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 48) = a1;
  *(void *)(v2 + 56) = a2;
  return result;
}

uint64_t (*SimulatorDevicePayload.frameBufferMaskPath.modify())()
{
  return nullsub_1;
}

uint64_t SimulatorDevicePayload.init(deviceIdentifier:displaySize:displayScale:deviceEnvironment:maskPath:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>, double a7@<D0>, double a8@<D1>, double a9@<D2>)
{
  *(void *)a6 = result;
  *(void *)(a6 + 8) = a2;
  *(double *)(a6 + 16) = a7;
  *(double *)(a6 + 24) = a8;
  *(double *)(a6 + 32) = a9;
  *(void *)(a6 + 40) = a3;
  *(void *)(a6 + 48) = a4;
  *(void *)(a6 + 56) = a5;
  return result;
}

unint64_t sub_25A5BED44(char a1)
{
  unint64_t result = 0xD000000000000010;
  switch(a1)
  {
    case 1:
    case 2:
      unint64_t result = 0x5379616C70736964;
      break;
    case 3:
      unint64_t result = 0xD000000000000011;
      break;
    case 4:
      unint64_t result = 0xD000000000000013;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_25A5BEDF0(unsigned __int8 *a1, char *a2)
{
  return sub_25A5E96F4(*a1, *a2);
}

uint64_t sub_25A5BEDFC()
{
  return sub_25A61898C();
}

uint64_t sub_25A5BEE04()
{
  return sub_25A54A4B0();
}

uint64_t sub_25A5BEE0C()
{
  return sub_25A61D510();
}

uint64_t sub_25A5BEE14@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_25A5C2D98();
  *a1 = result;
  return result;
}

unint64_t sub_25A5BEE44@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_25A5BED44(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_25A5BEE70()
{
  return sub_25A5BED44(*v0);
}

uint64_t SimulatorDevicePayload.propertyListValue.getter()
{
  return sub_25A622780();
}

uint64_t sub_25A5BEEC8(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = a1[1];
  uint64_t v3 = a1[2];
  uint64_t v4 = a1[3];
  uint64_t v5 = a1[4];
  uint64_t v6 = a1[5];
  sub_25A55C73C((uint64_t)(a1 + 6), (uint64_t)v21, &qword_26A429458);
  char v20 = 0;
  uint64_t v18 = v1;
  uint64_t v19 = v2;
  char v17 = 1;
  uint64_t v14 = v3;
  uint64_t v15 = v4;
  char v16 = 0;
  char v13 = 2;
  uint64_t v11 = v5;
  char v12 = 0;
  char v10 = 3;
  uint64_t v9 = v6;
  v8[23] = 4;
  sub_25A55C73C((uint64_t)v21, (uint64_t)v8, &qword_26A429458);
  type metadata accessor for CGSize(0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A42AA10);
  sub_25A5C2B4C();
  sub_25A5C28B0();
  return sub_25A622A50();
}

uint64_t SimulatorDevicePayload.init(propertyListValue:)@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v18 = &type metadata for SimulatorDevicePayload.Key;
  unint64_t v5 = sub_25A5C2B4C();
  unint64_t v19 = v5;
  v17[0] = 0;
  sub_25A622710();
  if (v2)
  {
    uint64_t v6 = sub_25A6227C0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
    uint64_t v8 = v20;
    uint64_t v7 = v21;
    uint64_t v18 = &type metadata for SimulatorDevicePayload.Key;
    unint64_t v19 = v5;
    v17[0] = 1;
    type metadata accessor for CGSize(0);
    sub_25A622710();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
    uint64_t v18 = &type metadata for SimulatorDevicePayload.Key;
    unint64_t v19 = v5;
    v17[0] = 2;
    sub_25A622710();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
    uint64_t v9 = v22;
    uint64_t v18 = &type metadata for SimulatorDevicePayload.Key;
    unint64_t v19 = v5;
    v17[0] = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A42AA10);
    sub_25A5C28B0();
    sub_25A622710();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
    uint64_t v18 = &type metadata for SimulatorDevicePayload.Key;
    unint64_t v19 = v5;
    v17[0] = 4;
    sub_25A622760();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
    uint64_t v11 = sub_25A6227C0();
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(a1, v11);
    *a2 = v8;
    a2[1] = v7;
    a2[2] = v15;
    a2[3] = v16;
    a2[4] = v9;
    a2[5] = v14;
    a2[6] = v12;
    a2[7] = v13;
  }
  return result;
}

uint64_t sub_25A5BF2FC()
{
  return sub_25A622780();
}

uint64_t sub_25A5BF34C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return SimulatorDevicePayload.init(propertyListValue:)(a1, a2);
}

uint64_t PrepareToRelaunchPayload.agentDescriptor.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  uint64_t v3 = v1[2];
  uint64_t v4 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v5 = v1[5];
  *a1 = *v1;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  a1[4] = v6;
  a1[5] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

__n128 PrepareToRelaunchPayload.agentDescriptor.setter(long long *a1)
{
  __n128 v5 = (__n128)a1[1];
  long long v6 = *a1;
  uint64_t v2 = *((void *)a1 + 4);
  uint64_t v3 = *((void *)a1 + 5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __n128 result = v5;
  *(_OWORD *)uint64_t v1 = v6;
  *(__n128 *)(v1 + 16) = v5;
  *(void *)(v1 + 32) = v2;
  *(void *)(v1 + 40) = v3;
  return result;
}

uint64_t (*PrepareToRelaunchPayload.agentDescriptor.modify())()
{
  return nullsub_1;
}

void __swiftcall PrepareToRelaunchPayload.init(agentDescriptor:)(PreviewsMessagingOS::PrepareToRelaunchPayload *__return_ptr retstr, PreviewsMessagingOS::AgentDescriptor *agentDescriptor)
{
  uint64_t countAndFlagsBits = agentDescriptor->bundle.bundleID._countAndFlagsBits;
  object = agentDescriptor->bundle.bundleID._object;
  retstr->agentDescriptor.idAcrossRelaunches = agentDescriptor->idAcrossRelaunches;
  retstr->agentDescriptor.bundle.bundleID._uint64_t countAndFlagsBits = countAndFlagsBits;
  retstr->agentDescriptor.bundle.bundleID._object = object;
  retstr->agentDescriptor.bundle.path = agentDescriptor->bundle.path;
}

uint64_t sub_25A5BF470(char a1)
{
  if (a1) {
    return 0x736544746E656761;
  }
  else {
    return 0x656449746E656761;
  }
}

uint64_t sub_25A5BF4C0(char *a1, char *a2)
{
  return sub_25A5E8FD8(*a1, *a2);
}

uint64_t sub_25A5BF4CC()
{
  return sub_25A618A8C();
}

uint64_t sub_25A5BF4D4()
{
  return sub_25A54A04C();
}

uint64_t sub_25A5BF4DC()
{
  return sub_25A61DAA8();
}

uint64_t sub_25A5BF4E4@<X0>(char *a1@<X8>)
{
  return sub_25A56B748(a1);
}

uint64_t sub_25A5BF4F0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_25A5BF470(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_25A5BF51C()
{
  return sub_25A5BF470(*v0);
}

uint64_t PrepareToRelaunchPayload.propertyListValue.getter()
{
  return sub_25A622780();
}

uint64_t sub_25A5BF574()
{
  return sub_25A622A80();
}

uint64_t PrepareToRelaunchPayload.init(propertyListValue:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v14 = &type metadata for PrepareToRelaunchPayload.Key;
  unint64_t v5 = sub_25A5C2BA8();
  unint64_t v15 = v5;
  v13[0] = 1;
  sub_25A5C27B4();
  sub_25A622710();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
    uint64_t v14 = &type metadata for PrepareToRelaunchPayload.Key;
    unint64_t v15 = v5;
    v13[0] = 0;
    sub_25A622710();
    uint64_t v7 = sub_25A6227C0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(a1, v7);
  }
  else
  {
    uint64_t v6 = sub_25A6227C0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
  }
  uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
  uint64_t v9 = v17;
  uint64_t v10 = v18;
  uint64_t v11 = v19;
  long long v12 = v20;
  *(void *)a2 = v16;
  *(void *)(a2 + 8) = v9;
  *(void *)(a2 + 16) = v10;
  *(void *)(a2 + 24) = v11;
  *(_OWORD *)(a2 + 32) = v12;
  return result;
}

uint64_t sub_25A5BF7D0(char a1)
{
  if (a1) {
    return 6580592;
  }
  else {
    return 0x6B6F547469647561;
  }
}

uint64_t sub_25A5BF804()
{
  return sub_25A622780();
}

uint64_t sub_25A5BF854@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return PrepareToRelaunchPayload.init(propertyListValue:)(a1, a2);
}

uint64_t sub_25A5BF86C(char *a1, char *a2)
{
  return sub_25A5E7B60(*a1, *a2);
}

uint64_t sub_25A5BF878()
{
  return sub_25A618B28();
}

uint64_t sub_25A5BF880()
{
  return sub_25A549558();
}

uint64_t sub_25A5BF888()
{
  return sub_25A61E8D0();
}

uint64_t sub_25A5BF890@<X0>(char *a1@<X8>)
{
  return sub_25A56B748(a1);
}

uint64_t sub_25A5BF89C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_25A5BF7D0(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_25A5BF8C8(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_25A5C8CEC();
  uint64_t v5 = MEMORY[0x263F60648];

  return MEMORY[0x270F55C68](a1, a2, v4, v5);
}

uint64_t sub_25A5BF924()
{
  return sub_25A622B20();
}

uint64_t sub_25A5BF98C(char a1)
{
  return *(void *)&aDiscrimiauditt_0[8 * a1];
}

uint64_t sub_25A5BF9AC(char *a1, char *a2)
{
  return sub_25A5E7AD8(*a1, *a2);
}

uint64_t sub_25A5BF9B8()
{
  return sub_25A618BA8();
}

uint64_t sub_25A5BF9C0()
{
  return sub_25A549504();
}

uint64_t sub_25A5BF9C8()
{
  return sub_25A61E94C();
}

uint64_t sub_25A5BF9D0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_25A570B50();
  *a1 = result;
  return result;
}

uint64_t sub_25A5BFA08@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_25A5BF98C(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_25A5BFA34()
{
  return sub_25A5BF98C(*v0);
}

uint64_t ProcessID.propertyListValue.getter()
{
  sub_25A5C2BFC(v0, (uint64_t)&v6);
  unint64_t v1 = sub_25A5C2C58();
  sub_25A5C2CAC();
  sub_25A6227A0();
  sub_25A5C2BFC(v0, (uint64_t)&v7);
  if ((v8 & 1) == 0)
  {
    uint64_t v4 = &type metadata for ProcessID.Key;
    unint64_t v5 = v1;
    v3[0] = 1;
    type metadata accessor for audit_token_t(0);
    sub_25A622700();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v3);
    sub_25A623110();
  }
  uint64_t v4 = &type metadata for ProcessID.Key;
  unint64_t v5 = v1;
  v3[0] = 2;
  sub_25A622700();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v3);
}

uint64_t ProcessID.pid.getter()
{
  sub_25A5C2BFC(v0, (uint64_t)&v2);
  if (v3) {
    return v2;
  }
  else {
    return sub_25A623110();
  }
}

uint64_t ProcessID.init(propertyListValue:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_25A5C2DE4(a1, (uint64_t)v5);
  if (!v2) {
    return sub_25A5C2BFC(v5, a2);
  }
  return result;
}

uint64_t sub_25A5BFC20()
{
  sub_25A5C2BFC(v0, (uint64_t)v2);
  return ProcessID.propertyListValue.getter();
}

uint64_t sub_25A5BFC60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_25A5C2DE4(a1, (uint64_t)v5);
  if (!v2) {
    return sub_25A5C2BFC(v5, a2);
  }
  return result;
}

void ForwardPayload.messageType.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

unsigned char *ForwardPayload.messageType.setter(unsigned char *result)
{
  unsigned char *v1 = *result;
  return result;
}

uint64_t (*ForwardPayload.messageType.modify())()
{
  return nullsub_1;
}

uint64_t ForwardPayload.messagePayload.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ForwardPayload(0) + 20);
  uint64_t v4 = sub_25A6227C0();
  unint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t ForwardPayload.messagePayload.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ForwardPayload(0) + 20);
  uint64_t v4 = sub_25A6227C0();
  unint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ForwardPayload.messagePayload.modify())()
{
  return nullsub_1;
}

uint64_t ForwardPayload.pid.getter()
{
  return *(unsigned int *)(v0 + *(int *)(type metadata accessor for ForwardPayload(0) + 24));
}

uint64_t ForwardPayload.pid.setter(int a1)
{
  uint64_t result = type metadata accessor for ForwardPayload(0);
  *(_DWORD *)(v1 + *(int *)(result + 24)) = a1;
  return result;
}

uint64_t (*ForwardPayload.pid.modify())()
{
  return nullsub_1;
}

uint64_t ForwardPayload.contentDomain.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for ForwardPayload(0);
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 28));
  return result;
}

uint64_t ForwardPayload.contentDomain.setter(char *a1)
{
  char v2 = *a1;
  uint64_t result = type metadata accessor for ForwardPayload(0);
  *(unsigned char *)(v1 + *(int *)(result + 28)) = v2;
  return result;
}

uint64_t (*ForwardPayload.contentDomain.modify())()
{
  return nullsub_1;
}

uint64_t ForwardPayload.previewInterfaceOrientation.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for ForwardPayload(0);
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 32));
  return result;
}

uint64_t ForwardPayload.previewInterfaceOrientation.setter(char *a1)
{
  char v2 = *a1;
  uint64_t result = type metadata accessor for ForwardPayload(0);
  *(unsigned char *)(v1 + *(int *)(result + 32)) = v2;
  return result;
}

uint64_t (*ForwardPayload.previewInterfaceOrientation.modify())()
{
  return nullsub_1;
}

uint64_t ForwardPayload.sceneIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for ForwardPayload(0) + 36));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ForwardPayload.sceneIdentifier.setter(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for ForwardPayload(0) + 36));
  uint64_t result = swift_bridgeObjectRelease();
  *unint64_t v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*ForwardPayload.sceneIdentifier.modify())()
{
  return nullsub_1;
}

uint64_t ForwardPayload.init(messageType:messagePayload:pid:contentDomain:previewInterfaceOrientation:sceneIdentifier:)@<X0>(char *a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, char *a4@<X3>, char *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, unsigned char *a8@<X8>)
{
  char v11 = *a1;
  char v12 = *a4;
  char v13 = *a5;
  uint64_t v14 = (int *)type metadata accessor for ForwardPayload(0);
  uint64_t v16 = v14[7];
  uint64_t v15 = v14[8];
  uint64_t v17 = &a8[v14[9]];
  *a8 = v11;
  uint64_t v18 = &a8[v14[5]];
  uint64_t v19 = sub_25A6227C0();
  uint64_t result = (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 32))(v18, a2, v19);
  *(_DWORD *)&a8[v14[6]] = a3;
  a8[v16] = v12;
  a8[v15] = v13;
  *uint64_t v17 = a6;
  v17[1] = a7;
  return result;
}

unint64_t sub_25A5C01B8(char a1)
{
  unint64_t result = 0xD000000000000012;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x506567617373656DLL;
      break;
    case 2:
      unint64_t result = 6580592;
      break;
    case 3:
      return result;
    case 4:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 5:
      unint64_t result = 0x656449656E656373;
      break;
    default:
      unint64_t result = 0x546567617373656DLL;
      break;
  }
  return result;
}

uint64_t sub_25A5C02A0(unsigned __int8 *a1, char *a2)
{
  return sub_25A5ECBB8(*a1, *a2);
}

uint64_t sub_25A5C02AC()
{
  return sub_25A618C14();
}

uint64_t sub_25A5C02B4()
{
  return sub_25A54C2E0();
}

uint64_t sub_25A5C02BC()
{
  return sub_25A61B654();
}

uint64_t sub_25A5C02C4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_25A5C8D40();
  *a1 = result;
  return result;
}

unint64_t sub_25A5C02F4@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_25A5C01B8(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_25A5C0320()
{
  return sub_25A5C01B8(*v0);
}

uint64_t ForwardPayload.propertyListValue.getter()
{
  return sub_25A622780();
}

uint64_t sub_25A5C0364(unsigned __int8 *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4299B8);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v27 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A42AC38);
  uint64_t v5 = v4 - 8;
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  char v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v28 = (uint64_t)&v23 - v9;
  int v24 = *a1;
  uint64_t v10 = (char *)&v23 + *(int *)(v5 + 56) - v9;
  *((unsigned char *)&v23 - v9) = 1;
  char v11 = (int *)type metadata accessor for ForwardPayload(0);
  char v12 = &a1[v11[5]];
  uint64_t v13 = sub_25A6227C0();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(void (**)(char *, unsigned __int8 *, uint64_t))(v14 + 16);
  v15(v10, v12, v13);
  LODWORD(v12) = *(_DWORD *)&a1[v11[6]];
  int v23 = a1[v11[7]];
  uint64_t v16 = v11[9];
  LOBYTE(v11) = a1[v11[8]];
  uint64_t v17 = &a1[v16];
  uint64_t v18 = *(void *)&a1[v16];
  uint64_t v25 = *((void *)v17 + 1);
  uint64_t v26 = v18;
  char v41 = 0;
  char v40 = v24;
  uint64_t v19 = &v8[*(int *)(v5 + 56)];
  *char v8 = 1;
  v15(v19, (unsigned __int8 *)v10, v13);
  uint64_t v20 = (uint64_t)v27;
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v27, v19, v13);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v14 + 56))(v20, 0, 1, v13);
  char v39 = 1;
  char v38 = 2;
  int v36 = (int)v12;
  char v37 = 0;
  char v35 = 3;
  char v34 = v23;
  char v33 = 4;
  char v32 = (char)v11;
  char v31 = 5;
  uint64_t v29 = v26;
  uint64_t v30 = v25;
  sub_25A5C3068();
  sub_25A5C30BC();
  sub_25A5C3110();
  sub_25A5B064C();
  uint64_t v21 = sub_25A622A40();
  sub_25A570C60(v20, &qword_26A4299B8);
  sub_25A570C60(v28, &qword_26A42AC38);
  return v21;
}

uint64_t ForwardPayload.init(propertyListValue:)@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v5 = sub_25A6227C0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  char v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = &type metadata for ForwardPayload.Key;
  unint64_t v9 = sub_25A5C3068();
  unint64_t v27 = v9;
  v25[0] = 0;
  sub_25A5C30BC();
  sub_25A622710();
  if (v2)
  {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
    char v10 = v30;
    uint64_t v26 = &type metadata for ForwardPayload.Key;
    unint64_t v27 = v9;
    v25[0] = 1;
    sub_25A622710();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
    uint64_t v26 = &type metadata for ForwardPayload.Key;
    unint64_t v27 = v9;
    v25[0] = 2;
    sub_25A622710();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
    int v22 = v28;
    uint64_t v26 = &type metadata for ForwardPayload.Key;
    unint64_t v27 = v9;
    v25[0] = 3;
    sub_25A5C3110();
    sub_25A622760();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
    int v21 = v29;
    uint64_t v26 = &type metadata for ForwardPayload.Key;
    unint64_t v27 = v9;
    v25[0] = 4;
    sub_25A5B064C();
    sub_25A622760();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
    int v20 = v23;
    uint64_t v26 = &type metadata for ForwardPayload.Key;
    unint64_t v27 = v9;
    v25[0] = 5;
    sub_25A622760();
    int v12 = v20;
    if (v20 == 4) {
      int v12 = 0;
    }
    int v20 = v12;
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
    uint64_t v18 = v24;
    uint64_t v19 = v23;
    uint64_t v13 = (int *)type metadata accessor for ForwardPayload(0);
    uint64_t v14 = v13[8];
    uint64_t v17 = v13[7];
    uint64_t v15 = &a2[v13[9]];
    *a2 = v10;
    uint64_t result = (*(uint64_t (**)(unsigned char *, char *, uint64_t))(v6 + 32))(&a2[v13[5]], v8, v5);
    *(_DWORD *)&a2[v13[6]] = v22;
    a2[v17] = v21;
    a2[v14] = v20;
    uint64_t v16 = v18;
    *uint64_t v15 = v19;
    v15[1] = v16;
  }
  return result;
}

uint64_t sub_25A5C0A20()
{
  return sub_25A622780();
}

uint64_t sub_25A5C0A5C@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return ForwardPayload.init(propertyListValue:)(a1, a2);
}

uint64_t PurgePayload.workspaceID.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PurgePayload.workspaceID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  void *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*PurgePayload.workspaceID.modify())()
{
  return nullsub_1;
}

uint64_t PurgePayload.killAgents.getter()
{
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t PurgePayload.killAgents.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 16) = result;
  return result;
}

uint64_t (*PurgePayload.killAgents.modify())()
{
  return nullsub_1;
}

PreviewsMessagingOS::PurgePayload __swiftcall PurgePayload.init(workspaceID:killAgents:)(Swift::String workspaceID, Swift::Bool killAgents)
{
  *(Swift::String *)uint64_t v2 = workspaceID;
  *(unsigned char *)(v2 + 16) = killAgents;
  result.workspaceID = workspaceID;
  result.killAgents = killAgents;
  return result;
}

uint64_t sub_25A5C0B38(char a1)
{
  if (a1) {
    return 0x6E6567416C6C696BLL;
  }
  else {
    return 0x636170736B726F77;
  }
}

uint64_t sub_25A5C0B7C(char *a1, char *a2)
{
  return sub_25A5ED2E0(*a1, *a2);
}

uint64_t sub_25A5C0B88()
{
  return sub_25A618D50();
}

uint64_t sub_25A5C0B90()
{
  return sub_25A54C6C0();
}

uint64_t sub_25A5C0B98()
{
  return sub_25A61B2AC();
}

uint64_t sub_25A5C0BA0@<X0>(char *a1@<X8>)
{
  return sub_25A56B748(a1);
}

uint64_t sub_25A5C0BAC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_25A5C0B38(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_25A5C0BD8()
{
  return sub_25A5C0B38(*v0);
}

uint64_t PurgePayload.propertyListValue.getter()
{
  return sub_25A622780();
}

uint64_t sub_25A5C0C28()
{
  return sub_25A622A80();
}

uint64_t PurgePayload.init(propertyListValue:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v13 = &type metadata for PurgePayload.Key;
  unint64_t v5 = sub_25A5C3170();
  unint64_t v14 = v5;
  v12[0] = 0;
  sub_25A622710();
  if (v2)
  {
    uint64_t v6 = sub_25A6227C0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
    uint64_t v8 = v15;
    uint64_t v7 = v16;
    uint64_t v13 = &type metadata for PurgePayload.Key;
    unint64_t v14 = v5;
    v12[0] = 1;
    sub_25A622760();
    uint64_t v10 = sub_25A6227C0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(a1, v10);
    uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
    char v11 = v17 & 1;
    *(void *)a2 = v8;
    *(void *)(a2 + 8) = v7;
    *(unsigned char *)(a2 + 16) = v11;
  }
  return result;
}

uint64_t sub_25A5C0E48()
{
  return sub_25A622780();
}

uint64_t sub_25A5C0E90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return PurgePayload.init(propertyListValue:)(a1, a2);
}

uint64_t RequestPreviewVariantsPayload.contentCategory.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t RequestPreviewVariantsPayload.contentCategory.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t result = swift_bridgeObjectRelease();
  void *v1 = v2;
  v1[1] = v3;
  return result;
}

uint64_t (*RequestPreviewVariantsPayload.contentCategory.modify())()
{
  return nullsub_1;
}

uint64_t RequestPreviewVariantsPayload.contentOverride.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 24);
  *a1 = *(void *)(v1 + 16);
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t RequestPreviewVariantsPayload.contentOverride.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 16) = v2;
  *(void *)(v1 + 24) = v3;
  return result;
}

uint64_t (*RequestPreviewVariantsPayload.contentOverride.modify())()
{
  return nullsub_1;
}

PreviewsMessagingOS::RequestPreviewVariantsPayload __swiftcall RequestPreviewVariantsPayload.init(contentCategory:contentOverride:)(PreviewsMessagingOS::ContentCategory contentCategory, PreviewsMessagingOS::ContentOverride_optional contentOverride)
{
  uint64_t v3 = *(void *)(contentCategory.rawValue._countAndFlagsBits + 8);
  *(void *)uint64_t v2 = *(void *)contentCategory.rawValue._countAndFlagsBits;
  *(void *)(v2 + 8) = v3;
  *(_OWORD *)(v2 + 16) = *(_OWORD *)contentCategory.rawValue._object;
  result.contentOverride = contentOverride;
  result.contentCategory = contentCategory;
  return result;
}

uint64_t sub_25A5C0F7C(char a1)
{
  if (a1) {
    return 0x4F746E65746E6F63;
  }
  else {
    return 0x43746E65746E6F63;
  }
}

uint64_t sub_25A5C0FCC(char *a1, char *a2)
{
  return sub_25A5E7EC8(*a1, *a2);
}

uint64_t sub_25A5C0FD8()
{
  return sub_25A618DE0();
}

uint64_t sub_25A5C0FE0()
{
  return sub_25A549764();
}

uint64_t sub_25A5C0FE8()
{
  return sub_25A61E650();
}

uint64_t sub_25A5C0FF0@<X0>(char *a1@<X8>)
{
  return sub_25A56B748(a1);
}

uint64_t sub_25A5C0FFC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_25A5C0F7C(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_25A5C1028()
{
  return sub_25A5C0F7C(*v0);
}

uint64_t RequestPreviewVariantsPayload.propertyListValue.getter()
{
  return sub_25A5C1048();
}

uint64_t sub_25A5C1048()
{
  return sub_25A622780();
}

uint64_t sub_25A5C107C()
{
  return sub_25A622A80();
}

uint64_t RequestPreviewVariantsPayload.init(propertyListValue:)@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  unint64_t v14 = &type metadata for RequestPreviewVariantsPayload.Key;
  unint64_t v5 = sub_25A5C31D0();
  unint64_t v15 = v5;
  v13[0] = 0;
  sub_25A572594();
  sub_25A622710();
  if (v2)
  {
    uint64_t v6 = sub_25A6227C0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
    uint64_t v8 = v16;
    uint64_t v7 = v17;
    unint64_t v14 = &type metadata for RequestPreviewVariantsPayload.Key;
    unint64_t v15 = v5;
    v13[0] = 1;
    sub_25A5725E8();
    sub_25A622760();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
    uint64_t v10 = sub_25A6227C0();
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(a1, v10);
    *a2 = v8;
    a2[1] = v7;
    a2[2] = v11;
    a2[3] = v12;
  }
  return result;
}

uint64_t sub_25A5C12A4()
{
  return sub_25A5C12BC();
}

uint64_t sub_25A5C12BC()
{
  return sub_25A622780();
}

uint64_t sub_25A5C12F4@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return RequestPreviewVariantsPayload.init(propertyListValue:)(a1, a2);
}

uint64_t PreviewVariantsPayload.groups.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t PreviewVariantsPayload.groups.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  void *v1 = a1;
  return result;
}

uint64_t (*PreviewVariantsPayload.groups.modify())()
{
  return nullsub_1;
}

PreviewsMessagingOS::PreviewVariantsPayload __swiftcall PreviewVariantsPayload.init(groups:)(PreviewsMessagingOS::PreviewVariantsPayload groups)
{
  v1->groups._rawValue = groups.groups._rawValue;
  return groups;
}

uint64_t sub_25A5C1374@<X0>(BOOL *a1@<X8>)
{
  return sub_25A56C88C(a1);
}

uint64_t sub_25A5C1380@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_25A5C2348();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t PreviewVariantsPayload.propertyListValue.getter()
{
  return sub_25A6227A0();
}

uint64_t PreviewVariantsPayload.init(propertyListValue:)@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v8 = &type metadata for PreviewVariantsPayload.Key;
  unint64_t v9 = sub_25A5C3224();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A42AA98);
  sub_25A5C332C(&qword_26A42AAA8, &qword_26A42AA98, (void (*)(void))sub_25A5C3278);
  sub_25A622710();
  uint64_t v5 = sub_25A6227C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
  if (!v2) {
    *a2 = v10;
  }
  return result;
}

uint64_t sub_25A5C1590()
{
  return sub_25A6227A0();
}

uint64_t sub_25A5C163C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v8 = &type metadata for PreviewVariantsPayload.Key;
  unint64_t v9 = sub_25A5C3224();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A42AA98);
  sub_25A5C332C(&qword_26A42AAA8, &qword_26A42AA98, (void (*)(void))sub_25A5C3278);
  sub_25A622710();
  uint64_t v5 = sub_25A6227C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
  if (!v2) {
    *a2 = v10;
  }
  return result;
}

uint64_t RequestContentOverridePayload.contentCategory.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t RequestContentOverridePayload.contentCategory.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t result = swift_bridgeObjectRelease();
  void *v1 = v2;
  v1[1] = v3;
  return result;
}

uint64_t (*RequestContentOverridePayload.contentCategory.modify())()
{
  return nullsub_1;
}

uint64_t RequestContentOverridePayload.requestedOverrides.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t RequestContentOverridePayload.requestedOverrides.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 16) = a1;
  return result;
}

uint64_t (*RequestContentOverridePayload.requestedOverrides.modify())()
{
  return nullsub_1;
}

PreviewsMessagingOS::RequestContentOverridePayload __swiftcall RequestContentOverridePayload.init(contentCategory:requestedOverrides:)(PreviewsMessagingOS::ContentCategory contentCategory, Swift::OpaquePointer requestedOverrides)
{
  uint64_t v3 = *(void *)(contentCategory.rawValue._countAndFlagsBits + 8);
  void *v2 = *(void *)contentCategory.rawValue._countAndFlagsBits;
  v2[1] = v3;
  v2[2] = contentCategory.rawValue._object;
  result.contentCategory = contentCategory;
  result.requestedOverrides = requestedOverrides;
  return result;
}

uint64_t sub_25A5C1838(char a1)
{
  if (a1) {
    return 0xD000000000000012;
  }
  else {
    return 0x43746E65746E6F63;
  }
}

uint64_t sub_25A5C1880(char *a1, char *a2)
{
  return sub_25A5E7F84(*a1, *a2);
}

uint64_t sub_25A5C188C()
{
  return sub_25A618E7C();
}

uint64_t sub_25A5C1894()
{
  return sub_25A5497E8();
}

uint64_t sub_25A5C189C()
{
  return sub_25A61E5C0();
}

uint64_t sub_25A5C18A4@<X0>(char *a1@<X8>)
{
  return sub_25A56B748(a1);
}

uint64_t sub_25A5C18B0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_25A5C1838(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_25A5C18DC()
{
  return sub_25A5C1838(*v0);
}

uint64_t RequestContentOverridePayload.propertyListValue.getter()
{
  return sub_25A622780();
}

uint64_t sub_25A5C192C()
{
  return sub_25A622A80();
}

uint64_t RequestContentOverridePayload.init(propertyListValue:)@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v13 = &type metadata for RequestContentOverridePayload.Key;
  unint64_t v5 = sub_25A5C32D8();
  unint64_t v14 = v5;
  v12[0] = 0;
  sub_25A572594();
  sub_25A622710();
  if (v2)
  {
    uint64_t v6 = sub_25A6227C0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
    uint64_t v8 = v15;
    uint64_t v7 = v16;
    uint64_t v13 = &type metadata for RequestContentOverridePayload.Key;
    unint64_t v14 = v5;
    v12[0] = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A42AAC0);
    sub_25A5C332C(&qword_26A42AAC8, &qword_26A42AAC0, (void (*)(void))sub_25A5725E8);
    sub_25A622710();
    uint64_t v10 = sub_25A6227C0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(a1, v10);
    uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
    uint64_t v11 = v17;
    *a2 = v8;
    a2[1] = v7;
    a2[2] = v11;
  }
  return result;
}

uint64_t sub_25A5C1BB8()
{
  return sub_25A622780();
}

uint64_t sub_25A5C1C00@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return RequestContentOverridePayload.init(propertyListValue:)(a1, a2);
}

uint64_t ContentOverridePayload.contentOverride.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t ContentOverridePayload.contentOverride.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t result = swift_bridgeObjectRelease();
  void *v1 = v2;
  v1[1] = v3;
  return result;
}

uint64_t (*ContentOverridePayload.contentOverride.modify())()
{
  return nullsub_1;
}

PreviewsMessagingOS::ContentOverridePayload __swiftcall ContentOverridePayload.init(contentOverride:)(PreviewsMessagingOS::ContentOverridePayload contentOverride)
{
  _OWORD *v1 = *(_OWORD *)contentOverride.contentOverride.value.rawValue._countAndFlagsBits;
  return contentOverride;
}

uint64_t sub_25A5C1C90@<X0>(BOOL *a1@<X8>)
{
  return sub_25A56C88C(a1);
}

uint64_t sub_25A5C1C9C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_25A5C2324();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t ContentOverridePayload.propertyListValue.getter()
{
  return sub_25A6227A0();
}

double ContentOverridePayload.init(propertyListValue:)@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v8 = &type metadata for ContentOverridePayload.Key;
  unint64_t v9 = sub_25A5C33A4();
  sub_25A5725E8();
  sub_25A622760();
  uint64_t v5 = sub_25A6227C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
  if (!v2)
  {
    double result = *(double *)&v10;
    *a2 = v10;
  }
  return result;
}

uint64_t sub_25A5C1E3C()
{
  return sub_25A6227A0();
}

double sub_25A5C1EB0@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v8 = &type metadata for ContentOverridePayload.Key;
  unint64_t v9 = sub_25A5C33A4();
  sub_25A5725E8();
  sub_25A622760();
  uint64_t v5 = sub_25A6227C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
  if (!v2)
  {
    double result = *(double *)&v10;
    *a2 = v10;
  }
  return result;
}

uint64_t sub_25A5C1FBC@<X0>(BOOL *a1@<X8>)
{
  return sub_25A56C88C(a1);
}

uint64_t sub_25A5C1FC8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_25A5C2300();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_25A5C1FF4(void *a1@<X8>)
{
  *a1 = &unk_27083F170;
}

uint64_t CapabilitiesPayload.propertyListValue.getter()
{
  return sub_25A6227A0();
}

uint64_t CapabilitiesPayload.init(propertyListValue:)@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v8 = &type metadata for CapabilitiesPayload.Key;
  unint64_t v9 = sub_25A5C3404();
  sub_25A622710();
  uint64_t v5 = sub_25A6227C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
  if (!v2) {
    *a2 = v10;
  }
  return result;
}

uint64_t sub_25A5C2174()
{
  return sub_25A6227A0();
}

uint64_t sub_25A5C21E4@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v8 = &type metadata for CapabilitiesPayload.Key;
  unint64_t v9 = sub_25A5C3404();
  sub_25A622710();
  uint64_t v5 = sub_25A6227C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
  if (!v2) {
    *a2 = v10;
  }
  return result;
}

uint64_t sub_25A5C22E4()
{
  return 0x7954656369766564;
}

uint64_t sub_25A5C2300()
{
  return 0x6E696E6E75527369;
}

uint64_t sub_25A5C2324()
{
  return 0x4F746E65746E6F63;
}

uint64_t sub_25A5C2348()
{
  return 0x7370756F7267;
}

uint64_t _s19PreviewsMessagingOS14OSCapabilitiesV2eeoiySbAC_ACtFZ_0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  char v2 = 0;
  if (*a1 == *a2
    && ((a1[1] ^ a2[1]) & 1) == 0
    && ((a1[2] ^ a2[2]) & 1) == 0
    && ((a1[3] ^ a2[3]) & 1) == 0
    && ((a1[4] ^ a2[4]) & 1) == 0
    && ((a1[5] ^ a2[5]) & 1) == 0
    && ((a1[6] ^ a2[6]) & 1) == 0
    && ((a1[7] ^ a2[7]) & 1) == 0
    && ((a1[8] ^ a2[8]) & 1) == 0)
  {
    char v2 = (a2[9] ^ a1[9] | a2[10] ^ a1[10]) ^ 1;
  }
  return v2 & 1;
}

uint64_t _s19PreviewsMessagingOS15AgentDescriptorV6BundleV2eeoiySbAE_AEtFZ_0(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  uint64_t v3 = a1[3];
  uint64_t v5 = a2[2];
  uint64_t v4 = a2[3];
  BOOL v6 = *a1 == *a2 && a1[1] == a2[1];
  if (v6 || (v7 = sub_25A6233B0(), uint64_t result = 0, (v7 & 1) != 0))
  {
    if (v3)
    {
      if (v4)
      {
        BOOL v9 = v2 == v5 && v3 == v4;
        if (v9 || (sub_25A6233B0() & 1) != 0) {
          return 1;
        }
      }
    }
    else if (!v4)
    {
      return 1;
    }
    return 0;
  }
  return result;
}

uint64_t _s19PreviewsMessagingOS15AgentDescriptorV2eeoiySbAC_ACtFZ_0(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  uint64_t v4 = a1[3];
  uint64_t v3 = a1[4];
  uint64_t v5 = a1[5];
  uint64_t v6 = a2[2];
  uint64_t v7 = a2[3];
  uint64_t v9 = a2[4];
  uint64_t v8 = a2[5];
  if (*a1 == *a2 && a1[1] == a2[1] || (v10 = sub_25A6233B0(), uint64_t result = 0, (v10 & 1) != 0))
  {
    if (v2 == v6 && v4 == v7 || (sub_25A6233B0() & 1) != 0)
    {
      if (v5)
      {
        if (v8 && (v3 == v9 && v5 == v8 || (sub_25A6233B0() & 1) != 0)) {
          return 1;
        }
      }
      else if (!v8)
      {
        return 1;
      }
    }
    return 0;
  }
  return result;
}

uint64_t _s19PreviewsMessagingOS14ServiceMessageV0E4TypeO8rawValueAESgSS_tcfC_0()
{
  unint64_t v0 = sub_25A6232B0();
  swift_bridgeObjectRelease();
  if (v0 >= 0xD) {
    return 13;
  }
  else {
    return v0;
  }
}

uint64_t sub_25A5C25F4()
{
  return sub_25A5BAC58();
}

unint64_t sub_25A5C25FC()
{
  unint64_t result = qword_26A42A9C8;
  if (!qword_26A42A9C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42A9C8);
  }
  return result;
}

unint64_t sub_25A5C2650()
{
  unint64_t result = qword_26A42A9D0;
  if (!qword_26A42A9D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42A9D0);
  }
  return result;
}

uint64_t sub_25A5C26A4()
{
  return sub_25A5BB914();
}

unint64_t sub_25A5C26B0()
{
  unint64_t result = qword_26A42A9D8;
  if (!qword_26A42A9D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42A9D8);
  }
  return result;
}

unint64_t sub_25A5C2704()
{
  unint64_t result = qword_26A42A9E0;
  if (!qword_26A42A9E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42A9E0);
  }
  return result;
}

uint64_t sub_25A5C2758()
{
  return sub_25A5BD0E4(*(uint64_t **)(v0 + 16));
}

unint64_t sub_25A5C2760()
{
  unint64_t result = qword_26A42A9F0;
  if (!qword_26A42A9F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42A9F0);
  }
  return result;
}

unint64_t sub_25A5C27B4()
{
  unint64_t result = qword_26A42A9F8;
  if (!qword_26A42A9F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42A9F8);
  }
  return result;
}

unint64_t sub_25A5C2808()
{
  unint64_t result = qword_26A42AA00;
  if (!qword_26A42AA00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42AA00);
  }
  return result;
}

unint64_t sub_25A5C285C()
{
  unint64_t result = qword_26A42AA08;
  if (!qword_26A42AA08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42AA08);
  }
  return result;
}

unint64_t sub_25A5C28B0()
{
  unint64_t result = qword_26A42AA18;
  if (!qword_26A42AA18)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A42AA10);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42AA18);
  }
  return result;
}

unint64_t sub_25A5C2928()
{
  unint64_t result = qword_26A42AA20;
  if (!qword_26A42AA20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42AA20);
  }
  return result;
}

unint64_t sub_25A5C297C()
{
  unint64_t result = qword_26A42AA28;
  if (!qword_26A42AA28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42AA28);
  }
  return result;
}

uint64_t sub_25A5C29D0()
{
  return sub_25A5BDCE0();
}

unint64_t sub_25A5C29D8()
{
  unint64_t result = qword_26A42AA30;
  if (!qword_26A42AA30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42AA30);
  }
  return result;
}

_OWORD *sub_25A5C2A2C(long long *a1, _OWORD *a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  long long v4 = a1[3];
  a2[2] = a1[2];
  a2[3] = v4;
  *a2 = v2;
  a2[1] = v3;
  return a2;
}

unint64_t sub_25A5C2A48()
{
  unint64_t result = qword_26A42AA38;
  if (!qword_26A42AA38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42AA38);
  }
  return result;
}

unint64_t sub_25A5C2A9C()
{
  unint64_t result = qword_26A42AA40;
  if (!qword_26A42AA40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42AA40);
  }
  return result;
}

unint64_t sub_25A5C2AF0()
{
  unint64_t result = qword_26A42AA48;
  if (!qword_26A42AA48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42AA48);
  }
  return result;
}

uint64_t sub_25A5C2B44()
{
  return sub_25A5BEEC8(*(uint64_t **)(v0 + 16));
}

unint64_t sub_25A5C2B4C()
{
  unint64_t result = qword_26A42AA50;
  if (!qword_26A42AA50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42AA50);
  }
  return result;
}

uint64_t sub_25A5C2BA0()
{
  return sub_25A5BF574();
}

unint64_t sub_25A5C2BA8()
{
  unint64_t result = qword_26A42AA58;
  if (!qword_26A42AA58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42AA58);
  }
  return result;
}

uint64_t sub_25A5C2BFC(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(unsigned char *)(a2 + 32) = *((unsigned char *)a1 + 32);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_25A5C2C14(unsigned char *a1, unsigned char *a2)
{
  long long v4 = *(long long **)(v2 + 16);
  *a1 = 0;
  uint64_t result = sub_25A5C2BFC(v4, (uint64_t)v6);
  *a2 = v6[32];
  return result;
}

unint64_t sub_25A5C2C58()
{
  unint64_t result = qword_26A42AA60;
  if (!qword_26A42AA60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42AA60);
  }
  return result;
}

unint64_t sub_25A5C2CAC()
{
  unint64_t result = qword_26A42AA68;
  if (!qword_26A42AA68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42AA68);
  }
  return result;
}

uint64_t sub_25A5C2D00()
{
  unint64_t v0 = sub_25A6232B0();
  swift_bridgeObjectRelease();
  if (v0 >= 0xA) {
    return 10;
  }
  else {
    return v0;
  }
}

uint64_t sub_25A5C2D4C()
{
  unint64_t v0 = sub_25A6232B0();
  swift_bridgeObjectRelease();
  if (v0 >= 0xB) {
    return 11;
  }
  else {
    return v0;
  }
}

uint64_t sub_25A5C2D98()
{
  unint64_t v0 = sub_25A6232B0();
  swift_bridgeObjectRelease();
  if (v0 >= 5) {
    return 5;
  }
  else {
    return v0;
  }
}

uint64_t sub_25A5C2DE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v16 = &type metadata for ProcessID.Key;
  unint64_t v5 = sub_25A5C2C58();
  unint64_t v17 = v5;
  v15[0] = 0;
  sub_25A5C2CAC();
  sub_25A622710();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
    uint64_t v16 = &type metadata for ProcessID.Key;
    unint64_t v17 = v5;
    v15[0] = 2;
    sub_25A622710();
    uint64_t v7 = sub_25A6227C0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(a1, v7);

LABEL_6:
    uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
    LODWORD(v11) = v13;
    long long v12 = 0uLL;
    char v10 = 1;
    goto LABEL_7;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
  if (v13)
  {
    uint64_t v16 = &type metadata for ProcessID.Key;
    unint64_t v17 = v5;
    v15[0] = 2;
    sub_25A622710();
    uint64_t v6 = sub_25A6227C0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
    goto LABEL_6;
  }
  uint64_t v16 = &type metadata for ProcessID.Key;
  unint64_t v17 = v5;
  v15[0] = 1;
  type metadata accessor for audit_token_t(0);
  sub_25A622710();
  uint64_t v8 = sub_25A6227C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(a1, v8);
  uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
  char v10 = 0;
  long long v11 = v13;
  long long v12 = v14;
LABEL_7:
  *(_OWORD *)a2 = v11;
  *(_OWORD *)(a2 + 16) = v12;
  *(unsigned char *)(a2 + 32) = v10;
  return result;
}

uint64_t sub_25A5C3060()
{
  return sub_25A5C0364(*(unsigned __int8 **)(v0 + 16));
}

unint64_t sub_25A5C3068()
{
  unint64_t result = qword_26A42AA70;
  if (!qword_26A42AA70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42AA70);
  }
  return result;
}

unint64_t sub_25A5C30BC()
{
  unint64_t result = qword_26A42AA78;
  if (!qword_26A42AA78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42AA78);
  }
  return result;
}

unint64_t sub_25A5C3110()
{
  unint64_t result = qword_26A42AA80;
  if (!qword_26A42AA80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42AA80);
  }
  return result;
}

uint64_t sub_25A5C3164()
{
  return sub_25A5C0C28();
}

unint64_t sub_25A5C3170()
{
  unint64_t result = qword_26A42AA88;
  if (!qword_26A42AA88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42AA88);
  }
  return result;
}

uint64_t sub_25A5C31C4()
{
  return sub_25A5C107C();
}

unint64_t sub_25A5C31D0()
{
  unint64_t result = qword_26A42AA90;
  if (!qword_26A42AA90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42AA90);
  }
  return result;
}

unint64_t sub_25A5C3224()
{
  unint64_t result = qword_26A42AAA0;
  if (!qword_26A42AAA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42AAA0);
  }
  return result;
}

unint64_t sub_25A5C3278()
{
  unint64_t result = qword_26A42AAB0;
  if (!qword_26A42AAB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42AAB0);
  }
  return result;
}

uint64_t sub_25A5C32CC()
{
  return sub_25A5C192C();
}

unint64_t sub_25A5C32D8()
{
  unint64_t result = qword_26A42AAB8;
  if (!qword_26A42AAB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42AAB8);
  }
  return result;
}

uint64_t sub_25A5C332C(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_25A5C33A4()
{
  unint64_t result = qword_26A42AAD0;
  if (!qword_26A42AAD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42AAD0);
  }
  return result;
}

void sub_25A5C33F8(uint64_t a1, unsigned char *a2)
{
  *a2 = *(unsigned char *)(v2 + 16);
}

unint64_t sub_25A5C3404()
{
  unint64_t result = qword_26A42AAD8;
  if (!qword_26A42AAD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42AAD8);
  }
  return result;
}

unint64_t sub_25A5C345C()
{
  unint64_t result = qword_26A42AAE0;
  if (!qword_26A42AAE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42AAE0);
  }
  return result;
}

unint64_t sub_25A5C34B4()
{
  unint64_t result = qword_26A42AAE8;
  if (!qword_26A42AAE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42AAE8);
  }
  return result;
}

unint64_t sub_25A5C350C()
{
  unint64_t result = qword_26A42AAF0;
  if (!qword_26A42AAF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42AAF0);
  }
  return result;
}

unint64_t sub_25A5C3564()
{
  unint64_t result = qword_26A42AAF8;
  if (!qword_26A42AAF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42AAF8);
  }
  return result;
}

unint64_t sub_25A5C35BC()
{
  unint64_t result = qword_26A42AB00;
  if (!qword_26A42AB00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42AB00);
  }
  return result;
}

unint64_t sub_25A5C3614()
{
  unint64_t result = qword_26A42AB08;
  if (!qword_26A42AB08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42AB08);
  }
  return result;
}

unint64_t sub_25A5C366C()
{
  unint64_t result = qword_26A42AB10;
  if (!qword_26A42AB10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42AB10);
  }
  return result;
}

ValueMetadata *type metadata accessor for PreviewServiceInterface()
{
  return &type metadata for PreviewServiceInterface;
}

uint64_t *initializeBufferWithCopyOfBuffer for ServiceMessage(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  long long v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v19 = *a2;
    *long long v3 = *a2;
    long long v3 = (uint64_t *)(v19 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = type metadata accessor for ServiceMessage.Content(0);
    swift_bridgeObjectRetain();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v10 = *((void *)v8 + 1);
        *(void *)uint64_t v7 = *(void *)v8;
        *((void *)v7 + 1) = v10;
        uint64_t v11 = *((void *)v8 + 3);
        *((void *)v7 + 2) = *((void *)v8 + 2);
        *((void *)v7 + 3) = v11;
        uint64_t v12 = *((void *)v8 + 5);
        *((void *)v7 + 4) = *((void *)v8 + 4);
        *((void *)v7 + 5) = v12;
        uint64_t v13 = *((void *)v8 + 7);
        *((void *)v7 + 6) = *((void *)v8 + 6);
        *((void *)v7 + 7) = v13;
        v7[64] = v8[64];
        v7[65] = v8[65];
        uint64_t v14 = *((void *)v8 + 10);
        *((void *)v7 + 9) = *((void *)v8 + 9);
        *((void *)v7 + 10) = v14;
        v7[88] = v8[88];
        *(void *)(v7 + 92) = *(void *)(v8 + 92);
        *((void *)v7 + 13) = *((void *)v8 + 13);
        long long v15 = *((_OWORD *)v8 + 8);
        *((_OWORD *)v7 + 7) = *((_OWORD *)v8 + 7);
        *((_OWORD *)v7 + 8) = v15;
        v7[144] = v8[144];
        uint64_t v56 = *((void *)v8 + 20);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v56)
        {
          *((void *)v7 + 19) = *((void *)v8 + 19);
          *((void *)v7 + 20) = v56;
          *(_OWORD *)(v7 + 168) = *(_OWORD *)(v8 + 168);
          uint64_t v16 = *((void *)v8 + 24);
          *((void *)v7 + 23) = *((void *)v8 + 23);
          *((void *)v7 + 24) = v16;
          uint64_t v17 = *((void *)v8 + 25);
          uint64_t v18 = *((void *)v8 + 26);
          *((void *)v7 + 25) = v17;
          *((void *)v7 + 26) = v18;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v52 = *(_OWORD *)(v8 + 168);
          *(_OWORD *)(v7 + 152) = *(_OWORD *)(v8 + 152);
          *(_OWORD *)(v7 + 168) = v52;
          long long v53 = *(_OWORD *)(v8 + 200);
          *(_OWORD *)(v7 + 184) = *(_OWORD *)(v8 + 184);
          *(_OWORD *)(v7 + 200) = v53;
        }
        swift_storeEnumTagMultiPayload();
        break;
      case 2u:
        uint64_t v21 = *((void *)v8 + 1);
        *(void *)uint64_t v7 = *(void *)v8;
        *((void *)v7 + 1) = v21;
        uint64_t v22 = *((void *)v8 + 3);
        *((void *)v7 + 2) = *((void *)v8 + 2);
        *((void *)v7 + 3) = v22;
        uint64_t v23 = *((void *)v8 + 4);
        uint64_t v24 = *((void *)v8 + 5);
        *((void *)v7 + 4) = v23;
        *((void *)v7 + 5) = v24;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 4u:
        *uint64_t v7 = *v8;
        uint64_t v25 = (int *)type metadata accessor for ForwardPayload(0);
        uint64_t v26 = v25[5];
        unint64_t v27 = &v7[v26];
        int v28 = &v8[v26];
        uint64_t v29 = sub_25A6227C0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 16))(v27, v28, v29);
        *(_DWORD *)&v7[v25[6]] = *(_DWORD *)&v8[v25[6]];
        v7[v25[7]] = v8[v25[7]];
        v7[v25[8]] = v8[v25[8]];
        uint64_t v30 = v25[9];
        char v31 = &v7[v30];
        char v32 = &v8[v30];
        uint64_t v33 = *((void *)v32 + 1);
        *(void *)char v31 = *(void *)v32;
        *((void *)v31 + 1) = v33;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 5u:
        *(_DWORD *)uint64_t v7 = *(_DWORD *)v8;
        *((void *)v7 + 1) = *((void *)v8 + 1);
        unsigned char v7[16] = v8[16];
        char v34 = v8 + 24;
        unint64_t v35 = *((void *)v8 + 4);
        if (v35 > 4)
        {
          *((void *)v7 + 3) = *v34;
          *((void *)v7 + 4) = v35;
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(v7 + 24) = *(_OWORD *)v34;
        }
        uint64_t v36 = *((void *)v8 + 6);
        *((void *)v7 + 5) = *((void *)v8 + 5);
        *((void *)v7 + 6) = v36;
        uint64_t v37 = *((void *)v8 + 8);
        *((void *)v7 + 7) = *((void *)v8 + 7);
        *((void *)v7 + 8) = v37;
        uint64_t v38 = *((void *)v8 + 10);
        *((void *)v7 + 9) = *((void *)v8 + 9);
        *((void *)v7 + 10) = v38;
        uint64_t updated = (int *)type metadata accessor for ShellUpdatePayload();
        uint64_t v40 = updated[10];
        uint64_t v55 = &v8[v40];
        unsigned __int8 v57 = &v7[v40];
        uint64_t v41 = sub_25A6227C0();
        uint64_t v54 = *(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v54(v57, v55, v41);
        *(void *)&v7[updated[11]] = *(void *)&v8[updated[11]];
        uint64_t v42 = updated[12];
        uint64_t v43 = &v7[v42];
        char v44 = &v8[v42];
        *(void *)uint64_t v43 = *(void *)v44;
        v43[8] = v44[8];
        uint64_t v45 = *((void *)v44 + 3);
        *((void *)v43 + 2) = *((void *)v44 + 2);
        *((void *)v43 + 3) = v45;
        uint64_t v46 = *((void *)v44 + 5);
        *((void *)v43 + 4) = *((void *)v44 + 4);
        *((void *)v43 + 5) = v46;
        *(void *)&v7[updated[13]] = *(void *)&v8[updated[13]];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 8u:
        uint64_t v47 = *((void *)v8 + 1);
        *(void *)uint64_t v7 = *(void *)v8;
        *((void *)v7 + 1) = v47;
        unsigned char v7[16] = v8[16];
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 9u:
        uint64_t v48 = *((void *)v8 + 1);
        *(void *)uint64_t v7 = *(void *)v8;
        *((void *)v7 + 1) = v48;
        uint64_t v49 = *((void *)v8 + 2);
        uint64_t v50 = *((void *)v8 + 3);
        *((void *)v7 + 2) = v49;
        *((void *)v7 + 3) = v50;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 0xAu:
        uint64_t v51 = *((void *)v8 + 1);
        *(void *)uint64_t v7 = *(void *)v8;
        *((void *)v7 + 1) = v51;
        *((void *)v7 + 2) = *((void *)v8 + 2);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
        break;
    }
  }
  return v3;
}

uint64_t destroy for ServiceMessage(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  type metadata accessor for ServiceMessage.Content(0);
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 1:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = *(void *)(v4 + 160);
      if (result) {
        goto LABEL_3;
      }
      return result;
    case 2:
LABEL_3:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_10;
    case 4:
      uint64_t v6 = v4 + *(int *)(type metadata accessor for ForwardPayload(0) + 20);
      uint64_t v7 = sub_25A6227C0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
      goto LABEL_10;
    case 5:
      if (*(void *)(v4 + 32) >= 5uLL) {
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v8 = v4 + *(int *)(type metadata accessor for ShellUpdatePayload() + 40);
      uint64_t v9 = sub_25A6227C0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_10;
    case 8:
      goto LABEL_10;
    case 9:
    case 10:
      swift_bridgeObjectRelease();
LABEL_10:
      uint64_t result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

void *initializeWithCopy for ServiceMessage(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = type metadata accessor for ServiceMessage.Content(0);
  swift_bridgeObjectRetain();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v9 = *((void *)v7 + 1);
      *(void *)uint64_t v6 = *(void *)v7;
      *((void *)v6 + 1) = v9;
      uint64_t v10 = *((void *)v7 + 3);
      *((void *)v6 + 2) = *((void *)v7 + 2);
      *((void *)v6 + 3) = v10;
      uint64_t v11 = *((void *)v7 + 5);
      *((void *)v6 + 4) = *((void *)v7 + 4);
      *((void *)v6 + 5) = v11;
      uint64_t v12 = *((void *)v7 + 7);
      *((void *)v6 + 6) = *((void *)v7 + 6);
      *((void *)v6 + 7) = v12;
      v6[64] = v7[64];
      v6[65] = v7[65];
      uint64_t v13 = *((void *)v7 + 10);
      *((void *)v6 + 9) = *((void *)v7 + 9);
      *((void *)v6 + 10) = v13;
      v6[88] = v7[88];
      *(void *)(v6 + 92) = *(void *)(v7 + 92);
      *((void *)v6 + 13) = *((void *)v7 + 13);
      long long v14 = *((_OWORD *)v7 + 8);
      *((_OWORD *)v6 + 7) = *((_OWORD *)v7 + 7);
      *((_OWORD *)v6 + 8) = v14;
      v6[144] = v7[144];
      uint64_t v54 = *((void *)v7 + 20);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v54)
      {
        *((void *)v6 + 19) = *((void *)v7 + 19);
        *((void *)v6 + 20) = v54;
        *(_OWORD *)(v6 + 168) = *(_OWORD *)(v7 + 168);
        uint64_t v15 = *((void *)v7 + 24);
        *((void *)v6 + 23) = *((void *)v7 + 23);
        *((void *)v6 + 24) = v15;
        uint64_t v16 = *((void *)v7 + 25);
        uint64_t v17 = *((void *)v7 + 26);
        *((void *)v6 + 25) = v16;
        *((void *)v6 + 26) = v17;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v49 = *(_OWORD *)(v7 + 168);
        *(_OWORD *)(v6 + 152) = *(_OWORD *)(v7 + 152);
        *(_OWORD *)(v6 + 168) = v49;
        long long v50 = *(_OWORD *)(v7 + 200);
        *(_OWORD *)(v6 + 184) = *(_OWORD *)(v7 + 184);
        *(_OWORD *)(v6 + 200) = v50;
      }
      goto LABEL_14;
    case 2u:
      uint64_t v18 = *((void *)v7 + 1);
      *(void *)uint64_t v6 = *(void *)v7;
      *((void *)v6 + 1) = v18;
      uint64_t v19 = *((void *)v7 + 3);
      *((void *)v6 + 2) = *((void *)v7 + 2);
      *((void *)v6 + 3) = v19;
      uint64_t v20 = *((void *)v7 + 4);
      uint64_t v21 = *((void *)v7 + 5);
      *((void *)v6 + 4) = v20;
      *((void *)v6 + 5) = v21;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_14;
    case 4u:
      *uint64_t v6 = *v7;
      uint64_t v22 = (int *)type metadata accessor for ForwardPayload(0);
      uint64_t v23 = v22[5];
      uint64_t v24 = &v6[v23];
      uint64_t v25 = &v7[v23];
      uint64_t v26 = sub_25A6227C0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
      *(_DWORD *)&v6[v22[6]] = *(_DWORD *)&v7[v22[6]];
      v6[v22[7]] = v7[v22[7]];
      v6[v22[8]] = v7[v22[8]];
      uint64_t v27 = v22[9];
      int v28 = &v6[v27];
      uint64_t v29 = &v7[v27];
      uint64_t v30 = *((void *)v29 + 1);
      *(void *)int v28 = *(void *)v29;
      *((void *)v28 + 1) = v30;
      swift_bridgeObjectRetain();
      goto LABEL_14;
    case 5u:
      *(_DWORD *)uint64_t v6 = *(_DWORD *)v7;
      *((void *)v6 + 1) = *((void *)v7 + 1);
      unsigned char v6[16] = v7[16];
      char v31 = v7 + 24;
      unint64_t v32 = *((void *)v7 + 4);
      if (v32 > 4)
      {
        *((void *)v6 + 3) = *v31;
        *((void *)v6 + 4) = v32;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(v6 + 24) = *(_OWORD *)v31;
      }
      uint64_t v33 = *((void *)v7 + 6);
      *((void *)v6 + 5) = *((void *)v7 + 5);
      *((void *)v6 + 6) = v33;
      uint64_t v34 = *((void *)v7 + 8);
      *((void *)v6 + 7) = *((void *)v7 + 7);
      *((void *)v6 + 8) = v34;
      uint64_t v35 = *((void *)v7 + 10);
      *((void *)v6 + 9) = *((void *)v7 + 9);
      *((void *)v6 + 10) = v35;
      uint64_t updated = (int *)type metadata accessor for ShellUpdatePayload();
      uint64_t v37 = updated[10];
      long long v53 = &v7[v37];
      uint64_t v55 = &v6[v37];
      uint64_t v38 = sub_25A6227C0();
      long long v52 = *(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v52(v55, v53, v38);
      *(void *)&v6[updated[11]] = *(void *)&v7[updated[11]];
      uint64_t v39 = updated[12];
      uint64_t v40 = &v6[v39];
      uint64_t v41 = &v7[v39];
      *(void *)uint64_t v40 = *(void *)v41;
      v40[8] = v41[8];
      uint64_t v42 = *((void *)v41 + 3);
      *((void *)v40 + 2) = *((void *)v41 + 2);
      *((void *)v40 + 3) = v42;
      uint64_t v43 = *((void *)v41 + 5);
      *((void *)v40 + 4) = *((void *)v41 + 4);
      *((void *)v40 + 5) = v43;
      *(void *)&v6[updated[13]] = *(void *)&v7[updated[13]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_14;
    case 8u:
      uint64_t v44 = *((void *)v7 + 1);
      *(void *)uint64_t v6 = *(void *)v7;
      *((void *)v6 + 1) = v44;
      unsigned char v6[16] = v7[16];
      swift_bridgeObjectRetain();
      goto LABEL_14;
    case 9u:
      uint64_t v45 = *((void *)v7 + 1);
      *(void *)uint64_t v6 = *(void *)v7;
      *((void *)v6 + 1) = v45;
      uint64_t v46 = *((void *)v7 + 2);
      uint64_t v47 = *((void *)v7 + 3);
      *((void *)v6 + 2) = v46;
      *((void *)v6 + 3) = v47;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_14;
    case 0xAu:
      uint64_t v48 = *((void *)v7 + 1);
      *(void *)uint64_t v6 = *(void *)v7;
      *((void *)v6 + 1) = v48;
      *((void *)v6 + 2) = *((void *)v7 + 2);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
LABEL_14:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(v6, v7, *(void *)(*(void *)(v8 - 8) + 64));
      break;
  }
  return a1;
}

void *assignWithCopy for ServiceMessage(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    sub_25A5B7FD0((uint64_t)a1 + v6, type metadata accessor for ServiceMessage.Content);
    uint64_t v9 = type metadata accessor for ServiceMessage.Content(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *(void *)uint64_t v7 = *(void *)v8;
        *((void *)v7 + 1) = *((void *)v8 + 1);
        *((void *)v7 + 2) = *((void *)v8 + 2);
        *((void *)v7 + 3) = *((void *)v8 + 3);
        *((void *)v7 + 4) = *((void *)v8 + 4);
        *((void *)v7 + 5) = *((void *)v8 + 5);
        *((void *)v7 + 6) = *((void *)v8 + 6);
        *((void *)v7 + 7) = *((void *)v8 + 7);
        v7[64] = v8[64];
        v7[65] = v8[65];
        *((void *)v7 + 9) = *((void *)v8 + 9);
        *((void *)v7 + 10) = *((void *)v8 + 10);
        v7[88] = v8[88];
        *(void *)(v7 + 92) = *(void *)(v8 + 92);
        *((void *)v7 + 13) = *((void *)v8 + 13);
        long long v10 = *((_OWORD *)v8 + 7);
        long long v11 = *((_OWORD *)v8 + 8);
        v7[144] = v8[144];
        *((_OWORD *)v7 + 7) = v10;
        *((_OWORD *)v7 + 8) = v11;
        uint64_t v33 = *((void *)v8 + 20);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v33)
        {
          *((void *)v7 + 19) = *((void *)v8 + 19);
          *((void *)v7 + 20) = *((void *)v8 + 20);
          *(_OWORD *)(v7 + 168) = *(_OWORD *)(v8 + 168);
          *((void *)v7 + 23) = *((void *)v8 + 23);
          *((void *)v7 + 24) = *((void *)v8 + 24);
          *((void *)v7 + 25) = *((void *)v8 + 25);
          *((void *)v7 + 26) = *((void *)v8 + 26);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v27 = *(_OWORD *)(v8 + 152);
          long long v28 = *(_OWORD *)(v8 + 168);
          long long v29 = *(_OWORD *)(v8 + 200);
          *(_OWORD *)(v7 + 184) = *(_OWORD *)(v8 + 184);
          *(_OWORD *)(v7 + 200) = v29;
          *(_OWORD *)(v7 + 152) = v27;
          *(_OWORD *)(v7 + 168) = v28;
        }
        goto LABEL_16;
      case 2u:
        *(void *)uint64_t v7 = *(void *)v8;
        *((void *)v7 + 1) = *((void *)v8 + 1);
        *((void *)v7 + 2) = *((void *)v8 + 2);
        *((void *)v7 + 3) = *((void *)v8 + 3);
        *((void *)v7 + 4) = *((void *)v8 + 4);
        *((void *)v7 + 5) = *((void *)v8 + 5);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_16;
      case 4u:
        *uint64_t v7 = *v8;
        uint64_t v12 = (int *)type metadata accessor for ForwardPayload(0);
        uint64_t v13 = v12[5];
        long long v14 = &v7[v13];
        uint64_t v15 = &v8[v13];
        uint64_t v16 = sub_25A6227C0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
        *(_DWORD *)&v7[v12[6]] = *(_DWORD *)&v8[v12[6]];
        v7[v12[7]] = v8[v12[7]];
        v7[v12[8]] = v8[v12[8]];
        uint64_t v17 = v12[9];
        uint64_t v18 = &v7[v17];
        uint64_t v19 = &v8[v17];
        *(void *)uint64_t v18 = *(void *)v19;
        *((void *)v18 + 1) = *((void *)v19 + 1);
        swift_bridgeObjectRetain();
        goto LABEL_16;
      case 5u:
        *(_DWORD *)uint64_t v7 = *(_DWORD *)v8;
        uint64_t v20 = *((void *)v8 + 1);
        unsigned char v7[16] = v8[16];
        *((void *)v7 + 1) = v20;
        if (*((void *)v8 + 4) <= 4uLL)
        {
          *(_OWORD *)(v7 + 24) = *(_OWORD *)(v8 + 24);
        }
        else
        {
          *((void *)v7 + 3) = *((void *)v8 + 3);
          *((void *)v7 + 4) = *((void *)v8 + 4);
          swift_bridgeObjectRetain();
        }
        *((void *)v7 + 5) = *((void *)v8 + 5);
        *((void *)v7 + 6) = *((void *)v8 + 6);
        *((void *)v7 + 7) = *((void *)v8 + 7);
        *((void *)v7 + 8) = *((void *)v8 + 8);
        *((void *)v7 + 9) = *((void *)v8 + 9);
        *((void *)v7 + 10) = *((void *)v8 + 10);
        uint64_t updated = (int *)type metadata accessor for ShellUpdatePayload();
        uint64_t v22 = updated[10];
        unint64_t v32 = &v8[v22];
        uint64_t v34 = &v7[v22];
        uint64_t v23 = sub_25A6227C0();
        char v31 = *(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v31(v34, v32, v23);
        *(void *)&v7[updated[11]] = *(void *)&v8[updated[11]];
        uint64_t v24 = updated[12];
        uint64_t v25 = &v7[v24];
        uint64_t v26 = &v8[v24];
        *(void *)uint64_t v25 = *(void *)v26;
        v25[8] = v26[8];
        *((void *)v25 + 2) = *((void *)v26 + 2);
        *((void *)v25 + 3) = *((void *)v26 + 3);
        *((void *)v25 + 4) = *((void *)v26 + 4);
        *((void *)v25 + 5) = *((void *)v26 + 5);
        *(void *)&v7[updated[13]] = *(void *)&v8[updated[13]];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_16;
      case 8u:
        *(void *)uint64_t v7 = *(void *)v8;
        *((void *)v7 + 1) = *((void *)v8 + 1);
        unsigned char v7[16] = v8[16];
        swift_bridgeObjectRetain();
        goto LABEL_16;
      case 9u:
        *(void *)uint64_t v7 = *(void *)v8;
        *((void *)v7 + 1) = *((void *)v8 + 1);
        *((void *)v7 + 2) = *((void *)v8 + 2);
        *((void *)v7 + 3) = *((void *)v8 + 3);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_16;
      case 0xAu:
        *(void *)uint64_t v7 = *(void *)v8;
        *((void *)v7 + 1) = *((void *)v8 + 1);
        *((void *)v7 + 2) = *((void *)v8 + 2);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
LABEL_16:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
        break;
    }
  }
  return a1;
}

_OWORD *initializeWithTake for ServiceMessage(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = type metadata accessor for ServiceMessage.Content(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 5)
  {
    *(_DWORD *)uint64_t v5 = *(_DWORD *)v6;
    *((void *)v5 + 1) = *((void *)v6 + 1);
    v5[16] = v6[16];
    *(_OWORD *)(v5 + 24) = *(_OWORD *)(v6 + 24);
    *(_OWORD *)(v5 + 40) = *(_OWORD *)(v6 + 40);
    *(_OWORD *)(v5 + 56) = *(_OWORD *)(v6 + 56);
    *(_OWORD *)(v5 + 72) = *(_OWORD *)(v6 + 72);
    uint64_t updated = (int *)type metadata accessor for ShellUpdatePayload();
    uint64_t v15 = updated[10];
    uint64_t v16 = &v5[v15];
    uint64_t v17 = &v6[v15];
    uint64_t v18 = sub_25A6227C0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
    *(void *)&v5[updated[11]] = *(void *)&v6[updated[11]];
    uint64_t v19 = updated[12];
    uint64_t v20 = &v5[v19];
    uint64_t v21 = &v6[v19];
    long long v22 = *((_OWORD *)v21 + 2);
    long long v23 = *(_OWORD *)v21;
    *((_OWORD *)v20 + 1) = *((_OWORD *)v21 + 1);
    *((_OWORD *)v20 + 2) = v22;
    *(_OWORD *)uint64_t v20 = v23;
    *(void *)&v5[updated[13]] = *(void *)&v6[updated[13]];
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload == 4)
  {
    *uint64_t v5 = *v6;
    uint64_t v9 = (int *)type metadata accessor for ForwardPayload(0);
    uint64_t v10 = v9[5];
    long long v11 = &v5[v10];
    uint64_t v12 = &v6[v10];
    uint64_t v13 = sub_25A6227C0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
    *(_DWORD *)&v5[v9[6]] = *(_DWORD *)&v6[v9[6]];
    v5[v9[7]] = v6[v9[7]];
    v5[v9[8]] = v6[v9[8]];
    *(_OWORD *)&v5[v9[9]] = *(_OWORD *)&v6[v9[9]];
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v5, v6, *(void *)(*(void *)(v7 - 8) + 64));
  }
  return a1;
}

void *assignWithTake for ServiceMessage(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    uint64_t v7 = *(int *)(a3 + 20);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    sub_25A5B7FD0((uint64_t)a1 + v7, type metadata accessor for ServiceMessage.Content);
    uint64_t v10 = type metadata accessor for ServiceMessage.Content(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 5)
    {
      *(_DWORD *)uint64_t v8 = *(_DWORD *)v9;
      *((void *)v8 + 1) = *((void *)v9 + 1);
      v8[16] = v9[16];
      *(_OWORD *)(v8 + 24) = *(_OWORD *)(v9 + 24);
      *(_OWORD *)(v8 + 40) = *(_OWORD *)(v9 + 40);
      *(_OWORD *)(v8 + 56) = *(_OWORD *)(v9 + 56);
      *(_OWORD *)(v8 + 72) = *(_OWORD *)(v9 + 72);
      uint64_t updated = (int *)type metadata accessor for ShellUpdatePayload();
      uint64_t v18 = updated[10];
      uint64_t v19 = &v8[v18];
      uint64_t v20 = &v9[v18];
      uint64_t v21 = sub_25A6227C0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32))(v19, v20, v21);
      *(void *)&v8[updated[11]] = *(void *)&v9[updated[11]];
      uint64_t v22 = updated[12];
      long long v23 = &v8[v22];
      uint64_t v24 = &v9[v22];
      long long v25 = *((_OWORD *)v24 + 2);
      long long v26 = *(_OWORD *)v24;
      *((_OWORD *)v23 + 1) = *((_OWORD *)v24 + 1);
      *((_OWORD *)v23 + 2) = v25;
      *(_OWORD *)long long v23 = v26;
      *(void *)&v8[updated[13]] = *(void *)&v9[updated[13]];
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload == 4)
    {
      *uint64_t v8 = *v9;
      uint64_t v12 = (int *)type metadata accessor for ForwardPayload(0);
      uint64_t v13 = v12[5];
      long long v14 = &v8[v13];
      uint64_t v15 = &v9[v13];
      uint64_t v16 = sub_25A6227C0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
      *(_DWORD *)&v8[v12[6]] = *(_DWORD *)&v9[v12[6]];
      v8[v12[7]] = v9[v12[7]];
      v8[v12[8]] = v9[v12[8]];
      *(_OWORD *)&v8[v12[9]] = *(_OWORD *)&v9[v12[9]];
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for ServiceMessage(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25A5C4D08);
}

uint64_t sub_25A5C4D08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = type metadata accessor for ServiceMessage.Content(0);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
    uint64_t v11 = v9;
    uint64_t v12 = a1 + *(int *)(a3 + 20);
    return v10(v12, a2, v11);
  }
}

uint64_t storeEnumTagSinglePayload for ServiceMessage(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25A5C4DD8);
}

uint64_t sub_25A5C4DD8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 2147483646)
  {
    *(void *)(result + 8) = a2;
  }
  else
  {
    uint64_t v7 = type metadata accessor for ServiceMessage.Content(0);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_25A5C4E80()
{
  uint64_t result = type metadata accessor for ServiceMessage.Content(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ServiceMessage.MessageType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 12 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 12) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF4) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF3)
  {
    unsigned int v6 = ((a2 - 244) >> 8) + 1;
    *uint64_t result = a2 + 12;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25A5C4FE4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 12;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ServiceMessage.MessageType()
{
  return &type metadata for ServiceMessage.MessageType;
}

char *initializeBufferWithCopyOfBuffer for ServiceMessage.Content(char *a1, char *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = (char *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v7 = *((void *)a2 + 1);
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = v7;
        uint64_t v8 = *((void *)a2 + 3);
        *((void *)a1 + 2) = *((void *)a2 + 2);
        *((void *)a1 + 3) = v8;
        uint64_t v9 = *((void *)a2 + 5);
        *((void *)a1 + 4) = *((void *)a2 + 4);
        *((void *)a1 + 5) = v9;
        uint64_t v10 = *((void *)a2 + 7);
        *((void *)a1 + 6) = *((void *)a2 + 6);
        *((void *)a1 + 7) = v10;
        a1[64] = a2[64];
        a1[65] = a2[65];
        uint64_t v11 = *((void *)a2 + 10);
        *((void *)a1 + 9) = *((void *)a2 + 9);
        *((void *)a1 + 10) = v11;
        a1[88] = a2[88];
        *(void *)(a1 + 92) = *(void *)(a2 + 92);
        *((void *)a1 + 13) = *((void *)a2 + 13);
        long long v12 = *((_OWORD *)a2 + 8);
        *((_OWORD *)a1 + 7) = *((_OWORD *)a2 + 7);
        *((_OWORD *)a1 + 8) = v12;
        a1[144] = a2[144];
        uint64_t v13 = *((void *)a2 + 20);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v13)
        {
          *((void *)a1 + 19) = *((void *)a2 + 19);
          *((void *)a1 + 20) = v13;
          *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
          uint64_t v14 = *((void *)a2 + 24);
          *((void *)a1 + 23) = *((void *)a2 + 23);
          *((void *)a1 + 24) = v14;
          uint64_t v15 = *((void *)a2 + 25);
          uint64_t v16 = *((void *)a2 + 26);
          *((void *)a1 + 25) = v15;
          *((void *)a1 + 26) = v16;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v51 = *(_OWORD *)(a2 + 168);
          *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
          *(_OWORD *)(a1 + 168) = v51;
          long long v52 = *(_OWORD *)(a2 + 200);
          *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
          *(_OWORD *)(a1 + 200) = v52;
        }
        swift_storeEnumTagMultiPayload();
        break;
      case 2u:
        uint64_t v19 = *((void *)a2 + 1);
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = v19;
        uint64_t v20 = *((void *)a2 + 3);
        *((void *)a1 + 2) = *((void *)a2 + 2);
        *((void *)a1 + 3) = v20;
        uint64_t v21 = *((void *)a2 + 4);
        uint64_t v22 = *((void *)a2 + 5);
        *((void *)a1 + 4) = v21;
        *((void *)a1 + 5) = v22;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 4u:
        *a1 = *a2;
        long long v23 = (int *)type metadata accessor for ForwardPayload(0);
        uint64_t v24 = v23[5];
        long long v25 = &a1[v24];
        long long v26 = &a2[v24];
        uint64_t v27 = sub_25A6227C0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
        *(_DWORD *)&a1[v23[6]] = *(_DWORD *)&a2[v23[6]];
        a1[v23[7]] = a2[v23[7]];
        a1[v23[8]] = a2[v23[8]];
        uint64_t v28 = v23[9];
        long long v29 = &a1[v28];
        uint64_t v30 = &a2[v28];
        uint64_t v31 = *((void *)v30 + 1);
        *(void *)long long v29 = *(void *)v30;
        *((void *)v29 + 1) = v31;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 5u:
        *(_DWORD *)a1 = *(_DWORD *)a2;
        *((void *)a1 + 1) = *((void *)a2 + 1);
        a1[16] = a2[16];
        unint64_t v32 = a2 + 24;
        unint64_t v33 = *((void *)a2 + 4);
        if (v33 > 4)
        {
          *((void *)a1 + 3) = *v32;
          *((void *)a1 + 4) = v33;
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 24) = *(_OWORD *)v32;
        }
        uint64_t v34 = *((void *)a2 + 6);
        *((void *)a1 + 5) = *((void *)a2 + 5);
        *((void *)a1 + 6) = v34;
        uint64_t v35 = *((void *)a2 + 8);
        *((void *)a1 + 7) = *((void *)a2 + 7);
        *((void *)a1 + 8) = v35;
        uint64_t v36 = *((void *)a2 + 10);
        *((void *)a1 + 9) = *((void *)a2 + 9);
        *((void *)a1 + 10) = v36;
        uint64_t updated = (int *)type metadata accessor for ShellUpdatePayload();
        uint64_t v38 = updated[10];
        long long v53 = &a2[v38];
        uint64_t v54 = &a1[v38];
        uint64_t v39 = sub_25A6227C0();
        uint64_t v40 = *(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v40(v54, v53, v39);
        *(void *)&a1[updated[11]] = *(void *)&a2[updated[11]];
        uint64_t v41 = updated[12];
        uint64_t v42 = &a1[v41];
        uint64_t v43 = &a2[v41];
        *(void *)uint64_t v42 = *(void *)v43;
        v42[8] = v43[8];
        uint64_t v44 = *((void *)v43 + 3);
        *((void *)v42 + 2) = *((void *)v43 + 2);
        *((void *)v42 + 3) = v44;
        uint64_t v45 = *((void *)v43 + 5);
        *((void *)v42 + 4) = *((void *)v43 + 4);
        *((void *)v42 + 5) = v45;
        *(void *)&a1[updated[13]] = *(void *)&a2[updated[13]];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 8u:
        uint64_t v46 = *((void *)a2 + 1);
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = v46;
        a1[16] = a2[16];
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 9u:
        uint64_t v47 = *((void *)a2 + 1);
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = v47;
        uint64_t v48 = *((void *)a2 + 2);
        uint64_t v49 = *((void *)a2 + 3);
        *((void *)a1 + 2) = v48;
        *((void *)a1 + 3) = v49;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 0xAu:
        uint64_t v50 = *((void *)a2 + 1);
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = v50;
        *((void *)a1 + 2) = *((void *)a2 + 2);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(v6 + 64));
        break;
    }
  }
  return a1;
}

uint64_t destroy for ServiceMessage.Content(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 1:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = *(void *)(a1 + 160);
      if (result) {
        goto LABEL_3;
      }
      return result;
    case 2:
LABEL_3:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_10;
    case 4:
      uint64_t v3 = a1 + *(int *)(type metadata accessor for ForwardPayload(0) + 20);
      uint64_t v4 = sub_25A6227C0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
      goto LABEL_10;
    case 5:
      if (*(void *)(a1 + 32) >= 5uLL) {
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v5 = a1 + *(int *)(type metadata accessor for ShellUpdatePayload() + 40);
      uint64_t v6 = sub_25A6227C0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_10;
    case 8:
      goto LABEL_10;
    case 9:
    case 10:
      swift_bridgeObjectRelease();
LABEL_10:
      uint64_t result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

char *initializeWithCopy for ServiceMessage.Content(char *a1, char *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v6 = *((void *)a2 + 1);
      *(void *)a1 = *(void *)a2;
      *((void *)a1 + 1) = v6;
      uint64_t v7 = *((void *)a2 + 3);
      *((void *)a1 + 2) = *((void *)a2 + 2);
      *((void *)a1 + 3) = v7;
      uint64_t v8 = *((void *)a2 + 5);
      *((void *)a1 + 4) = *((void *)a2 + 4);
      *((void *)a1 + 5) = v8;
      uint64_t v9 = *((void *)a2 + 7);
      *((void *)a1 + 6) = *((void *)a2 + 6);
      *((void *)a1 + 7) = v9;
      a1[64] = a2[64];
      a1[65] = a2[65];
      uint64_t v10 = *((void *)a2 + 10);
      *((void *)a1 + 9) = *((void *)a2 + 9);
      *((void *)a1 + 10) = v10;
      a1[88] = a2[88];
      *(void *)(a1 + 92) = *(void *)(a2 + 92);
      *((void *)a1 + 13) = *((void *)a2 + 13);
      long long v11 = *((_OWORD *)a2 + 8);
      *((_OWORD *)a1 + 7) = *((_OWORD *)a2 + 7);
      *((_OWORD *)a1 + 8) = v11;
      a1[144] = a2[144];
      uint64_t v12 = *((void *)a2 + 20);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v12)
      {
        *((void *)a1 + 19) = *((void *)a2 + 19);
        *((void *)a1 + 20) = v12;
        *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
        uint64_t v13 = *((void *)a2 + 24);
        *((void *)a1 + 23) = *((void *)a2 + 23);
        *((void *)a1 + 24) = v13;
        uint64_t v14 = *((void *)a2 + 25);
        uint64_t v15 = *((void *)a2 + 26);
        *((void *)a1 + 25) = v14;
        *((void *)a1 + 26) = v15;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v48 = *(_OWORD *)(a2 + 168);
        *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
        *(_OWORD *)(a1 + 168) = v48;
        long long v49 = *(_OWORD *)(a2 + 200);
        *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
        *(_OWORD *)(a1 + 200) = v49;
      }
      goto LABEL_14;
    case 2u:
      uint64_t v16 = *((void *)a2 + 1);
      *(void *)a1 = *(void *)a2;
      *((void *)a1 + 1) = v16;
      uint64_t v17 = *((void *)a2 + 3);
      *((void *)a1 + 2) = *((void *)a2 + 2);
      *((void *)a1 + 3) = v17;
      uint64_t v18 = *((void *)a2 + 4);
      uint64_t v19 = *((void *)a2 + 5);
      *((void *)a1 + 4) = v18;
      *((void *)a1 + 5) = v19;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_14;
    case 4u:
      *a1 = *a2;
      uint64_t v20 = (int *)type metadata accessor for ForwardPayload(0);
      uint64_t v21 = v20[5];
      uint64_t v22 = &a1[v21];
      long long v23 = &a2[v21];
      uint64_t v24 = sub_25A6227C0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16))(v22, v23, v24);
      *(_DWORD *)&a1[v20[6]] = *(_DWORD *)&a2[v20[6]];
      a1[v20[7]] = a2[v20[7]];
      a1[v20[8]] = a2[v20[8]];
      uint64_t v25 = v20[9];
      long long v26 = &a1[v25];
      uint64_t v27 = &a2[v25];
      uint64_t v28 = *((void *)v27 + 1);
      *(void *)long long v26 = *(void *)v27;
      *((void *)v26 + 1) = v28;
      swift_bridgeObjectRetain();
      goto LABEL_14;
    case 5u:
      *(_DWORD *)a1 = *(_DWORD *)a2;
      *((void *)a1 + 1) = *((void *)a2 + 1);
      a1[16] = a2[16];
      long long v29 = a2 + 24;
      unint64_t v30 = *((void *)a2 + 4);
      if (v30 > 4)
      {
        *((void *)a1 + 3) = *v29;
        *((void *)a1 + 4) = v30;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(a1 + 24) = *(_OWORD *)v29;
      }
      uint64_t v31 = *((void *)a2 + 6);
      *((void *)a1 + 5) = *((void *)a2 + 5);
      *((void *)a1 + 6) = v31;
      uint64_t v32 = *((void *)a2 + 8);
      *((void *)a1 + 7) = *((void *)a2 + 7);
      *((void *)a1 + 8) = v32;
      uint64_t v33 = *((void *)a2 + 10);
      *((void *)a1 + 9) = *((void *)a2 + 9);
      *((void *)a1 + 10) = v33;
      uint64_t updated = (int *)type metadata accessor for ShellUpdatePayload();
      uint64_t v35 = updated[10];
      long long v51 = &a2[v35];
      long long v52 = &a1[v35];
      uint64_t v36 = sub_25A6227C0();
      uint64_t v37 = *(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v37(v52, v51, v36);
      *(void *)&a1[updated[11]] = *(void *)&a2[updated[11]];
      uint64_t v38 = updated[12];
      uint64_t v39 = &a1[v38];
      uint64_t v40 = &a2[v38];
      *(void *)uint64_t v39 = *(void *)v40;
      v39[8] = v40[8];
      uint64_t v41 = *((void *)v40 + 3);
      *((void *)v39 + 2) = *((void *)v40 + 2);
      *((void *)v39 + 3) = v41;
      uint64_t v42 = *((void *)v40 + 5);
      *((void *)v39 + 4) = *((void *)v40 + 4);
      *((void *)v39 + 5) = v42;
      *(void *)&a1[updated[13]] = *(void *)&a2[updated[13]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_14;
    case 8u:
      uint64_t v43 = *((void *)a2 + 1);
      *(void *)a1 = *(void *)a2;
      *((void *)a1 + 1) = v43;
      a1[16] = a2[16];
      swift_bridgeObjectRetain();
      goto LABEL_14;
    case 9u:
      uint64_t v44 = *((void *)a2 + 1);
      *(void *)a1 = *(void *)a2;
      *((void *)a1 + 1) = v44;
      uint64_t v45 = *((void *)a2 + 2);
      uint64_t v46 = *((void *)a2 + 3);
      *((void *)a1 + 2) = v45;
      *((void *)a1 + 3) = v46;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_14;
    case 0xAu:
      uint64_t v47 = *((void *)a2 + 1);
      *(void *)a1 = *(void *)a2;
      *((void *)a1 + 1) = v47;
      *((void *)a1 + 2) = *((void *)a2 + 2);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
LABEL_14:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

char *assignWithCopy for ServiceMessage.Content(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_25A5B7FD0((uint64_t)a1, type metadata accessor for ServiceMessage.Content);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = *((void *)a2 + 1);
        *((void *)a1 + 2) = *((void *)a2 + 2);
        *((void *)a1 + 3) = *((void *)a2 + 3);
        *((void *)a1 + 4) = *((void *)a2 + 4);
        *((void *)a1 + 5) = *((void *)a2 + 5);
        *((void *)a1 + 6) = *((void *)a2 + 6);
        *((void *)a1 + 7) = *((void *)a2 + 7);
        a1[64] = a2[64];
        a1[65] = a2[65];
        *((void *)a1 + 9) = *((void *)a2 + 9);
        *((void *)a1 + 10) = *((void *)a2 + 10);
        a1[88] = a2[88];
        *(void *)(a1 + 92) = *(void *)(a2 + 92);
        *((void *)a1 + 13) = *((void *)a2 + 13);
        long long v6 = *((_OWORD *)a2 + 7);
        long long v7 = *((_OWORD *)a2 + 8);
        a1[144] = a2[144];
        *((_OWORD *)a1 + 7) = v6;
        *((_OWORD *)a1 + 8) = v7;
        uint64_t v8 = *((void *)a2 + 20);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v8)
        {
          *((void *)a1 + 19) = *((void *)a2 + 19);
          *((void *)a1 + 20) = *((void *)a2 + 20);
          *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
          *((void *)a1 + 23) = *((void *)a2 + 23);
          *((void *)a1 + 24) = *((void *)a2 + 24);
          *((void *)a1 + 25) = *((void *)a2 + 25);
          *((void *)a1 + 26) = *((void *)a2 + 26);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v25 = *(_OWORD *)(a2 + 152);
          long long v26 = *(_OWORD *)(a2 + 168);
          long long v27 = *(_OWORD *)(a2 + 200);
          *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
          *(_OWORD *)(a1 + 200) = v27;
          *(_OWORD *)(a1 + 152) = v25;
          *(_OWORD *)(a1 + 168) = v26;
        }
        goto LABEL_16;
      case 2u:
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = *((void *)a2 + 1);
        *((void *)a1 + 2) = *((void *)a2 + 2);
        *((void *)a1 + 3) = *((void *)a2 + 3);
        *((void *)a1 + 4) = *((void *)a2 + 4);
        *((void *)a1 + 5) = *((void *)a2 + 5);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_16;
      case 4u:
        *a1 = *a2;
        uint64_t v9 = (int *)type metadata accessor for ForwardPayload(0);
        uint64_t v10 = v9[5];
        long long v11 = &a1[v10];
        uint64_t v12 = &a2[v10];
        uint64_t v13 = sub_25A6227C0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
        *(_DWORD *)&a1[v9[6]] = *(_DWORD *)&a2[v9[6]];
        a1[v9[7]] = a2[v9[7]];
        a1[v9[8]] = a2[v9[8]];
        uint64_t v14 = v9[9];
        uint64_t v15 = &a1[v14];
        uint64_t v16 = &a2[v14];
        *(void *)uint64_t v15 = *(void *)v16;
        *((void *)v15 + 1) = *((void *)v16 + 1);
        swift_bridgeObjectRetain();
        goto LABEL_16;
      case 5u:
        *(_DWORD *)a1 = *(_DWORD *)a2;
        uint64_t v17 = *((void *)a2 + 1);
        a1[16] = a2[16];
        *((void *)a1 + 1) = v17;
        if (*((void *)a2 + 4) <= 4uLL)
        {
          *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
        }
        else
        {
          *((void *)a1 + 3) = *((void *)a2 + 3);
          *((void *)a1 + 4) = *((void *)a2 + 4);
          swift_bridgeObjectRetain();
        }
        *((void *)a1 + 5) = *((void *)a2 + 5);
        *((void *)a1 + 6) = *((void *)a2 + 6);
        *((void *)a1 + 7) = *((void *)a2 + 7);
        *((void *)a1 + 8) = *((void *)a2 + 8);
        *((void *)a1 + 9) = *((void *)a2 + 9);
        *((void *)a1 + 10) = *((void *)a2 + 10);
        uint64_t updated = (int *)type metadata accessor for ShellUpdatePayload();
        uint64_t v19 = updated[10];
        long long v29 = &a2[v19];
        unint64_t v30 = &a1[v19];
        uint64_t v20 = sub_25A6227C0();
        uint64_t v21 = *(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v21(v30, v29, v20);
        *(void *)&a1[updated[11]] = *(void *)&a2[updated[11]];
        uint64_t v22 = updated[12];
        long long v23 = &a1[v22];
        uint64_t v24 = &a2[v22];
        *(void *)long long v23 = *(void *)v24;
        v23[8] = v24[8];
        *((void *)v23 + 2) = *((void *)v24 + 2);
        *((void *)v23 + 3) = *((void *)v24 + 3);
        *((void *)v23 + 4) = *((void *)v24 + 4);
        *((void *)v23 + 5) = *((void *)v24 + 5);
        *(void *)&a1[updated[13]] = *(void *)&a2[updated[13]];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_16;
      case 8u:
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = *((void *)a2 + 1);
        a1[16] = a2[16];
        swift_bridgeObjectRetain();
        goto LABEL_16;
      case 9u:
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = *((void *)a2 + 1);
        *((void *)a1 + 2) = *((void *)a2 + 2);
        *((void *)a1 + 3) = *((void *)a2 + 3);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_16;
      case 0xAu:
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = *((void *)a2 + 1);
        *((void *)a1 + 2) = *((void *)a2 + 2);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
LABEL_16:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

char *initializeWithTake for ServiceMessage.Content(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 5)
  {
    *(_DWORD *)a1 = *(_DWORD *)a2;
    *((void *)a1 + 1) = *((void *)a2 + 1);
    a1[16] = a2[16];
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    uint64_t updated = (int *)type metadata accessor for ShellUpdatePayload();
    uint64_t v13 = updated[10];
    uint64_t v14 = &a1[v13];
    uint64_t v15 = &a2[v13];
    uint64_t v16 = sub_25A6227C0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
    *(void *)&a1[updated[11]] = *(void *)&a2[updated[11]];
    uint64_t v17 = updated[12];
    uint64_t v18 = &a1[v17];
    uint64_t v19 = &a2[v17];
    long long v20 = *((_OWORD *)v19 + 2);
    long long v21 = *(_OWORD *)v19;
    *((_OWORD *)v18 + 1) = *((_OWORD *)v19 + 1);
    *((_OWORD *)v18 + 2) = v20;
    *(_OWORD *)uint64_t v18 = v21;
    *(void *)&a1[updated[13]] = *(void *)&a2[updated[13]];
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload == 4)
  {
    *a1 = *a2;
    long long v7 = (int *)type metadata accessor for ForwardPayload(0);
    uint64_t v8 = v7[5];
    uint64_t v9 = &a1[v8];
    uint64_t v10 = &a2[v8];
    uint64_t v11 = sub_25A6227C0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
    *(_DWORD *)&a1[v7[6]] = *(_DWORD *)&a2[v7[6]];
    a1[v7[7]] = a2[v7[7]];
    a1[v7[8]] = a2[v7[8]];
    *(_OWORD *)&a1[v7[9]] = *(_OWORD *)&a2[v7[9]];
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

char *assignWithTake for ServiceMessage.Content(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_25A5B7FD0((uint64_t)a1, type metadata accessor for ServiceMessage.Content);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 5)
    {
      *(_DWORD *)a1 = *(_DWORD *)a2;
      *((void *)a1 + 1) = *((void *)a2 + 1);
      a1[16] = a2[16];
      *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
      *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
      *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
      uint64_t updated = (int *)type metadata accessor for ShellUpdatePayload();
      uint64_t v13 = updated[10];
      uint64_t v14 = &a1[v13];
      uint64_t v15 = &a2[v13];
      uint64_t v16 = sub_25A6227C0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
      *(void *)&a1[updated[11]] = *(void *)&a2[updated[11]];
      uint64_t v17 = updated[12];
      uint64_t v18 = &a1[v17];
      uint64_t v19 = &a2[v17];
      long long v20 = *((_OWORD *)v19 + 2);
      long long v21 = *(_OWORD *)v19;
      *((_OWORD *)v18 + 1) = *((_OWORD *)v19 + 1);
      *((_OWORD *)v18 + 2) = v20;
      *(_OWORD *)uint64_t v18 = v21;
      *(void *)&a1[updated[13]] = *(void *)&a2[updated[13]];
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload == 4)
    {
      *a1 = *a2;
      long long v7 = (int *)type metadata accessor for ForwardPayload(0);
      uint64_t v8 = v7[5];
      uint64_t v9 = &a1[v8];
      uint64_t v10 = &a2[v8];
      uint64_t v11 = sub_25A6227C0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
      *(_DWORD *)&a1[v7[6]] = *(_DWORD *)&a2[v7[6]];
      a1[v7[7]] = a2[v7[7]];
      a1[v7[8]] = a2[v7[8]];
      *(_OWORD *)&a1[v7[9]] = *(_OWORD *)&a2[v7[9]];
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_25A5C6520()
{
  uint64_t result = type metadata accessor for ForwardPayload(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for ShellUpdatePayload();
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

uint64_t __swift_memcpy11_1(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(_DWORD *)(result + 7) = *(_DWORD *)((char *)a2 + 7);
  *(void *)uint64_t result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for OSCapabilities(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && a1[11]) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *a1;
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for OSCapabilities(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 10) = 0;
    *(_WORD *)(result + 8) = 0;
    *(void *)uint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 11) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 11) = 0;
    }
    if (a2) {
      *(unsigned char *)uint64_t result = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for OSCapabilities()
{
  return &type metadata for OSCapabilities;
}

ValueMetadata *type metadata accessor for AgentDescriptor()
{
  return &type metadata for AgentDescriptor;
}

ValueMetadata *type metadata accessor for AgentDescriptor.Bundle()
{
  return &type metadata for AgentDescriptor.Bundle;
}

ValueMetadata *type metadata accessor for PreviewAgentRole()
{
  return &type metadata for PreviewAgentRole;
}

ValueMetadata *type metadata accessor for PreviewAgentBootstrapMode()
{
  return &type metadata for PreviewAgentBootstrapMode;
}

uint64_t getEnumTagSinglePayload for CapabilitiesPayload(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for CapabilitiesPayload(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25A5C68B8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CapabilitiesPayload()
{
  return &type metadata for CapabilitiesPayload;
}

uint64_t destroy for LaunchPayload()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for LaunchPayload(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(unsigned char *)(a1 + 65) = *(unsigned char *)(a2 + 65);
  uint64_t v7 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v7;
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(void *)(a1 + 92) = *(void *)(a2 + 92);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  long long v8 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v8;
  *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for LaunchPayload(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(unsigned char *)(a1 + 65) = *(unsigned char *)(a2 + 65);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(_DWORD *)(a1 + 92) = *(_DWORD *)(a2 + 92);
  *(_DWORD *)(a1 + 96) = *(_DWORD *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  long long v4 = *(_OWORD *)(a2 + 112);
  long long v5 = *(_OWORD *)(a2 + 128);
  *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
  *(_OWORD *)(a1 + 112) = v4;
  *(_OWORD *)(a1 + 128) = v5;
  return a1;
}

__n128 __swift_memcpy145_8(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  __n128 result = *(__n128 *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 112);
  long long v8 = *(_OWORD *)(a2 + 128);
  *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 128) = v8;
  *(__n128 *)(a1 + 96) = result;
  return result;
}

uint64_t assignWithTake for LaunchPayload(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(unsigned char *)(a1 + 65) = *(unsigned char *)(a2 + 65);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(void *)(a1 + 92) = *(void *)(a2 + 92);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRelease();
  long long v8 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v8;
  *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
  return a1;
}

uint64_t getEnumTagSinglePayload for LaunchPayload(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 145)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LaunchPayload(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 136) = 0;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 144) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 145) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 145) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LaunchPayload()
{
  return &type metadata for LaunchPayload;
}

void *__swift_memcpy8_4(void *result, void *a2)
{
  *__n128 result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for BinaryType(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for BinaryType(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 8) = v3;
  return result;
}

ValueMetadata *type metadata accessor for BinaryType()
{
  return &type metadata for BinaryType;
}

ValueMetadata *type metadata accessor for ProcessType()
{
  return &type metadata for ProcessType;
}

unint64_t destroy for DeviceType(uint64_t a1)
{
  unint64_t result = *(void *)(a1 + 8);
  if (result >= 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for DeviceType(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if (v3 < 0xFFFFFFFF)
  {
    long long v6 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v6;
    long long v7 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v7;
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v3;
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    uint64_t v4 = *(void *)(a2 + 40);
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    *(void *)(a1 + 40) = v4;
    uint64_t v5 = *(void *)(a2 + 56);
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(void *)(a1 + 56) = v5;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t assignWithCopy for DeviceType(uint64_t a1, long long *a2)
{
  unint64_t v4 = *((void *)a2 + 1);
  if (*(void *)(a1 + 8) < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = *((void *)a2 + 1);
      *(_OWORD *)(a1 + 16) = a2[1];
      *(void *)(a1 + 32) = *((void *)a2 + 4);
      *(void *)(a1 + 40) = *((void *)a2 + 5);
      *(void *)(a1 + 48) = *((void *)a2 + 6);
      *(void *)(a1 + 56) = *((void *)a2 + 7);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_7:
    long long v5 = *a2;
    long long v6 = a2[1];
    long long v7 = a2[3];
    *(_OWORD *)(a1 + 32) = a2[2];
    *(_OWORD *)(a1 + 48) = v7;
    *(_OWORD *)a1 = v5;
    *(_OWORD *)(a1 + 16) = v6;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *((void *)a2 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *((void *)a2 + 2);
  *(void *)(a1 + 24) = *((void *)a2 + 3);
  *(void *)(a1 + 32) = *((void *)a2 + 4);
  *(void *)(a1 + 40) = *((void *)a2 + 5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *((void *)a2 + 6);
  *(void *)(a1 + 56) = *((void *)a2 + 7);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for DeviceType(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 8) < 0xFFFFFFFFuLL) {
    goto LABEL_5;
  }
  unint64_t v4 = *(void *)(a2 + 8);
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_5:
    long long v6 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v6;
    long long v7 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v7;
    return a1;
  }
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for DeviceType(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 64)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  if ((v3 + 1) >= 2) {
    return v3;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for DeviceType(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)(result + 48) = 0u;
    *(_OWORD *)unint64_t result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 64) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

double sub_25A5C70F8(uint64_t a1, int a2)
{
  if (a2 < 0)
  {
    *(void *)(a1 + 56) = 0;
    double result = 0.0;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(void *)a1 = a2 ^ 0x80000000;
  }
  else if (a2)
  {
    *(void *)(a1 + 8) = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for DeviceType()
{
  return &type metadata for DeviceType;
}

uint64_t destroy for SimulatorDevicePayload()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SimulatorDevicePayload(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  uint64_t v5 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for SimulatorDevicePayload(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for SimulatorDevicePayload(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for SimulatorDevicePayload()
{
  return &type metadata for SimulatorDevicePayload;
}

ValueMetadata *type metadata accessor for PrepareToRelaunchPayload()
{
  return &type metadata for PrepareToRelaunchPayload;
}

__n128 __swift_memcpy33_4(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for ProcessID(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 33)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 32);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ProcessID(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)__n128 result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 33) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 32) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_25A5C73AC(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 32);
}

uint64_t sub_25A5C73B4(uint64_t result, char a2)
{
  *(unsigned char *)(result + 32) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for ProcessID()
{
  return &type metadata for ProcessID;
}

void *initializeBufferWithCopyOfBuffer for ForwardPayload(unsigned char *a1, void *a2, int *a3)
{
  int v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *int v4 = *a2;
    int v4 = (void *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *(unsigned char *)a2;
    uint64_t v7 = a3[5];
    long long v8 = &a1[v7];
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_25A6227C0();
    (*(void (**)(unsigned char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    uint64_t v11 = a3[7];
    *(_DWORD *)((char *)v4 + a3[6]) = *(_DWORD *)((char *)a2 + a3[6]);
    *((unsigned char *)v4 + v11) = *((unsigned char *)a2 + v11);
    uint64_t v12 = a3[9];
    *((unsigned char *)v4 + a3[8]) = *((unsigned char *)a2 + a3[8]);
    uint64_t v13 = (void *)((char *)v4 + v12);
    uint64_t v14 = (void *)((char *)a2 + v12);
    uint64_t v15 = v14[1];
    *uint64_t v13 = *v14;
    v13[1] = v15;
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for ForwardPayload(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 20);
  uint64_t v3 = sub_25A6227C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);

  return swift_bridgeObjectRelease();
}

unsigned char *initializeWithCopy for ForwardPayload(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  long long v8 = &a2[v6];
  uint64_t v9 = sub_25A6227C0();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  uint64_t v10 = a3[7];
  *(_DWORD *)&a1[a3[6]] = *(_DWORD *)&a2[a3[6]];
  a1[v10] = a2[v10];
  uint64_t v11 = a3[9];
  a1[a3[8]] = a2[a3[8]];
  uint64_t v12 = &a1[v11];
  uint64_t v13 = &a2[v11];
  uint64_t v14 = v13[1];
  *uint64_t v12 = *v13;
  v12[1] = v14;
  swift_bridgeObjectRetain();
  return a1;
}

unsigned char *assignWithCopy for ForwardPayload(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  long long v8 = &a2[v6];
  uint64_t v9 = sub_25A6227C0();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  *(_DWORD *)&a1[a3[6]] = *(_DWORD *)&a2[a3[6]];
  a1[a3[7]] = a2[a3[7]];
  a1[a3[8]] = a2[a3[8]];
  uint64_t v10 = a3[9];
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  *uint64_t v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

unsigned char *initializeWithTake for ForwardPayload(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  long long v8 = &a2[v6];
  uint64_t v9 = sub_25A6227C0();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[7];
  *(_DWORD *)&a1[a3[6]] = *(_DWORD *)&a2[a3[6]];
  a1[v10] = a2[v10];
  uint64_t v11 = a3[9];
  a1[a3[8]] = a2[a3[8]];
  *(_OWORD *)&a1[v11] = *(_OWORD *)&a2[v11];
  return a1;
}

unsigned char *assignWithTake for ForwardPayload(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  long long v8 = &a2[v6];
  uint64_t v9 = sub_25A6227C0();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v10 = a3[7];
  *(_DWORD *)&a1[a3[6]] = *(_DWORD *)&a2[a3[6]];
  a1[v10] = a2[v10];
  uint64_t v11 = a3[9];
  a1[a3[8]] = a2[a3[8]];
  uint64_t v12 = &a1[v11];
  uint64_t v13 = (uint64_t *)&a2[v11];
  uint64_t v15 = *v13;
  uint64_t v14 = v13[1];
  *uint64_t v12 = v15;
  v12[1] = v14;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ForwardPayload(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25A5C7890);
}

uint64_t sub_25A5C7890(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_25A6227C0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 20);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    unint64_t v12 = *(void *)(a1 + *(int *)(a3 + 36) + 8);
    if (v12 >= 0xFFFFFFFF) {
      LODWORD(v12) = -1;
    }
    int v13 = v12 - 1;
    if (v13 < 0) {
      int v13 = -1;
    }
    return (v13 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for ForwardPayload(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25A5C7978);
}

uint64_t sub_25A5C7978(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_25A6227C0();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + *(int *)(a4 + 20);
    unint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 36) + 8) = a2;
  }
  return result;
}

uint64_t sub_25A5C7A3C()
{
  uint64_t result = sub_25A6227C0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_25A5C7B04(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for PurgePayload(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t assignWithTake for PurgePayload(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for PurgePayload(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 17)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PurgePayload(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 17) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PurgePayload()
{
  return &type metadata for PurgePayload;
}

ValueMetadata *type metadata accessor for RequestPreviewVariantsPayload()
{
  return &type metadata for RequestPreviewVariantsPayload;
}

ValueMetadata *type metadata accessor for PreviewVariantsPayload()
{
  return &type metadata for PreviewVariantsPayload;
}

uint64_t destroy for RequestContentOverridePayload()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *_s19PreviewsMessagingOS29RequestContentOverridePayloadVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for RequestContentOverridePayload(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for RequestContentOverridePayload(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for RequestContentOverridePayload(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RequestContentOverridePayload(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RequestContentOverridePayload()
{
  return &type metadata for RequestContentOverridePayload;
}

ValueMetadata *type metadata accessor for ContentOverridePayload()
{
  return &type metadata for ContentOverridePayload;
}

ValueMetadata *type metadata accessor for CapabilitiesPayload.Key()
{
  return &type metadata for CapabilitiesPayload.Key;
}

ValueMetadata *type metadata accessor for ContentOverridePayload.Key()
{
  return &type metadata for ContentOverridePayload.Key;
}

ValueMetadata *type metadata accessor for RequestContentOverridePayload.Key()
{
  return &type metadata for RequestContentOverridePayload.Key;
}

ValueMetadata *type metadata accessor for PreviewVariantsPayload.Key()
{
  return &type metadata for PreviewVariantsPayload.Key;
}

ValueMetadata *type metadata accessor for RequestPreviewVariantsPayload.Key()
{
  return &type metadata for RequestPreviewVariantsPayload.Key;
}

ValueMetadata *type metadata accessor for PurgePayload.Key()
{
  return &type metadata for PurgePayload.Key;
}

unsigned char *storeEnumTagSinglePayload for ForwardPayload.Key(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25A5C7F94);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ForwardPayload.Key()
{
  return &type metadata for ForwardPayload.Key;
}

ValueMetadata *type metadata accessor for ProcessID.Discriminant()
{
  return &type metadata for ProcessID.Discriminant;
}

ValueMetadata *type metadata accessor for ProcessID.Key()
{
  return &type metadata for ProcessID.Key;
}

ValueMetadata *type metadata accessor for PrepareToRelaunchPayload.Key()
{
  return &type metadata for PrepareToRelaunchPayload.Key;
}

unsigned char *storeEnumTagSinglePayload for SimulatorDevicePayload.Key(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25A5C80C8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SimulatorDevicePayload.Key()
{
  return &type metadata for SimulatorDevicePayload.Key;
}

ValueMetadata *type metadata accessor for DeviceType.Discriminant()
{
  return &type metadata for DeviceType.Discriminant;
}

ValueMetadata *type metadata accessor for DeviceType.Key()
{
  return &type metadata for DeviceType.Key;
}

ValueMetadata *type metadata accessor for BinaryType.Key()
{
  return &type metadata for BinaryType.Key;
}

uint64_t getEnumTagSinglePayload for LaunchPayload.Key(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF6) {
    goto LABEL_17;
  }
  if (a2 + 10 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 10) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 10;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 10;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 10;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xB;
  int v8 = v6 - 11;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for LaunchPayload.Key(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 10 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 10) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF6) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF5)
  {
    unsigned int v6 = ((a2 - 246) >> 8) + 1;
    *uint64_t result = a2 + 10;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25A5C828CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 10;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LaunchPayload.Key()
{
  return &type metadata for LaunchPayload.Key;
}

ValueMetadata *type metadata accessor for AgentDescriptor.Bundle.MissingPathError()
{
  return &type metadata for AgentDescriptor.Bundle.MissingPathError;
}

unsigned char *_s19PreviewsMessagingOS16PreviewAgentRoleOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25A5C83A0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AgentDescriptor.Bundle.Key()
{
  return &type metadata for AgentDescriptor.Bundle.Key;
}

ValueMetadata *type metadata accessor for AgentDescriptor.Key()
{
  return &type metadata for AgentDescriptor.Key;
}

ValueMetadata *type metadata accessor for ServiceMessage.Key()
{
  return &type metadata for ServiceMessage.Key;
}

unsigned char *_s19PreviewsMessagingOS19CapabilitiesPayloadV3KeyOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x25A5C8494);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ServiceMessage.PayloadKey()
{
  return &type metadata for ServiceMessage.PayloadKey;
}

unint64_t sub_25A5C84D0()
{
  unint64_t result = qword_26A42AB48;
  if (!qword_26A42AB48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42AB48);
  }
  return result;
}

unint64_t sub_25A5C8528()
{
  unint64_t result = qword_26A42AB50;
  if (!qword_26A42AB50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42AB50);
  }
  return result;
}

unint64_t sub_25A5C8580()
{
  unint64_t result = qword_26A42AB58;
  if (!qword_26A42AB58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42AB58);
  }
  return result;
}

unint64_t sub_25A5C85D8()
{
  unint64_t result = qword_26A42AB60;
  if (!qword_26A42AB60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42AB60);
  }
  return result;
}

unint64_t sub_25A5C8630()
{
  unint64_t result = qword_26A42AB68;
  if (!qword_26A42AB68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42AB68);
  }
  return result;
}

unint64_t sub_25A5C8688()
{
  unint64_t result = qword_26A42AB70;
  if (!qword_26A42AB70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42AB70);
  }
  return result;
}

unint64_t sub_25A5C86E0()
{
  unint64_t result = qword_26A42AB78;
  if (!qword_26A42AB78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42AB78);
  }
  return result;
}

unint64_t sub_25A5C8738()
{
  unint64_t result = qword_26A42AB80;
  if (!qword_26A42AB80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42AB80);
  }
  return result;
}

unint64_t sub_25A5C8790()
{
  unint64_t result = qword_26A42AB88;
  if (!qword_26A42AB88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42AB88);
  }
  return result;
}

unint64_t sub_25A5C87E8()
{
  unint64_t result = qword_26A42AB90;
  if (!qword_26A42AB90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42AB90);
  }
  return result;
}

unint64_t sub_25A5C8840()
{
  unint64_t result = qword_26A42AB98;
  if (!qword_26A42AB98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42AB98);
  }
  return result;
}

unint64_t sub_25A5C8898()
{
  unint64_t result = qword_26A42ABA0;
  if (!qword_26A42ABA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42ABA0);
  }
  return result;
}

unint64_t sub_25A5C88F0()
{
  unint64_t result = qword_26A42ABA8;
  if (!qword_26A42ABA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42ABA8);
  }
  return result;
}

unint64_t sub_25A5C8948()
{
  unint64_t result = qword_26A42ABB0;
  if (!qword_26A42ABB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42ABB0);
  }
  return result;
}

unint64_t sub_25A5C89A0()
{
  unint64_t result = qword_26A42ABB8;
  if (!qword_26A42ABB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42ABB8);
  }
  return result;
}

unint64_t sub_25A5C89F8()
{
  unint64_t result = qword_26A42ABC0;
  if (!qword_26A42ABC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42ABC0);
  }
  return result;
}

unint64_t sub_25A5C8A50()
{
  unint64_t result = qword_26A42ABC8;
  if (!qword_26A42ABC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42ABC8);
  }
  return result;
}

unint64_t sub_25A5C8AA8()
{
  unint64_t result = qword_26A42ABD0;
  if (!qword_26A42ABD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42ABD0);
  }
  return result;
}

unint64_t sub_25A5C8B00()
{
  unint64_t result = qword_26A42ABD8;
  if (!qword_26A42ABD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42ABD8);
  }
  return result;
}

uint64_t sub_25A5C8B54()
{
  return sub_25A55DAA4(&qword_26A42ABE0, &qword_26A42ABE8);
}

unint64_t sub_25A5C8B94()
{
  unint64_t result = qword_26A42ABF0;
  if (!qword_26A42ABF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42ABF0);
  }
  return result;
}

unint64_t sub_25A5C8BEC()
{
  unint64_t result = qword_26A42ABF8;
  if (!qword_26A42ABF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42ABF8);
  }
  return result;
}

unint64_t sub_25A5C8C44()
{
  unint64_t result = qword_26A42AC00;
  if (!qword_26A42AC00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42AC00);
  }
  return result;
}

unint64_t sub_25A5C8C98()
{
  unint64_t result = qword_26A42AC08;
  if (!qword_26A42AC08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42AC08);
  }
  return result;
}

unint64_t sub_25A5C8CEC()
{
  unint64_t result = qword_26A42AC10;
  if (!qword_26A42AC10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42AC10);
  }
  return result;
}

uint64_t sub_25A5C8D40()
{
  unint64_t v0 = sub_25A6232B0();
  swift_bridgeObjectRelease();
  if (v0 >= 6) {
    return 6;
  }
  else {
    return v0;
  }
}

_OWORD *sub_25A5C8D8C(uint64_t a1, BOOL *a2)
{
  unint64_t result = sub_25A5C2A2C(*(long long **)(v2 + 16), &v5);
  *a2 = *((void *)&v5 + 1) != 0;
  return result;
}

unint64_t sub_25A5C8DD0()
{
  unint64_t result = qword_26A42AC18;
  if (!qword_26A42AC18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42AC18);
  }
  return result;
}

unint64_t sub_25A5C8E24()
{
  unint64_t result = qword_26A42AC20;
  if (!qword_26A42AC20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42AC20);
  }
  return result;
}

unint64_t sub_25A5C8E78()
{
  unint64_t result = qword_26A42AC28;
  if (!qword_26A42AC28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42AC28);
  }
  return result;
}

uint64_t sub_25A5C8ECC()
{
  return sub_25A5BA228();
}

unint64_t sub_25A5C8F84()
{
  unint64_t result = qword_26A42AC30;
  if (!qword_26A42AC30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42AC30);
  }
  return result;
}

unint64_t sub_25A5C8FD8()
{
  unint64_t result = qword_26A42AC40;
  if (!qword_26A42AC40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42AC40);
  }
  return result;
}

unint64_t sub_25A5C902C()
{
  unint64_t result = qword_26A42AC48;
  if (!qword_26A42AC48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42AC48);
  }
  return result;
}

unint64_t sub_25A5C9080()
{
  unint64_t result = qword_26A42AC50;
  if (!qword_26A42AC50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42AC50);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for OSCapabilities.Key(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 9 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 9) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF7) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF6)
  {
    unsigned int v6 = ((a2 - 247) >> 8) + 1;
    *unint64_t result = a2 + 9;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25A5C91A0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 9;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for OSCapabilities.Key()
{
  return &type metadata for OSCapabilities.Key;
}

unsigned char *_s19PreviewsMessagingOS25PreviewAgentBootstrapModeOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25A5C92A4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AgentDescriptor.Bundle.Discriminant()
{
  return &type metadata for AgentDescriptor.Bundle.Discriminant;
}

unint64_t sub_25A5C92E0()
{
  unint64_t result = qword_26A42AC60;
  if (!qword_26A42AC60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42AC60);
  }
  return result;
}

unint64_t sub_25A5C9338()
{
  unint64_t result = qword_26A42AC68;
  if (!qword_26A42AC68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42AC68);
  }
  return result;
}

unint64_t sub_25A5C938C()
{
  unint64_t result = qword_26A42AC70;
  if (!qword_26A42AC70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42AC70);
  }
  return result;
}

uint64_t PropertyList.lazy.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_25A6227C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16))(a1, v1, v3);
  type metadata accessor for LazyPropertyList();

  return swift_storeEnumTagMultiPayload();
}

uint64_t type metadata accessor for LazyPropertyList()
{
  uint64_t result = qword_26A42AC78;
  if (!qword_26A42AC78) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t LazyPropertyList.propertyList.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v20 = *MEMORY[0x263EF8340];
  uint64_t v4 = type metadata accessor for LazyPropertyList();
  MEMORY[0x270FA5388](v4);
  unsigned int v6 = (uint64_t *)((char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_25A5C9734(v2, (uint64_t)v6);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = *v6;
    unint64_t v7 = v6[1];
    uint64_t v9 = self;
    uint64_t v10 = (void *)sub_25A6222C0();
    *(void *)&v18[0] = 0;
    id v11 = objc_msgSend(v9, sel_propertyListWithData_options_format_error_, v10, 0, 0, v18);

    id v12 = *(id *)&v18[0];
    if (v11)
    {
      sub_25A6231C0();
      swift_unknownObjectRelease();
      sub_25A56D81C((uint64_t)v19, (uint64_t)v18);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A42A3C0);
      if (swift_dynamicCast())
      {
        sub_25A622740();
      }
      else
      {
        sub_25A56D81C((uint64_t)v19, (uint64_t)v18);
        sub_25A59C18C();
        swift_allocError();
        sub_25A56D80C(v18, v16);
        swift_willThrow();
      }
      sub_25A59C134(v8, v7);
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
    }
    else
    {
      uint64_t v15 = v12;
      sub_25A622240();

      swift_willThrow();
      return sub_25A59C134(v8, v7);
    }
  }
  else
  {
    uint64_t v13 = sub_25A6227C0();
    return (*(uint64_t (**)(uint64_t, uint64_t *, uint64_t))(*(void *)(v13 - 8) + 32))(a1, v6, v13);
  }
}

uint64_t sub_25A5C9734(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for LazyPropertyList();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void *LazyPropertyList.data.getter()
{
  uint64_t v1 = v0;
  v15[1] = *(id *)MEMORY[0x263EF8340];
  uint64_t v2 = sub_25A6227C0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for LazyPropertyList();
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25A5C9734(v1, (uint64_t)v8);
  if (swift_getEnumCaseMultiPayload() == 1) {
    return *(void **)v8;
  }
  (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
  uint64_t v10 = self;
  sub_25A622750();
  id v11 = (void *)sub_25A622CF0();
  swift_bridgeObjectRelease();
  v15[0] = 0;
  id v12 = objc_msgSend(v10, sel_dataWithPropertyList_format_options_error_, v11, 200, 0, v15);

  id v13 = v15[0];
  if (v12)
  {
    uint64_t v9 = (void *)sub_25A6222D0();
  }
  else
  {
    uint64_t v9 = v13;
    sub_25A622240();

    swift_willThrow();
  }
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v9;
}

uint64_t sub_25A5C9A04()
{
  return 0;
}

uint64_t sub_25A5C9A94(uint64_t a1)
{
  unint64_t v2 = sub_25A5CA0F0();

  return MEMORY[0x270F55A28](a1, v2);
}

uint64_t sub_25A5C9AD0(uint64_t a1)
{
  unint64_t v2 = sub_25A5CA0F0();

  return MEMORY[0x270F55A08](a1, v2);
}

uint64_t *initializeBufferWithCopyOfBuffer for LazyPropertyList(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = *a2;
      unint64_t v6 = a2[1];
      sub_25A59FB7C(v7, v6);
      *a1 = v7;
      a1[1] = v6;
    }
    else
    {
      uint64_t v9 = sub_25A6227C0();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for LazyPropertyList(uint64_t *a1)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v2 = *a1;
    unint64_t v3 = a1[1];
    return sub_25A59C134(v2, v3);
  }
  else
  {
    uint64_t v5 = sub_25A6227C0();
    unint64_t v6 = *(uint64_t (**)(uint64_t *, uint64_t))(*(void *)(v5 - 8) + 8);
    return v6(a1, v5);
  }
}

uint64_t *initializeWithCopy for LazyPropertyList(uint64_t *a1, uint64_t *a2)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = *a2;
    unint64_t v4 = a2[1];
    sub_25A59FB7C(v5, v4);
    *a1 = v5;
    a1[1] = v4;
  }
  else
  {
    uint64_t v6 = sub_25A6227C0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t *assignWithCopy for LazyPropertyList(uint64_t *a1, uint64_t *a2)
{
  if (a1 != a2)
  {
    sub_25A595208((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v5 = *a2;
      unint64_t v4 = a2[1];
      sub_25A59FB7C(v5, v4);
      *a1 = v5;
      a1[1] = v4;
    }
    else
    {
      uint64_t v6 = sub_25A6227C0();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *initializeWithTake for LazyPropertyList(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v6 = sub_25A6227C0();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *assignWithTake for LazyPropertyList(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_25A595208((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v6 = sub_25A6227C0();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_25A5C9F9C()
{
  uint64_t result = sub_25A6227C0();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for LazyPropertyList.InvalidDeserialization()
{
  return &type metadata for LazyPropertyList.InvalidDeserialization;
}

unint64_t sub_25A5CA044()
{
  unint64_t result = qword_26A42AC88;
  if (!qword_26A42AC88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42AC88);
  }
  return result;
}

unint64_t sub_25A5CA09C()
{
  unint64_t result = qword_26A42AC90;
  if (!qword_26A42AC90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42AC90);
  }
  return result;
}

unint64_t sub_25A5CA0F0()
{
  unint64_t result = qword_26A42AC98;
  if (!qword_26A42AC98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42AC98);
  }
  return result;
}

uint64_t JITLoadCommand.hash(into:)()
{
  sub_25A623460();
  swift_bridgeObjectRetain();
  sub_25A622DF0();
  swift_bridgeObjectRelease();
  sub_25A622DF0();

  return swift_bridgeObjectRelease();
}

BOOL static JITLoadCommand.== infix(_:_:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  return sub_25A5CB264(a1, a2, a3 & 1, a4, a5, a6 & 1);
}

uint64_t static JITLoadCommand.LoadDylib.== infix(_:_:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  return sub_25A5CB19C(a1, a2, a3 & 1, a4, a5, a6 & 1);
}

uint64_t JITLoadCommand.hashValue.getter()
{
  return sub_25A6234A0();
}

uint64_t sub_25A5CA2B4()
{
  return JITLoadCommand.hashValue.getter();
}

uint64_t sub_25A5CA2C0()
{
  return JITLoadCommand.hash(into:)();
}

uint64_t sub_25A5CA2CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_25A5CADFC(a1, a2, a3, (void (*)(unsigned char *, uint64_t, uint64_t, uint64_t))JITLoadCommand.hash(into:));
}

uint64_t sub_25A5CA2E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_25A5CB0C0(a1, a2, a3, a4, (uint64_t (*)(void, void, void, void, void, void))sub_25A5CB264);
}

uint64_t sub_25A5CA308@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_25A6232B0();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_25A5CA35C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_25A5CB180();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_25A5CA384(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_25A5CBB34();
  uint64_t v5 = MEMORY[0x263F60648];

  return MEMORY[0x270F55C68](a1, a2, v4, v5);
}

uint64_t sub_25A5CA3E0()
{
  return sub_25A622B20();
}

uint64_t sub_25A5CA448(char a1)
{
  if (a1) {
    return 0x646E616D6D6F63;
  }
  else {
    return 0x696D697263736964;
  }
}

uint64_t sub_25A5CA488(char *a1, char *a2)
{
  return sub_25A5ECB0C(*a1, *a2);
}

uint64_t sub_25A5CA494()
{
  return sub_25A618F10();
}

uint64_t sub_25A5CA49C()
{
  return sub_25A54C26C();
}

uint64_t sub_25A5CA4A4()
{
  return sub_25A61B78C();
}

uint64_t sub_25A5CA4AC@<X0>(char *a1@<X8>)
{
  return sub_25A56B748(a1);
}

uint64_t sub_25A5CA4B8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_25A5CA448(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_25A5CA4E4()
{
  return sub_25A5CA448(*v0);
}

uint64_t JITLoadCommand.propertyListValue.getter(uint64_t a1, uint64_t a2, char a3)
{
  char v5 = a3 & 1;
  unint64_t v6 = sub_25A5CB350();
  sub_25A5CB3A4();
  sub_25A6227A0();
  uint64_t v11 = a1;
  uint64_t v12 = a2;
  char v13 = v5;
  uint64_t v9 = &type metadata for JITLoadCommand.Key;
  unint64_t v10 = v6;
  v8[0] = 1;
  sub_25A5CB3F8();
  sub_25A622700();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
}

uint64_t JITLoadCommand.init(propertyListValue:)(uint64_t a1)
{
  return sub_25A5CAC5C(a1, (uint64_t (*)(void))sub_25A5CB518);
}

uint64_t sub_25A5CA5E8()
{
  uint64_t v1 = *v0;
  uint64_t v2 = v0[1];
  char v3 = *((unsigned char *)v0 + 16);
  unint64_t v4 = sub_25A5CB350();
  sub_25A5CB3A4();
  sub_25A6227A0();
  uint64_t v9 = v1;
  uint64_t v10 = v2;
  char v11 = v3;
  uint64_t v7 = &type metadata for JITLoadCommand.Key;
  unint64_t v8 = v4;
  v6[0] = 1;
  sub_25A5CB3F8();
  sub_25A622700();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
}

uint64_t sub_25A5CA6B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_25A5CB518(a1);
  if (!v2)
  {
    *(void *)a2 = result;
    *(void *)(a2 + 8) = v5;
    *(unsigned char *)(a2 + 16) = v6 & 1;
  }
  return result;
}

PreviewsMessagingOS::JITLoadCommand::LoadDylib::Linkage_optional __swiftcall JITLoadCommand.LoadDylib.Linkage.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v1 = sub_25A6232B0();
  swift_bridgeObjectRelease();
  if (v1 == 1) {
    v2.value = PreviewsMessagingOS_JITLoadCommand_LoadDylib_Linkage_weak;
  }
  else {
    v2.value = PreviewsMessagingOS_JITLoadCommand_LoadDylib_Linkage_unknownDefault;
  }
  if (v1) {
    return v2;
  }
  else {
    return 0;
  }
}

uint64_t JITLoadCommand.LoadDylib.Linkage.rawValue.getter(char a1)
{
  if (a1) {
    return 1801545079;
  }
  else {
    return 0x676E6F727473;
  }
}

uint64_t sub_25A5CA768(char *a1, char *a2)
{
  char v2 = *a2;
  uint64_t v3 = JITLoadCommand.LoadDylib.Linkage.rawValue.getter(*a1);
  uint64_t v5 = v4;
  if (v3 == JITLoadCommand.LoadDylib.Linkage.rawValue.getter(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_25A6233B0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_25A5CA7F4()
{
  char v1 = *v0;
  sub_25A623450();
  JITLoadCommand.LoadDylib.Linkage.rawValue.getter(v1);
  sub_25A622DF0();
  swift_bridgeObjectRelease();
  return sub_25A6234A0();
}

uint64_t sub_25A5CA858()
{
  JITLoadCommand.LoadDylib.Linkage.rawValue.getter(*v0);
  sub_25A622DF0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25A5CA8AC()
{
  char v1 = *v0;
  sub_25A623450();
  JITLoadCommand.LoadDylib.Linkage.rawValue.getter(v1);
  sub_25A622DF0();
  swift_bridgeObjectRelease();
  return sub_25A6234A0();
}

uint64_t sub_25A5CA90C@<X0>(char *a1@<X8>)
{
  return sub_25A56B748(a1);
}

uint64_t sub_25A5CA918@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = JITLoadCommand.LoadDylib.Linkage.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_25A5CA944(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_25A5CBB88();
  uint64_t v5 = MEMORY[0x263F60648];

  return MEMORY[0x270F55C68](a1, a2, v4, v5);
}

uint64_t sub_25A5CA9A0()
{
  return sub_25A622B20();
}

uint64_t JITLoadCommand.LoadDylib.path.getter(uint64_t a1)
{
  return a1;
}

uint64_t JITLoadCommand.LoadDylib.path.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  void *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*JITLoadCommand.LoadDylib.path.modify())()
{
  return nullsub_1;
}

uint64_t JITLoadCommand.LoadDylib.linkage.getter(uint64_t a1, uint64_t a2, char a3)
{
  return a3 & 1;
}

uint64_t JITLoadCommand.LoadDylib.linkage.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 16) = result & 1;
  return result;
}

uint64_t (*JITLoadCommand.LoadDylib.linkage.modify())()
{
  return nullsub_1;
}

PreviewsMessagingOS::JITLoadCommand::LoadDylib __swiftcall JITLoadCommand.LoadDylib.init(path:linkage:)(Swift::String path, PreviewsMessagingOS::JITLoadCommand::LoadDylib::Linkage linkage)
{
  PreviewsMessagingOS::JITLoadCommand::LoadDylib::Linkage v2 = linkage & 1;
  result.path = path;
  result.linkage = v2;
  return result;
}

uint64_t sub_25A5CAAD0(char a1)
{
  if (a1) {
    return 0x6567616B6E696CLL;
  }
  else {
    return 1752457584;
  }
}

uint64_t sub_25A5CAB00(char *a1, char *a2)
{
  return sub_25A5ECA70(*a1, *a2);
}

uint64_t sub_25A5CAB0C()
{
  return sub_25A618F9C();
}

uint64_t sub_25A5CAB14()
{
  return sub_25A54C208();
}

uint64_t sub_25A5CAB1C()
{
  return sub_25A61B814();
}

uint64_t sub_25A5CAB24@<X0>(char *a1@<X8>)
{
  return sub_25A56B748(a1);
}

uint64_t sub_25A5CAB30@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_25A5CAAD0(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_25A5CAB5C()
{
  return sub_25A5CAAD0(*v0);
}

uint64_t JITLoadCommand.LoadDylib.propertyListValue.getter()
{
  return sub_25A622780();
}

uint64_t sub_25A5CABA8()
{
  return sub_25A622A80();
}

uint64_t JITLoadCommand.LoadDylib.init(propertyListValue:)(uint64_t a1)
{
  return sub_25A5CAC5C(a1, (uint64_t (*)(void))sub_25A5CB664);
}

uint64_t sub_25A5CAC5C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t result = a2();
  if (v2) {
    return v4;
  }
  return result;
}

uint64_t JITLoadCommand.LoadDylib.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_25A622DF0();
  swift_bridgeObjectRelease();
  sub_25A622DF0();

  return swift_bridgeObjectRelease();
}

uint64_t JITLoadCommand.LoadDylib.hashValue.getter()
{
  return sub_25A6234A0();
}

uint64_t sub_25A5CADCC()
{
  return JITLoadCommand.LoadDylib.hashValue.getter();
}

uint64_t sub_25A5CADD8()
{
  return JITLoadCommand.LoadDylib.hash(into:)();
}

uint64_t sub_25A5CADE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_25A5CADFC(a1, a2, a3, (void (*)(unsigned char *, uint64_t, uint64_t, uint64_t))JITLoadCommand.LoadDylib.hash(into:));
}

uint64_t sub_25A5CADFC(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(unsigned char *, uint64_t, uint64_t, uint64_t))
{
  uint64_t v6 = *v4;
  uint64_t v7 = v4[1];
  uint64_t v8 = *((unsigned __int8 *)v4 + 16);
  sub_25A623450();
  a4(v10, v6, v7, v8);
  return sub_25A6234A0();
}

uint64_t sub_25A5CAE5C()
{
  return sub_25A622780();
}

uint64_t sub_25A5CAEA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_25A5CB664(a1);
  if (!v2)
  {
    *(void *)a2 = result;
    *(void *)(a2 + 8) = v5;
    *(unsigned char *)(a2 + 16) = v6 & 1;
  }
  return result;
}

uint64_t sub_25A5CAED8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_25A5CB0C0(a1, a2, a3, a4, (uint64_t (*)(void, void, void, void, void, void))sub_25A5CB19C);
}

Swift::Void __swiftcall JITLoadCommand.describe(with:)(Swift::OpaquePointer *with)
{
}

void sub_25A5CAFD0(Swift::OpaquePointer *with)
{
}

uint64_t sub_25A5CAFDC()
{
  with._rawValue = (void *)MEMORY[0x263F8EE78];
  JITLoadCommand.describe(with:)(&with);
  uint64_t v0 = sub_25A622EB0();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t static JITLoadCommand.< infix(_:_:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  return sub_25A5CB44C(a1, a2, a3 & 1, a4, a5, a6 & 1);
}

uint64_t static JITLoadCommand.LoadDylib.< infix(_:_:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  return sub_25A5CB44C(a1, a2, a3 & 1, a4, a5, a6 & 1);
}

uint64_t sub_25A5CB060(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_25A5CB0C0(a1, a2, a3, a4, (uint64_t (*)(void, void, void, void, void, void))sub_25A5CB44C);
}

BOOL sub_25A5CB078(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_25A5CB0E4(a1, a2, a3, a4, (uint64_t (*)(void, void, void, void, void, void))sub_25A5CB44C);
}

BOOL sub_25A5CB090(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_25A5CB120(a1, a2, a3, a4, (uint64_t (*)(void, void, void, void, void, void))sub_25A5CB44C);
}

uint64_t sub_25A5CB0A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_25A5CB160(a1, a2, a3, a4, (uint64_t (*)(void, void, void, void, void, void))sub_25A5CB44C);
}

uint64_t sub_25A5CB0C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void, void, void, void, void, void))
{
  return a5(*(void *)a1, *(void *)(a1 + 8), *(unsigned __int8 *)(a1 + 16), *(void *)a2, *(void *)(a2 + 8), *(unsigned __int8 *)(a2 + 16));
}

BOOL sub_25A5CB0E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void, void, void, void, void, void))
{
  return (a5(*(void *)a2, *(void *)(a2 + 8), *(unsigned __int8 *)(a2 + 16), *(void *)a1, *(void *)(a1 + 8), *(unsigned __int8 *)(a1 + 16)) & 1) == 0;
}

BOOL sub_25A5CB120(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void, void, void, void, void, void))
{
  return (a5(*(void *)a1, *(void *)(a1 + 8), *(unsigned __int8 *)(a1 + 16), *(void *)a2, *(void *)(a2 + 8), *(unsigned __int8 *)(a2 + 16)) & 1) == 0;
}

uint64_t sub_25A5CB160(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void, void, void, void, void, void))
{
  return a5(*(void *)a2, *(void *)(a2 + 8), *(unsigned __int8 *)(a2 + 16), *(void *)a1, *(void *)(a1 + 8), *(unsigned __int8 *)(a1 + 16));
}

uint64_t sub_25A5CB180()
{
  return 0x696C794464616F6CLL;
}

uint64_t sub_25A5CB19C(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  if (a1 == a4 && a2 == a5 || (char v8 = 0, (sub_25A6233B0() & 1) != 0))
  {
    if (a3) {
      uint64_t v9 = 1801545079;
    }
    else {
      uint64_t v9 = 0x676E6F727473;
    }
    if (a3) {
      unint64_t v10 = 0xE400000000000000;
    }
    else {
      unint64_t v10 = 0xE600000000000000;
    }
    if (a6) {
      uint64_t v11 = 1801545079;
    }
    else {
      uint64_t v11 = 0x676E6F727473;
    }
    if (a6) {
      unint64_t v12 = 0xE400000000000000;
    }
    else {
      unint64_t v12 = 0xE600000000000000;
    }
    if (v9 == v11 && v10 == v12) {
      char v8 = 1;
    }
    else {
      char v8 = sub_25A6233B0();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v8 & 1;
}

BOOL sub_25A5CB264(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  if ((a1 != a4 || a2 != a5) && (sub_25A6233B0() & 1) == 0) {
    return 0;
  }
  if (a3) {
    uint64_t v8 = 1801545079;
  }
  else {
    uint64_t v8 = 0x676E6F727473;
  }
  if (a3) {
    unint64_t v9 = 0xE400000000000000;
  }
  else {
    unint64_t v9 = 0xE600000000000000;
  }
  if (a6) {
    uint64_t v10 = 1801545079;
  }
  else {
    uint64_t v10 = 0x676E6F727473;
  }
  if (a6) {
    unint64_t v11 = 0xE400000000000000;
  }
  else {
    unint64_t v11 = 0xE600000000000000;
  }
  if (v8 == v10 && v9 == v11)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return 1;
  }
  char v13 = sub_25A6233B0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (v13 & 1) != 0;
}

unsigned char *sub_25A5CB344(unsigned char *result, unsigned char *a2)
{
  *uint64_t result = 0;
  *a2 = 0;
  return result;
}

unint64_t sub_25A5CB350()
{
  unint64_t result = qword_26A42ACA0;
  if (!qword_26A42ACA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42ACA0);
  }
  return result;
}

unint64_t sub_25A5CB3A4()
{
  unint64_t result = qword_26A42ACA8;
  if (!qword_26A42ACA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42ACA8);
  }
  return result;
}

unint64_t sub_25A5CB3F8()
{
  unint64_t result = qword_26A42ACB0;
  if (!qword_26A42ACB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42ACB0);
  }
  return result;
}

uint64_t sub_25A5CB44C(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  if (a1 == a4 && a2 == a5 || (sub_25A6233B0() & 1) == 0)
  {
    char v12 = 0;
  }
  else
  {
    if (a3) {
      uint64_t v8 = 1801545079;
    }
    else {
      uint64_t v8 = 0x676E6F727473;
    }
    if (a3) {
      unint64_t v9 = 0xE400000000000000;
    }
    else {
      unint64_t v9 = 0xE600000000000000;
    }
    if (a6) {
      uint64_t v10 = 1801545079;
    }
    else {
      uint64_t v10 = 0x676E6F727473;
    }
    if (a6) {
      unint64_t v11 = 0xE400000000000000;
    }
    else {
      unint64_t v11 = 0xE600000000000000;
    }
    if (v8 == v10 && v9 == v11) {
      char v12 = 0;
    }
    else {
      char v12 = sub_25A6233B0();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v12 & 1;
}

uint64_t sub_25A5CB518(uint64_t a1)
{
  unint64_t v9 = &type metadata for JITLoadCommand.Key;
  unint64_t v3 = sub_25A5CB350();
  unint64_t v10 = v3;
  v8[0] = 0;
  sub_25A5CB3A4();
  sub_25A622710();
  if (v1)
  {
    uint64_t v4 = sub_25A6227C0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
    unint64_t v9 = &type metadata for JITLoadCommand.Key;
    unint64_t v10 = v3;
    v8[0] = 1;
    sub_25A5CB3F8();
    sub_25A622710();
    uint64_t v5 = sub_25A6227C0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
    return v7;
  }
}

uint64_t sub_25A5CB658()
{
  return sub_25A5CABA8();
}

uint64_t sub_25A5CB664(uint64_t a1)
{
  unint64_t v9 = &type metadata for JITLoadCommand.LoadDylib.Key;
  unint64_t v4 = sub_25A5CBBDC();
  unint64_t v10 = v4;
  v8[0] = 0;
  sub_25A622710();
  if (v1)
  {
    uint64_t v5 = sub_25A6227C0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
    uint64_t v2 = v11;
    unint64_t v9 = &type metadata for JITLoadCommand.LoadDylib.Key;
    unint64_t v10 = v4;
    v8[0] = 1;
    sub_25A5CBC30();
    sub_25A622760();
    uint64_t v7 = sub_25A6227C0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(a1, v7);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
  return v2;
}

unint64_t sub_25A5CB800()
{
  unint64_t result = qword_26A42ACB8;
  if (!qword_26A42ACB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42ACB8);
  }
  return result;
}

unint64_t sub_25A5CB858()
{
  unint64_t result = qword_26A42ACC0;
  if (!qword_26A42ACC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42ACC0);
  }
  return result;
}

unint64_t sub_25A5CB8B0()
{
  unint64_t result = qword_26A42ACC8;
  if (!qword_26A42ACC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42ACC8);
  }
  return result;
}

unint64_t sub_25A5CB908()
{
  unint64_t result = qword_26A42ACD0;
  if (!qword_26A42ACD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42ACD0);
  }
  return result;
}

ValueMetadata *type metadata accessor for JITLoadCommand()
{
  return &type metadata for JITLoadCommand;
}

ValueMetadata *type metadata accessor for JITLoadCommand.LoadDylib()
{
  return &type metadata for JITLoadCommand.LoadDylib;
}

ValueMetadata *type metadata accessor for JITLoadCommand.LoadDylib.Linkage()
{
  return &type metadata for JITLoadCommand.LoadDylib.Linkage;
}

unsigned char *storeEnumTagSinglePayload for JITLoadCommand.Discriminant(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x25A5CBA3CLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for JITLoadCommand.Discriminant()
{
  return &type metadata for JITLoadCommand.Discriminant;
}

ValueMetadata *type metadata accessor for JITLoadCommand.Key()
{
  return &type metadata for JITLoadCommand.Key;
}

unint64_t sub_25A5CBA88()
{
  unint64_t result = qword_26A42ACD8;
  if (!qword_26A42ACD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42ACD8);
  }
  return result;
}

unint64_t sub_25A5CBAE0()
{
  unint64_t result = qword_26A42ACE0;
  if (!qword_26A42ACE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42ACE0);
  }
  return result;
}

unint64_t sub_25A5CBB34()
{
  unint64_t result = qword_26A42ACE8;
  if (!qword_26A42ACE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42ACE8);
  }
  return result;
}

unint64_t sub_25A5CBB88()
{
  unint64_t result = qword_26A42ACF0;
  if (!qword_26A42ACF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42ACF0);
  }
  return result;
}

unint64_t sub_25A5CBBDC()
{
  unint64_t result = qword_26A42ACF8;
  if (!qword_26A42ACF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42ACF8);
  }
  return result;
}

unint64_t sub_25A5CBC30()
{
  unint64_t result = qword_26A42AD00;
  if (!qword_26A42AD00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42AD00);
  }
  return result;
}

unsigned char *_s19PreviewsMessagingOS14JITLoadCommandO9LoadDylibV7LinkageOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25A5CBD50);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for JITLoadCommand.LoadDylib.Key()
{
  return &type metadata for JITLoadCommand.LoadDylib.Key;
}

unint64_t sub_25A5CBD8C()
{
  unint64_t result = qword_26A42AD08;
  if (!qword_26A42AD08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42AD08);
  }
  return result;
}

uint64_t sub_25A5CBDE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_25A5CDA0C(a1);
  if (v6) {
    goto LABEL_8;
  }
  if (*(_DWORD *)(a1 + 36) != v5)
  {
    __break(1u);
LABEL_8:
    __break(1u);
    return result;
  }
  if (result == 1 << *(unsigned char *)(a1 + 32))
  {
    *(_OWORD *)(a2 + 16) = 0u;
    *(_OWORD *)(a2 + 32) = 0u;
    *(_OWORD *)a2 = 0u;
  }
  else
  {
    v8[0] = sub_25A5CDA94((uint64_t)v9, result, v5, 0, a1);
    v8[1] = v7;
    *(void *)a2 = v8[0];
    *(void *)(a2 + 8) = v7;
    sub_25A56D81C((uint64_t)v9, a2 + 16);
    swift_bridgeObjectRetain();
    return sub_25A570C60((uint64_t)v8, &qword_26A42AD60);
  }
  return result;
}

uint64_t PreviewIncrementalUpdate.key.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PreviewIncrementalUpdate.value.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_25A5CBEF0(v1 + 16, a1);
}

uint64_t sub_25A5CBEF0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(_OWORD *)(a2 + 32) = *(_OWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

_OWORD *PreviewIncrementalUpdate.init(key:value:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, long long *a3@<X2>, uint64_t a4@<X8>)
{
  *(void *)a4 = a1;
  *(void *)(a4 + 8) = a2;
  return sub_25A5CBF64(a3, (_OWORD *)(a4 + 16));
}

_OWORD *sub_25A5CBF64(long long *a1, _OWORD *a2)
{
  long long v2 = *a1;
  long long v3 = a1[2];
  a2[1] = a1[1];
  a2[2] = v3;
  *a2 = v2;
  return a2;
}

uint64_t PreviewIncrementalUpdate.propertyListValue.getter()
{
  return sub_25A622790();
}

uint64_t sub_25A5CBFC8(void *a1, uint64_t a2, void *a3)
{
  uint64_t v4 = a3[1];
  *a1 = *a3;
  a1[1] = v4;
  long long v9 = *(_OWORD *)(a3 + 5);
  uint64_t v5 = a3[5];
  char v6 = __swift_project_boxed_opaque_existential_1(a3 + 2, v5);
  *(_OWORD *)(a2 + 24) = v9;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)a2);
  (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v5 - 8) + 16))(boxed_opaque_existential_1, v6, v5);

  return swift_bridgeObjectRetain();
}

uint64_t sub_25A5CC070(void *a1, uint64_t a2)
{
  return sub_25A5CBFC8(a1, a2, *(void **)(v2 + 16));
}

_OWORD *PreviewIncrementalUpdate.init(propertyListValue:)@<X0>(uint64_t a1@<X0>, long long *a2@<X8>)
{
  uint64_t v4 = sub_25A622750();
  sub_25A5CBDE8(v4, (uint64_t)&v21);
  swift_bridgeObjectRelease();
  if (*((void *)&v21 + 1))
  {
    long long v23 = v21;
    sub_25A56D80C(v22, v24);
    long long v5 = v23;
    sub_25A56D80C(v24, v25);
    sub_25A56D81C((uint64_t)v25, (uint64_t)&v20);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A42AD28);
    if (swift_dynamicCast())
    {
      uint64_t v6 = sub_25A6227C0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
      sub_25A5CBF64(&v21, &v23);
      uint64_t result = sub_25A5CBF64(&v23, a2 + 1);
      *a2 = v5;
    }
    else
    {
      memset(v22, 0, sizeof(v22));
      long long v21 = 0u;
      swift_bridgeObjectRelease();
      sub_25A570C60((uint64_t)&v21, &qword_26A42AD30);
      type metadata accessor for PreviewIncrementalUpdate.UnarchiveError();
      sub_25A5CD964(&qword_26A42AD18);
      swift_allocError();
      uint64_t v13 = v12;
      uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A42AD20);
      uint64_t v15 = v13 + *(int *)(v14 + 48);
      uint64_t v16 = (uint64_t *)(v13 + *(int *)(v14 + 64));
      uint64_t v17 = sub_25A6227C0();
      uint64_t v18 = *(void *)(v17 - 8);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16))(v13, a1, v17);
      sub_25A56D81C((uint64_t)v25, v15);
      uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A42AD38);
      v16[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_26A42AD40);
      *uint64_t v16 = v19;
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v13, 0, 1, v14);
      swift_willThrow();
      (*(void (**)(uint64_t, uint64_t))(v18 + 8))(a1, v17);
      return (_OWORD *)__swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
    }
  }
  else
  {
    sub_25A570C60((uint64_t)&v21, &qword_26A42AD10);
    type metadata accessor for PreviewIncrementalUpdate.UnarchiveError();
    sub_25A5CD964(&qword_26A42AD18);
    swift_allocError();
    uint64_t v9 = v8;
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A42AD20);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v9, 1, 1, v10);
    swift_willThrow();
    uint64_t v11 = sub_25A6227C0();
    return (_OWORD *)(*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(a1, v11);
  }
  return result;
}

uint64_t type metadata accessor for PreviewIncrementalUpdate.UnarchiveError()
{
  uint64_t result = qword_26A42AD48;
  if (!qword_26A42AD48) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t PreviewIncrementalUpdate.description.getter()
{
  return 0;
}

unint64_t sub_25A5CC4F4()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_25A6227C0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  long long v5 = (char *)v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for PreviewIncrementalUpdate.UnarchiveError();
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25A5CD9A8(v1, (uint64_t)v8);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A42AD20);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v8, 1, v9) == 1) {
    return 0xD00000000000003DLL;
  }
  uint64_t v11 = &v8[*(int *)(v9 + 48)];
  uint64_t v12 = &v8[*(int *)(v9 + 64)];
  (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
  sub_25A56D80C(v11, &v16);
  sub_25A56D80C(v12, v15);
  v14[0] = 0;
  v14[1] = 0xE000000000000000;
  sub_25A623210();
  sub_25A622E00();
  __swift_project_boxed_opaque_existential_1(&v16, v17);
  swift_getDynamicType();
  sub_25A623500();
  sub_25A622E00();
  swift_bridgeObjectRelease();
  sub_25A622E00();
  sub_25A623270();
  sub_25A622E00();
  sub_25A622750();
  sub_25A622D10();
  sub_25A622E00();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v10 = v14[0];
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v16);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v10;
}

uint64_t sub_25A5CC7EC()
{
  return sub_25A622790();
}

_OWORD *sub_25A5CC838@<X0>(uint64_t a1@<X0>, long long *a2@<X8>)
{
  return PreviewIncrementalUpdate.init(propertyListValue:)(a1, a2);
}

uint64_t destroy for PreviewIncrementalUpdate(uint64_t a1)
{
  return __swift_destroy_boxed_opaque_existential_1(a1 + 16);
}

uint64_t initializeWithCopy for PreviewIncrementalUpdate(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = a2 + 16;
  uint64_t v5 = *(void *)(a2 + 56);
  long long v6 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 40) = v6;
  *(void *)(a1 + 56) = v5;
  uint64_t v7 = v6;
  uint64_t v8 = **(void (***)(uint64_t, uint64_t, uint64_t))(v6 - 8);
  swift_bridgeObjectRetain();
  v8(a1 + 16, v4, v7);
  return a1;
}

void *assignWithCopy for PreviewIncrementalUpdate(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __swift_assign_boxed_opaque_existential_2(a1 + 2, a2 + 2);
  return a1;
}

uint64_t *__swift_assign_boxed_opaque_existential_2(uint64_t *result, uint64_t *a2)
{
  if (result != a2)
  {
    uint64_t v3 = result;
    uint64_t v4 = result[3];
    uint64_t v5 = a2[3];
    if (v4 == v5)
    {
      uint64_t v10 = *(void *)(v4 - 8);
      if ((*(unsigned char *)(v10 + 82) & 2) != 0)
      {
        uint64_t v12 = *a2;
        swift_retain();
        uint64_t result = (uint64_t *)swift_release();
        *uint64_t v3 = v12;
      }
      else
      {
        uint64_t v11 = *(uint64_t (**)(void))(v10 + 24);
        return (uint64_t *)v11();
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      result[5] = a2[5];
      uint64_t v6 = *(void *)(v4 - 8);
      uint64_t v7 = *(void *)(v5 - 8);
      uint64_t v8 = v7;
      int v9 = *(_DWORD *)(v7 + 80);
      if ((*(unsigned char *)(v6 + 82) & 2) != 0)
      {
        if ((v9 & 0x20000) != 0)
        {
          *uint64_t result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(unsigned char *, uint64_t *, uint64_t))(v6 + 32))(v13, result, v4);
        if ((v9 & 0x20000) != 0)
        {
          *uint64_t v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v13, v4);
      }
    }
  }
  return result;
}

uint64_t assignWithTake for PreviewIncrementalUpdate(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a1 + 16);
  long long v5 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v5;
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  return a1;
}

ValueMetadata *type metadata accessor for PreviewIncrementalUpdate()
{
  return &type metadata for PreviewIncrementalUpdate;
}

uint64_t *sub_25A5CCC04(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A42AD20);
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      uint64_t v10 = sub_25A6227C0();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
      uint64_t v11 = *(int *)(v7 + 48);
      uint64_t v12 = *(uint64_t *)((char *)a2 + v11 + 24);
      *(uint64_t *)((char *)a1 + v11 + 24) = v12;
      (**(void (***)(void))(v12 - 8))();
      uint64_t v13 = *(int *)(v7 + 64);
      uint64_t v14 = *(uint64_t *)((char *)a2 + v13 + 24);
      *(uint64_t *)((char *)a1 + v13 + 24) = v14;
      (**(void (***)(void))(v14 - 8))();
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t sub_25A5CCE10(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A42AD20);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(a1, 1, v2);
  if (!result)
  {
    uint64_t v4 = sub_25A6227C0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
    __swift_destroy_boxed_opaque_existential_1(a1 + *(int *)(v2 + 48));
    return __swift_destroy_boxed_opaque_existential_1(a1 + *(int *)(v2 + 64));
  }
  return result;
}

char *sub_25A5CCEC8(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A42AD20);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v8 = sub_25A6227C0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
    uint64_t v9 = *(int *)(v6 + 48);
    uint64_t v10 = *(void *)&a2[v9 + 24];
    *(void *)&a1[v9 + 24] = v10;
    (**(void (***)(void))(v10 - 8))();
    uint64_t v11 = *(int *)(v6 + 64);
    uint64_t v12 = *(void *)&a2[v11 + 24];
    *(void *)&a1[v11 + 24] = v12;
    (**(void (***)(void))(v12 - 8))();
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  return a1;
}

char *sub_25A5CD098(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A42AD20);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      uint64_t v17 = sub_25A6227C0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 24))(a1, a2, v17);
      __swift_assign_boxed_opaque_existential_0((uint64_t *)&a1[*(int *)(v6 + 48)], (uint64_t *)&a2[*(int *)(v6 + 48)]);
      __swift_assign_boxed_opaque_existential_0((uint64_t *)&a1[*(int *)(v6 + 64)], (uint64_t *)&a2[*(int *)(v6 + 64)]);
      return a1;
    }
    sub_25A570C60((uint64_t)a1, &qword_26A42AD20);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  uint64_t v11 = sub_25A6227C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
  uint64_t v12 = *(int *)(v6 + 48);
  uint64_t v13 = *(void *)&a2[v12 + 24];
  *(void *)&a1[v12 + 24] = v13;
  (**(void (***)(void))(v13 - 8))();
  uint64_t v14 = *(int *)(v6 + 64);
  uint64_t v15 = *(void *)&a2[v14 + 24];
  *(void *)&a1[v14 + 24] = v15;
  (**(void (***)(void))(v15 - 8))();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  return a1;
}

char *sub_25A5CD304(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A42AD20);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v8 = sub_25A6227C0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
    uint64_t v9 = *(int *)(v6 + 48);
    int v10 = &a1[v9];
    uint64_t v11 = &a2[v9];
    long long v12 = *((_OWORD *)v11 + 1);
    *(_OWORD *)int v10 = *(_OWORD *)v11;
    *((_OWORD *)v10 + 1) = v12;
    uint64_t v13 = *(int *)(v6 + 64);
    uint64_t v14 = &a1[v13];
    uint64_t v15 = &a2[v13];
    long long v16 = *((_OWORD *)v15 + 1);
    *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
    *((_OWORD *)v14 + 1) = v16;
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  return a1;
}

char *sub_25A5CD45C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A42AD20);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      uint64_t v21 = sub_25A6227C0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 40))(a1, a2, v21);
      uint64_t v22 = *(int *)(v6 + 48);
      long long v23 = &a1[v22];
      uint64_t v24 = &a2[v22];
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&a1[v22]);
      long long v25 = *((_OWORD *)v24 + 1);
      *(_OWORD *)long long v23 = *(_OWORD *)v24;
      *((_OWORD *)v23 + 1) = v25;
      uint64_t v26 = *(int *)(v6 + 64);
      long long v27 = &a1[v26];
      uint64_t v28 = &a2[v26];
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&a1[v26]);
      long long v29 = *((_OWORD *)v28 + 1);
      *(_OWORD *)long long v27 = *(_OWORD *)v28;
      *((_OWORD *)v27 + 1) = v29;
      return a1;
    }
    sub_25A570C60((uint64_t)a1, &qword_26A42AD20);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  uint64_t v11 = sub_25A6227C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(a1, a2, v11);
  uint64_t v12 = *(int *)(v6 + 48);
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  long long v15 = *((_OWORD *)v14 + 1);
  *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
  *((_OWORD *)v13 + 1) = v15;
  uint64_t v16 = *(int *)(v6 + 64);
  uint64_t v17 = &a1[v16];
  uint64_t v18 = &a2[v16];
  long long v19 = *((_OWORD *)v18 + 1);
  *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
  *((_OWORD *)v17 + 1) = v19;
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  return a1;
}

uint64_t sub_25A5CD668(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25A5CD67C);
}

uint64_t sub_25A5CD67C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A42AD20);
  unsigned int v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 2) {
    return v5 - 1;
  }
  else {
    return 0;
  }
}

uint64_t sub_25A5CD6EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25A5CD700);
}

uint64_t sub_25A5CD700(uint64_t a1, int a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = (a2 + 1);
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A42AD20);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);

  return v7(a1, v5, a3, v6);
}

uint64_t sub_25A5CD784(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A42AD20);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48);

  return v3(a1, 1, v2);
}

uint64_t sub_25A5CD7F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A42AD20);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, 1, v4);
}

uint64_t sub_25A5CD864()
{
  uint64_t result = sub_25A6227C0();
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout3();
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t sub_25A5CD8FC(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_25A5CD964(&qword_26A42AD58);
  uint64_t result = sub_25A5CD964(&qword_26A42AD18);
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_25A5CD964(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for PreviewIncrementalUpdate.UnarchiveError();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_25A5CD9A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PreviewIncrementalUpdate.UnarchiveError();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_25A5CDA0C(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2) {
    unint64_t v7 = 2;
  }
  unint64_t v8 = v7 - 2;
  int v9 = (unint64_t *)(a1 + 80);
  uint64_t v2 = 64;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

uint64_t sub_25A5CDA94(uint64_t result, uint64_t a2, int a3, uint64_t a4, uint64_t a5)
{
  if (a2 < 0 || 1 << *(unsigned char *)(a5 + 32) <= a2)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(void *)(a5 + 8 * ((unint64_t)a2 >> 6) + 64) >> a2) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a5 + 36) == a3)
  {
    uint64_t v5 = *(void *)(*(void *)(a5 + 48) + 16 * a2);
    sub_25A56D81C(*(void *)(a5 + 56) + 32 * a2, result);
    swift_bridgeObjectRetain();
    return v5;
  }
LABEL_8:
  __break(1u);
  return result;
}

unint64_t sub_25A5CDB24(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A42AD70);
  uint64_t v2 = sub_25A623290();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_25A5CE54C(v6, (uint64_t)&v15);
    uint64_t v7 = v15;
    uint64_t v8 = v16;
    unint64_t result = sub_25A56D114(v15, v16);
    if (v10) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v3[6] + 16 * result);
    *uint64_t v11 = v7;
    v11[1] = v8;
    unint64_t result = (unint64_t)sub_25A56D80C(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

BOOL static JITCapabilities.== infix(_:_:)(int a1, unsigned int a2)
{
  return ((a1 ^ a2 | ((a1 ^ a2) >> 8)) & 1) == 0;
}

PreviewsMessagingOS::JITCapabilities __swiftcall JITCapabilities.init(supportsJITLinking:supportsLoadCommands:)(Swift::Bool supportsJITLinking, Swift::Bool supportsLoadCommands)
{
  if (supportsLoadCommands) {
    __int16 v2 = 256;
  }
  else {
    __int16 v2 = 0;
  }
  return (PreviewsMessagingOS::JITCapabilities)(v2 & 0xFFFE | supportsJITLinking);
}

uint64_t static JITCapabilities.empty.getter()
{
  return 0;
}

uint64_t JITCapabilities.supportsJITLinking.getter(char a1)
{
  return a1 & 1;
}

uint64_t JITCapabilities.supportsJITLinking.setter(uint64_t result)
{
  unsigned char *v1 = result;
  return result;
}

uint64_t (*JITCapabilities.supportsJITLinking.modify())()
{
  return nullsub_1;
}

uint64_t JITCapabilities.supportsLoadCommands.getter(unsigned int a1)
{
  return (a1 >> 8) & 1;
}

uint64_t JITCapabilities.supportsLoadCommands.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 1) = result;
  return result;
}

uint64_t (*JITCapabilities.supportsLoadCommands.modify())()
{
  return nullsub_1;
}

uint64_t sub_25A5CDCE4(char *a1, char *a2)
{
  return sub_25A5EBF2C(*a1, *a2);
}

uint64_t sub_25A5CDCF0()
{
  return sub_25A619018();
}

uint64_t sub_25A5CDCF8()
{
  sub_25A622DF0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25A5CDD6C()
{
  return sub_25A61BFD0();
}

uint64_t sub_25A5CDD74@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_25A6232B0();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

void sub_25A5CDDD4(unint64_t *a1@<X8>)
{
  if (*v1) {
    unint64_t v2 = 0xD000000000000014;
  }
  else {
    unint64_t v2 = 0xD000000000000012;
  }
  unint64_t v3 = 0x800000025A635A30;
  if (*v1) {
    unint64_t v3 = 0x800000025A635A50;
  }
  *a1 = v2;
  a1[1] = v3;
}

unint64_t sub_25A5CDE18()
{
  if (*v0) {
    return 0xD000000000000014;
  }
  else {
    return 0xD000000000000012;
  }
}

uint64_t JITCapabilities.propertyListValue.getter()
{
  return sub_25A622780();
}

uint64_t sub_25A5CDEA0()
{
  return sub_25A622A80();
}

uint64_t sub_25A5CDF18()
{
  return sub_25A5CDEA0();
}

uint64_t JITCapabilities.init(propertyListValue:)(uint64_t a1)
{
  return sub_25A5CE260(a1) & 0x101;
}

uint64_t sub_25A5CDF54(uint64_t a1, uint64_t a2, char a3)
{
  char v4 = a3 & 1;
  uint64_t v7 = &type metadata for JITCapabilities.Key;
  unint64_t v8 = sub_25A5CE5B4();
  v6[0] = v4;
  sub_25A622760();
  uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
  if (!v3 && v9 != 2)
  {
    v6[0] = v9 & 1;
    return swift_setAtWritableKeyPath();
  }
  return result;
}

uint64_t sub_25A5CE00C()
{
  return sub_25A622780();
}

uint64_t sub_25A5CE054@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_25A5CE260(a1);
  if (!v2)
  {
    *a2 = result & 1;
    a2[1] = BYTE1(result) & 1;
  }
  return result;
}

BOOL sub_25A5CE08C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2 | a2[1] ^ a1[1]) & 1) == 0;
}

id static JITCapabilities.userDefaultSupportsJITLinking.getter()
{
  if (qword_26A4291D8 != -1) {
    swift_once();
  }
  id v0 = objc_msgSend(self, sel_standardUserDefaults);
  uint64_t v1 = (void *)sub_25A622DB0();
  id v2 = objc_msgSend(v0, sel_BOOLForKey_, v1);

  return v2;
}

void sub_25A5CE170()
{
  id v0 = objc_msgSend(self, sel_standardUserDefaults);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A42AD68);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_25A625820;
  *(void *)(inited + 32) = 0xD000000000000014;
  *(void *)(inited + 40) = 0x800000025A637880;
  *(void *)(inited + 72) = MEMORY[0x263F8D4F8];
  *(unsigned char *)(inited + 48) = 1;
  sub_25A5CDB24(inited);
  id v2 = (void *)sub_25A622CF0();
  swift_bridgeObjectRelease();
  objc_msgSend(v0, sel_registerDefaults_, v2);
}

uint64_t sub_25A5CE260(uint64_t a1)
{
  uint64_t KeyPath = swift_getKeyPath();
  sub_25A5CDF54(KeyPath, a1, 0);
  if (v1)
  {
    uint64_t v5 = sub_25A6227C0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
    return swift_release();
  }
  else
  {
    swift_release();
    uint64_t v4 = swift_getKeyPath();
    sub_25A5CDF54(v4, a1, 1);
    uint64_t v6 = sub_25A6227C0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
    swift_release();
    return 0;
  }
}

_WORD *__swift_memcpy2_1(_WORD *result, _WORD *a2)
{
  *uint64_t result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for JITCapabilities(unsigned __int16 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 65281 <= 0xFFFEFFFF) {
    int v2 = 2;
  }
  else {
    int v2 = 4;
  }
  if (a2 + 65281 < 0xFF0000) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 16)) - 65281;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 16)) - 65281;
    }
    int v4 = *((unsigned __int8 *)a1 + 2);
    if (*((unsigned char *)a1 + 2)) {
      return (*a1 | (v4 << 16)) - 65281;
    }
  }
LABEL_17:
  unsigned int v6 = *(unsigned __int8 *)a1;
  BOOL v7 = v6 >= 2;
  int v8 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for JITCapabilities(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a3 + 65281 <= 0xFFFEFFFF) {
    int v3 = 2;
  }
  else {
    int v3 = 4;
  }
  if (a3 + 65281 < 0xFF0000) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 16) + 1;
    *(_WORD *)uint64_t result = a2 - 255;
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = v6;
        break;
      case 2:
        *(_WORD *)(result + 2) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25A5CE514);
      case 4:
        *(_DWORD *)(result + 2) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 2) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *(unsigned char *)uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for JITCapabilities()
{
  return &type metadata for JITCapabilities;
}

uint64_t sub_25A5CE54C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A42AD78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_25A5CE5B4()
{
  unint64_t result = qword_26A42AD80;
  if (!qword_26A42AD80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42AD80);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for JITCapabilities.Key(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25A5CE6D4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for JITCapabilities.Key()
{
  return &type metadata for JITCapabilities.Key;
}

unint64_t sub_25A5CE710()
{
  unint64_t result = qword_26A42AD88;
  if (!qword_26A42AD88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42AD88);
  }
  return result;
}

uint64_t DaemonConnection.invalidationHandle.getter()
{
  sub_25A5D010C();

  return swift_retain();
}

uint64_t DaemonConnection.role.getter@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(*(void *)v1 + 80) - 8) + 16))(a1, v1 + *(void *)(*(void *)v1 + 104));
}

char *DaemonConnection.__allocating_init(connection:role:serviceDescription:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  swift_allocObject();
  char v10 = sub_25A5D0114(a1, a2, a3, a4);
  (*(void (**)(uint64_t))(*(void *)(*(void *)(v5 + 80) - 8) + 8))(a2);
  swift_release();
  return v10;
}

char *DaemonConnection.init(connection:role:serviceDescription:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = *v4;
  BOOL v7 = sub_25A5D0114(a1, a2, a3, a4);
  (*(void (**)(uint64_t))(*(void *)(*(void *)(v6 + 80) - 8) + 8))(a2);
  swift_release();
  return v7;
}

uint64_t sub_25A5CE924(uint64_t a1)
{
  uint64_t v2 = sub_25A6228E0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7[1] = a1;
  swift_getWitnessTable();
  sub_25A5B6E80();
  sub_25A622870();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_25A5CEA88(uint64_t a1, void *a2)
{
  uint64_t v3 = (void *)*a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A429E60);
  uint64_t v5 = MEMORY[0x270FA5388](v4 - 8);
  BOOL v7 = (uint64_t *)((char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  int v8 = (void *)((char *)a2 + v3[16]);
  uint64_t v9 = *(int *)(v5 + 56);
  char v10 = (char *)v7 + v9;
  uint64_t v11 = (char *)v8 + v9;
  *BOOL v7 = *v8;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A429E68);
  uint64_t v13 = *(void *)(v12 - 8);
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
  sub_25A59531C();
  sub_25A622830();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
  sub_25A622320();
  return (*(uint64_t (**)(void))(v3[11] + 16))(v3[10]);
}

uint64_t DaemonConnection.activate(receiver:interruptionHandler:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A429E60);
  uint64_t v6 = v5 - 8;
  MEMORY[0x270FA5388](v5);
  int v8 = (void *)((char *)&v17[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_retain();
  sub_25A622330();
  _OWORD v17[3] = type metadata accessor for DaemonConnection.Receiver();
  v17[4] = swift_getWitnessTable();
  v17[0] = a1;
  v17[1] = a2;
  swift_retain();
  sub_25A622370();
  sub_25A570C60((uint64_t)v17, &qword_26A42AD90);
  uint64_t v9 = (void *)(v2 + *(void *)(*(void *)v2 + 128));
  uint64_t v10 = *(int *)(v6 + 56);
  uint64_t v11 = (char *)v8 + v10;
  uint64_t v12 = (char *)v9 + v10;
  *int v8 = *v9;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A429E68);
  uint64_t v14 = *(void *)(v13 - 8);
  (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
  sub_25A59531C();
  sub_25A622860();
  return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v11, v13);
}

uint64_t DaemonConnection.sender.getter()
{
  void v1[2] = v0;
  v1[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_26A429E60);
  v1[4] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_25A5CEEFC, 0, 0);
}

uint64_t sub_25A5CEEFC()
{
  uint64_t v1 = *(void **)(v0 + 32);
  uint64_t v2 = (uint64_t *)(*(void *)(v0 + 16) + *(void *)(**(void **)(v0 + 16) + 128));
  uint64_t v3 = *(int *)(*(void *)(v0 + 24) + 48);
  *(_DWORD *)(v0 + 80) = v3;
  uint64_t v4 = (char *)v1 + v3;
  uint64_t v5 = (char *)v2 + v3;
  uint64_t v6 = *v2;
  *(void *)(v0 + 40) = *v2;
  void *v1 = v6;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A429E68);
  *(void *)(v0 + 48) = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  *(void *)(v0 + 56) = v8;
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v4, v5, v7);
  swift_retain();
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v0 + 64) = v9;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A429388);
  *uint64_t v9 = v0;
  v9[1] = sub_25A5CF064;
  uint64_t v11 = MEMORY[0x263F8EE60] + 8;
  uint64_t v12 = MEMORY[0x263F8E4E0];
  return MEMORY[0x270FA1FA8](v10, v6, v11, v10, v12);
}

uint64_t sub_25A5CF064()
{
  *(void *)(*(void *)v1 + 72) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_release();
    uint64_t v2 = sub_25A5CF240;
  }
  else
  {
    uint64_t v2 = sub_25A5CF180;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_25A5CF180()
{
  uint64_t v1 = *(void *)(v0 + 48);
  uint64_t v2 = *(void *)(v0 + 56);
  uint64_t v3 = *(int *)(v0 + 80);
  uint64_t v4 = *(void *)(v0 + 32);
  uint64_t v5 = *(void *)(v0 + 16);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v4 + v3, v1);
  swift_retain();
  swift_task_dealloc();
  uint64_t v6 = *(uint64_t (**)(void, uint64_t))(v0 + 8);
  return v6(sub_25A5D0A38, v5);
}

uint64_t sub_25A5CF240()
{
  (*(void (**)(void, void))(*(void *)(v0 + 56) + 8))(*(void *)(v0 + 32) + *(int *)(v0 + 80), *(void *)(v0 + 48));
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_25A5CF2C4(void *a1, uint64_t a2)
{
  id v33 = a1;
  uint64_t v4 = sub_25A622C10();
  uint64_t v31 = *(void *)(v4 - 8);
  uint64_t v32 = v4;
  uint64_t v5 = *(void *)(v31 + 64);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  unint64_t v30 = (char *)v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)v29 - v7;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A429D70);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for TransportReply();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  uint64_t v15 = MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)v29 - v17;
  sub_25A57E650(a2, (uint64_t)v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    sub_25A570C60((uint64_t)v11, &qword_26A429D70);
    id v19 = LazyPropertyList.encoded.getter();
    sub_25A622360();
  }
  else
  {
    v29[0] = (uint64_t)v18;
    sub_25A57E714((uint64_t)v11, (uint64_t)v18);
    v29[1] = *(void *)(v2 + *(void *)(*(void *)v2 + 112));
    id v33 = LazyPropertyList.encoded.getter();
    sub_25A622C20();
    sub_25A5851D4((uint64_t)v18, (uint64_t)v16);
    uint64_t v20 = v30;
    uint64_t v22 = v31 + 32;
    uint64_t v21 = *(void (**)(char *, char *, uint64_t))(v31 + 32);
    long long v23 = v8;
    uint64_t v24 = v32;
    v21(v30, v23, v32);
    unint64_t v25 = (*(unsigned __int8 *)(v13 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
    unint64_t v26 = (v14 + *(unsigned __int8 *)(v22 + 48) + v25) & ~(unint64_t)*(unsigned __int8 *)(v22 + 48);
    uint64_t v27 = swift_allocObject();
    sub_25A57E714((uint64_t)v16, v27 + v25);
    v21((char *)(v27 + v26), v20, v24);
    uint64_t v28 = v33;
    sub_25A622350();

    swift_release();
    sub_25A584FE4(v29[0], (uint64_t (*)(void))type metadata accessor for TransportReply);
  }
}

uint64_t DaemonConnection.description.getter()
{
  uint64_t v1 = *v0;
  sub_25A623210();
  uint64_t v2 = (*(uint64_t (**)(void, void))(*(void *)(v1 + 88) + 8))(*(void *)(v1 + 80), *(void *)(v1 + 88));
  swift_bridgeObjectRelease();
  sub_25A622E00();
  swift_bridgeObjectRetain();
  sub_25A622E00();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t DaemonConnection.send(serviceMessage:reply:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A429D70);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for LazyPropertyList();
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_25A6227C0();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ServiceMessage(0);
  sub_25A5D0480();
  sub_25A622AF0();
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v8, v12, v9);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  sub_25A5851D4(a2, (uint64_t)v5);
  uint64_t v13 = type metadata accessor for TransportReply();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v5, 0, 1, v13);
  sub_25A5CF2C4(v8, (uint64_t)v5);
  sub_25A570C60((uint64_t)v5, &qword_26A429D70);
  return sub_25A584FE4((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for LazyPropertyList);
}

uint64_t sub_25A5CF998(void *a1, void (*a2)(uint64_t *, char *))
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A429D70);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for LazyPropertyList();
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (uint64_t *)((char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  id v10 = objc_msgSend(a1, sel_data);
  uint64_t v11 = sub_25A6222D0();
  uint64_t v13 = v12;

  *uint64_t v9 = v11;
  v9[1] = v13;
  swift_storeEnumTagMultiPayload();
  uint64_t v14 = type metadata accessor for TransportReply();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v6, 1, 1, v14);
  a2(v9, v6);
  sub_25A570C60((uint64_t)v6, &qword_26A429D70);
  return sub_25A584FE4((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for LazyPropertyList);
}

uint64_t sub_25A5CFB34(void *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t *, char *), uint64_t a5)
{
  uint64_t v26 = a5;
  uint64_t v27 = a4;
  uint64_t v24 = a2;
  uint64_t v25 = a3;
  uint64_t v6 = sub_25A622AC0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A429D70);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for LazyPropertyList();
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (uint64_t *)((char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  id v16 = objc_msgSend(a1, sel_data);
  uint64_t v17 = sub_25A6222D0();
  uint64_t v19 = v18;

  *uint64_t v15 = v17;
  v15[1] = v19;
  swift_storeEnumTagMultiPayload();
  *(void *)(swift_allocObject() + 16) = a1;
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x263F60568], v6);
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = v24;
  *(void *)(v20 + 24) = v25;
  swift_retain();
  id v21 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A429388);
  sub_25A622600();
  uint64_t v22 = type metadata accessor for TransportReply();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v12, 0, 1, v22);
  v27(v15, v12);
  sub_25A570C60((uint64_t)v12, &qword_26A429D70);
  return sub_25A584FE4((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for LazyPropertyList);
}

uint64_t sub_25A5CFE3C(void *a1)
{
  return sub_25A5CF998(a1, *v1);
}

uint64_t sub_25A5CFE4C(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_25A5CFB34(a1, a2, a3, *(void (**)(uint64_t *, char *))v3, *(void *)(v3 + 8));
}

uint64_t *DaemonConnection.deinit()
{
  uint64_t v1 = *v0;
  swift_release();
  (*(void (**)(uint64_t))(*(void *)(*(void *)(v1 + 80) - 8) + 8))((uint64_t)v0 + *(void *)(*v0 + 104));
  swift_release();
  swift_bridgeObjectRelease();
  sub_25A570C60((uint64_t)v0 + *(void *)(*v0 + 128), &qword_26A429E60);
  return v0;
}

uint64_t DaemonConnection.__deallocating_deinit()
{
  DaemonConnection.deinit();
  uint64_t v1 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v2 = *(unsigned __int16 *)(*(void *)v0 + 52);

  return MEMORY[0x270FA0228](v0, v1, v2);
}

uint64_t sub_25A5CFF94(uint64_t a1, uint64_t a2)
{
  return DaemonConnection.activate(receiver:interruptionHandler:)(a1, a2);
}

uint64_t sub_25A5CFFB8()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_25A5504D8;
  return DaemonConnection.sender.getter();
}

uint64_t sub_25A5D0048()
{
  sub_25A5D010C();

  return swift_retain();
}

uint64_t sub_25A5D007C()
{
  return DaemonConnection.description.getter();
}

uint64_t sub_25A5D00A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270F55BD0](a1, a2, a3, WitnessTable);
}

uint64_t sub_25A5D010C()
{
  return *(void *)(v0 + 16);
}

char *sub_25A5D0114(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v21 = a3;
  uint64_t v22 = a4;
  uint64_t v20 = a2;
  uint64_t v23 = *(void *)v4;
  uint64_t v24 = v23;
  uint64_t v7 = *(void *)(v23 + 80);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v10 = (char *)&v20 - v9;
  sub_25A622B90();
  swift_allocObject();
  *((void *)v4 + 2) = sub_25A622B80();
  uint64_t v11 = (uint64_t *)&v5[*(void *)(*(void *)v5 + 128)];
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A429E60);
  *uint64_t v11 = sub_25A6230A0();
  *(void *)&v5[*(void *)(*(void *)v5 + 112)] = a1;
  uint64_t v12 = &v5[*(void *)(*(void *)v5 + 120)];
  uint64_t v13 = v20;
  uint64_t v14 = v22;
  *(void *)uint64_t v12 = v21;
  *((void *)v12 + 1) = v14;
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  v15(&v5[*(void *)(*(void *)v5 + 104)], v13, v7);
  swift_retain();
  swift_retain();
  sub_25A622340();
  uint64_t v25 = v5;
  v15(v10, v13, v7);
  unint64_t v16 = (*(unsigned __int8 *)(v8 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v17 = (char *)swift_allocObject();
  uint64_t v18 = v23;
  *((void *)v17 + 2) = v7;
  *((void *)v17 + 3) = *(void *)(v18 + 88);
  *((void *)v17 + 4) = v5;
  *((void *)v17 + 5) = a1;
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(&v17[v16], v10, v7);
  swift_retain();
  swift_retain();
  swift_getWitnessTable();
  sub_25A622AE0();
  swift_release();
  return v5;
}

uint64_t type metadata accessor for DaemonConnection.Receiver()
{
  return __swift_instantiateGenericMetadata();
}

unint64_t sub_25A5D0480()
{
  unint64_t result = qword_26A42ADA0[0];
  if (!qword_26A42ADA0[0])
  {
    type metadata accessor for ServiceMessage(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26A42ADA0);
  }
  return result;
}

uint64_t sub_25A5D04D8(uint64_t a1)
{
  *(void *)(a1 + 8) = swift_getWitnessTable();
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_25A5D0538()
{
  return swift_getWitnessTable();
}

uint64_t dispatch thunk of static DaemonConnectionRole.description.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of DaemonConnectionRole.handleInvalidation()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

void sub_25A5D057C()
{
  uint64_t v0 = MEMORY[0x263F8CF88] + 64;
  uint64_t v5 = MEMORY[0x263F8CF88] + 64;
  uint64_t v1 = swift_checkMetadataState();
  if (v2 <= 0x3F)
  {
    uint64_t v6 = *(void *)(v1 - 8) + 64;
    uint64_t v7 = v0;
    uint64_t v8 = &unk_25A62D938;
    sub_25A5D06C4();
    if (v3 <= 0x3F)
    {
      swift_getTupleTypeLayout2();
      uint64_t v9 = &v4;
      swift_initClassMetadata2();
    }
  }
}

uint64_t type metadata accessor for DaemonConnection()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t method lookup function for DaemonConnection(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for DaemonConnection);
}

uint64_t dispatch thunk of DaemonConnection.__allocating_init(connection:role:serviceDescription:)()
{
  return (*(uint64_t (**)(void))(v0 + 136))();
}

void sub_25A5D06C4()
{
  if (!qword_26A42AE30[0])
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A429388);
    unint64_t v0 = sub_25A6230B0();
    if (!v1) {
      atomic_store(v0, qword_26A42AE30);
    }
  }
}

void *sub_25A5D0734(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  return a1;
}

uint64_t sub_25A5D0764()
{
  return swift_release();
}

void *sub_25A5D076C(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *sub_25A5D07A8(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t sub_25A5D07DC(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_25A5D0824(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t sub_25A5D0860()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_25A5D0898()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_25A5D08D0()
{
  uint64_t v1 = *(void *)(type metadata accessor for TransportReply() - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  uint64_t v5 = sub_25A622C10();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = (v3 + v4 + v7) & ~v7;
  uint64_t v9 = v8 + *(void *)(v6 + 64);
  uint64_t v10 = v2 | v7 | 7;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(qword_26A429C58);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v0 + v3, v11);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v8, v5);

  return MEMORY[0x270FA0238](v0, v9, v10);
}

uint64_t sub_25A5D0A3C()
{
  return sub_25A5CE924(v0);
}

uint64_t sub_25A5D0A44()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 48) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x270FA0238](v0, v5, v6);
}

uint64_t sub_25A5D0B10(uint64_t a1)
{
  return sub_25A5CEA88(a1, *(void **)(v1 + 32));
}

CGSize __swiftcall PreviewTraits.Orientation.rotatedSize(_:)(CGSize result)
{
  unsigned int v2 = *v1;
  if (v2 >= 2) {
    double height = result.height;
  }
  else {
    double height = result.width;
  }
  if (v2 >= 2) {
    result.double height = result.width;
  }
  double v4 = height;
  result.width = v4;
  return result;
}

double PreviewTraits.Orientation.rotationDegrees.getter()
{
  return dbl_25A62D9B8[*v0];
}

double PreviewTraits.Orientation.deviceRotationDegrees.getter()
{
  return dbl_25A62D9D8[*v0];
}

uint64_t PreviewTraits.Orientation.deviceRotationAngle.getter()
{
  double v1 = dbl_25A62D9D8[*v0];
  id v2 = objc_msgSend(self, sel_degrees);
  unint64_t v3 = sub_25A5D0C18();
  v4.n128_f64[0] = v1;

  return MEMORY[0x270EEDFA8](v2, v3, v4);
}

unint64_t sub_25A5D0C18()
{
  unint64_t result = qword_26A42AEB8[0];
  if (!qword_26A42AEB8[0])
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, qword_26A42AEB8);
  }
  return result;
}

uint64_t sub_25A5D0C58()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for PipeServiceInterface();
  swift_getWitnessTable();
  type metadata accessor for TransportEvent();
  uint64_t result = sub_25A623080();
  if (v1 <= 0x3F) {
    return swift_initClassMetadata2();
  }
  return result;
}

uint64_t sub_25A5D0DB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[14] = a3;
  v4[15] = v3;
  v4[16] = *(void *)(v3 + 88);
  v4[17] = *(void *)(v3 + 80);
  v4[18] = swift_getAssociatedTypeWitness();
  v4[19] = swift_getAssociatedConformanceWitness();
  v4[20] = type metadata accessor for PipeServiceInterface();
  v4[21] = swift_getWitnessTable();
  type metadata accessor for TransportEvent();
  uint64_t v5 = sub_25A623080();
  v4[22] = v5;
  v4[23] = *(void *)(v5 - 8);
  unsigned char v4[24] = swift_task_alloc();
  v4[25] = swift_task_alloc();
  swift_getObjectType();
  uint64_t v7 = sub_25A622F70();
  v4[26] = v7;
  v4[27] = v6;
  return MEMORY[0x270FA2498](sub_25A5D0F5C, v7, v6);
}

uint64_t sub_25A5D0F5C()
{
  uint64_t v2 = v0[20];
  uint64_t v1 = v0[21];
  uint64_t v3 = (void *)v0[14];
  uint64_t v4 = v3[3];
  uint64_t v5 = v3[4];
  __swift_project_boxed_opaque_existential_1(v3, v4);
  Transport.activate<A>(forReceivingEvents:)(v2, v4, v2, v5, v1);
  uint64_t v6 = v3[3];
  uint64_t v7 = v3[4];
  __swift_project_boxed_opaque_existential_1(v3, v6);
  uint64_t v8 = type metadata accessor for PipeServiceInterface();
  uint64_t v9 = (void *)swift_task_alloc();
  v0[28] = v9;
  swift_getWitnessTable();
  *uint64_t v9 = v0;
  v9[1] = sub_25A5D10BC;
  return Transport.transportSender<A>(for:)((uint64_t)(v0 + 2), v8, v6, v8, v7);
}

uint64_t sub_25A5D10BC()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 232) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 216);
  uint64_t v4 = *(void *)(v2 + 208);
  if (v0) {
    uint64_t v5 = sub_25A5D14A8;
  }
  else {
    uint64_t v5 = sub_25A5D11F8;
  }
  return MEMORY[0x270FA2498](v5, v4, v3);
}

uint64_t sub_25A5D11F8()
{
  uint64_t v22 = v0;
  uint64_t v1 = *(void *)(v0 + 192);
  uint64_t v2 = *(void *)(v0 + 184);
  uint64_t v14 = *(void *)(v0 + 200);
  uint64_t v15 = *(void *)(v0 + 176);
  uint64_t v13 = *(void *)(v0 + 112);
  uint64_t v3 = *(void *)(v0 + 16);
  uint64_t v5 = *(void *)(v0 + 40);
  uint64_t v4 = *(void *)(v0 + 48);
  uint64_t v6 = *(void *)(v0 + 56);
  long long v16 = *(_OWORD *)(v0 + 24);
  (*(void (**)(uint64_t))(v2 + 16))(v1);
  uint64_t v17 = v3;
  long long v18 = v16;
  uint64_t v19 = v5;
  uint64_t v20 = v4;
  uint64_t v21 = v6;
  swift_allocObject();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v7 = sub_25A5D214C(v1, &v17);
  type metadata accessor for Junction();
  uint64_t WitnessTable = swift_getWitnessTable();
  swift_retain();
  uint64_t v9 = sub_25A5B6D34((uint64_t)v7, WitnessTable, 0, 0, (uint64_t)sub_25A5D7750, (uint64_t)v7, (uint64_t)sub_25A5D76FC, (uint64_t)v7);
  *(void *)((char *)v7 + *(void *)(*v7 + 120)) = v9;
  swift_retain_n();
  swift_retain();
  swift_release();
  *(void *)(v0 + 104) = v7;
  sub_25A585248(v13, v0 + 64);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = v7;
  sub_25A5852B0((long long *)(v0 + 64), v10 + 24);
  swift_retain();
  swift_getWitnessTable();
  sub_25A622AA0();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v14, v15);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v11 = *(uint64_t (**)(void *, void *))(v0 + 8);
  return v11(v7, v9);
}

uint64_t sub_25A5D14A8()
{
  (*(void (**)(void, void))(v0[23] + 8))(v0[25], v0[22]);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_25A5D1530(uint64_t a1, uint64_t a2)
{
  v3[9] = a2;
  v3[10] = v2;
  v3[8] = a1;
  v3[11] = *v2;
  uint64_t v4 = sub_25A6228E0();
  v3[12] = v4;
  v3[13] = *(void *)(v4 - 8);
  v3[14] = swift_task_alloc();
  v3[15] = swift_getAssociatedTypeWitness();
  unsigned char v3[16] = swift_getAssociatedConformanceWitness();
  v3[17] = type metadata accessor for PipeEvent.Content();
  v3[18] = swift_task_alloc();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v3[19] = AssociatedTypeWitness;
  uint64_t v6 = *(void *)(AssociatedTypeWitness - 8);
  v3[20] = v6;
  v3[21] = *(void *)(v6 + 64);
  v3[22] = swift_task_alloc();
  v3[23] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for PipeEvent();
  unsigned char v3[24] = v7;
  v3[25] = *(void *)(v7 - 8);
  v3[26] = swift_task_alloc();
  type metadata accessor for PipeServiceInterface();
  swift_getWitnessTable();
  uint64_t v8 = type metadata accessor for TransportMessage();
  v3[27] = v8;
  v3[28] = *(void *)(v8 - 8);
  v3[29] = swift_task_alloc();
  uint64_t v9 = type metadata accessor for TransportEvent();
  v3[30] = v9;
  v3[31] = *(void *)(v9 - 8);
  v3[32] = swift_task_alloc();
  sub_25A623180();
  v3[33] = swift_task_alloc();
  uint64_t v10 = sub_25A623070();
  v3[34] = v10;
  v3[35] = *(void *)(v10 - 8);
  v3[36] = swift_task_alloc();
  swift_getObjectType();
  uint64_t v12 = sub_25A622F70();
  v3[37] = v12;
  v3[38] = v11;
  return MEMORY[0x270FA2498](sub_25A5D1984, v12, v11);
}

uint64_t sub_25A5D1984()
{
  uint64_t v1 = v0[10];
  sub_25A623080();
  sub_25A623040();
  v0[39] = *(void *)(*(void *)v1 + 128);
  swift_beginAccess();
  uint64_t v2 = v0[8];
  uint64_t v3 = v0[9];
  uint64_t v4 = (void *)swift_task_alloc();
  v0[40] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_25A5D1A98;
  uint64_t v5 = v0[33];
  uint64_t v6 = v0[34];
  return MEMORY[0x270FA1F68](v5, v2, v3, v6);
}

uint64_t sub_25A5D1A98()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 304);
  uint64_t v3 = *(void *)(v1 + 296);
  return MEMORY[0x270FA2498](sub_25A5D1BB8, v3, v2);
}

uint64_t sub_25A5D1BB8()
{
  uint64_t v1 = v0[33];
  uint64_t v2 = v0[30];
  uint64_t v3 = v0[31];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    uint64_t v5 = v0[13];
    uint64_t v4 = v0[14];
    uint64_t v6 = v0[12];
    uint64_t v7 = v0[10];
    (*(void (**)(void, void))(v0[35] + 8))(v0[36], v0[34]);
    v0[5] = v7;
    swift_getWitnessTable();
    sub_25A5B6E80();
    sub_25A622870();
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v8 = (uint64_t (*)(void))v0[1];
    return v8();
  }
  else
  {
    uint64_t v10 = v0[32];
    uint64_t v11 = v0[27];
    uint64_t v12 = v0[28];
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v10, v1, v2);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
    {
      uint64_t v13 = v0[19];
      uint64_t v14 = *(void *)(v0[10] + v0[39]);
      uint64_t v15 = swift_bridgeObjectRetain();
      if (MEMORY[0x26113FFD0](v15, v13))
      {
        uint64_t v16 = 0;
        uint64_t v49 = v14;
        do
        {
          char v17 = sub_25A622F30();
          sub_25A622E90();
          if (v17)
          {
            (*(void (**)(void, unint64_t, void))(v0[20] + 16))(v0[23], v14+ ((*(unsigned __int8 *)(v0[20] + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0[20] + 80))+ *(void *)(v0[20] + 72) * v16, v0[19]);
            uint64_t v18 = v16 + 1;
            if (__OFADD__(v16, 1)) {
              goto LABEL_15;
            }
          }
          else
          {
            uint64_t v27 = v0[21];
            uint64_t v28 = sub_25A623230();
            if (v27 != 8)
            {
              __break(1u);
              return MEMORY[0x270FA1F68](v28, v29, v30, v31);
            }
            uint64_t v32 = v28;
            uint64_t v33 = v0[23];
            uint64_t v34 = v0[19];
            uint64_t v35 = v0[20];
            v0[6] = v32;
            (*(void (**)(uint64_t, void *, uint64_t))(v35 + 16))(v33, v0 + 6, v34);
            swift_unknownObjectRelease();
            uint64_t v18 = v16 + 1;
            if (__OFADD__(v16, 1))
            {
LABEL_15:
              __break(1u);
              goto LABEL_16;
            }
          }
          uint64_t v19 = v0[25];
          uint64_t v20 = v0[26];
          uint64_t v21 = v0[23];
          uint64_t v22 = v0[22];
          uint64_t v24 = v0[19];
          uint64_t v23 = v0[20];
          uint64_t v25 = v0[18];
          uint64_t v50 = v0[24];
          swift_storeEnumTagMultiPayload();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 32))(v22, v21, v24);
          uint64_t v26 = v22;
          uint64_t v14 = v49;
          sub_25A57DA5C(v25, v26, v20);
          sub_25A5D2E48();
          (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v20, v50);
          ++v16;
        }
        while (v18 != MEMORY[0x26113FFD0](v49, v24));
      }
      uint64_t v43 = v0[13];
      uint64_t v42 = v0[14];
      uint64_t v44 = v0[12];
      uint64_t v45 = v0[10];
      swift_bridgeObjectRelease();
      v0[7] = v45;
      swift_getWitnessTable();
      sub_25A5B6E80();
      sub_25A622870();
      (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v42, v44);
    }
    else
    {
LABEL_16:
      uint64_t v37 = v0[28];
      uint64_t v36 = v0[29];
      uint64_t v39 = v0[26];
      uint64_t v38 = v0[27];
      uint64_t v40 = v0[24];
      uint64_t v41 = v0[25];
      (*(void (**)(uint64_t, void, uint64_t))(v37 + 32))(v36, v0[32], v38);
      sub_25A5D2528(v38, v39);
      sub_25A5D2E48();
      (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v39, v40);
      (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v36, v38);
    }
    uint64_t v46 = v0[8];
    uint64_t v47 = v0[9];
    long long v48 = (void *)swift_task_alloc();
    v0[40] = v48;
    *long long v48 = v0;
    v48[1] = sub_25A5D1A98;
    uint64_t v28 = v0[33];
    uint64_t v31 = v0[34];
    uint64_t v29 = v46;
    uint64_t v30 = v47;
    return MEMORY[0x270FA1F68](v28, v29, v30, v31);
  }
}

void *sub_25A5D2100(uint64_t a1, uint64_t *a2)
{
  return sub_25A5D214C(a1, a2);
}

void *sub_25A5D214C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *a2;
  long long v14 = *(_OWORD *)(a2 + 3);
  uint64_t v7 = a2[5];
  sub_25A622B40();
  swift_allocObject();
  v2[2] = sub_25A622B30();
  *(void *)((char *)v2 + *(void *)(*v2 + 120)) = 0;
  uint64_t v8 = *(void *)(*v2 + 128);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  long long v13 = *(_OWORD *)(a2 + 1);
  *(void *)((char *)v2 + v8) = sub_25A622F10();
  uint64_t v9 = (char *)v3 + *(void *)(*v3 + 104);
  type metadata accessor for PipeServiceInterface();
  swift_getWitnessTable();
  type metadata accessor for TransportEvent();
  uint64_t v10 = sub_25A623080();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v9, a1, v10);
  uint64_t v11 = (char *)v3 + *(void *)(*v3 + 112);
  *(void *)uint64_t v11 = v6;
  *(_OWORD *)(v11 + 8) = v13;
  *(_OWORD *)(v11 + 24) = v14;
  *((void *)v11 + 5) = v7;
  return v2;
}

uint64_t sub_25A5D23AC()
{
  return sub_25A622AB0();
}

uint64_t sub_25A5D2480(uint64_t a1, uint64_t a2, void *a3)
{
  *(void *)(a2 + *(void *)(*(void *)a2 + 120)) = 0;
  swift_release();
  __swift_project_boxed_opaque_existential_1(a3, a3[3]);
  return sub_25A622870();
}

uint64_t sub_25A5D2528@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v70 = a2;
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(v3 + 16);
  uint64_t v5 = *(void *)(v3 + 24);
  uint64_t v6 = type metadata accessor for PipeServiceInterface.TwoWayContent();
  uint64_t v59 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v60 = (char *)&v52 - v7;
  uint64_t v63 = type metadata accessor for TransportReply();
  uint64_t v53 = *(void *)(v63 - 8);
  MEMORY[0x270FA5388](v63);
  uint64_t v65 = (uint64_t)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v71 = v4;
  uint64_t v72 = v6;
  uint64_t v73 = v5;
  uint64_t v74 = WitnessTable;
  uint64_t v10 = type metadata accessor for PipeServiceInterface.Message();
  uint64_t v57 = *(void *)(v10 - 8);
  uint64_t v58 = v10;
  MEMORY[0x270FA5388](v10);
  uint64_t v56 = (char *)&v52 - v11;
  uint64_t v12 = type metadata accessor for PipeServiceInterface.OneWayContent();
  uint64_t v55 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  long long v14 = (char *)&v52 - v13;
  uint64_t v15 = swift_getWitnessTable();
  uint64_t v71 = v4;
  uint64_t v72 = v12;
  uint64_t v73 = v5;
  uint64_t v74 = v15;
  uint64_t v16 = type metadata accessor for PipeServiceInterface.Message();
  uint64_t v54 = *(void *)(v16 - 8);
  uint64_t v17 = MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)&v52 - v18;
  uint64_t v20 = *(void *)(a1 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v22 = (char *)&v52 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v67 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v68 = AssociatedTypeWitness;
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v69 = (char *)&v52 - v24;
  uint64_t v62 = v4;
  uint64_t v64 = type metadata accessor for PipeEvent.Content();
  MEMORY[0x270FA5388](v64);
  uint64_t v66 = (char *)&v52 - v25;
  (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))(v22, v61, a1);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v26 = v58;
    uint64_t v27 = v63;
    uint64_t v28 = (uint64_t)&v22[*(int *)(swift_getTupleTypeMetadata2() + 48)];
    uint64_t v30 = v56;
    uint64_t v29 = v57;
    (*(void (**)(char *, char *, uint64_t))(v57 + 32))(v56, v22, v26);
    sub_25A57E714(v28, v65);
    uint64_t v31 = v60;
    (*(void (**)(char *, char *, uint64_t))(v59 + 16))(v60, v30, v6);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A429D80);
      uint64_t v33 = (uint64_t)v66;
      uint64_t v34 = (uint64_t)&v66[*(int *)(v32 + 48)];
      uint64_t v35 = sub_25A6227C0();
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v35 - 8) + 32))(v33, v31, v35);
      sub_25A57E714(v65, v34);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v53 + 56))(v34, 0, 1, v27);
    }
    else
    {
      swift_getAssociatedTypeWitness();
      swift_getAssociatedConformanceWitness();
      uint64_t v44 = swift_getAssociatedTypeWitness();
      uint64_t v45 = swift_getAssociatedTypeWitness();
      TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
      uint64_t v47 = v31;
      long long v48 = &v31[*(int *)(TupleTypeMetadata2 + 48)];
      uint64_t v33 = (uint64_t)v66;
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 32))(v66, v47, v44);
      TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v45 - 8) + 32))(v33 + *(int *)(TupleTypeMetadata3 + 48), v48, v45);
      sub_25A57E714(v65, v33 + *(int *)(TupleTypeMetadata3 + 64));
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v50 = (uint64_t)v69;
    (*(void (**)(char *, char *, uint64_t))(v67 + 16))(v69, &v30[*(int *)(v26 + 52)], v68);
    (*(void (**)(char *, uint64_t))(v29 + 8))(v30, v26);
  }
  else
  {
    uint64_t v36 = v63;
    uint64_t v37 = v54;
    (*(void (**)(char *, char *, uint64_t))(v54 + 32))(v19, v22, v16);
    (*(void (**)(char *, char *, uint64_t))(v55 + 16))(v14, v19, v12);
    uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A42AFC0);
    int v39 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v38 - 8) + 48))(v14, 3, v38);
    uint64_t v40 = v16;
    uint64_t v41 = v37;
    uint64_t v33 = (uint64_t)v66;
    switch(v39)
    {
      case 1:
      case 2:
      case 3:
        break;
      default:
        uint64_t v42 = v33 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A429D80) + 48);
        uint64_t v43 = sub_25A6227C0();
        (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v43 - 8) + 32))(v33, v14, v43);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v53 + 56))(v42, 1, 1, v36);
        break;
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v50 = (uint64_t)v69;
    (*(void (**)(char *, char *, uint64_t))(v67 + 16))(v69, &v19[*(int *)(v40 + 52)], v68);
    (*(void (**)(char *, uint64_t))(v41 + 8))(v19, v40);
  }
  return sub_25A57DA5C(v33, v50, v70);
}

uint64_t sub_25A5D2E48()
{
  return sub_25A57E560(sub_25A5D76E0);
}

uint64_t sub_25A5D2F28(uint64_t a1, uint64_t a2)
{
  uint64_t v131 = a2;
  uint64_t v132 = a1;
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v4 = *(void *)(v3 + 16);
  uint64_t v5 = *(void *)(v3 + 24);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v118 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v119 = AssociatedTypeWitness;
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v104 = (char *)&v100 - v7;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v117 = swift_getAssociatedTypeWitness();
  v121 = *(char **)(v117 - 8);
  MEMORY[0x270FA5388](v117);
  uint64_t v120 = (char *)&v100 - v8;
  uint64_t v9 = type metadata accessor for PipeServiceInterface.TwoWayContent();
  MEMORY[0x270FA5388](v9);
  uint64_t v106 = (char *)&v100 - v10;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v133 = v4;
  uint64_t v134 = v9;
  uint64_t v107 = v9;
  uint64_t v135 = v5;
  uint64_t v136 = WitnessTable;
  uint64_t v105 = WitnessTable;
  uint64_t v110 = type metadata accessor for PipeServiceInterface.Message();
  uint64_t v109 = *(void *)(v110 - 8);
  MEMORY[0x270FA5388](v110);
  uint64_t v108 = (char *)&v100 - v12;
  uint64_t v111 = type metadata accessor for TransportReply();
  uint64_t v103 = *(void *)(v111 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v111);
  uint64_t v112 = (uint64_t)&v100 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v101 = (uint64_t)&v100 - v15;
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A429D70);
  uint64_t v17 = MEMORY[0x270FA5388](v16 - 8);
  uint64_t v102 = (uint64_t)&v100 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v114 = (uint64_t)&v100 - v19;
  uint64_t v116 = sub_25A6227C0();
  uint64_t v115 = *(void *)(v116 - 8);
  MEMORY[0x270FA5388](v116);
  long long v113 = (char *)&v100 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = swift_getAssociatedTypeWitness();
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v128 = v21;
  uint64_t v129 = v22;
  MEMORY[0x270FA5388](v21);
  unint64_t v130 = (char *)&v100 - v23;
  uint64_t v24 = type metadata accessor for PipeServiceInterface.OneWayContent();
  MEMORY[0x270FA5388](v24);
  v122 = (char *)&v100 - v25;
  uint64_t v26 = swift_getWitnessTable();
  uint64_t v133 = v4;
  uint64_t v134 = v24;
  uint64_t v135 = v5;
  uint64_t v136 = v26;
  uint64_t v123 = v26;
  uint64_t v27 = type metadata accessor for PipeServiceInterface.Message();
  uint64_t v125 = *(void *)(v27 - 8);
  uint64_t v126 = (char *)v27;
  MEMORY[0x270FA5388](v27);
  v124 = (char *)&v100 - v28;
  uint64_t v29 = type metadata accessor for PipeEvent.Content();
  MEMORY[0x270FA5388](v29);
  uint64_t v31 = (char *)&v100 - v30;
  uint64_t v32 = *v2;
  uint64_t v33 = v2[1];
  uint64_t v35 = v2[2];
  uint64_t v34 = v2[3];
  uint64_t v36 = v2[4];
  uint64_t v37 = v2[5];
  uint64_t v127 = v36;
  (*(void (**)(char *, uint64_t, uint64_t))(v38 + 16))(v31, v132, v29);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      v121 = &v31[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A429D80) + 48)];
      uint64_t v59 = v115 + 32;
      (*(void (**)(char *, char *, uint64_t))(v115 + 32))(v113, v31, v116);
      uint64_t v60 = v114;
      sub_25A57E5E8((uint64_t)v121, v114);
      uint64_t v61 = v60;
      uint64_t v62 = v102;
      sub_25A57E650(v61, v102);
      int v63 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v103 + 48))(v62, 1, v111);
      v121 = (char *)(v59 - 16);
      if (v63 == 1)
      {
        uint64_t v64 = v116;
        sub_25A570C60(v62, &qword_26A429D70);
        uint64_t v133 = v32;
        uint64_t v134 = v33;
        uint64_t v135 = v35;
        uint64_t v136 = v34;
        uint64_t v137 = v127;
        uint64_t v138 = v37;
        uint64_t v65 = v115;
        uint64_t v66 = (uint64_t)v122;
        uint64_t v67 = v113;
        (*(void (**)(char *, char *, uint64_t))(v115 + 16))(v122, v113, v64);
        uint64_t v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A42AFC0);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v68 - 8) + 56))(v66, 0, 3, v68);
        uint64_t v69 = type metadata accessor for PipeEvent();
        uint64_t v70 = (uint64_t)v130;
        (*(void (**)(char *, uint64_t, uint64_t))(v129 + 16))(v130, v132 + *(int *)(v69 + 36), v128);
        uint64_t v71 = v124;
        sub_25A5D4240(v66, v70, v24, (uint64_t)v124);
        uint64_t v72 = v131;
        uint64_t v73 = swift_getWitnessTable();
        uint64_t v74 = (uint64_t)v126;
        uint64_t v75 = swift_getWitnessTable();
        TransportSenderProtocol<>.send(oneWay:)(v71, v72, v73, v75);
        (*(void (**)(char *, uint64_t))(v125 + 8))(v71, v74);
        sub_25A570C60(v114, &qword_26A429D70);
        return (*(uint64_t (**)(char *, uint64_t))(v65 + 8))(v67, v64);
      }
      else
      {
        uint64_t v87 = v101;
        sub_25A57E714(v62, v101);
        uint64_t v133 = v32;
        uint64_t v134 = v33;
        uint64_t v135 = v35;
        uint64_t v136 = v34;
        uint64_t v137 = v127;
        uint64_t v138 = v37;
        uint64_t v88 = v115;
        uint64_t v89 = (uint64_t)v106;
        uint64_t v90 = v113;
        uint64_t v91 = v116;
        (*(void (**)(char *, char *, uint64_t))(v115 + 16))(v106, v113, v116);
        uint64_t v92 = v107;
        swift_storeEnumTagMultiPayload();
        uint64_t v93 = type metadata accessor for PipeEvent();
        uint64_t v94 = (uint64_t)v130;
        (*(void (**)(char *, uint64_t, uint64_t))(v129 + 16))(v130, v132 + *(int *)(v93 + 36), v128);
        long long v95 = v108;
        sub_25A5D4240(v89, v94, v92, (uint64_t)v108);
        uint64_t v96 = v131;
        uint64_t v97 = swift_getWitnessTable();
        uint64_t v98 = v110;
        uint64_t v99 = swift_getWitnessTable();
        TransportSenderProtocol<>.send(message:reply:)(v95, v87, v96, v97, v99);
        (*(void (**)(char *, uint64_t))(v109 + 8))(v95, v98);
        sub_25A57E6B8(v87);
        sub_25A570C60(v114, &qword_26A429D70);
        return (*(uint64_t (**)(char *, uint64_t))(v88 + 8))(v90, v91);
      }
    case 2u:
      uint64_t v133 = v32;
      uint64_t v134 = v33;
      uint64_t v135 = v35;
      uint64_t v136 = v34;
      uint64_t v137 = v127;
      uint64_t v138 = v37;
      uint64_t v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A42AFC0);
      uint64_t v77 = (uint64_t)v122;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v76 - 8) + 56))(v122, 1, 3, v76);
      goto LABEL_8;
    case 3u:
      uint64_t v133 = v32;
      uint64_t v134 = v33;
      uint64_t v135 = v35;
      uint64_t v136 = v34;
      uint64_t v137 = v127;
      uint64_t v138 = v37;
      uint64_t v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A42AFC0);
      uint64_t v77 = (uint64_t)v122;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v78 - 8) + 56))(v122, 2, 3, v78);
      goto LABEL_8;
    case 4u:
      uint64_t v133 = v32;
      uint64_t v134 = v33;
      uint64_t v135 = v35;
      uint64_t v136 = v34;
      uint64_t v137 = v127;
      uint64_t v138 = v37;
      uint64_t v79 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A42AFC0);
      uint64_t v77 = (uint64_t)v122;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v79 - 8) + 56))(v122, 3, 3, v79);
LABEL_8:
      uint64_t v80 = type metadata accessor for PipeEvent();
      uint64_t v81 = (uint64_t)v130;
      (*(void (**)(char *, uint64_t, uint64_t))(v129 + 16))(v130, v132 + *(int *)(v80 + 36), v128);
      long long v82 = v124;
      sub_25A5D4240(v77, v81, v24, (uint64_t)v124);
      uint64_t v83 = v131;
      uint64_t v84 = swift_getWitnessTable();
      uint64_t v85 = (uint64_t)v126;
      uint64_t v86 = swift_getWitnessTable();
      TransportSenderProtocol<>.send(oneWay:)(v82, v83, v84, v86);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v125 + 8))(v82, v85);
      break;
    default:
      uint64_t v39 = v117;
      TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
      uint64_t v41 = &v31[*(int *)(TupleTypeMetadata3 + 48)];
      uint64_t v126 = &v31[*(int *)(TupleTypeMetadata3 + 64)];
      (*((void (**)(char *, char *, uint64_t))v121 + 4))(v120, v31, v39);
      uint64_t v42 = v104;
      uint64_t v43 = v41;
      uint64_t v44 = v119;
      (*(void (**)(char *, char *, uint64_t))(v118 + 32))(v104, v43, v119);
      sub_25A57E714((uint64_t)v126, v112);
      uint64_t v133 = v32;
      uint64_t v134 = v33;
      uint64_t v135 = v35;
      uint64_t v136 = v34;
      uint64_t v137 = v127;
      uint64_t v138 = v37;
      TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
      uint64_t v46 = (uint64_t)v106;
      uint64_t v47 = &v106[*(int *)(TupleTypeMetadata2 + 48)];
      (*((void (**)(char *, char *, uint64_t))v121 + 2))(v106, v120, v39);
      uint64_t v48 = v118;
      (*(void (**)(char *, char *, uint64_t))(v118 + 16))(v47, v42, v44);
      uint64_t v49 = v107;
      swift_storeEnumTagMultiPayload();
      uint64_t v50 = type metadata accessor for PipeEvent();
      uint64_t v51 = (uint64_t)v130;
      (*(void (**)(char *, uint64_t, uint64_t))(v129 + 16))(v130, v132 + *(int *)(v50 + 36), v128);
      uint64_t v52 = v108;
      sub_25A5D4240(v46, v51, v49, (uint64_t)v108);
      uint64_t v53 = v131;
      uint64_t v54 = swift_getWitnessTable();
      uint64_t v55 = v110;
      uint64_t v56 = swift_getWitnessTable();
      uint64_t v57 = v112;
      TransportSenderProtocol<>.send(message:reply:)(v52, v112, v53, v54, v56);
      (*(void (**)(char *, uint64_t))(v109 + 8))(v52, v55);
      sub_25A57E6B8(v57);
      (*(void (**)(char *, uint64_t))(v48 + 8))(v42, v44);
      uint64_t result = (*((uint64_t (**)(char *, uint64_t))v121 + 1))(v120, v117);
      break;
  }
  return result;
}

uint64_t sub_25A5D3DE8(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v14 = a3;
  uint64_t v5 = *a2;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v9 = (char *)&v13 - v8;
  if (*(uint64_t *)((char *)a2 + *(void *)(v5 + 120)))
  {
    swift_retain();
    sub_25A5B6DB4(a1);
    return swift_release();
  }
  else
  {
    uint64_t v11 = type metadata accessor for PipeEvent();
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v14 + *(int *)(v11 + 36), AssociatedTypeWitness);
    type metadata accessor for EndpointInvalidated();
    swift_getWitnessTable();
    swift_allocError();
    sub_25A57EF80((uint64_t)v9, AssociatedTypeWitness, v12);
    return swift_willThrow();
  }
}

uint64_t sub_25A5D400C()
{
  swift_release();
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 104);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for PipeServiceInterface();
  swift_getWitnessTable();
  type metadata accessor for TransportEvent();
  uint64_t v2 = sub_25A623080();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_25A5D41B8()
{
  sub_25A5D400C();
  uint64_t v1 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v2 = *(unsigned __int16 *)(*(void *)v0 + 52);

  return MEMORY[0x270FA0228](v0, v1, v2);
}

uint64_t type metadata accessor for Bridge()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for PipeServiceInterface()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_25A5D4240@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 - 8) + 32))(a4, a1, a3);
  uint64_t v6 = a4 + *(int *)(type metadata accessor for PipeServiceInterface.Message() + 52);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 32))(v6, a2, AssociatedTypeWitness);
}

uint64_t sub_25A5D4330()
{
  uint64_t v0 = sub_25A6232B0();
  swift_bridgeObjectRelease();
  if (v0 == 1) {
    unsigned int v1 = 1;
  }
  else {
    unsigned int v1 = 2;
  }
  if (v0) {
    return v1;
  }
  else {
    return 0;
  }
}

uint64_t sub_25A5D4384()
{
  type metadata accessor for PipeServiceInterface.Message.Key();
  sub_25A623360();
  swift_allocObject();
  uint64_t v0 = sub_25A622E80();
  _WORD *v1 = 256;
  return sub_25A5DB344(v0);
}

uint64_t sub_25A5D43F0(char a1)
{
  if (a1) {
    return 0x74616E6974736564;
  }
  else {
    return 0x64616F6C796170;
  }
}

uint64_t sub_25A5D4430(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270F55B80](a1, a2, a3, WitnessTable);
}

uint64_t sub_25A5D449C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x263F8D338];

  return MEMORY[0x270F9F940](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_25A5D4510(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v5 = MEMORY[0x263F8D320];

  return MEMORY[0x270F9DAE8](a1, a2, WitnessTable, v5);
}

uint64_t sub_25A5D457C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x263F8D320];

  return MEMORY[0x270F9DAF8](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_25A5D45EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x263F8D320];

  return MEMORY[0x270F9DAF0](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_25A5D465C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_25A5D4330();
  *a1 = result;
  return result;
}

uint64_t sub_25A5D4698@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_25A5D43F0(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_25A5D46D0()
{
  return sub_25A5D43F0(*v0);
}

uint64_t sub_25A5D46E4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_25A5D4384();
  *a1 = result;
  return result;
}

uint64_t sub_25A5D4718()
{
  return sub_25A622780();
}

uint64_t sub_25A5D475C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v65 = a5;
  uint64_t v66 = a4;
  uint64_t v64 = a2;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v10 = sub_25A623180();
  uint64_t v60 = *(void *)(v10 - 8);
  uint64_t v61 = v10;
  MEMORY[0x270FA5388](v10);
  uint64_t v56 = (char *)&v47 - v11;
  uint64_t v12 = sub_25A623180();
  uint64_t v58 = *(void *)(v12 - 8);
  uint64_t v59 = v12;
  MEMORY[0x270FA5388](v12);
  uint64_t v53 = (char *)&v47 - v13;
  uint64_t v68 = a2;
  uint64_t v69 = a3;
  uint64_t v70 = a4;
  uint64_t v71 = a5;
  uint64_t v51 = type metadata accessor for PipeServiceInterface.Message.Key();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v48 = TupleTypeMetadata2;
  uint64_t v57 = *(void *)(TupleTypeMetadata2 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](TupleTypeMetadata2);
  uint64_t v49 = (char *)&v47 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)&v47 - v17;
  uint64_t v19 = swift_getTupleTypeMetadata2();
  uint64_t v55 = *(void *)(v19 - 8);
  uint64_t v20 = MEMORY[0x270FA5388](v19);
  uint64_t v22 = (char *)&v47 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = MEMORY[0x270FA5388](v20);
  uint64_t v54 = (char *)&v47 - v24;
  uint64_t v25 = *(int *)(v23 + 48);
  uint64_t v50 = v23;
  uint64_t v26 = (char *)&v47 + v25 - v24;
  *((unsigned char *)&v47 - v24) = 0;
  uint64_t v27 = a3;
  uint64_t v28 = *(void *)(a3 - 8);
  uint64_t v29 = *(void (**)(char *, uint64_t, uint64_t))(v28 + 16);
  uint64_t v62 = v27;
  v29(v26, a1, v27);
  uint64_t v30 = *(int *)(TupleTypeMetadata2 + 48);
  uint64_t v52 = v18;
  uint64_t v31 = &v18[v30];
  *uint64_t v18 = 1;
  uint64_t v68 = v64;
  uint64_t v69 = v27;
  uint64_t v70 = v66;
  uint64_t v71 = v65;
  uint64_t v32 = a1 + *(int *)(type metadata accessor for PipeServiceInterface.Message() + 52);
  uint64_t v33 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v34 = *(void (**)(unsigned char *, uint64_t))(v33 + 16);
  v34(v31, v32);
  uint64_t v35 = &v22[*(int *)(v19 + 48)];
  unsigned char *v22 = 0;
  uint64_t v36 = v26;
  uint64_t v37 = v62;
  v29(v35, (uint64_t)v36, v62);
  uint64_t v38 = v53;
  (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v53, v35, v37);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v28 + 56))(v38, 0, 1, v37);
  LOBYTE(v68) = 0;
  uint64_t v39 = v48;
  uint64_t v40 = *(int *)(v48 + 48);
  uint64_t v41 = v49;
  uint64_t v42 = &v49[v40];
  *uint64_t v49 = 1;
  uint64_t v43 = AssociatedTypeWitness;
  ((void (*)(unsigned char *, unsigned char *, uint64_t))v34)(&v41[v40], v31, AssociatedTypeWitness);
  uint64_t v44 = v56;
  (*(void (**)(char *, unsigned char *, uint64_t))(v33 + 32))(v56, v42, v43);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v33 + 56))(v44, 0, 1, v43);
  char v67 = 1;
  swift_getWitnessTable();
  swift_getAssociatedConformanceWitness();
  uint64_t v45 = sub_25A622A80();
  (*(void (**)(char *, uint64_t))(v60 + 8))(v44, v61);
  (*(void (**)(char *, uint64_t))(v58 + 8))(v38, v59);
  (*(void (**)(unsigned char *, uint64_t))(v57 + 8))(v52, v39);
  (*(void (**)(char *, uint64_t))(v55 + 8))(v54, v50);
  return v45;
}

uint64_t sub_25A5D4D28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v36 = a6;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v25 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v12 = MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v26 = (char *)&v24 - v13;
  uint64_t v28 = *(void *)(a3 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = a2;
  uint64_t v30 = a3;
  uint64_t v31 = a4;
  uint64_t v32 = a5;
  uint64_t v16 = type metadata accessor for PipeServiceInterface.Message.Key();
  uint64_t v34 = v16;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v35 = WitnessTable;
  LOBYTE(v33[0]) = 0;
  sub_25A622710();
  if (v6)
  {
    uint64_t v18 = sub_25A6227C0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(a1, v18);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v33);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v33);
    (*(void (**)(uint64_t, char *, uint64_t))(v28 + 32))(v36, v15, a3);
    uint64_t v34 = v16;
    uint64_t v35 = WitnessTable;
    LOBYTE(v33[0]) = 1;
    uint64_t v20 = AssociatedTypeWitness;
    swift_getAssociatedConformanceWitness();
    uint64_t v21 = v26;
    sub_25A622710();
    uint64_t v22 = sub_25A6227C0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v22 - 8) + 8))(a1, v22);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v33);
    v33[0] = a2;
    v33[1] = a3;
    v33[2] = a4;
    uint64_t v34 = a5;
    uint64_t v23 = type metadata accessor for PipeServiceInterface.Message();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v25 + 32))(v36 + *(int *)(v23 + 52), v21, v20);
  }
}

unint64_t sub_25A5D5084(char a1)
{
  unint64_t result = 0xD000000000000011;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x654D6D6165727473;
      break;
    case 2:
    case 3:
      return result;
    default:
      unint64_t result = 0x704F6D6165727473;
      break;
  }
  return result;
}

uint64_t sub_25A5D5130@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_25A5D4D28(a1, a2[2], a2[3], a2[4], a2[5], a3);
}

uint64_t sub_25A5D5154(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x263F8D338];

  return MEMORY[0x270F9F940](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_25A5D51C8(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v5 = MEMORY[0x263F8D320];

  return MEMORY[0x270F9DAE8](a1, a2, WitnessTable, v5);
}

uint64_t sub_25A5D5234(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x263F8D320];

  return MEMORY[0x270F9DAF8](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_25A5D52A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x263F8D320];

  return MEMORY[0x270F9DAF0](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_25A5D5314@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_25A5D65C0();
  *a1 = result;
  return result;
}

uint64_t sub_25A5D5354@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_25A5D6840(a1, (uint64_t (*)(void, void, void))sub_25A5D5084, a2);
}

uint64_t sub_25A5D536C(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v5 = MEMORY[0x263F60648];

  return MEMORY[0x270F55C68](a1, a2, WitnessTable, v5);
}

uint64_t sub_25A5D53E0()
{
  return sub_25A622B20();
}

uint64_t sub_25A5D545C(uint64_t a1)
{
  MEMORY[0x270FA5388](a1);
  uint64_t v2 = (char *)&v8 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v3 + 16))(v2);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A42AFC0);
  uint64_t v5 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(v2, 3, v4);
  uint64_t result = 0;
  switch(v5)
  {
    case 1:
      return result;
    case 2:
      uint64_t result = 2;
      break;
    case 3:
      uint64_t result = 3;
      break;
    default:
      uint64_t v7 = sub_25A6227C0();
      (*(void (**)(char *, uint64_t))(*(void *)(v7 - 8) + 8))(v2, v7);
      uint64_t result = 1;
      break;
  }
  return result;
}

uint64_t sub_25A5D55CC(char a1)
{
  if (a1) {
    return 0x6567617373656DLL;
  }
  else {
    return 0x696D697263736964;
  }
}

uint64_t sub_25A5D560C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x263F8D338];

  return MEMORY[0x270F9F940](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_25A5D5680(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v5 = MEMORY[0x263F8D320];

  return MEMORY[0x270F9DAE8](a1, a2, WitnessTable, v5);
}

uint64_t sub_25A5D56EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x263F8D320];

  return MEMORY[0x270F9DAF8](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_25A5D575C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x263F8D320];

  return MEMORY[0x270F9DAF0](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_25A5D57CC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_25A5D5FC4();
  *a1 = result;
  return result;
}

uint64_t sub_25A5D580C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_25A5D629C(a1, (uint64_t (*)(void, void, void))sub_25A5D55CC, a2);
}

uint64_t sub_25A5D5824()
{
  return sub_25A5D55CC(*v0);
}

uint64_t sub_25A5D5834@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4299B8);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_25A6227C0();
  uint64_t v24 = *(void *)(v9 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v9);
  uint64_t v23 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *(void *)(a1 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *(void *)(a1 + 24);
  uint64_t v26 = *(void *)(a1 + 16);
  uint64_t v27 = v15;
  uint64_t v28 = v3;
  uint64_t v16 = type metadata accessor for PipeServiceInterface.OneWayContent.Key();
  type metadata accessor for PipeServiceInterface.OneWayContent.Discriminant();
  uint64_t WitnessTable = swift_getWitnessTable();
  swift_getWitnessTable();
  uint64_t v25 = a2;
  sub_25A6227A0();
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v3, a1);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A42AFC0);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 48))(v14, 3, v18);
  if (!result)
  {
    uint64_t v21 = v23;
    uint64_t v20 = v24;
    (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v23, v14, v9);
    (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v8, v21, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v8, 0, 1, v9);
    uint64_t v30 = v16;
    uint64_t v31 = WitnessTable;
    v29[0] = 1;
    sub_25A622700();
    sub_25A570C60((uint64_t)v8, &qword_26A4299B8);
    (*(void (**)(char *, uint64_t))(v20 + 8))(v21, v9);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
  }
  return result;
}

uint64_t sub_25A5D5B78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v21 = a2;
  uint64_t v4 = type metadata accessor for PipeServiceInterface.OneWayContent();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = &v22[-v6 - 8];
  uint64_t v8 = type metadata accessor for PipeServiceInterface.OneWayContent.Key();
  uint64_t v23 = v8;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v24 = WitnessTable;
  v22[0] = 0;
  type metadata accessor for PipeServiceInterface.OneWayContent.Discriminant();
  swift_getWitnessTable();
  sub_25A622710();
  if (v2)
  {
    uint64_t v10 = sub_25A6227C0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(a1, v10);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
  }
  else
  {
    uint64_t v12 = v21;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
    switch(v25)
    {
      case 1:
        uint64_t v23 = v8;
        uint64_t v24 = WitnessTable;
        v22[0] = 1;
        uint64_t v15 = sub_25A6227C0();
        sub_25A622710();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(a1, v15);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
        uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A42AFC0);
        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v7, 0, 3, v20);
        uint64_t result = (*(uint64_t (**)(uint64_t, unsigned char *, uint64_t))(v5 + 32))(v12, v7, v4);
        break;
      case 2:
        uint64_t v16 = sub_25A6227C0();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(a1, v16);
        uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A42AFC0);
        uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v12, 2, 3, v17);
        break;
      case 3:
        uint64_t v18 = sub_25A6227C0();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(a1, v18);
        uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A42AFC0);
        uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v12, 3, 3, v19);
        break;
      default:
        uint64_t v13 = sub_25A6227C0();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(a1, v13);
        uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A42AFC0);
        uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v12, 1, 3, v14);
        break;
    }
  }
  return result;
}

uint64_t sub_25A5D5FC4()
{
  uint64_t v0 = sub_25A6232B0();
  swift_bridgeObjectRelease();
  if (v0 == 1) {
    unsigned int v1 = 1;
  }
  else {
    unsigned int v1 = 2;
  }
  if (v0) {
    return v1;
  }
  else {
    return 0;
  }
}

uint64_t sub_25A5D6014(char a1)
{
  if (a1) {
    return 0x654D6D6165727473;
  }
  else {
    return 0x7453657461657263;
  }
}

uint64_t sub_25A5D6064@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_25A5D5B78(a1, a2);
}

uint64_t sub_25A5D6084(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x263F8D338];

  return MEMORY[0x270F9F940](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_25A5D60F8(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v5 = MEMORY[0x263F8D320];

  return MEMORY[0x270F9DAE8](a1, a2, WitnessTable, v5);
}

uint64_t sub_25A5D6164(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x263F8D320];

  return MEMORY[0x270F9DAF8](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_25A5D61D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x263F8D320];

  return MEMORY[0x270F9DAF0](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_25A5D6244@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_25A5D5FC4();
  *a1 = result;
  return result;
}

uint64_t sub_25A5D6284@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_25A5D629C(a1, (uint64_t (*)(void, void, void))sub_25A5D6014, a2);
}

uint64_t sub_25A5D629C@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(void, void, void)@<X2>, uint64_t *a3@<X8>)
{
  uint64_t result = a2(*v3, *(void *)(a1 + 16), *(void *)(a1 + 24));
  *a3 = result;
  a3[1] = v6;
  return result;
}

uint64_t sub_25A5D62D8(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v5 = MEMORY[0x263F60648];

  return MEMORY[0x270F55C68](a1, a2, WitnessTable, v5);
}

uint64_t sub_25A5D634C()
{
  return sub_25A622B20();
}

BOOL sub_25A5D63C8(uint64_t a1)
{
  MEMORY[0x270FA5388](a1);
  uint64_t v2 = (char *)&v9 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v3 + 16))(v2);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t AssociatedTypeWitness = sub_25A6227C0();
  }
  else
  {
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    uint64_t v6 = swift_getAssociatedTypeWitness();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    (*(void (**)(char *, uint64_t))(*(void *)(v6 - 8) + 8))(&v2[*(int *)(TupleTypeMetadata2 + 48)], v6);
  }
  (*(void (**)(char *, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8))(v2, AssociatedTypeWitness);
  return EnumCaseMultiPayload == 1;
}

uint64_t sub_25A5D65C0()
{
  unint64_t v0 = sub_25A6232B0();
  swift_bridgeObjectRelease();
  if (v0 >= 4) {
    return 4;
  }
  else {
    return v0;
  }
}

uint64_t sub_25A5D6608(char a1)
{
  return *(void *)&aDiscrimiorigin[8 * a1];
}

uint64_t sub_25A5D6628(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x263F8D338];

  return MEMORY[0x270F9F940](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_25A5D669C(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v5 = MEMORY[0x263F8D320];

  return MEMORY[0x270F9DAE8](a1, a2, WitnessTable, v5);
}

uint64_t sub_25A5D6708(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x263F8D320];

  return MEMORY[0x270F9DAF8](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_25A5D6778(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x263F8D320];

  return MEMORY[0x270F9DAF0](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_25A5D67E8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_25A5D65C0();
  *a1 = result;
  return result;
}

uint64_t sub_25A5D6828@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_25A5D6840(a1, (uint64_t (*)(void, void, void))sub_25A5D6608, a2);
}

uint64_t sub_25A5D6840@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(void, void, void)@<X2>, uint64_t *a3@<X8>)
{
  uint64_t result = a2(*v3, *(void *)(a1 + 16), *(void *)(a1 + 24));
  *a3 = result;
  a3[1] = v6;
  return result;
}

uint64_t sub_25A5D6878()
{
  return sub_25A5D6608(*v0);
}

uint64_t sub_25A5D6884@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v54 = a2;
  uint64_t v4 = sub_25A6227C0();
  uint64_t v51 = *(void *)(v4 - 8);
  uint64_t v52 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v45 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A4299B8);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v50 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)(a1 + 16);
  uint64_t v8 = *(void *)(a1 + 24);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v43 = AssociatedTypeWitness;
  uint64_t v11 = swift_getAssociatedTypeWitness();
  uint64_t v42 = sub_25A623180();
  uint64_t v41 = *(void *)(v42 - 8);
  MEMORY[0x270FA5388](v42);
  uint64_t v39 = (char *)&v37 - v12;
  uint64_t v49 = swift_getAssociatedTypeWitness();
  uint64_t v44 = *(void *)(v49 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v49);
  uint64_t v48 = (char *)&v37 - v14;
  uint64_t v38 = *(void *)(v11 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v47 = (char *)&v37 - v16;
  uint64_t v17 = *(void *)(a1 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v37 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = v9;
  uint64_t v56 = v8;
  uint64_t v57 = v2;
  uint64_t v20 = type metadata accessor for PipeServiceInterface.TwoWayContent.Key();
  type metadata accessor for PipeServiceInterface.TwoWayContent.Discriminant();
  uint64_t WitnessTable = swift_getWitnessTable();
  swift_getWitnessTable();
  uint64_t v53 = v20;
  uint64_t v46 = WitnessTable;
  sub_25A6227A0();
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v19, v2, a1);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v23 = v51;
    uint64_t v22 = v52;
    uint64_t v24 = v45;
    (*(void (**)(char *, char *, uint64_t))(v51 + 32))(v45, v19, v52);
    uint64_t v25 = (uint64_t)v50;
    (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v50, v24, v22);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v23 + 56))(v25, 0, 1, v22);
    uint64_t v59 = v53;
    uint64_t v60 = v46;
    v58[0] = 3;
    sub_25A622700();
    sub_25A570C60(v25, &qword_26A4299B8);
    (*(void (**)(char *, uint64_t))(v23 + 8))(v24, v22);
  }
  else
  {
    uint64_t v26 = v11;
    uint64_t v27 = v49;
    uint64_t v28 = &v19[*(int *)(swift_getTupleTypeMetadata2() + 48)];
    uint64_t v29 = v38;
    uint64_t v30 = v47;
    (*(void (**)(char *, char *, uint64_t))(v38 + 32))(v47, v19, v26);
    uint64_t v31 = v44;
    (*(void (**)(char *, char *, uint64_t))(v44 + 32))(v48, v28, v27);
    uint64_t v32 = v39;
    (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v39, v30, v26);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v29 + 56))(v32, 0, 1, v26);
    uint64_t v33 = v46;
    uint64_t v59 = v53;
    uint64_t v60 = v46;
    v58[0] = 1;
    swift_getAssociatedConformanceWitness();
    sub_25A622700();
    (*(void (**)(char *, uint64_t))(v41 + 8))(v32, v42);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v58);
    uint64_t v34 = (uint64_t)v50;
    uint64_t v35 = v48;
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 56))(v48, v9, v8);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v51 + 56))(v34, 0, 1, v52);
    uint64_t v59 = v53;
    uint64_t v60 = v33;
    v58[0] = 2;
    sub_25A622700();
    sub_25A570C60(v34, &qword_26A4299B8);
    (*(void (**)(char *, uint64_t))(v31 + 8))(v35, v49);
    (*(void (**)(char *, uint64_t))(v29 + 8))(v47, v26);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v58);
}

uint64_t sub_25A5D6FB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v32 = a4;
  uint64_t v33 = sub_25A6227C0();
  uint64_t v7 = *(void *)(v33 - 8);
  MEMORY[0x270FA5388](v33);
  uint64_t v29 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for PipeServiceInterface.TwoWayContent();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v30 = v9;
  uint64_t v31 = v10;
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v26 - v14;
  uint64_t v16 = type metadata accessor for PipeServiceInterface.TwoWayContent.Key();
  uint64_t v36 = v16;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v37 = WitnessTable;
  v35[0] = 0;
  type metadata accessor for PipeServiceInterface.TwoWayContent.Discriminant();
  swift_getWitnessTable();
  uint64_t v18 = v34;
  sub_25A622710();
  if (v18)
  {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v33);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
  }
  else
  {
    uint64_t v27 = v15;
    uint64_t v28 = v7;
    uint64_t v34 = a1;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
    uint64_t v36 = v16;
    uint64_t v37 = WitnessTable;
    if (v38)
    {
      v35[0] = 3;
      uint64_t v20 = v33;
      uint64_t v21 = v34;
      sub_25A622710();
      (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v21, v20);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
    }
    else
    {
      v35[0] = 1;
      swift_getAssociatedTypeWitness();
      swift_getAssociatedConformanceWitness();
      swift_getAssociatedTypeWitness();
      swift_getAssociatedConformanceWitness();
      uint64_t v13 = v27;
      sub_25A622710();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
      uint64_t v36 = v16;
      uint64_t v37 = WitnessTable;
      v35[0] = 2;
      uint64_t v23 = v29;
      uint64_t v24 = v33;
      sub_25A622710();
      swift_getAssociatedTypeWitness();
      swift_getTupleTypeMetadata2();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
      (*(void (**)(char *, uint64_t, uint64_t))(a3 + 64))(v23, a2, a3);
      uint64_t v25 = *(void (**)(uint64_t, uint64_t))(v28 + 8);
      v25(v34, v24);
      v25((uint64_t)v23, v24);
    }
    uint64_t v22 = v30;
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v31 + 32))(v32, v13, v22);
  }
}

uint64_t sub_25A5D751C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_25A5D6FB4(a1, *(void *)(a2 + 16), *(void *)(a2 + 24), a3);
}

uint64_t sub_25A5D753C()
{
  return swift_getWitnessTable();
}

uint64_t sub_25A5D7558(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t type metadata accessor for PipeServiceInterface.Message.Key()
{
  return swift_getGenericMetadata();
}

uint64_t type metadata accessor for PipeServiceInterface.Message()
{
  return swift_getGenericMetadata();
}

uint64_t sub_25A5D75C4()
{
  return sub_25A5D475C(v0[6], v0[2], v0[3], v0[4], v0[5]);
}

uint64_t type metadata accessor for PipeServiceInterface.OneWayContent()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for PipeServiceInterface.OneWayContent.Key()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for PipeServiceInterface.OneWayContent.Discriminant()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_25A5D761C(unsigned char *a1, unsigned char *a2)
{
  *a1 = 0;
  uint64_t v3 = type metadata accessor for PipeServiceInterface.OneWayContent();
  uint64_t result = sub_25A5D545C(v3);
  *a2 = result;
  return result;
}

uint64_t type metadata accessor for PipeServiceInterface.TwoWayContent()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for PipeServiceInterface.TwoWayContent.Key()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for PipeServiceInterface.TwoWayContent.Discriminant()
{
  return __swift_instantiateGenericMetadata();
}

BOOL sub_25A5D76A0(unsigned char *a1, unsigned char *a2)
{
  *a1 = 0;
  uint64_t v3 = type metadata accessor for PipeServiceInterface.TwoWayContent();
  BOOL result = sub_25A5D63C8(v3);
  *a2 = result;
  return result;
}

uint64_t sub_25A5D76E0(uint64_t a1)
{
  return sub_25A5D3DE8(a1, *(uint64_t **)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_25A5D76FC()
{
  return sub_25A5D23AC();
}

uint64_t sub_25A5D7704()
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);

  return MEMORY[0x270FA0238](v0, 64, 7);
}

uint64_t sub_25A5D7744(uint64_t a1)
{
  return sub_25A5D2480(a1, *(void *)(v1 + 16), (void *)(v1 + 24));
}

uint64_t sub_25A5D7750(uint64_t a1)
{
  return sub_25A5D7768(a1);
}

uint64_t sub_25A5D7768(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for PipeEvent.Content();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v22 - v6;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v24 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v9 = MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v23 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v22 - v11;
  uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  uint64_t v25 = a1;
  v13(v7, a1, v4);
  if (swift_getEnumCaseMultiPayload())
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  else
  {
    uint64_t v14 = swift_getAssociatedTypeWitness();
    type metadata accessor for TransportReply();
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    uint64_t v22 = &v7[*(int *)(TupleTypeMetadata3 + 48)];
    uint64_t v16 = (uint64_t)&v7[*(int *)(TupleTypeMetadata3 + 64)];
    uint64_t v17 = v24;
    (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v12, v7, AssociatedTypeWitness);
    sub_25A57E6B8(v16);
    (*(void (**)(char *, uint64_t))(*(void *)(v14 - 8) + 8))(v22, v14);
    (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v23, v12, AssociatedTypeWitness);
    swift_beginAccess();
    sub_25A622F60();
    sub_25A622F40();
    swift_endAccess();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v12, AssociatedTypeWitness);
  }
  uint64_t v18 = (uint64_t *)(v2 + *(void *)(*(void *)v2 + 112));
  uint64_t v19 = v18[3];
  uint64_t v26 = *v18;
  long long v27 = *(_OWORD *)(v18 + 1);
  uint64_t v28 = v19;
  long long v29 = *((_OWORD *)v18 + 2);
  type metadata accessor for PipeServiceInterface();
  swift_getWitnessTable();
  uint64_t v20 = type metadata accessor for TransportSender();
  return sub_25A5D2F28(v25, v20);
}

unsigned char *sub_25A5D7B7C(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *BOOL result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25A5D7C48);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *BOOL result = a2 + 3;
        break;
    }
  }
  return result;
}

unsigned char *sub_25A5D7C70(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *BOOL result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25A5D7D3CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *BOOL result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t sub_25A5D7D64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 40);
}

uint64_t sub_25A5D7D6C()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_getAssociatedTypeWitness();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_25A5D7E50(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 24);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v10 = *(_DWORD *)(v9 + 80);
  uint64_t v11 = v7 + v10;
  uint64_t v12 = (*(unsigned char *)(v6 + 80) | *(unsigned char *)(v9 + 80));
  if (v12 > 7
    || ((*(_DWORD *)(v6 + 80) | *(_DWORD *)(v9 + 80)) & 0x100000) != 0
    || (v11 & (unint64_t)~v10) + *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64) > 0x18)
  {
    uint64_t v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + ((v12 + 16) & ~v12));
    swift_retain();
  }
  else
  {
    uint64_t v16 = AssociatedTypeWitness;
    uint64_t v17 = ~v10;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(a1, a2, v5);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v9 + 16))(((unint64_t)a1 + v11) & v17, ((unint64_t)a2 + v11) & v17, v16);
  }
  return a1;
}

uint64_t sub_25A5D7FD0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(*(void *)(a2 + 24) - 8) + 8;
  (*(void (**)(void))v3)();
  uint64_t v4 = *(void *)(v3 + 56) + a1;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v6 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v7 = *(uint64_t (**)(unint64_t, uint64_t))(v6 + 8);
  uint64_t v8 = AssociatedTypeWitness;
  unint64_t v9 = (v4 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);

  return v7(v9, v8);
}

uint64_t sub_25A5D8098(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 24) - 8) + 16;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 48);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(AssociatedTypeWitness - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 16))((v6 + *(unsigned __int8 *)(v8 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), (v6 + *(unsigned __int8 *)(v8 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), AssociatedTypeWitness);
  return a1;
}

uint64_t sub_25A5D8160(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 24) - 8) + 24;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 40);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(AssociatedTypeWitness - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 24))((v6 + *(unsigned __int8 *)(v8 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), (v6 + *(unsigned __int8 *)(v8 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), AssociatedTypeWitness);
  return a1;
}

uint64_t sub_25A5D8228(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 24) - 8) + 32;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 32);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(AssociatedTypeWitness - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 32))((v6 + *(unsigned __int8 *)(v8 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), (v6 + *(unsigned __int8 *)(v8 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), AssociatedTypeWitness);
  return a1;
}

uint64_t sub_25A5D82F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 24) - 8) + 40;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 24);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(AssociatedTypeWitness - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 40))((v6 + *(unsigned __int8 *)(v8 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), (v6 + *(unsigned __int8 *)(v8 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), AssociatedTypeWitness);
  return a1;
}

uint64_t sub_25A5D83B8(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 24);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int *)(v6 + 84);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = *(void *)(AssociatedTypeWitness - 8);
  unsigned int v10 = *(_DWORD *)(v9 + 84);
  if (v10 <= v7) {
    unsigned int v11 = v7;
  }
  else {
    unsigned int v11 = *(_DWORD *)(v9 + 84);
  }
  uint64_t v12 = *(unsigned __int8 *)(v9 + 80);
  if (!a2) {
    return 0;
  }
  uint64_t v13 = *(void *)(v6 + 64) + v12;
  if (a2 <= v11) {
    goto LABEL_24;
  }
  uint64_t v14 = (v13 & ~v12) + *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  char v15 = 8 * v14;
  if (v14 <= 3)
  {
    unsigned int v17 = ((a2 - v11 + ~(-1 << v15)) >> v15) + 1;
    if (HIWORD(v17))
    {
      int v16 = *(_DWORD *)((char *)a1 + v14);
      if (!v16) {
        goto LABEL_24;
      }
      goto LABEL_14;
    }
    if (v17 > 0xFF)
    {
      int v16 = *(unsigned __int16 *)((char *)a1 + v14);
      if (!*(unsigned __int16 *)((char *)a1 + v14)) {
        goto LABEL_24;
      }
      goto LABEL_14;
    }
    if (v17 < 2)
    {
LABEL_24:
      if (v11)
      {
        if (v7 >= v10)
        {
          uint64_t v23 = *(uint64_t (**)(unsigned __int16 *, uint64_t, uint64_t))(v6 + 48);
          return v23(a1, v7, v5);
        }
        else
        {
          uint64_t v21 = *(uint64_t (**)(unint64_t))(v9 + 48);
          return v21(((unint64_t)a1 + v13) & ~v12);
        }
      }
      return 0;
    }
  }
  int v16 = *((unsigned __int8 *)a1 + v14);
  if (!*((unsigned char *)a1 + v14)) {
    goto LABEL_24;
  }
LABEL_14:
  int v18 = (v16 - 1) << v15;
  if (v14 > 3) {
    int v18 = 0;
  }
  if (v14)
  {
    if (v14 <= 3) {
      int v19 = v14;
    }
    else {
      int v19 = 4;
    }
    switch(v19)
    {
      case 2:
        int v20 = *a1;
        break;
      case 3:
        int v20 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        int v20 = *(_DWORD *)a1;
        break;
      default:
        int v20 = *(unsigned __int8 *)a1;
        break;
    }
  }
  else
  {
    int v20 = 0;
  }
  return v11 + (v20 | v18) + 1;
}

void sub_25A5D864C(unsigned char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7 = *(void *)(a4 + 24);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v24 = v8;
  uint64_t v9 = *(unsigned int *)(v8 + 84);
  uint64_t v10 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v11 = v10;
  unsigned int v12 = *(_DWORD *)(v10 + 84);
  if (v12 <= v9) {
    unsigned int v13 = v9;
  }
  else {
    unsigned int v13 = *(_DWORD *)(v10 + 84);
  }
  uint64_t v14 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v15 = *(void *)(v8 + 64) + v14;
  size_t v16 = (v15 & ~v14) + *(void *)(v10 + 64);
  if (a3 <= v13)
  {
    int v17 = 0;
  }
  else if (v16 <= 3)
  {
    unsigned int v20 = ((a3 - v13 + ~(-1 << (8 * v16))) >> (8 * v16)) + 1;
    if (HIWORD(v20))
    {
      int v17 = 4;
    }
    else if (v20 >= 0x100)
    {
      int v17 = 2;
    }
    else
    {
      int v17 = v20 > 1;
    }
  }
  else
  {
    int v17 = 1;
  }
  if (v13 < a2)
  {
    unsigned int v18 = ~v13 + a2;
    if (v16 < 4)
    {
      int v19 = (v18 >> (8 * v16)) + 1;
      if (v16)
      {
        int v21 = v18 & ~(-1 << (8 * v16));
        bzero(a1, v16);
        if (v16 == 3)
        {
          *(_WORD *)a1 = v21;
          a1[2] = BYTE2(v21);
        }
        else if (v16 == 2)
        {
          *(_WORD *)a1 = v21;
        }
        else
        {
          *a1 = v21;
        }
      }
    }
    else
    {
      bzero(a1, v16);
      *(_DWORD *)a1 = v18;
      int v19 = 1;
    }
    switch(v17)
    {
      case 1:
        a1[v16] = v19;
        return;
      case 2:
        *(_WORD *)&a1[v16] = v19;
        return;
      case 3:
        goto LABEL_41;
      case 4:
        *(_DWORD *)&a1[v16] = v19;
        return;
      default:
        return;
    }
  }
  switch(v17)
  {
    case 1:
      a1[v16] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 2:
      *(_WORD *)&a1[v16] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 3:
LABEL_41:
      __break(1u);
      JUMPOUT(0x25A5D8960);
    case 4:
      *(_DWORD *)&a1[v16] = 0;
      goto LABEL_23;
    default:
LABEL_23:
      if (a2)
      {
LABEL_24:
        if (v9 >= v12)
        {
          uint64_t v23 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v24 + 56);
          v23(a1, a2, v9, v7);
        }
        else
        {
          uint64_t v22 = *(void (**)(unint64_t, uint64_t))(v11 + 56);
          v22((unint64_t)&a1[v15] & ~v14, a2);
        }
      }
      return;
  }
}

uint64_t sub_25A5D8988()
{
  uint64_t result = sub_25A6227C0();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t *sub_25A5D8A00(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A42AFC0);
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 3, v7))
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      uint64_t v10 = sub_25A6227C0();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 3, v7);
    }
  }
  return a1;
}

uint64_t sub_25A5D8B6C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A42AFC0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(a1, 3, v2);
  if (!result)
  {
    uint64_t v4 = sub_25A6227C0();
    int v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
    return v5(a1, v4);
  }
  return result;
}

void *sub_25A5D8C20(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A42AFC0);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 3, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v8 = sub_25A6227C0();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 3, v6);
  }
  return a1;
}

void *sub_25A5D8D50(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A42AFC0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 3, v6);
  int v10 = v8(a2, 3, v6);
  if (!v9)
  {
    if (!v10)
    {
      uint64_t v13 = sub_25A6227C0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 24))(a1, a2, v13);
      return a1;
    }
    sub_25A570C60((uint64_t)a1, &qword_26A42AFC0);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  uint64_t v11 = sub_25A6227C0();
  (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 3, v6);
  return a1;
}

void *sub_25A5D8EFC(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A42AFC0);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 3, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v8 = sub_25A6227C0();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 3, v6);
  }
  return a1;
}

void *sub_25A5D902C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A42AFC0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 3, v6);
  int v10 = v8(a2, 3, v6);
  if (!v9)
  {
    if (!v10)
    {
      uint64_t v13 = sub_25A6227C0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 40))(a1, a2, v13);
      return a1;
    }
    sub_25A570C60((uint64_t)a1, &qword_26A42AFC0);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  uint64_t v11 = sub_25A6227C0();
  (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 32))(a1, a2, v11);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 3, v6);
  return a1;
}

uint64_t sub_25A5D91D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25A5D91EC);
}

uint64_t sub_25A5D91EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A42AFC0);
  unsigned int v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 4) {
    return v5 - 3;
  }
  else {
    return 0;
  }
}

uint64_t sub_25A5D925C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25A5D9270);
}

uint64_t sub_25A5D9270(uint64_t a1, int a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = (a2 + 3);
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A42AFC0);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);

  return v7(a1, v5, a3, v6);
}

uint64_t sub_25A5D92F8(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A42AFC0);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48);

  return v3(a1, 3, v2);
}

uint64_t sub_25A5D9364(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A42AFC0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, 3, v4);
}

uint64_t sub_25A5D93D8()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_getAssociatedTypeWitness();
    if (v2 <= 0x3F)
    {
      swift_getTupleTypeLayout2();
      v4[4] = v4;
      uint64_t result = sub_25A6227C0();
      if (v3 <= 0x3F)
      {
        v4[5] = *(void *)(result - 8) + 64;
        swift_initEnumMetadataMultiPayload();
        return 0;
      }
    }
  }
  return result;
}

void *sub_25A5D9568(void *a1, unsigned __int8 *a2)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t v7 = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(v7 - 8);
  int v9 = *(_DWORD *)(v8 + 80);
  uint64_t v10 = v6 + v9;
  unint64_t v11 = (v10 & ~(unint64_t)v9) + *(void *)(v8 + 64);
  uint64_t v12 = sub_25A6227C0();
  uint64_t v13 = *(void *)(v12 - 8);
  if (*(void *)(v13 + 64) > v11) {
    unint64_t v11 = *(void *)(*(void *)(v12 - 8) + 64);
  }
  uint64_t v14 = (*(unsigned char *)(v5 + 80) | *(unsigned char *)(v13 + 80) | v9);
  if (v14 <= 7
    && v11 + 1 <= 0x18
    && ((*(_DWORD *)(v5 + 80) | *(_DWORD *)(v13 + 80) | v9) & 0x100000) == 0)
  {
    unsigned int v18 = a2[v11];
    unsigned int v19 = v18 - 2;
    if (v18 >= 2)
    {
      if (v11 <= 3) {
        uint64_t v20 = v11;
      }
      else {
        uint64_t v20 = 4;
      }
      switch(v20)
      {
        case 1:
          int v21 = *a2;
          if (v11 >= 4) {
            goto LABEL_25;
          }
          goto LABEL_21;
        case 2:
          int v21 = *(unsigned __int16 *)a2;
          if (v11 >= 4) {
            goto LABEL_25;
          }
          goto LABEL_21;
        case 3:
          int v21 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          if (v11 < 4) {
            goto LABEL_21;
          }
          goto LABEL_25;
        case 4:
          int v21 = *(_DWORD *)a2;
          if (v11 < 4)
          {
LABEL_21:
            unsigned int v18 = (v21 | (v19 << (8 * v11))) + 2;
            break;
          }
LABEL_25:
          if (v21 != -1) {
            goto LABEL_26;
          }
          goto LABEL_23;
        default:
          break;
      }
    }
    if (v18 == 1)
    {
LABEL_23:
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v13 + 16))(a1, a2, v12);
      *((unsigned char *)a1 + v11) = 1;
    }
    else
    {
LABEL_26:
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 16))(((unint64_t)a1 + v10) & ~(unint64_t)v9, (unint64_t)&a2[v10] & ~(unint64_t)v9, v7);
      *((unsigned char *)a1 + v11) = 0;
    }
  }
  else
  {
    uint64_t v17 = *(void *)a2;
    *a1 = *(void *)a2;
    a1 = (void *)(v17 + ((v14 + 16) & ~v14));
    swift_retain();
  }
  return a1;
}

uint64_t sub_25A5D9890(unsigned __int8 *a1)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v3 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  uint64_t v5 = swift_getAssociatedTypeWitness();
  uint64_t v20 = *(void *)(v5 - 8);
  uint64_t v6 = *(unsigned __int8 *)(v20 + 80);
  uint64_t v7 = v4 + v6;
  unint64_t v8 = ((v4 + v6) & ~v6) + *(void *)(v20 + 64);
  uint64_t v9 = sub_25A6227C0();
  uint64_t v10 = *(void *)(v9 - 8);
  unint64_t v11 = *(void *)(v10 + 64);
  if (v11 <= v8) {
    unint64_t v11 = v8;
  }
  unsigned int v12 = a1[v11];
  unsigned int v13 = v12 - 2;
  if (v12 >= 2)
  {
    if (v11 <= 3) {
      uint64_t v14 = v11;
    }
    else {
      uint64_t v14 = 4;
    }
    switch(v14)
    {
      case 1:
        int v15 = *a1;
        goto LABEL_12;
      case 2:
        int v15 = *(unsigned __int16 *)a1;
        goto LABEL_12;
      case 3:
        int v15 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_12;
      case 4:
        int v15 = *(_DWORD *)a1;
LABEL_12:
        int v16 = (v15 | (v13 << (8 * v11))) + 2;
        unsigned int v12 = v15 + 2;
        if (v11 < 4) {
          unsigned int v12 = v16;
        }
        break;
      default:
        break;
    }
  }
  if (v12 == 1)
  {
    uint64_t v17 = *(uint64_t (**)(unsigned __int8 *, uint64_t))(v10 + 8);
    return v17(a1, v9);
  }
  else
  {
    (*(void (**)(unsigned __int8 *, uint64_t, uint64_t))(v3 + 8))(a1, AssociatedTypeWitness, v10);
    unsigned int v19 = *(uint64_t (**)(unint64_t, uint64_t))(v20 + 8);
    return v19((unint64_t)&a1[v7] & ~v6, v5);
  }
}

uint64_t sub_25A5D9B64(uint64_t a1, unsigned __int8 *a2)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t v7 = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = v6 + v9;
  unint64_t v11 = (v10 & ~v9) + *(void *)(v8 + 64);
  uint64_t v12 = sub_25A6227C0();
  if (*(void *)(*(void *)(v12 - 8) + 64) > v11) {
    unint64_t v11 = *(void *)(*(void *)(v12 - 8) + 64);
  }
  unsigned int v13 = a2[v11];
  unsigned int v14 = v13 - 2;
  if (v13 >= 2)
  {
    if (v11 <= 3) {
      uint64_t v15 = v11;
    }
    else {
      uint64_t v15 = 4;
    }
    switch(v15)
    {
      case 1:
        int v16 = *a2;
        goto LABEL_12;
      case 2:
        int v16 = *(unsigned __int16 *)a2;
        goto LABEL_12;
      case 3:
        int v16 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_12;
      case 4:
        int v16 = *(_DWORD *)a2;
LABEL_12:
        int v17 = (v16 | (v14 << (8 * v11))) + 2;
        unsigned int v13 = v16 + 2;
        if (v11 < 4) {
          unsigned int v13 = v17;
        }
        break;
      default:
        break;
    }
  }
  if (v13 == 1)
  {
    (*(void (**)(uint64_t, unsigned __int8 *, uint64_t))(*(void *)(v12 - 8) + 16))(a1, a2, v12);
    char v18 = 1;
  }
  else
  {
    (*(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v8 + 16))((v10 + a1) & ~v9, (unint64_t)&a2[v10] & ~v9, v7);
    char v18 = 0;
  }
  *(unsigned char *)(a1 + v11) = v18;
  return a1;
}

unsigned __int8 *sub_25A5D9E24(unsigned __int8 *a1, unsigned __int8 *a2)
{
  if (a1 != a2)
  {
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    uint64_t v4 = *(void *)(AssociatedTypeWitness - 8);
    uint64_t v5 = *(void *)(v4 + 64);
    uint64_t v6 = swift_getAssociatedTypeWitness();
    uint64_t v7 = *(void *)(v6 - 8);
    uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
    uint64_t v9 = v5 + v8;
    unint64_t v10 = ((v5 + v8) & ~v8) + *(void *)(v7 + 64);
    uint64_t v11 = sub_25A6227C0();
    uint64_t v12 = *(void *)(v11 - 8);
    if (*(void *)(v12 + 64) > v10) {
      unint64_t v10 = *(void *)(*(void *)(v11 - 8) + 64);
    }
    unsigned int v13 = a1[v10];
    unsigned int v14 = v13 - 2;
    if (v13 >= 2)
    {
      if (v10 <= 3) {
        uint64_t v15 = v10;
      }
      else {
        uint64_t v15 = 4;
      }
      switch(v15)
      {
        case 1:
          int v16 = *a1;
          if (v10 < 4) {
            goto LABEL_14;
          }
          goto LABEL_16;
        case 2:
          int v16 = *(unsigned __int16 *)a1;
          if (v10 >= 4) {
            goto LABEL_16;
          }
          goto LABEL_14;
        case 3:
          int v16 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          if (v10 < 4) {
            goto LABEL_14;
          }
          goto LABEL_16;
        case 4:
          int v16 = *(_DWORD *)a1;
          if (v10 < 4) {
LABEL_14:
          }
            unsigned int v13 = (v16 | (v14 << (8 * v10))) + 2;
          else {
LABEL_16:
          }
            unsigned int v13 = v16 + 2;
          break;
        default:
          break;
      }
    }
    uint64_t v17 = ~v8;
    if (v13 == 1)
    {
      (*(void (**)(unsigned __int8 *, uint64_t))(v12 + 8))(a1, v11);
    }
    else
    {
      (*(void (**)(unsigned __int8 *, uint64_t))(v4 + 8))(a1, AssociatedTypeWitness);
      (*(void (**)(unint64_t, uint64_t))(v7 + 8))((unint64_t)&a1[v9] & v17, v6);
    }
    unsigned int v18 = a2[v10];
    unsigned int v19 = v18 - 2;
    if (v18 >= 2)
    {
      if (v10 <= 3) {
        uint64_t v20 = v10;
      }
      else {
        uint64_t v20 = 4;
      }
      switch(v20)
      {
        case 1:
          int v21 = *a2;
          if (v10 >= 4) {
            goto LABEL_34;
          }
          goto LABEL_30;
        case 2:
          int v21 = *(unsigned __int16 *)a2;
          if (v10 >= 4) {
            goto LABEL_34;
          }
          goto LABEL_30;
        case 3:
          int v21 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          if (v10 < 4) {
            goto LABEL_30;
          }
          goto LABEL_34;
        case 4:
          int v21 = *(_DWORD *)a2;
          if (v10 < 4)
          {
LABEL_30:
            unsigned int v18 = (v21 | (v19 << (8 * v10))) + 2;
            break;
          }
LABEL_34:
          if (v21 != -1) {
            goto LABEL_35;
          }
          goto LABEL_32;
        default:
          break;
      }
    }
    if (v18 == 1)
    {
LABEL_32:
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v12 + 16))(a1, a2, v11);
      char v22 = 1;
    }
    else
    {
LABEL_35:
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v4 + 16))(a1, a2, AssociatedTypeWitness);
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v7 + 16))((unint64_t)&a1[v9] & v17, (unint64_t)&a2[v9] & v17, v6);
      char v22 = 0;
    }
    a1[v10] = v22;
  }
  return a1;
}

uint64_t sub_25A5DA210(uint64_t a1, unsigned __int8 *a2)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t v7 = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = v6 + v9;
  unint64_t v11 = (v10 & ~v9) + *(void *)(v8 + 64);
  uint64_t v12 = sub_25A6227C0();
  if (*(void *)(*(void *)(v12 - 8) + 64) > v11) {
    unint64_t v11 = *(void *)(*(void *)(v12 - 8) + 64);
  }
  unsigned int v13 = a2[v11];
  unsigned int v14 = v13 - 2;
  if (v13 >= 2)
  {
    if (v11 <= 3) {
      uint64_t v15 = v11;
    }
    else {
      uint64_t v15 = 4;
    }
    switch(v15)
    {
      case 1:
        int v16 = *a2;
        goto LABEL_12;
      case 2:
        int v16 = *(unsigned __int16 *)a2;
        goto LABEL_12;
      case 3:
        int v16 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_12;
      case 4:
        int v16 = *(_DWORD *)a2;
LABEL_12:
        int v17 = (v16 | (v14 << (8 * v11))) + 2;
        unsigned int v13 = v16 + 2;
        if (v11 < 4) {
          unsigned int v13 = v17;
        }
        break;
      default:
        break;
    }
  }
  if (v13 == 1)
  {
    (*(void (**)(uint64_t, unsigned __int8 *, uint64_t))(*(void *)(v12 - 8) + 32))(a1, a2, v12);
    char v18 = 1;
  }
  else
  {
    (*(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v8 + 32))((v10 + a1) & ~v9, (unint64_t)&a2[v10] & ~v9, v7);
    char v18 = 0;
  }
  *(unsigned char *)(a1 + v11) = v18;
  return a1;
}

unsigned __int8 *sub_25A5DA4D0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  if (a1 != a2)
  {
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    uint64_t v4 = *(void *)(AssociatedTypeWitness - 8);
    uint64_t v5 = *(void *)(v4 + 64);
    uint64_t v6 = swift_getAssociatedTypeWitness();
    uint64_t v7 = *(void *)(v6 - 8);
    uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
    uint64_t v9 = v5 + v8;
    unint64_t v10 = ((v5 + v8) & ~v8) + *(void *)(v7 + 64);
    uint64_t v11 = sub_25A6227C0();
    uint64_t v12 = *(void *)(v11 - 8);
    if (*(void *)(v12 + 64) > v10) {
      unint64_t v10 = *(void *)(*(void *)(v11 - 8) + 64);
    }
    unsigned int v13 = a1[v10];
    unsigned int v14 = v13 - 2;
    if (v13 >= 2)
    {
      if (v10 <= 3) {
        uint64_t v15 = v10;
      }
      else {
        uint64_t v15 = 4;
      }
      switch(v15)
      {
        case 1:
          int v16 = *a1;
          if (v10 < 4) {
            goto LABEL_14;
          }
          goto LABEL_16;
        case 2:
          int v16 = *(unsigned __int16 *)a1;
          if (v10 >= 4) {
            goto LABEL_16;
          }
          goto LABEL_14;
        case 3:
          int v16 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          if (v10 < 4) {
            goto LABEL_14;
          }
          goto LABEL_16;
        case 4:
          int v16 = *(_DWORD *)a1;
          if (v10 < 4) {
LABEL_14:
          }
            unsigned int v13 = (v16 | (v14 << (8 * v10))) + 2;
          else {
LABEL_16:
          }
            unsigned int v13 = v16 + 2;
          break;
        default:
          break;
      }
    }
    uint64_t v17 = ~v8;
    if (v13 == 1)
    {
      (*(void (**)(unsigned __int8 *, uint64_t))(v12 + 8))(a1, v11);
    }
    else
    {
      (*(void (**)(unsigned __int8 *, uint64_t))(v4 + 8))(a1, AssociatedTypeWitness);
      (*(void (**)(unint64_t, uint64_t))(v7 + 8))((unint64_t)&a1[v9] & v17, v6);
    }
    unsigned int v18 = a2[v10];
    unsigned int v19 = v18 - 2;
    if (v18 >= 2)
    {
      if (v10 <= 3) {
        uint64_t v20 = v10;
      }
      else {
        uint64_t v20 = 4;
      }
      switch(v20)
      {
        case 1:
          int v21 = *a2;
          if (v10 >= 4) {
            goto LABEL_34;
          }
          goto LABEL_30;
        case 2:
          int v21 = *(unsigned __int16 *)a2;
          if (v10 >= 4) {
            goto LABEL_34;
          }
          goto LABEL_30;
        case 3:
          int v21 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          if (v10 < 4) {
            goto LABEL_30;
          }
          goto LABEL_34;
        case 4:
          int v21 = *(_DWORD *)a2;
          if (v10 < 4)
          {
LABEL_30:
            unsigned int v18 = (v21 | (v19 << (8 * v10))) + 2;
            break;
          }
LABEL_34:
          if (v21 != -1) {
            goto LABEL_35;
          }
          goto LABEL_32;
        default:
          break;
      }
    }
    if (v18 == 1)
    {
LABEL_32:
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v12 + 32))(a1, a2, v11);
      char v22 = 1;
    }
    else
    {
LABEL_35:
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v4 + 32))(a1, a2, AssociatedTypeWitness);
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v7 + 32))((unint64_t)&a1[v9] & v17, (unint64_t)&a2[v9] & v17, v6);
      char v22 = 0;
    }
    a1[v10] = v22;
  }
  return a1;
}

uint64_t sub_25A5DA8BC(unsigned __int16 *a1, unsigned int a2)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v4 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  uint64_t v5 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unint64_t v6 = ((v4 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)) + *(void *)(v5 + 64);
  unint64_t v7 = *(void *)(*(void *)(sub_25A6227C0() - 8) + 64);
  if (v7 <= v6) {
    unint64_t v8 = v6;
  }
  else {
    unint64_t v8 = v7;
  }
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_23;
  }
  unint64_t v9 = v8 + 1;
  char v10 = 8 * (v8 + 1);
  if ((v8 + 1) <= 3)
  {
    unsigned int v13 = ((a2 + ~(-1 << v10) - 254) >> v10) + 1;
    if (HIWORD(v13))
    {
      int v11 = *(_DWORD *)((char *)a1 + v9);
      if (!v11) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v13 > 0xFF)
    {
      int v11 = *(unsigned __int16 *)((char *)a1 + v9);
      if (!*(unsigned __int16 *)((char *)a1 + v9)) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v13 < 2)
    {
LABEL_23:
      unsigned int v15 = *((unsigned __int8 *)a1 + v8);
      if (v15 >= 2) {
        return (v15 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
  }
  int v11 = *((unsigned __int8 *)a1 + v9);
  if (!*((unsigned char *)a1 + v9)) {
    goto LABEL_23;
  }
LABEL_15:
  int v14 = (v11 - 1) << v10;
  if (v9 > 3) {
    int v14 = 0;
  }
  if (v9)
  {
    if (v9 > 3) {
      LODWORD(v9) = 4;
    }
    switch((int)v9)
    {
      case 2:
        LODWORD(v9) = *a1;
        break;
      case 3:
        LODWORD(v9) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v9) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v9) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return (v9 | v14) + 255;
}

void sub_25A5DAB04(unsigned char *a1, unsigned int a2, unsigned int a3)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v6 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  uint64_t v7 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unint64_t v8 = ((v6 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80)) + *(void *)(v7 + 64);
  unint64_t v9 = *(void *)(*(void *)(sub_25A6227C0() - 8) + 64);
  if (v9 <= v8) {
    unint64_t v9 = v8;
  }
  size_t v10 = v9 + 1;
  if (a3 < 0xFF)
  {
    int v11 = 0;
  }
  else if (v10 <= 3)
  {
    unsigned int v14 = ((a3 + ~(-1 << (8 * v10)) - 254) >> (8 * v10)) + 1;
    if (HIWORD(v14))
    {
      int v11 = 4;
    }
    else if (v14 >= 0x100)
    {
      int v11 = 2;
    }
    else
    {
      int v11 = v14 > 1;
    }
  }
  else
  {
    int v11 = 1;
  }
  if (a2 > 0xFE)
  {
    unsigned int v12 = a2 - 255;
    if (v10 < 4)
    {
      int v13 = (v12 >> (8 * v10)) + 1;
      if (v9 != -1)
      {
        int v15 = v12 & ~(-1 << (8 * v10));
        bzero(a1, v10);
        if (v10 == 3)
        {
          *(_WORD *)a1 = v15;
          a1[2] = BYTE2(v15);
        }
        else if (v10 == 2)
        {
          *(_WORD *)a1 = v15;
        }
        else
        {
          *a1 = v15;
        }
      }
    }
    else
    {
      bzero(a1, v9 + 1);
      *(_DWORD *)a1 = v12;
      int v13 = 1;
    }
    switch(v11)
    {
      case 1:
        a1[v10] = v13;
        break;
      case 2:
        *(_WORD *)&a1[v10] = v13;
        break;
      case 3:
LABEL_34:
        __break(1u);
        JUMPOUT(0x25A5DADC0);
      case 4:
        *(_DWORD *)&a1[v10] = v13;
        break;
      default:
        return;
    }
  }
  else
  {
    switch(v11)
    {
      case 1:
        a1[v10] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      case 2:
        *(_WORD *)&a1[v10] = 0;
        goto LABEL_22;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v10] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      default:
LABEL_22:
        if (a2) {
LABEL_23:
        }
          a1[v9] = -(char)a2;
        break;
    }
  }
}

uint64_t sub_25A5DADE8(unsigned __int8 *a1)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v2 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  uint64_t v3 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unint64_t v4 = ((v2 + *(unsigned __int8 *)(v3 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)) + *(void *)(v3 + 64);
  unint64_t v5 = *(void *)(*(void *)(sub_25A6227C0() - 8) + 64);
  if (v5 <= v4) {
    unint64_t v5 = v4;
  }
  uint64_t result = a1[v5];
  if (result >= 2)
  {
    if (v5 <= 3) {
      uint64_t v7 = v5;
    }
    else {
      uint64_t v7 = 4;
    }
    switch(v7)
    {
      case 1:
        int v8 = *a1;
        goto LABEL_12;
      case 2:
        int v8 = *(unsigned __int16 *)a1;
        goto LABEL_12;
      case 3:
        int v8 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_12;
      case 4:
        int v8 = *(_DWORD *)a1;
LABEL_12:
        unsigned int v9 = (v8 | ((result - 2) << (8 * v5))) + 2;
        unsigned int v10 = v8 + 2;
        if (v5 >= 4) {
          uint64_t result = v10;
        }
        else {
          uint64_t result = v9;
        }
        break;
      default:
        return result;
    }
  }
  return result;
}

void sub_25A5DAFAC(unsigned char *a1, unsigned int a2)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v4 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v5 = v4;
  if (a2 > 1)
  {
    uint64_t v8 = *(void *)(v4 + 64);
    uint64_t v9 = *(void *)(swift_getAssociatedTypeWitness() - 8);
    size_t v10 = ((v8 + *(unsigned __int8 *)(v9 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))
        + *(void *)(v9 + 64);
    size_t v11 = *(void *)(*(void *)(sub_25A6227C0() - 8) + 64);
    if (v11 > v10) {
      size_t v10 = v11;
    }
    unsigned int v12 = a2 - 2;
    if (v10 < 4)
    {
      unsigned int v13 = v12 >> (8 * v10);
      int v14 = v12 & ~(-1 << (8 * v10));
      a1[v10] = v13 + 2;
      bzero(a1, v10);
      if (v10 == 3)
      {
        *(_WORD *)a1 = v14;
        a1[2] = BYTE2(v14);
      }
      else if (v10 == 2)
      {
        *(_WORD *)a1 = v14;
      }
      else
      {
        *a1 = v14;
      }
    }
    else
    {
      a1[v10] = 2;
      bzero(a1, v10);
      *(_DWORD *)a1 = v12;
    }
  }
  else
  {
    uint64_t v6 = *(void *)(swift_getAssociatedTypeWitness() - 8);
    unint64_t v7 = *(void *)(*(void *)(sub_25A6227C0() - 8) + 64);
    if (v7 <= ((*(void *)(v5 + 64) + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))
             + *(void *)(v6 + 64))
      unint64_t v7 = ((*(void *)(v5 + 64) + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))
         + *(void *)(v6 + 64);
    a1[v7] = a2;
  }
}

uint64_t sub_25A5DB22C()
{
  return swift_getWitnessTable();
}

uint64_t sub_25A5DB248()
{
  return swift_getWitnessTable();
}

uint64_t sub_25A5DB264()
{
  return swift_getWitnessTable();
}

uint64_t sub_25A5DB280()
{
  return swift_getWitnessTable();
}

uint64_t sub_25A5DB29C()
{
  return swift_getWitnessTable();
}

uint64_t sub_25A5DB2B8()
{
  return swift_getWitnessTable();
}

uint64_t sub_25A5DB2D4()
{
  return swift_initClassMetadata2();
}

uint64_t sub_25A5DB344(uint64_t a1)
{
  return a1;
}

uint64_t sub_25A5DB370(void *a1)
{
  uint64_t v2 = *v1;
  v18[1] = v1 + 4;
  _OWORD v18[2] = v2;
  uint64_t v3 = v2;
  v18[3] = *a1;
  unsigned int v19 = a1;
  uint64_t v4 = sub_25A622390();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  size_t v10 = (char *)v18 - v9;
  sub_25A622380();
  uint64_t v20 = 0x2068636E617262;
  unint64_t v21 = 0xE700000000000000;
  sub_25A5E3208(&qword_26A42A808);
  sub_25A623350();
  sub_25A622E00();
  swift_bridgeObjectRelease();
  uint64_t v11 = v20;
  uint64_t v12 = v21;
  uint64_t WitnessTable = swift_getWitnessTable();
  int v14 = sub_25A5DC570(v11, v12, v3, WitnessTable);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v8, v10, v4);
  uint64_t v22 = sub_25A5DFEB4((uint64_t)v14);
  uint64_t v23 = v15;
  swift_beginAccess();
  type metadata accessor for Junction();
  uint64_t v16 = (uint64_t)v19;
  swift_getAssociatedTypeWitness();
  sub_25A622F60();
  swift_getTupleTypeMetadata2();
  sub_25A5E3208(&qword_26A42B4E8);
  sub_25A622D50();
  sub_25A622D70();
  swift_endAccess();
  sub_25A5B6AE8((uint64_t)v14, v16);
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v10, v4);
}

uint64_t sub_25A5DB6A4()
{
  uint64_t v1 = v0;
  uint64_t v2 = swift_allocObject();
  sub_25A5DF9F4();
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_25A5DBA64(v1, WitnessTable);
  return v2;
}

void *sub_25A5DB70C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  swift_allocObject();
  swift_retain();
  swift_retain();
  size_t v10 = sub_25A5DCCE0(a1, a2, a3, a4);
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_25A5DBA64(v5, WitnessTable);
  return v10;
}

uint64_t sub_25A5DB7BC@<X0>(void (*a1)(char *, char *)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X6>, uint64_t a6@<X8>)
{
  uint64_t v25 = a5;
  uint64_t v26 = a2;
  uint64_t v28 = a4;
  long long v27 = a1;
  uint64_t v24 = *(void *)(a3 - 8);
  uint64_t v10 = ((uint64_t (*)(void))MEMORY[0x270FA5388])();
  uint64_t v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(void *)(v13 + 16);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = MEMORY[0x270FA5388](v10);
  unsigned int v18 = (char *)&v24 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)&v24 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v21 + 16))(v20, v6);
  uint64_t v22 = 1;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v20, 1, v14) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v18, v20, v14);
    v27(v18, v12);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v14);
    if (v7) {
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v24 + 32))(v25, v12, a3);
    }
    uint64_t v22 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(a6, v22, 1);
}

void *sub_25A5DBA64(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *(void *)(a2 + 8);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for Junction();
  uint64_t v7 = *(void *)(v6 + 8);
  uint64_t v8 = (void *)swift_allocObject();
  void v8[2] = a1;
  uint64_t v8[3] = a2;
  v8[4] = v3;
  uint64_t v9 = (void *)swift_allocObject();
  void v9[2] = a1;
  v9[3] = a2;
  v9[4] = v3;
  uint64_t v10 = swift_unknownObjectRetain();
  uint64_t v11 = sub_25A5B6D34(v10, v7, 0x6B6E757274, 0xE500000000000000, (uint64_t)sub_25A5E31E0, (uint64_t)v8, (uint64_t)sub_25A5E316C, (uint64_t)v9);
  uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(a2 + 24);
  swift_unknownObjectRetain_n();
  uint64_t v13 = swift_retain();
  v12(v13, a1, a2);
  uint64_t v14 = (void *)swift_allocObject();
  void v14[2] = a1;
  void v14[3] = a2;
  v14[4] = v3;
  swift_unknownObjectRetain();
  sub_25A622AA0();
  swift_release();
  return v11;
}

uint64_t sub_25A5DBC84()
{
  return sub_25A622AB0();
}

uint64_t sub_25A5DBD24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v32 = a4;
  uint64_t v30 = a1;
  uint64_t v31 = a3;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v5 = type metadata accessor for PipeEvent.Content();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v24 - v7;
  uint64_t v26 = type metadata accessor for TransportReply();
  MEMORY[0x270FA5388](v26);
  uint64_t v27 = (uint64_t)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v28 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v29 = AssociatedTypeWitness;
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v12 = (char *)&v24 - v11;
  uint64_t v13 = swift_getAssociatedTypeWitness();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v24 - v15;
  uint64_t v17 = v30;
  (*(void (**)(char *))(v6 + 16))(v8);
  if (swift_getEnumCaseMultiPayload())
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    return sub_25A5DC130(v17, v31, v32);
  }
  else
  {
    uint64_t v19 = v14;
    uint64_t v20 = v29;
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    uint64_t v22 = &v8[*(int *)(TupleTypeMetadata3 + 48)];
    uint64_t v25 = &v8[*(int *)(TupleTypeMetadata3 + 64)];
    uint64_t v26 = v19;
    (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v16, v8, v13);
    (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v12, v22, v20);
    uint64_t v23 = v27;
    sub_25A57E714((uint64_t)v25, v27);
    (*(void (**)(uint64_t, uint64_t, char *, char *, uint64_t, uint64_t))(v32 + 80))(v17, a2, v16, v12, v23, v31);
    sub_25A57E6B8(v23);
    (*(void (**)(char *, uint64_t))(v28 + 8))(v12, v29);
    return (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v16, v13);
  }
}

uint64_t sub_25A5DC130(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v9 = (char *)&v13 - v8;
  if ((*(uint64_t (**)(uint64_t, uint64_t))(a3 + 16))(a2, a3))
  {
    sub_25A5B6DB4(a1);
    return swift_release();
  }
  else
  {
    uint64_t v11 = type metadata accessor for PipeEvent();
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1 + *(int *)(v11 + 36), AssociatedTypeWitness);
    type metadata accessor for EndpointInvalidated();
    swift_getWitnessTable();
    swift_allocError();
    sub_25A57EF80((uint64_t)v9, AssociatedTypeWitness, v12);
    return swift_willThrow();
  }
}

uint64_t sub_25A5DC368(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v9 = (char *)&v13 - v8;
  uint64_t v10 = a1 + *(int *)(type metadata accessor for PipeEvent() + 36);
  if ((*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a3 + 40))(v10, a2, a3))
  {
    swift_bridgeObjectRelease();
    sub_25A5B6DB4(a1);
    return swift_release();
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v10, AssociatedTypeWitness);
    type metadata accessor for EndpointInvalidated();
    swift_getWitnessTable();
    swift_allocError();
    sub_25A57EF80((uint64_t)v9, AssociatedTypeWitness, v12);
    return swift_willThrow();
  }
}

void *sub_25A5DC570(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *(void *)(a4 + 8);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for Junction();
  uint64_t v11 = *(void *)(v10 + 8);
  uint64_t v12 = (void *)swift_allocObject();
  v12[2] = a3;
  uint64_t v12[3] = a4;
  long long v12[4] = v5;
  uint64_t v13 = (void *)swift_allocObject();
  void v13[2] = a3;
  v13[3] = a4;
  _OWORD v13[4] = v5;
  uint64_t v14 = swift_unknownObjectRetain();
  uint64_t v15 = sub_25A5B6D34(v14, v11, a1, a2, (uint64_t)sub_25A5E18DC, (uint64_t)v12, (uint64_t)sub_25A5E17DC, (uint64_t)v13);
  swift_unknownObjectRetain_n();
  swift_bridgeObjectRetain();
  return v15;
}

uint64_t sub_25A5DC6C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  swift_getObjectType();
  uint64_t v10 = (void *)swift_allocObject();
  v10[2] = a5;
  v10[3] = a6;
  v10[4] = a4;
  void v10[5] = a3;
  swift_unknownObjectRetain();
  swift_retain();
  sub_25A622AA0();
  return swift_release();
}

uint64_t sub_25A5DC788(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = (*(uint64_t (**)(void))(a3 + 48))();
  if (result)
  {
    uint64_t v7 = result;
    uint64_t v8 = v6;
    uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a3 + 56);
    swift_retain();
    swift_bridgeObjectRetain();
    v9(v7, v8, a2, a3);
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v10 = sub_25A5B7004();
    MEMORY[0x270FA5388](v10);
    swift_getAssociatedConformanceWitness();
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    swift_getAssociatedTypeWitness();
    sub_25A622F60();
    swift_getWitnessTable();
    sub_25A622E40();
    return sub_25A5E1874(v7);
  }
  return result;
}

uint64_t sub_25A5DC98C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v20 = a3;
  uint64_t v21 = a4;
  uint64_t v22 = a2;
  uint64_t v19 = a1;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v4 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v6 = (char *)&v17 - v5;
  uint64_t v7 = type metadata accessor for PipeEvent.Content();
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v17 - v8;
  uint64_t v10 = type metadata accessor for PipeEvent();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v17 - v12;
  swift_storeEnumTagMultiPayload();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v19, AssociatedTypeWitness);
  sub_25A57DA5C((uint64_t)v9, (uint64_t)v6, (uint64_t)v13);
  uint64_t v14 = (void *)swift_allocObject();
  uint64_t v15 = v21;
  void v14[2] = v20;
  void v14[3] = v15;
  v14[4] = v22;
  swift_unknownObjectRetain();
  sub_25A57E560(sub_25A5E18B4);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  return swift_release();
}

void *sub_25A5DCC7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_25A5DCCE0(a1, a2, a3, a4);
}

void *sub_25A5DCCE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_25A622B40();
  swift_allocObject();
  void v4[6] = sub_25A622B30();
  v4[7] = 0;
  type metadata accessor for Junction();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  sub_25A622F60();
  swift_getTupleTypeMetadata2();
  swift_getTupleTypeMetadata2();
  sub_25A622F10();
  v4[8] = sub_25A622D20();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A42A358);
  swift_getTupleTypeMetadata2();
  sub_25A622F10();
  v4[9] = sub_25A622D20();
  void v4[2] = a1;
  v4[3] = a2;
  v4[4] = a3;
  v4[5] = a4;
  return v4;
}

uint64_t sub_25A5DCF1C(uint64_t a1)
{
  uint64_t v2 = *v1;
  uint64_t v13 = *(void *)(*v1 + 88);
  uint64_t v3 = *(void *)(v13 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](a1);
  uint64_t v6 = (char *)&v13 - v5;
  ((void (*)(uint64_t))v1[2])(v4);
  swift_beginAccess();
  uint64_t v7 = v1[8];
  type metadata accessor for Junction();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  sub_25A622F60();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v9 = *(void *)(v2 + 104);
  uint64_t v10 = v13;
  MEMORY[0x26113FDE0](&v14, v6, v7, v13, TupleTypeMetadata2, v9);
  uint64_t v11 = v14;
  swift_endAccess();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v10);
  return v11;
}

uint64_t sub_25A5DD12C(uint64_t a1)
{
  uint64_t v3 = *(void *)(*(void *)v1 + 88);
  type metadata accessor for Junction();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  sub_25A622F60();
  swift_getTupleTypeMetadata2();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v5 = sub_25A623180();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v11 - v7;
  sub_25A5DD38C(a1, (uint64_t)&v11 - v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(TupleTypeMetadata2 - 8) + 48))(v8, 1, TupleTypeMetadata2) == 1)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    return 0;
  }
  else
  {
    uint64_t v9 = *(void *)&v8[*(int *)(TupleTypeMetadata2 + 48)];
    (*(void (**)(char *, uint64_t))(*(void *)(v3 - 8) + 8))(v8, v3);
  }
  return v9;
}

uint64_t sub_25A5DD38C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v17 = a2;
  uint64_t v4 = *v2;
  uint64_t v5 = *(void *)(*v2 + 88);
  uint64_t v6 = *(void *)(*v2 + 80);
  uint64_t v7 = *(void *)(*v2 + 96);
  type metadata accessor for Junction();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  sub_25A622F60();
  swift_getTupleTypeMetadata2();
  swift_getTupleTypeMetadata2();
  uint64_t v16 = sub_25A623180();
  uint64_t v8 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v10 = (char *)&v16 - v9;
  swift_beginAccess();
  uint64_t v38 = v2[8];
  uint64_t v35 = v5;
  uint64_t v11 = *(void *)(v4 + 104);
  uint64_t v36 = v11;
  uint64_t v37 = a1;
  uint64_t v28 = v6;
  uint64_t v29 = v5;
  uint64_t v30 = v7;
  uint64_t v31 = v11;
  uint64_t v32 = sub_25A5E2FCC;
  uint64_t v33 = &v34;
  sub_25A622D50();
  swift_bridgeObjectRetain();
  swift_getWitnessTable();
  sub_25A622E30();
  swift_bridgeObjectRelease();
  uint64_t v26 = v5;
  uint64_t v27 = v11;
  uint64_t v19 = v6;
  uint64_t v20 = v5;
  uint64_t v21 = v7;
  uint64_t v22 = v11;
  uint64_t v23 = sub_25A5E3004;
  uint64_t v24 = &v25;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v13 = v16;
  sub_25A5DB7BC((void (*)(char *, char *))sub_25A5E3074, (uint64_t)v18, MEMORY[0x263F8E628], TupleTypeMetadata2, v14, v17);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v13);
}

uint64_t sub_25A5DD6E4(uint64_t a1, uint64_t (*a2)(uint64_t, void, void))
{
  type metadata accessor for Junction();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  sub_25A622F60();
  swift_getTupleTypeMetadata2();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  return a2(a1, *(void *)(a1 + *(int *)(TupleTypeMetadata2 + 48)), *(void *)(a1 + *(int *)(TupleTypeMetadata2 + 48) + 8)) & 1;
}

uint64_t sub_25A5DD814@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t, uint64_t)@<X1>, uint64_t a3@<X8>)
{
  type metadata accessor for Junction();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  sub_25A622F60();
  swift_getTupleTypeMetadata2();
  uint64_t v6 = (uint64_t *)(a1 + *(int *)(swift_getTupleTypeMetadata2() + 48));
  uint64_t v7 = *v6;
  uint64_t v8 = v6[1];
  uint64_t v9 = (uint64_t *)(a3 + *(int *)(swift_getTupleTypeMetadata2() + 48));
  uint64_t result = a2(a3, a1, v7, v8);
  *uint64_t v9 = result;
  v9[1] = v11;
  return result;
}

uint64_t sub_25A5DD980(uint64_t a1, uint64_t a2)
{
  uint64_t v18 = a2;
  uint64_t v15 = a1;
  uint64_t v3 = *v2;
  uint64_t v4 = *(void *)(*v2 + 88);
  uint64_t v16 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v17 = (char *)v14 - v5;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v9 = (char *)v14 - v8;
  v14[1] = v2 + 8;
  swift_beginAccess();
  uint64_t v10 = v2[8];
  type metadata accessor for Junction();
  sub_25A622F60();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  MEMORY[0x26113FDE0](&v19, v18, v10, v4, TupleTypeMetadata2, *(void *)(v3 + 104));
  uint64_t v12 = v19;
  if (!v19) {
    return swift_endAccess();
  }
  uint64_t v21 = v20;
  swift_endAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v15, AssociatedTypeWitness);
  sub_25A622F40();
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v17, v18, v4);
  uint64_t v19 = v12;
  uint64_t v20 = v21;
  swift_beginAccess();
  sub_25A622D50();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_25A622D70();
  swift_endAccess();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_25A5DDCC0()
{
  return swift_endAccess();
}

uint64_t sub_25A5DDE34(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v61 = a4;
  uint64_t v7 = (void *)*a2;
  uint64_t v8 = (void *)*a2;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A42B4D8);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = ((char *)v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = sub_25A622C70();
  uint64_t v13 = MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)v53 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v16 = v7[11];
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = MEMORY[0x270FA5388](v13);
  uint64_t v21 = (char *)v53 - v20;
  uint64_t v22 = *(void **)a1;
  LODWORD(v20) = *(unsigned __int8 *)(a1 + 8);
  uint64_t v63 = a3;
  if (v20 == 1)
  {
    uint64_t v56 = v19;
    unint64_t v57 = v18;
    id v23 = v22;
    sub_25A622C40();
    id v24 = v22;
    id v25 = v22;
    uint64_t v26 = sub_25A622C60();
    os_log_type_t v27 = sub_25A623130();
    uint64_t v58 = v26;
    if (os_log_type_enabled(v26, v27))
    {
      uint64_t v60 = v21;
      uint64_t v28 = swift_slowAlloc();
      unint64_t v62 = v16;
      uint64_t v29 = (uint8_t *)v28;
      uint64_t v30 = swift_slowAlloc();
      uint64_t v55 = a2;
      uint64_t v31 = (void *)v30;
      uint64_t v59 = v8;
      *(_DWORD *)uint64_t v29 = 138412290;
      id v32 = v22;
      uint64_t v33 = _swift_stdlib_bridgeErrorToNSError();
      uint64_t v66 = v33;
      sub_25A623190();
      *uint64_t v31 = v33;
      uint64_t v21 = v60;
      sub_25A5E178C(v22, 1);
      sub_25A5E178C(v22, 1);
      _os_log_impl(&dword_25A547000, v58, v27, "Branching fork failed to create new branch: %@", v29, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A429D88);
      swift_arrayDestroy();
      MEMORY[0x261140C30](v31, -1, -1);
      char v34 = v29;
      unint64_t v16 = v62;
      MEMORY[0x261140C30](v34, -1, -1);
    }
    else
    {
      sub_25A5E178C(v22, 1);
      sub_25A5E178C(v22, 1);
    }
    uint64_t v50 = v61;

    (*(void (**)(char *, unint64_t))(v56 + 8))(v15, v57);
    uint64_t v66 = *(void *)(v50 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A42A300) + 48));
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A42A3D0);
    sub_25A59C1F0();
    sub_25A622850();
    sub_25A5E178C(v22, 1);
    (*(void (**)(char *, uint64_t, unint64_t))(v17 + 16))(v21, v63, v16);
  }
  else
  {
    uint64_t v66 = 0;
    unint64_t v67 = 0xE000000000000000;
    sub_25A5E1798(v22, 0);
    sub_25A622E00();
    sub_25A623380();
    uint64_t v35 = v66;
    uint64_t v36 = v67;
    uint64_t v60 = v21;
    unint64_t v62 = v16;
    uint64_t v37 = v8[10];
    uint64_t v38 = v8[12];
    uint64_t v55 = (void *)v8[13];
    uint64_t v66 = v37;
    unint64_t v67 = v62;
    uint64_t v68 = v38;
    uint64_t v69 = v55;
    uint64_t v39 = type metadata accessor for BranchingFork();
    uint64_t v59 = v8;
    uint64_t v40 = v39;
    uint64_t WitnessTable = swift_getWitnessTable();
    uint64_t v58 = v11;
    uint64_t v42 = sub_25A5DC570(v35, v36, v40, WitnessTable);
    uint64_t v54 = v42;
    swift_bridgeObjectRelease();
    uint64_t v43 = sub_25A5DFEB4((uint64_t)v42);
    uint64_t v45 = v44;
    uint64_t v56 = *(void *)(v17 + 16);
    unint64_t v57 = (v17 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    ((void (*)(char *, uint64_t, unint64_t))v56)(v60, v63, v62);
    uint64_t v64 = v43;
    uint64_t v65 = v45;
    v53[0] = v45;
    v53[1] = v43;
    swift_beginAccess();
    type metadata accessor for Junction();
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    uint64_t v11 = v58;
    swift_getAssociatedTypeWitness();
    sub_25A622F60();
    swift_retain();
    swift_bridgeObjectRetain();
    unint64_t v46 = v62;
    uint64_t v47 = v60;
    swift_getTupleTypeMetadata2();
    sub_25A622D50();
    sub_25A622D70();
    swift_endAccess();
    sub_25A5B6AE8((uint64_t)v54, (uint64_t)v22);
    uint64_t v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A42A300);
    uint64_t v66 = *(void *)(v61 + *(int *)(v48 + 48));
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A42A3D0);
    sub_25A59C1F0();
    sub_25A622860();
    swift_release();
    uint64_t v49 = v63;
    swift_bridgeObjectRelease();
    swift_release();
    sub_25A5E178C(v22, 0);
    ((void (*)(char *, uint64_t, unint64_t))v56)(v47, v49, v46);
  }
  uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A42A358);
  (*(void (**)(NSObject *, uint64_t, uint64_t, uint64_t))(*(void *)(v51 - 8) + 56))(v11, 1, 1, v51);
  swift_beginAccess();
  sub_25A622D50();
  sub_25A622D70();
  return swift_endAccess();
}

void sub_25A5DE570(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v38 = a5;
  uint64_t v39 = a6;
  uint64_t v37 = (char *)a4;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A429D78);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (NSObject **)((char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = sub_25A622C10();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_25A622C70();
  uint64_t v16 = MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v33 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(unsigned char *)(a1 + 8) == 1)
  {
    uint64_t v34 = v17;
    uint64_t v35 = v16;
    uint64_t v37 = v14;
    uint64_t v38 = v12;
    uint64_t v36 = v11;
    id v20 = *(id *)a1;
    id v21 = *(id *)a1;
    sub_25A622C40();
    id v22 = v20;
    id v23 = v20;
    id v24 = sub_25A622C60();
    os_log_type_t v25 = sub_25A623130();
    if (os_log_type_enabled(v24, v25))
    {
      uint64_t v33 = v24;
      uint64_t v26 = (uint8_t *)swift_slowAlloc();
      os_log_type_t v27 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v26 = 138412290;
      id v28 = v20;
      uint64_t v29 = _swift_stdlib_bridgeErrorToNSError();
      uint64_t v40 = v29;
      sub_25A623190();
      *os_log_type_t v27 = v29;
      id v24 = v33;
      sub_25A5E16FC(v20, 1);
      sub_25A5E16FC(v20, 1);
      _os_log_impl(&dword_25A547000, v24, v25, "Fork failed to create new branch: %@", v26, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A429D88);
      swift_arrayDestroy();
      MEMORY[0x261140C30](v27, -1, -1);
      MEMORY[0x261140C30](v26, -1, -1);
    }
    else
    {
      sub_25A5E16FC(v20, 1);
      sub_25A5E16FC(v20, 1);
    }
    uint64_t v30 = v38;
    uint64_t v31 = (uint64_t)v37;

    (*(void (**)(char *, uint64_t))(v34 + 8))(v19, v35);
    sub_25A622C20();
    *uint64_t v10 = v20;
    swift_storeEnumTagMultiPayload();
    id v32 = v20;
    __swift_instantiateConcreteTypeFromMangledName(qword_26A429C58);
    sub_25A622640();
    sub_25A570C60((uint64_t)v10, &qword_26A429D78);
    (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v31, v36);
    sub_25A5E16FC(v20, 1);
  }
  else
  {
    sub_25A5DD980(a3, (uint64_t)v37);
    type metadata accessor for PipeEvent();
    sub_25A57E560(sub_25A5E1708);
  }
}

uint64_t sub_25A5DE9AC()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_25A5DE9F4()
{
  sub_25A5DE9AC();

  return MEMORY[0x270FA0228](v0, 80, 7);
}

uint64_t type metadata accessor for BranchingFork()
{
  return swift_getGenericMetadata();
}

uint64_t sub_25A5DEA40()
{
  return swift_initClassMetadata2();
}

uint64_t sub_25A5DEAA0()
{
  return swift_retain();
}

uint64_t sub_25A5DEAA8(uint64_t a1)
{
  *(void *)(v1 + 56) = a1;
  return swift_release();
}

uint64_t sub_25A5DEAC8(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_25A5DFF98(a1, a2, a4);
}

uint64_t sub_25A5DEAE4()
{
  return swift_retain();
}

uint64_t sub_25A5DEAF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270F55B80](a1, a2, a3, WitnessTable);
}

uint64_t sub_25A5DEB5C()
{
  uint64_t v0 = swift_allocObject();
  sub_25A5DF9F4();
  return v0;
}

uint64_t sub_25A5DEB94(uint64_t a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A42B4E0);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_25A622390();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v18 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t v9 = *(void *)(v1 + 40);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  MEMORY[0x26113FDE0](a1, v9, AssociatedTypeWitness, v6, AssociatedConformanceWitness);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_25A570C60((uint64_t)v5, &qword_26A42B4E0);
    swift_endAccess();
    return 0;
  }
  else
  {
    uint64_t v13 = v18;
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v18, v5, v6);
    swift_endAccess();
    swift_beginAccess();
    uint64_t v14 = *(void *)(v1 + 32);
    type metadata accessor for Junction();
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    swift_getAssociatedTypeWitness();
    sub_25A622F60();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    uint64_t v16 = sub_25A5E3208(&qword_26A42B4E8);
    MEMORY[0x26113FDE0](&v19, v13, v14, v6, TupleTypeMetadata2, v16);
    uint64_t v12 = v19;
    swift_endAccess();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
  }
  return v12;
}

uint64_t sub_25A5DEEDC(uint64_t a1)
{
  uint64_t v2 = sub_25A622390();
  type metadata accessor for Junction();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  sub_25A622F60();
  swift_getTupleTypeMetadata2();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v4 = sub_25A623180();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v10 - v6;
  sub_25A5DF134(a1, (uint64_t)&v10 - v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(TupleTypeMetadata2 - 8) + 48))(v7, 1, TupleTypeMetadata2) == 1)
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return 0;
  }
  else
  {
    uint64_t v8 = *(void *)&v7[*(int *)(TupleTypeMetadata2 + 48)];
    (*(void (**)(char *, uint64_t))(*(void *)(v2 - 8) + 8))(v7, v2);
  }
  return v8;
}

uint64_t sub_25A5DF134@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *v2;
  sub_25A622390();
  uint64_t v6 = *(void *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 88);
  type metadata accessor for Junction();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  sub_25A622F60();
  swift_getTupleTypeMetadata2();
  swift_getTupleTypeMetadata2();
  uint64_t v8 = sub_25A623180();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = &v15[-v10];
  swift_beginAccess();
  uint64_t v24 = v2[4];
  uint64_t v20 = v6;
  uint64_t v21 = v7;
  id v22 = sub_25A5E309C;
  uint64_t v23 = a1;
  sub_25A5E3208(&qword_26A42B4E8);
  sub_25A622D50();
  swift_bridgeObjectRetain();
  swift_getWitnessTable();
  sub_25A622E30();
  swift_bridgeObjectRelease();
  uint64_t v16 = v6;
  uint64_t v17 = v7;
  uint64_t v18 = sub_25A5E30CC;
  uint64_t v19 = 0;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  sub_25A5DB7BC((void (*)(char *, char *))sub_25A5E30D0, (uint64_t)v15, MEMORY[0x263F8E628], TupleTypeMetadata2, v13, a2);
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_25A5DF43C()
{
  return swift_endAccess();
}

uint64_t sub_25A5DF63C(uint64_t a1, uint64_t (*a2)(uint64_t, void, void))
{
  sub_25A622390();
  type metadata accessor for Junction();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  sub_25A622F60();
  swift_getTupleTypeMetadata2();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  return a2(a1, *(void *)(a1 + *(int *)(TupleTypeMetadata2 + 48)), *(void *)(a1 + *(int *)(TupleTypeMetadata2 + 48) + 8)) & 1;
}

uint64_t sub_25A5DF774(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_25A622390();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  swift_retain();
  swift_bridgeObjectRetain();
  return a3;
}

uint64_t sub_25A5DF7FC@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t, uint64_t)@<X1>, uint64_t a3@<X8>)
{
  sub_25A622390();
  type metadata accessor for Junction();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  sub_25A622F60();
  swift_getTupleTypeMetadata2();
  uint64_t v6 = (uint64_t *)(a1 + *(int *)(swift_getTupleTypeMetadata2() + 48));
  uint64_t v7 = *v6;
  uint64_t v8 = v6[1];
  uint64_t v9 = (uint64_t *)(a3 + *(int *)(swift_getTupleTypeMetadata2() + 48));
  uint64_t result = a2(a3, a1, v7, v8);
  *uint64_t v9 = result;
  v9[1] = v11;
  return result;
}

uint64_t sub_25A5DF970()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_25A5DF9A8()
{
  sub_25A5DF970();

  return MEMORY[0x270FA0228](v0, 48, 7);
}

uint64_t type metadata accessor for MergingFork()
{
  return __swift_instantiateGenericMetadata();
}

void *sub_25A5DF9F4()
{
  sub_25A622B40();
  swift_allocObject();
  v0[2] = sub_25A622B30();
  v0[3] = 0;
  sub_25A622390();
  type metadata accessor for Junction();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  sub_25A622F60();
  swift_getTupleTypeMetadata2();
  sub_25A5E3208(&qword_26A42B4E8);
  v0[4] = sub_25A622CE0();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v0[5] = sub_25A622CE0();
  return v0;
}

uint64_t sub_25A5DFBF4()
{
  return swift_retain();
}

uint64_t sub_25A5DFBFC(uint64_t a1)
{
  *(void *)(v1 + 24) = a1;
  return swift_release();
}

void sub_25A5DFC1C(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
}

uint64_t sub_25A5DFC38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270F55B80](a1, a2, a3, WitnessTable);
}

uint64_t sub_25A5DFCA4(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_25A5DFCE0(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_25A5DFD1C(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_25A5DFD58()
{
  return swift_getWitnessTable();
}

uint64_t sub_25A5DFD74(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_25A5DFDB0(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_25A5DFDEC(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_25A5DFE28()
{
  return swift_getWitnessTable();
}

uint64_t sub_25A5DFE44(uint64_t a1, uint64_t a2)
{
  if (swift_isClassType()) {
    uint64_t v3 = a2;
  }
  else {
    uint64_t v3 = 0;
  }
  if (v3)
  {
    return __swift_instantiateConcreteTypeFromMangledName(&qword_26A42B4F0);
  }
  else
  {
    return sub_25A623360();
  }
}

uint64_t sub_25A5DFEB4(uint64_t a1)
{
  return a1;
}

uint64_t sub_25A5DFF98(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v104 = a3;
  uint64_t v121 = a2;
  unint64_t v127 = a1;
  uint64_t v113 = *(void *)v3;
  uint64_t v5 = v113;
  uint64_t v6 = type metadata accessor for TransportReply();
  uint64_t v105 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v106 = v7;
  uint64_t v117 = (uint64_t)v86 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v123 = *(void *)(v113 + 80);
  uint64_t v8 = *(void *)(v113 + 96);
  uint64_t v125 = type metadata accessor for PipeEvent();
  uint64_t v107 = *(void *)(v125 - 8);
  uint64_t v103 = *(void *)(v107 + 64);
  MEMORY[0x270FA5388](v125);
  uint64_t v116 = (char *)v86 - v9;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v102 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v101 = *(void *)(v102 + 64);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v115 = (char *)v86 - v10;
  type metadata accessor for Junction();
  uint64_t v93 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A429388);
  uint64_t v98 = sub_25A6226F0();
  uint64_t v97 = *(void *)(v98 - 8);
  MEMORY[0x270FA5388](v98);
  uint64_t v108 = (char *)v86 - v11;
  uint64_t v110 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A42A300);
  uint64_t v95 = *(void *)(v110 - 8);
  uint64_t v12 = *(void *)(v95 + 64);
  uint64_t v13 = MEMORY[0x270FA5388](v110);
  uint64_t v96 = (char *)v86 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v112 = (uint64_t)v86 - v14;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A42B4D8);
  uint64_t v16 = MEMORY[0x270FA5388](v15 - 8);
  uint64_t v94 = (char *)v86 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v100 = (void (*)(char *, uint64_t, uint64_t))((char *)v86 - v18);
  uint64_t v122 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A42A358);
  uint64_t v119 = *(void *)(v122 - 8);
  uint64_t v19 = MEMORY[0x270FA5388](v122);
  uint64_t v114 = (char *)v86 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  uint64_t v118 = (char *)v86 - v22;
  uint64_t v23 = *(void *)(v5 + 88);
  uint64_t v120 = *(void *)(v23 - 8);
  uint64_t v24 = *(void *)(v120 + 64);
  uint64_t v25 = MEMORY[0x270FA5388](v21);
  MEMORY[0x270FA5388](v25);
  os_log_type_t v27 = (char *)v86 - v26;
  (*(void (**)(unint64_t))(v3 + 16))(v127 + *(int *)(v125 + 36));
  swift_beginAccess();
  uint64_t v28 = *(void *)(v3 + 64);
  uint64_t v111 = v8;
  type metadata accessor for Junction();
  sub_25A622F60();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v30 = *(void *)(v5 + 104);
  MEMORY[0x26113FDE0](&v126, v27, v28, v23, TupleTypeMetadata2, v30);
  uint64_t v31 = v126;
  swift_endAccess();
  sub_25A5E1874(v31);
  if (v31)
  {
    sub_25A5DD980(v121, (uint64_t)v27);
    uint64_t v32 = v113;
    uint64_t WitnessTable = swift_getWitnessTable();
    sub_25A5DC368(v127, v32, WitnessTable);
    return (*(uint64_t (**)(char *, uint64_t))(v120 + 8))(v27, v23);
  }
  else
  {
    uint64_t v35 = v110;
    uint64_t v89 = v12;
    uint64_t v91 = v24;
    uint64_t v109 = (char *)v86 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
    swift_beginAccess();
    uint64_t v36 = *(void *)(v4 + 72);
    uint64_t v37 = (uint64_t)v100;
    uint64_t v38 = v30;
    uint64_t v39 = v122;
    uint64_t v113 = v38;
    MEMORY[0x26113FDE0](v27, v36, v23, v122);
    int v40 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v119 + 48))(v37, 1, v39);
    uint64_t v41 = v120;
    uint64_t v42 = v118;
    uint64_t v90 = v23;
    uint64_t v92 = v4;
    uint64_t v99 = v27;
    if (v40 == 1)
    {
      sub_25A570C60(v37, &qword_26A42B4D8);
      swift_endAccess();
      uint64_t v43 = *(int *)(v35 + 48);
      uint64_t v44 = v112;
      uint64_t v93 = sub_25A6226C0();
      *(void *)(v44 + v43) = v93;
      uint64_t v45 = *(void (**)(char *, char *, uint64_t))(v41 + 16);
      v86[1] = v41 + 16;
      uint64_t v87 = v45;
      v45(v109, v27, v23);
      uint64_t v46 = v119;
      uint64_t v100 = *(void (**)(char *, uint64_t, uint64_t))(v119 + 16);
      unint64_t v88 = (v119 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
      uint64_t v47 = (uint64_t)v96;
      uint64_t v48 = v44;
      uint64_t v49 = v122;
      v100(v96, v48, v122);
      uint64_t v50 = *(void (**)(char *, uint64_t, uint64_t))(v46 + 32);
      uint64_t v51 = v94;
      v50(v94, v47, v49);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v46 + 56))(v51, 0, 1, v49);
      swift_beginAccess();
      sub_25A622D50();
      swift_retain();
      uint64_t v52 = v109;
      sub_25A622D70();
      swift_endAccess();
      uint64_t v53 = v112;
      uint64_t v54 = (void (*)(uint64_t, uint64_t, uint64_t))v100;
      v100((char *)v47, v112, v49);
      v50(v118, v47, v49);
      (*(void (**)(uint64_t, char *))(v92 + 32))(v121, v99);
      uint64_t v55 = v52;
      uint64_t v56 = v90;
      v87(v55, v99, v90);
      uint64_t v57 = *(int *)(v110 + 48);
      v54(v47, v53, v49);
      os_log_type_t v27 = v99;
      uint64_t v41 = v120;
      *(void *)(v47 + v57) = v93;
      unint64_t v58 = (*(unsigned __int8 *)(v41 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80);
      unint64_t v59 = (v91 + *(unsigned __int8 *)(v95 + 80) + v58) & ~(unint64_t)*(unsigned __int8 *)(v95 + 80);
      uint64_t v60 = (void *)swift_allocObject();
      uint64_t v61 = v92;
      unint64_t v62 = v118;
      uint64_t v63 = v60;
      v60[2] = v123;
      v60[3] = v56;
      uint64_t v64 = v113;
      v60[4] = v111;
      _OWORD v60[5] = v64;
      v60[6] = v61;
      uint64_t v65 = v109;
      (*(void (**)(char *))(v41 + 32))((char *)v60 + v58);
      sub_25A5E0F00(v47, (uint64_t)v63 + v59);
      swift_retain();
      uint64_t v66 = v98;
      unint64_t v67 = v108;
      sub_25A622690();
      uint64_t v68 = v121;
      swift_release();
      (*(void (**)(char *, uint64_t))(v97 + 8))(v67, v66);
      sub_25A570C60(v112, &qword_26A42A300);
      uint64_t v69 = v117;
      uint64_t v70 = v125;
      v100(v114, (uint64_t)v62, v122);
    }
    else
    {
      uint64_t v71 = v119;
      (*(void (**)(char *, uint64_t, uint64_t))(v119 + 32))(v118, v37, v122);
      swift_endAccess();
      uint64_t v72 = v42;
      uint64_t v69 = v117;
      uint64_t v70 = v125;
      uint64_t v68 = v121;
      uint64_t v65 = v109;
      (*(void (**)(char *, char *, uint64_t))(v71 + 16))(v114, v72, v122);
    }
    uint64_t v73 = v102;
    (*(void (**)(char *, uint64_t, uint64_t))(v102 + 16))(v115, v68, AssociatedTypeWitness);
    uint64_t v74 = v90;
    (*(void (**)(char *, char *))(v41 + 16))(v65, v27);
    uint64_t v75 = v107;
    (*(void (**)(char *, unint64_t, uint64_t))(v107 + 16))(v116, v127, v70);
    sub_25A5851D4(v104, v69);
    unint64_t v76 = (*(unsigned __int8 *)(v73 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v73 + 80);
    unint64_t v77 = (v101 + *(unsigned __int8 *)(v41 + 80) + v76) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80);
    unint64_t v78 = (v91 + *(unsigned __int8 *)(v75 + 80) + v77) & ~(unint64_t)*(unsigned __int8 *)(v75 + 80);
    unint64_t v127 = (v103 + *(unsigned __int8 *)(v105 + 80) + v78) & ~(unint64_t)*(unsigned __int8 *)(v105 + 80);
    uint64_t v79 = (char *)swift_allocObject();
    uint64_t v80 = AssociatedTypeWitness;
    *((void *)v79 + 2) = v123;
    *((void *)v79 + 3) = v74;
    uint64_t v81 = v74;
    uint64_t v82 = v113;
    *((void *)v79 + 4) = v111;
    *((void *)v79 + 5) = v82;
    *((void *)v79 + 6) = v92;
    (*(void (**)(char *, char *, uint64_t))(v73 + 32))(&v79[v76], v115, v80);
    (*(void (**)(char *, char *, uint64_t))(v41 + 32))(&v79[v77], v109, v74);
    (*(void (**)(char *, char *, uint64_t))(v75 + 32))(&v79[v78], v116, v125);
    sub_25A57E714(v117, (uint64_t)&v79[v127]);
    swift_retain();
    uint64_t v83 = v122;
    uint64_t v84 = v114;
    sub_25A622690();
    swift_release();
    uint64_t v85 = *(void (**)(char *, uint64_t))(v119 + 8);
    v85(v84, v83);
    v85(v118, v83);
    return (*(uint64_t (**)(char *, uint64_t))(v41 + 8))(v99, v81);
  }
}

uint64_t sub_25A5E0D84()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 56) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t v6 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A42A300) - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = (v4 + v5 + v7) & ~v7;
  uint64_t v9 = v8 + *(void *)(v6 + 64);
  uint64_t v10 = v3 | v7 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A42A358);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v0 + v8, v11);
  swift_release();

  return MEMORY[0x270FA0238](v0, v9, v10);
}

uint64_t sub_25A5E0F00(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A42A300);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_25A5E0F68(uint64_t a1)
{
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)(*(void *)(v1 + 24) - 8) + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(v1 + 24) - 8) + 80);
  uint64_t v4 = *(void *)(*(void *)(*(void *)(v1 + 24) - 8) + 64);
  uint64_t v5 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A42A300) - 8);
  uint64_t v6 = *(void **)(v1 + 48);
  uint64_t v7 = v1 + ((v3 + v4 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return sub_25A5DDE34(a1, v6, v1 + v3, v7);
}

uint64_t sub_25A5E1040()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v27 = v1;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v3 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v34 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v4 = (v34 + 56) & ~v34;
  uint64_t v5 = *(void *)(v1 - 8);
  uint64_t v33 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v6 = (v4 + *(void *)(v3 + 64) + v33) & ~v33;
  uint64_t v7 = *(void *)(v5 + 64);
  uint64_t v8 = type metadata accessor for PipeEvent();
  uint64_t v31 = *(unsigned __int8 *)(*(void *)(v8 - 8) + 80);
  uint64_t v32 = v8;
  uint64_t v9 = (v6 + v7 + v31) & ~v31;
  uint64_t v30 = *(void *)(*(void *)(v8 - 8) + 64);
  uint64_t v26 = type metadata accessor for TransportReply();
  uint64_t v10 = *(void *)(v26 - 8);
  uint64_t v29 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v28 = *(void *)(v10 + 64);
  swift_release();
  uint64_t v11 = v0 + v4;
  uint64_t v12 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v12(v11, AssociatedTypeWitness);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v0 + v6, v27);
  uint64_t v13 = v9;
  uint64_t v14 = v0 + v9;
  type metadata accessor for PipeEvent.Content();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v19 = sub_25A6227C0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v19 - 8) + 8))(v14, v19);
    uint64_t v18 = v14 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A429D80) + 48);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v18, 1, v26)) {
      goto LABEL_6;
    }
  }
  else
  {
    if (EnumCaseMultiPayload) {
      goto LABEL_6;
    }
    v12(v14, AssociatedTypeWitness);
    uint64_t v16 = swift_getAssociatedTypeWitness();
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v14 + *(int *)(TupleTypeMetadata3 + 48), v16);
    uint64_t v18 = v14 + *(int *)(TupleTypeMetadata3 + 64);
  }
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(qword_26A429C58);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8))(v18, v20);
LABEL_6:
  uint64_t v21 = (v13 + v30 + v29) & ~v29;
  uint64_t v22 = v14 + *(int *)(v32 + 36);
  uint64_t v23 = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v23 - 8) + 8))(v22, v23);
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(qword_26A429C58);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v24 - 8) + 8))(v0 + v21, v24);

  return MEMORY[0x270FA0238](v0, v21 + v28, v34 | v33 | v31 | v29 | 7);
}

void sub_25A5E1500(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 24);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v4 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v6 = (v5 + *(void *)(v4 + 64) + *(unsigned __int8 *)(*(void *)(v3 - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v3 - 8) + 80);
  uint64_t v7 = *(void *)(*(void *)(v3 - 8) + 64);
  uint64_t v8 = *(void *)(type metadata accessor for PipeEvent() - 8);
  unint64_t v9 = (v6 + v7 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = *(void *)(v8 + 64);
  uint64_t v11 = *(void *)(type metadata accessor for TransportReply() - 8);
  uint64_t v12 = *(void *)(v1 + 48);
  uint64_t v13 = v1 + ((v9 + v10 + *(unsigned __int8 *)(v11 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));

  sub_25A5DE570(a1, v12, v1 + v5, v1 + v6, v1 + v9, v13);
}

void sub_25A5E16FC(id a1, char a2)
{
  if (a2) {
}
  }

uint64_t sub_25A5E1708(uint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t WitnessTable = swift_getWitnessTable();
  return sub_25A5DC368(a1, v3, WitnessTable);
}

void sub_25A5E178C(id a1, char a2)
{
  if (a2) {

  }
  else {
    swift_release();
  }
}

id sub_25A5E1798(id a1, char a2)
{
  if (a2) {
    return a1;
  }
  else {
    return (id)swift_retain();
  }
}

uint64_t sub_25A5E17A4()
{
  swift_unknownObjectRelease();

  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_25A5E17DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_25A5DC6C4(a1, a2, a3, v3[4], v3[2], v3[3]);
}

uint64_t sub_25A5E17E8()
{
  swift_unknownObjectRelease();
  swift_release();

  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_25A5E1828()
{
  return sub_25A5DC788(v0[5], v0[2], v0[3]);
}

uint64_t sub_25A5E1854(uint64_t a1)
{
  return sub_25A5DC98C(a1, v1[4], v1[2], v1[3]);
}

uint64_t sub_25A5E1874(uint64_t result)
{
  if (result)
  {
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_25A5E18B4(uint64_t a1)
{
  return sub_25A5DC130(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_25A5E18DC(uint64_t a1, uint64_t a2)
{
  return sub_25A5DBD24(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_25A5E1904(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v29 = a3;
  uint64_t v30 = a1;
  swift_getAssociatedTypeWitness();
  uint64_t v28 = a2;
  swift_getAssociatedConformanceWitness();
  uint64_t v4 = type metadata accessor for PipeEvent.Content();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v24 - v6;
  uint64_t v25 = type metadata accessor for TransportReply();
  MEMORY[0x270FA5388](v25);
  unint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v26 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v27 = AssociatedTypeWitness;
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v12 = (char *)&v24 - v11;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v13 = v30;
  uint64_t v14 = swift_getAssociatedTypeWitness();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v24 - v16;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v13, v4);
  if (swift_getEnumCaseMultiPayload())
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return sub_25A5DC368(v13, v28, v29);
  }
  else
  {
    uint64_t v19 = v27;
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    uint64_t v21 = &v7[*(int *)(TupleTypeMetadata3 + 48)];
    uint64_t v22 = (uint64_t)&v7[*(int *)(TupleTypeMetadata3 + 64)];
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v17, v7, v14);
    uint64_t v23 = v26;
    (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v12, v21, v19);
    sub_25A57E714(v22, (uint64_t)v9);
    (*(void (**)(uint64_t, char *, char *, char *, uint64_t))(v29 + 72))(v30, v17, v12, v9, v28);
    sub_25A57E6B8((uint64_t)v9);
    (*(void (**)(char *, uint64_t))(v23 + 8))(v12, v27);
    return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  }
}

void sub_25A5E1D1C(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  *(void *)&long long v65 = a4;
  uint64_t v73 = a3;
  uint64_t v74 = a2;
  uint64_t v67 = *v4;
  uint64_t v5 = v67;
  uint64_t v68 = a1;
  uint64_t v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A429D78);
  MEMORY[0x270FA5388](v61);
  uint64_t v64 = (void *)((char *)v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = sub_25A622C10();
  uint64_t v62 = *(void *)(v7 - 8);
  uint64_t v63 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v60 = (char *)v56 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A42B4E0);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v57 = (char *)v56 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void *)(v5 + 88);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v69 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v71 = (char *)v56 - v12;
  uint64_t v13 = sub_25A622390();
  type metadata accessor for Junction();
  uint64_t v14 = swift_getAssociatedTypeWitness();
  v56[1] = v11;
  v56[2] = swift_getAssociatedConformanceWitness();
  _OWORD v56[3] = v14;
  uint64_t v58 = swift_getAssociatedTypeWitness();
  sub_25A622F60();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v16 = swift_getTupleTypeMetadata2();
  uint64_t v17 = sub_25A623180();
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v20 = (char *)v56 - v19;
  uint64_t v59 = TupleTypeMetadata2;
  uint64_t v21 = swift_getTupleTypeMetadata2();
  uint64_t v22 = MEMORY[0x270FA5388](v21);
  uint64_t v24 = (char *)v56 - v23;
  uint64_t v66 = v13;
  uint64_t v25 = *(void *)(v13 - 8);
  uint64_t v26 = MEMORY[0x270FA5388](v22);
  v56[0] = (char *)v56 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v26);
  uint64_t v70 = (char *)v56 - v28;
  uint64_t v29 = (uint64_t)v74;
  uint64_t v74 = v4;
  sub_25A5DF134(v29, (uint64_t)v20);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48))(v20, 1, v16) == 1)
  {
    (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
    uint64_t v31 = (uint64_t)v71;
    uint64_t v30 = AssociatedTypeWitness;
    (*(void (**)(char *, uint64_t, uint64_t))(v69 + 16))(v71, v73, AssociatedTypeWitness);
    type metadata accessor for EndpointInvalidated();
    swift_getWitnessTable();
    uint64_t v32 = (void *)swift_allocError();
    sub_25A57EF80(v31, v30, v33);
    uint64_t v34 = v60;
    sub_25A622C20();
    uint64_t v35 = (uint64_t)v64;
    *uint64_t v64 = v32;
    swift_storeEnumTagMultiPayload();
    id v36 = v32;
    __swift_instantiateConcreteTypeFromMangledName(qword_26A429C58);
    sub_25A622640();
    sub_25A570C60(v35, &qword_26A429D78);
    (*(void (**)(char *, uint64_t))(v62 + 8))(v34, v63);
  }
  else
  {
    uint64_t v37 = *(int *)(v21 + 48);
    uint64_t v38 = *(void (**)(char *, char *, uint64_t))(v25 + 32);
    long long v65 = *(_OWORD *)&v20[*(int *)(v16 + 48)];
    uint64_t v39 = v66;
    v38(v24, v20, v66);
    *(_OWORD *)&v24[v37] = v65;
    int v40 = &v24[*(int *)(v21 + 48)];
    uint64_t v41 = *(void *)v40;
    uint64_t v64 = (void *)*((void *)v40 + 1);
    *(void *)&long long v65 = v41;
    uint64_t v42 = v25;
    uint64_t v43 = v70;
    v38(v70, v24, v39);
    (*(void (**)(char *, uint64_t, uint64_t))(v69 + 16))(v71, v73, AssociatedTypeWitness);
    uint64_t v44 = *(void (**)(char *, char *, uint64_t))(v42 + 16);
    uint64_t v45 = v57;
    v44(v57, v43, v39);
    uint64_t v73 = v42;
    (*(void (**)(char *, void, uint64_t, uint64_t))(v42 + 56))(v45, 0, 1, v39);
    swift_beginAccess();
    swift_getAssociatedConformanceWitness();
    sub_25A622D50();
    sub_25A622D70();
    swift_endAccess();
    v44((char *)v56[0], v43, v39);
    uint64_t v46 = v58;
    sub_25A5DFE44(v58, v58);
    uint64_t v47 = *(void *)(v46 - 8);
    swift_allocObject();
    uint64_t v48 = v65;
    swift_retain();
    sub_25A622E80();
    uint64_t v50 = v49;
    uint64_t v51 = type metadata accessor for PipeEvent();
    uint64_t v52 = v68;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v47 + 16))(v50, v68 + *(int *)(v51 + 36), v46);
    sub_25A622F60();
    uint64_t v53 = sub_25A622EA0();
    swift_bridgeObjectRelease();
    uint64_t v75 = v48;
    uint64_t v76 = v53;
    swift_beginAccess();
    sub_25A5E3208(&qword_26A42B4E8);
    sub_25A622D50();
    sub_25A622D70();
    swift_endAccess();
    uint64_t v54 = v67;
    uint64_t WitnessTable = swift_getWitnessTable();
    sub_25A5DC130(v52, v54, WitnessTable);
    (*(void (**)(char *, uint64_t))(v73 + 8))(v70, v39);
    swift_bridgeObjectRelease();
    swift_release();
  }
}

uint64_t sub_25A5E26A4(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v2;
  uint64_t v5 = sub_25A622390();
  uint64_t v6 = *(void *)(v4 + 80);
  uint64_t v7 = *(void *)(v4 + 88);
  type metadata accessor for Junction();
  swift_getAssociatedTypeWitness();
  uint64_t v34 = v7;
  uint64_t v35 = v6;
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  sub_25A622F60();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v9 = swift_getTupleTypeMetadata2();
  uint64_t v10 = sub_25A623180();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v31 - v12;
  uint64_t v32 = TupleTypeMetadata2;
  uint64_t v14 = swift_getTupleTypeMetadata2();
  uint64_t v15 = MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v31 - v16;
  uint64_t v36 = *(void *)(v5 - 8);
  uint64_t v18 = MEMORY[0x270FA5388](v15);
  uint64_t v20 = (char *)&v31 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  uint64_t v33 = (char *)&v31 - v21;
  sub_25A5DF134(a1, (uint64_t)v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v13, 1, v9) == 1) {
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
  uint64_t v23 = *(int *)(v9 + 48);
  uint64_t v24 = *(int *)(v14 + 48);
  uint64_t v25 = v36;
  uint64_t v26 = *(void (**)(char *, char *, uint64_t))(v36 + 32);
  long long v31 = *(_OWORD *)&v13[v23];
  v26(v17, v13, v5);
  *(_OWORD *)&v17[v24] = v31;
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v27 = v33;
  v26(v33, v17, v5);
  (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v20, v27, v5);
  uint64_t v37 = 0;
  uint64_t v38 = 0;
  swift_beginAccess();
  sub_25A5E3208(&qword_26A42B4E8);
  sub_25A622D50();
  sub_25A622D70();
  swift_endAccess();
  uint64_t v28 = swift_beginAccess();
  MEMORY[0x270FA5388](v28);
  uint64_t v29 = v34;
  *((void *)&v31 - 4) = v35;
  *((void *)&v31 - 3) = v29;
  *((void *)&v31 - 2) = v27;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_bridgeObjectRetain();
  uint64_t v30 = sub_25A622D30();
  (*(void (**)(char *, uint64_t))(v36 + 8))(v27, v5);
  v2[5] = v30;
  return swift_bridgeObjectRelease();
}

uint64_t sub_25A5E2BAC(uint64_t a1)
{
  uint64_t v23 = *v1;
  uint64_t v24 = a1;
  uint64_t v2 = *(void *)(v23 + 88);
  type metadata accessor for Junction();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  sub_25A622F60();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v4 = swift_getTupleTypeMetadata2();
  *(void *)&long long v21 = sub_25A623180();
  uint64_t v5 = *(void *)(v21 - 8);
  MEMORY[0x270FA5388](v21);
  uint64_t v7 = (char *)&v21 - v6;
  uint64_t v8 = swift_getTupleTypeMetadata2();
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v21 - v10;
  uint64_t v12 = *(void *)(v2 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v9);
  uint64_t v22 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v21 - v15;
  sub_25A5DD38C(v24, (uint64_t)v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(v7, 1, v4) == 1) {
    return (*(uint64_t (**)(char *, void))(v5 + 8))(v7, v21);
  }
  uint64_t v18 = *(int *)(v4 + 48);
  uint64_t v19 = *(int *)(v8 + 48);
  uint64_t v24 = TupleTypeMetadata2;
  uint64_t v20 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
  long long v21 = *(_OWORD *)&v7[v18];
  v20(v11, v7, v2);
  *(_OWORD *)&v11[v19] = v21;
  swift_release();
  swift_bridgeObjectRelease();
  v20(v16, v11, v2);
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v22, v16, v2);
  uint64_t v25 = 0;
  uint64_t v26 = 0;
  swift_beginAccess();
  sub_25A622D50();
  sub_25A622D70();
  swift_endAccess();
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v16, v2);
}

BOOL sub_25A5E2FCC(uint64_t a1, uint64_t a2)
{
  return *(void *)(v2 + 32) == a2;
}

uint64_t sub_25A5E2FDC(uint64_t a1)
{
  return sub_25A5DD6E4(a1, *(uint64_t (**)(uint64_t, void, void))(v1 + 48)) & 1;
}

uint64_t sub_25A5E3004(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(*(void *)(*(void *)(v3 + 16) - 8) + 16))();
  swift_retain();
  swift_bridgeObjectRetain();
  return a3;
}

uint64_t sub_25A5E3074@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_25A5DD814(a1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 48), a2);
}

BOOL sub_25A5E309C(uint64_t a1, uint64_t a2)
{
  return a2 == v2;
}

uint64_t sub_25A5E30A8(uint64_t a1)
{
  return sub_25A5DF63C(a1, *(uint64_t (**)(uint64_t, void, void))(v1 + 32)) & 1;
}

uint64_t sub_25A5E30D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_25A5DF7FC(a1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 32), a2);
}

BOOL sub_25A5E30F4()
{
  return (sub_25A622DA0() & 1) == 0;
}

uint64_t sub_25A5E316C()
{
  return sub_25A5DBC84();
}

uint64_t sub_25A5E3178()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 24);
  (*(void (**)(void, uint64_t, uint64_t))(v2 + 24))(0, v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 64))(v1, v2);
}

uint64_t sub_25A5E31E0(uint64_t a1)
{
  return sub_25A5E1904(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_25A5E3208(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_25A622390();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_25A5E3260(char a1)
{
  unint64_t result = 0xD000000000000016;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x416C6C6174736E69;
      break;
    case 2:
      unint64_t result = 0x6C6174736E696E75;
      break;
    case 3:
      unint64_t result = 0x4C525579706F63;
      break;
    case 4:
      return result;
    case 5:
      unint64_t result = 0x7070417465736572;
      break;
    default:
      unint64_t result = 0x6D726177657270;
      break;
  }
  return result;
}

uint64_t sub_25A5E3340(unsigned __int8 *a1, char *a2)
{
  return sub_25A5E9F04(*a1, *a2);
}

uint64_t sub_25A5E334C()
{
  return sub_25A6190A0();
}

uint64_t sub_25A5E3354()
{
  return sub_25A54A974();
}

uint64_t sub_25A5E335C()
{
  return sub_25A61CF3C();
}

uint64_t sub_25A5E3364@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_25A5E7830();
  *a1 = result;
  return result;
}

unint64_t sub_25A5E3394@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_25A5E3260(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_25A5E33C0(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_25A5E77C0();
  uint64_t v5 = MEMORY[0x263F60648];

  return MEMORY[0x270F55C68](a1, a2, v4, v5);
}

uint64_t sub_25A5E341C()
{
  return sub_25A622B20();
}

uint64_t sub_25A5E3484@<X0>(char *a1@<X8>)
{
  return sub_25A56B748(a1);
}

_OWORD *AppManagerInterface.TwoWayMessage.propertyListValue.getter()
{
  sub_25A5E36B8(v0, v13);
  unint64_t v1 = sub_25A5E373C();
  sub_25A5E3790();
  sub_25A6227A0();
  unint64_t result = sub_25A5E36B8(v13, &v14);
  switch(v19)
  {
    case 1:
      uint64_t v9 = v14;
      char v10 = BYTE8(v14);
      *((void *)&v5 + 1) = &type metadata for AppManagerInterface.TwoWayMessage.Key;
      *(void *)&long long v6 = v1;
      LOBYTE(v4) = 1;
      sub_25A5E38E0();
      goto LABEL_4;
    case 2:
      long long v4 = v14;
      long long v5 = v15;
      long long v6 = v16;
      uint64_t v7 = v17;
      long long v8 = v18;
      uint64_t v11 = &type metadata for AppManagerInterface.TwoWayMessage.Key;
      unint64_t v12 = v1;
      LOBYTE(v9) = 1;
      sub_25A5E388C();
      goto LABEL_8;
    case 3:
      long long v4 = v14;
      long long v5 = v15;
      long long v6 = v16;
      uint64_t v7 = v17;
      long long v8 = v18;
      uint64_t v11 = &type metadata for AppManagerInterface.TwoWayMessage.Key;
      unint64_t v12 = v1;
      LOBYTE(v9) = 1;
      sub_25A5E3838();
      goto LABEL_8;
    case 4:
      long long v4 = v14;
      long long v5 = v15;
      *(void *)&long long v6 = v16;
      uint64_t v11 = &type metadata for AppManagerInterface.TwoWayMessage.Key;
      unint64_t v12 = v1;
      LOBYTE(v9) = 1;
      sub_25A5E37E4();
LABEL_8:
      sub_25A622700();
      uint64_t v3 = &v9;
      return (_OWORD *)__swift_destroy_boxed_opaque_existential_1((uint64_t)v3);
    case 5:
      return result;
    default:
      uint64_t v9 = v14;
      char v10 = BYTE8(v14);
      *((void *)&v5 + 1) = &type metadata for AppManagerInterface.TwoWayMessage.Key;
      *(void *)&long long v6 = v1;
      LOBYTE(v4) = 1;
      sub_25A5E3934();
LABEL_4:
      sub_25A622700();
      uint64_t v3 = (uint64_t *)&v4;
      return (_OWORD *)__swift_destroy_boxed_opaque_existential_1((uint64_t)v3);
  }
}

_OWORD *sub_25A5E36B8(_OWORD *a1, _OWORD *a2)
{
  *a2 = *a1;
  long long v2 = a1[1];
  long long v3 = a1[2];
  long long v4 = a1[3];
  *(_OWORD *)((char *)a2 + 57) = *(_OWORD *)((char *)a1 + 57);
  a2[2] = v3;
  a2[3] = v4;
  a2[1] = v2;
  return a2;
}

_OWORD *sub_25A5E36E0(unsigned char *a1, unsigned char *a2, _OWORD *a3)
{
  *a1 = 0;
  unint64_t result = sub_25A5E36B8(a3, v5);
  *a2 = 0x504030201uLL >> (8 * v6);
  return result;
}

_OWORD *sub_25A5E3734(unsigned char *a1, unsigned char *a2)
{
  return sub_25A5E36E0(a1, a2, *(_OWORD **)(v2 + 16));
}

unint64_t sub_25A5E373C()
{
  unint64_t result = qword_26A42B500;
  if (!qword_26A42B500)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42B500);
  }
  return result;
}

unint64_t sub_25A5E3790()
{
  unint64_t result = qword_26A42B508;
  if (!qword_26A42B508)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42B508);
  }
  return result;
}

unint64_t sub_25A5E37E4()
{
  unint64_t result = qword_26A42B510;
  if (!qword_26A42B510)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42B510);
  }
  return result;
}

unint64_t sub_25A5E3838()
{
  unint64_t result = qword_26A42B518;
  if (!qword_26A42B518)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42B518);
  }
  return result;
}

unint64_t sub_25A5E388C()
{
  unint64_t result = qword_26A42B520;
  if (!qword_26A42B520)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42B520);
  }
  return result;
}

unint64_t sub_25A5E38E0()
{
  unint64_t result = qword_26A42B528;
  if (!qword_26A42B528)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42B528);
  }
  return result;
}

unint64_t sub_25A5E3934()
{
  unint64_t result = qword_26A42B530;
  if (!qword_26A42B530)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42B530);
  }
  return result;
}

uint64_t AppManagerInterface.TwoWayMessage.init(propertyListValue:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v25 = &type metadata for AppManagerInterface.TwoWayMessage.Key;
  unint64_t v5 = sub_25A5E373C();
  *(void *)&long long v26 = v5;
  LOBYTE(v22) = 0;
  sub_25A5E3790();
  sub_25A622710();
  if (v2)
  {
    uint64_t v6 = sub_25A6227C0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v22);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v22);
    switch((char)v29)
    {
      case 1:
        uint64_t v25 = &type metadata for AppManagerInterface.TwoWayMessage.Key;
        *(void *)&long long v26 = v5;
        LOBYTE(v22) = 1;
        sub_25A5E3934();
        sub_25A622710();
        uint64_t v17 = sub_25A6227C0();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8))(a1, v17);
        uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)&v22);
        uint64_t v11 = 0;
        unint64_t v12 = 0;
        uint64_t v13 = 0;
        char v16 = 0;
        uint64_t v9 = v29;
        uint64_t v10 = v30;
        long long v14 = 0uLL;
        long long v15 = 0uLL;
        break;
      case 2:
        uint64_t v25 = &type metadata for AppManagerInterface.TwoWayMessage.Key;
        *(void *)&long long v26 = v5;
        LOBYTE(v22) = 1;
        sub_25A5E38E0();
        sub_25A622710();
        uint64_t v18 = sub_25A6227C0();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(a1, v18);
        uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)&v22);
        uint64_t v11 = 0;
        unint64_t v12 = 0;
        uint64_t v13 = 0;
        uint64_t v9 = v29;
        uint64_t v10 = v30;
        long long v14 = 0uLL;
        char v16 = 1;
        long long v15 = 0uLL;
        break;
      case 3:
        long long v31 = &type metadata for AppManagerInterface.TwoWayMessage.Key;
        unint64_t v32 = v5;
        LOBYTE(v29) = 1;
        sub_25A5E388C();
        sub_25A622710();
        uint64_t v19 = sub_25A6227C0();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v19 - 8) + 8))(a1, v19);
        uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)&v29);
        uint64_t v9 = v22;
        uint64_t v10 = v23;
        uint64_t v11 = v24;
        unint64_t v12 = v25;
        long long v14 = v26;
        uint64_t v13 = v27;
        char v16 = 2;
        long long v15 = v28;
        break;
      case 4:
        long long v31 = &type metadata for AppManagerInterface.TwoWayMessage.Key;
        unint64_t v32 = v5;
        LOBYTE(v29) = 1;
        sub_25A5E3838();
        sub_25A622710();
        uint64_t v20 = sub_25A6227C0();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8))(a1, v20);
        uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)&v29);
        uint64_t v9 = v22;
        uint64_t v10 = v23;
        uint64_t v11 = v24;
        unint64_t v12 = v25;
        long long v14 = v26;
        uint64_t v13 = v27;
        char v16 = 3;
        long long v15 = v28;
        break;
      case 5:
        long long v31 = &type metadata for AppManagerInterface.TwoWayMessage.Key;
        unint64_t v32 = v5;
        LOBYTE(v29) = 1;
        sub_25A5E37E4();
        sub_25A622710();
        uint64_t v21 = sub_25A6227C0();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v21 - 8) + 8))(a1, v21);
        uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)&v29);
        uint64_t v13 = 0;
        uint64_t v9 = v22;
        uint64_t v10 = v23;
        uint64_t v11 = v24;
        unint64_t v12 = v25;
        long long v15 = 0uLL;
        char v16 = 4;
        *(void *)&long long v14 = v26;
        break;
      default:
        uint64_t v8 = sub_25A6227C0();
        uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(a1, v8);
        uint64_t v9 = 0;
        uint64_t v10 = 0;
        uint64_t v11 = 0;
        unint64_t v12 = 0;
        uint64_t v13 = 0;
        long long v14 = 0uLL;
        long long v15 = 0uLL;
        char v16 = 5;
        break;
    }
    *(void *)a2 = v9;
    *(void *)(a2 + 8) = v10;
    *(void *)(a2 + 16) = v11;
    *(void *)(a2 + 24) = v12;
    *(_OWORD *)(a2 + 32) = v14;
    *(void *)(a2 + 48) = v13;
    *(_OWORD *)(a2 + 56) = v15;
    *(unsigned char *)(a2 + 72) = v16;
  }
  return result;
}

uint64_t sub_25A5E3E30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return AppManagerInterface.TwoWayMessage.init(propertyListValue:)(a1, a2);
}

id InstallAppRequest.sourceURLWrapper.getter@<X0>(void **a1@<X8>)
{
  uint64_t v2 = *v1;
  *a1 = *v1;
  return v2;
}

uint64_t InstallAppRequest.isDevelopment.getter()
{
  return *(unsigned __int8 *)(v0 + 8);
}

uint64_t InstallAppRequest.init(sourceURL:isDevelopment:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_25A6222B0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  id v10 = objc_allocWithZone(MEMORY[0x263F08B18]);
  uint64_t v11 = (void *)sub_25A622280();
  id v12 = objc_msgSend(v10, sel_initWithURL_readonly_, v11, 0);

  uint64_t v13 = *(void (**)(char *, uint64_t))(v7 + 8);
  v13(v9, v6);
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t))v13)(a1, v6);
  *(void *)a3 = v12;
  *(unsigned char *)(a3 + 8) = a2;
  return result;
}

uint64_t sub_25A5E3FA4(char a1)
{
  if (a1) {
    return 0x6F6C657665447369;
  }
  else {
    return 0xD000000000000014;
  }
}

uint64_t sub_25A5E3FEC(char *a1, char *a2)
{
  return sub_25A5EAFEC(*a1, *a2);
}

uint64_t sub_25A5E3FF8()
{
  return sub_25A619254();
}

uint64_t sub_25A5E4000()
{
  return sub_25A54B384();
}

uint64_t sub_25A5E4008()
{
  return sub_25A61C62C();
}

uint64_t sub_25A5E4010@<X0>(char *a1@<X8>)
{
  return sub_25A56B748(a1);
}

uint64_t sub_25A5E401C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_25A5E3FA4(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_25A5E4048()
{
  return sub_25A5E3FA4(*v0);
}

uint64_t InstallAppRequest.propertyListValue.getter()
{
  return sub_25A5E4448();
}

uint64_t sub_25A5E4068()
{
  return sub_25A622A80();
}

uint64_t sub_25A5E40EC()
{
  return sub_25A5E4068();
}

uint64_t InstallAppRequest.init(propertyListValue:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  id v12 = &type metadata for InstallAppRequest.Key;
  unint64_t v5 = sub_25A5E428C();
  unint64_t v13 = v5;
  v11[0] = 0;
  sub_25A5E42E0();
  sub_25A622710();
  if (v2)
  {
    uint64_t v6 = sub_25A6227C0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
    uint64_t v7 = v14;
    id v12 = &type metadata for InstallAppRequest.Key;
    unint64_t v13 = v5;
    v11[0] = 1;
    sub_25A622710();
    uint64_t v9 = sub_25A6227C0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(a1, v9);
    uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
    *(void *)a2 = v7;
    *(unsigned char *)(a2 + 8) = v10;
  }
  return result;
}

unint64_t sub_25A5E428C()
{
  unint64_t result = qword_26A42B538;
  if (!qword_26A42B538)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42B538);
  }
  return result;
}

unint64_t sub_25A5E42E0()
{
  unint64_t result = qword_26A42B540;
  if (!qword_26A42B540)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42B540);
  }
  return result;
}

uint64_t sub_25A5E4334()
{
  return sub_25A5E4740();
}

uint64_t sub_25A5E434C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return InstallAppRequest.init(propertyListValue:)(a1, a2);
}

uint64_t UninstallAppsRequest.bundleIDs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t UninstallAppsRequest.init(bundleIDs:arePrefixes:)@<X0>(uint64_t result@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  *(void *)a3 = result;
  *(unsigned char *)(a3 + 8) = a2;
  return result;
}

uint64_t sub_25A5E4378(char a1)
{
  if (a1) {
    return 0x6966657250657261;
  }
  else {
    return 0x4449656C646E7562;
  }
}

uint64_t sub_25A5E43BC(char *a1, char *a2)
{
  return sub_25A5E9B20(*a1, *a2);
}

uint64_t sub_25A5E43C8()
{
  return sub_25A6192E8();
}

uint64_t sub_25A5E43D0()
{
  return sub_25A54A71C();
}

uint64_t sub_25A5E43D8()
{
  return sub_25A61D29C();
}

uint64_t sub_25A5E43E0@<X0>(char *a1@<X8>)
{
  return sub_25A56B748(a1);
}

uint64_t sub_25A5E43EC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_25A5E4378(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_25A5E4418()
{
  return sub_25A5E4378(*v0);
}

void sub_25A5E4420(void *a1@<X8>)
{
  *a1 = &unk_27083F6A0;
}

uint64_t UninstallAppsRequest.propertyListValue.getter()
{
  return sub_25A5E4448();
}

uint64_t sub_25A5E4448()
{
  return sub_25A622780();
}

uint64_t sub_25A5E447C()
{
  return sub_25A622A80();
}

uint64_t sub_25A5E450C()
{
  return sub_25A5E447C();
}

uint64_t UninstallAppsRequest.init(propertyListValue:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  id v12 = &type metadata for UninstallAppsRequest.Key;
  unint64_t v5 = sub_25A5E46D4();
  unint64_t v13 = v5;
  v11[0] = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A429438);
  sub_25A58DBD4();
  sub_25A622760();
  if (v2)
  {
    uint64_t v6 = sub_25A6227C0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
    uint64_t v8 = v14;
    id v12 = &type metadata for UninstallAppsRequest.Key;
    unint64_t v13 = v5;
    v11[0] = 1;
    swift_bridgeObjectRetain();
    sub_25A622710();
    uint64_t v9 = sub_25A6227C0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(a1, v9);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
    char v10 = v14;
    *(void *)a2 = v8;
    *(unsigned char *)(a2 + 8) = v10;
    return swift_bridgeObjectRelease();
  }
}

unint64_t sub_25A5E46D4()
{
  unint64_t result = qword_26A42B548;
  if (!qword_26A42B548)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42B548);
  }
  return result;
}

uint64_t sub_25A5E4728()
{
  return sub_25A5E4740();
}

uint64_t sub_25A5E4740()
{
  return sub_25A622780();
}

uint64_t sub_25A5E4778@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return UninstallAppsRequest.init(propertyListValue:)(a1, a2);
}

uint64_t CopyURLRequest.filename.getter()
{
  uint64_t v1 = *(void *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

id CopyURLRequest.sourceURLWrapper.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = *(void **)(v1 + 64);
  *a1 = v2;
  return v2;
}

__n128 CopyURLRequest.init(agentDescriptor:sourceURL:)@<Q0>(long long *a1@<X0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_25A6222B0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v10 = *a1;
  __n128 v23 = (__n128)a1[1];
  long long v24 = v10;
  uint64_t v11 = *((void *)a1 + 4);
  uint64_t v21 = *((void *)a1 + 5);
  uint64_t v22 = v11;
  uint64_t v12 = sub_25A622270();
  uint64_t v14 = v13;
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v9, a2, v6);
  id v15 = objc_allocWithZone(MEMORY[0x263F08B18]);
  char v16 = (void *)sub_25A622280();
  id v17 = objc_msgSend(v15, sel_initWithURL_readonly_, v16, 0);

  uint64_t v18 = *(void (**)(char *, uint64_t))(v7 + 8);
  v18(v9, v6);
  v18(a2, v6);
  __n128 result = v23;
  *(_OWORD *)a3 = v24;
  *(__n128 *)(a3 + 16) = result;
  uint64_t v20 = v21;
  *(void *)(a3 + 32) = v22;
  *(void *)(a3 + 40) = v20;
  *(void *)(a3 + 48) = v12;
  *(void *)(a3 + 56) = v14;
  *(void *)(a3 + 64) = v17;
  return result;
}

unint64_t sub_25A5E4970(char a1)
{
  unint64_t result = 0xD000000000000014;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x736544746E656761;
      break;
    case 2:
      unint64_t result = 0x656D616E656C6966;
      break;
    case 3:
      return result;
    default:
      unint64_t result = 0x656449746E656761;
      break;
  }
  return result;
}

uint64_t sub_25A5E4A20(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_25A5E8628(*a1, *a2);
}

uint64_t sub_25A5E4A2C()
{
  return sub_25A619378(*v0);
}

uint64_t sub_25A5E4A34(uint64_t a1)
{
  return sub_25A549BCC(a1, *v1);
}

uint64_t sub_25A5E4A3C(uint64_t a1)
{
  return sub_25A61B650(a1, *v1);
}

uint64_t sub_25A5E4A44@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_25A5B0564();
  *a1 = result;
  return result;
}

unint64_t sub_25A5E4A7C@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_25A5E4970(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_25A5E4AA8()
{
  return sub_25A5E4970(*v0);
}

uint64_t CopyURLRequest.propertyListValue.getter()
{
  return sub_25A622780();
}

uint64_t sub_25A5E4B08()
{
  return sub_25A5E52FC(*(void *)(v0 + 16), (void (*)(void))sub_25A5E4B74);
}

uint64_t CopyURLRequest.init(propertyListValue:)@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_25A5E5478(a1, (uint64_t)&type metadata for CopyURLRequest.Key, (uint64_t (*)(void))sub_25A5E4B74, a2);
}

unint64_t sub_25A5E4B74()
{
  unint64_t result = qword_26A42B550;
  if (!qword_26A42B550)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42B550);
  }
  return result;
}

uint64_t sub_25A5E4BC8()
{
  return sub_25A622780();
}

uint64_t sub_25A5E4C20@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return CopyURLRequest.init(propertyListValue:)(a1, a2);
}

uint64_t CopyURLResponse.finalPath.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

PreviewsMessagingOS::CopyURLResponse __swiftcall CopyURLResponse.init(finalPath:)(PreviewsMessagingOS::CopyURLResponse finalPath)
{
  PreviewsMessagingOS::CopyURLResponse *v1 = finalPath;
  return finalPath;
}

uint64_t sub_25A5E4C7C@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_25A6232B0();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_25A5E4CD0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_25A5E7814();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_25A5E4CFC(void *a1@<X8>)
{
  *a1 = &unk_27083F780;
}

uint64_t CopyURLResponse.propertyListValue.getter()
{
  return sub_25A6227A0();
}

unint64_t sub_25A5E4D7C()
{
  unint64_t result = qword_26A42B558;
  if (!qword_26A42B558)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42B558);
  }
  return result;
}

uint64_t CopyURLResponse.init(propertyListValue:)@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v9 = &type metadata for CopyURLResponse.Key;
  unint64_t v10 = sub_25A5E4D7C();
  sub_25A622710();
  uint64_t v5 = sub_25A6227C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
  if (!v2)
  {
    uint64_t v7 = v12;
    *a2 = v11;
    a2[1] = v7;
  }
  return result;
}

uint64_t sub_25A5E4ED0()
{
  return sub_25A6227A0();
}

uint64_t sub_25A5E4F40@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v9 = &type metadata for CopyURLResponse.Key;
  unint64_t v10 = sub_25A5E4D7C();
  sub_25A622710();
  uint64_t v5 = sub_25A6227C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
  if (!v2)
  {
    uint64_t v7 = v12;
    *a2 = v11;
    a2[1] = v7;
  }
  return result;
}

uint64_t _s19PreviewsMessagingOS14CopyURLRequestV15agentDescriptorAA05AgentG0Vvg_0@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  uint64_t v3 = v1[2];
  uint64_t v4 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v5 = v1[5];
  *a1 = *v1;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  a1[4] = v6;
  a1[5] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

__n128 GrantExecutePermissionRequest.init(agentDescriptor:sourceURL:)@<Q0>(long long *a1@<X0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_25A6222B0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v10 = *a1;
  __n128 v25 = (__n128)a1[1];
  long long v26 = v10;
  uint64_t v11 = *((void *)a1 + 4);
  uint64_t v23 = *((void *)a1 + 5);
  uint64_t v24 = v11;
  uint64_t v22 = sub_25A622270();
  uint64_t v13 = v12;
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v9, a2, v6);
  id v14 = objc_allocWithZone(MEMORY[0x263F08B18]);
  id v15 = (void *)sub_25A622280();
  char v16 = (void *)sub_25A622DB0();
  id v17 = objc_msgSend(v14, sel_initWithURL_readonly_extensionClass_, v15, 1, v16);

  uint64_t v18 = *(void (**)(char *, uint64_t))(v7 + 8);
  v18(v9, v6);
  v18(a2, v6);
  __n128 result = v25;
  *(_OWORD *)a3 = v26;
  *(__n128 *)(a3 + 16) = result;
  uint64_t v20 = v23;
  *(void *)(a3 + 32) = v24;
  *(void *)(a3 + 40) = v20;
  *(void *)(a3 + 48) = v22;
  *(void *)(a3 + 56) = v13;
  *(void *)(a3 + 64) = v17;
  return result;
}

uint64_t sub_25A5E526C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_25A5B0564();
  *a1 = result;
  return result;
}

uint64_t GrantExecutePermissionRequest.propertyListValue.getter()
{
  return sub_25A622780();
}

uint64_t sub_25A5E52FC(uint64_t a1, void (*a2)(void))
{
  return sub_25A622A60();
}

uint64_t sub_25A5E540C()
{
  return sub_25A5E52FC(*(void *)(v0 + 16), (void (*)(void))sub_25A5E5714);
}

uint64_t GrantExecutePermissionRequest.init(propertyListValue:)@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_25A5E5478(a1, (uint64_t)&type metadata for GrantExecutePermissionRequest.Key, (uint64_t (*)(void))sub_25A5E5714, a2);
}

uint64_t sub_25A5E5478@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(void)@<X2>, void *a4@<X8>)
{
  uint64_t v21 = a2;
  uint64_t v8 = a3();
  uint64_t v22 = v8;
  LOBYTE(v20[0]) = 1;
  sub_25A5C27B4();
  sub_25A622710();
  if (v4)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
    uint64_t v21 = a2;
    uint64_t v22 = v8;
    LOBYTE(v20[0]) = 0;
    sub_25A622710();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
  uint64_t v9 = v23[1];
  uint64_t v10 = v24;
  uint64_t v18 = v23[2];
  uint64_t v19 = v23[0];
  uint64_t v11 = v26;
  uint64_t v17 = v25;
  uint64_t v24 = a2;
  uint64_t v25 = v8;
  LOBYTE(v23[0]) = 2;
  sub_25A622710();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
  uint64_t v12 = v20[1];
  uint64_t v16 = v20[0];
  uint64_t v24 = a2;
  uint64_t v25 = v8;
  LOBYTE(v23[0]) = 3;
  sub_25A5E42E0();
  sub_25A622710();
  uint64_t v13 = sub_25A6227C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(a1, v13);
  uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
  uint64_t v15 = v27;
  *a4 = v19;
  a4[1] = v9;
  a4[2] = v18;
  a4[3] = v10;
  a4[4] = v17;
  a4[5] = v11;
  a4[6] = v16;
  a4[7] = v12;
  a4[8] = v15;
  return result;
}

unint64_t sub_25A5E5714()
{
  unint64_t result = qword_26A42B560;
  if (!qword_26A42B560)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42B560);
  }
  return result;
}

uint64_t sub_25A5E5768()
{
  return sub_25A622780();
}

uint64_t sub_25A5E57C0@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return GrantExecutePermissionRequest.init(propertyListValue:)(a1, a2);
}

uint64_t ResetAppRequest.agentDescriptorBundle.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  uint64_t v4 = v1[2];
  uint64_t v3 = v1[3];
  *a1 = *v1;
  a1[1] = v2;
  a1[2] = v4;
  a1[3] = v3;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

id ResetAppRequest.sourceURLWrapper.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = *(void **)(v1 + 32);
  *a1 = v2;
  return v2;
}

uint64_t ResetAppRequest.init(agentDescriptorBundle:sourceURL:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A42A530);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_25A6222B0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v28 - v14;
  uint64_t v32 = *a1;
  uint64_t v16 = a1[1];
  uint64_t v17 = a1[2];
  uint64_t v18 = a1[3];
  uint64_t v30 = v17;
  uint64_t v31 = v16;
  sub_25A5E5AC0(a2, (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_25A5E5B28(a2);
    uint64_t result = sub_25A5E5B28((uint64_t)v8);
    id v20 = 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v15, v8, v9);
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v13, v15, v9);
    id v21 = objc_allocWithZone(MEMORY[0x263F08B18]);
    uint64_t v22 = sub_25A622280();
    uint64_t v29 = v18;
    uint64_t v23 = (void *)v22;
    uint64_t v24 = sub_25A622DB0();
    uint64_t v28 = a2;
    uint64_t v25 = (void *)v24;
    id v20 = objc_msgSend(v21, sel_initWithURL_readonly_extensionClass_, v23, 1, v24);

    uint64_t v26 = *(void (**)(char *, uint64_t))(v10 + 8);
    v26(v13, v9);
    sub_25A5E5B28(v28);
    uint64_t result = ((uint64_t (*)(char *, uint64_t))v26)(v15, v9);
    uint64_t v18 = v29;
  }
  uint64_t v27 = v31;
  *a3 = v32;
  a3[1] = v27;
  a3[2] = v30;
  a3[3] = v18;
  a3[4] = v20;
  return result;
}

uint64_t sub_25A5E5AC0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A42A530);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_25A5E5B28(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A42A530);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_25A5E5B88(char a1)
{
  if (!a1) {
    return 0x656449746E656761;
  }
  if (a1 == 1) {
    return 0xD000000000000015;
  }
  return 0xD000000000000010;
}

uint64_t sub_25A5E5BF4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_25A5EBAD4(*a1, *a2);
}

uint64_t sub_25A5E5C00()
{
  return sub_25A619474();
}

uint64_t sub_25A5E5C08()
{
  return sub_25A54B970();
}

uint64_t sub_25A5E5C10()
{
  return sub_25A61C23C();
}

uint64_t sub_25A5E5C18@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_25A5E787C();
  *a1 = result;
  return result;
}

uint64_t sub_25A5E5C48@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_25A5E5B88(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_25A5E5C74()
{
  return sub_25A5E5B88(*v0);
}

uint64_t ResetAppRequest.propertyListValue.getter()
{
  return sub_25A622780();
}

uint64_t sub_25A5E5CCC(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = a1[1];
  uint64_t v3 = a1[2];
  uint64_t v4 = a1[3];
  sub_25A5E78C8((uint64_t)(a1 + 4), (uint64_t)v17);
  char v16 = 0;
  uint64_t v12 = v1;
  uint64_t v13 = v2;
  uint64_t v14 = v3;
  uint64_t v15 = v4;
  char v11 = 1;
  uint64_t v7 = v1;
  uint64_t v8 = v2;
  uint64_t v9 = v3;
  uint64_t v10 = v4;
  v6[15] = 2;
  sub_25A5E78C8((uint64_t)v17, (uint64_t)v6);
  sub_25A5E5FC0();
  sub_25A5C25FC();
  sub_25A5E42E0();
  return sub_25A622A70();
}

uint64_t sub_25A5E5D98()
{
  return sub_25A5E5CCC(*(uint64_t **)(v0 + 16));
}

uint64_t ResetAppRequest.init(propertyListValue:)@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v13 = &type metadata for ResetAppRequest.Key;
  unint64_t v5 = sub_25A5E5FC0();
  unint64_t v14 = v5;
  v12[0] = 1;
  sub_25A5C25FC();
  sub_25A622710();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
    uint64_t v13 = &type metadata for ResetAppRequest.Key;
    unint64_t v14 = v5;
    v12[0] = 0;
    sub_25A622710();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  uint64_t v6 = v16;
  uint64_t v19 = v15;
  uint64_t v8 = v17;
  uint64_t v7 = v18;
  uint64_t v13 = &type metadata for ResetAppRequest.Key;
  unint64_t v14 = v5;
  v12[0] = 2;
  sub_25A5E42E0();
  sub_25A622760();
  uint64_t v9 = sub_25A6227C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(a1, v9);
  uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  uint64_t v11 = v15;
  *a2 = v19;
  a2[1] = v6;
  a2[2] = v8;
  a2[3] = v7;
  a2[4] = v11;
  return result;
}

unint64_t sub_25A5E5FC0()
{
  unint64_t result = qword_26A42B568;
  if (!qword_26A42B568)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A42B568);
  }
  return result;
}

uint64_t sub_25A5E6014()
{
  return sub_25A622780();
}

uint64_t sub_25A5E6064@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return ResetAppRequest.init(propertyListValue:)(a1, a2);
}

ValueMetadata *type metadata accessor for AppManagerInterface()
{
  return &type metadata for AppManagerInterface;
}

void destroy for AppManagerInterface.TwoWayMessage(uint64_t a1)
{
  unsigned int v2 = *(unsigned __int8 *)(a1 + 72);
  if (v2 >= 5) {
    unsigned int v2 = *(_DWORD *)a1 + 5;
  }
  switch(v2)
  {
    case 0u:
      uint64_t v3 = *(void **)a1;
      goto LABEL_10;
    case 1u:
      swift_bridgeObjectRelease();
      return;
    case 2u:
    case 3u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v3 = *(void **)(a1 + 64);
      goto LABEL_10;
    case 4u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v3 = *(void **)(a1 + 32);
LABEL_10:

      break;
    default:
      return;
  }
}

uint64_t initializeWithCopy for AppManagerInterface.TwoWayMessage(uint64_t a1, uint64_t a2)
{
  unsigned int v3 = *(unsigned __int8 *)(a2 + 72);
  if (v3 >= 5) {
    unsigned int v3 = *(_DWORD *)a2 + 5;
  }
  switch(v3)
  {
    case 0u:
      uint64_t v4 = *(void **)a2;
      *(void *)a1 = *(void *)a2;
      *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
      *(unsigned char *)(a1 + 72) = 0;
      id v5 = v4;
      break;
    case 1u:
      *(void *)a1 = *(void *)a2;
      *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
      *(unsigned char *)(a1 + 72) = 1;
      swift_bridgeObjectRetain();
      break;
    case 2u:
      uint64_t v8 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v8;
      uint64_t v9 = *(void *)(a2 + 24);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = v9;
      uint64_t v10 = *(void *)(a2 + 40);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = v10;
      uint64_t v11 = *(void *)(a2 + 56);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = v11;
      uint64_t v12 = *(void **)(a2 + 64);
      *(void *)(a1 + 64) = v12;
      char v13 = 2;
      goto LABEL_9;
    case 3u:
      uint64_t v14 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v14;
      uint64_t v15 = *(void *)(a2 + 24);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = v15;
      uint64_t v16 = *(void *)(a2 + 40);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = v16;
      uint64_t v17 = *(void *)(a2 + 56);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = v17;
      uint64_t v12 = *(void **)(a2 + 64);
      *(void *)(a1 + 64) = v12;
      char v13 = 3;
LABEL_9:
      *(unsigned char *)(a1 + 72) = v13;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v18 = v12;
      break;
    case 4u:
      uint64_t v19 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v19;
      uint64_t v20 = *(void *)(a2 + 24);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = v20;
      id v21 = *(void **)(a2 + 32);
      *(void *)(a1 + 32) = v21;
      *(unsigned char *)(a1 + 72) = 4;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v22 = v21;
      break;
    default:
      long long v6 = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      *(_OWORD *)(a1 + 48) = v6;
      *(_OWORD *)(a1 + 57) = *(_OWORD *)(a2 + 57);
      long long v7 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v7;
      break;
  }
  return a1;
}

uint64_t assignWithCopy for AppManagerInterface.TwoWayMessage(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 72);
    if (v4 >= 5) {
      unsigned int v4 = *(_DWORD *)a1 + 5;
    }
    switch(v4)
    {
      case 0u:
        id v5 = *(void **)a1;
        goto LABEL_9;
      case 1u:
        swift_bridgeObjectRelease();
        break;
      case 2u:
      case 3u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        id v5 = *(void **)(a1 + 64);
        goto LABEL_9;
      case 4u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        id v5 = *(void **)(a1 + 32);
LABEL_9:

        break;
      default:
        break;
    }
    unsigned int v6 = *(unsigned __int8 *)(a2 + 72);
    if (v6 >= 5) {
      unsigned int v6 = *(_DWORD *)a2 + 5;
    }
    switch(v6)
    {
      case 0u:
        long long v7 = *(void **)a2;
        *(void *)a1 = *(void *)a2;
        *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
        *(unsigned char *)(a1 + 72) = 0;
        id v8 = v7;
        return a1;
      case 1u:
        *(void *)a1 = *(void *)a2;
        *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
        *(unsigned char *)(a1 + 72) = 1;
        swift_bridgeObjectRetain();
        return a1;
      case 2u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(void *)(a1 + 24) = *(void *)(a2 + 24);
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        *(void *)(a1 + 40) = *(void *)(a2 + 40);
        *(void *)(a1 + 48) = *(void *)(a2 + 48);
        *(void *)(a1 + 56) = *(void *)(a2 + 56);
        uint64_t v12 = *(void **)(a2 + 64);
        *(void *)(a1 + 64) = v12;
        char v13 = 2;
        goto LABEL_18;
      case 3u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(void *)(a1 + 24) = *(void *)(a2 + 24);
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        *(void *)(a1 + 40) = *(void *)(a2 + 40);
        *(void *)(a1 + 48) = *(void *)(a2 + 48);
        *(void *)(a1 + 56) = *(void *)(a2 + 56);
        uint64_t v12 = *(void **)(a2 + 64);
        *(void *)(a1 + 64) = v12;
        char v13 = 3;
LABEL_18:
        *(unsigned char *)(a1 + 72) = v13;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_20;
      case 4u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(void *)(a1 + 24) = *(void *)(a2 + 24);
        uint64_t v12 = *(void **)(a2 + 32);
        *(void *)(a1 + 32) = v12;
        *(unsigned char *)(a1 + 72) = 4;
        swift_bridgeObjectRetain();
LABEL_20:
        swift_bridgeObjectRetain();
        id v14 = v12;
        break;
      default:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        long long v9 = *(_OWORD *)(a2 + 16);
        long long v10 = *(_OWORD *)(a2 + 32);
        long long v11 = *(_OWORD *)(a2 + 48);
        *(_OWORD *)(a1 + 57) = *(_OWORD *)(a2 + 57);
        *(_OWORD *)(a1 + 32) = v10;
        *(_OWORD *)(a1 + 48) = v11;
        *(_OWORD *)(a1 + 16) = v9;
        break;
    }
  }
  return a1;
}