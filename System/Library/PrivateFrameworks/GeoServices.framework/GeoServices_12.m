id GEOPDTimeRangeJSONRepresentation(unsigned int *a1)
{
  return _GEOPDTimeRangeDictionaryRepresentation(a1, 1);
}

id GEOPDTimeRangeDictionaryRepresentation(unsigned int *a1)
{
  return _GEOPDTimeRangeDictionaryRepresentation(a1, 0);
}

void GEOPDTimeRangeFromJSONRepresentation(void *a1, uint64_t a2)
{
}

void GEOPDTimeRangeFromDictionaryRepresentation(void *a1, uint64_t a2)
{
}

BOOL GEOPDDeparturePredicateIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  v2 = (int *)MEMORY[0x1E4F940E8];
  v3 = (int *)MEMORY[0x1E4F940E0];
  v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      if ((v8 >> 3) == 2)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_38;
        }
        unsigned int v17 = 0;
        while (1)
        {
          uint64_t v18 = *v2;
          uint64_t v19 = *(void *)&a1[v18];
          unint64_t v20 = v19 + 1;
          if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
            break;
          }
          int v21 = *(char *)(*(void *)&a1[*v5] + v19);
          *(void *)&a1[v18] = v20;
          if (v21 < 0 && v17++ <= 8) {
            continue;
          }
          goto LABEL_35;
        }
        a1[*v4] = 1;
      }
      else if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDTimeRangeIsValid(a1))
        {
LABEL_38:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_38;
      }
LABEL_35:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v23 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v23;
}

BOOL GEOPDTimeRangeIsValid(void *a1)
{
  uint64_t v6 = [a1 position];
  uint64_t v7 = [a1 length];
  int v5 = 0;
  uint64_t v4 = 0;
  BOOL AllFrom = GEOPDTimeRangeReadAllFrom((uint64_t)&v4, (uint64_t)a1);
  PBReaderRecallMark();
  return AllFrom;
}

BOOL GEOPDTimeRangeEquals(uint64_t a1, uint64_t a2)
{
  return *(void *)a1 == *(void *)a2 && *(_DWORD *)(a1 + 8) == (unint64_t)*(unsigned int *)(a2 + 8);
}

void sub_189A81774(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t GEOPDDepartureSequenceReadSpecified(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 160));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 156);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 152)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  unsigned int v12 = ((*(unsigned __int16 *)(a1 + 164) >> 12) & 1)
      + ((*(unsigned __int16 *)(a1 + 164) >> 10) & 1)
      + ((*(unsigned __int16 *)(a1 + 164) >> 3) & 1)
      + (unsigned __int16)(vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int16 *)(a1 + 164)), (uint16x4_t)0xFFF7FFFBFFF8FFF9), (int8x8_t)0x1000100010001))+ ((*(_WORD *)(a1 + 164) >> 11) & 1)+ ((*(_WORD *)(a1 + 164) >> 4) & 1)+ ((*(_WORD *)(a1 + 164) >> 6) & 1));
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 > 6;
        char v17 = v16 & ~(_BYTE)v11 | v9;
        char v18 = v16 | v11;
        uint64_t v19 = (int *)MEMORY[0x1E4F940E8];
        if (((v16 | v11) | v8)) {
          unint64_t v20 = 0;
        }
        else {
          unint64_t v20 = a3;
        }
        int v94 = 1;
        char v21 = v16 & ~(_BYTE)v11 | v9;
        if (*(void *)(v3 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(v3 + *v6)) {
          goto LABEL_165;
        }
        char v92 = v17;
        char v95 = v18 | v17;
        char v96 = (v20 == 0) | v18;
        v22 = (int *)MEMORY[0x1E4F940C8];
        BOOL v23 = (int *)MEMORY[0x1E4F940B8];
        char v93 = v18;
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v9;
LABEL_8:
        uint64_t v14 = v10;
        uint64_t v15 = v11;
LABEL_10:
        ++v7;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(unsigned char *)(v3 + *v22)) {
      goto LABEL_163;
    }
    char v24 = 0;
    unsigned int v25 = 0;
    unint64_t v26 = 0;
    while (1)
    {
      uint64_t v27 = *v19;
      uint64_t v28 = *(void *)(v3 + v27);
      unint64_t v29 = v28 + 1;
      if (v28 == -1 || v29 > *(void *)(v3 + *v6)) {
        break;
      }
      char v30 = *(unsigned char *)(*(void *)(v3 + *v23) + v28);
      *(void *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0) {
        goto LABEL_25;
      }
      v24 += 7;
      BOOL v31 = v25++ >= 9;
      if (v31)
      {
        unint64_t v26 = 0;
        int v32 = *(unsigned __int8 *)(v3 + *v22);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v22) = 1;
LABEL_25:
    int v32 = *(unsigned __int8 *)(v3 + *v22);
    if (*(unsigned char *)(v3 + *v22)) {
      unint64_t v26 = 0;
    }
LABEL_27:
    int v33 = v26 & 7;
    if (v32 || v33 == 4)
    {
LABEL_163:
      int v94 = 1;
      goto LABEL_164;
    }
    unint64_t v35 = v26 >> 3;
    BOOL v36 = v18;
    if ((v96 & 1) == 0)
    {
      v37 = v20;
      do
      {
        int v39 = *v37++;
        int v38 = v39;
        BOOL v36 = v39 != 0;
        if (v39) {
          BOOL v40 = v38 == v35;
        }
        else {
          BOOL v40 = 1;
        }
      }
      while (!v40);
    }
    switch((int)v35)
    {
      case 1:
        if ((v8 & 1) == 0) {
          goto LABEL_122;
        }
        char v41 = 0;
        unsigned int v42 = 0;
        uint64_t v43 = 0;
        *(_WORD *)(a1 + 164) |= 1u;
        while (1)
        {
          uint64_t v44 = *v19;
          uint64_t v45 = *(void *)(v3 + v44);
          unint64_t v46 = v45 + 1;
          if (v45 == -1 || v46 > *(void *)(v3 + *v6)) {
            break;
          }
          char v47 = *(unsigned char *)(*(void *)(v3 + *v23) + v45);
          *(void *)(v3 + v44) = v46;
          v43 |= (unint64_t)(v47 & 0x7F) << v41;
          if ((v47 & 0x80) == 0) {
            goto LABEL_125;
          }
          v41 += 7;
          BOOL v31 = v42++ >= 9;
          if (v31)
          {
            uint64_t v43 = 0;
            goto LABEL_127;
          }
        }
        *(unsigned char *)(v3 + *v22) = 1;
LABEL_125:
        if (*(unsigned char *)(v3 + *v22)) {
          uint64_t v43 = 0;
        }
LABEL_127:
        uint64_t v79 = 120;
        goto LABEL_136;
      case 2:
        if ((v8 & 1) == 0) {
          goto LABEL_122;
        }
        char v48 = 0;
        unsigned int v49 = 0;
        uint64_t v43 = 0;
        *(_WORD *)(a1 + 164) |= 2u;
        while (2)
        {
          uint64_t v50 = *v19;
          uint64_t v51 = *(void *)(v3 + v50);
          unint64_t v52 = v51 + 1;
          if (v51 == -1 || v52 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v22) = 1;
          }
          else
          {
            char v53 = *(unsigned char *)(*(void *)(v3 + *v23) + v51);
            *(void *)(v3 + v50) = v52;
            v43 |= (unint64_t)(v53 & 0x7F) << v48;
            if (v53 < 0)
            {
              v48 += 7;
              BOOL v31 = v49++ >= 9;
              if (v31)
              {
                uint64_t v43 = 0;
                goto LABEL_131;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v22)) {
          uint64_t v43 = 0;
        }
LABEL_131:
        uint64_t v79 = 136;
        goto LABEL_136;
      case 5:
        if (!v36 || (*(_WORD *)(a1 + 164) & 0x100) != 0) {
          goto LABEL_120;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_188;
        }
        v57 = objc_alloc_init(GEOPDDeparture);
        if (!GEOPDDepartureReadAllFrom((uint64_t)v57, (void *)v3, v10 & 1)) {
          goto LABEL_187;
        }
        PBReaderRecallMark();
        -[GEOPDDepartureSequence _addNoFlagsDeparture:](a1, v57);
        goto LABEL_71;
      case 6:
        if (!v36 || (*(_WORD *)(a1 + 164) & 0x80) != 0) {
          goto LABEL_120;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_188;
        }
        v57 = objc_alloc_init(GEOPDDepartureFrequency);
        if (!GEOPDDepartureFrequencyReadAllFrom((uint64_t)v57, (void *)v3)) {
          goto LABEL_187;
        }
        PBReaderRecallMark();
        -[GEOPDDepartureSequence _addNoFlagsDepartureFrequency:](a1, v57);
LABEL_71:

        goto LABEL_148;
      case 11:
        if (!v36 || (*(_WORD *)(a1 + 164) & 0x20) != 0)
        {
LABEL_120:
          char v77 = PBReaderSkipValueWithTag();
          char v18 = v93;
          uint64_t v19 = (int *)MEMORY[0x1E4F940E8];
          v22 = (int *)MEMORY[0x1E4F940C8];
          BOOL v23 = (int *)MEMORY[0x1E4F940B8];
          if ((v77 & 1) == 0) {
            goto LABEL_186;
          }
          goto LABEL_150;
        }
        if (!PBReaderPlaceMark()) {
          goto LABEL_188;
        }
        -[GEOPDDepartureSequence _reserveOperatingHours:](a1, 1uLL);
        if (!GEOPDTimeRangeReadAllFrom(*(void *)(a1 + 48) + 12 * *(void *)(a1 + 56), v3)) {
          goto LABEL_188;
        }
        PBReaderRecallMark();
        ++*(void *)(a1 + 56);
        goto LABEL_148;
      case 12:
        if (!v36) {
          goto LABEL_122;
        }
        if ((*(_WORD *)(a1 + 164) & 0x200) == 0)
        {
          uint64_t v58 = PBReaderReadString();
          uint64_t v59 = 96;
          goto LABEL_117;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_188;
        }
        __int16 v80 = *(_WORD *)(a1 + 164) << 6;
        goto LABEL_147;
      case 13:
        if (!v36) {
          goto LABEL_122;
        }
        if ((*(_WORD *)(a1 + 164) & 0x800) == 0)
        {
          uint64_t v58 = PBReaderReadString();
          uint64_t v59 = 112;
          goto LABEL_117;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_188;
        }
        __int16 v80 = 16 * *(_WORD *)(a1 + 164);
        goto LABEL_147;
      case 14:
        if (!v36 || (*(_WORD *)(a1 + 164) & 0x10) != 0) {
          goto LABEL_122;
        }
        if (v33 != 2)
        {
          char v81 = 0;
          unsigned int v82 = 0;
          uint64_t v83 = 0;
          while (1)
          {
            uint64_t v84 = *v19;
            uint64_t v85 = *(void *)(v3 + v84);
            unint64_t v86 = v85 + 1;
            if (v85 == -1 || v86 > *(void *)(v3 + *v6)) {
              break;
            }
            char v87 = *(unsigned char *)(*(void *)(v3 + *v23) + v85);
            *(void *)(v3 + v84) = v86;
            v83 |= (unint64_t)(v87 & 0x7F) << v81;
            if (v87 < 0)
            {
              v81 += 7;
              BOOL v31 = v82++ >= 9;
              if (!v31) {
                continue;
              }
            }
            goto LABEL_162;
          }
          *(unsigned char *)(v3 + *v22) = 1;
LABEL_162:
          PBRepeatedUInt64Add();
          goto LABEL_148;
        }
        if (!PBReaderPlaceMark()) {
          goto LABEL_188;
        }
        while (1)
        {
          v60 = (int *)MEMORY[0x1E4F940E8];
          v61 = (int *)MEMORY[0x1E4F940C8];
          if (*(void *)(v3 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(v3 + *v6)
            || *(unsigned char *)(v3 + (int)*MEMORY[0x1E4F940C8]))
          {
            break;
          }
          char v62 = 0;
          unsigned int v63 = 0;
          uint64_t v64 = 0;
          v65 = (int *)MEMORY[0x1E4F940B8];
          while (1)
          {
            uint64_t v66 = *v60;
            uint64_t v67 = *(void *)(v3 + v66);
            unint64_t v68 = v67 + 1;
            if (v67 == -1 || v68 > *(void *)(v3 + *v6)) {
              break;
            }
            char v69 = *(unsigned char *)(*(void *)(v3 + *v65) + v67);
            *(void *)(v3 + v66) = v68;
            v64 |= (unint64_t)(v69 & 0x7F) << v62;
            if (v69 < 0)
            {
              v62 += 7;
              BOOL v31 = v63++ >= 9;
              if (!v31) {
                continue;
              }
            }
            goto LABEL_97;
          }
          *(unsigned char *)(v3 + *v61) = 1;
LABEL_97:
          PBRepeatedUInt64Add();
        }
        PBReaderRecallMark();
        v22 = (int *)MEMORY[0x1E4F940C8];
        uint64_t v19 = (int *)MEMORY[0x1E4F940E8];
        char v18 = v93;
        goto LABEL_149;
      case 15:
        if (!v36) {
          goto LABEL_122;
        }
        if ((*(_WORD *)(a1 + 164) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_188;
          }
          __int16 v80 = *(_WORD *)(a1 + 164) << 9;
LABEL_147:
          v7 += v80 >> 15;
          goto LABEL_148;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_188;
        }
        v57 = objc_alloc_init(GEOPBTransitArtwork);
        if (GEOPBTransitArtworkReadAllFrom((uint64_t)v57, (void *)v3, v10 & 1))
        {
          PBReaderRecallMark();
          v70 = *(void **)(a1 + 72);
          *(void *)(a1 + 72) = v57;
LABEL_118:

          --v7;
LABEL_148:
          char v18 = v93;
          uint64_t v19 = (int *)MEMORY[0x1E4F940E8];
          v22 = (int *)MEMORY[0x1E4F940C8];
LABEL_149:
          BOOL v23 = (int *)MEMORY[0x1E4F940B8];
LABEL_150:
          if (!(v95 & 1 | (v7 != 0)) || *(void *)(v3 + *v19) >= *(void *)(v3 + *v6)) {
            goto LABEL_163;
          }
          continue;
        }
LABEL_187:

LABEL_188:
        int v94 = 0;
        char v18 = v93;
LABEL_164:
        char v21 = v92;
LABEL_165:
        if (v21) {
LABEL_166:
        }
          *(_WORD *)(a1 + 164) |= 8u;
        if (v18 & 1 | ((v94 & 1) == 0))
        {
          *(_WORD *)(a1 + 164) |= 0x100u;
          *(_WORD *)(a1 + 164) |= 0x80u;
          *(_WORD *)(a1 + 164) |= 0x20u;
          *(_WORD *)(a1 + 164) |= 0x200u;
          *(_WORD *)(a1 + 164) |= 0x800u;
          *(_WORD *)(a1 + 164) |= 0x10u;
          *(_WORD *)(a1 + 164) |= 0x40u;
          *(_WORD *)(a1 + 164) |= 0x400u;
          *(_WORD *)(a1 + 164) |= 0x1000u;
        }
        else if (v20)
        {
          while (1)
          {
            int v88 = *v20++;
            __int16 v89 = 256;
            switch(v88)
            {
              case 0:
                goto LABEL_180;
              case 5:
                goto LABEL_179;
              case 6:
                __int16 v89 = 128;
                goto LABEL_179;
              case 11:
                __int16 v89 = 32;
                goto LABEL_179;
              case 12:
                __int16 v89 = 512;
                goto LABEL_179;
              case 13:
                __int16 v89 = 2048;
                goto LABEL_179;
              case 14:
                __int16 v89 = 16;
                goto LABEL_179;
              case 15:
                __int16 v89 = 64;
                goto LABEL_179;
              case 17:
                __int16 v89 = 1024;
                goto LABEL_179;
              case 18:
                __int16 v89 = 4096;
LABEL_179:
                *(_WORD *)(a1 + 164) |= v89;
                break;
              default:
                continue;
            }
          }
        }
LABEL_180:
        if (v94)
        {
          uint64_t v3 = *(unsigned char *)(v3 + (int)*MEMORY[0x1E4F940C8]) == 0;
          if ((v18 & 1) == 0) {
            return v3;
          }
LABEL_184:
          v90 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        else
        {
          uint64_t v3 = 0;
          if (v18) {
            goto LABEL_184;
          }
        }
        return v3;
      case 16:
        if ((v8 & 1) == 0) {
          goto LABEL_122;
        }
        char v71 = 0;
        unsigned int v72 = 0;
        uint64_t v43 = 0;
        *(_WORD *)(a1 + 164) |= 4u;
        while (2)
        {
          uint64_t v73 = *v19;
          uint64_t v74 = *(void *)(v3 + v73);
          unint64_t v75 = v74 + 1;
          if (v74 == -1 || v75 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v22) = 1;
          }
          else
          {
            char v76 = *(unsigned char *)(*(void *)(v3 + *v23) + v74);
            *(void *)(v3 + v73) = v75;
            v43 |= (unint64_t)(v76 & 0x7F) << v71;
            if (v76 < 0)
            {
              v71 += 7;
              BOOL v31 = v72++ >= 9;
              if (v31)
              {
                uint64_t v43 = 0;
                goto LABEL_135;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v22)) {
          uint64_t v43 = 0;
        }
LABEL_135:
        uint64_t v79 = 144;
LABEL_136:
        *(void *)(a1 + v79) = v43;
        goto LABEL_150;
      case 17:
        if (!v36) {
          goto LABEL_122;
        }
        if ((*(_WORD *)(a1 + 164) & 0x400) == 0)
        {
          uint64_t v58 = PBReaderReadString();
          uint64_t v59 = 104;
          goto LABEL_117;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_188;
        }
        __int16 v80 = 32 * *(_WORD *)(a1 + 164);
        goto LABEL_147;
      case 18:
        if (!v36) {
          goto LABEL_122;
        }
        if ((*(_WORD *)(a1 + 164) & 0x1000) == 0)
        {
          uint64_t v58 = PBReaderReadString();
          uint64_t v59 = 128;
LABEL_117:
          v70 = *(void **)(a1 + v59);
          *(void *)(a1 + v59) = v58;
          goto LABEL_118;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_188;
        }
        __int16 v80 = 8 * *(_WORD *)(a1 + 164);
        goto LABEL_147;
      default:
        if ((v92 & 1) == 0 || (*(_WORD *)(a1 + 164) & 8) != 0)
        {
LABEL_122:
          char v78 = PBReaderSkipValueWithTag();
          BOOL v23 = (int *)MEMORY[0x1E4F940B8];
          v22 = (int *)MEMORY[0x1E4F940C8];
          uint64_t v19 = (int *)MEMORY[0x1E4F940E8];
          char v18 = v93;
          if ((v78 & 1) == 0)
          {
LABEL_186:
            int v94 = 0;
            goto LABEL_164;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v54 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            v55 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v54;
          }
          int v56 = PBUnknownFieldAdd();
          char v18 = v93;
          uint64_t v19 = (int *)MEMORY[0x1E4F940E8];
          v22 = (int *)MEMORY[0x1E4F940C8];
          BOOL v23 = (int *)MEMORY[0x1E4F940B8];
          if (!v56)
          {
            int v94 = 0;
            goto LABEL_166;
          }
        }
        goto LABEL_150;
    }
  }
}

void sub_189A8275C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A82988(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A82C2C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A82D3C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A82E4C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A82FDC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A830EC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A83960(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A83A54(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDDepartureSequenceCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  uint64_t v23 = *MEMORY[0x1E4F143B8];
  long long v17 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  long long v20 = 0u;
  id v2 = a1[11];
  uint64_t v3 = [v2 countByEnumeratingWithState:&v17 objects:v22 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v18;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v18 != v5) {
          objc_enumerationMutation(v2);
        }
        [*(id *)(*((void *)&v17 + 1) + 8 * v6++) readAll:1];
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v17 objects:v22 count:16];
    }
    while (v4);
  }

  long long v15 = 0u;
  long long v16 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  id v7 = a1[10];
  uint64_t v8 = [v7 countByEnumeratingWithState:&v13 objects:v21 count:16];
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)v14;
    do
    {
      uint64_t v11 = 0;
      do
      {
        if (*(void *)v14 != v10) {
          objc_enumerationMutation(v7);
        }
        objc_msgSend(*(id *)(*((void *)&v13 + 1) + 8 * v11++), "readAll:", 1, (void)v13);
      }
      while (v9 != v11);
      uint64_t v9 = [v7 countByEnumeratingWithState:&v13 objects:v21 count:16];
    }
    while (v9);
  }

  return [a1[9] readAll:1];
}

uint64_t GEOPDDepartureSequenceReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 156))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDDepartureSequenceReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 160));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 152) = [v8 position];
  *(_DWORD *)(a1 + 156) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOPDDepartureSequenceReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOPDDepartureSequenceReadAllFrom_initialTag;
  }
  uint64_t Specified = GEOPDDepartureSequenceReadSpecified(a1, (uint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOPDDepartureSequenceCallReadAllRecursiveWithoutSynchronized((id *)a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 160));
  return Specified;
}

void sub_189A848D4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDDepartureSequenceIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (!a1[*v4])
    {
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        BOOL v13 = v7++ >= 9;
        if (v13)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_89;
          }
          unsigned int v17 = 0;
          while (1)
          {
            uint64_t v18 = *v2;
            uint64_t v19 = *(void *)&a1[v18];
            unint64_t v20 = v19 + 1;
            if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
              goto LABEL_70;
            }
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if (v21 < 0)
            {
              BOOL v22 = v17++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_75;
          }
        case 2u:
          if ((v8 & 7) != 0) {
            goto LABEL_89;
          }
          unsigned int v23 = 0;
          while (1)
          {
            uint64_t v24 = *v2;
            uint64_t v25 = *(void *)&a1[v24];
            unint64_t v26 = v25 + 1;
            if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
              goto LABEL_70;
            }
            int v27 = *(char *)(*(void *)&a1[*v5] + v25);
            *(void *)&a1[v24] = v26;
            if (v27 < 0)
            {
              BOOL v22 = v23++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_75;
          }
        case 5u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDDepartureIsValid(a1)) {
            goto LABEL_89;
          }
          goto LABEL_61;
        case 6u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDDepartureFrequencyIsValid(a1)) {
            goto LABEL_89;
          }
          goto LABEL_61;
        case 0xBu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDTimeRangeIsValid(a1)) {
            goto LABEL_89;
          }
          goto LABEL_61;
        case 0xCu:
          if (v15 == 2) {
            goto LABEL_74;
          }
          goto LABEL_89;
        case 0xDu:
          if (v15 == 2) {
            goto LABEL_74;
          }
          goto LABEL_89;
        case 0xEu:
          if (v15 == 2)
          {
            if (!PBReaderPlaceMark())
            {
LABEL_89:
              PBReaderRecallMark();
              return 0;
            }
LABEL_78:
            while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
            {
              unsigned int v38 = a1[*v4];
              if (a1[*v4]) {
                break;
              }
              while (1)
              {
                uint64_t v39 = *v2;
                uint64_t v40 = *(void *)&a1[v39];
                unint64_t v41 = v40 + 1;
                if (v40 == -1 || v41 > *(void *)&a1[*v3]) {
                  break;
                }
                int v42 = *(char *)(*(void *)&a1[*v5] + v40);
                *(void *)&a1[v39] = v41;
                if (v42 < 0)
                {
                  BOOL v13 = v38++ >= 9;
                  if (!v13) {
                    continue;
                  }
                }
                goto LABEL_78;
              }
              a1[*v4] = 1;
            }
LABEL_61:
            PBReaderRecallMark();
          }
          else
          {
            if ((v8 & 7) != 0) {
              goto LABEL_89;
            }
            while (1)
            {
              uint64_t v28 = *v2;
              uint64_t v29 = *(void *)&a1[v28];
              unint64_t v30 = v29 + 1;
              if (v29 == -1 || v30 > *(void *)&a1[*v3]) {
                break;
              }
              int v31 = *(char *)(*(void *)&a1[*v5] + v29);
              *(void *)&a1[v28] = v30;
              if (v31 < 0)
              {
                unsigned int v32 = v15++;
                if (v32 <= 8) {
                  continue;
                }
              }
              goto LABEL_75;
            }
LABEL_70:
            a1[*v4] = 1;
          }
LABEL_75:
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_87;
          }
          break;
        case 0xFu:
          if (v15 == 2 && PBReaderPlaceMark() && GEOPBTransitArtworkIsValid(a1)) {
            goto LABEL_61;
          }
          goto LABEL_89;
        case 0x10u:
          if ((v8 & 7) != 0) {
            goto LABEL_89;
          }
          unsigned int v33 = 0;
          while (1)
          {
            uint64_t v34 = *v2;
            uint64_t v35 = *(void *)&a1[v34];
            unint64_t v36 = v35 + 1;
            if (v35 == -1 || v36 > *(void *)&a1[*v3]) {
              goto LABEL_70;
            }
            int v37 = *(char *)(*(void *)&a1[*v5] + v35);
            *(void *)&a1[v34] = v36;
            if (v37 < 0)
            {
              BOOL v22 = v33++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_75;
          }
        case 0x11u:
          if (v15 == 2) {
            goto LABEL_74;
          }
          goto LABEL_89;
        case 0x12u:
          if (v15 == 2) {
            goto LABEL_74;
          }
          goto LABEL_89;
        default:
LABEL_74:
          if (PBReaderSkipValueWithTag()) {
            goto LABEL_75;
          }
          goto LABEL_89;
      }
    }
  }
LABEL_87:
  BOOL v43 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v43;
}

void sub_189A85320(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A8576C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A86034(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDDepartureSequenceContainerReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 68);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 64)];
  char v7 = 0;
  uint64_t v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  char v12 = &OBJC_IVAR___GEOXPCReply__error;
  unsigned int v13 = vaddv_s16((int16x4_t)(*(void *)&vshl_u16((uint16x4_t)(*(void *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 80)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFFFFFDFFFEFFFCLL) & 0xFF01FF01FF01FF01));
  while (2)
  {
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    uint64_t v16 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v13;
        goto LABEL_8;
      case -3:
        char v7 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v15 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v17 = v13 > 1;
        char v18 = v17 & ~(_BYTE)v11 | v9;
        char v19 = v17 | v11;
        unint64_t v20 = (int *)MEMORY[0x1E4F940E8];
        if (((v17 | v11) | v7)) {
          int v21 = 0;
        }
        else {
          int v21 = a3;
        }
        int v22 = 1;
        if (*(void *)(v3 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(v3 + *v6)) {
          goto LABEL_102;
        }
        char v74 = v18;
        char v76 = v19 | v18;
        char v77 = (v21 == 0) | v19;
        unsigned int v23 = (int *)MEMORY[0x1E4F940C8];
        uint64_t v24 = (int *)MEMORY[0x1E4F940B8];
        char v75 = v17 | v11;
        break;
      default:
        ++v13;
LABEL_7:
        uint64_t v14 = v9;
LABEL_8:
        uint64_t v15 = v10;
        uint64_t v16 = v11;
LABEL_10:
        ++v8;
        uint64_t v9 = v14;
        uint64_t v10 = v15;
        uint64_t v11 = v16;
        continue;
    }
    break;
  }
  while (!*(unsigned char *)(v3 + *v23))
  {
    char v25 = 0;
    unsigned int v26 = 0;
    unint64_t v27 = 0;
    while (1)
    {
      uint64_t v28 = *v20;
      uint64_t v29 = *(void *)(v3 + v28);
      unint64_t v30 = v29 + 1;
      if (v29 == -1 || v30 > *(void *)(v3 + *v6)) {
        break;
      }
      char v31 = *(unsigned char *)(*(void *)(v3 + *v24) + v29);
      *(void *)(v3 + v28) = v30;
      v27 |= (unint64_t)(v31 & 0x7F) << v25;
      if ((v31 & 0x80) == 0) {
        goto LABEL_25;
      }
      v25 += 7;
      BOOL v32 = v26++ >= 9;
      if (v32)
      {
        unint64_t v27 = 0;
        int v33 = *(unsigned __int8 *)(v3 + *v23);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v23) = 1;
LABEL_25:
    int v33 = *(unsigned __int8 *)(v3 + *v23);
    if (*(unsigned char *)(v3 + *v23)) {
      unint64_t v27 = 0;
    }
LABEL_27:
    int v34 = v27 & 7;
    if (v33 || v34 == 4) {
      break;
    }
    unint64_t v36 = v27 >> 3;
    BOOL v37 = v19;
    if ((v77 & 1) == 0)
    {
      unsigned int v38 = v21;
      do
      {
        int v40 = *v38++;
        int v39 = v40;
        BOOL v37 = v40 != 0;
        if (v40) {
          BOOL v41 = v39 == v36;
        }
        else {
          BOOL v41 = 1;
        }
      }
      while (!v41);
    }
    switch((int)v36)
    {
      case 1:
        if (!v37 || (*(unsigned char *)(a1 + 80) & 4) != 0) {
          goto LABEL_77;
        }
        if (v34 == 2)
        {
          if (!PBReaderPlaceMark()) {
            goto LABEL_119;
          }
          char v6 = (int *)MEMORY[0x1E4F940E0];
          unsigned int v23 = (int *)MEMORY[0x1E4F940C8];
          if (*(void *)(v3 + *v20) < *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]))
          {
            do
            {
              if (*(unsigned char *)(v3 + *v23)) {
                break;
              }
              char v42 = 0;
              unsigned int v43 = 0;
              uint64_t v44 = 0;
              while (1)
              {
                uint64_t v45 = *v20;
                uint64_t v46 = *(void *)(v3 + v45);
                unint64_t v47 = v46 + 1;
                if (v46 == -1 || v47 > *(void *)(v3 + *v6)) {
                  break;
                }
                char v48 = *(unsigned char *)(*(void *)(v3 + *v24) + v46);
                *(void *)(v3 + v45) = v47;
                v44 |= (unint64_t)(v48 & 0x7F) << v42;
                if (v48 < 0)
                {
                  v42 += 7;
                  BOOL v32 = v43++ >= 9;
                  if (!v32) {
                    continue;
                  }
                }
                goto LABEL_53;
              }
              *(unsigned char *)(v3 + *v23) = 1;
LABEL_53:
              PBRepeatedUInt64Add();
            }
            while (*(void *)(v3 + *v20) < *(void *)(v3 + *v6));
          }
          PBReaderRecallMark();
        }
        else
        {
          char v63 = 0;
          unsigned int v64 = 0;
          uint64_t v65 = 0;
          char v6 = (int *)MEMORY[0x1E4F940E0];
          unsigned int v23 = (int *)MEMORY[0x1E4F940C8];
          while (1)
          {
            uint64_t v66 = *v20;
            uint64_t v67 = *(void *)(v3 + v66);
            unint64_t v68 = v67 + 1;
            if (v67 == -1 || v68 > *(void *)(v3 + *v6)) {
              break;
            }
            char v69 = *(unsigned char *)(*(void *)(v3 + *v24) + v67);
            *(void *)(v3 + v66) = v68;
            v65 |= (unint64_t)(v69 & 0x7F) << v63;
            if (v69 < 0)
            {
              v63 += 7;
              BOOL v32 = v64++ >= 9;
              if (!v32) {
                continue;
              }
            }
            goto LABEL_97;
          }
          *(unsigned char *)(v3 + *v23) = 1;
LABEL_97:
          PBRepeatedUInt64Add();
        }
        char v19 = v75;
        goto LABEL_78;
      case 2:
        if (!v37 || (*(unsigned char *)(a1 + 80) & 0x10) != 0) {
          goto LABEL_77;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_119;
        }
        unint64_t v52 = objc_alloc_init(GEOPDTransitLabel);
        if (GEOPDTransitLabelReadAllFrom((uint64_t)v52, (void *)v3, v10 & 1))
        {
          PBReaderRecallMark();
          -[GEOPDDepartureSequenceContainer _addNoFlagsLabel:](a1, v52);

LABEL_87:
          char v19 = v75;
LABEL_88:
          char v6 = (int *)MEMORY[0x1E4F940E0];
          unsigned int v23 = (int *)MEMORY[0x1E4F940C8];
          goto LABEL_78;
        }

LABEL_119:
        int v22 = 0;
        char v12 = &OBJC_IVAR___GEOXPCReply__error;
        char v19 = v75;
LABEL_101:
        char v18 = v74;
LABEL_102:
        if (v18) {
LABEL_103:
        }
          *(unsigned char *)(a1 + v12[911]) |= 2u;
        if (v19 & 1 | ((v22 & 1) == 0))
        {
          *(unsigned char *)(a1 + v12[911]) |= 4u;
          *(unsigned char *)(a1 + v12[911]) |= 0x10u;
          *(unsigned char *)(a1 + v12[911]) |= 8u;
        }
        else if (v21)
        {
          while (1)
          {
            int v70 = *v21++;
            char v71 = 4;
            switch(v70)
            {
              case 0:
                goto LABEL_111;
              case 1:
                goto LABEL_110;
              case 2:
                char v71 = 16;
                goto LABEL_110;
              case 4:
                char v71 = 8;
LABEL_110:
                *(unsigned char *)(a1 + v12[911]) |= v71;
                break;
              default:
                continue;
            }
          }
        }
LABEL_111:
        if (v22)
        {
          unint64_t v3 = *(unsigned char *)(v3 + (int)*MEMORY[0x1E4F940C8]) == 0;
          if ((v19 & 1) == 0) {
            return v3;
          }
LABEL_115:
          unsigned int v72 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        else
        {
          unint64_t v3 = 0;
          if (v19) {
            goto LABEL_115;
          }
        }
        return v3;
      case 3:
        if ((v7 & 1) == 0) {
          goto LABEL_77;
        }
        char v53 = 0;
        unsigned int v54 = 0;
        uint64_t v55 = 0;
        *(unsigned char *)(a1 + 80) |= 1u;
        char v6 = (int *)MEMORY[0x1E4F940E0];
        unsigned int v23 = (int *)MEMORY[0x1E4F940C8];
        while (2)
        {
          uint64_t v56 = *v20;
          uint64_t v57 = *(void *)(v3 + v56);
          unint64_t v58 = v57 + 1;
          if (v57 == -1 || v58 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v23) = 1;
          }
          else
          {
            char v59 = *(unsigned char *)(*(void *)(v3 + *v24) + v57);
            *(void *)(v3 + v56) = v58;
            v55 |= (unint64_t)(v59 & 0x7F) << v53;
            if (v59 < 0)
            {
              v53 += 7;
              BOOL v32 = v54++ >= 9;
              if (v32)
              {
                uint64_t v55 = 0;
                goto LABEL_84;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v23)) {
          uint64_t v55 = 0;
        }
LABEL_84:
        *(unsigned char *)(a1 + 76) = v55 != 0;
        goto LABEL_78;
      case 4:
        if (!v37) {
          goto LABEL_77;
        }
        if ((*(unsigned char *)(a1 + 80) & 8) == 0)
        {
          uint64_t v60 = PBReaderReadString();
          v61 = *(void **)(a1 + 48);
          *(void *)(a1 + 48) = v60;

          char v19 = v75;
          --v8;
          goto LABEL_88;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_119;
        }
        v8 += *(unsigned __int8 *)(a1 + 80) << 28 >> 31;
        goto LABEL_87;
      default:
        if ((v74 & 1) == 0 || (*(unsigned char *)(a1 + 80) & 2) != 0)
        {
LABEL_77:
          char v62 = PBReaderSkipValueWithTag();
          char v19 = v75;
          char v6 = (int *)MEMORY[0x1E4F940E0];
          unsigned int v23 = (int *)MEMORY[0x1E4F940C8];
          if ((v62 & 1) == 0)
          {
            int v22 = 0;
            goto LABEL_100;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v49 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            uint64_t v50 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v49;
          }
          int v51 = PBUnknownFieldAdd();
          char v19 = v75;
          char v6 = (int *)MEMORY[0x1E4F940E0];
          unsigned int v23 = (int *)MEMORY[0x1E4F940C8];
          if (!v51)
          {
            int v22 = 0;
            char v12 = &OBJC_IVAR___GEOXPCReply__error;
            goto LABEL_103;
          }
        }
LABEL_78:
        if (!(v76 & 1 | (v8 != 0)) || *(void *)(v3 + *v20) >= *(void *)(v3 + *v6)) {
          goto LABEL_99;
        }
        break;
    }
  }
LABEL_99:
  int v22 = 1;
LABEL_100:
  char v12 = &OBJC_IVAR___GEOXPCReply__error;
  goto LABEL_101;
}

void sub_189A86A5C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A86C88(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A871D4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDDepartureSequenceContainerCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v11 = *MEMORY[0x1E4F143B8];
  long long v6 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  id v1 = *(id *)(a1 + 56);
  uint64_t v2 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t v4 = *(void *)v7;
    do
    {
      uint64_t v5 = 0;
      do
      {
        if (*(void *)v7 != v4) {
          objc_enumerationMutation(v1);
        }
        objc_msgSend(*(id *)(*((void *)&v6 + 1) + 8 * v5++), "readAll:", 1, (void)v6);
      }
      while (v3 != v5);
      uint64_t v3 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
    }
    while (v3);
  }
}

unint64_t GEOPDDepartureSequenceContainerReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 68))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDDepartureSequenceContainerReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 72));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 64) = [v8 position];
  *(_DWORD *)(a1 + 68) = [v8 length];
  if (a3) {
    long long v9 = (int *)&GEOPDDepartureSequenceContainerReadAllFrom_recursiveTag;
  }
  else {
    long long v9 = (int *)&GEOPDDepartureSequenceContainerReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDDepartureSequenceContainerReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOPDDepartureSequenceContainerCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
  return Specified;
}

void sub_189A87540(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDTransitLabelIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  uint64_t v2 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_39;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        goto LABEL_39;
      }
      unint64_t v17 = v8 >> 3;
      if ((v8 >> 3) == 5) {
        break;
      }
      if (v17 != 4)
      {
        if (v17 == 1)
        {
          if ((v8 & 7) != 0) {
            goto LABEL_41;
          }
          unsigned int v18 = 0;
          while (1)
          {
            uint64_t v19 = *v2;
            uint64_t v20 = *(void *)&a1[v19];
            unint64_t v21 = v20 + 1;
            if (v20 == -1 || v21 > *(void *)&a1[*v3]) {
              break;
            }
            int v22 = *(char *)(*(void *)&a1[*v5] + v20);
            *(void *)&a1[v19] = v21;
            if (v22 < 0 && v18++ <= 8) {
              continue;
            }
            goto LABEL_38;
          }
          a1[*v4] = 1;
          goto LABEL_38;
        }
        goto LABEL_35;
      }
      if (v15 != 2 || !PBReaderPlaceMark() || !GEOPBTransitArtworkIsValid(a1))
      {
LABEL_41:
        PBReaderRecallMark();
        return 0;
      }
      PBReaderRecallMark();
LABEL_38:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_39;
      }
    }
    if (v15 != 2) {
      goto LABEL_41;
    }
LABEL_35:
    if ((PBReaderSkipValueWithTag() & 1) == 0) {
      goto LABEL_41;
    }
    goto LABEL_38;
  }
LABEL_39:
  BOOL v24 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v24;
}

void sub_189A87A28(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A87CC0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A8807C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDDirectionIntentReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  char v7 = 0;
  uint64_t v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  int v11 = ((*(unsigned __int8 *)(a1 + 56) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 56) >> 2) & 1)
      + ((*(unsigned __int8 *)(a1 + 56) >> 1) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v11;
        goto LABEL_8;
      case -3:
        char v7 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_9;
      case 0:
        BOOL v14 = v11 != 0;
        char v15 = v14 & ~(_BYTE)v10 | v9;
        unsigned __int8 v16 = v14 | v10;
        char v59 = v15;
        char v60 = v16 | v15;
        if ((v16 | v7)) {
          unint64_t v17 = 0;
        }
        else {
          unint64_t v17 = a3;
        }
        unsigned int v18 = (int *)MEMORY[0x1E4F940E8];
        char v61 = (v17 == 0) | v16;
        BOOL v62 = v16;
        uint64_t v19 = (int *)MEMORY[0x1E4F940C8];
        uint64_t v20 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v11;
LABEL_7:
        uint64_t v12 = v9;
LABEL_8:
        uint64_t v13 = v10;
LABEL_9:
        ++v8;
        uint64_t v9 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v18) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v19)) {
      goto LABEL_78;
    }
    char v21 = 0;
    unsigned int v22 = 0;
    unint64_t v23 = 0;
    while (1)
    {
      uint64_t v24 = *v18;
      uint64_t v25 = *(void *)(v3 + v24);
      unint64_t v26 = v25 + 1;
      if (v25 == -1 || v26 > *(void *)(v3 + *v6)) {
        break;
      }
      char v27 = *(unsigned char *)(*(void *)(v3 + *v20) + v25);
      *(void *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0) {
        goto LABEL_24;
      }
      v21 += 7;
      BOOL v28 = v22++ >= 9;
      if (v28)
      {
        unint64_t v23 = 0;
        int v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_26;
      }
    }
    *(unsigned char *)(v3 + *v19) = 1;
LABEL_24:
    int v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(unsigned char *)(v3 + *v19)) {
      unint64_t v23 = 0;
    }
LABEL_26:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_78:
      int v57 = 1;
      goto LABEL_79;
    }
    unint64_t v31 = v23 >> 3;
    BOOL v32 = v62;
    if ((v61 & 1) == 0)
    {
      int v33 = v17;
      do
      {
        int v35 = *v33++;
        int v34 = v35;
        BOOL v32 = v35 != 0;
        if (v35) {
          BOOL v36 = v34 == v31;
        }
        else {
          BOOL v36 = 1;
        }
      }
      while (!v36);
    }
    if (v31 == 3)
    {
      if (v7)
      {
        char v39 = 0;
        unsigned int v40 = 0;
        uint64_t v41 = 0;
        *(unsigned char *)(a1 + 56) |= 1u;
        while (1)
        {
          uint64_t v42 = *v18;
          uint64_t v43 = *(void *)(v3 + v42);
          unint64_t v44 = v43 + 1;
          if (v43 == -1 || v44 > *(void *)(v3 + *v6)) {
            break;
          }
          char v45 = *(unsigned char *)(*(void *)(v3 + *v20) + v43);
          *(void *)(v3 + v42) = v44;
          v41 |= (unint64_t)(v45 & 0x7F) << v39;
          if ((v45 & 0x80) == 0) {
            goto LABEL_68;
          }
          v39 += 7;
          BOOL v28 = v40++ >= 9;
          if (v28)
          {
            LODWORD(v41) = 0;
            goto LABEL_70;
          }
        }
        *(unsigned char *)(v3 + *v19) = 1;
LABEL_68:
        if (*(unsigned char *)(v3 + *v19)) {
          LODWORD(v41) = 0;
        }
LABEL_70:
        *(_DWORD *)(a1 + 52) = v41;
        goto LABEL_77;
      }
      goto LABEL_65;
    }
    if (v31 == 2) {
      break;
    }
    if (v31 == 1)
    {
      if (v32)
      {
        if ((*(unsigned char *)(a1 + 56) & 8) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_99;
          }
          BOOL v37 = objc_alloc_init(GEOPDResolvedItem);
          if (!GEOPDResolvedItemReadAllFrom((uint64_t)v37, (void *)v3)) {
            goto LABEL_98;
          }
          PBReaderRecallMark();
          uint64_t v38 = 32;
LABEL_58:
          uint64_t v46 = *(void **)(a1 + v38);
          *(void *)(a1 + v38) = v37;

          --v8;
LABEL_76:
          uint64_t v19 = (int *)MEMORY[0x1E4F940C8];
          goto LABEL_77;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_99;
        }
        char v51 = 16 * *(unsigned char *)(a1 + 56);
LABEL_75:
        v8 += v51 >> 7;
        goto LABEL_76;
      }
    }
    else if ((v59 & 1) != 0 && (*(unsigned char *)(a1 + 56) & 2) == 0)
    {
      if (!*(void *)(a1 + 16))
      {
        id v47 = objc_alloc_init(MEMORY[0x1E4F940B0]);
        char v48 = *(void **)(a1 + 16);
        *(void *)(a1 + 16) = v47;
      }
      int v49 = PBUnknownFieldAdd();
      uint64_t v19 = (int *)MEMORY[0x1E4F940C8];
      if (!v49)
      {
        int v57 = 0;
        unint64_t v58 = &OBJC_IVAR___GEOXPCReply__error;
        goto LABEL_81;
      }
      goto LABEL_77;
    }
LABEL_65:
    char v50 = PBReaderSkipValueWithTag();
    uint64_t v19 = (int *)MEMORY[0x1E4F940C8];
    if ((v50 & 1) == 0)
    {
      int v57 = 0;
LABEL_79:
      unint64_t v58 = &OBJC_IVAR___GEOXPCReply__error;
      goto LABEL_80;
    }
LABEL_77:
    if (!(v60 & 1 | (v8 != 0))) {
      goto LABEL_78;
    }
  }
  if (!v32) {
    goto LABEL_65;
  }
  if ((*(unsigned char *)(a1 + 56) & 4) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0) {
      goto LABEL_99;
    }
    char v51 = 32 * *(unsigned char *)(a1 + 56);
    goto LABEL_75;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_99;
  }
  BOOL v37 = objc_alloc_init(GEOPDResolvedItem);
  if (GEOPDResolvedItemReadAllFrom((uint64_t)v37, (void *)v3))
  {
    PBReaderRecallMark();
    uint64_t v38 = 24;
    goto LABEL_58;
  }
LABEL_98:

LABEL_99:
  int v57 = 0;
  unint64_t v58 = &OBJC_IVAR___GEOXPCReply__error;
  uint64_t v19 = (int *)MEMORY[0x1E4F940C8];
LABEL_80:
  if ((v59 & 1) == 0) {
    goto LABEL_82;
  }
LABEL_81:
  *(unsigned char *)(a1 + v58[917]) |= 2u;
LABEL_82:
  if (v62 || (v57 & 1) == 0)
  {
    *(unsigned char *)(a1 + v58[917]) |= 8u;
    *(unsigned char *)(a1 + v58[917]) |= 4u;
    goto LABEL_92;
  }
  if (v17)
  {
    while (2)
    {
      while (1)
      {
        int v53 = *v17++;
        int v52 = v53;
        if (v53 == 1) {
          break;
        }
        if (v52 == 2)
        {
          char v54 = 4;
          goto LABEL_91;
        }
        if (!v52) {
          goto LABEL_92;
        }
      }
      char v54 = 8;
LABEL_91:
      *(unsigned char *)(a1 + v58[917]) |= v54;
      continue;
    }
  }
LABEL_92:
  if (v57) {
    unint64_t v3 = *(unsigned char *)(v3 + *v19) == 0;
  }
  else {
    unint64_t v3 = 0;
  }
  if (v62)
  {
    uint64_t v55 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_189A88834(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A88D60(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDDirectionIntentReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDDirectionIntentReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOPDDirectionIntentReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOPDDirectionIntentReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDDirectionIntentReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_189A8926C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDDirectionIntentIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  uint64_t v2 = (int *)MEMORY[0x1E4F940E8];
  unint64_t v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      unint64_t v17 = v8 >> 3;
      if ((v8 >> 3) == 3)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_38;
        }
        unsigned int v18 = 0;
        while (1)
        {
          uint64_t v19 = *v2;
          uint64_t v20 = *(void *)&a1[v19];
          unint64_t v21 = v20 + 1;
          if (v20 == -1 || v21 > *(void *)&a1[*v3]) {
            break;
          }
          int v22 = *(char *)(*(void *)&a1[*v5] + v20);
          *(void *)&a1[v19] = v21;
          if (v22 < 0 && v18++ <= 8) {
            continue;
          }
          goto LABEL_36;
        }
        a1[*v4] = 1;
      }
      else if (v17 == 2 || v17 == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDSearchRelatedCategoryIsValid(a1))
        {
LABEL_38:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_38;
      }
LABEL_36:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v24 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v24;
}

void sub_189A89668(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDDirectionIntentIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  BOOL v2 = (*(unsigned char *)(a1 + 56) & 0x1C) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return v2;
}

void sub_189A89894(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A89EAC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDDotPlaceReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 60);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 56)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  unsigned int v12 = (vaddv_s16((int16x4_t)(*(void *)&vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int8 *)(a1 + 68)), (uint16x4_t)0xFFFDFFFCFFFEFFFFLL) & 0xFF01FF01FF01FF01))+ (*(unsigned char *)(a1 + 68) & 1));
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 > 2;
        char v17 = v16 & ~(_BYTE)v11 | v9;
        unsigned __int8 v18 = v16 | v11;
        char v54 = v17;
        char v55 = v18 | v17;
        if ((v18 | v8)) {
          uint64_t v19 = 0;
        }
        else {
          uint64_t v19 = a3;
        }
        char v56 = (v19 == 0) | v18;
        BOOL v57 = v18;
        uint64_t v20 = (int *)MEMORY[0x1E4F940E8];
        unint64_t v21 = (int *)MEMORY[0x1E4F940C8];
        int v22 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v9;
LABEL_8:
        uint64_t v14 = v10;
        uint64_t v15 = v11;
LABEL_10:
        ++v7;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v21)) {
      goto LABEL_78;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      if (v24++ >= 9)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_25:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_78:
      int v52 = 1;
      goto LABEL_79;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v57;
    if ((v56 & 1) == 0)
    {
      int v35 = v19;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    switch((int)v33)
    {
      case 1:
        if (!v34) {
          goto LABEL_65;
        }
        if ((*(unsigned char *)(a1 + 68) & 4) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_98;
          }
          char v39 = objc_alloc_init(GEOPDMapsIdentifier);
          if (GEOPDMapsIdentifierReadAllFrom((uint64_t)v39, (void *)v3))
          {
            PBReaderRecallMark();
            uint64_t v40 = 32;
            goto LABEL_60;
          }
          goto LABEL_97;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_98;
        }
        char v47 = 32 * *(unsigned char *)(a1 + 68);
        goto LABEL_75;
      case 2:
        if (!v34) {
          goto LABEL_65;
        }
        if ((*(unsigned char *)(a1 + 68) & 2) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_98;
          }
          char v47 = *(unsigned char *)(a1 + 68) << 6;
          goto LABEL_75;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_98;
        }
        char v39 = objc_alloc_init(GEOLatLng);
        if (!GEOLatLngReadAllFrom((uint64_t)v39, (void *)v3)) {
          goto LABEL_97;
        }
        PBReaderRecallMark();
        uint64_t v40 = 24;
        goto LABEL_60;
      case 3:
        if (!v34) {
          goto LABEL_65;
        }
        if ((*(unsigned char *)(a1 + 68) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_98;
          }
          char v47 = 8 * *(unsigned char *)(a1 + 68);
LABEL_75:
          v7 += v47 >> 7;
LABEL_76:
          unint64_t v21 = (int *)MEMORY[0x1E4F940C8];
          goto LABEL_77;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_98;
        }
        char v39 = objc_alloc_init(GEOStyleAttributes);
        if (GEOStyleAttributesReadAllFrom((uint64_t)v39, (void *)v3))
        {
          PBReaderRecallMark();
          uint64_t v40 = 48;
LABEL_60:
          unint64_t v44 = *(void **)(a1 + v40);
          *(void *)(a1 + v40) = v39;
LABEL_64:

          --v7;
          goto LABEL_76;
        }
LABEL_97:

LABEL_98:
        int v52 = 0;
        int v53 = &OBJC_IVAR___GEOXPCReply__error;
        unint64_t v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_80:
        if (v54) {
LABEL_81:
        }
          *(unsigned char *)(a1 + v53[924]) |= 1u;
        if (v57 || (v52 & 1) == 0)
        {
          *(unsigned char *)(a1 + v53[924]) |= 4u;
          *(unsigned char *)(a1 + v53[924]) |= 2u;
          *(unsigned char *)(a1 + v53[924]) |= 0x10u;
          *(unsigned char *)(a1 + v53[924]) |= 8u;
        }
        else if (v19)
        {
          while (1)
          {
            int v49 = *v19++;
            char v48 = 4;
            switch(v49)
            {
              case 0:
                goto LABEL_91;
              case 1:
                goto LABEL_89;
              case 2:
                char v48 = 2;
                goto LABEL_89;
              case 3:
                char v48 = 16;
                goto LABEL_89;
              case 4:
                char v48 = 8;
LABEL_89:
                *(unsigned char *)(a1 + v53[924]) |= v48;
                break;
              default:
                continue;
            }
          }
        }
LABEL_91:
        if (v52) {
          unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
        }
        else {
          unint64_t v3 = 0;
        }
        if (v57)
        {
          char v50 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      case 4:
        if (!v34) {
          goto LABEL_65;
        }
        if ((*(unsigned char *)(a1 + 68) & 8) == 0)
        {
          uint64_t v45 = PBReaderReadString();
          unint64_t v44 = *(void **)(a1 + 40);
          *(void *)(a1 + 40) = v45;
          goto LABEL_64;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_98;
        }
        char v47 = 16 * *(unsigned char *)(a1 + 68);
        goto LABEL_75;
      default:
        if (v54 & 1) == 0 || (*(unsigned char *)(a1 + 68))
        {
LABEL_65:
          char v46 = PBReaderSkipValueWithTag();
          unint64_t v21 = (int *)MEMORY[0x1E4F940C8];
          if ((v46 & 1) == 0)
          {
            int v52 = 0;
LABEL_79:
            int v53 = &OBJC_IVAR___GEOXPCReply__error;
            goto LABEL_80;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v41 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            uint64_t v42 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v41;
          }
          int v43 = PBUnknownFieldAdd();
          unint64_t v21 = (int *)MEMORY[0x1E4F940C8];
          if (!v43)
          {
            int v52 = 0;
            int v53 = &OBJC_IVAR___GEOXPCReply__error;
            goto LABEL_81;
          }
        }
LABEL_77:
        if (!(v55 & 1 | (v7 != 0))) {
          goto LABEL_78;
        }
        continue;
    }
  }
}

void sub_189A8A6C4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A8A7D4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A8A8E4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A8AD7C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDDotPlaceReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 60))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDDotPlaceReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = [v8 position];
  *(_DWORD *)(a1 + 60) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOPDDotPlaceReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOPDDotPlaceReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDDotPlaceReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    [*(id *)(a1 + 32) readAll:1];
    [*(id *)(a1 + 24) readAll:1];
    [*(id *)(a1 + 48) readAll:1];
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_189A8B31C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDDotPlaceIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  unint64_t v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (!a1[*v4])
    {
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 == 2 && PBReaderPlaceMark() && GEOPDMapsIdentifierIsValid(a1)) {
            goto LABEL_30;
          }
          goto LABEL_35;
        case 2u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOLatLngIsValid(a1)) {
            goto LABEL_35;
          }
          goto LABEL_30;
        case 3u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOStyleAttributesIsValid(a1)) {
            goto LABEL_35;
          }
LABEL_30:
          PBReaderRecallMark();
          goto LABEL_33;
        case 4u:
          if (v15 == 2) {
            goto LABEL_32;
          }
          goto LABEL_35;
        default:
LABEL_32:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_35:
            PBReaderRecallMark();
            return 0;
          }
LABEL_33:
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_34;
          }
          break;
      }
    }
  }
LABEL_34:
  BOOL v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

void sub_189A8B764(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDDotPlaceIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  BOOL v2 = (*(unsigned char *)(a1 + 68) & 0x3E) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return v2;
}

void sub_189A8BA0C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDETAReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  char v7 = 0;
  uint64_t v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  int v12 = ((*(unsigned __int16 *)(a1 + 72) >> 7) & 1)
      + ((*(unsigned __int16 *)(a1 + 72) >> 6) & 1)
      + ((*(unsigned __int16 *)(a1 + 72) >> 5) & 1);
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v7 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 != 0;
        char v17 = v16 | v11;
        char v83 = v16 & ~(_BYTE)v11 | v9;
        char v86 = v16 | v11 | v83;
        if (((v16 | v11) | v7)) {
          unsigned __int8 v18 = 0;
        }
        else {
          unsigned __int8 v18 = a3;
        }
        char v87 = (v18 == 0) | v17;
        uint64_t v19 = (int *)MEMORY[0x1E4F940E8];
        uint64_t v20 = (int *)MEMORY[0x1E4F940C8];
        unint64_t v21 = (int *)MEMORY[0x1E4F940B8];
        char v84 = v7;
        char v85 = v16 | v11;
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v9;
LABEL_8:
        uint64_t v14 = v10;
        uint64_t v15 = v11;
LABEL_10:
        ++v8;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v19) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v20)) {
      goto LABEL_122;
    }
    char v22 = 0;
    unsigned int v23 = 0;
    unint64_t v24 = 0;
    while (1)
    {
      uint64_t v25 = *v19;
      uint64_t v26 = *(void *)(v3 + v25);
      unint64_t v27 = v26 + 1;
      if (v26 == -1 || v27 > *(void *)(v3 + *v6)) {
        break;
      }
      char v28 = *(unsigned char *)(*(void *)(v3 + *v21) + v26);
      *(void *)(v3 + v25) = v27;
      v24 |= (unint64_t)(v28 & 0x7F) << v22;
      if ((v28 & 0x80) == 0) {
        goto LABEL_25;
      }
      v22 += 7;
      BOOL v29 = v23++ >= 9;
      if (v29)
      {
        unint64_t v24 = 0;
        int v30 = *(unsigned __int8 *)(v3 + *v20);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v20) = 1;
LABEL_25:
    int v30 = *(unsigned __int8 *)(v3 + *v20);
    if (*(unsigned char *)(v3 + *v20)) {
      unint64_t v24 = 0;
    }
LABEL_27:
    if (v30 || (v24 & 7) == 4)
    {
LABEL_122:
      int v81 = 1;
      goto LABEL_123;
    }
    unint64_t v32 = v24 >> 3;
    BOOL v33 = v17;
    if ((v87 & 1) == 0)
    {
      BOOL v34 = v18;
      do
      {
        int v36 = *v34++;
        int v35 = v36;
        BOOL v33 = v36 != 0;
        if (v36) {
          BOOL v37 = v35 == v32;
        }
        else {
          BOOL v37 = 1;
        }
      }
      while (!v37);
    }
    switch((int)v32)
    {
      case 1:
        if ((v7 & 1) == 0) {
          goto LABEL_95;
        }
        char v38 = 0;
        unsigned int v39 = 0;
        uint64_t v40 = 0;
        *(_WORD *)(a1 + 72) |= 8u;
        while (1)
        {
          uint64_t v41 = *v19;
          uint64_t v42 = *(void *)(v3 + v41);
          unint64_t v43 = v42 + 1;
          if (v42 == -1 || v43 > *(void *)(v3 + *v6)) {
            break;
          }
          char v44 = *(unsigned char *)(*(void *)(v3 + *v21) + v42);
          *(void *)(v3 + v41) = v43;
          v40 |= (unint64_t)(v44 & 0x7F) << v38;
          if ((v44 & 0x80) == 0) {
            goto LABEL_98;
          }
          v38 += 7;
          BOOL v29 = v39++ >= 9;
          if (v29)
          {
            LODWORD(v40) = 0;
            goto LABEL_100;
          }
        }
        *(unsigned char *)(v3 + *v20) = 1;
LABEL_98:
        if (*(unsigned char *)(v3 + *v20)) {
          LODWORD(v40) = 0;
        }
LABEL_100:
        uint64_t v75 = 64;
        goto LABEL_117;
      case 2:
        if ((v7 & 1) == 0) {
          goto LABEL_95;
        }
        char v48 = 0;
        unsigned int v49 = 0;
        uint64_t v40 = 0;
        *(_WORD *)(a1 + 72) |= 1u;
        while (2)
        {
          uint64_t v50 = *v19;
          uint64_t v51 = *(void *)(v3 + v50);
          unint64_t v52 = v51 + 1;
          if (v51 == -1 || v52 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v20) = 1;
          }
          else
          {
            char v53 = *(unsigned char *)(*(void *)(v3 + *v21) + v51);
            *(void *)(v3 + v50) = v52;
            v40 |= (unint64_t)(v53 & 0x7F) << v48;
            if (v53 < 0)
            {
              v48 += 7;
              BOOL v29 = v49++ >= 9;
              if (v29)
              {
                LODWORD(v40) = 0;
                goto LABEL_104;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v20)) {
          LODWORD(v40) = 0;
        }
LABEL_104:
        uint64_t v75 = 52;
        goto LABEL_117;
      case 3:
        if ((v7 & 1) == 0) {
          goto LABEL_95;
        }
        char v54 = 0;
        unsigned int v55 = 0;
        uint64_t v40 = 0;
        *(_WORD *)(a1 + 72) |= 0x10u;
        while (2)
        {
          uint64_t v56 = *v19;
          uint64_t v57 = *(void *)(v3 + v56);
          unint64_t v58 = v57 + 1;
          if (v57 == -1 || v58 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v20) = 1;
          }
          else
          {
            char v59 = *(unsigned char *)(*(void *)(v3 + *v21) + v57);
            *(void *)(v3 + v56) = v58;
            v40 |= (unint64_t)(v59 & 0x7F) << v54;
            if (v59 < 0)
            {
              v54 += 7;
              BOOL v29 = v55++ >= 9;
              if (v29)
              {
                LODWORD(v40) = 0;
                goto LABEL_108;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v20)) {
          LODWORD(v40) = 0;
        }
LABEL_108:
        uint64_t v75 = 68;
        goto LABEL_117;
      case 4:
        if ((v7 & 1) == 0) {
          goto LABEL_95;
        }
        char v60 = 0;
        unsigned int v61 = 0;
        uint64_t v40 = 0;
        *(_WORD *)(a1 + 72) |= 2u;
        while (2)
        {
          uint64_t v62 = *v19;
          uint64_t v63 = *(void *)(v3 + v62);
          unint64_t v64 = v63 + 1;
          if (v63 == -1 || v64 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v20) = 1;
          }
          else
          {
            char v65 = *(unsigned char *)(*(void *)(v3 + *v21) + v63);
            *(void *)(v3 + v62) = v64;
            v40 |= (unint64_t)(v65 & 0x7F) << v60;
            if (v65 < 0)
            {
              v60 += 7;
              BOOL v29 = v61++ >= 9;
              if (v29)
              {
                LODWORD(v40) = 0;
                goto LABEL_112;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v20)) {
          LODWORD(v40) = 0;
        }
LABEL_112:
        uint64_t v75 = 56;
        goto LABEL_117;
      case 5:
        if (!v33) {
          goto LABEL_95;
        }
        if ((*(_WORD *)(a1 + 72) & 0x80) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_142;
          }
          v8 += *(unsigned __int16 *)(a1 + 72) << 24 >> 31;
          goto LABEL_120;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_142;
        }
        uint64_t v66 = objc_alloc_init(GEORouteTrafficDetail);
        if (GEORouteTrafficDetailReadAllFrom((uint64_t)v66, (void *)v3, v10 & 1))
        {
          PBReaderRecallMark();
          uint64_t v67 = *(void **)(a1 + 32);
          *(void *)(a1 + 32) = v66;

          --v8;
LABEL_120:
          char v7 = v84;
          char v17 = v85;
          uint64_t v20 = (int *)MEMORY[0x1E4F940C8];
LABEL_121:
          if (!(v86 & 1 | (v8 != 0))) {
            goto LABEL_122;
          }
          continue;
        }
LABEL_141:

LABEL_142:
        int v81 = 0;
        char v17 = v85;
        uint64_t v20 = (int *)MEMORY[0x1E4F940C8];
LABEL_123:
        unsigned int v82 = &OBJC_IVAR___GEOPDAddressComponent__unknownFields;
        if (v83) {
LABEL_124:
        }
          *(_WORD *)(a1 + v82[329]) |= 0x20u;
        if (v17 & 1 | ((v81 & 1) == 0))
        {
          *(_WORD *)(a1 + v82[329]) |= 0x80u;
          *(_WORD *)(a1 + v82[329]) |= 0x40u;
          goto LABEL_135;
        }
        if (v18)
        {
          while (2)
          {
            while (1)
            {
              int v77 = *v18++;
              int v76 = v77;
              if (v77 == 5) {
                break;
              }
              if (v76 == 7)
              {
                __int16 v78 = 64;
                goto LABEL_134;
              }
              if (!v76) {
                goto LABEL_135;
              }
            }
            __int16 v78 = 128;
LABEL_134:
            *(_WORD *)(a1 + v82[329]) |= v78;
            continue;
          }
        }
LABEL_135:
        if (v81)
        {
          unint64_t v3 = *(unsigned char *)(v3 + *v20) == 0;
          if ((v17 & 1) == 0) {
            return v3;
          }
LABEL_139:
          uint64_t v79 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        else
        {
          unint64_t v3 = 0;
          if (v17) {
            goto LABEL_139;
          }
        }
        return v3;
      case 6:
        if ((v7 & 1) == 0) {
          goto LABEL_95;
        }
        char v68 = 0;
        unsigned int v69 = 0;
        uint64_t v40 = 0;
        *(_WORD *)(a1 + 72) |= 4u;
        while (2)
        {
          uint64_t v70 = *v19;
          uint64_t v71 = *(void *)(v3 + v70);
          unint64_t v72 = v71 + 1;
          if (v71 == -1 || v72 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v20) = 1;
          }
          else
          {
            char v73 = *(unsigned char *)(*(void *)(v3 + *v21) + v71);
            *(void *)(v3 + v70) = v72;
            v40 |= (unint64_t)(v73 & 0x7F) << v68;
            if (v73 < 0)
            {
              v68 += 7;
              BOOL v29 = v69++ >= 9;
              if (v29)
              {
                LODWORD(v40) = 0;
                goto LABEL_116;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v20)) {
          LODWORD(v40) = 0;
        }
LABEL_116:
        uint64_t v75 = 60;
LABEL_117:
        *(_DWORD *)(a1 + v75) = v40;
        goto LABEL_121;
      case 7:
        if (!v33 || (*(_WORD *)(a1 + 72) & 0x40) != 0) {
          goto LABEL_95;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_142;
        }
        uint64_t v66 = objc_alloc_init(GEOETARouteIncident);
        if (!GEOETARouteIncidentReadAllFrom((uint64_t)v66, (void *)v3, v10 & 1)) {
          goto LABEL_141;
        }
        PBReaderRecallMark();
        -[GEOPDETA _addNoFlagsEtaRouteIncident:](a1, v66);

        goto LABEL_120;
      default:
        if ((v83 & 1) == 0 || (*(_WORD *)(a1 + 72) & 0x20) != 0)
        {
LABEL_95:
          char v74 = PBReaderSkipValueWithTag();
          char v7 = v84;
          char v17 = v85;
          uint64_t v20 = (int *)MEMORY[0x1E4F940C8];
          if ((v74 & 1) == 0)
          {
            int v81 = 0;
            goto LABEL_123;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v45 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            char v46 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v45;
          }
          int v47 = PBUnknownFieldAdd();
          char v7 = v84;
          char v17 = v85;
          uint64_t v20 = (int *)MEMORY[0x1E4F940C8];
          if (!v47)
          {
            int v81 = 0;
            unsigned int v82 = &OBJC_IVAR___GEOPDAddressComponent__unknownFields;
            goto LABEL_124;
          }
        }
        goto LABEL_121;
    }
  }
}

void sub_189A8C7BC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A8CED4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A8CFC4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDETACallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  [*(id *)(a1 + 32) readAll:1];
  long long v9 = 0u;
  long long v10 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  id v2 = *(id *)(a1 + 24);
  uint64_t v3 = [v2 countByEnumeratingWithState:&v7 objects:v11 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v8;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v8 != v5) {
          objc_enumerationMutation(v2);
        }
        objc_msgSend(*(id *)(*((void *)&v7 + 1) + 8 * v6++), "readAll:", 1, (void)v7);
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v7 objects:v11 count:16];
    }
    while (v4);
  }
}

unint64_t GEOPDETAReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDETAReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)long long v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    long long v9 = (int *)&GEOPDETAReadAllFrom_recursiveTag;
  }
  else {
    long long v9 = (int *)&GEOPDETAReadAllFrom_initialTag;
  }
  unint64_t v6 = GEOPDETAReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOPDETACallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return v6;
}

void sub_189A8D34C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A8D65C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A8D980(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A8DE80(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDETAFilterReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 96));
  unint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 92);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 88)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  unsigned int v12 = (unsigned __int16)(vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int16 *)(a1 + 104)), (uint16x4_t)0xFFF8FFF9FFFCFFFBLL), (int8x8_t)0x1000100010001))+ ((*(_WORD *)(a1 + 104) >> 9) & 1)+ ((*(_WORD *)(a1 + 104) >> 6) & 1)+ ((*(_WORD *)(a1 + 104) >> 3) & 1));
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 > 3;
        char v17 = v16 & ~(_BYTE)v11 | v9;
        char v18 = v16 | v11;
        if (((v16 | v11) | v8)) {
          uint64_t v19 = 0;
        }
        else {
          uint64_t v19 = a3;
        }
        uint64_t v20 = (int *)MEMORY[0x1E4F940E8];
        int v95 = 1;
        unint64_t v21 = (int *)MEMORY[0x1E4F940C8];
        char v22 = v17;
        if (*(void *)(v3 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(v3 + *v6)) {
          goto LABEL_154;
        }
        char v93 = v17;
        char v96 = v18 | v17;
        char v97 = (v19 == 0) | v18;
        unsigned int v23 = (int *)MEMORY[0x1E4F940B8];
        char v94 = v18;
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v9;
LABEL_8:
        uint64_t v14 = v10;
        uint64_t v15 = v11;
LABEL_10:
        ++v7;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(unsigned char *)(v3 + *v21)) {
      goto LABEL_152;
    }
    char v24 = 0;
    unsigned int v25 = 0;
    unint64_t v26 = 0;
    while (1)
    {
      uint64_t v27 = *v20;
      uint64_t v28 = *(void *)(v3 + v27);
      unint64_t v29 = v28 + 1;
      if (v28 == -1 || v29 > *(void *)(v3 + *v6)) {
        break;
      }
      char v30 = *(unsigned char *)(*(void *)(v3 + *v23) + v28);
      *(void *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0) {
        goto LABEL_25;
      }
      v24 += 7;
      BOOL v31 = v25++ >= 9;
      if (v31)
      {
        unint64_t v26 = 0;
        int v32 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_25:
    int v32 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v26 = 0;
    }
LABEL_27:
    int v33 = v26 & 7;
    if (v32 || v33 == 4)
    {
LABEL_152:
      int v95 = 1;
      goto LABEL_153;
    }
    unint64_t v35 = v26 >> 3;
    BOOL v36 = v18;
    if ((v97 & 1) == 0)
    {
      BOOL v37 = v19;
      do
      {
        int v39 = *v37++;
        int v38 = v39;
        BOOL v36 = v39 != 0;
        if (v39) {
          BOOL v40 = v38 == v35;
        }
        else {
          BOOL v40 = 1;
        }
      }
      while (!v40);
    }
    switch((int)v35)
    {
      case 1:
        if (!v36 || (*(_WORD *)(a1 + 104) & 0x10) != 0) {
          goto LABEL_111;
        }
        if (v33 == 2)
        {
          if (!PBReaderPlaceMark()) {
            goto LABEL_173;
          }
          unint64_t v41 = *(void *)(v3 + *v20);
          unint64_t v6 = (int *)MEMORY[0x1E4F940E0];
          while (1)
          {
            uint64_t v42 = (int *)MEMORY[0x1E4F940C8];
            if (v41 >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + (int)*MEMORY[0x1E4F940C8]))
            {
              PBReaderRecallMark();
              unint64_t v21 = (int *)MEMORY[0x1E4F940C8];
              char v18 = v94;
              goto LABEL_138;
            }
            char v43 = 0;
            unsigned int v44 = 0;
            uint64_t v45 = 0;
            char v46 = (int *)MEMORY[0x1E4F940B8];
            while (1)
            {
              uint64_t v47 = *v20;
              uint64_t v48 = *(void *)(v3 + v47);
              unint64_t v49 = v48 + 1;
              if (v48 == -1 || v49 > *(void *)(v3 + *v6)) {
                break;
              }
              char v50 = *(unsigned char *)(*(void *)(v3 + *v46) + v48);
              *(void *)(v3 + v47) = v49;
              v45 |= (unint64_t)(v50 & 0x7F) << v43;
              if (v50 < 0)
              {
                v43 += 7;
                BOOL v31 = v44++ >= 9;
                if (!v31) {
                  continue;
                }
              }
              goto LABEL_54;
            }
            *(unsigned char *)(v3 + *v42) = 1;
LABEL_54:
            PBRepeatedInt32Add();
            unint64_t v41 = *(void *)(v3 + *v20);
          }
        }
        char v82 = 0;
        unsigned int v83 = 0;
        uint64_t v84 = 0;
        unint64_t v6 = (int *)MEMORY[0x1E4F940E0];
        while (1)
        {
          uint64_t v85 = *v20;
          uint64_t v86 = *(void *)(v3 + v85);
          unint64_t v87 = v86 + 1;
          if (v86 == -1 || v87 > *(void *)(v3 + *v6)) {
            break;
          }
          char v88 = *(unsigned char *)(*(void *)(v3 + *v23) + v86);
          *(void *)(v3 + v85) = v87;
          v84 |= (unint64_t)(v88 & 0x7F) << v82;
          if (v88 < 0)
          {
            v82 += 7;
            BOOL v31 = v83++ >= 9;
            if (!v31) {
              continue;
            }
          }
          goto LABEL_151;
        }
        *(unsigned char *)(v3 + *v21) = 1;
LABEL_151:
        PBRepeatedInt32Add();
        char v18 = v94;
        unint64_t v21 = (int *)MEMORY[0x1E4F940C8];
        goto LABEL_138;
      case 2:
        if ((v8 & 1) == 0) {
          goto LABEL_111;
        }
        char v54 = 0;
        unsigned int v55 = 0;
        uint64_t v56 = 0;
        *(_WORD *)(a1 + 104) |= 2u;
        unint64_t v6 = (int *)MEMORY[0x1E4F940E0];
        while (2)
        {
          uint64_t v57 = *v20;
          uint64_t v58 = *(void *)(v3 + v57);
          unint64_t v59 = v58 + 1;
          if (v58 == -1 || v59 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v60 = *(unsigned char *)(*(void *)(v3 + *v23) + v58);
            *(void *)(v3 + v57) = v59;
            v56 |= (unint64_t)(v60 & 0x7F) << v54;
            if (v60 < 0)
            {
              v54 += 7;
              BOOL v31 = v55++ >= 9;
              if (v31)
              {
                uint64_t v56 = 0;
                goto LABEL_116;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          uint64_t v56 = 0;
        }
LABEL_116:
        BOOL v79 = v56 != 0;
        uint64_t v80 = 101;
        goto LABEL_125;
      case 3:
        if (!v36) {
          goto LABEL_111;
        }
        if ((*(_WORD *)(a1 + 104) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_173;
          }
          __int16 v81 = *(_WORD *)(a1 + 104) << 10;
          goto LABEL_136;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_173;
        }
        unsigned int v61 = objc_alloc_init(GEOAutomobileOptions);
        if (!GEOAutomobileOptionsReadAllFrom((uint64_t)v61, (void *)v3, v10 & 1)) {
          goto LABEL_172;
        }
        PBReaderRecallMark();
        uint64_t v62 = 48;
        goto LABEL_102;
      case 4:
        if (!v36) {
          goto LABEL_111;
        }
        if ((*(_WORD *)(a1 + 104) & 0x100) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_173;
          }
          __int16 v81 = *(_WORD *)(a1 + 104) << 7;
          goto LABEL_136;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_173;
        }
        unsigned int v61 = objc_alloc_init(GEOTransitOptions);
        if (!GEOTransitOptionsReadAllFrom((uint64_t)v61, (void *)v3, v10 & 1)) {
          goto LABEL_172;
        }
        PBReaderRecallMark();
        uint64_t v62 = 72;
        goto LABEL_102;
      case 5:
        if (!v36) {
          goto LABEL_111;
        }
        if ((*(_WORD *)(a1 + 104) & 0x200) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_173;
          }
          __int16 v81 = *(_WORD *)(a1 + 104) << 6;
          goto LABEL_136;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_173;
        }
        unsigned int v61 = objc_alloc_init(GEOWalkingOptions);
        if (!GEOWalkingOptionsReadAllFrom((uint64_t)v61, (void *)v3, v10 & 1)) {
          goto LABEL_172;
        }
        PBReaderRecallMark();
        uint64_t v62 = 80;
        goto LABEL_102;
      case 6:
        if ((v8 & 1) == 0) {
          goto LABEL_111;
        }
        char v63 = 0;
        unsigned int v64 = 0;
        uint64_t v65 = 0;
        *(_WORD *)(a1 + 104) |= 4u;
        unint64_t v6 = (int *)MEMORY[0x1E4F940E0];
        while (2)
        {
          uint64_t v66 = *v20;
          uint64_t v67 = *(void *)(v3 + v66);
          unint64_t v68 = v67 + 1;
          if (v67 == -1 || v68 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v69 = *(unsigned char *)(*(void *)(v3 + *v23) + v67);
            *(void *)(v3 + v66) = v68;
            v65 |= (unint64_t)(v69 & 0x7F) << v63;
            if (v69 < 0)
            {
              v63 += 7;
              BOOL v31 = v64++ >= 9;
              if (v31)
              {
                uint64_t v65 = 0;
                goto LABEL_120;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          uint64_t v65 = 0;
        }
LABEL_120:
        BOOL v79 = v65 != 0;
        uint64_t v80 = 102;
        goto LABEL_125;
      case 7:
        if (!v36) {
          goto LABEL_111;
        }
        if ((*(_WORD *)(a1 + 104) & 0x80) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_173;
          }
          __int16 v81 = *(_WORD *)(a1 + 104) << 8;
          goto LABEL_136;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_173;
        }
        unsigned int v61 = objc_alloc_init(GEOCyclingOptions);
        if (!GEOCyclingOptionsReadAllFrom((uint64_t)v61, (void *)v3, v10 & 1)) {
          goto LABEL_172;
        }
        PBReaderRecallMark();
        uint64_t v62 = 64;
        goto LABEL_102;
      case 8:
        if (!v36) {
          goto LABEL_111;
        }
        if ((*(_WORD *)(a1 + 104) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_173;
          }
          __int16 v81 = *(_WORD *)(a1 + 104) << 9;
LABEL_136:
          v7 += v81 >> 15;
LABEL_137:
          char v18 = v94;
          unint64_t v21 = (int *)MEMORY[0x1E4F940C8];
          unint64_t v6 = (int *)MEMORY[0x1E4F940E0];
LABEL_138:
          unsigned int v23 = (int *)MEMORY[0x1E4F940B8];
LABEL_139:
          if (!(v96 & 1 | (v7 != 0)) || *(void *)(v3 + *v20) >= *(void *)(v3 + *v6)) {
            goto LABEL_152;
          }
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_173;
        }
        unsigned int v61 = objc_alloc_init(GEOClientCapabilities);
        if (GEOClientCapabilitiesReadAllFrom((uint64_t)v61, (void *)v3, v10 & 1))
        {
          PBReaderRecallMark();
          uint64_t v62 = 56;
LABEL_102:
          uint64_t v70 = *(void **)(a1 + v62);
          *(void *)(a1 + v62) = v61;

          --v7;
          goto LABEL_137;
        }
LABEL_172:

LABEL_173:
        int v95 = 0;
        char v18 = v94;
        unint64_t v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_153:
        char v22 = v93;
LABEL_154:
        if (v22) {
LABEL_155:
        }
          *(_WORD *)(a1 + 104) |= 8u;
        if (v18 & 1 | ((v95 & 1) == 0))
        {
          *(_WORD *)(a1 + 104) |= 0x10u;
          *(_WORD *)(a1 + 104) |= 0x20u;
          *(_WORD *)(a1 + 104) |= 0x80u;
          *(_WORD *)(a1 + 104) |= 0x100u;
          *(_WORD *)(a1 + 104) |= 0x200u;
          *(_WORD *)(a1 + 104) |= 0x40u;
        }
        else if (v19)
        {
          while (1)
          {
            int v89 = *v19++;
            __int16 v90 = 16;
            switch(v89)
            {
              case 0:
                goto LABEL_166;
              case 1:
                goto LABEL_165;
              case 3:
                __int16 v90 = 32;
                goto LABEL_165;
              case 4:
                __int16 v90 = 256;
                goto LABEL_165;
              case 5:
                __int16 v90 = 512;
                goto LABEL_165;
              case 7:
                __int16 v90 = 128;
                goto LABEL_165;
              case 8:
                __int16 v90 = 64;
LABEL_165:
                *(_WORD *)(a1 + 104) |= v90;
                break;
              default:
                continue;
            }
          }
        }
LABEL_166:
        if (v95)
        {
          unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
          if ((v18 & 1) == 0) {
            return v3;
          }
LABEL_170:
          v91 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        else
        {
          unint64_t v3 = 0;
          if (v18) {
            goto LABEL_170;
          }
        }
        return v3;
      case 9:
        if ((v8 & 1) == 0) {
          goto LABEL_111;
        }
        char v71 = 0;
        unsigned int v72 = 0;
        uint64_t v73 = 0;
        *(_WORD *)(a1 + 104) |= 1u;
        unint64_t v6 = (int *)MEMORY[0x1E4F940E0];
        while (2)
        {
          uint64_t v74 = *v20;
          uint64_t v75 = *(void *)(v3 + v74);
          unint64_t v76 = v75 + 1;
          if (v75 == -1 || v76 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v77 = *(unsigned char *)(*(void *)(v3 + *v23) + v75);
            *(void *)(v3 + v74) = v76;
            v73 |= (unint64_t)(v77 & 0x7F) << v71;
            if (v77 < 0)
            {
              v71 += 7;
              BOOL v31 = v72++ >= 9;
              if (v31)
              {
                uint64_t v73 = 0;
                goto LABEL_124;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          uint64_t v73 = 0;
        }
LABEL_124:
        BOOL v79 = v73 != 0;
        uint64_t v80 = 100;
LABEL_125:
        *(unsigned char *)(a1 + v80) = v79;
        goto LABEL_139;
      default:
        if ((v93 & 1) == 0 || (*(_WORD *)(a1 + 104) & 8) != 0)
        {
LABEL_111:
          char v78 = PBReaderSkipValueWithTag();
          unsigned int v23 = (int *)MEMORY[0x1E4F940B8];
          unint64_t v21 = (int *)MEMORY[0x1E4F940C8];
          char v18 = v94;
          unint64_t v6 = (int *)MEMORY[0x1E4F940E0];
          if ((v78 & 1) == 0)
          {
            int v95 = 0;
            goto LABEL_153;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v51 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            unint64_t v52 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v51;
          }
          int v53 = PBUnknownFieldAdd();
          char v18 = v94;
          unint64_t v21 = (int *)MEMORY[0x1E4F940C8];
          unint64_t v6 = (int *)MEMORY[0x1E4F940E0];
          unsigned int v23 = (int *)MEMORY[0x1E4F940B8];
          if (!v53)
          {
            int v95 = 0;
            goto LABEL_155;
          }
        }
        goto LABEL_139;
    }
  }
}

void sub_189A8ED0C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A8F700(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDETAFilterCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  [*(id *)(a1 + 48) readAll:1];
  [*(id *)(a1 + 64) readAll:1];
  [*(id *)(a1 + 72) readAll:1];
  [*(id *)(a1 + 80) readAll:1];
  id v2 = *(void **)(a1 + 56);

  return [v2 readAll:1];
}

unint64_t GEOPDETAFilterReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 92))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDETAFilterReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 96));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 88) = [v8 position];
  *(_DWORD *)(a1 + 92) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOPDETAFilterReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOPDETAFilterReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDETAFilterReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOPDETAFilterCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 96));
  return Specified;
}

void sub_189A90054(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A902FC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL _GEOPDETAFilterIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 96));
  __int16 v2 = *(_WORD *)(a1 + 104);
  if ((v2 & 0x410) != 0) {
    return 1;
  }
  if ((v2 & 0x20) != 0)
  {
    if (GEOAutomobileOptionsIsDirty(*(os_unfair_lock_s **)(a1 + 48))) {
      return 1;
    }
    __int16 v2 = *(_WORD *)(a1 + 104);
  }
  if ((v2 & 0x80) != 0)
  {
    if (GEOCyclingOptionsIsDirty(*(void *)(a1 + 64))) {
      return 1;
    }
    __int16 v2 = *(_WORD *)(a1 + 104);
  }
  if ((v2 & 0x100) != 0)
  {
    if (GEOTransitOptionsIsDirty(*(void *)(a1 + 72))) {
      return 1;
    }
    __int16 v2 = *(_WORD *)(a1 + 104);
  }
  if ((v2 & 0x200) == 0) {
    goto LABEL_15;
  }
  if (GEOWalkingOptionsIsDirty(*(void *)(a1 + 80))) {
    return 1;
  }
  __int16 v2 = *(_WORD *)(a1 + 104);
LABEL_15:
  if ((v2 & 0x40) == 0) {
    return 0;
  }
  uint64_t v4 = *(void *)(a1 + 56);

  return GEOClientCapabilitiesIsDirty(v4);
}

os_unfair_lock_s *GEOPDETAFilterIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    BOOL IsDirty = _GEOPDETAFilterIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 24);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_189A906CC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A90C3C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDEVChargerReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  unint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 52);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 48)];
  char v7 = 0;
  uint64_t v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  int v12 = ((*(unsigned __int8 *)(a1 + 60) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 2) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 1) & 1);
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v7 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 != 0;
        char v17 = v16 & ~(_BYTE)v11 | v9;
        unsigned __int8 v18 = v16 | v11;
        char v61 = v17;
        char v62 = v18 | v17;
        if ((v18 | v7)) {
          uint64_t v19 = 0;
        }
        else {
          uint64_t v19 = a3;
        }
        uint64_t v20 = (int *)MEMORY[0x1E4F940E8];
        char v63 = (v19 == 0) | v18;
        BOOL v64 = v18;
        unint64_t v21 = (int *)MEMORY[0x1E4F940C8];
        char v22 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v9;
LABEL_8:
        uint64_t v14 = v10;
        uint64_t v15 = v11;
LABEL_10:
        ++v8;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v21)) {
      goto LABEL_75;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      BOOL v30 = v24++ >= 9;
      if (v30)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_25:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_75:
      int v59 = 1;
LABEL_76:
      char v60 = &OBJC_IVAR___GEOXPCReply__error;
      goto LABEL_77;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v64;
    if ((v63 & 1) == 0)
    {
      unint64_t v35 = v19;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    if (v33 == 3)
    {
      if (v7)
      {
        char v40 = 0;
        unsigned int v41 = 0;
        uint64_t v42 = 0;
        *(unsigned char *)(a1 + 60) |= 1u;
        unint64_t v6 = (int *)MEMORY[0x1E4F940E0];
        while (1)
        {
          uint64_t v43 = *v20;
          uint64_t v44 = *(void *)(v3 + v43);
          unint64_t v45 = v44 + 1;
          if (v44 == -1 || v45 > *(void *)(v3 + *v6)) {
            break;
          }
          char v46 = *(unsigned char *)(*(void *)(v3 + *v22) + v44);
          *(void *)(v3 + v43) = v45;
          v42 |= (unint64_t)(v46 & 0x7F) << v40;
          if ((v46 & 0x80) == 0) {
            goto LABEL_69;
          }
          v40 += 7;
          BOOL v30 = v41++ >= 9;
          if (v30)
          {
            uint64_t v42 = 0;
            goto LABEL_71;
          }
        }
        *(unsigned char *)(v3 + *v21) = 1;
LABEL_69:
        if (*(unsigned char *)(v3 + *v21)) {
          uint64_t v42 = 0;
        }
LABEL_71:
        *(void *)(a1 + 40) = v42;
        goto LABEL_66;
      }
      goto LABEL_65;
    }
    if (v33 == 2) {
      break;
    }
    if (v33 == 1)
    {
      if (v34 && (*(unsigned char *)(a1 + 60) & 8) == 0)
      {
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_97;
        }
        int v39 = objc_alloc_init(GEOPDPlug);
        if (!GEOPDPlugReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1)) {
          goto LABEL_96;
        }
        PBReaderRecallMark();
        -[GEOPDEVCharger _addNoFlagsPlug:](a1, v39);

        unint64_t v21 = (int *)MEMORY[0x1E4F940C8];
        unint64_t v6 = (int *)MEMORY[0x1E4F940E0];
        goto LABEL_66;
      }
    }
    else if ((v61 & 1) != 0 && (*(unsigned char *)(a1 + 60) & 2) == 0)
    {
      if (!*(void *)(a1 + 16))
      {
        id v49 = objc_alloc_init(MEMORY[0x1E4F940B0]);
        char v50 = *(void **)(a1 + 16);
        *(void *)(a1 + 16) = v49;
      }
      int v51 = PBUnknownFieldAdd();
      unint64_t v21 = (int *)MEMORY[0x1E4F940C8];
      unint64_t v6 = (int *)MEMORY[0x1E4F940E0];
      if (!v51)
      {
        int v59 = 0;
        char v60 = &OBJC_IVAR___GEOXPCReply__error;
        goto LABEL_78;
      }
      goto LABEL_66;
    }
LABEL_65:
    char v52 = PBReaderSkipValueWithTag();
    unint64_t v21 = (int *)MEMORY[0x1E4F940C8];
    unint64_t v6 = (int *)MEMORY[0x1E4F940E0];
    if ((v52 & 1) == 0)
    {
      int v59 = 0;
      goto LABEL_76;
    }
LABEL_66:
    if (!(v62 & 1 | (v8 != 0))) {
      goto LABEL_75;
    }
  }
  if (!v34) {
    goto LABEL_65;
  }
  if ((*(unsigned char *)(a1 + 60) & 4) != 0)
  {
    char v53 = PBReaderSkipValueWithTag();
    unint64_t v6 = (int *)MEMORY[0x1E4F940E0];
    if ((v53 & 1) == 0) {
      goto LABEL_97;
    }
    v8 += *(unsigned __int8 *)(a1 + 60) << 29 >> 31;
    goto LABEL_74;
  }
  char v47 = PBReaderPlaceMark();
  unint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  if ((v47 & 1) == 0) {
    goto LABEL_97;
  }
  int v39 = objc_alloc_init(GEOPDAvailabilityInfo);
  if (GEOPDAvailabilityInfoReadAllFrom((uint64_t)v39, (void *)v3))
  {
    PBReaderRecallMark();
    uint64_t v48 = *(void **)(a1 + 24);
    *(void *)(a1 + 24) = v39;

    --v8;
LABEL_74:
    unint64_t v21 = (int *)MEMORY[0x1E4F940C8];
    goto LABEL_66;
  }
LABEL_96:

LABEL_97:
  int v59 = 0;
  char v60 = &OBJC_IVAR___GEOXPCReply__error;
  unint64_t v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_77:
  if ((v61 & 1) == 0) {
    goto LABEL_79;
  }
LABEL_78:
  *(unsigned char *)(a1 + v60[942]) |= 2u;
LABEL_79:
  if (v64 || (v59 & 1) == 0)
  {
    *(unsigned char *)(a1 + v60[942]) |= 8u;
    *(unsigned char *)(a1 + v60[942]) |= 4u;
    goto LABEL_89;
  }
  if (v19)
  {
    while (2)
    {
      while (1)
      {
        int v55 = *v19++;
        int v54 = v55;
        if (v55 == 1) {
          break;
        }
        if (v54 == 2)
        {
          char v56 = 4;
          goto LABEL_88;
        }
        if (!v54) {
          goto LABEL_89;
        }
      }
      char v56 = 8;
LABEL_88:
      *(unsigned char *)(a1 + v60[942]) |= v56;
      continue;
    }
  }
LABEL_89:
  if (v59) {
    unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
  }
  else {
    unint64_t v3 = 0;
  }
  if (v64)
  {
    uint64_t v57 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_189A914BC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A919E0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDEVChargerCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v11 = *MEMORY[0x1E4F143B8];
  long long v6 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  id v1 = *(id *)(a1 + 32);
  uint64_t v2 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t v4 = *(void *)v7;
    do
    {
      uint64_t v5 = 0;
      do
      {
        if (*(void *)v7 != v4) {
          objc_enumerationMutation(v1);
        }
        -[GEOPDPlug readAll:](*(void *)(*((void *)&v6 + 1) + 8 * v5++), 1);
      }
      while (v3 != v5);
      uint64_t v3 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
    }
    while (v3);
  }
}

unint64_t GEOPDEVChargerReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 52))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDEVChargerReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = [v8 position];
  *(_DWORD *)(a1 + 52) = [v8 length];
  if (a3) {
    long long v9 = (int *)&GEOPDEVChargerReadAllFrom_recursiveTag;
  }
  else {
    long long v9 = (int *)&GEOPDEVChargerReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDEVChargerReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOPDEVChargerCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_189A91D4C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A91FB0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A92234(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDEVChargerFilterReadAllFrom(uint64_t a1, void *a2)
{
  uint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    long long v6 = (int *)MEMORY[0x1E4F940C8];
    long long v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      int v8 = v3[*v6];
      if (*(void *)&v3[*v4] >= *(void *)&v3[*v5]) {
        break;
      }
      if (v3[*v6])
      {
        int v8 = 1;
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      uint64_t v11 = 0;
      while (1)
      {
        uint64_t v12 = *v4;
        uint64_t v13 = *(void *)&v3[v12];
        unint64_t v14 = v13 + 1;
        if (v13 == -1 || v14 > *(void *)&v3[*v5]) {
          break;
        }
        char v15 = *(unsigned char *)(*(void *)&v3[*v7] + v13);
        *(void *)&v3[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0) {
          goto LABEL_13;
        }
        v9 += 7;
        if (v10++ >= 9)
        {
          char v17 = 0;
          int v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      int v8 = v3[*v6];
      if (v3[*v6]) {
        char v17 = 0;
      }
      else {
        char v17 = v11;
      }
LABEL_16:
      if (v8) {
        BOOL v18 = 1;
      }
      else {
        BOOL v18 = (v17 & 7) == 4;
      }
      if (v18) {
        break;
      }
      if (!*(void *)(a1 + 8))
      {
        id v19 = objc_alloc_init(MEMORY[0x1E4F940B0]);
        uint64_t v20 = *(void **)(a1 + 8);
        *(void *)(a1 + 8) = v19;
      }
      if ((PBUnknownFieldAdd() & 1) == 0) {
        goto LABEL_23;
      }
    }
    BOOL v21 = v8 == 0;
  }
  else
  {
LABEL_23:
    BOOL v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_189A928A4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDEnhancedPlacementFilterReadAllFrom(uint64_t a1, void *a2)
{
  uint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    long long v6 = (int *)MEMORY[0x1E4F940C8];
    long long v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      int v8 = v3[*v6];
      if (*(void *)&v3[*v4] >= *(void *)&v3[*v5]) {
        break;
      }
      if (v3[*v6])
      {
        int v8 = 1;
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      uint64_t v11 = 0;
      while (1)
      {
        uint64_t v12 = *v4;
        uint64_t v13 = *(void *)&v3[v12];
        unint64_t v14 = v13 + 1;
        if (v13 == -1 || v14 > *(void *)&v3[*v5]) {
          break;
        }
        char v15 = *(unsigned char *)(*(void *)&v3[*v7] + v13);
        *(void *)&v3[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0) {
          goto LABEL_13;
        }
        v9 += 7;
        if (v10++ >= 9)
        {
          char v17 = 0;
          int v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      int v8 = v3[*v6];
      if (v3[*v6]) {
        char v17 = 0;
      }
      else {
        char v17 = v11;
      }
LABEL_16:
      if (v8) {
        BOOL v18 = 1;
      }
      else {
        BOOL v18 = (v17 & 7) == 4;
      }
      if (v18) {
        break;
      }
      if (!*(void *)(a1 + 8))
      {
        id v19 = objc_alloc_init(MEMORY[0x1E4F940B0]);
        uint64_t v20 = *(void **)(a1 + 8);
        *(void *)(a1 + 8) = v19;
      }
      if ((PBUnknownFieldAdd() & 1) == 0) {
        goto LABEL_23;
      }
    }
    BOOL v21 = v8 == 0;
  }
  else
  {
LABEL_23:
    BOOL v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_189A9367C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A938D0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDEnrichmentDataReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  long long v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  uint64_t v7 = 0;
  uint64_t v8 = 0;
  char v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  int v12 = ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1)
      + (*(unsigned char *)(a1 + 52) & 1)
      + ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1);
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v10])
    {
      case -4:
        ++v12;
        uint64_t v13 = v7;
        goto LABEL_8;
      case -3:
        char v9 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v13 = v7;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 != 0;
        char v17 = v16 & ~(_BYTE)v11 | v8;
        unsigned __int8 v18 = v16 | v11;
        char v53 = v17;
        char v54 = v18 | v17;
        if ((v18 | v9)) {
          id v19 = 0;
        }
        else {
          id v19 = a3;
        }
        char v55 = (v19 == 0) | v18;
        BOOL v56 = v18;
        uint64_t v20 = (int *)MEMORY[0x1E4F940E8];
        BOOL v21 = (int *)MEMORY[0x1E4F940C8];
        char v22 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v7;
        uint64_t v14 = v8;
LABEL_8:
        uint64_t v15 = v11;
LABEL_10:
        ++v10;
        uint64_t v7 = v13;
        uint64_t v8 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v21)) {
      goto LABEL_60;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      if (v24++ >= 9)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_25:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_60:
      int v51 = 1;
      goto LABEL_61;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v56;
    if ((v55 & 1) == 0)
    {
      unint64_t v35 = v19;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    if (v33 != 2) {
      break;
    }
    if (v34)
    {
      if ((*(unsigned char *)(a1 + 52) & 4) != 0)
      {
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_81;
        }
        v10 += *(unsigned __int8 *)(a1 + 52) << 29 >> 31;
      }
      else
      {
        uint64_t v40 = PBReaderReadData();
        unsigned int v41 = *(void **)(a1 + 32);
        *(void *)(a1 + 32) = v40;

        --v10;
      }
      goto LABEL_58;
    }
LABEL_54:
    char v45 = PBReaderSkipValueWithTag();
    BOOL v21 = (int *)MEMORY[0x1E4F940C8];
    if ((v45 & 1) == 0)
    {
      int v51 = 0;
LABEL_61:
      char v52 = &OBJC_IVAR___GEOXPCReply__error;
      goto LABEL_62;
    }
LABEL_59:
    if (!(v54 & 1 | (v10 != 0))) {
      goto LABEL_60;
    }
  }
  if (v33 != 1)
  {
    if ((v53 & 1) != 0 && (*(unsigned char *)(a1 + 52) & 1) == 0)
    {
      if (!*(void *)(a1 + 16))
      {
        id v42 = objc_alloc_init(MEMORY[0x1E4F940B0]);
        uint64_t v43 = *(void **)(a1 + 16);
        *(void *)(a1 + 16) = v42;
      }
      int v44 = PBUnknownFieldAdd();
      BOOL v21 = (int *)MEMORY[0x1E4F940C8];
      if (!v44)
      {
        int v51 = 0;
        char v52 = &OBJC_IVAR___GEOXPCReply__error;
        goto LABEL_63;
      }
      goto LABEL_59;
    }
    goto LABEL_54;
  }
  if (!v34 || (*(unsigned char *)(a1 + 52) & 2) != 0) {
    goto LABEL_54;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_81;
  }
  int v39 = objc_alloc_init(GEOPDEnrichmentDataEntity);
  if (GEOPDEnrichmentDataEntityReadAllFrom((uint64_t)v39, (void *)v3, v7 & 1))
  {
    PBReaderRecallMark();
    -[GEOPDEnrichmentData _addNoFlagsEntity:](a1, v39);

LABEL_58:
    BOOL v21 = (int *)MEMORY[0x1E4F940C8];
    goto LABEL_59;
  }

LABEL_81:
  int v51 = 0;
  char v52 = &OBJC_IVAR___GEOXPCReply__error;
  BOOL v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_62:
  if ((v53 & 1) == 0) {
    goto LABEL_64;
  }
LABEL_63:
  *(unsigned char *)(a1 + v52[953]) |= 1u;
LABEL_64:
  if (v56 || (v51 & 1) == 0)
  {
    *(unsigned char *)(a1 + v52[953]) |= 2u;
    *(unsigned char *)(a1 + v52[953]) |= 4u;
    goto LABEL_74;
  }
  if (v19)
  {
    while (1)
    {
      int v48 = *v19++;
      int v47 = v48;
      if (v48 == 1) {
        break;
      }
      if (v47 == 2)
      {
        char v46 = 4;
LABEL_70:
        *(unsigned char *)(a1 + v52[953]) |= v46;
      }
      else if (!v47)
      {
        goto LABEL_74;
      }
    }
    char v46 = 2;
    goto LABEL_70;
  }
LABEL_74:
  if (v51) {
    unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
  }
  else {
    unint64_t v3 = 0;
  }
  if (v56)
  {
    id v49 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_189A94024(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A944F4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDEnrichmentDataCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v11 = *MEMORY[0x1E4F143B8];
  long long v6 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  id v1 = *(id *)(a1 + 24);
  uint64_t v2 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t v4 = *(void *)v7;
    do
    {
      uint64_t v5 = 0;
      do
      {
        if (*(void *)v7 != v4) {
          objc_enumerationMutation(v1);
        }
        -[GEOPDEnrichmentDataEntity readAll:](*(void *)(*((void *)&v6 + 1) + 8 * v5++), 1);
      }
      while (v3 != v5);
      uint64_t v3 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
    }
    while (v3);
  }
}

unint64_t GEOPDEnrichmentDataReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDEnrichmentDataReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    long long v9 = (int *)&GEOPDEnrichmentDataReadAllFrom_recursiveTag;
  }
  else {
    long long v9 = (int *)&GEOPDEnrichmentDataReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDEnrichmentDataReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOPDEnrichmentDataCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_189A94860(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A94AA0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A94CEC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A95000(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDEnrichmentDataEntityReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  long long v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 60);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 56)];
  char v7 = 0;
  uint64_t v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  unsigned int v12 = (vaddv_s16((int16x4_t)(*(void *)&vshl_u16((uint16x4_t)(*(void *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 72)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFEFFFCFFFDFFFBLL) & 0xFF01FF01FF01FF01))+ ((*(unsigned char *)(a1 + 72) & 2) != 0));
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v7 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 > 2;
        char v17 = v16 & ~(_BYTE)v11 | v9;
        unsigned __int8 v18 = v16 | v11;
        char v63 = v17;
        char v64 = v18 | v17;
        char v62 = v7;
        if ((v18 | v7)) {
          id v19 = 0;
        }
        else {
          id v19 = a3;
        }
        char v65 = (v19 == 0) | v18;
        BOOL v66 = v18;
        uint64_t v20 = (int *)MEMORY[0x1E4F940E8];
        BOOL v21 = (int *)MEMORY[0x1E4F940C8];
        char v22 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v9;
LABEL_8:
        uint64_t v14 = v10;
        uint64_t v15 = v11;
LABEL_10:
        ++v8;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v21)) {
      goto LABEL_86;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      BOOL v30 = v24++ >= 9;
      if (v30)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_25:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_86:
      int v60 = 1;
      goto LABEL_87;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v66;
    if ((v65 & 1) == 0)
    {
      unint64_t v35 = v19;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    switch((int)v33)
    {
      case 1:
        if (!v34) {
          goto LABEL_71;
        }
        if ((*(unsigned char *)(a1 + 72) & 8) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_105;
          }
          int v39 = objc_alloc_init(GEOPDEnrichmentInfo);
          if (GEOPDEnrichmentInfoReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1))
          {
            PBReaderRecallMark();
            uint64_t v40 = *(void **)(a1 + 32);
            *(void *)(a1 + 32) = v39;
            goto LABEL_57;
          }

          goto LABEL_105;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_105;
        }
        char v55 = 16 * *(unsigned char *)(a1 + 72);
        goto LABEL_83;
      case 2:
        if (!v34) {
          goto LABEL_71;
        }
        if ((*(unsigned char *)(a1 + 72) & 0x20) == 0)
        {
          uint64_t v44 = PBReaderReadString();
          uint64_t v45 = 48;
          goto LABEL_56;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_105;
        }
        char v55 = 4 * *(unsigned char *)(a1 + 72);
        goto LABEL_83;
      case 3:
        if (!v34) {
          goto LABEL_71;
        }
        if ((*(unsigned char *)(a1 + 72) & 0x10) == 0)
        {
          uint64_t v44 = PBReaderReadData();
          uint64_t v45 = 40;
LABEL_56:
          uint64_t v40 = *(void **)(a1 + v45);
          *(void *)(a1 + v45) = v44;
LABEL_57:

          --v8;
LABEL_84:
          BOOL v21 = (int *)MEMORY[0x1E4F940C8];
          goto LABEL_85;
        }
        if (PBReaderSkipValueWithTag())
        {
          char v55 = 8 * *(unsigned char *)(a1 + 72);
LABEL_83:
          v8 += v55 >> 7;
          goto LABEL_84;
        }
LABEL_105:
        int v60 = 0;
        char v61 = &OBJC_IVAR___GEOXPCReply__error;
        BOOL v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_88:
        if (v63) {
LABEL_89:
        }
          *(unsigned char *)(a1 + v61[958]) |= 2u;
        if (v66 || (v60 & 1) == 0)
        {
          *(unsigned char *)(a1 + v61[958]) |= 8u;
          *(unsigned char *)(a1 + v61[958]) |= 0x20u;
          *(unsigned char *)(a1 + v61[958]) |= 0x10u;
          *(unsigned char *)(a1 + v61[958]) |= 4u;
        }
        else if (v19)
        {
          while (1)
          {
            int v56 = *v19++;
            char v57 = 8;
            switch(v56)
            {
              case 0:
                goto LABEL_98;
              case 1:
                goto LABEL_97;
              case 2:
                char v57 = 32;
                goto LABEL_97;
              case 3:
                char v57 = 16;
                goto LABEL_97;
              case 5:
                char v57 = 4;
LABEL_97:
                *(unsigned char *)(a1 + v61[958]) |= v57;
                break;
              default:
                continue;
            }
          }
        }
LABEL_98:
        if (v60) {
          unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
        }
        else {
          unint64_t v3 = 0;
        }
        if (v66)
        {
          uint64_t v58 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      case 4:
        if ((v62 & 1) == 0) {
          goto LABEL_71;
        }
        char v46 = 0;
        unsigned int v47 = 0;
        uint64_t v48 = 0;
        *(unsigned char *)(a1 + 72) |= 1u;
        while (2)
        {
          uint64_t v49 = *v20;
          uint64_t v50 = *(void *)(v3 + v49);
          unint64_t v51 = v50 + 1;
          if (v50 == -1 || v51 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v52 = *(unsigned char *)(*(void *)(v3 + *v22) + v50);
            *(void *)(v3 + v49) = v51;
            v48 |= (unint64_t)(v52 & 0x7F) << v46;
            if (v52 < 0)
            {
              v46 += 7;
              BOOL v30 = v47++ >= 9;
              if (v30)
              {
                LODWORD(v48) = 0;
                goto LABEL_76;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          LODWORD(v48) = 0;
        }
LABEL_76:
        *(_DWORD *)(a1 + 68) = v48;
        goto LABEL_85;
      case 5:
        if (!v34 || (*(unsigned char *)(a1 + 72) & 4) != 0) {
          goto LABEL_71;
        }
        char v53 = PBReaderReadString();
        if (v53) {
          -[GEOPDEnrichmentDataEntity _addNoFlagsAdamId:](a1, v53);
        }

        goto LABEL_84;
      default:
        if ((v63 & 1) == 0 || (*(unsigned char *)(a1 + 72) & 2) != 0)
        {
LABEL_71:
          char v54 = PBReaderSkipValueWithTag();
          BOOL v21 = (int *)MEMORY[0x1E4F940C8];
          if ((v54 & 1) == 0)
          {
            int v60 = 0;
LABEL_87:
            char v61 = &OBJC_IVAR___GEOXPCReply__error;
            goto LABEL_88;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v41 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            id v42 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v41;
          }
          int v43 = PBUnknownFieldAdd();
          BOOL v21 = (int *)MEMORY[0x1E4F940C8];
          if (!v43)
          {
            int v60 = 0;
            char v61 = &OBJC_IVAR___GEOXPCReply__error;
            goto LABEL_89;
          }
        }
LABEL_85:
        if (!(v64 & 1 | (v8 != 0))) {
          goto LABEL_86;
        }
        continue;
    }
  }
}

void sub_189A95864(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A95974(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A95A84(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A9607C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDEnrichmentDataEntityReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 60))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDEnrichmentDataEntityReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = [v8 position];
  *(_DWORD *)(a1 + 60) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOPDEnrichmentDataEntityReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOPDEnrichmentDataEntityReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDEnrichmentDataEntityReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    -[GEOPDEnrichmentInfo readAll:](*(void *)(a1 + 32), 1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_189A962FC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A965BC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A96880(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDEnrichmentDataFilterReadAllFrom(uint64_t a1, void *a2)
{
  unint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    long long v6 = (int *)MEMORY[0x1E4F940C8];
    char v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      int v8 = v3[*v6];
      if (*(void *)&v3[*v4] >= *(void *)&v3[*v5]) {
        break;
      }
      if (v3[*v6])
      {
        int v8 = 1;
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      uint64_t v11 = 0;
      while (1)
      {
        uint64_t v12 = *v4;
        uint64_t v13 = *(void *)&v3[v12];
        unint64_t v14 = v13 + 1;
        if (v13 == -1 || v14 > *(void *)&v3[*v5]) {
          break;
        }
        char v15 = *(unsigned char *)(*(void *)&v3[*v7] + v13);
        *(void *)&v3[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0) {
          goto LABEL_13;
        }
        v9 += 7;
        if (v10++ >= 9)
        {
          char v17 = 0;
          int v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      int v8 = v3[*v6];
      if (v3[*v6]) {
        char v17 = 0;
      }
      else {
        char v17 = v11;
      }
LABEL_16:
      if (v8) {
        BOOL v18 = 1;
      }
      else {
        BOOL v18 = (v17 & 7) == 4;
      }
      if (v18) {
        break;
      }
      if (!*(void *)(a1 + 8))
      {
        id v19 = objc_alloc_init(MEMORY[0x1E4F940B0]);
        uint64_t v20 = *(void **)(a1 + 8);
        *(void *)(a1 + 8) = v19;
      }
      if ((PBUnknownFieldAdd() & 1) == 0) {
        goto LABEL_23;
      }
    }
    BOOL v21 = v8 == 0;
  }
  else
  {
LABEL_23:
    BOOL v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_189A96F88(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A971DC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDEnrichmentInfoReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 80));
  long long v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 76);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 72)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  unsigned int v12 = (vaddv_s16((int16x4_t)(*(void *)&vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int8 *)(a1 + 84)), (uint16x4_t)0xFFFFFFFEFFFAFFFBLL) & 0xFF01FF01FF01FF01))+ (*(unsigned char *)(a1 + 84) & 1)+ ((*(unsigned char *)(a1 + 84) & 0x10) != 0)+ ((*(unsigned char *)(a1 + 84) & 8) != 0));
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 > 3;
        char v17 = v16 & ~(_BYTE)v11 | v9;
        unsigned __int8 v18 = v16 | v11;
        char v54 = v17;
        char v55 = v18 | v17;
        if ((v18 | v8)) {
          id v19 = 0;
        }
        else {
          id v19 = a3;
        }
        uint64_t v20 = (int *)MEMORY[0x1E4F940E8];
        char v56 = (v19 == 0) | v18;
        BOOL v57 = v18;
        BOOL v21 = (int *)MEMORY[0x1E4F940C8];
        char v22 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v9;
LABEL_8:
        uint64_t v14 = v10;
        uint64_t v15 = v11;
LABEL_10:
        ++v7;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (*(void *)(v3 + *v20) < *(void *)(v3 + *v6) && !*(unsigned char *)(v3 + *v21))
  {
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      if (v24++ >= 9)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_25:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    if (v31 || (v25 & 7) == 4) {
      break;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v57;
    if ((v56 & 1) == 0)
    {
      unint64_t v35 = v19;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    switch((int)v33)
    {
      case 1:
        if (!v34) {
          goto LABEL_70;
        }
        if ((*(unsigned char *)(a1 + 84) & 0x40) == 0)
        {
          uint64_t v39 = PBReaderReadString();
          uint64_t v40 = 64;
          goto LABEL_54;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_102;
        }
        char v47 = 2 * *(unsigned char *)(a1 + 84);
        goto LABEL_78;
      case 2:
        if (!v34) {
          goto LABEL_70;
        }
        if ((*(unsigned char *)(a1 + 84) & 0x20) == 0)
        {
          uint64_t v39 = PBReaderReadString();
          uint64_t v40 = 56;
          goto LABEL_54;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_102;
        }
        char v47 = 4 * *(unsigned char *)(a1 + 84);
        goto LABEL_78;
      case 3:
        if (!v34) {
          goto LABEL_70;
        }
        if ((*(unsigned char *)(a1 + 84) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_102;
          }
          char v47 = 32 * *(unsigned char *)(a1 + 84);
LABEL_78:
          v7 += v47 >> 7;
        }
        else
        {
          uint64_t v39 = PBReaderReadString();
          uint64_t v40 = 32;
LABEL_54:
          uint64_t v44 = *(void **)(a1 + v40);
          *(void *)(a1 + v40) = v39;

          --v7;
        }
        goto LABEL_79;
      case 4:
        if (!v34 || (*(unsigned char *)(a1 + 84) & 2) != 0) {
          goto LABEL_70;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_102;
        }
        uint64_t v45 = objc_alloc_init(GEOLocalizedString);
        if (!GEOLocalizedStringReadAllFrom((uint64_t)v45, (void *)v3, v10 & 1)) {
          goto LABEL_101;
        }
        PBReaderRecallMark();
        -[GEOPDEnrichmentInfo _addNoFlagsPoiName:](a1, v45);
        goto LABEL_69;
      case 5:
        if (!v34 || (*(unsigned char *)(a1 + 84) & 0x10) != 0) {
          goto LABEL_70;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_102;
        }
        uint64_t v45 = objc_alloc_init(GEOLocalizedString);
        if (GEOLocalizedStringReadAllFrom((uint64_t)v45, (void *)v3, v10 & 1))
        {
          PBReaderRecallMark();
          -[GEOPDEnrichmentInfo _addNoFlagsShowcaseTitle:](a1, v45);
LABEL_69:

LABEL_79:
          BOOL v21 = (int *)MEMORY[0x1E4F940C8];
          goto LABEL_80;
        }
LABEL_101:

LABEL_102:
        int v52 = 0;
        char v53 = &OBJC_IVAR___GEOXPCReply__error;
        BOOL v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_83:
        if (v54) {
LABEL_84:
        }
          *(unsigned char *)(a1 + v53[965]) |= 1u;
        if (v57 || (v52 & 1) == 0)
        {
          *(unsigned char *)(a1 + v53[965]) |= 0x40u;
          *(unsigned char *)(a1 + v53[965]) |= 0x20u;
          *(unsigned char *)(a1 + v53[965]) |= 4u;
          *(unsigned char *)(a1 + v53[965]) |= 2u;
          *(unsigned char *)(a1 + v53[965]) |= 0x10u;
          *(unsigned char *)(a1 + v53[965]) |= 8u;
        }
        else if (v19)
        {
          while (1)
          {
            int v48 = *v19++;
            char v49 = 64;
            switch(v48)
            {
              case 0:
                goto LABEL_95;
              case 1:
                goto LABEL_94;
              case 2:
                char v49 = 32;
                goto LABEL_94;
              case 3:
                char v49 = 4;
                goto LABEL_94;
              case 4:
                char v49 = 2;
                goto LABEL_94;
              case 5:
                char v49 = 16;
                goto LABEL_94;
              case 6:
                char v49 = 8;
LABEL_94:
                *(unsigned char *)(a1 + v53[965]) |= v49;
                break;
              default:
                continue;
            }
          }
        }
LABEL_95:
        if (v52) {
          unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
        }
        else {
          unint64_t v3 = 0;
        }
        if (v57)
        {
          uint64_t v50 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      case 6:
        if (!v34 || (*(unsigned char *)(a1 + 84) & 8) != 0) {
          goto LABEL_70;
        }
        PBReaderReadString();
        uint64_t v45 = (GEOLocalizedString *)objc_claimAutoreleasedReturnValue();
        if (v45) {
          -[GEOPDEnrichmentInfo _addNoFlagsShowcaseImageUrl:](a1, v45);
        }
        goto LABEL_69;
      default:
        if (v54 & 1) == 0 || (*(unsigned char *)(a1 + 84))
        {
LABEL_70:
          char v46 = PBReaderSkipValueWithTag();
          BOOL v21 = (int *)MEMORY[0x1E4F940C8];
          if ((v46 & 1) == 0)
          {
            int v52 = 0;
LABEL_82:
            char v53 = &OBJC_IVAR___GEOXPCReply__error;
            goto LABEL_83;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v41 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            id v42 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v41;
          }
          int v43 = PBUnknownFieldAdd();
          BOOL v21 = (int *)MEMORY[0x1E4F940C8];
          if (!v43)
          {
            int v52 = 0;
            char v53 = &OBJC_IVAR___GEOXPCReply__error;
            goto LABEL_84;
          }
        }
LABEL_80:
        if (!(v55 & 1 | (v7 != 0))) {
          goto LABEL_81;
        }
        break;
    }
  }
LABEL_81:
  int v52 = 1;
  goto LABEL_82;
}

void sub_189A97A68(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A97B78(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A97C88(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A97EB4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A980E0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A9889C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDEnrichmentInfoCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v22 = *MEMORY[0x1E4F143B8];
  long long v16 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  id v2 = *(id *)(a1 + 24);
  uint64_t v3 = [v2 countByEnumeratingWithState:&v16 objects:v21 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v17;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v17 != v5) {
          objc_enumerationMutation(v2);
        }
        [*(id *)(*((void *)&v16 + 1) + 8 * v6++) readAll:1];
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v16 objects:v21 count:16];
    }
    while (v4);
  }

  long long v14 = 0u;
  long long v15 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  id v7 = *(id *)(a1 + 48);
  uint64_t v8 = [v7 countByEnumeratingWithState:&v12 objects:v20 count:16];
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)v13;
    do
    {
      uint64_t v11 = 0;
      do
      {
        if (*(void *)v13 != v10) {
          objc_enumerationMutation(v7);
        }
        objc_msgSend(*(id *)(*((void *)&v12 + 1) + 8 * v11++), "readAll:", 1, (void)v12);
      }
      while (v9 != v11);
      uint64_t v9 = [v7 countByEnumeratingWithState:&v12 objects:v20 count:16];
    }
    while (v9);
  }
}

unint64_t GEOPDEnrichmentInfoReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 76))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDEnrichmentInfoReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 80));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 72) = [v8 position];
  *(_DWORD *)(a1 + 76) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOPDEnrichmentInfoReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOPDEnrichmentInfoReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDEnrichmentInfoReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOPDEnrichmentInfoCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 80));
  return Specified;
}

void sub_189A99264(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A99614(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDEnrichmentInfoIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 80));
  BOOL v2 = *(unsigned __int8 *)(a1 + 84) > 1u;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 80));
  return v2;
}

void sub_189A99A70(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDEnrichmentInfoFilterReadAllFrom(uint64_t a1, void *a2)
{
  uint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    uint64_t v6 = (int *)MEMORY[0x1E4F940C8];
    id v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      int v8 = v3[*v6];
      if (*(void *)&v3[*v4] >= *(void *)&v3[*v5]) {
        break;
      }
      if (v3[*v6])
      {
        int v8 = 1;
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      uint64_t v11 = 0;
      while (1)
      {
        uint64_t v12 = *v4;
        uint64_t v13 = *(void *)&v3[v12];
        unint64_t v14 = v13 + 1;
        if (v13 == -1 || v14 > *(void *)&v3[*v5]) {
          break;
        }
        char v15 = *(unsigned char *)(*(void *)&v3[*v7] + v13);
        *(void *)&v3[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0) {
          goto LABEL_13;
        }
        v9 += 7;
        if (v10++ >= 9)
        {
          char v17 = 0;
          int v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      int v8 = v3[*v6];
      if (v3[*v6]) {
        char v17 = 0;
      }
      else {
        char v17 = v11;
      }
LABEL_16:
      if (v8) {
        BOOL v18 = 1;
      }
      else {
        BOOL v18 = (v17 & 7) == 4;
      }
      if (v18) {
        break;
      }
      if (!*(void *)(a1 + 8))
      {
        id v19 = objc_alloc_init(MEMORY[0x1E4F940B0]);
        uint64_t v20 = *(void **)(a1 + 8);
        *(void *)(a1 + 8) = v19;
      }
      if ((PBUnknownFieldAdd() & 1) == 0) {
        goto LABEL_23;
      }
    }
    BOOL v21 = v8 == 0;
  }
  else
  {
LABEL_23:
    BOOL v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_189A9A1A0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A9AB5C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A9AF24(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A9B09C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A9B490(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A9C6C8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A9CD88(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A9CEFC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A9D0D4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A9D244(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A9D4A4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A9D9CC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A9DB40(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A9DF88(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A9E54C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A9E744(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A9EAD4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A9EC4C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDEntityReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOPDEntityReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189AA2438(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDInlineRapEnablementIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      if (v14 || (v8 & 7) == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_57;
          }
          unsigned int v16 = 0;
          while (1)
          {
            uint64_t v17 = *v2;
            uint64_t v18 = *(void *)&a1[v17];
            unint64_t v19 = v18 + 1;
            if (v18 == -1 || v19 > *(void *)&a1[*v3]) {
              goto LABEL_53;
            }
            int v20 = *(char *)(*(void *)&a1[*v5] + v18);
            *(void *)&a1[v17] = v19;
            if (v20 < 0)
            {
              BOOL v21 = v16++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_54;
          }
        case 2u:
          if ((v8 & 7) != 0) {
            goto LABEL_57;
          }
          unsigned int v22 = 0;
          while (1)
          {
            uint64_t v23 = *v2;
            uint64_t v24 = *(void *)&a1[v23];
            unint64_t v25 = v24 + 1;
            if (v24 == -1 || v25 > *(void *)&a1[*v3]) {
              goto LABEL_53;
            }
            int v26 = *(char *)(*(void *)&a1[*v5] + v24);
            *(void *)&a1[v23] = v25;
            if (v26 < 0)
            {
              BOOL v21 = v22++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_54;
          }
        case 3u:
          if ((v8 & 7) != 0) {
            goto LABEL_57;
          }
          unsigned int v27 = 0;
          while (1)
          {
            uint64_t v28 = *v2;
            uint64_t v29 = *(void *)&a1[v28];
            unint64_t v30 = v29 + 1;
            if (v29 == -1 || v30 > *(void *)&a1[*v3]) {
              goto LABEL_53;
            }
            int v31 = *(char *)(*(void *)&a1[*v5] + v29);
            *(void *)&a1[v28] = v30;
            if (v31 < 0)
            {
              BOOL v21 = v27++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_54;
          }
        case 4u:
          if ((v8 & 7) != 0) {
            goto LABEL_57;
          }
          unsigned int v32 = 0;
          break;
        default:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_57:
          BOOL v37 = 0;
          goto LABEL_56;
      }
      while (1)
      {
        uint64_t v33 = *v2;
        uint64_t v34 = *(void *)&a1[v33];
        unint64_t v35 = v34 + 1;
        if (v34 == -1 || v35 > *(void *)&a1[*v3]) {
          break;
        }
        int v36 = *(char *)(*(void *)&a1[*v5] + v34);
        *(void *)&a1[v33] = v35;
        if (v36 < 0)
        {
          BOOL v21 = v32++ > 8;
          if (!v21) {
            continue;
          }
        }
        goto LABEL_54;
      }
LABEL_53:
      a1[*v4] = 1;
LABEL_54:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v37 = a1[*v4] == 0;
LABEL_56:
  PBReaderRecallMark();
  return v37;
}

BOOL GEOPDURLDataIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_27;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        goto LABEL_27;
      }
      if ((v8 >> 3) == 2) {
        break;
      }
      if ((v8 >> 3) != 1) {
        goto LABEL_25;
      }
      if (v15 != 2 || !PBReaderPlaceMark() || !GEOLocalizedStringIsValid(a1))
      {
LABEL_28:
        PBReaderRecallMark();
        return 0;
      }
      PBReaderRecallMark();
LABEL_26:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_27;
      }
    }
    if (v15 != 2) {
      goto LABEL_28;
    }
LABEL_25:
    if ((PBReaderSkipValueWithTag() & 1) == 0) {
      goto LABEL_28;
    }
    goto LABEL_26;
  }
LABEL_27:
  BOOL v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

os_unfair_lock_s *GEOPDEntityIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOPDEntityIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 72);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_189AA4330(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDEntityFilterReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        switch((v10 >> 3))
        {
          case 1u:
            char v18 = 0;
            unsigned int v19 = 0;
            uint64_t v20 = 0;
            *(unsigned char *)(a1 + 20) |= 2u;
            while (1)
            {
              uint64_t v21 = *v4;
              uint64_t v22 = *(void *)&v3[v21];
              unint64_t v23 = v22 + 1;
              if (v22 == -1 || v23 > *(void *)&v3[*v5])
              {
                int v26 = &OBJC_IVAR___GEOPDEntityFilter__includeSpokenNames;
                goto LABEL_56;
              }
              char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
              *(void *)&v3[v21] = v23;
              v20 |= (unint64_t)(v24 & 0x7F) << v18;
              if ((v24 & 0x80) == 0) {
                break;
              }
              v18 += 7;
              BOOL v25 = v19++ > 8;
              if (v25)
              {
                uint64_t v20 = 0;
                int v26 = &OBJC_IVAR___GEOPDEntityFilter__includeSpokenNames;
                goto LABEL_59;
              }
            }
            int v26 = &OBJC_IVAR___GEOPDEntityFilter__includeSpokenNames;
            goto LABEL_57;
          case 2u:
            char v29 = 0;
            unsigned int v30 = 0;
            uint64_t v20 = 0;
            *(unsigned char *)(a1 + 20) |= 1u;
            while (2)
            {
              uint64_t v31 = *v4;
              uint64_t v32 = *(void *)&v3[v31];
              unint64_t v33 = v32 + 1;
              if (v32 == -1 || v33 > *(void *)&v3[*v5])
              {
                int v26 = &OBJC_IVAR___GEOPDEntityFilter__includeName;
                goto LABEL_56;
              }
              char v34 = *(unsigned char *)(*(void *)&v3[*v7] + v32);
              *(void *)&v3[v31] = v33;
              v20 |= (unint64_t)(v34 & 0x7F) << v29;
              if (v34 < 0)
              {
                v29 += 7;
                BOOL v25 = v30++ > 8;
                if (v25)
                {
                  uint64_t v20 = 0;
                  int v26 = &OBJC_IVAR___GEOPDEntityFilter__includeName;
                  goto LABEL_59;
                }
                continue;
              }
              break;
            }
            int v26 = &OBJC_IVAR___GEOPDEntityFilter__includeName;
            goto LABEL_57;
          case 3u:
            char v35 = 0;
            unsigned int v36 = 0;
            uint64_t v20 = 0;
            *(unsigned char *)(a1 + 20) |= 4u;
            while (2)
            {
              uint64_t v37 = *v4;
              uint64_t v38 = *(void *)&v3[v37];
              unint64_t v39 = v38 + 1;
              if (v38 == -1 || v39 > *(void *)&v3[*v5])
              {
                int v26 = &OBJC_IVAR___GEOPDEntityFilter__populateAltCategory;
                goto LABEL_56;
              }
              char v40 = *(unsigned char *)(*(void *)&v3[*v7] + v38);
              *(void *)&v3[v37] = v39;
              v20 |= (unint64_t)(v40 & 0x7F) << v35;
              if (v40 < 0)
              {
                v35 += 7;
                BOOL v25 = v36++ > 8;
                if (v25)
                {
                  uint64_t v20 = 0;
                  int v26 = &OBJC_IVAR___GEOPDEntityFilter__populateAltCategory;
                  goto LABEL_59;
                }
                continue;
              }
              break;
            }
            int v26 = &OBJC_IVAR___GEOPDEntityFilter__populateAltCategory;
            goto LABEL_57;
          case 4u:
            char v41 = 0;
            unsigned int v42 = 0;
            uint64_t v20 = 0;
            *(unsigned char *)(a1 + 20) |= 8u;
            break;
          default:
            if (!*(void *)(a1 + 8))
            {
              id v27 = objc_alloc_init(MEMORY[0x1E4F940B0]);
              uint64_t v28 = *(void **)(a1 + 8);
              *(void *)(a1 + 8) = v27;
            }
            if ((PBUnknownFieldAdd() & 1) == 0) {
              goto LABEL_67;
            }
            continue;
        }
        while (1)
        {
          uint64_t v43 = *v4;
          uint64_t v44 = *(void *)&v3[v43];
          unint64_t v45 = v44 + 1;
          if (v44 == -1 || v45 > *(void *)&v3[*v5]) {
            break;
          }
          char v46 = *(unsigned char *)(*(void *)&v3[*v7] + v44);
          *(void *)&v3[v43] = v45;
          v20 |= (unint64_t)(v46 & 0x7F) << v41;
          if ((v46 & 0x80) == 0)
          {
            int v26 = &OBJC_IVAR___GEOPDEntityFilter__useLegacyTaxonomy;
            goto LABEL_57;
          }
          v41 += 7;
          BOOL v25 = v42++ > 8;
          if (v25)
          {
            uint64_t v20 = 0;
            int v26 = &OBJC_IVAR___GEOPDEntityFilter__useLegacyTaxonomy;
            goto LABEL_59;
          }
        }
        int v26 = &OBJC_IVAR___GEOPDEntityFilter__useLegacyTaxonomy;
LABEL_56:
        v3[*v6] = 1;
LABEL_57:
        if (v3[*v6]) {
          uint64_t v20 = 0;
        }
LABEL_59:
        *(unsigned char *)(a1 + *v26) = v20 != 0;
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v47 = v3[*v6] == 0;
  }
  else
  {
LABEL_67:
    BOOL v47 = 0;
  }
  objc_sync_exit(v3);

  return v47;
}

void sub_189AA5028(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDEvChargingPortReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      while (1)
      {
        if (v3[*v6]) {
          goto LABEL_59;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          goto LABEL_59;
        }
        unint64_t v18 = v10 >> 3;
        if ((v10 >> 3) == 5)
        {
          char v28 = 0;
          unsigned int v29 = 0;
          uint64_t v21 = 0;
          *(unsigned char *)(a1 + 28) |= 2u;
          while (1)
          {
            uint64_t v30 = *v4;
            uint64_t v31 = *(void *)&v3[v30];
            unint64_t v32 = v31 + 1;
            if (v31 == -1 || v32 > *(void *)&v3[*v5]) {
              break;
            }
            char v33 = *(unsigned char *)(*(void *)&v3[*v7] + v31);
            *(void *)&v3[v30] = v32;
            v21 |= (unint64_t)(v33 & 0x7F) << v28;
            if ((v33 & 0x80) == 0)
            {
              id v27 = &OBJC_IVAR___GEOPDEvChargingPort__chargingLevel;
              goto LABEL_51;
            }
            v28 += 7;
            BOOL v26 = v29++ > 8;
            if (v26)
            {
              LODWORD(v21) = 0;
              id v27 = &OBJC_IVAR___GEOPDEvChargingPort__chargingLevel;
              goto LABEL_53;
            }
          }
          id v27 = &OBJC_IVAR___GEOPDEvChargingPort__chargingLevel;
LABEL_50:
          v3[*v6] = 1;
          goto LABEL_51;
        }
        if (v18 == 4) {
          break;
        }
        if (v18 == 3)
        {
          char v19 = 0;
          unsigned int v20 = 0;
          uint64_t v21 = 0;
          *(unsigned char *)(a1 + 28) |= 4u;
          while (1)
          {
            uint64_t v22 = *v4;
            uint64_t v23 = *(void *)&v3[v22];
            unint64_t v24 = v23 + 1;
            if (v23 == -1 || v24 > *(void *)&v3[*v5])
            {
              id v27 = &OBJC_IVAR___GEOPDEvChargingPort__power;
              goto LABEL_50;
            }
            char v25 = *(unsigned char *)(*(void *)&v3[*v7] + v23);
            *(void *)&v3[v22] = v24;
            v21 |= (unint64_t)(v25 & 0x7F) << v19;
            if ((v25 & 0x80) == 0) {
              break;
            }
            v19 += 7;
            BOOL v26 = v20++ > 8;
            if (v26)
            {
              LODWORD(v21) = 0;
              id v27 = &OBJC_IVAR___GEOPDEvChargingPort__power;
              goto LABEL_53;
            }
          }
          id v27 = &OBJC_IVAR___GEOPDEvChargingPort__power;
          goto LABEL_51;
        }
        if (!*(void *)(a1 + 8))
        {
          id v40 = objc_alloc_init(MEMORY[0x1E4F940B0]);
          char v41 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = v40;
        }
        if ((PBUnknownFieldAdd() & 1) == 0) {
          goto LABEL_60;
        }
LABEL_54:
        if (*(void *)&v3[*v4] >= *(void *)&v3[*v5]) {
          goto LABEL_59;
        }
      }
      char v34 = 0;
      unsigned int v35 = 0;
      uint64_t v21 = 0;
      *(unsigned char *)(a1 + 28) |= 1u;
      while (1)
      {
        uint64_t v36 = *v4;
        uint64_t v37 = *(void *)&v3[v36];
        unint64_t v38 = v37 + 1;
        if (v37 == -1 || v38 > *(void *)&v3[*v5])
        {
          id v27 = &OBJC_IVAR___GEOPDEvChargingPort__chargingConnectorType;
          goto LABEL_50;
        }
        char v39 = *(unsigned char *)(*(void *)&v3[*v7] + v37);
        *(void *)&v3[v36] = v38;
        v21 |= (unint64_t)(v39 & 0x7F) << v34;
        if ((v39 & 0x80) == 0) {
          break;
        }
        v34 += 7;
        BOOL v26 = v35++ > 8;
        if (v26)
        {
          LODWORD(v21) = 0;
          id v27 = &OBJC_IVAR___GEOPDEvChargingPort__chargingConnectorType;
          goto LABEL_53;
        }
      }
      id v27 = &OBJC_IVAR___GEOPDEvChargingPort__chargingConnectorType;
LABEL_51:
      if (v3[*v6]) {
        LODWORD(v21) = 0;
      }
LABEL_53:
      *(_DWORD *)(a1 + *v27) = v21;
      goto LABEL_54;
    }
LABEL_59:
    BOOL v42 = v3[*v6] == 0;
  }
  else
  {
LABEL_60:
    BOOL v42 = 0;
  }
  objc_sync_exit(v3);

  return v42;
}

void sub_189AA63B0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDEvChargingPortReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOPDEvChargingPortReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189AA6414(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDEvChargingPortIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_48;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      if (v14 || (v8 & 7) == 4) {
        goto LABEL_48;
      }
      unint64_t v16 = v8 >> 3;
      if ((v8 >> 3) == 5) {
        break;
      }
      if (v16 == 4)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_50;
        }
        unsigned int v28 = 0;
        while (1)
        {
          uint64_t v29 = *v2;
          uint64_t v30 = *(void *)&a1[v29];
          unint64_t v31 = v30 + 1;
          if (v30 == -1 || v31 > *(void *)&a1[*v3]) {
            goto LABEL_45;
          }
          int v32 = *(char *)(*(void *)&a1[*v5] + v30);
          *(void *)&a1[v29] = v31;
          if (v32 < 0)
          {
            BOOL v22 = v28++ > 8;
            if (!v22) {
              continue;
            }
          }
          goto LABEL_47;
        }
      }
      if (v16 == 3)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_50;
        }
        unsigned int v17 = 0;
        while (1)
        {
          uint64_t v18 = *v2;
          uint64_t v19 = *(void *)&a1[v18];
          unint64_t v20 = v19 + 1;
          if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
            break;
          }
          int v21 = *(char *)(*(void *)&a1[*v5] + v19);
          *(void *)&a1[v18] = v20;
          if (v21 < 0)
          {
            BOOL v22 = v17++ > 8;
            if (!v22) {
              continue;
            }
          }
          goto LABEL_47;
        }
LABEL_45:
        a1[*v4] = 1;
        goto LABEL_47;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_50:
        BOOL v33 = 0;
        goto LABEL_49;
      }
LABEL_47:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_48;
      }
    }
    if ((v8 & 7) != 0) {
      goto LABEL_50;
    }
    unsigned int v23 = 0;
    while (1)
    {
      uint64_t v24 = *v2;
      uint64_t v25 = *(void *)&a1[v24];
      unint64_t v26 = v25 + 1;
      if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
        goto LABEL_45;
      }
      int v27 = *(char *)(*(void *)&a1[*v5] + v25);
      *(void *)&a1[v24] = v26;
      if (v27 < 0)
      {
        BOOL v22 = v23++ > 8;
        if (!v22) {
          continue;
        }
      }
      goto LABEL_47;
    }
  }
LABEL_48:
  BOOL v33 = a1[*v4] == 0;
LABEL_49:
  PBReaderRecallMark();
  return v33;
}

BOOL GEOPDEventCategoryReadAllFrom(uint64_t a1, void *a2, int a3)
{
  uint64_t v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    char v6 = (int *)MEMORY[0x1E4F940E8];
    unsigned int v7 = (int *)MEMORY[0x1E4F940E0];
    unint64_t v8 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v5[*MEMORY[0x1E4F940E8]] < *(void *)&v5[*MEMORY[0x1E4F940E0]])
    {
      uint64_t v9 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v5[*v8]) {
          break;
        }
        char v10 = 0;
        unsigned int v11 = 0;
        unint64_t v12 = 0;
        while (1)
        {
          uint64_t v13 = *v6;
          uint64_t v14 = *(void *)&v5[v13];
          unint64_t v15 = v14 + 1;
          if (v14 == -1 || v15 > *(void *)&v5[*v7]) {
            break;
          }
          char v16 = *(unsigned char *)(*(void *)&v5[*v9] + v14);
          *(void *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0) {
            goto LABEL_13;
          }
          v10 += 7;
          BOOL v17 = v11++ >= 9;
          if (v17)
          {
            unint64_t v12 = 0;
            int v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        int v18 = v5[*v8];
        if (v5[*v8]) {
          unint64_t v12 = 0;
        }
LABEL_15:
        if (v18 || (v12 & 7) == 4) {
          break;
        }
        if ((v12 >> 3) == 2)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_42;
          }
          int v27 = objc_alloc_init(GEOPDCategory);
          if (!GEOPDCategoryReadAllFrom((uint64_t)v27, v5, a3))
          {

            goto LABEL_42;
          }
          PBReaderRecallMark();
          -[GEOPDEventCategory addLocalizedCategory:](a1, v27);
        }
        else if ((v12 >> 3) == 1)
        {
          char v20 = 0;
          unsigned int v21 = 0;
          uint64_t v22 = 0;
          *(unsigned char *)(a1 + 28) |= 1u;
          while (1)
          {
            uint64_t v23 = *v6;
            uint64_t v24 = *(void *)&v5[v23];
            unint64_t v25 = v24 + 1;
            if (v24 == -1 || v25 > *(void *)&v5[*v7]) {
              break;
            }
            char v26 = *(unsigned char *)(*(void *)&v5[*v9] + v24);
            *(void *)&v5[v23] = v25;
            v22 |= (unint64_t)(v26 & 0x7F) << v20;
            if ((v26 & 0x80) == 0) {
              goto LABEL_36;
            }
            v20 += 7;
            BOOL v17 = v21++ >= 9;
            if (v17)
            {
              LODWORD(v22) = 0;
              goto LABEL_38;
            }
          }
          v5[*v8] = 1;
LABEL_36:
          if (v5[*v8]) {
            LODWORD(v22) = 0;
          }
LABEL_38:
          *(_DWORD *)(a1 + 24) = v22;
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v28 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            uint64_t v29 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v28;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_42;
          }
        }
      }
      while (*(void *)&v5[*v6] < *(void *)&v5[*v7]);
    }
    BOOL v30 = v5[*v8] == 0;
  }
  else
  {
LABEL_42:
    BOOL v30 = 0;
  }
  objc_sync_exit(v5);

  return v30;
}

void sub_189AA7464(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189AA7DEC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189AA8194(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDExploreGuidesIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  unsigned int v2 = *(unsigned __int8 *)(a1 + 52);
  if ((v2 & 8) != 0) {
    return 1;
  }
  if ((v2 & 4) != 0)
  {
    if (GEOPDGuidesLocationEntryIsDirty(*(os_unfair_lock_s **)(a1 + 32))) {
      return 1;
    }
    unsigned int v2 = *(unsigned __int8 *)(a1 + 52);
  }
  return (v2 >> 1) & 1;
}

os_unfair_lock_s *GEOPDExploreGuidesIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOPDExploreGuidesIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 12);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_189AA83D4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDExploreGuidesFilterReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      int v8 = v3[*v6];
      if (*(void *)&v3[*v4] >= *(void *)&v3[*v5]) {
        break;
      }
      if (v3[*v6])
      {
        int v8 = 1;
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      uint64_t v11 = 0;
      while (1)
      {
        uint64_t v12 = *v4;
        uint64_t v13 = *(void *)&v3[v12];
        unint64_t v14 = v13 + 1;
        if (v13 == -1 || v14 > *(void *)&v3[*v5]) {
          break;
        }
        char v15 = *(unsigned char *)(*(void *)&v3[*v7] + v13);
        *(void *)&v3[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0) {
          goto LABEL_13;
        }
        v9 += 7;
        if (v10++ >= 9)
        {
          char v17 = 0;
          int v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      int v8 = v3[*v6];
      if (v3[*v6]) {
        char v17 = 0;
      }
      else {
        char v17 = v11;
      }
LABEL_16:
      if (v8) {
        BOOL v18 = 1;
      }
      else {
        BOOL v18 = (v17 & 7) == 4;
      }
      if (v18) {
        break;
      }
      if (!*(void *)(a1 + 8))
      {
        id v19 = objc_alloc_init(MEMORY[0x1E4F940B0]);
        char v20 = *(void **)(a1 + 8);
        *(void *)(a1 + 8) = v19;
      }
      if ((PBUnknownFieldAdd() & 1) == 0) {
        goto LABEL_23;
      }
    }
    BOOL v21 = v8 == 0;
  }
  else
  {
LABEL_23:
    BOOL v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_189AA8950(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189AA8BF8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDExtensionParamsReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 80));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 76);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 72)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  unsigned int v11 = (vaddv_s16((int16x4_t)(*(void *)&vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int8 *)(a1 + 84)), (uint16x4_t)0xFFFEFFFFFFFCFFFDLL) & 0xFF01FF01FF01FF01))+ (*(unsigned char *)(a1 + 84) & 1));
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v9])
    {
      case -4:
        ++v11;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_9;
      case 0:
        BOOL v14 = v11 > 2;
        char v15 = v14 & ~(_BYTE)v10 | v7;
        char v16 = v14 | v10;
        if (((v14 | v10) | v8)) {
          char v17 = 0;
        }
        else {
          char v17 = a3;
        }
        BOOL v18 = (int *)MEMORY[0x1E4F940E8];
        int v19 = 1;
        char v20 = (int *)MEMORY[0x1E4F940C8];
        if (*(void *)(v3 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(v3 + *v6)) {
          goto LABEL_95;
        }
        char v65 = v15;
        char v66 = v16 | v15;
        char v68 = (v17 == 0) | v16;
        BOOL v21 = (int *)MEMORY[0x1E4F940B8];
        char v67 = v14 | v10;
        break;
      default:
        ++v11;
LABEL_7:
        uint64_t v12 = v7;
LABEL_8:
        uint64_t v13 = v10;
LABEL_9:
        ++v9;
        uint64_t v7 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(unsigned char *)(v3 + *v20)) {
      goto LABEL_93;
    }
    char v22 = 0;
    unsigned int v23 = 0;
    unint64_t v24 = 0;
    while (1)
    {
      uint64_t v25 = *v18;
      uint64_t v26 = *(void *)(v3 + v25);
      unint64_t v27 = v26 + 1;
      if (v26 == -1 || v27 > *(void *)(v3 + *v6)) {
        break;
      }
      char v28 = *(unsigned char *)(*(void *)(v3 + *v21) + v26);
      *(void *)(v3 + v25) = v27;
      v24 |= (unint64_t)(v28 & 0x7F) << v22;
      if ((v28 & 0x80) == 0) {
        goto LABEL_24;
      }
      v22 += 7;
      BOOL v29 = v23++ >= 9;
      if (v29)
      {
        unint64_t v24 = 0;
        int v30 = *(unsigned __int8 *)(v3 + *v20);
        goto LABEL_26;
      }
    }
    *(unsigned char *)(v3 + *v20) = 1;
LABEL_24:
    int v30 = *(unsigned __int8 *)(v3 + *v20);
    if (*(unsigned char *)(v3 + *v20)) {
      unint64_t v24 = 0;
    }
LABEL_26:
    int v31 = v24 & 7;
    if (v30 || v31 == 4)
    {
LABEL_93:
      int v19 = 1;
      goto LABEL_94;
    }
    unint64_t v33 = v24 >> 3;
    BOOL v34 = v16;
    if ((v68 & 1) == 0)
    {
      unsigned int v35 = v17;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    switch((int)v33)
    {
      case 1:
        if (!v34) {
          goto LABEL_70;
        }
        if ((*(unsigned char *)(a1 + 84) & 0x10) == 0)
        {
          uint64_t v39 = PBReaderReadString();
          uint64_t v40 = 64;
          goto LABEL_63;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_111;
        }
        char v53 = 8 * *(unsigned char *)(a1 + 84);
        goto LABEL_78;
      case 2:
        if (!v34) {
          goto LABEL_70;
        }
        if ((*(unsigned char *)(a1 + 84) & 8) == 0)
        {
          uint64_t v39 = PBReaderReadString();
          uint64_t v40 = 56;
          goto LABEL_63;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_111;
        }
        char v53 = 16 * *(unsigned char *)(a1 + 84);
        goto LABEL_78;
      case 3:
        if (!v34 || (*(unsigned char *)(a1 + 84) & 2) != 0) {
          goto LABEL_70;
        }
        if (v31 == 2)
        {
          if (!PBReaderPlaceMark()) {
            goto LABEL_111;
          }
          char v20 = (int *)MEMORY[0x1E4F940C8];
          while (*(void *)(v3 + *v18) < *(void *)(v3 + *v6))
          {
            if (*(unsigned char *)(v3 + *v20)) {
              break;
            }
            char v41 = 0;
            unsigned int v42 = 0;
            uint64_t v43 = 0;
            while (1)
            {
              uint64_t v44 = *v18;
              uint64_t v45 = *(void *)(v3 + v44);
              unint64_t v46 = v45 + 1;
              if (v45 == -1 || v46 > *(void *)(v3 + *v6)) {
                break;
              }
              char v47 = *(unsigned char *)(*(void *)(v3 + *v21) + v45);
              *(void *)(v3 + v44) = v46;
              v43 |= (unint64_t)(v47 & 0x7F) << v41;
              if (v47 < 0)
              {
                v41 += 7;
                BOOL v29 = v42++ >= 9;
                if (!v29) {
                  continue;
                }
              }
              goto LABEL_58;
            }
            *(unsigned char *)(v3 + *v20) = 1;
LABEL_58:
            PBRepeatedInt32Add();
          }
          PBReaderRecallMark();
        }
        else
        {
          char v54 = 0;
          unsigned int v55 = 0;
          uint64_t v56 = 0;
          char v20 = (int *)MEMORY[0x1E4F940C8];
          while (1)
          {
            uint64_t v57 = *v18;
            uint64_t v58 = *(void *)(v3 + v57);
            unint64_t v59 = v58 + 1;
            if (v58 == -1 || v59 > *(void *)(v3 + *v6)) {
              break;
            }
            char v60 = *(unsigned char *)(*(void *)(v3 + *v21) + v58);
            *(void *)(v3 + v57) = v59;
            v56 |= (unint64_t)(v60 & 0x7F) << v54;
            if (v60 < 0)
            {
              v54 += 7;
              BOOL v29 = v55++ >= 9;
              if (!v29) {
                continue;
              }
            }
            goto LABEL_91;
          }
          *(unsigned char *)(v3 + *v20) = 1;
LABEL_91:
          PBRepeatedInt32Add();
        }
        char v16 = v67;
        goto LABEL_80;
      case 4:
        if (!v34) {
          goto LABEL_70;
        }
        if ((*(unsigned char *)(a1 + 84) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_111:
            int v19 = 0;
            char v16 = v67;
            char v20 = (int *)MEMORY[0x1E4F940C8];
            goto LABEL_94;
          }
          char v53 = 32 * *(unsigned char *)(a1 + 84);
LABEL_78:
          v9 += v53 >> 7;
          char v16 = v67;
        }
        else
        {
          uint64_t v39 = PBReaderReadString();
          uint64_t v40 = 48;
LABEL_63:
          int v48 = *(void **)(a1 + v40);
          *(void *)(a1 + v40) = v39;

          char v16 = v67;
          --v9;
        }
        char v20 = (int *)MEMORY[0x1E4F940C8];
        goto LABEL_80;
      default:
        if ((v65 & 1) != 0 && (*(unsigned char *)(a1 + 84) & 1) == 0)
        {
          if (!*(void *)(a1 + 16))
          {
            id v49 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            uint64_t v50 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v49;
          }
          int v51 = PBUnknownFieldAdd();
          char v16 = v67;
          char v20 = (int *)MEMORY[0x1E4F940C8];
          if (!v51)
          {
            int v19 = 0;
            goto LABEL_96;
          }
LABEL_80:
          if (!(v66 & 1 | (v9 != 0)) || *(void *)(v3 + *v18) >= *(void *)(v3 + *v6)) {
            goto LABEL_93;
          }
          continue;
        }
LABEL_70:
        char v52 = PBReaderSkipValueWithTag();
        char v16 = v67;
        char v20 = (int *)MEMORY[0x1E4F940C8];
        if (v52) {
          goto LABEL_80;
        }
        int v19 = 0;
LABEL_94:
        char v15 = v65;
LABEL_95:
        if (v15) {
LABEL_96:
        }
          *(unsigned char *)(a1 + 84) |= 1u;
        if (v16 & 1 | ((v19 & 1) == 0))
        {
          *(unsigned char *)(a1 + 84) |= 0x10u;
          *(unsigned char *)(a1 + 84) |= 8u;
          *(unsigned char *)(a1 + 84) |= 2u;
          *(unsigned char *)(a1 + 84) |= 4u;
        }
        else if (v17)
        {
          while (1)
          {
            int v61 = *v17++;
            char v62 = 16;
            switch(v61)
            {
              case 0:
                goto LABEL_105;
              case 1:
                goto LABEL_104;
              case 2:
                char v62 = 8;
                goto LABEL_104;
              case 3:
                char v62 = 2;
                goto LABEL_104;
              case 4:
                char v62 = 4;
LABEL_104:
                *(unsigned char *)(a1 + 84) |= v62;
                break;
              default:
                continue;
            }
          }
        }
LABEL_105:
        if (v19)
        {
          unint64_t v3 = *(unsigned char *)(v3 + *v20) == 0;
          if ((v16 & 1) == 0) {
            return v3;
          }
LABEL_109:
          char v63 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        else
        {
          unint64_t v3 = 0;
          if (v16) {
            goto LABEL_109;
          }
        }
        return v3;
    }
  }
}

void sub_189AA94C4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189AA9918(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189AA99F8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDExtensionParamsReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 76))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDExtensionParamsReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 80));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 72) = [v8 position];
  *(_DWORD *)(a1 + 76) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOPDExtensionParamsReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOPDExtensionParamsReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDExtensionParamsReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 80));
  return Specified;
}

void sub_189AA9C60(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189AA9E60(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189AAA004(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDExternalActionReadAllFrom(uint64_t a1, void *a2, int a3)
{
  uint64_t v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    char v6 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v7 = (int *)MEMORY[0x1E4F940E0];
    id v8 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v5[*MEMORY[0x1E4F940E8]] < *(void *)&v5[*MEMORY[0x1E4F940E0]])
    {
      uint64_t v9 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v5[*v8]) {
          break;
        }
        char v10 = 0;
        unsigned int v11 = 0;
        unint64_t v12 = 0;
        while (1)
        {
          uint64_t v13 = *v6;
          uint64_t v14 = *(void *)&v5[v13];
          unint64_t v15 = v14 + 1;
          if (v14 == -1 || v15 > *(void *)&v5[*v7]) {
            break;
          }
          char v16 = *(unsigned char *)(*(void *)&v5[*v9] + v14);
          *(void *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0) {
            goto LABEL_13;
          }
          v10 += 7;
          BOOL v17 = v11++ >= 9;
          if (v17)
          {
            unint64_t v12 = 0;
            int v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        int v18 = v5[*v8];
        if (v5[*v8]) {
          unint64_t v12 = 0;
        }
LABEL_15:
        if (v18 || (v12 & 7) == 4) {
          break;
        }
        if ((v12 >> 3) == 2)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_42;
          }
          unint64_t v27 = objc_alloc_init(GEOPDExternalActionDetail);
          if (!GEOPDExternalActionDetailReadAllFrom((uint64_t)v27, v5, a3))
          {

            goto LABEL_42;
          }
          PBReaderRecallMark();
          -[GEOPDExternalAction addExternalActionDetail:](a1, v27);
        }
        else if ((v12 >> 3) == 1)
        {
          char v20 = 0;
          unsigned int v21 = 0;
          uint64_t v22 = 0;
          *(unsigned char *)(a1 + 28) |= 1u;
          while (1)
          {
            uint64_t v23 = *v6;
            uint64_t v24 = *(void *)&v5[v23];
            unint64_t v25 = v24 + 1;
            if (v24 == -1 || v25 > *(void *)&v5[*v7]) {
              break;
            }
            char v26 = *(unsigned char *)(*(void *)&v5[*v9] + v24);
            *(void *)&v5[v23] = v25;
            v22 |= (unint64_t)(v26 & 0x7F) << v20;
            if ((v26 & 0x80) == 0) {
              goto LABEL_36;
            }
            v20 += 7;
            BOOL v17 = v21++ >= 9;
            if (v17)
            {
              LODWORD(v22) = 0;
              goto LABEL_38;
            }
          }
          v5[*v8] = 1;
LABEL_36:
          if (v5[*v8]) {
            LODWORD(v22) = 0;
          }
LABEL_38:
          *(_DWORD *)(a1 + 24) = v22;
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v28 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            BOOL v29 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v28;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_42;
          }
        }
      }
      while (*(void *)&v5[*v6] < *(void *)&v5[*v7]);
    }
    BOOL v30 = v5[*v8] == 0;
  }
  else
  {
LABEL_42:
    BOOL v30 = 0;
  }
  objc_sync_exit(v5);

  return v30;
}

void sub_189AAB08C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDExternalActionDetailReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 60);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 56)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  unsigned int v11 = (vaddv_s16((int16x4_t)(*(void *)&vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int8 *)(a1 + 68)), (uint16x4_t)0xFFFDFFFEFFFFFFFCLL) & 0xFF01FF01FF01FF01))+ (*(unsigned char *)(a1 + 68) & 1));
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v9])
    {
      case -4:
        ++v11;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_9;
      case 0:
        BOOL v14 = v11 > 2;
        char v15 = v14 & ~(_BYTE)v10 | v7;
        unsigned __int8 v16 = v14 | v10;
        char v50 = v15;
        char v51 = v16 | v15;
        if ((v16 | v8)) {
          BOOL v17 = 0;
        }
        else {
          BOOL v17 = a3;
        }
        char v52 = (v17 == 0) | v16;
        BOOL v53 = v16;
        int v18 = (int *)MEMORY[0x1E4F940E8];
        int v19 = (int *)MEMORY[0x1E4F940C8];
        char v20 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v11;
LABEL_7:
        uint64_t v12 = v7;
LABEL_8:
        uint64_t v13 = v10;
LABEL_9:
        ++v9;
        uint64_t v7 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v18) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v19)) {
      goto LABEL_69;
    }
    char v21 = 0;
    unsigned int v22 = 0;
    unint64_t v23 = 0;
    while (1)
    {
      uint64_t v24 = *v18;
      uint64_t v25 = *(void *)(v3 + v24);
      unint64_t v26 = v25 + 1;
      if (v25 == -1 || v26 > *(void *)(v3 + *v6)) {
        break;
      }
      char v27 = *(unsigned char *)(*(void *)(v3 + *v20) + v25);
      *(void *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0) {
        goto LABEL_24;
      }
      v21 += 7;
      if (v22++ >= 9)
      {
        unint64_t v23 = 0;
        int v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_26;
      }
    }
    *(unsigned char *)(v3 + *v19) = 1;
LABEL_24:
    int v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(unsigned char *)(v3 + *v19)) {
      unint64_t v23 = 0;
    }
LABEL_26:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_69:
      int v49 = 1;
      goto LABEL_70;
    }
    unint64_t v31 = v23 >> 3;
    BOOL v32 = v53;
    if ((v52 & 1) == 0)
    {
      unint64_t v33 = v17;
      do
      {
        int v35 = *v33++;
        int v34 = v35;
        BOOL v32 = v35 != 0;
        if (v35) {
          BOOL v36 = v34 == v31;
        }
        else {
          BOOL v36 = 1;
        }
      }
      while (!v36);
    }
    switch((int)v31)
    {
      case 1:
        if (!v32) {
          goto LABEL_57;
        }
        if ((*(unsigned char *)(a1 + 68) & 2) == 0)
        {
          uint64_t v37 = PBReaderReadString();
          uint64_t v38 = 24;
          goto LABEL_56;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_87;
        }
        char v44 = *(unsigned char *)(a1 + 68) << 6;
        goto LABEL_67;
      case 2:
        if (!v32) {
          goto LABEL_57;
        }
        if ((*(unsigned char *)(a1 + 68) & 0x10) == 0)
        {
          uint64_t v37 = PBReaderReadString();
          uint64_t v38 = 48;
          goto LABEL_56;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_87;
        }
        char v44 = 8 * *(unsigned char *)(a1 + 68);
        goto LABEL_67;
      case 3:
        if (!v32) {
          goto LABEL_57;
        }
        if ((*(unsigned char *)(a1 + 68) & 4) == 0)
        {
          uint64_t v37 = PBReaderReadString();
          uint64_t v38 = 32;
          goto LABEL_56;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_87;
        }
        char v44 = 32 * *(unsigned char *)(a1 + 68);
        goto LABEL_67;
      case 4:
        if (!v32) {
          goto LABEL_57;
        }
        if ((*(unsigned char *)(a1 + 68) & 8) == 0)
        {
          uint64_t v37 = PBReaderReadString();
          uint64_t v38 = 40;
LABEL_56:
          unsigned int v42 = *(void **)(a1 + v38);
          *(void *)(a1 + v38) = v37;

          int v19 = (int *)MEMORY[0x1E4F940C8];
          --v9;
LABEL_68:
          if (!(v51 & 1 | (v9 != 0))) {
            goto LABEL_69;
          }
          continue;
        }
        if (PBReaderSkipValueWithTag())
        {
          char v44 = 16 * *(unsigned char *)(a1 + 68);
LABEL_67:
          v9 += v44 >> 7;
          int v19 = (int *)MEMORY[0x1E4F940C8];
          goto LABEL_68;
        }
LABEL_87:
        int v49 = 0;
        int v19 = (int *)MEMORY[0x1E4F940C8];
LABEL_70:
        if (v50) {
LABEL_71:
        }
          *(unsigned char *)(a1 + 68) |= 1u;
        if (v53 || (v49 & 1) == 0)
        {
          *(unsigned char *)(a1 + 68) |= 2u;
          *(unsigned char *)(a1 + 68) |= 0x10u;
          *(unsigned char *)(a1 + 68) |= 4u;
          *(unsigned char *)(a1 + 68) |= 8u;
        }
        else if (v17)
        {
          while (1)
          {
            int v46 = *v17++;
            char v45 = 2;
            switch(v46)
            {
              case 0:
                goto LABEL_81;
              case 1:
                goto LABEL_79;
              case 2:
                char v45 = 16;
                goto LABEL_79;
              case 3:
                char v45 = 4;
                goto LABEL_79;
              case 4:
                char v45 = 8;
LABEL_79:
                *(unsigned char *)(a1 + 68) |= v45;
                break;
              default:
                continue;
            }
          }
        }
LABEL_81:
        if (v49) {
          unint64_t v3 = *(unsigned char *)(v3 + *v19) == 0;
        }
        else {
          unint64_t v3 = 0;
        }
        if (v53)
        {
          char v47 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      default:
        if (v50 & 1) == 0 || (*(unsigned char *)(a1 + 68))
        {
LABEL_57:
          char v43 = PBReaderSkipValueWithTag();
          int v19 = (int *)MEMORY[0x1E4F940C8];
          if ((v43 & 1) == 0)
          {
            int v49 = 0;
            goto LABEL_70;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v39 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            uint64_t v40 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v39;
          }
          int v41 = PBUnknownFieldAdd();
          int v19 = (int *)MEMORY[0x1E4F940C8];
          if (!v41)
          {
            int v49 = 0;
            goto LABEL_71;
          }
        }
        goto LABEL_68;
    }
  }
}

void sub_189AAC040(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189AAC128(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDExternalActionDetailReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 60))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDExternalActionDetailReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = [v8 position];
  *(_DWORD *)(a1 + 60) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOPDExternalActionDetailReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOPDExternalActionDetailReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDExternalActionDetailReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_189AAC394(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189AAC574(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189AAC71C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDExternalActionFilterReadAllFrom(uint64_t a1, void *a2)
{
  unint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        int v17 = v10 & 7;
        if (v16 || v17 == 4) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          if (v17 == 2)
          {
            if (!PBReaderPlaceMark()) {
              goto LABEL_49;
            }
            while (*(void *)&v3[*v4] < *(void *)&v3[*v5] && !v3[*v6])
            {
              char v19 = 0;
              unsigned int v20 = 0;
              uint64_t v21 = 0;
              while (1)
              {
                uint64_t v22 = *v4;
                uint64_t v23 = *(void *)&v3[v22];
                unint64_t v24 = v23 + 1;
                if (v23 == -1 || v24 > *(void *)&v3[*v5]) {
                  break;
                }
                char v25 = *(unsigned char *)(*(void *)&v3[*v7] + v23);
                *(void *)&v3[v22] = v24;
                v21 |= (unint64_t)(v25 & 0x7F) << v19;
                if (v25 < 0)
                {
                  v19 += 7;
                  BOOL v15 = v20++ >= 9;
                  if (!v15) {
                    continue;
                  }
                }
                goto LABEL_32;
              }
              v3[*v6] = 1;
LABEL_32:
              PBRepeatedInt32Add();
            }
            PBReaderRecallMark();
          }
          else
          {
            char v28 = 0;
            unsigned int v29 = 0;
            uint64_t v30 = 0;
            while (1)
            {
              uint64_t v31 = *v4;
              uint64_t v32 = *(void *)&v3[v31];
              unint64_t v33 = v32 + 1;
              if (v32 == -1 || v33 > *(void *)&v3[*v5]) {
                break;
              }
              char v34 = *(unsigned char *)(*(void *)&v3[*v7] + v32);
              *(void *)&v3[v31] = v33;
              v30 |= (unint64_t)(v34 & 0x7F) << v28;
              if (v34 < 0)
              {
                v28 += 7;
                BOOL v15 = v29++ >= 9;
                if (!v15) {
                  continue;
                }
              }
              goto LABEL_46;
            }
            v3[*v6] = 1;
LABEL_46:
            PBRepeatedInt32Add();
          }
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v26 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            char v27 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v26;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_49;
          }
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v35 = v3[*v6] == 0;
  }
  else
  {
LABEL_49:
    BOOL v35 = 0;
  }
  objc_sync_exit(v3);

  return v35;
}

void sub_189AAD6F0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189AADA1C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDFactoidReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 96));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 92);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 88)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  unsigned int v12 = ((*(unsigned __int16 *)(a1 + 112) >> 4) & 1)
      + (unsigned __int16)(vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int16 *)(a1 + 112)), (uint16x4_t)0xFFF9FFFAFFF5FFF6), (int8x8_t)0x1000100010001))+ (HIBYTE(*(_WORD *)(a1 + 112)) & 1)+ ((*(_WORD *)(a1 + 112) >> 9) & 1)+ ((*(_WORD *)(a1 + 112) >> 5) & 1));
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 > 4;
        char v17 = v16 & ~(_BYTE)v11 | v9;
        unsigned __int8 v18 = v16 | v11;
        char v79 = v17;
        char v80 = v18 | v17;
        if ((v18 | v8)) {
          char v19 = 0;
        }
        else {
          char v19 = a3;
        }
        char v81 = (v19 == 0) | v18;
        BOOL v82 = v18;
        unsigned int v20 = (int *)MEMORY[0x1E4F940E8];
        uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
        uint64_t v22 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v9;
LABEL_8:
        uint64_t v14 = v10;
        uint64_t v15 = v11;
LABEL_10:
        ++v7;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v21)) {
      goto LABEL_136;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      BOOL v30 = v24++ >= 9;
      if (v30)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_25:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_136:
      int v77 = 1;
      goto LABEL_137;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v82;
    if ((v81 & 1) == 0)
    {
      BOOL v35 = v19;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    switch((int)v33)
    {
      case 1:
        if (!v34) {
          goto LABEL_103;
        }
        if ((*(_WORD *)(a1 + 112) & 0x800) == 0)
        {
          uint64_t v39 = PBReaderReadString();
          uint64_t v40 = 80;
          goto LABEL_95;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_159;
        }
        __int16 v72 = 16 * *(_WORD *)(a1 + 112);
        goto LABEL_130;
      case 2:
        if (!v34) {
          goto LABEL_103;
        }
        if ((*(_WORD *)(a1 + 112) & 0x400) == 0)
        {
          uint64_t v39 = PBReaderReadString();
          uint64_t v40 = 72;
          goto LABEL_95;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_159;
        }
        __int16 v72 = 32 * *(_WORD *)(a1 + 112);
        goto LABEL_130;
      case 3:
        if ((v8 & 1) == 0) {
          goto LABEL_103;
        }
        *(_WORD *)(a1 + 112) |= 1u;
        uint64_t v41 = *v20;
        unint64_t v42 = *(void *)(v3 + v41);
        if (v42 <= 0xFFFFFFFFFFFFFFF7 && v42 + 8 <= *(void *)(v3 + *v6))
        {
          uint64_t v43 = *(void *)(*(void *)(v3 + *v22) + v42);
          *(void *)(v3 + v41) = v42 + 8;
        }
        else
        {
          *(unsigned char *)(v3 + *v21) = 1;
          uint64_t v43 = 0;
        }
        *(void *)(a1 + 40) = v43;
        goto LABEL_132;
      case 5:
        if (!v34) {
          goto LABEL_103;
        }
        if ((*(_WORD *)(a1 + 112) & 0x40) == 0)
        {
          uint64_t v39 = PBReaderReadString();
          uint64_t v40 = 32;
          goto LABEL_95;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_159;
        }
        __int16 v72 = *(_WORD *)(a1 + 112) << 9;
        goto LABEL_130;
      case 6:
        if ((v8 & 1) == 0) {
          goto LABEL_103;
        }
        char v47 = 0;
        unsigned int v48 = 0;
        uint64_t v49 = 0;
        *(_WORD *)(a1 + 112) |= 4u;
        while (2)
        {
          uint64_t v50 = *v20;
          uint64_t v51 = *(void *)(v3 + v50);
          unint64_t v52 = v51 + 1;
          if (v51 == -1 || v52 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v53 = *(unsigned char *)(*(void *)(v3 + *v22) + v51);
            *(void *)(v3 + v50) = v52;
            v49 |= (unint64_t)(v53 & 0x7F) << v47;
            if (v53 < 0)
            {
              v47 += 7;
              BOOL v30 = v48++ >= 9;
              if (v30)
              {
                LODWORD(v49) = 0;
                goto LABEL_108;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          LODWORD(v49) = 0;
        }
LABEL_108:
        uint64_t v71 = 104;
        goto LABEL_113;
      case 7:
        if (!v34) {
          goto LABEL_103;
        }
        if ((*(_WORD *)(a1 + 112) & 0x80) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_159;
          }
          __int16 v72 = *(_WORD *)(a1 + 112) << 8;
          goto LABEL_130;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_159;
        }
        char v54 = objc_alloc_init(GEOPDMapsIdentifier);
        if (!GEOPDMapsIdentifierReadAllFrom((uint64_t)v54, (void *)v3)) {
          goto LABEL_158;
        }
        PBReaderRecallMark();
        uint64_t v55 = 48;
        goto LABEL_101;
      case 8:
        if (!v34 || (*(_WORD *)(a1 + 112) & 0x100) != 0) {
          goto LABEL_103;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_159;
        }
        char v54 = objc_alloc_init(GEOLocalizedString);
        if (!GEOLocalizedStringReadAllFrom((uint64_t)v54, (void *)v3, v10 & 1)) {
          goto LABEL_158;
        }
        PBReaderRecallMark();
        -[GEOPDFactoid _addNoFlagsPlaceName:](a1, v54);

        goto LABEL_131;
      case 9:
        if ((v8 & 1) == 0) {
          goto LABEL_103;
        }
        char v56 = 0;
        unsigned int v57 = 0;
        uint64_t v49 = 0;
        *(_WORD *)(a1 + 112) |= 2u;
        while (2)
        {
          uint64_t v58 = *v20;
          uint64_t v59 = *(void *)(v3 + v58);
          unint64_t v60 = v59 + 1;
          if (v59 == -1 || v60 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v61 = *(unsigned char *)(*(void *)(v3 + *v22) + v59);
            *(void *)(v3 + v58) = v60;
            v49 |= (unint64_t)(v61 & 0x7F) << v56;
            if (v61 < 0)
            {
              v56 += 7;
              BOOL v30 = v57++ >= 9;
              if (v30)
              {
                LODWORD(v49) = 0;
                goto LABEL_112;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          LODWORD(v49) = 0;
        }
LABEL_112:
        uint64_t v71 = 100;
LABEL_113:
        *(_DWORD *)(a1 + v71) = v49;
        goto LABEL_132;
      case 10:
        if ((v8 & 1) == 0) {
          goto LABEL_103;
        }
        char v62 = 0;
        unsigned int v63 = 0;
        uint64_t v64 = 0;
        *(_WORD *)(a1 + 112) |= 8u;
        while (2)
        {
          uint64_t v65 = *v20;
          uint64_t v66 = *(void *)(v3 + v65);
          unint64_t v67 = v66 + 1;
          if (v66 == -1 || v67 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v68 = *(unsigned char *)(*(void *)(v3 + *v22) + v66);
            *(void *)(v3 + v65) = v67;
            v64 |= (unint64_t)(v68 & 0x7F) << v62;
            if (v68 < 0)
            {
              v62 += 7;
              BOOL v30 = v63++ >= 9;
              if (v30)
              {
                uint64_t v64 = 0;
                goto LABEL_117;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          uint64_t v64 = 0;
        }
LABEL_117:
        *(unsigned char *)(a1 + 108) = v64 != 0;
        goto LABEL_132;
      case 11:
        if (!v34) {
          goto LABEL_103;
        }
        if ((*(_WORD *)(a1 + 112) & 0x200) == 0)
        {
          uint64_t v39 = PBReaderReadString();
          uint64_t v40 = 64;
LABEL_95:
          char v69 = *(void **)(a1 + v40);
          *(void *)(a1 + v40) = v39;
          goto LABEL_102;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_159;
        }
        __int16 v72 = *(_WORD *)(a1 + 112) << 6;
        goto LABEL_130;
      case 12:
        if (!v34) {
          goto LABEL_103;
        }
        if ((*(_WORD *)(a1 + 112) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_159;
          }
          __int16 v72 = *(_WORD *)(a1 + 112) << 10;
LABEL_130:
          v7 += v72 >> 15;
LABEL_131:
          uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
          uint64_t v22 = (int *)MEMORY[0x1E4F940B8];
          goto LABEL_132;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_159;
        }
        char v54 = objc_alloc_init(GEOPDColor);
        if (GEOPDColorReadAllFrom((uint64_t)v54, (void *)v3))
        {
          PBReaderRecallMark();
          uint64_t v55 = 24;
LABEL_101:
          char v69 = *(void **)(a1 + v55);
          *(void *)(a1 + v55) = v54;
LABEL_102:

          --v7;
          goto LABEL_131;
        }
LABEL_158:

LABEL_159:
        int v77 = 0;
        char v78 = &OBJC_IVAR___GEOXPCReply__error;
        uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_138:
        if (v79) {
LABEL_139:
        }
          *(_WORD *)(a1 + v78[991]) |= 0x10u;
        if (v82 || (v77 & 1) == 0)
        {
          *(_WORD *)(a1 + v78[991]) |= 0x800u;
          *(_WORD *)(a1 + v78[991]) |= 0x400u;
          *(_WORD *)(a1 + v78[991]) |= 0x40u;
          *(_WORD *)(a1 + v78[991]) |= 0x80u;
          *(_WORD *)(a1 + v78[991]) |= 0x100u;
          *(_WORD *)(a1 + v78[991]) |= 0x200u;
          *(_WORD *)(a1 + v78[991]) |= 0x20u;
        }
        else if (v19)
        {
          while (1)
          {
            int v74 = *v19++;
            __int16 v73 = 2048;
            switch(v74)
            {
              case 0:
                goto LABEL_152;
              case 1:
                goto LABEL_150;
              case 2:
                __int16 v73 = 1024;
                goto LABEL_150;
              case 5:
                __int16 v73 = 64;
                goto LABEL_150;
              case 7:
                __int16 v73 = 128;
                goto LABEL_150;
              case 8:
                __int16 v73 = 256;
                goto LABEL_150;
              case 11:
                __int16 v73 = 512;
                goto LABEL_150;
              case 12:
                __int16 v73 = 32;
LABEL_150:
                *(_WORD *)(a1 + v78[991]) |= v73;
                break;
              default:
                continue;
            }
          }
        }
LABEL_152:
        if (v77) {
          unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
        }
        else {
          unint64_t v3 = 0;
        }
        if (v82)
        {
          uint64_t v75 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      default:
        if ((v79 & 1) == 0 || (*(_WORD *)(a1 + 112) & 0x10) != 0)
        {
LABEL_103:
          char v70 = PBReaderSkipValueWithTag();
          uint64_t v22 = (int *)MEMORY[0x1E4F940B8];
          uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
          if ((v70 & 1) == 0)
          {
            int v77 = 0;
LABEL_137:
            char v78 = &OBJC_IVAR___GEOXPCReply__error;
            goto LABEL_138;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v44 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            char v45 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v44;
          }
          int v46 = PBUnknownFieldAdd();
          uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
          uint64_t v22 = (int *)MEMORY[0x1E4F940B8];
          if (!v46)
          {
            int v77 = 0;
            char v78 = &OBJC_IVAR___GEOXPCReply__error;
            goto LABEL_139;
          }
        }
LABEL_132:
        if (!(v80 & 1 | (v7 != 0))) {
          goto LABEL_136;
        }
        continue;
    }
  }
}

void sub_189AAE694(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189AAE7A4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189AAE928(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189AAEA38(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189AAECD8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189AAF3E8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189AAF4DC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDFactoidCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  [*(id *)(a1 + 48) readAll:1];
  long long v9 = 0u;
  long long v10 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  id v2 = *(id *)(a1 + 56);
  uint64_t v3 = [v2 countByEnumeratingWithState:&v7 objects:v11 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v8;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v8 != v5) {
          objc_enumerationMutation(v2);
        }
        objc_msgSend(*(id *)(*((void *)&v7 + 1) + 8 * v6++), "readAll:", 1, (void)v7);
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v7 objects:v11 count:16];
    }
    while (v4);
  }
}

unint64_t GEOPDFactoidReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 92))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDFactoidReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)long long v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 96));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 88) = [v8 position];
  *(_DWORD *)(a1 + 92) = [v8 length];
  if (a3) {
    long long v9 = (int *)&GEOPDFactoidReadAllFrom_recursiveTag;
  }
  else {
    long long v9 = (int *)&GEOPDFactoidReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDFactoidReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOPDFactoidCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 96));
  return Specified;
}

void sub_189AB0298(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189AB05E8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189AB0978(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDFactoidDataReadAllFrom(uint64_t a1, void *a2, int a3)
{
  uint64_t v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    uint64_t v6 = (int *)MEMORY[0x1E4F940E8];
    long long v7 = (int *)MEMORY[0x1E4F940E0];
    id v8 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v5[*MEMORY[0x1E4F940E8]] < *(void *)&v5[*MEMORY[0x1E4F940E0]])
    {
      long long v9 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v5[*v8]) {
          break;
        }
        char v10 = 0;
        unsigned int v11 = 0;
        unint64_t v12 = 0;
        while (1)
        {
          uint64_t v13 = *v6;
          uint64_t v14 = *(void *)&v5[v13];
          unint64_t v15 = v14 + 1;
          if (v14 == -1 || v15 > *(void *)&v5[*v7]) {
            break;
          }
          char v16 = *(unsigned char *)(*(void *)&v5[*v9] + v14);
          *(void *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0) {
            goto LABEL_13;
          }
          v10 += 7;
          if (v11++ >= 9)
          {
            unint64_t v12 = 0;
            int v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        int v18 = v5[*v8];
        if (v5[*v8]) {
          unint64_t v12 = 0;
        }
LABEL_15:
        if (v18 || (v12 & 7) == 4) {
          break;
        }
        if ((v12 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_29;
          }
          unsigned int v20 = objc_alloc_init(GEOPDFactoid);
          if (!GEOPDFactoidReadAllFrom((uint64_t)v20, v5, a3))
          {

            goto LABEL_29;
          }
          PBReaderRecallMark();
          uint64_t v21 = *(void **)(a1 + 16);
          *(void *)(a1 + 16) = v20;
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v22 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            char v23 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v22;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_29;
          }
        }
      }
      while (*(void *)&v5[*v6] < *(void *)&v5[*v7]);
    }
    BOOL v24 = v5[*v8] == 0;
  }
  else
  {
LABEL_29:
    BOOL v24 = 0;
  }
  objc_sync_exit(v5);

  return v24;
}

void sub_189AB13F8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDFactoidInfoItemReadAllFrom(uint64_t a1, void *a2)
{
  uint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    uint64_t v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      long long v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 2)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_29;
          }
          int v18 = objc_alloc_init(GEOPDFactoidReference);
          if (!GEOPDFactoidReferenceReadAllFrom((uint64_t)v18, v3))
          {

            goto LABEL_29;
          }
          PBReaderRecallMark();
          -[GEOPDFactoidInfoItem addFactoidReference:](a1, v18);
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v19 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            unsigned int v20 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v19;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_29;
          }
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v21 = v3[*v6] == 0;
  }
  else
  {
LABEL_29:
    BOOL v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_189AB2140(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDFactoidReferenceReadAllFrom(uint64_t a1, void *a2)
{
  uint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    uint64_t v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      long long v7 = (int *)MEMORY[0x1E4F940B8];
      while (1)
      {
        if (v3[*v6]) {
          goto LABEL_49;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          goto LABEL_49;
        }
        if ((v10 >> 3) == 2) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          char v18 = 0;
          unsigned int v19 = 0;
          uint64_t v20 = 0;
          *(unsigned char *)(a1 + 24) |= 1u;
          while (1)
          {
            uint64_t v21 = *v4;
            uint64_t v22 = *(void *)&v3[v21];
            unint64_t v23 = v22 + 1;
            if (v22 == -1 || v23 > *(void *)&v3[*v5])
            {
              uint64_t v26 = &OBJC_IVAR___GEOPDFactoidReference__factoidItemIndex;
              goto LABEL_41;
            }
            char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
            *(void *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0) {
              break;
            }
            v18 += 7;
            BOOL v25 = v19++ > 8;
            if (v25)
            {
              LODWORD(v20) = 0;
              uint64_t v26 = &OBJC_IVAR___GEOPDFactoidReference__factoidItemIndex;
              goto LABEL_44;
            }
          }
          uint64_t v26 = &OBJC_IVAR___GEOPDFactoidReference__factoidItemIndex;
LABEL_42:
          if (v3[*v6]) {
            LODWORD(v20) = 0;
          }
LABEL_44:
          *(_DWORD *)(a1 + *v26) = v20;
          goto LABEL_45;
        }
        if (!*(void *)(a1 + 8))
        {
          id v33 = objc_alloc_init(MEMORY[0x1E4F940B0]);
          BOOL v34 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = v33;
        }
        if ((PBUnknownFieldAdd() & 1) == 0) {
          goto LABEL_50;
        }
LABEL_45:
        if (*(void *)&v3[*v4] >= *(void *)&v3[*v5]) {
          goto LABEL_49;
        }
      }
      char v27 = 0;
      unsigned int v28 = 0;
      uint64_t v20 = 0;
      *(unsigned char *)(a1 + 24) |= 2u;
      while (1)
      {
        uint64_t v29 = *v4;
        uint64_t v30 = *(void *)&v3[v29];
        unint64_t v31 = v30 + 1;
        if (v30 == -1 || v31 > *(void *)&v3[*v5]) {
          break;
        }
        char v32 = *(unsigned char *)(*(void *)&v3[*v7] + v30);
        *(void *)&v3[v29] = v31;
        v20 |= (unint64_t)(v32 & 0x7F) << v27;
        if ((v32 & 0x80) == 0)
        {
          uint64_t v26 = &OBJC_IVAR___GEOPDFactoidReference__style;
          goto LABEL_42;
        }
        v27 += 7;
        BOOL v25 = v28++ > 8;
        if (v25)
        {
          LODWORD(v20) = 0;
          uint64_t v26 = &OBJC_IVAR___GEOPDFactoidReference__style;
          goto LABEL_44;
        }
      }
      uint64_t v26 = &OBJC_IVAR___GEOPDFactoidReference__style;
LABEL_41:
      v3[*v6] = 1;
      goto LABEL_42;
    }
LABEL_49:
    BOOL v35 = v3[*v6] == 0;
  }
  else
  {
LABEL_50:
    BOOL v35 = 0;
  }
  objc_sync_exit(v3);

  return v35;
}

void sub_189AB2B70(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDFactoidRibbonItemReadAllFrom(uint64_t a1, void *a2)
{
  uint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    uint64_t v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      long long v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 2)
        {
          char v18 = 0;
          unsigned int v19 = 0;
          uint64_t v20 = 0;
          *(unsigned char *)(a1 + 20) |= 1u;
          while (1)
          {
            uint64_t v21 = *v4;
            uint64_t v22 = *(void *)&v3[v21];
            unint64_t v23 = v22 + 1;
            if (v22 == -1 || v23 > *(void *)&v3[*v5]) {
              break;
            }
            char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
            *(void *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0) {
              goto LABEL_32;
            }
            v18 += 7;
            BOOL v15 = v19++ >= 9;
            if (v15)
            {
              LODWORD(v20) = 0;
              goto LABEL_34;
            }
          }
          v3[*v6] = 1;
LABEL_32:
          if (v3[*v6]) {
            LODWORD(v20) = 0;
          }
LABEL_34:
          *(_DWORD *)(a1 + 16) = v20;
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v25 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            uint64_t v26 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v25;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_37;
          }
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v27 = v3[*v6] == 0;
  }
  else
  {
LABEL_37:
    BOOL v27 = 0;
  }
  objc_sync_exit(v3);

  return v27;
}

void sub_189AB3384(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDFlyoverFilterReadAllFrom(uint64_t a1, void *a2)
{
  uint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    uint64_t v6 = (int *)MEMORY[0x1E4F940C8];
    long long v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      int v8 = v3[*v6];
      if (*(void *)&v3[*v4] >= *(void *)&v3[*v5]) {
        break;
      }
      if (v3[*v6])
      {
        int v8 = 1;
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      uint64_t v11 = 0;
      while (1)
      {
        uint64_t v12 = *v4;
        uint64_t v13 = *(void *)&v3[v12];
        unint64_t v14 = v13 + 1;
        if (v13 == -1 || v14 > *(void *)&v3[*v5]) {
          break;
        }
        char v15 = *(unsigned char *)(*(void *)&v3[*v7] + v13);
        *(void *)&v3[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0) {
          goto LABEL_13;
        }
        v9 += 7;
        if (v10++ >= 9)
        {
          char v17 = 0;
          int v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      int v8 = v3[*v6];
      if (v3[*v6]) {
        char v17 = 0;
      }
      else {
        char v17 = v11;
      }
LABEL_16:
      if (v8) {
        BOOL v18 = 1;
      }
      else {
        BOOL v18 = (v17 & 7) == 4;
      }
      if (v18) {
        break;
      }
      if (!*(void *)(a1 + 8))
      {
        id v19 = objc_alloc_init(MEMORY[0x1E4F940B0]);
        uint64_t v20 = *(void **)(a1 + 8);
        *(void *)(a1 + 8) = v19;
      }
      if ((PBUnknownFieldAdd() & 1) == 0) {
        goto LABEL_23;
      }
    }
    BOOL v21 = v8 == 0;
  }
  else
  {
LABEL_23:
    BOOL v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_189AB39E4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDFollowUpRequestMetadataReadAllFrom(uint64_t a1, void *a2)
{
  uint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    uint64_t v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      long long v7 = (int *)MEMORY[0x1E4F940B8];
      while (1)
      {
        if (v3[*v6]) {
          goto LABEL_49;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          goto LABEL_49;
        }
        if ((v10 >> 3) == 2) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          char v18 = 0;
          unsigned int v19 = 0;
          uint64_t v20 = 0;
          *(unsigned char *)(a1 + 24) |= 2u;
          while (1)
          {
            uint64_t v21 = *v4;
            uint64_t v22 = *(void *)&v3[v21];
            unint64_t v23 = v22 + 1;
            if (v22 == -1 || v23 > *(void *)&v3[*v5])
            {
              uint64_t v26 = &OBJC_IVAR___GEOPDFollowUpRequestMetadata__requestType;
              goto LABEL_41;
            }
            char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
            *(void *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0) {
              break;
            }
            v18 += 7;
            BOOL v25 = v19++ > 8;
            if (v25)
            {
              LODWORD(v20) = 0;
              uint64_t v26 = &OBJC_IVAR___GEOPDFollowUpRequestMetadata__requestType;
              goto LABEL_44;
            }
          }
          uint64_t v26 = &OBJC_IVAR___GEOPDFollowUpRequestMetadata__requestType;
LABEL_42:
          if (v3[*v6]) {
            LODWORD(v20) = 0;
          }
LABEL_44:
          *(_DWORD *)(a1 + *v26) = v20;
          goto LABEL_45;
        }
        if (!*(void *)(a1 + 8))
        {
          id v33 = objc_alloc_init(MEMORY[0x1E4F940B0]);
          BOOL v34 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = v33;
        }
        if ((PBUnknownFieldAdd() & 1) == 0) {
          goto LABEL_50;
        }
LABEL_45:
        if (*(void *)&v3[*v4] >= *(void *)&v3[*v5]) {
          goto LABEL_49;
        }
      }
      char v27 = 0;
      unsigned int v28 = 0;
      uint64_t v20 = 0;
      *(unsigned char *)(a1 + 24) |= 1u;
      while (1)
      {
        uint64_t v29 = *v4;
        uint64_t v30 = *(void *)&v3[v29];
        unint64_t v31 = v30 + 1;
        if (v30 == -1 || v31 > *(void *)&v3[*v5]) {
          break;
        }
        char v32 = *(unsigned char *)(*(void *)&v3[*v7] + v30);
        *(void *)&v3[v29] = v31;
        v20 |= (unint64_t)(v32 & 0x7F) << v27;
        if ((v32 & 0x80) == 0)
        {
          uint64_t v26 = &OBJC_IVAR___GEOPDFollowUpRequestMetadata__dataType;
          goto LABEL_42;
        }
        v27 += 7;
        BOOL v25 = v28++ > 8;
        if (v25)
        {
          LODWORD(v20) = 0;
          uint64_t v26 = &OBJC_IVAR___GEOPDFollowUpRequestMetadata__dataType;
          goto LABEL_44;
        }
      }
      uint64_t v26 = &OBJC_IVAR___GEOPDFollowUpRequestMetadata__dataType;
LABEL_41:
      v3[*v6] = 1;
      goto LABEL_42;
    }
LABEL_49:
    BOOL v35 = v3[*v6] == 0;
  }
  else
  {
LABEL_50:
    BOOL v35 = 0;
  }
  objc_sync_exit(v3);

  return v35;
}

void sub_189AB41C8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189AB45C4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDForwardInfoReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  char v7 = 0;
  uint64_t v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  int v12 = ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1)
      + (*(unsigned char *)(a1 + 52) & 1)
      + ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1);
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v7 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 != 0;
        char v17 = v16 & ~(_BYTE)v11 | v9;
        unsigned __int8 v18 = v16 | v11;
        char v52 = v17;
        char v53 = v18 | v17;
        if ((v18 | v7)) {
          unsigned int v19 = 0;
        }
        else {
          unsigned int v19 = a3;
        }
        char v54 = (v19 == 0) | v18;
        BOOL v55 = v18;
        uint64_t v20 = (int *)MEMORY[0x1E4F940E8];
        uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
        uint64_t v22 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v9;
LABEL_8:
        uint64_t v14 = v10;
        uint64_t v15 = v11;
LABEL_10:
        ++v8;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v21)) {
      goto LABEL_62;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      if (v24++ >= 9)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_25:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_62:
      int v50 = 1;
      goto LABEL_63;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v55;
    if ((v54 & 1) == 0)
    {
      BOOL v35 = v19;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    if (v33 == 2) {
      break;
    }
    if (v33 == 1)
    {
      if (v34)
      {
        if ((*(unsigned char *)(a1 + 52) & 2) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_83;
          }
          v8 += *(unsigned __int8 *)(a1 + 52) << 30 >> 31;
        }
        else
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_83;
          }
          uint64_t v39 = objc_alloc_init(GEOPDMapsIdentifier);
          if (!GEOPDMapsIdentifierReadAllFrom((uint64_t)v39, (void *)v3)) {
            goto LABEL_82;
          }
          PBReaderRecallMark();
          uint64_t v40 = *(void **)(a1 + 24);
          *(void *)(a1 + 24) = v39;

          --v8;
        }
        goto LABEL_60;
      }
    }
    else if ((v52 & 1) != 0 && (*(unsigned char *)(a1 + 52) & 1) == 0)
    {
      if (!*(void *)(a1 + 16))
      {
        id v41 = objc_alloc_init(MEMORY[0x1E4F940B0]);
        unint64_t v42 = *(void **)(a1 + 16);
        *(void *)(a1 + 16) = v41;
      }
      int v43 = PBUnknownFieldAdd();
      uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
      if (!v43)
      {
        int v50 = 0;
        uint64_t v51 = &OBJC_IVAR___GEOXPCReply__error;
        goto LABEL_65;
      }
      goto LABEL_61;
    }
LABEL_56:
    char v44 = PBReaderSkipValueWithTag();
    uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
    if ((v44 & 1) == 0)
    {
      int v50 = 0;
LABEL_63:
      uint64_t v51 = &OBJC_IVAR___GEOXPCReply__error;
      goto LABEL_64;
    }
LABEL_61:
    if (!(v53 & 1 | (v8 != 0))) {
      goto LABEL_62;
    }
  }
  if (!v34 || (*(unsigned char *)(a1 + 52) & 4) != 0) {
    goto LABEL_56;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_83;
  }
  uint64_t v39 = objc_alloc_init(GEOPDMapsIdentifier);
  if (GEOPDMapsIdentifierReadAllFrom((uint64_t)v39, (void *)v3))
  {
    PBReaderRecallMark();
    -[GEOPDForwardInfo _addNoFlagsPreviousId:](a1, v39);

LABEL_60:
    uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
    goto LABEL_61;
  }
LABEL_82:

LABEL_83:
  int v50 = 0;
  uint64_t v51 = &OBJC_IVAR___GEOXPCReply__error;
  uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_64:
  if ((v52 & 1) == 0) {
    goto LABEL_66;
  }
LABEL_65:
  *(unsigned char *)(a1 + v51[1016]) |= 1u;
LABEL_66:
  if (v55 || (v50 & 1) == 0)
  {
    *(unsigned char *)(a1 + v51[1016]) |= 2u;
    *(unsigned char *)(a1 + v51[1016]) |= 4u;
    goto LABEL_76;
  }
  if (v19)
  {
    while (1)
    {
      int v47 = *v19++;
      int v46 = v47;
      if (v47 == 1) {
        break;
      }
      if (v46 == 2)
      {
        char v45 = 4;
LABEL_72:
        *(unsigned char *)(a1 + v51[1016]) |= v45;
      }
      else if (!v46)
      {
        goto LABEL_76;
      }
    }
    char v45 = 2;
    goto LABEL_72;
  }
LABEL_76:
  if (v50) {
    unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
  }
  else {
    unint64_t v3 = 0;
  }
  if (v55)
  {
    unsigned int v48 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_189AB4C2C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189AB5224(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDForwardInfoCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  [*(id *)(a1 + 24) readAll:1];
  long long v9 = 0u;
  long long v10 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  id v2 = *(id *)(a1 + 32);
  uint64_t v3 = [v2 countByEnumeratingWithState:&v7 objects:v11 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v8;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v8 != v5) {
          objc_enumerationMutation(v2);
        }
        objc_msgSend(*(id *)(*((void *)&v7 + 1) + 8 * v6++), "readAll:", 1, (void)v7);
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v7 objects:v11 count:16];
    }
    while (v4);
  }
}

unint64_t GEOPDForwardInfoReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDForwardInfoReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)long long v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    long long v9 = (int *)&GEOPDForwardInfoReadAllFrom_recursiveTag;
  }
  else {
    long long v9 = (int *)&GEOPDForwardInfoReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDForwardInfoReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOPDForwardInfoCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_189AB55A8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189AB57E8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189AB5A34(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDGroundViewLabelFilterReadAllFrom(uint64_t a1, void *a2)
{
  uint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    uint64_t v6 = (int *)MEMORY[0x1E4F940C8];
    long long v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      int v8 = v3[*v6];
      if (*(void *)&v3[*v4] >= *(void *)&v3[*v5]) {
        break;
      }
      if (v3[*v6])
      {
        int v8 = 1;
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      uint64_t v11 = 0;
      while (1)
      {
        uint64_t v12 = *v4;
        uint64_t v13 = *(void *)&v3[v12];
        unint64_t v14 = v13 + 1;
        if (v13 == -1 || v14 > *(void *)&v3[*v5]) {
          break;
        }
        char v15 = *(unsigned char *)(*(void *)&v3[*v7] + v13);
        *(void *)&v3[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0) {
          goto LABEL_13;
        }
        v9 += 7;
        if (v10++ >= 9)
        {
          char v17 = 0;
          int v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      int v8 = v3[*v6];
      if (v3[*v6]) {
        char v17 = 0;
      }
      else {
        char v17 = v11;
      }
LABEL_16:
      if (v8) {
        BOOL v18 = 1;
      }
      else {
        BOOL v18 = (v17 & 7) == 4;
      }
      if (v18) {
        break;
      }
      if (!*(void *)(a1 + 8))
      {
        id v19 = objc_alloc_init(MEMORY[0x1E4F940B0]);
        uint64_t v20 = *(void **)(a1 + 8);
        *(void *)(a1 + 8) = v19;
      }
      if ((PBUnknownFieldAdd() & 1) == 0) {
        goto LABEL_23;
      }
    }
    BOOL v21 = v8 == 0;
  }
  else
  {
LABEL_23:
    BOOL v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_189AB6974(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189AB6B68(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189AB6CB8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189AB6DC8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189AB7240(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189AB7778(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDGroupDataReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 52);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 48)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  unsigned int v12 = ((*(unsigned __int8 *)(a1 + 60) >> 2) & 1)
      + (*(unsigned char *)(a1 + 60) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 1) & 1);
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 > 1;
        char v17 = v16 & ~(_BYTE)v11 | v9;
        unsigned __int8 v18 = v16 | v11;
        char v52 = v17;
        char v53 = v18 | v17;
        if ((v18 | v8)) {
          id v19 = 0;
        }
        else {
          id v19 = a3;
        }
        uint64_t v20 = (int *)MEMORY[0x1E4F940E8];
        char v54 = (v19 == 0) | v18;
        BOOL v55 = v18;
        BOOL v21 = (int *)MEMORY[0x1E4F940C8];
        uint64_t v22 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v9;
LABEL_8:
        uint64_t v14 = v10;
        uint64_t v15 = v11;
LABEL_10:
        ++v7;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v21)) {
      goto LABEL_67;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      if (v24++ >= 9)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_25:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_67:
      int v50 = 1;
      goto LABEL_68;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v55;
    if ((v54 & 1) == 0)
    {
      BOOL v35 = v19;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    if (v33 == 3) {
      break;
    }
    if (v33 == 2)
    {
      if (!v34) {
        goto LABEL_61;
      }
      if ((*(unsigned char *)(a1 + 60) & 4) != 0)
      {
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_84;
        }
        v7 += *(unsigned __int8 *)(a1 + 60) << 29 >> 31;
      }
      else
      {
        uint64_t v40 = PBReaderReadString();
        id v41 = *(void **)(a1 + 32);
        *(void *)(a1 + 32) = v40;

        --v7;
      }
      goto LABEL_65;
    }
    if (v33 == 1)
    {
      if (!v34 || (*(unsigned char *)(a1 + 60) & 8) != 0) {
        goto LABEL_61;
      }
      if ((PBReaderPlaceMark() & 1) == 0) {
        goto LABEL_84;
      }
      uint64_t v39 = objc_alloc_init(GEOLocalizedString);
      if (!GEOLocalizedStringReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1)) {
        goto LABEL_83;
      }
      PBReaderRecallMark();
      -[GEOPDGroupData _addNoFlagsTitle:](a1, v39);
LABEL_51:

LABEL_65:
      BOOL v21 = (int *)MEMORY[0x1E4F940C8];
      goto LABEL_66;
    }
    if (v52 & 1) == 0 || (*(unsigned char *)(a1 + 60)) {
      goto LABEL_61;
    }
    if (!*(void *)(a1 + 16))
    {
      id v42 = objc_alloc_init(MEMORY[0x1E4F940B0]);
      int v43 = *(void **)(a1 + 16);
      *(void *)(a1 + 16) = v42;
    }
    int v44 = PBUnknownFieldAdd();
    BOOL v21 = (int *)MEMORY[0x1E4F940C8];
    if (!v44)
    {
      int v50 = 0;
      uint64_t v51 = &OBJC_IVAR___GEOPDAddressComponent__unknownFields;
      goto LABEL_69;
    }
LABEL_66:
    if (!(v53 & 1 | (v7 != 0))) {
      goto LABEL_67;
    }
  }
  if (!v34 || (*(unsigned char *)(a1 + 60) & 2) != 0)
  {
LABEL_61:
    char v45 = PBReaderSkipValueWithTag();
    BOOL v21 = (int *)MEMORY[0x1E4F940C8];
    if ((v45 & 1) == 0)
    {
      int v50 = 0;
      goto LABEL_68;
    }
    goto LABEL_66;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_84;
  }
  uint64_t v39 = objc_alloc_init(GEOPDButtonItem);
  if (GEOPDButtonItemReadAllFrom())
  {
    PBReaderRecallMark();
    -[GEOPDGroupData _addNoFlagsButtonItem:](a1, v39);
    goto LABEL_51;
  }
LABEL_83:

LABEL_84:
  int v50 = 0;
  BOOL v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_68:
  uint64_t v51 = &OBJC_IVAR___GEOPDAddressComponent__unknownFields;
  if ((v52 & 1) == 0) {
    goto LABEL_70;
  }
LABEL_69:
  *(unsigned char *)(a1 + v51[464]) |= 1u;
LABEL_70:
  if (v55 || (v50 & 1) == 0)
  {
    *(unsigned char *)(a1 + v51[464]) |= 8u;
    *(unsigned char *)(a1 + v51[464]) |= 4u;
    *(unsigned char *)(a1 + v51[464]) |= 2u;
  }
  else if (v19)
  {
    while (1)
    {
      int v46 = *v19++;
      char v47 = 8;
      switch(v46)
      {
        case 0:
          goto LABEL_77;
        case 1:
          goto LABEL_76;
        case 2:
          char v47 = 4;
          goto LABEL_76;
        case 3:
          char v47 = 2;
LABEL_76:
          *(unsigned char *)(a1 + v51[464]) |= v47;
          break;
        default:
          continue;
      }
    }
  }
LABEL_77:
  if (v50) {
    unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
  }
  else {
    unint64_t v3 = 0;
  }
  if (v55)
  {
    unsigned int v48 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_189AB810C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189AB827C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189AB8F08(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDGroupDataCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v22 = *MEMORY[0x1E4F143B8];
  long long v16 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  id v2 = *(id *)(a1 + 40);
  uint64_t v3 = [v2 countByEnumeratingWithState:&v16 objects:v21 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v17;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v17 != v5) {
          objc_enumerationMutation(v2);
        }
        [*(id *)(*((void *)&v16 + 1) + 8 * v6++) readAll:1];
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v16 objects:v21 count:16];
    }
    while (v4);
  }

  long long v14 = 0u;
  long long v15 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  id v7 = *(id *)(a1 + 24);
  uint64_t v8 = [v7 countByEnumeratingWithState:&v12 objects:v20 count:16];
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)v13;
    do
    {
      uint64_t v11 = 0;
      do
      {
        if (*(void *)v13 != v10) {
          objc_enumerationMutation(v7);
        }
        objc_msgSend(*(id *)(*((void *)&v12 + 1) + 8 * v11++), "readAll:", 1, (void)v12);
      }
      while (v9 != v11);
      uint64_t v9 = [v7 countByEnumeratingWithState:&v12 objects:v20 count:16];
    }
    while (v9);
  }
}

unint64_t GEOPDGroupDataReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 52))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDGroupDataReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = [v8 position];
  *(_DWORD *)(a1 + 52) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOPDGroupDataReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOPDGroupDataReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDGroupDataReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOPDGroupDataCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_189AB9238(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDGroupDataReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOPDGroupDataReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189AB929C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDGroupDataIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_32;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        goto LABEL_32;
      }
      unint64_t v17 = v8 >> 3;
      if ((v8 >> 3) == 3) {
        break;
      }
      if (v17 == 2)
      {
        if (v15 != 2) {
          goto LABEL_33;
        }
      }
      else if (v17 == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOLocalizedStringIsValid(a1)) {
          goto LABEL_33;
        }
LABEL_28:
        PBReaderRecallMark();
        goto LABEL_31;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        goto LABEL_33;
      }
LABEL_31:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_32;
      }
    }
    if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDButtonItemIsValid(a1))
    {
LABEL_33:
      PBReaderRecallMark();
      return 0;
    }
    goto LABEL_28;
  }
LABEL_32:
  BOOL v18 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v18;
}

void sub_189AB9788(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDGroupDataIsDirty(uint64_t a1)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  if ((*(unsigned char *)(a1 + 60) & 0x1E) != 0) {
    return 1;
  }
  if ((*(unsigned char *)(a1 + 60) & 2) == 0) {
    return 0;
  }
  long long v9 = 0u;
  long long v10 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  id v3 = *(id *)(a1 + 24);
  uint64_t v2 = [v3 countByEnumeratingWithState:&v7 objects:v11 count:16];
  if (v2)
  {
    uint64_t v4 = *(void *)v8;
    while (2)
    {
      for (uint64_t i = 0; i != v2; ++i)
      {
        if (*(void *)v8 != v4) {
          objc_enumerationMutation(v3);
        }
        if (GEOPDButtonItemIsDirty(*(void *)(*((void *)&v7 + 1) + 8 * i)))
        {
          uint64_t v2 = 1;
          goto LABEL_15;
        }
      }
      uint64_t v2 = [v3 countByEnumeratingWithState:&v7 objects:v11 count:16];
      if (v2) {
        continue;
      }
      break;
    }
  }
LABEL_15:

  return v2;
}

os_unfair_lock_s *GEOPDGroupDataIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOPDGroupDataIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 14);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_189AB9D94(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189ABA164(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDGroupParamsReadAllFrom(uint64_t a1, void *a2, int a3)
{
  uint64_t v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    char v6 = (int *)MEMORY[0x1E4F940E8];
    long long v7 = (int *)MEMORY[0x1E4F940E0];
    long long v8 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v5[*MEMORY[0x1E4F940E8]] < *(void *)&v5[*MEMORY[0x1E4F940E0]])
    {
      long long v9 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v5[*v8]) {
          break;
        }
        char v10 = 0;
        unsigned int v11 = 0;
        unint64_t v12 = 0;
        while (1)
        {
          uint64_t v13 = *v6;
          uint64_t v14 = *(void *)&v5[v13];
          unint64_t v15 = v14 + 1;
          if (v14 == -1 || v15 > *(void *)&v5[*v7]) {
            break;
          }
          char v16 = *(unsigned char *)(*(void *)&v5[*v9] + v14);
          *(void *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0) {
            goto LABEL_13;
          }
          v10 += 7;
          BOOL v17 = v11++ >= 9;
          if (v17)
          {
            unint64_t v12 = 0;
            int v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        int v18 = v5[*v8];
        if (v5[*v8]) {
          unint64_t v12 = 0;
        }
LABEL_15:
        if (v18 || (v12 & 7) == 4) {
          break;
        }
        unint64_t v20 = v12 >> 3;
        if ((v12 >> 3) == 3)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_55;
          }
          unint64_t v28 = objc_alloc_init(GEOPDGroupData);
          if (!GEOPDGroupDataReadAllFrom((uint64_t)v28, v5, a3))
          {

            goto LABEL_55;
          }
          PBReaderRecallMark();
          char v29 = *(void **)(a1 + 16);
          *(void *)(a1 + 16) = v28;
        }
        else
        {
          if (v20 == 2)
          {
            char v30 = 0;
            unsigned int v31 = 0;
            uint64_t v23 = 0;
            *(unsigned char *)(a1 + 32) |= 1u;
            while (1)
            {
              uint64_t v32 = *v6;
              uint64_t v33 = *(void *)&v5[v32];
              unint64_t v34 = v33 + 1;
              if (v33 == -1 || v34 > *(void *)&v5[*v7]) {
                break;
              }
              char v35 = *(unsigned char *)(*(void *)&v5[*v9] + v33);
              *(void *)&v5[v32] = v34;
              v23 |= (unint64_t)(v35 & 0x7F) << v30;
              if ((v35 & 0x80) == 0) {
                goto LABEL_48;
              }
              v30 += 7;
              BOOL v17 = v31++ >= 9;
              if (v17)
              {
                LODWORD(v23) = 0;
                goto LABEL_50;
              }
            }
            v5[*v8] = 1;
LABEL_48:
            if (v5[*v8]) {
              LODWORD(v23) = 0;
            }
LABEL_50:
            uint64_t v38 = 24;
            goto LABEL_51;
          }
          if (v20 == 1)
          {
            char v21 = 0;
            unsigned int v22 = 0;
            uint64_t v23 = 0;
            *(unsigned char *)(a1 + 32) |= 2u;
            while (1)
            {
              uint64_t v24 = *v6;
              uint64_t v25 = *(void *)&v5[v24];
              unint64_t v26 = v25 + 1;
              if (v25 == -1 || v26 > *(void *)&v5[*v7]) {
                break;
              }
              char v27 = *(unsigned char *)(*(void *)&v5[*v9] + v25);
              *(void *)&v5[v24] = v26;
              v23 |= (unint64_t)(v27 & 0x7F) << v21;
              if ((v27 & 0x80) == 0) {
                goto LABEL_44;
              }
              v21 += 7;
              BOOL v17 = v22++ >= 9;
              if (v17)
              {
                LODWORD(v23) = 0;
                goto LABEL_46;
              }
            }
            v5[*v8] = 1;
LABEL_44:
            if (v5[*v8]) {
              LODWORD(v23) = 0;
            }
LABEL_46:
            uint64_t v38 = 28;
LABEL_51:
            *(_DWORD *)(a1 + v38) = v23;
            continue;
          }
          if (!*(void *)(a1 + 8))
          {
            id v36 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            int v37 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v36;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_55;
          }
        }
      }
      while (*(void *)&v5[*v6] < *(void *)&v5[*v7]);
    }
    BOOL v39 = v5[*v8] == 0;
  }
  else
  {
LABEL_55:
    BOOL v39 = 0;
  }
  objc_sync_exit(v5);

  return v39;
}

void sub_189ABAF88(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDGroupParamsReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOPDGroupParamsReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189ABAFEC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDGuideGroupReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  char v7 = 0;
  uint64_t v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  int v12 = ((*(unsigned __int8 *)(a1 + 56) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 56) >> 2) & 1)
      + ((*(unsigned __int8 *)(a1 + 56) >> 1) & 1);
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v7 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 != 0;
        char v17 = v16 & ~(_BYTE)v11 | v9;
        unsigned __int8 v18 = v16 | v11;
        char v61 = v17;
        char v62 = v18 | v17;
        if ((v18 | v7)) {
          long long v19 = 0;
        }
        else {
          long long v19 = a3;
        }
        unint64_t v20 = (int *)MEMORY[0x1E4F940E8];
        char v63 = (v19 == 0) | v18;
        BOOL v64 = v18;
        char v21 = (int *)MEMORY[0x1E4F940C8];
        unsigned int v22 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v9;
LABEL_8:
        uint64_t v14 = v10;
        uint64_t v15 = v11;
LABEL_10:
        ++v8;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v21)) {
      goto LABEL_75;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      BOOL v30 = v24++ >= 9;
      if (v30)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_25:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_75:
      int v59 = 1;
      goto LABEL_76;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v64;
    if ((v63 & 1) == 0)
    {
      char v35 = v19;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    if (v33 == 3) {
      break;
    }
    if (v33 == 2)
    {
      if (v7)
      {
        char v42 = 0;
        unsigned int v43 = 0;
        uint64_t v44 = 0;
        *(unsigned char *)(a1 + 56) |= 1u;
        char v6 = (int *)MEMORY[0x1E4F940E0];
        while (1)
        {
          uint64_t v45 = *v20;
          uint64_t v46 = *(void *)(v3 + v45);
          unint64_t v47 = v46 + 1;
          if (v46 == -1 || v47 > *(void *)(v3 + *v6)) {
            break;
          }
          char v48 = *(unsigned char *)(*(void *)(v3 + *v22) + v46);
          *(void *)(v3 + v45) = v47;
          v44 |= (unint64_t)(v48 & 0x7F) << v42;
          if ((v48 & 0x80) == 0) {
            goto LABEL_69;
          }
          v42 += 7;
          BOOL v30 = v43++ >= 9;
          if (v30)
          {
            LODWORD(v44) = 0;
            goto LABEL_71;
          }
        }
        *(unsigned char *)(v3 + *v21) = 1;
LABEL_69:
        if (*(unsigned char *)(v3 + *v21)) {
          LODWORD(v44) = 0;
        }
LABEL_71:
        *(_DWORD *)(a1 + 52) = v44;
        goto LABEL_66;
      }
      goto LABEL_65;
    }
    if (v33 != 1)
    {
      if ((v61 & 1) != 0 && (*(unsigned char *)(a1 + 56) & 2) == 0)
      {
        if (!*(void *)(a1 + 16))
        {
          id v49 = objc_alloc_init(MEMORY[0x1E4F940B0]);
          int v50 = *(void **)(a1 + 16);
          *(void *)(a1 + 16) = v49;
        }
        int v51 = PBUnknownFieldAdd();
        char v21 = (int *)MEMORY[0x1E4F940C8];
        char v6 = (int *)MEMORY[0x1E4F940E0];
        if (!v51)
        {
          int v59 = 0;
          unint64_t v60 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__flags;
          goto LABEL_78;
        }
        goto LABEL_66;
      }
LABEL_65:
      char v52 = PBReaderSkipValueWithTag();
      char v21 = (int *)MEMORY[0x1E4F940C8];
      char v6 = (int *)MEMORY[0x1E4F940E0];
      if (v52) {
        goto LABEL_66;
      }
      int v59 = 0;
LABEL_76:
      unint64_t v60 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__flags;
      goto LABEL_77;
    }
    if (!v34) {
      goto LABEL_65;
    }
    if ((*(unsigned char *)(a1 + 56) & 8) != 0)
    {
      char v53 = PBReaderSkipValueWithTag();
      char v6 = (int *)MEMORY[0x1E4F940E0];
      if ((v53 & 1) == 0) {
        goto LABEL_97;
      }
      v8 += *(unsigned __int8 *)(a1 + 56) << 28 >> 31;
    }
    else
    {
      char v39 = PBReaderPlaceMark();
      char v6 = (int *)MEMORY[0x1E4F940E0];
      if ((v39 & 1) == 0) {
        goto LABEL_97;
      }
      uint64_t v40 = objc_alloc_init(GEOPDCaptionedPhoto);
      if (!GEOPDCaptionedPhotoReadAllFrom((uint64_t)v40, (void *)v3, v10 & 1)) {
        goto LABEL_96;
      }
      PBReaderRecallMark();
      id v41 = *(void **)(a1 + 32);
      *(void *)(a1 + 32) = v40;

      --v8;
    }
    char v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_66:
    if (!(v62 & 1 | (v8 != 0))) {
      goto LABEL_75;
    }
  }
  if (!v34 || (*(unsigned char *)(a1 + 56) & 4) != 0) {
    goto LABEL_65;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_97;
  }
  uint64_t v40 = objc_alloc_init(GEOPDGuideLocationImage);
  if (GEOPDGuideLocationImageReadAllFrom((uint64_t)v40, (void *)v3, v10 & 1))
  {
    PBReaderRecallMark();
    -[GEOPDGuideGroup _addNoFlagsGuideLocationImage:](a1, v40);

    char v21 = (int *)MEMORY[0x1E4F940C8];
    char v6 = (int *)MEMORY[0x1E4F940E0];
    goto LABEL_66;
  }
LABEL_96:

LABEL_97:
  int v59 = 0;
  unint64_t v60 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__flags;
  char v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_77:
  if ((v61 & 1) == 0) {
    goto LABEL_79;
  }
LABEL_78:
  *(unsigned char *)(a1 + v60[8]) |= 2u;
LABEL_79:
  if (v64 || (v59 & 1) == 0)
  {
    *(unsigned char *)(a1 + v60[8]) |= 8u;
    *(unsigned char *)(a1 + v60[8]) |= 4u;
    goto LABEL_89;
  }
  if (v19)
  {
    while (2)
    {
      while (1)
      {
        int v55 = *v19++;
        int v54 = v55;
        if (v55 == 1) {
          break;
        }
        if (v54 == 3)
        {
          char v56 = 4;
          goto LABEL_88;
        }
        if (!v54) {
          goto LABEL_89;
        }
      }
      char v56 = 8;
LABEL_88:
      *(unsigned char *)(a1 + v60[8]) |= v56;
      continue;
    }
  }
LABEL_89:
  if (v59) {
    unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
  }
  else {
    unint64_t v3 = 0;
  }
  if (v64)
  {
    unsigned int v57 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_189ABBD5C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189ABC340(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189ABC434(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDGuideGroupCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v11 = *MEMORY[0x1E4F143B8];
  -[GEOPDCaptionedPhoto readAll:](*(void *)(a1 + 32), 1);
  long long v8 = 0u;
  long long v9 = 0u;
  long long v6 = 0u;
  long long v7 = 0u;
  id v2 = *(id *)(a1 + 24);
  uint64_t v3 = [v2 countByEnumeratingWithState:&v6 objects:v10 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v7;
    while (1)
    {
      if (*(void *)v7 != v5) {
        objc_enumerationMutation(v2);
      }
      if (!--v4)
      {
        uint64_t v4 = [v2 countByEnumeratingWithState:&v6 objects:v10 count:16];
        if (!v4) {
          break;
        }
      }
    }
  }
}

unint64_t GEOPDGuideGroupReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDGuideGroupReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    long long v9 = (int *)&GEOPDGuideGroupReadAllFrom_recursiveTag;
  }
  else {
    long long v9 = (int *)&GEOPDGuideGroupReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDGuideGroupReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOPDGuideGroupCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_189ABC798(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDGuideLocationImageIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      if ((v8 >> 3) == 2)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDCaptionedPhotoIsValid(a1))
        {
LABEL_38:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_38;
        }
        unsigned int v17 = 0;
        while (1)
        {
          uint64_t v18 = *v2;
          uint64_t v19 = *(void *)&a1[v18];
          unint64_t v20 = v19 + 1;
          if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
            break;
          }
          int v21 = *(char *)(*(void *)&a1[*v5] + v19);
          *(void *)&a1[v18] = v20;
          if (v21 < 0 && v17++ <= 8) {
            continue;
          }
          goto LABEL_35;
        }
        a1[*v4] = 1;
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_38;
      }
LABEL_35:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v23 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v23;
}

void sub_189ABCC44(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189ABCEC8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDGuideGroupFilterReadAllFrom(uint64_t a1, void *a2)
{
  uint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      int v8 = v3[*v6];
      if (*(void *)&v3[*v4] >= *(void *)&v3[*v5]) {
        break;
      }
      if (v3[*v6])
      {
        int v8 = 1;
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      uint64_t v11 = 0;
      while (1)
      {
        uint64_t v12 = *v4;
        uint64_t v13 = *(void *)&v3[v12];
        unint64_t v14 = v13 + 1;
        if (v13 == -1 || v14 > *(void *)&v3[*v5]) {
          break;
        }
        char v15 = *(unsigned char *)(*(void *)&v3[*v7] + v13);
        *(void *)&v3[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0) {
          goto LABEL_13;
        }
        v9 += 7;
        if (v10++ >= 9)
        {
          char v17 = 0;
          int v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      int v8 = v3[*v6];
      if (v3[*v6]) {
        char v17 = 0;
      }
      else {
        char v17 = v11;
      }
LABEL_16:
      if (v8) {
        BOOL v18 = 1;
      }
      else {
        BOOL v18 = (v17 & 7) == 4;
      }
      if (v18) {
        break;
      }
      if (!*(void *)(a1 + 8))
      {
        id v19 = objc_alloc_init(MEMORY[0x1E4F940B0]);
        unint64_t v20 = *(void **)(a1 + 8);
        *(void *)(a1 + 8) = v19;
      }
      if ((PBUnknownFieldAdd() & 1) == 0) {
        goto LABEL_23;
      }
    }
    BOOL v21 = v8 == 0;
  }
  else
  {
LABEL_23:
    BOOL v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_189ABD588(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDGuideLocationImageReadAllFrom(uint64_t a1, void *a2, int a3)
{
  uint64_t v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    char v6 = (int *)MEMORY[0x1E4F940E8];
    unsigned int v7 = (int *)MEMORY[0x1E4F940E0];
    int v8 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v5[*MEMORY[0x1E4F940E8]] < *(void *)&v5[*MEMORY[0x1E4F940E0]])
    {
      char v9 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v5[*v8]) {
          break;
        }
        char v10 = 0;
        unsigned int v11 = 0;
        unint64_t v12 = 0;
        while (1)
        {
          uint64_t v13 = *v6;
          uint64_t v14 = *(void *)&v5[v13];
          unint64_t v15 = v14 + 1;
          if (v14 == -1 || v15 > *(void *)&v5[*v7]) {
            break;
          }
          char v16 = *(unsigned char *)(*(void *)&v5[*v9] + v14);
          *(void *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0) {
            goto LABEL_13;
          }
          v10 += 7;
          BOOL v17 = v11++ >= 9;
          if (v17)
          {
            unint64_t v12 = 0;
            int v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        int v18 = v5[*v8];
        if (v5[*v8]) {
          unint64_t v12 = 0;
        }
LABEL_15:
        if (v18 || (v12 & 7) == 4) {
          break;
        }
        if ((v12 >> 3) == 2)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_42;
          }
          uint64_t v27 = objc_alloc_init(GEOPDCaptionedPhoto);
          if (!GEOPDCaptionedPhotoReadAllFrom((uint64_t)v27, v5, a3))
          {

            goto LABEL_42;
          }
          PBReaderRecallMark();
          unint64_t v28 = *(void **)(a1 + 16);
          *(void *)(a1 + 16) = v27;
        }
        else if ((v12 >> 3) == 1)
        {
          char v20 = 0;
          unsigned int v21 = 0;
          uint64_t v22 = 0;
          *(unsigned char *)(a1 + 28) |= 1u;
          while (1)
          {
            uint64_t v23 = *v6;
            uint64_t v24 = *(void *)&v5[v23];
            unint64_t v25 = v24 + 1;
            if (v24 == -1 || v25 > *(void *)&v5[*v7]) {
              break;
            }
            char v26 = *(unsigned char *)(*(void *)&v5[*v9] + v24);
            *(void *)&v5[v23] = v25;
            v22 |= (unint64_t)(v26 & 0x7F) << v20;
            if ((v26 & 0x80) == 0) {
              goto LABEL_36;
            }
            v20 += 7;
            BOOL v17 = v21++ >= 9;
            if (v17)
            {
              LODWORD(v22) = 0;
              goto LABEL_38;
            }
          }
          v5[*v8] = 1;
LABEL_36:
          if (v5[*v8]) {
            LODWORD(v22) = 0;
          }
LABEL_38:
          *(_DWORD *)(a1 + 24) = v22;
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v29 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            BOOL v30 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v29;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_42;
          }
        }
      }
      while (*(void *)&v5[*v6] < *(void *)&v5[*v7]);
    }
    BOOL v31 = v5[*v8] == 0;
  }
  else
  {
LABEL_42:
    BOOL v31 = 0;
  }
  objc_sync_exit(v5);

  return v31;
}

void sub_189ABDEE4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189ABE320(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189ABE574(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189ABE708(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189ABE850(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189ABE998(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189ABEF74(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDGuidesLocationEntryCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  [*(id *)(a1 + 64) readAll:1];
  -[GEOPDGuidesLocationEntryTypeWorldWide readAll:](*(void *)(a1 + 72), 1);
  [*(id *)(a1 + 56) readAll:1];
  id v2 = *(void **)(a1 + 48);

  return [v2 readAll:1];
}

void sub_189ABFA04(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDGuidesLocationEntryIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 88));
  unsigned int v2 = *(unsigned __int16 *)(a1 + 100);
  if ((v2 & 0x140) != 0) {
    return 1;
  }
  if ((v2 & 0x80) != 0)
  {
    if (GEOPDGuidesLocationEntryTypeWorldWideIsDirty(*(os_unfair_lock_s **)(a1 + 72))) {
      return 1;
    }
    unsigned int v2 = *(unsigned __int16 *)(a1 + 100);
  }
  if ((v2 & 0x30) != 0) {
    return 1;
  }
  return (v2 >> 3) & 1;
}

os_unfair_lock_s *GEOPDGuidesLocationEntryIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOPDGuidesLocationEntryIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 22);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_189ABFD0C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189AC0300(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDGuidesLocationEntryTypeWorldWideReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 52);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 48)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  unsigned int v12 = ((*(unsigned __int8 *)(a1 + 60) >> 3) & 1)
      + (*(unsigned char *)(a1 + 60) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 2) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 1) & 1);
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 > 1;
        char v17 = v16 & ~(_BYTE)v11 | v9;
        unsigned __int8 v18 = v16 | v11;
        char v53 = v17;
        char v54 = v18 | v17;
        if ((v18 | v8)) {
          id v19 = 0;
        }
        else {
          id v19 = a3;
        }
        char v20 = (int *)MEMORY[0x1E4F940E8];
        char v55 = (v19 == 0) | v18;
        BOOL v56 = v18;
        unsigned int v21 = (int *)MEMORY[0x1E4F940C8];
        uint64_t v22 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v9;
LABEL_8:
        uint64_t v14 = v10;
        uint64_t v15 = v11;
LABEL_10:
        ++v7;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v21)) {
      goto LABEL_70;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      if (v24++ >= 9)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_25:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_70:
      int v51 = 1;
      goto LABEL_71;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v56;
    if ((v55 & 1) == 0)
    {
      char v35 = v19;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    if (v33 == 3)
    {
      if (v34 && (*(unsigned char *)(a1 + 60) & 2) == 0)
      {
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_88;
        }
        id v41 = objc_alloc_init(GEOPDGuideLocationImage);
        if (!GEOPDGuideLocationImageReadAllFrom((uint64_t)v41, (void *)v3, v10 & 1)) {
          goto LABEL_87;
        }
        PBReaderRecallMark();
        -[GEOPDGuidesLocationEntryTypeWorldWide _addNoFlagsGuideLocationImage:](a1, v41);

        goto LABEL_68;
      }
      goto LABEL_61;
    }
    if (v33 == 2) {
      break;
    }
    if (v33 == 1)
    {
      if (v34)
      {
        if ((*(unsigned char *)(a1 + 60) & 4) == 0)
        {
          uint64_t v39 = PBReaderReadString();
          uint64_t v40 = *(void **)(a1 + 32);
          *(void *)(a1 + 32) = v39;
          goto LABEL_54;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_88;
        }
        char v46 = 32 * *(unsigned char *)(a1 + 60);
        goto LABEL_67;
      }
    }
    else if ((v53 & 1) != 0 && (*(unsigned char *)(a1 + 60) & 1) == 0)
    {
      if (!*(void *)(a1 + 16))
      {
        id v42 = objc_alloc_init(MEMORY[0x1E4F940B0]);
        unsigned int v43 = *(void **)(a1 + 16);
        *(void *)(a1 + 16) = v42;
      }
      int v44 = PBUnknownFieldAdd();
      unsigned int v21 = (int *)MEMORY[0x1E4F940C8];
      if (!v44)
      {
        int v51 = 0;
        char v52 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__flags;
        goto LABEL_73;
      }
      goto LABEL_69;
    }
LABEL_61:
    char v45 = PBReaderSkipValueWithTag();
    unsigned int v21 = (int *)MEMORY[0x1E4F940C8];
    if ((v45 & 1) == 0)
    {
      int v51 = 0;
LABEL_71:
      char v52 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__flags;
      goto LABEL_72;
    }
LABEL_69:
    if (!(v54 & 1 | (v7 != 0))) {
      goto LABEL_70;
    }
  }
  if (!v34) {
    goto LABEL_61;
  }
  if ((*(unsigned char *)(a1 + 60) & 8) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0) {
      goto LABEL_88;
    }
    char v46 = 16 * *(unsigned char *)(a1 + 60);
LABEL_67:
    v7 += v46 >> 7;
    goto LABEL_68;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_88;
  }
  id v41 = objc_alloc_init(GEOPDCaptionedPhoto);
  if (GEOPDCaptionedPhotoReadAllFrom((uint64_t)v41, (void *)v3, v10 & 1))
  {
    PBReaderRecallMark();
    uint64_t v40 = *(void **)(a1 + 40);
    *(void *)(a1 + 40) = v41;
LABEL_54:

    --v7;
LABEL_68:
    unsigned int v21 = (int *)MEMORY[0x1E4F940C8];
    goto LABEL_69;
  }
LABEL_87:

LABEL_88:
  int v51 = 0;
  char v52 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__flags;
  unsigned int v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_72:
  if ((v53 & 1) == 0) {
    goto LABEL_74;
  }
LABEL_73:
  *(unsigned char *)(a1 + v52[26]) |= 1u;
LABEL_74:
  if (v56 || (v51 & 1) == 0)
  {
    *(unsigned char *)(a1 + v52[26]) |= 4u;
    *(unsigned char *)(a1 + v52[26]) |= 8u;
    *(unsigned char *)(a1 + v52[26]) |= 2u;
  }
  else if (v19)
  {
    while (1)
    {
      int v47 = *v19++;
      char v48 = 4;
      switch(v47)
      {
        case 0:
          goto LABEL_81;
        case 1:
          goto LABEL_80;
        case 2:
          char v48 = 8;
          goto LABEL_80;
        case 3:
          char v48 = 2;
LABEL_80:
          *(unsigned char *)(a1 + v52[26]) |= v48;
          break;
        default:
          continue;
      }
    }
  }
LABEL_81:
  if (v51) {
    unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
  }
  else {
    unint64_t v3 = 0;
  }
  if (v56)
  {
    id v49 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_189AC0A98(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189AC0BE0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189AC1204(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDGuidesLocationEntryTypeWorldWideCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v11 = *MEMORY[0x1E4F143B8];
  -[GEOPDCaptionedPhoto readAll:](*(void *)(a1 + 40), 1);
  long long v8 = 0u;
  long long v9 = 0u;
  long long v6 = 0u;
  long long v7 = 0u;
  id v2 = *(id *)(a1 + 24);
  uint64_t v3 = [v2 countByEnumeratingWithState:&v6 objects:v10 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v7;
    while (1)
    {
      if (*(void *)v7 != v5) {
        objc_enumerationMutation(v2);
      }
      if (!--v4)
      {
        uint64_t v4 = [v2 countByEnumeratingWithState:&v6 objects:v10 count:16];
        if (!v4) {
          break;
        }
      }
    }
  }
}

unint64_t GEOPDGuidesLocationEntryTypeWorldWideReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 52))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDGuidesLocationEntryTypeWorldWideReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = [v8 position];
  *(_DWORD *)(a1 + 52) = [v8 length];
  if (a3) {
    long long v9 = (int *)&GEOPDGuidesLocationEntryTypeWorldWideReadAllFrom_recursiveTag;
  }
  else {
    long long v9 = (int *)&GEOPDGuidesLocationEntryTypeWorldWideReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDGuidesLocationEntryTypeWorldWideReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOPDGuidesLocationEntryTypeWorldWideCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_189AC1568(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189AC17B4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDGuidesLocationEntryTypeWorldWideIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  unsigned int v2 = *(unsigned __int8 *)(a1 + 60);
  if ((v2 & 0x14) != 0) {
    return 1;
  }
  if ((v2 & 8) != 0)
  {
    if (GEOPDCaptionedPhotoIsDirty(*(os_unfair_lock_s **)(a1 + 40))) {
      return 1;
    }
    unsigned int v2 = *(unsigned __int8 *)(a1 + 60);
  }
  return (v2 >> 1) & 1;
}

os_unfair_lock_s *GEOPDGuidesLocationEntryTypeWorldWideIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOPDGuidesLocationEntryTypeWorldWideIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 14);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_189AC1AF4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDHeaderButtonsConfigurationReadAllFrom(uint64_t a1, void *a2)
{
  uint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    long long v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      long long v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          char v18 = 0;
          unsigned int v19 = 0;
          uint64_t v20 = 0;
          *(unsigned char *)(a1 + 20) |= 1u;
          while (1)
          {
            uint64_t v21 = *v4;
            uint64_t v22 = *(void *)&v3[v21];
            unint64_t v23 = v22 + 1;
            if (v22 == -1 || v23 > *(void *)&v3[*v5]) {
              break;
            }
            char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
            *(void *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0) {
              goto LABEL_32;
            }
            v18 += 7;
            BOOL v15 = v19++ >= 9;
            if (v15)
            {
              uint64_t v20 = 0;
              goto LABEL_34;
            }
          }
          v3[*v6] = 1;
LABEL_32:
          if (v3[*v6]) {
            uint64_t v20 = 0;
          }
LABEL_34:
          *(unsigned char *)(a1 + 16) = v20 != 0;
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v25 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            uint64_t v26 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v25;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_37;
          }
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v27 = v3[*v6] == 0;
  }
  else
  {
LABEL_37:
    BOOL v27 = 0;
  }
  objc_sync_exit(v3);

  return v27;
}

void sub_189AC2270(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189AC265C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDHikeAssociatedInfoReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (a2)
  {
    os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
    long long v6 = (int *)MEMORY[0x1E4F940E0];
    *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 60);
    [(id)v3 seekToOffset:*(unsigned int *)(a1 + 56)];
    uint64_t v7 = 0;
    char v8 = 0;
    uint64_t v9 = 0;
    uint64_t v10 = 0;
    uint64_t v11 = 0;
    unsigned int v12 = vaddv_s16((int16x4_t)(*(void *)&vshl_u16((uint16x4_t)(*(void *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 68)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFFFFFDFFFCFFFELL) & 0xFF01FF01FF01FF01));
    while (2)
    {
      uint64_t v13 = 1;
      uint64_t v14 = 1;
      uint64_t v15 = 1;
      switch(a3[v7])
      {
        case -4:
          ++v12;
          goto LABEL_8;
        case -3:
          char v8 = 1;
          goto LABEL_7;
        case -2:
          uint64_t v14 = v10;
          goto LABEL_10;
        case -1:
          goto LABEL_10;
        case 0:
          BOOL v16 = v12 > 1;
          int v17 = v16 & ~v11 | v9;
          int v18 = v16 | v11;
          if (((v16 | v11) | v8)) {
            unsigned int v19 = 0;
          }
          else {
            unsigned int v19 = a3;
          }
          BOOL v20 = v7 != 0;
          uint64_t v21 = (int *)MEMORY[0x1E4F940E8];
          int v22 = 1;
          unint64_t v23 = (int *)MEMORY[0x1E4F940C8];
          if (*(void *)(v3 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(v3 + *v6)) {
            goto LABEL_79;
          }
          char v55 = v16 & ~(_BYTE)v11 | v9;
          int v57 = v20 | v18 | v17;
          char v58 = (v19 == 0) | v18;
          char v24 = (int *)MEMORY[0x1E4F940B8];
          char v56 = v16 | v11;
          break;
        default:
          ++v12;
LABEL_7:
          uint64_t v13 = v9;
LABEL_8:
          uint64_t v14 = v10;
          uint64_t v15 = v11;
LABEL_10:
          ++v7;
          uint64_t v9 = v13;
          uint64_t v10 = v14;
          uint64_t v11 = v15;
          continue;
      }
      break;
    }
    while (!*(unsigned char *)(v3 + *v23))
    {
      char v25 = 0;
      unsigned int v26 = 0;
      unint64_t v27 = 0;
      while (1)
      {
        uint64_t v28 = *v21;
        uint64_t v29 = *(void *)(v3 + v28);
        unint64_t v30 = v29 + 1;
        if (v29 == -1 || v30 > *(void *)(v3 + *v6)) {
          break;
        }
        char v31 = *(unsigned char *)(*(void *)(v3 + *v24) + v29);
        *(void *)(v3 + v28) = v30;
        v27 |= (unint64_t)(v31 & 0x7F) << v25;
        if ((v31 & 0x80) == 0) {
          goto LABEL_25;
        }
        v25 += 7;
        BOOL v32 = v26++ >= 9;
        if (v32)
        {
          unint64_t v27 = 0;
          int v33 = *(unsigned __int8 *)(v3 + *v23);
          goto LABEL_27;
        }
      }
      *(unsigned char *)(v3 + *v23) = 1;
LABEL_25:
      int v33 = *(unsigned __int8 *)(v3 + *v23);
      if (*(unsigned char *)(v3 + *v23)) {
        unint64_t v27 = 0;
      }
LABEL_27:
      if (v33 || (v27 & 7) == 4) {
        break;
      }
      unint64_t v35 = v27 >> 3;
      BOOL v36 = v18;
      if ((v58 & 1) == 0)
      {
        int v37 = v19;
        do
        {
          int v39 = *v37++;
          int v38 = v39;
          BOOL v36 = v39 != 0;
          if (v39) {
            BOOL v40 = v38 == v35;
          }
          else {
            BOOL v40 = 1;
          }
        }
        while (!v40);
      }
      switch((int)v35)
      {
        case 1:
          if ((v8 & 1) == 0) {
            goto LABEL_69;
          }
          char v41 = 0;
          unsigned int v42 = 0;
          uint64_t v43 = 0;
          *(unsigned char *)(a1 + 68) |= 1u;
          while (1)
          {
            uint64_t v44 = *v21;
            uint64_t v45 = *(void *)(v3 + v44);
            unint64_t v46 = v45 + 1;
            if (v45 == -1 || v46 > *(void *)(v3 + *v6)) {
              break;
            }
            char v47 = *(unsigned char *)(*(void *)(v3 + *v24) + v45);
            *(void *)(v3 + v44) = v46;
            v43 |= (unint64_t)(v47 & 0x7F) << v41;
            if ((v47 & 0x80) == 0) {
              goto LABEL_72;
            }
            v41 += 7;
            BOOL v32 = v42++ >= 9;
            if (v32)
            {
              uint64_t v43 = 0;
              goto LABEL_74;
            }
          }
          *(unsigned char *)(v3 + *v23) = 1;
LABEL_72:
          if (*(unsigned char *)(v3 + *v23)) {
            uint64_t v43 = 0;
          }
LABEL_74:
          *(void *)(a1 + 24) = v43;
          goto LABEL_75;
        case 2:
          if (!v36 || (*(unsigned char *)(a1 + 68) & 0x10) != 0) {
            goto LABEL_69;
          }
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_95;
          }
          int v50 = objc_alloc_init(GEOPDMapsIdentifier);
          if (!GEOPDMapsIdentifierReadAllFrom((uint64_t)v50, (void *)v3)) {
            goto LABEL_94;
          }
          PBReaderRecallMark();
          -[GEOPDHikeAssociatedInfo _addNoFlagsStartMuid:](a1, v50);
          goto LABEL_68;
        case 3:
          if (!v36 || (*(unsigned char *)(a1 + 68) & 4) != 0) {
            goto LABEL_69;
          }
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_95;
          }
          int v50 = objc_alloc_init(GEOPDMapsIdentifier);
          if (!GEOPDMapsIdentifierReadAllFrom((uint64_t)v50, (void *)v3)) {
            goto LABEL_94;
          }
          PBReaderRecallMark();
          -[GEOPDHikeAssociatedInfo _addNoFlagsEndMuid:](a1, v50);
          goto LABEL_68;
        case 4:
          if (!v36 || (*(unsigned char *)(a1 + 68) & 8) != 0) {
            goto LABEL_69;
          }
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_95;
          }
          int v50 = objc_alloc_init(GEOPDMapsIdentifier);
          if (!GEOPDMapsIdentifierReadAllFrom((uint64_t)v50, (void *)v3))
          {
LABEL_94:

LABEL_95:
            int v22 = 0;
            LOBYTE(v18) = v56;
            unint64_t v23 = (int *)MEMORY[0x1E4F940C8];
            goto LABEL_78;
          }
          PBReaderRecallMark();
          -[GEOPDHikeAssociatedInfo _addNoFlagsIntermediateMuid:](a1, v50);
LABEL_68:

          LOBYTE(v18) = v56;
          unint64_t v23 = (int *)MEMORY[0x1E4F940C8];
LABEL_75:
          if ((v57 & 1) == 0) {
            goto LABEL_77;
          }
LABEL_76:
          if (*(void *)(v3 + *v21) >= *(void *)(v3 + *v6)) {
            goto LABEL_77;
          }
          break;
        default:
          if ((v55 & 1) == 0 || (*(unsigned char *)(a1 + 68) & 2) != 0)
          {
LABEL_69:
            int v22 = PBReaderSkipValueWithTag();
            unint64_t v23 = (int *)MEMORY[0x1E4F940C8];
            LOBYTE(v18) = v56;
            if ((v22 & v57 & 1) == 0) {
              goto LABEL_78;
            }
            goto LABEL_76;
          }
          if (!*(void *)(a1 + 16))
          {
            id v48 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            id v49 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v48;
          }
          int v22 = PBUnknownFieldAdd();
          LOBYTE(v18) = v56;
          unint64_t v23 = (int *)MEMORY[0x1E4F940C8];
          if (!v22) {
            goto LABEL_80;
          }
          goto LABEL_75;
      }
    }
LABEL_77:
    int v22 = 1;
LABEL_78:
    LOBYTE(v17) = v55;
LABEL_79:
    if (v17) {
LABEL_80:
    }
      *(unsigned char *)(a1 + 68) |= 2u;
    if (v18 & 1 | ((v22 & 1) == 0))
    {
      *(unsigned char *)(a1 + 68) |= 0x10u;
      *(unsigned char *)(a1 + 68) |= 4u;
      *(unsigned char *)(a1 + 68) |= 8u;
    }
    else if (v19)
    {
      while (1)
      {
        int v51 = *v19++;
        char v52 = 16;
        switch(v51)
        {
          case 0:
            goto LABEL_88;
          case 2:
            goto LABEL_87;
          case 3:
            char v52 = 4;
            goto LABEL_87;
          case 4:
            char v52 = 8;
LABEL_87:
            *(unsigned char *)(a1 + 68) |= v52;
            break;
          default:
            continue;
        }
      }
    }
LABEL_88:
    if (v22)
    {
      unint64_t v3 = *(unsigned char *)(v3 + *v23) == 0;
      if ((v18 & 1) == 0) {
        return v3;
      }
      goto LABEL_92;
    }
    unint64_t v3 = 0;
    if (v18)
    {
LABEL_92:
      char v53 = *(void **)(a1 + 8);
      *(void *)(a1 + 8) = 0;
    }
  }
  return v3;
}

void sub_189AC30F8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189AC34BC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189AC43C0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDHikeAssociatedInfoCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  uint64_t v32 = *MEMORY[0x1E4F143B8];
  long long v25 = 0u;
  long long v26 = 0u;
  long long v27 = 0u;
  long long v28 = 0u;
  id v2 = a1[6];
  uint64_t v3 = [v2 countByEnumeratingWithState:&v25 objects:v31 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v26;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v26 != v5) {
          objc_enumerationMutation(v2);
        }
        [*(id *)(*((void *)&v25 + 1) + 8 * v6++) readAll:1];
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v25 objects:v31 count:16];
    }
    while (v4);
  }

  long long v23 = 0u;
  long long v24 = 0u;
  long long v21 = 0u;
  long long v22 = 0u;
  id v7 = a1[4];
  uint64_t v8 = [v7 countByEnumeratingWithState:&v21 objects:v30 count:16];
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)v22;
    do
    {
      uint64_t v11 = 0;
      do
      {
        if (*(void *)v22 != v10) {
          objc_enumerationMutation(v7);
        }
        [*(id *)(*((void *)&v21 + 1) + 8 * v11++) readAll:1];
      }
      while (v9 != v11);
      uint64_t v9 = [v7 countByEnumeratingWithState:&v21 objects:v30 count:16];
    }
    while (v9);
  }

  long long v19 = 0u;
  long long v20 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  id v12 = a1[5];
  uint64_t v13 = [v12 countByEnumeratingWithState:&v17 objects:v29 count:16];
  if (v13)
  {
    uint64_t v14 = v13;
    uint64_t v15 = *(void *)v18;
    do
    {
      uint64_t v16 = 0;
      do
      {
        if (*(void *)v18 != v15) {
          objc_enumerationMutation(v12);
        }
        objc_msgSend(*(id *)(*((void *)&v17 + 1) + 8 * v16++), "readAll:", 1, (void)v17);
      }
      while (v14 != v16);
      uint64_t v14 = [v12 countByEnumeratingWithState:&v17 objects:v29 count:16];
    }
    while (v14);
  }
}

unint64_t GEOPDHikeAssociatedInfoReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 60))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDHikeAssociatedInfoReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = [v8 position];
  *(_DWORD *)(a1 + 60) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOPDHikeAssociatedInfoReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOPDHikeAssociatedInfoReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDHikeAssociatedInfoReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOPDHikeAssociatedInfoCallReadAllRecursiveWithoutSynchronized((id *)a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_189AC4788(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDHikeAssociatedInfoReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOPDHikeAssociatedInfoReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189AC47EC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189AC4B74(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDHikeAssociatedInfoIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  BOOL v2 = (*(unsigned char *)(a1 + 68) & 0x3C) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return v2;
}

void sub_189AC53F0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189AC58D8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDHikeAssociatedInfoFilterReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    uint64_t v6 = (int *)MEMORY[0x1E4F940C8];
    id v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      int v8 = v3[*v6];
      if (*(void *)&v3[*v4] >= *(void *)&v3[*v5]) {
        break;
      }
      if (v3[*v6])
      {
        int v8 = 1;
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      uint64_t v11 = 0;
      while (1)
      {
        uint64_t v12 = *v4;
        uint64_t v13 = *(void *)&v3[v12];
        unint64_t v14 = v13 + 1;
        if (v13 == -1 || v14 > *(void *)&v3[*v5]) {
          break;
        }
        char v15 = *(unsigned char *)(*(void *)&v3[*v7] + v13);
        *(void *)&v3[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0) {
          goto LABEL_13;
        }
        v9 += 7;
        if (v10++ >= 9)
        {
          char v17 = 0;
          int v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      int v8 = v3[*v6];
      if (v3[*v6]) {
        char v17 = 0;
      }
      else {
        char v17 = v11;
      }
LABEL_16:
      if (v8) {
        BOOL v18 = 1;
      }
      else {
        BOOL v18 = (v17 & 7) == 4;
      }
      if (v18) {
        break;
      }
      if (!*(void *)(a1 + 8))
      {
        id v19 = objc_alloc_init(MEMORY[0x1E4F940B0]);
        long long v20 = *(void **)(a1 + 8);
        *(void *)(a1 + 8) = v19;
      }
      if ((PBUnknownFieldAdd() & 1) == 0) {
        goto LABEL_23;
      }
    }
    BOOL v21 = v8 == 0;
  }
  else
  {
LABEL_23:
    BOOL v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_189AC6054(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDHikeGeometryReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    uint64_t v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      id v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          uint64_t v18 = PBReaderReadData();
          id v19 = *(void **)(a1 + 16);
          *(void *)(a1 + 16) = v18;
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v20 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            BOOL v21 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v20;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_26;
          }
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v22 = v3[*v6] == 0;
  }
  else
  {
LABEL_26:
    BOOL v22 = 0;
  }
  objc_sync_exit(v3);

  return v22;
}

void sub_189AC676C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDHikeGeometryReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOPDHikeGeometryReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189AC67D0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDHikeGeometryFilterReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    uint64_t v6 = (int *)MEMORY[0x1E4F940C8];
    id v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      int v8 = v3[*v6];
      if (*(void *)&v3[*v4] >= *(void *)&v3[*v5]) {
        break;
      }
      if (v3[*v6])
      {
        int v8 = 1;
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      uint64_t v11 = 0;
      while (1)
      {
        uint64_t v12 = *v4;
        uint64_t v13 = *(void *)&v3[v12];
        unint64_t v14 = v13 + 1;
        if (v13 == -1 || v14 > *(void *)&v3[*v5]) {
          break;
        }
        char v15 = *(unsigned char *)(*(void *)&v3[*v7] + v13);
        *(void *)&v3[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0) {
          goto LABEL_13;
        }
        v9 += 7;
        if (v10++ >= 9)
        {
          char v17 = 0;
          int v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      int v8 = v3[*v6];
      if (v3[*v6]) {
        char v17 = 0;
      }
      else {
        char v17 = v11;
      }
LABEL_16:
      if (v8) {
        BOOL v18 = 1;
      }
      else {
        BOOL v18 = (v17 & 7) == 4;
      }
      if (v18) {
        break;
      }
      if (!*(void *)(a1 + 8))
      {
        id v19 = objc_alloc_init(MEMORY[0x1E4F940B0]);
        id v20 = *(void **)(a1 + 8);
        *(void *)(a1 + 8) = v19;
      }
      if ((PBUnknownFieldAdd() & 1) == 0) {
        goto LABEL_23;
      }
    }
    BOOL v21 = v8 == 0;
  }
  else
  {
LABEL_23:
    BOOL v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_189AC6FD0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDHikeSummaryReadAllFrom(uint64_t a1, void *a2, int a3)
{
  uint64_t v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    uint64_t v6 = (int *)MEMORY[0x1E4F940E8];
    id v7 = (int *)MEMORY[0x1E4F940E0];
    int v8 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v5[*MEMORY[0x1E4F940E8]] < *(void *)&v5[*MEMORY[0x1E4F940E0]])
    {
      char v9 = (int *)MEMORY[0x1E4F940B8];
      while (!v5[*v8])
      {
        char v10 = 0;
        unsigned int v11 = 0;
        unint64_t v12 = 0;
        while (1)
        {
          uint64_t v13 = *v6;
          uint64_t v14 = *(void *)&v5[v13];
          unint64_t v15 = v14 + 1;
          if (v14 == -1 || v15 > *(void *)&v5[*v7]) {
            break;
          }
          char v16 = *(unsigned char *)(*(void *)&v5[*v9] + v14);
          *(void *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0) {
            goto LABEL_13;
          }
          v10 += 7;
          BOOL v17 = v11++ >= 9;
          if (v17)
          {
            unint64_t v12 = 0;
            int v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        int v18 = v5[*v8];
        if (v5[*v8]) {
          unint64_t v12 = 0;
        }
LABEL_15:
        if (v18 || (v12 & 7) == 4) {
          break;
        }
        switch((v12 >> 3))
        {
          case 1u:
            char v20 = 0;
            unsigned int v21 = 0;
            uint64_t v22 = 0;
            *(unsigned char *)(a1 + 40) |= 2u;
            while (1)
            {
              uint64_t v23 = *v6;
              uint64_t v24 = *(void *)&v5[v23];
              unint64_t v25 = v24 + 1;
              if (v24 == -1 || v25 > *(void *)&v5[*v7]) {
                break;
              }
              char v26 = *(unsigned char *)(*(void *)&v5[*v9] + v24);
              *(void *)&v5[v23] = v25;
              v22 |= (unint64_t)(v26 & 0x7F) << v20;
              if ((v26 & 0x80) == 0) {
                goto LABEL_56;
              }
              v20 += 7;
              BOOL v17 = v21++ >= 9;
              if (v17)
              {
                LODWORD(v22) = 0;
                goto LABEL_58;
              }
            }
            v5[*v8] = 1;
LABEL_56:
            if (v5[*v8]) {
              LODWORD(v22) = 0;
            }
LABEL_58:
            uint64_t v49 = 28;
            goto LABEL_71;
          case 2u:
            char v29 = 0;
            unsigned int v30 = 0;
            uint64_t v22 = 0;
            *(unsigned char *)(a1 + 40) |= 1u;
            while (2)
            {
              uint64_t v31 = *v6;
              uint64_t v32 = *(void *)&v5[v31];
              unint64_t v33 = v32 + 1;
              if (v32 == -1 || v33 > *(void *)&v5[*v7])
              {
                v5[*v8] = 1;
              }
              else
              {
                char v34 = *(unsigned char *)(*(void *)&v5[*v9] + v32);
                *(void *)&v5[v31] = v33;
                v22 |= (unint64_t)(v34 & 0x7F) << v29;
                if (v34 < 0)
                {
                  v29 += 7;
                  BOOL v17 = v30++ >= 9;
                  if (v17)
                  {
                    LODWORD(v22) = 0;
                    goto LABEL_62;
                  }
                  continue;
                }
              }
              break;
            }
            if (v5[*v8]) {
              LODWORD(v22) = 0;
            }
LABEL_62:
            uint64_t v49 = 24;
            goto LABEL_71;
          case 3u:
            char v35 = 0;
            unsigned int v36 = 0;
            uint64_t v22 = 0;
            *(unsigned char *)(a1 + 40) |= 4u;
            while (2)
            {
              uint64_t v37 = *v6;
              uint64_t v38 = *(void *)&v5[v37];
              unint64_t v39 = v38 + 1;
              if (v38 == -1 || v39 > *(void *)&v5[*v7])
              {
                v5[*v8] = 1;
              }
              else
              {
                char v40 = *(unsigned char *)(*(void *)&v5[*v9] + v38);
                *(void *)&v5[v37] = v39;
                v22 |= (unint64_t)(v40 & 0x7F) << v35;
                if (v40 < 0)
                {
                  v35 += 7;
                  BOOL v17 = v36++ >= 9;
                  if (v17)
                  {
                    LODWORD(v22) = 0;
                    goto LABEL_66;
                  }
                  continue;
                }
              }
              break;
            }
            if (v5[*v8]) {
              LODWORD(v22) = 0;
            }
LABEL_66:
            uint64_t v49 = 32;
            goto LABEL_71;
          case 4u:
            char v41 = 0;
            unsigned int v42 = 0;
            uint64_t v22 = 0;
            *(unsigned char *)(a1 + 40) |= 8u;
            while (2)
            {
              uint64_t v43 = *v6;
              uint64_t v44 = *(void *)&v5[v43];
              unint64_t v45 = v44 + 1;
              if (v44 == -1 || v45 > *(void *)&v5[*v7])
              {
                v5[*v8] = 1;
              }
              else
              {
                char v46 = *(unsigned char *)(*(void *)&v5[*v9] + v44);
                *(void *)&v5[v43] = v45;
                v22 |= (unint64_t)(v46 & 0x7F) << v41;
                if (v46 < 0)
                {
                  v41 += 7;
                  BOOL v17 = v42++ >= 9;
                  if (v17)
                  {
                    LODWORD(v22) = 0;
                    goto LABEL_70;
                  }
                  continue;
                }
              }
              break;
            }
            if (v5[*v8]) {
              LODWORD(v22) = 0;
            }
LABEL_70:
            uint64_t v49 = 36;
LABEL_71:
            *(_DWORD *)(a1 + v49) = v22;
            goto LABEL_72;
          case 5u:
            if ((PBReaderPlaceMark() & 1) == 0) {
              goto LABEL_75;
            }
            char v47 = objc_alloc_init(GEOFormattedString);
            if (!GEOFormattedStringReadAllFrom((uint64_t)v47, v5, a3))
            {

              goto LABEL_75;
            }
            PBReaderRecallMark();
            id v48 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v47;

LABEL_72:
            if (*(void *)&v5[*v6] >= *(void *)&v5[*v7]) {
              goto LABEL_73;
            }
            break;
          default:
            if (!*(void *)(a1 + 8))
            {
              id v27 = objc_alloc_init(MEMORY[0x1E4F940B0]);
              long long v28 = *(void **)(a1 + 8);
              *(void *)(a1 + 8) = v27;
            }
            if (!PBUnknownFieldAdd()) {
              goto LABEL_75;
            }
            goto LABEL_72;
        }
      }
    }
LABEL_73:
    BOOL v50 = v5[*v8] == 0;
  }
  else
  {
LABEL_75:
    BOOL v50 = 0;
  }
  objc_sync_exit(v5);

  return v50;
}

void sub_189AC7E70(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDHikeSummaryReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOPDHikeSummaryReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189AC7EE8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDHikeSummaryFilterReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    uint64_t v6 = (int *)MEMORY[0x1E4F940C8];
    id v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      int v8 = v3[*v6];
      if (*(void *)&v3[*v4] >= *(void *)&v3[*v5]) {
        break;
      }
      if (v3[*v6])
      {
        int v8 = 1;
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      uint64_t v11 = 0;
      while (1)
      {
        uint64_t v12 = *v4;
        uint64_t v13 = *(void *)&v3[v12];
        unint64_t v14 = v13 + 1;
        if (v13 == -1 || v14 > *(void *)&v3[*v5]) {
          break;
        }
        char v15 = *(unsigned char *)(*(void *)&v3[*v7] + v13);
        *(void *)&v3[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0) {
          goto LABEL_13;
        }
        v9 += 7;
        if (v10++ >= 9)
        {
          char v17 = 0;
          int v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      int v8 = v3[*v6];
      if (v3[*v6]) {
        char v17 = 0;
      }
      else {
        char v17 = v11;
      }
LABEL_16:
      if (v8) {
        BOOL v18 = 1;
      }
      else {
        BOOL v18 = (v17 & 7) == 4;
      }
      if (v18) {
        break;
      }
      if (!*(void *)(a1 + 8))
      {
        id v19 = objc_alloc_init(MEMORY[0x1E4F940B0]);
        char v20 = *(void **)(a1 + 8);
        *(void *)(a1 + 8) = v19;
      }
      if ((PBUnknownFieldAdd() & 1) == 0) {
        goto LABEL_23;
      }
    }
    BOOL v21 = v8 == 0;
  }
  else
  {
LABEL_23:
    BOOL v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_189AC8ADC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDHikingAssociationModuleConfigurationReadAllFrom(uint64_t a1, void *a2, int a3)
{
  uint64_t v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    uint64_t v6 = (int *)MEMORY[0x1E4F940E8];
    id v7 = (int *)MEMORY[0x1E4F940E0];
    int v8 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v5[*MEMORY[0x1E4F940E8]] < *(void *)&v5[*MEMORY[0x1E4F940E0]])
    {
      char v9 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v5[*v8]) {
          break;
        }
        char v10 = 0;
        unsigned int v11 = 0;
        unint64_t v12 = 0;
        while (1)
        {
          uint64_t v13 = *v6;
          uint64_t v14 = *(void *)&v5[v13];
          unint64_t v15 = v14 + 1;
          if (v14 == -1 || v15 > *(void *)&v5[*v7]) {
            break;
          }
          char v16 = *(unsigned char *)(*(void *)&v5[*v9] + v14);
          *(void *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0) {
            goto LABEL_13;
          }
          v10 += 7;
          if (v11++ >= 9)
          {
            unint64_t v12 = 0;
            int v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        int v18 = v5[*v8];
        if (v5[*v8]) {
          unint64_t v12 = 0;
        }
LABEL_15:
        if (v18 || (v12 & 7) == 4) {
          break;
        }
        if ((v12 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_29;
          }
          char v20 = objc_alloc_init(GEOPDTemplatePlaceModuleConfiguration);
          if (!GEOPDTemplatePlaceModuleConfigurationReadAllFrom((uint64_t)v20, v5, a3))
          {

            goto LABEL_29;
          }
          PBReaderRecallMark();
          BOOL v21 = *(void **)(a1 + 16);
          *(void *)(a1 + 16) = v20;
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v22 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            uint64_t v23 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v22;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_29;
          }
        }
      }
      while (*(void *)&v5[*v6] < *(void *)&v5[*v7]);
    }
    BOOL v24 = v5[*v8] == 0;
  }
  else
  {
LABEL_29:
    BOOL v24 = 0;
  }
  objc_sync_exit(v5);

  return v24;
}

void sub_189AC9114(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDTemplatePlaceModuleConfigurationIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_61;
          }
          unsigned int v17 = 0;
          while (1)
          {
            uint64_t v18 = *v2;
            uint64_t v19 = *(void *)&a1[v18];
            unint64_t v20 = v19 + 1;
            if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
              goto LABEL_57;
            }
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if (v21 < 0)
            {
              BOOL v22 = v17++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_58;
          }
        case 2u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOLocalizedStringIsValid(a1)) {
            goto LABEL_61;
          }
          PBReaderRecallMark();
          continue;
        case 3u:
          if ((v8 & 7) != 0) {
            goto LABEL_61;
          }
          unsigned int v23 = 0;
          while (1)
          {
            uint64_t v24 = *v2;
            uint64_t v25 = *(void *)&a1[v24];
            unint64_t v26 = v25 + 1;
            if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
              goto LABEL_57;
            }
            int v27 = *(char *)(*(void *)&a1[*v5] + v25);
            *(void *)&a1[v24] = v26;
            if (v27 < 0)
            {
              BOOL v22 = v23++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_58;
          }
        case 4u:
          if ((v8 & 7) != 0) {
            goto LABEL_61;
          }
          unsigned int v28 = 0;
          while (1)
          {
            uint64_t v29 = *v2;
            uint64_t v30 = *(void *)&a1[v29];
            unint64_t v31 = v30 + 1;
            if (v30 == -1 || v31 > *(void *)&a1[*v3]) {
              goto LABEL_57;
            }
            int v32 = *(char *)(*(void *)&a1[*v5] + v30);
            *(void *)&a1[v29] = v31;
            if (v32 < 0)
            {
              BOOL v22 = v28++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_58;
          }
        case 5u:
          if ((v8 & 7) != 0) {
            goto LABEL_61;
          }
          unsigned int v33 = 0;
          break;
        default:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_61:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        uint64_t v34 = *v2;
        uint64_t v35 = *(void *)&a1[v34];
        unint64_t v36 = v35 + 1;
        if (v35 == -1 || v36 > *(void *)&a1[*v3]) {
          break;
        }
        int v37 = *(char *)(*(void *)&a1[*v5] + v35);
        *(void *)&a1[v34] = v36;
        if (v37 < 0)
        {
          BOOL v22 = v33++ > 8;
          if (!v22) {
            continue;
          }
        }
        goto LABEL_58;
      }
LABEL_57:
      a1[*v4] = 1;
LABEL_58:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v38 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v38;
}

void sub_189AC9940(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t GEOPDHoursReadSpecified(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 88));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 84);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 80)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  unint64_t v11 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__flags;
  unsigned int v12 = ((*(unsigned __int8 *)(a1 + 92) >> 2) & 1)
      + (*(unsigned char *)(a1 + 92) & 1)
      + ((*(unsigned __int8 *)(a1 + 92) >> 1) & 1)
      + ((*(unsigned __int8 *)(a1 + 92) >> 3) & 1);
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_9;
      case 0:
        BOOL v15 = v12 > 1;
        char v16 = v15 & ~(_BYTE)v10 | v9;
        char v17 = v15 | v10;
        uint64_t v18 = (int *)MEMORY[0x1E4F940E8];
        if (((v15 | v10) | v8)) {
          uint64_t v19 = 0;
        }
        else {
          uint64_t v19 = a3;
        }
        int v20 = 1;
        if (*(void *)(v3 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(v3 + *v6)) {
          goto LABEL_90;
        }
        char v64 = v16;
        char v65 = v17 | v16;
        int v21 = (int *)MEMORY[0x1E4F940C8];
        char v67 = (v19 == 0) | v17;
        BOOL v22 = (int *)MEMORY[0x1E4F940B8];
        char v66 = v15 | v10;
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v9;
LABEL_8:
        uint64_t v14 = v10;
LABEL_9:
        ++v7;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(unsigned char *)(v3 + *v21)) {
      goto LABEL_88;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v18;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_24;
      }
      v23 += 7;
      BOOL v30 = v24++ >= 9;
      if (v30)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_26;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_24:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_26:
    int v32 = v25 & 7;
    if (v31 || v32 == 4)
    {
LABEL_88:
      int v20 = 1;
      goto LABEL_89;
    }
    unint64_t v34 = v25 >> 3;
    BOOL v35 = v17;
    if ((v67 & 1) == 0)
    {
      unint64_t v36 = v19;
      do
      {
        int v38 = *v36++;
        int v37 = v38;
        BOOL v35 = v38 != 0;
        if (v38) {
          BOOL v39 = v37 == v34;
        }
        else {
          BOOL v39 = 1;
        }
      }
      while (!v39);
    }
    if (v34 == 3) {
      break;
    }
    if (v34 == 2)
    {
      if (v35 && (*(unsigned char *)(a1 + 92) & 4) == 0)
      {
        if (!PBReaderPlaceMark()) {
          goto LABEL_106;
        }
        -[GEOPDHours _reserveTimeRanges:](a1, 1uLL);
        if (!GEOPDLocalTimeRangeReadAllFrom(*(void *)(a1 + 48) + 12 * *(void *)(a1 + 56), v3)) {
          goto LABEL_106;
        }
        PBReaderRecallMark();
        ++*(void *)(a1 + 56);
        goto LABEL_85;
      }
      goto LABEL_71;
    }
    if (v34 == 1)
    {
      if (v35 && (*(unsigned char *)(a1 + 92) & 2) == 0)
      {
        if (v32 == 2)
        {
          if (!PBReaderPlaceMark()) {
            goto LABEL_106;
          }
          while (*(void *)(v3 + *v18) < *(void *)(v3 + *v6) && !*(unsigned char *)(v3 + *v21))
          {
            char v40 = 0;
            unsigned int v41 = 0;
            uint64_t v42 = 0;
            while (1)
            {
              uint64_t v43 = *v18;
              uint64_t v44 = *(void *)(v3 + v43);
              unint64_t v45 = v44 + 1;
              if (v44 == -1 || v45 > *(void *)(v3 + *v6)) {
                break;
              }
              char v46 = *(unsigned char *)(*(void *)(v3 + *v22) + v44);
              *(void *)(v3 + v43) = v45;
              v42 |= (unint64_t)(v46 & 0x7F) << v40;
              if (v46 < 0)
              {
                v40 += 7;
                BOOL v30 = v41++ >= 9;
                if (!v30) {
                  continue;
                }
              }
              goto LABEL_54;
            }
            *(unsigned char *)(v3 + *v21) = 1;
LABEL_54:
            PBRepeatedInt32Add();
          }
          PBReaderRecallMark();
        }
        else
        {
          char v53 = 0;
          unsigned int v54 = 0;
          uint64_t v55 = 0;
          while (1)
          {
            uint64_t v56 = *v18;
            uint64_t v57 = *(void *)(v3 + v56);
            unint64_t v58 = v57 + 1;
            if (v57 == -1 || v58 > *(void *)(v3 + *v6)) {
              break;
            }
            char v59 = *(unsigned char *)(*(void *)(v3 + *v22) + v57);
            *(void *)(v3 + v56) = v58;
            v55 |= (unint64_t)(v59 & 0x7F) << v53;
            if (v59 < 0)
            {
              v53 += 7;
              BOOL v30 = v54++ >= 9;
              if (!v30) {
                continue;
              }
            }
            goto LABEL_84;
          }
          *(unsigned char *)(v3 + *v21) = 1;
LABEL_84:
          PBRepeatedInt32Add();
        }
        goto LABEL_85;
      }
      goto LABEL_71;
    }
    if (v64 & 1) == 0 || (*(unsigned char *)(a1 + 92)) {
      goto LABEL_71;
    }
    if (!*(void *)(a1 + 16))
    {
      id v49 = objc_alloc_init(MEMORY[0x1E4F940B0]);
      BOOL v50 = *(void **)(a1 + 16);
      *(void *)(a1 + 16) = v49;
    }
    int v51 = PBUnknownFieldAdd();
    char v17 = v66;
    if (!v51)
    {
      int v20 = 0;
      unint64_t v11 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__flags;
      goto LABEL_91;
    }
LABEL_86:
    if (!(v65 & 1 | (v7 != 0)) || *(void *)(v3 + *v18) >= *(void *)(v3 + *v6)) {
      goto LABEL_88;
    }
  }
  if (!v35)
  {
LABEL_71:
    char v52 = PBReaderSkipValueWithTag();
    char v17 = v66;
    if ((v52 & 1) == 0)
    {
      int v20 = 0;
      goto LABEL_89;
    }
    goto LABEL_86;
  }
  if ((*(unsigned char *)(a1 + 92) & 8) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0) {
      goto LABEL_106;
    }
    v7 += *(unsigned __int8 *)(a1 + 92) << 28 >> 31;
    goto LABEL_85;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_106;
  }
  char v47 = objc_alloc_init(GEOPDHoursThreshold);
  if (GEOPDHoursThresholdReadAllFrom((uint64_t)v47, (void *)v3))
  {
    PBReaderRecallMark();
    id v48 = *(void **)(a1 + 72);
    *(void *)(a1 + 72) = v47;

    --v7;
LABEL_85:
    char v17 = v66;
    goto LABEL_86;
  }

LABEL_106:
  int v20 = 0;
  char v17 = v66;
LABEL_89:
  char v16 = v64;
  unint64_t v11 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__flags;
LABEL_90:
  if (v16) {
LABEL_91:
  }
    *(unsigned char *)(a1 + v11[33]) |= 1u;
  if (v17 & 1 | ((v20 & 1) == 0))
  {
    *(unsigned char *)(a1 + v11[33]) |= 2u;
    *(unsigned char *)(a1 + v11[33]) |= 4u;
    *(unsigned char *)(a1 + v11[33]) |= 8u;
  }
  else if (v19)
  {
    while (1)
    {
      int v60 = *v19++;
      char v61 = 2;
      switch(v60)
      {
        case 0:
          goto LABEL_99;
        case 1:
          goto LABEL_98;
        case 2:
          char v61 = 4;
          goto LABEL_98;
        case 3:
          char v61 = 8;
LABEL_98:
          *(unsigned char *)(a1 + v11[33]) |= v61;
          break;
        default:
          continue;
      }
    }
  }
LABEL_99:
  if (v20)
  {
    uint64_t v3 = *(unsigned char *)(v3 + (int)*MEMORY[0x1E4F940C8]) == 0;
    if ((v17 & 1) == 0) {
      return v3;
    }
LABEL_103:
    char v62 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  else
  {
    uint64_t v3 = 0;
    if (v17) {
      goto LABEL_103;
    }
  }
  return v3;
}

void sub_189ACA594(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189ACAA88(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189ACB4F8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t GEOPDHoursReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 84))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDHoursReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 88));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 80) = [v8 position];
  *(_DWORD *)(a1 + 84) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOPDHoursReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOPDHoursReadAllFrom_initialTag;
  }
  uint64_t Specified = GEOPDHoursReadSpecified(a1, (uint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 88));
  return Specified;
}

void sub_189ACB684(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t GEOPDHoursReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  uint64_t AllFrom = GEOPDHoursReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189ACB6E8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189ACB908(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDHoursIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 88));
  BOOL v2 = (*(unsigned char *)(a1 + 92) & 0x1E) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 88));
  return v2;
}

void sub_189ACBC8C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189ACC004(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDHoursFilterReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      int v8 = v3[*v6];
      if (*(void *)&v3[*v4] >= *(void *)&v3[*v5]) {
        break;
      }
      if (v3[*v6])
      {
        int v8 = 1;
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      uint64_t v11 = 0;
      while (1)
      {
        uint64_t v12 = *v4;
        uint64_t v13 = *(void *)&v3[v12];
        unint64_t v14 = v13 + 1;
        if (v13 == -1 || v14 > *(void *)&v3[*v5]) {
          break;
        }
        char v15 = *(unsigned char *)(*(void *)&v3[*v7] + v13);
        *(void *)&v3[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0) {
          goto LABEL_13;
        }
        v9 += 7;
        if (v10++ >= 9)
        {
          char v17 = 0;
          int v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      int v8 = v3[*v6];
      if (v3[*v6]) {
        char v17 = 0;
      }
      else {
        char v17 = v11;
      }
LABEL_16:
      if (v8) {
        BOOL v18 = 1;
      }
      else {
        BOOL v18 = (v17 & 7) == 4;
      }
      if (v18) {
        break;
      }
      if (!*(void *)(a1 + 8))
      {
        id v19 = objc_alloc_init(MEMORY[0x1E4F940B0]);
        int v20 = *(void **)(a1 + 8);
        *(void *)(a1 + 8) = v19;
      }
      if ((PBUnknownFieldAdd() & 1) == 0) {
        goto LABEL_23;
      }
    }
    BOOL v21 = v8 == 0;
  }
  else
  {
LABEL_23:
    BOOL v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_189ACC5A0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDHoursThresholdReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
      while (1)
      {
        if (v3[*v6]) {
          goto LABEL_49;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          goto LABEL_49;
        }
        if ((v10 >> 3) == 2) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          char v18 = 0;
          unsigned int v19 = 0;
          uint64_t v20 = 0;
          *(unsigned char *)(a1 + 24) |= 2u;
          while (1)
          {
            uint64_t v21 = *v4;
            uint64_t v22 = *(void *)&v3[v21];
            unint64_t v23 = v22 + 1;
            if (v22 == -1 || v23 > *(void *)&v3[*v5])
            {
              uint64_t v26 = &OBJC_IVAR___GEOPDHoursThreshold__openingSoonMessageThresholdSecond;
              goto LABEL_41;
            }
            char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
            *(void *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0) {
              break;
            }
            v18 += 7;
            BOOL v25 = v19++ > 8;
            if (v25)
            {
              LODWORD(v20) = 0;
              uint64_t v26 = &OBJC_IVAR___GEOPDHoursThreshold__openingSoonMessageThresholdSecond;
              goto LABEL_44;
            }
          }
          uint64_t v26 = &OBJC_IVAR___GEOPDHoursThreshold__openingSoonMessageThresholdSecond;
LABEL_42:
          if (v3[*v6]) {
            LODWORD(v20) = 0;
          }
LABEL_44:
          *(_DWORD *)(a1 + *v26) = v20;
          goto LABEL_45;
        }
        if (!*(void *)(a1 + 8))
        {
          id v33 = objc_alloc_init(MEMORY[0x1E4F940B0]);
          unint64_t v34 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = v33;
        }
        if ((PBUnknownFieldAdd() & 1) == 0) {
          goto LABEL_50;
        }
LABEL_45:
        if (*(void *)&v3[*v4] >= *(void *)&v3[*v5]) {
          goto LABEL_49;
        }
      }
      char v27 = 0;
      unsigned int v28 = 0;
      uint64_t v20 = 0;
      *(unsigned char *)(a1 + 24) |= 1u;
      while (1)
      {
        uint64_t v29 = *v4;
        uint64_t v30 = *(void *)&v3[v29];
        unint64_t v31 = v30 + 1;
        if (v30 == -1 || v31 > *(void *)&v3[*v5]) {
          break;
        }
        char v32 = *(unsigned char *)(*(void *)&v3[*v7] + v30);
        *(void *)&v3[v29] = v31;
        v20 |= (unint64_t)(v32 & 0x7F) << v27;
        if ((v32 & 0x80) == 0)
        {
          uint64_t v26 = &OBJC_IVAR___GEOPDHoursThreshold__closingSoonMessageThresholdSecond;
          goto LABEL_42;
        }
        v27 += 7;
        BOOL v25 = v28++ > 8;
        if (v25)
        {
          LODWORD(v20) = 0;
          uint64_t v26 = &OBJC_IVAR___GEOPDHoursThreshold__closingSoonMessageThresholdSecond;
          goto LABEL_44;
        }
      }
      uint64_t v26 = &OBJC_IVAR___GEOPDHoursThreshold__closingSoonMessageThresholdSecond;
LABEL_41:
      v3[*v6] = 1;
      goto LABEL_42;
    }
LABEL_49:
    BOOL v35 = v3[*v6] == 0;
  }
  else
  {
LABEL_50:
    BOOL v35 = 0;
  }
  objc_sync_exit(v3);

  return v35;
}

void sub_189ACCE50(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189ACD1EC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDISO3166CodeFilterReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      int v8 = v3[*v6];
      if (*(void *)&v3[*v4] >= *(void *)&v3[*v5]) {
        break;
      }
      if (v3[*v6])
      {
        int v8 = 1;
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      uint64_t v11 = 0;
      while (1)
      {
        uint64_t v12 = *v4;
        uint64_t v13 = *(void *)&v3[v12];
        unint64_t v14 = v13 + 1;
        if (v13 == -1 || v14 > *(void *)&v3[*v5]) {
          break;
        }
        char v15 = *(unsigned char *)(*(void *)&v3[*v7] + v13);
        *(void *)&v3[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0) {
          goto LABEL_13;
        }
        v9 += 7;
        if (v10++ >= 9)
        {
          char v17 = 0;
          int v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      int v8 = v3[*v6];
      if (v3[*v6]) {
        char v17 = 0;
      }
      else {
        char v17 = v11;
      }
LABEL_16:
      if (v8) {
        BOOL v18 = 1;
      }
      else {
        BOOL v18 = (v17 & 7) == 4;
      }
      if (v18) {
        break;
      }
      if (!*(void *)(a1 + 8))
      {
        id v19 = objc_alloc_init(MEMORY[0x1E4F940B0]);
        uint64_t v20 = *(void **)(a1 + 8);
        *(void *)(a1 + 8) = v19;
      }
      if ((PBUnknownFieldAdd() & 1) == 0) {
        goto LABEL_23;
      }
    }
    BOOL v21 = v8 == 0;
  }
  else
  {
LABEL_23:
    BOOL v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_189ACDB80(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDIconReadAllFrom(uint64_t a1, void *a2, int a3)
{
  uint64_t v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    char v6 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v7 = (int *)MEMORY[0x1E4F940E0];
    int v8 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v5[*MEMORY[0x1E4F940E8]] < *(void *)&v5[*MEMORY[0x1E4F940E0]])
    {
      char v9 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v5[*v8]) {
          break;
        }
        char v10 = 0;
        unsigned int v11 = 0;
        unint64_t v12 = 0;
        while (1)
        {
          uint64_t v13 = *v6;
          uint64_t v14 = *(void *)&v5[v13];
          unint64_t v15 = v14 + 1;
          if (v14 == -1 || v15 > *(void *)&v5[*v7]) {
            break;
          }
          char v16 = *(unsigned char *)(*(void *)&v5[*v9] + v14);
          *(void *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0) {
            goto LABEL_13;
          }
          v10 += 7;
          BOOL v17 = v11++ >= 9;
          if (v17)
          {
            unint64_t v12 = 0;
            int v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        int v18 = v5[*v8];
        if (v5[*v8]) {
          unint64_t v12 = 0;
        }
LABEL_15:
        if (v18 || (v12 & 7) == 4) {
          break;
        }
        if ((v12 >> 3) == 2)
        {
          char v22 = 0;
          unsigned int v23 = 0;
          uint64_t v24 = 0;
          *(unsigned char *)(a1 + 28) |= 1u;
          while (1)
          {
            uint64_t v25 = *v6;
            uint64_t v26 = *(void *)&v5[v25];
            unint64_t v27 = v26 + 1;
            if (v26 == -1 || v27 > *(void *)&v5[*v7]) {
              break;
            }
            char v28 = *(unsigned char *)(*(void *)&v5[*v9] + v26);
            *(void *)&v5[v25] = v27;
            v24 |= (unint64_t)(v28 & 0x7F) << v22;
            if ((v28 & 0x80) == 0) {
              goto LABEL_36;
            }
            v22 += 7;
            BOOL v17 = v23++ >= 9;
            if (v17)
            {
              LODWORD(v24) = 0;
              goto LABEL_38;
            }
          }
          v5[*v8] = 1;
LABEL_36:
          if (v5[*v8]) {
            LODWORD(v24) = 0;
          }
LABEL_38:
          *(_DWORD *)(a1 + 24) = v24;
        }
        else if ((v12 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_42;
          }
          uint64_t v20 = objc_alloc_init(GEOPDPhoto);
          if (!GEOPDPhotoReadAllFrom((uint64_t)v20, v5, a3))
          {

            goto LABEL_42;
          }
          PBReaderRecallMark();
          BOOL v21 = *(void **)(a1 + 16);
          *(void *)(a1 + 16) = v20;
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v29 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            uint64_t v30 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v29;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_42;
          }
        }
      }
      while (*(void *)&v5[*v6] < *(void *)&v5[*v7]);
    }
    BOOL v31 = v5[*v8] == 0;
  }
  else
  {
LABEL_42:
    BOOL v31 = 0;
  }
  objc_sync_exit(v5);

  return v31;
}

void sub_189ACE4F8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDIconFilterReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      int v8 = v3[*v6];
      if (*(void *)&v3[*v4] >= *(void *)&v3[*v5]) {
        break;
      }
      if (v3[*v6])
      {
        int v8 = 1;
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      uint64_t v11 = 0;
      while (1)
      {
        uint64_t v12 = *v4;
        uint64_t v13 = *(void *)&v3[v12];
        unint64_t v14 = v13 + 1;
        if (v13 == -1 || v14 > *(void *)&v3[*v5]) {
          break;
        }
        char v15 = *(unsigned char *)(*(void *)&v3[*v7] + v13);
        *(void *)&v3[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0) {
          goto LABEL_13;
        }
        v9 += 7;
        if (v10++ >= 9)
        {
          char v17 = 0;
          int v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      int v8 = v3[*v6];
      if (v3[*v6]) {
        char v17 = 0;
      }
      else {
        char v17 = v11;
      }
LABEL_16:
      if (v8) {
        BOOL v18 = 1;
      }
      else {
        BOOL v18 = (v17 & 7) == 4;
      }
      if (v18) {
        break;
      }
      if (!*(void *)(a1 + 8))
      {
        id v19 = objc_alloc_init(MEMORY[0x1E4F940B0]);
        uint64_t v20 = *(void **)(a1 + 8);
        *(void *)(a1 + 8) = v19;
      }
      if ((PBUnknownFieldAdd() & 1) == 0) {
        goto LABEL_23;
      }
    }
    BOOL v21 = v8 == 0;
  }
  else
  {
LABEL_23:
    BOOL v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_189ACEC34(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDInlineRapEnablementReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        switch((v10 >> 3))
        {
          case 1u:
            char v18 = 0;
            unsigned int v19 = 0;
            uint64_t v20 = 0;
            *(unsigned char *)(a1 + 20) |= 2u;
            while (1)
            {
              uint64_t v21 = *v4;
              uint64_t v22 = *(void *)&v3[v21];
              unint64_t v23 = v22 + 1;
              if (v22 == -1 || v23 > *(void *)&v3[*v5])
              {
                uint64_t v26 = &OBJC_IVAR___GEOPDInlineRapEnablement__isHoursEditable;
                goto LABEL_56;
              }
              char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
              *(void *)&v3[v21] = v23;
              v20 |= (unint64_t)(v24 & 0x7F) << v18;
              if ((v24 & 0x80) == 0) {
                break;
              }
              v18 += 7;
              BOOL v25 = v19++ > 8;
              if (v25)
              {
                uint64_t v20 = 0;
                uint64_t v26 = &OBJC_IVAR___GEOPDInlineRapEnablement__isHoursEditable;
                goto LABEL_59;
              }
            }
            uint64_t v26 = &OBJC_IVAR___GEOPDInlineRapEnablement__isHoursEditable;
            goto LABEL_57;
          case 2u:
            char v29 = 0;
            unsigned int v30 = 0;
            uint64_t v20 = 0;
            *(unsigned char *)(a1 + 20) |= 4u;
            while (2)
            {
              uint64_t v31 = *v4;
              uint64_t v32 = *(void *)&v3[v31];
              unint64_t v33 = v32 + 1;
              if (v32 == -1 || v33 > *(void *)&v3[*v5])
              {
                uint64_t v26 = &OBJC_IVAR___GEOPDInlineRapEnablement__isPhoneEditable;
                goto LABEL_56;
              }
              char v34 = *(unsigned char *)(*(void *)&v3[*v7] + v32);
              *(void *)&v3[v31] = v33;
              v20 |= (unint64_t)(v34 & 0x7F) << v29;
              if (v34 < 0)
              {
                v29 += 7;
                BOOL v25 = v30++ > 8;
                if (v25)
                {
                  uint64_t v20 = 0;
                  uint64_t v26 = &OBJC_IVAR___GEOPDInlineRapEnablement__isPhoneEditable;
                  goto LABEL_59;
                }
                continue;
              }
              break;
            }
            uint64_t v26 = &OBJC_IVAR___GEOPDInlineRapEnablement__isPhoneEditable;
            goto LABEL_57;
          case 3u:
            char v35 = 0;
            unsigned int v36 = 0;
            uint64_t v20 = 0;
            *(unsigned char *)(a1 + 20) |= 8u;
            while (2)
            {
              uint64_t v37 = *v4;
              uint64_t v38 = *(void *)&v3[v37];
              unint64_t v39 = v38 + 1;
              if (v38 == -1 || v39 > *(void *)&v3[*v5])
              {
                uint64_t v26 = &OBJC_IVAR___GEOPDInlineRapEnablement__isWebsiteEditable;
                goto LABEL_56;
              }
              char v40 = *(unsigned char *)(*(void *)&v3[*v7] + v38);
              *(void *)&v3[v37] = v39;
              v20 |= (unint64_t)(v40 & 0x7F) << v35;
              if (v40 < 0)
              {
                v35 += 7;
                BOOL v25 = v36++ > 8;
                if (v25)
                {
                  uint64_t v20 = 0;
                  uint64_t v26 = &OBJC_IVAR___GEOPDInlineRapEnablement__isWebsiteEditable;
                  goto LABEL_59;
                }
                continue;
              }
              break;
            }
            uint64_t v26 = &OBJC_IVAR___GEOPDInlineRapEnablement__isWebsiteEditable;
            goto LABEL_57;
          case 4u:
            char v41 = 0;
            unsigned int v42 = 0;
            uint64_t v20 = 0;
            *(unsigned char *)(a1 + 20) |= 1u;
            break;
          default:
            if (!*(void *)(a1 + 8))
            {
              id v27 = objc_alloc_init(MEMORY[0x1E4F940B0]);
              char v28 = *(void **)(a1 + 8);
              *(void *)(a1 + 8) = v27;
            }
            if ((PBUnknownFieldAdd() & 1) == 0) {
              goto LABEL_67;
            }
            continue;
        }
        while (1)
        {
          uint64_t v43 = *v4;
          uint64_t v44 = *(void *)&v3[v43];
          unint64_t v45 = v44 + 1;
          if (v44 == -1 || v45 > *(void *)&v3[*v5]) {
            break;
          }
          char v46 = *(unsigned char *)(*(void *)&v3[*v7] + v44);
          *(void *)&v3[v43] = v45;
          v20 |= (unint64_t)(v46 & 0x7F) << v41;
          if ((v46 & 0x80) == 0)
          {
            uint64_t v26 = &OBJC_IVAR___GEOPDInlineRapEnablement__isAddressEditable;
            goto LABEL_57;
          }
          v41 += 7;
          BOOL v25 = v42++ > 8;
          if (v25)
          {
            uint64_t v20 = 0;
            uint64_t v26 = &OBJC_IVAR___GEOPDInlineRapEnablement__isAddressEditable;
            goto LABEL_59;
          }
        }
        uint64_t v26 = &OBJC_IVAR___GEOPDInlineRapEnablement__isAddressEditable;
LABEL_56:
        v3[*v6] = 1;
LABEL_57:
        if (v3[*v6]) {
          uint64_t v20 = 0;
        }
LABEL_59:
        *(unsigned char *)(a1 + *v26) = v20 != 0;
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v47 = v3[*v6] == 0;
  }
  else
  {
LABEL_67:
    BOOL v47 = 0;
  }
  objc_sync_exit(v3);

  return v47;
}

void sub_189ACF970(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDInlineRapEnablementReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOPDInlineRapEnablementReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189ACF9E4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189AD089C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189AD0BB4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189AD0DC0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDLabelGeometryReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 2)
        {
          char v19 = 0;
          unsigned int v20 = 0;
          uint64_t v21 = 0;
          *(unsigned char *)(a1 + 28) |= 1u;
          while (1)
          {
            uint64_t v22 = *v4;
            uint64_t v23 = *(void *)&v3[v22];
            unint64_t v24 = v23 + 1;
            if (v23 == -1 || v24 > *(void *)&v3[*v5]) {
              break;
            }
            char v25 = *(unsigned char *)(*(void *)&v3[*v7] + v23);
            *(void *)&v3[v22] = v24;
            v21 |= (unint64_t)(v25 & 0x7F) << v19;
            if ((v25 & 0x80) == 0) {
              goto LABEL_36;
            }
            v19 += 7;
            BOOL v15 = v20++ >= 9;
            if (v15)
            {
              uint64_t v21 = 0;
              goto LABEL_38;
            }
          }
          v3[*v6] = 1;
LABEL_36:
          if (v3[*v6]) {
            uint64_t v21 = 0;
          }
LABEL_38:
          *(unsigned char *)(a1 + 24) = v21 != 0;
        }
        else if ((v10 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_42;
          }
          char v18 = objc_alloc_init(GEOPDLineString);
          if (!GEOPDLineStringReadAllFrom((uint64_t)v18, v3))
          {

            goto LABEL_42;
          }
          PBReaderRecallMark();
          -[GEOPDLabelGeometry addLabelShape:](a1, v18);
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v26 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            id v27 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v26;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_42;
          }
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v28 = v3[*v6] == 0;
  }
  else
  {
LABEL_42:
    BOOL v28 = 0;
  }
  objc_sync_exit(v3);

  return v28;
}

void sub_189AD18D4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDLabelGeometryFilterReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      int v8 = v3[*v6];
      if (*(void *)&v3[*v4] >= *(void *)&v3[*v5]) {
        break;
      }
      if (v3[*v6])
      {
        int v8 = 1;
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      uint64_t v11 = 0;
      while (1)
      {
        uint64_t v12 = *v4;
        uint64_t v13 = *(void *)&v3[v12];
        unint64_t v14 = v13 + 1;
        if (v13 == -1 || v14 > *(void *)&v3[*v5]) {
          break;
        }
        char v15 = *(unsigned char *)(*(void *)&v3[*v7] + v13);
        *(void *)&v3[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0) {
          goto LABEL_13;
        }
        v9 += 7;
        if (v10++ >= 9)
        {
          char v17 = 0;
          int v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      int v8 = v3[*v6];
      if (v3[*v6]) {
        char v17 = 0;
      }
      else {
        char v17 = v11;
      }
LABEL_16:
      if (v8) {
        BOOL v18 = 1;
      }
      else {
        BOOL v18 = (v17 & 7) == 4;
      }
      if (v18) {
        break;
      }
      if (!*(void *)(a1 + 8))
      {
        id v19 = objc_alloc_init(MEMORY[0x1E4F940B0]);
        unsigned int v20 = *(void **)(a1 + 8);
        *(void *)(a1 + 8) = v19;
      }
      if ((PBUnknownFieldAdd() & 1) == 0) {
        goto LABEL_23;
      }
    }
    BOOL v21 = v8 == 0;
  }
  else
  {
LABEL_23:
    BOOL v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_189AD219C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDLineStringReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_29;
          }
          BOOL v18 = objc_alloc_init(GEOLatLng);
          if (!GEOLatLngReadAllFrom((uint64_t)v18, v3))
          {

            goto LABEL_29;
          }
          PBReaderRecallMark();
          -[GEOPDLineString addPoint:](a1, v18);
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v19 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            unsigned int v20 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v19;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_29;
          }
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v21 = v3[*v6] == 0;
  }
  else
  {
LABEL_29:
    BOOL v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_189AD297C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189AD2EE0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDLinkReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 60);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 56)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  unsigned int v12 = (vaddv_s16((int16x4_t)(*(void *)&vshl_u16((uint16x4_t)(*(void *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 76)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFAFFFCFFFBFFFDLL) & 0xFF01FF01FF01FF01))+ ((*(unsigned char *)(a1 + 76) & 4) != 0));
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 > 2;
        char v17 = v16 & ~(_BYTE)v11 | v9;
        unsigned __int8 v18 = v16 | v11;
        char v67 = v17;
        char v68 = v18 | v17;
        if ((v18 | v8)) {
          id v19 = 0;
        }
        else {
          id v19 = a3;
        }
        unsigned int v20 = (int *)MEMORY[0x1E4F940E8];
        char v69 = (v19 == 0) | v18;
        BOOL v70 = v18;
        BOOL v21 = (int *)MEMORY[0x1E4F940C8];
        uint64_t v22 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v9;
LABEL_8:
        uint64_t v14 = v10;
        uint64_t v15 = v11;
LABEL_10:
        ++v7;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v21)) {
      goto LABEL_104;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      BOOL v30 = v24++ >= 9;
      if (v30)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_25:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_104:
      int v65 = 1;
      goto LABEL_105;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v70;
    if ((v69 & 1) == 0)
    {
      char v35 = v19;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    switch((int)v33)
    {
      case 1:
        if ((v8 & 1) == 0) {
          goto LABEL_82;
        }
        char v39 = 0;
        unsigned int v40 = 0;
        uint64_t v41 = 0;
        *(unsigned char *)(a1 + 76) |= 1u;
        while (1)
        {
          uint64_t v42 = *v20;
          uint64_t v43 = *(void *)(v3 + v42);
          unint64_t v44 = v43 + 1;
          if (v43 == -1 || v44 > *(void *)(v3 + *v6)) {
            break;
          }
          char v45 = *(unsigned char *)(*(void *)(v3 + *v22) + v43);
          *(void *)(v3 + v42) = v44;
          v41 |= (unint64_t)(v45 & 0x7F) << v39;
          if ((v45 & 0x80) == 0) {
            goto LABEL_85;
          }
          v39 += 7;
          BOOL v30 = v40++ >= 9;
          if (v30)
          {
            LODWORD(v41) = 0;
            goto LABEL_87;
          }
        }
        *(unsigned char *)(v3 + *v21) = 1;
LABEL_85:
        if (*(unsigned char *)(v3 + *v21)) {
          LODWORD(v41) = 0;
        }
LABEL_87:
        uint64_t v59 = 68;
        goto LABEL_92;
      case 2:
        if (!v34) {
          goto LABEL_82;
        }
        if ((*(unsigned char *)(a1 + 76) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_123;
          }
          char v60 = 4 * *(unsigned char *)(a1 + 76);
          goto LABEL_101;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_123;
        }
        id v49 = objc_alloc_init(GEOPDQuickLinkActionDataParams);
        if (!GEOPDQuickLinkActionDataParamsReadAllFrom((uint64_t)v49, (void *)v3, v10 & 1)) {
          goto LABEL_122;
        }
        PBReaderRecallMark();
        uint64_t v50 = 40;
        goto LABEL_73;
      case 3:
        if (!v34) {
          goto LABEL_82;
        }
        if ((*(unsigned char *)(a1 + 76) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_123;
          }
          char v60 = 16 * *(unsigned char *)(a1 + 76);
          goto LABEL_101;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_123;
        }
        id v49 = objc_alloc_init(GEOPDAppClipParams);
        if (!GEOPDAppClipParamsReadAllFrom((uint64_t)v49, (void *)v3, v10 & 1)) {
          goto LABEL_122;
        }
        PBReaderRecallMark();
        uint64_t v50 = 24;
        goto LABEL_73;
      case 4:
        if (!v34) {
          goto LABEL_82;
        }
        if ((*(unsigned char *)(a1 + 76) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_123;
          }
          char v60 = 8 * *(unsigned char *)(a1 + 76);
          goto LABEL_101;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_123;
        }
        id v49 = objc_alloc_init(GEOPDExtensionParams);
        if (!GEOPDExtensionParamsReadAllFrom((uint64_t)v49, (void *)v3, v10 & 1)) {
          goto LABEL_122;
        }
        PBReaderRecallMark();
        uint64_t v50 = 32;
        goto LABEL_73;
      case 5:
        if (!v34) {
          goto LABEL_82;
        }
        if ((*(unsigned char *)(a1 + 76) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_123;
          }
          char v60 = 2 * *(unsigned char *)(a1 + 76);
LABEL_101:
          v7 += v60 >> 7;
LABEL_102:
          BOOL v21 = (int *)MEMORY[0x1E4F940C8];
          uint64_t v22 = (int *)MEMORY[0x1E4F940B8];
          goto LABEL_103;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_123;
        }
        id v49 = objc_alloc_init(GEOPDWebLinkParams);
        if (GEOPDWebLinkParamsReadAllFrom((uint64_t)v49, (void *)v3, v10 & 1))
        {
          PBReaderRecallMark();
          uint64_t v50 = 48;
LABEL_73:
          int v51 = *(void **)(a1 + v50);
          *(void *)(a1 + v50) = v49;

          --v7;
          goto LABEL_102;
        }
LABEL_122:

LABEL_123:
        int v65 = 0;
        char v66 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__flags;
        BOOL v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_106:
        if (v67) {
LABEL_107:
        }
          *(unsigned char *)(a1 + v66[57]) |= 4u;
        if (v70 || (v65 & 1) == 0)
        {
          *(unsigned char *)(a1 + v66[57]) |= 0x20u;
          *(unsigned char *)(a1 + v66[57]) |= 8u;
          *(unsigned char *)(a1 + v66[57]) |= 0x10u;
          *(unsigned char *)(a1 + v66[57]) |= 0x40u;
        }
        else if (v19)
        {
          while (1)
          {
            int v61 = *v19++;
            char v62 = 32;
            switch(v61)
            {
              case 0:
                goto LABEL_116;
              case 2:
                goto LABEL_115;
              case 3:
                char v62 = 8;
                goto LABEL_115;
              case 4:
                char v62 = 16;
                goto LABEL_115;
              case 5:
                char v62 = 64;
LABEL_115:
                *(unsigned char *)(a1 + v66[57]) |= v62;
                break;
              default:
                continue;
            }
          }
        }
LABEL_116:
        if (v65) {
          unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
        }
        else {
          unint64_t v3 = 0;
        }
        if (v70)
        {
          char v63 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      case 6:
        if ((v8 & 1) == 0) {
          goto LABEL_82;
        }
        char v52 = 0;
        unsigned int v53 = 0;
        uint64_t v41 = 0;
        *(unsigned char *)(a1 + 76) |= 2u;
        while (2)
        {
          uint64_t v54 = *v20;
          uint64_t v55 = *(void *)(v3 + v54);
          unint64_t v56 = v55 + 1;
          if (v55 == -1 || v56 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v57 = *(unsigned char *)(*(void *)(v3 + *v22) + v55);
            *(void *)(v3 + v54) = v56;
            v41 |= (unint64_t)(v57 & 0x7F) << v52;
            if (v57 < 0)
            {
              v52 += 7;
              BOOL v30 = v53++ >= 9;
              if (v30)
              {
                LODWORD(v41) = 0;
                goto LABEL_91;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          LODWORD(v41) = 0;
        }
LABEL_91:
        uint64_t v59 = 72;
LABEL_92:
        *(_DWORD *)(a1 + v59) = v41;
        goto LABEL_103;
      default:
        if ((v67 & 1) == 0 || (*(unsigned char *)(a1 + 76) & 4) != 0)
        {
LABEL_82:
          char v58 = PBReaderSkipValueWithTag();
          uint64_t v22 = (int *)MEMORY[0x1E4F940B8];
          BOOL v21 = (int *)MEMORY[0x1E4F940C8];
          if ((v58 & 1) == 0)
          {
            int v65 = 0;
LABEL_105:
            char v66 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__flags;
            goto LABEL_106;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v46 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            BOOL v47 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v46;
          }
          int v48 = PBUnknownFieldAdd();
          BOOL v21 = (int *)MEMORY[0x1E4F940C8];
          uint64_t v22 = (int *)MEMORY[0x1E4F940B8];
          if (!v48)
          {
            int v65 = 0;
            char v66 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__flags;
            goto LABEL_107;
          }
        }
LABEL_103:
        if (!(v68 & 1 | (v7 != 0))) {
          goto LABEL_104;
        }
        continue;
    }
  }
}

void sub_189AD38B8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189AD39C8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189AD3AD8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189AD4044(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDLinkCallReadAllRecursiveWithoutSynchronized(uint64_t *a1)
{
  -[GEOPDQuickLinkActionDataParams readAll:](a1[5], 1);
  -[GEOPDAppClipParams readAll:](a1[3], 1);
  -[GEOPDExtensionParams readAll:](a1[4], 1);
  uint64_t v2 = a1[6];

  -[GEOPDWebLinkParams readAll:](v2, 1);
}

unint64_t GEOPDLinkReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 60))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDLinkReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = [v8 position];
  *(_DWORD *)(a1 + 60) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOPDLinkReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOPDLinkReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDLinkReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOPDLinkCallReadAllRecursiveWithoutSynchronized((uint64_t *)a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_189AD4334(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189AD4554(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDLinkIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  int v2 = *(char *)(a1 + 76);
  if (v2 < 0) {
    return 1;
  }
  if ((v2 & 0x20) != 0)
  {
    uint64_t v3 = *(void *)(a1 + 40);
    if (v3)
    {
      os_unfair_lock_lock_with_options();
      os_unfair_lock_assert_owner((const os_unfair_lock *)(v3 + 64));
      int v4 = *(unsigned char *)(v3 + 68) & 0x3E;
      os_unfair_lock_unlock((os_unfair_lock_t)(v3 + 64));
      if (v4) {
        return 1;
      }
      LOBYTE(v2) = *(unsigned char *)(a1 + 76);
    }
  }
  if ((v2 & 8) != 0)
  {
    uint64_t v5 = *(void *)(a1 + 24);
    if (v5)
    {
      os_unfair_lock_lock_with_options();
      os_unfair_lock_assert_owner((const os_unfair_lock *)(v5 + 72));
      int v6 = *(unsigned char *)(v5 + 76) & 0x7E;
      os_unfair_lock_unlock((os_unfair_lock_t)(v5 + 72));
      if (v6) {
        return 1;
      }
    }
    LOBYTE(v2) = *(unsigned char *)(a1 + 76);
  }
  if ((v2 & 0x10) != 0)
  {
    uint64_t v7 = *(void *)(a1 + 32);
    if (v7)
    {
      os_unfair_lock_lock_with_options();
      os_unfair_lock_assert_owner((const os_unfair_lock *)(v7 + 80));
      int v8 = *(unsigned char *)(v7 + 84) & 0x3E;
      os_unfair_lock_unlock((os_unfair_lock_t)(v7 + 80));
      if (v8) {
        return 1;
      }
    }
    LOBYTE(v2) = *(unsigned char *)(a1 + 76);
  }
  if ((v2 & 0x40) == 0) {
    return 0;
  }
  uint64_t v10 = *(void *)(a1 + 48);
  if (!v10) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(v10 + 56));
  BOOL v9 = (*(unsigned char *)(v10 + 64) & 0x3C) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(v10 + 56));
  return v9;
}

void sub_189AD493C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189AD4DBC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDLinkedPlaceReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  int v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 68);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 64)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  unsigned int v12 = (vaddv_s16((int16x4_t)(*(void *)&vshl_u16((uint16x4_t)(*(void *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 76)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFBFFFEFFFDFFFCLL) & 0xFF01FF01FF01FF01))+ ((*(unsigned char *)(a1 + 76) & 2) != 0));
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 > 2;
        char v17 = v16 & ~(_BYTE)v11 | v9;
        unsigned __int8 v18 = v16 | v11;
        char v61 = v17;
        char v62 = v18 | v17;
        if ((v18 | v8)) {
          id v19 = 0;
        }
        else {
          id v19 = a3;
        }
        char v63 = (v19 == 0) | v18;
        BOOL v64 = v18;
        unsigned int v20 = (int *)MEMORY[0x1E4F940E8];
        BOOL v21 = (int *)MEMORY[0x1E4F940C8];
        uint64_t v22 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v9;
LABEL_8:
        uint64_t v14 = v10;
        uint64_t v15 = v11;
LABEL_10:
        ++v7;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v21)) {
      goto LABEL_90;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      BOOL v30 = v24++ >= 9;
      if (v30)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_25:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_90:
      int v59 = 1;
      goto LABEL_91;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v64;
    if ((v63 & 1) == 0)
    {
      char v35 = v19;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    switch((int)v33)
    {
      case 1:
        if (!v34) {
          goto LABEL_73;
        }
        if ((*(unsigned char *)(a1 + 76) & 8) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_109;
          }
          char v39 = objc_alloc_init(GEOPDMapsIdentifier);
          if (GEOPDMapsIdentifierReadAllFrom((uint64_t)v39, (void *)v3))
          {
            PBReaderRecallMark();
            uint64_t v40 = 40;
            goto LABEL_63;
          }
          goto LABEL_108;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_109;
        }
        char v54 = 16 * *(unsigned char *)(a1 + 76);
        goto LABEL_87;
      case 2:
        if (!v34) {
          goto LABEL_73;
        }
        if ((*(unsigned char *)(a1 + 76) & 0x10) == 0)
        {
          uint64_t v44 = PBReaderReadString();
          char v45 = *(void **)(a1 + 48);
          *(void *)(a1 + 48) = v44;
          goto LABEL_64;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_109;
        }
        char v54 = 8 * *(unsigned char *)(a1 + 76);
        goto LABEL_87;
      case 3:
        if (!v34) {
          goto LABEL_73;
        }
        if ((*(unsigned char *)(a1 + 76) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_109;
          }
          char v54 = 32 * *(unsigned char *)(a1 + 76);
          goto LABEL_87;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_109;
        }
        char v39 = objc_alloc_init(GEOLatLng);
        if (!GEOLatLngReadAllFrom((uint64_t)v39, (void *)v3)) {
          goto LABEL_108;
        }
        PBReaderRecallMark();
        uint64_t v40 = 24;
        goto LABEL_63;
      case 4:
        if (!v34) {
          goto LABEL_73;
        }
        if ((*(unsigned char *)(a1 + 76) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_109;
          }
          char v54 = 4 * *(unsigned char *)(a1 + 76);
LABEL_87:
          v7 += v54 >> 7;
LABEL_88:
          BOOL v21 = (int *)MEMORY[0x1E4F940C8];
          uint64_t v22 = (int *)MEMORY[0x1E4F940B8];
          goto LABEL_89;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_109;
        }
        char v39 = objc_alloc_init(GEOStyleAttributes);
        if (GEOStyleAttributesReadAllFrom((uint64_t)v39, (void *)v3))
        {
          PBReaderRecallMark();
          uint64_t v40 = 56;
LABEL_63:
          char v45 = *(void **)(a1 + v40);
          *(void *)(a1 + v40) = v39;
LABEL_64:

          --v7;
          goto LABEL_88;
        }
LABEL_108:

LABEL_109:
        int v59 = 0;
        char v60 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__flags;
        BOOL v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_92:
        if (v61) {
LABEL_93:
        }
          *(unsigned char *)(a1 + v60[65]) |= 2u;
        if (v64 || (v59 & 1) == 0)
        {
          *(unsigned char *)(a1 + v60[65]) |= 8u;
          *(unsigned char *)(a1 + v60[65]) |= 0x10u;
          *(unsigned char *)(a1 + v60[65]) |= 4u;
          *(unsigned char *)(a1 + v60[65]) |= 0x20u;
        }
        else if (v19)
        {
          while (1)
          {
            int v55 = *v19++;
            char v56 = 8;
            switch(v55)
            {
              case 0:
                goto LABEL_102;
              case 1:
                goto LABEL_101;
              case 2:
                char v56 = 16;
                goto LABEL_101;
              case 3:
                char v56 = 4;
                goto LABEL_101;
              case 4:
                char v56 = 32;
LABEL_101:
                *(unsigned char *)(a1 + v60[65]) |= v56;
                break;
              default:
                continue;
            }
          }
        }
LABEL_102:
        if (v59) {
          unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
        }
        else {
          unint64_t v3 = 0;
        }
        if (v64)
        {
          char v57 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      case 5:
        if ((v8 & 1) == 0) {
          goto LABEL_73;
        }
        char v46 = 0;
        unsigned int v47 = 0;
        uint64_t v48 = 0;
        *(unsigned char *)(a1 + 76) |= 1u;
        while (2)
        {
          uint64_t v49 = *v20;
          uint64_t v50 = *(void *)(v3 + v49);
          unint64_t v51 = v50 + 1;
          if (v50 == -1 || v51 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v52 = *(unsigned char *)(*(void *)(v3 + *v22) + v50);
            *(void *)(v3 + v49) = v51;
            v48 |= (unint64_t)(v52 & 0x7F) << v46;
            if (v52 < 0)
            {
              v46 += 7;
              BOOL v30 = v47++ >= 9;
              if (v30)
              {
                uint64_t v48 = 0;
                goto LABEL_78;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          uint64_t v48 = 0;
        }
LABEL_78:
        *(void *)(a1 + 32) = v48;
        goto LABEL_89;
      default:
        if ((v61 & 1) == 0 || (*(unsigned char *)(a1 + 76) & 2) != 0)
        {
LABEL_73:
          char v53 = PBReaderSkipValueWithTag();
          uint64_t v22 = (int *)MEMORY[0x1E4F940B8];
          BOOL v21 = (int *)MEMORY[0x1E4F940C8];
          if ((v53 & 1) == 0)
          {
            int v59 = 0;
LABEL_91:
            char v60 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__flags;
            goto LABEL_92;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v41 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            uint64_t v42 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v41;
          }
          int v43 = PBUnknownFieldAdd();
          BOOL v21 = (int *)MEMORY[0x1E4F940C8];
          uint64_t v22 = (int *)MEMORY[0x1E4F940B8];
          if (!v43)
          {
            int v59 = 0;
            char v60 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__flags;
            goto LABEL_93;
          }
        }
LABEL_89:
        if (!(v62 & 1 | (v7 != 0))) {
          goto LABEL_90;
        }
        continue;
    }
  }
}

void sub_189AD56AC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189AD57BC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189AD58CC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189AD5DB0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDLinkedPlaceReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 68))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDLinkedPlaceReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 72));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 64) = [v8 position];
  *(_DWORD *)(a1 + 68) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOPDLinkedPlaceReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOPDLinkedPlaceReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDLinkedPlaceReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    [*(id *)(a1 + 40) readAll:1];
    [*(id *)(a1 + 24) readAll:1];
    [*(id *)(a1 + 56) readAll:1];
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
  return Specified;
}

void sub_189AD63B8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189AD65C0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDLinkedPlaceIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  BOOL v2 = (*(unsigned char *)(a1 + 76) & 0x7C) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
  return v2;
}

void sub_189AD682C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189AD6C48(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDLinkedServiceReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  int v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 52);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 48)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  unsigned int v12 = ((*(unsigned __int8 *)(a1 + 60) >> 3) & 1)
      + (*(unsigned char *)(a1 + 60) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 1) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 2) & 1);
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 > 1;
        char v17 = v16 & ~(_BYTE)v11 | v9;
        unsigned __int8 v18 = v16 | v11;
        char v53 = v17;
        char v54 = v18 | v17;
        if ((v18 | v8)) {
          id v19 = 0;
        }
        else {
          id v19 = a3;
        }
        char v55 = (v19 == 0) | v18;
        BOOL v56 = v18;
        unsigned int v20 = (int *)MEMORY[0x1E4F940E8];
        BOOL v21 = (int *)MEMORY[0x1E4F940C8];
        uint64_t v22 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v9;
LABEL_8:
        uint64_t v14 = v10;
        uint64_t v15 = v11;
LABEL_10:
        ++v7;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v21)) {
      goto LABEL_72;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      if (v24++ >= 9)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_25:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_72:
      int v51 = 1;
      goto LABEL_73;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v56;
    if ((v55 & 1) == 0)
    {
      char v35 = v19;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    if (v33 == 3)
    {
      if (v34 && (*(unsigned char *)(a1 + 60) & 4) == 0)
      {
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_90;
        }
        char v39 = objc_alloc_init(GEOPDBusinessHours);
        if (!GEOPDBusinessHoursReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1)) {
          goto LABEL_89;
        }
        PBReaderRecallMark();
        -[GEOPDLinkedService _addNoFlagsHours:](a1, v39);

        goto LABEL_70;
      }
      goto LABEL_63;
    }
    if (v33 == 2) {
      break;
    }
    if (v33 == 1)
    {
      if (v34)
      {
        if ((*(unsigned char *)(a1 + 60) & 2) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_90;
          }
          char v39 = objc_alloc_init(GEOPDEntity);
          if (!GEOPDEntityReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1)) {
            goto LABEL_89;
          }
          PBReaderRecallMark();
          uint64_t v40 = 24;
LABEL_56:
          id v41 = *(void **)(a1 + v40);
          *(void *)(a1 + v40) = v39;

          --v7;
LABEL_70:
          BOOL v21 = (int *)MEMORY[0x1E4F940C8];
          goto LABEL_71;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_90;
        }
        char v46 = *(unsigned char *)(a1 + 60) << 6;
LABEL_69:
        v7 += v46 >> 7;
        goto LABEL_70;
      }
    }
    else if ((v53 & 1) != 0 && (*(unsigned char *)(a1 + 60) & 1) == 0)
    {
      if (!*(void *)(a1 + 16))
      {
        id v42 = objc_alloc_init(MEMORY[0x1E4F940B0]);
        int v43 = *(void **)(a1 + 16);
        *(void *)(a1 + 16) = v42;
      }
      int v44 = PBUnknownFieldAdd();
      BOOL v21 = (int *)MEMORY[0x1E4F940C8];
      if (!v44)
      {
        int v51 = 0;
        char v52 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__flags;
        goto LABEL_75;
      }
      goto LABEL_71;
    }
LABEL_63:
    char v45 = PBReaderSkipValueWithTag();
    BOOL v21 = (int *)MEMORY[0x1E4F940C8];
    if ((v45 & 1) == 0)
    {
      int v51 = 0;
LABEL_73:
      char v52 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__flags;
      goto LABEL_74;
    }
LABEL_71:
    if (!(v54 & 1 | (v7 != 0))) {
      goto LABEL_72;
    }
  }
  if (!v34) {
    goto LABEL_63;
  }
  if ((*(unsigned char *)(a1 + 60) & 8) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0) {
      goto LABEL_90;
    }
    char v46 = 16 * *(unsigned char *)(a1 + 60);
    goto LABEL_69;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_90;
  }
  char v39 = objc_alloc_init(GEOPDPlaceInfo);
  if (GEOPDPlaceInfoReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1))
  {
    PBReaderRecallMark();
    uint64_t v40 = 40;
    goto LABEL_56;
  }
LABEL_89:

LABEL_90:
  int v51 = 0;
  char v52 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__flags;
  BOOL v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_74:
  if ((v53 & 1) == 0) {
    goto LABEL_76;
  }
LABEL_75:
  *(unsigned char *)(a1 + v52[73]) |= 1u;
LABEL_76:
  if (v56 || (v51 & 1) == 0)
  {
    *(unsigned char *)(a1 + v52[73]) |= 2u;
    *(unsigned char *)(a1 + v52[73]) |= 8u;
    *(unsigned char *)(a1 + v52[73]) |= 4u;
  }
  else if (v19)
  {
    while (1)
    {
      int v47 = *v19++;
      char v48 = 2;
      switch(v47)
      {
        case 0:
          goto LABEL_83;
        case 1:
          goto LABEL_82;
        case 2:
          char v48 = 8;
          goto LABEL_82;
        case 3:
          char v48 = 4;
LABEL_82:
          *(unsigned char *)(a1 + v52[73]) |= v48;
          break;
        default:
          continue;
      }
    }
  }
LABEL_83:
  if (v51) {
    unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
  }
  else {
    unint64_t v3 = 0;
  }
  if (v56)
  {
    uint64_t v49 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_189AD7378(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189AD7440(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189AD7A84(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDLinkedServiceCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  [*(id *)(a1 + 24) readAll:1];
  -[GEOPDPlaceInfo readAll:](*(void *)(a1 + 40), 1);
  long long v9 = 0u;
  long long v10 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  id v2 = *(id *)(a1 + 32);
  uint64_t v3 = [v2 countByEnumeratingWithState:&v7 objects:v11 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v8;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v8 != v5) {
          objc_enumerationMutation(v2);
        }
        -[GEOPDBusinessHours readAll:](*(void *)(*((void *)&v7 + 1) + 8 * v6++), 1);
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v7 objects:v11 count:16];
    }
    while (v4);
  }
}

unint64_t GEOPDLinkedServiceReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 52))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDLinkedServiceReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)long long v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = [v8 position];
  *(_DWORD *)(a1 + 52) = [v8 length];
  if (a3) {
    long long v9 = (int *)&GEOPDLinkedServiceReadAllFrom_recursiveTag;
  }
  else {
    long long v9 = (int *)&GEOPDLinkedServiceReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDLinkedServiceReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOPDLinkedServiceCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_189AD7E1C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189AD80F4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189AD8360(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDLinkedServiceFilterReadAllFrom(uint64_t a1, void *a2)
{
  uint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    uint64_t v6 = (int *)MEMORY[0x1E4F940C8];
    long long v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      int v8 = v3[*v6];
      if (*(void *)&v3[*v4] >= *(void *)&v3[*v5]) {
        break;
      }
      if (v3[*v6])
      {
        int v8 = 1;
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      uint64_t v11 = 0;
      while (1)
      {
        uint64_t v12 = *v4;
        uint64_t v13 = *(void *)&v3[v12];
        unint64_t v14 = v13 + 1;
        if (v13 == -1 || v14 > *(void *)&v3[*v5]) {
          break;
        }
        char v15 = *(unsigned char *)(*(void *)&v3[*v7] + v13);
        *(void *)&v3[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0) {
          goto LABEL_13;
        }
        v9 += 7;
        if (v10++ >= 9)
        {
          char v17 = 0;
          int v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      int v8 = v3[*v6];
      if (v3[*v6]) {
        char v17 = 0;
      }
      else {
        char v17 = v11;
      }
LABEL_16:
      if (v8) {
        BOOL v18 = 1;
      }
      else {
        BOOL v18 = (v17 & 7) == 4;
      }
      if (v18) {
        break;
      }
      if (!*(void *)(a1 + 8))
      {
        id v19 = objc_alloc_init(MEMORY[0x1E4F940B0]);
        unsigned int v20 = *(void **)(a1 + 8);
        *(void *)(a1 + 8) = v19;
      }
      if ((PBUnknownFieldAdd() & 1) == 0) {
        goto LABEL_23;
      }
    }
    BOOL v21 = v8 == 0;
  }
  else
  {
LABEL_23:
    BOOL v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_189AD89A8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id GEOPDLocalTimeRangeDescription(unsigned int *a1)
{
  id v2 = NSString;
  uint64_t v3 = _GEOWiFiQualityTimeRangeDictionaryRepresentation(a1);
  uint64_t v4 = [v2 stringWithFormat:@"GEOPDLocalTimeRange<%p> %@", a1, v3];

  return v4;
}

BOOL GEOPDLocalTimeRangeReadFrom(uint64_t a1, uint64_t a2)
{
  return GEOPDLocalTimeRangeReadAllFrom(a1, a2);
}

BOOL GEOPDLocalTimeRangeReadAllFrom(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    long long v7 = (_DWORD *)(a1 + 4);
    int v8 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        uint64_t v12 = *v3;
        uint64_t v13 = *(void *)(a2 + v12);
        unint64_t v14 = v13 + 1;
        if (v13 == -1 || v14 > *(void *)(a2 + *v4)) {
          break;
        }
        char v15 = *(unsigned char *)(*(void *)(a2 + *v8) + v13);
        *(void *)(a2 + v12) = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0) {
          goto LABEL_12;
        }
        v9 += 7;
        if (v10++ >= 9)
        {
          unint64_t v11 = 0;
          int v17 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v17 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v11 = 0;
      }
LABEL_14:
      if (v17 || (v11 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      if ((v11 >> 3) == 2) {
        break;
      }
      if ((v11 >> 3) == 1)
      {
        char v19 = 0;
        unsigned int v20 = 0;
        uint64_t v21 = 0;
        *(unsigned char *)(a1 + 8) |= 1u;
        while (1)
        {
          uint64_t v22 = *v3;
          uint64_t v23 = *(void *)(a2 + v22);
          unint64_t v24 = v23 + 1;
          if (v23 == -1 || v24 > *(void *)(a2 + *v4))
          {
            uint64_t v27 = (_DWORD *)a1;
            goto LABEL_38;
          }
          char v25 = *(unsigned char *)(*(void *)(a2 + *v8) + v23);
          *(void *)(a2 + v22) = v24;
          v21 |= (unint64_t)(v25 & 0x7F) << v19;
          if ((v25 & 0x80) == 0) {
            break;
          }
          v19 += 7;
          BOOL v26 = v20++ > 8;
          if (v26)
          {
            LODWORD(v21) = 0;
            uint64_t v27 = (_DWORD *)a1;
            goto LABEL_41;
          }
        }
        uint64_t v27 = (_DWORD *)a1;
LABEL_39:
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v21) = 0;
        }
LABEL_41:
        *uint64_t v27 = v21;
        goto LABEL_42;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_42:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    char v28 = 0;
    unsigned int v29 = 0;
    uint64_t v21 = 0;
    *(unsigned char *)(a1 + 8) |= 2u;
    while (1)
    {
      uint64_t v30 = *v3;
      uint64_t v31 = *(void *)(a2 + v30);
      unint64_t v32 = v31 + 1;
      if (v31 == -1 || v32 > *(void *)(a2 + *v4)) {
        break;
      }
      char v33 = *(unsigned char *)(*(void *)(a2 + *v8) + v31);
      *(void *)(a2 + v30) = v32;
      v21 |= (unint64_t)(v33 & 0x7F) << v28;
      if ((v33 & 0x80) == 0)
      {
        uint64_t v27 = v7;
        goto LABEL_39;
      }
      v28 += 7;
      BOOL v26 = v29++ > 8;
      if (v26)
      {
        LODWORD(v21) = 0;
        uint64_t v27 = v7;
        goto LABEL_41;
      }
    }
    uint64_t v27 = v7;
LABEL_38:
    *(unsigned char *)(a2 + *v5) = 1;
    goto LABEL_39;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL GEOPDLocalTimeRangeEquals(uint64_t a1, uint64_t a2)
{
  return *(void *)a1 == *(void *)a2 && *(_DWORD *)(a1 + 8) == (unint64_t)*(unsigned int *)(a2 + 8);
}

uint64_t GEOPDLocalTimeRangeHash()
{
  return PBHashBytes();
}

unint64_t GEOPDLocalizedAddressReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  uint64_t v7 = 0;
  uint64_t v8 = 0;
  char v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  int v12 = ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1)
      + (*(unsigned char *)(a1 + 52) & 1)
      + ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1);
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v10])
    {
      case -4:
        ++v12;
        uint64_t v13 = v7;
        goto LABEL_8;
      case -3:
        char v9 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v13 = v7;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 != 0;
        char v17 = v16 & ~(_BYTE)v11 | v8;
        unsigned __int8 v18 = v16 | v11;
        char v54 = v17;
        char v55 = v18 | v17;
        if ((v18 | v9)) {
          char v19 = 0;
        }
        else {
          char v19 = a3;
        }
        char v56 = (v19 == 0) | v18;
        BOOL v57 = v18;
        unsigned int v20 = (int *)MEMORY[0x1E4F940E8];
        uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
        uint64_t v22 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v7;
        uint64_t v14 = v8;
LABEL_8:
        uint64_t v15 = v11;
LABEL_10:
        ++v10;
        uint64_t v7 = v13;
        uint64_t v8 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v21)) {
      goto LABEL_64;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      if (v24++ >= 9)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_25:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_64:
      int v52 = 1;
      goto LABEL_65;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v57;
    if ((v56 & 1) == 0)
    {
      char v35 = v19;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    if (v33 == 3) {
      break;
    }
    if (v33 == 1)
    {
      if (v34)
      {
        if ((*(unsigned char *)(a1 + 52) & 4) == 0)
        {
          uint64_t v39 = PBReaderReadString();
          uint64_t v40 = *(void **)(a1 + 32);
          *(void *)(a1 + 32) = v39;
          goto LABEL_48;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_85;
        }
        char v46 = 32 * *(unsigned char *)(a1 + 52);
        goto LABEL_61;
      }
    }
    else if ((v54 & 1) != 0 && (*(unsigned char *)(a1 + 52) & 1) == 0)
    {
      if (!*(void *)(a1 + 16))
      {
        id v42 = objc_alloc_init(MEMORY[0x1E4F940B0]);
        int v43 = *(void **)(a1 + 16);
        *(void *)(a1 + 16) = v42;
      }
      int v44 = PBUnknownFieldAdd();
      uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
      if (!v44)
      {
        int v52 = 0;
        char v53 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__flags;
        goto LABEL_67;
      }
      goto LABEL_63;
    }
LABEL_55:
    char v45 = PBReaderSkipValueWithTag();
    uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
    if ((v45 & 1) == 0)
    {
      int v52 = 0;
LABEL_65:
      char v53 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__flags;
      goto LABEL_66;
    }
LABEL_63:
    if (!(v55 & 1 | (v10 != 0))) {
      goto LABEL_64;
    }
  }
  if (!v34) {
    goto LABEL_55;
  }
  if ((*(unsigned char *)(a1 + 52) & 2) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0) {
      goto LABEL_85;
    }
    char v46 = *(unsigned char *)(a1 + 52) << 6;
LABEL_61:
    v10 += v46 >> 7;
    goto LABEL_62;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_85;
  }
  id v41 = objc_alloc_init(GEOAddress);
  if (GEOAddressReadAllFrom((uint64_t)v41, (void *)v3, v7 & 1))
  {
    PBReaderRecallMark();
    uint64_t v40 = *(void **)(a1 + 24);
    *(void *)(a1 + 24) = v41;
LABEL_48:

    --v10;
LABEL_62:
    uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
    goto LABEL_63;
  }

LABEL_85:
  int v52 = 0;
  char v53 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__flags;
  uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_66:
  if ((v54 & 1) == 0) {
    goto LABEL_68;
  }
LABEL_67:
  *(unsigned char *)(a1 + v53[78]) |= 1u;
LABEL_68:
  if (v57 || (v52 & 1) == 0)
  {
    *(unsigned char *)(a1 + v53[78]) |= 4u;
    *(unsigned char *)(a1 + v53[78]) |= 2u;
    goto LABEL_78;
  }
  if (v19)
  {
    while (2)
    {
      while (1)
      {
        int v48 = *v19++;
        int v47 = v48;
        if (v48 == 1) {
          break;
        }
        if (v47 == 3)
        {
          char v49 = 2;
          goto LABEL_77;
        }
        if (!v47) {
          goto LABEL_78;
        }
      }
      char v49 = 4;
LABEL_77:
      *(unsigned char *)(a1 + v53[78]) |= v49;
      continue;
    }
  }
LABEL_78:
  if (v52) {
    unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
  }
  else {
    unint64_t v3 = 0;
  }
  if (v57)
  {
    uint64_t v50 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_189AD96EC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189AD97E4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDLocalizedAddressReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDLocalizedAddressReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    char v9 = (int *)&GEOPDLocalizedAddressReadAllFrom_recursiveTag;
  }
  else {
    char v9 = (int *)&GEOPDLocalizedAddressReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDLocalizedAddressReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    [*(id *)(a1 + 24) readAll:1];
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_189AD9B7C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189AD9D0C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL _GEOPDLocalizedAddressIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  if ((*(unsigned char *)(a1 + 52) & 0xC) != 0) {
    return 1;
  }
  if ((*(unsigned char *)(a1 + 52) & 2) == 0) {
    return 0;
  }
  uint64_t v3 = *(void *)(a1 + 24);

  return GEOAddressIsDirty(v3);
}

os_unfair_lock_s *GEOPDLocalizedAddressIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    BOOL IsDirty = _GEOPDLocalizedAddressIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 12);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_189AD9F5C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDLocalizedSpokenStructuredAddressReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  uint64_t v7 = 0;
  uint64_t v8 = 0;
  char v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  int v12 = ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1)
      + (*(unsigned char *)(a1 + 52) & 1)
      + ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1);
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v10])
    {
      case -4:
        ++v12;
        uint64_t v13 = v7;
        goto LABEL_8;
      case -3:
        char v9 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v13 = v7;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 != 0;
        char v17 = v16 & ~(_BYTE)v11 | v8;
        unsigned __int8 v18 = v16 | v11;
        char v54 = v17;
        char v55 = v18 | v17;
        if ((v18 | v9)) {
          char v19 = 0;
        }
        else {
          char v19 = a3;
        }
        char v56 = (v19 == 0) | v18;
        BOOL v57 = v18;
        unsigned int v20 = (int *)MEMORY[0x1E4F940E8];
        uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
        uint64_t v22 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v7;
        uint64_t v14 = v8;
LABEL_8:
        uint64_t v15 = v11;
LABEL_10:
        ++v10;
        uint64_t v7 = v13;
        uint64_t v8 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v21)) {
      goto LABEL_64;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      if (v24++ >= 9)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_25:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_64:
      int v52 = 1;
      goto LABEL_65;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v57;
    if ((v56 & 1) == 0)
    {
      char v35 = v19;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    if (v33 == 3) {
      break;
    }
    if (v33 == 1)
    {
      if (v34)
      {
        if ((*(unsigned char *)(a1 + 52) & 2) == 0)
        {
          uint64_t v39 = PBReaderReadString();
          uint64_t v40 = *(void **)(a1 + 24);
          *(void *)(a1 + 24) = v39;
          goto LABEL_48;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_85;
        }
        char v46 = *(unsigned char *)(a1 + 52) << 6;
        goto LABEL_61;
      }
    }
    else if ((v54 & 1) != 0 && (*(unsigned char *)(a1 + 52) & 1) == 0)
    {
      if (!*(void *)(a1 + 16))
      {
        id v42 = objc_alloc_init(MEMORY[0x1E4F940B0]);
        int v43 = *(void **)(a1 + 16);
        *(void *)(a1 + 16) = v42;
      }
      int v44 = PBUnknownFieldAdd();
      uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
      if (!v44)
      {
        int v52 = 0;
        char v53 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__flags;
        goto LABEL_67;
      }
      goto LABEL_63;
    }
LABEL_55:
    char v45 = PBReaderSkipValueWithTag();
    uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
    if ((v45 & 1) == 0)
    {
      int v52 = 0;
LABEL_65:
      char v53 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__flags;
      goto LABEL_66;
    }
LABEL_63:
    if (!(v55 & 1 | (v10 != 0))) {
      goto LABEL_64;
    }
  }
  if (!v34) {
    goto LABEL_55;
  }
  if ((*(unsigned char *)(a1 + 52) & 4) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0) {
      goto LABEL_85;
    }
    char v46 = 32 * *(unsigned char *)(a1 + 52);
LABEL_61:
    v10 += v46 >> 7;
    goto LABEL_62;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_85;
  }
  id v41 = objc_alloc_init(GEOStructuredAddress);
  if (GEOStructuredAddressReadAllFrom(v41, (void *)v3))
  {
    PBReaderRecallMark();
    uint64_t v40 = *(void **)(a1 + 32);
    *(void *)(a1 + 32) = v41;
LABEL_48:

    --v10;
LABEL_62:
    uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
    goto LABEL_63;
  }

LABEL_85:
  int v52 = 0;
  char v53 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__flags;
  uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_66:
  if ((v54 & 1) == 0) {
    goto LABEL_68;
  }
LABEL_67:
  *(unsigned char *)(a1 + v53[83]) |= 1u;
LABEL_68:
  if (v57 || (v52 & 1) == 0)
  {
    *(unsigned char *)(a1 + v53[83]) |= 2u;
    *(unsigned char *)(a1 + v53[83]) |= 4u;
    goto LABEL_78;
  }
  if (v19)
  {
    while (2)
    {
      while (1)
      {
        int v48 = *v19++;
        int v47 = v48;
        if (v48 == 1) {
          break;
        }
        if (v47 == 3)
        {
          char v49 = 4;
          goto LABEL_77;
        }
        if (!v47) {
          goto LABEL_78;
        }
      }
      char v49 = 2;
LABEL_77:
      *(unsigned char *)(a1 + v53[83]) |= v49;
      continue;
    }
  }
LABEL_78:
  if (v52) {
    unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
  }
  else {
    unint64_t v3 = 0;
  }
  if (v57)
  {
    uint64_t v50 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_189ADA964(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189ADAA44(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDLocalizedSpokenStructuredAddressReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDLocalizedSpokenStructuredAddressReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    char v9 = (int *)&GEOPDLocalizedSpokenStructuredAddressReadAllFrom_recursiveTag;
  }
  else {
    char v9 = (int *)&GEOPDLocalizedSpokenStructuredAddressReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDLocalizedSpokenStructuredAddressReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_189ADACAC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189ADAE4C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189ADAFC0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDLocationDataReadAllFrom(uint64_t a1, void *a2, int a3)
{
  uint64_t v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    uint64_t v6 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v7 = (int *)MEMORY[0x1E4F940E0];
    id v8 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v5[*MEMORY[0x1E4F940E8]] < *(void *)&v5[*MEMORY[0x1E4F940E0]])
    {
      char v9 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v5[*v8]) {
          break;
        }
        char v10 = 0;
        unsigned int v11 = 0;
        unint64_t v12 = 0;
        while (1)
        {
          uint64_t v13 = *v6;
          uint64_t v14 = *(void *)&v5[v13];
          unint64_t v15 = v14 + 1;
          if (v14 == -1 || v15 > *(void *)&v5[*v7]) {
            break;
          }
          char v16 = *(unsigned char *)(*(void *)&v5[*v9] + v14);
          *(void *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0) {
            goto LABEL_13;
          }
          v10 += 7;
          if (v11++ >= 9)
          {
            unint64_t v12 = 0;
            int v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        int v18 = v5[*v8];
        if (v5[*v8]) {
          unint64_t v12 = 0;
        }
LABEL_15:
        if (v18 || (v12 & 7) == 4) {
          break;
        }
        if ((v12 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_29;
          }
          unsigned int v20 = objc_alloc_init(GEOLocalizedString);
          if (!GEOLocalizedStringReadAllFrom((uint64_t)v20, v5, a3))
          {

            goto LABEL_29;
          }
          PBReaderRecallMark();
          -[GEOPDLocationData addLocationName:](a1, v20);
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v21 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            uint64_t v22 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v21;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_29;
          }
        }
      }
      while (*(void *)&v5[*v6] < *(void *)&v5[*v7]);
    }
    BOOL v23 = v5[*v8] == 0;
  }
  else
  {
LABEL_29:
    BOOL v23 = 0;
  }
  objc_sync_exit(v5);

  return v23;
}

void sub_189ADB7EC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDLocationEventReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 60);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 56)];
  uint64_t v7 = 0;
  uint64_t v8 = 0;
  char v9 = 0;
  uint64_t v10 = 0;
  int v11 = ((*(unsigned __int8 *)(a1 + 68) >> 4) & 1)
      + ((*(unsigned __int8 *)(a1 + 68) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 68) >> 2) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v10])
    {
      case -4:
        ++v11;
        uint64_t v12 = v7;
        goto LABEL_8;
      case -3:
        char v9 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_8;
      case 0:
        BOOL v14 = v11 != 0;
        char v15 = v14 & ~(_BYTE)v7;
        unsigned __int8 v16 = v14 | v7;
        char v58 = v15 | v8;
        char v59 = v16 | v15 | v8;
        if ((v16 | v9)) {
          char v17 = 0;
        }
        else {
          char v17 = a3;
        }
        char v60 = (v17 == 0) | v16;
        BOOL v61 = v16;
        int v18 = (int *)MEMORY[0x1E4F940E8];
        char v19 = (int *)MEMORY[0x1E4F940C8];
        unsigned int v20 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v11;
LABEL_7:
        uint64_t v12 = v7;
        uint64_t v13 = v8;
LABEL_8:
        ++v10;
        uint64_t v7 = v12;
        uint64_t v8 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v18) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v19)) {
      goto LABEL_71;
    }
    char v21 = 0;
    unsigned int v22 = 0;
    unint64_t v23 = 0;
    while (1)
    {
      uint64_t v24 = *v18;
      uint64_t v25 = *(void *)(v3 + v24);
      unint64_t v26 = v25 + 1;
      if (v25 == -1 || v26 > *(void *)(v3 + *v6)) {
        break;
      }
      char v27 = *(unsigned char *)(*(void *)(v3 + *v20) + v25);
      *(void *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0) {
        goto LABEL_23;
      }
      v21 += 7;
      if (v22++ >= 9)
      {
        unint64_t v23 = 0;
        int v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_25;
      }
    }
    *(unsigned char *)(v3 + *v19) = 1;
LABEL_23:
    int v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(unsigned char *)(v3 + *v19)) {
      unint64_t v23 = 0;
    }
LABEL_25:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_71:
      int v56 = 1;
      goto LABEL_72;
    }
    unint64_t v31 = v23 >> 3;
    BOOL v32 = v61;
    if ((v60 & 1) == 0)
    {
      unint64_t v33 = v17;
      do
      {
        int v35 = *v33++;
        int v34 = v35;
        BOOL v32 = v35 != 0;
        if (v35) {
          BOOL v36 = v34 == v31;
        }
        else {
          BOOL v36 = 1;
        }
      }
      while (!v36);
    }
    switch((int)v31)
    {
      case 1:
        if (!v32) {
          goto LABEL_58;
        }
        if ((*(unsigned char *)(a1 + 68) & 0x10) == 0)
        {
          uint64_t v37 = PBReaderReadString();
          uint64_t v38 = 48;
          goto LABEL_49;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_90;
        }
        char v49 = 8 * *(unsigned char *)(a1 + 68);
        goto LABEL_64;
      case 2:
        if (!v32) {
          goto LABEL_58;
        }
        if ((*(unsigned char *)(a1 + 68) & 8) == 0)
        {
          uint64_t v37 = PBReaderReadString();
          uint64_t v38 = 40;
LABEL_49:
          id v42 = *(void **)(a1 + v38);
          *(void *)(a1 + v38) = v37;

          char v19 = (int *)MEMORY[0x1E4F940C8];
          --v10;
LABEL_70:
          if (!(v59 & 1 | (v10 != 0))) {
            goto LABEL_71;
          }
          continue;
        }
        if (PBReaderSkipValueWithTag())
        {
          char v49 = 16 * *(unsigned char *)(a1 + 68);
LABEL_64:
          v10 += v49 >> 7;
          char v19 = (int *)MEMORY[0x1E4F940C8];
          goto LABEL_70;
        }
LABEL_90:
        int v56 = 0;
        char v19 = (int *)MEMORY[0x1E4F940C8];
LABEL_72:
        BOOL v57 = &OBJC_IVAR___GEOPDAddressComponent__unknownFields;
        if (v58) {
LABEL_73:
        }
          *(unsigned char *)(a1 + v57[569]) |= 4u;
        if (v61 || (v56 & 1) == 0)
        {
          *(unsigned char *)(a1 + v57[569]) |= 0x10u;
          *(unsigned char *)(a1 + v57[569]) |= 8u;
          goto LABEL_84;
        }
        if (v17)
        {
          while (1)
          {
            int v53 = *v17++;
            int v52 = v53;
            if (v53 == 1) {
              break;
            }
            if (v52 == 2)
            {
              char v51 = 8;
LABEL_80:
              *(unsigned char *)(a1 + v57[569]) |= v51;
            }
            else if (!v52)
            {
              goto LABEL_84;
            }
          }
          char v51 = 16;
          goto LABEL_80;
        }
LABEL_84:
        if (v56) {
          unint64_t v3 = *(unsigned char *)(v3 + *v19) == 0;
        }
        else {
          unint64_t v3 = 0;
        }
        if (v61)
        {
          char v54 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      case 3:
        if ((v9 & 1) == 0) {
          goto LABEL_58;
        }
        *(unsigned char *)(a1 + 68) |= 2u;
        uint64_t v43 = *v18;
        unint64_t v44 = *(void *)(v3 + v43);
        if (v44 <= 0xFFFFFFFFFFFFFFF7 && v44 + 8 <= *(void *)(v3 + *v6))
        {
          uint64_t v45 = *(void *)(*(void *)(v3 + *v20) + v44);
          *(void *)(v3 + v43) = v44 + 8;
        }
        else
        {
          *(unsigned char *)(v3 + *v19) = 1;
          uint64_t v45 = 0;
        }
        uint64_t v50 = 32;
        goto LABEL_69;
      case 4:
        if ((v9 & 1) == 0) {
          goto LABEL_58;
        }
        *(unsigned char *)(a1 + 68) |= 1u;
        uint64_t v46 = *v18;
        unint64_t v47 = *(void *)(v3 + v46);
        if (v47 <= 0xFFFFFFFFFFFFFFF7 && v47 + 8 <= *(void *)(v3 + *v6))
        {
          uint64_t v45 = *(void *)(*(void *)(v3 + *v20) + v47);
          *(void *)(v3 + v46) = v47 + 8;
        }
        else
        {
          *(unsigned char *)(v3 + *v19) = 1;
          uint64_t v45 = 0;
        }
        uint64_t v50 = 24;
LABEL_69:
        *(void *)(a1 + v50) = v45;
        goto LABEL_70;
      default:
        if ((v58 & 1) == 0 || (*(unsigned char *)(a1 + 68) & 4) != 0)
        {
LABEL_58:
          char v48 = PBReaderSkipValueWithTag();
          char v19 = (int *)MEMORY[0x1E4F940C8];
          if ((v48 & 1) == 0)
          {
            int v56 = 0;
            goto LABEL_72;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v39 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            uint64_t v40 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v39;
          }
          int v41 = PBUnknownFieldAdd();
          char v19 = (int *)MEMORY[0x1E4F940C8];
          if (!v41)
          {
            int v56 = 0;
            BOOL v57 = &OBJC_IVAR___GEOPDAddressComponent__unknownFields;
            goto LABEL_73;
          }
        }
        goto LABEL_70;
    }
  }
}

void sub_189ADC620(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189ADC700(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDLocationEventReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 60))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDLocationEventReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = [v8 position];
  *(_DWORD *)(a1 + 60) = [v8 length];
  if (a3) {
    char v9 = (int *)&GEOPDLocationEventReadAllFrom_recursiveTag;
  }
  else {
    char v9 = (int *)&GEOPDLocationEventReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDLocationEventReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_189ADC96C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189ADCB58(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189ADCD28(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDLocationEventFilterReadAllFrom(uint64_t a1, void *a2)
{
  unint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    uint64_t v6 = (int *)MEMORY[0x1E4F940C8];
    uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      int v8 = v3[*v6];
      if (*(void *)&v3[*v4] >= *(void *)&v3[*v5]) {
        break;
      }
      if (v3[*v6])
      {
        int v8 = 1;
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      uint64_t v11 = 0;
      while (1)
      {
        uint64_t v12 = *v4;
        uint64_t v13 = *(void *)&v3[v12];
        unint64_t v14 = v13 + 1;
        if (v13 == -1 || v14 > *(void *)&v3[*v5]) {
          break;
        }
        char v15 = *(unsigned char *)(*(void *)&v3[*v7] + v13);
        *(void *)&v3[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0) {
          goto LABEL_13;
        }
        v9 += 7;
        if (v10++ >= 9)
        {
          char v17 = 0;
          int v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      int v8 = v3[*v6];
      if (v3[*v6]) {
        char v17 = 0;
      }
      else {
        char v17 = v11;
      }
LABEL_16:
      if (v8) {
        BOOL v18 = 1;
      }
      else {
        BOOL v18 = (v17 & 7) == 4;
      }
      if (v18) {
        break;
      }
      if (!*(void *)(a1 + 8))
      {
        id v19 = objc_alloc_init(MEMORY[0x1E4F940B0]);
        unsigned int v20 = *(void **)(a1 + 8);
        *(void *)(a1 + 8) = v19;
      }
      if ((PBUnknownFieldAdd() & 1) == 0) {
        goto LABEL_23;
      }
    }
    BOOL v21 = v8 == 0;
  }
  else
  {
LABEL_23:
    BOOL v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_189ADD490(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDLocationInfoItemReadAllFrom(uint64_t a1, void *a2)
{
  unint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    uint64_t v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          char v18 = 0;
          unsigned int v19 = 0;
          uint64_t v20 = 0;
          *(unsigned char *)(a1 + 20) |= 1u;
          while (1)
          {
            uint64_t v21 = *v4;
            uint64_t v22 = *(void *)&v3[v21];
            unint64_t v23 = v22 + 1;
            if (v22 == -1 || v23 > *(void *)&v3[*v5]) {
              break;
            }
            char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
            *(void *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0) {
              goto LABEL_32;
            }
            v18 += 7;
            BOOL v15 = v19++ >= 9;
            if (v15)
            {
              LODWORD(v20) = 0;
              goto LABEL_34;
            }
          }
          v3[*v6] = 1;
LABEL_32:
          if (v3[*v6]) {
            LODWORD(v20) = 0;
          }
LABEL_34:
          *(_DWORD *)(a1 + 16) = v20;
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v25 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            unint64_t v26 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v25;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_37;
          }
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v27 = v3[*v6] == 0;
  }
  else
  {
LABEL_37:
    BOOL v27 = 0;
  }
  objc_sync_exit(v3);

  return v27;
}

void sub_189ADDB10(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189ADDFF0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189ADE158(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189ADE2C4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDMapsResultCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  [*(id *)(a1 + 48) readAll:1];
  -[GEOPDCollectionResult readAll:](*(void *)(a1 + 32), 1);
  -[GEOPDPublisherResult readAll:](*(void *)(a1 + 56), 1);
  -[GEOPDPlaceQuestionnaireResult readAll:](*(void *)(a1 + 40), 1);
  uint64_t v2 = *(void *)(a1 + 24);

  -[GEOPDBatchReverseGeocodeResult readAll:](v2, 1);
}

unint64_t GEOPDMapsResultReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOPDMapsResultReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189ADF5A8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

os_unfair_lock_s *GEOPDMapsResultIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOPDMapsResultIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 18);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void GEOPDMapsResultClearSensitiveFields(void *a1, uint64_t a2, int a3)
{
  if (a3)
  {
    if ([a1 hasPlace]
      && ([a1 place],
          uint64_t v5 = objc_claimAutoreleasedReturnValue(),
          unsigned int v6 = GEOPDPlaceHasSensitiveFields(v5, a2),
          v5,
          v6))
    {
      uint64_t v7 = [a1 place];
      char v8 = (void *)[v7 copy];

      unsigned int v9 = [v8 requestData];
      [v9 clearSensitiveFields:a2];

      [a1 setPlace:v8];
    }
    else
    {
      char v8 = [a1 place];
      [v8 clearSensitiveFields:a2];
    }

    if ([a1 hasBatchReverseGeocode])
    {
      uint64_t v11 = [a1 batchReverseGeocode];
      int HasSensitiveFields = GEOPDBatchReverseGeocodeResultHasSensitiveFields(v11, a2);

      if (HasSensitiveFields)
      {
        unint64_t v13 = [a1 batchReverseGeocode];
        id v15 = (id)[v13 copy];

        GEOPDBatchReverseGeocodeResultClearSensitiveFields((uint64_t)v15, a2, 0);
        [a1 setBatchReverseGeocode:v15];
        goto LABEL_12;
      }
    }
  }
  else
  {
    unint64_t v10 = [a1 place];
    [v10 clearSensitiveFields:a2];
  }
  uint64_t v14 = [a1 batchReverseGeocode];
  if (v14)
  {
    id v15 = (id)v14;
    GEOPDBatchReverseGeocodeResultClearSensitiveFields(v14, a2, 1);
  }
  else
  {
    id v15 = 0;
  }
LABEL_12:
}

void sub_189ADFE80(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189AE05E8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189AE0BA8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDMediaLinkReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  unsigned int v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 60);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 56)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  unsigned int v12 = (vaddv_s16((int16x4_t)(*(void *)&vshl_u16((uint16x4_t)(*(void *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 76)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFCFFFAFFFDFFFBLL) & 0xFF01FF01FF01FF01))+ ((*(unsigned char *)(a1 + 76) & 4) != 0));
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 > 2;
        char v17 = v16 & ~(_BYTE)v11 | v9;
        unsigned __int8 v18 = v16 | v11;
        char v69 = v17;
        char v70 = v18 | v17;
        char v68 = v8;
        if ((v18 | v8)) {
          unsigned int v19 = 0;
        }
        else {
          unsigned int v19 = a3;
        }
        char v71 = (v19 == 0) | v18;
        BOOL v72 = v18;
        uint64_t v20 = (int *)MEMORY[0x1E4F940E8];
        uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
        uint64_t v22 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v9;
LABEL_8:
        uint64_t v14 = v10;
        uint64_t v15 = v11;
LABEL_10:
        ++v7;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v21)) {
      goto LABEL_99;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      BOOL v30 = v24++ >= 9;
      if (v30)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_25:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_99:
      int v66 = 1;
      goto LABEL_100;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v72;
    if ((v71 & 1) == 0)
    {
      int v35 = v19;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    switch((int)v33)
    {
      case 1:
        if (!v34) {
          goto LABEL_79;
        }
        if ((*(unsigned char *)(a1 + 76) & 8) == 0)
        {
          uint64_t v39 = PBReaderReadString();
          uint64_t v40 = 24;
          goto LABEL_51;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_118;
        }
        char v61 = 16 * *(unsigned char *)(a1 + 76);
        goto LABEL_96;
      case 2:
        if (!v34) {
          goto LABEL_79;
        }
        if ((*(unsigned char *)(a1 + 76) & 0x20) == 0)
        {
          uint64_t v39 = PBReaderReadString();
          uint64_t v40 = 40;
LABEL_51:
          unint64_t v44 = *(void **)(a1 + v40);
          *(void *)(a1 + v40) = v39;
          goto LABEL_78;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_118;
        }
        char v61 = 4 * *(unsigned char *)(a1 + 76);
        goto LABEL_96;
      case 3:
        if ((v68 & 1) == 0) {
          goto LABEL_79;
        }
        char v45 = 0;
        unsigned int v46 = 0;
        uint64_t v47 = 0;
        *(unsigned char *)(a1 + 76) |= 2u;
        while (2)
        {
          uint64_t v48 = *v20;
          uint64_t v49 = *(void *)(v3 + v48);
          unint64_t v50 = v49 + 1;
          if (v49 == -1 || v50 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v51 = *(unsigned char *)(*(void *)(v3 + *v22) + v49);
            *(void *)(v3 + v48) = v50;
            v47 |= (unint64_t)(v51 & 0x7F) << v45;
            if (v51 < 0)
            {
              v45 += 7;
              BOOL v30 = v46++ >= 9;
              if (v30)
              {
                LODWORD(v47) = 0;
                goto LABEL_84;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          LODWORD(v47) = 0;
        }
LABEL_84:
        uint64_t v60 = 72;
        goto LABEL_89;
      case 4:
        if ((v68 & 1) == 0) {
          goto LABEL_79;
        }
        char v52 = 0;
        unsigned int v53 = 0;
        uint64_t v47 = 0;
        *(unsigned char *)(a1 + 76) |= 1u;
        while (2)
        {
          uint64_t v54 = *v20;
          uint64_t v55 = *(void *)(v3 + v54);
          unint64_t v56 = v55 + 1;
          if (v55 == -1 || v56 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v57 = *(unsigned char *)(*(void *)(v3 + *v22) + v55);
            *(void *)(v3 + v54) = v56;
            v47 |= (unint64_t)(v57 & 0x7F) << v52;
            if (v57 < 0)
            {
              v52 += 7;
              BOOL v30 = v53++ >= 9;
              if (v30)
              {
                LODWORD(v47) = 0;
                goto LABEL_88;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          LODWORD(v47) = 0;
        }
LABEL_88:
        uint64_t v60 = 68;
LABEL_89:
        *(_DWORD *)(a1 + v60) = v47;
        goto LABEL_98;
      case 5:
        if (!v34 || (*(unsigned char *)(a1 + 76) & 0x40) != 0) {
          goto LABEL_79;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_118;
        }
        char v58 = objc_alloc_init(GEOPDThirdPartyLink);
        if (!GEOPDThirdPartyLinkReadAllFrom((uint64_t)v58, (void *)v3, v10 & 1)) {
          goto LABEL_117;
        }
        PBReaderRecallMark();
        -[GEOPDMediaLink _addNoFlagsThirdPartyLink:](a1, v58);

        goto LABEL_97;
      case 6:
        if (!v34) {
          goto LABEL_79;
        }
        if ((*(unsigned char *)(a1 + 76) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_118;
          }
          char v61 = 8 * *(unsigned char *)(a1 + 76);
LABEL_96:
          v7 += v61 >> 7;
          goto LABEL_97;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_118;
        }
        char v58 = objc_alloc_init(GEOPDMediaLinkPositionMetaData);
        if (GEOPDMediaLinkPositionMetaDataReadAllFrom((uint64_t)v58, (void *)v3))
        {
          PBReaderRecallMark();
          unint64_t v44 = *(void **)(a1 + 32);
          *(void *)(a1 + 32) = v58;
LABEL_78:

          --v7;
LABEL_97:
          uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
          goto LABEL_98;
        }
LABEL_117:

LABEL_118:
        int v66 = 0;
        char v67 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__flags;
        uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_101:
        if (v69) {
LABEL_102:
        }
          *(unsigned char *)(a1 + v67[91]) |= 4u;
        if (v72 || (v66 & 1) == 0)
        {
          *(unsigned char *)(a1 + v67[91]) |= 8u;
          *(unsigned char *)(a1 + v67[91]) |= 0x20u;
          *(unsigned char *)(a1 + v67[91]) |= 0x40u;
          *(unsigned char *)(a1 + v67[91]) |= 0x10u;
        }
        else if (v19)
        {
          while (1)
          {
            int v62 = *v19++;
            char v63 = 8;
            switch(v62)
            {
              case 0:
                goto LABEL_111;
              case 1:
                goto LABEL_110;
              case 2:
                char v63 = 32;
                goto LABEL_110;
              case 5:
                char v63 = 64;
                goto LABEL_110;
              case 6:
                char v63 = 16;
LABEL_110:
                *(unsigned char *)(a1 + v67[91]) |= v63;
                break;
              default:
                continue;
            }
          }
        }
LABEL_111:
        if (v66) {
          unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
        }
        else {
          unint64_t v3 = 0;
        }
        if (v72)
        {
          BOOL v64 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      default:
        if ((v69 & 1) == 0 || (*(unsigned char *)(a1 + 76) & 4) != 0)
        {
LABEL_79:
          char v59 = PBReaderSkipValueWithTag();
          uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
          if ((v59 & 1) == 0)
          {
            int v66 = 0;
LABEL_100:
            char v67 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__flags;
            goto LABEL_101;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v41 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            id v42 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v41;
          }
          int v43 = PBUnknownFieldAdd();
          uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
          if (!v43)
          {
            int v66 = 0;
            char v67 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__flags;
            goto LABEL_102;
          }
        }
LABEL_98:
        if (!(v70 & 1 | (v7 != 0))) {
          goto LABEL_99;
        }
        continue;
    }
  }
}

void sub_189AE14F4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189AE16EC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189AE1918(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189AE1F60(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDMediaLinkCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v11 = *MEMORY[0x1E4F143B8];
  long long v6 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  id v1 = *(id *)(a1 + 48);
  uint64_t v2 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t v4 = *(void *)v7;
    do
    {
      uint64_t v5 = 0;
      do
      {
        if (*(void *)v7 != v4) {
          objc_enumerationMutation(v1);
        }
        -[GEOPDThirdPartyLink readAll:](*(void *)(*((void *)&v6 + 1) + 8 * v5++), 1);
      }
      while (v3 != v5);
      uint64_t v3 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
    }
    while (v3);
  }
}

unint64_t GEOPDMediaLinkReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 60))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDMediaLinkReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = [v8 position];
  *(_DWORD *)(a1 + 60) = [v8 length];
  if (a3) {
    long long v9 = (int *)&GEOPDMediaLinkReadAllFrom_recursiveTag;
  }
  else {
    long long v9 = (int *)&GEOPDMediaLinkReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDMediaLinkReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOPDMediaLinkCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_189AE22CC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189AE2588(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDMediaLinkIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  BOOL v2 = *(unsigned __int8 *)(a1 + 76) > 7u;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return v2;
}

void sub_189AE28E8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDMediaLinkPositionMetaDataReadAllFrom(uint64_t a1, void *a2)
{
  uint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    long long v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      long long v7 = (int *)MEMORY[0x1E4F940B8];
      while (1)
      {
        if (v3[*v6]) {
          goto LABEL_49;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          goto LABEL_49;
        }
        if ((v10 >> 3) == 2) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          char v18 = 0;
          unsigned int v19 = 0;
          uint64_t v20 = 0;
          *(unsigned char *)(a1 + 24) |= 1u;
          while (1)
          {
            uint64_t v21 = *v4;
            uint64_t v22 = *(void *)&v3[v21];
            unint64_t v23 = v22 + 1;
            if (v22 == -1 || v23 > *(void *)&v3[*v5])
            {
              uint64_t v26 = &OBJC_IVAR___GEOPDMediaLinkPositionMetaData__collectionItemIndex;
              goto LABEL_41;
            }
            char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
            *(void *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0) {
              break;
            }
            v18 += 7;
            BOOL v25 = v19++ > 8;
            if (v25)
            {
              LODWORD(v20) = 0;
              uint64_t v26 = &OBJC_IVAR___GEOPDMediaLinkPositionMetaData__collectionItemIndex;
              goto LABEL_44;
            }
          }
          uint64_t v26 = &OBJC_IVAR___GEOPDMediaLinkPositionMetaData__collectionItemIndex;
LABEL_42:
          if (v3[*v6]) {
            LODWORD(v20) = 0;
          }
LABEL_44:
          *(_DWORD *)(a1 + *v26) = v20;
          goto LABEL_45;
        }
        if (!*(void *)(a1 + 8))
        {
          id v33 = objc_alloc_init(MEMORY[0x1E4F940B0]);
          BOOL v34 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = v33;
        }
        if ((PBUnknownFieldAdd() & 1) == 0) {
          goto LABEL_50;
        }
LABEL_45:
        if (*(void *)&v3[*v4] >= *(void *)&v3[*v5]) {
          goto LABEL_49;
        }
      }
      char v27 = 0;
      unsigned int v28 = 0;
      uint64_t v20 = 0;
      *(unsigned char *)(a1 + 24) |= 2u;
      while (1)
      {
        uint64_t v29 = *v4;
        uint64_t v30 = *(void *)&v3[v29];
        unint64_t v31 = v30 + 1;
        if (v30 == -1 || v31 > *(void *)&v3[*v5]) {
          break;
        }
        char v32 = *(unsigned char *)(*(void *)&v3[*v7] + v30);
        *(void *)&v3[v29] = v31;
        v20 |= (unint64_t)(v32 & 0x7F) << v27;
        if ((v32 & 0x80) == 0)
        {
          uint64_t v26 = &OBJC_IVAR___GEOPDMediaLinkPositionMetaData__mediaLinkPosition;
          goto LABEL_42;
        }
        v27 += 7;
        BOOL v25 = v28++ > 8;
        if (v25)
        {
          LODWORD(v20) = 0;
          uint64_t v26 = &OBJC_IVAR___GEOPDMediaLinkPositionMetaData__mediaLinkPosition;
          goto LABEL_44;
        }
      }
      uint64_t v26 = &OBJC_IVAR___GEOPDMediaLinkPositionMetaData__mediaLinkPosition;
LABEL_41:
      v3[*v6] = 1;
      goto LABEL_42;
    }
LABEL_49:
    BOOL v35 = v3[*v6] == 0;
  }
  else
  {
LABEL_50:
    BOOL v35 = 0;
  }
  objc_sync_exit(v3);

  return v35;
}

void sub_189AE329C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189AE3698(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDMessageLinkReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 80));
  long long v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 76);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 72)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  unsigned int v12 = (unsigned __int16)(vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int16 *)(a1 + 92)), (uint16x4_t)0xFFF8FFFDFFFCFFFBLL), (int8x8_t)0x1000100010001))+ ((*(_WORD *)(a1 + 92) >> 6) & 1)+ ((*(_WORD *)(a1 + 92) >> 7) & 1)+ ((*(_WORD *)(a1 + 92) >> 2) & 1));
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 > 3;
        char v17 = v16 & ~(_BYTE)v11 | v9;
        unsigned __int8 v18 = v16 | v11;
        char v68 = v17;
        char v69 = v18 | v17;
        if ((v18 | v8)) {
          unsigned int v19 = 0;
        }
        else {
          unsigned int v19 = a3;
        }
        char v70 = (v19 == 0) | v18;
        BOOL v71 = v18;
        uint64_t v20 = (int *)MEMORY[0x1E4F940E8];
        uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
        uint64_t v22 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v9;
LABEL_8:
        uint64_t v14 = v10;
        uint64_t v15 = v11;
LABEL_10:
        ++v7;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v21)) {
      goto LABEL_108;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      BOOL v30 = v24++ >= 9;
      if (v30)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_25:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_108:
      int v66 = 1;
      goto LABEL_109;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v71;
    if ((v70 & 1) == 0)
    {
      BOOL v35 = v19;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    switch((int)v33)
    {
      case 1:
        if (!v34) {
          goto LABEL_85;
        }
        if ((*(_WORD *)(a1 + 92) & 0x10) == 0)
        {
          uint64_t v39 = PBReaderReadString();
          uint64_t v40 = 32;
          goto LABEL_83;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_129;
        }
        __int16 v61 = *(_WORD *)(a1 + 92) << 11;
        goto LABEL_105;
      case 2:
        if (!v34) {
          goto LABEL_85;
        }
        if ((*(_WORD *)(a1 + 92) & 0x20) == 0)
        {
          uint64_t v39 = PBReaderReadString();
          uint64_t v40 = 40;
          goto LABEL_83;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_129;
        }
        __int16 v61 = *(_WORD *)(a1 + 92) << 10;
        goto LABEL_105;
      case 3:
        if ((v8 & 1) == 0) {
          goto LABEL_85;
        }
        char v44 = 0;
        unsigned int v45 = 0;
        uint64_t v46 = 0;
        *(_WORD *)(a1 + 92) |= 1u;
        while (2)
        {
          uint64_t v47 = *v20;
          uint64_t v48 = *(void *)(v3 + v47);
          unint64_t v49 = v48 + 1;
          if (v48 == -1 || v49 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v50 = *(unsigned char *)(*(void *)(v3 + *v22) + v48);
            *(void *)(v3 + v47) = v49;
            v46 |= (unint64_t)(v50 & 0x7F) << v44;
            if (v50 < 0)
            {
              v44 += 7;
              BOOL v30 = v45++ >= 9;
              if (v30)
              {
                LODWORD(v46) = 0;
                goto LABEL_90;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          LODWORD(v46) = 0;
        }
LABEL_90:
        *(_DWORD *)(a1 + 84) = v46;
        goto LABEL_107;
      case 4:
        if (!v34 || (*(_WORD *)(a1 + 92) & 8) != 0) {
          goto LABEL_85;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_129;
        }
        char v51 = objc_alloc_init(GEOPDHours);
        if (!GEOPDHoursReadAllFrom((uint64_t)v51, (void *)v3, v10 & 1)) {
          goto LABEL_128;
        }
        PBReaderRecallMark();
        -[GEOPDMessageLink _addNoFlagsHoursOfOperation:](a1, v51);

        goto LABEL_106;
      case 5:
        if (!v34) {
          goto LABEL_85;
        }
        if ((*(_WORD *)(a1 + 92) & 0x100) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_129;
          }
          __int16 v61 = *(_WORD *)(a1 + 92) << 7;
LABEL_105:
          v7 += v61 >> 15;
          goto LABEL_106;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_129;
        }
        char v51 = objc_alloc_init(GEOTimezone);
        if (GEOTimezoneReadAllFrom((uint64_t)v51, (void *)v3))
        {
          PBReaderRecallMark();
          char v52 = *(void **)(a1 + 64);
          *(void *)(a1 + 64) = v51;
LABEL_84:

          --v7;
LABEL_106:
          uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
          uint64_t v22 = (int *)MEMORY[0x1E4F940B8];
          goto LABEL_107;
        }
LABEL_128:

LABEL_129:
        int v66 = 0;
        char v67 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__flags;
        uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_110:
        if (v68) {
LABEL_111:
        }
          *(_WORD *)(a1 + v67[103]) |= 4u;
        if (v71 || (v66 & 1) == 0)
        {
          *(_WORD *)(a1 + v67[103]) |= 0x10u;
          *(_WORD *)(a1 + v67[103]) |= 0x20u;
          *(_WORD *)(a1 + v67[103]) |= 8u;
          *(_WORD *)(a1 + v67[103]) |= 0x100u;
          *(_WORD *)(a1 + v67[103]) |= 0x40u;
          *(_WORD *)(a1 + v67[103]) |= 0x80u;
        }
        else if (v19)
        {
          while (1)
          {
            int v62 = *v19++;
            __int16 v63 = 16;
            switch(v62)
            {
              case 0:
                goto LABEL_122;
              case 1:
                goto LABEL_121;
              case 2:
                __int16 v63 = 32;
                goto LABEL_121;
              case 4:
                __int16 v63 = 8;
                goto LABEL_121;
              case 5:
                __int16 v63 = 256;
                goto LABEL_121;
              case 7:
                __int16 v63 = 64;
                goto LABEL_121;
              case 8:
                __int16 v63 = 128;
LABEL_121:
                *(_WORD *)(a1 + v67[103]) |= v63;
                break;
              default:
                continue;
            }
          }
        }
LABEL_122:
        if (v66) {
          unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
        }
        else {
          unint64_t v3 = 0;
        }
        if (v71)
        {
          BOOL v64 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      case 6:
        if ((v8 & 1) == 0) {
          goto LABEL_85;
        }
        char v53 = 0;
        unsigned int v54 = 0;
        uint64_t v55 = 0;
        *(_WORD *)(a1 + 92) |= 2u;
        while (2)
        {
          uint64_t v56 = *v20;
          uint64_t v57 = *(void *)(v3 + v56);
          unint64_t v58 = v57 + 1;
          if (v57 == -1 || v58 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v59 = *(unsigned char *)(*(void *)(v3 + *v22) + v57);
            *(void *)(v3 + v56) = v58;
            v55 |= (unint64_t)(v59 & 0x7F) << v53;
            if (v59 < 0)
            {
              v53 += 7;
              BOOL v30 = v54++ >= 9;
              if (v30)
              {
                uint64_t v55 = 0;
                goto LABEL_94;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          uint64_t v55 = 0;
        }
LABEL_94:
        *(unsigned char *)(a1 + 88) = v55 != 0;
        goto LABEL_107;
      case 7:
        if (!v34) {
          goto LABEL_85;
        }
        if ((*(_WORD *)(a1 + 92) & 0x40) == 0)
        {
          uint64_t v39 = PBReaderReadString();
          uint64_t v40 = 48;
          goto LABEL_83;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_129;
        }
        __int16 v61 = *(_WORD *)(a1 + 92) << 9;
        goto LABEL_105;
      case 8:
        if (!v34) {
          goto LABEL_85;
        }
        if ((*(_WORD *)(a1 + 92) & 0x80) == 0)
        {
          uint64_t v39 = PBReaderReadString();
          uint64_t v40 = 56;
LABEL_83:
          char v52 = *(void **)(a1 + v40);
          *(void *)(a1 + v40) = v39;
          goto LABEL_84;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_129;
        }
        __int16 v61 = *(_WORD *)(a1 + 92) << 8;
        goto LABEL_105;
      default:
        if ((v68 & 1) == 0 || (*(_WORD *)(a1 + 92) & 4) != 0)
        {
LABEL_85:
          char v60 = PBReaderSkipValueWithTag();
          uint64_t v22 = (int *)MEMORY[0x1E4F940B8];
          uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
          if ((v60 & 1) == 0)
          {
            int v66 = 0;
LABEL_109:
            char v67 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__flags;
            goto LABEL_110;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v41 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            id v42 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v41;
          }
          int v43 = PBUnknownFieldAdd();
          uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
          uint64_t v22 = (int *)MEMORY[0x1E4F940B8];
          if (!v43)
          {
            int v66 = 0;
            char v67 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__flags;
            goto LABEL_111;
          }
        }
LABEL_107:
        if (!(v69 & 1 | (v7 != 0))) {
          goto LABEL_108;
        }
        continue;
    }
  }
}

void sub_189AE4110(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189AE4294(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189AE44C0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189AE45D0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189AE46E0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189AE4D74(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDMessageLinkCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v11 = *MEMORY[0x1E4F143B8];
  long long v6 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  id v1 = *(id *)(a1 + 24);
  uint64_t v2 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t v4 = *(void *)v7;
    do
    {
      uint64_t v5 = 0;
      do
      {
        if (*(void *)v7 != v4) {
          objc_enumerationMutation(v1);
        }
        objc_msgSend(*(id *)(*((void *)&v6 + 1) + 8 * v5++), "readAll:", 1, (void)v6);
      }
      while (v3 != v5);
      uint64_t v3 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
    }
    while (v3);
  }
}

unint64_t GEOPDMessageLinkReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 76))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDMessageLinkReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 80));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 72) = [v8 position];
  *(_DWORD *)(a1 + 76) = [v8 length];
  if (a3) {
    long long v9 = (int *)&GEOPDMessageLinkReadAllFrom_recursiveTag;
  }
  else {
    long long v9 = (int *)&GEOPDMessageLinkReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDMessageLinkReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOPDMessageLinkCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 80));
  return Specified;
}

void sub_189AE50E0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189AE53D4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189AE56FC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDMessageLinkFilterReadAllFrom(uint64_t a1, void *a2)
{
  uint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    long long v6 = (int *)MEMORY[0x1E4F940C8];
    long long v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      int v8 = v3[*v6];
      if (*(void *)&v3[*v4] >= *(void *)&v3[*v5]) {
        break;
      }
      if (v3[*v6])
      {
        int v8 = 1;
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      uint64_t v11 = 0;
      while (1)
      {
        uint64_t v12 = *v4;
        uint64_t v13 = *(void *)&v3[v12];
        unint64_t v14 = v13 + 1;
        if (v13 == -1 || v14 > *(void *)&v3[*v5]) {
          break;
        }
        char v15 = *(unsigned char *)(*(void *)&v3[*v7] + v13);
        *(void *)&v3[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0) {
          goto LABEL_13;
        }
        v9 += 7;
        if (v10++ >= 9)
        {
          char v17 = 0;
          int v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      int v8 = v3[*v6];
      if (v3[*v6]) {
        char v17 = 0;
      }
      else {
        char v17 = v11;
      }
LABEL_16:
      if (v8) {
        BOOL v18 = 1;
      }
      else {
        BOOL v18 = (v17 & 7) == 4;
      }
      if (v18) {
        break;
      }
      if (!*(void *)(a1 + 8))
      {
        id v19 = objc_alloc_init(MEMORY[0x1E4F940B0]);
        uint64_t v20 = *(void **)(a1 + 8);
        *(void *)(a1 + 8) = v19;
      }
      if ((PBUnknownFieldAdd() & 1) == 0) {
        goto LABEL_23;
      }
    }
    BOOL v21 = v8 == 0;
  }
  else
  {
LABEL_23:
    BOOL v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_189AE5F0C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189AE6160(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDMiniBrowseCategoriesReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  long long v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  uint64_t v7 = 0;
  uint64_t v8 = 0;
  char v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  int v12 = ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1)
      + (*(unsigned char *)(a1 + 52) & 1)
      + ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1);
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v10])
    {
      case -4:
        ++v12;
        uint64_t v13 = v7;
        goto LABEL_8;
      case -3:
        char v9 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v13 = v7;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 != 0;
        int v17 = v16 & ~v11 | v8;
        int v50 = v16 | v11;
        if (((v16 | v11) | v9)) {
          BOOL v18 = 0;
        }
        else {
          BOOL v18 = a3;
        }
        id v19 = (int *)MEMORY[0x1E4F940E8];
        BOOL v20 = v10 != 0;
        int v21 = 1;
        if (*(void *)(v3 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(v3 + *v6)) {
          goto LABEL_61;
        }
        uint64_t v22 = (int *)MEMORY[0x1E4F940C8];
        char v48 = v17;
        int v49 = v20 | v50 | v17;
        char v23 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v7;
        uint64_t v14 = v8;
LABEL_8:
        uint64_t v15 = v11;
LABEL_10:
        ++v10;
        uint64_t v7 = v13;
        uint64_t v8 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(unsigned char *)(v3 + *v22)) {
      goto LABEL_59;
    }
    char v24 = 0;
    unsigned int v25 = 0;
    unint64_t v26 = 0;
    while (1)
    {
      uint64_t v27 = *v19;
      uint64_t v28 = *(void *)(v3 + v27);
      unint64_t v29 = v28 + 1;
      if (v28 == -1 || v29 > *(void *)(v3 + *v6)) {
        break;
      }
      char v30 = *(unsigned char *)(*(void *)(v3 + *v23) + v28);
      *(void *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0) {
        goto LABEL_25;
      }
      v24 += 7;
      if (v25++ >= 9)
      {
        unint64_t v26 = 0;
        int v32 = *(unsigned __int8 *)(v3 + *v22);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v22) = 1;
LABEL_25:
    int v32 = *(unsigned __int8 *)(v3 + *v22);
    if (*(unsigned char *)(v3 + *v22)) {
      unint64_t v26 = 0;
    }
LABEL_27:
    if (v32 || (v26 & 7) == 4)
    {
LABEL_59:
      int v21 = 1;
      goto LABEL_60;
    }
    unint64_t v34 = v26 >> 3;
    BOOL v35 = v50;
    if (!((v18 == 0) | v50 & 1))
    {
      int v36 = v18;
      do
      {
        int v38 = *v36++;
        int v37 = v38;
        BOOL v35 = v38 != 0;
        if (v38) {
          BOOL v39 = v37 == v34;
        }
        else {
          BOOL v39 = 1;
        }
      }
      while (!v39);
    }
    if (v34 == 2)
    {
      if (!v35 || (*(unsigned char *)(a1 + 52) & 4) != 0)
      {
LABEL_57:
        int v21 = PBReaderSkipValueWithTag();
        if ((v21 & v49 & 1) == 0) {
          goto LABEL_60;
        }
        goto LABEL_58;
      }
      PBReaderReadString();
      uint64_t v40 = (GEOPDMiniBrowseCategory *)objc_claimAutoreleasedReturnValue();
      if (v40) {
        -[GEOPDMiniBrowseCategories _addNoFlagsTopChildName:](a1, v40);
      }
      goto LABEL_49;
    }
    if (v34 == 1) {
      break;
    }
    if (v48 & 1) == 0 || (*(unsigned char *)(a1 + 52)) {
      goto LABEL_57;
    }
    if (!*(void *)(a1 + 16))
    {
      id v41 = objc_alloc_init(MEMORY[0x1E4F940B0]);
      id v42 = *(void **)(a1 + 16);
      *(void *)(a1 + 16) = v41;
    }
    int v21 = PBUnknownFieldAdd();
    if (!v21) {
      goto LABEL_62;
    }
LABEL_55:
    if ((v49 & 1) == 0) {
      goto LABEL_59;
    }
LABEL_58:
    uint64_t v22 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)(v3 + *v19) >= *(void *)(v3 + *v6)) {
      goto LABEL_59;
    }
  }
  if (!v35 || (*(unsigned char *)(a1 + 52) & 2) != 0) {
    goto LABEL_57;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_80;
  }
  uint64_t v40 = objc_alloc_init(GEOPDMiniBrowseCategory);
  if (GEOPDMiniBrowseCategoryReadAllFrom((uint64_t)v40, (void *)v3))
  {
    PBReaderRecallMark();
    -[GEOPDMiniBrowseCategories _addNoFlagsMiniBrowseCategory:](a1, v40);
LABEL_49:

    goto LABEL_55;
  }

LABEL_80:
  int v21 = 0;
LABEL_60:
  LOBYTE(v17) = v48;
LABEL_61:
  if (v17) {
LABEL_62:
  }
    *(unsigned char *)(a1 + 52) |= 1u;
  if (v50 & 1 | ((v21 & 1) == 0))
  {
    *(unsigned char *)(a1 + 52) |= 2u;
    *(unsigned char *)(a1 + 52) |= 4u;
    goto LABEL_73;
  }
  if (v18)
  {
    while (2)
    {
      while (1)
      {
        int v44 = *v18++;
        int v43 = v44;
        if (v44 == 1) {
          break;
        }
        if (v43 == 2)
        {
          char v45 = 4;
          goto LABEL_72;
        }
        if (!v43) {
          goto LABEL_73;
        }
      }
      char v45 = 2;
LABEL_72:
      *(unsigned char *)(a1 + 52) |= v45;
      continue;
    }
  }
LABEL_73:
  if (v21) {
    unint64_t v3 = *(unsigned char *)(v3 + (int)*MEMORY[0x1E4F940C8]) == 0;
  }
  else {
    unint64_t v3 = 0;
  }
  if (v50)
  {
    uint64_t v46 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_189AE6878(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189AE6E5C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDMiniBrowseCategoriesCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v10 = *MEMORY[0x1E4F143B8];
  long long v5 = 0u;
  long long v6 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  id v1 = *(id *)(a1 + 24);
  uint64_t v2 = [v1 countByEnumeratingWithState:&v5 objects:v9 count:16];
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t v4 = *(void *)v6;
    while (1)
    {
      if (*(void *)v6 != v4) {
        objc_enumerationMutation(v1);
      }
      if (!--v3)
      {
        uint64_t v3 = [v1 countByEnumeratingWithState:&v5 objects:v9 count:16];
        if (!v3) {
          break;
        }
      }
    }
  }
}

unint64_t GEOPDMiniBrowseCategoriesReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDMiniBrowseCategoriesReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    char v9 = (int *)&GEOPDMiniBrowseCategoriesReadAllFrom_recursiveTag;
  }
  else {
    char v9 = (int *)&GEOPDMiniBrowseCategoriesReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDMiniBrowseCategoriesReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOPDMiniBrowseCategoriesCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_189AE71A8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189AE7468(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189AE7740(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDMiniBrowseCategoryReadAllFrom(uint64_t a1, void *a2)
{
  uint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    long long v5 = (int *)MEMORY[0x1E4F940E0];
    long long v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      long long v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_29;
          }
          BOOL v18 = objc_alloc_init(GEOStyleAttributes);
          if (!GEOStyleAttributesReadAllFrom((uint64_t)v18, v3))
          {

            goto LABEL_29;
          }
          PBReaderRecallMark();
          id v19 = *(void **)(a1 + 16);
          *(void *)(a1 + 16) = v18;
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v20 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            int v21 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v20;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_29;
          }
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v22 = v3[*v6] == 0;
  }
  else
  {
LABEL_29:
    BOOL v22 = 0;
  }
  objc_sync_exit(v3);

  return v22;
}

void sub_189AE7E70(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189AE8854(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDModuleReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  long long v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  int v11 = ((*(unsigned __int8 *)(a1 + 60) >> 4) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 2) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v9])
    {
      case -4:
        ++v11;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_9;
      case 0:
        BOOL v14 = v11 != 0;
        char v15 = v14 & ~(_BYTE)v10 | v7;
        unsigned __int8 v16 = v14 | v10;
        char v66 = v15;
        char v67 = v16 | v15;
        if ((v16 | v8)) {
          int v17 = 0;
        }
        else {
          int v17 = a3;
        }
        BOOL v18 = (int *)MEMORY[0x1E4F940E8];
        id v19 = (int *)MEMORY[0x1E4F940C8];
        char v68 = (v17 == 0) | v16;
        BOOL v69 = v16;
        id v20 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v11;
LABEL_7:
        uint64_t v12 = v7;
LABEL_8:
        uint64_t v13 = v10;
LABEL_9:
        ++v9;
        uint64_t v7 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v18) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v19)) {
      goto LABEL_87;
    }
    char v21 = 0;
    unsigned int v22 = 0;
    unint64_t v23 = 0;
    while (1)
    {
      uint64_t v24 = *v18;
      uint64_t v25 = *(void *)(v3 + v24);
      unint64_t v26 = v25 + 1;
      if (v25 == -1 || v26 > *(void *)(v3 + *v6)) {
        break;
      }
      char v27 = *(unsigned char *)(*(void *)(v3 + *v20) + v25);
      *(void *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0) {
        goto LABEL_24;
      }
      v21 += 7;
      BOOL v28 = v22++ >= 9;
      if (v28)
      {
        unint64_t v23 = 0;
        int v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_26;
      }
    }
    *(unsigned char *)(v3 + *v19) = 1;
LABEL_24:
    int v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(unsigned char *)(v3 + *v19)) {
      unint64_t v23 = 0;
    }
LABEL_26:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_87:
      int v64 = 1;
      goto LABEL_88;
    }
    unint64_t v31 = v23 >> 3;
    BOOL v32 = v69;
    if ((v68 & 1) == 0)
    {
      unint64_t v33 = v17;
      do
      {
        int v35 = *v33++;
        int v34 = v35;
        BOOL v32 = v35 != 0;
        if (v35) {
          BOOL v36 = v34 == v31;
        }
        else {
          BOOL v36 = 1;
        }
      }
      while (!v36);
    }
    switch((int)v31)
    {
      case 1:
        if ((v8 & 1) == 0) {
          goto LABEL_69;
        }
        char v37 = 0;
        unsigned int v38 = 0;
        uint64_t v39 = 0;
        *(unsigned char *)(a1 + 60) |= 2u;
        while (1)
        {
          uint64_t v40 = *v18;
          uint64_t v41 = *(void *)(v3 + v40);
          unint64_t v42 = v41 + 1;
          if (v41 == -1 || v42 > *(void *)(v3 + *v6)) {
            break;
          }
          char v43 = *(unsigned char *)(*(void *)(v3 + *v20) + v41);
          *(void *)(v3 + v40) = v42;
          v39 |= (unint64_t)(v43 & 0x7F) << v37;
          if ((v43 & 0x80) == 0) {
            goto LABEL_72;
          }
          v37 += 7;
          BOOL v28 = v38++ >= 9;
          if (v28)
          {
            LODWORD(v39) = 0;
            goto LABEL_74;
          }
        }
        *(unsigned char *)(v3 + *v19) = 1;
LABEL_72:
        if (*(unsigned char *)(v3 + *v19)) {
          LODWORD(v39) = 0;
        }
LABEL_74:
        uint64_t v57 = 56;
        goto LABEL_79;
      case 2:
        if (!v32) {
          goto LABEL_69;
        }
        if ((*(unsigned char *)(a1 + 60) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_107;
          }
          char v58 = 8 * *(unsigned char *)(a1 + 60);
LABEL_84:
          v9 += v58 >> 7;
          goto LABEL_85;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_107;
        }
        uint64_t v47 = objc_alloc_init(GEOPDModuleOptions);
        if (GEOPDModuleOptionsReadAllFrom((uint64_t)v47, (void *)v3))
        {
          PBReaderRecallMark();
          char v48 = *(void **)(a1 + 32);
          *(void *)(a1 + 32) = v47;
LABEL_60:

          --v9;
LABEL_85:
          id v19 = (int *)MEMORY[0x1E4F940C8];
LABEL_86:
          if (!(v67 & 1 | (v9 != 0))) {
            goto LABEL_87;
          }
          continue;
        }

LABEL_107:
        int v64 = 0;
        id v19 = (int *)MEMORY[0x1E4F940C8];
LABEL_88:
        int v65 = &OBJC_IVAR___GEOPDAddressComponent__unknownFields;
        if (v66) {
LABEL_89:
        }
          *(unsigned char *)(a1 + v65[604]) |= 4u;
        if (v69 || (v64 & 1) == 0)
        {
          *(unsigned char *)(a1 + v65[604]) |= 0x10u;
          *(unsigned char *)(a1 + v65[604]) |= 8u;
          goto LABEL_100;
        }
        if (v17)
        {
          while (2)
          {
            while (1)
            {
              int v60 = *v17++;
              int v59 = v60;
              if (v60 == 2) {
                break;
              }
              if (v59 == 3)
              {
                char v61 = 8;
                goto LABEL_99;
              }
              if (!v59) {
                goto LABEL_100;
              }
            }
            char v61 = 16;
LABEL_99:
            *(unsigned char *)(a1 + v65[604]) |= v61;
            continue;
          }
        }
LABEL_100:
        if (v64) {
          unint64_t v3 = *(unsigned char *)(v3 + *v19) == 0;
        }
        else {
          unint64_t v3 = 0;
        }
        if (v69)
        {
          int v62 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      case 3:
        if (!v32) {
          goto LABEL_69;
        }
        if ((*(unsigned char *)(a1 + 60) & 8) == 0)
        {
          uint64_t v49 = PBReaderReadString();
          char v48 = *(void **)(a1 + 24);
          *(void *)(a1 + 24) = v49;
          goto LABEL_60;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_107;
        }
        char v58 = 16 * *(unsigned char *)(a1 + 60);
        goto LABEL_84;
      case 4:
        if ((v8 & 1) == 0) {
          goto LABEL_69;
        }
        char v50 = 0;
        unsigned int v51 = 0;
        uint64_t v39 = 0;
        *(unsigned char *)(a1 + 60) |= 1u;
        while (2)
        {
          uint64_t v52 = *v18;
          uint64_t v53 = *(void *)(v3 + v52);
          unint64_t v54 = v53 + 1;
          if (v53 == -1 || v54 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v19) = 1;
          }
          else
          {
            char v55 = *(unsigned char *)(*(void *)(v3 + *v20) + v53);
            *(void *)(v3 + v52) = v54;
            v39 |= (unint64_t)(v55 & 0x7F) << v50;
            if (v55 < 0)
            {
              v50 += 7;
              BOOL v28 = v51++ >= 9;
              if (v28)
              {
                LODWORD(v39) = 0;
                goto LABEL_78;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v19)) {
          LODWORD(v39) = 0;
        }
LABEL_78:
        uint64_t v57 = 52;
LABEL_79:
        *(_DWORD *)(a1 + v57) = v39;
        goto LABEL_86;
      default:
        if ((v66 & 1) == 0 || (*(unsigned char *)(a1 + 60) & 4) != 0)
        {
LABEL_69:
          char v56 = PBReaderSkipValueWithTag();
          id v19 = (int *)MEMORY[0x1E4F940C8];
          if ((v56 & 1) == 0)
          {
            int v64 = 0;
            goto LABEL_88;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v44 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            char v45 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v44;
          }
          int v46 = PBUnknownFieldAdd();
          id v19 = (int *)MEMORY[0x1E4F940C8];
          if (!v46)
          {
            int v64 = 0;
            int v65 = &OBJC_IVAR___GEOPDAddressComponent__unknownFields;
            goto LABEL_89;
          }
        }
        goto LABEL_86;
    }
  }
}

void sub_189AE9084(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189AE9DBC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDModuleReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDModuleReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOPDModuleReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOPDModuleReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDModuleReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    [*(id *)(a1 + 32) readAll:1];
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_189AE9F64(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDModuleReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOPDModuleReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189AE9FC8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDModuleIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  uint64_t v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    long long v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_46;
          }
          unsigned int v17 = 0;
          while (1)
          {
            uint64_t v18 = *v2;
            uint64_t v19 = *(void *)&a1[v18];
            unint64_t v20 = v19 + 1;
            if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
              goto LABEL_42;
            }
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if (v21 < 0)
            {
              BOOL v22 = v17++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_43;
          }
        case 2u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDModuleOptionsIsValid(a1)) {
            goto LABEL_46;
          }
          PBReaderRecallMark();
          continue;
        case 3u:
          if (v15 == 2) {
            goto LABEL_32;
          }
          goto LABEL_46;
        case 4u:
          if ((v8 & 7) != 0) {
            goto LABEL_46;
          }
          unsigned int v23 = 0;
          break;
        default:
LABEL_32:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_46:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        uint64_t v24 = *v2;
        uint64_t v25 = *(void *)&a1[v24];
        unint64_t v26 = v25 + 1;
        if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
          break;
        }
        int v27 = *(char *)(*(void *)&a1[*v5] + v25);
        *(void *)&a1[v24] = v26;
        if (v27 < 0)
        {
          BOOL v22 = v23++ > 8;
          if (!v22) {
            continue;
          }
        }
        goto LABEL_43;
      }
LABEL_42:
      a1[*v4] = 1;
LABEL_43:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v28 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v28;
}

BOOL GEOPDModuleOptionsIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  uint64_t v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    long long v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || (PBReaderSkipValueWithTag() & 1) == 0)
        {
LABEL_26:
          BOOL v17 = 0;
          goto LABEL_25;
        }
      }
      else if (!PBReaderSkipValueWithTag())
      {
        goto LABEL_26;
      }
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v17 = a1[*v4] == 0;
LABEL_25:
  PBReaderRecallMark();
  return v17;
}

void sub_189AEA618(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDModuleIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  BOOL v2 = (*(unsigned char *)(a1 + 60) & 0x38) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return v2;
}

void sub_189AEA98C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189AEAD10(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDModuleConfigurationReadAllFrom(uint64_t a1, void *a2, int a3)
{
  long long v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    char v6 = (int *)MEMORY[0x1E4F940E8];
    unsigned int v7 = (int *)MEMORY[0x1E4F940E0];
    unint64_t v8 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v5[*MEMORY[0x1E4F940E8]] < *(void *)&v5[*MEMORY[0x1E4F940E0]])
    {
      uint64_t v9 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v5[*v8]) {
          break;
        }
        char v10 = 0;
        unsigned int v11 = 0;
        unint64_t v12 = 0;
        while (1)
        {
          uint64_t v13 = *v6;
          uint64_t v14 = *(void *)&v5[v13];
          unint64_t v15 = v14 + 1;
          if (v14 == -1 || v15 > *(void *)&v5[*v7]) {
            break;
          }
          char v16 = *(unsigned char *)(*(void *)&v5[*v9] + v14);
          *(void *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0) {
            goto LABEL_13;
          }
          v10 += 7;
          BOOL v17 = v11++ >= 9;
          if (v17)
          {
            unint64_t v12 = 0;
            int v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        int v18 = v5[*v8];
        if (v5[*v8]) {
          unint64_t v12 = 0;
        }
LABEL_15:
        if (v18 || (v12 & 7) == 4) {
          break;
        }
        if ((v12 >> 3) == 2)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_42;
          }
          int v27 = objc_alloc_init(GEOPDModuleConfigurationValue);
          if (!GEOPDModuleConfigurationValueReadAllFrom((uint64_t)v27, v5, a3))
          {

            goto LABEL_42;
          }
          PBReaderRecallMark();
          BOOL v28 = *(void **)(a1 + 16);
          *(void *)(a1 + 16) = v27;
        }
        else if ((v12 >> 3) == 1)
        {
          char v20 = 0;
          unsigned int v21 = 0;
          uint64_t v22 = 0;
          *(unsigned char *)(a1 + 28) |= 1u;
          while (1)
          {
            uint64_t v23 = *v6;
            uint64_t v24 = *(void *)&v5[v23];
            unint64_t v25 = v24 + 1;
            if (v24 == -1 || v25 > *(void *)&v5[*v7]) {
              break;
            }
            char v26 = *(unsigned char *)(*(void *)&v5[*v9] + v24);
            *(void *)&v5[v23] = v25;
            v22 |= (unint64_t)(v26 & 0x7F) << v20;
            if ((v26 & 0x80) == 0) {
              goto LABEL_36;
            }
            v20 += 7;
            BOOL v17 = v21++ >= 9;
            if (v17)
            {
              LODWORD(v22) = 0;
              goto LABEL_38;
            }
          }
          v5[*v8] = 1;
LABEL_36:
          if (v5[*v8]) {
            LODWORD(v22) = 0;
          }
LABEL_38:
          *(_DWORD *)(a1 + 24) = v22;
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v29 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            char v30 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v29;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_42;
          }
        }
      }
      while (*(void *)&v5[*v6] < *(void *)&v5[*v7]);
    }
    BOOL v31 = v5[*v8] == 0;
  }
  else
  {
LABEL_42:
    BOOL v31 = 0;
  }
  objc_sync_exit(v5);

  return v31;
}

void sub_189AEB56C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189AEB9B4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDModuleConfigurationValueReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 112));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 108);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 104)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  unsigned int v12 = *(unsigned __int16 *)(a1 + 116);
  unsigned int v13 = ((v12 >> 3) & 1)
      + (v12 & 1)
      + ((v12 >> 9) & 1)
      + ((v12 >> 4) & 1)
      + (unsigned __int16)(vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16((uint16x4_t)vdup_n_s16(v12), (uint16x4_t)0xFFF6FFFAFFF9FFFELL), (int8x8_t)0x1000100010001))+ (HIBYTE(*(_WORD *)(a1 + 116)) & 1)+ ((*(_WORD *)(a1 + 116) >> 5) & 1)+ ((*(_WORD *)(a1 + 116) >> 1) & 1));
  while (2)
  {
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    uint64_t v16 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v13;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v15 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v17 = v13 > 7;
        char v18 = v17 & ~(_BYTE)v11 | v9;
        unsigned __int8 v19 = v17 | v11;
        char v53 = v18;
        char v54 = v19 | v18;
        if ((v19 | v8)) {
          char v20 = 0;
        }
        else {
          char v20 = a3;
        }
        char v55 = (v20 == 0) | v19;
        BOOL v56 = v19;
        unsigned int v21 = (int *)MEMORY[0x1E4F940E8];
        uint64_t v22 = (int *)MEMORY[0x1E4F940C8];
        uint64_t v23 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v13;
LABEL_7:
        uint64_t v14 = v9;
LABEL_8:
        uint64_t v15 = v10;
        uint64_t v16 = v11;
LABEL_10:
        ++v7;
        uint64_t v9 = v14;
        uint64_t v10 = v15;
        uint64_t v11 = v16;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v21) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v22)) {
      goto LABEL_121;
    }
    char v24 = 0;
    unsigned int v25 = 0;
    unint64_t v26 = 0;
    while (1)
    {
      uint64_t v27 = *v21;
      uint64_t v28 = *(void *)(v3 + v27);
      unint64_t v29 = v28 + 1;
      if (v28 == -1 || v29 > *(void *)(v3 + *v6)) {
        break;
      }
      char v30 = *(unsigned char *)(*(void *)(v3 + *v23) + v28);
      *(void *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0) {
        goto LABEL_25;
      }
      v24 += 7;
      if (v25++ >= 9)
      {
        unint64_t v26 = 0;
        int v32 = *(unsigned __int8 *)(v3 + *v22);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v22) = 1;
LABEL_25:
    int v32 = *(unsigned __int8 *)(v3 + *v22);
    if (*(unsigned char *)(v3 + *v22)) {
      unint64_t v26 = 0;
    }
LABEL_27:
    if (v32 || (v26 & 7) == 4)
    {
LABEL_121:
      int v52 = 1;
      goto LABEL_122;
    }
    unint64_t v34 = v26 >> 3;
    BOOL v35 = v56;
    if ((v55 & 1) == 0)
    {
      BOOL v36 = v20;
      do
      {
        int v38 = *v36++;
        int v37 = v38;
        BOOL v35 = v38 != 0;
        if (v38) {
          BOOL v39 = v37 == v34;
        }
        else {
          BOOL v39 = 1;
        }
      }
      while (!v39);
    }
    switch((int)v34)
    {
      case 1:
        if (!v35) {
          goto LABEL_96;
        }
        if ((*(_WORD *)(a1 + 116) & 0x80) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_145;
          }
          uint64_t v40 = objc_alloc_init(GEOPDPlaceRibbonConfiguration);
          if (GEOPDPlaceRibbonConfigurationReadAllFrom((uint64_t)v40, (void *)v3, v10 & 1))
          {
            PBReaderRecallMark();
            uint64_t v41 = 72;
            goto LABEL_95;
          }
          goto LABEL_144;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_145;
        }
        __int16 v47 = *(_WORD *)(a1 + 116) << 8;
        goto LABEL_118;
      case 2:
        if (!v35) {
          goto LABEL_96;
        }
        if ((*(_WORD *)(a1 + 116) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_145;
          }
          __int16 v47 = *(_WORD *)(a1 + 116) << 13;
          goto LABEL_118;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_145;
        }
        uint64_t v40 = objc_alloc_init(GEOPDButtonModuleConfiguration);
        if (!GEOPDButtonModuleConfigurationReadAllFrom((uint64_t)v40, (void *)v3, v10 & 1)) {
          goto LABEL_144;
        }
        PBReaderRecallMark();
        uint64_t v41 = 32;
        goto LABEL_95;
      case 3:
        if (!v35) {
          goto LABEL_96;
        }
        if ((*(_WORD *)(a1 + 116) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_145;
          }
          __int16 v47 = *(_WORD *)(a1 + 116) << 9;
          goto LABEL_118;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_145;
        }
        uint64_t v40 = objc_alloc_init(GEOPDRelatedPlaceModuleConfiguration);
        if (!GEOPDRelatedPlaceModuleConfigurationReadAllFrom((uint64_t)v40, (void *)v3, v10 & 1)) {
          goto LABEL_144;
        }
        PBReaderRecallMark();
        uint64_t v41 = 64;
        goto LABEL_95;
      case 4:
        if (!v35) {
          goto LABEL_96;
        }
        if ((*(_WORD *)(a1 + 116) & 0x400) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_145;
          }
          __int16 v47 = 32 * *(_WORD *)(a1 + 116);
          goto LABEL_118;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_145;
        }
        uint64_t v40 = objc_alloc_init(GEOPDWebModuleConfiguration);
        if (!GEOPDWebModuleConfigurationReadAllFrom((uint64_t)v40, (void *)v3)) {
          goto LABEL_144;
        }
        PBReaderRecallMark();
        uint64_t v41 = 96;
        goto LABEL_95;
      case 5:
        if (!v35) {
          goto LABEL_96;
        }
        if ((*(_WORD *)(a1 + 116) & 0x100) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_145;
          }
          __int16 v47 = *(_WORD *)(a1 + 116) << 7;
          goto LABEL_118;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_145;
        }
        uint64_t v40 = objc_alloc_init(GEOPDTemplatePlaceModuleConfiguration);
        if (!GEOPDTemplatePlaceModuleConfigurationReadAllFrom((uint64_t)v40, (void *)v3, v10 & 1)) {
          goto LABEL_144;
        }
        PBReaderRecallMark();
        uint64_t v41 = 80;
        goto LABEL_95;
      case 6:
        if (!v35) {
          goto LABEL_96;
        }
        if ((*(_WORD *)(a1 + 116) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_145;
          }
          __int16 v47 = *(_WORD *)(a1 + 116) << 10;
          goto LABEL_118;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_145;
        }
        uint64_t v40 = objc_alloc_init(GEOPDPlaceInfosModuleConfiguration);
        if (!GEOPDPlaceInfosModuleConfigurationReadAllFrom((uint64_t)v40, (void *)v3, v10 & 1)) {
          goto LABEL_144;
        }
        PBReaderRecallMark();
        uint64_t v41 = 56;
        goto LABEL_95;
      case 7:
        if (!v35) {
          goto LABEL_96;
        }
        if ((*(_WORD *)(a1 + 116) & 2) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_145;
          }
          __int16 v47 = *(_WORD *)(a1 + 116) << 14;
          goto LABEL_118;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_145;
        }
        uint64_t v40 = objc_alloc_init(GEOPDBusinessInfosModuleConfiguration);
        if (!GEOPDBusinessInfosModuleConfigurationReadAllFrom((uint64_t)v40, (void *)v3)) {
          goto LABEL_144;
        }
        PBReaderRecallMark();
        uint64_t v41 = 24;
        goto LABEL_95;
      case 8:
        if (!v35) {
          goto LABEL_96;
        }
        if ((*(_WORD *)(a1 + 116) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_145;
          }
          __int16 v47 = *(_WORD *)(a1 + 116) << 12;
          goto LABEL_118;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_145;
        }
        uint64_t v40 = objc_alloc_init(GEOPDHeaderButtonsConfiguration);
        if (!GEOPDHeaderButtonsConfigurationReadAllFrom((uint64_t)v40, (void *)v3)) {
          goto LABEL_144;
        }
        PBReaderRecallMark();
        uint64_t v41 = 40;
        goto LABEL_95;
      case 9:
        if (!v35) {
          goto LABEL_96;
        }
        if ((*(_WORD *)(a1 + 116) & 0x200) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_145;
          }
          __int16 v47 = *(_WORD *)(a1 + 116) << 6;
          goto LABEL_118;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_145;
        }
        uint64_t v40 = objc_alloc_init(GEOPDUnifiedActionModuleConfiguration);
        if (!GEOPDUnifiedActionModuleConfigurationReadAllFrom((uint64_t)v40, (void *)v3, v10 & 1)) {
          goto LABEL_144;
        }
        PBReaderRecallMark();
        uint64_t v41 = 88;
        goto LABEL_95;
      case 10:
        if (!v35) {
          goto LABEL_96;
        }
        if ((*(_WORD *)(a1 + 116) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_145;
          }
          __int16 v47 = *(_WORD *)(a1 + 116) << 11;
LABEL_118:
          v7 += v47 >> 15;
LABEL_119:
          uint64_t v22 = (int *)MEMORY[0x1E4F940C8];
LABEL_120:
          uint64_t v23 = (int *)MEMORY[0x1E4F940B8];
          if (!(v54 & 1 | (v7 != 0))) {
            goto LABEL_121;
          }
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_145;
        }
        uint64_t v40 = objc_alloc_init(GEOPDHikingAssociationModuleConfiguration);
        if (GEOPDHikingAssociationModuleConfigurationReadAllFrom((uint64_t)v40, (void *)v3, v10 & 1))
        {
          PBReaderRecallMark();
          uint64_t v41 = 48;
LABEL_95:
          char v45 = *(void **)(a1 + v41);
          *(void *)(a1 + v41) = v40;

          --v7;
          goto LABEL_119;
        }
LABEL_144:

LABEL_145:
        int v52 = 0;
        uint64_t v22 = (int *)MEMORY[0x1E4F940C8];
LABEL_122:
        if (v53) {
LABEL_123:
        }
          *(_WORD *)(a1 + 116) |= 1u;
        if (v56 || (v52 & 1) == 0)
        {
          *(_WORD *)(a1 + 116) |= 0x80u;
          *(_WORD *)(a1 + 116) |= 4u;
          *(_WORD *)(a1 + 116) |= 0x40u;
          *(_WORD *)(a1 + 116) |= 0x400u;
          *(_WORD *)(a1 + 116) |= 0x100u;
          *(_WORD *)(a1 + 116) |= 0x20u;
          *(_WORD *)(a1 + 116) |= 2u;
          *(_WORD *)(a1 + 116) |= 8u;
          *(_WORD *)(a1 + 116) |= 0x200u;
          *(_WORD *)(a1 + 116) |= 0x10u;
        }
        else if (v20)
        {
          while (1)
          {
            int v48 = *v20++;
            __int16 v49 = 128;
            switch(v48)
            {
              case 0:
                goto LABEL_138;
              case 1:
                goto LABEL_137;
              case 2:
                __int16 v49 = 4;
                goto LABEL_137;
              case 3:
                __int16 v49 = 64;
                goto LABEL_137;
              case 4:
                __int16 v49 = 1024;
                goto LABEL_137;
              case 5:
                __int16 v49 = 256;
                goto LABEL_137;
              case 6:
                __int16 v49 = 32;
                goto LABEL_137;
              case 7:
                __int16 v49 = 2;
                goto LABEL_137;
              case 8:
                __int16 v49 = 8;
                goto LABEL_137;
              case 9:
                __int16 v49 = 512;
                goto LABEL_137;
              case 10:
                __int16 v49 = 16;
LABEL_137:
                *(_WORD *)(a1 + 116) |= v49;
                break;
              default:
                continue;
            }
          }
        }
LABEL_138:
        if (v52) {
          unint64_t v3 = *(unsigned char *)(v3 + *v22) == 0;
        }
        else {
          unint64_t v3 = 0;
        }
        if (v56)
        {
          char v50 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      default:
        if (v53 & 1) == 0 || (*(_WORD *)(a1 + 116))
        {
LABEL_96:
          char v46 = PBReaderSkipValueWithTag();
          uint64_t v22 = (int *)MEMORY[0x1E4F940C8];
          if ((v46 & 1) == 0)
          {
            int v52 = 0;
            goto LABEL_122;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v42 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            char v43 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v42;
          }
          int v44 = PBUnknownFieldAdd();
          uint64_t v22 = (int *)MEMORY[0x1E4F940C8];
          if (!v44)
          {
            int v52 = 0;
            goto LABEL_123;
          }
        }
        goto LABEL_120;
    }
  }
}

void sub_189AEC5FC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189AEC70C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189AEC8A0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189AEC9B0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189AECAC0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189AECBD0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189AECCE0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189AED3A4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189AED4A0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDModuleConfigurationValueReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 108))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDModuleConfigurationValueReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 112));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 104) = [v8 position];
  *(_DWORD *)(a1 + 108) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOPDModuleConfigurationValueReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOPDModuleConfigurationValueReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDModuleConfigurationValueReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    -[GEOPDPlaceInfosModuleConfiguration readAll:](*(void *)(a1 + 56), 1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 112));
  return Specified;
}

void sub_189AEF3B0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189AEF6C0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189AEF930(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189AEFE8C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDModuleLayoutEntryReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 52);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 48)];
  uint64_t v7 = v6;
  uint64_t v8 = 0;
  char v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  uint64_t v12 = 0;
  unsigned int v13 = vaddv_s16((int16x4_t)(*(void *)&vshl_u16((uint16x4_t)(*(void *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 64)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFFFFFCFFFEFFFDLL) & 0xFF01FF01FF01FF01));
  while (2)
  {
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    uint64_t v16 = 1;
    switch(a3[v10])
    {
      case -4:
        ++v13;
        goto LABEL_8;
      case -3:
        char v9 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v15 = v11;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v17 = v13 > 1;
        char v18 = v17 & ~(_BYTE)v12 | v8;
        unsigned __int8 v19 = v17 | v12;
        char v60 = v18;
        char v61 = v19 | v18;
        if ((v19 | v9)) {
          char v20 = 0;
        }
        else {
          char v20 = a3;
        }
        unsigned int v21 = (int *)MEMORY[0x1E4F940E8];
        char v62 = (v20 == 0) | v19;
        BOOL v63 = v19;
        uint64_t v22 = (int *)MEMORY[0x1E4F940C8];
        uint64_t v23 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v13;
LABEL_7:
        uint64_t v14 = v8;
LABEL_8:
        uint64_t v15 = v11;
        uint64_t v16 = v12;
LABEL_10:
        ++v10;
        uint64_t v8 = v14;
        uint64_t v11 = v15;
        uint64_t v12 = v16;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v21) >= *(void *)(v3 + *v7) || *(unsigned char *)(v3 + *v22)) {
      goto LABEL_76;
    }
    char v24 = 0;
    unsigned int v25 = 0;
    unint64_t v26 = 0;
    while (1)
    {
      uint64_t v27 = *v21;
      uint64_t v28 = *(void *)(v3 + v27);
      unint64_t v29 = v28 + 1;
      if (v28 == -1 || v29 > *(void *)(v3 + *v7)) {
        break;
      }
      char v30 = *(unsigned char *)(*(void *)(v3 + *v23) + v28);
      *(void *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0) {
        goto LABEL_25;
      }
      v24 += 7;
      BOOL v31 = v25++ >= 9;
      if (v31)
      {
        unint64_t v26 = 0;
        int v32 = *(unsigned __int8 *)(v3 + *v22);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v22) = 1;
LABEL_25:
    int v32 = *(unsigned __int8 *)(v3 + *v22);
    if (*(unsigned char *)(v3 + *v22)) {
      unint64_t v26 = 0;
    }
LABEL_27:
    if (v32 || (v26 & 7) == 4)
    {
LABEL_76:
      int v58 = 1;
      goto LABEL_77;
    }
    unint64_t v34 = v26 >> 3;
    BOOL v35 = v63;
    if ((v62 & 1) == 0)
    {
      BOOL v36 = v20;
      do
      {
        int v38 = *v36++;
        int v37 = v38;
        BOOL v35 = v38 != 0;
        if (v38) {
          BOOL v39 = v37 == v34;
        }
        else {
          BOOL v39 = 1;
        }
      }
      while (!v39);
    }
    switch((int)v34)
    {
      case 1:
        if (!v35 || (*(unsigned char *)(a1 + 64) & 4) != 0) {
          goto LABEL_66;
        }
        PBReaderReadString();
        uint64_t v40 = (GEOPDModule *)objc_claimAutoreleasedReturnValue();
        if (v40) {
          -[GEOPDModuleLayoutEntry _addNoFlagsApplicationId:](a1, v40);
        }
        goto LABEL_65;
      case 2:
        if (!v35) {
          goto LABEL_66;
        }
        if ((*(unsigned char *)(a1 + 64) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_93;
          }
          v10 += *(unsigned __int8 *)(a1 + 64) << 28 >> 31;
        }
        else
        {
          uint64_t v44 = PBReaderReadString();
          char v45 = *(void **)(a1 + 32);
          *(void *)(a1 + 32) = v44;

          --v10;
        }
        goto LABEL_74;
      case 3:
        if ((v9 & 1) == 0) {
          goto LABEL_66;
        }
        char v46 = 0;
        unsigned int v47 = 0;
        uint64_t v48 = 0;
        *(unsigned char *)(a1 + 64) |= 1u;
        while (2)
        {
          uint64_t v49 = *v21;
          uint64_t v50 = *(void *)(v3 + v49);
          unint64_t v51 = v50 + 1;
          if (v50 == -1 || v51 > *(void *)(v3 + *v7))
          {
            *(unsigned char *)(v3 + *v22) = 1;
          }
          else
          {
            char v52 = *(unsigned char *)(*(void *)(v3 + *v23) + v50);
            *(void *)(v3 + v49) = v51;
            v48 |= (unint64_t)(v52 & 0x7F) << v46;
            if (v52 < 0)
            {
              v46 += 7;
              BOOL v31 = v47++ >= 9;
              if (v31)
              {
                LODWORD(v48) = 0;
                goto LABEL_71;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v22)) {
          LODWORD(v48) = 0;
        }
LABEL_71:
        *(_DWORD *)(a1 + 60) = v48;
        goto LABEL_75;
      case 4:
        if (!v35 || (*(unsigned char *)(a1 + 64) & 0x10) != 0) {
          goto LABEL_66;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_93;
        }
        uint64_t v40 = objc_alloc_init(GEOPDModule);
        if (GEOPDModuleReadAllFrom((uint64_t)v40, (void *)v3, v11 & 1))
        {
          PBReaderRecallMark();
          -[GEOPDModuleLayoutEntry _addNoFlagsModules:](a1, v40);
LABEL_65:

LABEL_74:
          uint64_t v22 = (int *)MEMORY[0x1E4F940C8];
          uint64_t v7 = (int *)MEMORY[0x1E4F940E0];
LABEL_75:
          if (!(v61 & 1 | (v10 != 0))) {
            goto LABEL_76;
          }
          continue;
        }

LABEL_93:
        int v58 = 0;
        uint64_t v22 = (int *)MEMORY[0x1E4F940C8];
LABEL_77:
        int v59 = &OBJC_IVAR___GEOPDAddressComponent__unknownFields;
        if (v60) {
LABEL_78:
        }
          *(unsigned char *)(a1 + v59[620]) |= 2u;
        if (v63 || (v58 & 1) == 0)
        {
          *(unsigned char *)(a1 + v59[620]) |= 4u;
          *(unsigned char *)(a1 + v59[620]) |= 8u;
          *(unsigned char *)(a1 + v59[620]) |= 0x10u;
        }
        else if (v20)
        {
          while (1)
          {
            int v54 = *v20++;
            char v55 = 4;
            switch(v54)
            {
              case 0:
                goto LABEL_86;
              case 1:
                goto LABEL_85;
              case 2:
                char v55 = 8;
                goto LABEL_85;
              case 4:
                char v55 = 16;
LABEL_85:
                *(unsigned char *)(a1 + v59[620]) |= v55;
                break;
              default:
                continue;
            }
          }
        }
LABEL_86:
        if (v58) {
          unint64_t v3 = *(unsigned char *)(v3 + *v22) == 0;
        }
        else {
          unint64_t v3 = 0;
        }
        if (v63)
        {
          BOOL v56 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      default:
        if ((v60 & 1) == 0 || (*(unsigned char *)(a1 + 64) & 2) != 0)
        {
LABEL_66:
          char v53 = PBReaderSkipValueWithTag();
          uint64_t v7 = (int *)MEMORY[0x1E4F940E0];
          uint64_t v22 = (int *)MEMORY[0x1E4F940C8];
          if ((v53 & 1) == 0)
          {
            int v58 = 0;
            goto LABEL_77;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v41 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            id v42 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v41;
          }
          int v43 = PBUnknownFieldAdd();
          uint64_t v22 = (int *)MEMORY[0x1E4F940C8];
          uint64_t v7 = (int *)MEMORY[0x1E4F940E0];
          if (!v43)
          {
            int v58 = 0;
            int v59 = &OBJC_IVAR___GEOPDAddressComponent__unknownFields;
            goto LABEL_78;
          }
        }
        goto LABEL_75;
    }
  }
}

void sub_189AF08F8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189AF0C14(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189AF18F8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDModuleLayoutEntryCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v11 = *MEMORY[0x1E4F143B8];
  long long v6 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  id v1 = *(id *)(a1 + 40);
  uint64_t v2 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t v4 = *(void *)v7;
    do
    {
      uint64_t v5 = 0;
      do
      {
        if (*(void *)v7 != v4) {
          objc_enumerationMutation(v1);
        }
        objc_msgSend(*(id *)(*((void *)&v6 + 1) + 8 * v5++), "readAll:", 1, (void)v6);
      }
      while (v3 != v5);
      uint64_t v3 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
    }
    while (v3);
  }
}

unint64_t GEOPDModuleLayoutEntryReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 52))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDModuleLayoutEntryReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = [v8 position];
  *(_DWORD *)(a1 + 52) = [v8 length];
  if (a3) {
    long long v9 = (int *)&GEOPDModuleLayoutEntryReadAllFrom_recursiveTag;
  }
  else {
    long long v9 = (int *)&GEOPDModuleLayoutEntryReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDModuleLayoutEntryReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOPDModuleLayoutEntryCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_189AF1B8C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDModuleLayoutEntryReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOPDModuleLayoutEntryReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189AF1BF0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDModuleLayoutEntryIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  uint64_t v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 != 2) {
            goto LABEL_40;
          }
          goto LABEL_22;
        case 2u:
          if (v15 == 2) {
            goto LABEL_22;
          }
          goto LABEL_40;
        case 3u:
          if ((v8 & 7) != 0) {
            goto LABEL_40;
          }
          unsigned int v17 = 0;
          break;
        case 4u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDModuleIsValid(a1)) {
            goto LABEL_40;
          }
          PBReaderRecallMark();
          continue;
        default:
LABEL_22:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_40:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        uint64_t v18 = *v2;
        uint64_t v19 = *(void *)&a1[v18];
        unint64_t v20 = v19 + 1;
        if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
          break;
        }
        int v21 = *(char *)(*(void *)&a1[*v5] + v19);
        *(void *)&a1[v18] = v20;
        if (v21 < 0 && v17++ <= 8) {
          continue;
        }
        goto LABEL_37;
      }
      a1[*v4] = 1;
LABEL_37:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v23 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v23;
}

void sub_189AF216C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDModuleLayoutEntryIsDirty(uint64_t a1)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  if ((*(unsigned char *)(a1 + 64) & 0x3C) != 0) {
    return 1;
  }
  if ((*(unsigned char *)(a1 + 64) & 0x10) == 0) {
    return 0;
  }
  long long v9 = 0u;
  long long v10 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  id v3 = *(id *)(a1 + 40);
  uint64_t v2 = [v3 countByEnumeratingWithState:&v7 objects:v11 count:16];
  if (v2)
  {
    uint64_t v4 = *(void *)v8;
    while (2)
    {
      for (uint64_t i = 0; i != v2; ++i)
      {
        if (*(void *)v8 != v4) {
          objc_enumerationMutation(v3);
        }
        if (GEOPDModuleIsDirty(*(void *)(*((void *)&v7 + 1) + 8 * i)))
        {
          uint64_t v2 = 1;
          goto LABEL_15;
        }
      }
      uint64_t v2 = [v3 countByEnumeratingWithState:&v7 objects:v11 count:16];
      if (v2) {
        continue;
      }
      break;
    }
  }
LABEL_15:

  return v2;
}

os_unfair_lock_s *GEOPDModuleLayoutEntryIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOPDModuleLayoutEntryIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 14);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_189AF27E0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189AF2C48(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDModuleOptionsReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      long long v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          uint64_t v18 = PBReaderReadString();
          uint64_t v19 = *(void **)(a1 + 16);
          *(void *)(a1 + 16) = v18;
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v20 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            int v21 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v20;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_26;
          }
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v22 = v3[*v6] == 0;
  }
  else
  {
LABEL_26:
    BOOL v22 = 0;
  }
  objc_sync_exit(v3);

  return v22;
}

void sub_189AF3438(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDModuleOptionsReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOPDModuleOptionsReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189AF349C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDNearbyPlacesMetadataReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      long long v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        int v17 = v10 & 7;
        if (v16 || v17 == 4) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          if (v17 == 2)
          {
            if (!PBReaderPlaceMark()) {
              goto LABEL_49;
            }
            while (*(void *)&v3[*v4] < *(void *)&v3[*v5] && !v3[*v6])
            {
              char v19 = 0;
              unsigned int v20 = 0;
              uint64_t v21 = 0;
              while (1)
              {
                uint64_t v22 = *v4;
                uint64_t v23 = *(void *)&v3[v22];
                unint64_t v24 = v23 + 1;
                if (v23 == -1 || v24 > *(void *)&v3[*v5]) {
                  break;
                }
                char v25 = *(unsigned char *)(*(void *)&v3[*v7] + v23);
                *(void *)&v3[v22] = v24;
                v21 |= (unint64_t)(v25 & 0x7F) << v19;
                if (v25 < 0)
                {
                  v19 += 7;
                  BOOL v15 = v20++ >= 9;
                  if (!v15) {
                    continue;
                  }
                }
                goto LABEL_32;
              }
              v3[*v6] = 1;
LABEL_32:
              PBRepeatedUInt64Add();
            }
            PBReaderRecallMark();
          }
          else
          {
            char v28 = 0;
            unsigned int v29 = 0;
            uint64_t v30 = 0;
            while (1)
            {
              uint64_t v31 = *v4;
              uint64_t v32 = *(void *)&v3[v31];
              unint64_t v33 = v32 + 1;
              if (v32 == -1 || v33 > *(void *)&v3[*v5]) {
                break;
              }
              char v34 = *(unsigned char *)(*(void *)&v3[*v7] + v32);
              *(void *)&v3[v31] = v33;
              v30 |= (unint64_t)(v34 & 0x7F) << v28;
              if (v34 < 0)
              {
                v28 += 7;
                BOOL v15 = v29++ >= 9;
                if (!v15) {
                  continue;
                }
              }
              goto LABEL_46;
            }
            v3[*v6] = 1;
LABEL_46:
            PBRepeatedUInt64Add();
          }
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v26 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            uint64_t v27 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v26;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_49;
          }
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v35 = v3[*v6] == 0;
  }
  else
  {
LABEL_49:
    BOOL v35 = 0;
  }
  objc_sync_exit(v3);

  return v35;
}

void sub_189AF3EEC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189AF4218(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDOfflineAreaReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 52);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 48)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  unsigned int v12 = ((*(unsigned __int8 *)(a1 + 60) >> 3) & 1)
      + (*(unsigned char *)(a1 + 60) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 2) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 1) & 1);
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 > 1;
        char v17 = v16 & ~(_BYTE)v11 | v9;
        unsigned __int8 v18 = v16 | v11;
        char v53 = v17;
        char v54 = v18 | v17;
        if ((v18 | v8)) {
          char v19 = 0;
        }
        else {
          char v19 = a3;
        }
        char v55 = (v19 == 0) | v18;
        BOOL v56 = v18;
        unsigned int v20 = (int *)MEMORY[0x1E4F940E8];
        uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
        uint64_t v22 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v9;
LABEL_8:
        uint64_t v14 = v10;
        uint64_t v15 = v11;
LABEL_10:
        ++v7;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v21)) {
      goto LABEL_72;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      if (v24++ >= 9)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_25:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_72:
      int v51 = 1;
      goto LABEL_73;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v56;
    if ((v55 & 1) == 0)
    {
      BOOL v35 = v19;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    if (v33 == 3)
    {
      if (v34 && (*(unsigned char *)(a1 + 60) & 2) == 0)
      {
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_90;
        }
        BOOL v39 = objc_alloc_init(GEOMapRegion);
        if (!GEOMapRegionReadAllFrom((uint64_t)v39, (void *)v3)) {
          goto LABEL_89;
        }
        PBReaderRecallMark();
        -[GEOPDOfflineArea _addNoFlagsDisplayMapRegion:](a1, v39);

        goto LABEL_70;
      }
      goto LABEL_63;
    }
    if (v33 == 2) {
      break;
    }
    if (v33 == 1)
    {
      if (v34)
      {
        if ((*(unsigned char *)(a1 + 60) & 4) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_90;
          }
          BOOL v39 = objc_alloc_init(GEOMapRegion);
          if (!GEOMapRegionReadAllFrom((uint64_t)v39, (void *)v3)) {
            goto LABEL_89;
          }
          PBReaderRecallMark();
          uint64_t v40 = 32;
LABEL_56:
          id v41 = *(void **)(a1 + v40);
          *(void *)(a1 + v40) = v39;

          --v7;
LABEL_70:
          uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
          goto LABEL_71;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_90;
        }
        char v46 = 32 * *(unsigned char *)(a1 + 60);
LABEL_69:
        v7 += v46 >> 7;
        goto LABEL_70;
      }
    }
    else if ((v53 & 1) != 0 && (*(unsigned char *)(a1 + 60) & 1) == 0)
    {
      if (!*(void *)(a1 + 16))
      {
        id v42 = objc_alloc_init(MEMORY[0x1E4F940B0]);
        int v43 = *(void **)(a1 + 16);
        *(void *)(a1 + 16) = v42;
      }
      int v44 = PBUnknownFieldAdd();
      uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
      if (!v44)
      {
        int v51 = 0;
        char v52 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__flags;
        goto LABEL_75;
      }
      goto LABEL_71;
    }
LABEL_63:
    char v45 = PBReaderSkipValueWithTag();
    uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
    if ((v45 & 1) == 0)
    {
      int v51 = 0;
LABEL_73:
      char v52 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__flags;
      goto LABEL_74;
    }
LABEL_71:
    if (!(v54 & 1 | (v7 != 0))) {
      goto LABEL_72;
    }
  }
  if (!v34) {
    goto LABEL_63;
  }
  if ((*(unsigned char *)(a1 + 60) & 8) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0) {
      goto LABEL_90;
    }
    char v46 = 16 * *(unsigned char *)(a1 + 60);
    goto LABEL_69;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_90;
  }
  BOOL v39 = objc_alloc_init(GEOMapRegion);
  if (GEOMapRegionReadAllFrom((uint64_t)v39, (void *)v3))
  {
    PBReaderRecallMark();
    uint64_t v40 = 40;
    goto LABEL_56;
  }
LABEL_89:

LABEL_90:
  int v51 = 0;
  char v52 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__flags;
  uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_74:
  if ((v53 & 1) == 0) {
    goto LABEL_76;
  }
LABEL_75:
  *(unsigned char *)(a1 + v52[134]) |= 1u;
LABEL_76:
  if (v56 || (v51 & 1) == 0)
  {
    *(unsigned char *)(a1 + v52[134]) |= 4u;
    *(unsigned char *)(a1 + v52[134]) |= 8u;
    *(unsigned char *)(a1 + v52[134]) |= 2u;
  }
  else if (v19)
  {
    while (1)
    {
      int v47 = *v19++;
      char v48 = 4;
      switch(v47)
      {
        case 0:
          goto LABEL_83;
        case 1:
          goto LABEL_82;
        case 2:
          char v48 = 8;
          goto LABEL_82;
        case 3:
          char v48 = 2;
LABEL_82:
          *(unsigned char *)(a1 + v52[134]) |= v48;
          break;
        default:
          continue;
      }
    }
  }
LABEL_83:
  if (v51) {
    unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
  }
  else {
    unint64_t v3 = 0;
  }
  if (v56)
  {
    uint64_t v49 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_189AF4948(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189AF49FC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189AF5014(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDOfflineAreaCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  [a1[4] readAll:1];
  [a1[5] readAll:1];
  long long v9 = 0u;
  long long v10 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  id v2 = a1[3];
  uint64_t v3 = [v2 countByEnumeratingWithState:&v7 objects:v11 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v8;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v8 != v5) {
          objc_enumerationMutation(v2);
        }
        objc_msgSend(*(id *)(*((void *)&v7 + 1) + 8 * v6++), "readAll:", 1, (void)v7);
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v7 objects:v11 count:16];
    }
    while (v4);
  }
}

unint64_t GEOPDOfflineAreaReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 52))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDOfflineAreaReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)long long v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = [v8 position];
  *(_DWORD *)(a1 + 52) = [v8 length];
  if (a3) {
    long long v9 = (int *)&GEOPDOfflineAreaReadAllFrom_recursiveTag;
  }
  else {
    long long v9 = (int *)&GEOPDOfflineAreaReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDOfflineAreaReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOPDOfflineAreaCallReadAllRecursiveWithoutSynchronized((id *)a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_189AF53AC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189AF5608(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189AF5874(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPOIClaimFilterReadAllFrom(uint64_t a1, void *a2)
{
  uint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    uint64_t v6 = (int *)MEMORY[0x1E4F940C8];
    long long v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      int v8 = v3[*v6];
      if (*(void *)&v3[*v4] >= *(void *)&v3[*v5]) {
        break;
      }
      if (v3[*v6])
      {
        int v8 = 1;
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      uint64_t v11 = 0;
      while (1)
      {
        uint64_t v12 = *v4;
        uint64_t v13 = *(void *)&v3[v12];
        unint64_t v14 = v13 + 1;
        if (v13 == -1 || v14 > *(void *)&v3[*v5]) {
          break;
        }
        char v15 = *(unsigned char *)(*(void *)&v3[*v7] + v13);
        *(void *)&v3[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0) {
          goto LABEL_13;
        }
        v9 += 7;
        if (v10++ >= 9)
        {
          char v17 = 0;
          int v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      int v8 = v3[*v6];
      if (v3[*v6]) {
        char v17 = 0;
      }
      else {
        char v17 = v11;
      }
LABEL_16:
      if (v8) {
        BOOL v18 = 1;
      }
      else {
        BOOL v18 = (v17 & 7) == 4;
      }
      if (v18) {
        break;
      }
      if (!*(void *)(a1 + 8))
      {
        id v19 = objc_alloc_init(MEMORY[0x1E4F940B0]);
        unsigned int v20 = *(void **)(a1 + 8);
        *(void *)(a1 + 8) = v19;
      }
      if ((PBUnknownFieldAdd() & 1) == 0) {
        goto LABEL_23;
      }
    }
    BOOL v21 = v8 == 0;
  }
  else
  {
LABEL_23:
    BOOL v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_189AF6844(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189AF6A98(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDPerformerReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 60);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 56)];
  char v7 = 0;
  uint64_t v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  unsigned int v12 = (vaddv_s16((int16x4_t)(*(void *)&vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int8 *)(a1 + 68)), (uint16x4_t)0xFFFEFFFFFFFDFFFCLL) & 0xFF01FF01FF01FF01))+ (*(unsigned char *)(a1 + 68) & 1));
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v7 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 > 2;
        char v17 = v16 & ~(_BYTE)v11 | v9;
        unsigned __int8 v18 = v16 | v11;
        char v54 = v17;
        char v55 = v18 | v17;
        if ((v18 | v7)) {
          id v19 = 0;
        }
        else {
          id v19 = a3;
        }
        char v56 = (v19 == 0) | v18;
        BOOL v57 = v18;
        unsigned int v20 = (int *)MEMORY[0x1E4F940E8];
        BOOL v21 = (int *)MEMORY[0x1E4F940C8];
        uint64_t v22 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v9;
LABEL_8:
        uint64_t v14 = v10;
        uint64_t v15 = v11;
LABEL_10:
        ++v8;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v21)) {
      goto LABEL_74;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      if (v24++ >= 9)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_25:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_74:
      int v52 = 1;
      goto LABEL_75;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v57;
    if ((v56 & 1) == 0)
    {
      BOOL v35 = v19;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    switch((int)v33)
    {
      case 1:
        if (!v34) {
          goto LABEL_61;
        }
        if ((*(unsigned char *)(a1 + 68) & 8) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_93;
          }
          BOOL v39 = objc_alloc_init(GEOLocalizedString);
          if (GEOLocalizedStringReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1))
          {
            PBReaderRecallMark();
            uint64_t v40 = *(void **)(a1 + 40);
            *(void *)(a1 + 40) = v39;
            goto LABEL_60;
          }

          goto LABEL_93;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_93;
        }
        char v47 = 16 * *(unsigned char *)(a1 + 68);
        goto LABEL_71;
      case 2:
        if (!v34) {
          goto LABEL_61;
        }
        if ((*(unsigned char *)(a1 + 68) & 0x10) == 0)
        {
          uint64_t v44 = PBReaderReadString();
          uint64_t v45 = 48;
          goto LABEL_59;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_93;
        }
        char v47 = 8 * *(unsigned char *)(a1 + 68);
        goto LABEL_71;
      case 3:
        if (!v34) {
          goto LABEL_61;
        }
        if ((*(unsigned char *)(a1 + 68) & 2) == 0)
        {
          uint64_t v44 = PBReaderReadString();
          uint64_t v45 = 24;
          goto LABEL_59;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_93;
        }
        char v47 = *(unsigned char *)(a1 + 68) << 6;
        goto LABEL_71;
      case 4:
        if (!v34) {
          goto LABEL_61;
        }
        if ((*(unsigned char *)(a1 + 68) & 4) == 0)
        {
          uint64_t v44 = PBReaderReadString();
          uint64_t v45 = 32;
LABEL_59:
          uint64_t v40 = *(void **)(a1 + v45);
          *(void *)(a1 + v45) = v44;
LABEL_60:

          --v8;
LABEL_72:
          BOOL v21 = (int *)MEMORY[0x1E4F940C8];
          goto LABEL_73;
        }
        if (PBReaderSkipValueWithTag())
        {
          char v47 = 32 * *(unsigned char *)(a1 + 68);
LABEL_71:
          v8 += v47 >> 7;
          goto LABEL_72;
        }
LABEL_93:
        int v52 = 0;
        char v53 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__flags;
        BOOL v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_76:
        if (v54) {
LABEL_77:
        }
          *(unsigned char *)(a1 + v53[141]) |= 1u;
        if (v57 || (v52 & 1) == 0)
        {
          *(unsigned char *)(a1 + v53[141]) |= 8u;
          *(unsigned char *)(a1 + v53[141]) |= 0x10u;
          *(unsigned char *)(a1 + v53[141]) |= 2u;
          *(unsigned char *)(a1 + v53[141]) |= 4u;
        }
        else if (v19)
        {
          while (1)
          {
            int v48 = *v19++;
            char v49 = 8;
            switch(v48)
            {
              case 0:
                goto LABEL_86;
              case 1:
                goto LABEL_85;
              case 2:
                char v49 = 16;
                goto LABEL_85;
              case 3:
                char v49 = 2;
                goto LABEL_85;
              case 4:
                char v49 = 4;
LABEL_85:
                *(unsigned char *)(a1 + v53[141]) |= v49;
                break;
              default:
                continue;
            }
          }
        }
LABEL_86:
        if (v52) {
          unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
        }
        else {
          unint64_t v3 = 0;
        }
        if (v57)
        {
          uint64_t v50 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      default:
        if (v54 & 1) == 0 || (*(unsigned char *)(a1 + 68))
        {
LABEL_61:
          char v46 = PBReaderSkipValueWithTag();
          BOOL v21 = (int *)MEMORY[0x1E4F940C8];
          if ((v46 & 1) == 0)
          {
            int v52 = 0;
LABEL_75:
            char v53 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__flags;
            goto LABEL_76;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v41 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            id v42 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v41;
          }
          int v43 = PBUnknownFieldAdd();
          BOOL v21 = (int *)MEMORY[0x1E4F940C8];
          if (!v43)
          {
            int v52 = 0;
            char v53 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__flags;
            goto LABEL_77;
          }
        }
LABEL_73:
        if (!(v55 & 1 | (v8 != 0))) {
          goto LABEL_74;
        }
        continue;
    }
  }
}

void sub_189AF7248(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189AF7358(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189AF7720(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189AF7818(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDPerformerReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 60))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDPerformerReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = [v8 position];
  *(_DWORD *)(a1 + 60) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOPDPerformerReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOPDPerformerReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDPerformerReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    [*(id *)(a1 + 40) readAll:1];
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_189AF7A98(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189AF7C68(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDPerformerIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  unsigned int v2 = *(unsigned __int8 *)(a1 + 68);
  if ((v2 & 0x20) != 0) {
    return 1;
  }
  if ((v2 & 8) != 0)
  {
    if (GEOLocalizedStringIsDirty(*(void *)(a1 + 40))) {
      return 1;
    }
    unsigned int v2 = *(unsigned __int8 *)(a1 + 68);
  }
  if ((v2 & 0x12) != 0) {
    return 1;
  }
  return (v2 >> 2) & 1;
}

void sub_189AF7E94(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189AF8D0C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPhotoIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  BOOL v2 = (*(unsigned char *)(a1 + 52) & 0xE) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return v2;
}

void sub_189AF8FD0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPhotoFilterReadAllFrom(void *a1, void *a2)
{
  unint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    uint64_t v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      char v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          if (!PBReaderPlaceMark()) {
            goto LABEL_28;
          }
          -[GEOPDPhotoFilter _reservePhotoSizeFilters:]((uint64_t)a1, 1uLL);
          if (!GEOPDPhotoSizeFilterValueReadAllFrom(a1[2] + 12 * a1[3], (uint64_t)v3)) {
            goto LABEL_28;
          }
          PBReaderRecallMark();
          ++a1[3];
        }
        else
        {
          if (!a1[1])
          {
            id v18 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            id v19 = (void *)a1[1];
            a1[1] = v18;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_28;
          }
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v20 = v3[*v6] == 0;
  }
  else
  {
LABEL_28:
    BOOL v20 = 0;
  }
  objc_sync_exit(v3);

  return v20;
}

void sub_189AFA060(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id _GEOPDPhotoSizeFilterValueDictionaryRepresentation(unsigned int *a1)
{
  BOOL v2 = [MEMORY[0x1E4F1CA60] dictionary];
  char v3 = *((unsigned char *)a1 + 8);
  if (v3)
  {
    uint64_t v4 = [NSNumber numberWithUnsignedInt:*a1];
    [v2 setObject:v4 forKey:@"height"];

    char v3 = *((unsigned char *)a1 + 8);
  }
  if ((v3 & 2) != 0)
  {
    uint64_t v5 = [NSNumber numberWithUnsignedInt:a1[1]];
    [v2 setObject:v5 forKey:@"width"];
  }

  return v2;
}

void _GEOPDPhotoSizeFilterValueFromDictionaryRepresentation(void *a1, uint64_t a2)
{
  id v3 = a1;
  uint64_t v4 = [v3 objectForKeyedSubscript:@"width"];
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    *(unsigned char *)(a2 + 8) |= 2u;
    *(_DWORD *)(a2 + 4) = [v4 unsignedIntValue];
  }

  id v5 = [v3 objectForKeyedSubscript:@"height"];

  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    *(unsigned char *)(a2 + 8) |= 1u;
    *(_DWORD *)a2 = [v5 unsignedIntValue];
  }
}

void sub_189AFA5B4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDPictureItemReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 52);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 48)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  unsigned int v12 = vaddv_s16((int16x4_t)(*(void *)&vshl_u16((uint16x4_t)(*(void *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 64)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFFFFFCFFFEFFFDLL) & 0xFF01FF01FF01FF01));
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v9])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 > 1;
        char v17 = v16 & ~(_BYTE)v11 | v7;
        unsigned __int8 v18 = v16 | v11;
        char v62 = v17;
        char v63 = v18 | v17;
        char v61 = v8;
        if ((v18 | v8)) {
          id v19 = 0;
        }
        else {
          id v19 = a3;
        }
        char v64 = (v19 == 0) | v18;
        BOOL v65 = v18;
        BOOL v20 = (int *)MEMORY[0x1E4F940E8];
        BOOL v21 = (int *)MEMORY[0x1E4F940C8];
        uint64_t v22 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v7;
LABEL_8:
        uint64_t v14 = v10;
        uint64_t v15 = v11;
LABEL_10:
        ++v9;
        uint64_t v7 = v13;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v21)) {
      goto LABEL_81;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      BOOL v30 = v24++ >= 9;
      if (v30)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_25:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_81:
      int v59 = 1;
      goto LABEL_82;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v65;
    if ((v64 & 1) == 0)
    {
      BOOL v35 = v19;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    switch((int)v33)
    {
      case 1:
        if (!v34) {
          goto LABEL_66;
        }
        if ((*(unsigned char *)(a1 + 64) & 4) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_99;
          }
          BOOL v39 = objc_alloc_init(GEOPDPhoto);
          if (GEOPDPhotoReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1))
          {
            PBReaderRecallMark();
            uint64_t v40 = *(void **)(a1 + 24);
            *(void *)(a1 + 24) = v39;
            goto LABEL_57;
          }

          goto LABEL_99;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_99;
        }
        char v54 = 32 * *(unsigned char *)(a1 + 64);
        goto LABEL_78;
      case 2:
        if (!v34) {
          goto LABEL_66;
        }
        if ((*(unsigned char *)(a1 + 64) & 8) == 0)
        {
          uint64_t v44 = PBReaderReadString();
          uint64_t v45 = 32;
          goto LABEL_56;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_99;
        }
        char v54 = 16 * *(unsigned char *)(a1 + 64);
        goto LABEL_78;
      case 3:
        if (!v34) {
          goto LABEL_66;
        }
        if ((*(unsigned char *)(a1 + 64) & 0x10) == 0)
        {
          uint64_t v44 = PBReaderReadString();
          uint64_t v45 = 40;
LABEL_56:
          uint64_t v40 = *(void **)(a1 + v45);
          *(void *)(a1 + v45) = v44;
LABEL_57:

          --v9;
LABEL_79:
          BOOL v21 = (int *)MEMORY[0x1E4F940C8];
          goto LABEL_80;
        }
        if (PBReaderSkipValueWithTag())
        {
          char v54 = 8 * *(unsigned char *)(a1 + 64);
LABEL_78:
          v9 += v54 >> 7;
          goto LABEL_79;
        }
LABEL_99:
        int v59 = 0;
        char v60 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__flags;
        BOOL v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_83:
        if (v62) {
LABEL_84:
        }
          *(unsigned char *)(a1 + v60[160]) |= 2u;
        if (v65 || (v59 & 1) == 0)
        {
          *(unsigned char *)(a1 + v60[160]) |= 4u;
          *(unsigned char *)(a1 + v60[160]) |= 8u;
          *(unsigned char *)(a1 + v60[160]) |= 0x10u;
        }
        else if (v19)
        {
          while (1)
          {
            int v55 = *v19++;
            char v56 = 4;
            switch(v55)
            {
              case 0:
                goto LABEL_92;
              case 1:
                goto LABEL_91;
              case 2:
                char v56 = 8;
                goto LABEL_91;
              case 3:
                char v56 = 16;
LABEL_91:
                *(unsigned char *)(a1 + v60[160]) |= v56;
                break;
              default:
                continue;
            }
          }
        }
LABEL_92:
        if (v59) {
          unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
        }
        else {
          unint64_t v3 = 0;
        }
        if (v65)
        {
          BOOL v57 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      case 4:
        if ((v61 & 1) == 0) {
          goto LABEL_66;
        }
        char v46 = 0;
        unsigned int v47 = 0;
        uint64_t v48 = 0;
        *(unsigned char *)(a1 + 64) |= 1u;
        while (2)
        {
          uint64_t v49 = *v20;
          uint64_t v50 = *(void *)(v3 + v49);
          unint64_t v51 = v50 + 1;
          if (v50 == -1 || v51 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v52 = *(unsigned char *)(*(void *)(v3 + *v22) + v50);
            *(void *)(v3 + v49) = v51;
            v48 |= (unint64_t)(v52 & 0x7F) << v46;
            if (v52 < 0)
            {
              v46 += 7;
              BOOL v30 = v47++ >= 9;
              if (v30)
              {
                LODWORD(v48) = 0;
                goto LABEL_71;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          LODWORD(v48) = 0;
        }
LABEL_71:
        *(_DWORD *)(a1 + 60) = v48;
        goto LABEL_80;
      default:
        if ((v62 & 1) == 0 || (*(unsigned char *)(a1 + 64) & 2) != 0)
        {
LABEL_66:
          char v53 = PBReaderSkipValueWithTag();
          BOOL v21 = (int *)MEMORY[0x1E4F940C8];
          if ((v53 & 1) == 0)
          {
            int v59 = 0;
LABEL_82:
            char v60 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__flags;
            goto LABEL_83;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v41 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            id v42 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v41;
          }
          int v43 = PBUnknownFieldAdd();
          BOOL v21 = (int *)MEMORY[0x1E4F940C8];
          if (!v43)
          {
            int v59 = 0;
            char v60 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__flags;
            goto LABEL_84;
          }
        }
LABEL_80:
        if (!(v63 & 1 | (v9 != 0))) {
          goto LABEL_81;
        }
        continue;
    }
  }
}

void sub_189AFADA4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189AFAEB4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189AFB39C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDPictureItemReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 52))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDPictureItemReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = [v8 position];
  *(_DWORD *)(a1 + 52) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOPDPictureItemReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOPDPictureItemReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDPictureItemReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    -[GEOPDPhoto readAll:](*(void *)(a1 + 24), 1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_189AFB61C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189AFB824(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189AFB9F8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPictureItemContainerReadAllFrom(uint64_t a1, void *a2, int a3)
{
  id v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    uint64_t v6 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v7 = (int *)MEMORY[0x1E4F940E0];
    id v8 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v5[*MEMORY[0x1E4F940E8]] < *(void *)&v5[*MEMORY[0x1E4F940E0]])
    {
      uint64_t v9 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v5[*v8]) {
          break;
        }
        char v10 = 0;
        unsigned int v11 = 0;
        unint64_t v12 = 0;
        while (1)
        {
          uint64_t v13 = *v6;
          uint64_t v14 = *(void *)&v5[v13];
          unint64_t v15 = v14 + 1;
          if (v14 == -1 || v15 > *(void *)&v5[*v7]) {
            break;
          }
          char v16 = *(unsigned char *)(*(void *)&v5[*v9] + v14);
          *(void *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0) {
            goto LABEL_13;
          }
          v10 += 7;
          BOOL v17 = v11++ >= 9;
          if (v17)
          {
            unint64_t v12 = 0;
            int v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        int v18 = v5[*v8];
        if (v5[*v8]) {
          unint64_t v12 = 0;
        }
LABEL_15:
        if (v18 || (v12 & 7) == 4) {
          break;
        }
        if ((v12 >> 3) == 2)
        {
          char v21 = 0;
          unsigned int v22 = 0;
          uint64_t v23 = 0;
          *(unsigned char *)(a1 + 28) |= 1u;
          while (1)
          {
            uint64_t v24 = *v6;
            uint64_t v25 = *(void *)&v5[v24];
            unint64_t v26 = v25 + 1;
            if (v25 == -1 || v26 > *(void *)&v5[*v7]) {
              break;
            }
            char v27 = *(unsigned char *)(*(void *)&v5[*v9] + v25);
            *(void *)&v5[v24] = v26;
            v23 |= (unint64_t)(v27 & 0x7F) << v21;
            if ((v27 & 0x80) == 0) {
              goto LABEL_36;
            }
            v21 += 7;
            BOOL v17 = v22++ >= 9;
            if (v17)
            {
              uint64_t v23 = 0;
              goto LABEL_38;
            }
          }
          v5[*v8] = 1;
LABEL_36:
          if (v5[*v8]) {
            uint64_t v23 = 0;
          }
LABEL_38:
          *(unsigned char *)(a1 + 24) = v23 != 0;
        }
        else if ((v12 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_42;
          }
          BOOL v20 = objc_alloc_init(GEOPDPictureItem);
          if (!GEOPDPictureItemReadAllFrom((uint64_t)v20, v5, a3))
          {

            goto LABEL_42;
          }
          PBReaderRecallMark();
          -[GEOPDPictureItemContainer addPictureItem:](a1, v20);
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v28 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            char v29 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v28;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_42;
          }
        }
      }
      while (*(void *)&v5[*v6] < *(void *)&v5[*v7]);
    }
    BOOL v30 = v5[*v8] == 0;
  }
  else
  {
LABEL_42:
    BOOL v30 = 0;
  }
  objc_sync_exit(v5);

  return v30;
}

void sub_189AFC478(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189AFD0C8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189AFD464(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDPlaceReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOPDPlaceReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189AFF410(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B00164(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B00260(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B00610(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B008B8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B009F0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B00B90(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B00C5C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B00ECC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B0109C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B012AC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B01474(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B015C8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B017F8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B01994(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B01BC4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B01E34(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B01F88(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B021F8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B0238C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDPlaceCollectionIsDirty(uint64_t a1)
{
  uint64_t v152 = *MEMORY[0x1E4F143B8];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 224));
  int v2 = *(_DWORD *)(a1 + 240);
  if ((v2 & 0x1DC199A0) != 0) {
    return 1;
  }
  if ((v2 & 0x2000000) != 0)
  {
    id v5 = *(os_unfair_lock_s **)(a1 + 192);
    if (v5)
    {
      os_unfair_lock_lock_with_options();
      char IsDirty = _GEOPDPublisherIsDirty((uint64_t)v5);
      os_unfair_lock_unlock(v5 + 18);
      if (IsDirty) {
        return 1;
      }
      int v2 = *(_DWORD *)(a1 + 240);
    }
  }
  if ((v2 & 0x40) != 0)
  {
    if (GEOPDCaptionedPhotoIsDirty(*(os_unfair_lock_s **)(a1 + 32))) {
      return 1;
    }
    int v2 = *(_DWORD *)(a1 + 240);
  }
  if ((v2 & 0x3E6600) == 0)
  {
    if ((v2 & 0x8000) != 0)
    {
      long long v134 = 0u;
      long long v135 = 0u;
      long long v132 = 0u;
      long long v133 = 0u;
      id v7 = *(id *)(a1 + 104);
      uint64_t v8 = [v7 countByEnumeratingWithState:&v132 objects:v151 count:16];
      if (v8)
      {
        uint64_t v9 = v8;
        uint64_t v10 = *(void *)v133;
LABEL_15:
        uint64_t v11 = 0;
        while (1)
        {
          if (*(void *)v133 != v10) {
            objc_enumerationMutation(v7);
          }
          if (GEOLocalizedStringIsDirty(*(void *)(*((void *)&v132 + 1) + 8 * v11))) {
            goto LABEL_174;
          }
          if (v9 == ++v11)
          {
            uint64_t v9 = [v7 countByEnumeratingWithState:&v132 objects:v151 count:16];
            if (v9) {
              goto LABEL_15;
            }
            break;
          }
        }
      }

      int v2 = *(_DWORD *)(a1 + 240);
    }
    if ((v2 & 0x800) != 0)
    {
      long long v130 = 0u;
      long long v131 = 0u;
      long long v128 = 0u;
      long long v129 = 0u;
      id v7 = *(id *)(a1 + 72);
      uint64_t v12 = [v7 countByEnumeratingWithState:&v128 objects:v150 count:16];
      if (v12)
      {
        uint64_t v13 = v12;
        uint64_t v14 = *(void *)v129;
LABEL_25:
        uint64_t v15 = 0;
        while (1)
        {
          if (*(void *)v129 != v14) {
            objc_enumerationMutation(v7);
          }
          if (GEOLocalizedStringIsDirty(*(void *)(*((void *)&v128 + 1) + 8 * v15))) {
            goto LABEL_174;
          }
          if (v13 == ++v15)
          {
            uint64_t v13 = [v7 countByEnumeratingWithState:&v128 objects:v150 count:16];
            if (v13) {
              goto LABEL_25;
            }
            break;
          }
        }
      }

      int v2 = *(_DWORD *)(a1 + 240);
    }
    if ((v2 & 0x400000) != 0)
    {
      long long v126 = 0u;
      long long v127 = 0u;
      long long v124 = 0u;
      long long v125 = 0u;
      id v7 = *(id *)(a1 + 168);
      uint64_t v16 = [v7 countByEnumeratingWithState:&v124 objects:v149 count:16];
      if (v16)
      {
        uint64_t v17 = v16;
        uint64_t v18 = *(void *)v125;
LABEL_35:
        uint64_t v19 = 0;
        while (1)
        {
          if (*(void *)v125 != v18) {
            objc_enumerationMutation(v7);
          }
          if (GEOPDCaptionedPhotoIsDirty(*(os_unfair_lock_s **)(*((void *)&v124 + 1) + 8 * v19))) {
            goto LABEL_174;
          }
          if (v17 == ++v19)
          {
            uint64_t v17 = [v7 countByEnumeratingWithState:&v124 objects:v149 count:16];
            if (v17) {
              goto LABEL_35;
            }
            break;
          }
        }
      }

      int v2 = *(_DWORD *)(a1 + 240);
    }
    if ((v2 & 0x800000) != 0)
    {
      long long v122 = 0u;
      long long v123 = 0u;
      long long v120 = 0u;
      long long v121 = 0u;
      id v7 = *(id *)(a1 + 176);
      uint64_t v20 = [v7 countByEnumeratingWithState:&v120 objects:v148 count:16];
      if (v20)
      {
        uint64_t v21 = v20;
        uint64_t v22 = *(void *)v121;
LABEL_45:
        uint64_t v23 = 0;
        while (1)
        {
          if (*(void *)v121 != v22) {
            objc_enumerationMutation(v7);
          }
          uint64_t v24 = *(os_unfair_lock_s **)(*((void *)&v120 + 1) + 8 * v23);
          if (v24)
          {
            os_unfair_lock_lock_with_options();
            char v25 = _GEOPDPlaceCollectionItemIsDirty((uint64_t)v24);
            os_unfair_lock_unlock(v24 + 24);
            if (v25) {
              goto LABEL_174;
            }
          }
          if (v21 == ++v23)
          {
            uint64_t v21 = [v7 countByEnumeratingWithState:&v120 objects:v148 count:16];
            if (v21) {
              goto LABEL_45;
            }
            break;
          }
        }
      }

      int v2 = *(_DWORD *)(a1 + 240);
    }
    if ((v2 & 0x4000000) != 0)
    {
      long long v118 = 0u;
      long long v119 = 0u;
      long long v116 = 0u;
      long long v117 = 0u;
      id v7 = *(id *)(a1 + 200);
      uint64_t v26 = [v7 countByEnumeratingWithState:&v116 objects:v147 count:16];
      if (v26)
      {
        uint64_t v27 = v26;
        uint64_t v28 = *(void *)v117;
LABEL_56:
        uint64_t v29 = 0;
        while (1)
        {
          if (*(void *)v117 != v28) {
            objc_enumerationMutation(v7);
          }
          if (GEOLocalizedStringIsDirty(*(void *)(*((void *)&v116 + 1) + 8 * v29))) {
            goto LABEL_174;
          }
          if (v27 == ++v29)
          {
            uint64_t v27 = [v7 countByEnumeratingWithState:&v116 objects:v147 count:16];
            if (v27) {
              goto LABEL_56;
            }
            break;
          }
        }
      }

      int v2 = *(_DWORD *)(a1 + 240);
    }
    if ((v2 & 0x80) != 0)
    {
      long long v114 = 0u;
      long long v115 = 0u;
      long long v112 = 0u;
      long long v113 = 0u;
      id v7 = *(id *)(a1 + 40);
      uint64_t v30 = [v7 countByEnumeratingWithState:&v112 objects:v146 count:16];
      if (v30)
      {
        uint64_t v31 = v30;
        uint64_t v32 = *(void *)v113;
LABEL_66:
        uint64_t v33 = 0;
        while (1)
        {
          if (*(void *)v113 != v32) {
            objc_enumerationMutation(v7);
          }
          if (GEOLocalizedStringIsDirty(*(void *)(*((void *)&v112 + 1) + 8 * v33))) {
            goto LABEL_174;
          }
          if (v31 == ++v33)
          {
            uint64_t v31 = [v7 countByEnumeratingWithState:&v112 objects:v146 count:16];
            if (v31) {
              goto LABEL_66;
            }
            break;
          }
        }
      }

      int v2 = *(_DWORD *)(a1 + 240);
    }
    if ((v2 & 0x100) != 0)
    {
      long long v110 = 0u;
      long long v111 = 0u;
      long long v108 = 0u;
      long long v109 = 0u;
      id v7 = *(id *)(a1 + 48);
      uint64_t v34 = [v7 countByEnumeratingWithState:&v108 objects:v145 count:16];
      if (v34)
      {
        uint64_t v35 = v34;
        uint64_t v36 = *(void *)v109;
LABEL_76:
        uint64_t v37 = 0;
        while (1)
        {
          if (*(void *)v109 != v36) {
            objc_enumerationMutation(v7);
          }
          if (GEOLocalizedStringIsDirty(*(void *)(*((void *)&v108 + 1) + 8 * v37))) {
            goto LABEL_174;
          }
          if (v35 == ++v37)
          {
            uint64_t v35 = [v7 countByEnumeratingWithState:&v108 objects:v145 count:16];
            if (v35) {
              goto LABEL_76;
            }
            break;
          }
        }
      }

      int v2 = *(_DWORD *)(a1 + 240);
    }
    if ((v2 & 0x200) != 0)
    {
      long long v106 = 0u;
      long long v107 = 0u;
      long long v104 = 0u;
      long long v105 = 0u;
      id v7 = *(id *)(a1 + 56);
      uint64_t v38 = [v7 countByEnumeratingWithState:&v104 objects:v144 count:16];
      if (v38)
      {
        uint64_t v39 = v38;
        uint64_t v40 = *(void *)v105;
LABEL_86:
        uint64_t v41 = 0;
        while (1)
        {
          if (*(void *)v105 != v40) {
            objc_enumerationMutation(v7);
          }
          if (GEOLocalizedBytesIsDirty(*(void *)(*((void *)&v104 + 1) + 8 * v41))) {
            goto LABEL_174;
          }
          if (v39 == ++v41)
          {
            uint64_t v39 = [v7 countByEnumeratingWithState:&v104 objects:v144 count:16];
            if (v39) {
              goto LABEL_86;
            }
            break;
          }
        }
      }

      int v2 = *(_DWORD *)(a1 + 240);
    }
    if ((v2 & 0x400) != 0)
    {
      long long v102 = 0u;
      long long v103 = 0u;
      long long v100 = 0u;
      long long v101 = 0u;
      id v7 = *(id *)(a1 + 64);
      uint64_t v42 = [v7 countByEnumeratingWithState:&v100 objects:v143 count:16];
      if (v42)
      {
        uint64_t v43 = v42;
        uint64_t v44 = *(void *)v101;
LABEL_96:
        uint64_t v45 = 0;
        while (1)
        {
          if (*(void *)v101 != v44) {
            objc_enumerationMutation(v7);
          }
          if (GEOLocalizedStringIsDirty(*(void *)(*((void *)&v100 + 1) + 8 * v45))) {
            goto LABEL_174;
          }
          if (v43 == ++v45)
          {
            uint64_t v43 = [v7 countByEnumeratingWithState:&v100 objects:v143 count:16];
            if (v43) {
              goto LABEL_96;
            }
            break;
          }
        }
      }

      int v2 = *(_DWORD *)(a1 + 240);
    }
    if ((v2 & 0x4000) != 0)
    {
      long long v98 = 0u;
      long long v99 = 0u;
      long long v96 = 0u;
      long long v97 = 0u;
      id v7 = *(id *)(a1 + 96);
      uint64_t v46 = [v7 countByEnumeratingWithState:&v96 objects:v142 count:16];
      if (v46)
      {
        uint64_t v47 = v46;
        uint64_t v48 = *(void *)v97;
LABEL_106:
        uint64_t v49 = 0;
        while (1)
        {
          if (*(void *)v97 != v48) {
            objc_enumerationMutation(v7);
          }
          if (GEOLocalizedStringIsDirty(*(void *)(*((void *)&v96 + 1) + 8 * v49))) {
            goto LABEL_174;
          }
          if (v47 == ++v49)
          {
            uint64_t v47 = [v7 countByEnumeratingWithState:&v96 objects:v142 count:16];
            if (v47) {
              goto LABEL_106;
            }
            break;
          }
        }
      }

      int v2 = *(_DWORD *)(a1 + 240);
    }
    if ((v2 & 0x2000) != 0)
    {
      long long v94 = 0u;
      long long v95 = 0u;
      long long v92 = 0u;
      long long v93 = 0u;
      id v7 = *(id *)(a1 + 88);
      uint64_t v50 = [v7 countByEnumeratingWithState:&v92 objects:v141 count:16];
      if (v50)
      {
        uint64_t v51 = v50;
        uint64_t v52 = *(void *)v93;
LABEL_116:
        uint64_t v53 = 0;
        while (1)
        {
          if (*(void *)v93 != v52) {
            objc_enumerationMutation(v7);
          }
          if (GEOLocalizedStringIsDirty(*(void *)(*((void *)&v92 + 1) + 8 * v53))) {
            goto LABEL_174;
          }
          if (v51 == ++v53)
          {
            uint64_t v51 = [v7 countByEnumeratingWithState:&v92 objects:v141 count:16];
            if (v51) {
              goto LABEL_116;
            }
            break;
          }
        }
      }

      int v2 = *(_DWORD *)(a1 + 240);
    }
    if ((v2 & 0x100000) != 0)
    {
      long long v90 = 0u;
      long long v91 = 0u;
      long long v88 = 0u;
      long long v89 = 0u;
      id v7 = *(id *)(a1 + 144);
      uint64_t v54 = [v7 countByEnumeratingWithState:&v88 objects:v140 count:16];
      if (v54)
      {
        uint64_t v55 = v54;
        uint64_t v56 = *(void *)v89;
LABEL_126:
        uint64_t v57 = 0;
        while (1)
        {
          if (*(void *)v89 != v56) {
            objc_enumerationMutation(v7);
          }
          if (GEOLocalizedStringIsDirty(*(void *)(*((void *)&v88 + 1) + 8 * v57))) {
            goto LABEL_174;
          }
          if (v55 == ++v57)
          {
            uint64_t v55 = [v7 countByEnumeratingWithState:&v88 objects:v140 count:16];
            if (v55) {
              goto LABEL_126;
            }
            break;
          }
        }
      }

      int v2 = *(_DWORD *)(a1 + 240);
    }
    if ((v2 & 0x80000) != 0)
    {
      long long v86 = 0u;
      long long v87 = 0u;
      long long v84 = 0u;
      long long v85 = 0u;
      id v7 = *(id *)(a1 + 136);
      uint64_t v58 = [v7 countByEnumeratingWithState:&v84 objects:v139 count:16];
      if (v58)
      {
        uint64_t v59 = v58;
        uint64_t v60 = *(void *)v85;
LABEL_136:
        uint64_t v61 = 0;
        while (1)
        {
          if (*(void *)v85 != v60) {
            objc_enumerationMutation(v7);
          }
          if (GEOLocalizedStringIsDirty(*(void *)(*((void *)&v84 + 1) + 8 * v61))) {
            goto LABEL_174;
          }
          if (v59 == ++v61)
          {
            uint64_t v59 = [v7 countByEnumeratingWithState:&v84 objects:v139 count:16];
            if (v59) {
              goto LABEL_136;
            }
            break;
          }
        }
      }

      int v2 = *(_DWORD *)(a1 + 240);
    }
    if ((v2 & 0x200000) != 0)
    {
      long long v82 = 0u;
      long long v83 = 0u;
      long long v80 = 0u;
      long long v81 = 0u;
      id v7 = *(id *)(a1 + 152);
      uint64_t v62 = [v7 countByEnumeratingWithState:&v80 objects:v138 count:16];
      if (v62)
      {
        uint64_t v63 = v62;
        uint64_t v64 = *(void *)v81;
LABEL_146:
        uint64_t v65 = 0;
        while (1)
        {
          if (*(void *)v81 != v64) {
            objc_enumerationMutation(v7);
          }
          if (GEOPDMediaLinkIsDirty(*(void *)(*((void *)&v80 + 1) + 8 * v65))) {
            goto LABEL_174;
          }
          if (v63 == ++v65)
          {
            uint64_t v63 = [v7 countByEnumeratingWithState:&v80 objects:v138 count:16];
            if (v63) {
              goto LABEL_146;
            }
            break;
          }
        }
      }

      int v2 = *(_DWORD *)(a1 + 240);
    }
    if ((v2 & 0x20000) != 0)
    {
      long long v78 = 0u;
      long long v79 = 0u;
      long long v76 = 0u;
      long long v77 = 0u;
      id v7 = *(id *)(a1 + 120);
      uint64_t v66 = [v7 countByEnumeratingWithState:&v76 objects:v137 count:16];
      if (v66)
      {
        uint64_t v67 = v66;
        uint64_t v68 = *(void *)v77;
LABEL_156:
        uint64_t v69 = 0;
        while (1)
        {
          if (*(void *)v77 != v68) {
            objc_enumerationMutation(v7);
          }
          if (GEOPDCaptionedPhotoIsDirty(*(os_unfair_lock_s **)(*((void *)&v76 + 1) + 8 * v69))) {
            goto LABEL_174;
          }
          if (v67 == ++v69)
          {
            uint64_t v67 = [v7 countByEnumeratingWithState:&v76 objects:v137 count:16];
            if (v67) {
              goto LABEL_156;
            }
            break;
          }
        }
      }

      int v2 = *(_DWORD *)(a1 + 240);
    }
    if ((v2 & 0x40000) == 0) {
      return 0;
    }
    long long v74 = 0u;
    long long v75 = 0u;
    long long v72 = 0u;
    long long v73 = 0u;
    id v7 = *(id *)(a1 + 128);
    uint64_t v3 = [v7 countByEnumeratingWithState:&v72 objects:v136 count:16];
    if (!v3)
    {
LABEL_175:

      return v3;
    }
    uint64_t v70 = *(void *)v73;
LABEL_167:
    uint64_t v71 = 0;
    while (1)
    {
      if (*(void *)v73 != v70) {
        objc_enumerationMutation(v7);
      }
      if (GEOLocalizedStringIsDirty(*(void *)(*((void *)&v72 + 1) + 8 * v71))) {
        break;
      }
      if (v3 == ++v71)
      {
        uint64_t v3 = [v7 countByEnumeratingWithState:&v72 objects:v136 count:16];
        if (v3) {
          goto LABEL_167;
        }
        goto LABEL_175;
      }
    }
LABEL_174:
    uint64_t v3 = 1;
    goto LABEL_175;
  }
  return 1;
}

os_unfair_lock_s *GEOPDPlaceCollectionIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOPDPlaceCollectionIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 56);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_189B03AE0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B03C54(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B03D64(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B03F08(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B04128(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B04278(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B044A4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDPlaceCollectionItemCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v52 = *MEMORY[0x1E4F143B8];
  [*(id *)(a1 + 56) readAll:1];
  long long v45 = 0u;
  long long v46 = 0u;
  long long v43 = 0u;
  long long v44 = 0u;
  id v2 = *(id *)(a1 + 64);
  uint64_t v3 = [v2 countByEnumeratingWithState:&v43 objects:v51 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v44;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v44 != v5) {
          objc_enumerationMutation(v2);
        }
        -[GEOPDCaptionedPhoto readAll:](*(void *)(*((void *)&v43 + 1) + 8 * v6++), 1);
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v43 objects:v51 count:16];
    }
    while (v4);
  }

  long long v41 = 0u;
  long long v42 = 0u;
  long long v39 = 0u;
  long long v40 = 0u;
  id v7 = *(id *)(a1 + 48);
  uint64_t v8 = [v7 countByEnumeratingWithState:&v39 objects:v50 count:16];
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)v40;
    do
    {
      uint64_t v11 = 0;
      do
      {
        if (*(void *)v40 != v10) {
          objc_enumerationMutation(v7);
        }
        [*(id *)(*((void *)&v39 + 1) + 8 * v11++) readAll:1];
      }
      while (v9 != v11);
      uint64_t v9 = [v7 countByEnumeratingWithState:&v39 objects:v50 count:16];
    }
    while (v9);
  }

  long long v37 = 0u;
  long long v38 = 0u;
  long long v35 = 0u;
  long long v36 = 0u;
  id v12 = *(id *)(a1 + 72);
  uint64_t v13 = [v12 countByEnumeratingWithState:&v35 objects:v49 count:16];
  if (v13)
  {
    uint64_t v14 = v13;
    uint64_t v15 = *(void *)v36;
    do
    {
      uint64_t v16 = 0;
      do
      {
        if (*(void *)v36 != v15) {
          objc_enumerationMutation(v12);
        }
        [*(id *)(*((void *)&v35 + 1) + 8 * v16++) readAll:1];
      }
      while (v14 != v16);
      uint64_t v14 = [v12 countByEnumeratingWithState:&v35 objects:v49 count:16];
    }
    while (v14);
  }

  long long v33 = 0u;
  long long v34 = 0u;
  long long v31 = 0u;
  long long v32 = 0u;
  id v17 = *(id *)(a1 + 32);
  uint64_t v18 = [v17 countByEnumeratingWithState:&v31 objects:v48 count:16];
  if (v18)
  {
    uint64_t v19 = v18;
    uint64_t v20 = *(void *)v32;
    do
    {
      uint64_t v21 = 0;
      do
      {
        if (*(void *)v32 != v20) {
          objc_enumerationMutation(v17);
        }
        [*(id *)(*((void *)&v31 + 1) + 8 * v21++) readAll:1];
      }
      while (v19 != v21);
      uint64_t v19 = [v17 countByEnumeratingWithState:&v31 objects:v48 count:16];
    }
    while (v19);
  }

  long long v29 = 0u;
  long long v30 = 0u;
  long long v27 = 0u;
  long long v28 = 0u;
  id v22 = *(id *)(a1 + 40);
  uint64_t v23 = [v22 countByEnumeratingWithState:&v27 objects:v47 count:16];
  if (v23)
  {
    uint64_t v24 = v23;
    uint64_t v25 = *(void *)v28;
    do
    {
      uint64_t v26 = 0;
      do
      {
        if (*(void *)v28 != v25) {
          objc_enumerationMutation(v22);
        }
        objc_msgSend(*(id *)(*((void *)&v27 + 1) + 8 * v26++), "readAll:", 1, (void)v27);
      }
      while (v24 != v26);
      uint64_t v24 = [v22 countByEnumeratingWithState:&v27 objects:v47 count:16];
    }
    while (v24);
  }

  -[GEOPDQuickLinkItem readAll:](*(void *)(a1 + 24), 1);
}

unint64_t GEOPDPlaceCollectionItemReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 92))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDPlaceCollectionItemReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 96));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 88) = [v8 position];
  *(_DWORD *)(a1 + 92) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOPDPlaceCollectionItemReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOPDPlaceCollectionItemReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDPlaceCollectionItemReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOPDPlaceCollectionItemCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 96));
  return Specified;
}

void sub_189B054B0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceCollectionItemFilterReadAllFrom(uint64_t a1, void *a2)
{
  uint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    uint64_t v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      id v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_29;
          }
          uint64_t v18 = objc_alloc_init(GEOPDMapsIdentifier);
          if (!GEOPDMapsIdentifierReadAllFrom((uint64_t)v18, v3))
          {

            goto LABEL_29;
          }
          PBReaderRecallMark();
          -[GEOPDPlaceCollectionItemFilter addItemId:](a1, v18);
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v19 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            uint64_t v20 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v19;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_29;
          }
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v21 = v3[*v6] == 0;
  }
  else
  {
LABEL_29:
    BOOL v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_189B05C04(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B064A8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B065B8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B069C8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B06BA0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B076F4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceInfoFilterReadAllFrom(uint64_t a1, void *a2)
{
  uint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    uint64_t v6 = (int *)MEMORY[0x1E4F940C8];
    id v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      int v8 = v3[*v6];
      if (*(void *)&v3[*v4] >= *(void *)&v3[*v5]) {
        break;
      }
      if (v3[*v6])
      {
        int v8 = 1;
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      uint64_t v11 = 0;
      while (1)
      {
        uint64_t v12 = *v4;
        uint64_t v13 = *(void *)&v3[v12];
        unint64_t v14 = v13 + 1;
        if (v13 == -1 || v14 > *(void *)&v3[*v5]) {
          break;
        }
        char v15 = *(unsigned char *)(*(void *)&v3[*v7] + v13);
        *(void *)&v3[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0) {
          goto LABEL_13;
        }
        v9 += 7;
        if (v10++ >= 9)
        {
          char v17 = 0;
          int v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      int v8 = v3[*v6];
      if (v3[*v6]) {
        char v17 = 0;
      }
      else {
        char v17 = v11;
      }
LABEL_16:
      if (v8) {
        BOOL v18 = 1;
      }
      else {
        BOOL v18 = (v17 & 7) == 4;
      }
      if (v18) {
        break;
      }
      if (!*(void *)(a1 + 8))
      {
        id v19 = objc_alloc_init(MEMORY[0x1E4F940B0]);
        uint64_t v20 = *(void **)(a1 + 8);
        *(void *)(a1 + 8) = v19;
      }
      if ((PBUnknownFieldAdd() & 1) == 0) {
        goto LABEL_23;
      }
    }
    BOOL v21 = v8 == 0;
  }
  else
  {
LABEL_23:
    BOOL v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_189B07DC8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B0801C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDPlaceInfosModuleConfigurationReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  char v7 = 0;
  uint64_t v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  int v11 = ((*(unsigned __int8 *)(a1 + 56) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 56) >> 2) & 1)
      + ((*(unsigned __int8 *)(a1 + 56) >> 1) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v11;
        goto LABEL_8;
      case -3:
        char v7 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_9;
      case 0:
        BOOL v14 = v11 != 0;
        char v15 = v14 & ~(_BYTE)v10 | v9;
        unsigned __int8 v16 = v14 | v10;
        char v59 = v15;
        char v60 = v16 | v15;
        if ((v16 | v7)) {
          char v17 = 0;
        }
        else {
          char v17 = a3;
        }
        char v61 = (v17 == 0) | v16;
        BOOL v62 = v16;
        BOOL v18 = (int *)MEMORY[0x1E4F940E8];
        id v19 = (int *)MEMORY[0x1E4F940C8];
        uint64_t v20 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v11;
LABEL_7:
        uint64_t v12 = v9;
LABEL_8:
        uint64_t v13 = v10;
LABEL_9:
        ++v8;
        uint64_t v9 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v18) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v19)) {
      goto LABEL_78;
    }
    char v21 = 0;
    unsigned int v22 = 0;
    unint64_t v23 = 0;
    while (1)
    {
      uint64_t v24 = *v18;
      uint64_t v25 = *(void *)(v3 + v24);
      unint64_t v26 = v25 + 1;
      if (v25 == -1 || v26 > *(void *)(v3 + *v6)) {
        break;
      }
      char v27 = *(unsigned char *)(*(void *)(v3 + *v20) + v25);
      *(void *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0) {
        goto LABEL_24;
      }
      v21 += 7;
      BOOL v28 = v22++ >= 9;
      if (v28)
      {
        unint64_t v23 = 0;
        int v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_26;
      }
    }
    *(unsigned char *)(v3 + *v19) = 1;
LABEL_24:
    int v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(unsigned char *)(v3 + *v19)) {
      unint64_t v23 = 0;
    }
LABEL_26:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_78:
      int v57 = 1;
      goto LABEL_79;
    }
    unint64_t v31 = v23 >> 3;
    BOOL v32 = v62;
    if ((v61 & 1) == 0)
    {
      long long v33 = v17;
      do
      {
        int v35 = *v33++;
        int v34 = v35;
        BOOL v32 = v35 != 0;
        if (v35) {
          BOOL v36 = v34 == v31;
        }
        else {
          BOOL v36 = 1;
        }
      }
      while (!v36);
    }
    if (v31 == 3)
    {
      if (v7)
      {
        char v39 = 0;
        unsigned int v40 = 0;
        uint64_t v41 = 0;
        *(unsigned char *)(a1 + 56) |= 1u;
        while (1)
        {
          uint64_t v42 = *v18;
          uint64_t v43 = *(void *)(v3 + v42);
          unint64_t v44 = v43 + 1;
          if (v43 == -1 || v44 > *(void *)(v3 + *v6)) {
            break;
          }
          char v45 = *(unsigned char *)(*(void *)(v3 + *v20) + v43);
          *(void *)(v3 + v42) = v44;
          v41 |= (unint64_t)(v45 & 0x7F) << v39;
          if ((v45 & 0x80) == 0) {
            goto LABEL_68;
          }
          v39 += 7;
          BOOL v28 = v40++ >= 9;
          if (v28)
          {
            LODWORD(v41) = 0;
            goto LABEL_70;
          }
        }
        *(unsigned char *)(v3 + *v19) = 1;
LABEL_68:
        if (*(unsigned char *)(v3 + *v19)) {
          LODWORD(v41) = 0;
        }
LABEL_70:
        *(_DWORD *)(a1 + 52) = v41;
        goto LABEL_77;
      }
      goto LABEL_65;
    }
    if (v31 == 2) {
      break;
    }
    if (v31 == 1)
    {
      if (v32)
      {
        if ((*(unsigned char *)(a1 + 56) & 8) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_99;
          }
          long long v37 = objc_alloc_init(GEOPDLocationInfoItem);
          if (!GEOPDLocationInfoItemReadAllFrom((uint64_t)v37, (void *)v3)) {
            goto LABEL_98;
          }
          PBReaderRecallMark();
          uint64_t v38 = 32;
LABEL_58:
          long long v46 = *(void **)(a1 + v38);
          *(void *)(a1 + v38) = v37;

          --v8;
LABEL_76:
          id v19 = (int *)MEMORY[0x1E4F940C8];
          goto LABEL_77;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_99;
        }
        char v51 = 16 * *(unsigned char *)(a1 + 56);
LABEL_75:
        v8 += v51 >> 7;
        goto LABEL_76;
      }
    }
    else if ((v59 & 1) != 0 && (*(unsigned char *)(a1 + 56) & 2) == 0)
    {
      if (!*(void *)(a1 + 16))
      {
        id v47 = objc_alloc_init(MEMORY[0x1E4F940B0]);
        uint64_t v48 = *(void **)(a1 + 16);
        *(void *)(a1 + 16) = v47;
      }
      int v49 = PBUnknownFieldAdd();
      id v19 = (int *)MEMORY[0x1E4F940C8];
      if (!v49)
      {
        int v57 = 0;
        uint64_t v58 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__flags;
        goto LABEL_81;
      }
      goto LABEL_77;
    }
LABEL_65:
    char v50 = PBReaderSkipValueWithTag();
    id v19 = (int *)MEMORY[0x1E4F940C8];
    if ((v50 & 1) == 0)
    {
      int v57 = 0;
LABEL_79:
      uint64_t v58 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__flags;
      goto LABEL_80;
    }
LABEL_77:
    if (!(v60 & 1 | (v8 != 0))) {
      goto LABEL_78;
    }
  }
  if (!v32) {
    goto LABEL_65;
  }
  if ((*(unsigned char *)(a1 + 56) & 4) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0) {
      goto LABEL_99;
    }
    char v51 = 32 * *(unsigned char *)(a1 + 56);
    goto LABEL_75;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_99;
  }
  long long v37 = objc_alloc_init(GEOPDFactoidInfoItem);
  if (GEOPDFactoidInfoItemReadAllFrom((uint64_t)v37, (void *)v3))
  {
    PBReaderRecallMark();
    uint64_t v38 = 24;
    goto LABEL_58;
  }
LABEL_98:

LABEL_99:
  int v57 = 0;
  uint64_t v58 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__flags;
  id v19 = (int *)MEMORY[0x1E4F940C8];
LABEL_80:
  if ((v59 & 1) == 0) {
    goto LABEL_82;
  }
LABEL_81:
  *(unsigned char *)(a1 + v58[228]) |= 2u;
LABEL_82:
  if (v62 || (v57 & 1) == 0)
  {
    *(unsigned char *)(a1 + v58[228]) |= 8u;
    *(unsigned char *)(a1 + v58[228]) |= 4u;
    goto LABEL_92;
  }
  if (v17)
  {
    while (2)
    {
      while (1)
      {
        int v53 = *v17++;
        int v52 = v53;
        if (v53 == 1) {
          break;
        }
        if (v52 == 2)
        {
          char v54 = 4;
          goto LABEL_91;
        }
        if (!v52) {
          goto LABEL_92;
        }
      }
      char v54 = 8;
LABEL_91:
      *(unsigned char *)(a1 + v58[228]) |= v54;
      continue;
    }
  }
LABEL_92:
  if (v57) {
    unint64_t v3 = *(unsigned char *)(v3 + *v19) == 0;
  }
  else {
    unint64_t v3 = 0;
  }
  if (v62)
  {
    uint64_t v55 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_189B08748(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B08C14(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDPlaceInfosModuleConfigurationReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDPlaceInfosModuleConfigurationReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOPDPlaceInfosModuleConfigurationReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOPDPlaceInfosModuleConfigurationReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDPlaceInfosModuleConfigurationReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_189B08E7C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B09044(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B091F8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlaceRibbonConfigurationReadAllFrom(uint64_t a1, void *a2, int a3)
{
  uint64_t v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    uint64_t v6 = (int *)MEMORY[0x1E4F940E8];
    char v7 = (int *)MEMORY[0x1E4F940E0];
    id v8 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v5[*MEMORY[0x1E4F940E8]] < *(void *)&v5[*MEMORY[0x1E4F940E0]])
    {
      uint64_t v9 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v5[*v8]) {
          break;
        }
        char v10 = 0;
        unsigned int v11 = 0;
        unint64_t v12 = 0;
        while (1)
        {
          uint64_t v13 = *v6;
          uint64_t v14 = *(void *)&v5[v13];
          unint64_t v15 = v14 + 1;
          if (v14 == -1 || v15 > *(void *)&v5[*v7]) {
            break;
          }
          char v16 = *(unsigned char *)(*(void *)&v5[*v9] + v14);
          *(void *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0) {
            goto LABEL_13;
          }
          v10 += 7;
          if (v11++ >= 9)
          {
            unint64_t v12 = 0;
            int v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        int v18 = v5[*v8];
        if (v5[*v8]) {
          unint64_t v12 = 0;
        }
LABEL_15:
        if (v18 || (v12 & 7) == 4) {
          break;
        }
        if ((v12 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_29;
          }
          uint64_t v20 = objc_alloc_init(GEOPDRibbonItem);
          if (!GEOPDRibbonItemReadAllFrom((uint64_t)v20, v5, a3))
          {

            goto LABEL_29;
          }
          PBReaderRecallMark();
          -[GEOPDPlaceRibbonConfiguration addRibbonItem:](a1, v20);
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v21 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            unsigned int v22 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v21;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_29;
          }
        }
      }
      while (*(void *)&v5[*v6] < *(void *)&v5[*v7]);
    }
    BOOL v23 = v5[*v8] == 0;
  }
  else
  {
LABEL_29:
    BOOL v23 = 0;
  }
  objc_sync_exit(v5);

  return v23;
}

void sub_189B09D90(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlacecardLayoutConfigurationReadAllFrom(void *a1, void *a2, int a3)
{
  uint64_t v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    uint64_t v6 = (int *)MEMORY[0x1E4F940E8];
    char v7 = (int *)MEMORY[0x1E4F940E0];
    id v8 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v5[*MEMORY[0x1E4F940E8]] < *(void *)&v5[*MEMORY[0x1E4F940E0]])
    {
      uint64_t v9 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v5[*v8]) {
          break;
        }
        char v10 = 0;
        unsigned int v11 = 0;
        unint64_t v12 = 0;
        while (1)
        {
          uint64_t v13 = *v6;
          uint64_t v14 = *(void *)&v5[v13];
          unint64_t v15 = v14 + 1;
          if (v14 == -1 || v15 > *(void *)&v5[*v7]) {
            break;
          }
          char v16 = *(unsigned char *)(*(void *)&v5[*v9] + v14);
          *(void *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0) {
            goto LABEL_13;
          }
          v10 += 7;
          if (v11++ >= 9)
          {
            unint64_t v12 = 0;
            int v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        int v18 = v5[*v8];
        if (v5[*v8]) {
          unint64_t v12 = 0;
        }
LABEL_15:
        if (v18 || (v12 & 7) == 4) {
          break;
        }
        if ((v12 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_29;
          }
          uint64_t v20 = objc_alloc_init(GEOPDModuleLayoutEntry);
          if (!GEOPDModuleLayoutEntryReadAllFrom((uint64_t)v20, v5, a3))
          {

            goto LABEL_29;
          }
          PBReaderRecallMark();
          objc_msgSend(a1, "addEntries:", v20, 0, 0);
        }
        else
        {
          if (!a1[1])
          {
            id v21 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            unsigned int v22 = (void *)a1[1];
            a1[1] = v21;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_29;
          }
        }
      }
      while (*(void *)&v5[*v6] < *(void *)&v5[*v7]);
    }
    BOOL v23 = v5[*v8] == 0;
  }
  else
  {
LABEL_29:
    BOOL v23 = 0;
  }
  objc_sync_exit(v5);

  return v23;
}

void sub_189B0A694(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlacecardLayoutConfigurationReadFrom(void *a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOPDPlacecardLayoutConfigurationReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189B0A6F8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlacecardLayoutConfigurationFilterReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    uint64_t v6 = (int *)MEMORY[0x1E4F940C8];
    char v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      int v8 = v3[*v6];
      if (*(void *)&v3[*v4] >= *(void *)&v3[*v5]) {
        break;
      }
      if (v3[*v6])
      {
        int v8 = 1;
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      uint64_t v11 = 0;
      while (1)
      {
        uint64_t v12 = *v4;
        uint64_t v13 = *(void *)&v3[v12];
        unint64_t v14 = v13 + 1;
        if (v13 == -1 || v14 > *(void *)&v3[*v5]) {
          break;
        }
        char v15 = *(unsigned char *)(*(void *)&v3[*v7] + v13);
        *(void *)&v3[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0) {
          goto LABEL_13;
        }
        v9 += 7;
        if (v10++ >= 9)
        {
          char v17 = 0;
          int v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      int v8 = v3[*v6];
      if (v3[*v6]) {
        char v17 = 0;
      }
      else {
        char v17 = v11;
      }
LABEL_16:
      if (v8) {
        BOOL v18 = 1;
      }
      else {
        BOOL v18 = (v17 & 7) == 4;
      }
      if (v18) {
        break;
      }
      if (!*(void *)(a1 + 8))
      {
        id v19 = objc_alloc_init(MEMORY[0x1E4F940B0]);
        uint64_t v20 = *(void **)(a1 + 8);
        *(void *)(a1 + 8) = v19;
      }
      if ((PBUnknownFieldAdd() & 1) == 0) {
        goto LABEL_23;
      }
    }
    BOOL v21 = v8 == 0;
  }
  else
  {
LABEL_23:
    BOOL v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_189B0B01C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B0B210(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B0B450(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDPlacecardLayoutDataCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  long long v7 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  long long v10 = 0u;
  id v2 = *(id *)(a1 + 32);
  uint64_t v3 = [v2 countByEnumeratingWithState:&v7 objects:v11 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v8;
    while (1)
    {
      if (*(void *)v8 != v5) {
        objc_enumerationMutation(v2);
      }
      if (!--v4)
      {
        uint64_t v4 = [v2 countByEnumeratingWithState:&v7 objects:v11 count:16];
        if (!v4) {
          break;
        }
      }
    }
  }

  return objc_msgSend(*(id *)(a1 + 24), "readAll:", 1, v7);
}

BOOL GEOPDPlacecardLayoutDataIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  BOOL v2 = (*(unsigned char *)(a1 + 52) & 0xE) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return v2;
}

void sub_189B0BD64(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlacecardURLReadAllFrom(uint64_t a1, void *a2)
{
  uint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    uint64_t v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      long long v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          uint64_t v18 = PBReaderReadString();
          id v19 = *(void **)(a1 + 16);
          *(void *)(a1 + 16) = v18;
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v20 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            BOOL v21 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v20;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_26;
          }
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v22 = v3[*v6] == 0;
  }
  else
  {
LABEL_26:
    BOOL v22 = 0;
  }
  objc_sync_exit(v3);

  return v22;
}

void sub_189B0C354(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPlacecardURLFilterReadAllFrom(uint64_t a1, void *a2)
{
  uint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    uint64_t v6 = (int *)MEMORY[0x1E4F940C8];
    long long v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      int v8 = v3[*v6];
      if (*(void *)&v3[*v4] >= *(void *)&v3[*v5]) {
        break;
      }
      if (v3[*v6])
      {
        int v8 = 1;
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      uint64_t v11 = 0;
      while (1)
      {
        uint64_t v12 = *v4;
        uint64_t v13 = *(void *)&v3[v12];
        unint64_t v14 = v13 + 1;
        if (v13 == -1 || v14 > *(void *)&v3[*v5]) {
          break;
        }
        char v15 = *(unsigned char *)(*(void *)&v3[*v7] + v13);
        *(void *)&v3[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0) {
          goto LABEL_13;
        }
        v9 += 7;
        if (v10++ >= 9)
        {
          char v17 = 0;
          int v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      int v8 = v3[*v6];
      if (v3[*v6]) {
        char v17 = 0;
      }
      else {
        char v17 = v11;
      }
LABEL_16:
      if (v8) {
        BOOL v18 = 1;
      }
      else {
        BOOL v18 = (v17 & 7) == 4;
      }
      if (v18) {
        break;
      }
      if (!*(void *)(a1 + 8))
      {
        id v19 = objc_alloc_init(MEMORY[0x1E4F940B0]);
        id v20 = *(void **)(a1 + 8);
        *(void *)(a1 + 8) = v19;
      }
      if ((PBUnknownFieldAdd() & 1) == 0) {
        goto LABEL_23;
      }
    }
    BOOL v21 = v8 == 0;
  }
  else
  {
LABEL_23:
    BOOL v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_189B0C9AC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B0CC74(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B0CDCC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B0CEDC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B0D230(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDPoiEventReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 88));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 84);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 80)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  unsigned int v12 = ((*(unsigned __int16 *)(a1 + 96) >> 1) & 1)
      + (unsigned __int16)(vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int16 *)(a1 + 96)), (uint16x4_t)0xFFF9FFFEFFFCFFFBLL), (int8x8_t)0x1000100010001))+ ((*(_WORD *)(a1 + 96) >> 3) & 1)+ (HIBYTE(*(_WORD *)(a1 + 96)) & 1)+ ((*(_WORD *)(a1 + 96) >> 6) & 1));
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 > 4;
        char v17 = v16 & ~(_BYTE)v11 | v9;
        unsigned __int8 v18 = v16 | v11;
        char v60 = v17;
        char v61 = v18 | v17;
        if ((v18 | v8)) {
          id v19 = 0;
        }
        else {
          id v19 = a3;
        }
        id v20 = (int *)MEMORY[0x1E4F940E8];
        char v62 = (v19 == 0) | v18;
        BOOL v63 = v18;
        BOOL v21 = (int *)MEMORY[0x1E4F940C8];
        BOOL v22 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v9;
LABEL_8:
        uint64_t v14 = v10;
        uint64_t v15 = v11;
LABEL_10:
        ++v7;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v21)) {
      goto LABEL_105;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      BOOL v30 = v24++ >= 9;
      if (v30)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_25:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_105:
      int v58 = 1;
      goto LABEL_106;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v63;
    if ((v62 & 1) == 0)
    {
      int v35 = v19;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    switch((int)v33)
    {
      case 1:
        if (!v34) {
          goto LABEL_90;
        }
        if ((*(_WORD *)(a1 + 96) & 0x10) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_127;
          }
          char v39 = objc_alloc_init(GEOPDMapsIdentifier);
          if (GEOPDMapsIdentifierReadAllFrom((uint64_t)v39, (void *)v3))
          {
            PBReaderRecallMark();
            uint64_t v40 = 40;
            goto LABEL_75;
          }
          goto LABEL_126;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_127;
        }
        __int16 v53 = *(_WORD *)(a1 + 96) << 11;
        goto LABEL_102;
      case 2:
        if (!v34) {
          goto LABEL_90;
        }
        if ((*(_WORD *)(a1 + 96) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_127;
          }
          __int16 v53 = *(_WORD *)(a1 + 96) << 10;
          goto LABEL_102;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_127;
        }
        char v39 = objc_alloc_init(GEOLocalizedString);
        if (!GEOLocalizedStringReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1)) {
          goto LABEL_126;
        }
        PBReaderRecallMark();
        uint64_t v40 = 48;
        goto LABEL_75;
      case 3:
        if (!v34 || (*(_WORD *)(a1 + 96) & 4) != 0) {
          goto LABEL_90;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_127;
        }
        char v39 = objc_alloc_init(GEOPDEventCategory);
        if (!GEOPDEventCategoryReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1)) {
          goto LABEL_126;
        }
        PBReaderRecallMark();
        -[GEOPDPoiEvent _addNoFlagsEventCategory:](a1, v39);
        goto LABEL_81;
      case 4:
        if (!v34 || (*(_WORD *)(a1 + 96) & 0x80) != 0) {
          goto LABEL_90;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_127;
        }
        char v39 = objc_alloc_init(GEOPDMapsIdentifier);
        if (!GEOPDMapsIdentifierReadAllFrom((uint64_t)v39, (void *)v3)) {
          goto LABEL_126;
        }
        PBReaderRecallMark();
        -[GEOPDPoiEvent _addNoFlagsPoiId:](a1, v39);
        goto LABEL_81;
      case 5:
        if (!v34 || (*(_WORD *)(a1 + 96) & 8) != 0) {
          goto LABEL_90;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_127;
        }
        char v39 = objc_alloc_init(GEOPDDateTimeRange);
        if (!GEOPDDateTimeRangeReadAllFrom((uint64_t)v39, (void *)v3)) {
          goto LABEL_126;
        }
        PBReaderRecallMark();
        -[GEOPDPoiEvent _addNoFlagsEventDateTime:](a1, v39);
        goto LABEL_81;
      case 6:
        if (!v34) {
          goto LABEL_90;
        }
        if ((*(_WORD *)(a1 + 96) & 0x100) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_127;
          }
          __int16 v53 = *(_WORD *)(a1 + 96) << 7;
LABEL_102:
          v7 += v53 >> 15;
LABEL_103:
          BOOL v21 = (int *)MEMORY[0x1E4F940C8];
          BOOL v22 = (int *)MEMORY[0x1E4F940B8];
          goto LABEL_104;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_127;
        }
        char v39 = objc_alloc_init(GEOTimezone);
        if (GEOTimezoneReadAllFrom((uint64_t)v39, (void *)v3))
        {
          PBReaderRecallMark();
          uint64_t v40 = 72;
LABEL_75:
          unint64_t v44 = *(void **)(a1 + v40);
          *(void *)(a1 + v40) = v39;

          --v7;
          goto LABEL_103;
        }
LABEL_126:

LABEL_127:
        int v58 = 0;
        char v59 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__flags;
        BOOL v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_107:
        if (v60) {
LABEL_108:
        }
          *(_WORD *)(a1 + v59[249]) |= 2u;
        if (v63 || (v58 & 1) == 0)
        {
          *(_WORD *)(a1 + v59[249]) |= 0x10u;
          *(_WORD *)(a1 + v59[249]) |= 0x20u;
          *(_WORD *)(a1 + v59[249]) |= 4u;
          *(_WORD *)(a1 + v59[249]) |= 0x80u;
          *(_WORD *)(a1 + v59[249]) |= 8u;
          *(_WORD *)(a1 + v59[249]) |= 0x100u;
          *(_WORD *)(a1 + v59[249]) |= 0x40u;
        }
        else if (v19)
        {
          while (1)
          {
            int v54 = *v19++;
            __int16 v55 = 16;
            switch(v54)
            {
              case 0:
                goto LABEL_120;
              case 1:
                goto LABEL_119;
              case 2:
                __int16 v55 = 32;
                goto LABEL_119;
              case 3:
                __int16 v55 = 4;
                goto LABEL_119;
              case 4:
                __int16 v55 = 128;
                goto LABEL_119;
              case 5:
                __int16 v55 = 8;
                goto LABEL_119;
              case 6:
                __int16 v55 = 256;
                goto LABEL_119;
              case 7:
                __int16 v55 = 64;
LABEL_119:
                *(_WORD *)(a1 + v59[249]) |= v55;
                break;
              default:
                continue;
            }
          }
        }
LABEL_120:
        if (v58) {
          unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
        }
        else {
          unint64_t v3 = 0;
        }
        if (v63)
        {
          uint64_t v56 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      case 7:
        if (!v34 || (*(_WORD *)(a1 + 96) & 0x40) != 0) {
          goto LABEL_90;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_127;
        }
        char v39 = objc_alloc_init(GEOPDPerformer);
        if (!GEOPDPerformerReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1)) {
          goto LABEL_126;
        }
        PBReaderRecallMark();
        -[GEOPDPoiEvent _addNoFlagsPerformer:](a1, v39);
LABEL_81:

        goto LABEL_103;
      case 8:
        if ((v8 & 1) == 0) {
          goto LABEL_90;
        }
        char v45 = 0;
        unsigned int v46 = 0;
        uint64_t v47 = 0;
        *(_WORD *)(a1 + 96) |= 1u;
        while (2)
        {
          uint64_t v48 = *v20;
          uint64_t v49 = *(void *)(v3 + v48);
          unint64_t v50 = v49 + 1;
          if (v49 == -1 || v50 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v51 = *(unsigned char *)(*(void *)(v3 + *v22) + v49);
            *(void *)(v3 + v48) = v50;
            v47 |= (unint64_t)(v51 & 0x7F) << v45;
            if (v51 < 0)
            {
              v45 += 7;
              BOOL v30 = v46++ >= 9;
              if (v30)
              {
                LODWORD(v47) = 0;
                goto LABEL_95;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          LODWORD(v47) = 0;
        }
LABEL_95:
        *(_DWORD *)(a1 + 92) = v47;
        goto LABEL_104;
      default:
        if ((v60 & 1) == 0 || (*(_WORD *)(a1 + 96) & 2) != 0)
        {
LABEL_90:
          char v52 = PBReaderSkipValueWithTag();
          BOOL v22 = (int *)MEMORY[0x1E4F940B8];
          BOOL v21 = (int *)MEMORY[0x1E4F940C8];
          if ((v52 & 1) == 0)
          {
            int v58 = 0;
LABEL_106:
            char v59 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__flags;
            goto LABEL_107;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v41 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            uint64_t v42 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v41;
          }
          int v43 = PBUnknownFieldAdd();
          BOOL v21 = (int *)MEMORY[0x1E4F940C8];
          BOOL v22 = (int *)MEMORY[0x1E4F940B8];
          if (!v43)
          {
            int v58 = 0;
            char v59 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__flags;
            goto LABEL_108;
          }
        }
LABEL_104:
        if (!(v61 & 1 | (v7 != 0))) {
          goto LABEL_105;
        }
        continue;
    }
  }
}

void sub_189B0DCEC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B0DDB4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B0DFE0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B0E184(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B0E294(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B0E5D8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDPoiEventCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  uint64_t v40 = *MEMORY[0x1E4F143B8];
  [a1[5] readAll:1];
  [a1[6] readAll:1];
  long long v34 = 0u;
  long long v35 = 0u;
  long long v32 = 0u;
  long long v33 = 0u;
  id v2 = a1[3];
  uint64_t v3 = [v2 countByEnumeratingWithState:&v32 objects:v39 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v33;
    while (1)
    {
      if (*(void *)v33 != v5) {
        objc_enumerationMutation(v2);
      }
      if (!--v4)
      {
        uint64_t v4 = [v2 countByEnumeratingWithState:&v32 objects:v39 count:16];
        if (!v4) {
          break;
        }
      }
    }
  }

  long long v30 = 0u;
  long long v31 = 0u;
  long long v28 = 0u;
  long long v29 = 0u;
  id v6 = a1[8];
  uint64_t v7 = [v6 countByEnumeratingWithState:&v28 objects:v38 count:16];
  if (v7)
  {
    uint64_t v8 = v7;
    uint64_t v9 = *(void *)v29;
    do
    {
      uint64_t v10 = 0;
      do
      {
        if (*(void *)v29 != v9) {
          objc_enumerationMutation(v6);
        }
        [*(id *)(*((void *)&v28 + 1) + 8 * v10++) readAll:1];
      }
      while (v8 != v10);
      uint64_t v8 = [v6 countByEnumeratingWithState:&v28 objects:v38 count:16];
    }
    while (v8);
  }

  long long v26 = 0u;
  long long v27 = 0u;
  long long v24 = 0u;
  long long v25 = 0u;
  id v11 = a1[4];
  uint64_t v12 = [v11 countByEnumeratingWithState:&v24 objects:v37 count:16];
  if (v12)
  {
    uint64_t v13 = v12;
    uint64_t v14 = *(void *)v25;
    while (1)
    {
      if (*(void *)v25 != v14) {
        objc_enumerationMutation(v11);
      }
      if (!--v13)
      {
        uint64_t v13 = [v11 countByEnumeratingWithState:&v24 objects:v37 count:16];
        if (!v13) {
          break;
        }
      }
    }
  }

  long long v22 = 0u;
  long long v23 = 0u;
  long long v20 = 0u;
  long long v21 = 0u;
  id v15 = a1[7];
  uint64_t v16 = [v15 countByEnumeratingWithState:&v20 objects:v36 count:16];
  if (v16)
  {
    uint64_t v17 = v16;
    uint64_t v18 = *(void *)v21;
    do
    {
      uint64_t v19 = 0;
      do
      {
        if (*(void *)v21 != v18) {
          objc_enumerationMutation(v15);
        }
        -[GEOPDPerformer readAll:](*(void *)(*((void *)&v20 + 1) + 8 * v19++), 1);
      }
      while (v17 != v19);
      uint64_t v17 = [v15 countByEnumeratingWithState:&v20 objects:v36 count:16];
    }
    while (v17);
  }
}

void sub_189B0EF00(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B0F3C8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPriceDescriptionReadAllFrom(uint64_t a1, void *a2)
{
  uint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    id v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          uint64_t v18 = PBReaderReadString();
          uint64_t v19 = *(void **)(a1 + 16);
          *(void *)(a1 + 16) = v18;
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v20 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            long long v21 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v20;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_26;
          }
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v22 = v3[*v6] == 0;
  }
  else
  {
LABEL_26:
    BOOL v22 = 0;
  }
  objc_sync_exit(v3);

  return v22;
}

void sub_189B10188(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPriceDescriptionFilterReadAllFrom(uint64_t a1, void *a2)
{
  uint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    id v6 = (int *)MEMORY[0x1E4F940C8];
    uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      int v8 = v3[*v6];
      if (*(void *)&v3[*v4] >= *(void *)&v3[*v5]) {
        break;
      }
      if (v3[*v6])
      {
        int v8 = 1;
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      uint64_t v11 = 0;
      while (1)
      {
        uint64_t v12 = *v4;
        uint64_t v13 = *(void *)&v3[v12];
        unint64_t v14 = v13 + 1;
        if (v13 == -1 || v14 > *(void *)&v3[*v5]) {
          break;
        }
        char v15 = *(unsigned char *)(*(void *)&v3[*v7] + v13);
        *(void *)&v3[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0) {
          goto LABEL_13;
        }
        v9 += 7;
        if (v10++ >= 9)
        {
          char v17 = 0;
          int v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      int v8 = v3[*v6];
      if (v3[*v6]) {
        char v17 = 0;
      }
      else {
        char v17 = v11;
      }
LABEL_16:
      if (v8) {
        BOOL v18 = 1;
      }
      else {
        BOOL v18 = (v17 & 7) == 4;
      }
      if (v18) {
        break;
      }
      if (!*(void *)(a1 + 8))
      {
        id v19 = objc_alloc_init(MEMORY[0x1E4F940B0]);
        id v20 = *(void **)(a1 + 8);
        *(void *)(a1 + 8) = v19;
      }
      if ((PBUnknownFieldAdd() & 1) == 0) {
        goto LABEL_23;
      }
    }
    BOOL v21 = v8 == 0;
  }
  else
  {
LABEL_23:
    BOOL v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_189B107D8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDPrototypeReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  id v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 52);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 48)];
  uint64_t v7 = 0;
  uint64_t v8 = 0;
  char v9 = 0;
  uint64_t v10 = 0;
  unsigned int v11 = ((*(unsigned __int8 *)(a1 + 60) >> 3) & 1)
      + (*(unsigned char *)(a1 + 60) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 1) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 2) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v10])
    {
      case -4:
        ++v11;
        uint64_t v12 = v7;
        goto LABEL_8;
      case -3:
        char v9 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_8;
      case 0:
        BOOL v14 = v11 > 1;
        char v15 = v14 & ~(_BYTE)v7;
        unsigned __int8 v16 = v14 | v7;
        char v49 = v15 | v8;
        if ((v16 | v9)) {
          char v17 = 0;
        }
        else {
          char v17 = a3;
        }
        BOOL v52 = v16;
        char v50 = v16 | v15 | v8;
        char v51 = (v17 == 0) | v16;
        BOOL v18 = (int *)MEMORY[0x1E4F940E8];
        id v19 = (int *)MEMORY[0x1E4F940C8];
        id v20 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v11;
LABEL_7:
        uint64_t v12 = v7;
        uint64_t v13 = v8;
LABEL_8:
        ++v10;
        uint64_t v7 = v12;
        uint64_t v8 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v18) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v19)) {
      goto LABEL_65;
    }
    char v21 = 0;
    unsigned int v22 = 0;
    unint64_t v23 = 0;
    while (1)
    {
      uint64_t v24 = *v18;
      uint64_t v25 = *(void *)(v3 + v24);
      unint64_t v26 = v25 + 1;
      if (v25 == -1 || v26 > *(void *)(v3 + *v6)) {
        break;
      }
      char v27 = *(unsigned char *)(*(void *)(v3 + *v20) + v25);
      *(void *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0) {
        goto LABEL_23;
      }
      v21 += 7;
      if (v22++ >= 9)
      {
        unint64_t v23 = 0;
        int v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_25;
      }
    }
    *(unsigned char *)(v3 + *v19) = 1;
LABEL_23:
    int v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(unsigned char *)(v3 + *v19)) {
      unint64_t v23 = 0;
    }
LABEL_25:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_65:
      int v48 = 1;
      goto LABEL_66;
    }
    unint64_t v31 = v23 >> 3;
    BOOL v32 = v52;
    if ((v51 & 1) == 0)
    {
      long long v33 = v17;
      do
      {
        int v35 = *v33++;
        int v34 = v35;
        BOOL v32 = v35 != 0;
        if (v35) {
          BOOL v36 = v34 == v31;
        }
        else {
          BOOL v36 = 1;
        }
      }
      while (!v36);
    }
    if (v31 == 3)
    {
      if (!v32 || (*(unsigned char *)(a1 + 60) & 4) != 0)
      {
LABEL_57:
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_81;
        }
        goto LABEL_58;
      }
      char v39 = PBReaderReadData();
      if (v39) {
        -[GEOPDPrototype _addNoFlagsValue:](a1, v39);
      }

      goto LABEL_58;
    }
    if (v31 == 2) {
      break;
    }
    if (v31 == 1)
    {
      if (!v32) {
        goto LABEL_57;
      }
      if ((*(unsigned char *)(a1 + 60) & 2) != 0)
      {
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_81;
        }
        char v43 = *(unsigned char *)(a1 + 60) << 6;
        goto LABEL_64;
      }
      uint64_t v37 = PBReaderReadString();
      uint64_t v38 = 24;
      goto LABEL_50;
    }
    if (v49 & 1) == 0 || (*(unsigned char *)(a1 + 60)) {
      goto LABEL_57;
    }
    if (!*(void *)(a1 + 16))
    {
      id v41 = objc_alloc_init(MEMORY[0x1E4F940B0]);
      uint64_t v42 = *(void **)(a1 + 16);
      *(void *)(a1 + 16) = v41;
    }
    if (!PBUnknownFieldAdd())
    {
      int v48 = 0;
      id v19 = (int *)MEMORY[0x1E4F940C8];
      goto LABEL_67;
    }
LABEL_58:
    id v19 = (int *)MEMORY[0x1E4F940C8];
    if (!(v50 & 1 | (v10 != 0))) {
      goto LABEL_65;
    }
  }
  if (!v32) {
    goto LABEL_57;
  }
  if ((*(unsigned char *)(a1 + 60) & 8) == 0)
  {
    uint64_t v37 = PBReaderReadString();
    uint64_t v38 = 40;
LABEL_50:
    uint64_t v40 = *(void **)(a1 + v38);
    *(void *)(a1 + v38) = v37;

    --v10;
    goto LABEL_58;
  }
  if (PBReaderSkipValueWithTag())
  {
    char v43 = 16 * *(unsigned char *)(a1 + 60);
LABEL_64:
    v10 += v43 >> 7;
    goto LABEL_58;
  }
LABEL_81:
  int v48 = 0;
  id v19 = (int *)MEMORY[0x1E4F940C8];
LABEL_66:
  if ((v49 & 1) == 0) {
    goto LABEL_68;
  }
LABEL_67:
  *(unsigned char *)(a1 + 60) |= 1u;
LABEL_68:
  if (v52 || (v48 & 1) == 0)
  {
    *(unsigned char *)(a1 + 60) |= 2u;
    *(unsigned char *)(a1 + 60) |= 8u;
    *(unsigned char *)(a1 + 60) |= 4u;
  }
  else if (v17)
  {
    while (1)
    {
      int v44 = *v17++;
      char v45 = 2;
      switch(v44)
      {
        case 0:
          goto LABEL_75;
        case 1:
          goto LABEL_74;
        case 2:
          char v45 = 8;
          goto LABEL_74;
        case 3:
          char v45 = 4;
LABEL_74:
          *(unsigned char *)(a1 + 60) |= v45;
          break;
        default:
          continue;
      }
    }
  }
LABEL_75:
  if (v48) {
    unint64_t v3 = *(unsigned char *)(v3 + *v19) == 0;
  }
  else {
    unint64_t v3 = 0;
  }
  if (v52)
  {
    unsigned int v46 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_189B10F74(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B11580(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B11668(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDPrototypeReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 52))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDPrototypeReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = [v8 position];
  *(_DWORD *)(a1 + 52) = [v8 length];
  if (a3) {
    char v9 = (int *)&GEOPDPrototypeReadAllFrom_recursiveTag;
  }
  else {
    char v9 = (int *)&GEOPDPrototypeReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDPrototypeReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_189B118D4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B11B30(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B11D98(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPrototypeContainerReadAllFrom(uint64_t a1, void *a2, int a3)
{
  uint64_t v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    id v6 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v7 = (int *)MEMORY[0x1E4F940E0];
    id v8 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v5[*MEMORY[0x1E4F940E8]] < *(void *)&v5[*MEMORY[0x1E4F940E0]])
    {
      char v9 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v5[*v8]) {
          break;
        }
        char v10 = 0;
        unsigned int v11 = 0;
        unint64_t v12 = 0;
        while (1)
        {
          uint64_t v13 = *v6;
          uint64_t v14 = *(void *)&v5[v13];
          unint64_t v15 = v14 + 1;
          if (v14 == -1 || v15 > *(void *)&v5[*v7]) {
            break;
          }
          char v16 = *(unsigned char *)(*(void *)&v5[*v9] + v14);
          *(void *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0) {
            goto LABEL_13;
          }
          v10 += 7;
          if (v11++ >= 9)
          {
            unint64_t v12 = 0;
            int v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        int v18 = v5[*v8];
        if (v5[*v8]) {
          unint64_t v12 = 0;
        }
LABEL_15:
        if (v18 || (v12 & 7) == 4) {
          break;
        }
        if ((v12 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_29;
          }
          id v20 = objc_alloc_init(GEOPDPrototype);
          if (!GEOPDPrototypeReadAllFrom((uint64_t)v20, v5, a3))
          {

            goto LABEL_29;
          }
          PBReaderRecallMark();
          -[GEOPDPrototypeContainer addPrototype:](a1, v20);
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v21 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            unsigned int v22 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v21;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_29;
          }
        }
      }
      while (*(void *)&v5[*v6] < *(void *)&v5[*v7]);
    }
    BOOL v23 = v5[*v8] == 0;
  }
  else
  {
LABEL_29:
    BOOL v23 = 0;
  }
  objc_sync_exit(v5);

  return v23;
}

void sub_189B12640(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPrototypeContainerFilterReadAllFrom(uint64_t a1, void *a2)
{
  unint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    id v6 = (int *)MEMORY[0x1E4F940C8];
    uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      int v8 = v3[*v6];
      if (*(void *)&v3[*v4] >= *(void *)&v3[*v5]) {
        break;
      }
      if (v3[*v6])
      {
        int v8 = 1;
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      uint64_t v11 = 0;
      while (1)
      {
        uint64_t v12 = *v4;
        uint64_t v13 = *(void *)&v3[v12];
        unint64_t v14 = v13 + 1;
        if (v13 == -1 || v14 > *(void *)&v3[*v5]) {
          break;
        }
        char v15 = *(unsigned char *)(*(void *)&v3[*v7] + v13);
        *(void *)&v3[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0) {
          goto LABEL_13;
        }
        v9 += 7;
        if (v10++ >= 9)
        {
          char v17 = 0;
          int v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      int v8 = v3[*v6];
      if (v3[*v6]) {
        char v17 = 0;
      }
      else {
        char v17 = v11;
      }
LABEL_16:
      if (v8) {
        BOOL v18 = 1;
      }
      else {
        BOOL v18 = (v17 & 7) == 4;
      }
      if (v18) {
        break;
      }
      if (!*(void *)(a1 + 8))
      {
        id v19 = objc_alloc_init(MEMORY[0x1E4F940B0]);
        id v20 = *(void **)(a1 + 8);
        *(void *)(a1 + 8) = v19;
      }
      if ((PBUnknownFieldAdd() & 1) == 0) {
        goto LABEL_23;
      }
    }
    BOOL v21 = v8 == 0;
  }
  else
  {
LABEL_23:
    BOOL v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_189B12E1C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B13070(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDPublisherReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  id v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 68);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 64)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  unsigned int v12 = (unsigned __int16)(vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int16 *)(a1 + 84)), (uint16x4_t)0xFFFDFFFCFFF9FFFBLL), (int8x8_t)0x1000100010001))+ ((*(_WORD *)(a1 + 84) >> 6) & 1)+ ((*(_WORD *)(a1 + 84) >> 2) & 1));
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 > 3;
        char v17 = v16 & ~(_BYTE)v11 | v9;
        unsigned __int8 v18 = v16 | v11;
        char v67 = v17;
        char v68 = v18 | v17;
        if ((v18 | v8)) {
          id v19 = 0;
        }
        else {
          id v19 = a3;
        }
        char v69 = (v19 == 0) | v18;
        BOOL v70 = v18;
        id v20 = (int *)MEMORY[0x1E4F940E8];
        BOOL v21 = (int *)MEMORY[0x1E4F940C8];
        unsigned int v22 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v9;
LABEL_8:
        uint64_t v14 = v10;
        uint64_t v15 = v11;
LABEL_10:
        ++v7;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v21)) {
      goto LABEL_108;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      BOOL v30 = v24++ >= 9;
      if (v30)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_25:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_108:
      int v65 = 1;
      goto LABEL_109;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v70;
    if ((v69 & 1) == 0)
    {
      int v35 = v19;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    switch((int)v33)
    {
      case 1:
        if (!v34) {
          goto LABEL_88;
        }
        if ((*(_WORD *)(a1 + 84) & 0x80) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_129;
          }
          char v39 = objc_alloc_init(GEOPDMapsIdentifier);
          if (GEOPDMapsIdentifierReadAllFrom((uint64_t)v39, (void *)v3))
          {
            PBReaderRecallMark();
            uint64_t v40 = 56;
            goto LABEL_60;
          }
          goto LABEL_128;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_129;
        }
        __int16 v60 = *(_WORD *)(a1 + 84) << 8;
        goto LABEL_105;
      case 2:
        if (!v34) {
          goto LABEL_88;
        }
        if ((*(_WORD *)(a1 + 84) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_129;
          }
          __int16 v60 = *(_WORD *)(a1 + 84) << 10;
          goto LABEL_105;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_129;
        }
        char v39 = objc_alloc_init(GEOPDCaptionedPhoto);
        if (!GEOPDCaptionedPhotoReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1)) {
          goto LABEL_128;
        }
        PBReaderRecallMark();
        uint64_t v40 = 40;
        goto LABEL_60;
      case 3:
        if (!v34) {
          goto LABEL_88;
        }
        if ((*(_WORD *)(a1 + 84) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_129;
          }
          __int16 v60 = *(_WORD *)(a1 + 84) << 11;
LABEL_105:
          v7 += v60 >> 15;
LABEL_106:
          BOOL v21 = (int *)MEMORY[0x1E4F940C8];
          unsigned int v22 = (int *)MEMORY[0x1E4F940B8];
          goto LABEL_107;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_129;
        }
        char v39 = objc_alloc_init(GEOLocalizedString);
        if (GEOLocalizedStringReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1))
        {
          PBReaderRecallMark();
          uint64_t v40 = 32;
LABEL_60:
          int v44 = *(void **)(a1 + v40);
          *(void *)(a1 + v40) = v39;

          --v7;
          goto LABEL_106;
        }
LABEL_128:

LABEL_129:
        int v65 = 0;
        uint64_t v66 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__flags;
        BOOL v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_110:
        if (v67) {
LABEL_111:
        }
          *(_WORD *)(a1 + v66[261]) |= 4u;
        if (v70 || (v65 & 1) == 0)
        {
          *(_WORD *)(a1 + v66[261]) |= 0x80u;
          *(_WORD *)(a1 + v66[261]) |= 0x20u;
          *(_WORD *)(a1 + v66[261]) |= 0x10u;
          *(_WORD *)(a1 + v66[261]) |= 8u;
          *(_WORD *)(a1 + v66[261]) |= 0x40u;
        }
        else if (v19)
        {
          while (1)
          {
            int v62 = *v19++;
            __int16 v61 = 128;
            switch(v62)
            {
              case 0:
                goto LABEL_122;
              case 1:
                goto LABEL_120;
              case 2:
                __int16 v61 = 32;
                goto LABEL_120;
              case 3:
                __int16 v61 = 16;
                goto LABEL_120;
              case 4:
                __int16 v61 = 8;
                goto LABEL_120;
              case 6:
                __int16 v61 = 64;
LABEL_120:
                *(_WORD *)(a1 + v66[261]) |= v61;
                break;
              default:
                continue;
            }
          }
        }
LABEL_122:
        if (v65) {
          unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
        }
        else {
          unint64_t v3 = 0;
        }
        if (v70)
        {
          BOOL v63 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      case 4:
        if (!v34 || (*(_WORD *)(a1 + 84) & 8) != 0) {
          goto LABEL_88;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_129;
        }
        char v39 = objc_alloc_init(GEOPDMapsIdentifier);
        if (!GEOPDMapsIdentifierReadAllFrom((uint64_t)v39, (void *)v3)) {
          goto LABEL_128;
        }
        PBReaderRecallMark();
        -[GEOPDPublisher _addNoFlagsCollectionId:](a1, v39);
        goto LABEL_79;
      case 5:
        if ((v8 & 1) == 0) {
          goto LABEL_88;
        }
        char v45 = 0;
        unsigned int v46 = 0;
        uint64_t v47 = 0;
        *(_WORD *)(a1 + 84) |= 2u;
        while (2)
        {
          uint64_t v48 = *v20;
          uint64_t v49 = *(void *)(v3 + v48);
          unint64_t v50 = v49 + 1;
          if (v49 == -1 || v50 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v51 = *(unsigned char *)(*(void *)(v3 + *v22) + v49);
            *(void *)(v3 + v48) = v50;
            v47 |= (unint64_t)(v51 & 0x7F) << v45;
            if (v51 < 0)
            {
              v45 += 7;
              BOOL v30 = v46++ >= 9;
              if (v30)
              {
                LODWORD(v47) = 0;
                goto LABEL_93;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          LODWORD(v47) = 0;
        }
LABEL_93:
        uint64_t v59 = 80;
        goto LABEL_98;
      case 6:
        if (!v34 || (*(_WORD *)(a1 + 84) & 0x40) != 0) {
          goto LABEL_88;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_129;
        }
        char v39 = objc_alloc_init(GEOLocalizedString);
        if (!GEOLocalizedStringReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1)) {
          goto LABEL_128;
        }
        PBReaderRecallMark();
        -[GEOPDPublisher _addNoFlagsPublisherDescription:](a1, v39);
LABEL_79:

        goto LABEL_106;
      case 7:
        if ((v8 & 1) == 0) {
          goto LABEL_88;
        }
        char v52 = 0;
        unsigned int v53 = 0;
        uint64_t v47 = 0;
        *(_WORD *)(a1 + 84) |= 1u;
        while (2)
        {
          uint64_t v54 = *v20;
          uint64_t v55 = *(void *)(v3 + v54);
          unint64_t v56 = v55 + 1;
          if (v55 == -1 || v56 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v57 = *(unsigned char *)(*(void *)(v3 + *v22) + v55);
            *(void *)(v3 + v54) = v56;
            v47 |= (unint64_t)(v57 & 0x7F) << v52;
            if (v57 < 0)
            {
              v52 += 7;
              BOOL v30 = v53++ >= 9;
              if (v30)
              {
                LODWORD(v47) = 0;
                goto LABEL_97;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          LODWORD(v47) = 0;
        }
LABEL_97:
        uint64_t v59 = 76;
LABEL_98:
        *(_DWORD *)(a1 + v59) = v47;
        goto LABEL_107;
      default:
        if ((v67 & 1) == 0 || (*(_WORD *)(a1 + 84) & 4) != 0)
        {
LABEL_88:
          char v58 = PBReaderSkipValueWithTag();
          unsigned int v22 = (int *)MEMORY[0x1E4F940B8];
          BOOL v21 = (int *)MEMORY[0x1E4F940C8];
          if ((v58 & 1) == 0)
          {
            int v65 = 0;
LABEL_109:
            uint64_t v66 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__flags;
            goto LABEL_110;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v41 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            uint64_t v42 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v41;
          }
          int v43 = PBUnknownFieldAdd();
          BOOL v21 = (int *)MEMORY[0x1E4F940C8];
          unsigned int v22 = (int *)MEMORY[0x1E4F940B8];
          if (!v43)
          {
            int v65 = 0;
            uint64_t v66 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__flags;
            goto LABEL_111;
          }
        }
LABEL_107:
        if (!(v68 & 1 | (v7 != 0))) {
          goto LABEL_108;
        }
        continue;
    }
  }
}

void sub_189B13C2C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B13E10(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B1472C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDPublisherCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v22 = *MEMORY[0x1E4F143B8];
  [*(id *)(a1 + 56) readAll:1];
  -[GEOPDCaptionedPhoto readAll:](*(void *)(a1 + 40), 1);
  [*(id *)(a1 + 32) readAll:1];
  long long v18 = 0u;
  long long v19 = 0u;
  long long v16 = 0u;
  long long v17 = 0u;
  id v2 = *(id *)(a1 + 24);
  uint64_t v3 = [v2 countByEnumeratingWithState:&v16 objects:v21 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v17;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v17 != v5) {
          objc_enumerationMutation(v2);
        }
        [*(id *)(*((void *)&v16 + 1) + 8 * v6++) readAll:1];
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v16 objects:v21 count:16];
    }
    while (v4);
  }

  long long v14 = 0u;
  long long v15 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  id v7 = *(id *)(a1 + 48);
  uint64_t v8 = [v7 countByEnumeratingWithState:&v12 objects:v20 count:16];
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)v13;
    do
    {
      uint64_t v11 = 0;
      do
      {
        if (*(void *)v13 != v10) {
          objc_enumerationMutation(v7);
        }
        objc_msgSend(*(id *)(*((void *)&v12 + 1) + 8 * v11++), "readAll:", 1, (void)v12);
      }
      while (v9 != v11);
      uint64_t v9 = [v7 countByEnumeratingWithState:&v12 objects:v20 count:16];
    }
    while (v9);
  }
}

unint64_t GEOPDPublisherReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 68))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDPublisherReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 72));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 64) = [v8 position];
  *(_DWORD *)(a1 + 68) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOPDPublisherReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOPDPublisherReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDPublisherReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOPDPublisherCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
  return Specified;
}

void sub_189B15124(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B15470(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDPublisherIsDirty(uint64_t a1)
{
  uint64_t v13 = *MEMORY[0x1E4F143B8];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  __int16 v2 = *(_WORD *)(a1 + 84);
  if ((v2 & 0x180) != 0) {
    return 1;
  }
  if ((v2 & 0x20) != 0)
  {
    if (GEOPDCaptionedPhotoIsDirty(*(os_unfair_lock_s **)(a1 + 40))) {
      return 1;
    }
    __int16 v2 = *(_WORD *)(a1 + 84);
  }
  if ((v2 & 0x10) == 0) {
    goto LABEL_10;
  }
  if (GEOLocalizedStringIsDirty(*(void *)(a1 + 32))) {
    return 1;
  }
  __int16 v2 = *(_WORD *)(a1 + 84);
LABEL_10:
  if ((v2 & 0x48) != 0) {
    return 1;
  }
  if ((v2 & 0x40) == 0) {
    return 0;
  }
  long long v10 = 0u;
  long long v11 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  id v5 = *(id *)(a1 + 48);
  uint64_t v3 = [v5 countByEnumeratingWithState:&v8 objects:v12 count:16];
  if (v3)
  {
    uint64_t v6 = *(void *)v9;
    while (2)
    {
      for (uint64_t i = 0; i != v3; ++i)
      {
        if (*(void *)v9 != v6) {
          objc_enumerationMutation(v5);
        }
        if (GEOLocalizedStringIsDirty(*(void *)(*((void *)&v8 + 1) + 8 * i)))
        {
          uint64_t v3 = 1;
          goto LABEL_23;
        }
      }
      uint64_t v3 = [v5 countByEnumeratingWithState:&v8 objects:v12 count:16];
      if (v3) {
        continue;
      }
      break;
    }
  }
LABEL_23:

  return v3;
}

void sub_189B1598C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B162A0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDPublisherResultReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  char v7 = 0;
  uint64_t v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  int v12 = ((*(unsigned __int8 *)(a1 + 56) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 56) >> 2) & 1)
      + ((*(unsigned __int8 *)(a1 + 56) >> 1) & 1);
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v7 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 != 0;
        char v17 = v16 & ~(_BYTE)v11 | v9;
        unsigned __int8 v18 = v16 | v11;
        char v61 = v17;
        char v62 = v18 | v17;
        if ((v18 | v7)) {
          long long v19 = 0;
        }
        else {
          long long v19 = a3;
        }
        id v20 = (int *)MEMORY[0x1E4F940E8];
        char v63 = (v19 == 0) | v18;
        BOOL v64 = v18;
        BOOL v21 = (int *)MEMORY[0x1E4F940C8];
        uint64_t v22 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v9;
LABEL_8:
        uint64_t v14 = v10;
        uint64_t v15 = v11;
LABEL_10:
        ++v8;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v21)) {
      goto LABEL_75;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      BOOL v30 = v24++ >= 9;
      if (v30)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_25:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_75:
      int v59 = 1;
      goto LABEL_76;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v64;
    if ((v63 & 1) == 0)
    {
      int v35 = v19;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    if (v33 == 3) {
      break;
    }
    if (v33 == 2)
    {
      if (v7)
      {
        char v42 = 0;
        unsigned int v43 = 0;
        uint64_t v44 = 0;
        *(unsigned char *)(a1 + 56) |= 1u;
        uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
        while (1)
        {
          uint64_t v45 = *v20;
          uint64_t v46 = *(void *)(v3 + v45);
          unint64_t v47 = v46 + 1;
          if (v46 == -1 || v47 > *(void *)(v3 + *v6)) {
            break;
          }
          char v48 = *(unsigned char *)(*(void *)(v3 + *v22) + v46);
          *(void *)(v3 + v45) = v47;
          v44 |= (unint64_t)(v48 & 0x7F) << v42;
          if ((v48 & 0x80) == 0) {
            goto LABEL_69;
          }
          v42 += 7;
          BOOL v30 = v43++ >= 9;
          if (v30)
          {
            LODWORD(v44) = 0;
            goto LABEL_71;
          }
        }
        *(unsigned char *)(v3 + *v21) = 1;
LABEL_69:
        if (*(unsigned char *)(v3 + *v21)) {
          LODWORD(v44) = 0;
        }
LABEL_71:
        *(_DWORD *)(a1 + 52) = v44;
        goto LABEL_66;
      }
      goto LABEL_65;
    }
    if (v33 != 1)
    {
      if ((v61 & 1) != 0 && (*(unsigned char *)(a1 + 56) & 2) == 0)
      {
        if (!*(void *)(a1 + 16))
        {
          id v49 = objc_alloc_init(MEMORY[0x1E4F940B0]);
          unint64_t v50 = *(void **)(a1 + 16);
          *(void *)(a1 + 16) = v49;
        }
        int v51 = PBUnknownFieldAdd();
        BOOL v21 = (int *)MEMORY[0x1E4F940C8];
        uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
        if (!v51)
        {
          int v59 = 0;
          __int16 v60 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__flags;
          goto LABEL_78;
        }
        goto LABEL_66;
      }
LABEL_65:
      char v52 = PBReaderSkipValueWithTag();
      BOOL v21 = (int *)MEMORY[0x1E4F940C8];
      uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
      if (v52) {
        goto LABEL_66;
      }
      int v59 = 0;
LABEL_76:
      __int16 v60 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__flags;
      goto LABEL_77;
    }
    if (!v34) {
      goto LABEL_65;
    }
    if ((*(unsigned char *)(a1 + 56) & 8) != 0)
    {
      char v53 = PBReaderSkipValueWithTag();
      uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
      if ((v53 & 1) == 0) {
        goto LABEL_97;
      }
      v8 += *(unsigned __int8 *)(a1 + 56) << 28 >> 31;
    }
    else
    {
      char v39 = PBReaderPlaceMark();
      uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
      if ((v39 & 1) == 0) {
        goto LABEL_97;
      }
      uint64_t v40 = objc_alloc_init(GEOPDMapsIdentifier);
      if (!GEOPDMapsIdentifierReadAllFrom((uint64_t)v40, (void *)v3)) {
        goto LABEL_96;
      }
      PBReaderRecallMark();
      id v41 = *(void **)(a1 + 32);
      *(void *)(a1 + 32) = v40;

      --v8;
    }
    BOOL v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_66:
    if (!(v62 & 1 | (v8 != 0))) {
      goto LABEL_75;
    }
  }
  if (!v34 || (*(unsigned char *)(a1 + 56) & 4) != 0) {
    goto LABEL_65;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_97;
  }
  uint64_t v40 = objc_alloc_init(GEOPDComponent);
  if (GEOPDComponentReadAllFrom((uint64_t)v40, (void *)v3, v10 & 1))
  {
    PBReaderRecallMark();
    -[GEOPDPublisherResult _addNoFlagsComponent:](a1, v40);

    BOOL v21 = (int *)MEMORY[0x1E4F940C8];
    uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
    goto LABEL_66;
  }
LABEL_96:

LABEL_97:
  int v59 = 0;
  __int16 v60 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__flags;
  BOOL v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_77:
  if ((v61 & 1) == 0) {
    goto LABEL_79;
  }
LABEL_78:
  *(unsigned char *)(a1 + v60[270]) |= 2u;
LABEL_79:
  if (v64 || (v59 & 1) == 0)
  {
    *(unsigned char *)(a1 + v60[270]) |= 8u;
    *(unsigned char *)(a1 + v60[270]) |= 4u;
    goto LABEL_89;
  }
  if (v19)
  {
    while (2)
    {
      while (1)
      {
        int v55 = *v19++;
        int v54 = v55;
        if (v55 == 1) {
          break;
        }
        if (v54 == 3)
        {
          char v56 = 4;
          goto LABEL_88;
        }
        if (!v54) {
          goto LABEL_89;
        }
      }
      char v56 = 8;
LABEL_88:
      *(unsigned char *)(a1 + v60[270]) |= v56;
      continue;
    }
  }
LABEL_89:
  if (v59) {
    unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
  }
  else {
    unint64_t v3 = 0;
  }
  if (v64)
  {
    char v57 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_189B16A88(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B171B4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDPublisherResultReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDPublisherResultReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOPDPublisherResultReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOPDPublisherResultReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDPublisherResultReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    [*(id *)(a1 + 32) readAll:1];
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_189B17434(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B17698(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B1791C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B17C98(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDQuickLinkReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  char v7 = 0;
  uint64_t v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  int v12 = ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1)
      + (*(unsigned char *)(a1 + 52) & 1)
      + ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1);
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v7 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 != 0;
        int v17 = v16 & ~v11 | v9;
        int v50 = v16 | v11;
        if (((v16 | v11) | v7)) {
          unsigned __int8 v18 = 0;
        }
        else {
          unsigned __int8 v18 = a3;
        }
        BOOL v19 = v8 != 0;
        id v20 = (int *)MEMORY[0x1E4F940E8];
        int v21 = 1;
        uint64_t v22 = (int *)MEMORY[0x1E4F940C8];
        if (*(void *)(v3 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(v3 + *v6)) {
          goto LABEL_62;
        }
        char v48 = v17;
        int v49 = v19 | v50 | v17;
        char v23 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v9;
LABEL_8:
        uint64_t v14 = v10;
        uint64_t v15 = v11;
LABEL_10:
        ++v8;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(unsigned char *)(v3 + *v22)) {
      goto LABEL_60;
    }
    char v24 = 0;
    unsigned int v25 = 0;
    unint64_t v26 = 0;
    while (1)
    {
      uint64_t v27 = *v20;
      uint64_t v28 = *(void *)(v3 + v27);
      unint64_t v29 = v28 + 1;
      if (v28 == -1 || v29 > *(void *)(v3 + *v6)) {
        break;
      }
      char v30 = *(unsigned char *)(*(void *)(v3 + *v23) + v28);
      *(void *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0) {
        goto LABEL_25;
      }
      v24 += 7;
      if (v25++ >= 9)
      {
        unint64_t v26 = 0;
        int v32 = *(unsigned __int8 *)(v3 + *v22);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v22) = 1;
LABEL_25:
    int v32 = *(unsigned __int8 *)(v3 + *v22);
    if (*(unsigned char *)(v3 + *v22)) {
      unint64_t v26 = 0;
    }
LABEL_27:
    if (v32 || (v26 & 7) == 4)
    {
LABEL_60:
      int v21 = 1;
      goto LABEL_61;
    }
    unint64_t v34 = v26 >> 3;
    BOOL v35 = v50;
    if (!((v18 == 0) | v50 & 1))
    {
      int v36 = v18;
      do
      {
        int v38 = *v36++;
        int v37 = v38;
        BOOL v35 = v38 != 0;
        if (v38) {
          BOOL v39 = v37 == v34;
        }
        else {
          BOOL v39 = 1;
        }
      }
      while (!v39);
    }
    if (v34 == 2) {
      break;
    }
    if (v34 == 1)
    {
      if (!v35 || (*(unsigned char *)(a1 + 52) & 2) != 0) {
        goto LABEL_58;
      }
      if ((PBReaderPlaceMark() & 1) == 0) {
        goto LABEL_81;
      }
      uint64_t v40 = objc_alloc_init(GEOPDQuickLinkItem);
      if (!GEOPDQuickLinkItemReadAllFrom((uint64_t)v40, (void *)v3, v10 & 1)) {
        goto LABEL_80;
      }
      PBReaderRecallMark();
      -[GEOPDQuickLink _addNoFlagsQuickLinkItem:](a1, v40);
      goto LABEL_50;
    }
    if (v48 & 1) == 0 || (*(unsigned char *)(a1 + 52)) {
      goto LABEL_58;
    }
    if (!*(void *)(a1 + 16))
    {
      id v41 = objc_alloc_init(MEMORY[0x1E4F940B0]);
      char v42 = *(void **)(a1 + 16);
      *(void *)(a1 + 16) = v41;
    }
    int v21 = PBUnknownFieldAdd();
    uint64_t v22 = (int *)MEMORY[0x1E4F940C8];
    if (!v21) {
      goto LABEL_63;
    }
LABEL_56:
    if ((v49 & 1) == 0) {
      goto LABEL_60;
    }
LABEL_59:
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6)) {
      goto LABEL_60;
    }
  }
  if (!v35 || (*(unsigned char *)(a1 + 52) & 4) != 0)
  {
LABEL_58:
    int v21 = PBReaderSkipValueWithTag();
    uint64_t v22 = (int *)MEMORY[0x1E4F940C8];
    if ((v21 & v49 & 1) == 0) {
      goto LABEL_61;
    }
    goto LABEL_59;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_81;
  }
  uint64_t v40 = objc_alloc_init(GEOPDQuickLinkItem);
  if (GEOPDQuickLinkItemReadAllFrom((uint64_t)v40, (void *)v3, v10 & 1))
  {
    PBReaderRecallMark();
    -[GEOPDQuickLink _addNoFlagsSecondaryQuickLinkItem:](a1, v40);
LABEL_50:

    uint64_t v22 = (int *)MEMORY[0x1E4F940C8];
    goto LABEL_56;
  }
LABEL_80:

LABEL_81:
  int v21 = 0;
  uint64_t v22 = (int *)MEMORY[0x1E4F940C8];
LABEL_61:
  LOBYTE(v17) = v48;
LABEL_62:
  if (v17) {
LABEL_63:
  }
    *(unsigned char *)(a1 + 52) |= 1u;
  if (v50 & 1 | ((v21 & 1) == 0))
  {
    *(unsigned char *)(a1 + 52) |= 2u;
    *(unsigned char *)(a1 + 52) |= 4u;
    goto LABEL_74;
  }
  if (v18)
  {
    while (1)
    {
      int v45 = *v18++;
      int v44 = v45;
      if (v45 == 1) {
        break;
      }
      if (v44 == 2)
      {
        char v43 = 4;
LABEL_70:
        *(unsigned char *)(a1 + 52) |= v43;
      }
      else if (!v44)
      {
        goto LABEL_74;
      }
    }
    char v43 = 2;
    goto LABEL_70;
  }
LABEL_74:
  if (v21) {
    unint64_t v3 = *(unsigned char *)(v3 + *v22) == 0;
  }
  else {
    unint64_t v3 = 0;
  }
  if (v50)
  {
    uint64_t v46 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_189B183E4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B18AA4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDQuickLinkCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v22 = *MEMORY[0x1E4F143B8];
  long long v16 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  id v2 = *(id *)(a1 + 24);
  uint64_t v3 = [v2 countByEnumeratingWithState:&v16 objects:v21 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v17;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v17 != v5) {
          objc_enumerationMutation(v2);
        }
        -[GEOPDQuickLinkItem readAll:](*(void *)(*((void *)&v16 + 1) + 8 * v6++), 1);
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v16 objects:v21 count:16];
    }
    while (v4);
  }

  long long v14 = 0u;
  long long v15 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  id v7 = *(id *)(a1 + 32);
  uint64_t v8 = [v7 countByEnumeratingWithState:&v12 objects:v20 count:16];
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)v13;
    do
    {
      uint64_t v11 = 0;
      do
      {
        if (*(void *)v13 != v10) {
          objc_enumerationMutation(v7);
        }
        -[GEOPDQuickLinkItem readAll:](*(void *)(*((void *)&v12 + 1) + 8 * v11++), 1);
      }
      while (v9 != v11);
      uint64_t v9 = [v7 countByEnumeratingWithState:&v12 objects:v20 count:16];
    }
    while (v9);
  }
}

unint64_t GEOPDQuickLinkReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDQuickLinkReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOPDQuickLinkReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOPDQuickLinkReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDQuickLinkReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOPDQuickLinkCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_189B18EAC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B19218(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B194F0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDQuickLinkActionDataParamsReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 60);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 56)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  unsigned int v11 = (vaddv_s16((int16x4_t)(*(void *)&vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int8 *)(a1 + 68)), (uint16x4_t)0xFFFEFFFFFFFDFFFCLL) & 0xFF01FF01FF01FF01))+ (*(unsigned char *)(a1 + 68) & 1));
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v9])
    {
      case -4:
        ++v11;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_9;
      case 0:
        BOOL v14 = v11 > 2;
        char v15 = v14 & ~(_BYTE)v10 | v7;
        unsigned __int8 v16 = v14 | v10;
        char v50 = v15;
        char v51 = v16 | v15;
        if ((v16 | v8)) {
          long long v17 = 0;
        }
        else {
          long long v17 = a3;
        }
        long long v18 = (int *)MEMORY[0x1E4F940E8];
        char v52 = (v17 == 0) | v16;
        BOOL v53 = v16;
        long long v19 = (int *)MEMORY[0x1E4F940C8];
        id v20 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v11;
LABEL_7:
        uint64_t v12 = v7;
LABEL_8:
        uint64_t v13 = v10;
LABEL_9:
        ++v9;
        uint64_t v7 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v18) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v19)) {
      goto LABEL_69;
    }
    char v21 = 0;
    unsigned int v22 = 0;
    unint64_t v23 = 0;
    while (1)
    {
      uint64_t v24 = *v18;
      uint64_t v25 = *(void *)(v3 + v24);
      unint64_t v26 = v25 + 1;
      if (v25 == -1 || v26 > *(void *)(v3 + *v6)) {
        break;
      }
      char v27 = *(unsigned char *)(*(void *)(v3 + *v20) + v25);
      *(void *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0) {
        goto LABEL_24;
      }
      v21 += 7;
      if (v22++ >= 9)
      {
        unint64_t v23 = 0;
        int v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_26;
      }
    }
    *(unsigned char *)(v3 + *v19) = 1;
LABEL_24:
    int v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(unsigned char *)(v3 + *v19)) {
      unint64_t v23 = 0;
    }
LABEL_26:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_69:
      int v49 = 1;
      goto LABEL_70;
    }
    unint64_t v31 = v23 >> 3;
    BOOL v32 = v53;
    if ((v52 & 1) == 0)
    {
      unint64_t v33 = v17;
      do
      {
        int v35 = *v33++;
        int v34 = v35;
        BOOL v32 = v35 != 0;
        if (v35) {
          BOOL v36 = v34 == v31;
        }
        else {
          BOOL v36 = 1;
        }
      }
      while (!v36);
    }
    switch((int)v31)
    {
      case 1:
        if (!v32) {
          goto LABEL_57;
        }
        if ((*(unsigned char *)(a1 + 68) & 8) == 0)
        {
          uint64_t v37 = PBReaderReadString();
          uint64_t v38 = 40;
          goto LABEL_56;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_87;
        }
        char v44 = 16 * *(unsigned char *)(a1 + 68);
        goto LABEL_67;
      case 2:
        if (!v32) {
          goto LABEL_57;
        }
        if ((*(unsigned char *)(a1 + 68) & 0x10) == 0)
        {
          uint64_t v37 = PBReaderReadString();
          uint64_t v38 = 48;
          goto LABEL_56;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_87;
        }
        char v44 = 8 * *(unsigned char *)(a1 + 68);
        goto LABEL_67;
      case 3:
        if (!v32) {
          goto LABEL_57;
        }
        if ((*(unsigned char *)(a1 + 68) & 2) == 0)
        {
          uint64_t v37 = PBReaderReadString();
          uint64_t v38 = 24;
          goto LABEL_56;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_87;
        }
        char v44 = *(unsigned char *)(a1 + 68) << 6;
        goto LABEL_67;
      case 4:
        if (!v32) {
          goto LABEL_57;
        }
        if ((*(unsigned char *)(a1 + 68) & 4) == 0)
        {
          uint64_t v37 = PBReaderReadString();
          uint64_t v38 = 32;
LABEL_56:
          char v42 = *(void **)(a1 + v38);
          *(void *)(a1 + v38) = v37;

          long long v19 = (int *)MEMORY[0x1E4F940C8];
          --v9;
LABEL_68:
          if (!(v51 & 1 | (v9 != 0))) {
            goto LABEL_69;
          }
          continue;
        }
        if (PBReaderSkipValueWithTag())
        {
          char v44 = 32 * *(unsigned char *)(a1 + 68);
LABEL_67:
          v9 += v44 >> 7;
          long long v19 = (int *)MEMORY[0x1E4F940C8];
          goto LABEL_68;
        }
LABEL_87:
        int v49 = 0;
        long long v19 = (int *)MEMORY[0x1E4F940C8];
LABEL_70:
        if (v50) {
LABEL_71:
        }
          *(unsigned char *)(a1 + 68) |= 1u;
        if (v53 || (v49 & 1) == 0)
        {
          *(unsigned char *)(a1 + 68) |= 8u;
          *(unsigned char *)(a1 + 68) |= 0x10u;
          *(unsigned char *)(a1 + 68) |= 2u;
          *(unsigned char *)(a1 + 68) |= 4u;
        }
        else if (v17)
        {
          while (1)
          {
            int v46 = *v17++;
            char v45 = 8;
            switch(v46)
            {
              case 0:
                goto LABEL_81;
              case 1:
                goto LABEL_79;
              case 2:
                char v45 = 16;
                goto LABEL_79;
              case 3:
                char v45 = 2;
                goto LABEL_79;
              case 4:
                char v45 = 4;
LABEL_79:
                *(unsigned char *)(a1 + 68) |= v45;
                break;
              default:
                continue;
            }
          }
        }
LABEL_81:
        if (v49) {
          unint64_t v3 = *(unsigned char *)(v3 + *v19) == 0;
        }
        else {
          unint64_t v3 = 0;
        }
        if (v53)
        {
          unint64_t v47 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      default:
        if (v50 & 1) == 0 || (*(unsigned char *)(a1 + 68))
        {
LABEL_57:
          char v43 = PBReaderSkipValueWithTag();
          long long v19 = (int *)MEMORY[0x1E4F940C8];
          if ((v43 & 1) == 0)
          {
            int v49 = 0;
            goto LABEL_70;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v39 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            uint64_t v40 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v39;
          }
          int v41 = PBUnknownFieldAdd();
          long long v19 = (int *)MEMORY[0x1E4F940C8];
          if (!v41)
          {
            int v49 = 0;
            goto LABEL_71;
          }
        }
        goto LABEL_68;
    }
  }
}

void sub_189B19E24(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B19F34(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B1A330(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B1A414(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDQuickLinkActionDataParamsReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 60))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDQuickLinkActionDataParamsReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = [v8 position];
  *(_DWORD *)(a1 + 60) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOPDQuickLinkActionDataParamsReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOPDQuickLinkActionDataParamsReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDQuickLinkActionDataParamsReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_189B1A67C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B1A85C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B1AA0C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B1B1F4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDQuickLinkItemReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 68);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 64)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  unsigned int v11 = (unsigned __int16)(vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int16 *)(a1 + 84)), (uint16x4_t)0xFFFCFFFDFFFAFFF9), (int8x8_t)0x1000100010001))+ ((*(_WORD *)(a1 + 84) >> 5) & 1)+ ((*(_WORD *)(a1 + 84) >> 2) & 1));
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v9])
    {
      case -4:
        ++v11;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_9;
      case 0:
        BOOL v14 = v11 > 3;
        char v15 = v14 & ~(_BYTE)v10 | v7;
        unsigned __int8 v16 = v14 | v10;
        char v65 = v15;
        char v66 = v16 | v15;
        if ((v16 | v8)) {
          long long v17 = 0;
        }
        else {
          long long v17 = a3;
        }
        char v67 = (v17 == 0) | v16;
        BOOL v68 = v16;
        long long v18 = (int *)MEMORY[0x1E4F940E8];
        long long v19 = (int *)MEMORY[0x1E4F940C8];
        id v20 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v11;
LABEL_7:
        uint64_t v12 = v7;
LABEL_8:
        uint64_t v13 = v10;
LABEL_9:
        ++v9;
        uint64_t v7 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v18) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v19)) {
      goto LABEL_100;
    }
    char v21 = 0;
    unsigned int v22 = 0;
    unint64_t v23 = 0;
    while (1)
    {
      uint64_t v24 = *v18;
      uint64_t v25 = *(void *)(v3 + v24);
      unint64_t v26 = v25 + 1;
      if (v25 == -1 || v26 > *(void *)(v3 + *v6)) {
        break;
      }
      char v27 = *(unsigned char *)(*(void *)(v3 + *v20) + v25);
      *(void *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0) {
        goto LABEL_24;
      }
      v21 += 7;
      BOOL v28 = v22++ >= 9;
      if (v28)
      {
        unint64_t v23 = 0;
        int v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_26;
      }
    }
    *(unsigned char *)(v3 + *v19) = 1;
LABEL_24:
    int v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(unsigned char *)(v3 + *v19)) {
      unint64_t v23 = 0;
    }
LABEL_26:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_100:
      int v63 = 1;
      goto LABEL_101;
    }
    unint64_t v31 = v23 >> 3;
    BOOL v32 = v68;
    if ((v67 & 1) == 0)
    {
      unint64_t v33 = v17;
      do
      {
        int v35 = *v33++;
        int v34 = v35;
        BOOL v32 = v35 != 0;
        if (v35) {
          BOOL v36 = v34 == v31;
        }
        else {
          BOOL v36 = 1;
        }
      }
      while (!v36);
    }
    switch((int)v31)
    {
      case 1:
        if (!v32) {
          goto LABEL_76;
        }
        if ((*(_WORD *)(a1 + 84) & 0x40) == 0)
        {
          uint64_t v37 = PBReaderReadString();
          uint64_t v38 = 48;
          goto LABEL_75;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_119;
        }
        __int16 v58 = *(_WORD *)(a1 + 84) << 9;
        goto LABEL_97;
      case 2:
        if (!v32) {
          goto LABEL_76;
        }
        if ((*(_WORD *)(a1 + 84) & 0x80) == 0)
        {
          uint64_t v37 = PBReaderReadString();
          uint64_t v38 = 56;
          goto LABEL_75;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_119;
        }
        __int16 v58 = *(_WORD *)(a1 + 84) << 8;
        goto LABEL_97;
      case 3:
        if (!v32) {
          goto LABEL_76;
        }
        if ((*(_WORD *)(a1 + 84) & 8) == 0)
        {
          uint64_t v37 = PBReaderReadString();
          uint64_t v38 = 24;
          goto LABEL_75;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_119;
        }
        __int16 v58 = *(_WORD *)(a1 + 84) << 12;
        goto LABEL_97;
      case 4:
        if (!v32) {
          goto LABEL_76;
        }
        if ((*(_WORD *)(a1 + 84) & 0x10) == 0)
        {
          uint64_t v37 = PBReaderReadString();
          uint64_t v38 = 32;
          goto LABEL_75;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_119;
        }
        __int16 v58 = *(_WORD *)(a1 + 84) << 11;
        goto LABEL_97;
      case 5:
        if ((v8 & 1) == 0) {
          goto LABEL_76;
        }
        char v42 = 0;
        unsigned int v43 = 0;
        uint64_t v44 = 0;
        *(_WORD *)(a1 + 84) |= 1u;
        while (2)
        {
          uint64_t v45 = *v18;
          uint64_t v46 = *(void *)(v3 + v45);
          unint64_t v47 = v46 + 1;
          if (v46 == -1 || v47 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v19) = 1;
          }
          else
          {
            char v48 = *(unsigned char *)(*(void *)(v3 + *v20) + v46);
            *(void *)(v3 + v45) = v47;
            v44 |= (unint64_t)(v48 & 0x7F) << v42;
            if (v48 < 0)
            {
              v42 += 7;
              BOOL v28 = v43++ >= 9;
              if (v28)
              {
                LODWORD(v44) = 0;
                goto LABEL_81;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v19)) {
          LODWORD(v44) = 0;
        }
LABEL_81:
        uint64_t v57 = 76;
        goto LABEL_86;
      case 6:
        if ((v8 & 1) == 0) {
          goto LABEL_76;
        }
        char v49 = 0;
        unsigned int v50 = 0;
        uint64_t v44 = 0;
        *(_WORD *)(a1 + 84) |= 2u;
        while (2)
        {
          uint64_t v51 = *v18;
          uint64_t v52 = *(void *)(v3 + v51);
          unint64_t v53 = v52 + 1;
          if (v52 == -1 || v53 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v19) = 1;
          }
          else
          {
            char v54 = *(unsigned char *)(*(void *)(v3 + *v20) + v52);
            *(void *)(v3 + v51) = v53;
            v44 |= (unint64_t)(v54 & 0x7F) << v49;
            if (v54 < 0)
            {
              v49 += 7;
              BOOL v28 = v50++ >= 9;
              if (v28)
              {
                LODWORD(v44) = 0;
                goto LABEL_85;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v19)) {
          LODWORD(v44) = 0;
        }
LABEL_85:
        uint64_t v57 = 80;
LABEL_86:
        *(_DWORD *)(a1 + v57) = v44;
        goto LABEL_99;
      case 7:
        if (!v32) {
          goto LABEL_76;
        }
        if ((*(_WORD *)(a1 + 84) & 0x20) == 0)
        {
          uint64_t v37 = PBReaderReadString();
          uint64_t v38 = 40;
LABEL_75:
          int v55 = *(void **)(a1 + v38);
          *(void *)(a1 + v38) = v37;

          --v9;
LABEL_98:
          long long v19 = (int *)MEMORY[0x1E4F940C8];
          goto LABEL_99;
        }
        if (PBReaderSkipValueWithTag())
        {
          __int16 v58 = *(_WORD *)(a1 + 84) << 10;
LABEL_97:
          v9 += v58 >> 15;
          goto LABEL_98;
        }
LABEL_119:
        int v63 = 0;
        BOOL v64 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__flags;
        long long v19 = (int *)MEMORY[0x1E4F940C8];
LABEL_102:
        if (v65) {
LABEL_103:
        }
          *(_WORD *)(a1 + v64[287]) |= 4u;
        if (v68 || (v63 & 1) == 0)
        {
          *(_WORD *)(a1 + v64[287]) |= 0x40u;
          *(_WORD *)(a1 + v64[287]) |= 0x80u;
          *(_WORD *)(a1 + v64[287]) |= 8u;
          *(_WORD *)(a1 + v64[287]) |= 0x10u;
          *(_WORD *)(a1 + v64[287]) |= 0x20u;
        }
        else if (v17)
        {
          while (1)
          {
            int v59 = *v17++;
            __int16 v60 = 64;
            switch(v59)
            {
              case 0:
                goto LABEL_113;
              case 1:
                goto LABEL_112;
              case 2:
                __int16 v60 = 128;
                goto LABEL_112;
              case 3:
                __int16 v60 = 8;
                goto LABEL_112;
              case 4:
                __int16 v60 = 16;
                goto LABEL_112;
              case 7:
                __int16 v60 = 32;
LABEL_112:
                *(_WORD *)(a1 + v64[287]) |= v60;
                break;
              default:
                continue;
            }
          }
        }
LABEL_113:
        if (v63) {
          unint64_t v3 = *(unsigned char *)(v3 + *v19) == 0;
        }
        else {
          unint64_t v3 = 0;
        }
        if (v68)
        {
          char v61 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      default:
        if ((v65 & 1) == 0 || (*(_WORD *)(a1 + 84) & 4) != 0)
        {
LABEL_76:
          char v56 = PBReaderSkipValueWithTag();
          long long v19 = (int *)MEMORY[0x1E4F940C8];
          if ((v56 & 1) == 0)
          {
            int v63 = 0;
LABEL_101:
            BOOL v64 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__flags;
            goto LABEL_102;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v39 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            uint64_t v40 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v39;
          }
          int v41 = PBUnknownFieldAdd();
          long long v19 = (int *)MEMORY[0x1E4F940C8];
          if (!v41)
          {
            int v63 = 0;
            BOOL v64 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__flags;
            goto LABEL_103;
          }
        }
LABEL_99:
        if (!(v66 & 1 | (v9 != 0))) {
          goto LABEL_100;
        }
        continue;
    }
  }
}

void sub_189B1BB54(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B1BCE8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B1BE7C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B1C084(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B1C590(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDQuickLinkItemReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 68))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDQuickLinkItemReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 72));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 64) = [v8 position];
  *(_DWORD *)(a1 + 68) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOPDQuickLinkItemReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOPDQuickLinkItemReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDQuickLinkItemReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
  return Specified;
}

void sub_189B1CC6C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B1CEB8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDQuickLinkItemIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  BOOL v2 = (*(_WORD *)(a1 + 84) & 0x1F8) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
  return v2;
}

void sub_189B1D168(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDQuickLinkParamsReadAllFrom(uint64_t a1, void *a2)
{
  unint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    uint64_t v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          char v18 = 0;
          unsigned int v19 = 0;
          uint64_t v20 = 0;
          *(unsigned char *)(a1 + 20) |= 1u;
          while (1)
          {
            uint64_t v21 = *v4;
            uint64_t v22 = *(void *)&v3[v21];
            unint64_t v23 = v22 + 1;
            if (v22 == -1 || v23 > *(void *)&v3[*v5]) {
              break;
            }
            char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
            *(void *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0) {
              goto LABEL_32;
            }
            v18 += 7;
            BOOL v15 = v19++ >= 9;
            if (v15)
            {
              LODWORD(v20) = 0;
              goto LABEL_34;
            }
          }
          v3[*v6] = 1;
LABEL_32:
          if (v3[*v6]) {
            LODWORD(v20) = 0;
          }
LABEL_34:
          *(_DWORD *)(a1 + 16) = v20;
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v25 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            unint64_t v26 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v25;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_37;
          }
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v27 = v3[*v6] == 0;
  }
  else
  {
LABEL_37:
    BOOL v27 = 0;
  }
  objc_sync_exit(v3);

  return v27;
}

void sub_189B1DB64(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDQuickLinkParamsReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOPDQuickLinkParamsReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189B1DBC8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDRatingReadAllFrom(uint64_t a1, void *a2, int a3)
{
  uint64_t v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    uint64_t v6 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v7 = (int *)MEMORY[0x1E4F940E0];
    char v8 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v5[*MEMORY[0x1E4F940E8]] < *(void *)&v5[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v9 = (int *)MEMORY[0x1E4F940B8];
      while (!v5[*v8])
      {
        char v10 = 0;
        unsigned int v11 = 0;
        unint64_t v12 = 0;
        while (1)
        {
          uint64_t v13 = *v6;
          uint64_t v14 = *(void *)&v5[v13];
          unint64_t v15 = v14 + 1;
          if (v14 == -1 || v15 > *(void *)&v5[*v7]) {
            break;
          }
          char v16 = *(unsigned char *)(*(void *)&v5[*v9] + v14);
          *(void *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0) {
            goto LABEL_13;
          }
          v10 += 7;
          BOOL v17 = v11++ >= 9;
          if (v17)
          {
            unint64_t v12 = 0;
            int v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        int v18 = v5[*v8];
        if (v5[*v8]) {
          unint64_t v12 = 0;
        }
LABEL_15:
        if (v18 || (v12 & 7) == 4) {
          break;
        }
        switch((v12 >> 3))
        {
          case 1u:
            char v20 = 0;
            unsigned int v21 = 0;
            uint64_t v22 = 0;
            *(unsigned char *)(a1 + 48) |= 8u;
            while (1)
            {
              uint64_t v23 = *v6;
              uint64_t v24 = *(void *)&v5[v23];
              unint64_t v25 = v24 + 1;
              if (v24 == -1 || v25 > *(void *)&v5[*v7]) {
                break;
              }
              char v26 = *(unsigned char *)(*(void *)&v5[*v9] + v24);
              *(void *)&v5[v23] = v25;
              v22 |= (unint64_t)(v26 & 0x7F) << v20;
              if ((v26 & 0x80) == 0) {
                goto LABEL_48;
              }
              v20 += 7;
              BOOL v17 = v21++ >= 9;
              if (v17)
              {
                LODWORD(v22) = 0;
                goto LABEL_50;
              }
            }
            v5[*v8] = 1;
LABEL_48:
            if (v5[*v8]) {
              LODWORD(v22) = 0;
            }
LABEL_50:
            uint64_t v41 = 44;
            goto LABEL_55;
          case 2u:
            *(unsigned char *)(a1 + 48) |= 2u;
            uint64_t v29 = *v6;
            unint64_t v30 = *(void *)&v5[v29];
            if (v30 <= 0xFFFFFFFFFFFFFFF7 && v30 + 8 <= *(void *)&v5[*v7])
            {
              uint64_t v31 = *(void *)(*(void *)&v5[*v9] + v30);
              *(void *)&v5[v29] = v30 + 8;
            }
            else
            {
              v5[*v8] = 1;
              uint64_t v31 = 0;
            }
            uint64_t v42 = 32;
            goto LABEL_60;
          case 3u:
            *(unsigned char *)(a1 + 48) |= 1u;
            uint64_t v32 = *v6;
            unint64_t v33 = *(void *)&v5[v32];
            if (v33 <= 0xFFFFFFFFFFFFFFF7 && v33 + 8 <= *(void *)&v5[*v7])
            {
              uint64_t v31 = *(void *)(*(void *)&v5[*v9] + v33);
              *(void *)&v5[v32] = v33 + 8;
            }
            else
            {
              v5[*v8] = 1;
              uint64_t v31 = 0;
            }
            uint64_t v42 = 24;
LABEL_60:
            *(void *)(a1 + v42) = v31;
            goto LABEL_61;
          case 4u:
            char v34 = 0;
            unsigned int v35 = 0;
            uint64_t v22 = 0;
            *(unsigned char *)(a1 + 48) |= 4u;
            while (2)
            {
              uint64_t v36 = *v6;
              uint64_t v37 = *(void *)&v5[v36];
              unint64_t v38 = v37 + 1;
              if (v37 == -1 || v38 > *(void *)&v5[*v7])
              {
                v5[*v8] = 1;
              }
              else
              {
                char v39 = *(unsigned char *)(*(void *)&v5[*v9] + v37);
                *(void *)&v5[v36] = v38;
                v22 |= (unint64_t)(v39 & 0x7F) << v34;
                if (v39 < 0)
                {
                  v34 += 7;
                  BOOL v17 = v35++ >= 9;
                  if (v17)
                  {
                    LODWORD(v22) = 0;
                    goto LABEL_54;
                  }
                  continue;
                }
              }
              break;
            }
            if (v5[*v8]) {
              LODWORD(v22) = 0;
            }
LABEL_54:
            uint64_t v41 = 40;
LABEL_55:
            *(_DWORD *)(a1 + v41) = v22;
            goto LABEL_61;
          case 5u:
            if ((PBReaderPlaceMark() & 1) == 0) {
              goto LABEL_64;
            }
            uint64_t v40 = objc_alloc_init(GEOLocalizedString);
            if (!GEOLocalizedStringReadAllFrom((uint64_t)v40, v5, a3))
            {

              goto LABEL_64;
            }
            PBReaderRecallMark();
            -[GEOPDRating addAppleRatingCategory:](a1, v40);

LABEL_61:
            if (*(void *)&v5[*v6] >= *(void *)&v5[*v7]) {
              goto LABEL_62;
            }
            break;
          default:
            if (!*(void *)(a1 + 8))
            {
              id v27 = objc_alloc_init(MEMORY[0x1E4F940B0]);
              BOOL v28 = *(void **)(a1 + 8);
              *(void *)(a1 + 8) = v27;
            }
            if (!PBUnknownFieldAdd()) {
              goto LABEL_64;
            }
            goto LABEL_61;
        }
      }
    }
LABEL_62:
    BOOL v43 = v5[*v8] == 0;
  }
  else
  {
LABEL_64:
    BOOL v43 = 0;
  }
  objc_sync_exit(v5);

  return v43;
}

void sub_189B1EE38(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B1F6A0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDRatingDataReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  uint64_t v7 = 0;
  uint64_t v8 = 0;
  char v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  int v12 = ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1)
      + (*(unsigned char *)(a1 + 52) & 1)
      + ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1);
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v10])
    {
      case -4:
        ++v12;
        uint64_t v13 = v7;
        goto LABEL_8;
      case -3:
        char v9 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v13 = v7;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 != 0;
        char v17 = v16 & ~(_BYTE)v11 | v8;
        unsigned __int8 v18 = v16 | v11;
        char v53 = v17;
        char v54 = v18 | v17;
        if ((v18 | v9)) {
          unsigned int v19 = 0;
        }
        else {
          unsigned int v19 = a3;
        }
        char v55 = (v19 == 0) | v18;
        BOOL v56 = v18;
        char v20 = (int *)MEMORY[0x1E4F940E8];
        unsigned int v21 = (int *)MEMORY[0x1E4F940C8];
        uint64_t v22 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v7;
        uint64_t v14 = v8;
LABEL_8:
        uint64_t v15 = v11;
LABEL_10:
        ++v10;
        uint64_t v7 = v13;
        uint64_t v8 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v21)) {
      goto LABEL_60;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      if (v24++ >= 9)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_25:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_60:
      int v51 = 1;
      goto LABEL_61;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v56;
    if ((v55 & 1) == 0)
    {
      unsigned int v35 = v19;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    if (v33 != 2) {
      break;
    }
    if (v34)
    {
      if ((*(unsigned char *)(a1 + 52) & 4) != 0)
      {
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_81;
        }
        v10 += *(unsigned __int8 *)(a1 + 52) << 29 >> 31;
      }
      else
      {
        uint64_t v40 = PBReaderReadString();
        uint64_t v41 = *(void **)(a1 + 32);
        *(void *)(a1 + 32) = v40;

        --v10;
      }
      goto LABEL_58;
    }
LABEL_54:
    char v45 = PBReaderSkipValueWithTag();
    unsigned int v21 = (int *)MEMORY[0x1E4F940C8];
    if ((v45 & 1) == 0)
    {
      int v51 = 0;
LABEL_61:
      uint64_t v52 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__flags;
      goto LABEL_62;
    }
LABEL_59:
    if (!(v54 & 1 | (v10 != 0))) {
      goto LABEL_60;
    }
  }
  if (v33 != 1)
  {
    if ((v53 & 1) != 0 && (*(unsigned char *)(a1 + 52) & 1) == 0)
    {
      if (!*(void *)(a1 + 16))
      {
        id v42 = objc_alloc_init(MEMORY[0x1E4F940B0]);
        BOOL v43 = *(void **)(a1 + 16);
        *(void *)(a1 + 16) = v42;
      }
      int v44 = PBUnknownFieldAdd();
      unsigned int v21 = (int *)MEMORY[0x1E4F940C8];
      if (!v44)
      {
        int v51 = 0;
        uint64_t v52 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__flags;
        goto LABEL_63;
      }
      goto LABEL_59;
    }
    goto LABEL_54;
  }
  if (!v34 || (*(unsigned char *)(a1 + 52) & 2) != 0) {
    goto LABEL_54;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_81;
  }
  char v39 = objc_alloc_init(GEOPDRating);
  if (GEOPDRatingReadAllFrom((uint64_t)v39, (void *)v3, v7 & 1))
  {
    PBReaderRecallMark();
    -[GEOPDRatingData _addNoFlagsRating:](a1, v39);

LABEL_58:
    unsigned int v21 = (int *)MEMORY[0x1E4F940C8];
    goto LABEL_59;
  }

LABEL_81:
  int v51 = 0;
  uint64_t v52 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__flags;
  unsigned int v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_62:
  if ((v53 & 1) == 0) {
    goto LABEL_64;
  }
LABEL_63:
  *(unsigned char *)(a1 + v52[303]) |= 1u;
LABEL_64:
  if (v56 || (v51 & 1) == 0)
  {
    *(unsigned char *)(a1 + v52[303]) |= 2u;
    *(unsigned char *)(a1 + v52[303]) |= 4u;
    goto LABEL_74;
  }
  if (v19)
  {
    while (1)
    {
      int v48 = *v19++;
      int v47 = v48;
      if (v48 == 1) {
        break;
      }
      if (v47 == 2)
      {
        char v46 = 4;
LABEL_70:
        *(unsigned char *)(a1 + v52[303]) |= v46;
      }
      else if (!v47)
      {
        goto LABEL_74;
      }
    }
    char v46 = 2;
    goto LABEL_70;
  }
LABEL_74:
  if (v51) {
    unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
  }
  else {
    unint64_t v3 = 0;
  }
  if (v56)
  {
    char v49 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_189B1FDF4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B202A0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDRatingDataCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v10 = *MEMORY[0x1E4F143B8];
  long long v5 = 0u;
  long long v6 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  id v1 = *(id *)(a1 + 24);
  uint64_t v2 = [v1 countByEnumeratingWithState:&v5 objects:v9 count:16];
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t v4 = *(void *)v6;
    while (1)
    {
      if (*(void *)v6 != v4) {
        objc_enumerationMutation(v1);
      }
      if (!--v3)
      {
        uint64_t v3 = [v1 countByEnumeratingWithState:&v5 objects:v9 count:16];
        if (!v3) {
          break;
        }
      }
    }
  }
}

unint64_t GEOPDRatingDataReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDRatingDataReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    char v9 = (int *)&GEOPDRatingDataReadAllFrom_recursiveTag;
  }
  else {
    char v9 = (int *)&GEOPDRatingDataReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDRatingDataReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOPDRatingDataCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_189B205EC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B2082C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B20A78(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDRatingFilterReadAllFrom(uint64_t a1, void *a2)
{
  uint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    long long v5 = (int *)MEMORY[0x1E4F940E0];
    long long v6 = (int *)MEMORY[0x1E4F940C8];
    long long v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      int v8 = v3[*v6];
      if (*(void *)&v3[*v4] >= *(void *)&v3[*v5]) {
        break;
      }
      if (v3[*v6])
      {
        int v8 = 1;
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      uint64_t v11 = 0;
      while (1)
      {
        uint64_t v12 = *v4;
        uint64_t v13 = *(void *)&v3[v12];
        unint64_t v14 = v13 + 1;
        if (v13 == -1 || v14 > *(void *)&v3[*v5]) {
          break;
        }
        char v15 = *(unsigned char *)(*(void *)&v3[*v7] + v13);
        *(void *)&v3[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0) {
          goto LABEL_13;
        }
        v9 += 7;
        if (v10++ >= 9)
        {
          char v17 = 0;
          int v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      int v8 = v3[*v6];
      if (v3[*v6]) {
        char v17 = 0;
      }
      else {
        char v17 = v11;
      }
LABEL_16:
      if (v8) {
        BOOL v18 = 1;
      }
      else {
        BOOL v18 = (v17 & 7) == 4;
      }
      if (v18) {
        break;
      }
      if (!*(void *)(a1 + 8))
      {
        id v19 = objc_alloc_init(MEMORY[0x1E4F940B0]);
        char v20 = *(void **)(a1 + 8);
        *(void *)(a1 + 8) = v19;
      }
      if ((PBUnknownFieldAdd() & 1) == 0) {
        goto LABEL_23;
      }
    }
    BOOL v21 = v8 == 0;
  }
  else
  {
LABEL_23:
    BOOL v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_189B21078(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDRawAttributeReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  long long v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  uint64_t v7 = 0;
  uint64_t v8 = 0;
  char v9 = 0;
  uint64_t v10 = 0;
  int v11 = ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1)
      + (*(unsigned char *)(a1 + 52) & 1)
      + ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v10])
    {
      case -4:
        ++v11;
        uint64_t v12 = v7;
        goto LABEL_8;
      case -3:
        char v9 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_8;
      case 0:
        BOOL v14 = v11 != 0;
        char v15 = v14 & ~(_BYTE)v7;
        unsigned __int8 v16 = v14 | v7;
        char v51 = v15 | v8;
        if ((v16 | v9)) {
          char v17 = 0;
        }
        else {
          char v17 = a3;
        }
        BOOL v54 = v16;
        char v52 = v16 | v15 | v8;
        char v53 = (v17 == 0) | v16;
        BOOL v18 = (int *)MEMORY[0x1E4F940E8];
        id v19 = (int *)MEMORY[0x1E4F940C8];
        char v20 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v11;
LABEL_7:
        uint64_t v12 = v7;
        uint64_t v13 = v8;
LABEL_8:
        ++v10;
        uint64_t v7 = v12;
        uint64_t v8 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v18) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v19)) {
      goto LABEL_59;
    }
    char v21 = 0;
    unsigned int v22 = 0;
    unint64_t v23 = 0;
    while (1)
    {
      uint64_t v24 = *v18;
      uint64_t v25 = *(void *)(v3 + v24);
      unint64_t v26 = v25 + 1;
      if (v25 == -1 || v26 > *(void *)(v3 + *v6)) {
        break;
      }
      char v27 = *(unsigned char *)(*(void *)(v3 + *v20) + v25);
      *(void *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0) {
        goto LABEL_23;
      }
      v21 += 7;
      if (v22++ >= 9)
      {
        unint64_t v23 = 0;
        int v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_25;
      }
    }
    *(unsigned char *)(v3 + *v19) = 1;
LABEL_23:
    int v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(unsigned char *)(v3 + *v19)) {
      unint64_t v23 = 0;
    }
LABEL_25:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_59:
      int v50 = 1;
      goto LABEL_60;
    }
    unint64_t v31 = v23 >> 3;
    BOOL v32 = v54;
    if ((v53 & 1) == 0)
    {
      unint64_t v33 = v17;
      do
      {
        int v35 = *v33++;
        int v34 = v35;
        BOOL v32 = v35 != 0;
        if (v35) {
          BOOL v36 = v34 == v31;
        }
        else {
          BOOL v36 = 1;
        }
      }
      while (!v36);
    }
    if (v31 == 2) {
      break;
    }
    if (v31 == 1)
    {
      if (!v32) {
        goto LABEL_51;
      }
      if ((*(unsigned char *)(a1 + 52) & 2) != 0)
      {
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_78;
        }
        char v44 = *(unsigned char *)(a1 + 52) << 6;
        goto LABEL_57;
      }
      uint64_t v37 = PBReaderReadString();
      uint64_t v38 = 24;
      goto LABEL_44;
    }
    if (v51 & 1) == 0 || (*(unsigned char *)(a1 + 52))
    {
LABEL_51:
      char v43 = PBReaderSkipValueWithTag();
      id v19 = (int *)MEMORY[0x1E4F940C8];
      if ((v43 & 1) == 0)
      {
        int v50 = 0;
        goto LABEL_60;
      }
      goto LABEL_58;
    }
    if (!*(void *)(a1 + 16))
    {
      id v40 = objc_alloc_init(MEMORY[0x1E4F940B0]);
      uint64_t v41 = *(void **)(a1 + 16);
      *(void *)(a1 + 16) = v40;
    }
    int v42 = PBUnknownFieldAdd();
    id v19 = (int *)MEMORY[0x1E4F940C8];
    if (!v42)
    {
      int v50 = 0;
      goto LABEL_61;
    }
LABEL_58:
    if (!(v52 & 1 | (v10 != 0))) {
      goto LABEL_59;
    }
  }
  if (!v32) {
    goto LABEL_51;
  }
  if ((*(unsigned char *)(a1 + 52) & 4) == 0)
  {
    uint64_t v37 = PBReaderReadString();
    uint64_t v38 = 32;
LABEL_44:
    char v39 = *(void **)(a1 + v38);
    *(void *)(a1 + v38) = v37;

    id v19 = (int *)MEMORY[0x1E4F940C8];
    --v10;
    goto LABEL_58;
  }
  if (PBReaderSkipValueWithTag())
  {
    char v44 = 32 * *(unsigned char *)(a1 + 52);
LABEL_57:
    v10 += v44 >> 7;
    id v19 = (int *)MEMORY[0x1E4F940C8];
    goto LABEL_58;
  }
LABEL_78:
  int v50 = 0;
  id v19 = (int *)MEMORY[0x1E4F940C8];
LABEL_60:
  if ((v51 & 1) == 0) {
    goto LABEL_62;
  }
LABEL_61:
  *(unsigned char *)(a1 + 52) |= 1u;
LABEL_62:
  if (v54 || (v50 & 1) == 0)
  {
    *(unsigned char *)(a1 + 52) |= 2u;
    *(unsigned char *)(a1 + 52) |= 4u;
    goto LABEL_72;
  }
  if (v17)
  {
    while (1)
    {
      int v47 = *v17++;
      int v46 = v47;
      if (v47 == 1) {
        break;
      }
      if (v46 == 2)
      {
        char v45 = 4;
LABEL_68:
        *(unsigned char *)(a1 + 52) |= v45;
      }
      else if (!v46)
      {
        goto LABEL_72;
      }
    }
    char v45 = 2;
    goto LABEL_68;
  }
LABEL_72:
  if (v50) {
    unint64_t v3 = *(unsigned char *)(v3 + *v19) == 0;
  }
  else {
    unint64_t v3 = 0;
  }
  if (v54)
  {
    int v48 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_189B21A18(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B21AF8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDRawAttributeReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDRawAttributeReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    char v9 = (int *)&GEOPDRawAttributeReadAllFrom_recursiveTag;
  }
  else {
    char v9 = (int *)&GEOPDRawAttributeReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDRawAttributeReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_189B21D64(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B21F04(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B22074(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDRawAttributeFilterReadAllFrom(uint64_t a1, void *a2)
{
  unint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    long long v5 = (int *)MEMORY[0x1E4F940E0];
    long long v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          BOOL v18 = PBReaderReadString();
          if (v18) {
            -[GEOPDRawAttributeFilter addKey:](a1, v18);
          }
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v19 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            char v20 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v19;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_28;
          }
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v21 = v3[*v6] == 0;
  }
  else
  {
LABEL_28:
    BOOL v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_189B22764(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDRefreshIdReadAllFrom(uint64_t a1, void *a2)
{
  unint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    long long v5 = (int *)MEMORY[0x1E4F940E0];
    long long v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_29;
          }
          BOOL v18 = objc_alloc_init(GEOPDMapsIdentifier);
          if (!GEOPDMapsIdentifierReadAllFrom((uint64_t)v18, v3))
          {

            goto LABEL_29;
          }
          PBReaderRecallMark();
          id v19 = *(void **)(a1 + 16);
          *(void *)(a1 + 16) = v18;
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v20 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            BOOL v21 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v20;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_29;
          }
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v22 = v3[*v6] == 0;
  }
  else
  {
LABEL_29:
    BOOL v22 = 0;
  }
  objc_sync_exit(v3);

  return v22;
}

void sub_189B23034(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDRefreshIdFilterReadAllFrom(uint64_t a1, void *a2)
{
  unint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    long long v5 = (int *)MEMORY[0x1E4F940E0];
    long long v6 = (int *)MEMORY[0x1E4F940C8];
    uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      int v8 = v3[*v6];
      if (*(void *)&v3[*v4] >= *(void *)&v3[*v5]) {
        break;
      }
      if (v3[*v6])
      {
        int v8 = 1;
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      uint64_t v11 = 0;
      while (1)
      {
        uint64_t v12 = *v4;
        uint64_t v13 = *(void *)&v3[v12];
        unint64_t v14 = v13 + 1;
        if (v13 == -1 || v14 > *(void *)&v3[*v5]) {
          break;
        }
        char v15 = *(unsigned char *)(*(void *)&v3[*v7] + v13);
        *(void *)&v3[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0) {
          goto LABEL_13;
        }
        v9 += 7;
        if (v10++ >= 9)
        {
          char v17 = 0;
          int v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      int v8 = v3[*v6];
      if (v3[*v6]) {
        char v17 = 0;
      }
      else {
        char v17 = v11;
      }
LABEL_16:
      if (v8) {
        BOOL v18 = 1;
      }
      else {
        BOOL v18 = (v17 & 7) == 4;
      }
      if (v18) {
        break;
      }
      if (!*(void *)(a1 + 8))
      {
        id v19 = objc_alloc_init(MEMORY[0x1E4F940B0]);
        id v20 = *(void **)(a1 + 8);
        *(void *)(a1 + 8) = v19;
      }
      if ((PBUnknownFieldAdd() & 1) == 0) {
        goto LABEL_23;
      }
    }
    BOOL v21 = v8 == 0;
  }
  else
  {
LABEL_23:
    BOOL v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_189B23690(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B23D50(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDRelatedPlaceCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v11 = *MEMORY[0x1E4F143B8];
  long long v6 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  id v1 = *(id *)(a1 + 48);
  uint64_t v2 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t v4 = *(void *)v7;
    do
    {
      uint64_t v5 = 0;
      do
      {
        if (*(void *)v7 != v4) {
          objc_enumerationMutation(v1);
        }
        objc_msgSend(*(id *)(*((void *)&v6 + 1) + 8 * v5++), "readAll:", 1, (void)v6);
      }
      while (v3 != v5);
      uint64_t v3 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
    }
    while (v3);
  }
}

BOOL GEOPDRelatedPlaceModuleConfigurationReadAllFrom(uint64_t a1, void *a2, int a3)
{
  uint64_t v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    long long v6 = (int *)MEMORY[0x1E4F940E8];
    long long v7 = (int *)MEMORY[0x1E4F940E0];
    long long v8 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v5[*MEMORY[0x1E4F940E8]] < *(void *)&v5[*MEMORY[0x1E4F940E0]])
    {
      long long v9 = (int *)MEMORY[0x1E4F940B8];
      while (1)
      {
        if (v5[*v8]) {
          goto LABEL_53;
        }
        char v10 = 0;
        unsigned int v11 = 0;
        unint64_t v12 = 0;
        while (1)
        {
          uint64_t v13 = *v6;
          uint64_t v14 = *(void *)&v5[v13];
          unint64_t v15 = v14 + 1;
          if (v14 == -1 || v15 > *(void *)&v5[*v7]) {
            break;
          }
          char v16 = *(unsigned char *)(*(void *)&v5[*v9] + v14);
          *(void *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0) {
            goto LABEL_13;
          }
          v10 += 7;
          BOOL v17 = v11++ >= 9;
          if (v17)
          {
            unint64_t v12 = 0;
            int v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        int v18 = v5[*v8];
        if (v5[*v8]) {
          unint64_t v12 = 0;
        }
LABEL_15:
        if (v18 || (v12 & 7) == 4) {
          goto LABEL_53;
        }
        unint64_t v20 = v12 >> 3;
        if ((v12 >> 3) == 3) {
          break;
        }
        if (v20 == 2)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_55;
          }
          int v34 = objc_alloc_init(GEOLocalizedString);
          if (!GEOLocalizedStringReadAllFrom((uint64_t)v34, v5, a3))
          {

            goto LABEL_55;
          }
          PBReaderRecallMark();
          -[GEOPDRelatedPlaceModuleConfiguration addSectionTitle:](a1, v34);
        }
        else
        {
          if (v20 == 1)
          {
            char v21 = 0;
            unsigned int v22 = 0;
            uint64_t v23 = 0;
            *(unsigned char *)(a1 + 32) |= 2u;
            while (1)
            {
              uint64_t v24 = *v6;
              uint64_t v25 = *(void *)&v5[v24];
              unint64_t v26 = v25 + 1;
              if (v25 == -1 || v26 > *(void *)&v5[*v7]) {
                break;
              }
              char v27 = *(unsigned char *)(*(void *)&v5[*v9] + v25);
              *(void *)&v5[v24] = v26;
              v23 |= (unint64_t)(v27 & 0x7F) << v21;
              if ((v27 & 0x80) == 0) {
                goto LABEL_44;
              }
              v21 += 7;
              BOOL v17 = v22++ >= 9;
              if (v17)
              {
                LODWORD(v23) = 0;
                goto LABEL_46;
              }
            }
            v5[*v8] = 1;
LABEL_44:
            if (v5[*v8]) {
              LODWORD(v23) = 0;
            }
LABEL_46:
            uint64_t v37 = 28;
LABEL_51:
            *(_DWORD *)(a1 + v37) = v23;
            goto LABEL_52;
          }
          if (!*(void *)(a1 + 8))
          {
            id v35 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            BOOL v36 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v35;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_55;
          }
        }
LABEL_52:
        if (*(void *)&v5[*v6] >= *(void *)&v5[*v7]) {
          goto LABEL_53;
        }
      }
      char v28 = 0;
      unsigned int v29 = 0;
      uint64_t v23 = 0;
      *(unsigned char *)(a1 + 32) |= 1u;
      while (1)
      {
        uint64_t v30 = *v6;
        uint64_t v31 = *(void *)&v5[v30];
        unint64_t v32 = v31 + 1;
        if (v31 == -1 || v32 > *(void *)&v5[*v7]) {
          break;
        }
        char v33 = *(unsigned char *)(*(void *)&v5[*v9] + v31);
        *(void *)&v5[v30] = v32;
        v23 |= (unint64_t)(v33 & 0x7F) << v28;
        if ((v33 & 0x80) == 0) {
          goto LABEL_48;
        }
        v28 += 7;
        BOOL v17 = v29++ >= 9;
        if (v17)
        {
          LODWORD(v23) = 0;
          goto LABEL_50;
        }
      }
      v5[*v8] = 1;
LABEL_48:
      if (v5[*v8]) {
        LODWORD(v23) = 0;
      }
LABEL_50:
      uint64_t v37 = 24;
      goto LABEL_51;
    }
LABEL_53:
    BOOL v38 = v5[*v8] == 0;
  }
  else
  {
LABEL_55:
    BOOL v38 = 0;
  }
  objc_sync_exit(v5);

  return v38;
}

void sub_189B24B28(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDResolvedItemReadAllFrom(uint64_t a1, void *a2)
{
  uint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    long long v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      long long v7 = (int *)MEMORY[0x1E4F940B8];
      while (1)
      {
        if (v3[*v6]) {
          goto LABEL_51;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          goto LABEL_51;
        }
        unint64_t v18 = v10 >> 3;
        if ((v10 >> 3) == 3) {
          break;
        }
        if (v18 == 2)
        {
          char v28 = 0;
          unsigned int v29 = 0;
          uint64_t v23 = 0;
          *(unsigned char *)(a1 + 32) |= 1u;
          while (1)
          {
            uint64_t v30 = *v4;
            uint64_t v31 = *(void *)&v3[v30];
            unint64_t v32 = v31 + 1;
            if (v31 == -1 || v32 > *(void *)&v3[*v5]) {
              break;
            }
            char v33 = *(unsigned char *)(*(void *)&v3[*v7] + v31);
            *(void *)&v3[v30] = v32;
            v23 |= (unint64_t)(v33 & 0x7F) << v28;
            if ((v33 & 0x80) == 0) {
              goto LABEL_46;
            }
            v28 += 7;
            BOOL v15 = v29++ >= 9;
            if (v15)
            {
              LODWORD(v23) = 0;
              goto LABEL_48;
            }
          }
          v3[*v6] = 1;
LABEL_46:
          if (v3[*v6]) {
            LODWORD(v23) = 0;
          }
LABEL_48:
          uint64_t v36 = 24;
LABEL_49:
          *(_DWORD *)(a1 + v36) = v23;
          goto LABEL_50;
        }
        if (v18 == 1)
        {
          uint64_t v19 = PBReaderReadString();
          unint64_t v20 = *(void **)(a1 + 16);
          *(void *)(a1 + 16) = v19;
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v34 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            id v35 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v34;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_52;
          }
        }
LABEL_50:
        if (*(void *)&v3[*v4] >= *(void *)&v3[*v5]) {
          goto LABEL_51;
        }
      }
      char v21 = 0;
      unsigned int v22 = 0;
      uint64_t v23 = 0;
      *(unsigned char *)(a1 + 32) |= 2u;
      while (1)
      {
        uint64_t v24 = *v4;
        uint64_t v25 = *(void *)&v3[v24];
        unint64_t v26 = v25 + 1;
        if (v25 == -1 || v26 > *(void *)&v3[*v5]) {
          break;
        }
        char v27 = *(unsigned char *)(*(void *)&v3[*v7] + v25);
        *(void *)&v3[v24] = v26;
        v23 |= (unint64_t)(v27 & 0x7F) << v21;
        if ((v27 & 0x80) == 0) {
          goto LABEL_42;
        }
        v21 += 7;
        BOOL v15 = v22++ >= 9;
        if (v15)
        {
          LODWORD(v23) = 0;
          goto LABEL_44;
        }
      }
      v3[*v6] = 1;
LABEL_42:
      if (v3[*v6]) {
        LODWORD(v23) = 0;
      }
LABEL_44:
      uint64_t v36 = 28;
      goto LABEL_49;
    }
LABEL_51:
    BOOL v37 = v3[*v6] == 0;
  }
  else
  {
LABEL_52:
    BOOL v37 = 0;
  }
  objc_sync_exit(v3);

  return v37;
}

void sub_189B25A54(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDRestaurantReservationLinkReadAllFrom(uint64_t a1, void *a2, int a3)
{
  uint64_t v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    long long v6 = (int *)MEMORY[0x1E4F940E8];
    long long v7 = (int *)MEMORY[0x1E4F940E0];
    char v8 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v5[*MEMORY[0x1E4F940E8]] < *(void *)&v5[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v9 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v5[*v8]) {
          break;
        }
        char v10 = 0;
        unsigned int v11 = 0;
        unint64_t v12 = 0;
        while (1)
        {
          uint64_t v13 = *v6;
          uint64_t v14 = *(void *)&v5[v13];
          unint64_t v15 = v14 + 1;
          if (v14 == -1 || v15 > *(void *)&v5[*v7]) {
            break;
          }
          char v16 = *(unsigned char *)(*(void *)&v5[*v9] + v14);
          *(void *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0) {
            goto LABEL_13;
          }
          v10 += 7;
          if (v11++ >= 9)
          {
            unint64_t v12 = 0;
            int v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        int v18 = v5[*v8];
        if (v5[*v8]) {
          unint64_t v12 = 0;
        }
LABEL_15:
        if (v18 || (v12 & 7) == 4) {
          break;
        }
        if ((v12 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_29;
          }
          unint64_t v20 = objc_alloc_init(GEOPDVendorIDLink);
          if (!GEOPDVendorIDLinkReadAllFrom((uint64_t)v20, v5, a3))
          {

            goto LABEL_29;
          }
          PBReaderRecallMark();
          -[GEOPDRestaurantReservationLink addRestaurantLink:](a1, v20);
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v21 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            unsigned int v22 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v21;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_29;
          }
        }
      }
      while (*(void *)&v5[*v6] < *(void *)&v5[*v7]);
    }
    BOOL v23 = v5[*v8] == 0;
  }
  else
  {
LABEL_29:
    BOOL v23 = 0;
  }
  objc_sync_exit(v5);

  return v23;
}

void sub_189B26498(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDRestaurantReservationLinkFilterReadAllFrom(uint64_t a1, void *a2)
{
  uint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    long long v6 = (int *)MEMORY[0x1E4F940C8];
    long long v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      int v8 = v3[*v6];
      if (*(void *)&v3[*v4] >= *(void *)&v3[*v5]) {
        break;
      }
      if (v3[*v6])
      {
        int v8 = 1;
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      uint64_t v11 = 0;
      while (1)
      {
        uint64_t v12 = *v4;
        uint64_t v13 = *(void *)&v3[v12];
        unint64_t v14 = v13 + 1;
        if (v13 == -1 || v14 > *(void *)&v3[*v5]) {
          break;
        }
        char v15 = *(unsigned char *)(*(void *)&v3[*v7] + v13);
        *(void *)&v3[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0) {
          goto LABEL_13;
        }
        v9 += 7;
        if (v10++ >= 9)
        {
          char v17 = 0;
          int v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      int v8 = v3[*v6];
      if (v3[*v6]) {
        char v17 = 0;
      }
      else {
        char v17 = v11;
      }
LABEL_16:
      if (v8) {
        BOOL v18 = 1;
      }
      else {
        BOOL v18 = (v17 & 7) == 4;
      }
      if (v18) {
        break;
      }
      if (!*(void *)(a1 + 8))
      {
        id v19 = objc_alloc_init(MEMORY[0x1E4F940B0]);
        unint64_t v20 = *(void **)(a1 + 8);
        *(void *)(a1 + 8) = v19;
      }
      if ((PBUnknownFieldAdd() & 1) == 0) {
        goto LABEL_23;
      }
    }
    BOOL v21 = v8 == 0;
  }
  else
  {
LABEL_23:
    BOOL v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_189B26C74(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B26E68(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B26FE0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B270F0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B27200(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B27310(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B2753C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B27D48(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B27E3C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDResultSnippetCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v22 = *MEMORY[0x1E4F143B8];
  long long v16 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  id v2 = *(id *)(a1 + 40);
  uint64_t v3 = [v2 countByEnumeratingWithState:&v16 objects:v21 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v17;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v17 != v5) {
          objc_enumerationMutation(v2);
        }
        -[GEOPDChildPlace readAll:](*(void *)(*((void *)&v16 + 1) + 8 * v6++), 1);
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v16 objects:v21 count:16];
    }
    while (v4);
  }

  long long v14 = 0u;
  long long v15 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  id v7 = *(id *)(a1 + 32);
  uint64_t v8 = [v7 countByEnumeratingWithState:&v12 objects:v20 count:16];
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)v13;
    do
    {
      uint64_t v11 = 0;
      do
      {
        if (*(void *)v13 != v10) {
          objc_enumerationMutation(v7);
        }
        -[GEOPDChildItem readAll:](*(void *)(*((void *)&v12 + 1) + 8 * v11++), 1);
      }
      while (v9 != v11);
      uint64_t v9 = [v7 countByEnumeratingWithState:&v12 objects:v20 count:16];
    }
    while (v9);
  }
}

void sub_189B2845C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B28F34(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDReviewReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 68);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 64)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  unsigned int v12 = (vaddv_s16((int16x4_t)(*(void *)&vshl_u16((uint16x4_t)(*(void *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 76)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFEFFFDFFFBFFFCLL) & 0xFF01FF01FF01FF01))+ ((*(unsigned char *)(a1 + 76) & 2) != 0));
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 > 2;
        char v17 = v16 & ~(_BYTE)v11 | v9;
        unsigned __int8 v18 = v16 | v11;
        char v59 = v17;
        char v60 = v18 | v17;
        if ((v18 | v8)) {
          long long v19 = 0;
        }
        else {
          long long v19 = a3;
        }
        char v61 = (v19 == 0) | v18;
        BOOL v62 = v18;
        unint64_t v20 = (int *)MEMORY[0x1E4F940E8];
        BOOL v21 = (int *)MEMORY[0x1E4F940C8];
        uint64_t v22 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v9;
LABEL_8:
        uint64_t v14 = v10;
        uint64_t v15 = v11;
LABEL_10:
        ++v7;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (*(void *)(v3 + *v20) < *(void *)(v3 + *v6) && !*(unsigned char *)(v3 + *v21))
  {
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      if (v24++ >= 9)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_25:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    if (v31 || (v25 & 7) == 4) {
      break;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v62;
    if ((v61 & 1) == 0)
    {
      id v35 = v19;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    switch((int)v33)
    {
      case 1:
        if (!v34 || (*(unsigned char *)(a1 + 76) & 0x20) != 0) {
          goto LABEL_69;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_101;
        }
        char v39 = objc_alloc_init(GEOLocalizedString);
        if (!GEOLocalizedStringReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1)) {
          goto LABEL_100;
        }
        PBReaderRecallMark();
        -[GEOPDReview _addNoFlagsSnippet:](a1, v39);

        goto LABEL_73;
      case 2:
        if ((v8 & 1) == 0) {
          goto LABEL_69;
        }
        *(unsigned char *)(a1 + 76) |= 1u;
        uint64_t v40 = *v20;
        unint64_t v41 = *(void *)(v3 + v40);
        uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
        if (v41 <= 0xFFFFFFFFFFFFFFF7 && v41 + 8 <= *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]))
        {
          uint64_t v42 = *(void *)(*(void *)(v3 + *v22) + v41);
          *(void *)(v3 + v40) = v41 + 8;
        }
        else
        {
          *(unsigned char *)(v3 + *v21) = 1;
          uint64_t v42 = 0;
        }
        *(void *)(a1 + 40) = v42;
        goto LABEL_81;
      case 4:
        if (!v34) {
          goto LABEL_69;
        }
        if ((*(unsigned char *)(a1 + 76) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_101;
          }
          v7 += *(unsigned __int8 *)(a1 + 76) << 27 >> 31;
          goto LABEL_73;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_101;
        }
        char v39 = objc_alloc_init(GEOPDUser);
        if (!GEOPDUserReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1)) {
          goto LABEL_100;
        }
        PBReaderRecallMark();
        uint64_t v46 = 48;
        goto LABEL_67;
      case 5:
        if (!v34) {
          goto LABEL_69;
        }
        if ((*(unsigned char *)(a1 + 76) & 8) == 0)
        {
          uint64_t v47 = PBReaderReadString();
          int v48 = *(void **)(a1 + 32);
          *(void *)(a1 + 32) = v47;
          goto LABEL_68;
        }
        char v50 = PBReaderSkipValueWithTag();
        uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
        if ((v50 & 1) == 0) {
          goto LABEL_101;
        }
        char v51 = 16 * *(unsigned char *)(a1 + 76);
        goto LABEL_78;
      case 6:
        if (!v34) {
          goto LABEL_69;
        }
        if ((*(unsigned char *)(a1 + 76) & 4) != 0)
        {
          char v52 = PBReaderSkipValueWithTag();
          uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
          if ((v52 & 1) == 0) {
            goto LABEL_101;
          }
          char v51 = 32 * *(unsigned char *)(a1 + 76);
LABEL_78:
          v7 += v51 >> 7;
          BOOL v21 = (int *)MEMORY[0x1E4F940C8];
          goto LABEL_81;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_101;
        }
        char v39 = objc_alloc_init(GEOPDRating);
        if (GEOPDRatingReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1))
        {
          PBReaderRecallMark();
          uint64_t v46 = 24;
LABEL_67:
          int v48 = *(void **)(a1 + v46);
          *(void *)(a1 + v46) = v39;
LABEL_68:

          --v7;
LABEL_73:
          BOOL v21 = (int *)MEMORY[0x1E4F940C8];
          uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
          goto LABEL_81;
        }
LABEL_100:

LABEL_101:
        int v57 = 0;
        __int16 v58 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__flags;
        BOOL v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_84:
        if (v59) {
LABEL_85:
        }
          *(unsigned char *)(a1 + v58[336]) |= 2u;
        if (v62 || (v57 & 1) == 0)
        {
          *(unsigned char *)(a1 + v58[336]) |= 0x20u;
          *(unsigned char *)(a1 + v58[336]) |= 0x10u;
          *(unsigned char *)(a1 + v58[336]) |= 8u;
          *(unsigned char *)(a1 + v58[336]) |= 4u;
        }
        else if (v19)
        {
          while (1)
          {
            int v53 = *v19++;
            char v54 = 32;
            switch(v53)
            {
              case 0:
                goto LABEL_94;
              case 1:
                goto LABEL_93;
              case 4:
                char v54 = 16;
                goto LABEL_93;
              case 5:
                char v54 = 8;
                goto LABEL_93;
              case 6:
                char v54 = 4;
LABEL_93:
                *(unsigned char *)(a1 + v58[336]) |= v54;
                break;
              default:
                continue;
            }
          }
        }
LABEL_94:
        if (v57) {
          unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
        }
        else {
          unint64_t v3 = 0;
        }
        if (v62)
        {
          char v55 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      default:
        if ((v59 & 1) == 0 || (*(unsigned char *)(a1 + 76) & 2) != 0)
        {
LABEL_69:
          char v49 = PBReaderSkipValueWithTag();
          BOOL v21 = (int *)MEMORY[0x1E4F940C8];
          uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
          if (v49) {
            goto LABEL_81;
          }
          int v57 = 0;
LABEL_83:
          __int16 v58 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__flags;
          goto LABEL_84;
        }
        if (!*(void *)(a1 + 16))
        {
          id v43 = objc_alloc_init(MEMORY[0x1E4F940B0]);
          char v44 = *(void **)(a1 + 16);
          *(void *)(a1 + 16) = v43;
        }
        int v45 = PBUnknownFieldAdd();
        BOOL v21 = (int *)MEMORY[0x1E4F940C8];
        uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
        if (!v45)
        {
          int v57 = 0;
          __int16 v58 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__flags;
          goto LABEL_85;
        }
LABEL_81:
        if (!(v60 & 1 | (v7 != 0))) {
          goto LABEL_82;
        }
        break;
    }
  }
LABEL_82:
  int v57 = 1;
  goto LABEL_83;
}

void sub_189B29918(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B29A28(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B29B38(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B2A0DC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDReviewCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  long long v7 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  long long v10 = 0u;
  id v2 = *(id *)(a1 + 56);
  uint64_t v3 = [v2 countByEnumeratingWithState:&v7 objects:v11 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v8;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v8 != v5) {
          objc_enumerationMutation(v2);
        }
        objc_msgSend(*(id *)(*((void *)&v7 + 1) + 8 * v6++), "readAll:", 1, (void)v7);
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v7 objects:v11 count:16];
    }
    while (v4);
  }

  -[GEOPDUser readAll:](*(void *)(a1 + 48), 1);
}

unint64_t GEOPDReviewReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 68))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDReviewReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)long long v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 72));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 64) = [v8 position];
  *(_DWORD *)(a1 + 68) = [v8 length];
  if (a3) {
    long long v9 = (int *)&GEOPDReviewReadAllFrom_recursiveTag;
  }
  else {
    long long v9 = (int *)&GEOPDReviewReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDReviewReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOPDReviewCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
  return Specified;
}

void sub_189B2A460(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B2A7F8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B2AABC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B2B530(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDRibbonItemReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  char v7 = 0;
  uint64_t v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  int v11 = ((*(unsigned __int8 *)(a1 + 56) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 56) >> 2) & 1)
      + ((*(unsigned __int8 *)(a1 + 56) >> 1) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v11;
        goto LABEL_8;
      case -3:
        char v7 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_9;
      case 0:
        BOOL v14 = v11 != 0;
        char v15 = v14 & ~(_BYTE)v10 | v9;
        unsigned __int8 v16 = v14 | v10;
        char v59 = v15;
        char v60 = v16 | v15;
        if ((v16 | v7)) {
          char v17 = 0;
        }
        else {
          char v17 = a3;
        }
        char v61 = (v17 == 0) | v16;
        BOOL v62 = v16;
        unsigned __int8 v18 = (int *)MEMORY[0x1E4F940E8];
        long long v19 = (int *)MEMORY[0x1E4F940C8];
        unint64_t v20 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v11;
LABEL_7:
        uint64_t v12 = v9;
LABEL_8:
        uint64_t v13 = v10;
LABEL_9:
        ++v8;
        uint64_t v9 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v18) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v19)) {
      goto LABEL_78;
    }
    char v21 = 0;
    unsigned int v22 = 0;
    unint64_t v23 = 0;
    while (1)
    {
      uint64_t v24 = *v18;
      uint64_t v25 = *(void *)(v3 + v24);
      unint64_t v26 = v25 + 1;
      if (v25 == -1 || v26 > *(void *)(v3 + *v6)) {
        break;
      }
      char v27 = *(unsigned char *)(*(void *)(v3 + *v20) + v25);
      *(void *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0) {
        goto LABEL_24;
      }
      v21 += 7;
      BOOL v28 = v22++ >= 9;
      if (v28)
      {
        unint64_t v23 = 0;
        int v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_26;
      }
    }
    *(unsigned char *)(v3 + *v19) = 1;
LABEL_24:
    int v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(unsigned char *)(v3 + *v19)) {
      unint64_t v23 = 0;
    }
LABEL_26:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_78:
      int v57 = 1;
      goto LABEL_79;
    }
    unint64_t v31 = v23 >> 3;
    BOOL v32 = v62;
    if ((v61 & 1) == 0)
    {
      unint64_t v33 = v17;
      do
      {
        int v35 = *v33++;
        int v34 = v35;
        BOOL v32 = v35 != 0;
        if (v35) {
          BOOL v36 = v34 == v31;
        }
        else {
          BOOL v36 = 1;
        }
      }
      while (!v36);
    }
    if (v31 == 3)
    {
      if (!v32) {
        goto LABEL_65;
      }
      if ((*(unsigned char *)(a1 + 56) & 4) == 0)
      {
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_99;
        }
        char v44 = objc_alloc_init(GEOPDAmenityRibbonItem);
        if (!GEOPDAmenityRibbonItemReadAllFrom((uint64_t)v44, (void *)v3)) {
          goto LABEL_98;
        }
        PBReaderRecallMark();
        uint64_t v45 = 24;
LABEL_58:
        uint64_t v46 = *(void **)(a1 + v45);
        *(void *)(a1 + v45) = v44;

        --v8;
LABEL_76:
        long long v19 = (int *)MEMORY[0x1E4F940C8];
        goto LABEL_77;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        goto LABEL_99;
      }
      char v51 = 32 * *(unsigned char *)(a1 + 56);
LABEL_75:
      v8 += v51 >> 7;
      goto LABEL_76;
    }
    if (v31 == 2) {
      break;
    }
    if (v31 == 1)
    {
      if (v7)
      {
        char v37 = 0;
        unsigned int v38 = 0;
        uint64_t v39 = 0;
        *(unsigned char *)(a1 + 56) |= 1u;
        while (1)
        {
          uint64_t v40 = *v18;
          uint64_t v41 = *(void *)(v3 + v40);
          unint64_t v42 = v41 + 1;
          if (v41 == -1 || v42 > *(void *)(v3 + *v6)) {
            break;
          }
          char v43 = *(unsigned char *)(*(void *)(v3 + *v20) + v41);
          *(void *)(v3 + v40) = v42;
          v39 |= (unint64_t)(v43 & 0x7F) << v37;
          if ((v43 & 0x80) == 0) {
            goto LABEL_68;
          }
          v37 += 7;
          BOOL v28 = v38++ >= 9;
          if (v28)
          {
            LODWORD(v39) = 0;
            goto LABEL_70;
          }
        }
        *(unsigned char *)(v3 + *v19) = 1;
LABEL_68:
        if (*(unsigned char *)(v3 + *v19)) {
          LODWORD(v39) = 0;
        }
LABEL_70:
        *(_DWORD *)(a1 + 52) = v39;
        goto LABEL_77;
      }
    }
    else if ((v59 & 1) != 0 && (*(unsigned char *)(a1 + 56) & 2) == 0)
    {
      if (!*(void *)(a1 + 16))
      {
        id v47 = objc_alloc_init(MEMORY[0x1E4F940B0]);
        int v48 = *(void **)(a1 + 16);
        *(void *)(a1 + 16) = v47;
      }
      int v49 = PBUnknownFieldAdd();
      long long v19 = (int *)MEMORY[0x1E4F940C8];
      if (!v49)
      {
        int v57 = 0;
        __int16 v58 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__flags;
        goto LABEL_81;
      }
      goto LABEL_77;
    }
LABEL_65:
    char v50 = PBReaderSkipValueWithTag();
    long long v19 = (int *)MEMORY[0x1E4F940C8];
    if ((v50 & 1) == 0)
    {
      int v57 = 0;
LABEL_79:
      __int16 v58 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__flags;
      goto LABEL_80;
    }
LABEL_77:
    if (!(v60 & 1 | (v8 != 0))) {
      goto LABEL_78;
    }
  }
  if (!v32) {
    goto LABEL_65;
  }
  if ((*(unsigned char *)(a1 + 56) & 8) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0) {
      goto LABEL_99;
    }
    char v51 = 16 * *(unsigned char *)(a1 + 56);
    goto LABEL_75;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_99;
  }
  char v44 = objc_alloc_init(GEOPDFactoidRibbonItem);
  if (GEOPDFactoidRibbonItemReadAllFrom((uint64_t)v44, (void *)v3))
  {
    PBReaderRecallMark();
    uint64_t v45 = 32;
    goto LABEL_58;
  }
LABEL_98:

LABEL_99:
  int v57 = 0;
  __int16 v58 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__flags;
  long long v19 = (int *)MEMORY[0x1E4F940C8];
LABEL_80:
  if ((v59 & 1) == 0) {
    goto LABEL_82;
  }
LABEL_81:
  *(unsigned char *)(a1 + v58[349]) |= 2u;
LABEL_82:
  if (v62 || (v57 & 1) == 0)
  {
    *(unsigned char *)(a1 + v58[349]) |= 8u;
    *(unsigned char *)(a1 + v58[349]) |= 4u;
    goto LABEL_92;
  }
  if (v17)
  {
    while (2)
    {
      while (1)
      {
        int v53 = *v17++;
        int v52 = v53;
        if (v53 == 2) {
          break;
        }
        if (v52 == 3)
        {
          char v54 = 4;
          goto LABEL_91;
        }
        if (!v52) {
          goto LABEL_92;
        }
      }
      char v54 = 8;
LABEL_91:
      *(unsigned char *)(a1 + v58[349]) |= v54;
      continue;
    }
  }
LABEL_92:
  if (v57) {
    unint64_t v3 = *(unsigned char *)(v3 + *v19) == 0;
  }
  else {
    unint64_t v3 = 0;
  }
  if (v62)
  {
    char v55 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_189B2BC5C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B2C098(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDRibbonItemReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDRibbonItemReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOPDRibbonItemReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOPDRibbonItemReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDRibbonItemReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_189B2C300(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B2C4C8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B2C67C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDRoadAccessInfoFilterReadAllFrom(uint64_t a1, void *a2)
{
  unint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    uint64_t v6 = (int *)MEMORY[0x1E4F940C8];
    char v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      int v8 = v3[*v6];
      if (*(void *)&v3[*v4] >= *(void *)&v3[*v5]) {
        break;
      }
      if (v3[*v6])
      {
        int v8 = 1;
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      uint64_t v11 = 0;
      while (1)
      {
        uint64_t v12 = *v4;
        uint64_t v13 = *(void *)&v3[v12];
        unint64_t v14 = v13 + 1;
        if (v13 == -1 || v14 > *(void *)&v3[*v5]) {
          break;
        }
        char v15 = *(unsigned char *)(*(void *)&v3[*v7] + v13);
        *(void *)&v3[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0) {
          goto LABEL_13;
        }
        v9 += 7;
        if (v10++ >= 9)
        {
          char v17 = 0;
          int v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      int v8 = v3[*v6];
      if (v3[*v6]) {
        char v17 = 0;
      }
      else {
        char v17 = v11;
      }
LABEL_16:
      if (v8) {
        BOOL v18 = 1;
      }
      else {
        BOOL v18 = (v17 & 7) == 4;
      }
      if (v18) {
        break;
      }
      if (!*(void *)(a1 + 8))
      {
        id v19 = objc_alloc_init(MEMORY[0x1E4F940B0]);
        unint64_t v20 = *(void **)(a1 + 8);
        *(void *)(a1 + 8) = v19;
      }
      if ((PBUnknownFieldAdd() & 1) == 0) {
        goto LABEL_23;
      }
    }
    BOOL v21 = v8 == 0;
  }
  else
  {
LABEL_23:
    BOOL v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_189B2D1E0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchPlaceContextMetadataReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 96));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 92);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 88)];
  char v7 = v6;
  uint64_t v8 = 0;
  char v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  uint64_t v12 = 0;
  unsigned int v13 = *(unsigned __int16 *)(a1 + 108);
  unsigned int v14 = ((v13 >> 3) & 1)
      + ((v13 >> 9) & 1)
      + (unsigned __int16)(vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16((uint16x4_t)vdup_n_s16(v13), (uint16x4_t)0xFFF9FFFAFFF8FFF6), (int8x8_t)0x1000100010001))+ ((v13 >> 4) & 1)+ ((v13 >> 11) & 1)+ ((v13 >> 5) & 1));
  while (2)
  {
    uint64_t v15 = 1;
    uint64_t v16 = 1;
    uint64_t v17 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v14;
        goto LABEL_8;
      case -3:
        char v9 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v16 = v11;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v18 = v14 > 5;
        char v19 = v18 & ~(_BYTE)v12 | v10;
        unsigned __int8 v20 = v18 | v12;
        char v79 = v19;
        char v80 = v20 | v19;
        if ((v20 | v9)) {
          BOOL v21 = 0;
        }
        else {
          BOOL v21 = a3;
        }
        char v81 = (v21 == 0) | v20;
        BOOL v82 = v20;
        unsigned int v22 = (int *)MEMORY[0x1E4F940E8];
        unint64_t v23 = (int *)MEMORY[0x1E4F940C8];
        uint64_t v24 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v14;
LABEL_7:
        uint64_t v15 = v10;
LABEL_8:
        uint64_t v16 = v11;
        uint64_t v17 = v12;
LABEL_10:
        ++v8;
        uint64_t v10 = v15;
        uint64_t v11 = v16;
        uint64_t v12 = v17;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v22) >= *(void *)(v3 + *v7) || *(unsigned char *)(v3 + *v23)) {
      goto LABEL_134;
    }
    char v25 = 0;
    unsigned int v26 = 0;
    unint64_t v27 = 0;
    while (1)
    {
      uint64_t v28 = *v22;
      uint64_t v29 = *(void *)(v3 + v28);
      unint64_t v30 = v29 + 1;
      if (v29 == -1 || v30 > *(void *)(v3 + *v7)) {
        break;
      }
      char v31 = *(unsigned char *)(*(void *)(v3 + *v24) + v29);
      *(void *)(v3 + v28) = v30;
      v27 |= (unint64_t)(v31 & 0x7F) << v25;
      if ((v31 & 0x80) == 0) {
        goto LABEL_25;
      }
      v25 += 7;
      BOOL v32 = v26++ >= 9;
      if (v32)
      {
        unint64_t v27 = 0;
        int v33 = *(unsigned __int8 *)(v3 + *v23);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v23) = 1;
LABEL_25:
    int v33 = *(unsigned __int8 *)(v3 + *v23);
    if (*(unsigned char *)(v3 + *v23)) {
      unint64_t v27 = 0;
    }
LABEL_27:
    if (v33 || (v27 & 7) == 4)
    {
LABEL_134:
      int v78 = 1;
      goto LABEL_135;
    }
    unint64_t v35 = v27 >> 3;
    BOOL v36 = v82;
    if ((v81 & 1) == 0)
    {
      char v37 = v21;
      do
      {
        int v39 = *v37++;
        int v38 = v39;
        BOOL v36 = v39 != 0;
        if (v39) {
          BOOL v40 = v38 == v35;
        }
        else {
          BOOL v40 = 1;
        }
      }
      while (!v40);
    }
    switch((int)v35)
    {
      case 1:
        if (!v36) {
          goto LABEL_102;
        }
        if ((*(_WORD *)(a1 + 108) & 0x100) == 0)
        {
          uint64_t v41 = PBReaderReadString();
          uint64_t v42 = 56;
          goto LABEL_73;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_156;
        }
        __int16 v73 = *(_WORD *)(a1 + 108) << 7;
        goto LABEL_131;
      case 2:
        if ((v9 & 1) == 0) {
          goto LABEL_102;
        }
        char v46 = 0;
        unsigned int v47 = 0;
        uint64_t v48 = 0;
        *(_WORD *)(a1 + 108) |= 2u;
        while (2)
        {
          uint64_t v49 = *v22;
          uint64_t v50 = *(void *)(v3 + v49);
          unint64_t v51 = v50 + 1;
          if (v50 == -1 || v51 > *(void *)(v3 + *v7))
          {
            *(unsigned char *)(v3 + *v23) = 1;
          }
          else
          {
            char v52 = *(unsigned char *)(*(void *)(v3 + *v24) + v50);
            *(void *)(v3 + v49) = v51;
            v48 |= (unint64_t)(v52 & 0x7F) << v46;
            if (v52 < 0)
            {
              v46 += 7;
              BOOL v32 = v47++ >= 9;
              if (v32)
              {
                uint64_t v48 = 0;
                goto LABEL_107;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v23)) {
          uint64_t v48 = 0;
        }
LABEL_107:
        BOOL v71 = v48 != 0;
        uint64_t v72 = 104;
        goto LABEL_116;
      case 3:
        if (!v36) {
          goto LABEL_102;
        }
        if ((*(_WORD *)(a1 + 108) & 0x400) == 0)
        {
          uint64_t v41 = PBReaderReadString();
          uint64_t v42 = 72;
          goto LABEL_73;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_156;
        }
        __int16 v73 = 32 * *(_WORD *)(a1 + 108);
        goto LABEL_131;
      case 4:
        if (!v36) {
          goto LABEL_102;
        }
        if ((*(_WORD *)(a1 + 108) & 0x40) == 0)
        {
          uint64_t v41 = PBReaderReadString();
          uint64_t v42 = 40;
          goto LABEL_73;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_156;
        }
        __int16 v73 = *(_WORD *)(a1 + 108) << 9;
        goto LABEL_131;
      case 5:
        if (!v36) {
          goto LABEL_102;
        }
        if ((*(_WORD *)(a1 + 108) & 0x80) == 0)
        {
          uint64_t v41 = PBReaderReadString();
          uint64_t v42 = 48;
          goto LABEL_73;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_156;
        }
        __int16 v73 = *(_WORD *)(a1 + 108) << 8;
        goto LABEL_131;
      case 6:
        if (!v36 || (*(_WORD *)(a1 + 108) & 0x10) != 0) {
          goto LABEL_102;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_156;
        }
        int v53 = objc_alloc_init(GEOLocalizedString);
        if (!GEOLocalizedStringReadAllFrom((uint64_t)v53, (void *)v3, v11 & 1)) {
          goto LABEL_155;
        }
        PBReaderRecallMark();
        -[GEOPDSearchPlaceContextMetadata _addNoFlagsAlternateSearchableName:](a1, v53);

        goto LABEL_132;
      case 7:
        if (!v36) {
          goto LABEL_102;
        }
        if ((*(_WORD *)(a1 + 108) & 0x800) == 0)
        {
          uint64_t v41 = PBReaderReadString();
          uint64_t v42 = 80;
LABEL_73:
          char v54 = *(void **)(a1 + v42);
          *(void *)(a1 + v42) = v41;
          goto LABEL_93;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_156;
        }
        __int16 v73 = 16 * *(_WORD *)(a1 + 108);
        goto LABEL_131;
      case 8:
        if ((v9 & 1) == 0) {
          goto LABEL_102;
        }
        char v55 = 0;
        unsigned int v56 = 0;
        uint64_t v57 = 0;
        *(_WORD *)(a1 + 108) |= 1u;
        while (2)
        {
          uint64_t v58 = *v22;
          uint64_t v59 = *(void *)(v3 + v58);
          unint64_t v60 = v59 + 1;
          if (v59 == -1 || v60 > *(void *)(v3 + *v7))
          {
            *(unsigned char *)(v3 + *v23) = 1;
          }
          else
          {
            char v61 = *(unsigned char *)(*(void *)(v3 + *v24) + v59);
            *(void *)(v3 + v58) = v60;
            v57 |= (unint64_t)(v61 & 0x7F) << v55;
            if (v61 < 0)
            {
              v55 += 7;
              BOOL v32 = v56++ >= 9;
              if (v32)
              {
                LODWORD(v57) = 0;
                goto LABEL_111;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v23)) {
          LODWORD(v57) = 0;
        }
LABEL_111:
        *(_DWORD *)(a1 + 100) = v57;
        goto LABEL_133;
      case 9:
        if (!v36) {
          goto LABEL_102;
        }
        if ((*(_WORD *)(a1 + 108) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_156;
          }
          __int16 v73 = *(_WORD *)(a1 + 108) << 10;
          goto LABEL_131;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_156;
        }
        int v53 = objc_alloc_init(GEOPDContextualPhotoMetadata);
        if (!GEOPDContextualPhotoMetadataReadAllFrom((uint64_t)v53, (void *)v3)) {
          goto LABEL_155;
        }
        PBReaderRecallMark();
        uint64_t v62 = 32;
        goto LABEL_92;
      case 10:
        if (!v36) {
          goto LABEL_102;
        }
        if ((*(_WORD *)(a1 + 108) & 0x200) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_156;
          }
          __int16 v73 = *(_WORD *)(a1 + 108) << 6;
LABEL_131:
          v8 += v73 >> 15;
LABEL_132:
          unint64_t v23 = (int *)MEMORY[0x1E4F940C8];
          char v7 = (int *)MEMORY[0x1E4F940E0];
          uint64_t v24 = (int *)MEMORY[0x1E4F940B8];
LABEL_133:
          if (!(v80 & 1 | (v8 != 0))) {
            goto LABEL_134;
          }
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_156;
        }
        int v53 = objc_alloc_init(GEOPDNearbyPlacesMetadata);
        if (GEOPDNearbyPlacesMetadataReadAllFrom((uint64_t)v53, (void *)v3))
        {
          PBReaderRecallMark();
          uint64_t v62 = 64;
LABEL_92:
          char v54 = *(void **)(a1 + v62);
          *(void *)(a1 + v62) = v53;
LABEL_93:

          --v8;
          goto LABEL_132;
        }
LABEL_155:

LABEL_156:
        int v78 = 0;
        unint64_t v23 = (int *)MEMORY[0x1E4F940C8];
LABEL_135:
        if (v79) {
LABEL_136:
        }
          *(_WORD *)(a1 + 108) |= 8u;
        if (v82 || (v78 & 1) == 0)
        {
          *(_WORD *)(a1 + 108) |= 0x100u;
          *(_WORD *)(a1 + 108) |= 0x400u;
          *(_WORD *)(a1 + 108) |= 0x40u;
          *(_WORD *)(a1 + 108) |= 0x80u;
          *(_WORD *)(a1 + 108) |= 0x10u;
          *(_WORD *)(a1 + 108) |= 0x800u;
          *(_WORD *)(a1 + 108) |= 0x20u;
          *(_WORD *)(a1 + 108) |= 0x200u;
        }
        else if (v21)
        {
          while (1)
          {
            int v74 = *v21++;
            __int16 v75 = 256;
            switch(v74)
            {
              case 0:
                goto LABEL_149;
              case 1:
                goto LABEL_148;
              case 3:
                __int16 v75 = 1024;
                goto LABEL_148;
              case 4:
                __int16 v75 = 64;
                goto LABEL_148;
              case 5:
                __int16 v75 = 128;
                goto LABEL_148;
              case 6:
                __int16 v75 = 16;
                goto LABEL_148;
              case 7:
                __int16 v75 = 2048;
                goto LABEL_148;
              case 9:
                __int16 v75 = 32;
                goto LABEL_148;
              case 10:
                __int16 v75 = 512;
LABEL_148:
                *(_WORD *)(a1 + 108) |= v75;
                break;
              default:
                continue;
            }
          }
        }
LABEL_149:
        if (v78) {
          unint64_t v3 = *(unsigned char *)(v3 + *v23) == 0;
        }
        else {
          unint64_t v3 = 0;
        }
        if (v82)
        {
          long long v76 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      case 11:
        if ((v9 & 1) == 0) {
          goto LABEL_102;
        }
        char v63 = 0;
        unsigned int v64 = 0;
        uint64_t v65 = 0;
        *(_WORD *)(a1 + 108) |= 4u;
        while (2)
        {
          uint64_t v66 = *v22;
          uint64_t v67 = *(void *)(v3 + v66);
          unint64_t v68 = v67 + 1;
          if (v67 == -1 || v68 > *(void *)(v3 + *v7))
          {
            *(unsigned char *)(v3 + *v23) = 1;
          }
          else
          {
            char v69 = *(unsigned char *)(*(void *)(v3 + *v24) + v67);
            *(void *)(v3 + v66) = v68;
            v65 |= (unint64_t)(v69 & 0x7F) << v63;
            if (v69 < 0)
            {
              v63 += 7;
              BOOL v32 = v64++ >= 9;
              if (v32)
              {
                uint64_t v65 = 0;
                goto LABEL_115;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v23)) {
          uint64_t v65 = 0;
        }
LABEL_115:
        BOOL v71 = v65 != 0;
        uint64_t v72 = 105;
LABEL_116:
        *(unsigned char *)(a1 + v72) = v71;
        goto LABEL_133;
      default:
        if ((v79 & 1) == 0 || (*(_WORD *)(a1 + 108) & 8) != 0)
        {
LABEL_102:
          char v70 = PBReaderSkipValueWithTag();
          uint64_t v24 = (int *)MEMORY[0x1E4F940B8];
          char v7 = (int *)MEMORY[0x1E4F940E0];
          unint64_t v23 = (int *)MEMORY[0x1E4F940C8];
          if ((v70 & 1) == 0)
          {
            int v78 = 0;
            goto LABEL_135;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v43 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            char v44 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v43;
          }
          int v45 = PBUnknownFieldAdd();
          unint64_t v23 = (int *)MEMORY[0x1E4F940C8];
          char v7 = (int *)MEMORY[0x1E4F940E0];
          uint64_t v24 = (int *)MEMORY[0x1E4F940B8];
          if (!v45)
          {
            int v78 = 0;
            goto LABEL_136;
          }
        }
        goto LABEL_133;
    }
  }
}

void sub_189B2DF98(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B2E9A8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B2EAB4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDSearchPlaceContextMetadataCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v11 = *MEMORY[0x1E4F143B8];
  long long v6 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  id v1 = *(id *)(a1 + 24);
  uint64_t v2 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t v4 = *(void *)v7;
    do
    {
      uint64_t v5 = 0;
      do
      {
        if (*(void *)v7 != v4) {
          objc_enumerationMutation(v1);
        }
        objc_msgSend(*(id *)(*((void *)&v6 + 1) + 8 * v5++), "readAll:", 1, (void)v6);
      }
      while (v3 != v5);
      uint64_t v3 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
    }
    while (v3);
  }
}

unint64_t GEOPDSearchPlaceContextMetadataReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 92))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDSearchPlaceContextMetadataReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 96));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 88) = [v8 position];
  *(_DWORD *)(a1 + 92) = [v8 length];
  if (a3) {
    long long v9 = (int *)&GEOPDSearchPlaceContextMetadataReadAllFrom_recursiveTag;
  }
  else {
    long long v9 = (int *)&GEOPDSearchPlaceContextMetadataReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDSearchPlaceContextMetadataReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOPDSearchPlaceContextMetadataCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 96));
  return Specified;
}

void sub_189B2EE20(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B2F16C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B2F4F4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSearchResultPlacePhotoReadAllFrom(uint64_t a1, void *a2, int a3)
{
  uint64_t v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    long long v6 = (int *)MEMORY[0x1E4F940E8];
    long long v7 = (int *)MEMORY[0x1E4F940E0];
    id v8 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v5[*MEMORY[0x1E4F940E8]] < *(void *)&v5[*MEMORY[0x1E4F940E0]])
    {
      long long v9 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v5[*v8]) {
          break;
        }
        char v10 = 0;
        unsigned int v11 = 0;
        unint64_t v12 = 0;
        while (1)
        {
          uint64_t v13 = *v6;
          uint64_t v14 = *(void *)&v5[v13];
          unint64_t v15 = v14 + 1;
          if (v14 == -1 || v15 > *(void *)&v5[*v7]) {
            break;
          }
          char v16 = *(unsigned char *)(*(void *)&v5[*v9] + v14);
          *(void *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0) {
            goto LABEL_13;
          }
          v10 += 7;
          if (v11++ >= 9)
          {
            unint64_t v12 = 0;
            int v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        int v18 = v5[*v8];
        if (v5[*v8]) {
          unint64_t v12 = 0;
        }
LABEL_15:
        if (v18 || (v12 & 7) == 4) {
          break;
        }
        if ((v12 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_29;
          }
          unsigned __int8 v20 = objc_alloc_init(GEOPDCaptionedPhoto);
          if (!GEOPDCaptionedPhotoReadAllFrom((uint64_t)v20, v5, a3))
          {

            goto LABEL_29;
          }
          PBReaderRecallMark();
          BOOL v21 = *(void **)(a1 + 16);
          *(void *)(a1 + 16) = v20;
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v22 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            unint64_t v23 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v22;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_29;
          }
        }
      }
      while (*(void *)&v5[*v6] < *(void *)&v5[*v7]);
    }
    BOOL v24 = v5[*v8] == 0;
  }
  else
  {
LABEL_29:
    BOOL v24 = 0;
  }
  objc_sync_exit(v5);

  return v24;
}

void sub_189B2FF24(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSearchResultPlacePhotoFilterReadAllFrom(void *a1, void *a2)
{
  uint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    long long v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      long long v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          if (!PBReaderPlaceMark()) {
            goto LABEL_28;
          }
          -[GEOPDSearchResultPlacePhotoFilter _reservePhotoSizeFilters:]((uint64_t)a1, 1uLL);
          if (!GEOPDPhotoSizeFilterValueReadAllFrom(a1[2] + 12 * a1[3], (uint64_t)v3)) {
            goto LABEL_28;
          }
          PBReaderRecallMark();
          ++a1[3];
        }
        else
        {
          if (!a1[1])
          {
            id v18 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            char v19 = (void *)a1[1];
            a1[1] = v18;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_28;
          }
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v20 = v3[*v6] == 0;
  }
  else
  {
LABEL_28:
    BOOL v20 = 0;
  }
  objc_sync_exit(v3);

  return v20;
}

void sub_189B30848(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSimpleRestaurantMenuTextReadAllFrom(uint64_t a1, void *a2, int a3)
{
  uint64_t v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    long long v6 = (int *)MEMORY[0x1E4F940E8];
    long long v7 = (int *)MEMORY[0x1E4F940E0];
    char v8 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v5[*MEMORY[0x1E4F940E8]] < *(void *)&v5[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v9 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v5[*v8]) {
          break;
        }
        char v10 = 0;
        unsigned int v11 = 0;
        unint64_t v12 = 0;
        while (1)
        {
          uint64_t v13 = *v6;
          uint64_t v14 = *(void *)&v5[v13];
          unint64_t v15 = v14 + 1;
          if (v14 == -1 || v15 > *(void *)&v5[*v7]) {
            break;
          }
          char v16 = *(unsigned char *)(*(void *)&v5[*v9] + v14);
          *(void *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0) {
            goto LABEL_13;
          }
          v10 += 7;
          if (v11++ >= 9)
          {
            unint64_t v12 = 0;
            int v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        int v18 = v5[*v8];
        if (v5[*v8]) {
          unint64_t v12 = 0;
        }
LABEL_15:
        if (v18 || (v12 & 7) == 4) {
          break;
        }
        if ((v12 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_29;
          }
          BOOL v20 = objc_alloc_init(GEOPDSimpleRestaurantMenuTextGroup);
          if (!GEOPDSimpleRestaurantMenuTextGroupReadAllFrom((uint64_t)v20, v5, a3))
          {

            goto LABEL_29;
          }
          PBReaderRecallMark();
          -[GEOPDSimpleRestaurantMenuText addMenuGroup:](a1, v20);
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v21 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            id v22 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v21;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_29;
          }
        }
      }
      while (*(void *)&v5[*v6] < *(void *)&v5[*v7]);
    }
    BOOL v23 = v5[*v8] == 0;
  }
  else
  {
LABEL_29:
    BOOL v23 = 0;
  }
  objc_sync_exit(v5);

  return v23;
}

void sub_189B3115C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSimpleRestaurantMenuTextGroupReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  long long v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  uint64_t v7 = 0;
  uint64_t v8 = 0;
  char v9 = 0;
  uint64_t v10 = 0;
  int v11 = ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1)
      + (*(unsigned char *)(a1 + 52) & 1)
      + ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v10])
    {
      case -4:
        ++v11;
        uint64_t v12 = v7;
        goto LABEL_8;
      case -3:
        char v9 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_8;
      case 0:
        BOOL v14 = v11 != 0;
        char v15 = v14 & ~(_BYTE)v7;
        unsigned __int8 v16 = v14 | v7;
        char v49 = v15 | v8;
        if ((v16 | v9)) {
          uint64_t v17 = 0;
        }
        else {
          uint64_t v17 = a3;
        }
        BOOL v52 = v16;
        char v50 = v16 | v15 | v8;
        char v51 = (v17 == 0) | v16;
        int v18 = (int *)MEMORY[0x1E4F940E8];
        char v19 = (int *)MEMORY[0x1E4F940C8];
        BOOL v20 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v11;
LABEL_7:
        uint64_t v12 = v7;
        uint64_t v13 = v8;
LABEL_8:
        ++v10;
        uint64_t v7 = v12;
        uint64_t v8 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v18) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v19)) {
      goto LABEL_58;
    }
    char v21 = 0;
    unsigned int v22 = 0;
    unint64_t v23 = 0;
    while (1)
    {
      uint64_t v24 = *v18;
      uint64_t v25 = *(void *)(v3 + v24);
      unint64_t v26 = v25 + 1;
      if (v25 == -1 || v26 > *(void *)(v3 + *v6)) {
        break;
      }
      char v27 = *(unsigned char *)(*(void *)(v3 + *v20) + v25);
      *(void *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0) {
        goto LABEL_23;
      }
      v21 += 7;
      if (v22++ >= 9)
      {
        unint64_t v23 = 0;
        int v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_25;
      }
    }
    *(unsigned char *)(v3 + *v19) = 1;
LABEL_23:
    int v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(unsigned char *)(v3 + *v19)) {
      unint64_t v23 = 0;
    }
LABEL_25:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_58:
      int v48 = 1;
      goto LABEL_59;
    }
    unint64_t v31 = v23 >> 3;
    BOOL v32 = v52;
    if ((v51 & 1) == 0)
    {
      int v33 = v17;
      do
      {
        int v35 = *v33++;
        int v34 = v35;
        BOOL v32 = v35 != 0;
        if (v35) {
          BOOL v36 = v34 == v31;
        }
        else {
          BOOL v36 = 1;
        }
      }
      while (!v36);
    }
    if (v31 == 2)
    {
      if (!v32 || (*(unsigned char *)(a1 + 52) & 2) != 0)
      {
LABEL_52:
        char v43 = PBReaderSkipValueWithTag();
        char v19 = (int *)MEMORY[0x1E4F940C8];
        if ((v43 & 1) == 0)
        {
          int v48 = 0;
          goto LABEL_59;
        }
        goto LABEL_57;
      }
      int v39 = PBReaderReadString();
      if (v39) {
        -[GEOPDSimpleRestaurantMenuTextGroup _addNoFlagsMenuItem:](a1, v39);
      }

      goto LABEL_56;
    }
    if (v31 == 1) {
      break;
    }
    if (v49 & 1) == 0 || (*(unsigned char *)(a1 + 52)) {
      goto LABEL_52;
    }
    if (!*(void *)(a1 + 16))
    {
      id v40 = objc_alloc_init(MEMORY[0x1E4F940B0]);
      uint64_t v41 = *(void **)(a1 + 16);
      *(void *)(a1 + 16) = v40;
    }
    int v42 = PBUnknownFieldAdd();
    char v19 = (int *)MEMORY[0x1E4F940C8];
    if (!v42)
    {
      int v48 = 0;
      goto LABEL_60;
    }
LABEL_57:
    if (!(v50 & 1 | (v10 != 0))) {
      goto LABEL_58;
    }
  }
  if (!v32) {
    goto LABEL_52;
  }
  if ((*(unsigned char *)(a1 + 52) & 4) == 0)
  {
    uint64_t v37 = PBReaderReadString();
    int v38 = *(void **)(a1 + 32);
    *(void *)(a1 + 32) = v37;

    char v19 = (int *)MEMORY[0x1E4F940C8];
    --v10;
    goto LABEL_57;
  }
  if (PBReaderSkipValueWithTag())
  {
    v10 += *(unsigned __int8 *)(a1 + 52) << 29 >> 31;
LABEL_56:
    char v19 = (int *)MEMORY[0x1E4F940C8];
    goto LABEL_57;
  }
  int v48 = 0;
  char v19 = (int *)MEMORY[0x1E4F940C8];
LABEL_59:
  if ((v49 & 1) == 0) {
    goto LABEL_61;
  }
LABEL_60:
  *(unsigned char *)(a1 + 52) |= 1u;
LABEL_61:
  if (v52 || (v48 & 1) == 0)
  {
    *(unsigned char *)(a1 + 52) |= 4u;
    *(unsigned char *)(a1 + 52) |= 2u;
    goto LABEL_70;
  }
  if (v17)
  {
    while (1)
    {
      int v45 = *v17++;
      int v44 = v45;
      if (v45 == 1) {
        break;
      }
      if (v44 == 2)
      {
LABEL_66:
        *(unsigned char *)(a1 + 52) |= v44;
      }
      else if (!v44)
      {
        goto LABEL_70;
      }
    }
    LOBYTE(v44) = 4;
    goto LABEL_66;
  }
LABEL_70:
  if (v48) {
    unint64_t v3 = *(unsigned char *)(v3 + *v19) == 0;
  }
  else {
    unint64_t v3 = 0;
  }
  if (v52)
  {
    char v46 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_189B319B4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B31DBC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B31E98(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSimpleRestaurantMenuTextGroupReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDSimpleRestaurantMenuTextGroupReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    char v9 = (int *)&GEOPDSimpleRestaurantMenuTextGroupReadAllFrom_recursiveTag;
  }
  else {
    char v9 = (int *)&GEOPDSimpleRestaurantMenuTextGroupReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDSimpleRestaurantMenuTextGroupReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_189B32104(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B32344(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B32590(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B32C30(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B32D14(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B33150(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B332C4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B33860(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t GEOPDSpatialEventLookupParametersReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 72))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDSpatialEventLookupParametersReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 76));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 68) = [v8 position];
  *(_DWORD *)(a1 + 72) = [v8 length];
  if (a3) {
    char v9 = (int *)&GEOPDSpatialEventLookupParametersReadAllFrom_recursiveTag;
  }
  else {
    char v9 = (int *)&GEOPDSpatialEventLookupParametersReadAllFrom_initialTag;
  }
  uint64_t Specified = GEOPDSpatialEventLookupParametersReadSpecified(a1, (uint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    [*(id *)(a1 + 48) readAll:1];
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 76));
  return Specified;
}

void sub_189B34034(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSpatialEventLookupParametersIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  uint64_t v2 = (int *)MEMORY[0x1E4F940E8];
  unint64_t v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (!a1[*v4])
    {
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        BOOL v13 = v7++ >= 9;
        if (v13)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 == 2 && PBReaderPlaceMark() && GEOLatLngIsValid(a1)) {
            goto LABEL_52;
          }
          goto LABEL_67;
        case 2u:
          if ((v8 & 7) != 0) {
            goto LABEL_67;
          }
          unsigned int v17 = 0;
          while (1)
          {
            uint64_t v18 = *v2;
            uint64_t v19 = *(void *)&a1[v18];
            unint64_t v20 = v19 + 1;
            if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
              goto LABEL_48;
            }
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if (v21 < 0)
            {
              BOOL v22 = v17++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_53;
          }
        case 3u:
          if ((v8 & 7) != 0) {
            goto LABEL_67;
          }
          unsigned int v23 = 0;
          while (1)
          {
            uint64_t v24 = *v2;
            uint64_t v25 = *(void *)&a1[v24];
            unint64_t v26 = v25 + 1;
            if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
              goto LABEL_48;
            }
            int v27 = *(char *)(*(void *)&a1[*v5] + v25);
            *(void *)&a1[v24] = v26;
            if (v27 < 0)
            {
              BOOL v22 = v23++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_53;
          }
        case 4u:
          if (v15 == 2)
          {
            if (!PBReaderPlaceMark())
            {
LABEL_67:
              PBReaderRecallMark();
              return 0;
            }
LABEL_56:
            while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
            {
              unsigned int v33 = a1[*v4];
              if (a1[*v4]) {
                break;
              }
              while (1)
              {
                uint64_t v34 = *v2;
                uint64_t v35 = *(void *)&a1[v34];
                unint64_t v36 = v35 + 1;
                if (v35 == -1 || v36 > *(void *)&a1[*v3]) {
                  break;
                }
                int v37 = *(char *)(*(void *)&a1[*v5] + v35);
                *(void *)&a1[v34] = v36;
                if (v37 < 0)
                {
                  BOOL v13 = v33++ >= 9;
                  if (!v13) {
                    continue;
                  }
                }
                goto LABEL_56;
              }
              a1[*v4] = 1;
            }
LABEL_52:
            PBReaderRecallMark();
          }
          else
          {
            if ((v8 & 7) != 0) {
              goto LABEL_67;
            }
            while (1)
            {
              uint64_t v28 = *v2;
              uint64_t v29 = *(void *)&a1[v28];
              unint64_t v30 = v29 + 1;
              if (v29 == -1 || v30 > *(void *)&a1[*v3]) {
                break;
              }
              int v31 = *(char *)(*(void *)&a1[*v5] + v29);
              *(void *)&a1[v28] = v30;
              if (v31 < 0)
              {
                unsigned int v32 = v15++;
                if (v32 <= 8) {
                  continue;
                }
              }
              goto LABEL_53;
            }
LABEL_48:
            a1[*v4] = 1;
          }
LABEL_53:
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_65;
          }
          break;
        case 5u:
          if (v15 == 2 && PBReaderPlaceMark() && GEOPDTimeRangeIsValid(a1)) {
            goto LABEL_52;
          }
          goto LABEL_67;
        default:
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_67;
          }
          goto LABEL_53;
      }
    }
  }
LABEL_65:
  BOOL v38 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v38;
}

void sub_189B34624(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSpatialEventLookupParametersIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 76));
  BOOL v2 = (*(unsigned char *)(a1 + 88) & 0x70) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 76));
  return v2;
}

void sub_189B3489C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B34DE4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSpatialEventLookupResponseReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 96));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 92);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 88)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  unsigned int v12 = (vaddv_s16((int16x4_t)(*(void *)&vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int8 *)(a1 + 100)), (uint16x4_t)0xFFFDFFFFFFFCFFFELL) & 0xFF01FF01FF01FF01))+ (*(unsigned char *)(a1 + 100) & 1)+ ((*(unsigned char *)(a1 + 100) & 0x40) != 0)+ ((*(unsigned char *)(a1 + 100) & 0x20) != 0));
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 > 3;
        char v17 = v16 & ~(_BYTE)v11 | v9;
        char v18 = v16 | v11;
        if (((v16 | v11) | v8)) {
          uint64_t v19 = 0;
        }
        else {
          uint64_t v19 = a3;
        }
        unint64_t v20 = (int *)MEMORY[0x1E4F940E8];
        int v75 = 1;
        int v21 = (int *)MEMORY[0x1E4F940C8];
        char v22 = v17;
        if (*(void *)(v3 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(v3 + *v6)) {
          goto LABEL_115;
        }
        char v73 = v17;
        char v74 = v18 | v17;
        char v77 = (v19 == 0) | v18;
        unsigned int v23 = (int *)MEMORY[0x1E4F940B8];
        char v76 = v16 | v11;
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v9;
LABEL_8:
        uint64_t v14 = v10;
        uint64_t v15 = v11;
LABEL_10:
        ++v7;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(unsigned char *)(v3 + *v21)) {
      goto LABEL_113;
    }
    char v24 = 0;
    unsigned int v25 = 0;
    unint64_t v26 = 0;
    while (1)
    {
      uint64_t v27 = *v20;
      uint64_t v28 = *(void *)(v3 + v27);
      unint64_t v29 = v28 + 1;
      if (v28 == -1 || v29 > *(void *)(v3 + *v6)) {
        break;
      }
      char v30 = *(unsigned char *)(*(void *)(v3 + *v23) + v28);
      *(void *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0) {
        goto LABEL_25;
      }
      v24 += 7;
      BOOL v31 = v25++ >= 9;
      if (v31)
      {
        unint64_t v26 = 0;
        int v32 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_25:
    int v32 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v26 = 0;
    }
LABEL_27:
    int v33 = v26 & 7;
    if (v32 || v33 == 4)
    {
LABEL_113:
      int v75 = 1;
      goto LABEL_114;
    }
    uint64_t v35 = v21;
    unint64_t v36 = v26 >> 3;
    BOOL v37 = v18;
    if ((v77 & 1) == 0)
    {
      BOOL v38 = v19;
      do
      {
        int v40 = *v38++;
        int v39 = v40;
        BOOL v37 = v40 != 0;
        if (v40) {
          BOOL v41 = v39 == v36;
        }
        else {
          BOOL v41 = 1;
        }
      }
      while (!v41);
    }
    switch((int)v36)
    {
      case 1:
        int v21 = v35;
        if (!v37) {
          goto LABEL_87;
        }
        if ((*(unsigned char *)(a1 + 100) & 0x10) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_134;
          }
          int v42 = objc_alloc_init(GEOPDMapsIdentifier);
          if (GEOPDMapsIdentifierReadAllFrom((uint64_t)v42, (void *)v3))
          {
            PBReaderRecallMark();
            uint64_t v43 = 64;
            goto LABEL_85;
          }
          goto LABEL_133;
        }
        char v57 = PBReaderSkipValueWithTag();
        unsigned int v23 = (int *)MEMORY[0x1E4F940B8];
        if ((v57 & 1) == 0) {
          goto LABEL_134;
        }
        char v58 = 8 * *(unsigned char *)(a1 + 100);
        goto LABEL_98;
      case 2:
        int v21 = v35;
        if (!v37) {
          goto LABEL_87;
        }
        if ((*(unsigned char *)(a1 + 100) & 4) != 0)
        {
          char v59 = PBReaderSkipValueWithTag();
          unsigned int v23 = (int *)MEMORY[0x1E4F940B8];
          if ((v59 & 1) == 0) {
            goto LABEL_134;
          }
          char v58 = 32 * *(unsigned char *)(a1 + 100);
          goto LABEL_98;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_134;
        }
        int v42 = objc_alloc_init(GEOLatLng);
        if (!GEOLatLngReadAllFrom((uint64_t)v42, (void *)v3)) {
          goto LABEL_133;
        }
        PBReaderRecallMark();
        uint64_t v43 = 48;
        goto LABEL_85;
      case 3:
        int v21 = v35;
        if (!v37 || (*(unsigned char *)(a1 + 100) & 2) != 0) {
          goto LABEL_87;
        }
        unsigned int v23 = (int *)MEMORY[0x1E4F940B8];
        if (v33 == 2)
        {
          if (!PBReaderPlaceMark()) {
            goto LABEL_134;
          }
          while (*(void *)(v3 + *v20) < *(void *)(v3 + *v6) && !*(unsigned char *)(v3 + *v21))
          {
            char v47 = 0;
            unsigned int v48 = 0;
            uint64_t v49 = 0;
            while (1)
            {
              uint64_t v50 = *v20;
              uint64_t v51 = *(void *)(v3 + v50);
              unint64_t v52 = v51 + 1;
              if (v51 == -1 || v52 > *(void *)(v3 + *v6)) {
                break;
              }
              char v53 = *(unsigned char *)(*(void *)(v3 + *v23) + v51);
              *(void *)(v3 + v50) = v52;
              v49 |= (unint64_t)(v53 & 0x7F) << v47;
              if (v53 < 0)
              {
                v47 += 7;
                BOOL v31 = v48++ >= 9;
                if (!v31) {
                  continue;
                }
              }
              goto LABEL_69;
            }
            *(unsigned char *)(v3 + *v21) = 1;
LABEL_69:
            PBRepeatedInt32Add();
          }
          PBReaderRecallMark();
        }
        else
        {
          char v62 = 0;
          unsigned int v63 = 0;
          uint64_t v64 = 0;
          while (1)
          {
            uint64_t v65 = *v20;
            uint64_t v66 = *(void *)(v3 + v65);
            unint64_t v67 = v66 + 1;
            if (v66 == -1 || v67 > *(void *)(v3 + *v6)) {
              break;
            }
            char v68 = *(unsigned char *)(*(void *)(v3 + *v23) + v66);
            *(void *)(v3 + v65) = v67;
            v64 |= (unint64_t)(v68 & 0x7F) << v62;
            if (v68 < 0)
            {
              v62 += 7;
              BOOL v31 = v63++ >= 9;
              if (!v31) {
                continue;
              }
            }
            goto LABEL_112;
          }
          *(unsigned char *)(v3 + *v21) = 1;
LABEL_112:
          PBRepeatedInt32Add();
        }
        goto LABEL_99;
      case 4:
        int v21 = v35;
        if (!v37 || (*(unsigned char *)(a1 + 100) & 8) != 0) {
          goto LABEL_87;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_134;
        }
        int v42 = objc_alloc_init(GEOPDDateTimeRange);
        BOOL AllFrom = GEOPDDateTimeRangeReadAllFrom((uint64_t)v42, (void *)v3);
        unsigned int v23 = (int *)MEMORY[0x1E4F940B8];
        if (!AllFrom) {
          goto LABEL_133;
        }
        PBReaderRecallMark();
        -[GEOPDSpatialEventLookupResponse _addNoFlagsEventDateTime:](a1, v42);

        goto LABEL_99;
      case 5:
        int v21 = v35;
        if (!v37) {
          goto LABEL_87;
        }
        if ((*(unsigned char *)(a1 + 100) & 0x40) != 0)
        {
          char v60 = PBReaderSkipValueWithTag();
          unsigned int v23 = (int *)MEMORY[0x1E4F940B8];
          if ((v60 & 1) == 0) {
            goto LABEL_134;
          }
          char v58 = 2 * *(unsigned char *)(a1 + 100);
          goto LABEL_98;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_134;
        }
        int v42 = objc_alloc_init(GEOTimezone);
        if (!GEOTimezoneReadAllFrom((uint64_t)v42, (void *)v3)) {
          goto LABEL_133;
        }
        PBReaderRecallMark();
        uint64_t v43 = 80;
        goto LABEL_85;
      case 6:
        int v21 = v35;
        if (!v37)
        {
LABEL_87:
          char v56 = PBReaderSkipValueWithTag();
          char v18 = v76;
LABEL_88:
          unsigned int v23 = (int *)MEMORY[0x1E4F940B8];
          if ((v56 & 1) == 0)
          {
            int v75 = 0;
            goto LABEL_114;
          }
LABEL_100:
          if (!(v74 & 1 | (v7 != 0)) || *(void *)(v3 + *v20) >= *(void *)(v3 + *v6)) {
            goto LABEL_113;
          }
          continue;
        }
        if ((*(unsigned char *)(a1 + 100) & 0x20) != 0)
        {
          char v61 = PBReaderSkipValueWithTag();
          unsigned int v23 = (int *)MEMORY[0x1E4F940B8];
          if ((v61 & 1) == 0) {
            goto LABEL_134;
          }
          char v58 = 4 * *(unsigned char *)(a1 + 100);
LABEL_98:
          v7 += v58 >> 7;
LABEL_99:
          char v18 = v76;
          goto LABEL_100;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_134;
        }
        int v42 = objc_alloc_init(GEOPDMapsIdentifier);
        if (GEOPDMapsIdentifierReadAllFrom((uint64_t)v42, (void *)v3))
        {
          PBReaderRecallMark();
          uint64_t v43 = 72;
LABEL_85:
          char v55 = *(void **)(a1 + v43);
          *(void *)(a1 + v43) = v42;

          --v7;
          char v18 = v76;
          unsigned int v23 = (int *)MEMORY[0x1E4F940B8];
          goto LABEL_100;
        }
LABEL_133:

LABEL_134:
        int v75 = 0;
        char v18 = v76;
LABEL_114:
        char v22 = v73;
LABEL_115:
        if (v22) {
LABEL_116:
        }
          *(unsigned char *)(a1 + 100) |= 1u;
        if (v18 & 1 | ((v75 & 1) == 0))
        {
          *(unsigned char *)(a1 + 100) |= 0x10u;
          *(unsigned char *)(a1 + 100) |= 4u;
          *(unsigned char *)(a1 + 100) |= 2u;
          *(unsigned char *)(a1 + 100) |= 8u;
          *(unsigned char *)(a1 + 100) |= 0x40u;
          *(unsigned char *)(a1 + 100) |= 0x20u;
        }
        else if (v19)
        {
          while (1)
          {
            int v69 = *v19++;
            char v70 = 16;
            switch(v69)
            {
              case 0:
                goto LABEL_127;
              case 1:
                goto LABEL_126;
              case 2:
                char v70 = 4;
                goto LABEL_126;
              case 3:
                char v70 = 2;
                goto LABEL_126;
              case 4:
                char v70 = 8;
                goto LABEL_126;
              case 5:
                char v70 = 64;
                goto LABEL_126;
              case 6:
                char v70 = 32;
LABEL_126:
                *(unsigned char *)(a1 + 100) |= v70;
                break;
              default:
                continue;
            }
          }
        }
LABEL_127:
        if (v75)
        {
          unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
          if ((v18 & 1) == 0) {
            return v3;
          }
LABEL_131:
          BOOL v71 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        else
        {
          unint64_t v3 = 0;
          if (v18) {
            goto LABEL_131;
          }
        }
        return v3;
      default:
        if (v73 & 1) == 0 || (*(unsigned char *)(a1 + 100))
        {
          char v56 = PBReaderSkipValueWithTag();
          char v18 = v76;
          int v21 = v35;
          goto LABEL_88;
        }
        if (!*(void *)(a1 + 16))
        {
          id v44 = objc_alloc_init(MEMORY[0x1E4F940B0]);
          int v45 = *(void **)(a1 + 16);
          *(void *)(a1 + 16) = v44;
        }
        int v46 = PBUnknownFieldAdd();
        char v18 = v76;
        int v21 = v35;
        unsigned int v23 = (int *)MEMORY[0x1E4F940B8];
        if (!v46)
        {
          int v75 = 0;
          goto LABEL_116;
        }
        goto LABEL_100;
    }
  }
}

void sub_189B35988(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B35AF8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B3609C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B36460(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B365CC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B373F4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDSpatialEventLookupResponseCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  [a1[8] readAll:1];
  [a1[6] readAll:1];
  long long v9 = 0u;
  long long v10 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  id v2 = a1[7];
  uint64_t v3 = [v2 countByEnumeratingWithState:&v7 objects:v11 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v8;
    while (1)
    {
      if (*(void *)v8 != v5) {
        objc_enumerationMutation(v2);
      }
      if (!--v4)
      {
        uint64_t v4 = [v2 countByEnumeratingWithState:&v7 objects:v11 count:16];
        if (!v4) {
          break;
        }
      }
    }
  }

  return objc_msgSend(a1[9], "readAll:", 1, v7);
}

unint64_t GEOPDSpatialEventLookupResponseReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 92))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDSpatialEventLookupResponseReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)long long v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 96));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 88) = [v8 position];
  *(_DWORD *)(a1 + 92) = [v8 length];
  if (a3) {
    long long v9 = (int *)&GEOPDSpatialEventLookupResponseReadAllFrom_recursiveTag;
  }
  else {
    long long v9 = (int *)&GEOPDSpatialEventLookupResponseReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDSpatialEventLookupResponseReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOPDSpatialEventLookupResponseCallReadAllRecursiveWithoutSynchronized((id *)a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 96));
  return Specified;
}

void sub_189B376AC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSpatialEventLookupResponseIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (!a1[*v4])
    {
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        BOOL v13 = v7++ >= 9;
        if (v13)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
        case 6u:
          if (v15 == 2 && PBReaderPlaceMark() && GEOPDMapsIdentifierIsValid(a1)) {
            goto LABEL_43;
          }
          goto LABEL_58;
        case 2u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOLatLngIsValid(a1)) {
            goto LABEL_58;
          }
          goto LABEL_43;
        case 3u:
          if (v15 == 2)
          {
            if (!PBReaderPlaceMark())
            {
LABEL_58:
              PBReaderRecallMark();
              return 0;
            }
LABEL_47:
            while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
            {
              unsigned int v22 = a1[*v4];
              if (a1[*v4]) {
                break;
              }
              while (1)
              {
                uint64_t v23 = *v2;
                uint64_t v24 = *(void *)&a1[v23];
                unint64_t v25 = v24 + 1;
                if (v24 == -1 || v25 > *(void *)&a1[*v3]) {
                  break;
                }
                int v26 = *(char *)(*(void *)&a1[*v5] + v24);
                *(void *)&a1[v23] = v25;
                if (v26 < 0)
                {
                  BOOL v13 = v22++ >= 9;
                  if (!v13) {
                    continue;
                  }
                }
                goto LABEL_47;
              }
              a1[*v4] = 1;
            }
LABEL_43:
            PBReaderRecallMark();
          }
          else
          {
            if ((v8 & 7) != 0) {
              goto LABEL_58;
            }
            while (1)
            {
              uint64_t v17 = *v2;
              uint64_t v18 = *(void *)&a1[v17];
              unint64_t v19 = v18 + 1;
              if (v18 == -1 || v19 > *(void *)&a1[*v3]) {
                break;
              }
              int v20 = *(char *)(*(void *)&a1[*v5] + v18);
              *(void *)&a1[v17] = v19;
              if (v20 < 0)
              {
                unsigned int v21 = v15++;
                if (v21 <= 8) {
                  continue;
                }
              }
              goto LABEL_44;
            }
            a1[*v4] = 1;
          }
LABEL_44:
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_57;
          }
          break;
        case 4u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDDateTimeRangeIsValid(a1)) {
            goto LABEL_58;
          }
          goto LABEL_43;
        case 5u:
          if (v15 == 2 && PBReaderPlaceMark() && GEOTimezoneIsValid(a1)) {
            goto LABEL_43;
          }
          goto LABEL_58;
        default:
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_58;
          }
          goto LABEL_44;
      }
    }
  }
LABEL_57:
  BOOL v27 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v27;
}

void sub_189B37CFC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B381FC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B386A4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSpatialLookupFilterReadAllFrom(uint64_t a1, void *a2)
{
  uint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      int v8 = v3[*v6];
      if (*(void *)&v3[*v4] >= *(void *)&v3[*v5]) {
        break;
      }
      if (v3[*v6])
      {
        int v8 = 1;
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      uint64_t v11 = 0;
      while (1)
      {
        uint64_t v12 = *v4;
        uint64_t v13 = *(void *)&v3[v12];
        unint64_t v14 = v13 + 1;
        if (v13 == -1 || v14 > *(void *)&v3[*v5]) {
          break;
        }
        char v15 = *(unsigned char *)(*(void *)&v3[*v7] + v13);
        *(void *)&v3[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0) {
          goto LABEL_13;
        }
        v9 += 7;
        if (v10++ >= 9)
        {
          char v17 = 0;
          int v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      int v8 = v3[*v6];
      if (v3[*v6]) {
        char v17 = 0;
      }
      else {
        char v17 = v11;
      }
LABEL_16:
      if (v8) {
        BOOL v18 = 1;
      }
      else {
        BOOL v18 = (v17 & 7) == 4;
      }
      if (v18) {
        break;
      }
      if (!*(void *)(a1 + 8))
      {
        id v19 = objc_alloc_init(MEMORY[0x1E4F940B0]);
        int v20 = *(void **)(a1 + 8);
        *(void *)(a1 + 8) = v19;
      }
      if ((PBUnknownFieldAdd() & 1) == 0) {
        goto LABEL_23;
      }
    }
    BOOL v21 = v8 == 0;
  }
  else
  {
LABEL_23:
    BOOL v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_189B38D84(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B3902C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSpatialLookupResultReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 68);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 64)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  uint64_t v12 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__flags;
  unsigned int v13 = ((*(unsigned __int8 *)(a1 + 76) >> 2) & 1)
      + (*(unsigned char *)(a1 + 76) & 1)
      + ((*(unsigned __int8 *)(a1 + 76) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 76) >> 1) & 1);
  while (2)
  {
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    uint64_t v16 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v13;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v15 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v17 = v13 > 1;
        char v18 = v17 & ~(_BYTE)v11 | v9;
        char v19 = v17 | v11;
        int v20 = (int *)MEMORY[0x1E4F940E8];
        if (((v17 | v11) | v8)) {
          BOOL v21 = 0;
        }
        else {
          BOOL v21 = a3;
        }
        int v22 = 1;
        if (*(void *)(v3 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(v3 + *v6)) {
          goto LABEL_97;
        }
        char v68 = v18;
        char v69 = v19 | v18;
        char v71 = (v21 == 0) | v19;
        uint64_t v23 = (int *)MEMORY[0x1E4F940C8];
        uint64_t v24 = (int *)MEMORY[0x1E4F940B8];
        char v70 = v17 | v11;
        break;
      default:
        ++v13;
LABEL_7:
        uint64_t v14 = v9;
LABEL_8:
        uint64_t v15 = v10;
        uint64_t v16 = v11;
LABEL_10:
        ++v7;
        uint64_t v9 = v14;
        uint64_t v10 = v15;
        uint64_t v11 = v16;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(unsigned char *)(v3 + *v23)) {
      goto LABEL_94;
    }
    char v25 = 0;
    unsigned int v26 = 0;
    unint64_t v27 = 0;
    while (1)
    {
      uint64_t v28 = *v20;
      uint64_t v29 = *(void *)(v3 + v28);
      unint64_t v30 = v29 + 1;
      if (v29 == -1 || v30 > *(void *)(v3 + *v6)) {
        break;
      }
      char v31 = *(unsigned char *)(*(void *)(v3 + *v24) + v29);
      *(void *)(v3 + v28) = v30;
      v27 |= (unint64_t)(v31 & 0x7F) << v25;
      if ((v31 & 0x80) == 0) {
        goto LABEL_25;
      }
      v25 += 7;
      BOOL v32 = v26++ >= 9;
      if (v32)
      {
        unint64_t v27 = 0;
        int v33 = *(unsigned __int8 *)(v3 + *v23);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v23) = 1;
LABEL_25:
    int v33 = *(unsigned __int8 *)(v3 + *v23);
    if (*(unsigned char *)(v3 + *v23)) {
      unint64_t v27 = 0;
    }
LABEL_27:
    int v34 = v27 & 7;
    if (v33 || v34 == 4)
    {
LABEL_94:
      int v22 = 1;
      goto LABEL_95;
    }
    unint64_t v36 = v27 >> 3;
    BOOL v37 = v19;
    if ((v71 & 1) == 0)
    {
      BOOL v38 = v21;
      do
      {
        int v40 = *v38++;
        int v39 = v40;
        BOOL v37 = v40 != 0;
        if (v40) {
          BOOL v41 = v39 == v36;
        }
        else {
          BOOL v41 = 1;
        }
      }
      while (!v41);
    }
    if (v36 == 3)
    {
      if (v37 && (*(unsigned char *)(a1 + 76) & 2) == 0)
      {
        if (v34 == 2)
        {
          if (!PBReaderPlaceMark()) {
            goto LABEL_114;
          }
          uint64_t v23 = (int *)MEMORY[0x1E4F940C8];
          while (*(void *)(v3 + *v20) < *(void *)(v3 + *v6))
          {
            if (*(unsigned char *)(v3 + *v23)) {
              break;
            }
            char v44 = 0;
            unsigned int v45 = 0;
            uint64_t v46 = 0;
            while (1)
            {
              uint64_t v47 = *v20;
              uint64_t v48 = *(void *)(v3 + v47);
              unint64_t v49 = v48 + 1;
              if (v48 == -1 || v49 > *(void *)(v3 + *v6)) {
                break;
              }
              char v50 = *(unsigned char *)(*(void *)(v3 + *v24) + v48);
              *(void *)(v3 + v47) = v49;
              v46 |= (unint64_t)(v50 & 0x7F) << v44;
              if (v50 < 0)
              {
                v44 += 7;
                BOOL v32 = v45++ >= 9;
                if (!v32) {
                  continue;
                }
              }
              goto LABEL_60;
            }
            *(unsigned char *)(v3 + *v23) = 1;
LABEL_60:
            PBRepeatedInt32Add();
          }
          PBReaderRecallMark();
        }
        else
        {
          char v57 = 0;
          unsigned int v58 = 0;
          uint64_t v59 = 0;
          uint64_t v23 = (int *)MEMORY[0x1E4F940C8];
          while (1)
          {
            uint64_t v60 = *v20;
            uint64_t v61 = *(void *)(v3 + v60);
            unint64_t v62 = v61 + 1;
            if (v61 == -1 || v62 > *(void *)(v3 + *v6)) {
              break;
            }
            char v63 = *(unsigned char *)(*(void *)(v3 + *v24) + v61);
            *(void *)(v3 + v60) = v62;
            v59 |= (unint64_t)(v63 & 0x7F) << v57;
            if (v63 < 0)
            {
              v57 += 7;
              BOOL v32 = v58++ >= 9;
              if (!v32) {
                continue;
              }
            }
            goto LABEL_90;
          }
          *(unsigned char *)(v3 + *v23) = 1;
LABEL_90:
          PBRepeatedInt32Add();
        }
        char v19 = v70;
        goto LABEL_92;
      }
LABEL_74:
      char v55 = PBReaderSkipValueWithTag();
      char v19 = v70;
      uint64_t v23 = (int *)MEMORY[0x1E4F940C8];
      if (v55) {
        goto LABEL_92;
      }
      int v22 = 0;
LABEL_95:
      uint64_t v12 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__flags;
      goto LABEL_96;
    }
    if (v36 == 2) {
      break;
    }
    if (v36 == 1)
    {
      if (!v37) {
        goto LABEL_74;
      }
      if ((*(unsigned char *)(a1 + 76) & 8) == 0)
      {
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_114;
        }
        int v42 = objc_alloc_init(GEOLatLng);
        if (!GEOLatLngReadAllFrom((uint64_t)v42, (void *)v3)) {
          goto LABEL_113;
        }
        PBReaderRecallMark();
        uint64_t v43 = 56;
LABEL_67:
        uint64_t v51 = *(void **)(a1 + v43);
        *(void *)(a1 + v43) = v42;

        --v7;
LABEL_81:
        char v19 = v70;
        uint64_t v23 = (int *)MEMORY[0x1E4F940C8];
        goto LABEL_92;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        goto LABEL_114;
      }
      char v56 = 16 * *(unsigned char *)(a1 + 76);
LABEL_80:
      v7 += v56 >> 7;
      goto LABEL_81;
    }
    if (v68 & 1) == 0 || (*(unsigned char *)(a1 + 76)) {
      goto LABEL_74;
    }
    if (!*(void *)(a1 + 16))
    {
      id v52 = objc_alloc_init(MEMORY[0x1E4F940B0]);
      char v53 = *(void **)(a1 + 16);
      *(void *)(a1 + 16) = v52;
    }
    int v54 = PBUnknownFieldAdd();
    char v19 = v70;
    uint64_t v23 = (int *)MEMORY[0x1E4F940C8];
    if (!v54)
    {
      int v22 = 0;
      uint64_t v12 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__flags;
      goto LABEL_98;
    }
LABEL_92:
    if (!(v69 & 1 | (v7 != 0)) || *(void *)(v3 + *v20) >= *(void *)(v3 + *v6)) {
      goto LABEL_94;
    }
  }
  if (!v37) {
    goto LABEL_74;
  }
  if ((*(unsigned char *)(a1 + 76) & 4) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0) {
      goto LABEL_114;
    }
    char v56 = 32 * *(unsigned char *)(a1 + 76);
    goto LABEL_80;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_114;
  }
  int v42 = objc_alloc_init(GEOPDBounds);
  if (GEOPDBoundsReadAllFrom((uint64_t)v42, (void *)v3, v10 & 1))
  {
    PBReaderRecallMark();
    uint64_t v43 = 48;
    goto LABEL_67;
  }
LABEL_113:

LABEL_114:
  int v22 = 0;
  uint64_t v12 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__flags;
  char v19 = v70;
LABEL_96:
  char v18 = v68;
LABEL_97:
  if (v18) {
LABEL_98:
  }
    *(unsigned char *)(a1 + v12[373]) |= 1u;
  if (v19 & 1 | ((v22 & 1) == 0))
  {
    *(unsigned char *)(a1 + v12[373]) |= 8u;
    *(unsigned char *)(a1 + v12[373]) |= 4u;
    *(unsigned char *)(a1 + v12[373]) |= 2u;
  }
  else if (v21)
  {
    while (1)
    {
      int v65 = *v21++;
      char v64 = 8;
      switch(v65)
      {
        case 0:
          goto LABEL_107;
        case 1:
          goto LABEL_105;
        case 2:
          char v64 = 4;
          goto LABEL_105;
        case 3:
          char v64 = 2;
LABEL_105:
          *(unsigned char *)(a1 + v12[373]) |= v64;
          break;
        default:
          continue;
      }
    }
  }
LABEL_107:
  if (v22)
  {
    unint64_t v3 = *(unsigned char *)(v3 + (int)*MEMORY[0x1E4F940C8]) == 0;
    if ((v19 & 1) == 0) {
      return v3;
    }
LABEL_111:
    uint64_t v66 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  else
  {
    unint64_t v3 = 0;
    if (v19) {
      goto LABEL_111;
    }
  }
  return v3;
}

void sub_189B398F4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B39A04(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B39F4C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSpatialLookupResultReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 68))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDSpatialLookupResultReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 72));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 64) = [v8 position];
  *(_DWORD *)(a1 + 68) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOPDSpatialLookupResultReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOPDSpatialLookupResultReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDSpatialLookupResultReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    [*(id *)(a1 + 56) readAll:1];
    -[GEOPDBounds readAll:](*(void *)(a1 + 48), 1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
  return Specified;
}

void sub_189B3A1E0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B3A3E0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B3A568(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B3A90C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSpatialPlaceLookupParametersReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 128));
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 124);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 120)];
  uint64_t v6 = 0;
  char v7 = 0;
  uint64_t v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  unsigned int v11 = (unsigned __int16)(vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int16 *)(a1 + 144)), (uint16x4_t)0xFFFBFFFAFFF9FFFCLL), (int8x8_t)0x1000100010001))+ (HIBYTE(*(_WORD *)(a1 + 144)) & 1)+ ((*(_WORD *)(a1 + 144) >> 9) & 1)+ ((*(_WORD *)(a1 + 144) >> 3) & 1));
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    switch(a3[v6])
    {
      case -4:
        ++v11;
        goto LABEL_8;
      case -3:
        char v7 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v13 = v9;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v15 = v11 > 3;
        char v16 = v15 & ~(_BYTE)v10 | v8;
        char v17 = v15 | v10;
        if (((v15 | v10) | v7)) {
          char v18 = 0;
        }
        else {
          char v18 = a3;
        }
        char v19 = (int *)MEMORY[0x1E4F940E8];
        int v20 = (int *)MEMORY[0x1E4F940E0];
        int v124 = 1;
        BOOL v21 = (int *)MEMORY[0x1E4F940C8];
        char v22 = v16;
        if (*(void *)(v3 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(v3 + (int)*MEMORY[0x1E4F940E0])) {
          goto LABEL_188;
        }
        char v122 = v16;
        char v125 = v17 | v16;
        char v126 = (v18 == 0) | v17;
        uint64_t v23 = (int *)MEMORY[0x1E4F940B8];
        char v123 = v17;
        break;
      default:
        ++v11;
LABEL_7:
        uint64_t v12 = v8;
LABEL_8:
        uint64_t v13 = v9;
        uint64_t v14 = v10;
LABEL_10:
        ++v6;
        uint64_t v8 = v12;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(unsigned char *)(v3 + *v21)) {
      goto LABEL_186;
    }
    char v24 = 0;
    unsigned int v25 = 0;
    unint64_t v26 = 0;
    while (1)
    {
      uint64_t v27 = *v19;
      uint64_t v28 = *(void *)(v3 + v27);
      unint64_t v29 = v28 + 1;
      if (v28 == -1 || v29 > *(void *)(v3 + *v20)) {
        break;
      }
      char v30 = *(unsigned char *)(*(void *)(v3 + *v23) + v28);
      *(void *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0) {
        goto LABEL_25;
      }
      v24 += 7;
      BOOL v31 = v25++ >= 9;
      if (v31)
      {
        unint64_t v26 = 0;
        int v32 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_25:
    int v32 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v26 = 0;
    }
LABEL_27:
    int v33 = v26 & 7;
    if (v32 || v33 == 4)
    {
LABEL_186:
      int v124 = 1;
      goto LABEL_187;
    }
    unint64_t v35 = v26 >> 3;
    BOOL v36 = v17;
    if ((v126 & 1) == 0)
    {
      BOOL v37 = v18;
      do
      {
        int v39 = *v37++;
        int v38 = v39;
        BOOL v36 = v39 != 0;
        if (v39) {
          BOOL v40 = v38 == v35;
        }
        else {
          BOOL v40 = 1;
        }
      }
      while (!v40);
    }
    switch((int)v35)
    {
      case 1:
        if (!v36) {
          goto LABEL_133;
        }
        if ((*(_WORD *)(a1 + 144) & 0x80) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_208;
          }
          BOOL v41 = objc_alloc_init(GEOLatLng);
          BOOL AllFrom = GEOLatLngReadAllFrom((uint64_t)v41, (void *)v3);
          BOOL v21 = (int *)MEMORY[0x1E4F940C8];
          if (AllFrom)
          {
            PBReaderRecallMark();
            uint64_t v43 = 96;
            goto LABEL_124;
          }
          goto LABEL_206;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_208;
        }
        __int16 v96 = *(_WORD *)(a1 + 144) << 8;
        goto LABEL_154;
      case 2:
        if ((v7 & 1) == 0) {
          goto LABEL_133;
        }
        char v47 = 0;
        unsigned int v48 = 0;
        uint64_t v49 = 0;
        *(_WORD *)(a1 + 144) |= 2u;
        BOOL v21 = (int *)MEMORY[0x1E4F940C8];
        int v20 = (int *)MEMORY[0x1E4F940E0];
        while (2)
        {
          uint64_t v50 = *v19;
          uint64_t v51 = *(void *)(v3 + v50);
          unint64_t v52 = v51 + 1;
          if (v51 == -1 || v52 > *(void *)(v3 + *v20))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v53 = *(unsigned char *)(*(void *)(v3 + *v23) + v51);
            *(void *)(v3 + v50) = v52;
            v49 |= (unint64_t)(v53 & 0x7F) << v47;
            if (v53 < 0)
            {
              v47 += 7;
              BOOL v31 = v48++ >= 9;
              if (v31)
              {
                LODWORD(v49) = 0;
                goto LABEL_138;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          LODWORD(v49) = 0;
        }
LABEL_138:
        uint64_t v95 = 136;
        goto LABEL_147;
      case 3:
        if ((v7 & 1) == 0) {
          goto LABEL_133;
        }
        char v54 = 0;
        unsigned int v55 = 0;
        uint64_t v49 = 0;
        *(_WORD *)(a1 + 144) |= 1u;
        BOOL v21 = (int *)MEMORY[0x1E4F940C8];
        int v20 = (int *)MEMORY[0x1E4F940E0];
        while (2)
        {
          uint64_t v56 = *v19;
          uint64_t v57 = *(void *)(v3 + v56);
          unint64_t v58 = v57 + 1;
          if (v57 == -1 || v58 > *(void *)(v3 + *v20))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v59 = *(unsigned char *)(*(void *)(v3 + *v23) + v57);
            *(void *)(v3 + v56) = v58;
            v49 |= (unint64_t)(v59 & 0x7F) << v54;
            if (v59 < 0)
            {
              v54 += 7;
              BOOL v31 = v55++ >= 9;
              if (v31)
              {
                LODWORD(v49) = 0;
                goto LABEL_142;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          LODWORD(v49) = 0;
        }
LABEL_142:
        uint64_t v95 = 132;
        goto LABEL_147;
      case 4:
        if (!v36 || (*(_WORD *)(a1 + 144) & 0x10) != 0) {
          goto LABEL_133;
        }
        if (v33 != 2)
        {
          char v97 = 0;
          unsigned int v98 = 0;
          uint64_t v99 = 0;
          BOOL v21 = (int *)MEMORY[0x1E4F940C8];
          int v20 = (int *)MEMORY[0x1E4F940E0];
          while (1)
          {
            uint64_t v100 = *v19;
            uint64_t v101 = *(void *)(v3 + v100);
            unint64_t v102 = v101 + 1;
            if (v101 == -1 || v102 > *(void *)(v3 + *v20)) {
              break;
            }
            char v103 = *(unsigned char *)(*(void *)(v3 + *v23) + v101);
            *(void *)(v3 + v100) = v102;
            v99 |= (unint64_t)(v103 & 0x7F) << v97;
            if (v103 < 0)
            {
              v97 += 7;
              BOOL v31 = v98++ >= 9;
              if (!v31) {
                continue;
              }
            }
            goto LABEL_181;
          }
          *(unsigned char *)(v3 + *v21) = 1;
LABEL_181:
          PBRepeatedInt32Add();
          goto LABEL_182;
        }
        if (!PBReaderPlaceMark()) {
          goto LABEL_208;
        }
        int v20 = (int *)MEMORY[0x1E4F940E0];
        BOOL v21 = (int *)MEMORY[0x1E4F940C8];
        if (*(void *)(v3 + *v19) < *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]))
        {
          do
          {
            if (*(unsigned char *)(v3 + *v21)) {
              break;
            }
            char v60 = 0;
            unsigned int v61 = 0;
            uint64_t v62 = 0;
            char v63 = (int *)MEMORY[0x1E4F940B8];
            while (1)
            {
              uint64_t v64 = *v19;
              uint64_t v65 = *(void *)(v3 + v64);
              unint64_t v66 = v65 + 1;
              if (v65 == -1 || v66 > *(void *)(v3 + *v20)) {
                break;
              }
              char v67 = *(unsigned char *)(*(void *)(v3 + *v63) + v65);
              *(void *)(v3 + v64) = v66;
              v62 |= (unint64_t)(v67 & 0x7F) << v60;
              if (v67 < 0)
              {
                v60 += 7;
                BOOL v31 = v61++ >= 9;
                if (!v31) {
                  continue;
                }
              }
              goto LABEL_80;
            }
            *(unsigned char *)(v3 + *v21) = 1;
LABEL_80:
            PBRepeatedInt32Add();
          }
          while (*(void *)(v3 + *v19) < *(void *)(v3 + *v20));
        }
        goto LABEL_113;
      case 5:
        if (!v36 || (*(_WORD *)(a1 + 144) & 0x40) != 0) {
          goto LABEL_133;
        }
        if (v33 != 2)
        {
          char v104 = 0;
          unsigned int v105 = 0;
          uint64_t v106 = 0;
          BOOL v21 = (int *)MEMORY[0x1E4F940C8];
          int v20 = (int *)MEMORY[0x1E4F940E0];
          while (1)
          {
            uint64_t v107 = *v19;
            uint64_t v108 = *(void *)(v3 + v107);
            unint64_t v109 = v108 + 1;
            if (v108 == -1 || v109 > *(void *)(v3 + *v20)) {
              goto LABEL_178;
            }
            char v110 = *(unsigned char *)(*(void *)(v3 + *v23) + v108);
            *(void *)(v3 + v107) = v109;
            v106 |= (unint64_t)(v110 & 0x7F) << v104;
            if (v110 < 0)
            {
              v104 += 7;
              BOOL v31 = v105++ >= 9;
              if (!v31) {
                continue;
              }
            }
            goto LABEL_179;
          }
        }
        if (!PBReaderPlaceMark()) {
          goto LABEL_208;
        }
        int v20 = (int *)MEMORY[0x1E4F940E0];
        BOOL v21 = (int *)MEMORY[0x1E4F940C8];
        if (*(void *)(v3 + *v19) < *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]))
        {
          do
          {
            if (*(unsigned char *)(v3 + *v21)) {
              break;
            }
            char v68 = 0;
            unsigned int v69 = 0;
            uint64_t v70 = 0;
            char v71 = (int *)MEMORY[0x1E4F940B8];
            while (1)
            {
              uint64_t v72 = *v19;
              uint64_t v73 = *(void *)(v3 + v72);
              unint64_t v74 = v73 + 1;
              if (v73 == -1 || v74 > *(void *)(v3 + *v20)) {
                break;
              }
              char v75 = *(unsigned char *)(*(void *)(v3 + *v71) + v73);
              *(void *)(v3 + v72) = v74;
              v70 |= (unint64_t)(v75 & 0x7F) << v68;
              if (v75 < 0)
              {
                v68 += 7;
                BOOL v31 = v69++ >= 9;
                if (!v31) {
                  continue;
                }
              }
              goto LABEL_96;
            }
            *(unsigned char *)(v3 + *v21) = 1;
LABEL_96:
            PBRepeatedUInt32Add();
          }
          while (*(void *)(v3 + *v19) < *(void *)(v3 + *v20));
        }
        goto LABEL_113;
      case 6:
        if (!v36 || (*(_WORD *)(a1 + 144) & 0x20) != 0) {
          goto LABEL_133;
        }
        if (v33 == 2)
        {
          if (!PBReaderPlaceMark()) {
            goto LABEL_208;
          }
          int v20 = (int *)MEMORY[0x1E4F940E0];
          BOOL v21 = (int *)MEMORY[0x1E4F940C8];
          if (*(void *)(v3 + *v19) < *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]))
          {
            do
            {
              if (*(unsigned char *)(v3 + *v21)) {
                break;
              }
              char v76 = 0;
              unsigned int v77 = 0;
              uint64_t v78 = 0;
              char v79 = (int *)MEMORY[0x1E4F940B8];
              while (1)
              {
                uint64_t v80 = *v19;
                uint64_t v81 = *(void *)(v3 + v80);
                unint64_t v82 = v81 + 1;
                if (v81 == -1 || v82 > *(void *)(v3 + *v20)) {
                  break;
                }
                char v83 = *(unsigned char *)(*(void *)(v3 + *v79) + v81);
                *(void *)(v3 + v80) = v82;
                v78 |= (unint64_t)(v83 & 0x7F) << v76;
                if (v83 < 0)
                {
                  v76 += 7;
                  BOOL v31 = v77++ >= 9;
                  if (!v31) {
                    continue;
                  }
                }
                goto LABEL_112;
              }
              *(unsigned char *)(v3 + *v21) = 1;
LABEL_112:
              PBRepeatedUInt32Add();
            }
            while (*(void *)(v3 + *v19) < *(void *)(v3 + *v20));
          }
LABEL_113:
          PBReaderRecallMark();
        }
        else
        {
          char v111 = 0;
          unsigned int v112 = 0;
          uint64_t v113 = 0;
          BOOL v21 = (int *)MEMORY[0x1E4F940C8];
          int v20 = (int *)MEMORY[0x1E4F940E0];
          while (1)
          {
            uint64_t v114 = *v19;
            uint64_t v115 = *(void *)(v3 + v114);
            unint64_t v116 = v115 + 1;
            if (v115 == -1 || v116 > *(void *)(v3 + *v20)) {
              break;
            }
            char v117 = *(unsigned char *)(*(void *)(v3 + *v23) + v115);
            *(void *)(v3 + v114) = v116;
            v113 |= (unint64_t)(v117 & 0x7F) << v111;
            if (v117 < 0)
            {
              v111 += 7;
              BOOL v31 = v112++ >= 9;
              if (!v31) {
                continue;
              }
            }
            goto LABEL_179;
          }
LABEL_178:
          *(unsigned char *)(v3 + *v21) = 1;
LABEL_179:
          PBRepeatedUInt32Add();
        }
LABEL_182:
        char v17 = v123;
        goto LABEL_183;
      case 7:
        if (!v36) {
          goto LABEL_133;
        }
        if ((*(_WORD *)(a1 + 144) & 0x100) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_208;
          }
          __int16 v96 = *(_WORD *)(a1 + 144) << 7;
LABEL_154:
          v6 += v96 >> 15;
LABEL_155:
          char v17 = v123;
          BOOL v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_156:
          int v20 = (int *)MEMORY[0x1E4F940E0];
LABEL_183:
          uint64_t v23 = (int *)MEMORY[0x1E4F940B8];
LABEL_184:
          if (!(v125 & 1 | (v6 != 0)) || *(void *)(v3 + *v19) >= *(void *)(v3 + *v20)) {
            goto LABEL_186;
          }
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_208;
        }
        long long v84 = objc_alloc_init(GEOMapRegion);
        if (GEOMapRegionReadAllFrom((uint64_t)v84, (void *)v3))
        {
          PBReaderRecallMark();
          long long v85 = *(void **)(a1 + 104);
          *(void *)(a1 + 104) = v84;

          --v6;
          goto LABEL_155;
        }

LABEL_208:
        int v124 = 0;
        char v17 = v123;
        BOOL v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_187:
        char v22 = v122;
LABEL_188:
        if (v22) {
LABEL_189:
        }
          *(_WORD *)(a1 + 144) |= 8u;
        if (v17 & 1 | ((v124 & 1) == 0))
        {
          *(_WORD *)(a1 + 144) |= 0x80u;
          *(_WORD *)(a1 + 144) |= 0x10u;
          *(_WORD *)(a1 + 144) |= 0x40u;
          *(_WORD *)(a1 + 144) |= 0x20u;
          *(_WORD *)(a1 + 144) |= 0x100u;
          *(_WORD *)(a1 + 144) |= 0x200u;
        }
        else if (v18)
        {
          while (1)
          {
            int v118 = *v18++;
            __int16 v119 = 128;
            switch(v118)
            {
              case 0:
                goto LABEL_200;
              case 1:
                goto LABEL_199;
              case 4:
                __int16 v119 = 16;
                goto LABEL_199;
              case 5:
                __int16 v119 = 64;
                goto LABEL_199;
              case 6:
                __int16 v119 = 32;
                goto LABEL_199;
              case 7:
                __int16 v119 = 256;
                goto LABEL_199;
              case 8:
                __int16 v119 = 512;
LABEL_199:
                *(_WORD *)(a1 + 144) |= v119;
                break;
              default:
                continue;
            }
          }
        }
LABEL_200:
        if (v124)
        {
          unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
          if ((v17 & 1) == 0) {
            return v3;
          }
LABEL_204:
          long long v120 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        else
        {
          unint64_t v3 = 0;
          if (v17) {
            goto LABEL_204;
          }
        }
        return v3;
      case 8:
        if (!v36) {
          goto LABEL_133;
        }
        if ((*(_WORD *)(a1 + 144) & 0x200) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_208;
          }
          __int16 v96 = *(_WORD *)(a1 + 144) << 6;
          goto LABEL_154;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_208;
        }
        BOOL v41 = objc_alloc_init(GEOPDPoiIconCategoryFilter);
        int v86 = GEOPDPoiIconCategoryFilterReadAllFrom((uint64_t)v41, (void *)v3, v9 & 1);
        BOOL v21 = (int *)MEMORY[0x1E4F940C8];
        if (!v86)
        {
LABEL_206:

          int v124 = 0;
          char v17 = v123;
          goto LABEL_187;
        }
        PBReaderRecallMark();
        uint64_t v43 = 112;
LABEL_124:
        long long v87 = *(void **)(a1 + v43);
        *(void *)(a1 + v43) = v41;

        --v6;
        char v17 = v123;
        goto LABEL_156;
      case 9:
        if ((v7 & 1) == 0) {
          goto LABEL_133;
        }
        char v88 = 0;
        unsigned int v89 = 0;
        uint64_t v49 = 0;
        *(_WORD *)(a1 + 144) |= 4u;
        BOOL v21 = (int *)MEMORY[0x1E4F940C8];
        int v20 = (int *)MEMORY[0x1E4F940E0];
        while (2)
        {
          uint64_t v90 = *v19;
          uint64_t v91 = *(void *)(v3 + v90);
          unint64_t v92 = v91 + 1;
          if (v91 == -1 || v92 > *(void *)(v3 + *v20))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v93 = *(unsigned char *)(*(void *)(v3 + *v23) + v91);
            *(void *)(v3 + v90) = v92;
            v49 |= (unint64_t)(v93 & 0x7F) << v88;
            if (v93 < 0)
            {
              v88 += 7;
              BOOL v31 = v89++ >= 9;
              if (v31)
              {
                LODWORD(v49) = 0;
                goto LABEL_146;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          LODWORD(v49) = 0;
        }
LABEL_146:
        uint64_t v95 = 140;
LABEL_147:
        *(_DWORD *)(a1 + v95) = v49;
        goto LABEL_184;
      default:
        if ((v122 & 1) == 0 || (*(_WORD *)(a1 + 144) & 8) != 0)
        {
LABEL_133:
          char v94 = PBReaderSkipValueWithTag();
          uint64_t v23 = (int *)MEMORY[0x1E4F940B8];
          char v17 = v123;
          BOOL v21 = (int *)MEMORY[0x1E4F940C8];
          int v20 = (int *)MEMORY[0x1E4F940E0];
          if ((v94 & 1) == 0)
          {
            int v124 = 0;
            goto LABEL_187;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v44 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            unsigned int v45 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v44;
          }
          int v46 = PBUnknownFieldAdd();
          char v17 = v123;
          BOOL v21 = (int *)MEMORY[0x1E4F940C8];
          int v20 = (int *)MEMORY[0x1E4F940E0];
          uint64_t v23 = (int *)MEMORY[0x1E4F940B8];
          if (!v46)
          {
            int v124 = 0;
            goto LABEL_189;
          }
        }
        goto LABEL_184;
    }
  }
}

void sub_189B3B97C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B3BAD4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B3C1E8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B3C2D4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B3CF24(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDSpatialPlaceLookupParametersCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  [*(id *)(a1 + 96) readAll:1];
  [*(id *)(a1 + 104) readAll:1];
  uint64_t v2 = *(void *)(a1 + 112);

  -[GEOPDPoiIconCategoryFilter readAll:](v2, 1);
}

unint64_t GEOPDSpatialPlaceLookupParametersReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 124))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDSpatialPlaceLookupParametersReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 128));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 120) = [v8 position];
  *(_DWORD *)(a1 + 124) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOPDSpatialPlaceLookupParametersReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOPDSpatialPlaceLookupParametersReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDSpatialPlaceLookupParametersReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOPDSpatialPlaceLookupParametersCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 128));
  return Specified;
}

void sub_189B3D130(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSpatialPlaceLookupParametersIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  uint64_t v2 = (int *)MEMORY[0x1E4F940E8];
  unint64_t v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (!a1[*v4])
    {
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        BOOL v13 = v7++ >= 9;
        if (v13)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 == 2 && PBReaderPlaceMark() && GEOLatLngIsValid(a1)) {
            goto LABEL_69;
          }
          goto LABEL_113;
        case 2u:
          if ((v8 & 7) != 0) {
            goto LABEL_113;
          }
          unsigned int v17 = 0;
          while (1)
          {
            uint64_t v18 = *v2;
            uint64_t v19 = *(void *)&a1[v18];
            unint64_t v20 = v19 + 1;
            if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
              goto LABEL_78;
            }
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if (v21 < 0)
            {
              BOOL v22 = v17++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_79;
          }
        case 3u:
          if ((v8 & 7) != 0) {
            goto LABEL_113;
          }
          unsigned int v23 = 0;
          while (1)
          {
            uint64_t v24 = *v2;
            uint64_t v25 = *(void *)&a1[v24];
            unint64_t v26 = v25 + 1;
            if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
              goto LABEL_78;
            }
            int v27 = *(char *)(*(void *)&a1[*v5] + v25);
            *(void *)&a1[v24] = v26;
            if (v27 < 0)
            {
              BOOL v22 = v23++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_79;
          }
        case 4u:
          if (v15 != 2)
          {
            if ((v8 & 7) != 0) {
              goto LABEL_113;
            }
            while (1)
            {
              uint64_t v28 = *v2;
              uint64_t v29 = *(void *)&a1[v28];
              unint64_t v30 = v29 + 1;
              if (v29 == -1 || v30 > *(void *)&a1[*v3]) {
                goto LABEL_78;
              }
              int v31 = *(char *)(*(void *)&a1[*v5] + v29);
              *(void *)&a1[v28] = v30;
              if (v31 < 0)
              {
                unsigned int v32 = v15++;
                if (v32 <= 8) {
                  continue;
                }
              }
              goto LABEL_79;
            }
          }
          if (!PBReaderPlaceMark()) {
            goto LABEL_113;
          }
LABEL_82:
          while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
          {
            unsigned int v48 = a1[*v4];
            if (a1[*v4]) {
              break;
            }
            while (1)
            {
              uint64_t v49 = *v2;
              uint64_t v50 = *(void *)&a1[v49];
              unint64_t v51 = v50 + 1;
              if (v50 == -1 || v51 > *(void *)&a1[*v3]) {
                break;
              }
              int v52 = *(char *)(*(void *)&a1[*v5] + v50);
              *(void *)&a1[v49] = v51;
              if (v52 < 0)
              {
                BOOL v13 = v48++ >= 9;
                if (!v13) {
                  continue;
                }
              }
              goto LABEL_82;
            }
            a1[*v4] = 1;
          }
          goto LABEL_69;
        case 5u:
          if (v15 != 2)
          {
            if ((v8 & 7) != 0) {
              goto LABEL_113;
            }
            while (1)
            {
              uint64_t v33 = *v2;
              uint64_t v34 = *(void *)&a1[v33];
              unint64_t v35 = v34 + 1;
              if (v34 == -1 || v35 > *(void *)&a1[*v3]) {
                goto LABEL_78;
              }
              int v36 = *(char *)(*(void *)&a1[*v5] + v34);
              *(void *)&a1[v33] = v35;
              if (v36 < 0)
              {
                unsigned int v37 = v15++;
                if (v37 <= 8) {
                  continue;
                }
              }
              goto LABEL_79;
            }
          }
          if (!PBReaderPlaceMark()) {
            goto LABEL_113;
          }
LABEL_92:
          while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
          {
            unsigned int v53 = a1[*v4];
            if (a1[*v4]) {
              break;
            }
            while (1)
            {
              uint64_t v54 = *v2;
              uint64_t v55 = *(void *)&a1[v54];
              unint64_t v56 = v55 + 1;
              if (v55 == -1 || v56 > *(void *)&a1[*v3]) {
                break;
              }
              int v57 = *(char *)(*(void *)&a1[*v5] + v55);
              *(void *)&a1[v54] = v56;
              if (v57 < 0)
              {
                BOOL v13 = v53++ >= 9;
                if (!v13) {
                  continue;
                }
              }
              goto LABEL_92;
            }
            a1[*v4] = 1;
          }
          goto LABEL_69;
        case 6u:
          if (v15 == 2)
          {
            if (!PBReaderPlaceMark())
            {
LABEL_113:
              PBReaderRecallMark();
              return 0;
            }
LABEL_102:
            while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
            {
              unsigned int v58 = a1[*v4];
              if (a1[*v4]) {
                break;
              }
              while (1)
              {
                uint64_t v59 = *v2;
                uint64_t v60 = *(void *)&a1[v59];
                unint64_t v61 = v60 + 1;
                if (v60 == -1 || v61 > *(void *)&a1[*v3]) {
                  break;
                }
                int v62 = *(char *)(*(void *)&a1[*v5] + v60);
                *(void *)&a1[v59] = v61;
                if (v62 < 0)
                {
                  BOOL v13 = v58++ >= 9;
                  if (!v13) {
                    continue;
                  }
                }
                goto LABEL_102;
              }
              a1[*v4] = 1;
            }
LABEL_69:
            PBReaderRecallMark();
          }
          else
          {
            if ((v8 & 7) != 0) {
              goto LABEL_113;
            }
            while (1)
            {
              uint64_t v38 = *v2;
              uint64_t v39 = *(void *)&a1[v38];
              unint64_t v40 = v39 + 1;
              if (v39 == -1 || v40 > *(void *)&a1[*v3]) {
                break;
              }
              int v41 = *(char *)(*(void *)&a1[*v5] + v39);
              *(void *)&a1[v38] = v40;
              if (v41 < 0)
              {
                unsigned int v42 = v15++;
                if (v42 <= 8) {
                  continue;
                }
              }
              goto LABEL_79;
            }
LABEL_78:
            a1[*v4] = 1;
          }
LABEL_79:
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_111;
          }
          break;
        case 7u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOMapRegionIsValid(a1)) {
            goto LABEL_113;
          }
          goto LABEL_69;
        case 8u:
          if (v15 == 2 && PBReaderPlaceMark() && GEOPDAddressResultSubTypeFilterIsValid(a1)) {
            goto LABEL_69;
          }
          goto LABEL_113;
        case 9u:
          if ((v8 & 7) != 0) {
            goto LABEL_113;
          }
          unsigned int v43 = 0;
          while (1)
          {
            uint64_t v44 = *v2;
            uint64_t v45 = *(void *)&a1[v44];
            unint64_t v46 = v45 + 1;
            if (v45 == -1 || v46 > *(void *)&a1[*v3]) {
              goto LABEL_78;
            }
            int v47 = *(char *)(*(void *)&a1[*v5] + v45);
            *(void *)&a1[v44] = v46;
            if (v47 < 0)
            {
              BOOL v22 = v43++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_79;
          }
        default:
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_113;
          }
          goto LABEL_79;
      }
    }
  }
LABEL_111:
  BOOL v63 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v63;
}

void sub_189B3DA44(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B3DD18(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B3E374(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSpatialPlaceLookupResponseReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 80));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 76);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 72)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  unsigned int v12 = (vaddv_s16((int16x4_t)(*(void *)&vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int8 *)(a1 + 84)), (uint16x4_t)0xFFFEFFFFFFFCFFFDLL) & 0xFF01FF01FF01FF01))+ (*(unsigned char *)(a1 + 84) & 1));
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 > 2;
        char v17 = v16 & ~(_BYTE)v11 | v9;
        char v18 = v16 | v11;
        uint64_t v19 = (int *)MEMORY[0x1E4F940E8];
        if (((v16 | v11) | v8)) {
          unint64_t v20 = 0;
        }
        else {
          unint64_t v20 = a3;
        }
        int v21 = 1;
        if (*(void *)(v3 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(v3 + *v6)) {
          goto LABEL_102;
        }
        char v67 = v17;
        char v68 = v18 | v17;
        char v70 = (v20 == 0) | v18;
        BOOL v22 = (int *)MEMORY[0x1E4F940C8];
        unsigned int v23 = (int *)MEMORY[0x1E4F940B8];
        char v69 = v16 | v11;
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v9;
LABEL_8:
        uint64_t v14 = v10;
        uint64_t v15 = v11;
LABEL_10:
        ++v7;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(unsigned char *)(v3 + *v22)) {
      goto LABEL_100;
    }
    char v24 = 0;
    unsigned int v25 = 0;
    unint64_t v26 = 0;
    while (1)
    {
      uint64_t v27 = *v19;
      uint64_t v28 = *(void *)(v3 + v27);
      unint64_t v29 = v28 + 1;
      if (v28 == -1 || v29 > *(void *)(v3 + *v6)) {
        break;
      }
      char v30 = *(unsigned char *)(*(void *)(v3 + *v23) + v28);
      *(void *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0) {
        goto LABEL_25;
      }
      v24 += 7;
      BOOL v31 = v25++ >= 9;
      if (v31)
      {
        unint64_t v26 = 0;
        int v32 = *(unsigned __int8 *)(v3 + *v22);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v22) = 1;
LABEL_25:
    int v32 = *(unsigned __int8 *)(v3 + *v22);
    if (*(unsigned char *)(v3 + *v22)) {
      unint64_t v26 = 0;
    }
LABEL_27:
    int v33 = v26 & 7;
    if (v32 || v33 == 4)
    {
LABEL_100:
      int v21 = 1;
      goto LABEL_101;
    }
    unint64_t v35 = v26 >> 3;
    BOOL v36 = v18;
    if ((v70 & 1) == 0)
    {
      unsigned int v37 = v20;
      do
      {
        int v39 = *v37++;
        int v38 = v39;
        BOOL v36 = v39 != 0;
        if (v39) {
          BOOL v40 = v38 == v35;
        }
        else {
          BOOL v40 = 1;
        }
      }
      while (!v40);
    }
    switch((int)v35)
    {
      case 1:
        if (!v36) {
          goto LABEL_77;
        }
        if ((*(unsigned char *)(a1 + 84) & 0x10) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_119;
          }
          int v41 = objc_alloc_init(GEOPDMapsIdentifier);
          if (GEOPDMapsIdentifierReadAllFrom((uint64_t)v41, (void *)v3))
          {
            PBReaderRecallMark();
            uint64_t v42 = 64;
            goto LABEL_76;
          }
          goto LABEL_118;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_119;
        }
        char v55 = 8 * *(unsigned char *)(a1 + 84);
        goto LABEL_85;
      case 2:
        if (!v36) {
          goto LABEL_77;
        }
        if ((*(unsigned char *)(a1 + 84) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_119;
          }
          char v55 = 16 * *(unsigned char *)(a1 + 84);
          goto LABEL_85;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_119;
        }
        int v41 = objc_alloc_init(GEOLatLng);
        if (!GEOLatLngReadAllFrom((uint64_t)v41, (void *)v3)) {
          goto LABEL_118;
        }
        PBReaderRecallMark();
        uint64_t v42 = 56;
        goto LABEL_76;
      case 3:
        if (!v36 || (*(unsigned char *)(a1 + 84) & 2) != 0) {
          goto LABEL_77;
        }
        if (v33 == 2)
        {
          if (!PBReaderPlaceMark()) {
            goto LABEL_119;
          }
          BOOL v22 = (int *)MEMORY[0x1E4F940C8];
          while (*(void *)(v3 + *v19) < *(void *)(v3 + *v6))
          {
            if (*(unsigned char *)(v3 + *v22)) {
              break;
            }
            char v46 = 0;
            unsigned int v47 = 0;
            uint64_t v48 = 0;
            while (1)
            {
              uint64_t v49 = *v19;
              uint64_t v50 = *(void *)(v3 + v49);
              unint64_t v51 = v50 + 1;
              if (v50 == -1 || v51 > *(void *)(v3 + *v6)) {
                break;
              }
              char v52 = *(unsigned char *)(*(void *)(v3 + *v23) + v50);
              *(void *)(v3 + v49) = v51;
              v48 |= (unint64_t)(v52 & 0x7F) << v46;
              if (v52 < 0)
              {
                v46 += 7;
                BOOL v31 = v47++ >= 9;
                if (!v31) {
                  continue;
                }
              }
              goto LABEL_69;
            }
            *(unsigned char *)(v3 + *v22) = 1;
LABEL_69:
            PBRepeatedInt32Add();
          }
          PBReaderRecallMark();
        }
        else
        {
          char v56 = 0;
          unsigned int v57 = 0;
          uint64_t v58 = 0;
          BOOL v22 = (int *)MEMORY[0x1E4F940C8];
          while (1)
          {
            uint64_t v59 = *v19;
            uint64_t v60 = *(void *)(v3 + v59);
            unint64_t v61 = v60 + 1;
            if (v60 == -1 || v61 > *(void *)(v3 + *v6)) {
              break;
            }
            char v62 = *(unsigned char *)(*(void *)(v3 + *v23) + v60);
            *(void *)(v3 + v59) = v61;
            v58 |= (unint64_t)(v62 & 0x7F) << v56;
            if (v62 < 0)
            {
              v56 += 7;
              BOOL v31 = v57++ >= 9;
              if (!v31) {
                continue;
              }
            }
            goto LABEL_98;
          }
          *(unsigned char *)(v3 + *v22) = 1;
LABEL_98:
          PBRepeatedInt32Add();
        }
        char v18 = v69;
        goto LABEL_87;
      case 4:
        if (!v36) {
          goto LABEL_77;
        }
        if ((*(unsigned char *)(a1 + 84) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_119;
          }
          char v55 = 32 * *(unsigned char *)(a1 + 84);
LABEL_85:
          v7 += v55 >> 7;
LABEL_86:
          char v18 = v69;
          BOOL v22 = (int *)MEMORY[0x1E4F940C8];
LABEL_87:
          if (!(v68 & 1 | (v7 != 0)) || *(void *)(v3 + *v19) >= *(void *)(v3 + *v6)) {
            goto LABEL_100;
          }
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_119;
        }
        int v41 = objc_alloc_init(GEOPDBounds);
        if (GEOPDBoundsReadAllFrom((uint64_t)v41, (void *)v3, v10 & 1))
        {
          PBReaderRecallMark();
          uint64_t v42 = 48;
LABEL_76:
          unsigned int v53 = *(void **)(a1 + v42);
          *(void *)(a1 + v42) = v41;

          --v7;
          goto LABEL_86;
        }
LABEL_118:

LABEL_119:
        int v21 = 0;
        char v18 = v69;
LABEL_101:
        char v17 = v67;
LABEL_102:
        if (v17) {
LABEL_103:
        }
          *(unsigned char *)(a1 + 84) |= 1u;
        if (v18 & 1 | ((v21 & 1) == 0))
        {
          *(unsigned char *)(a1 + 84) |= 0x10u;
          *(unsigned char *)(a1 + 84) |= 8u;
          *(unsigned char *)(a1 + 84) |= 2u;
          *(unsigned char *)(a1 + 84) |= 4u;
        }
        else if (v20)
        {
          while (1)
          {
            int v63 = *v20++;
            char v64 = 16;
            switch(v63)
            {
              case 0:
                goto LABEL_112;
              case 1:
                goto LABEL_111;
              case 2:
                char v64 = 8;
                goto LABEL_111;
              case 3:
                char v64 = 2;
                goto LABEL_111;
              case 4:
                char v64 = 4;
LABEL_111:
                *(unsigned char *)(a1 + 84) |= v64;
                break;
              default:
                continue;
            }
          }
        }
LABEL_112:
        if (v21)
        {
          unint64_t v3 = *(unsigned char *)(v3 + (int)*MEMORY[0x1E4F940C8]) == 0;
          if ((v18 & 1) == 0) {
            return v3;
          }
LABEL_116:
          uint64_t v65 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        else
        {
          unint64_t v3 = 0;
          if (v18) {
            goto LABEL_116;
          }
        }
        return v3;
      default:
        if (v67 & 1) == 0 || (*(unsigned char *)(a1 + 84))
        {
LABEL_77:
          char v54 = PBReaderSkipValueWithTag();
          char v18 = v69;
          BOOL v22 = (int *)MEMORY[0x1E4F940C8];
          if ((v54 & 1) == 0)
          {
            int v21 = 0;
            goto LABEL_101;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v43 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            uint64_t v44 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v43;
          }
          int v45 = PBUnknownFieldAdd();
          char v18 = v69;
          BOOL v22 = (int *)MEMORY[0x1E4F940C8];
          if (!v45)
          {
            int v21 = 0;
            goto LABEL_103;
          }
        }
        goto LABEL_87;
    }
  }
}

void sub_189B3ED74(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B3EEE4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B3F5A0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B400B8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDSpatialPlaceLookupResponseCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  [*(id *)(a1 + 64) readAll:1];
  [*(id *)(a1 + 56) readAll:1];
  uint64_t v2 = *(void *)(a1 + 48);

  -[GEOPDBounds readAll:](v2, 1);
}

unint64_t GEOPDSpatialPlaceLookupResponseReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 76))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDSpatialPlaceLookupResponseReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 80));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 72) = [v8 position];
  *(_DWORD *)(a1 + 76) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOPDSpatialPlaceLookupResponseReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOPDSpatialPlaceLookupResponseReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDSpatialPlaceLookupResponseReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOPDSpatialPlaceLookupResponseCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 80));
  return Specified;
}

void sub_189B402B8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSpatialPlaceLookupResponseIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  uint64_t v2 = (int *)MEMORY[0x1E4F940E8];
  unint64_t v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (!a1[*v4])
    {
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        BOOL v13 = v7++ >= 9;
        if (v13)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 == 2 && PBReaderPlaceMark() && GEOPDMapsIdentifierIsValid(a1)) {
            goto LABEL_39;
          }
          goto LABEL_54;
        case 2u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOLatLngIsValid(a1)) {
            goto LABEL_54;
          }
          goto LABEL_39;
        case 3u:
          if (v15 == 2)
          {
            if (!PBReaderPlaceMark())
            {
LABEL_54:
              PBReaderRecallMark();
              return 0;
            }
LABEL_43:
            while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
            {
              unsigned int v22 = a1[*v4];
              if (a1[*v4]) {
                break;
              }
              while (1)
              {
                uint64_t v23 = *v2;
                uint64_t v24 = *(void *)&a1[v23];
                unint64_t v25 = v24 + 1;
                if (v24 == -1 || v25 > *(void *)&a1[*v3]) {
                  break;
                }
                int v26 = *(char *)(*(void *)&a1[*v5] + v24);
                *(void *)&a1[v23] = v25;
                if (v26 < 0)
                {
                  BOOL v13 = v22++ >= 9;
                  if (!v13) {
                    continue;
                  }
                }
                goto LABEL_43;
              }
              a1[*v4] = 1;
            }
LABEL_39:
            PBReaderRecallMark();
          }
          else
          {
            if ((v8 & 7) != 0) {
              goto LABEL_54;
            }
            while (1)
            {
              uint64_t v17 = *v2;
              uint64_t v18 = *(void *)&a1[v17];
              unint64_t v19 = v18 + 1;
              if (v18 == -1 || v19 > *(void *)&a1[*v3]) {
                break;
              }
              int v20 = *(char *)(*(void *)&a1[*v5] + v18);
              *(void *)&a1[v17] = v19;
              if (v20 < 0)
              {
                unsigned int v21 = v15++;
                if (v21 <= 8) {
                  continue;
                }
              }
              goto LABEL_40;
            }
            a1[*v4] = 1;
          }
LABEL_40:
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_53;
          }
          break;
        case 4u:
          if (v15 == 2 && PBReaderPlaceMark() && GEOPDBoundsIsValid(a1)) {
            goto LABEL_39;
          }
          goto LABEL_54;
        default:
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_54;
          }
          goto LABEL_40;
      }
    }
  }
LABEL_53:
  BOOL v27 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v27;
}

void sub_189B40820(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B40B90(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B41144(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDStopInfoReadAllFrom(uint64_t a1, void *a2)
{
  unint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        unint64_t v18 = v10 >> 3;
        if ((v10 >> 3) == 4)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_54;
          }
          int v26 = objc_alloc_init(GEOTimezone);
          if (!GEOTimezoneReadAllFrom((uint64_t)v26, v3))
          {

            goto LABEL_54;
          }
          PBReaderRecallMark();
          BOOL v27 = *(void **)(a1 + 24);
          *(void *)(a1 + 24) = v26;
        }
        else if (v18 == 3)
        {
          char v28 = 0;
          unsigned int v29 = 0;
          uint64_t v30 = 0;
          *(unsigned char *)(a1 + 36) |= 2u;
          while (1)
          {
            uint64_t v31 = *v4;
            uint64_t v32 = *(void *)&v3[v31];
            unint64_t v33 = v32 + 1;
            if (v32 == -1 || v33 > *(void *)&v3[*v5]) {
              break;
            }
            char v34 = *(unsigned char *)(*(void *)&v3[*v7] + v32);
            *(void *)&v3[v31] = v33;
            v30 |= (unint64_t)(v34 & 0x7F) << v28;
            if ((v34 & 0x80) == 0) {
              goto LABEL_48;
            }
            v28 += 7;
            BOOL v15 = v29++ >= 9;
            if (v15)
            {
              LODWORD(v30) = 0;
              goto LABEL_50;
            }
          }
          v3[*v6] = 1;
LABEL_48:
          if (v3[*v6]) {
            LODWORD(v30) = 0;
          }
LABEL_50:
          *(_DWORD *)(a1 + 32) = v30;
        }
        else if (v18 == 1)
        {
          char v19 = 0;
          unsigned int v20 = 0;
          uint64_t v21 = 0;
          *(unsigned char *)(a1 + 36) |= 1u;
          while (1)
          {
            uint64_t v22 = *v4;
            uint64_t v23 = *(void *)&v3[v22];
            unint64_t v24 = v23 + 1;
            if (v23 == -1 || v24 > *(void *)&v3[*v5]) {
              break;
            }
            char v25 = *(unsigned char *)(*(void *)&v3[*v7] + v23);
            *(void *)&v3[v22] = v24;
            v21 |= (unint64_t)(v25 & 0x7F) << v19;
            if ((v25 & 0x80) == 0) {
              goto LABEL_44;
            }
            v19 += 7;
            BOOL v15 = v20++ >= 9;
            if (v15)
            {
              uint64_t v21 = 0;
              goto LABEL_46;
            }
          }
          v3[*v6] = 1;
LABEL_44:
          if (v3[*v6]) {
            uint64_t v21 = 0;
          }
LABEL_46:
          *(void *)(a1 + 16) = v21;
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v35 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            BOOL v36 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v35;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_54;
          }
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v37 = v3[*v6] == 0;
  }
  else
  {
LABEL_54:
    BOOL v37 = 0;
  }
  objc_sync_exit(v3);

  return v37;
}

void sub_189B41A30(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDStorefrontFacesReadAllFrom(uint64_t a1, void *a2, int a3)
{
  uint64_t v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    char v6 = (int *)MEMORY[0x1E4F940E8];
    unsigned int v7 = (int *)MEMORY[0x1E4F940E0];
    char v8 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v5[*MEMORY[0x1E4F940E8]] < *(void *)&v5[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v9 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v5[*v8]) {
          break;
        }
        char v10 = 0;
        unsigned int v11 = 0;
        unint64_t v12 = 0;
        while (1)
        {
          uint64_t v13 = *v6;
          uint64_t v14 = *(void *)&v5[v13];
          unint64_t v15 = v14 + 1;
          if (v14 == -1 || v15 > *(void *)&v5[*v7]) {
            break;
          }
          char v16 = *(unsigned char *)(*(void *)&v5[*v9] + v14);
          *(void *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0) {
            goto LABEL_13;
          }
          v10 += 7;
          if (v11++ >= 9)
          {
            unint64_t v12 = 0;
            int v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        int v18 = v5[*v8];
        if (v5[*v8]) {
          unint64_t v12 = 0;
        }
LABEL_15:
        if (v18 || (v12 & 7) == 4) {
          break;
        }
        if ((v12 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_29;
          }
          unsigned int v20 = objc_alloc_init(GEOPDStorefrontFace);
          if (!GEOPDStorefrontFaceReadAllFrom((uint64_t)v20, v5, a3))
          {

            goto LABEL_29;
          }
          PBReaderRecallMark();
          -[GEOPDStorefrontFaces addFace:](a1, v20);
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v21 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            uint64_t v22 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v21;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_29;
          }
        }
      }
      while (*(void *)&v5[*v6] < *(void *)&v5[*v7]);
    }
    BOOL v23 = v5[*v8] == 0;
  }
  else
  {
LABEL_29:
    BOOL v23 = 0;
  }
  objc_sync_exit(v5);

  return v23;
}

void sub_189B4245C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDStyleAttributesFilterReadAllFrom(uint64_t a1, void *a2)
{
  unint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      int v8 = v3[*v6];
      if (*(void *)&v3[*v4] >= *(void *)&v3[*v5]) {
        break;
      }
      if (v3[*v6])
      {
        int v8 = 1;
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      uint64_t v11 = 0;
      while (1)
      {
        uint64_t v12 = *v4;
        uint64_t v13 = *(void *)&v3[v12];
        unint64_t v14 = v13 + 1;
        if (v13 == -1 || v14 > *(void *)&v3[*v5]) {
          break;
        }
        char v15 = *(unsigned char *)(*(void *)&v3[*v7] + v13);
        *(void *)&v3[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0) {
          goto LABEL_13;
        }
        v9 += 7;
        if (v10++ >= 9)
        {
          char v17 = 0;
          int v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      int v8 = v3[*v6];
      if (v3[*v6]) {
        char v17 = 0;
      }
      else {
        char v17 = v11;
      }
LABEL_16:
      if (v8) {
        BOOL v18 = 1;
      }
      else {
        BOOL v18 = (v17 & 7) == 4;
      }
      if (v18) {
        break;
      }
      if (!*(void *)(a1 + 8))
      {
        id v19 = objc_alloc_init(MEMORY[0x1E4F940B0]);
        unsigned int v20 = *(void **)(a1 + 8);
        *(void *)(a1 + 8) = v19;
      }
      if ((PBUnknownFieldAdd() & 1) == 0) {
        goto LABEL_23;
      }
    }
    BOOL v21 = v8 == 0;
  }
  else
  {
LABEL_23:
    BOOL v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_189B42C38(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDTemplateDataReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 88));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 84);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 80)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  unsigned int v12 = ((*(unsigned __int16 *)(a1 + 96) >> 1) & 1)
      + (unsigned __int16)(vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int16 *)(a1 + 96)), (uint16x4_t)0xFFFBFFFAFFFDFFF8), (int8x8_t)0x1000100010001))+ ((*(_WORD *)(a1 + 96) >> 4) & 1)+ ((*(_WORD *)(a1 + 96) >> 2) & 1)+ ((*(_WORD *)(a1 + 96) >> 7) & 1));
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 > 4;
        char v17 = v16 & ~(_BYTE)v11 | v9;
        unsigned __int8 v18 = v16 | v11;
        char v60 = v17;
        char v61 = v18 | v17;
        if ((v18 | v8)) {
          id v19 = 0;
        }
        else {
          id v19 = a3;
        }
        char v62 = (v19 == 0) | v18;
        BOOL v63 = v18;
        unsigned int v20 = (int *)MEMORY[0x1E4F940E8];
        BOOL v21 = (int *)MEMORY[0x1E4F940C8];
        uint64_t v22 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v9;
LABEL_8:
        uint64_t v14 = v10;
        uint64_t v15 = v11;
LABEL_10:
        ++v7;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v21)) {
      goto LABEL_110;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      BOOL v30 = v24++ >= 9;
      if (v30)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_25:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_110:
      int v58 = 1;
      goto LABEL_111;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v63;
    if ((v62 & 1) == 0)
    {
      id v35 = v19;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    switch((int)v33)
    {
      case 1:
        if (!v34) {
          goto LABEL_89;
        }
        if ((*(_WORD *)(a1 + 96) & 8) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_132;
          }
          int v39 = objc_alloc_init(GEOPDMapsIdentifier);
          if (GEOPDMapsIdentifierReadAllFrom((uint64_t)v39, (void *)v3))
          {
            PBReaderRecallMark();
            uint64_t v40 = 32;
            goto LABEL_88;
          }
          goto LABEL_131;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_132;
        }
        __int16 v53 = *(_WORD *)(a1 + 96) << 12;
        goto LABEL_107;
      case 2:
        if ((v8 & 1) == 0) {
          goto LABEL_89;
        }
        char v44 = 0;
        unsigned int v45 = 0;
        uint64_t v46 = 0;
        *(_WORD *)(a1 + 96) |= 1u;
        while (2)
        {
          uint64_t v47 = *v20;
          uint64_t v48 = *(void *)(v3 + v47);
          unint64_t v49 = v48 + 1;
          if (v48 == -1 || v49 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v50 = *(unsigned char *)(*(void *)(v3 + *v22) + v48);
            *(void *)(v3 + v47) = v49;
            v46 |= (unint64_t)(v50 & 0x7F) << v44;
            if (v50 < 0)
            {
              v44 += 7;
              BOOL v30 = v45++ >= 9;
              if (v30)
              {
                uint64_t v46 = 0;
                goto LABEL_94;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          uint64_t v46 = 0;
        }
LABEL_94:
        *(unsigned char *)(a1 + 92) = v46 != 0;
        goto LABEL_109;
      case 3:
        if (!v34 || (*(_WORD *)(a1 + 96) & 0x100) != 0) {
          goto LABEL_89;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_132;
        }
        int v39 = objc_alloc_init(GEOLocalizedString);
        if (!GEOLocalizedStringReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1)) {
          goto LABEL_131;
        }
        PBReaderRecallMark();
        -[GEOPDTemplateData _addNoFlagsTitle:](a1, v39);

        goto LABEL_108;
      case 4:
        if (!v34) {
          goto LABEL_89;
        }
        if ((*(_WORD *)(a1 + 96) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_132;
          }
          __int16 v53 = *(_WORD *)(a1 + 96) << 9;
          goto LABEL_107;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_132;
        }
        int v39 = objc_alloc_init(GEOPDDataItem);
        if (!GEOPDDataItemReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1)) {
          goto LABEL_131;
        }
        PBReaderRecallMark();
        uint64_t v40 = 56;
        goto LABEL_88;
      case 5:
        if (!v34) {
          goto LABEL_89;
        }
        if ((*(_WORD *)(a1 + 96) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_132;
          }
          __int16 v53 = *(_WORD *)(a1 + 96) << 10;
          goto LABEL_107;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_132;
        }
        int v39 = objc_alloc_init(GEOStyleAttributes);
        if (!GEOStyleAttributesReadAllFrom((uint64_t)v39, (void *)v3)) {
          goto LABEL_131;
        }
        PBReaderRecallMark();
        uint64_t v40 = 48;
        goto LABEL_88;
      case 6:
        if (!v34) {
          goto LABEL_89;
        }
        if ((*(_WORD *)(a1 + 96) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_132;
          }
          __int16 v53 = *(_WORD *)(a1 + 96) << 11;
          goto LABEL_107;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_132;
        }
        int v39 = objc_alloc_init(GEOPDPhoto);
        if (!GEOPDPhotoReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1)) {
          goto LABEL_131;
        }
        PBReaderRecallMark();
        uint64_t v40 = 40;
        goto LABEL_88;
      case 7:
        if (!v34) {
          goto LABEL_89;
        }
        if ((*(_WORD *)(a1 + 96) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_132;
          }
          __int16 v53 = *(_WORD *)(a1 + 96) << 13;
          goto LABEL_107;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_132;
        }
        int v39 = objc_alloc_init(GEOPDDataItem);
        if (!GEOPDDataItemReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1)) {
          goto LABEL_131;
        }
        PBReaderRecallMark();
        uint64_t v40 = 24;
        goto LABEL_88;
      case 8:
        if (!v34) {
          goto LABEL_89;
        }
        if ((*(_WORD *)(a1 + 96) & 0x80) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_132;
          }
          __int16 v53 = *(_WORD *)(a1 + 96) << 8;
LABEL_107:
          v7 += v53 >> 15;
LABEL_108:
          BOOL v21 = (int *)MEMORY[0x1E4F940C8];
          uint64_t v22 = (int *)MEMORY[0x1E4F940B8];
          goto LABEL_109;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_132;
        }
        int v39 = objc_alloc_init(GEOTimezone);
        if (GEOTimezoneReadAllFrom((uint64_t)v39, (void *)v3))
        {
          PBReaderRecallMark();
          uint64_t v40 = 64;
LABEL_88:
          unint64_t v51 = *(void **)(a1 + v40);
          *(void *)(a1 + v40) = v39;

          --v7;
          goto LABEL_108;
        }
LABEL_131:

LABEL_132:
        int v58 = 0;
        uint64_t v59 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__flags;
        BOOL v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_112:
        if (v60) {
LABEL_113:
        }
          *(_WORD *)(a1 + v59[395]) |= 2u;
        if (v63 || (v58 & 1) == 0)
        {
          *(_WORD *)(a1 + v59[395]) |= 8u;
          *(_WORD *)(a1 + v59[395]) |= 0x100u;
          *(_WORD *)(a1 + v59[395]) |= 0x40u;
          *(_WORD *)(a1 + v59[395]) |= 0x20u;
          *(_WORD *)(a1 + v59[395]) |= 0x10u;
          *(_WORD *)(a1 + v59[395]) |= 4u;
          *(_WORD *)(a1 + v59[395]) |= 0x80u;
        }
        else if (v19)
        {
          while (1)
          {
            int v54 = *v19++;
            __int16 v55 = 8;
            switch(v54)
            {
              case 0:
                goto LABEL_125;
              case 1:
                goto LABEL_124;
              case 3:
                __int16 v55 = 256;
                goto LABEL_124;
              case 4:
                __int16 v55 = 64;
                goto LABEL_124;
              case 5:
                __int16 v55 = 32;
                goto LABEL_124;
              case 6:
                __int16 v55 = 16;
                goto LABEL_124;
              case 7:
                __int16 v55 = 4;
                goto LABEL_124;
              case 8:
                __int16 v55 = 128;
LABEL_124:
                *(_WORD *)(a1 + v59[395]) |= v55;
                break;
              default:
                continue;
            }
          }
        }
LABEL_125:
        if (v58) {
          unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
        }
        else {
          unint64_t v3 = 0;
        }
        if (v63)
        {
          char v56 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      default:
        if ((v60 & 1) == 0 || (*(_WORD *)(a1 + 96) & 2) != 0)
        {
LABEL_89:
          char v52 = PBReaderSkipValueWithTag();
          uint64_t v22 = (int *)MEMORY[0x1E4F940B8];
          BOOL v21 = (int *)MEMORY[0x1E4F940C8];
          if ((v52 & 1) == 0)
          {
            int v58 = 0;
LABEL_111:
            uint64_t v59 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__flags;
            goto LABEL_112;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v41 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            uint64_t v42 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v41;
          }
          int v43 = PBUnknownFieldAdd();
          BOOL v21 = (int *)MEMORY[0x1E4F940C8];
          uint64_t v22 = (int *)MEMORY[0x1E4F940B8];
          if (!v43)
          {
            int v58 = 0;
            uint64_t v59 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__flags;
            goto LABEL_113;
          }
        }
LABEL_109:
        if (!(v61 & 1 | (v7 != 0))) {
          goto LABEL_110;
        }
        continue;
    }
  }
}

void sub_189B4407C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B442A8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B443B8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B444C8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B445D8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B44C98(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDTemplateDataCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  [*(id *)(a1 + 32) readAll:1];
  long long v9 = 0u;
  long long v10 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  id v2 = *(id *)(a1 + 72);
  uint64_t v3 = [v2 countByEnumeratingWithState:&v7 objects:v11 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v8;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v8 != v5) {
          objc_enumerationMutation(v2);
        }
        objc_msgSend(*(id *)(*((void *)&v7 + 1) + 8 * v6++), "readAll:", 1, (void)v7);
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v7 objects:v11 count:16];
    }
    while (v4);
  }

  -[GEOPDDataItem readAll:](*(void *)(a1 + 56), 1);
  [*(id *)(a1 + 48) readAll:1];
  -[GEOPDPhoto readAll:](*(void *)(a1 + 40), 1);
  -[GEOPDDataItem readAll:](*(void *)(a1 + 24), 1);
}

unint64_t GEOPDTemplateDataReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 84))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDTemplateDataReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)long long v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 88));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 80) = [v8 position];
  *(_DWORD *)(a1 + 84) = [v8 length];
  if (a3) {
    long long v9 = (int *)&GEOPDTemplateDataReadAllFrom_recursiveTag;
  }
  else {
    long long v9 = (int *)&GEOPDTemplateDataReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDTemplateDataReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOPDTemplateDataCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 88));
  return Specified;
}

void sub_189B4506C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B45474(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B45798(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B45BB4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDTemplatePlaceReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  char v7 = 0;
  uint64_t v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  int v12 = ((*(unsigned __int8 *)(a1 + 56) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 56) >> 2) & 1)
      + ((*(unsigned __int8 *)(a1 + 56) >> 1) & 1);
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v7 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 != 0;
        char v17 = v16 & ~(_BYTE)v11 | v9;
        unsigned __int8 v18 = v16 | v11;
        char v61 = v17;
        char v62 = v18 | v17;
        if ((v18 | v7)) {
          id v19 = 0;
        }
        else {
          id v19 = a3;
        }
        unsigned int v20 = (int *)MEMORY[0x1E4F940E8];
        char v63 = (v19 == 0) | v18;
        BOOL v64 = v18;
        BOOL v21 = (int *)MEMORY[0x1E4F940C8];
        uint64_t v22 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v9;
LABEL_8:
        uint64_t v14 = v10;
        uint64_t v15 = v11;
LABEL_10:
        ++v8;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v21)) {
      goto LABEL_75;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      BOOL v30 = v24++ >= 9;
      if (v30)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_25:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_75:
      int v59 = 1;
LABEL_76:
      char v60 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__flags;
      goto LABEL_77;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v64;
    if ((v63 & 1) == 0)
    {
      id v35 = v19;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    if (v33 == 3) {
      break;
    }
    if (v33 == 2)
    {
      if (v7)
      {
        char v42 = 0;
        unsigned int v43 = 0;
        uint64_t v44 = 0;
        *(unsigned char *)(a1 + 56) |= 1u;
        uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
        while (1)
        {
          uint64_t v45 = *v20;
          uint64_t v46 = *(void *)(v3 + v45);
          unint64_t v47 = v46 + 1;
          if (v46 == -1 || v47 > *(void *)(v3 + *v6)) {
            break;
          }
          char v48 = *(unsigned char *)(*(void *)(v3 + *v22) + v46);
          *(void *)(v3 + v45) = v47;
          v44 |= (unint64_t)(v48 & 0x7F) << v42;
          if ((v48 & 0x80) == 0) {
            goto LABEL_69;
          }
          v42 += 7;
          BOOL v30 = v43++ >= 9;
          if (v30)
          {
            LODWORD(v44) = 0;
            goto LABEL_71;
          }
        }
        *(unsigned char *)(v3 + *v21) = 1;
LABEL_69:
        if (*(unsigned char *)(v3 + *v21)) {
          LODWORD(v44) = 0;
        }
LABEL_71:
        *(_DWORD *)(a1 + 52) = v44;
        goto LABEL_66;
      }
    }
    else if (v33 == 1)
    {
      if (v34 && (*(unsigned char *)(a1 + 56) & 8) == 0)
      {
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_97;
        }
        int v39 = objc_alloc_init(GEOPDTemplateData);
        if (!GEOPDTemplateDataReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1)) {
          goto LABEL_96;
        }
        PBReaderRecallMark();
        -[GEOPDTemplatePlace _addNoFlagsTemplateData:](a1, v39);

        BOOL v21 = (int *)MEMORY[0x1E4F940C8];
        uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
        goto LABEL_66;
      }
    }
    else if ((v61 & 1) != 0 && (*(unsigned char *)(a1 + 56) & 2) == 0)
    {
      if (!*(void *)(a1 + 16))
      {
        id v49 = objc_alloc_init(MEMORY[0x1E4F940B0]);
        char v50 = *(void **)(a1 + 16);
        *(void *)(a1 + 16) = v49;
      }
      int v51 = PBUnknownFieldAdd();
      BOOL v21 = (int *)MEMORY[0x1E4F940C8];
      uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
      if (!v51)
      {
        int v59 = 0;
        char v60 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__flags;
        goto LABEL_78;
      }
      goto LABEL_66;
    }
LABEL_65:
    char v52 = PBReaderSkipValueWithTag();
    BOOL v21 = (int *)MEMORY[0x1E4F940C8];
    uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
    if ((v52 & 1) == 0)
    {
      int v59 = 0;
      goto LABEL_76;
    }
LABEL_66:
    if (!(v62 & 1 | (v8 != 0))) {
      goto LABEL_75;
    }
  }
  if (!v34) {
    goto LABEL_65;
  }
  if ((*(unsigned char *)(a1 + 56) & 4) != 0)
  {
    char v53 = PBReaderSkipValueWithTag();
    uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
    if ((v53 & 1) == 0) {
      goto LABEL_97;
    }
    v8 += *(unsigned __int8 *)(a1 + 56) << 29 >> 31;
    goto LABEL_74;
  }
  char v40 = PBReaderPlaceMark();
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  if ((v40 & 1) == 0) {
    goto LABEL_97;
  }
  int v39 = objc_alloc_init(GEOPDFollowUpRequestMetadata);
  if (GEOPDFollowUpRequestMetadataReadAllFrom((uint64_t)v39, (void *)v3))
  {
    PBReaderRecallMark();
    id v41 = *(void **)(a1 + 24);
    *(void *)(a1 + 24) = v39;

    --v8;
LABEL_74:
    BOOL v21 = (int *)MEMORY[0x1E4F940C8];
    goto LABEL_66;
  }
LABEL_96:

LABEL_97:
  int v59 = 0;
  char v60 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__flags;
  BOOL v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_77:
  if ((v61 & 1) == 0) {
    goto LABEL_79;
  }
LABEL_78:
  *(unsigned char *)(a1 + v60[406]) |= 2u;
LABEL_79:
  if (v64 || (v59 & 1) == 0)
  {
    *(unsigned char *)(a1 + v60[406]) |= 8u;
    *(unsigned char *)(a1 + v60[406]) |= 4u;
    goto LABEL_89;
  }
  if (v19)
  {
    while (2)
    {
      while (1)
      {
        int v55 = *v19++;
        int v54 = v55;
        if (v55 == 1) {
          break;
        }
        if (v54 == 3)
        {
          char v56 = 4;
          goto LABEL_88;
        }
        if (!v54) {
          goto LABEL_89;
        }
      }
      char v56 = 8;
LABEL_88:
      *(unsigned char *)(a1 + v60[406]) |= v56;
      continue;
    }
  }
LABEL_89:
  if (v59) {
    unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
  }
  else {
    unint64_t v3 = 0;
  }
  if (v64)
  {
    unsigned int v57 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_189B46434(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B46968(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDTemplatePlaceCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v11 = *MEMORY[0x1E4F143B8];
  long long v6 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  id v1 = *(id *)(a1 + 32);
  uint64_t v2 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t v4 = *(void *)v7;
    do
    {
      uint64_t v5 = 0;
      do
      {
        if (*(void *)v7 != v4) {
          objc_enumerationMutation(v1);
        }
        -[GEOPDTemplateData readAll:](*(void *)(*((void *)&v6 + 1) + 8 * v5++), 1);
      }
      while (v3 != v5);
      uint64_t v3 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
    }
    while (v3);
  }
}

unint64_t GEOPDTemplatePlaceReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDTemplatePlaceReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    long long v9 = (int *)&GEOPDTemplatePlaceReadAllFrom_recursiveTag;
  }
  else {
    long long v9 = (int *)&GEOPDTemplatePlaceReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDTemplatePlaceReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOPDTemplatePlaceCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_189B46CD4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B46F38(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B471BC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDTemplatePlaceFilterReadAllFrom(uint64_t a1, void *a2)
{
  uint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    long long v6 = (int *)MEMORY[0x1E4F940C8];
    long long v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      int v8 = v3[*v6];
      if (*(void *)&v3[*v4] >= *(void *)&v3[*v5]) {
        break;
      }
      if (v3[*v6])
      {
        int v8 = 1;
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      uint64_t v11 = 0;
      while (1)
      {
        uint64_t v12 = *v4;
        uint64_t v13 = *(void *)&v3[v12];
        unint64_t v14 = v13 + 1;
        if (v13 == -1 || v14 > *(void *)&v3[*v5]) {
          break;
        }
        char v15 = *(unsigned char *)(*(void *)&v3[*v7] + v13);
        *(void *)&v3[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0) {
          goto LABEL_13;
        }
        v9 += 7;
        if (v10++ >= 9)
        {
          char v17 = 0;
          int v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      int v8 = v3[*v6];
      if (v3[*v6]) {
        char v17 = 0;
      }
      else {
        char v17 = v11;
      }
LABEL_16:
      if (v8) {
        BOOL v18 = 1;
      }
      else {
        BOOL v18 = (v17 & 7) == 4;
      }
      if (v18) {
        break;
      }
      if (!*(void *)(a1 + 8))
      {
        id v19 = objc_alloc_init(MEMORY[0x1E4F940B0]);
        unsigned int v20 = *(void **)(a1 + 8);
        *(void *)(a1 + 8) = v19;
      }
      if ((PBUnknownFieldAdd() & 1) == 0) {
        goto LABEL_23;
      }
    }
    BOOL v21 = v8 == 0;
  }
  else
  {
LABEL_23:
    BOOL v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_189B47824(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDTemplatePlaceModuleConfigurationReadAllFrom(uint64_t a1, void *a2, int a3)
{
  uint64_t v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    long long v6 = (int *)MEMORY[0x1E4F940E8];
    long long v7 = (int *)MEMORY[0x1E4F940E0];
    int v8 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v5[*MEMORY[0x1E4F940E8]] < *(void *)&v5[*MEMORY[0x1E4F940E0]])
    {
      char v9 = (int *)MEMORY[0x1E4F940B8];
      while (!v5[*v8])
      {
        char v10 = 0;
        unsigned int v11 = 0;
        unint64_t v12 = 0;
        while (1)
        {
          uint64_t v13 = *v6;
          uint64_t v14 = *(void *)&v5[v13];
          unint64_t v15 = v14 + 1;
          if (v14 == -1 || v15 > *(void *)&v5[*v7]) {
            break;
          }
          char v16 = *(unsigned char *)(*(void *)&v5[*v9] + v14);
          *(void *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0) {
            goto LABEL_13;
          }
          v10 += 7;
          BOOL v17 = v11++ >= 9;
          if (v17)
          {
            unint64_t v12 = 0;
            int v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        int v18 = v5[*v8];
        if (v5[*v8]) {
          unint64_t v12 = 0;
        }
LABEL_15:
        if (v18 || (v12 & 7) == 4) {
          break;
        }
        switch((v12 >> 3))
        {
          case 1u:
            char v20 = 0;
            unsigned int v21 = 0;
            uint64_t v22 = 0;
            *(unsigned char *)(a1 + 40) |= 8u;
            while (1)
            {
              uint64_t v23 = *v6;
              uint64_t v24 = *(void *)&v5[v23];
              unint64_t v25 = v24 + 1;
              if (v24 == -1 || v25 > *(void *)&v5[*v7]) {
                break;
              }
              char v26 = *(unsigned char *)(*(void *)&v5[*v9] + v24);
              *(void *)&v5[v23] = v25;
              v22 |= (unint64_t)(v26 & 0x7F) << v20;
              if ((v26 & 0x80) == 0) {
                goto LABEL_56;
              }
              v20 += 7;
              BOOL v17 = v21++ >= 9;
              if (v17)
              {
                LODWORD(v22) = 0;
                goto LABEL_58;
              }
            }
            v5[*v8] = 1;
LABEL_56:
            if (v5[*v8]) {
              LODWORD(v22) = 0;
            }
LABEL_58:
            uint64_t v48 = 36;
            goto LABEL_71;
          case 2u:
            if ((PBReaderPlaceMark() & 1) == 0) {
              goto LABEL_75;
            }
            char v29 = objc_alloc_init(GEOLocalizedString);
            if (!GEOLocalizedStringReadAllFrom((uint64_t)v29, v5, a3))
            {

              goto LABEL_75;
            }
            PBReaderRecallMark();
            -[GEOPDTemplatePlaceModuleConfiguration addSectionTitle:](a1, v29);

LABEL_72:
            if (*(void *)&v5[*v6] >= *(void *)&v5[*v7]) {
              goto LABEL_73;
            }
            break;
          case 3u:
            char v30 = 0;
            unsigned int v31 = 0;
            uint64_t v22 = 0;
            *(unsigned char *)(a1 + 40) |= 2u;
            while (2)
            {
              uint64_t v32 = *v6;
              uint64_t v33 = *(void *)&v5[v32];
              unint64_t v34 = v33 + 1;
              if (v33 == -1 || v34 > *(void *)&v5[*v7])
              {
                v5[*v8] = 1;
              }
              else
              {
                char v35 = *(unsigned char *)(*(void *)&v5[*v9] + v33);
                *(void *)&v5[v32] = v34;
                v22 |= (unint64_t)(v35 & 0x7F) << v30;
                if (v35 < 0)
                {
                  v30 += 7;
                  BOOL v17 = v31++ >= 9;
                  if (v17)
                  {
                    LODWORD(v22) = 0;
                    goto LABEL_62;
                  }
                  continue;
                }
              }
              break;
            }
            if (v5[*v8]) {
              LODWORD(v22) = 0;
            }
LABEL_62:
            uint64_t v48 = 28;
            goto LABEL_71;
          case 4u:
            char v36 = 0;
            unsigned int v37 = 0;
            uint64_t v22 = 0;
            *(unsigned char *)(a1 + 40) |= 4u;
            while (2)
            {
              uint64_t v38 = *v6;
              uint64_t v39 = *(void *)&v5[v38];
              unint64_t v40 = v39 + 1;
              if (v39 == -1 || v40 > *(void *)&v5[*v7])
              {
                v5[*v8] = 1;
              }
              else
              {
                char v41 = *(unsigned char *)(*(void *)&v5[*v9] + v39);
                *(void *)&v5[v38] = v40;
                v22 |= (unint64_t)(v41 & 0x7F) << v36;
                if (v41 < 0)
                {
                  v36 += 7;
                  BOOL v17 = v37++ >= 9;
                  if (v17)
                  {
                    LODWORD(v22) = 0;
                    goto LABEL_66;
                  }
                  continue;
                }
              }
              break;
            }
            if (v5[*v8]) {
              LODWORD(v22) = 0;
            }
LABEL_66:
            uint64_t v48 = 32;
            goto LABEL_71;
          case 5u:
            char v42 = 0;
            unsigned int v43 = 0;
            uint64_t v22 = 0;
            *(unsigned char *)(a1 + 40) |= 1u;
            while (2)
            {
              uint64_t v44 = *v6;
              uint64_t v45 = *(void *)&v5[v44];
              unint64_t v46 = v45 + 1;
              if (v45 == -1 || v46 > *(void *)&v5[*v7])
              {
                v5[*v8] = 1;
              }
              else
              {
                char v47 = *(unsigned char *)(*(void *)&v5[*v9] + v45);
                *(void *)&v5[v44] = v46;
                v22 |= (unint64_t)(v47 & 0x7F) << v42;
                if (v47 < 0)
                {
                  v42 += 7;
                  BOOL v17 = v43++ >= 9;
                  if (v17)
                  {
                    LODWORD(v22) = 0;
                    goto LABEL_70;
                  }
                  continue;
                }
              }
              break;
            }
            if (v5[*v8]) {
              LODWORD(v22) = 0;
            }
LABEL_70:
            uint64_t v48 = 24;
LABEL_71:
            *(_DWORD *)(a1 + v48) = v22;
            goto LABEL_72;
          default:
            if (!*(void *)(a1 + 8))
            {
              id v27 = objc_alloc_init(MEMORY[0x1E4F940B0]);
              unint64_t v28 = *(void **)(a1 + 8);
              *(void *)(a1 + 8) = v27;
            }
            if (!PBUnknownFieldAdd()) {
              goto LABEL_75;
            }
            goto LABEL_72;
        }
      }
    }
LABEL_73:
    BOOL v49 = v5[*v8] == 0;
  }
  else
  {
LABEL_75:
    BOOL v49 = 0;
  }
  objc_sync_exit(v5);

  return v49;
}

void sub_189B488F0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B49048(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B4917C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B494D4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B495B4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B49850(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B499E4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDTextBlockFilterReadAllFrom(uint64_t a1, void *a2)
{
  uint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    long long v6 = (int *)MEMORY[0x1E4F940C8];
    long long v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      int v8 = v3[*v6];
      if (*(void *)&v3[*v4] >= *(void *)&v3[*v5]) {
        break;
      }
      if (v3[*v6])
      {
        int v8 = 1;
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      uint64_t v11 = 0;
      while (1)
      {
        uint64_t v12 = *v4;
        uint64_t v13 = *(void *)&v3[v12];
        unint64_t v14 = v13 + 1;
        if (v13 == -1 || v14 > *(void *)&v3[*v5]) {
          break;
        }
        char v15 = *(unsigned char *)(*(void *)&v3[*v7] + v13);
        *(void *)&v3[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0) {
          goto LABEL_13;
        }
        v9 += 7;
        if (v10++ >= 9)
        {
          char v17 = 0;
          int v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      int v8 = v3[*v6];
      if (v3[*v6]) {
        char v17 = 0;
      }
      else {
        char v17 = v11;
      }
LABEL_16:
      if (v8) {
        BOOL v18 = 1;
      }
      else {
        BOOL v18 = (v17 & 7) == 4;
      }
      if (v18) {
        break;
      }
      if (!*(void *)(a1 + 8))
      {
        id v19 = objc_alloc_init(MEMORY[0x1E4F940B0]);
        char v20 = *(void **)(a1 + 8);
        *(void *)(a1 + 8) = v19;
      }
      if ((PBUnknownFieldAdd() & 1) == 0) {
        goto LABEL_23;
      }
    }
    BOOL v21 = v8 == 0;
  }
  else
  {
LABEL_23:
    BOOL v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_189B4A024(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDTextItemReadAllFrom(uint64_t a1, void *a2)
{
  uint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    long long v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      long long v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          uint64_t v18 = PBReaderReadString();
          id v19 = *(void **)(a1 + 16);
          *(void *)(a1 + 16) = v18;
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v20 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            BOOL v21 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v20;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_26;
          }
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v22 = v3[*v6] == 0;
  }
  else
  {
LABEL_26:
    BOOL v22 = 0;
  }
  objc_sync_exit(v3);

  return v22;
}

void sub_189B4A618(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B4A97C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDTextItemContainerReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  long long v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  char v7 = 0;
  uint64_t v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  int v11 = ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1)
      + (*(unsigned char *)(a1 + 52) & 1)
      + ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v11;
        goto LABEL_8;
      case -3:
        char v7 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_9;
      case 0:
        BOOL v14 = v11 != 0;
        char v15 = v14 | v10;
        char v48 = v14 & ~(_BYTE)v10 | v9;
        char v49 = v14 | v10 | v48;
        if (((v14 | v10) | v7)) {
          int v16 = 0;
        }
        else {
          int v16 = a3;
        }
        char v17 = (int *)MEMORY[0x1E4F940E8];
        uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
        id v19 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v11;
LABEL_7:
        uint64_t v12 = v9;
LABEL_8:
        uint64_t v13 = v10;
LABEL_9:
        ++v8;
        uint64_t v9 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v17) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v18)) {
      goto LABEL_61;
    }
    char v20 = 0;
    unsigned int v21 = 0;
    unint64_t v22 = 0;
    while (1)
    {
      uint64_t v23 = *v17;
      uint64_t v24 = *(void *)(v3 + v23);
      unint64_t v25 = v24 + 1;
      if (v24 == -1 || v25 > *(void *)(v3 + *v6)) {
        break;
      }
      char v26 = *(unsigned char *)(*(void *)(v3 + *v19) + v24);
      *(void *)(v3 + v23) = v25;
      v22 |= (unint64_t)(v26 & 0x7F) << v20;
      if ((v26 & 0x80) == 0) {
        goto LABEL_24;
      }
      v20 += 7;
      if (v21++ >= 9)
      {
        unint64_t v22 = 0;
        int v28 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_26;
      }
    }
    *(unsigned char *)(v3 + *v18) = 1;
LABEL_24:
    int v28 = *(unsigned __int8 *)(v3 + *v18);
    if (*(unsigned char *)(v3 + *v18)) {
      unint64_t v22 = 0;
    }
LABEL_26:
    if (v28 || (v22 & 7) == 4)
    {
LABEL_61:
      int v46 = 1;
      goto LABEL_62;
    }
    unint64_t v30 = v22 >> 3;
    BOOL v31 = v15;
    if (!((v16 == 0) | v15 & 1))
    {
      uint64_t v32 = v16;
      do
      {
        int v34 = *v32++;
        int v33 = v34;
        BOOL v31 = v34 != 0;
        if (v34) {
          BOOL v35 = v33 == v30;
        }
        else {
          BOOL v35 = 1;
        }
      }
      while (!v35);
    }
    if (v30 == 2) {
      break;
    }
    if (v30 == 1)
    {
      if (v31 && (*(unsigned char *)(a1 + 52) & 4) == 0)
      {
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_81;
        }
        char v36 = objc_alloc_init(GEOPDTextItem);
        if (!GEOPDTextItemReadAllFrom((uint64_t)v36, (void *)v3)) {
          goto LABEL_80;
        }
        PBReaderRecallMark();
        -[GEOPDTextItemContainer _addNoFlagsTextItem:](a1, v36);

        goto LABEL_59;
      }
    }
    else if ((v48 & 1) != 0 && (*(unsigned char *)(a1 + 52) & 1) == 0)
    {
      if (!*(void *)(a1 + 16))
      {
        id v38 = objc_alloc_init(MEMORY[0x1E4F940B0]);
        uint64_t v39 = *(void **)(a1 + 16);
        *(void *)(a1 + 16) = v38;
      }
      int v40 = PBUnknownFieldAdd();
      uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
      if (!v40)
      {
        int v46 = 0;
        char v47 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__flags;
        goto LABEL_64;
      }
      goto LABEL_60;
    }
LABEL_55:
    char v41 = PBReaderSkipValueWithTag();
    uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
    if ((v41 & 1) == 0)
    {
      int v46 = 0;
LABEL_62:
      char v47 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__flags;
      goto LABEL_63;
    }
LABEL_60:
    if (!(v49 & 1 | (v8 != 0))) {
      goto LABEL_61;
    }
  }
  if (!v31) {
    goto LABEL_55;
  }
  if ((*(unsigned char *)(a1 + 52) & 2) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0) {
      goto LABEL_81;
    }
    v8 += *(unsigned __int8 *)(a1 + 52) << 30 >> 31;
    goto LABEL_59;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_81;
  }
  char v36 = objc_alloc_init(GEOPDTextItemDisplayConfig);
  if (GEOPDTextItemDisplayConfigReadAllFrom((uint64_t)v36, (void *)v3))
  {
    PBReaderRecallMark();
    unsigned int v37 = *(void **)(a1 + 24);
    *(void *)(a1 + 24) = v36;

    --v8;
LABEL_59:
    uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
    goto LABEL_60;
  }
LABEL_80:

LABEL_81:
  int v46 = 0;
  char v47 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__flags;
  uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
LABEL_63:
  if ((v48 & 1) == 0) {
    goto LABEL_65;
  }
LABEL_64:
  *(unsigned char *)(a1 + v47[425]) |= 1u;
LABEL_65:
  if (v15 & 1 | ((v46 & 1) == 0))
  {
    *(unsigned char *)(a1 + v47[425]) |= 4u;
    *(unsigned char *)(a1 + v47[425]) |= 2u;
    goto LABEL_74;
  }
  if (v16)
  {
    while (1)
    {
      int v43 = *v16++;
      int v42 = v43;
      if (v43 == 1) {
        break;
      }
      if (v42 == 2)
      {
LABEL_70:
        *(unsigned char *)(a1 + v47[425]) |= v42;
      }
      else if (!v42)
      {
        goto LABEL_74;
      }
    }
    LOBYTE(v42) = 4;
    goto LABEL_70;
  }
LABEL_74:
  if (v46)
  {
    unint64_t v3 = *(unsigned char *)(v3 + *v18) == 0;
    if ((v15 & 1) == 0) {
      return v3;
    }
LABEL_78:
    uint64_t v44 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  else
  {
    unint64_t v3 = 0;
    if (v15) {
      goto LABEL_78;
    }
  }
  return v3;
}

void sub_189B4B0D8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B4B5B4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDTextItemContainerCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v10 = *MEMORY[0x1E4F143B8];
  long long v5 = 0u;
  long long v6 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  id v1 = *(id *)(a1 + 32);
  uint64_t v2 = [v1 countByEnumeratingWithState:&v5 objects:v9 count:16];
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t v4 = *(void *)v6;
    while (1)
    {
      if (*(void *)v6 != v4) {
        objc_enumerationMutation(v1);
      }
      if (!--v3)
      {
        uint64_t v3 = [v1 countByEnumeratingWithState:&v5 objects:v9 count:16];
        if (!v3) {
          break;
        }
      }
    }
  }
}

unint64_t GEOPDTextItemContainerReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDTextItemContainerReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOPDTextItemContainerReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOPDTextItemContainerReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDTextItemContainerReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOPDTextItemContainerCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_189B4B900(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B4BB40(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B4BD8C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDTextItemDisplayConfigReadAllFrom(uint64_t a1, void *a2)
{
  uint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    long long v5 = (int *)MEMORY[0x1E4F940E0];
    long long v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      long long v7 = (int *)MEMORY[0x1E4F940B8];
      while (1)
      {
        if (v3[*v6]) {
          goto LABEL_49;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          goto LABEL_49;
        }
        if ((v10 >> 3) == 2) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          char v18 = 0;
          unsigned int v19 = 0;
          uint64_t v20 = 0;
          *(unsigned char *)(a1 + 24) |= 1u;
          while (1)
          {
            uint64_t v21 = *v4;
            uint64_t v22 = *(void *)&v3[v21];
            unint64_t v23 = v22 + 1;
            if (v22 == -1 || v23 > *(void *)&v3[*v5])
            {
              char v26 = &OBJC_IVAR___GEOPDTextItemDisplayConfig__maxItemsPerRow;
              goto LABEL_41;
            }
            char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
            *(void *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0) {
              break;
            }
            v18 += 7;
            BOOL v25 = v19++ > 8;
            if (v25)
            {
              LODWORD(v20) = 0;
              char v26 = &OBJC_IVAR___GEOPDTextItemDisplayConfig__maxItemsPerRow;
              goto LABEL_44;
            }
          }
          char v26 = &OBJC_IVAR___GEOPDTextItemDisplayConfig__maxItemsPerRow;
LABEL_42:
          if (v3[*v6]) {
            LODWORD(v20) = 0;
          }
LABEL_44:
          *(_DWORD *)(a1 + *v26) = v20;
          goto LABEL_45;
        }
        if (!*(void *)(a1 + 8))
        {
          id v33 = objc_alloc_init(MEMORY[0x1E4F940B0]);
          int v34 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = v33;
        }
        if ((PBUnknownFieldAdd() & 1) == 0) {
          goto LABEL_50;
        }
LABEL_45:
        if (*(void *)&v3[*v4] >= *(void *)&v3[*v5]) {
          goto LABEL_49;
        }
      }
      char v27 = 0;
      unsigned int v28 = 0;
      uint64_t v20 = 0;
      *(unsigned char *)(a1 + 24) |= 2u;
      while (1)
      {
        uint64_t v29 = *v4;
        uint64_t v30 = *(void *)&v3[v29];
        unint64_t v31 = v30 + 1;
        if (v30 == -1 || v31 > *(void *)&v3[*v5]) {
          break;
        }
        char v32 = *(unsigned char *)(*(void *)&v3[*v7] + v30);
        *(void *)&v3[v29] = v31;
        v20 |= (unint64_t)(v32 & 0x7F) << v27;
        if ((v32 & 0x80) == 0)
        {
          char v26 = &OBJC_IVAR___GEOPDTextItemDisplayConfig__maxRowCount;
          goto LABEL_42;
        }
        v27 += 7;
        BOOL v25 = v28++ > 8;
        if (v25)
        {
          LODWORD(v20) = 0;
          char v26 = &OBJC_IVAR___GEOPDTextItemDisplayConfig__maxRowCount;
          goto LABEL_44;
        }
      }
      char v26 = &OBJC_IVAR___GEOPDTextItemDisplayConfig__maxRowCount;
LABEL_41:
      v3[*v6] = 1;
      goto LABEL_42;
    }
LABEL_49:
    BOOL v35 = v3[*v6] == 0;
  }
  else
  {
LABEL_50:
    BOOL v35 = 0;
  }
  objc_sync_exit(v3);

  return v35;
}

void sub_189B4C5D0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B4C9CC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDThirdPartyLinkReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  long long v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  uint64_t v7 = 0;
  uint64_t v8 = 0;
  char v9 = 0;
  uint64_t v10 = 0;
  int v11 = ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1)
      + (*(unsigned char *)(a1 + 52) & 1)
      + ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v10])
    {
      case -4:
        ++v11;
        uint64_t v12 = v7;
        goto LABEL_8;
      case -3:
        char v9 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_8;
      case 0:
        BOOL v14 = v11 != 0;
        unsigned __int8 v15 = v14 | v7;
        unsigned __int8 v51 = v14 & ~(_BYTE)v7 | v8;
        if (((v14 | v7) | v9)) {
          int v16 = 0;
        }
        else {
          int v16 = a3;
        }
        char v17 = (int *)MEMORY[0x1E4F940E8];
        char v18 = (int *)MEMORY[0x1E4F940C8];
        unsigned int v19 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v11;
LABEL_7:
        uint64_t v12 = v7;
        uint64_t v13 = v8;
LABEL_8:
        ++v10;
        uint64_t v7 = v12;
        uint64_t v8 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v17) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v18)) {
      goto LABEL_59;
    }
    char v20 = 0;
    unsigned int v21 = 0;
    unint64_t v22 = 0;
    while (1)
    {
      uint64_t v23 = *v17;
      uint64_t v24 = *(void *)(v3 + v23);
      unint64_t v25 = v24 + 1;
      if (v24 == -1 || v25 > *(void *)(v3 + *v6)) {
        break;
      }
      char v26 = *(unsigned char *)(*(void *)(v3 + *v19) + v24);
      *(void *)(v3 + v23) = v25;
      v22 |= (unint64_t)(v26 & 0x7F) << v20;
      if ((v26 & 0x80) == 0) {
        goto LABEL_23;
      }
      v20 += 7;
      if (v21++ >= 9)
      {
        unint64_t v22 = 0;
        int v28 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_25;
      }
    }
    *(unsigned char *)(v3 + *v18) = 1;
LABEL_23:
    int v28 = *(unsigned __int8 *)(v3 + *v18);
    if (*(unsigned char *)(v3 + *v18)) {
      unint64_t v22 = 0;
    }
LABEL_25:
    if (v28 || (v22 & 7) == 4)
    {
LABEL_59:
      int v49 = 1;
      goto LABEL_60;
    }
    unint64_t v30 = v22 >> 3;
    BOOL v31 = v15;
    if (!((v16 == 0) | v15 & 1))
    {
      char v32 = v16;
      do
      {
        int v34 = *v32++;
        int v33 = v34;
        BOOL v31 = v34 != 0;
        if (v34) {
          BOOL v35 = v33 == v30;
        }
        else {
          BOOL v35 = 1;
        }
      }
      while (!v35);
    }
    if (v30 == 2) {
      break;
    }
    if (v30 == 1)
    {
      if (v31)
      {
        if ((*(unsigned char *)(a1 + 52) & 2) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_79;
          }
          char v43 = *(unsigned char *)(a1 + 52) << 6;
          goto LABEL_57;
        }
        uint64_t v36 = PBReaderReadString();
        uint64_t v37 = 24;
        goto LABEL_44;
      }
    }
    else if ((v51 & 1) != 0 && (*(unsigned char *)(a1 + 52) & 1) == 0)
    {
      if (!*(void *)(a1 + 16))
      {
        id v39 = objc_alloc_init(MEMORY[0x1E4F940B0]);
        int v40 = *(void **)(a1 + 16);
        *(void *)(a1 + 16) = v39;
      }
      int v41 = PBUnknownFieldAdd();
      char v18 = (int *)MEMORY[0x1E4F940C8];
      if (!v41)
      {
        int v49 = 0;
        char v50 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__flags;
        goto LABEL_62;
      }
      goto LABEL_58;
    }
LABEL_51:
    char v42 = PBReaderSkipValueWithTag();
    char v18 = (int *)MEMORY[0x1E4F940C8];
    if ((v42 & 1) == 0)
    {
      int v49 = 0;
LABEL_60:
      char v50 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__flags;
      goto LABEL_61;
    }
LABEL_58:
    if (!((v15 | v51) & 1 | (v10 != 0))) {
      goto LABEL_59;
    }
  }
  if (!v31) {
    goto LABEL_51;
  }
  if ((*(unsigned char *)(a1 + 52) & 4) == 0)
  {
    uint64_t v36 = PBReaderReadString();
    uint64_t v37 = 32;
LABEL_44:
    id v38 = *(void **)(a1 + v37);
    *(void *)(a1 + v37) = v36;

    char v18 = (int *)MEMORY[0x1E4F940C8];
    --v10;
    goto LABEL_58;
  }
  if (PBReaderSkipValueWithTag())
  {
    char v43 = 32 * *(unsigned char *)(a1 + 52);
LABEL_57:
    v10 += v43 >> 7;
    char v18 = (int *)MEMORY[0x1E4F940C8];
    goto LABEL_58;
  }
LABEL_79:
  int v49 = 0;
  char v50 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__flags;
  char v18 = (int *)MEMORY[0x1E4F940C8];
LABEL_61:
  if ((v51 & 1) == 0) {
    goto LABEL_63;
  }
LABEL_62:
  *(unsigned char *)(a1 + v50[433]) |= 1u;
LABEL_63:
  if (v15 & 1 | ((v49 & 1) == 0))
  {
    *(unsigned char *)(a1 + v50[433]) |= 2u;
    *(unsigned char *)(a1 + v50[433]) |= 4u;
    goto LABEL_73;
  }
  if (v16)
  {
    while (1)
    {
      int v46 = *v16++;
      int v45 = v46;
      if (v46 == 1) {
        break;
      }
      if (v45 == 2)
      {
        char v44 = 4;
LABEL_69:
        *(unsigned char *)(a1 + v50[433]) |= v44;
      }
      else if (!v45)
      {
        goto LABEL_73;
      }
    }
    char v44 = 2;
    goto LABEL_69;
  }
LABEL_73:
  if (v49)
  {
    unint64_t v3 = *(unsigned char *)(v3 + *v18) == 0;
    if ((v15 & 1) == 0) {
      return v3;
    }
LABEL_77:
    char v47 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  else
  {
    unint64_t v3 = 0;
    if (v15) {
      goto LABEL_77;
    }
  }
  return v3;
}

void sub_189B4CFDC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B4D35C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDThirdPartyLinkReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDThirdPartyLinkReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    char v9 = (int *)&GEOPDThirdPartyLinkReadAllFrom_recursiveTag;
  }
  else {
    char v9 = (int *)&GEOPDThirdPartyLinkReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDThirdPartyLinkReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_189B4D5C4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B4D764(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B4D8D8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id GEOPDTimeRangeDescription(unsigned int *a1)
{
  uint64_t v2 = NSString;
  unint64_t v3 = _GEOPDTimeRangeDictionaryRepresentation(a1, 0);
  uint64_t v4 = [v2 stringWithFormat:@"GEOPDTimeRange<%p> %@", a1, v3];

  return v4;
}

id _GEOPDTimeRangeDictionaryRepresentation(unsigned int *a1, int a2)
{
  uint64_t v4 = [MEMORY[0x1E4F1CA60] dictionary];
  char v5 = *((unsigned char *)a1 + 8);
  if (v5)
  {
    long long v6 = [NSNumber numberWithUnsignedInt:*a1];
    [v4 setObject:v6 forKey:@"duration"];

    char v5 = *((unsigned char *)a1 + 8);
  }
  if ((v5 & 2) != 0)
  {
    uint64_t v7 = [NSNumber numberWithUnsignedInt:a1[1]];
    if (a2) {
      id v8 = @"startTime";
    }
    else {
      id v8 = @"start_time";
    }
    [v4 setObject:v7 forKey:v8];
  }

  return v4;
}

void _GEOPDTimeRangeFromDictionaryRepresentation(void *a1, uint64_t a2, int a3)
{
  if (a3) {
    uint64_t v4 = @"startTime";
  }
  else {
    uint64_t v4 = @"start_time";
  }
  id v5 = a1;
  long long v6 = [v5 objectForKeyedSubscript:v4];
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    *(unsigned char *)(a2 + 8) |= 2u;
    *(_DWORD *)(a2 + 4) = [v6 unsignedIntValue];
  }

  id v7 = [v5 objectForKeyedSubscript:@"duration"];

  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    *(unsigned char *)(a2 + 8) |= 1u;
    *(_DWORD *)a2 = [v7 unsignedIntValue];
  }
}

BOOL GEOPDTimeRangeReadFrom(uint64_t a1, uint64_t a2)
{
  return GEOPDTimeRangeReadAllFrom(a1, a2);
}

uint64_t GEOPDTimeRangeHash()
{
  return PBHashBytes();
}

void sub_189B4DE40(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDTipReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  long long v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 60);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 56)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  unsigned int v12 = vaddv_s16((int16x4_t)(*(void *)&vshl_u16((uint16x4_t)(*(void *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 68)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFFFFFDFFFEFFFCLL) & 0xFF01FF01FF01FF01));
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v9])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 > 1;
        char v17 = v16 & ~(_BYTE)v11 | v7;
        unsigned __int8 v18 = v16 | v11;
        char v57 = v17;
        char v58 = v18 | v17;
        if ((v18 | v8)) {
          unsigned int v19 = 0;
        }
        else {
          unsigned int v19 = a3;
        }
        char v20 = (int *)MEMORY[0x1E4F940E8];
        char v59 = (v19 == 0) | v18;
        BOOL v60 = v18;
        unsigned int v21 = (int *)MEMORY[0x1E4F940C8];
        unint64_t v22 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v7;
LABEL_8:
        uint64_t v14 = v10;
        uint64_t v15 = v11;
LABEL_10:
        ++v9;
        uint64_t v7 = v13;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v21)) {
      goto LABEL_74;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      if (v24++ >= 9)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_25:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_74:
      int v55 = 1;
      goto LABEL_75;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v60;
    if ((v59 & 1) == 0)
    {
      BOOL v35 = v19;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    switch((int)v33)
    {
      case 1:
        if (!v34 || (*(unsigned char *)(a1 + 68) & 4) != 0) {
          goto LABEL_63;
        }
        id v39 = PBReaderReadString();
        if (v39) {
          -[GEOPDTip _addNoFlagsSnippet:](a1, v39);
        }

        goto LABEL_70;
      case 2:
        if ((v8 & 1) == 0) {
          goto LABEL_63;
        }
        *(unsigned char *)(a1 + 68) |= 1u;
        uint64_t v43 = *v20;
        unint64_t v44 = *(void *)(v3 + v43);
        if (v44 <= 0xFFFFFFFFFFFFFFF7 && v44 + 8 <= *(void *)(v3 + *v6))
        {
          uint64_t v45 = *(void *)(*(void *)(v3 + *v22) + v44);
          *(void *)(v3 + v43) = v44 + 8;
        }
        else
        {
          *(unsigned char *)(v3 + *v21) = 1;
          uint64_t v45 = 0;
        }
        *(void *)(a1 + 40) = v45;
        goto LABEL_73;
      case 3:
        if (!v34) {
          goto LABEL_63;
        }
        if ((*(unsigned char *)(a1 + 68) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_92;
          }
          char v50 = 8 * *(unsigned char *)(a1 + 68);
LABEL_69:
          v9 += v50 >> 7;
          goto LABEL_70;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_92;
        }
        int v46 = objc_alloc_init(GEOPDTipUser);
        if (GEOPDTipUserReadAllFrom((uint64_t)v46, (void *)v3, v10 & 1))
        {
          PBReaderRecallMark();
          char v47 = *(void **)(a1 + 48);
          *(void *)(a1 + 48) = v46;
LABEL_62:

          --v9;
LABEL_70:
          unsigned int v21 = (int *)MEMORY[0x1E4F940C8];
          unint64_t v22 = (int *)MEMORY[0x1E4F940B8];
          goto LABEL_73;
        }

LABEL_92:
        int v55 = 0;
        char v56 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__flags;
        unsigned int v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_76:
        if (v57) {
LABEL_77:
        }
          *(unsigned char *)(a1 + v56[438]) |= 2u;
        if (v60 || (v55 & 1) == 0)
        {
          *(unsigned char *)(a1 + v56[438]) |= 4u;
          *(unsigned char *)(a1 + v56[438]) |= 0x10u;
          *(unsigned char *)(a1 + v56[438]) |= 8u;
        }
        else if (v19)
        {
          while (1)
          {
            int v51 = *v19++;
            char v52 = 4;
            switch(v51)
            {
              case 0:
                goto LABEL_85;
              case 1:
                goto LABEL_84;
              case 3:
                char v52 = 16;
                goto LABEL_84;
              case 4:
                char v52 = 8;
LABEL_84:
                *(unsigned char *)(a1 + v56[438]) |= v52;
                break;
              default:
                continue;
            }
          }
        }
LABEL_85:
        if (v55) {
          unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
        }
        else {
          unint64_t v3 = 0;
        }
        if (v60)
        {
          char v53 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      case 4:
        if (!v34) {
          goto LABEL_63;
        }
        if ((*(unsigned char *)(a1 + 68) & 8) == 0)
        {
          uint64_t v48 = PBReaderReadString();
          char v47 = *(void **)(a1 + 32);
          *(void *)(a1 + 32) = v48;
          goto LABEL_62;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_92;
        }
        char v50 = 16 * *(unsigned char *)(a1 + 68);
        goto LABEL_69;
      default:
        if ((v57 & 1) == 0 || (*(unsigned char *)(a1 + 68) & 2) != 0)
        {
LABEL_63:
          char v49 = PBReaderSkipValueWithTag();
          unint64_t v22 = (int *)MEMORY[0x1E4F940B8];
          unsigned int v21 = (int *)MEMORY[0x1E4F940C8];
          if ((v49 & 1) == 0)
          {
            int v55 = 0;
LABEL_75:
            char v56 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__flags;
            goto LABEL_76;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v40 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            int v41 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v40;
          }
          int v42 = PBUnknownFieldAdd();
          unsigned int v21 = (int *)MEMORY[0x1E4F940C8];
          unint64_t v22 = (int *)MEMORY[0x1E4F940B8];
          if (!v42)
          {
            int v55 = 0;
            char v56 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__flags;
            goto LABEL_77;
          }
        }
LABEL_73:
        if (!(v58 & 1 | (v9 != 0))) {
          goto LABEL_74;
        }
        continue;
    }
  }
}

void sub_189B4E70C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B4E81C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B4EC68(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDTipReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 60))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDTipReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = [v8 position];
  *(_DWORD *)(a1 + 60) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOPDTipReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOPDTipReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDTipReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    -[GEOPDTipUser readAll:](*(void *)(a1 + 48), 1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_189B4EEE8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B4F1C0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B4F464(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B4FD50(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDTipUserReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  long long v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  uint64_t v7 = 0;
  uint64_t v8 = 0;
  char v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  int v12 = ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1)
      + (*(unsigned char *)(a1 + 52) & 1)
      + ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1);
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v10])
    {
      case -4:
        ++v12;
        uint64_t v13 = v7;
        goto LABEL_8;
      case -3:
        char v9 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v13 = v7;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 != 0;
        char v17 = v16 & ~(_BYTE)v11 | v8;
        unsigned __int8 v18 = v16 | v11;
        char v53 = v17;
        char v54 = v18 | v17;
        if ((v18 | v9)) {
          unsigned int v19 = 0;
        }
        else {
          unsigned int v19 = a3;
        }
        char v55 = (v19 == 0) | v18;
        BOOL v56 = v18;
        char v20 = (int *)MEMORY[0x1E4F940E8];
        unsigned int v21 = (int *)MEMORY[0x1E4F940C8];
        unint64_t v22 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v7;
        uint64_t v14 = v8;
LABEL_8:
        uint64_t v15 = v11;
LABEL_10:
        ++v10;
        uint64_t v7 = v13;
        uint64_t v8 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v21)) {
      goto LABEL_64;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      if (v24++ >= 9)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_25:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_64:
      int v51 = 1;
      goto LABEL_65;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v56;
    if ((v55 & 1) == 0)
    {
      BOOL v35 = v19;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    if (v33 == 2) {
      break;
    }
    if (v33 == 1)
    {
      if (v34)
      {
        if ((*(unsigned char *)(a1 + 52) & 4) == 0)
        {
          uint64_t v39 = PBReaderReadString();
          id v40 = *(void **)(a1 + 32);
          *(void *)(a1 + 32) = v39;
          goto LABEL_48;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_84;
        }
        char v46 = 32 * *(unsigned char *)(a1 + 52);
        goto LABEL_61;
      }
    }
    else if ((v53 & 1) != 0 && (*(unsigned char *)(a1 + 52) & 1) == 0)
    {
      if (!*(void *)(a1 + 16))
      {
        id v42 = objc_alloc_init(MEMORY[0x1E4F940B0]);
        uint64_t v43 = *(void **)(a1 + 16);
        *(void *)(a1 + 16) = v42;
      }
      int v44 = PBUnknownFieldAdd();
      unsigned int v21 = (int *)MEMORY[0x1E4F940C8];
      if (!v44)
      {
        int v51 = 0;
        char v52 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__flags;
        goto LABEL_67;
      }
      goto LABEL_63;
    }
LABEL_55:
    char v45 = PBReaderSkipValueWithTag();
    unsigned int v21 = (int *)MEMORY[0x1E4F940C8];
    if ((v45 & 1) == 0)
    {
      int v51 = 0;
LABEL_65:
      char v52 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__flags;
      goto LABEL_66;
    }
LABEL_63:
    if (!(v54 & 1 | (v10 != 0))) {
      goto LABEL_64;
    }
  }
  if (!v34) {
    goto LABEL_55;
  }
  if ((*(unsigned char *)(a1 + 52) & 2) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0) {
      goto LABEL_84;
    }
    char v46 = *(unsigned char *)(a1 + 52) << 6;
LABEL_61:
    v10 += v46 >> 7;
    goto LABEL_62;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_84;
  }
  int v41 = objc_alloc_init(GEOPDPhoto);
  if (GEOPDPhotoReadAllFrom((uint64_t)v41, (void *)v3, v7 & 1))
  {
    PBReaderRecallMark();
    id v40 = *(void **)(a1 + 24);
    *(void *)(a1 + 24) = v41;
LABEL_48:

    --v10;
LABEL_62:
    unsigned int v21 = (int *)MEMORY[0x1E4F940C8];
    goto LABEL_63;
  }

LABEL_84:
  int v51 = 0;
  char v52 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__flags;
  unsigned int v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_66:
  if ((v53 & 1) == 0) {
    goto LABEL_68;
  }
LABEL_67:
  *(unsigned char *)(a1 + v52[448]) |= 1u;
LABEL_68:
  if (v56 || (v51 & 1) == 0)
  {
    *(unsigned char *)(a1 + v52[448]) |= 4u;
    *(unsigned char *)(a1 + v52[448]) |= 2u;
    goto LABEL_77;
  }
  if (v19)
  {
    while (2)
    {
      while (1)
      {
        int v48 = *v19++;
        int v47 = v48;
        if (v48 == 1) {
          break;
        }
        if (v47 == 2) {
          goto LABEL_76;
        }
        if (!v47) {
          goto LABEL_77;
        }
      }
      LOBYTE(v47) = 4;
LABEL_76:
      *(unsigned char *)(a1 + v52[448]) |= v47;
      continue;
    }
  }
LABEL_77:
  if (v51) {
    unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
  }
  else {
    unint64_t v3 = 0;
  }
  if (v56)
  {
    char v49 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_189B503AC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B50758(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDTipUserReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDTipUserReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    char v9 = (int *)&GEOPDTipUserReadAllFrom_recursiveTag;
  }
  else {
    char v9 = (int *)&GEOPDTipUserReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDTipUserReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    -[GEOPDPhoto readAll:](*(void *)(a1 + 24), 1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_189B509D8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B50B68(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL _GEOPDTipUserIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  if ((*(unsigned char *)(a1 + 52) & 0xC) != 0) {
    return 1;
  }
  if ((*(unsigned char *)(a1 + 52) & 2) == 0) {
    return 0;
  }
  uint64_t v3 = *(void *)(a1 + 24);

  return GEOPDPhotoIsDirty(v3);
}

void sub_189B50D58(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B51064(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDTooltipReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  long long v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 60);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 56)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  unsigned int v12 = (vaddv_s16((int16x4_t)(*(void *)&vshl_u16((uint16x4_t)(*(void *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 72)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFDFFFEFFFBFFFCLL) & 0xFF01FF01FF01FF01))+ ((*(unsigned char *)(a1 + 72) & 2) != 0));
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 > 2;
        char v17 = v16 & ~(_BYTE)v11 | v9;
        unsigned __int8 v18 = v16 | v11;
        char v60 = v17;
        char v61 = v18 | v17;
        if ((v18 | v8)) {
          unsigned int v19 = 0;
        }
        else {
          unsigned int v19 = a3;
        }
        char v62 = (v19 == 0) | v18;
        BOOL v63 = v18;
        char v20 = (int *)MEMORY[0x1E4F940E8];
        unsigned int v21 = (int *)MEMORY[0x1E4F940C8];
        unint64_t v22 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v9;
LABEL_8:
        uint64_t v14 = v10;
        uint64_t v15 = v11;
LABEL_10:
        ++v7;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v21)) {
      goto LABEL_91;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      BOOL v30 = v24++ >= 9;
      if (v30)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_25:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_91:
      int v58 = 1;
      goto LABEL_92;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v63;
    if ((v62 & 1) == 0)
    {
      BOOL v35 = v19;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    switch((int)v33)
    {
      case 1:
        if (!v34) {
          goto LABEL_74;
        }
        if ((*(unsigned char *)(a1 + 72) & 0x20) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_110;
          }
          uint64_t v39 = objc_alloc_init(GEOLocalizedString);
          if (GEOLocalizedStringReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1))
          {
            PBReaderRecallMark();
            uint64_t v40 = 48;
            goto LABEL_65;
          }
          goto LABEL_109;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_110;
        }
        char v53 = 4 * *(unsigned char *)(a1 + 72);
        goto LABEL_88;
      case 2:
        if (!v34) {
          goto LABEL_74;
        }
        if ((*(unsigned char *)(a1 + 72) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_110;
          }
          char v53 = 8 * *(unsigned char *)(a1 + 72);
          goto LABEL_88;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_110;
        }
        uint64_t v39 = objc_alloc_init(GEOLocalizedString);
        if (!GEOLocalizedStringReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1)) {
          goto LABEL_109;
        }
        PBReaderRecallMark();
        uint64_t v40 = 40;
        goto LABEL_65;
      case 3:
        if (!v34) {
          goto LABEL_74;
        }
        if ((*(unsigned char *)(a1 + 72) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_110;
          }
          char v53 = 32 * *(unsigned char *)(a1 + 72);
          goto LABEL_88;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_110;
        }
        uint64_t v39 = objc_alloc_init(GEOLocalizedString);
        if (!GEOLocalizedStringReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1)) {
          goto LABEL_109;
        }
        PBReaderRecallMark();
        uint64_t v40 = 24;
        goto LABEL_65;
      case 4:
        if (!v34) {
          goto LABEL_74;
        }
        if ((*(unsigned char *)(a1 + 72) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_110;
          }
          char v53 = 16 * *(unsigned char *)(a1 + 72);
LABEL_88:
          v7 += v53 >> 7;
LABEL_89:
          unsigned int v21 = (int *)MEMORY[0x1E4F940C8];
          unint64_t v22 = (int *)MEMORY[0x1E4F940B8];
          goto LABEL_90;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_110;
        }
        uint64_t v39 = objc_alloc_init(GEOPDPhoto);
        if (GEOPDPhotoReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1))
        {
          PBReaderRecallMark();
          uint64_t v40 = 32;
LABEL_65:
          int v44 = *(void **)(a1 + v40);
          *(void *)(a1 + v40) = v39;

          --v7;
          goto LABEL_89;
        }
LABEL_109:

LABEL_110:
        int v58 = 0;
        char v59 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__flags;
        unsigned int v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_93:
        if (v60) {
LABEL_94:
        }
          *(unsigned char *)(a1 + v59[453]) |= 2u;
        if (v63 || (v58 & 1) == 0)
        {
          *(unsigned char *)(a1 + v59[453]) |= 0x20u;
          *(unsigned char *)(a1 + v59[453]) |= 0x10u;
          *(unsigned char *)(a1 + v59[453]) |= 4u;
          *(unsigned char *)(a1 + v59[453]) |= 8u;
        }
        else if (v19)
        {
          while (1)
          {
            int v54 = *v19++;
            char v55 = 32;
            switch(v54)
            {
              case 0:
                goto LABEL_103;
              case 1:
                goto LABEL_102;
              case 2:
                char v55 = 16;
                goto LABEL_102;
              case 3:
                char v55 = 4;
                goto LABEL_102;
              case 4:
                char v55 = 8;
LABEL_102:
                *(unsigned char *)(a1 + v59[453]) |= v55;
                break;
              default:
                continue;
            }
          }
        }
LABEL_103:
        if (v58) {
          unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
        }
        else {
          unint64_t v3 = 0;
        }
        if (v63)
        {
          BOOL v56 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      case 5:
        if ((v8 & 1) == 0) {
          goto LABEL_74;
        }
        char v45 = 0;
        unsigned int v46 = 0;
        uint64_t v47 = 0;
        *(unsigned char *)(a1 + 72) |= 1u;
        while (2)
        {
          uint64_t v48 = *v20;
          uint64_t v49 = *(void *)(v3 + v48);
          unint64_t v50 = v49 + 1;
          if (v49 == -1 || v50 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v51 = *(unsigned char *)(*(void *)(v3 + *v22) + v49);
            *(void *)(v3 + v48) = v50;
            v47 |= (unint64_t)(v51 & 0x7F) << v45;
            if (v51 < 0)
            {
              v45 += 7;
              BOOL v30 = v46++ >= 9;
              if (v30)
              {
                LODWORD(v47) = 0;
                goto LABEL_79;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          LODWORD(v47) = 0;
        }
LABEL_79:
        *(_DWORD *)(a1 + 68) = v47;
        goto LABEL_90;
      default:
        if ((v60 & 1) == 0 || (*(unsigned char *)(a1 + 72) & 2) != 0)
        {
LABEL_74:
          char v52 = PBReaderSkipValueWithTag();
          unint64_t v22 = (int *)MEMORY[0x1E4F940B8];
          unsigned int v21 = (int *)MEMORY[0x1E4F940C8];
          if ((v52 & 1) == 0)
          {
            int v58 = 0;
LABEL_92:
            char v59 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__flags;
            goto LABEL_93;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v41 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            id v42 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v41;
          }
          int v43 = PBUnknownFieldAdd();
          unsigned int v21 = (int *)MEMORY[0x1E4F940C8];
          unint64_t v22 = (int *)MEMORY[0x1E4F940B8];
          if (!v43)
          {
            int v58 = 0;
            char v59 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__flags;
            goto LABEL_94;
          }
        }
LABEL_90:
        if (!(v61 & 1 | (v7 != 0))) {
          goto LABEL_91;
        }
        continue;
    }
  }
}

void sub_189B51980(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B51A90(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B51BA0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B5210C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDTooltipCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  [*(id *)(a1 + 48) readAll:1];
  [*(id *)(a1 + 40) readAll:1];
  [*(id *)(a1 + 24) readAll:1];
  uint64_t v2 = *(void *)(a1 + 32);

  -[GEOPDPhoto readAll:](v2, 1);
}

unint64_t GEOPDTooltipReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 60))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDTooltipReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = [v8 position];
  *(_DWORD *)(a1 + 60) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOPDTooltipReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOPDTooltipReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDTooltipReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOPDTooltipCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_189B523FC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B52670(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B52864(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDTooltipFilterReadAllFrom(uint64_t a1, void *a2)
{
  unint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    id v5 = (int *)MEMORY[0x1E4F940E0];
    long long v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          char v18 = 0;
          unsigned int v19 = 0;
          uint64_t v20 = 0;
          *(unsigned char *)(a1 + 20) |= 1u;
          while (1)
          {
            uint64_t v21 = *v4;
            uint64_t v22 = *(void *)&v3[v21];
            unint64_t v23 = v22 + 1;
            if (v22 == -1 || v23 > *(void *)&v3[*v5]) {
              break;
            }
            char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
            *(void *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0) {
              goto LABEL_32;
            }
            v18 += 7;
            BOOL v15 = v19++ >= 9;
            if (v15)
            {
              uint64_t v20 = 0;
              goto LABEL_34;
            }
          }
          v3[*v6] = 1;
LABEL_32:
          if (v3[*v6]) {
            uint64_t v20 = 0;
          }
LABEL_34:
          *(unsigned char *)(a1 + 16) = v20 != 0;
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v25 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            uint64_t v26 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v25;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_37;
          }
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v27 = v3[*v6] == 0;
  }
  else
  {
LABEL_37:
    BOOL v27 = 0;
  }
  objc_sync_exit(v3);

  return v27;
}

void sub_189B530A0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B5341C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDTrailReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 80));
  long long v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 76);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 72)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  unsigned int v12 = (unsigned __int16)(vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int16 *)(a1 + 88)), (uint16x4_t)0xFFF9FFFAFFFDFFFCLL), (int8x8_t)0x1000100010001))+ ((*(_WORD *)(a1 + 88) >> 5) & 1)+ ((*(_WORD *)(a1 + 88) >> 2) & 1)+ ((*(_WORD *)(a1 + 88) >> 1) & 1));
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 > 3;
        char v17 = v16 & ~(_BYTE)v11 | v9;
        unsigned __int8 v18 = v16 | v11;
        char v60 = v17;
        char v61 = v18 | v17;
        if ((v18 | v8)) {
          unsigned int v19 = 0;
        }
        else {
          unsigned int v19 = a3;
        }
        char v62 = (v19 == 0) | v18;
        BOOL v63 = v18;
        uint64_t v20 = (int *)MEMORY[0x1E4F940E8];
        uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
        uint64_t v22 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v9;
LABEL_8:
        uint64_t v14 = v10;
        uint64_t v15 = v11;
LABEL_10:
        ++v7;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v21)) {
      goto LABEL_102;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      BOOL v30 = v24++ >= 9;
      if (v30)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_25:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_102:
      int v58 = 1;
      goto LABEL_103;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v63;
    if ((v62 & 1) == 0)
    {
      BOOL v35 = v19;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    switch((int)v33)
    {
      case 1:
        if (!v34) {
          goto LABEL_85;
        }
        if ((*(_WORD *)(a1 + 88) & 8) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_124;
          }
          uint64_t v39 = objc_alloc_init(GEOPDEntity);
          if (GEOPDEntityReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1))
          {
            PBReaderRecallMark();
            uint64_t v40 = 32;
            goto LABEL_84;
          }
          goto LABEL_123;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_124;
        }
        __int16 v53 = *(_WORD *)(a1 + 88) << 12;
        goto LABEL_99;
      case 2:
        if (!v34) {
          goto LABEL_85;
        }
        if ((*(_WORD *)(a1 + 88) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_124;
          }
          __int16 v53 = *(_WORD *)(a1 + 88) << 11;
          goto LABEL_99;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_124;
        }
        uint64_t v39 = objc_alloc_init(GEOPDTrailHeadTrailFactoidData);
        if (!GEOPDTrailHeadTrailFactoidDataReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1)) {
          goto LABEL_123;
        }
        PBReaderRecallMark();
        uint64_t v40 = 40;
        goto LABEL_84;
      case 3:
        if (!v34 || (*(_WORD *)(a1 + 88) & 0x40) != 0) {
          goto LABEL_85;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_124;
        }
        uint64_t v39 = objc_alloc_init(GEOPDMapsIdentifier);
        if (!GEOPDMapsIdentifierReadAllFrom((uint64_t)v39, (void *)v3)) {
          goto LABEL_123;
        }
        PBReaderRecallMark();
        -[GEOPDTrail _addNoFlagsMapsId:](a1, v39);
        goto LABEL_78;
      case 4:
        if (!v34) {
          goto LABEL_85;
        }
        if ((*(_WORD *)(a1 + 88) & 0x80) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_124;
          }
          __int16 v53 = *(_WORD *)(a1 + 88) << 8;
          goto LABEL_99;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_124;
        }
        uint64_t v39 = objc_alloc_init(GEOPDPhoto);
        if (!GEOPDPhotoReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1)) {
          goto LABEL_123;
        }
        PBReaderRecallMark();
        uint64_t v40 = 64;
        goto LABEL_84;
      case 5:
        if ((v8 & 1) == 0) {
          goto LABEL_85;
        }
        char v44 = 0;
        unsigned int v45 = 0;
        uint64_t v46 = 0;
        *(_WORD *)(a1 + 88) |= 1u;
        while (2)
        {
          uint64_t v47 = *v20;
          uint64_t v48 = *(void *)(v3 + v47);
          unint64_t v49 = v48 + 1;
          if (v48 == -1 || v49 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v50 = *(unsigned char *)(*(void *)(v3 + *v22) + v48);
            *(void *)(v3 + v47) = v49;
            v46 |= (unint64_t)(v50 & 0x7F) << v44;
            if (v50 < 0)
            {
              v44 += 7;
              BOOL v30 = v45++ >= 9;
              if (v30)
              {
                uint64_t v46 = 0;
                goto LABEL_90;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          uint64_t v46 = 0;
        }
LABEL_90:
        *(unsigned char *)(a1 + 84) = v46 != 0;
        goto LABEL_101;
      case 6:
        if (!v34 || (*(_WORD *)(a1 + 88) & 0x20) != 0) {
          goto LABEL_85;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_124;
        }
        uint64_t v39 = objc_alloc_init(GEOPDHours);
        if (!GEOPDHoursReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1)) {
          goto LABEL_123;
        }
        PBReaderRecallMark();
        -[GEOPDTrail _addNoFlagsHoursOfOperation:](a1, v39);
LABEL_78:

        goto LABEL_100;
      case 7:
        if (!v34) {
          goto LABEL_85;
        }
        if ((*(_WORD *)(a1 + 88) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_124;
          }
          __int16 v53 = *(_WORD *)(a1 + 88) << 13;
LABEL_99:
          v7 += v53 >> 15;
LABEL_100:
          uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
          uint64_t v22 = (int *)MEMORY[0x1E4F940B8];
          goto LABEL_101;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_124;
        }
        uint64_t v39 = objc_alloc_init(GEOPDBusinessHours);
        if (GEOPDBusinessHoursReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1))
        {
          PBReaderRecallMark();
          uint64_t v40 = 24;
LABEL_84:
          char v51 = *(void **)(a1 + v40);
          *(void *)(a1 + v40) = v39;

          --v7;
          goto LABEL_100;
        }
LABEL_123:

LABEL_124:
        int v58 = 0;
        char v59 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__flags;
        uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_104:
        if (v60) {
LABEL_105:
        }
          *(_WORD *)(a1 + v59[463]) |= 2u;
        if (v63 || (v58 & 1) == 0)
        {
          *(_WORD *)(a1 + v59[463]) |= 8u;
          *(_WORD *)(a1 + v59[463]) |= 0x10u;
          *(_WORD *)(a1 + v59[463]) |= 0x40u;
          *(_WORD *)(a1 + v59[463]) |= 0x80u;
          *(_WORD *)(a1 + v59[463]) |= 0x20u;
          *(_WORD *)(a1 + v59[463]) |= 4u;
        }
        else if (v19)
        {
          while (1)
          {
            int v55 = *v19++;
            __int16 v54 = 8;
            switch(v55)
            {
              case 0:
                goto LABEL_117;
              case 1:
                goto LABEL_115;
              case 2:
                __int16 v54 = 16;
                goto LABEL_115;
              case 3:
                __int16 v54 = 64;
                goto LABEL_115;
              case 4:
                __int16 v54 = 128;
                goto LABEL_115;
              case 6:
                __int16 v54 = 32;
                goto LABEL_115;
              case 7:
                __int16 v54 = 4;
LABEL_115:
                *(_WORD *)(a1 + v59[463]) |= v54;
                break;
              default:
                continue;
            }
          }
        }
LABEL_117:
        if (v58) {
          unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
        }
        else {
          unint64_t v3 = 0;
        }
        if (v63)
        {
          BOOL v56 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      default:
        if ((v60 & 1) == 0 || (*(_WORD *)(a1 + 88) & 2) != 0)
        {
LABEL_85:
          char v52 = PBReaderSkipValueWithTag();
          uint64_t v22 = (int *)MEMORY[0x1E4F940B8];
          uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
          if ((v52 & 1) == 0)
          {
            int v58 = 0;
LABEL_103:
            char v59 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__flags;
            goto LABEL_104;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v41 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            id v42 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v41;
          }
          int v43 = PBUnknownFieldAdd();
          uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
          uint64_t v22 = (int *)MEMORY[0x1E4F940B8];
          if (!v43)
          {
            int v58 = 0;
            char v59 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__flags;
            goto LABEL_105;
          }
        }
LABEL_101:
        if (!(v61 & 1 | (v7 != 0))) {
          goto LABEL_102;
        }
        continue;
    }
  }
}

void sub_189B53E78(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B53F88(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B541B4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B54304(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B54A38(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B54B2C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDTrailCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v22 = *MEMORY[0x1E4F143B8];
  [*(id *)(a1 + 32) readAll:1];
  long long v18 = 0u;
  long long v19 = 0u;
  long long v16 = 0u;
  long long v17 = 0u;
  id v2 = *(id *)(a1 + 56);
  uint64_t v3 = [v2 countByEnumeratingWithState:&v16 objects:v21 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v17;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v17 != v5) {
          objc_enumerationMutation(v2);
        }
        [*(id *)(*((void *)&v16 + 1) + 8 * v6++) readAll:1];
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v16 objects:v21 count:16];
    }
    while (v4);
  }

  -[GEOPDPhoto readAll:](*(void *)(a1 + 64), 1);
  long long v14 = 0u;
  long long v15 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  id v7 = *(id *)(a1 + 48);
  uint64_t v8 = [v7 countByEnumeratingWithState:&v12 objects:v20 count:16];
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)v13;
    do
    {
      uint64_t v11 = 0;
      do
      {
        if (*(void *)v13 != v10) {
          objc_enumerationMutation(v7);
        }
        objc_msgSend(*(id *)(*((void *)&v12 + 1) + 8 * v11++), "readAll:", 1, (void)v12);
      }
      while (v9 != v11);
      uint64_t v9 = [v7 countByEnumeratingWithState:&v12 objects:v20 count:16];
    }
    while (v9);
  }

  -[GEOPDBusinessHours readAll:](*(void *)(a1 + 24), 1);
}

unint64_t GEOPDTrailReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 76))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDTrailReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 80));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 72) = [v8 position];
  *(_DWORD *)(a1 + 76) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOPDTrailReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOPDTrailReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDTrailReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOPDTrailCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 80));
  return Specified;
}

void sub_189B54F70(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B55408(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B55798(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B55C54(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDTrailHeadReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  char v7 = 0;
  uint64_t v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  long long v12 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__flags;
  int v13 = ((*(unsigned __int8 *)(a1 + 60) >> 4) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 2) & 1);
  while (2)
  {
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    uint64_t v16 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v13;
        goto LABEL_8;
      case -3:
        char v7 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v15 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v17 = v13 != 0;
        int v18 = v17 & ~v11 | v9;
        int v19 = v17 | v11;
        if (((v17 | v11) | v7)) {
          uint64_t v20 = 0;
        }
        else {
          uint64_t v20 = a3;
        }
        uint64_t v21 = (int *)MEMORY[0x1E4F940E8];
        BOOL v22 = v8 != 0;
        int v23 = 1;
        if (*(void *)(v3 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(v3 + *v6)) {
          goto LABEL_88;
        }
        char v64 = v17 & ~(_BYTE)v11 | v9;
        int v66 = v22 | v19 | v18;
        char v67 = (v20 == 0) | v19;
        unsigned int v24 = (int *)MEMORY[0x1E4F940C8];
        unint64_t v25 = (int *)MEMORY[0x1E4F940B8];
        char v65 = v17 | v11;
        break;
      default:
        ++v13;
LABEL_7:
        uint64_t v14 = v9;
LABEL_8:
        uint64_t v15 = v10;
        uint64_t v16 = v11;
LABEL_10:
        ++v8;
        uint64_t v9 = v14;
        uint64_t v10 = v15;
        uint64_t v11 = v16;
        continue;
    }
    break;
  }
  while (!*(unsigned char *)(v3 + *v24))
  {
    char v26 = 0;
    unsigned int v27 = 0;
    unint64_t v28 = 0;
    while (1)
    {
      uint64_t v29 = *v21;
      uint64_t v30 = *(void *)(v3 + v29);
      unint64_t v31 = v30 + 1;
      if (v30 == -1 || v31 > *(void *)(v3 + *v6)) {
        break;
      }
      char v32 = *(unsigned char *)(*(void *)(v3 + *v25) + v30);
      *(void *)(v3 + v29) = v31;
      v28 |= (unint64_t)(v32 & 0x7F) << v26;
      if ((v32 & 0x80) == 0) {
        goto LABEL_25;
      }
      v26 += 7;
      BOOL v33 = v27++ >= 9;
      if (v33)
      {
        unint64_t v28 = 0;
        int v34 = *(unsigned __int8 *)(v3 + *v24);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v24) = 1;
LABEL_25:
    int v34 = *(unsigned __int8 *)(v3 + *v24);
    if (*(unsigned char *)(v3 + *v24)) {
      unint64_t v28 = 0;
    }
LABEL_27:
    if (v34 || (v28 & 7) == 4) {
      break;
    }
    unint64_t v36 = v28 >> 3;
    BOOL v37 = v19;
    if ((v67 & 1) == 0)
    {
      BOOL v38 = v20;
      do
      {
        int v40 = *v38++;
        int v39 = v40;
        BOOL v37 = v40 != 0;
        if (v40) {
          BOOL v41 = v39 == v36;
        }
        else {
          BOOL v41 = 1;
        }
      }
      while (!v41);
    }
    switch((int)v36)
    {
      case 1:
        if (!v37 || (*(unsigned char *)(a1 + 60) & 0x10) != 0) {
          goto LABEL_72;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_107;
        }
        id v42 = objc_alloc_init(GEOPDTrail);
        if (!GEOPDTrailReadAllFrom((uint64_t)v42, (void *)v3, v10 & 1)) {
          goto LABEL_106;
        }
        PBReaderRecallMark();
        -[GEOPDTrailHead _addNoFlagsTrail:](a1, v42);
        goto LABEL_55;
      case 2:
        if (!v37 || (*(unsigned char *)(a1 + 60) & 8) != 0) {
          goto LABEL_72;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_107;
        }
        id v42 = objc_alloc_init(GEOPDMapsIdentifier);
        if (!GEOPDMapsIdentifierReadAllFrom((uint64_t)v42, (void *)v3))
        {
LABEL_106:

LABEL_107:
          int v23 = 0;
          long long v12 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__flags;
          LOBYTE(v19) = v65;
          goto LABEL_87;
        }
        PBReaderRecallMark();
        -[GEOPDTrailHead _addNoFlagsMapsId:](a1, v42);
LABEL_55:

        LOBYTE(v19) = v65;
        unsigned int v24 = (int *)MEMORY[0x1E4F940C8];
        goto LABEL_83;
      case 3:
        if ((v7 & 1) == 0) {
          goto LABEL_72;
        }
        char v45 = 0;
        unsigned int v46 = 0;
        uint64_t v47 = 0;
        *(unsigned char *)(a1 + 60) |= 1u;
        while (2)
        {
          uint64_t v48 = *v21;
          uint64_t v49 = *(void *)(v3 + v48);
          unint64_t v50 = v49 + 1;
          if (v49 == -1 || v50 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v24) = 1;
          }
          else
          {
            char v51 = *(unsigned char *)(*(void *)(v3 + *v25) + v49);
            *(void *)(v3 + v48) = v50;
            v47 |= (unint64_t)(v51 & 0x7F) << v45;
            if (v51 < 0)
            {
              v45 += 7;
              BOOL v33 = v46++ >= 9;
              if (v33)
              {
                LODWORD(v47) = 0;
                goto LABEL_77;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v24)) {
          LODWORD(v47) = 0;
        }
LABEL_77:
        uint64_t v58 = 52;
        goto LABEL_82;
      case 4:
        if ((v7 & 1) == 0) {
          goto LABEL_72;
        }
        char v52 = 0;
        unsigned int v53 = 0;
        uint64_t v47 = 0;
        *(unsigned char *)(a1 + 60) |= 2u;
        while (2)
        {
          uint64_t v54 = *v21;
          uint64_t v55 = *(void *)(v3 + v54);
          unint64_t v56 = v55 + 1;
          if (v55 == -1 || v56 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v24) = 1;
          }
          else
          {
            char v57 = *(unsigned char *)(*(void *)(v3 + *v25) + v55);
            *(void *)(v3 + v54) = v56;
            v47 |= (unint64_t)(v57 & 0x7F) << v52;
            if (v57 < 0)
            {
              v52 += 7;
              BOOL v33 = v53++ >= 9;
              if (v33)
              {
                LODWORD(v47) = 0;
                goto LABEL_81;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v24)) {
          LODWORD(v47) = 0;
        }
LABEL_81:
        uint64_t v58 = 56;
LABEL_82:
        *(_DWORD *)(a1 + v58) = v47;
        goto LABEL_83;
      default:
        if ((v64 & 1) == 0 || (*(unsigned char *)(a1 + 60) & 4) != 0)
        {
LABEL_72:
          int v23 = PBReaderSkipValueWithTag();
          unsigned int v24 = (int *)MEMORY[0x1E4F940C8];
          LOBYTE(v19) = v65;
          if ((v23 & v66 & 1) == 0) {
            goto LABEL_86;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v43 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            char v44 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v43;
          }
          int v23 = PBUnknownFieldAdd();
          LOBYTE(v19) = v65;
          unsigned int v24 = (int *)MEMORY[0x1E4F940C8];
          if (!v23)
          {
            long long v12 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__flags;
            goto LABEL_89;
          }
LABEL_83:
          if ((v66 & 1) == 0) {
            goto LABEL_85;
          }
        }
        if (*(void *)(v3 + *v21) >= *(void *)(v3 + *v6)) {
          goto LABEL_85;
        }
        break;
    }
  }
LABEL_85:
  int v23 = 1;
LABEL_86:
  long long v12 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__flags;
LABEL_87:
  LOBYTE(v18) = v64;
LABEL_88:
  if (v18) {
LABEL_89:
  }
    *(unsigned char *)(a1 + v12[471]) |= 4u;
  if (!(v19 & 1 | ((v23 & 1) == 0)))
  {
    if (!v20) {
      goto LABEL_100;
    }
    while (1)
    {
      int v61 = *v20++;
      int v60 = v61;
      if (v61 == 1) {
        break;
      }
      if (v60 == 2)
      {
        char v59 = 8;
LABEL_96:
        *(unsigned char *)(a1 + v12[471]) |= v59;
      }
      else if (!v60)
      {
        goto LABEL_100;
      }
    }
    char v59 = 16;
    goto LABEL_96;
  }
  *(unsigned char *)(a1 + v12[471]) |= 0x10u;
  *(unsigned char *)(a1 + v12[471]) |= 8u;
LABEL_100:
  if (v23)
  {
    unint64_t v3 = *(unsigned char *)(v3 + (int)*MEMORY[0x1E4F940C8]) == 0;
    if ((v19 & 1) == 0) {
      return v3;
    }
    goto LABEL_104;
  }
  unint64_t v3 = 0;
  if (v19)
  {
LABEL_104:
    char v62 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_189B56548(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B56D00(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDTrailHeadCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v22 = *MEMORY[0x1E4F143B8];
  long long v16 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  id v2 = *(id *)(a1 + 32);
  uint64_t v3 = [v2 countByEnumeratingWithState:&v16 objects:v21 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v17;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v17 != v5) {
          objc_enumerationMutation(v2);
        }
        -[GEOPDTrail readAll:](*(void *)(*((void *)&v16 + 1) + 8 * v6++), 1);
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v16 objects:v21 count:16];
    }
    while (v4);
  }

  long long v14 = 0u;
  long long v15 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  id v7 = *(id *)(a1 + 24);
  uint64_t v8 = [v7 countByEnumeratingWithState:&v12 objects:v20 count:16];
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)v13;
    do
    {
      uint64_t v11 = 0;
      do
      {
        if (*(void *)v13 != v10) {
          objc_enumerationMutation(v7);
        }
        objc_msgSend(*(id *)(*((void *)&v12 + 1) + 8 * v11++), "readAll:", 1, (void)v12);
      }
      while (v9 != v11);
      uint64_t v9 = [v7 countByEnumeratingWithState:&v12 objects:v20 count:16];
    }
    while (v9);
  }
}

unint64_t GEOPDTrailHeadReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDTrailHeadReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOPDTrailHeadReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOPDTrailHeadReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDTrailHeadReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOPDTrailHeadCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_189B57108(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B5740C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B57740(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDTrailHeadFilterReadAllFrom(uint64_t a1, void *a2)
{
  uint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    uint64_t v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      id v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          char v18 = 0;
          unsigned int v19 = 0;
          uint64_t v20 = 0;
          *(unsigned char *)(a1 + 20) |= 1u;
          while (1)
          {
            uint64_t v21 = *v4;
            uint64_t v22 = *(void *)&v3[v21];
            unint64_t v23 = v22 + 1;
            if (v22 == -1 || v23 > *(void *)&v3[*v5]) {
              break;
            }
            char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
            *(void *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0) {
              goto LABEL_32;
            }
            v18 += 7;
            BOOL v15 = v19++ >= 9;
            if (v15)
            {
              LODWORD(v20) = 0;
              goto LABEL_34;
            }
          }
          v3[*v6] = 1;
LABEL_32:
          if (v3[*v6]) {
            LODWORD(v20) = 0;
          }
LABEL_34:
          *(_DWORD *)(a1 + 16) = v20;
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v25 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            char v26 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v25;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_37;
          }
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v27 = v3[*v6] == 0;
  }
  else
  {
LABEL_37:
    BOOL v27 = 0;
  }
  objc_sync_exit(v3);

  return v27;
}

void sub_189B57F2C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDTrailHeadTrailFactoidDataReadAllFrom(uint64_t a1, void *a2, int a3)
{
  uint64_t v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    uint64_t v6 = (int *)MEMORY[0x1E4F940E8];
    id v7 = (int *)MEMORY[0x1E4F940E0];
    char v8 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v5[*MEMORY[0x1E4F940E8]] < *(void *)&v5[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v9 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v5[*v8]) {
          break;
        }
        char v10 = 0;
        unsigned int v11 = 0;
        unint64_t v12 = 0;
        while (1)
        {
          uint64_t v13 = *v6;
          uint64_t v14 = *(void *)&v5[v13];
          unint64_t v15 = v14 + 1;
          if (v14 == -1 || v15 > *(void *)&v5[*v7]) {
            break;
          }
          char v16 = *(unsigned char *)(*(void *)&v5[*v9] + v14);
          *(void *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0) {
            goto LABEL_13;
          }
          v10 += 7;
          if (v11++ >= 9)
          {
            unint64_t v12 = 0;
            int v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        int v18 = v5[*v8];
        if (v5[*v8]) {
          unint64_t v12 = 0;
        }
LABEL_15:
        if (v18 || (v12 & 7) == 4) {
          break;
        }
        if ((v12 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_29;
          }
          uint64_t v20 = objc_alloc_init(GEOPDFactoid);
          if (!GEOPDFactoidReadAllFrom((uint64_t)v20, v5, a3))
          {

            goto LABEL_29;
          }
          PBReaderRecallMark();
          -[GEOPDTrailHeadTrailFactoidData addFactoid:](a1, v20);
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v21 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            uint64_t v22 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v21;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_29;
          }
        }
      }
      while (*(void *)&v5[*v6] < *(void *)&v5[*v7]);
    }
    BOOL v23 = v5[*v8] == 0;
  }
  else
  {
LABEL_29:
    BOOL v23 = 0;
  }
  objc_sync_exit(v5);

  return v23;
}

void sub_189B5882C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDTransitAssociatedInfoReadAllFrom(uint64_t a1, void *a2)
{
  uint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    uint64_t v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      id v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 2)
        {
          char v18 = 0;
          unsigned int v19 = 0;
          uint64_t v20 = 0;
          *(unsigned char *)(a1 + 24) |= 1u;
          while (1)
          {
            uint64_t v21 = *v4;
            uint64_t v22 = *(void *)&v3[v21];
            unint64_t v23 = v22 + 1;
            if (v22 == -1 || v23 > *(void *)&v3[*v5]) {
              break;
            }
            char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
            *(void *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0) {
              goto LABEL_32;
            }
            v18 += 7;
            BOOL v15 = v19++ >= 9;
            if (v15)
            {
              uint64_t v20 = 0;
              goto LABEL_34;
            }
          }
          v3[*v6] = 1;
LABEL_32:
          if (v3[*v6]) {
            uint64_t v20 = 0;
          }
LABEL_34:
          *(void *)(a1 + 16) = v20;
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v25 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            char v26 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v25;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_37;
          }
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v27 = v3[*v6] == 0;
  }
  else
  {
LABEL_37:
    BOOL v27 = 0;
  }
  objc_sync_exit(v3);

  return v27;
}

void sub_189B59134(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDTransitAssociatedInfoFilterReadAllFrom(uint64_t a1, void *a2)
{
  uint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    uint64_t v6 = (int *)MEMORY[0x1E4F940C8];
    id v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      int v8 = v3[*v6];
      if (*(void *)&v3[*v4] >= *(void *)&v3[*v5]) {
        break;
      }
      if (v3[*v6])
      {
        int v8 = 1;
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      uint64_t v11 = 0;
      while (1)
      {
        uint64_t v12 = *v4;
        uint64_t v13 = *(void *)&v3[v12];
        unint64_t v14 = v13 + 1;
        if (v13 == -1 || v14 > *(void *)&v3[*v5]) {
          break;
        }
        char v15 = *(unsigned char *)(*(void *)&v3[*v7] + v13);
        *(void *)&v3[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0) {
          goto LABEL_13;
        }
        v9 += 7;
        if (v10++ >= 9)
        {
          char v17 = 0;
          int v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      int v8 = v3[*v6];
      if (v3[*v6]) {
        char v17 = 0;
      }
      else {
        char v17 = v11;
      }
LABEL_16:
      if (v8) {
        BOOL v18 = 1;
      }
      else {
        BOOL v18 = (v17 & 7) == 4;
      }
      if (v18) {
        break;
      }
      if (!*(void *)(a1 + 8))
      {
        id v19 = objc_alloc_init(MEMORY[0x1E4F940B0]);
        uint64_t v20 = *(void **)(a1 + 8);
        *(void *)(a1 + 8) = v19;
      }
      if ((PBUnknownFieldAdd() & 1) == 0) {
        goto LABEL_23;
      }
    }
    BOOL v21 = v8 == 0;
  }
  else
  {
LABEL_23:
    BOOL v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_189B59794(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDTransitAttributionReadAllFrom(uint64_t a1, void *a2)
{
  uint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    uint64_t v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      id v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          BOOL v18 = PBReaderReadString();
          if (v18) {
            -[GEOPDTransitAttribution addProviderName:](a1, v18);
          }
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v19 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            uint64_t v20 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v19;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_28;
          }
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v21 = v3[*v6] == 0;
  }
  else
  {
LABEL_28:
    BOOL v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_189B59E14(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDTransitAttributionFilterReadAllFrom(uint64_t a1, void *a2)
{
  uint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    uint64_t v6 = (int *)MEMORY[0x1E4F940C8];
    id v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      int v8 = v3[*v6];
      if (*(void *)&v3[*v4] >= *(void *)&v3[*v5]) {
        break;
      }
      if (v3[*v6])
      {
        int v8 = 1;
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      uint64_t v11 = 0;
      while (1)
      {
        uint64_t v12 = *v4;
        uint64_t v13 = *(void *)&v3[v12];
        unint64_t v14 = v13 + 1;
        if (v13 == -1 || v14 > *(void *)&v3[*v5]) {
          break;
        }
        char v15 = *(unsigned char *)(*(void *)&v3[*v7] + v13);
        *(void *)&v3[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0) {
          goto LABEL_13;
        }
        v9 += 7;
        if (v10++ >= 9)
        {
          char v17 = 0;
          int v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      int v8 = v3[*v6];
      if (v3[*v6]) {
        char v17 = 0;
      }
      else {
        char v17 = v11;
      }
LABEL_16:
      if (v8) {
        BOOL v18 = 1;
      }
      else {
        BOOL v18 = (v17 & 7) == 4;
      }
      if (v18) {
        break;
      }
      if (!*(void *)(a1 + 8))
      {
        id v19 = objc_alloc_init(MEMORY[0x1E4F940B0]);
        uint64_t v20 = *(void **)(a1 + 8);
        *(void *)(a1 + 8) = v19;
      }
      if ((PBUnknownFieldAdd() & 1) == 0) {
        goto LABEL_23;
      }
    }
    BOOL v21 = v8 == 0;
  }
  else
  {
LABEL_23:
    BOOL v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_189B5A5EC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B5A840(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDTransitConnectionReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 60);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 56)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  unsigned int v12 = vaddv_s16((int16x4_t)(*(void *)&vshl_u16((uint16x4_t)(*(void *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 68)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFFFFFDFFFCFFFELL) & 0xFF01FF01FF01FF01));
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 > 1;
        char v17 = v16 & ~(_BYTE)v11 | v9;
        unsigned __int8 v18 = v16 | v11;
        char v64 = v17;
        char v65 = v18 | v17;
        if ((v18 | v8)) {
          id v19 = 0;
        }
        else {
          id v19 = a3;
        }
        char v66 = (v19 == 0) | v18;
        BOOL v67 = v18;
        uint64_t v20 = (int *)MEMORY[0x1E4F940E8];
        BOOL v21 = (int *)MEMORY[0x1E4F940C8];
        uint64_t v22 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v9;
LABEL_8:
        uint64_t v14 = v10;
        uint64_t v15 = v11;
LABEL_10:
        ++v7;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v21)) {
      goto LABEL_80;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      BOOL v30 = v24++ >= 9;
      if (v30)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_25:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_80:
      int v62 = 1;
LABEL_81:
      BOOL v63 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__flags;
      goto LABEL_82;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v67;
    if ((v66 & 1) == 0)
    {
      BOOL v35 = v19;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    switch((int)v33)
    {
      case 1:
        if ((v8 & 1) == 0) {
          goto LABEL_67;
        }
        char v39 = 0;
        unsigned int v40 = 0;
        uint64_t v41 = 0;
        *(unsigned char *)(a1 + 68) |= 1u;
        uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
        while (1)
        {
          uint64_t v42 = *v20;
          uint64_t v43 = *(void *)(v3 + v42);
          unint64_t v44 = v43 + 1;
          if (v43 == -1 || v44 > *(void *)(v3 + *v6)) {
            break;
          }
          char v45 = *(unsigned char *)(*(void *)(v3 + *v22) + v43);
          *(void *)(v3 + v42) = v44;
          v41 |= (unint64_t)(v45 & 0x7F) << v39;
          if ((v45 & 0x80) == 0) {
            goto LABEL_71;
          }
          v39 += 7;
          BOOL v30 = v40++ >= 9;
          if (v30)
          {
            uint64_t v41 = 0;
            goto LABEL_73;
          }
        }
        *(unsigned char *)(v3 + *v21) = 1;
LABEL_71:
        if (*(unsigned char *)(v3 + *v21)) {
          uint64_t v41 = 0;
        }
LABEL_73:
        *(void *)(a1 + 40) = v41;
        goto LABEL_68;
      case 3:
        if (!v34 || (*(unsigned char *)(a1 + 68) & 0x10) != 0) {
          goto LABEL_67;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_99;
        }
        uint64_t v49 = objc_alloc_init(GEOPDTransitLabel);
        if (!GEOPDTransitLabelReadAllFrom((uint64_t)v49, (void *)v3, v10 & 1)) {
          goto LABEL_98;
        }
        PBReaderRecallMark();
        -[GEOPDTransitConnection _addNoFlagsTransitLabel:](a1, v49);

        goto LABEL_61;
      case 4:
        if (!v34) {
          goto LABEL_67;
        }
        if ((*(unsigned char *)(a1 + 68) & 4) == 0)
        {
          uint64_t v50 = PBReaderReadString();
          char v51 = *(void **)(a1 + 24);
          *(void *)(a1 + 24) = v50;

          --v7;
LABEL_61:
          BOOL v21 = (int *)MEMORY[0x1E4F940C8];
          uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
          goto LABEL_68;
        }
        char v55 = PBReaderSkipValueWithTag();
        uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
        if ((v55 & 1) == 0) {
          goto LABEL_99;
        }
        char v56 = 32 * *(unsigned char *)(a1 + 68);
        goto LABEL_78;
      case 5:
        if (!v34) {
          goto LABEL_67;
        }
        if ((*(unsigned char *)(a1 + 68) & 8) != 0)
        {
          char v57 = PBReaderSkipValueWithTag();
          uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
          if ((v57 & 1) == 0) {
            goto LABEL_99;
          }
          char v56 = 16 * *(unsigned char *)(a1 + 68);
LABEL_78:
          v7 += v56 >> 7;
          goto LABEL_79;
        }
        char v52 = PBReaderPlaceMark();
        uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
        if ((v52 & 1) == 0) {
          goto LABEL_99;
        }
        uint64_t v49 = objc_alloc_init(GEOPDMapsIdentifier);
        if (GEOPDMapsIdentifierReadAllFrom((uint64_t)v49, (void *)v3))
        {
          PBReaderRecallMark();
          unsigned int v53 = *(void **)(a1 + 32);
          *(void *)(a1 + 32) = v49;

          --v7;
LABEL_79:
          BOOL v21 = (int *)MEMORY[0x1E4F940C8];
          goto LABEL_68;
        }
LABEL_98:

LABEL_99:
        int v62 = 0;
        BOOL v63 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__flags;
        BOOL v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_82:
        if (v64) {
LABEL_83:
        }
          *(unsigned char *)(a1 + v63[482]) |= 2u;
        if (v67 || (v62 & 1) == 0)
        {
          *(unsigned char *)(a1 + v63[482]) |= 0x10u;
          *(unsigned char *)(a1 + v63[482]) |= 4u;
          *(unsigned char *)(a1 + v63[482]) |= 8u;
        }
        else if (v19)
        {
          while (1)
          {
            int v58 = *v19++;
            char v59 = 16;
            switch(v58)
            {
              case 0:
                goto LABEL_91;
              case 3:
                goto LABEL_90;
              case 4:
                char v59 = 4;
                goto LABEL_90;
              case 5:
                char v59 = 8;
LABEL_90:
                *(unsigned char *)(a1 + v63[482]) |= v59;
                break;
              default:
                continue;
            }
          }
        }
LABEL_91:
        if (v62) {
          unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
        }
        else {
          unint64_t v3 = 0;
        }
        if (v67)
        {
          int v60 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      default:
        if ((v64 & 1) == 0 || (*(unsigned char *)(a1 + 68) & 2) != 0)
        {
LABEL_67:
          char v54 = PBReaderSkipValueWithTag();
          BOOL v21 = (int *)MEMORY[0x1E4F940C8];
          uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
          if ((v54 & 1) == 0)
          {
            int v62 = 0;
            goto LABEL_81;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v46 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            uint64_t v47 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v46;
          }
          int v48 = PBUnknownFieldAdd();
          BOOL v21 = (int *)MEMORY[0x1E4F940C8];
          uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
          if (!v48)
          {
            int v62 = 0;
            BOOL v63 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__flags;
            goto LABEL_83;
          }
        }
LABEL_68:
        if (!(v65 & 1 | (v7 != 0))) {
          goto LABEL_80;
        }
        continue;
    }
  }
}

void sub_189B5B1B0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B5B2C0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B5B820(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDTransitConnectionCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v13 = *MEMORY[0x1E4F143B8];
  long long v8 = 0u;
  long long v9 = 0u;
  long long v10 = 0u;
  long long v11 = 0u;
  id v2 = *(id *)(a1 + 48);
  uint64_t v3 = [v2 countByEnumeratingWithState:&v8 objects:v12 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v9;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v9 != v5) {
          objc_enumerationMutation(v2);
        }
        objc_msgSend(*(id *)(*((void *)&v8 + 1) + 8 * v6++), "readAll:", 1, (void)v8);
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v8 objects:v12 count:16];
    }
    while (v4);
  }

  return [*(id *)(a1 + 32) readAll:1];
}

unint64_t GEOPDTransitConnectionReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 60))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDTransitConnectionReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)long long v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = [v8 position];
  *(_DWORD *)(a1 + 60) = [v8 length];
  if (a3) {
    long long v9 = (int *)&GEOPDTransitConnectionReadAllFrom_recursiveTag;
  }
  else {
    long long v9 = (int *)&GEOPDTransitConnectionReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDTransitConnectionReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOPDTransitConnectionCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_189B5BBA4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B5BE24(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B5C0C8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDTransitIncidentReadAllFrom(uint64_t a1, void *a2, int a3)
{
  uint64_t v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    uint64_t v6 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v7 = (int *)MEMORY[0x1E4F940E0];
    id v8 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v5[*MEMORY[0x1E4F940E8]] < *(void *)&v5[*MEMORY[0x1E4F940E0]])
    {
      long long v9 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v5[*v8]) {
          break;
        }
        char v10 = 0;
        unsigned int v11 = 0;
        unint64_t v12 = 0;
        while (1)
        {
          uint64_t v13 = *v6;
          uint64_t v14 = *(void *)&v5[v13];
          unint64_t v15 = v14 + 1;
          if (v14 == -1 || v15 > *(void *)&v5[*v7]) {
            break;
          }
          char v16 = *(unsigned char *)(*(void *)&v5[*v9] + v14);
          *(void *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0) {
            goto LABEL_13;
          }
          v10 += 7;
          if (v11++ >= 9)
          {
            unint64_t v12 = 0;
            int v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        int v18 = v5[*v8];
        if (v5[*v8]) {
          unint64_t v12 = 0;
        }
LABEL_15:
        if (v18 || (v12 & 7) == 4) {
          break;
        }
        if ((v12 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_29;
          }
          uint64_t v20 = objc_alloc_init(GEOPBTransitIncident);
          if (!GEOPBTransitIncidentReadAllFrom((uint64_t)v20, v5, a3))
          {

            goto LABEL_29;
          }
          PBReaderRecallMark();
          -[GEOPDTransitIncident addTransitIncident:](a1, v20);
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v21 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            uint64_t v22 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v21;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_29;
          }
        }
      }
      while (*(void *)&v5[*v6] < *(void *)&v5[*v7]);
    }
    BOOL v23 = v5[*v8] == 0;
  }
  else
  {
LABEL_29:
    BOOL v23 = 0;
  }
  objc_sync_exit(v5);

  return v23;
}

void sub_189B5CA34(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDTransitIncidentFilterReadAllFrom(uint64_t a1, void *a2)
{
  uint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    uint64_t v6 = (int *)MEMORY[0x1E4F940C8];
    uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      int v8 = v3[*v6];
      if (*(void *)&v3[*v4] >= *(void *)&v3[*v5]) {
        break;
      }
      if (v3[*v6])
      {
        int v8 = 1;
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      uint64_t v11 = 0;
      while (1)
      {
        uint64_t v12 = *v4;
        uint64_t v13 = *(void *)&v3[v12];
        unint64_t v14 = v13 + 1;
        if (v13 == -1 || v14 > *(void *)&v3[*v5]) {
          break;
        }
        char v15 = *(unsigned char *)(*(void *)&v3[*v7] + v13);
        *(void *)&v3[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0) {
          goto LABEL_13;
        }
        v9 += 7;
        if (v10++ >= 9)
        {
          char v17 = 0;
          int v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      int v8 = v3[*v6];
      if (v3[*v6]) {
        char v17 = 0;
      }
      else {
        char v17 = v11;
      }
LABEL_16:
      if (v8) {
        BOOL v18 = 1;
      }
      else {
        BOOL v18 = (v17 & 7) == 4;
      }
      if (v18) {
        break;
      }
      if (!*(void *)(a1 + 8))
      {
        id v19 = objc_alloc_init(MEMORY[0x1E4F940B0]);
        uint64_t v20 = *(void **)(a1 + 8);
        *(void *)(a1 + 8) = v19;
      }
      if ((PBUnknownFieldAdd() & 1) == 0) {
        goto LABEL_23;
      }
    }
    BOOL v21 = v8 == 0;
  }
  else
  {
LABEL_23:
    BOOL v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_189B5D210(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B5D464(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDTransitInfoReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 112));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 108);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 104)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  unsigned int v12 = ((*(unsigned __int16 *)(a1 + 116) >> 5) & 1)
      + ((*(unsigned __int16 *)(a1 + 116) >> 6) & 1)
      + ((*(unsigned __int16 *)(a1 + 116) >> 1) & 1)
      + (unsigned __int16)(vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int16 *)(a1 + 116)), (uint16x4_t)0xFFF7FFFEFFFDFFF9), (int8x8_t)0x1000100010001))+ ((*(_WORD *)(a1 + 116) >> 4) & 1)+ ((*(_WORD *)(a1 + 116) >> 10) & 1)+ (HIBYTE(*(_WORD *)(a1 + 116)) & 1));
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 > 6;
        char v17 = v16 & ~(_BYTE)v11 | v9;
        unsigned __int8 v18 = v16 | v11;
        char v66 = v17;
        char v67 = v18 | v17;
        if ((v18 | v8)) {
          id v19 = 0;
        }
        else {
          id v19 = a3;
        }
        char v68 = (v19 == 0) | v18;
        BOOL v69 = v18;
        uint64_t v20 = (int *)MEMORY[0x1E4F940E8];
        BOOL v21 = (int *)MEMORY[0x1E4F940C8];
        uint64_t v22 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v9;
LABEL_8:
        uint64_t v14 = v10;
        uint64_t v15 = v11;
LABEL_10:
        ++v7;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v21)) {
      goto LABEL_113;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      BOOL v30 = v24++ >= 9;
      if (v30)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_25:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_113:
      int v65 = 1;
      goto LABEL_114;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v69;
    if ((v68 & 1) == 0)
    {
      BOOL v35 = v19;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    switch((int)v33)
    {
      case 1:
        if (!v34 || (*(_WORD *)(a1 + 116) & 8) != 0) {
          goto LABEL_95;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_136;
        }
        char v39 = objc_alloc_init(GEOPBTransitLine);
        if (!GEOPBTransitLineReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1)) {
          goto LABEL_135;
        }
        PBReaderRecallMark();
        -[GEOPDTransitInfo _addNoFlagsLine:](a1, v39);
        goto LABEL_93;
      case 2:
        if (!v34 || (*(_WORD *)(a1 + 116) & 0x80) != 0) {
          goto LABEL_95;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_136;
        }
        char v39 = objc_alloc_init(GEOPBTransitSystem);
        if (!GEOPBTransitSystemReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1)) {
          goto LABEL_135;
        }
        PBReaderRecallMark();
        -[GEOPDTransitInfo _addNoFlagsSystem:](a1, v39);
        goto LABEL_93;
      case 9:
        if (!v34 || (*(_WORD *)(a1 + 116) & 4) != 0) {
          goto LABEL_95;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_136;
        }
        char v39 = objc_alloc_init(GEOPDTransitLabel);
        if (!GEOPDTransitLabelReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1)) {
          goto LABEL_135;
        }
        PBReaderRecallMark();
        -[GEOPDTransitInfo _addNoFlagsLabel:](a1, v39);
        goto LABEL_93;
      case 10:
        if (!v34 || (*(_WORD *)(a1 + 116) & 0x200) != 0) {
          goto LABEL_95;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_136;
        }
        char v39 = objc_alloc_init(GEOPDTransitConnection);
        if (!GEOPDTransitConnectionReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1)) {
          goto LABEL_135;
        }
        PBReaderRecallMark();
        -[GEOPDTransitInfo _addNoFlagsTransitConnection:](a1, v39);
        goto LABEL_93;
      case 11:
        if (!v34) {
          goto LABEL_95;
        }
        if ((*(_WORD *)(a1 + 116) & 0x10) == 0)
        {
          uint64_t v43 = PBReaderReadString();
          uint64_t v44 = 40;
          goto LABEL_79;
        }
        char v56 = PBReaderSkipValueWithTag();
        uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
        if ((v56 & 1) == 0) {
          goto LABEL_136;
        }
        __int16 v57 = *(_WORD *)(a1 + 116) << 11;
        goto LABEL_109;
      case 12:
        if (!v34) {
          goto LABEL_95;
        }
        if ((*(_WORD *)(a1 + 116) & 0x400) != 0)
        {
          char v58 = PBReaderSkipValueWithTag();
          uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
          if ((v58 & 1) == 0) {
            goto LABEL_136;
          }
          __int16 v57 = 32 * *(_WORD *)(a1 + 116);
LABEL_109:
          v7 += v57 >> 15;
          goto LABEL_110;
        }
        char v45 = PBReaderPlaceMark();
        uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
        if ((v45 & 1) == 0) {
          goto LABEL_136;
        }
        char v39 = objc_alloc_init(GEOPDMapsIdentifier);
        if (GEOPDMapsIdentifierReadAllFrom((uint64_t)v39, (void *)v3))
        {
          PBReaderRecallMark();
          id v46 = *(void **)(a1 + 96);
          *(void *)(a1 + 96) = v39;

          --v7;
LABEL_110:
          BOOL v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_111:
          uint64_t v22 = (int *)MEMORY[0x1E4F940B8];
LABEL_112:
          if (!(v67 & 1 | (v7 != 0))) {
            goto LABEL_113;
          }
          continue;
        }
LABEL_135:

LABEL_136:
        int v65 = 0;
        BOOL v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_114:
        if (v66) {
LABEL_115:
        }
          *(_WORD *)(a1 + 116) |= 2u;
        if (v69 || (v65 & 1) == 0)
        {
          *(_WORD *)(a1 + 116) |= 8u;
          *(_WORD *)(a1 + 116) |= 0x80u;
          *(_WORD *)(a1 + 116) |= 4u;
          *(_WORD *)(a1 + 116) |= 0x200u;
          *(_WORD *)(a1 + 116) |= 0x10u;
          *(_WORD *)(a1 + 116) |= 0x400u;
          *(_WORD *)(a1 + 116) |= 0x100u;
          *(_WORD *)(a1 + 116) |= 0x40u;
          *(_WORD *)(a1 + 116) |= 0x20u;
        }
        else if (v19)
        {
          while (1)
          {
            int v61 = *v19++;
            __int16 v62 = 8;
            switch(v61)
            {
              case 0:
                goto LABEL_129;
              case 1:
                goto LABEL_128;
              case 2:
                __int16 v62 = 128;
                goto LABEL_128;
              case 9:
                __int16 v62 = 4;
                goto LABEL_128;
              case 10:
                __int16 v62 = 512;
                goto LABEL_128;
              case 11:
                __int16 v62 = 16;
                goto LABEL_128;
              case 12:
                __int16 v62 = 1024;
                goto LABEL_128;
              case 13:
                __int16 v62 = 256;
                goto LABEL_128;
              case 14:
                __int16 v62 = 64;
                goto LABEL_128;
              case 16:
                __int16 v62 = 32;
LABEL_128:
                *(_WORD *)(a1 + 116) |= v62;
                break;
              default:
                continue;
            }
          }
        }
LABEL_129:
        if (v65) {
          unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
        }
        else {
          unint64_t v3 = 0;
        }
        if (v69)
        {
          BOOL v63 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      case 13:
        if (!v34) {
          goto LABEL_95;
        }
        if ((*(_WORD *)(a1 + 116) & 0x100) == 0)
        {
          uint64_t v43 = PBReaderReadString();
          uint64_t v44 = 72;
          goto LABEL_79;
        }
        char v59 = PBReaderSkipValueWithTag();
        uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
        if ((v59 & 1) == 0) {
          goto LABEL_136;
        }
        __int16 v57 = *(_WORD *)(a1 + 116) << 7;
        goto LABEL_109;
      case 14:
        if (!v34) {
          goto LABEL_95;
        }
        if ((*(_WORD *)(a1 + 116) & 0x40) == 0)
        {
          uint64_t v43 = PBReaderReadString();
          uint64_t v44 = 56;
LABEL_79:
          uint64_t v47 = *(void **)(a1 + v44);
          *(void *)(a1 + v44) = v43;

          --v7;
LABEL_94:
          BOOL v21 = (int *)MEMORY[0x1E4F940C8];
          uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
          goto LABEL_111;
        }
        char v60 = PBReaderSkipValueWithTag();
        uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
        if ((v60 & 1) == 0) {
          goto LABEL_136;
        }
        __int16 v57 = *(_WORD *)(a1 + 116) << 9;
        goto LABEL_109;
      case 15:
        if ((v8 & 1) == 0) {
          goto LABEL_95;
        }
        char v48 = 0;
        unsigned int v49 = 0;
        uint64_t v50 = 0;
        *(_WORD *)(a1 + 116) |= 1u;
        uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
        while (2)
        {
          uint64_t v51 = *v20;
          uint64_t v52 = *(void *)(v3 + v51);
          unint64_t v53 = v52 + 1;
          if (v52 == -1 || v53 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v54 = *(unsigned char *)(*(void *)(v3 + *v22) + v52);
            *(void *)(v3 + v51) = v53;
            v50 |= (unint64_t)(v54 & 0x7F) << v48;
            if (v54 < 0)
            {
              v48 += 7;
              BOOL v30 = v49++ >= 9;
              if (v30)
              {
                uint64_t v50 = 0;
                goto LABEL_100;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          uint64_t v50 = 0;
        }
LABEL_100:
        *(void *)(a1 + 88) = v50;
        goto LABEL_112;
      case 16:
        if (!v34 || (*(_WORD *)(a1 + 116) & 0x20) != 0) {
          goto LABEL_95;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_136;
        }
        char v39 = objc_alloc_init(GEOPDStopInfo);
        if (!GEOPDStopInfoReadAllFrom((uint64_t)v39, (void *)v3)) {
          goto LABEL_135;
        }
        PBReaderRecallMark();
        -[GEOPDTransitInfo _addNoFlagsStopInfo:](a1, v39);
LABEL_93:

        goto LABEL_94;
      default:
        if ((v66 & 1) == 0 || (*(_WORD *)(a1 + 116) & 2) != 0)
        {
LABEL_95:
          char v55 = PBReaderSkipValueWithTag();
          uint64_t v22 = (int *)MEMORY[0x1E4F940B8];
          BOOL v21 = (int *)MEMORY[0x1E4F940C8];
          uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
          if ((v55 & 1) == 0)
          {
            int v65 = 0;
            goto LABEL_114;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v40 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            uint64_t v41 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v40;
          }
          int v42 = PBUnknownFieldAdd();
          BOOL v21 = (int *)MEMORY[0x1E4F940C8];
          uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
          uint64_t v22 = (int *)MEMORY[0x1E4F940B8];
          if (!v42)
          {
            int v65 = 0;
            goto LABEL_115;
          }
        }
        goto LABEL_112;
    }
  }
}

void sub_189B5E198(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B5E3C4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B5E5F0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B5E81C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B5E918(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B5E9E0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B5EAF0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B5EC00(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B5F758(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDTransitInfoCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  uint64_t v51 = *MEMORY[0x1E4F143B8];
  long long v42 = 0u;
  long long v43 = 0u;
  long long v44 = 0u;
  long long v45 = 0u;
  id v2 = a1[4];
  uint64_t v3 = [v2 countByEnumeratingWithState:&v42 objects:v50 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v43;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v43 != v5) {
          objc_enumerationMutation(v2);
        }
        [*(id *)(*((void *)&v42 + 1) + 8 * v6++) readAll:1];
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v42 objects:v50 count:16];
    }
    while (v4);
  }

  long long v40 = 0u;
  long long v41 = 0u;
  long long v38 = 0u;
  long long v39 = 0u;
  id v7 = a1[8];
  uint64_t v8 = [v7 countByEnumeratingWithState:&v38 objects:v49 count:16];
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)v39;
    do
    {
      uint64_t v11 = 0;
      do
      {
        if (*(void *)v39 != v10) {
          objc_enumerationMutation(v7);
        }
        [*(id *)(*((void *)&v38 + 1) + 8 * v11++) readAll:1];
      }
      while (v9 != v11);
      uint64_t v9 = [v7 countByEnumeratingWithState:&v38 objects:v49 count:16];
    }
    while (v9);
  }

  long long v36 = 0u;
  long long v37 = 0u;
  long long v34 = 0u;
  long long v35 = 0u;
  id v12 = a1[3];
  uint64_t v13 = [v12 countByEnumeratingWithState:&v34 objects:v48 count:16];
  if (v13)
  {
    uint64_t v14 = v13;
    uint64_t v15 = *(void *)v35;
    do
    {
      uint64_t v16 = 0;
      do
      {
        if (*(void *)v35 != v15) {
          objc_enumerationMutation(v12);
        }
        [*(id *)(*((void *)&v34 + 1) + 8 * v16++) readAll:1];
      }
      while (v14 != v16);
      uint64_t v14 = [v12 countByEnumeratingWithState:&v34 objects:v48 count:16];
    }
    while (v14);
  }

  long long v32 = 0u;
  long long v33 = 0u;
  long long v30 = 0u;
  long long v31 = 0u;
  id v17 = a1[10];
  uint64_t v18 = [v17 countByEnumeratingWithState:&v30 objects:v47 count:16];
  if (v18)
  {
    uint64_t v19 = v18;
    uint64_t v20 = *(void *)v31;
    do
    {
      uint64_t v21 = 0;
      do
      {
        if (*(void *)v31 != v20) {
          objc_enumerationMutation(v17);
        }
        -[GEOPDTransitConnection readAll:](*(void *)(*((void *)&v30 + 1) + 8 * v21++), 1);
      }
      while (v19 != v21);
      uint64_t v19 = [v17 countByEnumeratingWithState:&v30 objects:v47 count:16];
    }
    while (v19);
  }

  [a1[12] readAll:1];
  long long v28 = 0u;
  long long v29 = 0u;
  long long v26 = 0u;
  long long v27 = 0u;
  id v22 = a1[6];
  uint64_t v23 = [v22 countByEnumeratingWithState:&v26 objects:v46 count:16];
  if (v23)
  {
    uint64_t v24 = v23;
    uint64_t v25 = *(void *)v27;
    while (1)
    {
      if (*(void *)v27 != v25) {
        objc_enumerationMutation(v22);
      }
      if (!--v24)
      {
        uint64_t v24 = [v22 countByEnumeratingWithState:&v26 objects:v46 count:16];
        if (!v24) {
          break;
        }
      }
    }
  }
}

unint64_t GEOPDTransitInfoReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 108))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDTransitInfoReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 112));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 104) = [v8 position];
  *(_DWORD *)(a1 + 108) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOPDTransitInfoReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOPDTransitInfoReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDTransitInfoReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOPDTransitInfoCallReadAllRecursiveWithoutSynchronized((id *)a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 112));
  return Specified;
}

void sub_189B5FD24(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B604B8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B60A4C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDTransitInfoFilterReadAllFrom(uint64_t a1, void *a2)
{
  uint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    uint64_t v6 = (int *)MEMORY[0x1E4F940C8];
    id v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      int v8 = v3[*v6];
      if (*(void *)&v3[*v4] >= *(void *)&v3[*v5]) {
        break;
      }
      if (v3[*v6])
      {
        int v8 = 1;
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      uint64_t v11 = 0;
      while (1)
      {
        uint64_t v12 = *v4;
        uint64_t v13 = *(void *)&v3[v12];
        unint64_t v14 = v13 + 1;
        if (v13 == -1 || v14 > *(void *)&v3[*v5]) {
          break;
        }
        char v15 = *(unsigned char *)(*(void *)&v3[*v7] + v13);
        *(void *)&v3[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0) {
          goto LABEL_13;
        }
        v9 += 7;
        if (v10++ >= 9)
        {
          char v17 = 0;
          int v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      int v8 = v3[*v6];
      if (v3[*v6]) {
        char v17 = 0;
      }
      else {
        char v17 = v11;
      }
LABEL_16:
      if (v8) {
        BOOL v18 = 1;
      }
      else {
        BOOL v18 = (v17 & 7) == 4;
      }
      if (v18) {
        break;
      }
      if (!*(void *)(a1 + 8))
      {
        id v19 = objc_alloc_init(MEMORY[0x1E4F940B0]);
        uint64_t v20 = *(void **)(a1 + 8);
        *(void *)(a1 + 8) = v19;
      }
      if ((PBUnknownFieldAdd() & 1) == 0) {
        goto LABEL_23;
      }
    }
    BOOL v21 = v8 == 0;
  }
  else
  {
LABEL_23:
    BOOL v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_189B612E0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B61534(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDTransitInfoSnippetReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 104));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 100);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 96)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  unsigned int v12 = ((*(unsigned __int16 *)(a1 + 112) >> 2) & 1)
      + ((*(unsigned __int16 *)(a1 + 112) >> 7) & 1)
      + (unsigned __int16)(vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int16 *)(a1 + 112)), (uint16x4_t)0xFFFCFFFBFFF8FFFDLL), (int8x8_t)0x1000100010001))+ ((*(_WORD *)(a1 + 112) >> 9) & 1)+ ((*(_WORD *)(a1 + 112) >> 10) & 1)+ ((*(_WORD *)(a1 + 112) >> 6) & 1));
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 > 5;
        char v17 = v16 & ~(_BYTE)v11 | v9;
        unsigned __int8 v18 = v16 | v11;
        char v69 = v17;
        char v70 = v18 | v17;
        char v68 = v8;
        if ((v18 | v8)) {
          id v19 = 0;
        }
        else {
          id v19 = a3;
        }
        uint64_t v20 = (int *)MEMORY[0x1E4F940E8];
        BOOL v21 = (int *)MEMORY[0x1E4F940C8];
        char v71 = (v19 == 0) | v18;
        BOOL v72 = v18;
        id v22 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v9;
LABEL_8:
        uint64_t v14 = v10;
        uint64_t v15 = v11;
LABEL_10:
        ++v7;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v21)) {
      goto LABEL_123;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      BOOL v30 = v24++ >= 9;
      if (v30)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_25:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_123:
      int v67 = 1;
      goto LABEL_124;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v72;
    if ((v71 & 1) == 0)
    {
      long long v35 = v19;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    switch((int)v33)
    {
      case 1:
        if (!v34 || (*(_WORD *)(a1 + 112) & 0x100) != 0) {
          goto LABEL_100;
        }
        PBReaderReadString();
        long long v39 = (GEOPBTransitArtwork *)objc_claimAutoreleasedReturnValue();
        if (v39) {
          -[GEOPDTransitInfoSnippet _addNoFlagsSystemName:](a1, v39);
        }
        goto LABEL_62;
      case 2:
        if (!v34 || (*(_WORD *)(a1 + 112) & 8) != 0) {
          goto LABEL_100;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_145;
        }
        long long v39 = objc_alloc_init(GEOPBTransitArtwork);
        if (!GEOPBTransitArtworkReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1)) {
          goto LABEL_144;
        }
        PBReaderRecallMark();
        -[GEOPDTransitInfoSnippet _addNoFlagsArtwork:](a1, v39);
        goto LABEL_62;
      case 3:
        if (!v34) {
          goto LABEL_100;
        }
        if ((*(_WORD *)(a1 + 112) & 0x20) == 0)
        {
          uint64_t v43 = PBReaderReadString();
          uint64_t v44 = 40;
          goto LABEL_79;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_145;
        }
        __int16 v62 = *(_WORD *)(a1 + 112) << 10;
        goto LABEL_120;
      case 4:
        if (!v34 || (*(_WORD *)(a1 + 112) & 0x10) != 0) {
          goto LABEL_100;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_145;
        }
        long long v39 = objc_alloc_init(GEOPDTransitLabel);
        if (!GEOPDTransitLabelReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1)) {
          goto LABEL_144;
        }
        PBReaderRecallMark();
        -[GEOPDTransitInfoSnippet _addNoFlagsLabel:](a1, v39);
LABEL_62:

        goto LABEL_121;
      case 5:
        if ((v68 & 1) == 0) {
          goto LABEL_100;
        }
        char v45 = 0;
        unsigned int v46 = 0;
        uint64_t v47 = 0;
        *(_WORD *)(a1 + 112) |= 1u;
        while (2)
        {
          uint64_t v48 = *v20;
          uint64_t v49 = *(void *)(v3 + v48);
          unint64_t v50 = v49 + 1;
          if (v49 == -1 || v50 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v51 = *(unsigned char *)(*(void *)(v3 + *v22) + v49);
            *(void *)(v3 + v48) = v50;
            v47 |= (unint64_t)(v51 & 0x7F) << v45;
            if (v51 < 0)
            {
              v45 += 7;
              BOOL v30 = v46++ >= 9;
              if (v30)
              {
                uint64_t v47 = 0;
                goto LABEL_105;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          uint64_t v47 = 0;
        }
LABEL_105:
        *(void *)(a1 + 80) = v47;
        goto LABEL_122;
      case 6:
        if (!v34) {
          goto LABEL_100;
        }
        if ((*(_WORD *)(a1 + 112) & 0x200) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_145;
          }
          __int16 v62 = *(_WORD *)(a1 + 112) << 6;
          goto LABEL_120;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_145;
        }
        long long v39 = objc_alloc_init(GEOTimezone);
        if (!GEOTimezoneReadAllFrom((uint64_t)v39, (void *)v3)) {
          goto LABEL_144;
        }
        PBReaderRecallMark();
        uint64_t v52 = 72;
        goto LABEL_90;
      case 7:
        if (!v34) {
          goto LABEL_100;
        }
        if ((*(_WORD *)(a1 + 112) & 0x400) == 0)
        {
          uint64_t v43 = PBReaderReadString();
          uint64_t v44 = 88;
LABEL_79:
          unint64_t v53 = *(void **)(a1 + v44);
          *(void *)(a1 + v44) = v43;
          goto LABEL_91;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_145;
        }
        __int16 v62 = 32 * *(_WORD *)(a1 + 112);
        goto LABEL_120;
      case 8:
        if (!v34) {
          goto LABEL_100;
        }
        if ((*(_WORD *)(a1 + 112) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_145;
          }
          __int16 v62 = *(_WORD *)(a1 + 112) << 9;
          goto LABEL_120;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_145;
        }
        long long v39 = objc_alloc_init(GEOLatLng);
        if (!GEOLatLngReadAllFrom((uint64_t)v39, (void *)v3)) {
          goto LABEL_144;
        }
        PBReaderRecallMark();
        uint64_t v52 = 48;
        goto LABEL_90;
      case 9:
        if (!v34) {
          goto LABEL_100;
        }
        if ((*(_WORD *)(a1 + 112) & 0x80) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_145;
          }
          __int16 v62 = *(_WORD *)(a1 + 112) << 8;
LABEL_120:
          v7 += v62 >> 15;
LABEL_121:
          BOOL v21 = (int *)MEMORY[0x1E4F940C8];
          id v22 = (int *)MEMORY[0x1E4F940B8];
LABEL_122:
          if (!(v70 & 1 | (v7 != 0))) {
            goto LABEL_123;
          }
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_145;
        }
        long long v39 = objc_alloc_init(GEOStyleAttributes);
        if (GEOStyleAttributesReadAllFrom((uint64_t)v39, (void *)v3))
        {
          PBReaderRecallMark();
          uint64_t v52 = 56;
LABEL_90:
          unint64_t v53 = *(void **)(a1 + v52);
          *(void *)(a1 + v52) = v39;
LABEL_91:

          --v7;
          goto LABEL_121;
        }
LABEL_144:

LABEL_145:
        int v67 = 0;
        BOOL v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_124:
        if (v69) {
LABEL_125:
        }
          *(_WORD *)(a1 + 112) |= 4u;
        if (v72 || (v67 & 1) == 0)
        {
          *(_WORD *)(a1 + 112) |= 0x100u;
          *(_WORD *)(a1 + 112) |= 8u;
          *(_WORD *)(a1 + 112) |= 0x20u;
          *(_WORD *)(a1 + 112) |= 0x10u;
          *(_WORD *)(a1 + 112) |= 0x200u;
          *(_WORD *)(a1 + 112) |= 0x400u;
          *(_WORD *)(a1 + 112) |= 0x40u;
          *(_WORD *)(a1 + 112) |= 0x80u;
        }
        else if (v19)
        {
          while (1)
          {
            int v63 = *v19++;
            __int16 v64 = 256;
            switch(v63)
            {
              case 0:
                goto LABEL_138;
              case 1:
                goto LABEL_137;
              case 2:
                __int16 v64 = 8;
                goto LABEL_137;
              case 3:
                __int16 v64 = 32;
                goto LABEL_137;
              case 4:
                __int16 v64 = 16;
                goto LABEL_137;
              case 6:
                __int16 v64 = 512;
                goto LABEL_137;
              case 7:
                __int16 v64 = 1024;
                goto LABEL_137;
              case 8:
                __int16 v64 = 64;
                goto LABEL_137;
              case 9:
                __int16 v64 = 128;
LABEL_137:
                *(_WORD *)(a1 + 112) |= v64;
                break;
              default:
                continue;
            }
          }
        }
LABEL_138:
        if (v67) {
          unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
        }
        else {
          unint64_t v3 = 0;
        }
        if (v72)
        {
          int v65 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      case 10:
        if ((v68 & 1) == 0) {
          goto LABEL_100;
        }
        char v54 = 0;
        unsigned int v55 = 0;
        uint64_t v56 = 0;
        *(_WORD *)(a1 + 112) |= 2u;
        while (2)
        {
          uint64_t v57 = *v20;
          uint64_t v58 = *(void *)(v3 + v57);
          unint64_t v59 = v58 + 1;
          if (v58 == -1 || v59 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v60 = *(unsigned char *)(*(void *)(v3 + *v22) + v58);
            *(void *)(v3 + v57) = v59;
            v56 |= (unint64_t)(v60 & 0x7F) << v54;
            if (v60 < 0)
            {
              v54 += 7;
              BOOL v30 = v55++ >= 9;
              if (v30)
              {
                uint64_t v56 = 0;
                goto LABEL_109;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          uint64_t v56 = 0;
        }
LABEL_109:
        *(unsigned char *)(a1 + 108) = v56 != 0;
        goto LABEL_122;
      default:
        if ((v69 & 1) == 0 || (*(_WORD *)(a1 + 112) & 4) != 0)
        {
LABEL_100:
          char v61 = PBReaderSkipValueWithTag();
          id v22 = (int *)MEMORY[0x1E4F940B8];
          BOOL v21 = (int *)MEMORY[0x1E4F940C8];
          if ((v61 & 1) == 0)
          {
            int v67 = 0;
            goto LABEL_124;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v40 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            long long v41 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v40;
          }
          int v42 = PBUnknownFieldAdd();
          BOOL v21 = (int *)MEMORY[0x1E4F940C8];
          id v22 = (int *)MEMORY[0x1E4F940B8];
          if (!v42)
          {
            int v67 = 0;
            goto LABEL_125;
          }
        }
        goto LABEL_122;
    }
  }
}

void sub_189B621EC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B62418(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B62528(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B62754(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B62864(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B62974(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B62A84(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B63278(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B64014(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B64494(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDTransitInfoSnippetFilterReadAllFrom(uint64_t a1, void *a2)
{
  unint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    uint64_t v6 = (int *)MEMORY[0x1E4F940C8];
    uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      int v8 = v3[*v6];
      if (*(void *)&v3[*v4] >= *(void *)&v3[*v5]) {
        break;
      }
      if (v3[*v6])
      {
        int v8 = 1;
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      uint64_t v11 = 0;
      while (1)
      {
        uint64_t v12 = *v4;
        uint64_t v13 = *(void *)&v3[v12];
        unint64_t v14 = v13 + 1;
        if (v13 == -1 || v14 > *(void *)&v3[*v5]) {
          break;
        }
        char v15 = *(unsigned char *)(*(void *)&v3[*v7] + v13);
        *(void *)&v3[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0) {
          goto LABEL_13;
        }
        v9 += 7;
        if (v10++ >= 9)
        {
          char v17 = 0;
          int v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      int v8 = v3[*v6];
      if (v3[*v6]) {
        char v17 = 0;
      }
      else {
        char v17 = v11;
      }
LABEL_16:
      if (v8) {
        BOOL v18 = 1;
      }
      else {
        BOOL v18 = (v17 & 7) == 4;
      }
      if (v18) {
        break;
      }
      if (!*(void *)(a1 + 8))
      {
        id v19 = objc_alloc_init(MEMORY[0x1E4F940B0]);
        uint64_t v20 = *(void **)(a1 + 8);
        *(void *)(a1 + 8) = v19;
      }
      if ((PBUnknownFieldAdd() & 1) == 0) {
        goto LABEL_23;
      }
    }
    BOOL v21 = v8 == 0;
  }
  else
  {
LABEL_23:
    BOOL v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_189B64D64(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B6519C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDTransitLabelReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  uint64_t v6 = 0;
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  int v11 = ((*(unsigned __int8 *)(a1 + 56) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 56) >> 2) & 1)
      + ((*(unsigned __int8 *)(a1 + 56) >> 1) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    switch(a3[v9])
    {
      case -4:
        ++v11;
        uint64_t v12 = v6;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v12 = v6;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v15 = v11 != 0;
        char v16 = v15 & ~(_BYTE)v10 | v7;
        unsigned __int8 v17 = v15 | v10;
        char v60 = v16;
        char v61 = v17 | v16;
        if ((v17 | v8)) {
          BOOL v18 = 0;
        }
        else {
          BOOL v18 = a3;
        }
        char v62 = (v18 == 0) | v17;
        BOOL v63 = v17;
        id v19 = (int *)MEMORY[0x1E4F940E8];
        uint64_t v20 = (int *)MEMORY[0x1E4F940C8];
        BOOL v21 = (int *)MEMORY[0x1E4F940B8];
        id v22 = (int *)MEMORY[0x1E4F940E0];
        break;
      default:
        ++v11;
LABEL_7:
        uint64_t v12 = v6;
        uint64_t v13 = v7;
LABEL_8:
        uint64_t v14 = v10;
LABEL_10:
        ++v9;
        uint64_t v6 = v12;
        uint64_t v7 = v13;
        uint64_t v10 = v14;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v19) >= *(void *)(v3 + *v22) || *(unsigned char *)(v3 + *v20)) {
      goto LABEL_77;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v19;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v22)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v21) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      BOOL v30 = v24++ >= 9;
      if (v30)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v20);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v20) = 1;
LABEL_25:
    int v31 = *(unsigned __int8 *)(v3 + *v20);
    if (*(unsigned char *)(v3 + *v20)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_77:
      int v58 = 1;
      goto LABEL_78;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v63;
    if ((v62 & 1) == 0)
    {
      long long v35 = v18;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    if (v33 == 5)
    {
      if (!v34) {
        goto LABEL_64;
      }
      if ((*(unsigned char *)(a1 + 56) & 8) == 0)
      {
        uint64_t v46 = PBReaderReadString();
        uint64_t v47 = *(void **)(a1 + 32);
        *(void *)(a1 + 32) = v46;
        goto LABEL_57;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        goto LABEL_96;
      }
      char v53 = 16 * *(unsigned char *)(a1 + 56);
      goto LABEL_74;
    }
    if (v33 == 4) {
      break;
    }
    if (v33 == 1)
    {
      if ((v8 & 1) == 0) {
        goto LABEL_64;
      }
      char v39 = 0;
      unsigned int v40 = 0;
      uint64_t v41 = 0;
      *(unsigned char *)(a1 + 56) |= 1u;
      while (1)
      {
        uint64_t v42 = *v19;
        uint64_t v43 = *(void *)(v3 + v42);
        unint64_t v44 = v43 + 1;
        if (v43 == -1 || v44 > *(void *)(v3 + *v22)) {
          break;
        }
        char v45 = *(unsigned char *)(*(void *)(v3 + *v21) + v43);
        *(void *)(v3 + v42) = v44;
        v41 |= (unint64_t)(v45 & 0x7F) << v39;
        if ((v45 & 0x80) == 0) {
          goto LABEL_67;
        }
        v39 += 7;
        BOOL v30 = v40++ >= 9;
        if (v30)
        {
          LODWORD(v41) = 0;
          goto LABEL_69;
        }
      }
      *(unsigned char *)(v3 + *v20) = 1;
LABEL_67:
      if (*(unsigned char *)(v3 + *v20)) {
        LODWORD(v41) = 0;
      }
LABEL_69:
      *(_DWORD *)(a1 + 52) = v41;
    }
    else
    {
      if ((v60 & 1) == 0 || (*(unsigned char *)(a1 + 56) & 2) != 0)
      {
LABEL_64:
        char v52 = PBReaderSkipValueWithTag();
        id v22 = (int *)MEMORY[0x1E4F940E0];
        uint64_t v20 = (int *)MEMORY[0x1E4F940C8];
        if ((v52 & 1) == 0)
        {
          int v58 = 0;
          goto LABEL_78;
        }
        goto LABEL_76;
      }
      if (!*(void *)(a1 + 16))
      {
        id v49 = objc_alloc_init(MEMORY[0x1E4F940B0]);
        unint64_t v50 = *(void **)(a1 + 16);
        *(void *)(a1 + 16) = v49;
      }
      int v51 = PBUnknownFieldAdd();
      uint64_t v20 = (int *)MEMORY[0x1E4F940C8];
      id v22 = (int *)MEMORY[0x1E4F940E0];
      if (!v51)
      {
        int v58 = 0;
        unint64_t v59 = &OBJC_IVAR___GEOPDAddressComponent__unknownFields;
        goto LABEL_79;
      }
    }
LABEL_76:
    if (!(v61 & 1 | (v9 != 0))) {
      goto LABEL_77;
    }
  }
  if (!v34) {
    goto LABEL_64;
  }
  if ((*(unsigned char *)(a1 + 56) & 4) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0) {
      goto LABEL_96;
    }
    char v53 = 32 * *(unsigned char *)(a1 + 56);
LABEL_74:
    v9 += v53 >> 7;
    goto LABEL_75;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_96;
  }
  uint64_t v48 = objc_alloc_init(GEOPBTransitArtwork);
  if (GEOPBTransitArtworkReadAllFrom((uint64_t)v48, (void *)v3, v6 & 1))
  {
    PBReaderRecallMark();
    uint64_t v47 = *(void **)(a1 + 24);
    *(void *)(a1 + 24) = v48;
LABEL_57:

    --v9;
LABEL_75:
    uint64_t v20 = (int *)MEMORY[0x1E4F940C8];
    id v22 = (int *)MEMORY[0x1E4F940E0];
    goto LABEL_76;
  }

LABEL_96:
  int v58 = 0;
  uint64_t v20 = (int *)MEMORY[0x1E4F940C8];
LABEL_78:
  unint64_t v59 = &OBJC_IVAR___GEOPDAddressComponent__unknownFields;
  if ((v60 & 1) == 0) {
    goto LABEL_80;
  }
LABEL_79:
  *(unsigned char *)(a1 + v59[952]) |= 2u;
LABEL_80:
  if (v63 || (v58 & 1) == 0)
  {
    *(unsigned char *)(a1 + v59[952]) |= 8u;
    *(unsigned char *)(a1 + v59[952]) |= 4u;
    goto LABEL_89;
  }
  if (v18)
  {
    while (1)
    {
LABEL_83:
      int v55 = *v18++;
      int v54 = v55;
      if (v55 == 4) {
        goto LABEL_88;
      }
      if (v54 == 5) {
        break;
      }
      if (!v54) {
        goto LABEL_89;
      }
    }
    LOBYTE(v54) = 8;
LABEL_88:
    *(unsigned char *)(a1 + v59[952]) |= v54;
    goto LABEL_83;
  }
LABEL_89:
  if (v58) {
    unint64_t v3 = *(unsigned char *)(v3 + *v20) == 0;
  }
  else {
    unint64_t v3 = 0;
  }
  if (v63)
  {
    uint64_t v56 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_189B65928(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B660F0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDTransitLabelReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDTransitLabelReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOPDTransitLabelReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOPDTransitLabelReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDTransitLabelReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    [*(id *)(a1 + 24) readAll:1];
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_189B66298(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B6645C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

os_unfair_lock_s *_GEOPDTransitLabelIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  if ((*(unsigned char *)(a1 + 56) & 0x18) != 0) {
    return (os_unfair_lock_s *)1;
  }
  if ((*(unsigned char *)(a1 + 56) & 4) == 0) {
    return 0;
  }
  unint64_t v3 = *(os_unfair_lock_s **)(a1 + 24);

  return GEOPBTransitArtworkIsDirty(v3);
}

os_unfair_lock_s *GEOPDTransitLabelIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    id v2 = _GEOPDTransitLabelIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 12);
    return v2;
  }
  return result;
}

void sub_189B667F4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B66AF0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B66DA0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B66FE0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDTransitNearbyScheduleCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v22 = *MEMORY[0x1E4F143B8];
  long long v16 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  id v2 = *(id *)(a1 + 24);
  uint64_t v3 = [v2 countByEnumeratingWithState:&v16 objects:v21 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v17;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v17 != v5) {
          objc_enumerationMutation(v2);
        }
        -[GEOPDTransitScheduleCategory readAll:](*(void *)(*((void *)&v16 + 1) + 8 * v6++), 1);
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v16 objects:v21 count:16];
    }
    while (v4);
  }

  long long v14 = 0u;
  long long v15 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  id v7 = *(id *)(a1 + 32);
  uint64_t v8 = [v7 countByEnumeratingWithState:&v12 objects:v20 count:16];
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)v13;
    do
    {
      uint64_t v11 = 0;
      do
      {
        if (*(void *)v13 != v10) {
          objc_enumerationMutation(v7);
        }
        -[GEOPDTransitScheduleGroup readAll:](*(void *)(*((void *)&v12 + 1) + 8 * v11++), 1);
      }
      while (v9 != v11);
      uint64_t v9 = [v7 countByEnumeratingWithState:&v12 objects:v20 count:16];
    }
    while (v9);
  }
}

unint64_t GEOPDTransitNearbyScheduleReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDTransitNearbyScheduleReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOPDTransitNearbyScheduleReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOPDTransitNearbyScheduleReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDTransitNearbyScheduleReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOPDTransitNearbyScheduleCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_189B679A4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B67D68(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B68040(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B68354(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B686AC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDTransitPaymentMethodInfoReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 52))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDTransitPaymentMethodInfoReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = [v8 position];
  *(_DWORD *)(a1 + 52) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOPDTransitPaymentMethodInfoReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOPDTransitPaymentMethodInfoReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDTransitPaymentMethodInfoReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOPDTransitPaymentMethodInfoCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_189B68920(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B68CB0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B68FC0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDTransitPaymentMethodInfoFilterReadAllFrom(uint64_t a1, void *a2)
{
  uint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    uint64_t v6 = (int *)MEMORY[0x1E4F940C8];
    id v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      int v8 = v3[*v6];
      if (*(void *)&v3[*v4] >= *(void *)&v3[*v5]) {
        break;
      }
      if (v3[*v6])
      {
        int v8 = 1;
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      uint64_t v11 = 0;
      while (1)
      {
        uint64_t v12 = *v4;
        uint64_t v13 = *(void *)&v3[v12];
        unint64_t v14 = v13 + 1;
        if (v13 == -1 || v14 > *(void *)&v3[*v5]) {
          break;
        }
        char v15 = *(unsigned char *)(*(void *)&v3[*v7] + v13);
        *(void *)&v3[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0) {
          goto LABEL_13;
        }
        v9 += 7;
        if (v10++ >= 9)
        {
          char v17 = 0;
          int v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      int v8 = v3[*v6];
      if (v3[*v6]) {
        char v17 = 0;
      }
      else {
        char v17 = v11;
      }
LABEL_16:
      if (v8) {
        BOOL v18 = 1;
      }
      else {
        BOOL v18 = (v17 & 7) == 4;
      }
      if (v18) {
        break;
      }
      if (!*(void *)(a1 + 8))
      {
        id v19 = objc_alloc_init(MEMORY[0x1E4F940B0]);
        uint64_t v20 = *(void **)(a1 + 8);
        *(void *)(a1 + 8) = v19;
      }
      if ((PBUnknownFieldAdd() & 1) == 0) {
        goto LABEL_23;
      }
    }
    BOOL v21 = v8 == 0;
  }
  else
  {
LABEL_23:
    BOOL v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_189B694C8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B6971C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t GEOPDTransitScheduleReadSpecified(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 88));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 84);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 80)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  unsigned int v12 = (vaddv_s16((int16x4_t)(*(void *)&vshl_u16((uint16x4_t)(*(void *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 92)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFBFFFCFFFAFFFDLL) & 0xFF01FF01FF01FF01))+ ((*(unsigned char *)(a1 + 92) & 4) != 0));
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 > 2;
        char v17 = v16 & ~(_BYTE)v11 | v9;
        unsigned __int8 v18 = v16 | v11;
        char v60 = v17;
        char v61 = v18 | v17;
        if ((v18 | v8)) {
          id v19 = 0;
        }
        else {
          id v19 = a3;
        }
        char v62 = (v19 == 0) | v18;
        BOOL v63 = v18;
        uint64_t v20 = (int *)MEMORY[0x1E4F940E8];
        BOOL v21 = (int *)MEMORY[0x1E4F940C8];
        uint64_t v22 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v9;
LABEL_8:
        uint64_t v14 = v10;
        uint64_t v15 = v11;
LABEL_10:
        ++v7;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v21)) {
      goto LABEL_92;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      BOOL v30 = v24++ >= 9;
      if (v30)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_25:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_92:
      int v58 = 1;
      goto LABEL_93;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v63;
    if ((v62 & 1) == 0)
    {
      long long v35 = v19;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    switch((int)v33)
    {
      case 1:
        if (!v34 || (*(unsigned char *)(a1 + 92) & 0x40) != 0) {
          goto LABEL_79;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_111;
        }
        char v39 = objc_alloc_init(GEOPDDepartureSequence);
        if (!GEOPDDepartureSequenceReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1)) {
          goto LABEL_110;
        }
        PBReaderRecallMark();
        -[GEOPDTransitSchedule _addNoFlagsDepartureSequence:](a1, v39);
        goto LABEL_78;
      case 2:
        if (!v34) {
          goto LABEL_79;
        }
        if ((*(unsigned char *)(a1 + 92) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_111;
          }
          char v53 = 16 * *(unsigned char *)(a1 + 92);
          goto LABEL_89;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_111;
        }
        char v39 = objc_alloc_init(GEOPDDeparturePredicate);
        if (!GEOPDDeparturePredicateReadAllFrom((uint64_t)v39, (void *)v3)) {
          goto LABEL_110;
        }
        PBReaderRecallMark();
        uint64_t v43 = 24;
        goto LABEL_60;
      case 3:
        if (!v34) {
          goto LABEL_79;
        }
        if ((*(unsigned char *)(a1 + 92) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_111;
          }
          char v53 = 8 * *(unsigned char *)(a1 + 92);
LABEL_89:
          v7 += v53 >> 7;
LABEL_90:
          BOOL v21 = (int *)MEMORY[0x1E4F940C8];
          uint64_t v22 = (int *)MEMORY[0x1E4F940B8];
          goto LABEL_91;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_111;
        }
        char v39 = objc_alloc_init(GEOPDDeparturePredicate);
        if (GEOPDDeparturePredicateReadAllFrom((uint64_t)v39, (void *)v3))
        {
          PBReaderRecallMark();
          uint64_t v43 = 32;
LABEL_60:
          unint64_t v44 = *(void **)(a1 + v43);
          *(void *)(a1 + v43) = v39;

          --v7;
          goto LABEL_90;
        }
LABEL_110:

LABEL_111:
        int v58 = 0;
        unint64_t v59 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__flags;
        BOOL v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_94:
        if (v60) {
LABEL_95:
        }
          *(unsigned char *)(a1 + v59[524]) |= 4u;
        if (v63 || (v58 & 1) == 0)
        {
          *(unsigned char *)(a1 + v59[524]) |= 0x40u;
          *(unsigned char *)(a1 + v59[524]) |= 8u;
          *(unsigned char *)(a1 + v59[524]) |= 0x10u;
          *(unsigned char *)(a1 + v59[524]) |= 0x20u;
        }
        else if (v19)
        {
          while (1)
          {
            int v54 = *v19++;
            char v55 = 64;
            switch(v54)
            {
              case 0:
                goto LABEL_104;
              case 1:
                goto LABEL_103;
              case 2:
                char v55 = 8;
                goto LABEL_103;
              case 3:
                char v55 = 16;
                goto LABEL_103;
              case 6:
                char v55 = 32;
LABEL_103:
                *(unsigned char *)(a1 + v59[524]) |= v55;
                break;
              default:
                continue;
            }
          }
        }
LABEL_104:
        if (v58) {
          uint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
        }
        else {
          uint64_t v3 = 0;
        }
        if (v63)
        {
          uint64_t v56 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      case 4:
        if ((v8 & 1) == 0) {
          goto LABEL_79;
        }
        if (!PBReaderPlaceMark() || !GEOPDTimeRangeReadAllFrom(a1 + 56, v3)) {
          goto LABEL_111;
        }
        PBReaderRecallMark();
        *(unsigned char *)(a1 + 92) |= 1u;
        goto LABEL_90;
      case 5:
        if ((v8 & 1) == 0) {
          goto LABEL_79;
        }
        char v45 = 0;
        unsigned int v46 = 0;
        uint64_t v47 = 0;
        *(unsigned char *)(a1 + 92) |= 2u;
        while (2)
        {
          uint64_t v48 = *v20;
          uint64_t v49 = *(void *)(v3 + v48);
          unint64_t v50 = v49 + 1;
          if (v49 == -1 || v50 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v51 = *(unsigned char *)(*(void *)(v3 + *v22) + v49);
            *(void *)(v3 + v48) = v50;
            v47 |= (unint64_t)(v51 & 0x7F) << v45;
            if (v51 < 0)
            {
              v45 += 7;
              BOOL v30 = v46++ >= 9;
              if (v30)
              {
                uint64_t v47 = 0;
                goto LABEL_84;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          uint64_t v47 = 0;
        }
LABEL_84:
        *(void *)(a1 + 72) = v47;
        goto LABEL_91;
      case 6:
        if (!v34 || (*(unsigned char *)(a1 + 92) & 0x20) != 0) {
          goto LABEL_79;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_111;
        }
        char v39 = objc_alloc_init(GEOPDDepartureSequenceContainer);
        if (!GEOPDDepartureSequenceContainerReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1)) {
          goto LABEL_110;
        }
        PBReaderRecallMark();
        -[GEOPDTransitSchedule _addNoFlagsDepartureSequenceContainer:](a1, v39);
LABEL_78:

        goto LABEL_90;
      default:
        if ((v60 & 1) == 0 || (*(unsigned char *)(a1 + 92) & 4) != 0)
        {
LABEL_79:
          char v52 = PBReaderSkipValueWithTag();
          uint64_t v22 = (int *)MEMORY[0x1E4F940B8];
          BOOL v21 = (int *)MEMORY[0x1E4F940C8];
          if ((v52 & 1) == 0)
          {
            int v58 = 0;
LABEL_93:
            unint64_t v59 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__flags;
            goto LABEL_94;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v40 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            uint64_t v41 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v40;
          }
          int v42 = PBUnknownFieldAdd();
          BOOL v21 = (int *)MEMORY[0x1E4F940C8];
          uint64_t v22 = (int *)MEMORY[0x1E4F940B8];
          if (!v42)
          {
            int v58 = 0;
            unint64_t v59 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__flags;
            goto LABEL_95;
          }
        }
LABEL_91:
        if (!(v61 & 1 | (v7 != 0))) {
          goto LABEL_92;
        }
        continue;
    }
  }
}

void sub_189B6A184(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B6A294(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B6A3A4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B6A66C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDTransitScheduleCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v22 = *MEMORY[0x1E4F143B8];
  long long v16 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  id v2 = *(id *)(a1 + 48);
  uint64_t v3 = [v2 countByEnumeratingWithState:&v16 objects:v21 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v17;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v17 != v5) {
          objc_enumerationMutation(v2);
        }
        -[GEOPDDepartureSequence readAll:](*(void *)(*((void *)&v16 + 1) + 8 * v6++), 1);
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v16 objects:v21 count:16];
    }
    while (v4);
  }

  long long v14 = 0u;
  long long v15 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  id v7 = *(id *)(a1 + 40);
  uint64_t v8 = [v7 countByEnumeratingWithState:&v12 objects:v20 count:16];
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)v13;
    do
    {
      uint64_t v11 = 0;
      do
      {
        if (*(void *)v13 != v10) {
          objc_enumerationMutation(v7);
        }
        -[GEOPDDepartureSequenceContainer readAll:](*(void *)(*((void *)&v12 + 1) + 8 * v11++), 1);
      }
      while (v9 != v11);
      uint64_t v9 = [v7 countByEnumeratingWithState:&v12 objects:v20 count:16];
    }
    while (v9);
  }
}

uint64_t GEOPDTransitScheduleReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 84))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDTransitScheduleReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 88));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 80) = [v8 position];
  *(_DWORD *)(a1 + 84) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOPDTransitScheduleReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOPDTransitScheduleReadAllFrom_initialTag;
  }
  uint64_t Specified = GEOPDTransitScheduleReadSpecified(a1, (uint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOPDTransitScheduleCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 88));
  return Specified;
}

void sub_189B6AA74(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B6ADCC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B6B2B0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDTransitScheduleCategoryReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 68);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 64)];
  char v7 = 0;
  uint64_t v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  long long v12 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__flags;
  unsigned int v13 = ((*(unsigned __int8 *)(a1 + 76) >> 1) & 1)
      + (*(unsigned char *)(a1 + 76) & 1)
      + ((*(unsigned __int8 *)(a1 + 76) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 76) >> 2) & 1);
  while (2)
  {
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    uint64_t v16 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v13;
        goto LABEL_8;
      case -3:
        char v7 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v15 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v17 = v13 > 1;
        char v18 = v17 & ~(_BYTE)v11 | v9;
        char v19 = v17 | v11;
        if (((v17 | v11) | v7)) {
          uint64_t v20 = 0;
        }
        else {
          uint64_t v20 = a3;
        }
        BOOL v21 = (int *)MEMORY[0x1E4F940E8];
        int v22 = 1;
        char v23 = (int *)MEMORY[0x1E4F940C8];
        if (*(void *)(v3 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(v3 + *v6)) {
          goto LABEL_93;
        }
        char v74 = v18;
        char v75 = v19 | v18;
        char v77 = (v20 == 0) | v19;
        unsigned int v24 = (int *)MEMORY[0x1E4F940B8];
        char v76 = v17 | v11;
        break;
      default:
        ++v13;
LABEL_7:
        uint64_t v14 = v9;
LABEL_8:
        uint64_t v15 = v10;
        uint64_t v16 = v11;
LABEL_10:
        ++v8;
        uint64_t v9 = v14;
        uint64_t v10 = v15;
        uint64_t v11 = v16;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(unsigned char *)(v3 + *v23)) {
      goto LABEL_90;
    }
    char v25 = 0;
    unsigned int v26 = 0;
    unint64_t v27 = 0;
    while (1)
    {
      uint64_t v28 = *v21;
      uint64_t v29 = *(void *)(v3 + v28);
      unint64_t v30 = v29 + 1;
      if (v29 == -1 || v30 > *(void *)(v3 + *v6)) {
        break;
      }
      char v31 = *(unsigned char *)(*(void *)(v3 + *v24) + v29);
      *(void *)(v3 + v28) = v30;
      v27 |= (unint64_t)(v31 & 0x7F) << v25;
      if ((v31 & 0x80) == 0) {
        goto LABEL_25;
      }
      v25 += 7;
      BOOL v32 = v26++ >= 9;
      if (v32)
      {
        unint64_t v27 = 0;
        int v33 = *(unsigned __int8 *)(v3 + *v23);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v23) = 1;
LABEL_25:
    int v33 = *(unsigned __int8 *)(v3 + *v23);
    if (*(unsigned char *)(v3 + *v23)) {
      unint64_t v27 = 0;
    }
LABEL_27:
    int v34 = v27 & 7;
    if (v33 || v34 == 4)
    {
LABEL_90:
      int v22 = 1;
      goto LABEL_91;
    }
    int v36 = v23;
    unint64_t v37 = v27 >> 3;
    BOOL v38 = v19;
    if ((v77 & 1) == 0)
    {
      char v39 = v20;
      do
      {
        int v41 = *v39++;
        int v40 = v41;
        BOOL v38 = v41 != 0;
        if (v41) {
          BOOL v42 = v40 == v37;
        }
        else {
          BOOL v42 = 1;
        }
      }
      while (!v42);
    }
    if (v37 == 3) {
      break;
    }
    if (v37 == 2)
    {
      if (v38 && (*(unsigned char *)(a1 + 76) & 2) == 0)
      {
        char v23 = v36;
        if (v34 == 2)
        {
          int v48 = PBReaderPlaceMark();
          uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
          if (!v48) {
            goto LABEL_109;
          }
          while (*(void *)(v3 + *v21) < *(void *)(v3 + *v6) && !*(unsigned char *)(v3 + *v23))
          {
            char v49 = 0;
            unsigned int v50 = 0;
            uint64_t v51 = 0;
            while (1)
            {
              uint64_t v52 = *v21;
              uint64_t v53 = *(void *)(v3 + v52);
              unint64_t v54 = v53 + 1;
              if (v53 == -1 || v54 > *(void *)(v3 + *v6)) {
                break;
              }
              char v55 = *(unsigned char *)(*(void *)(v3 + *v24) + v53);
              *(void *)(v3 + v52) = v54;
              v51 |= (unint64_t)(v55 & 0x7F) << v49;
              if (v55 < 0)
              {
                v49 += 7;
                BOOL v32 = v50++ >= 9;
                if (!v32) {
                  continue;
                }
              }
              goto LABEL_63;
            }
            *(unsigned char *)(v3 + *v23) = 1;
LABEL_63:
            PBRepeatedUInt32Add();
          }
          PBReaderRecallMark();
        }
        else
        {
          char v63 = 0;
          unsigned int v64 = 0;
          uint64_t v65 = 0;
          uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
          while (1)
          {
            uint64_t v66 = *v21;
            uint64_t v67 = *(void *)(v3 + v66);
            unint64_t v68 = v67 + 1;
            if (v67 == -1 || v68 > *(void *)(v3 + *v6)) {
              break;
            }
            char v69 = *(unsigned char *)(*(void *)(v3 + *v24) + v67);
            *(void *)(v3 + v66) = v68;
            v65 |= (unint64_t)(v69 & 0x7F) << v63;
            if (v69 < 0)
            {
              v63 += 7;
              BOOL v32 = v64++ >= 9;
              if (!v32) {
                continue;
              }
            }
            goto LABEL_86;
          }
          *(unsigned char *)(v3 + *v23) = 1;
LABEL_86:
          PBRepeatedUInt32Add();
        }
        goto LABEL_87;
      }
LABEL_70:
      char v59 = PBReaderSkipValueWithTag();
      char v19 = v76;
      char v23 = v36;
      uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
      if (v59) {
        goto LABEL_88;
      }
      int v22 = 0;
LABEL_91:
      long long v12 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__flags;
      goto LABEL_92;
    }
    if (v37 == 1)
    {
      if (!v38) {
        goto LABEL_70;
      }
      char v23 = v36;
      if ((*(unsigned char *)(a1 + 76) & 8) == 0)
      {
        uint64_t v43 = PBReaderReadString();
        unint64_t v44 = *(void **)(a1 + 56);
        *(void *)(a1 + 56) = v43;

        --v8;
        char v19 = v76;
        uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
        goto LABEL_88;
      }
      char v60 = PBReaderSkipValueWithTag();
      uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
      if ((v60 & 1) == 0) {
        goto LABEL_109;
      }
      char v61 = 16 * *(unsigned char *)(a1 + 76);
      goto LABEL_76;
    }
    if (v74 & 1) == 0 || (*(unsigned char *)(a1 + 76)) {
      goto LABEL_70;
    }
    if (!*(void *)(a1 + 16))
    {
      id v56 = objc_alloc_init(MEMORY[0x1E4F940B0]);
      uint64_t v57 = *(void **)(a1 + 16);
      *(void *)(a1 + 16) = v56;
    }
    int v58 = PBUnknownFieldAdd();
    char v19 = v76;
    char v23 = v36;
    uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
    if (!v58)
    {
      int v22 = 0;
      long long v12 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__flags;
      goto LABEL_94;
    }
LABEL_88:
    if (!(v75 & 1 | (v8 != 0)) || *(void *)(v3 + *v21) >= *(void *)(v3 + *v6)) {
      goto LABEL_90;
    }
  }
  if (!v38) {
    goto LABEL_70;
  }
  char v23 = v36;
  if ((*(unsigned char *)(a1 + 76) & 4) != 0)
  {
    char v62 = PBReaderSkipValueWithTag();
    uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
    if ((v62 & 1) == 0) {
      goto LABEL_109;
    }
    char v61 = 32 * *(unsigned char *)(a1 + 76);
LABEL_76:
    v8 += v61 >> 7;
    goto LABEL_87;
  }
  char v45 = PBReaderPlaceMark();
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  if ((v45 & 1) == 0) {
    goto LABEL_109;
  }
  unsigned int v46 = objc_alloc_init(GEOPBTransitArtwork);
  if (GEOPBTransitArtworkReadAllFrom((uint64_t)v46, (void *)v3, v10 & 1))
  {
    PBReaderRecallMark();
    uint64_t v47 = *(void **)(a1 + 48);
    *(void *)(a1 + 48) = v46;

    --v8;
LABEL_87:
    char v19 = v76;
    goto LABEL_88;
  }

LABEL_109:
  int v22 = 0;
  long long v12 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__flags;
  char v19 = v76;
LABEL_92:
  char v18 = v74;
LABEL_93:
  if (v18) {
LABEL_94:
  }
    *(unsigned char *)(a1 + v12[534]) |= 1u;
  if (v19 & 1 | ((v22 & 1) == 0))
  {
    *(unsigned char *)(a1 + v12[534]) |= 8u;
    *(unsigned char *)(a1 + v12[534]) |= 2u;
    *(unsigned char *)(a1 + v12[534]) |= 4u;
  }
  else if (v20)
  {
    while (1)
    {
      int v70 = *v20++;
      char v71 = 8;
      switch(v70)
      {
        case 0:
          goto LABEL_102;
        case 1:
          goto LABEL_101;
        case 2:
          char v71 = 2;
          goto LABEL_101;
        case 3:
          char v71 = 4;
LABEL_101:
          *(unsigned char *)(a1 + v12[534]) |= v71;
          break;
        default:
          continue;
      }
    }
  }
LABEL_102:
  if (v22)
  {
    unint64_t v3 = *(unsigned char *)(v3 + *v23) == 0;
    if ((v19 & 1) == 0) {
      return v3;
    }
LABEL_106:
    BOOL v72 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  else
  {
    unint64_t v3 = 0;
    if (v19) {
      goto LABEL_106;
    }
  }
  return v3;
}

void sub_189B6BB64(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B6BC2C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B6BE18(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDTransitScheduleCategoryReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 68))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDTransitScheduleCategoryReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 72));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 64) = [v8 position];
  *(_DWORD *)(a1 + 68) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOPDTransitScheduleCategoryReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOPDTransitScheduleCategoryReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDTransitScheduleCategoryReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    [*(id *)(a1 + 48) readAll:1];
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
  return Specified;
}

void sub_189B6C098(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B6C294(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B6C41C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B6CA94(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B6CD6C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B6D0A0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDTransitScheduleGroupReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 120));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 116);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 112)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  unsigned int v11 = (unsigned __int16)(vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int16 *)(a1 + 144)), (uint16x4_t)0xFFF8FFFAFFF7FFF9), (int8x8_t)0x1000100010001))+ ((*(_WORD *)(a1 + 144) >> 10) & 1)+ ((*(_WORD *)(a1 + 144) >> 5) & 1));
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v11;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_9;
      case 0:
        BOOL v14 = v11 > 3;
        char v15 = v14 & ~(_BYTE)v10 | v9;
        char v16 = v14 | v10;
        BOOL v17 = (int *)MEMORY[0x1E4F940E8];
        if (((v14 | v10) | v8)) {
          char v18 = 0;
        }
        else {
          char v18 = a3;
        }
        int v127 = 1;
        char v19 = v14 & ~(_BYTE)v10 | v9;
        if (*(void *)(v3 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(v3 + *v6)) {
          goto LABEL_198;
        }
        char v125 = v15;
        char v128 = v16 | v15;
        char v129 = (v18 == 0) | v16;
        uint64_t v20 = (int *)MEMORY[0x1E4F940C8];
        BOOL v21 = (int *)MEMORY[0x1E4F940B8];
        char v126 = v16;
        break;
      default:
        ++v11;
LABEL_7:
        uint64_t v12 = v9;
LABEL_8:
        uint64_t v13 = v10;
LABEL_9:
        ++v7;
        uint64_t v9 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(unsigned char *)(v3 + *v20)) {
      goto LABEL_196;
    }
    char v22 = 0;
    unsigned int v23 = 0;
    unint64_t v24 = 0;
    while (1)
    {
      uint64_t v25 = *v17;
      uint64_t v26 = *(void *)(v3 + v25);
      unint64_t v27 = v26 + 1;
      if (v26 == -1 || v27 > *(void *)(v3 + *v6)) {
        break;
      }
      char v28 = *(unsigned char *)(*(void *)(v3 + *v21) + v26);
      *(void *)(v3 + v25) = v27;
      v24 |= (unint64_t)(v28 & 0x7F) << v22;
      if ((v28 & 0x80) == 0) {
        goto LABEL_24;
      }
      v22 += 7;
      BOOL v29 = v23++ >= 9;
      if (v29)
      {
        unint64_t v24 = 0;
        int v30 = *(unsigned __int8 *)(v3 + *v20);
        goto LABEL_26;
      }
    }
    *(unsigned char *)(v3 + *v20) = 1;
LABEL_24:
    int v30 = *(unsigned __int8 *)(v3 + *v20);
    if (*(unsigned char *)(v3 + *v20)) {
      unint64_t v24 = 0;
    }
LABEL_26:
    int v31 = v24 & 7;
    if (v30 || v31 == 4)
    {
LABEL_196:
      int v127 = 1;
      goto LABEL_197;
    }
    unint64_t v33 = v24 >> 3;
    BOOL v34 = v16;
    if ((v129 & 1) == 0)
    {
      long long v35 = v18;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    switch((int)v33)
    {
      case 1:
        if (!v34) {
          goto LABEL_139;
        }
        if ((*(_WORD *)(a1 + 144) & 0x200) == 0)
        {
          uint64_t v39 = PBReaderReadString();
          uint64_t v40 = 96;
          goto LABEL_130;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_215;
        }
        __int16 v99 = *(_WORD *)(a1 + 144) << 6;
        goto LABEL_166;
      case 2:
        if ((v8 & 1) == 0) {
          goto LABEL_139;
        }
        char v44 = 0;
        unsigned int v45 = 0;
        uint64_t v46 = 0;
        *(_WORD *)(a1 + 144) |= 8u;
        uint64_t v20 = (int *)MEMORY[0x1E4F940C8];
        BOOL v21 = (int *)MEMORY[0x1E4F940B8];
        while (2)
        {
          uint64_t v47 = *v17;
          uint64_t v48 = *(void *)(v3 + v47);
          unint64_t v49 = v48 + 1;
          if (v48 == -1 || v49 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v20) = 1;
          }
          else
          {
            char v50 = *(unsigned char *)(*(void *)(v3 + *v21) + v48);
            *(void *)(v3 + v47) = v49;
            v46 |= (unint64_t)(v50 & 0x7F) << v44;
            if (v50 < 0)
            {
              v44 += 7;
              BOOL v29 = v45++ >= 9;
              if (v29)
              {
                LODWORD(v46) = 0;
                goto LABEL_144;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v20)) {
          LODWORD(v46) = 0;
        }
LABEL_144:
        uint64_t v98 = 136;
        goto LABEL_161;
      case 3:
        if ((v8 & 1) == 0) {
          goto LABEL_139;
        }
        char v51 = 0;
        unsigned int v52 = 0;
        uint64_t v46 = 0;
        *(_WORD *)(a1 + 144) |= 2u;
        uint64_t v20 = (int *)MEMORY[0x1E4F940C8];
        BOOL v21 = (int *)MEMORY[0x1E4F940B8];
        while (2)
        {
          uint64_t v53 = *v17;
          uint64_t v54 = *(void *)(v3 + v53);
          unint64_t v55 = v54 + 1;
          if (v54 == -1 || v55 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v20) = 1;
          }
          else
          {
            char v56 = *(unsigned char *)(*(void *)(v3 + *v21) + v54);
            *(void *)(v3 + v53) = v55;
            v46 |= (unint64_t)(v56 & 0x7F) << v51;
            if (v56 < 0)
            {
              v51 += 7;
              BOOL v29 = v52++ >= 9;
              if (v29)
              {
                LODWORD(v46) = 0;
                goto LABEL_148;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v20)) {
          LODWORD(v46) = 0;
        }
LABEL_148:
        uint64_t v98 = 128;
        goto LABEL_161;
      case 4:
        if ((v8 & 1) == 0) {
          goto LABEL_139;
        }
        char v57 = 0;
        unsigned int v58 = 0;
        uint64_t v46 = 0;
        *(_WORD *)(a1 + 144) |= 0x10u;
        uint64_t v20 = (int *)MEMORY[0x1E4F940C8];
        BOOL v21 = (int *)MEMORY[0x1E4F940B8];
        while (2)
        {
          uint64_t v59 = *v17;
          uint64_t v60 = *(void *)(v3 + v59);
          unint64_t v61 = v60 + 1;
          if (v60 == -1 || v61 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v20) = 1;
          }
          else
          {
            char v62 = *(unsigned char *)(*(void *)(v3 + *v21) + v60);
            *(void *)(v3 + v59) = v61;
            v46 |= (unint64_t)(v62 & 0x7F) << v57;
            if (v62 < 0)
            {
              v57 += 7;
              BOOL v29 = v58++ >= 9;
              if (v29)
              {
                LODWORD(v46) = 0;
                goto LABEL_152;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v20)) {
          LODWORD(v46) = 0;
        }
LABEL_152:
        uint64_t v98 = 140;
        goto LABEL_161;
      case 5:
        if ((v8 & 1) == 0) {
          goto LABEL_139;
        }
        char v63 = 0;
        unsigned int v64 = 0;
        uint64_t v46 = 0;
        *(_WORD *)(a1 + 144) |= 4u;
        uint64_t v20 = (int *)MEMORY[0x1E4F940C8];
        BOOL v21 = (int *)MEMORY[0x1E4F940B8];
        while (2)
        {
          uint64_t v65 = *v17;
          uint64_t v66 = *(void *)(v3 + v65);
          unint64_t v67 = v66 + 1;
          if (v66 == -1 || v67 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v20) = 1;
          }
          else
          {
            char v68 = *(unsigned char *)(*(void *)(v3 + *v21) + v66);
            *(void *)(v3 + v65) = v67;
            v46 |= (unint64_t)(v68 & 0x7F) << v63;
            if (v68 < 0)
            {
              v63 += 7;
              BOOL v29 = v64++ >= 9;
              if (v29)
              {
                LODWORD(v46) = 0;
                goto LABEL_156;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v20)) {
          LODWORD(v46) = 0;
        }
LABEL_156:
        uint64_t v98 = 132;
        goto LABEL_161;
      case 6:
        if (!v34 || (*(_WORD *)(a1 + 144) & 0x80) != 0) {
          goto LABEL_139;
        }
        if (v31 != 2)
        {
          char v100 = 0;
          unsigned int v101 = 0;
          uint64_t v102 = 0;
          uint64_t v20 = (int *)MEMORY[0x1E4F940C8];
          BOOL v21 = (int *)MEMORY[0x1E4F940B8];
          while (1)
          {
            uint64_t v103 = *v17;
            uint64_t v104 = *(void *)(v3 + v103);
            unint64_t v105 = v104 + 1;
            if (v104 == -1 || v105 > *(void *)(v3 + *v6)) {
              goto LABEL_182;
            }
            char v106 = *(unsigned char *)(*(void *)(v3 + *v21) + v104);
            *(void *)(v3 + v103) = v105;
            v102 |= (unint64_t)(v106 & 0x7F) << v100;
            if (v106 < 0)
            {
              v100 += 7;
              BOOL v29 = v101++ >= 9;
              if (!v29) {
                continue;
              }
            }
            goto LABEL_183;
          }
        }
        if (!PBReaderPlaceMark()) {
          goto LABEL_215;
        }
        uint64_t v20 = (int *)MEMORY[0x1E4F940C8];
        BOOL v21 = (int *)MEMORY[0x1E4F940B8];
        while (*(void *)(v3 + *v17) < *(void *)(v3 + *v6))
        {
          if (*(unsigned char *)(v3 + *v20)) {
            break;
          }
          char v69 = 0;
          unsigned int v70 = 0;
          uint64_t v71 = 0;
          while (1)
          {
            uint64_t v72 = *v17;
            uint64_t v73 = *(void *)(v3 + v72);
            unint64_t v74 = v73 + 1;
            if (v73 == -1 || v74 > *(void *)(v3 + *v6)) {
              break;
            }
            char v75 = *(unsigned char *)(*(void *)(v3 + *v21) + v73);
            *(void *)(v3 + v72) = v74;
            v71 |= (unint64_t)(v75 & 0x7F) << v69;
            if (v75 < 0)
            {
              v69 += 7;
              BOOL v29 = v70++ >= 9;
              if (!v29) {
                continue;
              }
            }
            goto LABEL_93;
          }
          *(unsigned char *)(v3 + *v20) = 1;
LABEL_93:
          PBRepeatedUInt32Add();
        }
        goto LABEL_126;
      case 7:
        if (!v34 || (*(_WORD *)(a1 + 144) & 0x40) != 0) {
          goto LABEL_139;
        }
        if (v31 != 2)
        {
          char v107 = 0;
          unsigned int v108 = 0;
          uint64_t v109 = 0;
          uint64_t v20 = (int *)MEMORY[0x1E4F940C8];
          BOOL v21 = (int *)MEMORY[0x1E4F940B8];
          while (1)
          {
            uint64_t v110 = *v17;
            uint64_t v111 = *(void *)(v3 + v110);
            unint64_t v112 = v111 + 1;
            if (v111 == -1 || v112 > *(void *)(v3 + *v6)) {
              break;
            }
            char v113 = *(unsigned char *)(*(void *)(v3 + *v21) + v111);
            *(void *)(v3 + v110) = v112;
            v109 |= (unint64_t)(v113 & 0x7F) << v107;
            if (v113 < 0)
            {
              v107 += 7;
              BOOL v29 = v108++ >= 9;
              if (!v29) {
                continue;
              }
            }
            goto LABEL_183;
          }
LABEL_182:
          *(unsigned char *)(v3 + *v20) = 1;
LABEL_183:
          PBRepeatedUInt32Add();
          goto LABEL_193;
        }
        if (!PBReaderPlaceMark()) {
          goto LABEL_215;
        }
        uint64_t v20 = (int *)MEMORY[0x1E4F940C8];
        BOOL v21 = (int *)MEMORY[0x1E4F940B8];
        while (*(void *)(v3 + *v17) < *(void *)(v3 + *v6))
        {
          if (*(unsigned char *)(v3 + *v20)) {
            break;
          }
          char v76 = 0;
          unsigned int v77 = 0;
          uint64_t v78 = 0;
          while (1)
          {
            uint64_t v79 = *v17;
            uint64_t v80 = *(void *)(v3 + v79);
            unint64_t v81 = v80 + 1;
            if (v80 == -1 || v81 > *(void *)(v3 + *v6)) {
              break;
            }
            char v82 = *(unsigned char *)(*(void *)(v3 + *v21) + v80);
            *(void *)(v3 + v79) = v81;
            v78 |= (unint64_t)(v82 & 0x7F) << v76;
            if (v82 < 0)
            {
              v76 += 7;
              BOOL v29 = v77++ >= 9;
              if (!v29) {
                continue;
              }
            }
            goto LABEL_109;
          }
          *(unsigned char *)(v3 + *v20) = 1;
LABEL_109:
          PBRepeatedUInt32Add();
        }
        goto LABEL_126;
      case 8:
        if (!v34 || (*(_WORD *)(a1 + 144) & 0x100) != 0) {
          goto LABEL_139;
        }
        if (v31 == 2)
        {
          if (!PBReaderPlaceMark()) {
            goto LABEL_215;
          }
          uint64_t v20 = (int *)MEMORY[0x1E4F940C8];
          BOOL v21 = (int *)MEMORY[0x1E4F940B8];
          while (*(void *)(v3 + *v17) < *(void *)(v3 + *v6))
          {
            if (*(unsigned char *)(v3 + *v20)) {
              break;
            }
            char v83 = 0;
            unsigned int v84 = 0;
            uint64_t v85 = 0;
            while (1)
            {
              uint64_t v86 = *v17;
              uint64_t v87 = *(void *)(v3 + v86);
              unint64_t v88 = v87 + 1;
              if (v87 == -1 || v88 > *(void *)(v3 + *v6)) {
                break;
              }
              char v89 = *(unsigned char *)(*(void *)(v3 + *v21) + v87);
              *(void *)(v3 + v86) = v88;
              v85 |= (unint64_t)(v89 & 0x7F) << v83;
              if (v89 < 0)
              {
                v83 += 7;
                BOOL v29 = v84++ >= 9;
                if (!v29) {
                  continue;
                }
              }
              goto LABEL_125;
            }
            *(unsigned char *)(v3 + *v20) = 1;
LABEL_125:
            PBRepeatedUInt64Add();
          }
LABEL_126:
          PBReaderRecallMark();
        }
        else
        {
          char v114 = 0;
          unsigned int v115 = 0;
          uint64_t v116 = 0;
          uint64_t v20 = (int *)MEMORY[0x1E4F940C8];
          BOOL v21 = (int *)MEMORY[0x1E4F940B8];
          while (1)
          {
            uint64_t v117 = *v17;
            uint64_t v118 = *(void *)(v3 + v117);
            unint64_t v119 = v118 + 1;
            if (v118 == -1 || v119 > *(void *)(v3 + *v6)) {
              break;
            }
            char v120 = *(unsigned char *)(*(void *)(v3 + *v21) + v118);
            *(void *)(v3 + v117) = v119;
            v116 |= (unint64_t)(v120 & 0x7F) << v114;
            if (v120 < 0)
            {
              v114 += 7;
              BOOL v29 = v115++ >= 9;
              if (!v29) {
                continue;
              }
            }
            goto LABEL_192;
          }
          *(unsigned char *)(v3 + *v20) = 1;
LABEL_192:
          PBRepeatedUInt64Add();
        }
LABEL_193:
        char v16 = v126;
        goto LABEL_194;
      case 9:
        if (!v34) {
          goto LABEL_139;
        }
        if ((*(_WORD *)(a1 + 144) & 0x400) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_215:
            int v127 = 0;
            char v16 = v126;
            goto LABEL_197;
          }
          __int16 v99 = 32 * *(_WORD *)(a1 + 144);
LABEL_166:
          v7 += v99 >> 15;
          char v16 = v126;
        }
        else
        {
          uint64_t v39 = PBReaderReadString();
          uint64_t v40 = 104;
LABEL_130:
          uint64_t v90 = *(void **)(a1 + v40);
          *(void *)(a1 + v40) = v39;

          char v16 = v126;
          --v7;
        }
        uint64_t v20 = (int *)MEMORY[0x1E4F940C8];
        BOOL v21 = (int *)MEMORY[0x1E4F940B8];
        goto LABEL_194;
      case 10:
        if ((v8 & 1) == 0) {
          goto LABEL_139;
        }
        char v91 = 0;
        unsigned int v92 = 0;
        uint64_t v46 = 0;
        *(_WORD *)(a1 + 144) |= 1u;
        uint64_t v20 = (int *)MEMORY[0x1E4F940C8];
        BOOL v21 = (int *)MEMORY[0x1E4F940B8];
        while (2)
        {
          uint64_t v93 = *v17;
          uint64_t v94 = *(void *)(v3 + v93);
          unint64_t v95 = v94 + 1;
          if (v94 == -1 || v95 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v20) = 1;
          }
          else
          {
            char v96 = *(unsigned char *)(*(void *)(v3 + *v21) + v94);
            *(void *)(v3 + v93) = v95;
            v46 |= (unint64_t)(v96 & 0x7F) << v91;
            if (v96 < 0)
            {
              v91 += 7;
              BOOL v29 = v92++ >= 9;
              if (v29)
              {
                LODWORD(v46) = 0;
                goto LABEL_160;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v20)) {
          LODWORD(v46) = 0;
        }
LABEL_160:
        uint64_t v98 = 124;
LABEL_161:
        *(_DWORD *)(a1 + v98) = v46;
        goto LABEL_194;
      default:
        if ((v125 & 1) != 0 && (*(_WORD *)(a1 + 144) & 0x20) == 0)
        {
          if (!*(void *)(a1 + 16))
          {
            id v41 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            BOOL v42 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v41;
          }
          int v43 = PBUnknownFieldAdd();
          char v16 = v126;
          uint64_t v20 = (int *)MEMORY[0x1E4F940C8];
          BOOL v21 = (int *)MEMORY[0x1E4F940B8];
          if (!v43)
          {
            int v127 = 0;
            goto LABEL_199;
          }
LABEL_194:
          if (!(v128 & 1 | (v7 != 0)) || *(void *)(v3 + *v17) >= *(void *)(v3 + *v6)) {
            goto LABEL_196;
          }
          continue;
        }
LABEL_139:
        char v97 = PBReaderSkipValueWithTag();
        char v16 = v126;
        uint64_t v20 = (int *)MEMORY[0x1E4F940C8];
        BOOL v21 = (int *)MEMORY[0x1E4F940B8];
        if (v97) {
          goto LABEL_194;
        }
        int v127 = 0;
LABEL_197:
        char v19 = v125;
LABEL_198:
        if (v19) {
LABEL_199:
        }
          *(_WORD *)(a1 + 144) |= 0x20u;
        if (v16 & 1 | ((v127 & 1) == 0))
        {
          *(_WORD *)(a1 + 144) |= 0x200u;
          *(_WORD *)(a1 + 144) |= 0x80u;
          *(_WORD *)(a1 + 144) |= 0x40u;
          *(_WORD *)(a1 + 144) |= 0x100u;
          *(_WORD *)(a1 + 144) |= 0x400u;
        }
        else if (v18)
        {
          while (1)
          {
            int v121 = *v18++;
            __int16 v122 = 512;
            switch(v121)
            {
              case 0:
                goto LABEL_209;
              case 1:
                goto LABEL_208;
              case 6:
                __int16 v122 = 128;
                goto LABEL_208;
              case 7:
                __int16 v122 = 64;
                goto LABEL_208;
              case 8:
                __int16 v122 = 256;
                goto LABEL_208;
              case 9:
                __int16 v122 = 1024;
LABEL_208:
                *(_WORD *)(a1 + 144) |= v122;
                break;
              default:
                continue;
            }
          }
        }
LABEL_209:
        if (v127)
        {
          unint64_t v3 = *(unsigned char *)(v3 + (int)*MEMORY[0x1E4F940C8]) == 0;
          if ((v16 & 1) == 0) {
            return v3;
          }
LABEL_213:
          char v123 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        else
        {
          unint64_t v3 = 0;
          if (v16) {
            goto LABEL_213;
          }
        }
        return v3;
    }
  }
}

void sub_189B6E0C4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B6E254(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B6E3E4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B6EA98(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDTransitScheduleGroupReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 116))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDTransitScheduleGroupReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 120));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 112) = [v8 position];
  *(_DWORD *)(a1 + 116) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOPDTransitScheduleGroupReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOPDTransitScheduleGroupReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDTransitScheduleGroupReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 120));
  return Specified;
}

void sub_189B6ED00(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B6F028(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B6F2B8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B6F880(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDTransitTripGeometryReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 60);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 56)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  int v11 = ((*(unsigned __int8 *)(a1 + 68) >> 1) & 1)
      + (*(unsigned char *)(a1 + 68) & 1)
      + ((*(unsigned __int8 *)(a1 + 68) >> 2) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v9])
    {
      case -4:
        ++v11;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_9;
      case 0:
        BOOL v14 = v11 != 0;
        int v15 = v14 & ~v10 | v7;
        int v61 = v14 | v10;
        char v16 = (int *)MEMORY[0x1E4F940E8];
        if (((v14 | v10) | v8)) {
          BOOL v17 = 0;
        }
        else {
          BOOL v17 = a3;
        }
        int v18 = 1;
        if (*(void *)(v3 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(v3 + *v6)) {
          goto LABEL_81;
        }
        char v59 = v15;
        int v60 = (v9 != 0) | v61 | v15;
        char v19 = (int *)MEMORY[0x1E4F940C8];
        uint64_t v20 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v11;
LABEL_7:
        uint64_t v12 = v7;
LABEL_8:
        uint64_t v13 = v10;
LABEL_9:
        ++v9;
        uint64_t v7 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(unsigned char *)(v3 + *v19)) {
      goto LABEL_79;
    }
    char v21 = 0;
    unsigned int v22 = 0;
    unint64_t v23 = 0;
    while (1)
    {
      uint64_t v24 = *v16;
      uint64_t v25 = *(void *)(v3 + v24);
      unint64_t v26 = v25 + 1;
      if (v25 == -1 || v26 > *(void *)(v3 + *v6)) {
        break;
      }
      char v27 = *(unsigned char *)(*(void *)(v3 + *v20) + v25);
      *(void *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0) {
        goto LABEL_24;
      }
      v21 += 7;
      BOOL v28 = v22++ >= 9;
      if (v28)
      {
        unint64_t v23 = 0;
        int v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_26;
      }
    }
    *(unsigned char *)(v3 + *v19) = 1;
LABEL_24:
    int v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(unsigned char *)(v3 + *v19)) {
      unint64_t v23 = 0;
    }
LABEL_26:
    int v30 = v23 & 7;
    if (v29 || v30 == 4)
    {
LABEL_79:
      int v18 = 1;
      goto LABEL_80;
    }
    unint64_t v32 = v23 >> 3;
    BOOL v33 = v61;
    if (!((v17 == 0) | v61 & 1))
    {
      BOOL v34 = v17;
      do
      {
        int v36 = *v34++;
        int v35 = v36;
        BOOL v33 = v36 != 0;
        if (v36) {
          BOOL v37 = v35 == v32;
        }
        else {
          BOOL v37 = 1;
        }
      }
      while (!v37);
    }
    if (v32 != 2) {
      break;
    }
    if (v33 && (*(unsigned char *)(a1 + 68) & 2) == 0)
    {
      if (v30 == 2)
      {
        int v18 = PBReaderPlaceMark();
        if (!v18) {
          goto LABEL_80;
        }
        while (*(void *)(v3 + *v16) < *(void *)(v3 + *v6) && !*(unsigned char *)(v3 + *v19))
        {
          char v39 = 0;
          unsigned int v40 = 0;
          uint64_t v41 = 0;
          while (1)
          {
            uint64_t v42 = *v16;
            uint64_t v43 = *(void *)(v3 + v42);
            unint64_t v44 = v43 + 1;
            if (v43 == -1 || v44 > *(void *)(v3 + *v6)) {
              break;
            }
            char v45 = *(unsigned char *)(*(void *)(v3 + *v20) + v43);
            *(void *)(v3 + v42) = v44;
            v41 |= (unint64_t)(v45 & 0x7F) << v39;
            if (v45 < 0)
            {
              v39 += 7;
              BOOL v28 = v40++ >= 9;
              if (!v28) {
                continue;
              }
            }
            goto LABEL_58;
          }
          *(unsigned char *)(v3 + *v19) = 1;
LABEL_58:
          PBRepeatedUInt32Add();
        }
        PBReaderRecallMark();
      }
      else
      {
        char v48 = 0;
        unsigned int v49 = 0;
        uint64_t v50 = 0;
        while (1)
        {
          uint64_t v51 = *v16;
          uint64_t v52 = *(void *)(v3 + v51);
          unint64_t v53 = v52 + 1;
          if (v52 == -1 || v53 > *(void *)(v3 + *v6)) {
            break;
          }
          char v54 = *(unsigned char *)(*(void *)(v3 + *v20) + v52);
          *(void *)(v3 + v51) = v53;
          v50 |= (unint64_t)(v54 & 0x7F) << v48;
          if (v54 < 0)
          {
            v48 += 7;
            BOOL v28 = v49++ >= 9;
            if (!v28) {
              continue;
            }
          }
          goto LABEL_76;
        }
        *(unsigned char *)(v3 + *v19) = 1;
LABEL_76:
        PBRepeatedUInt32Add();
      }
LABEL_77:
      if ((v60 & 1) == 0) {
        goto LABEL_79;
      }
      goto LABEL_78;
    }
LABEL_65:
    int v18 = PBReaderSkipValueWithTag();
    if ((v18 & v60 & 1) == 0) {
      goto LABEL_80;
    }
LABEL_78:
    if (*(void *)(v3 + *v16) >= *(void *)(v3 + *v6)) {
      goto LABEL_79;
    }
  }
  if (v32 != 1)
  {
    if ((v59 & 1) != 0 && (*(unsigned char *)(a1 + 68) & 1) == 0)
    {
      if (!*(void *)(a1 + 16))
      {
        id v46 = objc_alloc_init(MEMORY[0x1E4F940B0]);
        uint64_t v47 = *(void **)(a1 + 16);
        *(void *)(a1 + 16) = v46;
      }
      int v18 = PBUnknownFieldAdd();
      if (!v18) {
        goto LABEL_82;
      }
      goto LABEL_77;
    }
    goto LABEL_65;
  }
  if (!v33 || (*(unsigned char *)(a1 + 68) & 4) != 0) {
    goto LABEL_65;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_99;
  }
  BOOL v38 = objc_alloc_init(GEOPDTripLink);
  if (GEOPDTripLinkReadAllFrom((uint64_t)v38, (void *)v3))
  {
    PBReaderRecallMark();
    -[GEOPDTransitTripGeometry _addNoFlagsTripLink:](a1, v38);

    goto LABEL_77;
  }

LABEL_99:
  int v18 = 0;
LABEL_80:
  LOBYTE(v15) = v59;
LABEL_81:
  if (v15) {
LABEL_82:
  }
    *(unsigned char *)(a1 + 68) |= 1u;
  if (v61 & 1 | ((v18 & 1) == 0))
  {
    *(unsigned char *)(a1 + 68) |= 4u;
    *(unsigned char *)(a1 + 68) |= 2u;
    goto LABEL_92;
  }
  if (v17)
  {
    while (2)
    {
      while (1)
      {
        int v56 = *v17++;
        int v55 = v56;
        if (v56 == 1) {
          break;
        }
        if (v55 == 2) {
          goto LABEL_91;
        }
        if (!v55) {
          goto LABEL_92;
        }
      }
      LOBYTE(v55) = 4;
LABEL_91:
      *(unsigned char *)(a1 + 68) |= v55;
      continue;
    }
  }
LABEL_92:
  if (v18) {
    unint64_t v3 = *(unsigned char *)(v3 + (int)*MEMORY[0x1E4F940C8]) == 0;
  }
  else {
    unint64_t v3 = 0;
  }
  if (v61)
  {
    char v57 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_189B700C4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B7060C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDTransitTripGeometryCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v10 = *MEMORY[0x1E4F143B8];
  long long v5 = 0u;
  long long v6 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  id v1 = *(id *)(a1 + 48);
  uint64_t v2 = [v1 countByEnumeratingWithState:&v5 objects:v9 count:16];
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t v4 = *(void *)v6;
    while (1)
    {
      if (*(void *)v6 != v4) {
        objc_enumerationMutation(v1);
      }
      if (!--v3)
      {
        uint64_t v3 = [v1 countByEnumeratingWithState:&v5 objects:v9 count:16];
        if (!v3) {
          break;
        }
      }
    }
  }
}

unint64_t GEOPDTransitTripGeometryReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 60))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDTransitTripGeometryReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = [v8 position];
  *(_DWORD *)(a1 + 60) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOPDTransitTripGeometryReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOPDTransitTripGeometryReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDTransitTripGeometryReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOPDTransitTripGeometryCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_189B70958(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B70BB8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B70DF8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDTransitTripGeometryFilterReadAllFrom(uint64_t a1, void *a2)
{
  uint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    long long v5 = (int *)MEMORY[0x1E4F940E0];
    long long v6 = (int *)MEMORY[0x1E4F940C8];
    long long v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      int v8 = v3[*v6];
      if (*(void *)&v3[*v4] >= *(void *)&v3[*v5]) {
        break;
      }
      if (v3[*v6])
      {
        int v8 = 1;
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      uint64_t v11 = 0;
      while (1)
      {
        uint64_t v12 = *v4;
        uint64_t v13 = *(void *)&v3[v12];
        unint64_t v14 = v13 + 1;
        if (v13 == -1 || v14 > *(void *)&v3[*v5]) {
          break;
        }
        char v15 = *(unsigned char *)(*(void *)&v3[*v7] + v13);
        *(void *)&v3[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0) {
          goto LABEL_13;
        }
        v9 += 7;
        if (v10++ >= 9)
        {
          char v17 = 0;
          int v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      int v8 = v3[*v6];
      if (v3[*v6]) {
        char v17 = 0;
      }
      else {
        char v17 = v11;
      }
LABEL_16:
      if (v8) {
        BOOL v18 = 1;
      }
      else {
        BOOL v18 = (v17 & 7) == 4;
      }
      if (v18) {
        break;
      }
      if (!*(void *)(a1 + 8))
      {
        id v19 = objc_alloc_init(MEMORY[0x1E4F940B0]);
        uint64_t v20 = *(void **)(a1 + 8);
        *(void *)(a1 + 8) = v19;
      }
      if ((PBUnknownFieldAdd() & 1) == 0) {
        goto LABEL_23;
      }
    }
    BOOL v21 = v8 == 0;
  }
  else
  {
LABEL_23:
    BOOL v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_189B712A0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDTransitTripStopReadAllFrom(uint64_t a1, void *a2, int a3)
{
  long long v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    long long v6 = (int *)MEMORY[0x1E4F940E8];
    long long v7 = (int *)MEMORY[0x1E4F940E0];
    int v8 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v5[*MEMORY[0x1E4F940E8]] < *(void *)&v5[*MEMORY[0x1E4F940E0]])
    {
      char v9 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v5[*v8]) {
          break;
        }
        char v10 = 0;
        unsigned int v11 = 0;
        unint64_t v12 = 0;
        while (1)
        {
          uint64_t v13 = *v6;
          uint64_t v14 = *(void *)&v5[v13];
          unint64_t v15 = v14 + 1;
          if (v14 == -1 || v15 > *(void *)&v5[*v7]) {
            break;
          }
          char v16 = *(unsigned char *)(*(void *)&v5[*v9] + v14);
          *(void *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0) {
            goto LABEL_13;
          }
          v10 += 7;
          if (v11++ >= 9)
          {
            unint64_t v12 = 0;
            int v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        int v18 = v5[*v8];
        if (v5[*v8]) {
          unint64_t v12 = 0;
        }
LABEL_15:
        if (v18 || (v12 & 7) == 4) {
          break;
        }
        if ((v12 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_29;
          }
          uint64_t v20 = objc_alloc_init(GEOPDTransitInfoSnippet);
          if (!GEOPDTransitInfoSnippetReadAllFrom((uint64_t)v20, v5, a3))
          {

            goto LABEL_29;
          }
          PBReaderRecallMark();
          -[GEOPDTransitTripStop addStopInfo:](a1, v20);
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v21 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            unsigned int v22 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v21;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_29;
          }
        }
      }
      while (*(void *)&v5[*v6] < *(void *)&v5[*v7]);
    }
    BOOL v23 = v5[*v8] == 0;
  }
  else
  {
LABEL_29:
    BOOL v23 = 0;
  }
  objc_sync_exit(v5);

  return v23;
}

void sub_189B71A08(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDTransitTripStopFilterReadAllFrom(uint64_t a1, void *a2)
{
  uint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    long long v5 = (int *)MEMORY[0x1E4F940E0];
    long long v6 = (int *)MEMORY[0x1E4F940C8];
    long long v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      int v8 = v3[*v6];
      if (*(void *)&v3[*v4] >= *(void *)&v3[*v5]) {
        break;
      }
      if (v3[*v6])
      {
        int v8 = 1;
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      uint64_t v11 = 0;
      while (1)
      {
        uint64_t v12 = *v4;
        uint64_t v13 = *(void *)&v3[v12];
        unint64_t v14 = v13 + 1;
        if (v13 == -1 || v14 > *(void *)&v3[*v5]) {
          break;
        }
        char v15 = *(unsigned char *)(*(void *)&v3[*v7] + v13);
        *(void *)&v3[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0) {
          goto LABEL_13;
        }
        v9 += 7;
        if (v10++ >= 9)
        {
          char v17 = 0;
          int v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      int v8 = v3[*v6];
      if (v3[*v6]) {
        char v17 = 0;
      }
      else {
        char v17 = v11;
      }
LABEL_16:
      if (v8) {
        BOOL v18 = 1;
      }
      else {
        BOOL v18 = (v17 & 7) == 4;
      }
      if (v18) {
        break;
      }
      if (!*(void *)(a1 + 8))
      {
        id v19 = objc_alloc_init(MEMORY[0x1E4F940B0]);
        uint64_t v20 = *(void **)(a1 + 8);
        *(void *)(a1 + 8) = v19;
      }
      if ((PBUnknownFieldAdd() & 1) == 0) {
        goto LABEL_23;
      }
    }
    BOOL v21 = v8 == 0;
  }
  else
  {
LABEL_23:
    BOOL v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_189B721E4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDTransitTripStopTimeReadAllFrom(uint64_t a1, void *a2, int a3)
{
  long long v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    long long v6 = (int *)MEMORY[0x1E4F940E8];
    long long v7 = (int *)MEMORY[0x1E4F940E0];
    int v8 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v5[*MEMORY[0x1E4F940E8]] < *(void *)&v5[*MEMORY[0x1E4F940E0]])
    {
      char v9 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v5[*v8]) {
          break;
        }
        char v10 = 0;
        unsigned int v11 = 0;
        unint64_t v12 = 0;
        while (1)
        {
          uint64_t v13 = *v6;
          uint64_t v14 = *(void *)&v5[v13];
          unint64_t v15 = v14 + 1;
          if (v14 == -1 || v15 > *(void *)&v5[*v7]) {
            break;
          }
          char v16 = *(unsigned char *)(*(void *)&v5[*v9] + v14);
          *(void *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0) {
            goto LABEL_13;
          }
          v10 += 7;
          if (v11++ >= 9)
          {
            unint64_t v12 = 0;
            int v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        int v18 = v5[*v8];
        if (v5[*v8]) {
          unint64_t v12 = 0;
        }
LABEL_15:
        if (v18 || (v12 & 7) == 4) {
          break;
        }
        if ((v12 >> 3) == 2)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_29;
          }
          uint64_t v20 = objc_alloc_init(GEOPDDepartureSequence);
          if (!GEOPDDepartureSequenceReadAllFrom((uint64_t)v20, v5, a3))
          {

            goto LABEL_29;
          }
          PBReaderRecallMark();
          -[GEOPDTransitTripStopTime addDepartureSequence:](a1, v20);
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v21 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            unsigned int v22 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v21;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_29;
          }
        }
      }
      while (*(void *)&v5[*v6] < *(void *)&v5[*v7]);
    }
    BOOL v23 = v5[*v8] == 0;
  }
  else
  {
LABEL_29:
    BOOL v23 = 0;
  }
  objc_sync_exit(v5);

  return v23;
}

void sub_189B7299C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t GEOPDTransitTripStopTimeFilterReadSpecified(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 60));
  long long v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 56);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 52)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  int v11 = ((*(unsigned __int8 *)(a1 + 68) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 68) >> 4) & 1)
      + ((*(unsigned __int8 *)(a1 + 68) >> 2) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v11;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_9;
      case 0:
        BOOL v14 = v11 != 0;
        char v15 = v14 & ~(_BYTE)v10 | v9;
        unsigned __int8 v16 = v14 | v10;
        char v59 = v15;
        char v60 = v16 | v15;
        if ((v16 | v8)) {
          char v17 = 0;
        }
        else {
          char v17 = a3;
        }
        char v61 = (v17 == 0) | v16;
        BOOL v62 = v16;
        int v18 = (int *)MEMORY[0x1E4F940E8];
        id v19 = (int *)MEMORY[0x1E4F940C8];
        uint64_t v20 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v11;
LABEL_7:
        uint64_t v12 = v9;
LABEL_8:
        uint64_t v13 = v10;
LABEL_9:
        ++v7;
        uint64_t v9 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v18) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v19)) {
      goto LABEL_80;
    }
    char v21 = 0;
    unsigned int v22 = 0;
    unint64_t v23 = 0;
    while (1)
    {
      uint64_t v24 = *v18;
      uint64_t v25 = *(void *)(v3 + v24);
      unint64_t v26 = v25 + 1;
      if (v25 == -1 || v26 > *(void *)(v3 + *v6)) {
        break;
      }
      char v27 = *(unsigned char *)(*(void *)(v3 + *v20) + v25);
      *(void *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0) {
        goto LABEL_24;
      }
      v21 += 7;
      BOOL v28 = v22++ >= 9;
      if (v28)
      {
        unint64_t v23 = 0;
        int v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_26;
      }
    }
    *(unsigned char *)(v3 + *v19) = 1;
LABEL_24:
    int v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(unsigned char *)(v3 + *v19)) {
      unint64_t v23 = 0;
    }
LABEL_26:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_80:
      int v57 = 1;
      goto LABEL_81;
    }
    unint64_t v31 = v23 >> 3;
    BOOL v32 = v62;
    if ((v61 & 1) == 0)
    {
      BOOL v33 = v17;
      do
      {
        int v35 = *v33++;
        int v34 = v35;
        BOOL v32 = v35 != 0;
        if (v35) {
          BOOL v36 = v34 == v31;
        }
        else {
          BOOL v36 = 1;
        }
      }
      while (!v36);
    }
    switch((int)v31)
    {
      case 1:
        if (!v32) {
          goto LABEL_67;
        }
        if ((*(unsigned char *)(a1 + 68) & 8) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_101;
          }
          BOOL v37 = objc_alloc_init(GEOPDDeparturePredicate);
          if (GEOPDDeparturePredicateReadAllFrom((uint64_t)v37, (void *)v3))
          {
            PBReaderRecallMark();
            uint64_t v38 = 24;
            goto LABEL_54;
          }
          goto LABEL_100;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_101;
        }
        char v51 = 16 * *(unsigned char *)(a1 + 68);
        goto LABEL_77;
      case 2:
        if (!v32) {
          goto LABEL_67;
        }
        if ((*(unsigned char *)(a1 + 68) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_101;
          }
          char v51 = 8 * *(unsigned char *)(a1 + 68);
LABEL_77:
          v7 += v51 >> 7;
          goto LABEL_78;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_101;
        }
        BOOL v37 = objc_alloc_init(GEOPDDeparturePredicate);
        if (GEOPDDeparturePredicateReadAllFrom((uint64_t)v37, (void *)v3))
        {
          PBReaderRecallMark();
          uint64_t v38 = 32;
LABEL_54:
          uint64_t v42 = *(void **)(a1 + v38);
          *(void *)(a1 + v38) = v37;

          --v7;
LABEL_78:
          id v19 = (int *)MEMORY[0x1E4F940C8];
          goto LABEL_79;
        }
LABEL_100:

LABEL_101:
        int v57 = 0;
        unsigned int v58 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__flags;
        id v19 = (int *)MEMORY[0x1E4F940C8];
LABEL_82:
        if (v59) {
LABEL_83:
        }
          *(unsigned char *)(a1 + v58[562]) |= 4u;
        if (v62 || (v57 & 1) == 0)
        {
          *(unsigned char *)(a1 + v58[562]) |= 8u;
          *(unsigned char *)(a1 + v58[562]) |= 0x10u;
          goto LABEL_94;
        }
        if (v17)
        {
          while (1)
          {
            int v54 = *v17++;
            int v53 = v54;
            if (v54 == 1) {
              break;
            }
            if (v53 == 2)
            {
              char v52 = 16;
LABEL_90:
              *(unsigned char *)(a1 + v58[562]) |= v52;
            }
            else if (!v53)
            {
              goto LABEL_94;
            }
          }
          char v52 = 8;
          goto LABEL_90;
        }
LABEL_94:
        if (v57) {
          uint64_t v3 = *(unsigned char *)(v3 + *v19) == 0;
        }
        else {
          uint64_t v3 = 0;
        }
        if (v62)
        {
          int v55 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      case 3:
        if ((v8 & 1) == 0) {
          goto LABEL_67;
        }
        if (!PBReaderPlaceMark() || !GEOPDTimeRangeReadAllFrom(a1 + 40, v3)) {
          goto LABEL_101;
        }
        PBReaderRecallMark();
        *(unsigned char *)(a1 + 68) |= 1u;
        goto LABEL_78;
      case 4:
        if ((v8 & 1) == 0) {
          goto LABEL_67;
        }
        char v43 = 0;
        unsigned int v44 = 0;
        uint64_t v45 = 0;
        *(unsigned char *)(a1 + 68) |= 2u;
        while (2)
        {
          uint64_t v46 = *v18;
          uint64_t v47 = *(void *)(v3 + v46);
          unint64_t v48 = v47 + 1;
          if (v47 == -1 || v48 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v19) = 1;
          }
          else
          {
            char v49 = *(unsigned char *)(*(void *)(v3 + *v20) + v47);
            *(void *)(v3 + v46) = v48;
            v45 |= (unint64_t)(v49 & 0x7F) << v43;
            if (v49 < 0)
            {
              v43 += 7;
              BOOL v28 = v44++ >= 9;
              if (v28)
              {
                uint64_t v45 = 0;
                goto LABEL_72;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v19)) {
          uint64_t v45 = 0;
        }
LABEL_72:
        *(unsigned char *)(a1 + 64) = v45 != 0;
        goto LABEL_79;
      default:
        if ((v59 & 1) == 0 || (*(unsigned char *)(a1 + 68) & 4) != 0)
        {
LABEL_67:
          char v50 = PBReaderSkipValueWithTag();
          id v19 = (int *)MEMORY[0x1E4F940C8];
          if ((v50 & 1) == 0)
          {
            int v57 = 0;
LABEL_81:
            unsigned int v58 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__flags;
            goto LABEL_82;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v39 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            unsigned int v40 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v39;
          }
          int v41 = PBUnknownFieldAdd();
          id v19 = (int *)MEMORY[0x1E4F940C8];
          if (!v41)
          {
            int v57 = 0;
            unsigned int v58 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__flags;
            goto LABEL_83;
          }
        }
LABEL_79:
        if (!(v60 & 1 | (v7 != 0))) {
          goto LABEL_80;
        }
        continue;
    }
  }
}

void sub_189B739B4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t GEOPDTransitTripStopTimeFilterReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 56))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDTransitTripStopTimeFilterReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 60));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 52) = [v8 position];
  *(_DWORD *)(a1 + 56) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOPDTransitTripStopTimeFilterReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOPDTransitTripStopTimeFilterReadAllFrom_initialTag;
  }
  uint64_t Specified = GEOPDTransitTripStopTimeFilterReadSpecified(a1, (uint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 60));
  return Specified;
}

void sub_189B73C2C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B73E20(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDTransitTripStopTimeFilterIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 60));
  BOOL v2 = (*(unsigned char *)(a1 + 68) & 0x38) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 60));
  return v2;
}

void sub_189B74080(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDTripLinkReadAllFrom(uint64_t a1, void *a2)
{
  uint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    long long v5 = (int *)MEMORY[0x1E4F940E0];
    long long v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 2)
        {
          uint64_t v25 = PBReaderReadData();
          unint64_t v26 = *(void **)(a1 + 16);
          *(void *)(a1 + 16) = v25;
        }
        else if ((v10 >> 3) == 1)
        {
          char v18 = 0;
          unsigned int v19 = 0;
          uint64_t v20 = 0;
          *(unsigned char *)(a1 + 32) |= 1u;
          while (1)
          {
            uint64_t v21 = *v4;
            uint64_t v22 = *(void *)&v3[v21];
            unint64_t v23 = v22 + 1;
            if (v22 == -1 || v23 > *(void *)&v3[*v5]) {
              break;
            }
            char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
            *(void *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0) {
              goto LABEL_34;
            }
            v18 += 7;
            BOOL v15 = v19++ >= 9;
            if (v15)
            {
              uint64_t v20 = 0;
              goto LABEL_36;
            }
          }
          v3[*v6] = 1;
LABEL_34:
          if (v3[*v6]) {
            uint64_t v20 = 0;
          }
LABEL_36:
          *(void *)(a1 + 24) = v20;
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v27 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            BOOL v28 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v27;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_39;
          }
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v29 = v3[*v6] == 0;
  }
  else
  {
LABEL_39:
    BOOL v29 = 0;
  }
  objc_sync_exit(v3);

  return v29;
}

void sub_189B74954(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B74D9C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDURLDataReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  long long v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  uint64_t v7 = 0;
  uint64_t v8 = 0;
  char v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  int v12 = ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1)
      + (*(unsigned char *)(a1 + 52) & 1)
      + ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1);
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v10])
    {
      case -4:
        ++v12;
        uint64_t v13 = v7;
        goto LABEL_8;
      case -3:
        char v9 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v13 = v7;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 != 0;
        char v17 = v16 & ~(_BYTE)v11 | v8;
        unsigned __int8 v18 = v16 | v11;
        char v54 = v17;
        char v55 = v18 | v17;
        if ((v18 | v9)) {
          unsigned int v19 = 0;
        }
        else {
          unsigned int v19 = a3;
        }
        uint64_t v20 = (int *)MEMORY[0x1E4F940E8];
        char v56 = (v19 == 0) | v18;
        BOOL v57 = v18;
        uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
        uint64_t v22 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v7;
        uint64_t v14 = v8;
LABEL_8:
        uint64_t v15 = v11;
LABEL_10:
        ++v10;
        uint64_t v7 = v13;
        uint64_t v8 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v21)) {
      goto LABEL_64;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      if (v24++ >= 9)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_25:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_64:
      int v52 = 1;
      goto LABEL_65;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v57;
    if ((v56 & 1) == 0)
    {
      int v35 = v19;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    if (v33 == 2)
    {
      if (!v34) {
        goto LABEL_55;
      }
      if ((*(unsigned char *)(a1 + 52) & 4) == 0)
      {
        uint64_t v41 = PBReaderReadString();
        unsigned int v40 = *(void **)(a1 + 32);
        *(void *)(a1 + 32) = v41;
LABEL_48:

        --v10;
LABEL_62:
        uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
        goto LABEL_63;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        goto LABEL_84;
      }
      char v46 = 32 * *(unsigned char *)(a1 + 52);
LABEL_61:
      v10 += v46 >> 7;
      goto LABEL_62;
    }
    if (v33 == 1) {
      break;
    }
    if (v54 & 1) == 0 || (*(unsigned char *)(a1 + 52))
    {
LABEL_55:
      char v45 = PBReaderSkipValueWithTag();
      uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
      if ((v45 & 1) == 0)
      {
        int v52 = 0;
        goto LABEL_65;
      }
      goto LABEL_63;
    }
    if (!*(void *)(a1 + 16))
    {
      id v42 = objc_alloc_init(MEMORY[0x1E4F940B0]);
      char v43 = *(void **)(a1 + 16);
      *(void *)(a1 + 16) = v42;
    }
    int v44 = PBUnknownFieldAdd();
    uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
    if (!v44)
    {
      int v52 = 0;
      int v53 = &OBJC_IVAR___GEOPDAddressComponent__unknownFields;
      goto LABEL_66;
    }
LABEL_63:
    if (!(v55 & 1 | (v10 != 0))) {
      goto LABEL_64;
    }
  }
  if (!v34) {
    goto LABEL_55;
  }
  if ((*(unsigned char *)(a1 + 52) & 2) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0) {
      goto LABEL_84;
    }
    char v46 = *(unsigned char *)(a1 + 52) << 6;
    goto LABEL_61;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_84;
  }
  id v39 = objc_alloc_init(GEOLocalizedString);
  if (GEOLocalizedStringReadAllFrom((uint64_t)v39, (void *)v3, v7 & 1))
  {
    PBReaderRecallMark();
    unsigned int v40 = *(void **)(a1 + 24);
    *(void *)(a1 + 24) = v39;
    goto LABEL_48;
  }

LABEL_84:
  int v52 = 0;
  uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_65:
  int v53 = &OBJC_IVAR___GEOPDAddressComponent__unknownFields;
  if ((v54 & 1) == 0) {
    goto LABEL_67;
  }
LABEL_66:
  *(unsigned char *)(a1 + v53[998]) |= 1u;
LABEL_67:
  if (v57 || (v52 & 1) == 0)
  {
    *(unsigned char *)(a1 + v53[998]) |= 2u;
    *(unsigned char *)(a1 + v53[998]) |= 4u;
    goto LABEL_77;
  }
  if (v19)
  {
    while (2)
    {
      while (1)
      {
        int v48 = *v19++;
        int v47 = v48;
        if (v48 == 1) {
          break;
        }
        if (v47 == 2)
        {
          char v49 = 4;
          goto LABEL_76;
        }
        if (!v47) {
          goto LABEL_77;
        }
      }
      char v49 = 2;
LABEL_76:
      *(unsigned char *)(a1 + v53[998]) |= v49;
      continue;
    }
  }
LABEL_77:
  if (v52) {
    unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
  }
  else {
    unint64_t v3 = 0;
  }
  if (v57)
  {
    char v50 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_189B75454(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B75A5C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDURLDataReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDURLDataReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    char v9 = (int *)&GEOPDURLDataReadAllFrom_recursiveTag;
  }
  else {
    char v9 = (int *)&GEOPDURLDataReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDURLDataReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    [*(id *)(a1 + 24) readAll:1];
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_189B75C04(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDURLDataReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOPDURLDataReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189B75C68(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B75E00(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDURLDataIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  unsigned int v2 = *(unsigned __int8 *)(a1 + 52);
  if ((v2 & 8) != 0) {
    return 1;
  }
  if ((v2 & 2) != 0)
  {
    if (GEOLocalizedStringIsDirty(*(void *)(a1 + 24))) {
      return 1;
    }
    unsigned int v2 = *(unsigned __int8 *)(a1 + 52);
  }
  return (v2 >> 2) & 1;
}

os_unfair_lock_s *GEOPDURLDataIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOPDURLDataIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 12);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_189B76118(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B76380(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDUnifiedActionModuleConfigurationReadAllFrom(uint64_t a1, void *a2, int a3)
{
  long long v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    long long v6 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v7 = (int *)MEMORY[0x1E4F940E0];
    id v8 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v5[*MEMORY[0x1E4F940E8]] < *(void *)&v5[*MEMORY[0x1E4F940E0]])
    {
      char v9 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v5[*v8]) {
          break;
        }
        char v10 = 0;
        unsigned int v11 = 0;
        unint64_t v12 = 0;
        while (1)
        {
          uint64_t v13 = *v6;
          uint64_t v14 = *(void *)&v5[v13];
          unint64_t v15 = v14 + 1;
          if (v14 == -1 || v15 > *(void *)&v5[*v7]) {
            break;
          }
          char v16 = *(unsigned char *)(*(void *)&v5[*v9] + v14);
          *(void *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0) {
            goto LABEL_13;
          }
          v10 += 7;
          if (v11++ >= 9)
          {
            unint64_t v12 = 0;
            int v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        int v18 = v5[*v8];
        if (v5[*v8]) {
          unint64_t v12 = 0;
        }
LABEL_15:
        if (v18 || (v12 & 7) == 4) {
          break;
        }
        if ((v12 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_29;
          }
          uint64_t v20 = objc_alloc_init(GEOPDButtonItem);
          if (!GEOPDButtonItemReadAllFrom((uint64_t)v20, v5, a3))
          {

            goto LABEL_29;
          }
          PBReaderRecallMark();
          -[GEOPDUnifiedActionModuleConfiguration addButtonItem:](a1, v20);
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v21 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            uint64_t v22 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v21;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_29;
          }
        }
      }
      while (*(void *)&v5[*v6] < *(void *)&v5[*v7]);
    }
    BOOL v23 = v5[*v8] == 0;
  }
  else
  {
LABEL_29:
    BOOL v23 = 0;
  }
  objc_sync_exit(v5);

  return v23;
}

void sub_189B76BCC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B770BC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDUserReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  long long v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  uint64_t v7 = 0;
  uint64_t v8 = 0;
  char v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  int v12 = ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1)
      + (*(unsigned char *)(a1 + 52) & 1)
      + ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1);
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v10])
    {
      case -4:
        ++v12;
        uint64_t v13 = v7;
        goto LABEL_8;
      case -3:
        char v9 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v13 = v7;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 != 0;
        char v17 = v16 & ~(_BYTE)v11 | v8;
        unsigned __int8 v18 = v16 | v11;
        char v53 = v17;
        char v54 = v18 | v17;
        if ((v18 | v9)) {
          unsigned int v19 = 0;
        }
        else {
          unsigned int v19 = a3;
        }
        char v55 = (v19 == 0) | v18;
        BOOL v56 = v18;
        uint64_t v20 = (int *)MEMORY[0x1E4F940E8];
        id v21 = (int *)MEMORY[0x1E4F940C8];
        uint64_t v22 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v7;
        uint64_t v14 = v8;
LABEL_8:
        uint64_t v15 = v11;
LABEL_10:
        ++v10;
        uint64_t v7 = v13;
        uint64_t v8 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v21)) {
      goto LABEL_64;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      if (v24++ >= 9)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_25:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_64:
      int v51 = 1;
      goto LABEL_65;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v56;
    if ((v55 & 1) == 0)
    {
      int v35 = v19;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    if (v33 == 2) {
      break;
    }
    if (v33 == 1)
    {
      if (v34)
      {
        if ((*(unsigned char *)(a1 + 52) & 4) == 0)
        {
          uint64_t v39 = PBReaderReadString();
          unsigned int v40 = *(void **)(a1 + 32);
          *(void *)(a1 + 32) = v39;
          goto LABEL_48;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_84;
        }
        char v46 = 32 * *(unsigned char *)(a1 + 52);
        goto LABEL_61;
      }
    }
    else if ((v53 & 1) != 0 && (*(unsigned char *)(a1 + 52) & 1) == 0)
    {
      if (!*(void *)(a1 + 16))
      {
        id v42 = objc_alloc_init(MEMORY[0x1E4F940B0]);
        char v43 = *(void **)(a1 + 16);
        *(void *)(a1 + 16) = v42;
      }
      int v44 = PBUnknownFieldAdd();
      id v21 = (int *)MEMORY[0x1E4F940C8];
      if (!v44)
      {
        int v51 = 0;
        int v52 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__flags;
        goto LABEL_67;
      }
      goto LABEL_63;
    }
LABEL_55:
    char v45 = PBReaderSkipValueWithTag();
    id v21 = (int *)MEMORY[0x1E4F940C8];
    if ((v45 & 1) == 0)
    {
      int v51 = 0;
LABEL_65:
      int v52 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__flags;
      goto LABEL_66;
    }
LABEL_63:
    if (!(v54 & 1 | (v10 != 0))) {
      goto LABEL_64;
    }
  }
  if (!v34) {
    goto LABEL_55;
  }
  if ((*(unsigned char *)(a1 + 52) & 2) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0) {
      goto LABEL_84;
    }
    char v46 = *(unsigned char *)(a1 + 52) << 6;
LABEL_61:
    v10 += v46 >> 7;
    goto LABEL_62;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_84;
  }
  uint64_t v41 = objc_alloc_init(GEOPDPhoto);
  if (GEOPDPhotoReadAllFrom((uint64_t)v41, (void *)v3, v7 & 1))
  {
    PBReaderRecallMark();
    unsigned int v40 = *(void **)(a1 + 24);
    *(void *)(a1 + 24) = v41;
LABEL_48:

    --v10;
LABEL_62:
    id v21 = (int *)MEMORY[0x1E4F940C8];
    goto LABEL_63;
  }

LABEL_84:
  int v51 = 0;
  int v52 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__flags;
  id v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_66:
  if ((v53 & 1) == 0) {
    goto LABEL_68;
  }
LABEL_67:
  *(unsigned char *)(a1 + v52[570]) |= 1u;
LABEL_68:
  if (v56 || (v51 & 1) == 0)
  {
    *(unsigned char *)(a1 + v52[570]) |= 4u;
    *(unsigned char *)(a1 + v52[570]) |= 2u;
    goto LABEL_77;
  }
  if (v19)
  {
    while (2)
    {
      while (1)
      {
        int v48 = *v19++;
        int v47 = v48;
        if (v48 == 1) {
          break;
        }
        if (v47 == 2) {
          goto LABEL_76;
        }
        if (!v47) {
          goto LABEL_77;
        }
      }
      LOBYTE(v47) = 4;
LABEL_76:
      *(unsigned char *)(a1 + v52[570]) |= v47;
      continue;
    }
  }
LABEL_77:
  if (v51) {
    unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
  }
  else {
    unint64_t v3 = 0;
  }
  if (v56)
  {
    char v49 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_189B77718(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B77AC4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDUserReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDUserReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    char v9 = (int *)&GEOPDUserReadAllFrom_recursiveTag;
  }
  else {
    char v9 = (int *)&GEOPDUserReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDUserReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    -[GEOPDPhoto readAll:](*(void *)(a1 + 24), 1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_189B77D44(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B77ED4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL _GEOPDUserIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  if ((*(unsigned char *)(a1 + 52) & 0xC) != 0) {
    return 1;
  }
  if ((*(unsigned char *)(a1 + 52) & 2) == 0) {
    return 0;
  }
  uint64_t v3 = *(void *)(a1 + 24);

  return GEOPDPhotoIsDirty(v3);
}

void sub_189B780C4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDVendorAmenitiesFilterReadAllFrom(uint64_t a1, void *a2)
{
  uint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    long long v5 = (int *)MEMORY[0x1E4F940E0];
    long long v6 = (int *)MEMORY[0x1E4F940C8];
    uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      int v8 = v3[*v6];
      if (*(void *)&v3[*v4] >= *(void *)&v3[*v5]) {
        break;
      }
      if (v3[*v6])
      {
        int v8 = 1;
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      uint64_t v11 = 0;
      while (1)
      {
        uint64_t v12 = *v4;
        uint64_t v13 = *(void *)&v3[v12];
        unint64_t v14 = v13 + 1;
        if (v13 == -1 || v14 > *(void *)&v3[*v5]) {
          break;
        }
        char v15 = *(unsigned char *)(*(void *)&v3[*v7] + v13);
        *(void *)&v3[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0) {
          goto LABEL_13;
        }
        v9 += 7;
        if (v10++ >= 9)
        {
          char v17 = 0;
          int v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      int v8 = v3[*v6];
      if (v3[*v6]) {
        char v17 = 0;
      }
      else {
        char v17 = v11;
      }
LABEL_16:
      if (v8) {
        BOOL v18 = 1;
      }
      else {
        BOOL v18 = (v17 & 7) == 4;
      }
      if (v18) {
        break;
      }
      if (!*(void *)(a1 + 8))
      {
        id v19 = objc_alloc_init(MEMORY[0x1E4F940B0]);
        uint64_t v20 = *(void **)(a1 + 8);
        *(void *)(a1 + 8) = v19;
      }
      if ((PBUnknownFieldAdd() & 1) == 0) {
        goto LABEL_23;
      }
    }
    BOOL v21 = v8 == 0;
  }
  else
  {
LABEL_23:
    BOOL v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_189B789FC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B78CA4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDVendorIDLinkReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  long long v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 68);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 64)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__flags;
  unsigned int v12 = ((*(unsigned __int8 *)(a1 + 76) >> 2) & 1)
      + (*(unsigned char *)(a1 + 76) & 1)
      + ((*(unsigned __int8 *)(a1 + 76) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 76) >> 1) & 1);
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    switch(a3[v9])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_9;
      case 0:
        BOOL v15 = v12 > 1;
        char v16 = v15 & ~(_BYTE)v10 | v7;
        char v17 = v15 | v10;
        BOOL v18 = (int *)MEMORY[0x1E4F940E8];
        if (((v15 | v10) | v8)) {
          id v19 = 0;
        }
        else {
          id v19 = a3;
        }
        int v20 = 1;
        if (*(void *)(v3 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(v3 + *v6)) {
          goto LABEL_92;
        }
        char v64 = v16;
        char v65 = v17 | v16;
        char v67 = (v19 == 0) | v17;
        BOOL v21 = (int *)MEMORY[0x1E4F940C8];
        uint64_t v22 = (int *)MEMORY[0x1E4F940B8];
        char v66 = v15 | v10;
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v7;
LABEL_8:
        uint64_t v14 = v10;
LABEL_9:
        ++v9;
        uint64_t v7 = v13;
        uint64_t v10 = v14;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(unsigned char *)(v3 + *v21)) {
      goto LABEL_87;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v18;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_24;
      }
      v23 += 7;
      BOOL v30 = v24++ >= 9;
      if (v30)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_26;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_24:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_26:
    int v32 = v25 & 7;
    if (v31 || v32 == 4)
    {
LABEL_87:
      int v20 = 1;
      goto LABEL_91;
    }
    unint64_t v34 = v25 >> 3;
    BOOL v35 = v17;
    if ((v67 & 1) == 0)
    {
      int v36 = v19;
      do
      {
        int v38 = *v36++;
        int v37 = v38;
        BOOL v35 = v38 != 0;
        if (v38) {
          BOOL v39 = v37 == v34;
        }
        else {
          BOOL v39 = 1;
        }
      }
      while (!v39);
    }
    if (v34 == 3)
    {
      if (v35 && (*(unsigned char *)(a1 + 76) & 2) == 0)
      {
        if (v32 == 2)
        {
          if (!PBReaderPlaceMark()) {
            goto LABEL_89;
          }
          while (*(void *)(v3 + *v18) < *(void *)(v3 + *v6) && !*(unsigned char *)(v3 + *v21))
          {
            char v42 = 0;
            unsigned int v43 = 0;
            uint64_t v44 = 0;
            while (1)
            {
              uint64_t v45 = *v18;
              uint64_t v46 = *(void *)(v3 + v45);
              unint64_t v47 = v46 + 1;
              if (v46 == -1 || v47 > *(void *)(v3 + *v6)) {
                break;
              }
              char v48 = *(unsigned char *)(*(void *)(v3 + *v22) + v46);
              *(void *)(v3 + v45) = v47;
              v44 |= (unint64_t)(v48 & 0x7F) << v42;
              if (v48 < 0)
              {
                v42 += 7;
                BOOL v30 = v43++ >= 9;
                if (!v30) {
                  continue;
                }
              }
              goto LABEL_57;
            }
            *(unsigned char *)(v3 + *v21) = 1;
LABEL_57:
            PBRepeatedInt32Add();
          }
          PBReaderRecallMark();
        }
        else
        {
          char v53 = 0;
          unsigned int v54 = 0;
          uint64_t v55 = 0;
          while (1)
          {
            uint64_t v56 = *v18;
            uint64_t v57 = *(void *)(v3 + v56);
            unint64_t v58 = v57 + 1;
            if (v57 == -1 || v58 > *(void *)(v3 + *v6)) {
              break;
            }
            char v59 = *(unsigned char *)(*(void *)(v3 + *v22) + v57);
            *(void *)(v3 + v56) = v58;
            v55 |= (unint64_t)(v59 & 0x7F) << v53;
            if (v59 < 0)
            {
              v53 += 7;
              BOOL v30 = v54++ >= 9;
              if (!v30) {
                continue;
              }
            }
            goto LABEL_86;
          }
          *(unsigned char *)(v3 + *v21) = 1;
LABEL_86:
          PBRepeatedInt32Add();
        }
        goto LABEL_69;
      }
      goto LABEL_68;
    }
    if (v34 == 2) {
      break;
    }
    if (v34 == 1)
    {
      if (v35)
      {
        if ((*(unsigned char *)(a1 + 76) & 8) == 0)
        {
          uint64_t v40 = PBReaderReadString();
          uint64_t v41 = 56;
LABEL_61:
          char v49 = *(void **)(a1 + v41);
          *(void *)(a1 + v41) = v40;

          --v9;
          goto LABEL_69;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_89;
        }
        char v52 = 16 * *(unsigned char *)(a1 + 76);
        goto LABEL_76;
      }
      goto LABEL_68;
    }
    if (v64 & 1) == 0 || (*(unsigned char *)(a1 + 76)) {
      goto LABEL_68;
    }
    if (!*(void *)(a1 + 16))
    {
      id v50 = objc_alloc_init(MEMORY[0x1E4F940B0]);
      int v51 = *(void **)(a1 + 16);
      *(void *)(a1 + 16) = v50;
    }
    if (!PBUnknownFieldAdd())
    {
      int v20 = 0;
      char v17 = v66;
      uint64_t v11 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__flags;
LABEL_93:
      *(unsigned char *)(a1 + v11[576]) |= 1u;
      goto LABEL_94;
    }
LABEL_69:
    if (!(v65 & 1 | (v9 != 0)))
    {
      int v20 = 1;
      goto LABEL_90;
    }
    char v17 = v66;
    if (*(void *)(v3 + *v18) >= *(void *)(v3 + *v6)) {
      goto LABEL_87;
    }
  }
  if (!v35)
  {
LABEL_68:
    if ((PBReaderSkipValueWithTag() & 1) == 0) {
      goto LABEL_89;
    }
    goto LABEL_69;
  }
  if ((*(unsigned char *)(a1 + 76) & 4) == 0)
  {
    uint64_t v40 = PBReaderReadString();
    uint64_t v41 = 48;
    goto LABEL_61;
  }
  if (PBReaderSkipValueWithTag())
  {
    char v52 = 32 * *(unsigned char *)(a1 + 76);
LABEL_76:
    v9 += v52 >> 7;
    goto LABEL_69;
  }
LABEL_89:
  int v20 = 0;
LABEL_90:
  char v17 = v66;
LABEL_91:
  char v16 = v64;
  uint64_t v11 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__flags;
LABEL_92:
  if (v16) {
    goto LABEL_93;
  }
LABEL_94:
  if (v17 & 1 | ((v20 & 1) == 0))
  {
    *(unsigned char *)(a1 + v11[576]) |= 8u;
    *(unsigned char *)(a1 + v11[576]) |= 4u;
    *(unsigned char *)(a1 + v11[576]) |= 2u;
  }
  else if (v19)
  {
    while (1)
    {
      int v60 = *v19++;
      char v61 = 8;
      switch(v60)
      {
        case 0:
          goto LABEL_101;
        case 1:
          goto LABEL_100;
        case 2:
          char v61 = 4;
          goto LABEL_100;
        case 3:
          char v61 = 2;
LABEL_100:
          *(unsigned char *)(a1 + v11[576]) |= v61;
          break;
        default:
          continue;
      }
    }
  }
LABEL_101:
  if (v20)
  {
    unint64_t v3 = *(unsigned char *)(v3 + (int)*MEMORY[0x1E4F940C8]) == 0;
    if ((v17 & 1) == 0) {
      return v3;
    }
LABEL_105:
    BOOL v62 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  else
  {
    unint64_t v3 = 0;
    if (v17) {
      goto LABEL_105;
    }
  }
  return v3;
}

void sub_189B794A4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B795B4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B79AA8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDVendorIDLinkReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 68))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDVendorIDLinkReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 72));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 64) = [v8 position];
  *(_DWORD *)(a1 + 68) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOPDVendorIDLinkReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOPDVendorIDLinkReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDVendorIDLinkReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
  return Specified;
}

void sub_189B79D10(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B79EF0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B7A078(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B7A3A8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDViewportFrameReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  long long v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  uint64_t v7 = v6;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  uint64_t v12 = 0;
  int v13 = ((*(unsigned __int8 *)(a1 + 64) >> 4) & 1)
      + ((*(unsigned __int8 *)(a1 + 64) >> 5) & 1)
      + ((*(unsigned __int8 *)(a1 + 64) >> 3) & 1);
  while (2)
  {
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    uint64_t v16 = 1;
    switch(a3[v9])
    {
      case -4:
        ++v13;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v15 = v11;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v17 = v13 != 0;
        char v18 = v17 & ~(_BYTE)v12 | v10;
        unsigned __int8 v19 = v17 | v12;
        char v63 = v18;
        char v64 = v19 | v18;
        if ((v19 | v8)) {
          int v20 = 0;
        }
        else {
          int v20 = a3;
        }
        char v65 = (v20 == 0) | v19;
        BOOL v66 = v19;
        BOOL v21 = (int *)MEMORY[0x1E4F940E8];
        uint64_t v22 = (int *)MEMORY[0x1E4F940C8];
        char v23 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v13;
LABEL_7:
        uint64_t v14 = v10;
LABEL_8:
        uint64_t v15 = v11;
        uint64_t v16 = v12;
LABEL_10:
        ++v9;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        uint64_t v12 = v16;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v21) >= *(void *)(v3 + *v7) || *(unsigned char *)(v3 + *v22)) {
      goto LABEL_84;
    }
    char v24 = 0;
    unsigned int v25 = 0;
    unint64_t v26 = 0;
    while (1)
    {
      uint64_t v27 = *v21;
      uint64_t v28 = *(void *)(v3 + v27);
      unint64_t v29 = v28 + 1;
      if (v28 == -1 || v29 > *(void *)(v3 + *v7)) {
        break;
      }
      char v30 = *(unsigned char *)(*(void *)(v3 + *v23) + v28);
      *(void *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0) {
        goto LABEL_25;
      }
      v24 += 7;
      if (v25++ >= 9)
      {
        unint64_t v26 = 0;
        int v32 = *(unsigned __int8 *)(v3 + *v22);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v22) = 1;
LABEL_25:
    int v32 = *(unsigned __int8 *)(v3 + *v22);
    if (*(unsigned char *)(v3 + *v22)) {
      unint64_t v26 = 0;
    }
LABEL_27:
    if (v32 || (v26 & 7) == 4)
    {
LABEL_84:
      int v61 = 1;
      goto LABEL_85;
    }
    unint64_t v34 = v26 >> 3;
    BOOL v35 = v66;
    if ((v65 & 1) == 0)
    {
      int v36 = v20;
      do
      {
        int v38 = *v36++;
        int v37 = v38;
        BOOL v35 = v38 != 0;
        if (v38) {
          BOOL v39 = v37 == v34;
        }
        else {
          BOOL v39 = 1;
        }
      }
      while (!v39);
    }
    switch((int)v34)
    {
      case 1:
        if (!v35) {
          goto LABEL_68;
        }
        if ((*(unsigned char *)(a1 + 64) & 0x10) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_105;
          }
          uint64_t v40 = objc_alloc_init(GEOPDGeographicCoordinate);
          if (GEOPDGeographicCoordinateReadAllFrom((uint64_t)v40, (void *)v3))
          {
            PBReaderRecallMark();
            uint64_t v41 = 24;
            goto LABEL_67;
          }
          goto LABEL_104;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_105;
        }
        char v54 = 8 * *(unsigned char *)(a1 + 64);
        goto LABEL_74;
      case 2:
        if ((v8 & 1) == 0) {
          goto LABEL_68;
        }
        *(unsigned char *)(a1 + 64) |= 2u;
        uint64_t v45 = *v21;
        unint64_t v46 = *(void *)(v3 + v45);
        if (v46 <= 0xFFFFFFFFFFFFFFFBLL && v46 + 4 <= *(void *)(v3 + *v7))
        {
          int v47 = *(_DWORD *)(*(void *)(v3 + *v23) + v46);
          *(void *)(v3 + v45) = v46 + 4;
        }
        else
        {
          *(unsigned char *)(v3 + *v22) = 1;
          int v47 = 0;
        }
        uint64_t v55 = 56;
        goto LABEL_82;
      case 3:
        if ((v8 & 1) == 0) {
          goto LABEL_68;
        }
        *(unsigned char *)(a1 + 64) |= 4u;
        uint64_t v48 = *v21;
        unint64_t v49 = *(void *)(v3 + v48);
        if (v49 <= 0xFFFFFFFFFFFFFFFBLL && v49 + 4 <= *(void *)(v3 + *v7))
        {
          int v47 = *(_DWORD *)(*(void *)(v3 + *v23) + v49);
          *(void *)(v3 + v48) = v49 + 4;
        }
        else
        {
          *(unsigned char *)(v3 + *v22) = 1;
          int v47 = 0;
        }
        uint64_t v55 = 60;
        goto LABEL_82;
      case 4:
        if ((v8 & 1) == 0) {
          goto LABEL_68;
        }
        *(unsigned char *)(a1 + 64) |= 1u;
        uint64_t v50 = *v21;
        unint64_t v51 = *(void *)(v3 + v50);
        if (v51 <= 0xFFFFFFFFFFFFFFFBLL && v51 + 4 <= *(void *)(v3 + *v7))
        {
          int v47 = *(_DWORD *)(*(void *)(v3 + *v23) + v51);
          *(void *)(v3 + v50) = v51 + 4;
        }
        else
        {
          *(unsigned char *)(v3 + *v22) = 1;
          int v47 = 0;
        }
        uint64_t v55 = 52;
LABEL_82:
        *(_DWORD *)(a1 + v55) = v47;
        goto LABEL_83;
      case 5:
        if (!v35) {
          goto LABEL_68;
        }
        if ((*(unsigned char *)(a1 + 64) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_105;
          }
          char v54 = 4 * *(unsigned char *)(a1 + 64);
LABEL_74:
          v9 += v54 >> 7;
          goto LABEL_75;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_105;
        }
        uint64_t v40 = objc_alloc_init(GEOPDBoundingCube);
        if (GEOPDBoundingCubeReadAllFrom((uint64_t)v40, (void *)v3, v11 & 1))
        {
          PBReaderRecallMark();
          uint64_t v41 = 32;
LABEL_67:
          char v52 = *(void **)(a1 + v41);
          *(void *)(a1 + v41) = v40;

          --v9;
LABEL_75:
          uint64_t v22 = (int *)MEMORY[0x1E4F940C8];
          uint64_t v7 = (int *)MEMORY[0x1E4F940E0];
          goto LABEL_83;
        }
LABEL_104:

LABEL_105:
        int v61 = 0;
        BOOL v62 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__flags;
        uint64_t v22 = (int *)MEMORY[0x1E4F940C8];
LABEL_86:
        if (v63) {
LABEL_87:
        }
          *(unsigned char *)(a1 + v62[581]) |= 8u;
        if (v66 || (v61 & 1) == 0)
        {
          *(unsigned char *)(a1 + v62[581]) |= 0x10u;
          *(unsigned char *)(a1 + v62[581]) |= 0x20u;
          goto LABEL_98;
        }
        if (v20)
        {
          while (1)
          {
            int v58 = *v20++;
            int v57 = v58;
            if (v58 == 1) {
              break;
            }
            if (v57 == 5)
            {
              char v56 = 32;
LABEL_94:
              *(unsigned char *)(a1 + v62[581]) |= v56;
            }
            else if (!v57)
            {
              goto LABEL_98;
            }
          }
          char v56 = 16;
          goto LABEL_94;
        }
LABEL_98:
        if (v61) {
          unint64_t v3 = *(unsigned char *)(v3 + *v22) == 0;
        }
        else {
          unint64_t v3 = 0;
        }
        if (v66)
        {
          char v59 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      default:
        if ((v63 & 1) == 0 || (*(unsigned char *)(a1 + 64) & 8) != 0)
        {
LABEL_68:
          char v53 = PBReaderSkipValueWithTag();
          uint64_t v7 = (int *)MEMORY[0x1E4F940E0];
          uint64_t v22 = (int *)MEMORY[0x1E4F940C8];
          if ((v53 & 1) == 0)
          {
            int v61 = 0;
LABEL_85:
            BOOL v62 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__flags;
            goto LABEL_86;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v42 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            unsigned int v43 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v42;
          }
          int v44 = PBUnknownFieldAdd();
          uint64_t v22 = (int *)MEMORY[0x1E4F940C8];
          uint64_t v7 = (int *)MEMORY[0x1E4F940E0];
          if (!v44)
          {
            int v61 = 0;
            BOOL v62 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__flags;
            goto LABEL_87;
          }
        }
LABEL_83:
        if (!(v64 & 1 | (v9 != 0))) {
          goto LABEL_84;
        }
        continue;
    }
  }
}

void sub_189B7AC68(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDViewportFrameReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDViewportFrameReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOPDViewportFrameReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOPDViewportFrameReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDViewportFrameReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    [*(id *)(a1 + 24) readAll:1];
    -[GEOPDBoundingCube readAll:](*(void *)(a1 + 32), 1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_189B7B350(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B7B560(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDViewportFrameIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  if ((*(unsigned char *)(a1 + 64) & 0x50) != 0) {
    return 1;
  }
  if ((*(unsigned char *)(a1 + 64) & 0x20) == 0) {
    return 0;
  }
  uint64_t v3 = *(void *)(a1 + 32);
  if (!v3) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(v3 + 48));
  BOOL v2 = (*(unsigned char *)(v3 + 52) & 0xE) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(v3 + 48));
  return v2;
}

void sub_189B7B820(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDWalletCategoryInformationFilterReadAllFrom(uint64_t a1, void *a2)
{
  uint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    long long v5 = (int *)MEMORY[0x1E4F940E0];
    long long v6 = (int *)MEMORY[0x1E4F940C8];
    uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      int v8 = v3[*v6];
      if (*(void *)&v3[*v4] >= *(void *)&v3[*v5]) {
        break;
      }
      if (v3[*v6])
      {
        int v8 = 1;
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      uint64_t v11 = 0;
      while (1)
      {
        uint64_t v12 = *v4;
        uint64_t v13 = *(void *)&v3[v12];
        unint64_t v14 = v13 + 1;
        if (v13 == -1 || v14 > *(void *)&v3[*v5]) {
          break;
        }
        char v15 = *(unsigned char *)(*(void *)&v3[*v7] + v13);
        *(void *)&v3[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0) {
          goto LABEL_13;
        }
        v9 += 7;
        if (v10++ >= 9)
        {
          char v17 = 0;
          int v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      int v8 = v3[*v6];
      if (v3[*v6]) {
        char v17 = 0;
      }
      else {
        char v17 = v11;
      }
LABEL_16:
      if (v8) {
        BOOL v18 = 1;
      }
      else {
        BOOL v18 = (v17 & 7) == 4;
      }
      if (v18) {
        break;
      }
      if (!*(void *)(a1 + 8))
      {
        id v19 = objc_alloc_init(MEMORY[0x1E4F940B0]);
        int v20 = *(void **)(a1 + 8);
        *(void *)(a1 + 8) = v19;
      }
      if ((PBUnknownFieldAdd() & 1) == 0) {
        goto LABEL_23;
      }
    }
    BOOL v21 = v8 == 0;
  }
  else
  {
LABEL_23:
    BOOL v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_189B7C034(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B7C288(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDWebLinkParamsReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  long long v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 52);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 48)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  unsigned int v12 = vaddv_s16((int16x4_t)(*(void *)&vshl_u16((uint16x4_t)(*(void *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 64)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFFFFFEFFFDFFFCLL) & 0xFF01FF01FF01FF01));
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v9])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 > 1;
        char v17 = v16 & ~(_BYTE)v11 | v7;
        unsigned __int8 v18 = v16 | v11;
        char v62 = v17;
        char v63 = v18 | v17;
        char v61 = v8;
        if ((v18 | v8)) {
          id v19 = 0;
        }
        else {
          id v19 = a3;
        }
        char v64 = (v19 == 0) | v18;
        BOOL v65 = v18;
        int v20 = (int *)MEMORY[0x1E4F940E8];
        BOOL v21 = (int *)MEMORY[0x1E4F940C8];
        uint64_t v22 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v7;
LABEL_8:
        uint64_t v14 = v10;
        uint64_t v15 = v11;
LABEL_10:
        ++v9;
        uint64_t v7 = v13;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v21)) {
      goto LABEL_81;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      BOOL v30 = v24++ >= 9;
      if (v30)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_25:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_81:
      int v59 = 1;
      goto LABEL_82;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v65;
    if ((v64 & 1) == 0)
    {
      BOOL v35 = v19;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    switch((int)v33)
    {
      case 1:
        if (!v34) {
          goto LABEL_66;
        }
        if ((*(unsigned char *)(a1 + 64) & 8) == 0)
        {
          uint64_t v39 = PBReaderReadString();
          uint64_t v40 = 32;
          goto LABEL_51;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_99;
        }
        char v54 = 16 * *(unsigned char *)(a1 + 64);
        goto LABEL_78;
      case 2:
        if (!v34) {
          goto LABEL_66;
        }
        if ((*(unsigned char *)(a1 + 64) & 0x10) == 0)
        {
          uint64_t v39 = PBReaderReadString();
          uint64_t v40 = 40;
LABEL_51:
          int v44 = *(void **)(a1 + v40);
          *(void *)(a1 + v40) = v39;
          goto LABEL_57;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_99;
        }
        char v54 = 8 * *(unsigned char *)(a1 + 64);
        goto LABEL_78;
      case 3:
        if (!v34) {
          goto LABEL_66;
        }
        if ((*(unsigned char *)(a1 + 64) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_99;
          }
          char v54 = 32 * *(unsigned char *)(a1 + 64);
LABEL_78:
          v9 += v54 >> 7;
          goto LABEL_79;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_99;
        }
        uint64_t v45 = objc_alloc_init(GEOPDIcon);
        if (GEOPDIconReadAllFrom((uint64_t)v45, (void *)v3, v10 & 1))
        {
          PBReaderRecallMark();
          int v44 = *(void **)(a1 + 24);
          *(void *)(a1 + 24) = v45;
LABEL_57:

          --v9;
LABEL_79:
          BOOL v21 = (int *)MEMORY[0x1E4F940C8];
          goto LABEL_80;
        }

LABEL_99:
        int v59 = 0;
        int v60 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__flags;
        BOOL v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_83:
        if (v62) {
LABEL_84:
        }
          *(unsigned char *)(a1 + v60[589]) |= 2u;
        if (v65 || (v59 & 1) == 0)
        {
          *(unsigned char *)(a1 + v60[589]) |= 8u;
          *(unsigned char *)(a1 + v60[589]) |= 0x10u;
          *(unsigned char *)(a1 + v60[589]) |= 4u;
        }
        else if (v19)
        {
          while (1)
          {
            int v55 = *v19++;
            char v56 = 8;
            switch(v55)
            {
              case 0:
                goto LABEL_92;
              case 1:
                goto LABEL_91;
              case 2:
                char v56 = 16;
                goto LABEL_91;
              case 3:
                char v56 = 4;
LABEL_91:
                *(unsigned char *)(a1 + v60[589]) |= v56;
                break;
              default:
                continue;
            }
          }
        }
LABEL_92:
        if (v59) {
          unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
        }
        else {
          unint64_t v3 = 0;
        }
        if (v65)
        {
          int v57 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      case 4:
        if ((v61 & 1) == 0) {
          goto LABEL_66;
        }
        char v46 = 0;
        unsigned int v47 = 0;
        uint64_t v48 = 0;
        *(unsigned char *)(a1 + 64) |= 1u;
        while (2)
        {
          uint64_t v49 = *v20;
          uint64_t v50 = *(void *)(v3 + v49);
          unint64_t v51 = v50 + 1;
          if (v50 == -1 || v51 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v52 = *(unsigned char *)(*(void *)(v3 + *v22) + v50);
            *(void *)(v3 + v49) = v51;
            v48 |= (unint64_t)(v52 & 0x7F) << v46;
            if (v52 < 0)
            {
              v46 += 7;
              BOOL v30 = v47++ >= 9;
              if (v30)
              {
                uint64_t v48 = 0;
                goto LABEL_71;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          uint64_t v48 = 0;
        }
LABEL_71:
        *(unsigned char *)(a1 + 60) = v48 != 0;
        goto LABEL_80;
      default:
        if ((v62 & 1) == 0 || (*(unsigned char *)(a1 + 64) & 2) != 0)
        {
LABEL_66:
          char v53 = PBReaderSkipValueWithTag();
          BOOL v21 = (int *)MEMORY[0x1E4F940C8];
          if ((v53 & 1) == 0)
          {
            int v59 = 0;
LABEL_82:
            int v60 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__flags;
            goto LABEL_83;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v41 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            id v42 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v41;
          }
          int v43 = PBUnknownFieldAdd();
          BOOL v21 = (int *)MEMORY[0x1E4F940C8];
          if (!v43)
          {
            int v59 = 0;
            int v60 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__flags;
            goto LABEL_84;
          }
        }
LABEL_80:
        if (!(v63 & 1 | (v9 != 0))) {
          goto LABEL_81;
        }
        continue;
    }
  }
}

void sub_189B7CA80(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B7CB90(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B7CFA8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDWebLinkParamsReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 52))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDWebLinkParamsReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = [v8 position];
  *(_DWORD *)(a1 + 52) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOPDWebLinkParamsReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOPDWebLinkParamsReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDWebLinkParamsReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_189B7D210(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B7D3F8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B7D5CC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDWebModuleConfigurationReadAllFrom(uint64_t a1, void *a2)
{
  unint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    long long v5 = (int *)MEMORY[0x1E4F940E0];
    long long v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        unint64_t v18 = v10 >> 3;
        if ((v10 >> 3) == 3)
        {
          char v21 = 0;
          unsigned int v22 = 0;
          uint64_t v23 = 0;
          *(unsigned char *)(a1 + 32) |= 1u;
          while (1)
          {
            uint64_t v24 = *v4;
            uint64_t v25 = *(void *)&v3[v24];
            unint64_t v26 = v25 + 1;
            if (v25 == -1 || v26 > *(void *)&v3[*v5]) {
              break;
            }
            char v27 = *(unsigned char *)(*(void *)&v3[*v7] + v25);
            *(void *)&v3[v24] = v26;
            v23 |= (unint64_t)(v27 & 0x7F) << v21;
            if ((v27 & 0x80) == 0) {
              goto LABEL_42;
            }
            v21 += 7;
            BOOL v15 = v22++ >= 9;
            if (v15)
            {
              LODWORD(v23) = 0;
              goto LABEL_44;
            }
          }
          v3[*v6] = 1;
LABEL_42:
          if (v3[*v6]) {
            LODWORD(v23) = 0;
          }
LABEL_44:
          *(_DWORD *)(a1 + 24) = v23;
        }
        else if (v18 == 2)
        {
          char v28 = 0;
          unsigned int v29 = 0;
          uint64_t v30 = 0;
          *(unsigned char *)(a1 + 32) |= 2u;
          while (1)
          {
            uint64_t v31 = *v4;
            uint64_t v32 = *(void *)&v3[v31];
            unint64_t v33 = v32 + 1;
            if (v32 == -1 || v33 > *(void *)&v3[*v5]) {
              break;
            }
            char v34 = *(unsigned char *)(*(void *)&v3[*v7] + v32);
            *(void *)&v3[v31] = v33;
            v30 |= (unint64_t)(v34 & 0x7F) << v28;
            if ((v34 & 0x80) == 0) {
              goto LABEL_46;
            }
            v28 += 7;
            BOOL v15 = v29++ >= 9;
            if (v15)
            {
              uint64_t v30 = 0;
              goto LABEL_48;
            }
          }
          v3[*v6] = 1;
LABEL_46:
          if (v3[*v6]) {
            uint64_t v30 = 0;
          }
LABEL_48:
          *(unsigned char *)(a1 + 28) = v30 != 0;
        }
        else if (v18 == 1)
        {
          uint64_t v19 = PBReaderReadString();
          int v20 = *(void **)(a1 + 16);
          *(void *)(a1 + 16) = v19;
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v35 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            int v36 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v35;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_51;
          }
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v37 = v3[*v6] == 0;
  }
  else
  {
LABEL_51:
    BOOL v37 = 0;
  }
  objc_sync_exit(v3);

  return v37;
}

void sub_189B7DFB8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDWifiFingerprintReadAllFrom(uint64_t a1, void *a2)
{
  unint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    long long v5 = (int *)MEMORY[0x1E4F940E0];
    long long v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
      while (1)
      {
        if (v3[*v6]) {
          goto LABEL_59;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          goto LABEL_59;
        }
        unint64_t v18 = v10 >> 3;
        if ((v10 >> 3) == 3)
        {
          char v28 = 0;
          unsigned int v29 = 0;
          uint64_t v21 = 0;
          *(unsigned char *)(a1 + 28) |= 1u;
          while (1)
          {
            uint64_t v30 = *v4;
            uint64_t v31 = *(void *)&v3[v30];
            unint64_t v32 = v31 + 1;
            if (v31 == -1 || v32 > *(void *)&v3[*v5]) {
              break;
            }
            char v33 = *(unsigned char *)(*(void *)&v3[*v7] + v31);
            *(void *)&v3[v30] = v32;
            v21 |= (unint64_t)(v33 & 0x7F) << v28;
            if ((v33 & 0x80) == 0)
            {
              char v27 = &OBJC_IVAR___GEOPDWifiFingerprint__confidence;
              goto LABEL_51;
            }
            v28 += 7;
            BOOL v26 = v29++ > 8;
            if (v26)
            {
              LODWORD(v21) = 0;
              char v27 = &OBJC_IVAR___GEOPDWifiFingerprint__confidence;
              goto LABEL_53;
            }
          }
          char v27 = &OBJC_IVAR___GEOPDWifiFingerprint__confidence;
LABEL_50:
          v3[*v6] = 1;
          goto LABEL_51;
        }
        if (v18 == 2) {
          break;
        }
        if (v18 == 1)
        {
          char v19 = 0;
          unsigned int v20 = 0;
          uint64_t v21 = 0;
          *(unsigned char *)(a1 + 28) |= 4u;
          while (1)
          {
            uint64_t v22 = *v4;
            uint64_t v23 = *(void *)&v3[v22];
            unint64_t v24 = v23 + 1;
            if (v23 == -1 || v24 > *(void *)&v3[*v5])
            {
              char v27 = &OBJC_IVAR___GEOPDWifiFingerprint__status;
              goto LABEL_50;
            }
            char v25 = *(unsigned char *)(*(void *)&v3[*v7] + v23);
            *(void *)&v3[v22] = v24;
            v21 |= (unint64_t)(v25 & 0x7F) << v19;
            if ((v25 & 0x80) == 0) {
              break;
            }
            v19 += 7;
            BOOL v26 = v20++ > 8;
            if (v26)
            {
              LODWORD(v21) = 0;
              char v27 = &OBJC_IVAR___GEOPDWifiFingerprint__status;
              goto LABEL_53;
            }
          }
          char v27 = &OBJC_IVAR___GEOPDWifiFingerprint__status;
          goto LABEL_51;
        }
        if (!*(void *)(a1 + 8))
        {
          id v40 = objc_alloc_init(MEMORY[0x1E4F940B0]);
          id v41 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = v40;
        }
        if ((PBUnknownFieldAdd() & 1) == 0) {
          goto LABEL_60;
        }
LABEL_54:
        if (*(void *)&v3[*v4] >= *(void *)&v3[*v5]) {
          goto LABEL_59;
        }
      }
      char v34 = 0;
      unsigned int v35 = 0;
      uint64_t v21 = 0;
      *(unsigned char *)(a1 + 28) |= 2u;
      while (1)
      {
        uint64_t v36 = *v4;
        uint64_t v37 = *(void *)&v3[v36];
        unint64_t v38 = v37 + 1;
        if (v37 == -1 || v38 > *(void *)&v3[*v5])
        {
          char v27 = &OBJC_IVAR___GEOPDWifiFingerprint__labelType;
          goto LABEL_50;
        }
        char v39 = *(unsigned char *)(*(void *)&v3[*v7] + v37);
        *(void *)&v3[v36] = v38;
        v21 |= (unint64_t)(v39 & 0x7F) << v34;
        if ((v39 & 0x80) == 0) {
          break;
        }
        v34 += 7;
        BOOL v26 = v35++ > 8;
        if (v26)
        {
          LODWORD(v21) = 0;
          char v27 = &OBJC_IVAR___GEOPDWifiFingerprint__labelType;
          goto LABEL_53;
        }
      }
      char v27 = &OBJC_IVAR___GEOPDWifiFingerprint__labelType;
LABEL_51:
      if (v3[*v6]) {
        LODWORD(v21) = 0;
      }
LABEL_53:
      *(_DWORD *)(a1 + *v27) = v21;
      goto LABEL_54;
    }
LABEL_59:
    BOOL v42 = v3[*v6] == 0;
  }
  else
  {
LABEL_60:
    BOOL v42 = 0;
  }
  objc_sync_exit(v3);

  return v42;
}

void sub_189B7EBC0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDWifiFingerprintFilterReadAllFrom(uint64_t a1, void *a2)
{
  unint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    long long v5 = (int *)MEMORY[0x1E4F940E0];
    long long v6 = (int *)MEMORY[0x1E4F940C8];
    uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      int v8 = v3[*v6];
      if (*(void *)&v3[*v4] >= *(void *)&v3[*v5]) {
        break;
      }
      if (v3[*v6])
      {
        int v8 = 1;
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      uint64_t v11 = 0;
      while (1)
      {
        uint64_t v12 = *v4;
        uint64_t v13 = *(void *)&v3[v12];
        unint64_t v14 = v13 + 1;
        if (v13 == -1 || v14 > *(void *)&v3[*v5]) {
          break;
        }
        char v15 = *(unsigned char *)(*(void *)&v3[*v7] + v13);
        *(void *)&v3[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0) {
          goto LABEL_13;
        }
        v9 += 7;
        if (v10++ >= 9)
        {
          char v17 = 0;
          int v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      int v8 = v3[*v6];
      if (v3[*v6]) {
        char v17 = 0;
      }
      else {
        char v17 = v11;
      }
LABEL_16:
      if (v8) {
        BOOL v18 = 1;
      }
      else {
        BOOL v18 = (v17 & 7) == 4;
      }
      if (v18) {
        break;
      }
      if (!*(void *)(a1 + 8))
      {
        id v19 = objc_alloc_init(MEMORY[0x1E4F940B0]);
        unsigned int v20 = *(void **)(a1 + 8);
        *(void *)(a1 + 8) = v19;
      }
      if ((PBUnknownFieldAdd() & 1) == 0) {
        goto LABEL_23;
      }
    }
    BOOL v21 = v8 == 0;
  }
  else
  {
LABEL_23:
    BOOL v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_189B7F34C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B7F6E8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOBusynessPoiLookupTileReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  long long v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 68);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 64)];
  char v7 = 0;
  uint64_t v8 = 0;
  char v9 = 0;
  int v10 = ((*(unsigned __int8 *)(a1 + 80) >> 1) & 1) + ((*(unsigned __int8 *)(a1 + 80) >> 2) & 1);
  while (1)
  {
    unsigned int v11 = a3[v8];
    if (v11 >= 0xFFFFFFFE)
    {
      char v9 = 1;
      goto LABEL_9;
    }
    if (v11 != -3) {
      break;
    }
    char v7 = 1;
LABEL_9:
    ++v8;
  }
  if (v11)
  {
    ++v10;
    goto LABEL_9;
  }
  BOOL v12 = (v9 & 1 | v10) != 0;
  if (((v9 & 1 | v10) != 0) | v7 & 1) {
    uint64_t v13 = 0;
  }
  else {
    uint64_t v13 = a3;
  }
  unint64_t v14 = (int *)MEMORY[0x1E4F940E8];
  char v15 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(v3 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(v3 + *v6))
  {
LABEL_93:
    if (v12)
    {
      char v54 = 1;
      goto LABEL_95;
    }
    if (!v13) {
      goto LABEL_105;
    }
    while (1)
    {
      while (1)
      {
        int v56 = *v13++;
        int v55 = v56;
        if (v56 != 2) {
          break;
        }
LABEL_101:
        *(unsigned char *)(a1 + 80) |= v55;
      }
      if (v55 == 3)
      {
        LOBYTE(v55) = 4;
        goto LABEL_101;
      }
      if (!v55) {
        goto LABEL_105;
      }
    }
  }
  if (v13) {
    BOOL v16 = (v9 & 1 | v10) != 0;
  }
  else {
    BOOL v16 = 1;
  }
  if (v8) {
    int v17 = 1;
  }
  else {
    int v17 = v12;
  }
  int v59 = v17;
  BOOL v60 = v16;
  BOOL v18 = (int *)MEMORY[0x1E4F940B8];
  while (1)
  {
    if (*(unsigned char *)(v3 + *v15)) {
      goto LABEL_93;
    }
    char v19 = 0;
    unsigned int v20 = 0;
    unint64_t v21 = 0;
    while (1)
    {
      uint64_t v22 = *v14;
      uint64_t v23 = *(void *)(v3 + v22);
      unint64_t v24 = v23 + 1;
      if (v23 == -1 || v24 > *(void *)(v3 + *v6)) {
        break;
      }
      char v25 = *(unsigned char *)(*(void *)(v3 + *v18) + v23);
      *(void *)(v3 + v22) = v24;
      v21 |= (unint64_t)(v25 & 0x7F) << v19;
      if ((v25 & 0x80) == 0) {
        goto LABEL_30;
      }
      v19 += 7;
      BOOL v26 = v20++ >= 9;
      if (v26)
      {
        unint64_t v21 = 0;
        uint64_t v27 = *v15;
        int v28 = *(unsigned __int8 *)(v3 + v27);
        goto LABEL_32;
      }
    }
    *(unsigned char *)(v3 + *v15) = 1;
LABEL_30:
    uint64_t v27 = *v15;
    int v28 = *(unsigned __int8 *)(v3 + v27);
    if (*(unsigned char *)(v3 + v27)) {
      unint64_t v21 = 0;
    }
LABEL_32:
    int v29 = v21 & 7;
    if (v28 || v29 == 4) {
      goto LABEL_93;
    }
    unint64_t v31 = v21 >> 3;
    BOOL v32 = v12;
    if (!v60)
    {
      char v33 = v13;
      do
      {
        int v35 = *v33++;
        int v34 = v35;
        BOOL v32 = v35 != 0;
        if (v35) {
          BOOL v36 = v34 == v31;
        }
        else {
          BOOL v36 = 1;
        }
      }
      while (!v36);
    }
    if (v31 != 3) {
      break;
    }
    if (!v32 || (*(unsigned char *)(a1 + 80) & 4) != 0) {
      goto LABEL_78;
    }
    if (v29 != 2)
    {
LABEL_86:
      uint64_t v52 = *v14;
      unint64_t v53 = *(void *)(v3 + v52);
      if (v53 <= 0xFFFFFFFFFFFFFFFBLL && v53 + 4 <= *(void *)(v3 + *v6)) {
        *(void *)(v3 + v52) = v53 + 4;
      }
      else {
        *(unsigned char *)(v3 + v27) = 1;
      }
      PBRepeatedInt32Add();
      goto LABEL_91;
    }
    if (!PBReaderPlaceMark()) {
      goto LABEL_108;
    }
    while (1)
    {
      uint64_t v48 = (unint64_t *)(v3 + *v14);
      unint64_t v49 = *v48;
      unint64_t v50 = *(void *)(v3 + *v6);
      if (*v48 >= v50) {
        break;
      }
      uint64_t v51 = *v15;
      if (*(unsigned char *)(v3 + v51)) {
        break;
      }
      if (v49 > 0xFFFFFFFFFFFFFFFBLL || v49 + 4 > v50) {
        *(unsigned char *)(v3 + v51) = 1;
      }
      else {
        *uint64_t v48 = v49 + 4;
      }
      PBRepeatedInt32Add();
    }
LABEL_84:
    PBReaderRecallMark();
    if ((v59 & 1) == 0) {
      goto LABEL_93;
    }
LABEL_92:
    if (*(void *)(v3 + *v14) >= *(void *)(v3 + *v6)) {
      goto LABEL_93;
    }
  }
  if (v31 == 2)
  {
    if (!v32 || (*(unsigned char *)(a1 + 80) & 2) != 0) {
      goto LABEL_78;
    }
    if (v29 != 2) {
      goto LABEL_86;
    }
    if (!PBReaderPlaceMark()) {
      goto LABEL_108;
    }
    while (1)
    {
      int v44 = (unint64_t *)(v3 + *v14);
      unint64_t v45 = *v44;
      unint64_t v46 = *(void *)(v3 + *v6);
      if (*v44 >= v46) {
        break;
      }
      uint64_t v47 = *v15;
      if (*(unsigned char *)(v3 + v47)) {
        break;
      }
      if (v45 > 0xFFFFFFFFFFFFFFFBLL || v45 + 4 > v46) {
        *(unsigned char *)(v3 + v47) = 1;
      }
      else {
        *int v44 = v45 + 4;
      }
      PBRepeatedInt32Add();
    }
    goto LABEL_84;
  }
  if (v31 != 1)
  {
    if (!PBReaderSkipValueWithTag()) {
      goto LABEL_108;
    }
LABEL_91:
    if (!v59) {
      goto LABEL_93;
    }
    goto LABEL_92;
  }
  if (v7)
  {
    char v37 = 0;
    unsigned int v38 = 0;
    uint64_t v39 = 0;
    *(unsigned char *)(a1 + 80) |= 1u;
    while (1)
    {
      uint64_t v40 = *v14;
      uint64_t v41 = *(void *)(v3 + v40);
      unint64_t v42 = v41 + 1;
      if (v41 == -1 || v42 > *(void *)(v3 + *v6)) {
        break;
      }
      char v43 = *(unsigned char *)(*(void *)(v3 + *v18) + v41);
      *(void *)(v3 + v40) = v42;
      v39 |= (unint64_t)(v43 & 0x7F) << v37;
      if ((v43 & 0x80) == 0) {
        goto LABEL_81;
      }
      v37 += 7;
      BOOL v26 = v38++ >= 9;
      if (v26)
      {
        LODWORD(v39) = 0;
        goto LABEL_83;
      }
    }
    *(unsigned char *)(v3 + *v15) = 1;
LABEL_81:
    if (*(unsigned char *)(v3 + *v15)) {
      LODWORD(v39) = 0;
    }
LABEL_83:
    *(_DWORD *)(a1 + 76) = v39;
    goto LABEL_91;
  }
LABEL_78:
  if (PBReaderSkipValueWithTag()) {
    goto LABEL_91;
  }
LABEL_108:
  char v54 = 0;
LABEL_95:
  *(unsigned char *)(a1 + 80) |= 2u;
  *(unsigned char *)(a1 + 80) |= 4u;
  if (v54)
  {
LABEL_105:
    unint64_t v3 = *(unsigned char *)(v3 + *v15) == 0;
    if (v12) {
      goto LABEL_106;
    }
    return v3;
  }
  unint64_t v3 = 0;
  if (!v12) {
    return v3;
  }
LABEL_106:
  int v57 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = 0;

  return v3;
}

void sub_189B7FD3C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B7FFDC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOBusynessPoiLookupTileReadAllFrom(uint64_t a1, void *a2)
{
  if (*(_DWORD *)(a1 + 68))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOBusynessPoiLookupTileReadAllFrom can only be called once per object"];
  }
  else
  {
    if (!((unint64_t)[a2 position] >> 32)
      && !((unint64_t)[a2 length] >> 32))
    {
      os_unfair_lock_lock((os_unfair_lock_t)(a1 + 72));
      id v6 = a2;
      objc_sync_enter(v6);
      objc_storeStrong((id *)(a1 + 8), a2);
      *(_DWORD *)(a1 + 64) = [v6 position];
      *(_DWORD *)(a1 + 68) = [v6 length];
      unint64_t Specified = GEOBusynessPoiLookupTileReadSpecified(a1, (unint64_t)v6, (int *)&GEOBusynessPoiLookupTileReadAllFrom_initialTag);
      objc_sync_exit(v6);

      os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
      return Specified;
    }
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)char v7 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v7, 2u);
    }
  }
  return 0;
}

void sub_189B80154(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B80384(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B804FC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B80B38(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B8104C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189B8118C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189B81280(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189B81358(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_189B813FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_189B814D0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189B81588(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189B81830(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  unint64_t v24 = v22;
  objc_destroyWeak(v23);

  objc_destroyWeak(v21);
  objc_destroyWeak(&location);

  _Unwind_Resume(a1);
}

void sub_189B81914(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, objc_super a9)
{
  int v10 = v9;

  a9.super_class = (Class)GEODataRequestThrottler;
  [(_Unwind_Exception *)&a9 dealloc];
  _Unwind_Resume(a1);
}

id GEOGetGEODataRequestThrottlerLog(void)
{
  if (qword_1EB29FC28 != -1) {
    dispatch_once(&qword_1EB29FC28, &__block_literal_global_342);
  }
  v0 = (void *)qword_1EB29FC20;

  return v0;
}

void sub_189B81B40(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189B81CB0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_189B81DA4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16)
{
  _Unwind_Resume(a1);
}

void sub_189B81E50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_189B8206C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189B8222C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189B823D4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189B824CC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void ___ZL17bundleIdAllowlistv_block_invoke()
{
  v0 = (void *)MEMORY[0x1E4F1CAD0];
  _getValue(GeoServicesConfig_ThrottlerAllowlist, (uint64_t)off_1E91140C8, 1, 0, 0, 0);
  id v3 = (id)objc_claimAutoreleasedReturnValue();
  uint64_t v1 = objc_msgSend(v0, "setWithArray:");
  BOOL v2 = (void *)qword_1EB29FC10;
  qword_1EB29FC10 = v1;
}

void sub_189B82574(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void ___ZL32GEOGetGEODataRequestThrottlerLogv_block_invoke()
{
  os_log_t v0 = os_log_create("com.apple.GeoServices", "GEODataRequestThrottler");
  uint64_t v1 = (void *)qword_1EB29FC20;
  qword_1EB29FC20 = (uint64_t)v0;
}

id _navd_debugDurationAsString(double a1)
{
  BOOL v2 = [MEMORY[0x1E4F1C9C8] date];
  id v3 = [MEMORY[0x1E4F1C9A8] currentCalendar];
  uint64_t v4 = [MEMORY[0x1E4F1C9C8] dateWithTimeInterval:v2 sinceDate:a1];
  long long v5 = [v3 components:224 fromDate:v2 toDate:v4 options:0];

  id v6 = objc_alloc_init(MEMORY[0x1E4F28E78]);
  if ([v5 hour]) {
    objc_msgSend(v6, "appendFormat:", @"%dhr ", objc_msgSend(v5, "hour"));
  }
  if ([v5 minute]) {
    objc_msgSend(v6, "appendFormat:", @"%dmin ", objc_msgSend(v5, "minute"));
  }
  objc_msgSend(v6, "appendFormat:", @"%dsec", objc_msgSend(v5, "second"));

  return v6;
}

double randomJitterForHypothesisWakeup()
{
  os_log_t v0 = +[GEONavdDefaults sharedInstance];
  int v1 = [v0 maxRandomJitterForHypothesisWakeup];
  BOOL v2 = +[GEONavdDefaults sharedInstance];
  uint32_t v3 = v1 - [v2 minRandomJitterForHypothesisWakeup];

  uint64_t v4 = +[GEONavdDefaults sharedInstance];
  LODWORD(v2) = [v4 minRandomJitterForHypothesisWakeup];

  return (double)v2 + (double)arc4random_uniform(v3);
}

__CFString *StringFromGEOSolarEventType(int a1)
{
  if (a1 > 31)
  {
    if (a1 <= 127)
    {
      if (a1 == 32) {
        return @"Set";
      }
      if (a1 == 64) {
        return @"EndCT";
      }
    }
    else
    {
      switch(a1)
      {
        case 128:
          return @"EndNT";
        case 256:
          return @"EndAT";
        case 512:
          return @"Midnight";
      }
    }
    return @"Unknown";
  }
  else
  {
    int v1 = a1 - 1;
    result = @"StartAT";
    switch(v1)
    {
      case 0:
        return result;
      case 1:
        result = @"StartNT";
        break;
      case 2:
      case 4:
      case 5:
      case 6:
        return @"Unknown";
      case 3:
        result = @"StartCT";
        break;
      case 7:
        result = @"Rise";
        break;
      default:
        if (@"StartAT" != 16) {
          return @"Unknown";
        }
        result = @"Noon";
        break;
    }
  }
  return result;
}

void *std::__function::__func<GEOOscillatingFunction,std::allocator<GEOOscillatingFunction>,double ()(double)>::~__func(void *a1)
{
  *a1 = &unk_1ED5174F8;
  std::__function::__value_func<double ()(double)>::~__value_func[abi:ne180100](a1 + 1);
  return a1;
}

void std::__function::__func<GEOOscillatingFunction,std::allocator<GEOOscillatingFunction>,double ()(double)>::~__func(void *a1)
{
  *a1 = &unk_1ED5174F8;
  std::__function::__value_func<double ()(double)>::~__value_func[abi:ne180100](a1 + 1);

  JUMPOUT(0x18C11F580);
}

char *std::__function::__func<GEOOscillatingFunction,std::allocator<GEOOscillatingFunction>,double ()(double)>::__clone(uint64_t a1)
{
  uint64_t v2 = a1 + 8;
  uint32_t v3 = (char *)operator new(0x38uLL);
  *(void *)uint32_t v3 = &unk_1ED5174F8;
  std::__function::__value_func<double ()(double)>::__value_func[abi:ne180100]((uint64_t)(v3 + 8), v2);
  *(_OWORD *)(v3 + 40) = *(_OWORD *)(a1 + 40);
  return v3;
}

void sub_189B835F8(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

__n128 std::__function::__func<GEOOscillatingFunction,std::allocator<GEOOscillatingFunction>,double ()(double)>::__clone(uint64_t a1, uint64_t a2)
{
  *(void *)a2 = &unk_1ED5174F8;
  std::__function::__value_func<double ()(double)>::__value_func[abi:ne180100](a2 + 8, a1 + 8);
  __n128 result = *(__n128 *)(a1 + 40);
  *(__n128 *)(a2 + 40) = result;
  return result;
}

void *std::__function::__func<GEOOscillatingFunction,std::allocator<GEOOscillatingFunction>,double ()(double)>::destroy(uint64_t a1)
{
  return std::__function::__value_func<double ()(double)>::~__value_func[abi:ne180100]((void *)(a1 + 8));
}

uint64_t std::__function::__func<GEOOscillatingFunction,std::allocator<GEOOscillatingFunction>,double ()(double)>::target(uint64_t a1, uint64_t a2)
{
    return a1 + 8;
  else {
    return 0;
  }
}

void *std::__function::__func<GEOOscillatingFunction,std::allocator<GEOOscillatingFunction>,double ()(double)>::target_type()
{
}

void std::__function::__func<double (*)(double),std::allocator<double (*)(double)>,double ()(double)>::~__func()
{
}

void *std::__function::__func<double (*)(double),std::allocator<double (*)(double)>,double ()(double)>::__clone(uint64_t a1)
{
  __n128 result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  void *result = &unk_1ED517550;
  result[1] = v3;
  return result;
}

uint64_t std::__function::__func<double (*)(double),std::allocator<double (*)(double)>,double ()(double)>::operator()(uint64_t a1, double *a2)
{
  return (*(uint64_t (**)(double))(a1 + 8))(*a2);
}

uint64_t std::__function::__func<double (*)(double),std::allocator<double (*)(double)>,double ()(double)>::target(uint64_t a1, uint64_t a2)
{
    return a1 + 8;
  else {
    return 0;
  }
}

void *std::__function::__func<double (*)(double),std::allocator<double (*)(double)>,double ()(double)>::target_type()
{
}

void std::__function::__func<GEORiseTransitSet::GEORiseTransitSet(GEOLocationCoordinate2D const&,double const&,double const&,double const&,BOOL const&)::$_0,std::allocator<GEORiseTransitSet::GEORiseTransitSet(GEOLocationCoordinate2D const&,double const&,double const&,double const&,BOOL const&)::$_0>,double ()(double)>::~__func()
{
}

__n128 std::__function::__func<GEORiseTransitSet::GEORiseTransitSet(GEOLocationCoordinate2D const&,double const&,double const&,double const&,BOOL const&)::$_0,std::allocator<GEORiseTransitSet::GEORiseTransitSet(GEOLocationCoordinate2D const&,double const&,double const&,double const&,BOOL const&)::$_0>,double ()(double)>::__clone(uint64_t a1, uint64_t a2)
{
  *(void *)a2 = &unk_1ED5178C0;
  __n128 result = *(__n128 *)(a1 + 8);
  *(void *)(a2 + 24) = *(void *)(a1 + 24);
  *(__n128 *)(a2 + 8) = result;
  return result;
}

uint64_t std::__function::__func<GEORiseTransitSet::GEORiseTransitSet(GEOLocationCoordinate2D const&,double const&,double const&,double const&,BOOL const&)::$_0,std::allocator<GEORiseTransitSet::GEORiseTransitSet(GEOLocationCoordinate2D const&,double const&,double const&,double const&,BOOL const&)::$_0>,double ()(double)>::target(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

void *std::__function::__func<GEORiseTransitSet::GEORiseTransitSet(GEOLocationCoordinate2D const&,double const&,double const&,double const&,BOOL const&)::$_0,std::allocator<GEORiseTransitSet::GEORiseTransitSet(GEOLocationCoordinate2D const&,double const&,double const&,double const&,BOOL const&)::$_0>,double ()(double)>::target_type()
{
}

void std::__function::__func<GEORiseTransitSet::calculateEventOfType(unsigned int)::$_0,std::allocator<GEORiseTransitSet::calculateEventOfType(unsigned int)::$_0>,double ()(double)>::~__func()
{
}

__n128 std::__function::__func<GEORiseTransitSet::calculateEventOfType(unsigned int)::$_0,std::allocator<GEORiseTransitSet::calculateEventOfType(unsigned int)::$_0>,double ()(double)>::__clone(uint64_t a1)
{
  uint64_t v2 = (char *)operator new(0x20uLL);
  *(void *)uint64_t v2 = &unk_1ED517868;
  __n128 result = *(__n128 *)(a1 + 8);
  *(__n128 *)(v2 + 8) = result;
  *((void *)v2 + 3) = *(void *)(a1 + 24);
  return result;
}

__n128 std::__function::__func<GEORiseTransitSet::calculateEventOfType(unsigned int)::$_0,std::allocator<GEORiseTransitSet::calculateEventOfType(unsigned int)::$_0>,double ()(double)>::__clone(uint64_t a1, uint64_t a2)
{
  *(void *)a2 = &unk_1ED517868;
  __n128 result = *(__n128 *)(a1 + 8);
  *(void *)(a2 + 24) = *(void *)(a1 + 24);
  *(__n128 *)(a2 + 8) = result;
  return result;
}

double std::__function::__func<GEORiseTransitSet::calculateEventOfType(unsigned int)::$_0,std::allocator<GEORiseTransitSet::calculateEventOfType(unsigned int)::$_0>,double ()(double)>::operator()(double *a1, double *a2)
{
  double v2 = a1[2];
  double v3 = a1[3];
  double v4 = *a2 * a1[1];
  uint64_t v17 = 0;
  long long v16 = 0u;
  long long v15 = 0u;
  long long v14 = 0u;
  long long v13 = 0u;
  long long v12 = 0u;
  long long v11 = 0u;
  long long v10 = 0u;
  long long v9 = 0u;
  long long v8 = 0u;
  long long v7 = 0u;
  double v6 = v4;
  return fabs(geo_getSunPosition((const GEODayCache *)&v6, v2, v3) + -180.0);
}

uint64_t std::__function::__func<GEORiseTransitSet::calculateEventOfType(unsigned int)::$_0,std::allocator<GEORiseTransitSet::calculateEventOfType(unsigned int)::$_0>,double ()(double)>::target(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

void *std::__function::__func<GEORiseTransitSet::calculateEventOfType(unsigned int)::$_0,std::allocator<GEORiseTransitSet::calculateEventOfType(unsigned int)::$_0>,double ()(double)>::target_type()
{
}

BOOL NSIntegerIsValidFloorOrdinal(uint64_t a1)
{
  return (unint64_t)(a1 + 0x80000000) < 0xFFFFFFFF;
}

uint64_t GEOLocationFloorOrdinalFromNSInteger(uint64_t result)
{
  if ((unint64_t)(result + 0x80000000) >= 0xFFFFFFFF) {
    return 0x7FFFFFFFLL;
  }
  else {
    return result;
  }
}

void sub_189B85628(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_189B85864(_Unwind_Exception *a1)
{
}

void sub_189B8598C(_Unwind_Exception *a1)
{
}

void sub_189B85BD0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  va_start(va, a16);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_189B85CD4(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 48), 8);
  _Unwind_Resume(a1);
}

void sub_189B85E48(_Unwind_Exception *a1)
{
}

void sub_189B85F44(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

double GEORemainingTimeForRemainingDistanceAlongStep(void *a1, double a2, double a3, double a4)
{
  id v7 = a1;
  long long v8 = v7;
  double v9 = 0.0;
  if (v7 && [v7 timeToNextCheckpointsCount])
  {
    uint64_t v10 = 0;
    while (1)
    {
      unsigned int v11 = [v8 distToNextCheckpointAtIndex:v10];
      double v12 = (double)v11;
      if (a2 <= (double)v11) {
        break;
      }
      double v9 = v9 + (double)[v8 timeToNextCheckpointAtIndex:v10];
      a2 = a2 - v12;
      if (++v10 >= (unint64_t)[v8 timeToNextCheckpointsCount]) {
        goto LABEL_6;
      }
    }
    if (v11) {
      double v14 = a2 / v12;
    }
    else {
      double v14 = 0.0;
    }
    double v9 = v9 + (double)[v8 timeToNextCheckpointAtIndex:v10] * v14;
  }
  else
  {
LABEL_6:
    if (a2 > 0.0)
    {
      double v13 = a2 / a4;
      if (a4 == 0.0) {
        double v13 = 0.0;
      }
      double v9 = v9 + a3 * v13;
    }
  }

  return v9;
}

void GEORegisterNetworkDefaults(void *a1)
{
  id v1 = a1;
  double v2 = +[GEONetworkDefaults sharedNetworkDefaults];
  v4[0] = MEMORY[0x1E4F143A8];
  v4[1] = 3221225472;
  v4[2] = __GEORegisterNetworkDefaults_block_invoke;
  v4[3] = &unk_1E53DB698;
  id v5 = v1;
  id v3 = v1;
  [v2 updateIfNecessary:v4];
}

uint64_t __GEORegisterNetworkDefaults_block_invoke(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

uint64_t GEONetworkDefaultsDisableServerConnection()
{
  uint64_t result = self;
  byte_1EB29FC41 = 1;
  return result;
}

void sub_189B8751C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v11 - 64), 8);
  _Unwind_Resume(a1);
}

void sub_189B87788(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 64), 8);
  _Unwind_Resume(a1);
}

void sub_189B88AE0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189B88BD0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189B88C7C(_Unwind_Exception *a1)
{
  std::mutex::unlock(v2);

  _Unwind_Resume(a1);
}

void sub_189B88D14(_Unwind_Exception *a1)
{
  std::mutex::unlock(v2);

  _Unwind_Resume(a1);
}

void sub_189B898DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_189B89D24(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_189B89F1C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_189B8A64C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_189B8A858(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_189B8A950(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_189B8B598(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,char a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,char a39)
{
  _Block_object_dispose(&a21, 8);
  _Block_object_dispose(&a27, 8);
  _Block_object_dispose(&a33, 8);
  _Block_object_dispose(&a39, 8);
  _Block_object_dispose((const void *)(v39 - 192), 8);
  _Block_object_dispose((const void *)(v39 - 144), 8);
  _Block_object_dispose((const void *)(v39 - 112), 8);
  _Block_object_dispose((const void *)(v39 - 64), 8);
  _Unwind_Resume(a1);
}

unint64_t GEONonTiledAssetsReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  double v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  unsigned int v11 = ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1)
      + (*(unsigned char *)(a1 + 52) & 1)
      + ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v7])
    {
      case -3:
        char v8 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        char v14 = v10 | (v11 > 1);
        if (v10 & 1 | (v11 > 1) | v8 & 1) {
          long long v15 = 0;
        }
        else {
          long long v15 = a3;
        }
        char v40 = (v7 != 0) | v14;
        long long v16 = (int *)MEMORY[0x1E4F940E8];
        uint64_t v17 = (int *)MEMORY[0x1E4F940C8];
        BOOL v18 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v11;
LABEL_6:
        uint64_t v12 = v9;
        uint64_t v13 = v10;
LABEL_8:
        ++v7;
        uint64_t v9 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v16) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v17)) {
      goto LABEL_59;
    }
    char v19 = 0;
    unsigned int v20 = 0;
    unint64_t v21 = 0;
    while (1)
    {
      uint64_t v22 = *v16;
      unint64_t v23 = *(void *)(v3 + v22);
      if (v23 == -1 || v23 >= *(void *)(v3 + *v6)) {
        break;
      }
      char v24 = *(unsigned char *)(*(void *)(v3 + *v18) + v23);
      *(void *)(v3 + v22) = v23 + 1;
      v21 |= (unint64_t)(v24 & 0x7F) << v19;
      if ((v24 & 0x80) == 0) {
        goto LABEL_23;
      }
      v19 += 7;
      if (v20++ >= 9)
      {
        unint64_t v21 = 0;
        int v26 = *(unsigned __int8 *)(v3 + *v17);
        goto LABEL_25;
      }
    }
    *(unsigned char *)(v3 + *v17) = 1;
LABEL_23:
    int v26 = *(unsigned __int8 *)(v3 + *v17);
    if (*(unsigned char *)(v3 + *v17)) {
      unint64_t v21 = 0;
    }
LABEL_25:
    if (v26 || (v21 & 7) == 4)
    {
LABEL_59:
      if (v14)
      {
        char v35 = 1;
        goto LABEL_68;
      }
      if (v15)
      {
        while (1)
        {
          int v37 = *v15++;
          char v36 = 4;
          switch(v37)
          {
            case 0:
              goto LABEL_69;
            case 1:
              goto LABEL_65;
            case 2:
              char v36 = 2;
              goto LABEL_65;
            case 3:
              char v36 = 1;
LABEL_65:
              *(unsigned char *)(a1 + 52) |= v36;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_69;
    }
    unint64_t v28 = v21 >> 3;
    BOOL v29 = v14;
    if (!((v15 == 0) | v14 & 1))
    {
      uint64_t v30 = v15;
      do
      {
        int v32 = *v30++;
        int v31 = v32;
        BOOL v29 = v32 != 0;
        if (v32) {
          BOOL v33 = v31 == v28;
        }
        else {
          BOOL v33 = 1;
        }
      }
      while (!v33);
    }
    if (v28 == 3)
    {
      if (v29 && (*(unsigned char *)(a1 + 52) & 1) == 0)
      {
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_67;
        }
        int v34 = objc_alloc_init(GEONonTiledMaterialMap);
        if (!GEONonTiledMaterialMapReadAllFrom((uint64_t)v34, (void *)v3)) {
          goto LABEL_74;
        }
        PBReaderRecallMark();
        -[GEONonTiledAssets _addNoFlagsMaterialMap:](a1, v34);
        goto LABEL_54;
      }
      goto LABEL_57;
    }
    if (v28 == 2) {
      break;
    }
    if (v28 != 1)
    {
      if (!PBReaderSkipValueWithTag()) {
        goto LABEL_67;
      }
      goto LABEL_58;
    }
    if (v29 && (*(unsigned char *)(a1 + 52) & 4) == 0)
    {
      if ((PBReaderPlaceMark() & 1) == 0) {
        goto LABEL_67;
      }
      int v34 = objc_alloc_init(GEONonTiledModel);
      if (!GEONonTiledModelReadAllFrom((uint64_t)v34, (void *)v3, v9 & 1)) {
        goto LABEL_74;
      }
      PBReaderRecallMark();
      -[GEONonTiledAssets _addNoFlagsModel:](a1, v34);
      goto LABEL_54;
    }
LABEL_57:
    if ((PBReaderSkipValueWithTag() & 1) == 0)
    {
LABEL_67:
      char v35 = 0;
      goto LABEL_68;
    }
LABEL_58:
    if ((v40 & 1) == 0) {
      goto LABEL_59;
    }
  }
  if (!v29 || (*(unsigned char *)(a1 + 52) & 2) != 0) {
    goto LABEL_57;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_67;
  }
  int v34 = objc_alloc_init(GEONonTiledMaterial);
  if (GEONonTiledMaterialReadAllFrom((uint64_t)v34, (void *)v3))
  {
    PBReaderRecallMark();
    -[GEONonTiledAssets _addNoFlagsMaterial:](a1, v34);
LABEL_54:

    uint64_t v17 = (int *)MEMORY[0x1E4F940C8];
    goto LABEL_58;
  }
LABEL_74:

  char v35 = 0;
  uint64_t v17 = (int *)MEMORY[0x1E4F940C8];
LABEL_68:
  *(unsigned char *)(a1 + 52) |= 4u;
  *(unsigned char *)(a1 + 52) |= 2u;
  *(unsigned char *)(a1 + 52) |= 1u;
  if (v35)
  {
LABEL_69:
    unint64_t v3 = *(unsigned char *)(v3 + *v17) == 0;
    if ((v14 & 1) == 0) {
      return v3;
    }
    goto LABEL_70;
  }
  unint64_t v3 = 0;
  if (v14)
  {
LABEL_70:
    unsigned int v38 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_189B8D420(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEONonTiledAssetsCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  uint64_t v32 = *MEMORY[0x1E4F143B8];
  long long v25 = 0u;
  long long v26 = 0u;
  long long v27 = 0u;
  long long v28 = 0u;
  id v2 = a1[4];
  uint64_t v3 = [v2 countByEnumeratingWithState:&v25 objects:v31 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v26;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v26 != v5) {
          objc_enumerationMutation(v2);
        }
        [*(id *)(*((void *)&v25 + 1) + 8 * v6++) readAll:1];
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v25 objects:v31 count:16];
    }
    while (v4);
  }

  long long v23 = 0u;
  long long v24 = 0u;
  long long v21 = 0u;
  long long v22 = 0u;
  id v7 = a1[3];
  uint64_t v8 = [v7 countByEnumeratingWithState:&v21 objects:v30 count:16];
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)v22;
    do
    {
      uint64_t v11 = 0;
      do
      {
        if (*(void *)v22 != v10) {
          objc_enumerationMutation(v7);
        }
        [*(id *)(*((void *)&v21 + 1) + 8 * v11++) readAll:1];
      }
      while (v9 != v11);
      uint64_t v9 = [v7 countByEnumeratingWithState:&v21 objects:v30 count:16];
    }
    while (v9);
  }

  long long v19 = 0u;
  long long v20 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  id v12 = a1[2];
  uint64_t v13 = [v12 countByEnumeratingWithState:&v17 objects:v29 count:16];
  if (v13)
  {
    uint64_t v14 = v13;
    uint64_t v15 = *(void *)v18;
    do
    {
      uint64_t v16 = 0;
      do
      {
        if (*(void *)v18 != v15) {
          objc_enumerationMutation(v12);
        }
        objc_msgSend(*(id *)(*((void *)&v17 + 1) + 8 * v16++), "readAll:", 1, (void)v17);
      }
      while (v14 != v16);
      uint64_t v14 = [v12 countByEnumeratingWithState:&v17 objects:v29 count:16];
    }
    while (v14);
  }
}

unint64_t GEONonTiledAssetsReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEONonTiledAssetsReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEONonTiledAssetsReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEONonTiledAssetsReadAllFrom_initialTag;
  }
  unint64_t Specified = GEONonTiledAssetsReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEONonTiledAssetsCallReadAllRecursiveWithoutSynchronized((id *)a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_189B8D7E8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEONonTiledAssetsReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEONonTiledAssetsReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189B8D84C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEONonTiledAssetsIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_35;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        unint64_t v10 = *(void *)&a1[v9];
        if (v10 == -1 || v10 >= *(void *)&a1[*v3]) {
          break;
        }
        char v11 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v13 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v14 = v8 & 7;
      if (v13 || v14 == 4) {
        goto LABEL_35;
      }
      unint64_t v16 = v8 >> 3;
      if ((v8 >> 3) == 3)
      {
        if (v14 != 2 || !PBReaderPlaceMark() || !GEONonTiledMaterialMapIsValid(a1))
        {
LABEL_36:
          PBReaderRecallMark();
          return 0;
        }
        goto LABEL_32;
      }
      if (v16 == 2) {
        break;
      }
      if (v16 == 1)
      {
        if (v14 != 2 || !PBReaderPlaceMark() || !GEONonTiledModelIsValid(a1)) {
          goto LABEL_36;
        }
LABEL_32:
        PBReaderRecallMark();
        goto LABEL_34;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        goto LABEL_36;
      }
LABEL_34:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_35;
      }
    }
    if (v14 != 2 || !PBReaderPlaceMark() || !GEONonTiledMaterialIsValid(a1)) {
      goto LABEL_36;
    }
    goto LABEL_32;
  }
LABEL_35:
  BOOL v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

BOOL GEONonTiledModelIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_30;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        unint64_t v10 = *(void *)&a1[v9];
        if (v10 == -1 || v10 >= *(void *)&a1[*v3]) {
          break;
        }
        char v11 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v13 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v14 = v8 & 7;
      if (v13 || v14 == 4) {
        goto LABEL_30;
      }
      if ((v8 >> 3) == 2) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if (v14 != 2 || !PBReaderPlaceMark() || !GEONonTiledInfoIsValid(a1)) {
          goto LABEL_31;
        }
LABEL_27:
        PBReaderRecallMark();
        goto LABEL_29;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        goto LABEL_31;
      }
LABEL_29:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_30;
      }
    }
    if (v14 != 2 || !PBReaderPlaceMark() || !GEONonTiledMaterialMapIsValid(a1))
    {
LABEL_31:
      PBReaderRecallMark();
      return 0;
    }
    goto LABEL_27;
  }
LABEL_30:
  BOOL v16 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v16;
}

BOOL GEONonTiledMaterialIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        unint64_t v10 = *(void *)&a1[v9];
        if (v10 == -1 || v10 >= *(void *)&a1[*v3]) {
          break;
        }
        char v11 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v13 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v14 = v8 & 7;
      if (v13 || v14 == 4) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if (v14 != 2 || !PBReaderPlaceMark() || !GEONonTiledInfoIsValid(a1))
        {
LABEL_27:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_27;
      }
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v16 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v16;
}

BOOL GEONonTiledMaterialMapIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        unint64_t v10 = *(void *)&a1[v9];
        if (v10 == -1 || v10 >= *(void *)&a1[*v3]) {
          break;
        }
        char v11 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v13 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v14 = v8 & 7;
      if (v13 || v14 == 4) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if (v14 != 2 || !PBReaderPlaceMark() || !GEONonTiledInfoIsValid(a1))
        {
LABEL_27:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_27;
      }
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v16 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v16;
}

void sub_189B8E368(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEONonTiledAssetsIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  BOOL v2 = (*(unsigned char *)(a1 + 52) & 0xF) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return v2;
}

void sub_189B8E8F8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEONonTiledInfoReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          unint64_t v12 = *(void *)&v3[v11];
          if (v12 == -1 || v12 >= *(void *)&v3[*v5]) {
            break;
          }
          char v13 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v12 + 1;
          v10 |= (unint64_t)(v13 & 0x7F) << v8;
          if ((v13 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v14 = v9++ >= 9;
          if (v14)
          {
            unint64_t v10 = 0;
            int v15 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v15 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v15 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 2)
        {
          char v19 = 0;
          unsigned int v20 = 0;
          uint64_t v21 = 0;
          *(unsigned char *)(a1 + 24) |= 1u;
          while (1)
          {
            uint64_t v22 = *v4;
            unint64_t v23 = *(void *)&v3[v22];
            if (v23 == -1 || v23 >= *(void *)&v3[*v5]) {
              break;
            }
            char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v23);
            *(void *)&v3[v22] = v23 + 1;
            v21 |= (unint64_t)(v24 & 0x7F) << v19;
            if ((v24 & 0x80) == 0) {
              goto LABEL_32;
            }
            v19 += 7;
            BOOL v14 = v20++ >= 9;
            if (v14)
            {
              uint64_t v21 = 0;
              goto LABEL_34;
            }
          }
          v3[*v6] = 1;
LABEL_32:
          if (v3[*v6]) {
            uint64_t v21 = 0;
          }
LABEL_34:
          *(void *)(a1 + 8) = v21;
        }
        else if ((v10 >> 3) == 1)
        {
          uint64_t v17 = PBReaderReadString();
          long long v18 = *(void **)(a1 + 16);
          *(void *)(a1 + 16) = v17;
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_37;
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v25 = v3[*v6] == 0;
  }
  else
  {
LABEL_37:
    BOOL v25 = 0;
  }
  objc_sync_exit(v3);

  return v25;
}

void sub_189B8F0A8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEONonTiledInfoReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEONonTiledInfoReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189B8F10C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEONonTiledInfoIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        unint64_t v10 = *(void *)&a1[v9];
        if (v10 == -1 || v10 >= *(void *)&a1[*v3]) {
          break;
        }
        char v11 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v13 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v14 = v8 & 7;
      if (v13 || v14 == 4) {
        break;
      }
      if ((v8 >> 3) == 2)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_37;
        }
        unsigned int v16 = 0;
        while (1)
        {
          uint64_t v17 = *v2;
          unint64_t v18 = *(void *)&a1[v17];
          if (v18 == -1 || v18 >= *(void *)&a1[*v3]) {
            break;
          }
          unint64_t v19 = v18 + 1;
          int v20 = *(char *)(*(void *)&a1[*v5] + v18);
          *(void *)&a1[v17] = v19;
          if (v20 < 0 && v16++ <= 8) {
            continue;
          }
          goto LABEL_34;
        }
        a1[*v4] = 1;
      }
      else if ((v8 >> 3) == 1)
      {
        if (v14 != 2 || (PBReaderSkipValueWithTag() & 1) == 0)
        {
LABEL_37:
          BOOL v22 = 0;
          goto LABEL_36;
        }
      }
      else if (!PBReaderSkipValueWithTag())
      {
        goto LABEL_37;
      }
LABEL_34:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v22 = a1[*v4] == 0;
LABEL_36:
  PBReaderRecallMark();
  return v22;
}

BOOL GEONonTiledMaterialReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          unint64_t v12 = *(void *)&v3[v11];
          if (v12 == -1 || v12 >= *(void *)&v3[*v5]) {
            break;
          }
          char v13 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v12 + 1;
          v10 |= (unint64_t)(v13 & 0x7F) << v8;
          if ((v13 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v15 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v15 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v15 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_27;
          }
          uint64_t v17 = objc_alloc_init(GEONonTiledInfo);
          if (!GEONonTiledInfoReadAllFrom((uint64_t)v17, v3))
          {

            goto LABEL_27;
          }
          PBReaderRecallMark();
          unint64_t v18 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = v17;
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_27;
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v19 = v3[*v6] == 0;
  }
  else
  {
LABEL_27:
    BOOL v19 = 0;
  }
  objc_sync_exit(v3);

  return v19;
}

void sub_189B8FA80(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEONonTiledMaterialReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEONonTiledMaterialReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189B8FAE4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEONonTiledMaterialMapReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          unint64_t v12 = *(void *)&v3[v11];
          if (v12 == -1 || v12 >= *(void *)&v3[*v5]) {
            break;
          }
          char v13 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v12 + 1;
          v10 |= (unint64_t)(v13 & 0x7F) << v8;
          if ((v13 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v15 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v15 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v15 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_27;
          }
          uint64_t v17 = objc_alloc_init(GEONonTiledInfo);
          if (!GEONonTiledInfoReadAllFrom((uint64_t)v17, v3))
          {

            goto LABEL_27;
          }
          PBReaderRecallMark();
          unint64_t v18 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = v17;
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_27;
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v19 = v3[*v6] == 0;
  }
  else
  {
LABEL_27:
    BOOL v19 = 0;
  }
  objc_sync_exit(v3);

  return v19;
}

void sub_189B90060(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEONonTiledMaterialMapReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEONonTiledMaterialMapReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189B900C4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEONonTiledModelReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 36);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 32)];
  uint64_t v7 = 0;
  char v8 = 0;
  char v9 = 0;
  int v10 = ((*(unsigned __int8 *)(a1 + 44) >> 1) & 1) + (*(unsigned char *)(a1 + 44) & 1);
  while (1)
  {
    unsigned int v11 = a3[v7];
    if (v11 >= 0xFFFFFFFE)
    {
      char v9 = 1;
      goto LABEL_9;
    }
    if (v11 != -3) {
      break;
    }
    char v8 = 1;
LABEL_9:
    ++v7;
  }
  if (v11)
  {
    ++v10;
    goto LABEL_9;
  }
  int v12 = v9 & 1 | v10;
  BOOL v13 = v12 != 0;
  if ((v12 != 0) | v8 & 1) {
    int v14 = 0;
  }
  else {
    int v14 = a3;
  }
  BOOL v15 = v14 == 0;
  if (v12) {
    BOOL v15 = 1;
  }
  BOOL v44 = v15;
  unsigned int v16 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v17 = (int *)MEMORY[0x1E4F940C8];
  unint64_t v18 = &OBJC_IVAR___GEONonTiledAssets__flags;
  BOOL v19 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(void *)(v3 + *v16) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v17)) {
      goto LABEL_62;
    }
    char v20 = 0;
    unsigned int v21 = 0;
    unint64_t v22 = 0;
    while (1)
    {
      uint64_t v23 = *v16;
      unint64_t v24 = *(void *)(v3 + v23);
      if (v24 == -1 || v24 >= *(void *)(v3 + *v6)) {
        break;
      }
      char v25 = *(unsigned char *)(*(void *)(v3 + *v19) + v24);
      *(void *)(v3 + v23) = v24 + 1;
      v22 |= (unint64_t)(v25 & 0x7F) << v20;
      if ((v25 & 0x80) == 0) {
        goto LABEL_26;
      }
      v20 += 7;
      if (v21++ >= 9)
      {
        unint64_t v22 = 0;
        int v27 = *(unsigned __int8 *)(v3 + *v17);
        goto LABEL_28;
      }
    }
    *(unsigned char *)(v3 + *v17) = 1;
LABEL_26:
    int v27 = *(unsigned __int8 *)(v3 + *v17);
    if (*(unsigned char *)(v3 + *v17)) {
      unint64_t v22 = 0;
    }
LABEL_28:
    if (v27 || (v22 & 7) == 4)
    {
LABEL_62:
      if (v13)
      {
        char v39 = 1;
        goto LABEL_71;
      }
      if (v14)
      {
        do
        {
          while (1)
          {
            int v41 = *v14++;
            int v40 = v41;
            if (v41 != 1 && v40 != 2) {
              break;
            }
            *(unsigned char *)(a1 + v18[11]) |= v40;
          }
        }
        while (v40);
      }
      goto LABEL_72;
    }
    unint64_t v29 = v22 >> 3;
    BOOL v30 = v13;
    if (!v44)
    {
      int v31 = v14;
      do
      {
        int v33 = *v31++;
        int v32 = v33;
        BOOL v30 = v33 != 0;
        if (v33) {
          BOOL v34 = v32 == v29;
        }
        else {
          BOOL v34 = 1;
        }
      }
      while (!v34);
    }
    if (v29 != 2)
    {
      if (v29 != 1)
      {
        if (!PBReaderSkipValueWithTag()) {
          goto LABEL_70;
        }
        goto LABEL_55;
      }
      if (v30)
      {
        if (*(unsigned char *)(a1 + v18[11]))
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_70:
            char v39 = 0;
            goto LABEL_71;
          }
          v7 -= *(unsigned char *)(a1 + v18[11]) & 1;
        }
        else
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_70;
          }
          char v35 = v17;
          char v36 = objc_alloc_init(GEONonTiledInfo);
          if (!GEONonTiledInfoReadAllFrom((uint64_t)v36, (void *)v3)) {
            goto LABEL_77;
          }
          PBReaderRecallMark();
          int v37 = *(void **)(a1 + 16);
          *(void *)(a1 + 16) = v36;

          --v7;
LABEL_51:
          uint64_t v17 = v35;
          unint64_t v18 = &OBJC_IVAR___GEONonTiledAssets__flags;
        }
LABEL_55:
        if (v7) {
          char v38 = 1;
        }
        else {
          char v38 = v13;
        }
        if ((v38 & 1) == 0) {
          goto LABEL_62;
        }
        continue;
      }
LABEL_54:
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        goto LABEL_70;
      }
      goto LABEL_55;
    }
    break;
  }
  if (!v30 || (*(unsigned char *)(a1 + v18[11]) & 2) != 0) {
    goto LABEL_54;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_70;
  }
  char v35 = v17;
  char v36 = objc_alloc_init(GEONonTiledMaterialMap);
  if (GEONonTiledMaterialMapReadAllFrom((uint64_t)v36, (void *)v3))
  {
    PBReaderRecallMark();
    -[GEONonTiledModel _addNoFlagsMaterialMap:](a1, v36);

    goto LABEL_51;
  }
LABEL_77:

  char v39 = 0;
  uint64_t v17 = v35;
  unint64_t v18 = &OBJC_IVAR___GEONonTiledAssets__flags;
LABEL_71:
  *(unsigned char *)(a1 + v18[11]) |= 1u;
  *(unsigned char *)(a1 + v18[11]) |= 2u;
  if (v39)
  {
LABEL_72:
    unint64_t v3 = *(unsigned char *)(v3 + *v17) == 0;
    if (!v13) {
      return v3;
    }
    goto LABEL_73;
  }
  unint64_t v3 = 0;
  if (v13)
  {
LABEL_73:
    unint64_t v42 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_189B908D4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B90F68(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEONonTiledModelCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  [*(id *)(a1 + 16) readAll:1];
  long long v9 = 0u;
  long long v10 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  id v2 = *(id *)(a1 + 24);
  uint64_t v3 = [v2 countByEnumeratingWithState:&v7 objects:v11 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v8;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v8 != v5) {
          objc_enumerationMutation(v2);
        }
        objc_msgSend(*(id *)(*((void *)&v7 + 1) + 8 * v6++), "readAll:", 1, (void)v7);
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v7 objects:v11 count:16];
    }
    while (v4);
  }
}

unint64_t GEONonTiledModelReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 36))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEONonTiledModelReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)long long v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 40));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 32) = [v8 position];
  *(_DWORD *)(a1 + 36) = [v8 length];
  if (a3) {
    long long v9 = (int *)&GEONonTiledModelReadAllFrom_recursiveTag;
  }
  else {
    long long v9 = (int *)&GEONonTiledModelReadAllFrom_initialTag;
  }
  unint64_t Specified = GEONonTiledModelReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEONonTiledModelCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return Specified;
}

void sub_189B91214(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEONonTiledModelReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEONonTiledModelReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189B91278(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B914AC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEONonTiledModelIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  BOOL v2 = (*(unsigned char *)(a1 + 44) & 7) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return v2;
}

void sub_189B91860(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B91C0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id getAKAccountManagerClass()
{
  uint64_t v4 = 0;
  uint64_t v5 = &v4;
  uint64_t v6 = 0x2050000000;
  os_log_t v0 = (void *)getAKAccountManagerClass_softClass;
  uint64_t v7 = getAKAccountManagerClass_softClass;
  if (!getAKAccountManagerClass_softClass)
  {
    v3[0] = MEMORY[0x1E4F143A8];
    v3[1] = 3221225472;
    v3[2] = __getAKAccountManagerClass_block_invoke;
    v3[3] = &unk_1E53DB3C8;
    v3[4] = &v4;
    __getAKAccountManagerClass_block_invoke((uint64_t)v3);
    os_log_t v0 = (void *)v5[3];
  }
  id v1 = v0;
  _Block_object_dispose(&v4, 8);

  return v1;
}

void sub_189B91DEC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_189B91F54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __AccountsLibraryCore_block_invoke()
{
  uint64_t result = _sl_dlopen();
  AccountsLibraryCore_frameworkLibrary = result;
  return result;
}

uint64_t __AppleAccountLibraryCore_block_invoke()
{
  uint64_t result = _sl_dlopen();
  AppleAccountLibraryCore_frameworkLibrary = result;
  return result;
}

uint64_t __AuthKitLibraryCore_block_invoke()
{
  uint64_t result = _sl_dlopen();
  AuthKitLibraryCore_frameworkLibrary = result;
  return result;
}

Class __getAKAccountManagerClass_block_invoke(uint64_t a1)
{
  if (!AuthKitLibraryCore())
  {
    id v3 = (void *)abort_report_np();
    free(v3);
  }
  Class result = objc_getClass("AKAccountManager");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    getAKAccountManagerClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    uint64_t v4 = abort_report_np();
    return (Class)__getACAccountStoreDidChangeNotificationSymbolLoc_block_invoke(v4);
  }
  return result;
}

void *__getACAccountStoreDidChangeNotificationSymbolLoc_block_invoke(uint64_t a1)
{
  BOOL v2 = (void *)AccountsLibrary();
  Class result = dlsym(v2, "ACAccountStoreDidChangeNotification");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  qword_1EB29FCB0 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void sub_189B925FC(_Unwind_Exception *a1)
{
  shared_weak_owners = (std::__shared_weak_count *)v2[1].__shared_weak_owners_;
  if (shared_weak_owners) {
    std::__shared_weak_count::__release_shared[abi:ne180100](shared_weak_owners);
  }
  std::__shared_weak_count::~__shared_weak_count(v2);
  operator delete(v5);

  _Unwind_Resume(a1);
}

void sub_189B92770(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void FeatureStyleAttributes::setExtAttributes(FeatureStyleAttributes *this, const GeoCodecsFeatureStylePairExt *__src, unsigned int a3)
{
  if (*((unsigned __int8 *)this + 32) == a3)
  {
    if (!a3) {
      return;
    }
    uint64_t v6 = (void *)*((void *)this + 3);
    if (!v6) {
      return;
    }
    size_t v7 = 12 * a3;
    goto LABEL_10;
  }
  if (*((unsigned char *)this + 32))
  {
    free(*((void **)this + 3));
    *((void *)this + 3) = 0;
    *((unsigned char *)this + 32) = 0;
  }
  if (a3)
  {
    size_t v7 = 12 * a3;
    uint64_t v6 = malloc_type_malloc(v7, 0x10000403E1C8BA9uLL);
    *((void *)this + 3) = v6;
    if (v6)
    {
      *((unsigned char *)this + 32) = a3;
LABEL_10:
      memcpy(v6, __src, v7);
    }
  }
}

void sub_189B92F84(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189B93300(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11, void *a12)
{
  _Unwind_Resume(a1);
}

void sub_189B93564(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_189B936E0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

unint64_t featureStyleAttributesHash(uint64_t a1)
{
  unint64_t v2 = *(unsigned __int8 *)(a1 + 33) | ((unint64_t)*(unsigned __int8 *)(a1 + 32) << 8);
  unint64_t v3 = 21 * ((~v2 + (v2 << 18)) ^ ((~v2 + (v2 << 18)) >> 31));
  unint64_t v4 = (65 * (v3 ^ (v3 >> 11))) ^ ((65 * (v3 ^ (v3 >> 11))) >> 22);
  if (*(void *)a1) {
    v4 ^= PBHashBytes();
  }
  if (*(void *)(a1 + 24)) {
    v4 ^= PBHashBytes();
  }
  return v4;
}

uint64_t GeoCodecsFeatureStyleAttributesCompare(void *a1, void *a2)
{
  unint64_t v3 = a1;
  unint64_t v4 = a2;
  uint64_t v5 = (void *)v4;
  if (v3 | v4) {
    unsigned int v6 = -1;
  }
  else {
    unsigned int v6 = 0;
  }
  if (v3) {
    uint64_t v7 = 1;
  }
  else {
    uint64_t v7 = v6;
  }
  if (v3 && v4)
  {
    [(id)v3 featureStyleAttributesPtr];
    id v8 = v14;
    v15[0] = v13;
    v15[1] = (uint64_t)v14;
    uint64_t v13 = 0;
    int v14 = 0;
    [v5 featureStyleAttributesPtr];
    v12[0] = v10;
    v12[1] = (uint64_t)v11;
    uint64_t v7 = geo::codec::featureStyleAttributesCompare(v15, v12);
    if (v11) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v11);
    }
    if (v8) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v8);
    }
    if (v14) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v14);
    }
  }

  return v7;
}

void sub_189B93874(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, std::__shared_weak_count *a14)
{
  if (v16) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v16);
  }
  if (a14) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a14);
  }

  _Unwind_Resume(a1);
}

void std::__shared_ptr_emplace<FeatureStyleAttributes>::~__shared_ptr_emplace(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_1ED5185C0;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void std::__shared_ptr_emplace<FeatureStyleAttributes>::~__shared_ptr_emplace(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_1ED5185C0;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x18C11F580);
}

uint64_t __AppSupportLibraryCore_block_invoke(uint64_t a1)
{
  uint64_t result = _sl_dlopen();
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  AppSupportLibraryCore_frameworkLibrary = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void *__getCPCopyBundleIdentifierAndTeamFromSecTaskRefSymbolLoc_block_invoke(uint64_t a1)
{
  unint64_t v2 = (void *)AppSupportLibrary();
  uint64_t result = dlsym(v2, "CPCopyBundleIdentifierAndTeamFromSecTaskRef");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getCPCopyBundleIdentifierAndTeamFromSecTaskRefSymbolLoc_ptr = *(void *)(*(void *)(*(void *)(a1 + 32) + 8)
                                                                          + 24);
  return result;
}

id getRadiosPreferencesClass()
{
  uint64_t v4 = 0;
  uint64_t v5 = &v4;
  uint64_t v6 = 0x2050000000;
  os_log_t v0 = (void *)getRadiosPreferencesClass_softClass;
  uint64_t v7 = getRadiosPreferencesClass_softClass;
  if (!getRadiosPreferencesClass_softClass)
  {
    v3[0] = MEMORY[0x1E4F143A8];
    v3[1] = 3221225472;
    v3[2] = __getRadiosPreferencesClass_block_invoke;
    v3[3] = &unk_1E53DB3C8;
    v3[4] = &v4;
    __getRadiosPreferencesClass_block_invoke((uint64_t)v3);
    os_log_t v0 = (void *)v5[3];
  }
  id v1 = v0;
  _Block_object_dispose(&v4, 8);

  return v1;
}

void sub_189B93AC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void __getRadiosPreferencesClass_block_invoke(uint64_t a1)
{
  AppSupportLibrary();
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = objc_getClass("RadiosPreferences");
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    getRadiosPreferencesClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    unint64_t v2 = (GEOMapItemBuilder *)abort_report_np();
    [(GEOMapItemBuilder *)v2 setReferenceFrame:v4];
  }
}

void sub_189B94E14(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
}

void sub_189B95FE0(_Unwind_Exception *a1)
{
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 64));
  _Unwind_Resume(a1);
}

__CFString *GEONavigationListenerStateAsString(unint64_t a1)
{
  if (a1 > 2) {
    return 0;
  }
  else {
    return off_1E53E49F0[a1];
  }
}

BOOL GEOAlightNotificationFeedbackReadAllFrom(uint64_t a1, void *a2)
{
  uint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    int v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    uint64_t v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        switch((v10 >> 3))
        {
          case 1u:
            char v18 = 0;
            unsigned int v19 = 0;
            uint64_t v20 = 0;
            *(_WORD *)(a1 + 84) |= 0x1000u;
            while (1)
            {
              uint64_t v21 = *v4;
              uint64_t v22 = *(void *)&v3[v21];
              unint64_t v23 = v22 + 1;
              if (v22 == -1 || v23 > *(void *)&v3[*v5]) {
                break;
              }
              char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
              *(void *)&v3[v21] = v23;
              v20 |= (unint64_t)(v24 & 0x7F) << v18;
              if ((v24 & 0x80) == 0) {
                goto LABEL_105;
              }
              v18 += 7;
              BOOL v15 = v19++ >= 9;
              if (v15)
              {
                uint64_t v20 = 0;
                goto LABEL_107;
              }
            }
            v3[*v6] = 1;
LABEL_105:
            if (v3[*v6]) {
              uint64_t v20 = 0;
            }
LABEL_107:
            BOOL v92 = v20 != 0;
            uint64_t v93 = 81;
            goto LABEL_141;
          case 2u:
            char v25 = 0;
            unsigned int v26 = 0;
            uint64_t v27 = 0;
            *(_WORD *)(a1 + 84) |= 0x2000u;
            while (2)
            {
              uint64_t v28 = *v4;
              uint64_t v29 = *(void *)&v3[v28];
              unint64_t v30 = v29 + 1;
              if (v29 == -1 || v30 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v31 = *(unsigned char *)(*(void *)&v3[*v7] + v29);
                *(void *)&v3[v28] = v30;
                v27 |= (unint64_t)(v31 & 0x7F) << v25;
                if (v31 < 0)
                {
                  v25 += 7;
                  BOOL v15 = v26++ >= 9;
                  if (v15)
                  {
                    uint64_t v27 = 0;
                    goto LABEL_111;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              uint64_t v27 = 0;
            }
LABEL_111:
            BOOL v92 = v27 != 0;
            uint64_t v93 = 82;
            goto LABEL_141;
          case 3u:
            char v32 = 0;
            unsigned int v33 = 0;
            uint64_t v34 = 0;
            *(_WORD *)(a1 + 84) |= 0x10u;
            while (2)
            {
              uint64_t v35 = *v4;
              uint64_t v36 = *(void *)&v3[v35];
              unint64_t v37 = v36 + 1;
              if (v36 == -1 || v37 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v38 = *(unsigned char *)(*(void *)&v3[*v7] + v36);
                *(void *)&v3[v35] = v37;
                v34 |= (unint64_t)(v38 & 0x7F) << v32;
                if (v38 < 0)
                {
                  v32 += 7;
                  BOOL v15 = v33++ >= 9;
                  if (v15)
                  {
                    uint64_t v34 = 0;
                    goto LABEL_115;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              uint64_t v34 = 0;
            }
LABEL_115:
            uint64_t v94 = 40;
            goto LABEL_124;
          case 4u:
            char v39 = 0;
            unsigned int v40 = 0;
            uint64_t v34 = 0;
            *(_WORD *)(a1 + 84) |= 0x20u;
            while (2)
            {
              uint64_t v41 = *v4;
              uint64_t v42 = *(void *)&v3[v41];
              unint64_t v43 = v42 + 1;
              if (v42 == -1 || v43 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v44 = *(unsigned char *)(*(void *)&v3[*v7] + v42);
                *(void *)&v3[v41] = v43;
                v34 |= (unint64_t)(v44 & 0x7F) << v39;
                if (v44 < 0)
                {
                  v39 += 7;
                  BOOL v15 = v40++ >= 9;
                  if (v15)
                  {
                    uint64_t v34 = 0;
                    goto LABEL_119;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              uint64_t v34 = 0;
            }
LABEL_119:
            uint64_t v94 = 48;
            goto LABEL_124;
          case 5u:
            char v45 = 0;
            unsigned int v46 = 0;
            uint64_t v34 = 0;
            *(_WORD *)(a1 + 84) |= 1u;
            while (2)
            {
              uint64_t v47 = *v4;
              uint64_t v48 = *(void *)&v3[v47];
              unint64_t v49 = v48 + 1;
              if (v48 == -1 || v49 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v50 = *(unsigned char *)(*(void *)&v3[*v7] + v48);
                *(void *)&v3[v47] = v49;
                v34 |= (unint64_t)(v50 & 0x7F) << v45;
                if (v50 < 0)
                {
                  v45 += 7;
                  BOOL v15 = v46++ >= 9;
                  if (v15)
                  {
                    uint64_t v34 = 0;
                    goto LABEL_123;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              uint64_t v34 = 0;
            }
LABEL_123:
            uint64_t v94 = 8;
LABEL_124:
            *(void *)(a1 + v94) = v34;
            continue;
          case 6u:
            char v51 = 0;
            unsigned int v52 = 0;
            uint64_t v53 = 0;
            *(_WORD *)(a1 + 84) |= 0x400u;
            while (2)
            {
              uint64_t v54 = *v4;
              uint64_t v55 = *(void *)&v3[v54];
              unint64_t v56 = v55 + 1;
              if (v55 == -1 || v56 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v57 = *(unsigned char *)(*(void *)&v3[*v7] + v55);
                *(void *)&v3[v54] = v56;
                v53 |= (unint64_t)(v57 & 0x7F) << v51;
                if (v57 < 0)
                {
                  v51 += 7;
                  BOOL v15 = v52++ >= 9;
                  if (v15)
                  {
                    LODWORD(v53) = 0;
                    goto LABEL_128;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              LODWORD(v53) = 0;
            }
LABEL_128:
            uint64_t v95 = 76;
            goto LABEL_146;
          case 7u:
            *(_WORD *)(a1 + 84) |= 0x40u;
            uint64_t v58 = *v4;
            unint64_t v59 = *(void *)&v3[v58];
            if (v59 <= 0xFFFFFFFFFFFFFFF7 && v59 + 8 <= *(void *)&v3[*v5])
            {
              uint64_t v60 = *(void *)(*(void *)&v3[*v7] + v59);
              *(void *)&v3[v58] = v59 + 8;
            }
            else
            {
              v3[*v6] = 1;
              uint64_t v60 = 0;
            }
            uint64_t v96 = 56;
            goto LABEL_155;
          case 8u:
            char v61 = 0;
            unsigned int v62 = 0;
            uint64_t v53 = 0;
            *(_WORD *)(a1 + 84) |= 0x200u;
            while (2)
            {
              uint64_t v63 = *v4;
              uint64_t v64 = *(void *)&v3[v63];
              unint64_t v65 = v64 + 1;
              if (v64 == -1 || v65 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v66 = *(unsigned char *)(*(void *)&v3[*v7] + v64);
                *(void *)&v3[v63] = v65;
                v53 |= (unint64_t)(v66 & 0x7F) << v61;
                if (v66 < 0)
                {
                  v61 += 7;
                  BOOL v15 = v62++ >= 9;
                  if (v15)
                  {
                    LODWORD(v53) = 0;
                    goto LABEL_132;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              LODWORD(v53) = 0;
            }
LABEL_132:
            uint64_t v95 = 72;
            goto LABEL_146;
          case 9u:
            *(_WORD *)(a1 + 84) |= 8u;
            uint64_t v67 = *v4;
            unint64_t v68 = *(void *)&v3[v67];
            if (v68 <= 0xFFFFFFFFFFFFFFF7 && v68 + 8 <= *(void *)&v3[*v5])
            {
              uint64_t v60 = *(void *)(*(void *)&v3[*v7] + v68);
              *(void *)&v3[v67] = v68 + 8;
            }
            else
            {
              v3[*v6] = 1;
              uint64_t v60 = 0;
            }
            uint64_t v96 = 32;
            goto LABEL_155;
          case 0xAu:
            char v69 = 0;
            unsigned int v70 = 0;
            uint64_t v53 = 0;
            *(_WORD *)(a1 + 84) |= 0x80u;
            while (2)
            {
              uint64_t v71 = *v4;
              uint64_t v72 = *(void *)&v3[v71];
              unint64_t v73 = v72 + 1;
              if (v72 == -1 || v73 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v74 = *(unsigned char *)(*(void *)&v3[*v7] + v72);
                *(void *)&v3[v71] = v73;
                v53 |= (unint64_t)(v74 & 0x7F) << v69;
                if (v74 < 0)
                {
                  v69 += 7;
                  BOOL v15 = v70++ >= 9;
                  if (v15)
                  {
                    LODWORD(v53) = 0;
                    goto LABEL_136;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              LODWORD(v53) = 0;
            }
LABEL_136:
            uint64_t v95 = 64;
            goto LABEL_146;
          case 0xBu:
            *(_WORD *)(a1 + 84) |= 4u;
            uint64_t v75 = *v4;
            unint64_t v76 = *(void *)&v3[v75];
            if (v76 <= 0xFFFFFFFFFFFFFFF7 && v76 + 8 <= *(void *)&v3[*v5])
            {
              uint64_t v60 = *(void *)(*(void *)&v3[*v7] + v76);
              *(void *)&v3[v75] = v76 + 8;
            }
            else
            {
              v3[*v6] = 1;
              uint64_t v60 = 0;
            }
            uint64_t v96 = 24;
            goto LABEL_155;
          case 0xCu:
            char v77 = 0;
            unsigned int v78 = 0;
            uint64_t v79 = 0;
            *(_WORD *)(a1 + 84) |= 0x800u;
            while (2)
            {
              uint64_t v80 = *v4;
              uint64_t v81 = *(void *)&v3[v80];
              unint64_t v82 = v81 + 1;
              if (v81 == -1 || v82 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v83 = *(unsigned char *)(*(void *)&v3[*v7] + v81);
                *(void *)&v3[v80] = v82;
                v79 |= (unint64_t)(v83 & 0x7F) << v77;
                if (v83 < 0)
                {
                  v77 += 7;
                  BOOL v15 = v78++ >= 9;
                  if (v15)
                  {
                    uint64_t v79 = 0;
                    goto LABEL_140;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              uint64_t v79 = 0;
            }
LABEL_140:
            BOOL v92 = v79 != 0;
            uint64_t v93 = 80;
LABEL_141:
            *(unsigned char *)(a1 + v93) = v92;
            continue;
          case 0xDu:
            *(_WORD *)(a1 + 84) |= 2u;
            uint64_t v84 = *v4;
            unint64_t v85 = *(void *)&v3[v84];
            if (v85 <= 0xFFFFFFFFFFFFFFF7 && v85 + 8 <= *(void *)&v3[*v5])
            {
              uint64_t v60 = *(void *)(*(void *)&v3[*v7] + v85);
              *(void *)&v3[v84] = v85 + 8;
            }
            else
            {
              v3[*v6] = 1;
              uint64_t v60 = 0;
            }
            uint64_t v96 = 16;
LABEL_155:
            *(void *)(a1 + v96) = v60;
            continue;
          case 0xEu:
            char v86 = 0;
            unsigned int v87 = 0;
            uint64_t v53 = 0;
            *(_WORD *)(a1 + 84) |= 0x100u;
            break;
          default:
            if (!PBReaderSkipValueWithTag()) {
              goto LABEL_158;
            }
            continue;
        }
        while (1)
        {
          uint64_t v88 = *v4;
          uint64_t v89 = *(void *)&v3[v88];
          unint64_t v90 = v89 + 1;
          if (v89 == -1 || v90 > *(void *)&v3[*v5]) {
            break;
          }
          char v91 = *(unsigned char *)(*(void *)&v3[*v7] + v89);
          *(void *)&v3[v88] = v90;
          v53 |= (unint64_t)(v91 & 0x7F) << v86;
          if ((v91 & 0x80) == 0) {
            goto LABEL_143;
          }
          v86 += 7;
          BOOL v15 = v87++ >= 9;
          if (v15)
          {
            LODWORD(v53) = 0;
            goto LABEL_145;
          }
        }
        v3[*v6] = 1;
LABEL_143:
        if (v3[*v6]) {
          LODWORD(v53) = 0;
        }
LABEL_145:
        uint64_t v95 = 68;
LABEL_146:
        *(_DWORD *)(a1 + v95) = v53;
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v97 = v3[*v6] == 0;
  }
  else
  {
LABEL_158:
    BOOL v97 = 0;
  }
  objc_sync_exit(v3);

  return v97;
}

void sub_189B9A884(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOAlightNotificationFeedbackReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOAlightNotificationFeedbackReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189B9A920(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOAlightNotificationFeedbackIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  unint64_t v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  int v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          uint64_t v14 = *v4;
          int v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      uint64_t v14 = *v4;
      int v15 = a1[v14];
      if (a1[v14]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v16 = v8 & 7;
      if (v15 || v16 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_110;
          }
          unsigned int v21 = 0;
          while (1)
          {
            uint64_t v22 = *v2;
            uint64_t v23 = *(void *)&a1[v22];
            unint64_t v24 = v23 + 1;
            if (v23 == -1 || v24 > *(void *)&a1[*v3]) {
              goto LABEL_105;
            }
            int v25 = *(char *)(*(void *)&a1[*v5] + v23);
            *(void *)&a1[v22] = v24;
            if (v25 < 0)
            {
              BOOL v26 = v21++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_107;
          }
        case 2u:
          if ((v8 & 7) != 0) {
            goto LABEL_110;
          }
          unsigned int v27 = 0;
          while (1)
          {
            uint64_t v28 = *v2;
            uint64_t v29 = *(void *)&a1[v28];
            unint64_t v30 = v29 + 1;
            if (v29 == -1 || v30 > *(void *)&a1[*v3]) {
              goto LABEL_105;
            }
            int v31 = *(char *)(*(void *)&a1[*v5] + v29);
            *(void *)&a1[v28] = v30;
            if (v31 < 0)
            {
              BOOL v26 = v27++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_107;
          }
        case 3u:
          if ((v8 & 7) != 0) {
            goto LABEL_110;
          }
          unsigned int v32 = 0;
          while (1)
          {
            uint64_t v33 = *v2;
            uint64_t v34 = *(void *)&a1[v33];
            unint64_t v35 = v34 + 1;
            if (v34 == -1 || v35 > *(void *)&a1[*v3]) {
              goto LABEL_105;
            }
            int v36 = *(char *)(*(void *)&a1[*v5] + v34);
            *(void *)&a1[v33] = v35;
            if (v36 < 0)
            {
              BOOL v26 = v32++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_107;
          }
        case 4u:
          if ((v8 & 7) != 0) {
            goto LABEL_110;
          }
          unsigned int v37 = 0;
          while (1)
          {
            uint64_t v38 = *v2;
            uint64_t v39 = *(void *)&a1[v38];
            unint64_t v40 = v39 + 1;
            if (v39 == -1 || v40 > *(void *)&a1[*v3]) {
              goto LABEL_105;
            }
            int v41 = *(char *)(*(void *)&a1[*v5] + v39);
            *(void *)&a1[v38] = v40;
            if (v41 < 0)
            {
              BOOL v26 = v37++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_107;
          }
        case 5u:
          if ((v8 & 7) != 0) {
            goto LABEL_110;
          }
          unsigned int v42 = 0;
          while (1)
          {
            uint64_t v43 = *v2;
            uint64_t v44 = *(void *)&a1[v43];
            unint64_t v45 = v44 + 1;
            if (v44 == -1 || v45 > *(void *)&a1[*v3]) {
              goto LABEL_105;
            }
            int v46 = *(char *)(*(void *)&a1[*v5] + v44);
            *(void *)&a1[v43] = v45;
            if (v46 < 0)
            {
              BOOL v26 = v42++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_107;
          }
        case 6u:
          if ((v8 & 7) != 0) {
            goto LABEL_110;
          }
          unsigned int v47 = 0;
          while (1)
          {
            uint64_t v48 = *v2;
            uint64_t v49 = *(void *)&a1[v48];
            unint64_t v50 = v49 + 1;
            if (v49 == -1 || v50 > *(void *)&a1[*v3]) {
              goto LABEL_105;
            }
            int v51 = *(char *)(*(void *)&a1[*v5] + v49);
            *(void *)&a1[v48] = v50;
            if (v51 < 0)
            {
              BOOL v26 = v47++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_107;
          }
        case 7u:
        case 9u:
        case 0xBu:
        case 0xDu:
          if (v16 != 1) {
            goto LABEL_110;
          }
          uint64_t v18 = *v2;
          unint64_t v19 = *(void *)&a1[v18];
          if (v19 > 0xFFFFFFFFFFFFFFF7) {
            goto LABEL_106;
          }
          unint64_t v20 = v19 + 8;
          if (v20 > *(void *)&a1[*v3]) {
            goto LABEL_106;
          }
          *(void *)&a1[v18] = v20;
          continue;
        case 8u:
          if ((v8 & 7) != 0) {
            goto LABEL_110;
          }
          unsigned int v52 = 0;
          while (1)
          {
            uint64_t v53 = *v2;
            uint64_t v54 = *(void *)&a1[v53];
            unint64_t v55 = v54 + 1;
            if (v54 == -1 || v55 > *(void *)&a1[*v3]) {
              goto LABEL_105;
            }
            int v56 = *(char *)(*(void *)&a1[*v5] + v54);
            *(void *)&a1[v53] = v55;
            if (v56 < 0)
            {
              BOOL v26 = v52++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_107;
          }
        case 0xAu:
          if ((v8 & 7) != 0) {
            goto LABEL_110;
          }
          unsigned int v57 = 0;
          while (1)
          {
            uint64_t v58 = *v2;
            uint64_t v59 = *(void *)&a1[v58];
            unint64_t v60 = v59 + 1;
            if (v59 == -1 || v60 > *(void *)&a1[*v3]) {
              goto LABEL_105;
            }
            int v61 = *(char *)(*(void *)&a1[*v5] + v59);
            *(void *)&a1[v58] = v60;
            if (v61 < 0)
            {
              BOOL v26 = v57++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_107;
          }
        case 0xCu:
          if ((v8 & 7) != 0) {
            goto LABEL_110;
          }
          unsigned int v62 = 0;
          while (1)
          {
            uint64_t v63 = *v2;
            uint64_t v64 = *(void *)&a1[v63];
            unint64_t v65 = v64 + 1;
            if (v64 == -1 || v65 > *(void *)&a1[*v3]) {
              goto LABEL_105;
            }
            int v66 = *(char *)(*(void *)&a1[*v5] + v64);
            *(void *)&a1[v63] = v65;
            if (v66 < 0)
            {
              BOOL v26 = v62++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_107;
          }
        case 0xEu:
          if ((v8 & 7) != 0) {
            goto LABEL_110;
          }
          unsigned int v67 = 0;
          break;
        default:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_110:
          BOOL v72 = 0;
          goto LABEL_109;
      }
      while (1)
      {
        uint64_t v68 = *v2;
        uint64_t v69 = *(void *)&a1[v68];
        unint64_t v70 = v69 + 1;
        if (v69 == -1 || v70 > *(void *)&a1[*v3]) {
          break;
        }
        int v71 = *(char *)(*(void *)&a1[*v5] + v69);
        *(void *)&a1[v68] = v70;
        if (v71 < 0)
        {
          BOOL v26 = v67++ > 8;
          if (!v26) {
            continue;
          }
        }
        goto LABEL_107;
      }
LABEL_105:
      uint64_t v14 = *v4;
LABEL_106:
      a1[v14] = 1;
LABEL_107:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v72 = a1[*v4] == 0;
LABEL_109:
  PBReaderRecallMark();
  return v72;
}

void sub_189B9C024(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B9C1E0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B9C5A0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B9C8DC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B9CC9C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B9CFD4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189B9DAF4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEODirectionsFeedbackCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  uint64_t v52 = *MEMORY[0x1E4F143B8];
  long long v43 = 0u;
  long long v44 = 0u;
  long long v45 = 0u;
  long long v46 = 0u;
  id v2 = a1[6];
  uint64_t v3 = [v2 countByEnumeratingWithState:&v43 objects:v51 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v44;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v44 != v5) {
          objc_enumerationMutation(v2);
        }
        [*(id *)(*((void *)&v43 + 1) + 8 * v6++) readAll:1];
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v43 objects:v51 count:16];
    }
    while (v4);
  }

  long long v41 = 0u;
  long long v42 = 0u;
  long long v39 = 0u;
  long long v40 = 0u;
  id v7 = a1[7];
  uint64_t v8 = [v7 countByEnumeratingWithState:&v39 objects:v50 count:16];
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)v40;
    do
    {
      uint64_t v11 = 0;
      do
      {
        if (*(void *)v40 != v10) {
          objc_enumerationMutation(v7);
        }
        [*(id *)(*((void *)&v39 + 1) + 8 * v11++) readAll:1];
      }
      while (v9 != v11);
      uint64_t v9 = [v7 countByEnumeratingWithState:&v39 objects:v50 count:16];
    }
    while (v9);
  }

  long long v37 = 0u;
  long long v38 = 0u;
  long long v35 = 0u;
  long long v36 = 0u;
  id v12 = a1[2];
  uint64_t v13 = [v12 countByEnumeratingWithState:&v35 objects:v49 count:16];
  if (v13)
  {
    uint64_t v14 = v13;
    uint64_t v15 = *(void *)v36;
    do
    {
      uint64_t v16 = 0;
      do
      {
        if (*(void *)v36 != v15) {
          objc_enumerationMutation(v12);
        }
        [*(id *)(*((void *)&v35 + 1) + 8 * v16++) readAll:1];
      }
      while (v14 != v16);
      uint64_t v14 = [v12 countByEnumeratingWithState:&v35 objects:v49 count:16];
    }
    while (v14);
  }

  long long v33 = 0u;
  long long v34 = 0u;
  long long v31 = 0u;
  long long v32 = 0u;
  id v17 = a1[4];
  uint64_t v18 = [v17 countByEnumeratingWithState:&v31 objects:v48 count:16];
  if (v18)
  {
    uint64_t v19 = v18;
    uint64_t v20 = *(void *)v32;
    do
    {
      uint64_t v21 = 0;
      do
      {
        if (*(void *)v32 != v20) {
          objc_enumerationMutation(v17);
        }
        [*(id *)(*((void *)&v31 + 1) + 8 * v21++) readAll:1];
      }
      while (v19 != v21);
      uint64_t v19 = [v17 countByEnumeratingWithState:&v31 objects:v48 count:16];
    }
    while (v19);
  }

  long long v29 = 0u;
  long long v30 = 0u;
  long long v27 = 0u;
  long long v28 = 0u;
  id v22 = a1[5];
  uint64_t v23 = [v22 countByEnumeratingWithState:&v27 objects:v47 count:16];
  if (v23)
  {
    uint64_t v24 = v23;
    uint64_t v25 = *(void *)v28;
    do
    {
      uint64_t v26 = 0;
      do
      {
        if (*(void *)v28 != v25) {
          objc_enumerationMutation(v22);
        }
        objc_msgSend(*(id *)(*((void *)&v27 + 1) + 8 * v26++), "readAll:", 1, (void)v27);
      }
      while (v24 != v26);
      uint64_t v24 = [v22 countByEnumeratingWithState:&v27 objects:v47 count:16];
    }
    while (v24);
  }
}

unint64_t GEODirectionsFeedbackReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 68))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEODirectionsFeedbackReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 72));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 64) = [v8 position];
  *(_DWORD *)(a1 + 68) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEODirectionsFeedbackReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEODirectionsFeedbackReadAllFrom_initialTag;
  }
  unint64_t Specified = GEODirectionsFeedbackReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEODirectionsFeedbackCallReadAllRecursiveWithoutSynchronized((id *)a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
  return Specified;
}

void sub_189B9DFE8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEODirectionsFeedbackReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEODirectionsFeedbackReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189B9E04C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOTrafficRerouteFeedbackIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          uint64_t v14 = *v4;
          int v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      uint64_t v14 = *v4;
      int v15 = a1[v14];
      if (a1[v14]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v16 = v8 & 7;
      if (v15 || v16 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_104;
          }
          unsigned int v21 = 0;
          while (1)
          {
            uint64_t v22 = *v2;
            uint64_t v23 = *(void *)&a1[v22];
            unint64_t v24 = v23 + 1;
            if (v23 == -1 || v24 > *(void *)&a1[*v3]) {
              goto LABEL_95;
            }
            int v25 = *(char *)(*(void *)&a1[*v5] + v23);
            *(void *)&a1[v22] = v24;
            if (v25 < 0)
            {
              BOOL v26 = v21++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_101;
          }
        case 2u:
          if ((v8 & 7) != 0) {
            goto LABEL_104;
          }
          unsigned int v27 = 0;
          while (1)
          {
            uint64_t v28 = *v2;
            uint64_t v29 = *(void *)&a1[v28];
            unint64_t v30 = v29 + 1;
            if (v29 == -1 || v30 > *(void *)&a1[*v3]) {
              goto LABEL_95;
            }
            int v31 = *(char *)(*(void *)&a1[*v5] + v29);
            *(void *)&a1[v28] = v30;
            if (v31 < 0)
            {
              BOOL v26 = v27++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_101;
          }
        case 3u:
          if ((v8 & 7) != 0) {
            goto LABEL_104;
          }
          unsigned int v32 = 0;
          while (1)
          {
            uint64_t v33 = *v2;
            uint64_t v34 = *(void *)&a1[v33];
            unint64_t v35 = v34 + 1;
            if (v34 == -1 || v35 > *(void *)&a1[*v3]) {
              goto LABEL_95;
            }
            int v36 = *(char *)(*(void *)&a1[*v5] + v34);
            *(void *)&a1[v33] = v35;
            if (v36 < 0)
            {
              BOOL v26 = v32++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_101;
          }
        case 4u:
          if ((v8 & 7) != 0) {
            goto LABEL_104;
          }
          unsigned int v37 = 0;
          while (1)
          {
            uint64_t v38 = *v2;
            uint64_t v39 = *(void *)&a1[v38];
            unint64_t v40 = v39 + 1;
            if (v39 == -1 || v40 > *(void *)&a1[*v3]) {
              goto LABEL_95;
            }
            int v41 = *(char *)(*(void *)&a1[*v5] + v39);
            *(void *)&a1[v38] = v40;
            if (v41 < 0)
            {
              BOOL v26 = v37++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_101;
          }
        case 6u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEORouteIncidentIsValid(a1)) {
            goto LABEL_104;
          }
          PBReaderRecallMark();
          continue;
        case 8u:
          if (v16 == 2) {
            goto LABEL_100;
          }
          goto LABEL_104;
        case 9u:
          if (v16 == 2) {
            goto LABEL_100;
          }
          goto LABEL_104;
        case 0xAu:
          if ((v8 & 7) != 0) {
            goto LABEL_104;
          }
          unsigned int v42 = 0;
          while (1)
          {
            uint64_t v43 = *v2;
            uint64_t v44 = *(void *)&a1[v43];
            unint64_t v45 = v44 + 1;
            if (v44 == -1 || v45 > *(void *)&a1[*v3]) {
              goto LABEL_95;
            }
            int v46 = *(char *)(*(void *)&a1[*v5] + v44);
            *(void *)&a1[v43] = v45;
            if (v46 < 0)
            {
              BOOL v26 = v42++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_101;
          }
        case 0xBu:
          if ((v8 & 7) != 0) {
            goto LABEL_104;
          }
          unsigned int v47 = 0;
          while (1)
          {
            uint64_t v48 = *v2;
            uint64_t v49 = *(void *)&a1[v48];
            unint64_t v50 = v49 + 1;
            if (v49 == -1 || v50 > *(void *)&a1[*v3]) {
              goto LABEL_95;
            }
            int v51 = *(char *)(*(void *)&a1[*v5] + v49);
            *(void *)&a1[v48] = v50;
            if (v51 < 0)
            {
              BOOL v26 = v47++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_101;
          }
        case 0xCu:
          if ((v8 & 7) != 0) {
            goto LABEL_104;
          }
          unsigned int v52 = 0;
          while (1)
          {
            uint64_t v53 = *v2;
            uint64_t v54 = *(void *)&a1[v53];
            unint64_t v55 = v54 + 1;
            if (v54 == -1 || v55 > *(void *)&a1[*v3]) {
              goto LABEL_95;
            }
            int v56 = *(char *)(*(void *)&a1[*v5] + v54);
            *(void *)&a1[v53] = v55;
            if (v56 < 0)
            {
              BOOL v26 = v52++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_101;
          }
        case 0xDu:
          if ((v8 & 7) != 0) {
            goto LABEL_104;
          }
          unsigned int v57 = 0;
          break;
        case 0xEu:
          if (v16 == 2) {
            goto LABEL_100;
          }
          goto LABEL_104;
        case 0xFu:
        case 0x11u:
          if (v16 != 1) {
            goto LABEL_104;
          }
          uint64_t v18 = *v2;
          unint64_t v19 = *(void *)&a1[v18];
          if (v19 > 0xFFFFFFFFFFFFFFF7) {
            goto LABEL_96;
          }
          unint64_t v20 = v19 + 8;
          if (v20 > *(void *)&a1[*v3]) {
            goto LABEL_96;
          }
          *(void *)&a1[v18] = v20;
          continue;
        case 0x10u:
          if (v16 == 2) {
            goto LABEL_100;
          }
          goto LABEL_104;
        default:
LABEL_100:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_104:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        uint64_t v58 = *v2;
        uint64_t v59 = *(void *)&a1[v58];
        unint64_t v60 = v59 + 1;
        if (v59 == -1 || v60 > *(void *)&a1[*v3]) {
          break;
        }
        int v61 = *(char *)(*(void *)&a1[*v5] + v59);
        *(void *)&a1[v58] = v60;
        if (v61 < 0)
        {
          BOOL v26 = v57++ > 8;
          if (!v26) {
            continue;
          }
        }
        goto LABEL_101;
      }
LABEL_95:
      uint64_t v14 = *v4;
LABEL_96:
      a1[v14] = 1;
LABEL_101:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v62 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v62;
}

BOOL GEOGuidanceEventFeedbackIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          uint64_t v14 = *v4;
          int v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      uint64_t v14 = *v4;
      int v15 = a1[v14];
      if (a1[v14]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v16 = v8 & 7;
      if (v15 || v16 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v16 != 2) {
            goto LABEL_79;
          }
          goto LABEL_24;
        case 2u:
          if ((v8 & 7) != 0) {
            goto LABEL_79;
          }
          unsigned int v21 = 0;
          while (1)
          {
            uint64_t v22 = *v2;
            uint64_t v23 = *(void *)&a1[v22];
            unint64_t v24 = v23 + 1;
            if (v23 == -1 || v24 > *(void *)&a1[*v3]) {
              goto LABEL_58;
            }
            int v25 = *(char *)(*(void *)&a1[*v5] + v23);
            *(void *)&a1[v22] = v24;
            if (v25 < 0)
            {
              BOOL v26 = v21++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_76;
          }
        case 3u:
          if ((v8 & 7) != 0) {
            goto LABEL_79;
          }
          unsigned int v27 = 0;
          while (1)
          {
            uint64_t v28 = *v2;
            uint64_t v29 = *(void *)&a1[v28];
            unint64_t v30 = v29 + 1;
            if (v29 == -1 || v30 > *(void *)&a1[*v3]) {
              goto LABEL_58;
            }
            int v31 = *(char *)(*(void *)&a1[*v5] + v29);
            *(void *)&a1[v28] = v30;
            if (v31 < 0)
            {
              BOOL v26 = v27++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_76;
          }
        case 4u:
          if ((v8 & 7) != 0) {
            goto LABEL_79;
          }
          unsigned int v32 = 0;
          while (1)
          {
            uint64_t v33 = *v2;
            uint64_t v34 = *(void *)&a1[v33];
            unint64_t v35 = v34 + 1;
            if (v34 == -1 || v35 > *(void *)&a1[*v3]) {
              goto LABEL_58;
            }
            int v36 = *(char *)(*(void *)&a1[*v5] + v34);
            *(void *)&a1[v33] = v35;
            if (v36 < 0)
            {
              BOOL v26 = v32++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_76;
          }
        case 5u:
        case 6u:
        case 7u:
        case 9u:
          if (v16 != 5) {
            goto LABEL_79;
          }
          uint64_t v18 = *v2;
          unint64_t v19 = *(void *)&a1[v18];
          if (v19 > 0xFFFFFFFFFFFFFFFBLL) {
            goto LABEL_59;
          }
          unint64_t v20 = v19 + 4;
          if (v20 > *(void *)&a1[*v3]) {
            goto LABEL_59;
          }
          *(void *)&a1[v18] = v20;
          continue;
        case 8u:
          if ((v8 & 7) != 0) {
            goto LABEL_79;
          }
          unsigned int v37 = 0;
          break;
        case 0xAu:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOSignGuidanceFeedbackIsValid(a1)) {
            goto LABEL_79;
          }
          goto LABEL_75;
        case 0xBu:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOSpokenGuidanceFeedbackIsValid(a1)) {
            goto LABEL_79;
          }
          goto LABEL_75;
        case 0xCu:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOJunctionViewGuidanceFeedbackIsValid(a1)) {
            goto LABEL_79;
          }
          goto LABEL_75;
        case 0xDu:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOTrafficCameraInformationIsValid(a1)) {
            goto LABEL_79;
          }
LABEL_75:
          PBReaderRecallMark();
          continue;
        default:
LABEL_24:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_79:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        uint64_t v38 = *v2;
        uint64_t v39 = *(void *)&a1[v38];
        unint64_t v40 = v39 + 1;
        if (v39 == -1 || v40 > *(void *)&a1[*v3]) {
          break;
        }
        int v41 = *(char *)(*(void *)&a1[*v5] + v39);
        *(void *)&a1[v38] = v40;
        if (v41 < 0)
        {
          BOOL v26 = v37++ > 8;
          if (!v26) {
            continue;
          }
        }
        goto LABEL_76;
      }
LABEL_58:
      uint64_t v14 = *v4;
LABEL_59:
      a1[v14] = 1;
LABEL_76:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v42 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v42;
}

BOOL GEODirectionsFeedbackIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  BOOL v2 = *(unsigned __int8 *)(a1 + 80) > 1u;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
  return v2;
}

void sub_189B9F398(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOEVStepFeedbackInfoReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        switch((v10 >> 3))
        {
          case 1u:
            char v18 = 0;
            unsigned int v19 = 0;
            uint64_t v20 = 0;
            *(unsigned char *)(a1 + 24) |= 2u;
            while (1)
            {
              uint64_t v21 = *v4;
              uint64_t v22 = *(void *)&v3[v21];
              unint64_t v23 = v22 + 1;
              if (v22 == -1 || v23 > *(void *)&v3[*v5])
              {
                BOOL v26 = &OBJC_IVAR___GEOEVStepFeedbackInfo__remainingBatteryPercentage;
                goto LABEL_54;
              }
              char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
              *(void *)&v3[v21] = v23;
              v20 |= (unint64_t)(v24 & 0x7F) << v18;
              if ((v24 & 0x80) == 0) {
                break;
              }
              v18 += 7;
              BOOL v25 = v19++ > 8;
              if (v25)
              {
                LODWORD(v20) = 0;
                BOOL v26 = &OBJC_IVAR___GEOEVStepFeedbackInfo__remainingBatteryPercentage;
                goto LABEL_57;
              }
            }
            BOOL v26 = &OBJC_IVAR___GEOEVStepFeedbackInfo__remainingBatteryPercentage;
            goto LABEL_55;
          case 2u:
            char v27 = 0;
            unsigned int v28 = 0;
            uint64_t v20 = 0;
            *(unsigned char *)(a1 + 24) |= 4u;
            while (2)
            {
              uint64_t v29 = *v4;
              uint64_t v30 = *(void *)&v3[v29];
              unint64_t v31 = v30 + 1;
              if (v30 == -1 || v31 > *(void *)&v3[*v5])
              {
                BOOL v26 = &OBJC_IVAR___GEOEVStepFeedbackInfo__remainingTravelRange;
                goto LABEL_54;
              }
              char v32 = *(unsigned char *)(*(void *)&v3[*v7] + v30);
              *(void *)&v3[v29] = v31;
              v20 |= (unint64_t)(v32 & 0x7F) << v27;
              if (v32 < 0)
              {
                v27 += 7;
                BOOL v25 = v28++ > 8;
                if (v25)
                {
                  LODWORD(v20) = 0;
                  BOOL v26 = &OBJC_IVAR___GEOEVStepFeedbackInfo__remainingTravelRange;
                  goto LABEL_57;
                }
                continue;
              }
              break;
            }
            BOOL v26 = &OBJC_IVAR___GEOEVStepFeedbackInfo__remainingTravelRange;
            goto LABEL_55;
          case 3u:
            char v33 = 0;
            unsigned int v34 = 0;
            uint64_t v20 = 0;
            *(unsigned char *)(a1 + 24) |= 1u;
            while (2)
            {
              uint64_t v35 = *v4;
              uint64_t v36 = *(void *)&v3[v35];
              unint64_t v37 = v36 + 1;
              if (v36 == -1 || v37 > *(void *)&v3[*v5])
              {
                BOOL v26 = &OBJC_IVAR___GEOEVStepFeedbackInfo__remainingBatteryCharge;
                goto LABEL_54;
              }
              char v38 = *(unsigned char *)(*(void *)&v3[*v7] + v36);
              *(void *)&v3[v35] = v37;
              v20 |= (unint64_t)(v38 & 0x7F) << v33;
              if (v38 < 0)
              {
                v33 += 7;
                BOOL v25 = v34++ > 8;
                if (v25)
                {
                  LODWORD(v20) = 0;
                  BOOL v26 = &OBJC_IVAR___GEOEVStepFeedbackInfo__remainingBatteryCharge;
                  goto LABEL_57;
                }
                continue;
              }
              break;
            }
            BOOL v26 = &OBJC_IVAR___GEOEVStepFeedbackInfo__remainingBatteryCharge;
            goto LABEL_55;
          case 4u:
            char v39 = 0;
            unsigned int v40 = 0;
            uint64_t v20 = 0;
            *(unsigned char *)(a1 + 24) |= 8u;
            break;
          default:
            if ((PBReaderSkipValueWithTag() & 1) == 0) {
              goto LABEL_65;
            }
            continue;
        }
        while (1)
        {
          uint64_t v41 = *v4;
          uint64_t v42 = *(void *)&v3[v41];
          unint64_t v43 = v42 + 1;
          if (v42 == -1 || v43 > *(void *)&v3[*v5]) {
            break;
          }
          char v44 = *(unsigned char *)(*(void *)&v3[*v7] + v42);
          *(void *)&v3[v41] = v43;
          v20 |= (unint64_t)(v44 & 0x7F) << v39;
          if ((v44 & 0x80) == 0)
          {
            BOOL v26 = &OBJC_IVAR___GEOEVStepFeedbackInfo__stateOfChargeDiff;
            goto LABEL_55;
          }
          v39 += 7;
          BOOL v25 = v40++ > 8;
          if (v25)
          {
            LODWORD(v20) = 0;
            BOOL v26 = &OBJC_IVAR___GEOEVStepFeedbackInfo__stateOfChargeDiff;
            goto LABEL_57;
          }
        }
        BOOL v26 = &OBJC_IVAR___GEOEVStepFeedbackInfo__stateOfChargeDiff;
LABEL_54:
        v3[*v6] = 1;
LABEL_55:
        if (v3[*v6]) {
          LODWORD(v20) = 0;
        }
LABEL_57:
        *(_DWORD *)(a1 + *v26) = v20;
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v45 = v3[*v6] == 0;
  }
  else
  {
LABEL_65:
    BOOL v45 = 0;
  }
  objc_sync_exit(v3);

  return v45;
}

void sub_189BA04B8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOEVStepFeedbackInfoReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOEVStepFeedbackInfoReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189BA052C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOEVStepFeedbackInfoIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      if (v14 || (v8 & 7) == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_57;
          }
          unsigned int v16 = 0;
          while (1)
          {
            uint64_t v17 = *v2;
            uint64_t v18 = *(void *)&a1[v17];
            unint64_t v19 = v18 + 1;
            if (v18 == -1 || v19 > *(void *)&a1[*v3]) {
              goto LABEL_53;
            }
            int v20 = *(char *)(*(void *)&a1[*v5] + v18);
            *(void *)&a1[v17] = v19;
            if (v20 < 0)
            {
              BOOL v21 = v16++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_54;
          }
        case 2u:
          if ((v8 & 7) != 0) {
            goto LABEL_57;
          }
          unsigned int v22 = 0;
          while (1)
          {
            uint64_t v23 = *v2;
            uint64_t v24 = *(void *)&a1[v23];
            unint64_t v25 = v24 + 1;
            if (v24 == -1 || v25 > *(void *)&a1[*v3]) {
              goto LABEL_53;
            }
            int v26 = *(char *)(*(void *)&a1[*v5] + v24);
            *(void *)&a1[v23] = v25;
            if (v26 < 0)
            {
              BOOL v21 = v22++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_54;
          }
        case 3u:
          if ((v8 & 7) != 0) {
            goto LABEL_57;
          }
          unsigned int v27 = 0;
          while (1)
          {
            uint64_t v28 = *v2;
            uint64_t v29 = *(void *)&a1[v28];
            unint64_t v30 = v29 + 1;
            if (v29 == -1 || v30 > *(void *)&a1[*v3]) {
              goto LABEL_53;
            }
            int v31 = *(char *)(*(void *)&a1[*v5] + v29);
            *(void *)&a1[v28] = v30;
            if (v31 < 0)
            {
              BOOL v21 = v27++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_54;
          }
        case 4u:
          if ((v8 & 7) != 0) {
            goto LABEL_57;
          }
          unsigned int v32 = 0;
          break;
        default:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_57:
          BOOL v37 = 0;
          goto LABEL_56;
      }
      while (1)
      {
        uint64_t v33 = *v2;
        uint64_t v34 = *(void *)&a1[v33];
        unint64_t v35 = v34 + 1;
        if (v34 == -1 || v35 > *(void *)&a1[*v3]) {
          break;
        }
        int v36 = *(char *)(*(void *)&a1[*v5] + v34);
        *(void *)&a1[v33] = v35;
        if (v36 < 0)
        {
          BOOL v21 = v32++ > 8;
          if (!v21) {
            continue;
          }
        }
        goto LABEL_54;
      }
LABEL_53:
      a1[*v4] = 1;
LABEL_54:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v37 = a1[*v4] == 0;
LABEL_56:
  PBReaderRecallMark();
  return v37;
}

void sub_189BA0F54(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189BA1654(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189BA17C0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189BA192C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189BA1A98(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189BA27B4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOGuidanceEventFeedbackCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  [*(id *)(a1 + 32) readAll:1];
  [*(id *)(a1 + 40) readAll:1];
  [*(id *)(a1 + 16) readAll:1];
  BOOL v2 = *(void **)(a1 + 48);

  return [v2 readAll:1];
}

unint64_t GEOGuidanceEventFeedbackReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOGuidanceEventFeedbackReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189BA288C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOSignGuidanceFeedbackIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_39;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      if (v14 || (v8 & 7) == 4) {
        goto LABEL_39;
      }
      if ((v8 >> 3) == 2) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_41;
        }
        unsigned int v16 = 0;
        while (1)
        {
          uint64_t v17 = *v2;
          uint64_t v18 = *(void *)&a1[v17];
          unint64_t v19 = v18 + 1;
          if (v18 == -1 || v19 > *(void *)&a1[*v3]) {
            break;
          }
          int v20 = *(char *)(*(void *)&a1[*v5] + v18);
          *(void *)&a1[v17] = v19;
          if (v20 < 0)
          {
            BOOL v21 = v16++ > 8;
            if (!v21) {
              continue;
            }
          }
          goto LABEL_38;
        }
LABEL_36:
        a1[*v4] = 1;
        goto LABEL_38;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_41:
        BOOL v27 = 0;
        goto LABEL_40;
      }
LABEL_38:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_39;
      }
    }
    if ((v8 & 7) != 0) {
      goto LABEL_41;
    }
    unsigned int v22 = 0;
    while (1)
    {
      uint64_t v23 = *v2;
      uint64_t v24 = *(void *)&a1[v23];
      unint64_t v25 = v24 + 1;
      if (v24 == -1 || v25 > *(void *)&a1[*v3]) {
        goto LABEL_36;
      }
      int v26 = *(char *)(*(void *)&a1[*v5] + v24);
      *(void *)&a1[v23] = v25;
      if (v26 < 0)
      {
        BOOL v21 = v22++ > 8;
        if (!v21) {
          continue;
        }
      }
      goto LABEL_38;
    }
  }
LABEL_39:
  BOOL v27 = a1[*v4] == 0;
LABEL_40:
  PBReaderRecallMark();
  return v27;
}

BOOL GEOSpokenGuidanceFeedbackIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      unint64_t v17 = v8 >> 3;
      if ((v8 >> 3) == 3)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOTrafficCameraInformationIsValid(a1))
        {
LABEL_46:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else
      {
        if (v17 == 2)
        {
          if ((v8 & 7) != 0) {
            goto LABEL_46;
          }
          unsigned int v24 = 0;
          while (1)
          {
            uint64_t v25 = *v2;
            uint64_t v26 = *(void *)&a1[v25];
            unint64_t v27 = v26 + 1;
            if (v26 == -1 || v27 > *(void *)&a1[*v3]) {
              goto LABEL_41;
            }
            int v28 = *(char *)(*(void *)&a1[*v5] + v26);
            *(void *)&a1[v25] = v27;
            if (v28 < 0)
            {
              BOOL v23 = v24++ > 8;
              if (!v23) {
                continue;
              }
            }
            goto LABEL_43;
          }
        }
        if (v17 == 1)
        {
          if ((v8 & 7) != 0) {
            goto LABEL_46;
          }
          unsigned int v18 = 0;
          while (1)
          {
            uint64_t v19 = *v2;
            uint64_t v20 = *(void *)&a1[v19];
            unint64_t v21 = v20 + 1;
            if (v20 == -1 || v21 > *(void *)&a1[*v3]) {
              break;
            }
            int v22 = *(char *)(*(void *)&a1[*v5] + v20);
            *(void *)&a1[v19] = v21;
            if (v22 < 0)
            {
              BOOL v23 = v18++ > 8;
              if (!v23) {
                continue;
              }
            }
            goto LABEL_43;
          }
LABEL_41:
          a1[*v4] = 1;
          continue;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_46;
        }
      }
LABEL_43:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v29 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v29;
}

BOOL GEOJunctionViewGuidanceFeedbackIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      if ((v8 >> 3) == 2)
      {
        if (v15 != 2 || (PBReaderSkipValueWithTag() & 1) == 0)
        {
LABEL_37:
          BOOL v23 = 0;
          goto LABEL_36;
        }
      }
      else if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_37;
        }
        unsigned int v17 = 0;
        while (1)
        {
          uint64_t v18 = *v2;
          uint64_t v19 = *(void *)&a1[v18];
          unint64_t v20 = v19 + 1;
          if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
            break;
          }
          int v21 = *(char *)(*(void *)&a1[*v5] + v19);
          *(void *)&a1[v18] = v20;
          if (v21 < 0 && v17++ <= 8) {
            continue;
          }
          goto LABEL_34;
        }
        a1[*v4] = 1;
      }
      else if (!PBReaderSkipValueWithTag())
      {
        goto LABEL_37;
      }
LABEL_34:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v23 = a1[*v4] == 0;
LABEL_36:
  PBReaderRecallMark();
  return v23;
}

BOOL GEOTrafficCameraInformationIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      if ((v8 >> 3) == 2)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_37;
        }
        unsigned int v17 = 0;
        while (1)
        {
          uint64_t v18 = *v2;
          uint64_t v19 = *(void *)&a1[v18];
          unint64_t v20 = v19 + 1;
          if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
            break;
          }
          int v21 = *(char *)(*(void *)&a1[*v5] + v19);
          *(void *)&a1[v18] = v20;
          if (v21 < 0 && v17++ <= 8) {
            continue;
          }
          goto LABEL_34;
        }
        a1[*v4] = 1;
      }
      else if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || (PBReaderSkipValueWithTag() & 1) == 0)
        {
LABEL_37:
          BOOL v23 = 0;
          goto LABEL_36;
        }
      }
      else if (!PBReaderSkipValueWithTag())
      {
        goto LABEL_37;
      }
LABEL_34:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v23 = a1[*v4] == 0;
LABEL_36:
  PBReaderRecallMark();
  return v23;
}

void sub_189BA3458(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOGuidanceEventFeedbackIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  BOOL v2 = (*(_WORD *)(a1 + 100) & 0x3F00) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return v2;
}

void sub_189BA3A58(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOJunctionViewGuidanceFeedbackReadAllFrom(unsigned char *a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 2)
        {
          uint64_t v25 = PBReaderReadData();
          if (v25) {
            [a1 addImageID:v25];
          }
        }
        else if ((v10 >> 3) == 1)
        {
          char v18 = 0;
          unsigned int v19 = 0;
          uint64_t v20 = 0;
          a1[20] |= 1u;
          while (1)
          {
            uint64_t v21 = *v4;
            uint64_t v22 = *(void *)&v3[v21];
            unint64_t v23 = v22 + 1;
            if (v22 == -1 || v23 > *(void *)&v3[*v5]) {
              break;
            }
            char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
            *(void *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0) {
              goto LABEL_34;
            }
            v18 += 7;
            BOOL v15 = v19++ >= 9;
            if (v15)
            {
              uint64_t v20 = 0;
              goto LABEL_36;
            }
          }
          v3[*v6] = 1;
LABEL_34:
          if (v3[*v6]) {
            uint64_t v20 = 0;
          }
LABEL_36:
          a1[16] = v20 != 0;
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_39;
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v26 = v3[*v6] == 0;
  }
  else
  {
LABEL_39:
    BOOL v26 = 0;
  }
  objc_sync_exit(v3);

  return v26;
}

void sub_189BA4BC4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOJunctionViewGuidanceFeedbackReadFrom(unsigned char *a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOJunctionViewGuidanceFeedbackReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189BA4C28(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189BA543C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOMapsSearchResultReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 52);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 48)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  unsigned int v11 = ((*(unsigned __int8 *)(a1 + 60) >> 1) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 2) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v7])
    {
      case -3:
        char v8 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        int v14 = v10 | (v11 > 1);
        if ((v14 | v8)) {
          BOOL v15 = 0;
        }
        else {
          BOOL v15 = a3;
        }
        LODWORD(v16) = v14;
        unsigned int v17 = (int *)MEMORY[0x1E4F940E8];
        char v18 = (int *)MEMORY[0x1E4F940C8];
        char v54 = (v15 == 0) | v14;
        unsigned int v19 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v11;
LABEL_6:
        uint64_t v12 = v9;
        uint64_t v13 = v10;
LABEL_8:
        ++v7;
        uint64_t v9 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v17) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v18)) {
      goto LABEL_78;
    }
    char v20 = 0;
    unsigned int v21 = 0;
    unint64_t v22 = 0;
    while (1)
    {
      uint64_t v23 = *v17;
      uint64_t v24 = *(void *)(v3 + v23);
      unint64_t v25 = v24 + 1;
      if (v24 == -1 || v25 > *(void *)(v3 + *v6)) {
        break;
      }
      char v26 = *(unsigned char *)(*(void *)(v3 + *v19) + v24);
      *(void *)(v3 + v23) = v25;
      v22 |= (unint64_t)(v26 & 0x7F) << v20;
      if ((v26 & 0x80) == 0) {
        goto LABEL_23;
      }
      v20 += 7;
      BOOL v27 = v21++ >= 9;
      if (v27)
      {
        unint64_t v22 = 0;
        int v28 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_25;
      }
    }
    *(unsigned char *)(v3 + *v18) = 1;
LABEL_23:
    int v28 = *(unsigned __int8 *)(v3 + *v18);
    if (*(unsigned char *)(v3 + *v18)) {
      unint64_t v22 = 0;
    }
LABEL_25:
    if (v28 || (v22 & 7) == 4)
    {
LABEL_78:
      if (v16)
      {
        char v48 = 1;
        goto LABEL_89;
      }
      if (v15)
      {
        while (1)
        {
          int v49 = *v15++;
          char v50 = 2;
          switch(v49)
          {
            case 0:
              goto LABEL_90;
            case 2:
              goto LABEL_84;
            case 3:
              char v50 = 8;
              goto LABEL_84;
            case 4:
              char v50 = 4;
LABEL_84:
              *(unsigned char *)(a1 + 60) |= v50;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_90;
    }
    unint64_t v30 = v22 >> 3;
    BOOL v31 = (char)v16;
    if ((v54 & 1) == 0)
    {
      unsigned int v32 = v15;
      do
      {
        int v34 = *v32++;
        int v33 = v34;
        BOOL v31 = v34 != 0;
        if (v34) {
          BOOL v35 = v33 == v30;
        }
        else {
          BOOL v35 = 1;
        }
      }
      while (!v35);
    }
    switch((int)v30)
    {
      case 1:
        if ((v8 & 1) == 0) {
          goto LABEL_63;
        }
        char v36 = 0;
        unsigned int v37 = 0;
        uint64_t v38 = 0;
        *(unsigned char *)(a1 + 60) |= 1u;
        while (1)
        {
          uint64_t v39 = *v17;
          uint64_t v40 = *(void *)(v3 + v39);
          unint64_t v41 = v40 + 1;
          if (v40 == -1 || v41 > *(void *)(v3 + *v6)) {
            break;
          }
          char v42 = *(unsigned char *)(*(void *)(v3 + *v19) + v40);
          *(void *)(v3 + v39) = v41;
          v38 |= (unint64_t)(v42 & 0x7F) << v36;
          if ((v42 & 0x80) == 0) {
            goto LABEL_66;
          }
          v36 += 7;
          BOOL v27 = v37++ >= 9;
          if (v27)
          {
            uint64_t v38 = 0;
            goto LABEL_68;
          }
        }
        *(unsigned char *)(v3 + *v18) = 1;
LABEL_66:
        if (*(unsigned char *)(v3 + *v18)) {
          uint64_t v38 = 0;
        }
LABEL_68:
        *(void *)(a1 + 32) = v38;
        goto LABEL_77;
      case 2:
        if (!v31) {
          goto LABEL_63;
        }
        if ((*(unsigned char *)(a1 + 60) & 2) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_86;
          }
          char v47 = *(unsigned char *)(a1 + 60) << 6;
          goto LABEL_75;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_86;
        }
        int v53 = (int)v16;
        int v16 = objc_alloc_init(GEOAddress);
        if (!GEOAddressReadAllFrom((uint64_t)v16, (void *)v3, v9 & 1)) {
          goto LABEL_87;
        }
        PBReaderRecallMark();
        uint64_t v44 = 16;
        goto LABEL_62;
      case 3:
        if (!v31) {
          goto LABEL_63;
        }
        if ((*(unsigned char *)(a1 + 60) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_86;
          }
          char v47 = 16 * *(unsigned char *)(a1 + 60);
          goto LABEL_75;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_86;
        }
        int v53 = (int)v16;
        int v16 = objc_alloc_init(GEOPlaceActionDetails);
        if (!GEOPlaceActionDetailsReadAllFrom((uint64_t)v16, (void *)v3, v9 & 1)) {
          goto LABEL_87;
        }
        PBReaderRecallMark();
        uint64_t v44 = 40;
        goto LABEL_62;
      case 4:
        if (!v31)
        {
LABEL_63:
          char v46 = PBReaderSkipValueWithTag();
          char v18 = (int *)MEMORY[0x1E4F940C8];
          if ((v46 & 1) == 0)
          {
LABEL_85:
            char v48 = 0;
            goto LABEL_89;
          }
LABEL_77:
          if (!(v16 & 1 | (v7 != 0))) {
            goto LABEL_78;
          }
          continue;
        }
        if ((*(unsigned char *)(a1 + 60) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_86:
            char v48 = 0;
            goto LABEL_88;
          }
          char v47 = 32 * *(unsigned char *)(a1 + 60);
LABEL_75:
          v7 += v47 >> 7;
          goto LABEL_76;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_86;
        }
        int v53 = (int)v16;
        int v16 = objc_alloc_init(GEOPDMapsIdentifier);
        if (GEOPDMapsIdentifierReadAllFrom((uint64_t)v16, (void *)v3))
        {
          PBReaderRecallMark();
          uint64_t v44 = 24;
LABEL_62:
          BOOL v45 = *(void **)(a1 + v44);
          *(void *)(a1 + v44) = v16;

          --v7;
          LODWORD(v16) = v53;
LABEL_76:
          char v18 = (int *)MEMORY[0x1E4F940C8];
          goto LABEL_77;
        }
LABEL_87:

        char v48 = 0;
        LOBYTE(v16) = v53;
LABEL_88:
        char v18 = (int *)MEMORY[0x1E4F940C8];
LABEL_89:
        *(unsigned char *)(a1 + 60) |= 2u;
        *(unsigned char *)(a1 + 60) |= 8u;
        *(unsigned char *)(a1 + 60) |= 4u;
        if (v48)
        {
LABEL_90:
          unint64_t v3 = *(unsigned char *)(v3 + *v18) == 0;
          if (v16) {
            goto LABEL_91;
          }
        }
        else
        {
          unint64_t v3 = 0;
          if (v16)
          {
LABEL_91:
            int v51 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = 0;
          }
        }
        return v3;
      default:
        int v43 = PBReaderSkipValueWithTag();
        char v18 = (int *)MEMORY[0x1E4F940C8];
        if (!v43) {
          goto LABEL_85;
        }
        goto LABEL_77;
    }
  }
}

void sub_189BA5C1C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189BA62AC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOMapsSearchResultReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 52))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOMapsSearchResultReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = [v8 position];
  *(_DWORD *)(a1 + 52) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOMapsSearchResultReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOMapsSearchResultReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOMapsSearchResultReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    [*(id *)(a1 + 16) readAll:1];
    [*(id *)(a1 + 40) readAll:1];
    [*(id *)(a1 + 24) readAll:1];
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_189BA6474(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOMapsSearchResultReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOMapsSearchResultReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189BA64D8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOMapsSearchResultIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (!a1[*v4])
    {
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_46;
          }
          unsigned int v17 = 0;
          do
          {
            uint64_t v18 = *v2;
            uint64_t v19 = *(void *)&a1[v18];
            unint64_t v20 = v19 + 1;
            if (v19 == -1 || v20 > *(void *)&a1[*v3])
            {
              a1[*v4] = 1;
              goto LABEL_41;
            }
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if ((v21 & 0x80000000) == 0) {
              break;
            }
          }
          while (v17++ <= 8);
          goto LABEL_41;
        case 2u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOAddressIsValid(a1)) {
            goto LABEL_46;
          }
          goto LABEL_40;
        case 3u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPlaceActionDetailsIsValid(a1)) {
            goto LABEL_46;
          }
          goto LABEL_40;
        case 4u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDMapsIdentifierIsValid(a1)) {
            goto LABEL_46;
          }
LABEL_40:
          PBReaderRecallMark();
          goto LABEL_41;
        default:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_46:
            PBReaderRecallMark();
            return 0;
          }
LABEL_41:
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_44;
          }
          break;
      }
    }
  }
LABEL_44:
  BOOL v23 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v23;
}

BOOL GEOPlaceActionDetailsIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          uint64_t v14 = *v4;
          int v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      uint64_t v14 = *v4;
      int v15 = a1[v14];
      if (a1[v14]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v16 = v8 & 7;
      if (v15 || v16 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_90;
          }
          unsigned int v18 = 0;
          while (1)
          {
            uint64_t v19 = *v2;
            uint64_t v20 = *(void *)&a1[v19];
            unint64_t v21 = v20 + 1;
            if (v20 == -1 || v21 > *(void *)&a1[*v3]) {
              goto LABEL_71;
            }
            int v22 = *(char *)(*(void *)&a1[*v5] + v20);
            *(void *)&a1[v19] = v21;
            if (v22 < 0)
            {
              BOOL v23 = v18++ > 8;
              if (!v23) {
                continue;
              }
            }
            goto LABEL_87;
          }
        case 2u:
          if ((v8 & 7) != 0) {
            goto LABEL_90;
          }
          unsigned int v24 = 0;
          while (1)
          {
            uint64_t v25 = *v2;
            uint64_t v26 = *(void *)&a1[v25];
            unint64_t v27 = v26 + 1;
            if (v26 == -1 || v27 > *(void *)&a1[*v3]) {
              goto LABEL_71;
            }
            int v28 = *(char *)(*(void *)&a1[*v5] + v26);
            *(void *)&a1[v25] = v27;
            if (v28 < 0)
            {
              BOOL v23 = v24++ > 8;
              if (!v23) {
                continue;
              }
            }
            goto LABEL_87;
          }
        case 3u:
          if ((v8 & 7) != 0) {
            goto LABEL_90;
          }
          unsigned int v29 = 0;
          while (1)
          {
            uint64_t v30 = *v2;
            uint64_t v31 = *(void *)&a1[v30];
            unint64_t v32 = v31 + 1;
            if (v31 == -1 || v32 > *(void *)&a1[*v3]) {
              goto LABEL_71;
            }
            int v33 = *(char *)(*(void *)&a1[*v5] + v31);
            *(void *)&a1[v30] = v32;
            if (v33 < 0)
            {
              BOOL v23 = v29++ > 8;
              if (!v23) {
                continue;
              }
            }
            goto LABEL_87;
          }
        case 5u:
          if (v16 != 1) {
            goto LABEL_90;
          }
          uint64_t v34 = *v2;
          unint64_t v35 = *(void *)&a1[v34];
          if (v35 > 0xFFFFFFFFFFFFFFF7) {
            goto LABEL_72;
          }
          unint64_t v36 = v35 + 8;
          if (v36 > *(void *)&a1[*v3]) {
            goto LABEL_72;
          }
          *(void *)&a1[v34] = v36;
          continue;
        case 6u:
          if ((v8 & 7) != 0) {
            goto LABEL_90;
          }
          unsigned int v37 = 0;
          while (1)
          {
            uint64_t v38 = *v2;
            uint64_t v39 = *(void *)&a1[v38];
            unint64_t v40 = v39 + 1;
            if (v39 == -1 || v40 > *(void *)&a1[*v3]) {
              goto LABEL_71;
            }
            int v41 = *(char *)(*(void *)&a1[*v5] + v39);
            *(void *)&a1[v38] = v40;
            if (v41 < 0)
            {
              BOOL v23 = v37++ > 8;
              if (!v23) {
                continue;
              }
            }
            goto LABEL_87;
          }
        case 7u:
          if ((v8 & 7) != 0) {
            goto LABEL_90;
          }
          unsigned int v42 = 0;
          while (1)
          {
            uint64_t v43 = *v2;
            uint64_t v44 = *(void *)&a1[v43];
            unint64_t v45 = v44 + 1;
            if (v44 == -1 || v45 > *(void *)&a1[*v3]) {
              goto LABEL_71;
            }
            int v46 = *(char *)(*(void *)&a1[*v5] + v44);
            *(void *)&a1[v43] = v45;
            if (v46 < 0)
            {
              BOOL v23 = v42++ > 8;
              if (!v23) {
                continue;
              }
            }
            goto LABEL_87;
          }
        case 8u:
          if ((v8 & 7) != 0) {
            goto LABEL_90;
          }
          unsigned int v47 = 0;
          break;
        case 9u:
          if (v16 == 2) {
            goto LABEL_86;
          }
          goto LABEL_90;
        case 0xAu:
          if (v16 == 2) {
            goto LABEL_86;
          }
          goto LABEL_90;
        case 0xBu:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOTransitPlaceCardIsValid(a1)) {
            goto LABEL_90;
          }
          PBReaderRecallMark();
          continue;
        case 0xCu:
          if (v16 == 2) {
            goto LABEL_86;
          }
          goto LABEL_90;
        case 0xDu:
          if (v16 == 2) {
            goto LABEL_86;
          }
          goto LABEL_90;
        case 0xEu:
          if (v16 == 2) {
            goto LABEL_86;
          }
          goto LABEL_90;
        default:
LABEL_86:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_90:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        uint64_t v48 = *v2;
        uint64_t v49 = *(void *)&a1[v48];
        unint64_t v50 = v49 + 1;
        if (v49 == -1 || v50 > *(void *)&a1[*v3]) {
          break;
        }
        int v51 = *(char *)(*(void *)&a1[*v5] + v49);
        *(void *)&a1[v48] = v50;
        if (v51 < 0)
        {
          BOOL v23 = v47++ > 8;
          if (!v23) {
            continue;
          }
        }
        goto LABEL_87;
      }
LABEL_71:
      uint64_t v14 = *v4;
LABEL_72:
      a1[v14] = 1;
LABEL_87:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v52 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v52;
}

void sub_189BA6DF8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOMapsSearchResultIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  unsigned int v2 = *(unsigned __int8 *)(a1 + 60);
  if ((v2 & 0x10) != 0) {
    return 1;
  }
  if ((v2 & 2) != 0)
  {
    if (GEOAddressIsDirty(*(void *)(a1 + 16))) {
      return 1;
    }
    unsigned int v2 = *(unsigned __int8 *)(a1 + 60);
  }
  if ((v2 & 8) != 0)
  {
    if (GEOPlaceActionDetailsIsDirty(*(os_unfair_lock_s **)(a1 + 40))) {
      return 1;
    }
    unsigned int v2 = *(unsigned __int8 *)(a1 + 60);
  }
  return (v2 >> 2) & 1;
}

os_unfair_lock_s *GEOMapsSearchResultIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOMapsSearchResultIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 14);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_189BA720C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189BA76BC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOMapsServerMetadataReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  char v7 = 0;
  uint64_t v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  unsigned int v11 = ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1)
      + (*(unsigned char *)(a1 + 52) & 1)
      + ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v8])
    {
      case -3:
        char v7 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        char v14 = v10 | (v11 > 1);
        if (v10 & 1 | (v11 > 1) | v7 & 1) {
          int v15 = 0;
        }
        else {
          int v15 = a3;
        }
        int v16 = (int *)MEMORY[0x1E4F940E8];
        unsigned int v17 = (int *)MEMORY[0x1E4F940C8];
        unsigned int v18 = (int *)MEMORY[0x1E4F940B8];
        uint64_t v19 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__flags;
        break;
      default:
        ++v11;
LABEL_6:
        uint64_t v12 = v9;
        uint64_t v13 = v10;
LABEL_8:
        ++v8;
        uint64_t v9 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v16) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v17)) {
      goto LABEL_60;
    }
    char v20 = 0;
    unsigned int v21 = 0;
    unint64_t v22 = 0;
    while (1)
    {
      uint64_t v23 = *v16;
      uint64_t v24 = *(void *)(v3 + v23);
      unint64_t v25 = v24 + 1;
      if (v24 == -1 || v25 > *(void *)(v3 + *v6)) {
        break;
      }
      char v26 = *(unsigned char *)(*(void *)(v3 + *v18) + v24);
      *(void *)(v3 + v23) = v25;
      v22 |= (unint64_t)(v26 & 0x7F) << v20;
      if ((v26 & 0x80) == 0) {
        goto LABEL_23;
      }
      v20 += 7;
      if (v21++ >= 9)
      {
        unint64_t v22 = 0;
        int v28 = *(unsigned __int8 *)(v3 + *v17);
        goto LABEL_25;
      }
    }
    *(unsigned char *)(v3 + *v17) = 1;
LABEL_23:
    int v28 = *(unsigned __int8 *)(v3 + *v17);
    if (*(unsigned char *)(v3 + *v17)) {
      unint64_t v22 = 0;
    }
LABEL_25:
    if (v28 || (v22 & 7) == 4)
    {
LABEL_60:
      if (v14)
      {
        char v41 = 1;
        goto LABEL_72;
      }
      if (v15)
      {
        while (1)
        {
          int v43 = *v15++;
          char v42 = 4;
          switch(v43)
          {
            case 0:
              goto LABEL_73;
            case 1:
              goto LABEL_66;
            case 2:
              char v42 = 2;
              goto LABEL_66;
            case 3:
              char v42 = 1;
LABEL_66:
              *(unsigned char *)(a1 + v19[773]) |= v42;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_73;
    }
    unint64_t v30 = v22 >> 3;
    BOOL v31 = v14;
    if (!((v15 == 0) | v14 & 1))
    {
      unint64_t v32 = v15;
      do
      {
        int v34 = *v32++;
        int v33 = v34;
        BOOL v31 = v34 != 0;
        if (v34) {
          BOOL v35 = v33 == v30;
        }
        else {
          BOOL v35 = 1;
        }
      }
      while (!v35);
    }
    if (v30 == 3) {
      break;
    }
    if (v30 == 2)
    {
      if (v31 && (*(unsigned char *)(a1 + v19[773]) & 2) == 0)
      {
        PBReaderReadData();
        uint64_t v38 = (GEOMapsSearchResult *)objc_claimAutoreleasedReturnValue();
        if (v38) {
          -[GEOMapsServerMetadata _addNoFlagsSuggestionEntryMetadataDisplayed:](a1, v38);
        }
        goto LABEL_51;
      }
    }
    else
    {
      if (v30 != 1)
      {
        int v39 = PBReaderSkipValueWithTag();
        unsigned int v17 = (int *)MEMORY[0x1E4F940C8];
        if (!v39) {
          goto LABEL_68;
        }
        goto LABEL_59;
      }
      if (v31)
      {
        if ((*(unsigned char *)(a1 + v19[773]) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_69:
            char v41 = 0;
            goto LABEL_71;
          }
          v8 += *(unsigned __int8 *)(a1 + v19[773]) << 29 >> 31;
        }
        else
        {
          uint64_t v36 = PBReaderReadData();
          unsigned int v37 = *(void **)(a1 + 32);
          *(void *)(a1 + 32) = v36;

          --v8;
        }
        goto LABEL_58;
      }
    }
LABEL_54:
    char v40 = PBReaderSkipValueWithTag();
    unsigned int v17 = (int *)MEMORY[0x1E4F940C8];
    if ((v40 & 1) == 0)
    {
LABEL_68:
      char v41 = 0;
      goto LABEL_72;
    }
LABEL_59:
    if (!(v14 & 1 | (v8 != 0))) {
      goto LABEL_60;
    }
  }
  if (!v31 || (*(unsigned char *)(a1 + v19[773]) & 1) != 0) {
    goto LABEL_54;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_69;
  }
  uint64_t v38 = objc_alloc_init(GEOMapsSearchResult);
  if (GEOMapsSearchResultReadAllFrom((uint64_t)v38, (void *)v3, v9 & 1))
  {
    PBReaderRecallMark();
    -[GEOMapsServerMetadata _addNoFlagsMapsSearchResult:](a1, v38);
LABEL_51:

    uint64_t v19 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__flags;
LABEL_58:
    unsigned int v17 = (int *)MEMORY[0x1E4F940C8];
    goto LABEL_59;
  }

  char v41 = 0;
  uint64_t v19 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__flags;
LABEL_71:
  unsigned int v17 = (int *)MEMORY[0x1E4F940C8];
LABEL_72:
  *(unsigned char *)(a1 + v19[773]) |= 4u;
  *(unsigned char *)(a1 + v19[773]) |= 2u;
  *(unsigned char *)(a1 + v19[773]) |= 1u;
  if (v41)
  {
LABEL_73:
    unint64_t v3 = *(unsigned char *)(v3 + *v17) == 0;
    if ((v14 & 1) == 0) {
      return v3;
    }
    goto LABEL_74;
  }
  unint64_t v3 = 0;
  if (v14)
  {
LABEL_74:
    uint64_t v44 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_189BA7CFC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189BA80BC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189BA8C10(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOMapsServerMetadataCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v11 = *MEMORY[0x1E4F143B8];
  long long v6 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  id v1 = *(id *)(a1 + 16);
  uint64_t v2 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t v4 = *(void *)v7;
    do
    {
      uint64_t v5 = 0;
      do
      {
        if (*(void *)v7 != v4) {
          objc_enumerationMutation(v1);
        }
        objc_msgSend(*(id *)(*((void *)&v6 + 1) + 8 * v5++), "readAll:", 1, (void)v6);
      }
      while (v3 != v5);
      uint64_t v3 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
    }
    while (v3);
  }
}

unint64_t GEOMapsServerMetadataReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOMapsServerMetadataReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    long long v9 = (int *)&GEOMapsServerMetadataReadAllFrom_recursiveTag;
  }
  else {
    long long v9 = (int *)&GEOMapsServerMetadataReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOMapsServerMetadataReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOMapsServerMetadataCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_189BA8EA0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOMapsServerMetadataReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOMapsServerMetadataReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189BA8F04(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOMapsServerMetadataIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  uint64_t v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      unint64_t v17 = v8 >> 3;
      if ((v8 >> 3) == 3)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOMapsSearchResultIsValid(a1))
        {
LABEL_31:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else
      {
        if (v17 == 2)
        {
          if (v15 != 2) {
            goto LABEL_31;
          }
        }
        else if (v17 == 1 && v15 != 2)
        {
          goto LABEL_31;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_31;
        }
      }
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v18 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v18;
}

void sub_189BA93C4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOMapsServerMetadataIsDirty(uint64_t a1)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  if ((*(unsigned char *)(a1 + 52) & 0xF) != 0) {
    return 1;
  }
  if ((*(unsigned char *)(a1 + 52) & 1) == 0) {
    return 0;
  }
  long long v9 = 0u;
  long long v10 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  id v3 = *(id *)(a1 + 16);
  uint64_t v2 = [v3 countByEnumeratingWithState:&v7 objects:v11 count:16];
  if (v2)
  {
    uint64_t v4 = *(void *)v8;
    while (2)
    {
      for (uint64_t i = 0; i != v2; ++i)
      {
        if (*(void *)v8 != v4) {
          objc_enumerationMutation(v3);
        }
        if (GEOMapsSearchResultIsDirty(*(os_unfair_lock_s **)(*((void *)&v7 + 1) + 8 * i)))
        {
          uint64_t v2 = 1;
          goto LABEL_15;
        }
      }
      uint64_t v2 = [v3 countByEnumeratingWithState:&v7 objects:v11 count:16];
      if (v2) {
        continue;
      }
      break;
    }
  }
LABEL_15:

  return v2;
}

os_unfair_lock_s *GEOMapsServerMetadataIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOMapsServerMetadataIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 12);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_189BA9AD4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOModalityReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      long long v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        switch((v10 >> 3))
        {
          case 1u:
            *(unsigned char *)(a1 + 24) |= 1u;
            uint64_t v18 = *v4;
            unint64_t v19 = *(void *)&v3[v18];
            if (v19 <= 0xFFFFFFFFFFFFFFF7 && v19 + 8 <= *(void *)&v3[*v5])
            {
              uint64_t v20 = *(void *)(*(void *)&v3[*v7] + v19);
              *(void *)&v3[v18] = v19 + 8;
            }
            else
            {
              v3[*v6] = 1;
              uint64_t v20 = 0;
            }
            *(void *)(a1 + 8) = v20;
            continue;
          case 2u:
            char v21 = 0;
            unsigned int v22 = 0;
            uint64_t v23 = 0;
            *(unsigned char *)(a1 + 24) |= 4u;
            while (1)
            {
              uint64_t v24 = *v4;
              uint64_t v25 = *(void *)&v3[v24];
              unint64_t v26 = v25 + 1;
              if (v25 == -1 || v26 > *(void *)&v3[*v5]) {
                break;
              }
              char v27 = *(unsigned char *)(*(void *)&v3[*v7] + v25);
              *(void *)&v3[v24] = v26;
              v23 |= (unint64_t)(v27 & 0x7F) << v21;
              if ((v27 & 0x80) == 0) {
                goto LABEL_47;
              }
              v21 += 7;
              BOOL v15 = v22++ >= 9;
              if (v15)
              {
                uint64_t v23 = 0;
                goto LABEL_49;
              }
            }
            v3[*v6] = 1;
LABEL_47:
            if (v3[*v6]) {
              uint64_t v23 = 0;
            }
LABEL_49:
            BOOL v42 = v23 != 0;
            uint64_t v43 = 20;
            goto LABEL_54;
          case 3u:
            char v28 = 0;
            unsigned int v29 = 0;
            uint64_t v30 = 0;
            *(unsigned char *)(a1 + 24) |= 8u;
            while (2)
            {
              uint64_t v31 = *v4;
              uint64_t v32 = *(void *)&v3[v31];
              unint64_t v33 = v32 + 1;
              if (v32 == -1 || v33 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v34 = *(unsigned char *)(*(void *)&v3[*v7] + v32);
                *(void *)&v3[v31] = v33;
                v30 |= (unint64_t)(v34 & 0x7F) << v28;
                if (v34 < 0)
                {
                  v28 += 7;
                  BOOL v15 = v29++ >= 9;
                  if (v15)
                  {
                    uint64_t v30 = 0;
                    goto LABEL_53;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              uint64_t v30 = 0;
            }
LABEL_53:
            BOOL v42 = v30 != 0;
            uint64_t v43 = 21;
LABEL_54:
            *(unsigned char *)(a1 + v43) = v42;
            continue;
          case 4u:
            char v35 = 0;
            unsigned int v36 = 0;
            uint64_t v37 = 0;
            *(unsigned char *)(a1 + 24) |= 2u;
            break;
          default:
            if (!PBReaderSkipValueWithTag()) {
              goto LABEL_63;
            }
            continue;
        }
        while (1)
        {
          uint64_t v38 = *v4;
          uint64_t v39 = *(void *)&v3[v38];
          unint64_t v40 = v39 + 1;
          if (v39 == -1 || v40 > *(void *)&v3[*v5]) {
            break;
          }
          char v41 = *(unsigned char *)(*(void *)&v3[*v7] + v39);
          *(void *)&v3[v38] = v40;
          v37 |= (unint64_t)(v41 & 0x7F) << v35;
          if ((v41 & 0x80) == 0) {
            goto LABEL_56;
          }
          v35 += 7;
          BOOL v15 = v36++ >= 9;
          if (v15)
          {
            LODWORD(v37) = 0;
            goto LABEL_58;
          }
        }
        v3[*v6] = 1;
LABEL_56:
        if (v3[*v6]) {
          LODWORD(v37) = 0;
        }
LABEL_58:
        *(_DWORD *)(a1 + 16) = v37;
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v44 = v3[*v6] == 0;
  }
  else
  {
LABEL_63:
    BOOL v44 = 0;
  }
  objc_sync_exit(v3);

  return v44;
}

void sub_189BAA9E4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOModalityReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOModalityReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189BAAA58(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id GEONavigationAudioFeedbackDescription(unsigned __int8 *a1)
{
  uint64_t v2 = NSString;
  id v3 = _GEONavigationAudioFeedbackDictionaryRepresentation(a1, 0);
  uint64_t v4 = [v2 stringWithFormat:@"GEONavigationAudioFeedback<%p> %@", a1, v3];

  return v4;
}

id GEONavigationAudioFeedbackDictionaryRepresentation(unsigned __int8 *a1)
{
  return _GEONavigationAudioFeedbackDictionaryRepresentation(a1, 0);
}

id _GEONavigationAudioFeedbackDictionaryRepresentation(unsigned __int8 *a1, int a2)
{
  uint64_t v4 = [MEMORY[0x1E4F1CA60] dictionary];
  int v5 = *((_DWORD *)a1 + 10);
  if (v5)
  {
    char v8 = [NSNumber numberWithBool:*a1];
    if (a2) {
      unsigned int v9 = @"bTHFPAvailableAtEndOfNav";
    }
    else {
      unsigned int v9 = @"BTHFPAvailableAtEndOfNav";
    }
    [v4 setObject:v8 forKey:v9];

    int v5 = *((_DWORD *)a1 + 10);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_31;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }
  unint64_t v10 = [NSNumber numberWithBool:a1[1]];
  if (a2) {
    uint64_t v11 = @"bTHFPRoutesAvailable";
  }
  else {
    uint64_t v11 = @"BTHFPRoutesAvailable";
  }
  [v4 setObject:v10 forKey:v11];

  int v5 = *((_DWORD *)a1 + 10);
  if ((v5 & 4) == 0)
  {
LABEL_4:
    if ((v5 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_32;
  }
LABEL_31:
  uint64_t v12 = [NSNumber numberWithBool:a1[2]];
  [v4 setObject:v12 forKey:@"currentRouteHFPEnabledAtEndOfNav"];

  int v5 = *((_DWORD *)a1 + 10);
  if ((v5 & 8) == 0)
  {
LABEL_5:
    if ((v5 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_36;
  }
LABEL_32:
  unsigned int v13 = *((_DWORD *)a1 + 1) - 1;
  if (v13 >= 3)
  {
    objc_msgSend(NSString, "stringWithFormat:", @"(unknown: %i)", *((unsigned int *)a1 + 1));
    char v14 = (__CFString *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    char v14 = off_1E53E4AB8[v13];
  }
  [v4 setObject:v14 forKey:@"currentRouteTypeAtEndOfNav"];

  int v5 = *((_DWORD *)a1 + 10);
  if ((v5 & 0x10) == 0)
  {
LABEL_6:
    if ((v5 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_37;
  }
LABEL_36:
  BOOL v15 = [NSNumber numberWithBool:a1[8]];
  [v4 setObject:v15 forKey:@"everManuallyChangedRoute"];

  int v5 = *((_DWORD *)a1 + 10);
  if ((v5 & 0x20) == 0)
  {
LABEL_7:
    if ((v5 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_38;
  }
LABEL_37:
  int v16 = [NSNumber numberWithBool:a1[9]];
  [v4 setObject:v16 forKey:@"everManuallyEnabledHFPRoute"];

  int v5 = *((_DWORD *)a1 + 10);
  if ((v5 & 0x40) == 0)
  {
LABEL_8:
    if ((v5 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_39;
  }
LABEL_38:
  unint64_t v17 = [NSNumber numberWithBool:a1[10]];
  [v4 setObject:v17 forKey:@"everViewedAudioSheet"];

  int v5 = *((_DWORD *)a1 + 10);
  if ((v5 & 0x80) == 0)
  {
LABEL_9:
    if ((v5 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_40;
  }
LABEL_39:
  uint64_t v18 = [NSNumber numberWithBool:a1[11]];
  [v4 setObject:v18 forKey:@"everViewedAudioSheetBTAny"];

  int v5 = *((_DWORD *)a1 + 10);
  if ((v5 & 0x100) == 0)
  {
LABEL_10:
    if ((v5 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_41;
  }
LABEL_40:
  unint64_t v19 = [NSNumber numberWithBool:a1[12]];
  [v4 setObject:v19 forKey:@"everViewedAudioSheetBTHFP"];

  int v5 = *((_DWORD *)a1 + 10);
  if ((v5 & 0x200) == 0)
  {
LABEL_11:
    if ((v5 & 0x400) == 0) {
      goto LABEL_12;
    }
    goto LABEL_42;
  }
LABEL_41:
  uint64_t v20 = [NSNumber numberWithUnsignedInt:*((unsigned int *)a1 + 4)];
  [v4 setObject:v20 forKey:@"manuallyChangedRouteCount"];

  int v5 = *((_DWORD *)a1 + 10);
  if ((v5 & 0x400) == 0)
  {
LABEL_12:
    if ((v5 & 0x800) == 0) {
      goto LABEL_13;
    }
    goto LABEL_43;
  }
LABEL_42:
  char v21 = [NSNumber numberWithUnsignedInt:*((unsigned int *)a1 + 5)];
  [v4 setObject:v21 forKey:@"manuallyDisabledHFPCount"];

  int v5 = *((_DWORD *)a1 + 10);
  if ((v5 & 0x800) == 0)
  {
LABEL_13:
    if ((v5 & 0x1000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_44;
  }
LABEL_43:
  unsigned int v22 = [NSNumber numberWithUnsignedInt:*((unsigned int *)a1 + 6)];
  [v4 setObject:v22 forKey:@"manuallyEnabledHFPCount"];

  int v5 = *((_DWORD *)a1 + 10);
  if ((v5 & 0x1000) == 0)
  {
LABEL_14:
    if ((v5 & 0x2000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_45;
  }
LABEL_44:
  uint64_t v23 = [NSNumber numberWithBool:a1[28]];
  [v4 setObject:v23 forKey:@"pauseSpokenAudioEnabled"];

  int v5 = *((_DWORD *)a1 + 10);
  if ((v5 & 0x2000) == 0)
  {
LABEL_15:
    if ((v5 & 0x4000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_46;
  }
LABEL_45:
  uint64_t v24 = [NSNumber numberWithUnsignedInt:*((unsigned int *)a1 + 8)];
  [v4 setObject:v24 forKey:@"spokenPromptsCount"];

  int v5 = *((_DWORD *)a1 + 10);
  if ((v5 & 0x4000) == 0)
  {
LABEL_16:
    if ((v5 & 0x8000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_47;
  }
LABEL_46:
  uint64_t v25 = [NSNumber numberWithBool:a1[36]];
  [v4 setObject:v25 forKey:@"viewedAudioSheet"];

  int v5 = *((_DWORD *)a1 + 10);
  if ((v5 & 0x8000) == 0)
  {
LABEL_17:
    if ((v5 & 0x10000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_48;
  }
LABEL_47:
  unint64_t v26 = [NSNumber numberWithBool:a1[37]];
  [v4 setObject:v26 forKey:@"viewedAudioSheetBTAny"];

  int v5 = *((_DWORD *)a1 + 10);
  if ((v5 & 0x10000) == 0)
  {
LABEL_18:
    if ((v5 & 0x20000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_19;
  }
LABEL_48:
  char v27 = [NSNumber numberWithBool:a1[38]];
  [v4 setObject:v27 forKey:@"viewedAudioSheetBTHFP"];

  if ((*((_DWORD *)a1 + 10) & 0x20000) != 0)
  {
LABEL_19:
    char v6 = [NSNumber numberWithBool:a1[39]];
    [v4 setObject:v6 forKey:@"wirelessRoutesAvailable"];
  }
LABEL_20:

  return v4;
}

id GEONavigationAudioFeedbackJSONRepresentation(unsigned __int8 *a1)
{
  return _GEONavigationAudioFeedbackDictionaryRepresentation(a1, 1);
}

void GEONavigationAudioFeedbackFromDictionaryRepresentation(void *a1, uint64_t a2)
{
}

void _GEONavigationAudioFeedbackFromDictionaryRepresentation(void *a1, uint64_t a2, int a3)
{
  id v27 = a1;
  int v5 = [v27 objectForKeyedSubscript:@"everViewedAudioSheet"];
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    *(_DWORD *)(a2 + 40) |= 0x40u;
    *(unsigned char *)(a2 + 10) = [v5 BOOLValue];
  }

  char v6 = [v27 objectForKeyedSubscript:@"everViewedAudioSheetBTAny"];
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    *(_DWORD *)(a2 + 40) |= 0x80u;
    *(unsigned char *)(a2 + 11) = [v6 BOOLValue];
  }

  long long v7 = [v27 objectForKeyedSubscript:@"everViewedAudioSheetBTHFP"];
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    *(_DWORD *)(a2 + 40) |= 0x100u;
    *(unsigned char *)(a2 + 12) = [v7 BOOLValue];
  }

  char v8 = [v27 objectForKeyedSubscript:@"everManuallyChangedRoute"];
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    *(_DWORD *)(a2 + 40) |= 0x10u;
    *(unsigned char *)(a2 + 8) = [v8 BOOLValue];
  }

  unsigned int v9 = [v27 objectForKeyedSubscript:@"everManuallyEnabledHFPRoute"];
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    *(_DWORD *)(a2 + 40) |= 0x20u;
    *(unsigned char *)(a2 + 9) = [v9 BOOLValue];
  }

  unint64_t v10 = [v27 objectForKeyedSubscript:@"spokenPromptsCount"];
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    *(_DWORD *)(a2 + 40) |= 0x2000u;
    *(_DWORD *)(a2 + 32) = [v10 unsignedIntValue];
  }

  uint64_t v11 = [v27 objectForKeyedSubscript:@"wirelessRoutesAvailable"];
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    *(_DWORD *)(a2 + 40) |= 0x20000u;
    *(unsigned char *)(a2 + 39) = [v11 BOOLValue];
  }

  if (a3) {
    uint64_t v12 = @"bTHFPRoutesAvailable";
  }
  else {
    uint64_t v12 = @"BTHFPRoutesAvailable";
  }
  unsigned int v13 = [v27 objectForKeyedSubscript:v12];
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    *(_DWORD *)(a2 + 40) |= 2u;
    *(unsigned char *)(a2 + 1) = [v13 BOOLValue];
  }

  char v14 = [v27 objectForKeyedSubscript:@"viewedAudioSheet"];
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    *(_DWORD *)(a2 + 40) |= 0x4000u;
    *(unsigned char *)(a2 + 36) = [v14 BOOLValue];
  }

  BOOL v15 = [v27 objectForKeyedSubscript:@"viewedAudioSheetBTAny"];
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    *(_DWORD *)(a2 + 40) |= 0x8000u;
    *(unsigned char *)(a2 + 37) = [v15 BOOLValue];
  }

  int v16 = [v27 objectForKeyedSubscript:@"viewedAudioSheetBTHFP"];
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    *(_DWORD *)(a2 + 40) |= 0x10000u;
    *(unsigned char *)(a2 + 38) = [v16 BOOLValue];
  }

  unint64_t v17 = [v27 objectForKeyedSubscript:@"manuallyChangedRouteCount"];
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    *(_DWORD *)(a2 + 40) |= 0x200u;
    *(_DWORD *)(a2 + 16) = [v17 unsignedIntValue];
  }

  uint64_t v18 = [v27 objectForKeyedSubscript:@"manuallyEnabledHFPCount"];
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    *(_DWORD *)(a2 + 40) |= 0x800u;
    *(_DWORD *)(a2 + 24) = [v18 unsignedIntValue];
  }

  unint64_t v19 = [v27 objectForKeyedSubscript:@"manuallyDisabledHFPCount"];
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    *(_DWORD *)(a2 + 40) |= 0x400u;
    *(_DWORD *)(a2 + 20) = [v19 unsignedIntValue];
  }

  if (a3) {
    uint64_t v20 = @"bTHFPAvailableAtEndOfNav";
  }
  else {
    uint64_t v20 = @"BTHFPAvailableAtEndOfNav";
  }
  char v21 = [v27 objectForKeyedSubscript:v20];
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    *(_DWORD *)(a2 + 40) |= 1u;
    *(unsigned char *)a2 = [v21 BOOLValue];
  }

  unsigned int v22 = [v27 objectForKeyedSubscript:@"currentRouteTypeAtEndOfNav"];
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    *(_DWORD *)(a2 + 40) |= 8u;
    id v23 = v22;
    if ([v23 isEqualToString:@"AUDIO_DEVICE_TYPE_BT_HFP_ONLY"])
    {
      int v24 = 1;
    }
    else if ([v23 isEqualToString:@"AUDIO_DEVICE_TYPE_BT_COMBO"])
    {
      int v24 = 2;
    }
    else if ([v23 isEqualToString:@"AUDIO_DEVICE_TYPE_OTHER"])
    {
      int v24 = 3;
    }
    else
    {
      int v24 = 1;
    }
  }
  else
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) == 0) {
      goto LABEL_49;
    }
    int v24 = [v22 intValue];
  }
  *(_DWORD *)(a2 + 4) = v24;
LABEL_49:

  uint64_t v25 = [v27 objectForKeyedSubscript:@"currentRouteHFPEnabledAtEndOfNav"];
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    *(_DWORD *)(a2 + 40) |= 4u;
    *(unsigned char *)(a2 + 2) = [v25 BOOLValue];
  }

  unint64_t v26 = [v27 objectForKeyedSubscript:@"pauseSpokenAudioEnabled"];
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    *(_DWORD *)(a2 + 40) |= 0x1000u;
    *(unsigned char *)(a2 + 28) = [v26 BOOLValue];
  }
}

void GEONavigationAudioFeedbackFromJSONRepresentation(void *a1, uint64_t a2)
{
}

uint64_t GEONavigationAudioFeedbackReadFrom(uint64_t a1, uint64_t a2)
{
  return GEONavigationAudioFeedbackReadAllFrom(a1, a2);
}

uint64_t GEONavigationAudioFeedbackWriteTo(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 40);
  if ((v2 & 0x40) != 0)
  {
    uint64_t result = PBDataWriterWriteBOOLField();
    int v2 = *(_DWORD *)(v1 + 40);
    if ((v2 & 0x80) == 0)
    {
LABEL_3:
      if ((v2 & 0x100) == 0) {
        goto LABEL_4;
      }
      goto LABEL_22;
    }
  }
  else if ((v2 & 0x80) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PBDataWriterWriteBOOLField();
  int v2 = *(_DWORD *)(v1 + 40);
  if ((v2 & 0x100) == 0)
  {
LABEL_4:
    if ((v2 & 0x10) == 0) {
      goto LABEL_5;
    }
    goto LABEL_23;
  }
LABEL_22:
  uint64_t result = PBDataWriterWriteBOOLField();
  int v2 = *(_DWORD *)(v1 + 40);
  if ((v2 & 0x10) == 0)
  {
LABEL_5:
    if ((v2 & 0x20) == 0) {
      goto LABEL_6;
    }
    goto LABEL_24;
  }
LABEL_23:
  uint64_t result = PBDataWriterWriteBOOLField();
  int v2 = *(_DWORD *)(v1 + 40);
  if ((v2 & 0x20) == 0)
  {
LABEL_6:
    if ((v2 & 0x2000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_25;
  }
LABEL_24:
  uint64_t result = PBDataWriterWriteBOOLField();
  int v2 = *(_DWORD *)(v1 + 40);
  if ((v2 & 0x2000) == 0)
  {
LABEL_7:
    if ((v2 & 0x20000) == 0) {
      goto LABEL_8;
    }
    goto LABEL_26;
  }
LABEL_25:
  uint64_t result = PBDataWriterWriteUint32Field();
  int v2 = *(_DWORD *)(v1 + 40);
  if ((v2 & 0x20000) == 0)
  {
LABEL_8:
    if ((v2 & 2) == 0) {
      goto LABEL_9;
    }
    goto LABEL_27;
  }
LABEL_26:
  uint64_t result = PBDataWriterWriteBOOLField();
  int v2 = *(_DWORD *)(v1 + 40);
  if ((v2 & 2) == 0)
  {
LABEL_9:
    if ((v2 & 0x4000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_28;
  }
LABEL_27:
  uint64_t result = PBDataWriterWriteBOOLField();
  int v2 = *(_DWORD *)(v1 + 40);
  if ((v2 & 0x4000) == 0)
  {
LABEL_10:
    if ((v2 & 0x8000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_29;
  }
LABEL_28:
  uint64_t result = PBDataWriterWriteBOOLField();
  int v2 = *(_DWORD *)(v1 + 40);
  if ((v2 & 0x8000) == 0)
  {
LABEL_11:
    if ((v2 & 0x10000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_30;
  }
LABEL_29:
  uint64_t result = PBDataWriterWriteBOOLField();
  int v2 = *(_DWORD *)(v1 + 40);
  if ((v2 & 0x10000) == 0)
  {
LABEL_12:
    if ((v2 & 0x200) == 0) {
      goto LABEL_13;
    }
    goto LABEL_31;
  }
LABEL_30:
  uint64_t result = PBDataWriterWriteBOOLField();
  int v2 = *(_DWORD *)(v1 + 40);
  if ((v2 & 0x200) == 0)
  {
LABEL_13:
    if ((v2 & 0x800) == 0) {
      goto LABEL_14;
    }
    goto LABEL_32;
  }
LABEL_31:
  uint64_t result = PBDataWriterWriteUint32Field();
  int v2 = *(_DWORD *)(v1 + 40);
  if ((v2 & 0x800) == 0)
  {
LABEL_14:
    if ((v2 & 0x400) == 0) {
      goto LABEL_15;
    }
    goto LABEL_33;
  }
LABEL_32:
  uint64_t result = PBDataWriterWriteUint32Field();
  int v2 = *(_DWORD *)(v1 + 40);
  if ((v2 & 0x400) == 0)
  {
LABEL_15:
    if ((v2 & 1) == 0) {
      goto LABEL_16;
    }
    goto LABEL_34;
  }
LABEL_33:
  uint64_t result = PBDataWriterWriteUint32Field();
  int v2 = *(_DWORD *)(v1 + 40);
  if ((v2 & 1) == 0)
  {
LABEL_16:
    if ((v2 & 8) == 0) {
      goto LABEL_17;
    }
    goto LABEL_35;
  }
LABEL_34:
  uint64_t result = PBDataWriterWriteBOOLField();
  int v2 = *(_DWORD *)(v1 + 40);
  if ((v2 & 8) == 0)
  {
LABEL_17:
    if ((v2 & 4) == 0) {
      goto LABEL_18;
    }
LABEL_36:
    uint64_t result = PBDataWriterWriteBOOLField();
    if ((*(_DWORD *)(v1 + 40) & 0x1000) == 0) {
      return result;
    }
    goto LABEL_37;
  }
LABEL_35:
  uint64_t result = PBDataWriterWriteInt32Field();
  int v2 = *(_DWORD *)(v1 + 40);
  if ((v2 & 4) != 0) {
    goto LABEL_36;
  }
LABEL_18:
  if ((v2 & 0x1000) == 0) {
    return result;
  }
LABEL_37:

  return PBDataWriterWriteBOOLField();
}

BOOL GEONavigationAudioFeedbackEquals(const void *a1, const void *a2)
{
  return memcmp(a1, a2, 0x2CuLL) == 0;
}

uint64_t GEONavigationAudioFeedbackHash()
{
  return PBHashBytes();
}

uint64_t GEONavigationAudioFeedbackIsValid(void *a1)
{
  uint64_t v5 = [a1 position];
  uint64_t v6 = [a1 length];
  memset(v4, 0, 44);
  uint64_t AllFrom = GEONavigationAudioFeedbackReadAllFrom((uint64_t)v4, (uint64_t)a1);
  PBReaderRecallMark();
  return AllFrom;
}

void sub_189BAC42C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPlaceActionDetailsReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 112));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 108);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 104)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  unsigned int v11 = (unsigned __int16)(vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int16 *)(a1 + 124)), (uint16x4_t)0xFFF6FFF4FFF7FFF9), (int8x8_t)0x1000100010001))+ (HIBYTE(*(_WORD *)(a1 + 124)) & 1)+ ((*(_WORD *)(a1 + 124) >> 11) & 1));
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v7])
    {
      case -3:
        char v8 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        BOOL v14 = v11 > 3;
        char v15 = v10 | v14;
        if (((v10 | v14) | v8)) {
          int v16 = 0;
        }
        else {
          int v16 = a3;
        }
        unint64_t v17 = (int *)MEMORY[0x1E4F940E8];
        uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
        char v92 = (v16 == 0) | v15;
        unint64_t v19 = (int *)MEMORY[0x1E4F940B8];
        char v91 = v10 | v14;
        break;
      default:
        ++v11;
LABEL_6:
        uint64_t v12 = v9;
        uint64_t v13 = v10;
LABEL_8:
        ++v7;
        uint64_t v9 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v17) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v18)) {
      goto LABEL_159;
    }
    char v20 = 0;
    unsigned int v21 = 0;
    unint64_t v22 = 0;
    while (1)
    {
      uint64_t v23 = *v17;
      uint64_t v24 = *(void *)(v3 + v23);
      unint64_t v25 = v24 + 1;
      if (v24 == -1 || v25 > *(void *)(v3 + *v6)) {
        break;
      }
      char v26 = *(unsigned char *)(*(void *)(v3 + *v19) + v24);
      *(void *)(v3 + v23) = v25;
      v22 |= (unint64_t)(v26 & 0x7F) << v20;
      if ((v26 & 0x80) == 0) {
        goto LABEL_23;
      }
      v20 += 7;
      BOOL v27 = v21++ >= 9;
      if (v27)
      {
        unint64_t v22 = 0;
        int v28 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_25;
      }
    }
    *(unsigned char *)(v3 + *v18) = 1;
LABEL_23:
    int v28 = *(unsigned __int8 *)(v3 + *v18);
    if (*(unsigned char *)(v3 + *v18)) {
      unint64_t v22 = 0;
    }
LABEL_25:
    if (v28 || (v22 & 7) == 4)
    {
LABEL_159:
      if (v15)
      {
        char v85 = 1;
        goto LABEL_161;
      }
      if (v16)
      {
        while (1)
        {
          int v86 = *v16++;
          __int16 v87 = 512;
          switch(v86)
          {
            case 0:
              goto LABEL_172;
            case 9:
              goto LABEL_171;
            case 10:
              __int16 v87 = 128;
              goto LABEL_171;
            case 11:
              __int16 v87 = 4096;
              goto LABEL_171;
            case 12:
              __int16 v87 = 1024;
              goto LABEL_171;
            case 13:
              __int16 v87 = 256;
              goto LABEL_171;
            case 14:
              __int16 v87 = 2048;
LABEL_171:
              *(_WORD *)(a1 + 124) |= v87;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_172;
    }
    unint64_t v30 = v22 >> 3;
    BOOL v31 = v15;
    if ((v92 & 1) == 0)
    {
      uint64_t v32 = v16;
      do
      {
        int v34 = *v32++;
        int v33 = v34;
        BOOL v31 = v34 != 0;
        if (v34) {
          BOOL v35 = v33 == v30;
        }
        else {
          BOOL v35 = 1;
        }
      }
      while (!v35);
    }
    switch((int)v30)
    {
      case 1:
        if ((v8 & 1) == 0) {
          goto LABEL_113;
        }
        char v36 = 0;
        unsigned int v37 = 0;
        uint64_t v38 = 0;
        *(_WORD *)(a1 + 124) |= 2u;
        while (1)
        {
          uint64_t v39 = *v17;
          uint64_t v40 = *(void *)(v3 + v39);
          unint64_t v41 = v40 + 1;
          if (v40 == -1 || v41 > *(void *)(v3 + *v6)) {
            break;
          }
          char v42 = *(unsigned char *)(*(void *)(v3 + *v19) + v40);
          *(void *)(v3 + v39) = v41;
          v38 |= (unint64_t)(v42 & 0x7F) << v36;
          if ((v42 & 0x80) == 0) {
            goto LABEL_116;
          }
          v36 += 7;
          BOOL v27 = v37++ >= 9;
          if (v27)
          {
            uint64_t v38 = 0;
            goto LABEL_118;
          }
        }
        *(unsigned char *)(v3 + *v18) = 1;
LABEL_116:
        if (*(unsigned char *)(v3 + *v18)) {
          uint64_t v38 = 0;
        }
LABEL_118:
        uint64_t v82 = 32;
        goto LABEL_140;
      case 2:
        if ((v8 & 1) == 0) {
          goto LABEL_113;
        }
        char v43 = 0;
        unsigned int v44 = 0;
        uint64_t v38 = 0;
        *(_WORD *)(a1 + 124) |= 4u;
        while (2)
        {
          uint64_t v45 = *v17;
          uint64_t v46 = *(void *)(v3 + v45);
          unint64_t v47 = v46 + 1;
          if (v46 == -1 || v47 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v48 = *(unsigned char *)(*(void *)(v3 + *v19) + v46);
            *(void *)(v3 + v45) = v47;
            v38 |= (unint64_t)(v48 & 0x7F) << v43;
            if (v48 < 0)
            {
              v43 += 7;
              BOOL v27 = v44++ >= 9;
              if (v27)
              {
                uint64_t v38 = 0;
                goto LABEL_122;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          uint64_t v38 = 0;
        }
LABEL_122:
        uint64_t v82 = 56;
        goto LABEL_140;
      case 3:
        if ((v8 & 1) == 0) {
          goto LABEL_113;
        }
        char v49 = 0;
        unsigned int v50 = 0;
        uint64_t v51 = 0;
        *(_WORD *)(a1 + 124) |= 0x20u;
        while (2)
        {
          uint64_t v52 = *v17;
          uint64_t v53 = *(void *)(v3 + v52);
          unint64_t v54 = v53 + 1;
          if (v53 == -1 || v54 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v55 = *(unsigned char *)(*(void *)(v3 + *v19) + v53);
            *(void *)(v3 + v52) = v54;
            v51 |= (unint64_t)(v55 & 0x7F) << v49;
            if (v55 < 0)
            {
              v49 += 7;
              BOOL v27 = v50++ >= 9;
              if (v27)
              {
                LODWORD(v51) = 0;
                goto LABEL_126;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          LODWORD(v51) = 0;
        }
LABEL_126:
        uint64_t v83 = 116;
        goto LABEL_131;
      case 5:
        if ((v8 & 1) == 0) {
          goto LABEL_113;
        }
        *(_WORD *)(a1 + 124) |= 8u;
        uint64_t v57 = *v17;
        unint64_t v58 = *(void *)(v3 + v57);
        if (v58 <= 0xFFFFFFFFFFFFFFF7 && v58 + 8 <= *(void *)(v3 + *v6))
        {
          uint64_t v59 = *(void *)(*(void *)(v3 + *v19) + v58);
          *(void *)(v3 + v57) = v58 + 8;
        }
        else
        {
          *(unsigned char *)(v3 + *v18) = 1;
          uint64_t v59 = 0;
        }
        *(void *)(a1 + 72) = v59;
        goto LABEL_155;
      case 6:
        if ((v8 & 1) == 0) {
          goto LABEL_113;
        }
        char v60 = 0;
        unsigned int v61 = 0;
        uint64_t v51 = 0;
        *(_WORD *)(a1 + 124) |= 0x40u;
        while (2)
        {
          uint64_t v62 = *v17;
          uint64_t v63 = *(void *)(v3 + v62);
          unint64_t v64 = v63 + 1;
          if (v63 == -1 || v64 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v65 = *(unsigned char *)(*(void *)(v3 + *v19) + v63);
            *(void *)(v3 + v62) = v64;
            v51 |= (unint64_t)(v65 & 0x7F) << v60;
            if (v65 < 0)
            {
              v60 += 7;
              BOOL v27 = v61++ >= 9;
              if (v27)
              {
                LODWORD(v51) = 0;
                goto LABEL_130;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          LODWORD(v51) = 0;
        }
LABEL_130:
        uint64_t v83 = 120;
LABEL_131:
        *(_DWORD *)(a1 + v83) = v51;
        goto LABEL_155;
      case 7:
        if ((v8 & 1) == 0) {
          goto LABEL_113;
        }
        char v66 = 0;
        unsigned int v67 = 0;
        uint64_t v38 = 0;
        *(_WORD *)(a1 + 124) |= 1u;
        while (2)
        {
          uint64_t v68 = *v17;
          uint64_t v69 = *(void *)(v3 + v68);
          unint64_t v70 = v69 + 1;
          if (v69 == -1 || v70 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v71 = *(unsigned char *)(*(void *)(v3 + *v19) + v69);
            *(void *)(v3 + v68) = v70;
            v38 |= (unint64_t)(v71 & 0x7F) << v66;
            if (v71 < 0)
            {
              v66 += 7;
              BOOL v27 = v67++ >= 9;
              if (v27)
              {
                uint64_t v38 = 0;
                goto LABEL_135;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          uint64_t v38 = 0;
        }
LABEL_135:
        uint64_t v82 = 24;
        goto LABEL_140;
      case 8:
        if ((v8 & 1) == 0) {
          goto LABEL_113;
        }
        char v72 = 0;
        unsigned int v73 = 0;
        uint64_t v38 = 0;
        *(_WORD *)(a1 + 124) |= 0x10u;
        while (2)
        {
          uint64_t v74 = *v17;
          uint64_t v75 = *(void *)(v3 + v74);
          unint64_t v76 = v75 + 1;
          if (v75 == -1 || v76 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v77 = *(unsigned char *)(*(void *)(v3 + *v19) + v75);
            *(void *)(v3 + v74) = v76;
            v38 |= (unint64_t)(v77 & 0x7F) << v72;
            if (v77 < 0)
            {
              v72 += 7;
              BOOL v27 = v73++ >= 9;
              if (v27)
              {
                uint64_t v38 = 0;
                goto LABEL_139;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          uint64_t v38 = 0;
        }
LABEL_139:
        uint64_t v82 = 88;
LABEL_140:
        *(void *)(a1 + v82) = v38;
        goto LABEL_155;
      case 9:
        if (!v31) {
          goto LABEL_113;
        }
        if ((*(_WORD *)(a1 + 124) & 0x200) == 0)
        {
          uint64_t v78 = PBReaderReadString();
          uint64_t v79 = 48;
          goto LABEL_111;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_177;
        }
        __int16 v84 = *(_WORD *)(a1 + 124) << 6;
        goto LABEL_153;
      case 10:
        if (!v31) {
          goto LABEL_113;
        }
        if ((*(_WORD *)(a1 + 124) & 0x80) == 0)
        {
          uint64_t v78 = PBReaderReadString();
          uint64_t v79 = 16;
          goto LABEL_111;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_177;
        }
        __int16 v84 = *(_WORD *)(a1 + 124) << 8;
        goto LABEL_153;
      case 11:
        if (!v31) {
          goto LABEL_113;
        }
        if ((*(_WORD *)(a1 + 124) & 0x1000) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_177;
          }
          __int16 v84 = 8 * *(_WORD *)(a1 + 124);
LABEL_153:
          v7 += v84 >> 15;
LABEL_154:
          char v15 = v91;
          uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
LABEL_155:
          if (!(v15 & 1 | (v7 != 0))) {
            goto LABEL_159;
          }
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_177;
        }
        unint64_t v90 = objc_alloc_init(GEOTransitPlaceCard);
        if (GEOTransitPlaceCardReadAllFrom((uint64_t)v90, (void *)v3, v9 & 1))
        {
          PBReaderRecallMark();
          uint64_t v80 = *(void **)(a1 + 96);
          *(void *)(a1 + 96) = v90;
LABEL_112:

          --v7;
          goto LABEL_154;
        }

LABEL_177:
        char v85 = 0;
        char v15 = v91;
        uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
LABEL_161:
        *(_WORD *)(a1 + 124) |= 0x200u;
        *(_WORD *)(a1 + 124) |= 0x80u;
        *(_WORD *)(a1 + 124) |= 0x1000u;
        *(_WORD *)(a1 + 124) |= 0x400u;
        *(_WORD *)(a1 + 124) |= 0x100u;
        *(_WORD *)(a1 + 124) |= 0x800u;
        if (v85)
        {
LABEL_172:
          unint64_t v3 = *(unsigned char *)(v3 + *v18) == 0;
          if (v15) {
            goto LABEL_173;
          }
          return v3;
        }
        unint64_t v3 = 0;
        if ((v15 & 1) == 0) {
          return v3;
        }
LABEL_173:
        uint64_t v88 = *(void **)(a1 + 8);
        *(void *)(a1 + 8) = 0;

        return v3;
      case 12:
        if (!v31) {
          goto LABEL_113;
        }
        if ((*(_WORD *)(a1 + 124) & 0x400) == 0)
        {
          uint64_t v78 = PBReaderReadString();
          uint64_t v79 = 64;
          goto LABEL_111;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_177;
        }
        __int16 v84 = 32 * *(_WORD *)(a1 + 124);
        goto LABEL_153;
      case 13:
        if (!v31) {
          goto LABEL_113;
        }
        if ((*(_WORD *)(a1 + 124) & 0x100) == 0)
        {
          uint64_t v78 = PBReaderReadString();
          uint64_t v79 = 40;
          goto LABEL_111;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_177;
        }
        __int16 v84 = *(_WORD *)(a1 + 124) << 7;
        goto LABEL_153;
      case 14:
        if (!v31)
        {
LABEL_113:
          char v81 = PBReaderSkipValueWithTag();
          uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
          char v15 = v91;
          if ((v81 & 1) == 0)
          {
LABEL_175:
            char v85 = 0;
            goto LABEL_161;
          }
          goto LABEL_155;
        }
        if ((*(_WORD *)(a1 + 124) & 0x800) == 0)
        {
          uint64_t v78 = PBReaderReadString();
          uint64_t v79 = 80;
LABEL_111:
          uint64_t v80 = *(void **)(a1 + v79);
          *(void *)(a1 + v79) = v78;
          goto LABEL_112;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_177;
        }
        __int16 v84 = 16 * *(_WORD *)(a1 + 124);
        goto LABEL_153;
      default:
        int v56 = PBReaderSkipValueWithTag();
        uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
        char v15 = v91;
        if (!v56) {
          goto LABEL_175;
        }
        goto LABEL_155;
    }
  }
}

void sub_189BAD12C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189BAD298(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189BAD400(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189BAD56C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189BAD6D8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189BAE1C0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPlaceActionDetailsReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 108))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPlaceActionDetailsReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 112));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 104) = [v8 position];
  *(_DWORD *)(a1 + 108) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOPlaceActionDetailsReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOPlaceActionDetailsReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPlaceActionDetailsReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    [*(id *)(a1 + 96) readAll:1];
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 112));
  return Specified;
}

void sub_189BAE364(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPlaceActionDetailsReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOPlaceActionDetailsReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189BAE3C8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOTransitPlaceCardIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  int v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (!a1[*v4])
    {
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_40;
          }
          unsigned int v17 = 0;
          do
          {
            uint64_t v18 = *v2;
            uint64_t v19 = *(void *)&a1[v18];
            unint64_t v20 = v19 + 1;
            if (v19 == -1 || v20 > *(void *)&a1[*v3])
            {
              a1[*v4] = 1;
              goto LABEL_35;
            }
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if ((v21 & 0x80000000) == 0) {
              break;
            }
          }
          while (v17++ <= 8);
          goto LABEL_35;
        case 2u:
          if (v15 == 2) {
            goto LABEL_34;
          }
          goto LABEL_40;
        case 3u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOTransitDepartureSequenceUsageIsValid(a1)) {
            goto LABEL_40;
          }
          PBReaderRecallMark();
          goto LABEL_35;
        case 4u:
          if (v15 == 2) {
            goto LABEL_34;
          }
          goto LABEL_40;
        default:
LABEL_34:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_40:
            PBReaderRecallMark();
            return 0;
          }
LABEL_35:
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_38;
          }
          break;
      }
    }
  }
LABEL_38:
  BOOL v23 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v23;
}

void sub_189BAE940(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPlaceActionDetailsIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 112));
  unsigned int v2 = *(unsigned __int16 *)(a1 + 124);
  if ((v2 & 0x2280) != 0) {
    return 1;
  }
  if ((v2 & 0x1000) != 0)
  {
    if (GEOTransitPlaceCardIsDirty(*(os_unfair_lock_s **)(a1 + 96))) {
      return 1;
    }
    unsigned int v2 = *(unsigned __int16 *)(a1 + 124);
  }
  if ((v2 & 0x500) != 0) {
    return 1;
  }
  return (v2 >> 11) & 1;
}

os_unfair_lock_s *GEOPlaceActionDetailsIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    uint64_t v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOPlaceActionDetailsIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 28);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

BOOL GEORouteDetailsReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        switch((v10 >> 3))
        {
          case 2u:
            char v18 = 0;
            unsigned int v19 = 0;
            uint64_t v20 = 0;
            *(unsigned char *)(a1 + 28) |= 2u;
            while (1)
            {
              uint64_t v21 = *v4;
              uint64_t v22 = *(void *)&v3[v21];
              unint64_t v23 = v22 + 1;
              if (v22 == -1 || v23 > *(void *)&v3[*v5]) {
                break;
              }
              char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
              *(void *)&v3[v21] = v23;
              v20 |= (unint64_t)(v24 & 0x7F) << v18;
              if ((v24 & 0x80) == 0) {
                goto LABEL_61;
              }
              v18 += 7;
              BOOL v15 = v19++ >= 9;
              if (v15)
              {
                LODWORD(v20) = 0;
                goto LABEL_63;
              }
            }
            v3[*v6] = 1;
LABEL_61:
            if (v3[*v6]) {
              LODWORD(v20) = 0;
            }
LABEL_63:
            uint64_t v55 = 16;
            goto LABEL_68;
          case 3u:
            char v25 = 0;
            unsigned int v26 = 0;
            uint64_t v20 = 0;
            *(unsigned char *)(a1 + 28) |= 4u;
            while (2)
            {
              uint64_t v27 = *v4;
              uint64_t v28 = *(void *)&v3[v27];
              unint64_t v29 = v28 + 1;
              if (v28 == -1 || v29 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v30 = *(unsigned char *)(*(void *)&v3[*v7] + v28);
                *(void *)&v3[v27] = v29;
                v20 |= (unint64_t)(v30 & 0x7F) << v25;
                if (v30 < 0)
                {
                  v25 += 7;
                  BOOL v15 = v26++ >= 9;
                  if (v15)
                  {
                    LODWORD(v20) = 0;
                    goto LABEL_67;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              LODWORD(v20) = 0;
            }
LABEL_67:
            uint64_t v55 = 20;
LABEL_68:
            *(_DWORD *)(a1 + v55) = v20;
            continue;
          case 4u:
            char v31 = 0;
            unsigned int v32 = 0;
            uint64_t v33 = 0;
            *(unsigned char *)(a1 + 28) |= 0x10u;
            while (2)
            {
              uint64_t v34 = *v4;
              uint64_t v35 = *(void *)&v3[v34];
              unint64_t v36 = v35 + 1;
              if (v35 == -1 || v36 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v37 = *(unsigned char *)(*(void *)&v3[*v7] + v35);
                *(void *)&v3[v34] = v36;
                v33 |= (unint64_t)(v37 & 0x7F) << v31;
                if (v37 < 0)
                {
                  v31 += 7;
                  BOOL v15 = v32++ >= 9;
                  if (v15)
                  {
                    uint64_t v33 = 0;
                    goto LABEL_72;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              uint64_t v33 = 0;
            }
LABEL_72:
            BOOL v56 = v33 != 0;
            uint64_t v57 = 25;
            goto LABEL_81;
          case 5u:
            char v38 = 0;
            unsigned int v39 = 0;
            uint64_t v40 = 0;
            *(unsigned char *)(a1 + 28) |= 8u;
            while (2)
            {
              uint64_t v41 = *v4;
              uint64_t v42 = *(void *)&v3[v41];
              unint64_t v43 = v42 + 1;
              if (v42 == -1 || v43 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v44 = *(unsigned char *)(*(void *)&v3[*v7] + v42);
                *(void *)&v3[v41] = v43;
                v40 |= (unint64_t)(v44 & 0x7F) << v38;
                if (v44 < 0)
                {
                  v38 += 7;
                  BOOL v15 = v39++ >= 9;
                  if (v15)
                  {
                    uint64_t v40 = 0;
                    goto LABEL_76;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              uint64_t v40 = 0;
            }
LABEL_76:
            BOOL v56 = v40 != 0;
            uint64_t v57 = 24;
            goto LABEL_81;
          case 6u:
            char v45 = 0;
            unsigned int v46 = 0;
            uint64_t v47 = 0;
            *(unsigned char *)(a1 + 28) |= 0x20u;
            break;
          case 7u:
            *(unsigned char *)(a1 + 28) |= 1u;
            uint64_t v52 = *v4;
            unint64_t v53 = *(void *)&v3[v52];
            if (v53 <= 0xFFFFFFFFFFFFFFF7 && v53 + 8 <= *(void *)&v3[*v5])
            {
              uint64_t v54 = *(void *)(*(void *)&v3[*v7] + v53);
              *(void *)&v3[v52] = v53 + 8;
            }
            else
            {
              v3[*v6] = 1;
              uint64_t v54 = 0;
            }
            *(void *)(a1 + 8) = v54;
            continue;
          default:
            if (!PBReaderSkipValueWithTag()) {
              goto LABEL_86;
            }
            continue;
        }
        while (1)
        {
          uint64_t v48 = *v4;
          uint64_t v49 = *(void *)&v3[v48];
          unint64_t v50 = v49 + 1;
          if (v49 == -1 || v50 > *(void *)&v3[*v5]) {
            break;
          }
          char v51 = *(unsigned char *)(*(void *)&v3[*v7] + v49);
          *(void *)&v3[v48] = v50;
          v47 |= (unint64_t)(v51 & 0x7F) << v45;
          if ((v51 & 0x80) == 0) {
            goto LABEL_78;
          }
          v45 += 7;
          BOOL v15 = v46++ >= 9;
          if (v15)
          {
            uint64_t v47 = 0;
            goto LABEL_80;
          }
        }
        v3[*v6] = 1;
LABEL_78:
        if (v3[*v6]) {
          uint64_t v47 = 0;
        }
LABEL_80:
        BOOL v56 = v47 != 0;
        uint64_t v57 = 26;
LABEL_81:
        *(unsigned char *)(a1 + v57) = v56;
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v58 = v3[*v6] == 0;
  }
  else
  {
LABEL_86:
    BOOL v58 = 0;
  }
  objc_sync_exit(v3);

  return v58;
}

void sub_189BB0050(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORouteDetailsReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEORouteDetailsReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189BB00CC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORouteDetailsIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  unsigned int v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          uint64_t v14 = *v4;
          int v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      uint64_t v14 = *v4;
      int v15 = a1[v14];
      if (a1[v14]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v16 = v8 & 7;
      if (v15 || v16 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 2u:
          if ((v8 & 7) != 0) {
            goto LABEL_71;
          }
          unsigned int v18 = 0;
          while (1)
          {
            uint64_t v19 = *v2;
            uint64_t v20 = *(void *)&a1[v19];
            unint64_t v21 = v20 + 1;
            if (v20 == -1 || v21 > *(void *)&a1[*v3]) {
              goto LABEL_61;
            }
            int v22 = *(char *)(*(void *)&a1[*v5] + v20);
            *(void *)&a1[v19] = v21;
            if (v22 < 0)
            {
              BOOL v23 = v18++ > 8;
              if (!v23) {
                continue;
              }
            }
            goto LABEL_63;
          }
        case 3u:
          if ((v8 & 7) != 0) {
            goto LABEL_71;
          }
          unsigned int v24 = 0;
          while (1)
          {
            uint64_t v25 = *v2;
            uint64_t v26 = *(void *)&a1[v25];
            unint64_t v27 = v26 + 1;
            if (v26 == -1 || v27 > *(void *)&a1[*v3]) {
              goto LABEL_61;
            }
            int v28 = *(char *)(*(void *)&a1[*v5] + v26);
            *(void *)&a1[v25] = v27;
            if (v28 < 0)
            {
              BOOL v23 = v24++ > 8;
              if (!v23) {
                continue;
              }
            }
            goto LABEL_63;
          }
        case 4u:
          if ((v8 & 7) != 0) {
            goto LABEL_71;
          }
          unsigned int v29 = 0;
          while (1)
          {
            uint64_t v30 = *v2;
            uint64_t v31 = *(void *)&a1[v30];
            unint64_t v32 = v31 + 1;
            if (v31 == -1 || v32 > *(void *)&a1[*v3]) {
              goto LABEL_61;
            }
            int v33 = *(char *)(*(void *)&a1[*v5] + v31);
            *(void *)&a1[v30] = v32;
            if (v33 < 0)
            {
              BOOL v23 = v29++ > 8;
              if (!v23) {
                continue;
              }
            }
            goto LABEL_63;
          }
        case 5u:
          if ((v8 & 7) != 0) {
            goto LABEL_71;
          }
          unsigned int v34 = 0;
          while (1)
          {
            uint64_t v35 = *v2;
            uint64_t v36 = *(void *)&a1[v35];
            unint64_t v37 = v36 + 1;
            if (v36 == -1 || v37 > *(void *)&a1[*v3]) {
              goto LABEL_61;
            }
            int v38 = *(char *)(*(void *)&a1[*v5] + v36);
            *(void *)&a1[v35] = v37;
            if (v38 < 0)
            {
              BOOL v23 = v34++ > 8;
              if (!v23) {
                continue;
              }
            }
            goto LABEL_63;
          }
        case 6u:
          if ((v8 & 7) != 0) {
            goto LABEL_71;
          }
          unsigned int v39 = 0;
          break;
        case 7u:
          if (v16 != 1) {
            goto LABEL_71;
          }
          uint64_t v44 = *v2;
          unint64_t v45 = *(void *)&a1[v44];
          if (v45 > 0xFFFFFFFFFFFFFFF7) {
            goto LABEL_62;
          }
          unint64_t v46 = v45 + 8;
          if (v46 > *(void *)&a1[*v3]) {
            goto LABEL_62;
          }
          *(void *)&a1[v44] = v46;
          continue;
        default:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_71:
          BOOL v47 = 0;
          goto LABEL_70;
      }
      while (1)
      {
        uint64_t v40 = *v2;
        uint64_t v41 = *(void *)&a1[v40];
        unint64_t v42 = v41 + 1;
        if (v41 == -1 || v42 > *(void *)&a1[*v3]) {
          break;
        }
        int v43 = *(char *)(*(void *)&a1[*v5] + v41);
        *(void *)&a1[v40] = v42;
        if (v43 < 0)
        {
          BOOL v23 = v39++ > 8;
          if (!v23) {
            continue;
          }
        }
        goto LABEL_63;
      }
LABEL_61:
      uint64_t v14 = *v4;
LABEL_62:
      a1[v14] = 1;
LABEL_63:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v47 = a1[*v4] == 0;
LABEL_70:
  PBReaderRecallMark();
  return v47;
}

BOOL GEOSignGuidanceFeedbackReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 2)
        {
          char v27 = 0;
          unsigned int v28 = 0;
          uint64_t v20 = 0;
          *(unsigned char *)(a1 + 16) |= 1u;
          while (1)
          {
            uint64_t v29 = *v4;
            uint64_t v30 = *(void *)&v3[v29];
            unint64_t v31 = v30 + 1;
            if (v30 == -1 || v31 > *(void *)&v3[*v5]) {
              break;
            }
            char v32 = *(unsigned char *)(*(void *)&v3[*v7] + v30);
            *(void *)&v3[v29] = v31;
            v20 |= (unint64_t)(v32 & 0x7F) << v27;
            if ((v32 & 0x80) == 0)
            {
              uint64_t v26 = &OBJC_IVAR___GEOSignGuidanceFeedback__signDetailIndex;
              goto LABEL_40;
            }
            v27 += 7;
            BOOL v25 = v28++ > 8;
            if (v25)
            {
              LODWORD(v20) = 0;
              uint64_t v26 = &OBJC_IVAR___GEOSignGuidanceFeedback__signDetailIndex;
              goto LABEL_42;
            }
          }
          uint64_t v26 = &OBJC_IVAR___GEOSignGuidanceFeedback__signDetailIndex;
LABEL_39:
          v3[*v6] = 1;
        }
        else
        {
          if ((v10 >> 3) != 1)
          {
            if ((PBReaderSkipValueWithTag() & 1) == 0) {
              goto LABEL_48;
            }
            continue;
          }
          char v18 = 0;
          unsigned int v19 = 0;
          uint64_t v20 = 0;
          *(unsigned char *)(a1 + 16) |= 2u;
          while (1)
          {
            uint64_t v21 = *v4;
            uint64_t v22 = *(void *)&v3[v21];
            unint64_t v23 = v22 + 1;
            if (v22 == -1 || v23 > *(void *)&v3[*v5])
            {
              uint64_t v26 = &OBJC_IVAR___GEOSignGuidanceFeedback__signTitleIndex;
              goto LABEL_39;
            }
            char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
            *(void *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0) {
              break;
            }
            v18 += 7;
            BOOL v25 = v19++ > 8;
            if (v25)
            {
              LODWORD(v20) = 0;
              uint64_t v26 = &OBJC_IVAR___GEOSignGuidanceFeedback__signTitleIndex;
              goto LABEL_42;
            }
          }
          uint64_t v26 = &OBJC_IVAR___GEOSignGuidanceFeedback__signTitleIndex;
        }
LABEL_40:
        if (v3[*v6]) {
          LODWORD(v20) = 0;
        }
LABEL_42:
        *(_DWORD *)(a1 + *v26) = v20;
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v33 = v3[*v6] == 0;
  }
  else
  {
LABEL_48:
    BOOL v33 = 0;
  }
  objc_sync_exit(v3);

  return v33;
}

void sub_189BB1340(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOSignGuidanceFeedbackReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOSignGuidanceFeedbackReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189BB13A4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOSpokenGuidanceFeedbackReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        unint64_t v18 = v10 >> 3;
        if ((v10 >> 3) == 3)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_52;
          }
          uint64_t v26 = objc_alloc_init(GEOTrafficCameraInformation);
          if (!GEOTrafficCameraInformationReadAllFrom((uint64_t)v26, v3))
          {

            goto LABEL_52;
          }
          PBReaderRecallMark();
          char v27 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = v26;
        }
        else if (v18 == 2)
        {
          char v28 = 0;
          unsigned int v29 = 0;
          uint64_t v30 = 0;
          *(unsigned char *)(a1 + 24) |= 2u;
          while (1)
          {
            uint64_t v31 = *v4;
            uint64_t v32 = *(void *)&v3[v31];
            unint64_t v33 = v32 + 1;
            if (v32 == -1 || v33 > *(void *)&v3[*v5]) {
              break;
            }
            char v34 = *(unsigned char *)(*(void *)&v3[*v7] + v32);
            *(void *)&v3[v31] = v33;
            v30 |= (unint64_t)(v34 & 0x7F) << v28;
            if ((v34 & 0x80) == 0) {
              goto LABEL_46;
            }
            v28 += 7;
            BOOL v15 = v29++ >= 9;
            if (v15)
            {
              uint64_t v30 = 0;
              goto LABEL_48;
            }
          }
          v3[*v6] = 1;
LABEL_46:
          if (v3[*v6]) {
            uint64_t v30 = 0;
          }
LABEL_48:
          *(unsigned char *)(a1 + 20) = v30 != 0;
        }
        else if (v18 == 1)
        {
          char v19 = 0;
          unsigned int v20 = 0;
          uint64_t v21 = 0;
          *(unsigned char *)(a1 + 24) |= 1u;
          while (1)
          {
            uint64_t v22 = *v4;
            uint64_t v23 = *(void *)&v3[v22];
            unint64_t v24 = v23 + 1;
            if (v23 == -1 || v24 > *(void *)&v3[*v5]) {
              break;
            }
            char v25 = *(unsigned char *)(*(void *)&v3[*v7] + v23);
            *(void *)&v3[v22] = v24;
            v21 |= (unint64_t)(v25 & 0x7F) << v19;
            if ((v25 & 0x80) == 0) {
              goto LABEL_42;
            }
            v19 += 7;
            BOOL v15 = v20++ >= 9;
            if (v15)
            {
              LODWORD(v21) = 0;
              goto LABEL_44;
            }
          }
          v3[*v6] = 1;
LABEL_42:
          if (v3[*v6]) {
            LODWORD(v21) = 0;
          }
LABEL_44:
          *(_DWORD *)(a1 + 16) = v21;
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_52;
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v35 = v3[*v6] == 0;
  }
  else
  {
LABEL_52:
    BOOL v35 = 0;
  }
  objc_sync_exit(v3);

  return v35;
}

void sub_189BB1FB4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOSpokenGuidanceFeedbackReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOSpokenGuidanceFeedbackReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189BB2018(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOStateTransitionFeedbackReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        unint64_t v18 = v10 >> 3;
        if ((v10 >> 3) == 3)
        {
          char v28 = 0;
          unsigned int v29 = 0;
          uint64_t v21 = 0;
          *(unsigned char *)(a1 + 20) |= 1u;
          while (1)
          {
            uint64_t v30 = *v4;
            uint64_t v31 = *(void *)&v3[v30];
            unint64_t v32 = v31 + 1;
            if (v31 == -1 || v32 > *(void *)&v3[*v5]) {
              break;
            }
            char v33 = *(unsigned char *)(*(void *)&v3[*v7] + v31);
            *(void *)&v3[v30] = v32;
            v21 |= (unint64_t)(v33 & 0x7F) << v28;
            if ((v33 & 0x80) == 0)
            {
              char v27 = &OBJC_IVAR___GEOStateTransitionFeedback__newValue;
              goto LABEL_49;
            }
            v28 += 7;
            BOOL v26 = v29++ > 8;
            if (v26)
            {
              LODWORD(v21) = 0;
              char v27 = &OBJC_IVAR___GEOStateTransitionFeedback__newValue;
              goto LABEL_51;
            }
          }
          char v27 = &OBJC_IVAR___GEOStateTransitionFeedback__newValue;
LABEL_48:
          v3[*v6] = 1;
        }
        else if (v18 == 2)
        {
          char v34 = 0;
          unsigned int v35 = 0;
          uint64_t v21 = 0;
          *(unsigned char *)(a1 + 20) |= 2u;
          while (1)
          {
            uint64_t v36 = *v4;
            uint64_t v37 = *(void *)&v3[v36];
            unint64_t v38 = v37 + 1;
            if (v37 == -1 || v38 > *(void *)&v3[*v5])
            {
              char v27 = &OBJC_IVAR___GEOStateTransitionFeedback__oldValue;
              goto LABEL_48;
            }
            char v39 = *(unsigned char *)(*(void *)&v3[*v7] + v37);
            *(void *)&v3[v36] = v38;
            v21 |= (unint64_t)(v39 & 0x7F) << v34;
            if ((v39 & 0x80) == 0) {
              break;
            }
            v34 += 7;
            BOOL v26 = v35++ > 8;
            if (v26)
            {
              LODWORD(v21) = 0;
              char v27 = &OBJC_IVAR___GEOStateTransitionFeedback__oldValue;
              goto LABEL_51;
            }
          }
          char v27 = &OBJC_IVAR___GEOStateTransitionFeedback__oldValue;
        }
        else
        {
          if (v18 != 1)
          {
            if ((PBReaderSkipValueWithTag() & 1) == 0) {
              goto LABEL_58;
            }
            continue;
          }
          char v19 = 0;
          unsigned int v20 = 0;
          uint64_t v21 = 0;
          *(unsigned char *)(a1 + 20) |= 4u;
          while (1)
          {
            uint64_t v22 = *v4;
            uint64_t v23 = *(void *)&v3[v22];
            unint64_t v24 = v23 + 1;
            if (v23 == -1 || v24 > *(void *)&v3[*v5])
            {
              char v27 = &OBJC_IVAR___GEOStateTransitionFeedback__stateType;
              goto LABEL_48;
            }
            char v25 = *(unsigned char *)(*(void *)&v3[*v7] + v23);
            *(void *)&v3[v22] = v24;
            v21 |= (unint64_t)(v25 & 0x7F) << v19;
            if ((v25 & 0x80) == 0) {
              break;
            }
            v19 += 7;
            BOOL v26 = v20++ > 8;
            if (v26)
            {
              LODWORD(v21) = 0;
              char v27 = &OBJC_IVAR___GEOStateTransitionFeedback__stateType;
              goto LABEL_51;
            }
          }
          char v27 = &OBJC_IVAR___GEOStateTransitionFeedback__stateType;
        }
LABEL_49:
        if (v3[*v6]) {
          LODWORD(v21) = 0;
        }
LABEL_51:
        *(_DWORD *)(a1 + *v27) = v21;
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v40 = v3[*v6] == 0;
  }
  else
  {
LABEL_58:
    BOOL v40 = 0;
  }
  objc_sync_exit(v3);

  return v40;
}

void sub_189BB3B30(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOStateTransitionFeedbackReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOStateTransitionFeedbackReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189BB3B94(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOStateTransitionFeedbackIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  unsigned int v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_48;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      if (v14 || (v8 & 7) == 4) {
        goto LABEL_48;
      }
      unint64_t v16 = v8 >> 3;
      if ((v8 >> 3) == 3) {
        break;
      }
      if (v16 == 2)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_50;
        }
        unsigned int v28 = 0;
        while (1)
        {
          uint64_t v29 = *v2;
          uint64_t v30 = *(void *)&a1[v29];
          unint64_t v31 = v30 + 1;
          if (v30 == -1 || v31 > *(void *)&a1[*v3]) {
            goto LABEL_45;
          }
          int v32 = *(char *)(*(void *)&a1[*v5] + v30);
          *(void *)&a1[v29] = v31;
          if (v32 < 0)
          {
            BOOL v22 = v28++ > 8;
            if (!v22) {
              continue;
            }
          }
          goto LABEL_47;
        }
      }
      if (v16 == 1)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_50;
        }
        unsigned int v17 = 0;
        while (1)
        {
          uint64_t v18 = *v2;
          uint64_t v19 = *(void *)&a1[v18];
          unint64_t v20 = v19 + 1;
          if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
            break;
          }
          int v21 = *(char *)(*(void *)&a1[*v5] + v19);
          *(void *)&a1[v18] = v20;
          if (v21 < 0)
          {
            BOOL v22 = v17++ > 8;
            if (!v22) {
              continue;
            }
          }
          goto LABEL_47;
        }
LABEL_45:
        a1[*v4] = 1;
        goto LABEL_47;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_50:
        BOOL v33 = 0;
        goto LABEL_49;
      }
LABEL_47:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_48;
      }
    }
    if ((v8 & 7) != 0) {
      goto LABEL_50;
    }
    unsigned int v23 = 0;
    while (1)
    {
      uint64_t v24 = *v2;
      uint64_t v25 = *(void *)&a1[v24];
      unint64_t v26 = v25 + 1;
      if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
        goto LABEL_45;
      }
      int v27 = *(char *)(*(void *)&a1[*v5] + v25);
      *(void *)&a1[v24] = v26;
      if (v27 < 0)
      {
        BOOL v22 = v23++ > 8;
        if (!v22) {
          continue;
        }
      }
      goto LABEL_47;
    }
  }
LABEL_48:
  BOOL v33 = a1[*v4] == 0;
LABEL_49:
  PBReaderRecallMark();
  return v33;
}

void sub_189BB45E8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOStepFeedbackReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 80));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 76);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 72)];
  uint64_t v7 = 0;
  char v8 = 0;
  char v9 = 0;
  v10.i64[0] = 0x100000001;
  v10.i64[1] = 0x100000001;
  unsigned int v11 = vaddvq_s32((int32x4_t)vandq_s8((int8x16_t)vshlq_u32((uint32x4_t)vdupq_n_s32(*(_DWORD *)(a1 + 112)), (uint32x4_t)xmmword_18A639F00), v10))+ ((*(_DWORD *)(a1 + 112) >> 12) & 1);
  while (1)
  {
    unsigned int v12 = a3[v7];
    if (v12 >= 0xFFFFFFFE)
    {
      char v9 = 1;
      goto LABEL_9;
    }
    if (v12 != -3) {
      break;
    }
    char v8 = 1;
LABEL_9:
    ++v7;
  }
  if (v12)
  {
    ++v11;
    goto LABEL_9;
  }
  char v13 = v9 | (v11 > 3);
  if (v9 & 1 | (v11 > 3) | v8 & 1) {
    int v14 = 0;
  }
  else {
    int v14 = a3;
  }
  BOOL v15 = (int *)MEMORY[0x1E4F940E8];
  unint64_t v16 = (int *)MEMORY[0x1E4F940C8];
  unsigned int v17 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(void *)(v3 + *v15) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v16)) {
      goto LABEL_209;
    }
    char v18 = 0;
    unsigned int v19 = 0;
    unint64_t v20 = 0;
    while (1)
    {
      uint64_t v21 = *v15;
      uint64_t v22 = *(void *)(v3 + v21);
      unint64_t v23 = v22 + 1;
      if (v22 == -1 || v23 > *(void *)(v3 + *v6)) {
        break;
      }
      char v24 = *(unsigned char *)(*(void *)(v3 + *v17) + v22);
      *(void *)(v3 + v21) = v23;
      v20 |= (unint64_t)(v24 & 0x7F) << v18;
      if ((v24 & 0x80) == 0) {
        goto LABEL_24;
      }
      v18 += 7;
      BOOL v25 = v19++ >= 9;
      if (v25)
      {
        unint64_t v20 = 0;
        int v26 = *(unsigned __int8 *)(v3 + *v16);
        goto LABEL_26;
      }
    }
    *(unsigned char *)(v3 + *v16) = 1;
LABEL_24:
    int v26 = *(unsigned __int8 *)(v3 + *v16);
    if (*(unsigned char *)(v3 + *v16)) {
      unint64_t v20 = 0;
    }
LABEL_26:
    if (v26 || (v20 & 7) == 4)
    {
LABEL_209:
      if (v13)
      {
        char v114 = 1;
        goto LABEL_211;
      }
      if (!v14)
      {
LABEL_228:
        unint64_t v3 = *(unsigned char *)(v3 + *v16) == 0;
        if (v13) {
          goto LABEL_229;
        }
        return v3;
      }
      while (1)
      {
        while (1)
        {
          int v116 = *v14++;
          int v115 = v116;
          if (v116 > 10) {
            break;
          }
          switch(v115)
          {
            case 4:
              int v117 = 0x4000;
LABEL_226:
              *(_DWORD *)(a1 + 112) |= v117;
              break;
            case 8:
              int v117 = 0x10000;
              goto LABEL_226;
            case 0:
              goto LABEL_228;
          }
        }
        switch(v115)
        {
          case 11:
            int v117 = 0x2000;
            goto LABEL_226;
          case 15:
            int v117 = 0x8000;
            goto LABEL_226;
          case 18:
            int v117 = 4096;
            goto LABEL_226;
        }
      }
    }
    unint64_t v28 = v20 >> 3;
    BOOL v29 = v13;
    if (!((v14 == 0) | v13 & 1))
    {
      uint64_t v30 = v14;
      do
      {
        int v32 = *v30++;
        int v31 = v32;
        BOOL v29 = v32 != 0;
        if (v32) {
          BOOL v33 = v31 == v28;
        }
        else {
          BOOL v33 = 1;
        }
      }
      while (!v33);
    }
    switch((int)v28)
    {
      case 1:
        if ((v8 & 1) == 0) {
          goto LABEL_147;
        }
        char v34 = 0;
        unsigned int v35 = 0;
        uint64_t v36 = 0;
        *(_DWORD *)(a1 + 112) |= 0x20u;
        while (1)
        {
          uint64_t v37 = *v15;
          uint64_t v38 = *(void *)(v3 + v37);
          unint64_t v39 = v38 + 1;
          if (v38 == -1 || v39 > *(void *)(v3 + *v6)) {
            break;
          }
          char v40 = *(unsigned char *)(*(void *)(v3 + *v17) + v38);
          *(void *)(v3 + v37) = v39;
          v36 |= (unint64_t)(v40 & 0x7F) << v34;
          if ((v40 & 0x80) == 0) {
            goto LABEL_150;
          }
          v34 += 7;
          BOOL v25 = v35++ >= 9;
          if (v25)
          {
            LODWORD(v36) = 0;
            goto LABEL_152;
          }
        }
        *(unsigned char *)(v3 + *v16) = 1;
LABEL_150:
        if (*(unsigned char *)(v3 + *v16)) {
          LODWORD(v36) = 0;
        }
LABEL_152:
        uint64_t v109 = 96;
        goto LABEL_190;
      case 2:
        if ((v8 & 1) == 0) {
          goto LABEL_147;
        }
        *(_DWORD *)(a1 + 112) |= 1u;
        uint64_t v41 = *v15;
        unint64_t v42 = *(void *)(v3 + v41);
        if (v42 <= 0xFFFFFFFFFFFFFFF7 && v42 + 8 <= *(void *)(v3 + *v6))
        {
          uint64_t v43 = *(void *)(*(void *)(v3 + *v17) + v42);
          *(void *)(v3 + v41) = v42 + 8;
        }
        else
        {
          *(unsigned char *)(v3 + *v16) = 1;
          uint64_t v43 = 0;
        }
        uint64_t v113 = 16;
        goto LABEL_207;
      case 3:
        if ((v8 & 1) == 0) {
          goto LABEL_147;
        }
        char v44 = 0;
        unsigned int v45 = 0;
        uint64_t v46 = 0;
        *(_DWORD *)(a1 + 112) |= 0x100u;
        while (2)
        {
          uint64_t v47 = *v15;
          uint64_t v48 = *(void *)(v3 + v47);
          unint64_t v49 = v48 + 1;
          if (v48 == -1 || v49 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v16) = 1;
          }
          else
          {
            char v50 = *(unsigned char *)(*(void *)(v3 + *v17) + v48);
            *(void *)(v3 + v47) = v49;
            v46 |= (unint64_t)(v50 & 0x7F) << v44;
            if (v50 < 0)
            {
              v44 += 7;
              BOOL v25 = v45++ >= 9;
              if (v25)
              {
                uint64_t v46 = 0;
                goto LABEL_156;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v16)) {
          uint64_t v46 = 0;
        }
LABEL_156:
        BOOL v110 = v46 != 0;
        uint64_t v111 = 108;
        goto LABEL_173;
      case 4:
        if (!v29) {
          goto LABEL_147;
        }
        if ((*(unsigned char *)(a1 + 113) & 0x40) == 0)
        {
          uint64_t v51 = PBReaderReadData();
          uint64_t v52 = 40;
          goto LABEL_145;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_233;
        }
        int v112 = (int)(*(_DWORD *)(a1 + 112) << 17) >> 31;
        goto LABEL_201;
      case 5:
        if ((v8 & 1) == 0) {
          goto LABEL_147;
        }
        char v53 = 0;
        unsigned int v54 = 0;
        uint64_t v36 = 0;
        *(_DWORD *)(a1 + 112) |= 0x10u;
        while (2)
        {
          uint64_t v55 = *v15;
          uint64_t v56 = *(void *)(v3 + v55);
          unint64_t v57 = v56 + 1;
          if (v56 == -1 || v57 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v16) = 1;
          }
          else
          {
            char v58 = *(unsigned char *)(*(void *)(v3 + *v17) + v56);
            *(void *)(v3 + v55) = v57;
            v36 |= (unint64_t)(v58 & 0x7F) << v53;
            if (v58 < 0)
            {
              v53 += 7;
              BOOL v25 = v54++ >= 9;
              if (v25)
              {
                LODWORD(v36) = 0;
                goto LABEL_160;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v16)) {
          LODWORD(v36) = 0;
        }
LABEL_160:
        uint64_t v109 = 92;
        goto LABEL_190;
      case 7:
        if ((v8 & 1) == 0) {
          goto LABEL_147;
        }
        char v60 = 0;
        unsigned int v61 = 0;
        uint64_t v62 = 0;
        *(_DWORD *)(a1 + 112) |= 0x200u;
        while (2)
        {
          uint64_t v63 = *v15;
          uint64_t v64 = *(void *)(v3 + v63);
          unint64_t v65 = v64 + 1;
          if (v64 == -1 || v65 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v16) = 1;
          }
          else
          {
            char v66 = *(unsigned char *)(*(void *)(v3 + *v17) + v64);
            *(void *)(v3 + v63) = v65;
            v62 |= (unint64_t)(v66 & 0x7F) << v60;
            if (v66 < 0)
            {
              v60 += 7;
              BOOL v25 = v61++ >= 9;
              if (v25)
              {
                uint64_t v62 = 0;
                goto LABEL_164;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v16)) {
          uint64_t v62 = 0;
        }
LABEL_164:
        BOOL v110 = v62 != 0;
        uint64_t v111 = 109;
        goto LABEL_173;
      case 8:
        if (!v29) {
          goto LABEL_147;
        }
        if ((*(unsigned char *)(a1 + 114) & 1) == 0)
        {
          uint64_t v51 = PBReaderReadData();
          uint64_t v52 = 64;
          goto LABEL_145;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_233;
        }
        int v112 = (int)(*(_DWORD *)(a1 + 112) << 15) >> 31;
        goto LABEL_201;
      case 9:
        if ((v8 & 1) == 0) {
          goto LABEL_147;
        }
        char v67 = 0;
        unsigned int v68 = 0;
        uint64_t v69 = 0;
        *(_DWORD *)(a1 + 112) |= 0x400u;
        while (2)
        {
          uint64_t v70 = *v15;
          uint64_t v71 = *(void *)(v3 + v70);
          unint64_t v72 = v71 + 1;
          if (v71 == -1 || v72 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v16) = 1;
          }
          else
          {
            char v73 = *(unsigned char *)(*(void *)(v3 + *v17) + v71);
            *(void *)(v3 + v70) = v72;
            v69 |= (unint64_t)(v73 & 0x7F) << v67;
            if (v73 < 0)
            {
              v67 += 7;
              BOOL v25 = v68++ >= 9;
              if (v25)
              {
                uint64_t v69 = 0;
                goto LABEL_168;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v16)) {
          uint64_t v69 = 0;
        }
LABEL_168:
        BOOL v110 = v69 != 0;
        uint64_t v111 = 110;
        goto LABEL_173;
      case 10:
        if ((v8 & 1) == 0) {
          goto LABEL_147;
        }
        char v74 = 0;
        unsigned int v75 = 0;
        uint64_t v76 = 0;
        *(_DWORD *)(a1 + 112) |= 0x800u;
        while (2)
        {
          uint64_t v77 = *v15;
          uint64_t v78 = *(void *)(v3 + v77);
          unint64_t v79 = v78 + 1;
          if (v78 == -1 || v79 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v16) = 1;
          }
          else
          {
            char v80 = *(unsigned char *)(*(void *)(v3 + *v17) + v78);
            *(void *)(v3 + v77) = v79;
            v76 |= (unint64_t)(v80 & 0x7F) << v74;
            if (v80 < 0)
            {
              v74 += 7;
              BOOL v25 = v75++ >= 9;
              if (v25)
              {
                uint64_t v76 = 0;
                goto LABEL_172;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v16)) {
          uint64_t v76 = 0;
        }
LABEL_172:
        BOOL v110 = v76 != 0;
        uint64_t v111 = 111;
LABEL_173:
        *(unsigned char *)(a1 + v111) = v110;
        goto LABEL_208;
      case 11:
        if (!v29) {
          goto LABEL_147;
        }
        if ((*(unsigned char *)(a1 + 113) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_233;
          }
          int v112 = (int)(*(_DWORD *)(a1 + 112) << 18) >> 31;
LABEL_201:
          v7 += v112;
          goto LABEL_202;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_233;
        }
        char v120 = objc_alloc_init(GEOEVStepFeedbackInfo);
        if (GEOEVStepFeedbackInfoReadAllFrom((uint64_t)v120, (void *)v3))
        {
          PBReaderRecallMark();
          char v81 = *(void **)(a1 + 32);
          *(void *)(a1 + 32) = v120;
LABEL_146:

          --v7;
LABEL_202:
          unint64_t v16 = (int *)MEMORY[0x1E4F940C8];
LABEL_208:
          if (!(v13 & 1 | (v7 != 0))) {
            goto LABEL_209;
          }
          continue;
        }

LABEL_233:
        char v114 = 0;
        unint64_t v16 = (int *)MEMORY[0x1E4F940C8];
LABEL_211:
        *(_DWORD *)(a1 + 112) |= 0x4000u;
        *(_DWORD *)(a1 + 112) |= 0x10000u;
        *(_DWORD *)(a1 + 112) |= 0x2000u;
        *(_DWORD *)(a1 + 112) |= 0x8000u;
        *(_DWORD *)(a1 + 112) |= 0x1000u;
        if (v114) {
          goto LABEL_228;
        }
        unint64_t v3 = 0;
        if ((v13 & 1) == 0) {
          return v3;
        }
LABEL_229:
        uint64_t v118 = *(void **)(a1 + 8);
        *(void *)(a1 + 8) = 0;

        return v3;
      case 12:
        if ((v8 & 1) == 0) {
          goto LABEL_147;
        }
        char v82 = 0;
        unsigned int v83 = 0;
        uint64_t v36 = 0;
        *(_DWORD *)(a1 + 112) |= 0x80u;
        while (2)
        {
          uint64_t v84 = *v15;
          uint64_t v85 = *(void *)(v3 + v84);
          unint64_t v86 = v85 + 1;
          if (v85 == -1 || v86 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v16) = 1;
          }
          else
          {
            char v87 = *(unsigned char *)(*(void *)(v3 + *v17) + v85);
            *(void *)(v3 + v84) = v86;
            v36 |= (unint64_t)(v87 & 0x7F) << v82;
            if (v87 < 0)
            {
              v82 += 7;
              BOOL v25 = v83++ >= 9;
              if (v25)
              {
                LODWORD(v36) = 0;
                goto LABEL_177;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v16)) {
          LODWORD(v36) = 0;
        }
LABEL_177:
        uint64_t v109 = 104;
        goto LABEL_190;
      case 13:
        if ((v8 & 1) == 0) {
          goto LABEL_147;
        }
        char v88 = 0;
        unsigned int v89 = 0;
        uint64_t v36 = 0;
        *(_DWORD *)(a1 + 112) |= 8u;
        while (2)
        {
          uint64_t v90 = *v15;
          uint64_t v91 = *(void *)(v3 + v90);
          unint64_t v92 = v91 + 1;
          if (v91 == -1 || v92 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v16) = 1;
          }
          else
          {
            char v93 = *(unsigned char *)(*(void *)(v3 + *v17) + v91);
            *(void *)(v3 + v90) = v92;
            v36 |= (unint64_t)(v93 & 0x7F) << v88;
            if (v93 < 0)
            {
              v88 += 7;
              BOOL v25 = v89++ >= 9;
              if (v25)
              {
                LODWORD(v36) = 0;
                goto LABEL_181;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v16)) {
          LODWORD(v36) = 0;
        }
LABEL_181:
        uint64_t v109 = 88;
        goto LABEL_190;
      case 14:
        if ((v8 & 1) == 0) {
          goto LABEL_147;
        }
        char v94 = 0;
        unsigned int v95 = 0;
        uint64_t v36 = 0;
        *(_DWORD *)(a1 + 112) |= 4u;
        while (2)
        {
          uint64_t v96 = *v15;
          uint64_t v97 = *(void *)(v3 + v96);
          unint64_t v98 = v97 + 1;
          if (v97 == -1 || v98 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v16) = 1;
          }
          else
          {
            char v99 = *(unsigned char *)(*(void *)(v3 + *v17) + v97);
            *(void *)(v3 + v96) = v98;
            v36 |= (unint64_t)(v99 & 0x7F) << v94;
            if (v99 < 0)
            {
              v94 += 7;
              BOOL v25 = v95++ >= 9;
              if (v25)
              {
                LODWORD(v36) = 0;
                goto LABEL_185;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v16)) {
          LODWORD(v36) = 0;
        }
LABEL_185:
        uint64_t v109 = 84;
        goto LABEL_190;
      case 15:
        if (!v29) {
          goto LABEL_147;
        }
        if ((*(unsigned char *)(a1 + 113) & 0x80) == 0)
        {
          uint64_t v51 = PBReaderReadData();
          uint64_t v52 = 56;
          goto LABEL_145;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_233;
        }
        int v112 = (int)(*(_DWORD *)(a1 + 112) << 16) >> 31;
        goto LABEL_201;
      case 16:
        if ((v8 & 1) == 0) {
          goto LABEL_147;
        }
        char v100 = 0;
        unsigned int v101 = 0;
        uint64_t v36 = 0;
        *(_DWORD *)(a1 + 112) |= 0x40u;
        while (2)
        {
          uint64_t v102 = *v15;
          uint64_t v103 = *(void *)(v3 + v102);
          unint64_t v104 = v103 + 1;
          if (v103 == -1 || v104 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v16) = 1;
          }
          else
          {
            char v105 = *(unsigned char *)(*(void *)(v3 + *v17) + v103);
            *(void *)(v3 + v102) = v104;
            v36 |= (unint64_t)(v105 & 0x7F) << v100;
            if (v105 < 0)
            {
              v100 += 7;
              BOOL v25 = v101++ >= 9;
              if (v25)
              {
                LODWORD(v36) = 0;
                goto LABEL_189;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v16)) {
          LODWORD(v36) = 0;
        }
LABEL_189:
        uint64_t v109 = 100;
LABEL_190:
        *(_DWORD *)(a1 + v109) = v36;
        goto LABEL_208;
      case 17:
        if ((v8 & 1) == 0) {
          goto LABEL_147;
        }
        *(_DWORD *)(a1 + 112) |= 2u;
        uint64_t v106 = *v15;
        unint64_t v107 = *(void *)(v3 + v106);
        if (v107 <= 0xFFFFFFFFFFFFFFF7 && v107 + 8 <= *(void *)(v3 + *v6))
        {
          uint64_t v43 = *(void *)(*(void *)(v3 + *v17) + v107);
          *(void *)(v3 + v106) = v107 + 8;
        }
        else
        {
          *(unsigned char *)(v3 + *v16) = 1;
          uint64_t v43 = 0;
        }
        uint64_t v113 = 48;
LABEL_207:
        *(void *)(a1 + v113) = v43;
        goto LABEL_208;
      case 18:
        if (!v29)
        {
LABEL_147:
          char v108 = PBReaderSkipValueWithTag();
          unint64_t v16 = (int *)MEMORY[0x1E4F940C8];
          if ((v108 & 1) == 0)
          {
LABEL_231:
            char v114 = 0;
            goto LABEL_211;
          }
          goto LABEL_208;
        }
        if ((*(unsigned char *)(a1 + 113) & 0x10) == 0)
        {
          uint64_t v51 = PBReaderReadData();
          uint64_t v52 = 24;
LABEL_145:
          char v81 = *(void **)(a1 + v52);
          *(void *)(a1 + v52) = v51;
          goto LABEL_146;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_233;
        }
        int v112 = (int)(*(_DWORD *)(a1 + 112) << 19) >> 31;
        goto LABEL_201;
      default:
        int v59 = PBReaderSkipValueWithTag();
        unint64_t v16 = (int *)MEMORY[0x1E4F940C8];
        if (!v59) {
          goto LABEL_231;
        }
        goto LABEL_208;
    }
  }
}

void sub_189BB566C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189BB58E4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189BB6AFC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189BB6D68(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189BB876C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOStepFeedbackReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 76))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOStepFeedbackReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)int8x16_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 80));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 72) = [v8 position];
  *(_DWORD *)(a1 + 76) = [v8 length];
  if (a3) {
    char v9 = (int *)&GEOStepFeedbackReadAllFrom_recursiveTag;
  }
  else {
    char v9 = (int *)&GEOStepFeedbackReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOStepFeedbackReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    [*(id *)(a1 + 32) readAll:1];
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 80));
  return Specified;
}

void sub_189BB8914(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOStepFeedbackReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOStepFeedbackReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189BB8978(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189BB8CF8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOStepFeedbackIsDirty(os_unfair_lock_s *a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner(a1 + 20);
  BOOL v2 = (a1[28]._os_unfair_lock_opaque & 0x3F000) != 0;
  os_unfair_lock_unlock(a1 + 20);
  return v2;
}

void sub_189BB9414(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOTrafficCameraInformationReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 2)
        {
          char v20 = 0;
          unsigned int v21 = 0;
          uint64_t v22 = 0;
          *(unsigned char *)(a1 + 20) |= 1u;
          while (1)
          {
            uint64_t v23 = *v4;
            uint64_t v24 = *(void *)&v3[v23];
            unint64_t v25 = v24 + 1;
            if (v24 == -1 || v25 > *(void *)&v3[*v5]) {
              break;
            }
            char v26 = *(unsigned char *)(*(void *)&v3[*v7] + v24);
            *(void *)&v3[v23] = v25;
            v22 |= (unint64_t)(v26 & 0x7F) << v20;
            if ((v26 & 0x80) == 0) {
              goto LABEL_32;
            }
            v20 += 7;
            BOOL v15 = v21++ >= 9;
            if (v15)
            {
              LODWORD(v22) = 0;
              goto LABEL_34;
            }
          }
          v3[*v6] = 1;
LABEL_32:
          if (v3[*v6]) {
            LODWORD(v22) = 0;
          }
LABEL_34:
          *(_DWORD *)(a1 + 16) = v22;
        }
        else if ((v10 >> 3) == 1)
        {
          uint64_t v18 = PBReaderReadString();
          unsigned int v19 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = v18;
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_37;
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v27 = v3[*v6] == 0;
  }
  else
  {
LABEL_37:
    BOOL v27 = 0;
  }
  objc_sync_exit(v3);

  return v27;
}

void sub_189BBA588(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOTrafficCameraInformationReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOTrafficCameraInformationReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189BBA5EC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189BBAD08(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOTrafficRerouteFeedbackReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 80));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 76);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 72)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  unsigned int v11 = (unsigned __int16)(vaddv_s16((int16x4_t)(*(void *)&vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int16 *)(a1 + 116)), (uint16x4_t)0xFFF2FFF3FFF4FFF5) & 0xFFE1FFE1FFE1FFE1))+ ((*(_WORD *)(a1 + 116) >> 10) & 1));
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v7])
    {
      case -3:
        char v8 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        BOOL v14 = v11 > 3;
        char v15 = v10 | v14;
        if (((v10 | v14) | v8)) {
          int v16 = 0;
        }
        else {
          int v16 = a3;
        }
        char v106 = (v16 == 0) | v15;
        unsigned int v17 = (int *)MEMORY[0x1E4F940E8];
        uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
        unsigned int v19 = (int *)MEMORY[0x1E4F940B8];
        char v105 = v10 | v14;
        break;
      default:
        ++v11;
LABEL_6:
        uint64_t v12 = v9;
        uint64_t v13 = v10;
LABEL_8:
        ++v7;
        uint64_t v9 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v17) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v18)) {
      goto LABEL_180;
    }
    char v20 = 0;
    unsigned int v21 = 0;
    unint64_t v22 = 0;
    while (1)
    {
      uint64_t v23 = *v17;
      uint64_t v24 = *(void *)(v3 + v23);
      unint64_t v25 = v24 + 1;
      if (v24 == -1 || v25 > *(void *)(v3 + *v6)) {
        break;
      }
      char v26 = *(unsigned char *)(*(void *)(v3 + *v19) + v24);
      *(void *)(v3 + v23) = v25;
      v22 |= (unint64_t)(v26 & 0x7F) << v20;
      if ((v26 & 0x80) == 0) {
        goto LABEL_23;
      }
      v20 += 7;
      BOOL v27 = v21++ >= 9;
      if (v27)
      {
        unint64_t v22 = 0;
        int v28 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_25;
      }
    }
    *(unsigned char *)(v3 + *v18) = 1;
LABEL_23:
    int v28 = *(unsigned __int8 *)(v3 + *v18);
    if (*(unsigned char *)(v3 + *v18)) {
      unint64_t v22 = 0;
    }
LABEL_25:
    if (v28 || (v22 & 7) == 4)
    {
LABEL_180:
      if (v15)
      {
        char v99 = 1;
        goto LABEL_190;
      }
      if (v16)
      {
        while (1)
        {
          int v100 = *v16++;
          __int16 v101 = 4096;
          switch(v100)
          {
            case 6:
              goto LABEL_188;
            case 8:
              __int16 v101 = 2048;
              goto LABEL_188;
            case 9:
              __int16 v101 = 0x2000;
              goto LABEL_188;
            case 14:
              __int16 v101 = 0x4000;
              goto LABEL_188;
            case 16:
              __int16 v101 = 1024;
LABEL_188:
              *(_WORD *)(a1 + 116) |= v101;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_191;
    }
    unint64_t v30 = v22 >> 3;
    BOOL v31 = v15;
    if ((v106 & 1) == 0)
    {
      int v32 = v16;
      do
      {
        int v34 = *v32++;
        int v33 = v34;
        BOOL v31 = v34 != 0;
        if (v34) {
          BOOL v35 = v33 == v30;
        }
        else {
          BOOL v35 = 1;
        }
      }
      while (!v35);
    }
    switch((int)v30)
    {
      case 1:
        if ((v8 & 1) == 0) {
          goto LABEL_129;
        }
        char v36 = 0;
        unsigned int v37 = 0;
        uint64_t v38 = 0;
        *(_WORD *)(a1 + 116) |= 0x20u;
        while (1)
        {
          uint64_t v39 = *v17;
          uint64_t v40 = *(void *)(v3 + v39);
          unint64_t v41 = v40 + 1;
          if (v40 == -1 || v41 > *(void *)(v3 + *v6)) {
            break;
          }
          char v42 = *(unsigned char *)(*(void *)(v3 + *v19) + v40);
          *(void *)(v3 + v39) = v41;
          v38 |= (unint64_t)(v42 & 0x7F) << v36;
          if ((v42 & 0x80) == 0) {
            goto LABEL_132;
          }
          v36 += 7;
          BOOL v27 = v37++ >= 9;
          if (v27)
          {
            LODWORD(v38) = 0;
            goto LABEL_134;
          }
        }
        *(unsigned char *)(v3 + *v18) = 1;
LABEL_132:
        if (*(unsigned char *)(v3 + *v18)) {
          LODWORD(v38) = 0;
        }
LABEL_134:
        uint64_t v96 = 96;
        goto LABEL_163;
      case 2:
        if ((v8 & 1) == 0) {
          goto LABEL_129;
        }
        char v43 = 0;
        unsigned int v44 = 0;
        uint64_t v38 = 0;
        *(_WORD *)(a1 + 116) |= 0x100u;
        while (2)
        {
          uint64_t v45 = *v17;
          uint64_t v46 = *(void *)(v3 + v45);
          unint64_t v47 = v46 + 1;
          if (v46 == -1 || v47 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v48 = *(unsigned char *)(*(void *)(v3 + *v19) + v46);
            *(void *)(v3 + v45) = v47;
            v38 |= (unint64_t)(v48 & 0x7F) << v43;
            if (v48 < 0)
            {
              v43 += 7;
              BOOL v27 = v44++ >= 9;
              if (v27)
              {
                LODWORD(v38) = 0;
                goto LABEL_138;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          LODWORD(v38) = 0;
        }
LABEL_138:
        uint64_t v96 = 108;
        goto LABEL_163;
      case 3:
        if ((v8 & 1) == 0) {
          goto LABEL_129;
        }
        char v49 = 0;
        unsigned int v50 = 0;
        uint64_t v38 = 0;
        *(_WORD *)(a1 + 116) |= 0x10u;
        while (2)
        {
          uint64_t v51 = *v17;
          uint64_t v52 = *(void *)(v3 + v51);
          unint64_t v53 = v52 + 1;
          if (v52 == -1 || v53 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v54 = *(unsigned char *)(*(void *)(v3 + *v19) + v52);
            *(void *)(v3 + v51) = v53;
            v38 |= (unint64_t)(v54 & 0x7F) << v49;
            if (v54 < 0)
            {
              v49 += 7;
              BOOL v27 = v50++ >= 9;
              if (v27)
              {
                LODWORD(v38) = 0;
                goto LABEL_142;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          LODWORD(v38) = 0;
        }
LABEL_142:
        uint64_t v96 = 92;
        goto LABEL_163;
      case 4:
        if ((v8 & 1) == 0) {
          goto LABEL_129;
        }
        char v55 = 0;
        unsigned int v56 = 0;
        uint64_t v38 = 0;
        *(_WORD *)(a1 + 116) |= 0x80u;
        while (2)
        {
          uint64_t v57 = *v17;
          uint64_t v58 = *(void *)(v3 + v57);
          unint64_t v59 = v58 + 1;
          if (v58 == -1 || v59 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v60 = *(unsigned char *)(*(void *)(v3 + *v19) + v58);
            *(void *)(v3 + v57) = v59;
            v38 |= (unint64_t)(v60 & 0x7F) << v55;
            if (v60 < 0)
            {
              v55 += 7;
              BOOL v27 = v56++ >= 9;
              if (v27)
              {
                LODWORD(v38) = 0;
                goto LABEL_146;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          LODWORD(v38) = 0;
        }
LABEL_146:
        uint64_t v96 = 104;
        goto LABEL_163;
      case 6:
        if (!v31 || (*(_WORD *)(a1 + 116) & 0x1000) != 0) {
          goto LABEL_129;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_197;
        }
        unint64_t v104 = objc_alloc_init(GEORouteIncident);
        if (GEORouteIncidentReadAllFrom((uint64_t)v104, (void *)v3, v9 & 1))
        {
          PBReaderRecallMark();
          -[GEOTrafficRerouteFeedback _addNoFlagsOldRouteIncidents:](a1, v104);

LABEL_173:
          char v15 = v105;
          uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
LABEL_179:
          if (!(v15 & 1 | (v7 != 0))) {
            goto LABEL_180;
          }
          continue;
        }

LABEL_197:
        char v99 = 0;
        char v15 = v105;
        uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
LABEL_190:
        *(_WORD *)(a1 + 116) |= 0x1000u;
        *(_WORD *)(a1 + 116) |= 0x800u;
        *(_WORD *)(a1 + 116) |= 0x2000u;
        *(_WORD *)(a1 + 116) |= 0x4000u;
        *(_WORD *)(a1 + 116) |= 0x400u;
        if (v99)
        {
LABEL_191:
          unint64_t v3 = *(unsigned char *)(v3 + *v18) == 0;
          if (v15) {
            goto LABEL_192;
          }
        }
        else
        {
          unint64_t v3 = 0;
          if (v15)
          {
LABEL_192:
            uint64_t v102 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = 0;
          }
        }
        return v3;
      case 8:
        if (!v31) {
          goto LABEL_129;
        }
        if ((*(_WORD *)(a1 + 116) & 0x800) == 0)
        {
          uint64_t v62 = PBReaderReadData();
          uint64_t v63 = 40;
          goto LABEL_124;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_197;
        }
        __int16 v97 = 16 * *(_WORD *)(a1 + 116);
        goto LABEL_172;
      case 9:
        if (!v31) {
          goto LABEL_129;
        }
        if ((*(_WORD *)(a1 + 116) & 0x2000) == 0)
        {
          uint64_t v62 = PBReaderReadData();
          uint64_t v63 = 56;
          goto LABEL_124;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_197;
        }
        __int16 v97 = 4 * *(_WORD *)(a1 + 116);
        goto LABEL_172;
      case 10:
        if ((v8 & 1) == 0) {
          goto LABEL_129;
        }
        char v64 = 0;
        unsigned int v65 = 0;
        uint64_t v38 = 0;
        *(_WORD *)(a1 + 116) |= 4u;
        while (2)
        {
          uint64_t v66 = *v17;
          uint64_t v67 = *(void *)(v3 + v66);
          unint64_t v68 = v67 + 1;
          if (v67 == -1 || v68 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v69 = *(unsigned char *)(*(void *)(v3 + *v19) + v67);
            *(void *)(v3 + v66) = v68;
            v38 |= (unint64_t)(v69 & 0x7F) << v64;
            if (v69 < 0)
            {
              v64 += 7;
              BOOL v27 = v65++ >= 9;
              if (v27)
              {
                LODWORD(v38) = 0;
                goto LABEL_150;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          LODWORD(v38) = 0;
        }
LABEL_150:
        uint64_t v96 = 84;
        goto LABEL_163;
      case 11:
        if ((v8 & 1) == 0) {
          goto LABEL_129;
        }
        char v70 = 0;
        unsigned int v71 = 0;
        uint64_t v38 = 0;
        *(_WORD *)(a1 + 116) |= 8u;
        while (2)
        {
          uint64_t v72 = *v17;
          uint64_t v73 = *(void *)(v3 + v72);
          unint64_t v74 = v73 + 1;
          if (v73 == -1 || v74 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v75 = *(unsigned char *)(*(void *)(v3 + *v19) + v73);
            *(void *)(v3 + v72) = v74;
            v38 |= (unint64_t)(v75 & 0x7F) << v70;
            if (v75 < 0)
            {
              v70 += 7;
              BOOL v27 = v71++ >= 9;
              if (v27)
              {
                LODWORD(v38) = 0;
                goto LABEL_154;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          LODWORD(v38) = 0;
        }
LABEL_154:
        uint64_t v96 = 88;
        goto LABEL_163;
      case 12:
        if ((v8 & 1) == 0) {
          goto LABEL_129;
        }
        char v76 = 0;
        unsigned int v77 = 0;
        uint64_t v78 = 0;
        *(_WORD *)(a1 + 116) |= 0x200u;
        while (2)
        {
          uint64_t v79 = *v17;
          uint64_t v80 = *(void *)(v3 + v79);
          unint64_t v81 = v80 + 1;
          if (v80 == -1 || v81 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v82 = *(unsigned char *)(*(void *)(v3 + *v19) + v80);
            *(void *)(v3 + v79) = v81;
            v78 |= (unint64_t)(v82 & 0x7F) << v76;
            if (v82 < 0)
            {
              v76 += 7;
              BOOL v27 = v77++ >= 9;
              if (v27)
              {
                uint64_t v78 = 0;
                goto LABEL_158;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          uint64_t v78 = 0;
        }
LABEL_158:
        *(unsigned char *)(a1 + 112) = v78 != 0;
        goto LABEL_179;
      case 13:
        if ((v8 & 1) == 0) {
          goto LABEL_129;
        }
        char v83 = 0;
        unsigned int v84 = 0;
        uint64_t v38 = 0;
        *(_WORD *)(a1 + 116) |= 0x40u;
        while (2)
        {
          uint64_t v85 = *v17;
          uint64_t v86 = *(void *)(v3 + v85);
          unint64_t v87 = v86 + 1;
          if (v86 == -1 || v87 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v88 = *(unsigned char *)(*(void *)(v3 + *v19) + v86);
            *(void *)(v3 + v85) = v87;
            v38 |= (unint64_t)(v88 & 0x7F) << v83;
            if (v88 < 0)
            {
              v83 += 7;
              BOOL v27 = v84++ >= 9;
              if (v27)
              {
                LODWORD(v38) = 0;
                goto LABEL_162;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          LODWORD(v38) = 0;
        }
LABEL_162:
        uint64_t v96 = 100;
LABEL_163:
        *(_DWORD *)(a1 + v96) = v38;
        goto LABEL_179;
      case 14:
        if (!v31) {
          goto LABEL_129;
        }
        if ((*(_WORD *)(a1 + 116) & 0x4000) == 0)
        {
          uint64_t v62 = PBReaderReadData();
          uint64_t v63 = 64;
          goto LABEL_124;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_197;
        }
        __int16 v97 = 2 * *(_WORD *)(a1 + 116);
        goto LABEL_172;
      case 15:
        if ((v8 & 1) == 0) {
          goto LABEL_129;
        }
        *(_WORD *)(a1 + 116) |= 1u;
        uint64_t v89 = *v17;
        unint64_t v90 = *(void *)(v3 + v89);
        if (v90 <= 0xFFFFFFFFFFFFFFF7 && v90 + 8 <= *(void *)(v3 + *v6))
        {
          uint64_t v91 = *(void *)(*(void *)(v3 + *v19) + v90);
          *(void *)(v3 + v89) = v90 + 8;
        }
        else
        {
          *(unsigned char *)(v3 + *v18) = 1;
          uint64_t v91 = 0;
        }
        uint64_t v98 = 16;
        goto LABEL_178;
      case 16:
        if (!v31) {
          goto LABEL_129;
        }
        if ((*(_WORD *)(a1 + 116) & 0x400) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_197;
          }
          __int16 v97 = 32 * *(_WORD *)(a1 + 116);
LABEL_172:
          v7 += v97 >> 15;
        }
        else
        {
          uint64_t v62 = PBReaderReadString();
          uint64_t v63 = 24;
LABEL_124:
          unint64_t v92 = *(void **)(a1 + v63);
          *(void *)(a1 + v63) = v62;

          --v7;
        }
        goto LABEL_173;
      case 17:
        if (v8)
        {
          *(_WORD *)(a1 + 116) |= 2u;
          uint64_t v93 = *v17;
          unint64_t v94 = *(void *)(v3 + v93);
          if (v94 <= 0xFFFFFFFFFFFFFFF7 && v94 + 8 <= *(void *)(v3 + *v6))
          {
            uint64_t v91 = *(void *)(*(void *)(v3 + *v19) + v94);
            *(void *)(v3 + v93) = v94 + 8;
          }
          else
          {
            *(unsigned char *)(v3 + *v18) = 1;
            uint64_t v91 = 0;
          }
          uint64_t v98 = 32;
LABEL_178:
          *(void *)(a1 + v98) = v91;
        }
        else
        {
LABEL_129:
          char v95 = PBReaderSkipValueWithTag();
          uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
          char v15 = v105;
          if ((v95 & 1) == 0)
          {
LABEL_189:
            char v99 = 0;
            goto LABEL_190;
          }
        }
        goto LABEL_179;
      default:
        int v61 = PBReaderSkipValueWithTag();
        uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
        char v15 = v105;
        if (!v61) {
          goto LABEL_189;
        }
        goto LABEL_179;
    }
  }
}

void sub_189BBBDA4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189BBBF14(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189BBC704(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189BBC8D8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189BBDA98(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOTrafficRerouteFeedbackCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v11 = *MEMORY[0x1E4F143B8];
  long long v6 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  id v1 = *(id *)(a1 + 48);
  uint64_t v2 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t v4 = *(void *)v7;
    do
    {
      uint64_t v5 = 0;
      do
      {
        if (*(void *)v7 != v4) {
          objc_enumerationMutation(v1);
        }
        objc_msgSend(*(id *)(*((void *)&v6 + 1) + 8 * v5++), "readAll:", 1, (void)v6);
      }
      while (v3 != v5);
      uint64_t v3 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
    }
    while (v3);
  }
}

unint64_t GEOTrafficRerouteFeedbackReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 76))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOTrafficRerouteFeedbackReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 80));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 72) = [v8 position];
  *(_DWORD *)(a1 + 76) = [v8 length];
  if (a3) {
    long long v9 = (int *)&GEOTrafficRerouteFeedbackReadAllFrom_recursiveTag;
  }
  else {
    long long v9 = (int *)&GEOTrafficRerouteFeedbackReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOTrafficRerouteFeedbackReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOTrafficRerouteFeedbackCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 80));
  return Specified;
}

void sub_189BBDD2C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOTrafficRerouteFeedbackReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOTrafficRerouteFeedbackReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189BBDD90(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189BBE16C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOTrafficRerouteFeedbackIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 80));
  BOOL v2 = *(unsigned __int16 *)(a1 + 116) > 0x3FFu;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 80));
  return v2;
}

void sub_189BBEA34(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189BBF5A0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOTransitDepartureSequenceUsageReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  long long v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  char v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  int v10 = ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1) + ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1);
  while (1)
  {
    unsigned int v11 = a3[v9];
    if (v11 >= 0xFFFFFFFE)
    {
      char v7 = 1;
      goto LABEL_9;
    }
    if (v11 != -3) {
      break;
    }
    char v8 = 1;
LABEL_9:
    ++v9;
  }
  if (v11)
  {
    ++v10;
    goto LABEL_9;
  }
  int v12 = v7 & 1 | v10;
  BOOL v13 = v12 != 0;
  if ((v12 != 0) | v8 & 1) {
    BOOL v14 = 0;
  }
  else {
    BOOL v14 = a3;
  }
  if (v12) {
    BOOL v15 = 1;
  }
  else {
    BOOL v15 = v14 == 0;
  }
  BOOL v52 = v15;
  int v16 = (int *)MEMORY[0x1E4F940E8];
  unsigned int v17 = (int *)MEMORY[0x1E4F940C8];
  uint64_t v18 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(void *)(v3 + *v16) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v17)) {
      goto LABEL_75;
    }
    char v19 = 0;
    unsigned int v20 = 0;
    unint64_t v21 = 0;
    while (1)
    {
      uint64_t v22 = *v16;
      uint64_t v23 = *(void *)(v3 + v22);
      unint64_t v24 = v23 + 1;
      if (v23 == -1 || v24 > *(void *)(v3 + *v6)) {
        break;
      }
      char v25 = *(unsigned char *)(*(void *)(v3 + *v18) + v23);
      *(void *)(v3 + v22) = v24;
      v21 |= (unint64_t)(v25 & 0x7F) << v19;
      if ((v25 & 0x80) == 0) {
        goto LABEL_27;
      }
      v19 += 7;
      BOOL v26 = v20++ >= 9;
      if (v26)
      {
        unint64_t v21 = 0;
        int v27 = *(unsigned __int8 *)(v3 + *v17);
        goto LABEL_29;
      }
    }
    *(unsigned char *)(v3 + *v17) = 1;
LABEL_27:
    int v27 = *(unsigned __int8 *)(v3 + *v17);
    if (*(unsigned char *)(v3 + *v17)) {
      unint64_t v21 = 0;
    }
LABEL_29:
    if (v27 || (v21 & 7) == 4)
    {
LABEL_75:
      if (v13)
      {
        char v47 = 1;
        goto LABEL_85;
      }
      if (!v14)
      {
LABEL_86:
        unint64_t v3 = *(unsigned char *)(v3 + *v17) == 0;
        if (!v13) {
          return v3;
        }
        goto LABEL_87;
      }
      while (1)
      {
        int v49 = *v14++;
        int v48 = v49;
        if (v49 == 2) {
          goto LABEL_83;
        }
        if (v48 == 3)
        {
          LOBYTE(v48) = 4;
LABEL_83:
          *(unsigned char *)(a1 + 52) |= v48;
        }
        else if (!v48)
        {
          goto LABEL_86;
        }
      }
    }
    unint64_t v29 = v21 >> 3;
    BOOL v30 = v13;
    if (!v52)
    {
      BOOL v31 = v14;
      do
      {
        int v33 = *v31++;
        int v32 = v33;
        BOOL v30 = v33 != 0;
        if (v33) {
          BOOL v34 = v32 == v29;
        }
        else {
          BOOL v34 = 1;
        }
      }
      while (!v34);
    }
    if (v29 == 3)
    {
      if (!v30) {
        goto LABEL_60;
      }
      if ((*(unsigned char *)(a1 + 52) & 4) == 0)
      {
        uint64_t v42 = PBReaderReadString();
        uint64_t v43 = 24;
LABEL_57:
        unsigned int v44 = *(void **)(a1 + v43);
        *(void *)(a1 + v43) = v42;

        --v9;
        goto LABEL_71;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        goto LABEL_84;
      }
      char v45 = 32 * *(unsigned char *)(a1 + 52);
LABEL_70:
      v9 += v45 >> 7;
      goto LABEL_71;
    }
    if (v29 != 2)
    {
      if (v29 == 1)
      {
        if (v8)
        {
          char v35 = 0;
          unsigned int v36 = 0;
          uint64_t v37 = 0;
          *(unsigned char *)(a1 + 52) |= 1u;
          while (1)
          {
            uint64_t v38 = *v16;
            uint64_t v39 = *(void *)(v3 + v38);
            unint64_t v40 = v39 + 1;
            if (v39 == -1 || v40 > *(void *)(v3 + *v6)) {
              break;
            }
            char v41 = *(unsigned char *)(*(void *)(v3 + *v18) + v39);
            *(void *)(v3 + v38) = v40;
            v37 |= (unint64_t)(v41 & 0x7F) << v35;
            if ((v41 & 0x80) == 0) {
              goto LABEL_63;
            }
            v35 += 7;
            BOOL v26 = v36++ >= 9;
            if (v26)
            {
              uint64_t v37 = 0;
              goto LABEL_65;
            }
          }
          *(unsigned char *)(v3 + *v17) = 1;
LABEL_63:
          if (*(unsigned char *)(v3 + *v17)) {
            uint64_t v37 = 0;
          }
LABEL_65:
          *(void *)(a1 + 32) = v37;
          goto LABEL_71;
        }
LABEL_60:
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_84;
        }
      }
      else if (!PBReaderSkipValueWithTag())
      {
        goto LABEL_84;
      }
LABEL_71:
      if (v9) {
        char v46 = 1;
      }
      else {
        char v46 = v13;
      }
      if ((v46 & 1) == 0) {
        goto LABEL_75;
      }
      continue;
    }
    break;
  }
  if (!v30) {
    goto LABEL_60;
  }
  if ((*(unsigned char *)(a1 + 52) & 2) == 0)
  {
    uint64_t v42 = PBReaderReadString();
    uint64_t v43 = 16;
    goto LABEL_57;
  }
  if (PBReaderSkipValueWithTag())
  {
    char v45 = *(unsigned char *)(a1 + 52) << 6;
    goto LABEL_70;
  }
LABEL_84:
  char v47 = 0;
LABEL_85:
  *(unsigned char *)(a1 + 52) |= 2u;
  *(unsigned char *)(a1 + 52) |= 4u;
  if (v47) {
    goto LABEL_86;
  }
  unint64_t v3 = 0;
  if (v13)
  {
LABEL_87:
    unsigned int v50 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_189BBFB98(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189BC0030(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOTransitDepartureSequenceUsageReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOTransitDepartureSequenceUsageReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)int v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOTransitDepartureSequenceUsageReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOTransitDepartureSequenceUsageReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOTransitDepartureSequenceUsageReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_189BC01BC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOTransitDepartureSequenceUsageReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOTransitDepartureSequenceUsageReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189BC0220(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOTransitDepartureSequenceUsageIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_38;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        goto LABEL_38;
      }
      unint64_t v17 = v8 >> 3;
      if ((v8 >> 3) == 3) {
        break;
      }
      if (v17 == 2)
      {
        if (v15 != 2) {
          goto LABEL_40;
        }
LABEL_32:
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_40;
        }
        goto LABEL_37;
      }
      if (v17 == 1)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_40;
        }
        unsigned int v18 = 0;
        while (1)
        {
          uint64_t v19 = *v2;
          uint64_t v20 = *(void *)&a1[v19];
          unint64_t v21 = v20 + 1;
          if (v20 == -1 || v21 > *(void *)&a1[*v3]) {
            break;
          }
          int v22 = *(char *)(*(void *)&a1[*v5] + v20);
          *(void *)&a1[v19] = v21;
          if (v22 < 0 && v18++ <= 8) {
            continue;
          }
          goto LABEL_37;
        }
        a1[*v4] = 1;
      }
      else if (!PBReaderSkipValueWithTag())
      {
LABEL_40:
        BOOL v24 = 0;
        goto LABEL_39;
      }
LABEL_37:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_38;
      }
    }
    if (v15 != 2) {
      goto LABEL_40;
    }
    goto LABEL_32;
  }
LABEL_38:
  BOOL v24 = a1[*v4] == 0;
LABEL_39:
  PBReaderRecallMark();
  return v24;
}

void sub_189BC05F4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOTransitDepartureSequenceUsageIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  BOOL v2 = (*(unsigned char *)(a1 + 52) & 0xE) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return v2;
}

void sub_189BC0918(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189BC0F44(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOTransitPlaceCardReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  char v7 = 0;
  uint64_t v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  unsigned int v11 = ((*(unsigned __int8 *)(a1 + 56) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 56) >> 2) & 1)
      + ((*(unsigned __int8 *)(a1 + 56) >> 1) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v8])
    {
      case -3:
        char v7 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        BOOL v14 = v11 > 1;
        char v15 = v10 | v14;
        if (((v10 | v14) | v7)) {
          int v16 = 0;
        }
        else {
          int v16 = a3;
        }
        char v58 = (v16 == 0) | v15;
        unint64_t v17 = (int *)MEMORY[0x1E4F940E8];
        unsigned int v18 = (int *)MEMORY[0x1E4F940C8];
        uint64_t v19 = (int *)MEMORY[0x1E4F940B8];
        uint64_t v20 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__flags;
        char v57 = v10 | v14;
        break;
      default:
        ++v11;
LABEL_6:
        uint64_t v12 = v9;
        uint64_t v13 = v10;
LABEL_8:
        ++v8;
        uint64_t v9 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v17) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v18)) {
      goto LABEL_74;
    }
    char v21 = 0;
    unsigned int v22 = 0;
    unint64_t v23 = 0;
    while (1)
    {
      uint64_t v24 = *v17;
      uint64_t v25 = *(void *)(v3 + v24);
      unint64_t v26 = v25 + 1;
      if (v25 == -1 || v26 > *(void *)(v3 + *v6)) {
        break;
      }
      char v27 = *(unsigned char *)(*(void *)(v3 + *v19) + v25);
      *(void *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0) {
        goto LABEL_23;
      }
      v21 += 7;
      BOOL v28 = v22++ >= 9;
      if (v28)
      {
        unint64_t v23 = 0;
        int v29 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_25;
      }
    }
    *(unsigned char *)(v3 + *v18) = 1;
LABEL_23:
    int v29 = *(unsigned __int8 *)(v3 + *v18);
    if (*(unsigned char *)(v3 + *v18)) {
      unint64_t v23 = 0;
    }
LABEL_25:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_74:
      if (v15)
      {
        char v52 = 1;
        goto LABEL_85;
      }
      if (v16)
      {
        while (1)
        {
          int v53 = *v16++;
          char v54 = 8;
          switch(v53)
          {
            case 0:
              goto LABEL_86;
            case 2:
              goto LABEL_80;
            case 3:
              char v54 = 4;
              goto LABEL_80;
            case 4:
              char v54 = 2;
LABEL_80:
              *(unsigned char *)(a1 + v20[781]) |= v54;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_86;
    }
    unint64_t v31 = v23 >> 3;
    BOOL v32 = v15;
    if ((v58 & 1) == 0)
    {
      int v33 = v16;
      do
      {
        int v35 = *v33++;
        int v34 = v35;
        BOOL v32 = v35 != 0;
        if (v35) {
          BOOL v36 = v34 == v31;
        }
        else {
          BOOL v36 = 1;
        }
      }
      while (!v36);
    }
    switch((int)v31)
    {
      case 1:
        if ((v7 & 1) == 0) {
          goto LABEL_59;
        }
        char v37 = 0;
        unsigned int v38 = 0;
        uint64_t v39 = 0;
        *(unsigned char *)(a1 + v20[781]) |= 1u;
        while (1)
        {
          uint64_t v40 = *v17;
          uint64_t v41 = *(void *)(v3 + v40);
          unint64_t v42 = v41 + 1;
          if (v41 == -1 || v42 > *(void *)(v3 + *v6)) {
            break;
          }
          char v43 = *(unsigned char *)(*(void *)(v3 + *v19) + v41);
          *(void *)(v3 + v40) = v42;
          v39 |= (unint64_t)(v43 & 0x7F) << v37;
          if ((v43 & 0x80) == 0) {
            goto LABEL_62;
          }
          v37 += 7;
          BOOL v28 = v38++ >= 9;
          if (v28)
          {
            LODWORD(v39) = 0;
            goto LABEL_64;
          }
        }
        *(unsigned char *)(v3 + *v18) = 1;
LABEL_62:
        if (*(unsigned char *)(v3 + *v18)) {
          LODWORD(v39) = 0;
        }
LABEL_64:
        *(_DWORD *)(a1 + 52) = v39;
        goto LABEL_73;
      case 2:
        if (!v32) {
          goto LABEL_59;
        }
        if ((*(unsigned char *)(a1 + v20[781]) & 8) == 0)
        {
          uint64_t v45 = PBReaderReadString();
          uint64_t v46 = 32;
          goto LABEL_58;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_82;
        }
        char v51 = 16 * *(unsigned char *)(a1 + v20[781]);
        goto LABEL_71;
      case 3:
        if (!v32) {
          goto LABEL_59;
        }
        if ((*(unsigned char *)(a1 + v20[781]) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_82;
          }
          char v51 = 32 * *(unsigned char *)(a1 + v20[781]);
LABEL_71:
          v8 += v51 >> 7;
LABEL_72:
          char v15 = v57;
          unsigned int v18 = (int *)MEMORY[0x1E4F940C8];
LABEL_73:
          if (!(v15 & 1 | (v8 != 0))) {
            goto LABEL_74;
          }
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_82;
        }
        char v47 = objc_alloc_init(GEOTransitDepartureSequenceUsage);
        if (GEOTransitDepartureSequenceUsageReadAllFrom((uint64_t)v47, (void *)v3, v9 & 1))
        {
          PBReaderRecallMark();
          int v48 = *(void **)(a1 + 24);
          *(void *)(a1 + 24) = v47;

          --v8;
          uint64_t v20 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__flags;
          goto LABEL_72;
        }

        char v52 = 0;
        uint64_t v20 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__flags;
LABEL_84:
        char v15 = v57;
        unsigned int v18 = (int *)MEMORY[0x1E4F940C8];
LABEL_85:
        *(unsigned char *)(a1 + v20[781]) |= 8u;
        *(unsigned char *)(a1 + v20[781]) |= 4u;
        *(unsigned char *)(a1 + v20[781]) |= 2u;
        if (v52)
        {
LABEL_86:
          unint64_t v3 = *(unsigned char *)(v3 + *v18) == 0;
          if (v15) {
            goto LABEL_87;
          }
        }
        else
        {
          unint64_t v3 = 0;
          if (v15)
          {
LABEL_87:
            char v55 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = 0;
          }
        }
        return v3;
      case 4:
        if (!v32)
        {
LABEL_59:
          char v50 = PBReaderSkipValueWithTag();
          unsigned int v18 = (int *)MEMORY[0x1E4F940C8];
          char v15 = v57;
          if ((v50 & 1) == 0)
          {
LABEL_81:
            char v52 = 0;
            goto LABEL_85;
          }
          goto LABEL_73;
        }
        if ((*(unsigned char *)(a1 + v20[781]) & 2) == 0)
        {
          uint64_t v45 = PBReaderReadString();
          uint64_t v46 = 16;
LABEL_58:
          int v49 = *(void **)(a1 + v46);
          *(void *)(a1 + v46) = v45;

          --v8;
          goto LABEL_72;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
        {
LABEL_82:
          char v52 = 0;
          goto LABEL_84;
        }
        char v51 = *(unsigned char *)(a1 + v20[781]) << 6;
        goto LABEL_71;
      default:
        int v44 = PBReaderSkipValueWithTag();
        unsigned int v18 = (int *)MEMORY[0x1E4F940C8];
        char v15 = v57;
        if (!v44) {
          goto LABEL_81;
        }
        goto LABEL_73;
    }
  }
}

void sub_189BC16B0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189BC181C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189BC1F10(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOTransitPlaceCardReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOTransitPlaceCardReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOTransitPlaceCardReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOTransitPlaceCardReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOTransitPlaceCardReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    [*(id *)(a1 + 24) readAll:1];
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_189BC20B4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOTransitPlaceCardReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOTransitPlaceCardReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189BC2118(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189BC22DC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOTransitPlaceCardIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  unsigned int v2 = *(unsigned __int8 *)(a1 + 56);
  if ((v2 & 0x18) != 0) {
    return 1;
  }
  if ((v2 & 4) != 0)
  {
    if (GEOTransitDepartureSequenceUsageIsDirty(*(void *)(a1 + 24))) {
      return 1;
    }
    unsigned int v2 = *(unsigned __int8 *)(a1 + 56);
  }
  return (v2 >> 1) & 1;
}

os_unfair_lock_s *GEOTransitPlaceCardIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOTransitPlaceCardIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 12);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_189BC2694(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189BC4078(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,char a37)
{
}

void sub_189BC4568(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 112), 8);
  _Unwind_Resume(a1);
}

void sub_189BC4AFC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,char a41)
{
}

void sub_189BC4D6C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189BC5338(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16, void *a17, uint64_t a18, uint64_t a19, char a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,id a25,char a26)
{
  _Block_object_dispose(&a20, 8);
  _Block_object_dispose(&a26, 8);

  _Unwind_Resume(a1);
}

void sub_189BC54C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_189BC5648(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189BC5A7C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189BC65B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, void *a15, uint64_t a16, void *a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,void *a27)
{
  _Unwind_Resume(a1);
}

void sub_189BC67A8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189BC6960(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189BC69CC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189BC6A2C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189BC6B14(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189BC6DB8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189BC6EDC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_189BC6FA8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_189BC714C(_Unwind_Exception *a1)
{
}

void _GEOConfigPostKeyExpirysChangedNotificationSource(void *a1, uint64_t a2)
{
  id v3 = a1;
  uint64_t v4 = v3;
  uint64_t v5 = 983040;
  switch(a2)
  {
    case 0:
      if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
      {
        *(_WORD *)char v6 = 0;
        _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Assertion failed: source != GEODefaultsSourceNone", v6, 2u);
      }
      goto LABEL_4;
    case 1:
    case 4:
    case 5:
    case 9:
      uint64_t v5 = 0;
      goto LABEL_3;
    case 3:
      uint64_t v5 = 0x10000;
      goto LABEL_3;
    case 6:
      uint64_t v5 = 0x20000;
      goto LABEL_3;
    case 7:
      uint64_t v5 = 0x40000;
      goto LABEL_3;
    case 8:
      uint64_t v5 = 0x80000;
      goto LABEL_3;
    default:
LABEL_3:
      _GEOConfigPostKeyExpirysChangedNotificationOptions(v3, v5);
LABEL_4:

      return;
  }
}

void _GEOConfigPostKeyExpirysChangedNotificationOptions(void *a1, uint64_t a2)
{
  v9[2] = *MEMORY[0x1E4F143B8];
  id v3 = a1;
  if (a2)
  {
    uint64_t v4 = [MEMORY[0x1E4F28EB8] defaultCenter];
    v8[0] = @"keys";
    v8[1] = @"options";
    v9[0] = v3;
    uint64_t v5 = [NSNumber numberWithUnsignedInteger:a2];
    v9[1] = v5;
    char v6 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:v9 forKeys:v8 count:2];
    [v4 postNotificationName:@"_GEOConfigExpireChangedNotification" object:0 userInfo:v6];
  }
  else if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
  {
    *(_WORD *)char v7 = 0;
    _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Assertion failed: options != GEOConfigOption_None", v7, 2u);
  }
}

void _GEORemoveChangeListenerForKeys(void *a1)
{
  id v4 = a1;
  if ([v4 count] && _GEODefaultsUseServer)
  {
    uint64_t v1 = [[GEOConfigRemoveChangeListenerRequest alloc] initWithTraits:0 auditToken:0 throttleToken:0];
    unsigned int v2 = [v4 allObjects];
    [(GEOConfigRemoveChangeListenerRequest *)v1 setKeys:v2];

    id v3 = _GEODefaultsServerConnection();
    [(GEOXPCRequest *)v1 send:v3];
  }
}

BOOL GEOPDABClientDatasetMetadataReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOPDABClientDatasetMetadataReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189BC8A58(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDABClientDatasetMetadataIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  unsigned int v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  id v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_39;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        unint64_t v10 = *(void *)&a1[v9];
        if (v10 == -1 || v10 >= *(void *)&a1[*v3]) {
          break;
        }
        char v11 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v13 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      if (v13 || (v8 & 7) == 4) {
        goto LABEL_39;
      }
      if ((v8 >> 3) == 2) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_41;
        }
        unsigned int v15 = 0;
        while (1)
        {
          uint64_t v16 = *v2;
          unint64_t v17 = *(void *)&a1[v16];
          if (v17 == -1 || v17 >= *(void *)&a1[*v3]) {
            break;
          }
          unint64_t v18 = v17 + 1;
          int v19 = *(char *)(*(void *)&a1[*v5] + v17);
          *(void *)&a1[v16] = v18;
          if (v19 < 0)
          {
            BOOL v20 = v15++ > 8;
            if (!v20) {
              continue;
            }
          }
          goto LABEL_38;
        }
LABEL_36:
        a1[*v4] = 1;
        goto LABEL_38;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_41:
        BOOL v26 = 0;
        goto LABEL_40;
      }
LABEL_38:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_39;
      }
    }
    if ((v8 & 7) != 0) {
      goto LABEL_41;
    }
    unsigned int v21 = 0;
    while (1)
    {
      uint64_t v22 = *v2;
      unint64_t v23 = *(void *)&a1[v22];
      if (v23 == -1 || v23 >= *(void *)&a1[*v3]) {
        goto LABEL_36;
      }
      unint64_t v24 = v23 + 1;
      int v25 = *(char *)(*(void *)&a1[*v5] + v23);
      *(void *)&a1[v22] = v24;
      if (v25 < 0)
      {
        BOOL v20 = v21++ > 8;
        if (!v20) {
          continue;
        }
      }
      goto LABEL_38;
    }
  }
LABEL_39:
  BOOL v26 = a1[*v4] == 0;
LABEL_40:
  PBReaderRecallMark();
  return v26;
}

BOOL GEOPDDatasetABStatusReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOPDDatasetABStatusReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189BC94D8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189BCAA00(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189BCB47C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t GEOMapQueryReadSpecified(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 68);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 64)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  char v11 = (const float *)(a1 + 120);
  uint32x4_t v12 = (uint32x4_t)vld1q_dup_f32(v11);
  v13.i64[0] = 0x100000001;
  v13.i64[1] = 0x100000001;
  unsigned int v14 = vaddvq_s32((int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v12, (uint32x4_t)xmmword_18A63A190), v13));
  while (2)
  {
    uint64_t v15 = 1;
    uint64_t v16 = 1;
    switch(a3[v7])
    {
      case -3:
        char v8 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v15 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        BOOL v17 = v14 > 2;
        char v18 = v10 | v17;
        if (((v10 | v17) | v8)) {
          int v19 = 0;
        }
        else {
          int v19 = a3;
        }
        BOOL v20 = (int *)MEMORY[0x1E4F940E8];
        unsigned int v21 = (int *)MEMORY[0x1E4F940C8];
        char v109 = (v19 == 0) | v18;
        uint64_t v22 = (int *)MEMORY[0x1E4F940B8];
        char v108 = v10 | v17;
        break;
      default:
        ++v14;
LABEL_6:
        uint64_t v15 = v9;
        uint64_t v16 = v10;
LABEL_8:
        ++v7;
        uint64_t v9 = v15;
        uint64_t v10 = v16;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v21)) {
      goto LABEL_209;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      unint64_t v27 = *(void *)(v3 + v26);
      if (v27 == -1 || v27 >= *(void *)(v3 + *v6)) {
        break;
      }
      char v28 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v27 + 1;
      v25 |= (unint64_t)(v28 & 0x7F) << v23;
      if ((v28 & 0x80) == 0) {
        goto LABEL_23;
      }
      v23 += 7;
      BOOL v29 = v24++ >= 9;
      if (v29)
      {
        unint64_t v25 = 0;
        int v30 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_25;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_23:
    int v30 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_25:
    if (v30 || (v25 & 7) == 4)
    {
LABEL_209:
      if (v18)
      {
        char v101 = 1;
        goto LABEL_211;
      }
      if (!v19) {
        goto LABEL_226;
      }
      while (1)
      {
        while (1)
        {
          int v103 = *v19++;
          int v102 = v103;
          if (v103 <= 13) {
            break;
          }
          if (v102 == 14)
          {
            int v104 = 0x8000;
LABEL_224:
            *(_DWORD *)(a1 + 120) |= v104;
          }
          else if (v102 == 16)
          {
            int v104 = 0x2000;
            goto LABEL_224;
          }
        }
        switch(v102)
        {
          case 1:
            int v104 = 0x4000;
            goto LABEL_224;
          case 13:
            int v104 = 4096;
            goto LABEL_224;
          case 0:
            goto LABEL_226;
        }
      }
    }
    unint64_t v32 = v25 >> 3;
    BOOL v33 = v18;
    if ((v109 & 1) == 0)
    {
      int v34 = v19;
      do
      {
        int v36 = *v34++;
        int v35 = v36;
        BOOL v33 = v36 != 0;
        if (v36) {
          BOOL v37 = v35 == v32;
        }
        else {
          BOOL v37 = 1;
        }
      }
      while (!v37);
    }
    switch((int)v32)
    {
      case 1:
        if (!v33) {
          goto LABEL_151;
        }
        if ((*(unsigned char *)(a1 + 121) & 0x40) == 0)
        {
          uint64_t v38 = PBReaderReadString();
          uint64_t v39 = *(void **)(a1 + 48);
          *(void *)(a1 + 48) = v38;
          goto LABEL_150;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_231;
        }
        int v100 = (int)(*(_DWORD *)(a1 + 120) << 17) >> 31;
        goto LABEL_206;
      case 2:
        if ((v8 & 1) == 0) {
          goto LABEL_151;
        }
        char v41 = 0;
        unsigned int v42 = 0;
        uint64_t v43 = 0;
        *(_DWORD *)(a1 + 120) |= 0x100u;
        while (2)
        {
          uint64_t v44 = *v20;
          unint64_t v45 = *(void *)(v3 + v44);
          if (v45 == -1 || v45 >= *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v46 = *(unsigned char *)(*(void *)(v3 + *v22) + v45);
            *(void *)(v3 + v44) = v45 + 1;
            v43 |= (unint64_t)(v46 & 0x7F) << v41;
            if (v46 < 0)
            {
              v41 += 7;
              BOOL v29 = v42++ >= 9;
              if (v29)
              {
                LODWORD(v43) = 0;
                goto LABEL_156;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          LODWORD(v43) = 0;
        }
LABEL_156:
        uint64_t v99 = 104;
        goto LABEL_197;
      case 3:
        if ((v8 & 1) == 0) {
          goto LABEL_151;
        }
        char v47 = 0;
        unsigned int v48 = 0;
        uint64_t v43 = 0;
        *(_DWORD *)(a1 + 120) |= 0x10u;
        while (2)
        {
          uint64_t v49 = *v20;
          unint64_t v50 = *(void *)(v3 + v49);
          if (v50 == -1 || v50 >= *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v51 = *(unsigned char *)(*(void *)(v3 + *v22) + v50);
            *(void *)(v3 + v49) = v50 + 1;
            v43 |= (unint64_t)(v51 & 0x7F) << v47;
            if (v51 < 0)
            {
              v47 += 7;
              BOOL v29 = v48++ >= 9;
              if (v29)
              {
                LODWORD(v43) = 0;
                goto LABEL_160;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          LODWORD(v43) = 0;
        }
LABEL_160:
        uint64_t v99 = 88;
        goto LABEL_197;
      case 4:
        if ((v8 & 1) == 0) {
          goto LABEL_151;
        }
        char v52 = 0;
        unsigned int v53 = 0;
        uint64_t v43 = 0;
        *(_DWORD *)(a1 + 120) |= 0x20u;
        while (2)
        {
          uint64_t v54 = *v20;
          unint64_t v55 = *(void *)(v3 + v54);
          if (v55 == -1 || v55 >= *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v56 = *(unsigned char *)(*(void *)(v3 + *v22) + v55);
            *(void *)(v3 + v54) = v55 + 1;
            v43 |= (unint64_t)(v56 & 0x7F) << v52;
            if (v56 < 0)
            {
              v52 += 7;
              BOOL v29 = v53++ >= 9;
              if (v29)
              {
                LODWORD(v43) = 0;
                goto LABEL_164;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          LODWORD(v43) = 0;
        }
LABEL_164:
        uint64_t v99 = 92;
        goto LABEL_197;
      case 5:
        if ((v8 & 1) == 0) {
          goto LABEL_151;
        }
        char v57 = 0;
        unsigned int v58 = 0;
        uint64_t v43 = 0;
        *(_DWORD *)(a1 + 120) |= 0x40u;
        while (2)
        {
          uint64_t v59 = *v20;
          unint64_t v60 = *(void *)(v3 + v59);
          if (v60 == -1 || v60 >= *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v61 = *(unsigned char *)(*(void *)(v3 + *v22) + v60);
            *(void *)(v3 + v59) = v60 + 1;
            v43 |= (unint64_t)(v61 & 0x7F) << v57;
            if (v61 < 0)
            {
              v57 += 7;
              BOOL v29 = v58++ >= 9;
              if (v29)
              {
                LODWORD(v43) = 0;
                goto LABEL_168;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          LODWORD(v43) = 0;
        }
LABEL_168:
        uint64_t v99 = 96;
        goto LABEL_197;
      case 6:
        if ((v8 & 1) == 0) {
          goto LABEL_151;
        }
        char v62 = 0;
        unsigned int v63 = 0;
        uint64_t v43 = 0;
        *(_DWORD *)(a1 + 120) |= 0x80u;
        while (2)
        {
          uint64_t v64 = *v20;
          unint64_t v65 = *(void *)(v3 + v64);
          if (v65 == -1 || v65 >= *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v66 = *(unsigned char *)(*(void *)(v3 + *v22) + v65);
            *(void *)(v3 + v64) = v65 + 1;
            v43 |= (unint64_t)(v66 & 0x7F) << v62;
            if (v66 < 0)
            {
              v62 += 7;
              BOOL v29 = v63++ >= 9;
              if (v29)
              {
                LODWORD(v43) = 0;
                goto LABEL_172;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          LODWORD(v43) = 0;
        }
LABEL_172:
        uint64_t v99 = 100;
        goto LABEL_197;
      case 7:
        if ((v8 & 1) == 0) {
          goto LABEL_151;
        }
        char v67 = 0;
        unsigned int v68 = 0;
        uint64_t v43 = 0;
        *(_DWORD *)(a1 + 120) |= 0x800u;
        while (2)
        {
          uint64_t v69 = *v20;
          unint64_t v70 = *(void *)(v3 + v69);
          if (v70 == -1 || v70 >= *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v71 = *(unsigned char *)(*(void *)(v3 + *v22) + v70);
            *(void *)(v3 + v69) = v70 + 1;
            v43 |= (unint64_t)(v71 & 0x7F) << v67;
            if (v71 < 0)
            {
              v67 += 7;
              BOOL v29 = v68++ >= 9;
              if (v29)
              {
                LODWORD(v43) = 0;
                goto LABEL_176;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          LODWORD(v43) = 0;
        }
LABEL_176:
        uint64_t v99 = 116;
        goto LABEL_197;
      case 8:
        if ((v8 & 1) == 0) {
          goto LABEL_151;
        }
        char v72 = 0;
        unsigned int v73 = 0;
        uint64_t v43 = 0;
        *(_DWORD *)(a1 + 120) |= 2u;
        while (2)
        {
          uint64_t v74 = *v20;
          unint64_t v75 = *(void *)(v3 + v74);
          if (v75 == -1 || v75 >= *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v76 = *(unsigned char *)(*(void *)(v3 + *v22) + v75);
            *(void *)(v3 + v74) = v75 + 1;
            v43 |= (unint64_t)(v76 & 0x7F) << v72;
            if (v76 < 0)
            {
              v72 += 7;
              BOOL v29 = v73++ >= 9;
              if (v29)
              {
                LODWORD(v43) = 0;
                goto LABEL_180;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          LODWORD(v43) = 0;
        }
LABEL_180:
        uint64_t v99 = 76;
        goto LABEL_197;
      case 9:
        if ((v8 & 1) == 0) {
          goto LABEL_151;
        }
        char v77 = 0;
        unsigned int v78 = 0;
        uint64_t v43 = 0;
        *(_DWORD *)(a1 + 120) |= 0x200u;
        while (2)
        {
          uint64_t v79 = *v20;
          unint64_t v80 = *(void *)(v3 + v79);
          if (v80 == -1 || v80 >= *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v81 = *(unsigned char *)(*(void *)(v3 + *v22) + v80);
            *(void *)(v3 + v79) = v80 + 1;
            v43 |= (unint64_t)(v81 & 0x7F) << v77;
            if (v81 < 0)
            {
              v77 += 7;
              BOOL v29 = v78++ >= 9;
              if (v29)
              {
                LODWORD(v43) = 0;
                goto LABEL_184;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          LODWORD(v43) = 0;
        }
LABEL_184:
        uint64_t v99 = 108;
        goto LABEL_197;
      case 10:
        if ((v8 & 1) == 0) {
          goto LABEL_151;
        }
        char v82 = 0;
        unsigned int v83 = 0;
        uint64_t v43 = 0;
        *(_DWORD *)(a1 + 120) |= 0x400u;
        while (2)
        {
          uint64_t v84 = *v20;
          unint64_t v85 = *(void *)(v3 + v84);
          if (v85 == -1 || v85 >= *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v86 = *(unsigned char *)(*(void *)(v3 + *v22) + v85);
            *(void *)(v3 + v84) = v85 + 1;
            v43 |= (unint64_t)(v86 & 0x7F) << v82;
            if (v86 < 0)
            {
              v82 += 7;
              BOOL v29 = v83++ >= 9;
              if (v29)
              {
                LODWORD(v43) = 0;
                goto LABEL_188;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          LODWORD(v43) = 0;
        }
LABEL_188:
        uint64_t v99 = 112;
        goto LABEL_197;
      case 11:
        if ((v8 & 1) == 0) {
          goto LABEL_151;
        }
        char v87 = 0;
        unsigned int v88 = 0;
        uint64_t v43 = 0;
        *(_DWORD *)(a1 + 120) |= 8u;
        while (2)
        {
          uint64_t v89 = *v20;
          unint64_t v90 = *(void *)(v3 + v89);
          if (v90 == -1 || v90 >= *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v91 = *(unsigned char *)(*(void *)(v3 + *v22) + v90);
            *(void *)(v3 + v89) = v90 + 1;
            v43 |= (unint64_t)(v91 & 0x7F) << v87;
            if (v91 < 0)
            {
              v87 += 7;
              BOOL v29 = v88++ >= 9;
              if (v29)
              {
                LODWORD(v43) = 0;
                goto LABEL_192;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          LODWORD(v43) = 0;
        }
LABEL_192:
        uint64_t v99 = 84;
        goto LABEL_197;
      case 12:
        if ((v8 & 1) == 0) {
          goto LABEL_151;
        }
        char v92 = 0;
        unsigned int v93 = 0;
        uint64_t v43 = 0;
        *(_DWORD *)(a1 + 120) |= 4u;
        while (2)
        {
          uint64_t v94 = *v20;
          unint64_t v95 = *(void *)(v3 + v94);
          if (v95 == -1 || v95 >= *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v96 = *(unsigned char *)(*(void *)(v3 + *v22) + v95);
            *(void *)(v3 + v94) = v95 + 1;
            v43 |= (unint64_t)(v96 & 0x7F) << v92;
            if (v96 < 0)
            {
              v92 += 7;
              BOOL v29 = v93++ >= 9;
              if (v29)
              {
                LODWORD(v43) = 0;
                goto LABEL_196;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          LODWORD(v43) = 0;
        }
LABEL_196:
        uint64_t v99 = 80;
LABEL_197:
        *(_DWORD *)(a1 + v99) = v43;
        goto LABEL_208;
      case 13:
        if (!v33) {
          goto LABEL_151;
        }
        if ((*(unsigned char *)(a1 + 121) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_231;
          }
          int v100 = (int)(*(_DWORD *)(a1 + 120) << 19) >> 31;
          goto LABEL_206;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_231;
        }
        unint64_t v107 = objc_alloc_init(GEOMapRegion);
        if (!GEOMapRegionReadAllFrom((uint64_t)v107, (void *)v3)) {
          goto LABEL_230;
        }
        PBReaderRecallMark();
        uint64_t v97 = 32;
        goto LABEL_149;
      case 14:
        if (!v33) {
          goto LABEL_151;
        }
        if ((*(unsigned char *)(a1 + 121) & 0x80) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_231;
          }
          int v100 = (int)(*(_DWORD *)(a1 + 120) << 16) >> 31;
          goto LABEL_206;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_231;
        }
        unint64_t v107 = objc_alloc_init(GEOLocation);
        if (!GEOLocationReadAllFrom((uint64_t)v107, (void *)v3, v9 & 1)) {
          goto LABEL_230;
        }
        PBReaderRecallMark();
        uint64_t v97 = 56;
        goto LABEL_149;
      case 15:
        if ((v8 & 1) == 0) {
          goto LABEL_151;
        }
        if (!PBReaderPlaceMark() || (GEOSessionIDReadAllFrom((void *)(a1 + 16), v3) & 1) == 0) {
          goto LABEL_231;
        }
        PBReaderRecallMark();
        *(_DWORD *)(a1 + 120) |= 1u;
        goto LABEL_207;
      case 16:
        if (!v33)
        {
LABEL_151:
          char v98 = PBReaderSkipValueWithTag();
          unsigned int v21 = (int *)MEMORY[0x1E4F940C8];
          char v18 = v108;
          if ((v98 & 1) == 0)
          {
LABEL_229:
            char v101 = 0;
            goto LABEL_211;
          }
LABEL_208:
          if (!(v18 & 1 | (v7 != 0))) {
            goto LABEL_209;
          }
          continue;
        }
        if ((*(unsigned char *)(a1 + 121) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_231;
          }
          int v100 = (int)(*(_DWORD *)(a1 + 120) << 18) >> 31;
LABEL_206:
          v7 += v100;
LABEL_207:
          char v18 = v108;
          unsigned int v21 = (int *)MEMORY[0x1E4F940C8];
          goto LABEL_208;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_231;
        }
        unint64_t v107 = objc_alloc_init(GEOPlaceSearchRequest);
        if (GEOPlaceSearchRequestReadAllFrom((uint64_t)v107, (void *)v3, v9 & 1))
        {
          PBReaderRecallMark();
          uint64_t v97 = 40;
LABEL_149:
          uint64_t v39 = *(void **)(a1 + v97);
          *(void *)(a1 + v97) = v107;
LABEL_150:

          --v7;
          goto LABEL_207;
        }
LABEL_230:

LABEL_231:
        char v101 = 0;
        char v18 = v108;
        unsigned int v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_211:
        *(_DWORD *)(a1 + 120) |= 0x4000u;
        *(_DWORD *)(a1 + 120) |= 0x1000u;
        *(_DWORD *)(a1 + 120) |= 0x8000u;
        *(_DWORD *)(a1 + 120) |= 0x2000u;
        if (v101)
        {
LABEL_226:
          uint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
          if (v18) {
            goto LABEL_227;
          }
          return v3;
        }
        uint64_t v3 = 0;
        if ((v18 & 1) == 0) {
          return v3;
        }
LABEL_227:
        char v105 = *(void **)(a1 + 8);
        *(void *)(a1 + 8) = 0;

        return v3;
      default:
        int v40 = PBReaderSkipValueWithTag();
        unsigned int v21 = (int *)MEMORY[0x1E4F940C8];
        char v18 = v108;
        if (!v40) {
          goto LABEL_229;
        }
        goto LABEL_208;
    }
  }
}

void sub_189BCC544(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189BCC600(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189BCC784(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189BCCEEC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189BCD004(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t GEOMapQueryReadAllFrom(uint64_t a1, void *a2)
{
  if (*(_DWORD *)(a1 + 68))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOMapQueryReadAllFrom can only be called once per object"];
  }
  else
  {
    if (!((unint64_t)[a2 position] >> 32)
      && !((unint64_t)[a2 length] >> 32))
    {
      os_unfair_lock_lock((os_unfair_lock_t)(a1 + 72));
      id v6 = a2;
      objc_sync_enter(v6);
      objc_storeStrong((id *)(a1 + 8), a2);
      *(_DWORD *)(a1 + 64) = [v6 position];
      *(_DWORD *)(a1 + 68) = [v6 length];
      uint64_t Specified = GEOMapQueryReadSpecified(a1, (uint64_t)v6, (int *)&GEOMapQueryReadAllFrom_initialTag);
      objc_sync_exit(v6);

      os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
      return Specified;
    }
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v7 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v7, 2u);
    }
  }
  return 0;
}

void sub_189BCD180(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189BCD558(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void GEOMapQueryClearSensitiveFields(uint64_t a1, uint64_t a2, int a3)
{
  if (a1 && a3)
  {
    -[GEOMapQuery _readUserLocation](a1);
    if (*(void *)(a1 + 56)
      && (-[GEOMapQuery userLocation]((id *)a1),
          uint64_t v5 = objc_claimAutoreleasedReturnValue(),
          int HasSensitiveFields = GEOLocationHasSensitiveFields((uint64_t)v5),
          v5,
          HasSensitiveFields))
    {
      uint64_t v7 = -[GEOMapQuery userLocation]((id *)a1);
      char v8 = (_DWORD *)[v7 copy];

      GEOLocationClearSensitiveFields(v8);
      -[GEOMapQuery setUserLocation:](a1, v8);
    }
    else
    {
      -[GEOMapQuery userLocation]((id *)a1);
      char v8 = (_DWORD *)objc_claimAutoreleasedReturnValue();
      [v8 clearSensitiveFields:a2];
    }

    -[GEOMapQuery _readPlaceSearchRequest](a1);
    if (*(void *)(a1 + 40))
    {
      uint64_t v10 = -[GEOMapQuery placeSearchRequest]((id *)a1);
      unsigned int v11 = GEOPlaceSearchRequestHasSensitiveFields(v10);

      if (v11)
      {
        uint32x4_t v12 = -[GEOMapQuery placeSearchRequest]((id *)a1);
        id v14 = (id)[v12 copy];

        int8x16_t v13 = [v14 location];
        [v13 clearSensitiveFields:a2];

        -[GEOMapQuery setPlaceSearchRequest:](a1, v14);
        goto LABEL_12;
      }
    }
  }
  else
  {
    uint64_t v9 = -[GEOMapQuery userLocation]((id *)a1);
    [v9 clearSensitiveFields:a2];
  }
  -[GEOMapQuery placeSearchRequest]((id *)a1);
  id v14 = (id)objc_claimAutoreleasedReturnValue();
  [v14 clearSensitiveFields:a2];
LABEL_12:
}

void sub_189BCDA84(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189BCF744(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189BD0280(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189BD0534(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189BD05E4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189BD0690(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189BD073C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189BD07EC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189BD0898(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189BD0B6C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);

  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_189BD0D3C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_189BD0EA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  _Block_object_dispose(va, 8);
  std::__hash_table<std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>>>::~__hash_table(v8);
  _Unwind_Resume(a1);
}

void GEOTileKeysForCoordinate(char a1, unsigned int a2, char a3, uint64_t a4, void *a5, double a6, double a7, double a8)
{
  buf[3] = *MEMORY[0x1E4F143B8];
  uint64_t v15 = a5;
  double v16 = GEOMapRectMakeWithRadialDistance(a6, a7, a8);
  double v20 = (double)(1 << a1) * 0.0000000037252903;
  uint64_t v21 = llround(floor(v20 * v16));
  if (v21 >= 4294967294) {
    uint64_t v21 = 4294967294;
  }
  unint64_t v22 = v21 & ~(v21 >> 63);
  uint64_t v23 = llround(floor(v20 * v17));
  if (v23 >= 4294967294) {
    uint64_t v23 = 4294967294;
  }
  unsigned int v24 = v23 & ~(v23 >> 63);
  uint64_t v25 = llround(floor(v20 * (v16 + v18)));
  if (v25 >= 4294967294) {
    uint64_t v25 = 4294967294;
  }
  unsigned int v26 = v25 & ~(v25 >> 63);
  uint64_t v27 = llround(floor(v20 * (v17 + v19)));
  if (v27 >= 4294967294) {
    uint64_t v27 = 4294967294;
  }
  unsigned int v35 = v27 & ~(v27 >> 63);
  unsigned int v36 = v24;
  if (v26 - v22 > 0x13880 || v35 - v24 > 0x13880)
  {
    BOOL v29 = GEOFindOrCreateLog("com.apple.GeoServices", "GEOMapTileFinder");
    if (os_log_type_enabled(v29, OS_LOG_TYPE_ERROR))
    {
      LOWORD(buf[0]) = 0;
      _os_log_impl(&dword_188D96000, v29, OS_LOG_TYPE_ERROR, "GEOMapRect is too large.", (uint8_t *)buf, 2u);
    }
  }
  else if (v26 >= v22)
  {
    unint64_t v30 = (unint64_t)(a1 & 0x3F) << 40;
    unsigned int v34 = v26;
    do
    {
      unint64_t v37 = v22;
      if (v35 >= v36)
      {
        unsigned int v31 = v36;
        do
        {
          *(void *)((char *)buf + 1) = (v37 << 46) | v30;
          LOBYTE(buf[0]) = 2;
          if (a2 <= 0x19 && ((1 << a2) & 0x200101C) != 0) {
            unint64_t v32 = 128;
          }
          else {
            unint64_t v32 = (unint64_t)(a2 == 26) << 7;
          }
          *((void *)&v33 + 1) = (v37 >> 18) | ((unint64_t)(v31 & 0x3FFFFFF) << 8) | ((unint64_t)(a2 & 0x3FFF) << 34) | ((unint64_t)(a3 & 0xF) << 48) | (a4 << 52);
          *(void *)&long long v33 = v37 << 46;
          v38[0] = v32 | buf[0] & 0xFFFFFFFFFFFFFF7FLL;
          v38[1] = v33 >> 56;
          v15[2](v15, v38);
          ++v31;
        }
        while (v35 + 1 != v31);
      }
      unint64_t v22 = (v37 + 1);
    }
    while (v37 != v34);
  }
}

void sub_189BD1190(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189BD13A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void *std::__hash_table<_GEOTileKey,std::hash<_GEOTileKey>,std::equal_to<_GEOTileKey>,std::allocator<_GEOTileKey>>::__emplace_unique_key_args<_GEOTileKey,_GEOTileKey const&>(uint64_t a1, void *a2, _OWORD *a3)
{
  unint64_t v7 = GEOTileKeyHash(a2);
  unint64_t v8 = v7;
  unint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    uint8x8_t v10 = (uint8x8_t)vcnt_s8((int8x8_t)v9);
    v10.i16[0] = vaddlv_u8(v10);
    if (v10.u32[0] > 1uLL)
    {
      unint64_t v3 = v7;
      if (v7 >= v9) {
        unint64_t v3 = v7 % v9;
      }
    }
    else
    {
      unint64_t v3 = (v9 - 1) & v7;
    }
    unsigned int v11 = *(void ***)(*(void *)a1 + 8 * v3);
    if (v11)
    {
      for (uint64_t i = *v11; i; uint64_t i = (void *)*i)
      {
        unint64_t v13 = i[1];
        if (v13 == v7)
        {
          if (i[2] == *a2 && i[3] == a2[1]) {
            return i;
          }
        }
        else
        {
          if (v10.u32[0] > 1uLL)
          {
            if (v13 >= v9) {
              v13 %= v9;
            }
          }
          else
          {
            v13 &= v9 - 1;
          }
          if (v13 != v3) {
            break;
          }
        }
      }
    }
  }
  uint64_t i = operator new(0x20uLL);
  *uint64_t i = 0;
  i[1] = v8;
  *((_OWORD *)i + 1) = *a3;
  float v15 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v16 = *(float *)(a1 + 32);
  if (!v9 || (float)(v16 * (float)v9) < v15)
  {
    BOOL v17 = 1;
    if (v9 >= 3) {
      BOOL v17 = (v9 & (v9 - 1)) != 0;
    }
    unint64_t v18 = v17 | (2 * v9);
    unint64_t v19 = vcvtps_u32_f32(v15 / v16);
    if (v18 <= v19) {
      size_t v20 = v19;
    }
    else {
      size_t v20 = v18;
    }
    std::__hash_table<std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>>>::__rehash<true>(a1, v20);
    unint64_t v9 = *(void *)(a1 + 8);
    if ((v9 & (v9 - 1)) != 0)
    {
      if (v8 >= v9) {
        unint64_t v3 = v8 % v9;
      }
      else {
        unint64_t v3 = v8;
      }
    }
    else
    {
      unint64_t v3 = (v9 - 1) & v8;
    }
  }
  uint64_t v21 = *(void *)a1;
  unint64_t v22 = *(void **)(*(void *)a1 + 8 * v3);
  if (v22)
  {
    *uint64_t i = *v22;
LABEL_42:
    void *v22 = i;
    goto LABEL_43;
  }
  *uint64_t i = *(void *)(a1 + 16);
  *(void *)(a1 + 16) = i;
  *(void *)(v21 + 8 * v3) = a1 + 16;
  if (*i)
  {
    unint64_t v23 = *(void *)(*i + 8);
    if ((v9 & (v9 - 1)) != 0)
    {
      if (v23 >= v9) {
        v23 %= v9;
      }
    }
    else
    {
      v23 &= v9 - 1;
    }
    unint64_t v22 = (void *)(*(void *)a1 + 8 * v23);
    goto LABEL_42;
  }
LABEL_43:
  ++*(void *)(a1 + 24);
  return i;
}

void sub_189BD17B0(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void sub_189BD19DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_189BD1B18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_189BD1F50(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189BD22E4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOTerritoryDataPolygonCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v10 = *MEMORY[0x1E4F143B8];
  long long v5 = 0u;
  long long v6 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  id v1 = *(id *)(a1 + 40);
  uint64_t v2 = [v1 countByEnumeratingWithState:&v5 objects:v9 count:16];
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t v4 = *(void *)v6;
    while (1)
    {
      if (*(void *)v6 != v4) {
        objc_enumerationMutation(v1);
      }
      if (!--v3)
      {
        uint64_t v3 = [v1 countByEnumeratingWithState:&v5 objects:v9 count:16];
        if (!v3) {
          break;
        }
      }
    }
  }
}

void sub_189BD2630(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189BD28B4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189BD2DD8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189BD3338(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189BD3434(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189BD3720(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189BD3920(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDSpatialLookupCategoryForCategory(unint64_t a1)
{
  if (a1 < 0x16) {
    return (a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t _GEOSpatialLookupCategoryForGEOPDCategory(int a1)
{
  if ((a1 - 1) >= 0x16) {
    return -1;
  }
  else {
    return (a1 - 1);
  }
}

void ___attributedGeoMapItemsForPlaceDatasWithHandler_block_invoke(uint64_t a1, void *a2)
{
  _attributedGeoMapItemsForPlaceDatas(*(void **)(a1 + 32), *(void **)(a1 + 40), *(void **)(a1 + 48), *(void **)(a1 + 56), a2);
  id v6 = (id)objc_claimAutoreleasedReturnValue();
  uint64_t v3 = [v6 count];
  uint64_t v4 = *(void *)(a1 + 64);
  if (v3)
  {
    (*(void (**)(uint64_t, id, void))(v4 + 16))(v4, v6, 0);
  }
  else
  {
    long long v5 = [MEMORY[0x1E4F28C58] GEOErrorWithCode:-8 reason:@"No Results"];
    (*(void (**)(uint64_t, void, void *))(v4 + 16))(v4, 0, v5);
  }
}

void sub_189BD44A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_189BD4E14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_189BD4F90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_189BD5538(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_189BD59D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_189BD5BBC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_189BD5D80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_189BD6024(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_189BD622C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_189BD6390(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_189BD9728(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,char a28)
{
}

void sub_189BD9950(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_189BDAA88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_189BDC8F0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189BDCADC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189BDCB60(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_189BDCD1C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189BDCDD4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

id GEOGetMapMatchingLog()
{
  if (qword_1EB29FD00 != -1) {
    dispatch_once(&qword_1EB29FD00, &__block_literal_global_104);
  }
  os_log_t v0 = (void *)_MergedGlobals_251;

  return v0;
}

void __GEOGetMapMatchingLog_block_invoke()
{
  os_log_t v0 = os_log_create("com.apple.GeoServices", "MapMatching");
  id v1 = (void *)_MergedGlobals_251;
  _MergedGlobals_251 = (uint64_t)v0;
}

void sub_189BDD9EC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOSpatialLookupBatchRequestReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  id v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  char v7 = 0;
  uint64_t v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  unsigned int v11 = ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1)
      + (*(unsigned char *)(a1 + 52) & 1)
      + ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v8])
    {
      case -3:
        char v7 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        char v14 = v10 | (v11 > 1);
        if (v10 & 1 | (v11 > 1) | v7 & 1) {
          float v15 = 0;
        }
        else {
          float v15 = a3;
        }
        float v16 = (int *)MEMORY[0x1E4F940E8];
        BOOL v17 = (int *)MEMORY[0x1E4F940C8];
        unint64_t v18 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v11;
LABEL_6:
        uint64_t v12 = v9;
        uint64_t v13 = v10;
LABEL_8:
        ++v8;
        uint64_t v9 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v16) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v17)) {
      goto LABEL_60;
    }
    char v19 = 0;
    unsigned int v20 = 0;
    unint64_t v21 = 0;
    while (1)
    {
      uint64_t v22 = *v16;
      unint64_t v23 = *(void *)(v3 + v22);
      if (v23 == -1 || v23 >= *(void *)(v3 + *v6)) {
        break;
      }
      char v24 = *(unsigned char *)(*(void *)(v3 + *v18) + v23);
      *(void *)(v3 + v22) = v23 + 1;
      v21 |= (unint64_t)(v24 & 0x7F) << v19;
      if ((v24 & 0x80) == 0) {
        goto LABEL_23;
      }
      v19 += 7;
      if (v20++ >= 9)
      {
        unint64_t v21 = 0;
        int v26 = *(unsigned __int8 *)(v3 + *v17);
        goto LABEL_25;
      }
    }
    *(unsigned char *)(v3 + *v17) = 1;
LABEL_23:
    int v26 = *(unsigned __int8 *)(v3 + *v17);
    if (*(unsigned char *)(v3 + *v17)) {
      unint64_t v21 = 0;
    }
LABEL_25:
    if (v26 || (v21 & 7) == 4)
    {
LABEL_60:
      if (v14)
      {
        char v38 = 1;
        goto LABEL_69;
      }
      if (v15)
      {
        while (1)
        {
          int v40 = *v15++;
          char v39 = 4;
          switch(v40)
          {
            case 0:
              goto LABEL_70;
            case 1:
              goto LABEL_66;
            case 2:
              char v39 = 1;
              goto LABEL_66;
            case 3:
              char v39 = 2;
LABEL_66:
              *(unsigned char *)(a1 + 52) |= v39;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_70;
    }
    unint64_t v28 = v21 >> 3;
    BOOL v29 = v14;
    if (!((v15 == 0) | v14 & 1))
    {
      unint64_t v30 = v15;
      do
      {
        int v32 = *v30++;
        int v31 = v32;
        BOOL v29 = v32 != 0;
        if (v32) {
          BOOL v33 = v31 == v28;
        }
        else {
          BOOL v33 = 1;
        }
      }
      while (!v33);
    }
    if (v28 != 3) {
      break;
    }
    if (!v29) {
      goto LABEL_53;
    }
    if ((*(unsigned char *)(a1 + 52) & 2) == 0)
    {
      uint64_t v35 = PBReaderReadString();
      uint64_t v36 = 24;
LABEL_50:
      unint64_t v37 = *(void **)(a1 + v36);
      *(void *)(a1 + v36) = v35;

      --v8;
      goto LABEL_54;
    }
    if ((PBReaderSkipValueWithTag() & 1) == 0) {
      goto LABEL_68;
    }
    v8 += *(unsigned __int8 *)(a1 + 52) << 30 >> 31;
LABEL_54:
    if (!(v14 & 1 | (v8 != 0))) {
      goto LABEL_60;
    }
  }
  if (v28 == 2)
  {
    if (!v29) {
      goto LABEL_53;
    }
    if ((*(unsigned char *)(a1 + 52) & 1) == 0)
    {
      uint64_t v35 = PBReaderReadString();
      uint64_t v36 = 16;
      goto LABEL_50;
    }
    if ((PBReaderSkipValueWithTag() & 1) == 0)
    {
LABEL_68:
      char v38 = 0;
      goto LABEL_69;
    }
    v8 -= *(unsigned char *)(a1 + 52) & 1;
    goto LABEL_54;
  }
  if (v28 != 1)
  {
    if (!PBReaderSkipValueWithTag()) {
      goto LABEL_68;
    }
    goto LABEL_54;
  }
  if (!v29 || (*(unsigned char *)(a1 + 52) & 4) != 0)
  {
LABEL_53:
    if ((PBReaderSkipValueWithTag() & 1) == 0) {
      goto LABEL_68;
    }
    goto LABEL_54;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_68;
  }
  unsigned int v34 = objc_alloc_init(GEOSpatialLookupRequest);
  if (GEOSpatialLookupRequestReadAllFrom((uint64_t)v34, (void *)v3, v9 & 1))
  {
    PBReaderRecallMark();
    -[GEOSpatialLookupBatchRequest _addNoFlagsRequest:](a1, v34);

    BOOL v17 = (int *)MEMORY[0x1E4F940C8];
    goto LABEL_54;
  }

  char v38 = 0;
  BOOL v17 = (int *)MEMORY[0x1E4F940C8];
LABEL_69:
  *(unsigned char *)(a1 + 52) |= 4u;
  *(unsigned char *)(a1 + 52) |= 1u;
  *(unsigned char *)(a1 + 52) |= 2u;
  if (v38)
  {
LABEL_70:
    unint64_t v3 = *(unsigned char *)(v3 + *v17) == 0;
    if ((v14 & 1) == 0) {
      return v3;
    }
    goto LABEL_71;
  }
  unint64_t v3 = 0;
  if (v14)
  {
LABEL_71:
    char v41 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_189BDE298(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189BDE408(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189BDEBB4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOSpatialLookupBatchRequestReadAllFrom(uint64_t a1, void *a2)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOSpatialLookupBatchRequestReadAllFrom can only be called once per object"];
  }
  else
  {
    if (!((unint64_t)[a2 position] >> 32)
      && !((unint64_t)[a2 length] >> 32))
    {
      os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
      id v6 = a2;
      objc_sync_enter(v6);
      objc_storeStrong((id *)(a1 + 8), a2);
      *(_DWORD *)(a1 + 40) = [v6 position];
      *(_DWORD *)(a1 + 44) = [v6 length];
      unint64_t Specified = GEOSpatialLookupBatchRequestReadSpecified(a1, (unint64_t)v6, (int *)&GEOSpatialLookupBatchRequestReadAllFrom_initialTag);
      objc_sync_exit(v6);

      os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
      return Specified;
    }
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)char v7 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v7, 2u);
    }
  }
  return 0;
}

void sub_189BDED38(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t GEOSpatialLookupRequestIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  uint64_t v2 = (int *)MEMORY[0x1E4F940E8];
  unint64_t v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    int v5 = 0;
    id v6 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_64;
      }
      char v7 = 0;
      unsigned int v8 = 0;
      unint64_t v9 = 0;
      while (1)
      {
        uint64_t v10 = *v2;
        unint64_t v11 = *(void *)&a1[v10];
        if (v11 == -1 || v11 >= *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v6] + v11);
        *(void *)&a1[v10] = v11 + 1;
        v9 |= (unint64_t)(v12 & 0x7F) << v7;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v7 += 7;
        BOOL v13 = v8++ >= 9;
        if (v13)
        {
          unint64_t v9 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v9 = 0;
      }
LABEL_14:
      int v15 = v9 & 7;
      if (v14 || v15 == 4) {
        goto LABEL_64;
      }
      switch((v9 >> 3))
      {
        case 1u:
          if (v5 || v15 != 2 || !PBReaderPlaceMark() || !GEOLatLngIsValid(a1)) {
            goto LABEL_72;
          }
          PBReaderRecallMark();
          int v5 = 1;
          goto LABEL_61;
        case 2u:
          if ((v9 & 7) != 0) {
            goto LABEL_72;
          }
          unsigned int v17 = 0;
          while (1)
          {
            uint64_t v18 = *v2;
            unint64_t v19 = *(void *)&a1[v18];
            if (v19 == -1 || v19 >= *(void *)&a1[*v3]) {
              goto LABEL_49;
            }
            unint64_t v20 = v19 + 1;
            int v21 = *(char *)(*(void *)&a1[*v6] + v19);
            *(void *)&a1[v18] = v20;
            if (v21 < 0)
            {
              BOOL v22 = v17++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_61;
          }
        case 3u:
          if ((v9 & 7) != 0) {
            goto LABEL_72;
          }
          unsigned int v23 = 0;
          while (1)
          {
            uint64_t v24 = *v2;
            unint64_t v25 = *(void *)&a1[v24];
            if (v25 == -1 || v25 >= *(void *)&a1[*v3]) {
              goto LABEL_49;
            }
            unint64_t v26 = v25 + 1;
            int v27 = *(char *)(*(void *)&a1[*v6] + v25);
            *(void *)&a1[v24] = v26;
            if (v27 < 0)
            {
              BOOL v22 = v23++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_61;
          }
        case 4u:
          if (v15 == 2)
          {
            if (!PBReaderPlaceMark())
            {
LABEL_72:
              PBReaderRecallMark();
              return 0;
            }
LABEL_51:
            while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
            {
              unsigned int v33 = a1[*v4];
              if (a1[*v4]) {
                break;
              }
              while (1)
              {
                uint64_t v34 = *v2;
                unint64_t v35 = *(void *)&a1[v34];
                if (v35 == -1 || v35 >= *(void *)&a1[*v3]) {
                  break;
                }
                unint64_t v36 = v35 + 1;
                int v37 = *(char *)(*(void *)&a1[*v6] + v35);
                *(void *)&a1[v34] = v36;
                if (v37 < 0)
                {
                  BOOL v13 = v33++ >= 9;
                  if (!v13) {
                    continue;
                  }
                }
                goto LABEL_51;
              }
              a1[*v4] = 1;
            }
            PBReaderRecallMark();
          }
          else
          {
            if ((v9 & 7) != 0) {
              goto LABEL_72;
            }
            while (1)
            {
              uint64_t v28 = *v2;
              unint64_t v29 = *(void *)&a1[v28];
              if (v29 == -1 || v29 >= *(void *)&a1[*v3]) {
                break;
              }
              unint64_t v30 = v29 + 1;
              int v31 = *(char *)(*(void *)&a1[*v6] + v29);
              *(void *)&a1[v28] = v30;
              if (v31 < 0)
              {
                unsigned int v32 = v15++;
                if (v32 <= 8) {
                  continue;
                }
              }
              goto LABEL_61;
            }
LABEL_49:
            a1[*v4] = 1;
          }
LABEL_61:
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_64;
          }
          break;
        default:
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_72;
          }
          goto LABEL_61;
      }
    }
  }
  int v5 = 0;
LABEL_64:
  if (a1[*v4]) {
    BOOL v38 = 1;
  }
  else {
    BOOL v38 = v5 == 0;
  }
  uint64_t v39 = !v38;
  PBReaderRecallMark();
  return v39;
}

void sub_189BDF550(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189BDFA08(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOSpatialLookupResponseIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  uint64_t v2 = (int *)MEMORY[0x1E4F940E8];
  unint64_t v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    int v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        unint64_t v10 = *(void *)&a1[v9];
        if (v10 == -1 || v10 >= *(void *)&a1[*v3]) {
          break;
        }
        char v11 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v13 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v14 = v8 & 7;
      if (v13 || v14 == 4) {
        break;
      }
      if ((v8 >> 3) == 2)
      {
        if (v14 != 2 || !PBReaderPlaceMark() || !GEOPDPlaceIsValid(a1))
        {
LABEL_38:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_38;
        }
        unsigned int v16 = 0;
        while (1)
        {
          uint64_t v17 = *v2;
          unint64_t v18 = *(void *)&a1[v17];
          if (v18 == -1 || v18 >= *(void *)&a1[*v3]) {
            break;
          }
          unint64_t v19 = v18 + 1;
          int v20 = *(char *)(*(void *)&a1[*v5] + v18);
          *(void *)&a1[v17] = v19;
          if (v20 < 0 && v16++ <= 8) {
            continue;
          }
          goto LABEL_35;
        }
        a1[*v4] = 1;
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_38;
      }
LABEL_35:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v22 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v22;
}

void sub_189BE0F48(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOSpatialLookupResponseClearSensitiveFields(uint64_t a1, uint64_t a2, int a3)
{
  unint64_t result = [*(id *)(a1 + 8) count];
  if (result)
  {
    for (unint64_t i = 0; i < result; ++i)
    {
      unint64_t v8 = [*(id *)(a1 + 8) objectAtIndexedSubscript:i];
      uint64_t v9 = v8;
      if (a3 && GEOPDPlaceHasSensitiveFields(v8, a2))
      {
        unint64_t v10 = (void *)[v9 copy];
        char v11 = [v10 requestData];
        [v11 clearSensitiveFields:a2];

        [*(id *)(a1 + 8) replaceObjectAtIndex:i withObject:v10];
      }
      else
      {
        [v9 clearSensitiveFields:a2];
      }

      unint64_t result = [*(id *)(a1 + 8) count];
    }
  }
  return result;
}

void sub_189BE1AD0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOSpatialLookupRequestReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 52);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 48)];
  char v7 = 0;
  uint64_t v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  int v11 = ((*(unsigned __int8 *)(a1 + 68) >> 3) & 1) + ((*(unsigned __int8 *)(a1 + 68) >> 2) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v8])
    {
      case -3:
        char v7 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        BOOL v14 = (v10 & 1 | v11) != 0;
        if ((v14 | v7)) {
          int v15 = 0;
        }
        else {
          int v15 = a3;
        }
        BOOL v16 = v14;
        uint64_t v17 = (int *)MEMORY[0x1E4F940E8];
        unint64_t v18 = (int *)MEMORY[0x1E4F940C8];
        if (*(void *)(v3 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(v3 + *v6)) {
          goto LABEL_107;
        }
        if (v15) {
          char v19 = v14;
        }
        else {
          char v19 = 1;
        }
        char v73 = v19;
        int v20 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v11;
LABEL_6:
        uint64_t v12 = v9;
        uint64_t v13 = v10;
LABEL_8:
        ++v8;
        uint64_t v9 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(unsigned char *)(v3 + *v18)) {
      goto LABEL_107;
    }
    char v21 = 0;
    unsigned int v22 = 0;
    unint64_t v23 = 0;
    while (1)
    {
      uint64_t v24 = *v17;
      unint64_t v25 = *(void *)(v3 + v24);
      if (v25 == -1 || v25 >= *(void *)(v3 + *v6)) {
        break;
      }
      char v26 = *(unsigned char *)(*(void *)(v3 + *v20) + v25);
      *(void *)(v3 + v24) = v25 + 1;
      v23 |= (unint64_t)(v26 & 0x7F) << v21;
      if ((v26 & 0x80) == 0) {
        goto LABEL_26;
      }
      v21 += 7;
      BOOL v27 = v22++ >= 9;
      if (v27)
      {
        unint64_t v23 = 0;
        int v28 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_28;
      }
    }
    *(unsigned char *)(v3 + *v18) = 1;
LABEL_26:
    int v28 = *(unsigned __int8 *)(v3 + *v18);
    if (*(unsigned char *)(v3 + *v18)) {
      unint64_t v23 = 0;
    }
LABEL_28:
    int v29 = v23 & 7;
    if (v28 || v29 == 4)
    {
LABEL_107:
      if (v16)
      {
        char v67 = 1;
        goto LABEL_109;
      }
      if (!v15) {
        goto LABEL_119;
      }
      while (1)
      {
        while (1)
        {
          int v69 = *v15++;
          int v68 = v69;
          if (v69 != 1) {
            break;
          }
          LOBYTE(v68) = 8;
LABEL_118:
          *(unsigned char *)(a1 + 68) |= v68;
        }
        if (v68 == 4) {
          goto LABEL_118;
        }
        if (!v68) {
          goto LABEL_119;
        }
      }
    }
    unint64_t v31 = v23 >> 3;
    BOOL v32 = v16;
    if ((v73 & 1) == 0)
    {
      unsigned int v33 = v15;
      do
      {
        int v35 = *v33++;
        int v34 = v35;
        BOOL v32 = v35 != 0;
        if (v35) {
          BOOL v36 = v34 == v31;
        }
        else {
          BOOL v36 = 1;
        }
      }
      while (!v36);
    }
    switch((int)v31)
    {
      case 1:
        if (!v32) {
          goto LABEL_78;
        }
        if ((*(unsigned char *)(a1 + 68) & 8) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_123;
          }
          BOOL v72 = v16;
          int v37 = objc_alloc_init(GEOLatLng);
          if (GEOLatLngReadAllFrom((uint64_t)v37, (void *)v3))
          {
            PBReaderRecallMark();
            BOOL v38 = *(void **)(a1 + 40);
            *(void *)(a1 + 40) = v37;

            --v8;
            BOOL v16 = v72;
            goto LABEL_101;
          }

          char v67 = 0;
          BOOL v16 = v72;
          goto LABEL_125;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_123;
        }
        v8 += *(unsigned __int8 *)(a1 + 68) << 28 >> 31;
        goto LABEL_101;
      case 2:
        if ((v7 & 1) == 0) {
          goto LABEL_78;
        }
        char v40 = 0;
        unsigned int v41 = 0;
        uint64_t v42 = 0;
        *(unsigned char *)(a1 + 68) |= 2u;
        while (2)
        {
          uint64_t v43 = *v17;
          unint64_t v44 = *(void *)(v3 + v43);
          if (v44 == -1 || v44 >= *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v45 = *(unsigned char *)(*(void *)(v3 + *v20) + v44);
            *(void *)(v3 + v43) = v44 + 1;
            v42 |= (unint64_t)(v45 & 0x7F) << v40;
            if (v45 < 0)
            {
              v40 += 7;
              BOOL v27 = v41++ >= 9;
              if (v27)
              {
                LODWORD(v42) = 0;
                goto LABEL_83;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          LODWORD(v42) = 0;
        }
LABEL_83:
        uint64_t v59 = 64;
        goto LABEL_88;
      case 3:
        if ((v7 & 1) == 0) {
          goto LABEL_78;
        }
        char v46 = 0;
        unsigned int v47 = 0;
        uint64_t v42 = 0;
        *(unsigned char *)(a1 + 68) |= 1u;
        while (2)
        {
          uint64_t v48 = *v17;
          unint64_t v49 = *(void *)(v3 + v48);
          if (v49 == -1 || v49 >= *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v50 = *(unsigned char *)(*(void *)(v3 + *v20) + v49);
            *(void *)(v3 + v48) = v49 + 1;
            v42 |= (unint64_t)(v50 & 0x7F) << v46;
            if (v50 < 0)
            {
              v46 += 7;
              BOOL v27 = v47++ >= 9;
              if (v27)
              {
                LODWORD(v42) = 0;
                goto LABEL_87;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          LODWORD(v42) = 0;
        }
LABEL_87:
        uint64_t v59 = 60;
LABEL_88:
        *(_DWORD *)(a1 + v59) = v42;
        goto LABEL_102;
      case 4:
        if (!v32 || (*(unsigned char *)(a1 + 68) & 4) != 0)
        {
LABEL_78:
          char v58 = PBReaderSkipValueWithTag();
          unint64_t v18 = (int *)MEMORY[0x1E4F940C8];
          if ((v58 & 1) == 0)
          {
LABEL_122:
            char v67 = 0;
            goto LABEL_109;
          }
LABEL_102:
          if (v8) {
            int v66 = 1;
          }
          else {
            int v66 = v16;
          }
          if (v66 != 1 || *(void *)(v3 + *v17) >= *(void *)(v3 + *v6)) {
            goto LABEL_107;
          }
          continue;
        }
        if (v29 != 2)
        {
          char v60 = 0;
          unsigned int v61 = 0;
          uint64_t v62 = 0;
          while (1)
          {
            uint64_t v63 = *v17;
            unint64_t v64 = *(void *)(v3 + v63);
            if (v64 == -1 || v64 >= *(void *)(v3 + *v6)) {
              break;
            }
            char v65 = *(unsigned char *)(*(void *)(v3 + *v20) + v64);
            *(void *)(v3 + v63) = v64 + 1;
            v62 |= (unint64_t)(v65 & 0x7F) << v60;
            if (v65 < 0)
            {
              v60 += 7;
              BOOL v27 = v61++ >= 9;
              if (!v27) {
                continue;
              }
            }
            goto LABEL_100;
          }
          *(unsigned char *)(v3 + *v18) = 1;
LABEL_100:
          PBRepeatedInt32Add();
          goto LABEL_101;
        }
        if (PBReaderPlaceMark())
        {
          while (1)
          {
            char v51 = (int *)MEMORY[0x1E4F940C8];
            if (*(void *)(v3 + *v17) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + (int)*MEMORY[0x1E4F940C8])) {
              break;
            }
            char v52 = 0;
            unsigned int v53 = 0;
            uint64_t v54 = 0;
            while (1)
            {
              uint64_t v55 = *v17;
              unint64_t v56 = *(void *)(v3 + v55);
              if (v56 == -1 || v56 >= *(void *)(v3 + *v6)) {
                break;
              }
              char v57 = *(unsigned char *)(*(void *)(v3 + *v20) + v56);
              *(void *)(v3 + v55) = v56 + 1;
              v54 |= (unint64_t)(v57 & 0x7F) << v52;
              if (v57 < 0)
              {
                v52 += 7;
                BOOL v27 = v53++ >= 9;
                if (!v27) {
                  continue;
                }
              }
              goto LABEL_77;
            }
            *(unsigned char *)(v3 + *v51) = 1;
LABEL_77:
            PBRepeatedInt32Add();
          }
          PBReaderRecallMark();
LABEL_101:
          unint64_t v18 = (int *)MEMORY[0x1E4F940C8];
          goto LABEL_102;
        }
LABEL_123:
        char v67 = 0;
LABEL_125:
        unint64_t v18 = (int *)MEMORY[0x1E4F940C8];
LABEL_109:
        *(unsigned char *)(a1 + 68) |= 8u;
        *(unsigned char *)(a1 + 68) |= 4u;
        if (v67)
        {
LABEL_119:
          unint64_t v3 = *(unsigned char *)(v3 + *v18) == 0;
          if (v16) {
            goto LABEL_120;
          }
          return v3;
        }
        unint64_t v3 = 0;
        if (!v16) {
          return v3;
        }
LABEL_120:
        unint64_t v70 = *(void **)(a1 + 8);
        *(void *)(a1 + 8) = 0;

        return v3;
      default:
        int v39 = PBReaderSkipValueWithTag();
        unint64_t v18 = (int *)MEMORY[0x1E4F940C8];
        if (!v39) {
          goto LABEL_122;
        }
        goto LABEL_102;
    }
  }
}

void sub_189BE2524(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189BE3428(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOSpatialLookupRequestReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 52))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOSpatialLookupRequestReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = [v8 position];
  *(_DWORD *)(a1 + 52) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOSpatialLookupRequestReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOSpatialLookupRequestReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOSpatialLookupRequestReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    [*(id *)(a1 + 40) readAll:1];
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_189BE35D0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189BE37CC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189BE3B20(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOSpatialLookupResponseReadAllFrom(uint64_t a1, void *a2)
{
  unint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    int v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      char v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          unint64_t v12 = *(void *)&v3[v11];
          if (v12 == -1 || v12 >= *(void *)&v3[*v5]) {
            break;
          }
          char v13 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v12 + 1;
          v10 |= (unint64_t)(v13 & 0x7F) << v8;
          if ((v13 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v14 = v9++ >= 9;
          if (v14)
          {
            unint64_t v10 = 0;
            int v15 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v15 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v15 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 2)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_40;
          }
          unint64_t v23 = objc_alloc_init(GEOPDPlace);
          if (!GEOPDPlaceReadAllFrom((uint64_t)v23, v3, 0))
          {

            goto LABEL_40;
          }
          PBReaderRecallMark();
          objc_msgSend((id)a1, "addPlace:", v23, 0, 0);
        }
        else if ((v10 >> 3) == 1)
        {
          char v17 = 0;
          unsigned int v18 = 0;
          uint64_t v19 = 0;
          *(unsigned char *)(a1 + 20) |= 1u;
          while (1)
          {
            uint64_t v20 = *v4;
            unint64_t v21 = *(void *)&v3[v20];
            if (v21 == -1 || v21 >= *(void *)&v3[*v5]) {
              break;
            }
            char v22 = *(unsigned char *)(*(void *)&v3[*v7] + v21);
            *(void *)&v3[v20] = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0) {
              goto LABEL_34;
            }
            v17 += 7;
            BOOL v14 = v18++ >= 9;
            if (v14)
            {
              LODWORD(v19) = 0;
              goto LABEL_36;
            }
          }
          v3[*v6] = 1;
LABEL_34:
          if (v3[*v6]) {
            LODWORD(v19) = 0;
          }
LABEL_36:
          *(_DWORD *)(a1 + 16) = v19;
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_40;
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v24 = v3[*v6] == 0;
  }
  else
  {
LABEL_40:
    BOOL v24 = 0;
  }
  objc_sync_exit(v3);

  return v24;
}

void sub_189BE4C04(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189BE5560(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189BE56D0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189BE5808(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_189BE59CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,id location)
{
  objc_destroyWeak(v24);
  objc_destroyWeak(&location);
  _Block_object_dispose((const void *)(v25 - 112), 8);
  _Unwind_Resume(a1);
}

void sub_189BE5AC4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_189BE5C38(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189BE5FE0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189BE6090(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189BE6208(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189BE6370(_Unwind_Exception *a1)
{
  objc_destroyWeak(v2);
  objc_destroyWeak((id *)(v3 - 56));

  _Unwind_Resume(a1);
}

void sub_189BE641C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_189BE65B4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189BE66D0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189BE676C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_189BE6804(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a10);
  }
  _Unwind_Resume(exception_object);
}

void sub_189BE6DB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11, void *a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,id location,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,char a50,uint64_t a51,uint64_t a52,uint64_t a53,char a54,uint64_t a55,uint64_t a56,uint64_t a57,char a58,uint64_t a59,uint64_t a60,uint64_t a61,char a62,uint64_t a63)
{
  objc_destroyWeak(v71);
  objc_destroyWeak(&location);

  _Block_object_dispose(&a50, 8);
  _Block_object_dispose(&a54, 8);
  _Block_object_dispose(&a58, 8);
  _Block_object_dispose(&a62, 8);
  _Block_object_dispose(&a66, 8);
  _Block_object_dispose(&a70, 8);
  _Block_object_dispose(&STACK[0x208], 8);
  _Block_object_dispose(&STACK[0x228], 8);
  _Block_object_dispose((const void *)(v72 - 232), 8);
  _Block_object_dispose((const void *)(v72 - 200), 8);
  _Block_object_dispose((const void *)(v72 - 168), 8);

  _Unwind_Resume(a1);
}

void sub_189BE7118(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189BE72E0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189BE7798(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, std::__shared_weak_count *a11)
{
  if (a11) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a11);
  }
  std::__shared_weak_count::__release_shared[abi:ne180100](v12);

  _Unwind_Resume(a1);
}

void std::__shared_ptr_emplace<geo::MapPickedRoadFeature>::~__shared_ptr_emplace(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_1ED5186D8;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void std::__shared_ptr_emplace<geo::MapPickedRoadFeature>::~__shared_ptr_emplace(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_1ED5186D8;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x18C11F580);
}

uint64_t std::__shared_ptr_emplace<geo::MapPickedRoadFeature>::__on_zero_shared(uint64_t a1)
{
  return (**(uint64_t (***)(void))(a1 + 24))();
}

void std::__shared_ptr_emplace<geo::MapPickedPointFeature>::~__shared_ptr_emplace(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_1ED518748;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void std::__shared_ptr_emplace<geo::MapPickedPointFeature>::~__shared_ptr_emplace(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_1ED518748;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x18C11F580);
}

uint64_t std::__shared_ptr_emplace<geo::MapPickedPointFeature>::__on_zero_shared(uint64_t a1)
{
  return (**(uint64_t (***)(void))(a1 + 24))();
}

void geo::MapPickedPointFeature::~MapPickedPointFeature(geo::MapPickedPointFeature *this)
{
}

uint64_t geo::MapPickedPointFeature::type(geo::MapPickedPointFeature *this)
{
  return 2;
}

void std::__shared_ptr_emplace<geo::MapPickedPolygonFeature>::~__shared_ptr_emplace(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_1ED518780;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void std::__shared_ptr_emplace<geo::MapPickedPolygonFeature>::~__shared_ptr_emplace(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_1ED518780;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x18C11F580);
}

uint64_t std::__shared_ptr_emplace<geo::MapPickedPolygonFeature>::__on_zero_shared(uint64_t a1)
{
  return (**(uint64_t (***)(void))(a1 + 24))();
}

void geo::MapPickedPolygonFeature::~MapPickedPolygonFeature(geo::MapPickedPolygonFeature *this)
{
}

uint64_t geo::MapPickedPolygonFeature::type(geo::MapPickedPolygonFeature *this)
{
  return 3;
}

BOOL GEOPublisherAttributionManifestReadFrom(void *a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOPublisherAttributionManifestReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189BE8000(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPublisherAttributionManifestIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  uint64_t v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    int v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        unint64_t v10 = *(void *)&a1[v9];
        if (v10 == -1 || v10 >= *(void *)&a1[*v3]) {
          break;
        }
        char v11 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        BOOL v12 = v7++ >= 9;
        if (v12)
        {
          unint64_t v8 = 0;
          int v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v13 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v14 = v8 & 7;
      if (v13 || v14 == 4) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if (v14 != 2 || !PBReaderPlaceMark() || *(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
          goto LABEL_51;
        }
        char v16 = 0;
        char v17 = 0;
        do
        {
          if (a1[*v4]) {
            break;
          }
          char v18 = 0;
          unsigned int v19 = 0;
          unint64_t v20 = 0;
          while (1)
          {
            uint64_t v21 = *v2;
            unint64_t v22 = *(void *)&a1[v21];
            if (v22 == -1 || v22 >= *(void *)&a1[*v3]) {
              break;
            }
            char v23 = *(unsigned char *)(*(void *)&a1[*v5] + v22);
            *(void *)&a1[v21] = v22 + 1;
            v20 |= (unint64_t)(v23 & 0x7F) << v18;
            if ((v23 & 0x80) == 0) {
              goto LABEL_32;
            }
            v18 += 7;
            BOOL v12 = v19++ >= 9;
            if (v12)
            {
              unint64_t v20 = 0;
              int v24 = a1[*v4];
              goto LABEL_34;
            }
          }
          a1[*v4] = 1;
LABEL_32:
          int v24 = a1[*v4];
          if (a1[*v4]) {
            unint64_t v20 = 0;
          }
LABEL_34:
          if (v24) {
            break;
          }
          int v25 = v20 & 7;
          if ((v20 >> 3) == 2)
          {
            if (v25 != 2 || !GEOPublisherAttributionSourceIsValid(a1)) {
              goto LABEL_51;
            }
            char v17 = 1;
          }
          else if ((v20 >> 3) == 1)
          {
            if (v25 != 2) {
              goto LABEL_51;
            }
            char v16 = 1;
            if ((PBReaderSkipValueWithTag() & 1) == 0) {
              goto LABEL_51;
            }
          }
          else if (!PBReaderSkipValueWithTag())
          {
            goto LABEL_51;
          }
        }
        while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
        if ((v16 & 1) == 0 || (v17 & 1) == 0)
        {
LABEL_51:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_51;
      }
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v26 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v26;
}

unint64_t GEOPublisherAttributionManifestIndexReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOPublisherAttributionManifestIndexReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189BE9324(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPublisherAttributionManifestIndexIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  uint64_t v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    int v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        unint64_t v10 = *(void *)&a1[v9];
        if (v10 == -1 || v10 >= *(void *)&a1[*v3]) {
          break;
        }
        char v11 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        BOOL v12 = v7++ >= 9;
        if (v12)
        {
          unint64_t v8 = 0;
          int v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v13 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v14 = v8 & 7;
      if (v13 || v14 == 4) {
        break;
      }
      if ((v8 >> 3) == 2)
      {
        if (v14 != 2 || !PBReaderPlaceMark() || *(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
          goto LABEL_60;
        }
        char v16 = 0;
        char v17 = 0;
        do
        {
          if (a1[*v4]) {
            break;
          }
          char v18 = 0;
          unsigned int v19 = 0;
          unint64_t v20 = 0;
          while (1)
          {
            uint64_t v21 = *v2;
            unint64_t v22 = *(void *)&a1[v21];
            if (v22 == -1 || v22 >= *(void *)&a1[*v3]) {
              break;
            }
            char v23 = *(unsigned char *)(*(void *)&a1[*v5] + v22);
            *(void *)&a1[v21] = v22 + 1;
            v20 |= (unint64_t)(v23 & 0x7F) << v18;
            if ((v23 & 0x80) == 0) {
              goto LABEL_36;
            }
            v18 += 7;
            BOOL v12 = v19++ >= 9;
            if (v12)
            {
              unint64_t v20 = 0;
              if (a1[*v4]) {
                goto LABEL_54;
              }
              goto LABEL_37;
            }
          }
          a1[*v4] = 1;
LABEL_36:
          if (a1[*v4]) {
            break;
          }
LABEL_37:
          if ((v20 >> 3) == 2)
          {
            if ((v20 & 7) != 0) {
              goto LABEL_60;
            }
            unsigned int v24 = 0;
            while (1)
            {
              uint64_t v25 = *v2;
              unint64_t v26 = *(void *)&a1[v25];
              if (v26 == -1 || v26 >= *(void *)&a1[*v3]) {
                break;
              }
              unint64_t v27 = v26 + 1;
              int v28 = *(char *)(*(void *)&a1[*v5] + v26);
              *(void *)&a1[v25] = v27;
              char v17 = 1;
              if (v28 < 0 && v24++ <= 8) {
                continue;
              }
              goto LABEL_53;
            }
            char v17 = 1;
            a1[*v4] = 1;
          }
          else if ((v20 >> 3) == 1)
          {
            if ((v20 & 7) != 2) {
              goto LABEL_60;
            }
            char v16 = 1;
            if ((PBReaderSkipValueWithTag() & 1) == 0) {
              goto LABEL_60;
            }
          }
          else if (!PBReaderSkipValueWithTag())
          {
            goto LABEL_60;
          }
LABEL_53:
          ;
        }
        while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
LABEL_54:
        if ((v16 & 1) == 0 || (v17 & 1) == 0)
        {
LABEL_60:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((v8 >> 3) == 1 && v14 != 2 || (PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_60;
      }
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v30 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v30;
}

void sub_189BE9910(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPublisherAttributionManifestIndexIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  BOOL v2 = (*(unsigned char *)(a1 + 44) & 7) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return v2;
}

void sub_189BE9EEC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void GEOMigrateDefaults()
{
  uint64_t v39 = *MEMORY[0x1E4F143B8];
  if (!_GEODefaultsUseServer)
  {
    CFStringRef v0 = (const __CFString *)_GEOFullDefaultsDomain();
    id v1 = (void *)CFPreferencesCopyAppValue(@"DefaultsSanitizedVersion", v0);
    BOOL v2 = (CFStringRef *)MEMORY[0x1E4F1D3F0];
    id v3 = (CFStringRef *)MEMORY[0x1E4F1D3C8];
    if (!v1)
    {
      CFStringRef v4 = (const __CFString *)_GEOFullDefaultsDomain();
      CFArrayRef v5 = CFPreferencesCopyKeyList(v4, *v2, *v3);
      long long v33 = 0u;
      long long v34 = 0u;
      long long v35 = 0u;
      long long v36 = 0u;
      CFArrayRef v6 = v5;
      uint64_t v7 = [(__CFArray *)v6 countByEnumeratingWithState:&v33 objects:v37 count:16];
      if (v7)
      {
        uint64_t v8 = v7;
        uint64_t v9 = *(void *)v34;
        do
        {
          for (uint64_t i = 0; i != v8; ++i)
          {
            if (*(void *)v34 != v9) {
              objc_enumerationMutation(v6);
            }
            char v11 = *(__CFString **)(*((void *)&v33 + 1) + 8 * i);
            if (([(__CFString *)v11 hasPrefix:@"LogLevel"] & 1) == 0
              && ([(__CFString *)v11 hasPrefix:@"ConsoleLogLevel"] & 1) == 0
              && ([(__CFString *)v11 isEqualToString:@"DeviceCountryCode"] & 1) == 0
              && ([(__CFString *)v11 isEqualToString:@"GEOUseProductionURLs"] & 1) == 0
              && ([(__CFString *)v11 isEqualToString:@"GEOLastNetworkDefaultsURL"] & 1) == 0
              && ([(__CFString *)v11 isEqualToString:@"HelpImproveMapsAddressCorrectionAuthStatus"] & 1) == 0&& ([(__CFString *)v11 isEqualToString:@"GEOMapLocalizeLabels"] & 1) == 0)
            {
              CFStringRef v12 = (const __CFString *)_GEOFullDefaultsDomain();
              CFPreferencesSetAppValue(v11, 0, v12);
            }
          }
          uint64_t v8 = [(__CFArray *)v6 countByEnumeratingWithState:&v33 objects:v37 count:16];
        }
        while (v8);
      }

      BOOL v2 = (CFStringRef *)MEMORY[0x1E4F1D3F0];
      id v3 = (CFStringRef *)MEMORY[0x1E4F1D3C8];
      id v1 = 0;
    }
    CFStringRef v13 = (const __CFString *)_GEOFullDefaultsDomain();
    CFPreferencesAppSynchronize(v13);

    _GEOConfigStorageUser();
    id v14 = (id)objc_claimAutoreleasedReturnValue();
    CFStringRef v15 = (const __CFString *)_GEOFullDefaultsDomain();
    char v16 = (void *)CFPreferencesCopyAppValue(@"DefaultsSanitizedVersion", v15);
    if (!v16
      || (objc_opt_class(), (objc_opt_isKindOfClass() & 1) == 0)
      || [v16 integerValue] != 20190107)
    {
      char v17 = [MEMORY[0x1E4F1CAD0] setWithArray:&unk_1ED73EE30];
      CFStringRef v18 = (const __CFString *)_GEOFullDefaultsDomain();
      CFStringRef v19 = *v2;
      CFStringRef v20 = *v3;
      CFArrayRef v21 = CFPreferencesCopyKeyList(v18, *v2, *v3);
      unint64_t v22 = [MEMORY[0x1E4F1CA80] setWithArray:v21];
      [v22 minusSet:v17];
      CFArrayRef v23 = [v22 allObjects];
      CFStringRef v24 = (const __CFString *)_GEOFullDefaultsDomain();
      CFDictionaryRef v25 = CFPreferencesCopyMultiple(v23, v24, v19, v20);
      v37[0] = MEMORY[0x1E4F143A8];
      v37[1] = 3221225472;
      v37[2] = ___migrateUserDefaults_block_invoke;
      v37[3] = &unk_1E53E5900;
      id v38 = v14;
      [(__CFDictionary *)v25 enumerateKeysAndObjectsUsingBlock:v37];
      CFStringRef v26 = (const __CFString *)_GEOFullDefaultsDomain();
      CFPreferencesSetMultiple(0, v23, v26, v19, v20);
      CFStringRef v27 = (const __CFString *)_GEOFullDefaultsDomain();
      CFPreferencesSetAppValue(@"DefaultsSanitizedVersion", &unk_1ED73DDF8, v27);
      CFStringRef v28 = (const __CFString *)_GEOFullDefaultsDomain();
      CFPreferencesAppSynchronize(v28);
    }
    GEOMigrateCountryConfig(v14);
    _migrateKeys((void (*)(void))_deletedKeysUserStore, v14, 0);
    _cleanupSundanceBackup(v14);
    int v29 = _GEOConfigStorageXPC();
    _migrateKeys((void (*)(void))GeoServicesConfig_GetConfigStoreStringKeysForXPCMigration, v14, v29);
    BOOL v30 = +[GEOPlatform sharedPlatform];
    int v31 = [v30 supportsMultiUser];

    if (v31)
    {
      BOOL v32 = _GEOConfigStorageSystem();
      _migrateKeys((void (*)(void))GeoServicesConfig_GetConfigStoreStringKeysForSystemMigration, v14, v32);
      _cleanupSundanceBackup(v32);
    }
  }
}

void _migrateKeys(void (*a1)(void), void *a2, void *a3)
{
  uint64_t v23 = *MEMORY[0x1E4F143B8];
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = v6;
  if (v6) {
    uint64_t v8 = v6;
  }
  else {
    uint64_t v8 = v5;
  }
  id v9 = v8;
  unint64_t v10 = [v9 getConfigValueForKey:@"GEODefaultsRevision" countryCode:0 options:0 source:0];
  if (([v10 isEqual:&unk_1ED73DDE0] & 1) == 0)
  {
    char v11 = a1();
    long long v18 = 0u;
    long long v19 = 0u;
    long long v20 = 0u;
    long long v21 = 0u;
    uint64_t v12 = [v11 countByEnumeratingWithState:&v18 objects:v22 count:16];
    if (v12)
    {
      uint64_t v13 = v12;
      uint64_t v14 = *(void *)v19;
      do
      {
        for (uint64_t i = 0; i != v13; ++i)
        {
          if (*(void *)v19 != v14) {
            objc_enumerationMutation(v11);
          }
          uint64_t v16 = *(void *)(*((void *)&v18 + 1) + 8 * i);
          char v17 = [v5 getConfigValueForKey:v16 countryCode:0 options:0 source:0];
          [v7 setConfigValue:v17 forKey:v16 options:0 synchronous:1];
          [v5 setConfigValue:0 forKey:v16 options:0 synchronous:1];
        }
        uint64_t v13 = [v11 countByEnumeratingWithState:&v18 objects:v22 count:16];
      }
      while (v13);
    }
    [v9 setConfigValue:&unk_1ED73DDE0 forKey:@"GEODefaultsRevision" options:0 synchronous:1];
  }
}

void *_deletedKeysUserStore()
{
  return &unk_1ED73EE48;
}

void _cleanupSundanceBackup(void *a1)
{
  uint64_t v34 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  BOOL v2 = [v1 getConfigValueForKey:@"DisableSundanceCleanup" countryCode:0 options:0 source:0];
  if (v2)
  {
    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      if ([v2 BOOLValue])
      {
        id v3 = j__GEOGetUserDefaultsLog();
        if (!os_log_type_enabled(v3, OS_LOG_TYPE_DEBUG))
        {
LABEL_7:

          goto LABEL_33;
        }
        *(_WORD *)buf = 0;
        CFStringRef v4 = "Sundance cleanup disabled, not running";
        id v5 = v3;
        uint32_t v6 = 2;
LABEL_6:
        _os_log_impl(&dword_188D96000, v5, OS_LOG_TYPE_DEBUG, v4, buf, v6);
        goto LABEL_7;
      }
    }
  }
  uint64_t v7 = +[GEOPlatform sharedPlatform];
  if ([v7 isInternalInstall]) {
    unint64_t v8 = 6;
  }
  else {
    unint64_t v8 = 2;
  }

  long long v26 = 0u;
  long long v27 = 0u;
  long long v24 = 0u;
  long long v25 = 0u;
  uint64_t v9 = [&unk_1ED73EE60 countByEnumeratingWithState:&v24 objects:v33 count:16];
  if (v9)
  {
    uint64_t v10 = v9;
    unint64_t v11 = 0;
    uint64_t v12 = *(void *)v25;
    while (2)
    {
      for (uint64_t i = 0; i != v10; ++i)
      {
        if (*(void *)v25 != v12) {
          objc_enumerationMutation(&unk_1ED73EE60);
        }
        uint64_t v14 = [v1 getConfigValueForKey:*(void *)(*((void *)&v24 + 1) + 8 * i) countryCode:0 options:0 source:0];

        if (v14) {
          ++v11;
        }
        if (v11 >= v8)
        {
          CFStringRef v15 = j__GEOGetUserDefaultsLog();
          if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
          {
            *(_DWORD *)buf = 67109376;
            int v30 = v11;
            __int16 v31 = 1024;
            int v32 = v8;
            _os_log_impl(&dword_188D96000, v15, OS_LOG_TYPE_DEFAULT, "Found %d keys (met threshold %d) running Sundance cleanup", buf, 0xEu);
          }

          long long v22 = 0u;
          long long v23 = 0u;
          long long v20 = 0u;
          long long v21 = 0u;
          uint64_t v16 = [&unk_1ED73EE60 countByEnumeratingWithState:&v20 objects:v28 count:16];
          if (v16)
          {
            uint64_t v17 = v16;
            uint64_t v18 = *(void *)v21;
            do
            {
              for (uint64_t j = 0; j != v17; ++j)
              {
                if (*(void *)v21 != v18) {
                  objc_enumerationMutation(&unk_1ED73EE60);
                }
                [v1 setConfigValue:0 forKey:*(void *)(*((void *)&v20 + 1) + 8 * j) options:0 synchronous:1];
              }
              uint64_t v17 = [&unk_1ED73EE60 countByEnumeratingWithState:&v20 objects:v28 count:16];
            }
            while (v17);
          }
          goto LABEL_33;
        }
      }
      uint64_t v10 = [&unk_1ED73EE60 countByEnumeratingWithState:&v24 objects:v33 count:16];
      if (v10) {
        continue;
      }
      break;
    }
    if (v11)
    {
      id v3 = j__GEOGetUserDefaultsLog();
      if (!os_log_type_enabled(v3, OS_LOG_TYPE_DEBUG)) {
        goto LABEL_7;
      }
      *(_DWORD *)buf = 67109376;
      int v30 = v11;
      __int16 v31 = 1024;
      int v32 = v8;
      CFStringRef v4 = "Found %d keys (under threshold %d) NOT running Sundance cleanup";
      id v5 = v3;
      uint32_t v6 = 14;
      goto LABEL_6;
    }
  }
LABEL_33:
}

uint64_t ___migrateUserDefaults_block_invoke(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return [*(id *)(a1 + 32) setConfigValue:a3 forKey:a2 options:0 synchronous:1];
}

id GEOUsageSearchFoundationFeedbackDataForMapsData(void *a1)
{
  id v1 = a1;
  if ([v1 length])
  {
    BOOL v2 = +[GEOMapItemStorage mapItemStorageForSerializedPlaceData:v1];
    id v3 = v2;
    if (v2
      && [v2 conformsToProtocol:&unk_1ED78BC80]
      && [v3 isValid])
    {
      CFStringRef v4 = +[GEOPlaceActionDetails actionDetailsWithMapItem:v3 timestamp:0xFFFFFFFFLL resultIndex:0.0];
      id v5 = [v4 data];
    }
    else
    {
      id v5 = 0;
    }
  }
  else
  {
    id v5 = 0;
  }

  return v5;
}

void sub_189BEBFAC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, _Unwind_Exception *exception_object, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16)
{
  _Unwind_Resume(a1);
}

id GEOGetCyclingMapMatcherLog(void)
{
  if (qword_1EB29FD48 != -1) {
    dispatch_once(&qword_1EB29FD48, &__block_literal_global_106);
  }
  CFStringRef v0 = (void *)_MergedGlobals_253;

  return v0;
}

void sub_189BEC32C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

void sub_189BEC4D8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189BEC54C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189BEC5E8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189BEC66C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189BEC710(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void ___ZL26GEOGetCyclingMapMatcherLogv_block_invoke()
{
  os_log_t v0 = os_log_create("com.apple.GeoServices", "CyclingMapMatcher");
  id v1 = (void *)_MergedGlobals_253;
  _MergedGlobals_253 = (uint64_t)v0;
}

uint64_t GEOPDPlaceRequestType_SupportsOffline(unsigned int a1)
{
  return (a1 < 0x3D) & (0x1004108000881E86uLL >> a1);
}

void migrateTransitSteps(void *a1, unint64_t a2)
{
  uint64_t v42 = *MEMORY[0x1E4F143B8];
  long long v36 = 0u;
  long long v37 = 0u;
  long long v38 = 0u;
  long long v39 = 0u;
  obuint64_t j = a1;
  uint64_t v3 = [obj countByEnumeratingWithState:&v36 objects:v41 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v35 = *(void *)v37;
    do
    {
      uint64_t v5 = 0;
      do
      {
        if (*(void *)v37 != v35) {
          objc_enumerationMutation(obj);
        }
        id v6 = [*(id *)(*((void *)&v36 + 1) + 8 * v5) instructions];
        if (v6 && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) == 0))
        {
          if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
          {
            *(_WORD *)buf = 0;
            _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Assertion failed: !instructionSet || [instructionSet isKindOfClass:GEOInstructionSet.class]", buf, 2u);
          }
        }
        else
        {
          uint64_t v7 = [v6 countStopsText];
          migrateFormattedString(v7, a2);

          unint64_t v8 = [v6 departureBar];
          migrateFormattedString(v8, a2);

          uint64_t v9 = [v6 drivingWalkingListInstruction];
          uint64_t v10 = -[GEODrivingWalkingInstruction title](v9);
          migrateFormattedString(v10, a2);

          unint64_t v11 = -[GEODrivingWalkingInstruction continueCommands](v9);
          migrateFormattedStrings(v11, a2);

          uint64_t v12 = -[GEODrivingWalkingInstruction mergeCommands](v9);
          migrateFormattedStrings(v12, a2);

          uint64_t v13 = -[GEODrivingWalkingInstruction normalCommands](v9);
          migrateFormattedStrings(v13, a2);

          uint64_t v14 = [v6 drivingWalkingSignInstruction];
          CFStringRef v15 = -[GEODrivingWalkingInstruction title](v14);
          migrateFormattedString(v15, a2);

          uint64_t v16 = -[GEODrivingWalkingInstruction continueCommands](v14);
          migrateFormattedStrings(v16, a2);

          uint64_t v17 = -[GEODrivingWalkingInstruction mergeCommands](v14);
          migrateFormattedStrings(v17, a2);

          uint64_t v18 = -[GEODrivingWalkingInstruction normalCommands](v14);
          migrateFormattedStrings(v18, a2);

          long long v19 = [v6 transitListInstruction];
          long long v20 = [v19 commandFormatteds];
          migrateFormattedStrings(v20, a2);

          long long v21 = [v19 detailFormatteds];
          migrateFormattedStrings(v21, a2);

          long long v22 = [v19 noticeFormatteds];
          migrateFormattedStrings(v22, a2);

          long long v23 = [v19 priceFormatteds];
          migrateFormattedStrings(v23, a2);

          long long v24 = [v19 expandableListFormatted];
          migrateFormattedString(v24, a2);

          long long v25 = [v19 timeInstructions];
          long long v26 = [v25 primaryText];
          migrateFormattedString(v26, a2);

          long long v27 = [v25 secondaryText];
          migrateFormattedString(v27, a2);

          CFStringRef v28 = [v6 transitSignInstruction];
          int v29 = [v28 commandFormatteds];
          migrateFormattedStrings(v29, a2);

          int v30 = [v28 detailFormatteds];
          migrateFormattedStrings(v30, a2);

          __int16 v31 = [v28 noticeFormatteds];
          migrateFormattedStrings(v31, a2);

          int v32 = [v28 priceFormatteds];
          migrateFormattedStrings(v32, a2);
        }
        ++v5;
      }
      while (v4 != v5);
      uint64_t v33 = [obj countByEnumeratingWithState:&v36 objects:v41 count:16];
      uint64_t v4 = v33;
    }
    while (v33);
  }
}

void migrateFormattedString(void *a1, unint64_t a2)
{
  uint64_t v41 = *MEMORY[0x1E4F143B8];
  id v3 = a1;
  if (v3 && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) == 0))
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Assertion failed: !formattedString || [formattedString isKindOfClass:GEOFormattedString.class]", buf, 2u);
    }
  }
  else if (a2 <= 2)
  {
    unint64_t v27 = a2;
    long long v32 = 0u;
    long long v33 = 0u;
    long long v30 = 0u;
    long long v31 = 0u;
    uint64_t v4 = [v3 formatArguments];
    uint64_t v5 = [v4 countByEnumeratingWithState:&v30 objects:v34 count:16];
    if (v5)
    {
      uint64_t v6 = v5;
      uint64_t v7 = *(void *)v31;
      uint64_t v28 = *(void *)v31;
      int v29 = v4;
      do
      {
        for (uint64_t i = 0; i != v6; ++i)
        {
          if (*(void *)v31 != v7) {
            objc_enumerationMutation(v4);
          }
          uint64_t v9 = *(void **)(*((void *)&v30 + 1) + 8 * i);
          if ([v9 format] == 12)
          {
            id v10 = v9;
            if ([v10 format] == 12)
            {
              unint64_t v11 = GEOFindOrCreateLog("com.apple.GeoServices", "CompanionCompatibility");
              if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
              {
                uint64_t v12 = (objc_class *)objc_opt_class();
                uint64_t v13 = NSStringFromClass(v12);
                uint64_t v14 = [v10 token];
                *(_DWORD *)buf = 138412802;
                long long v36 = v13;
                __int16 v37 = 2048;
                id v38 = v10;
                __int16 v39 = 2112;
                char v40 = v14;
                _os_log_impl(&dword_188D96000, v11, OS_LOG_TYPE_INFO, "%@<%p> | Countdown list '%@' is now a timestamp list", buf, 0x20u);
              }
              [v10 setFormat:9];
              CFStringRef v15 = [v10 countdownData];
              uint64_t v16 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1CA48]), "initWithCapacity:", objc_msgSend(v15, "timestampValuesCount"));
              if ([v15 timestampValuesCount])
              {
                unint64_t v17 = 0;
                do
                {
                  uint64_t v18 = objc_alloc_init(GEOTimestampData);
                  -[GEOTimestampData setTimestampVal:](v18, "setTimestampVal:", [v15 timestampValueAtIndex:v17]);
                  long long v19 = [v15 timezone];
                  [(GEOTimestampData *)v18 setTimezone:v19];

                  [(GEOTimestampData *)v18 setFormatPattern:@"jjmm"];
                  [v16 addObject:v18];

                  ++v17;
                }
                while (v17 < [v15 timestampValuesCount]);
              }
              [v10 setTimestampDatas:v16];

              uint64_t v7 = v28;
              uint64_t v4 = v29;
            }
          }
        }
        uint64_t v6 = [v4 countByEnumeratingWithState:&v30 objects:v34 count:16];
      }
      while (v6);
    }

    long long v20 = [v3 formatStyles];
    uint64_t v21 = [v20 count];

    if (v21)
    {
      long long v22 = [v3 formatStyles];
      [v22 removeAllObjects];

      long long v23 = [v3 formatStrings];
      removeStyleTokensFromStrings(v23);

      long long v24 = [v3 separators];
      removeStyleTokensFromStrings(v24);
    }
    if ([v3 hasAlternativeString])
    {
      long long v25 = [v3 alternativeString];
      long long v26 = [v25 formattedString];
      migrateFormattedString(v26, v27);
    }
  }
}

void migrateFormattedStrings(void *a1, unint64_t a2)
{
  uint64_t v13 = *MEMORY[0x1E4F143B8];
  id v3 = a1;
  long long v8 = 0u;
  long long v9 = 0u;
  long long v10 = 0u;
  long long v11 = 0u;
  uint64_t v4 = [v3 countByEnumeratingWithState:&v8 objects:v12 count:16];
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = *(void *)v9;
    do
    {
      uint64_t v7 = 0;
      do
      {
        if (*(void *)v9 != v6) {
          objc_enumerationMutation(v3);
        }
        migrateFormattedString(*(void **)(*((void *)&v8 + 1) + 8 * v7++), a2);
      }
      while (v5 != v7);
      uint64_t v5 = [v3 countByEnumeratingWithState:&v8 objects:v12 count:16];
    }
    while (v5);
  }
}

void removeStyleTokensFromStrings(void *a1)
{
  uint64_t v19 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  if ([v1 count])
  {
    unint64_t v3 = 0;
    *(void *)&long long v2 = 138412546;
    long long v11 = v2;
    do
    {
      objc_msgSend(v1, "objectAtIndexedSubscript:", v3, v11);
      id v4 = (id)objc_claimAutoreleasedReturnValue();
      *(void *)buf = 0;
      *(void *)&buf[8] = buf;
      *(void *)&uint8_t buf[16] = 0x3032000000;
      uint64_t v16 = __Block_byref_object_copy__56;
      unint64_t v17 = __Block_byref_object_dispose__56;
      id v18 = 0;
      uint64_t v5 = [[GEOServerFormatStyleParser alloc] initWithString:v4];
      v12[0] = MEMORY[0x1E4F143A8];
      v12[1] = 3221225472;
      uint64_t v12[2] = __stringByRemovingStyleTokens_block_invoke;
      v12[3] = &unk_1E53E5950;
      uint64_t v14 = buf;
      id v6 = v4;
      id v13 = v6;
      [(GEOServerFormatStyleParser *)v5 enumerateTokenRangesForRemoval:v12];
      uint64_t v7 = *(void **)(*(void *)&buf[8] + 40);
      if (v7) {
        id v8 = (id)[v7 copy];
      }
      else {
        id v8 = v6;
      }
      id v9 = v8;

      _Block_object_dispose(buf, 8);
      if (v9 != v6)
      {
        long long v10 = GEOFindOrCreateLog("com.apple.GeoServices", "CompanionCompatibility");
        if (os_log_type_enabled(v10, OS_LOG_TYPE_DEBUG))
        {
          *(_DWORD *)buf = v11;
          *(void *)&uint8_t buf[4] = v6;
          *(_WORD *)&buf[12] = 2112;
          *(void *)&buf[14] = v9;
          _os_log_impl(&dword_188D96000, v10, OS_LOG_TYPE_DEBUG, " | '%@' -> '%@'", buf, 0x16u);
        }

        [v1 replaceObjectAtIndex:v3 withObject:v9];
      }

      ++v3;
    }
    while (v3 < [v1 count]);
  }
}

void sub_189BEEF10(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __stringByRemovingStyleTokens_block_invoke(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v6 = *(void **)(*(void *)(*(void *)(a1 + 40) + 8) + 40);
  if (!v6)
  {
    uint64_t v7 = [*(id *)(a1 + 32) mutableCopy];
    uint64_t v8 = *(void *)(*(void *)(a1 + 40) + 8);
    id v9 = *(void **)(v8 + 40);
    *(void *)(v8 + 40) = v7;

    id v6 = *(void **)(*(void *)(*(void *)(a1 + 40) + 8) + 40);
  }

  return objc_msgSend(v6, "replaceCharactersInRange:withString:", a2, a3, &stru_1ED51F370);
}

id GEOGetCompanionExtrasLog()
{
  if (qword_1EB29FD58 != -1) {
    dispatch_once(&qword_1EB29FD58, &__block_literal_global_107);
  }
  os_log_t v0 = (void *)_MergedGlobals_254;

  return v0;
}

void __GEOGetCompanionExtrasLog_block_invoke()
{
  os_log_t v0 = os_log_create("com.apple.GeoServices", "CompanionExtras");
  id v1 = (void *)_MergedGlobals_254;
  _MergedGlobals_254 = (uint64_t)v0;
}

uint64_t GEOTrafficDensityForRouteTravelTime(long double a1, long double a2)
{
  double v4 = pow(a2, 1.7) * 0.000167 + 300.0;
  if (v4 + a2 > a1) {
    return 0;
  }
  if (a2 + v4 * 2.0 > a1) {
    return 1;
  }
  if (a2 + v4 * 3.0 <= a1) {
    return 3;
  }
  return 2;
}

uint64_t GEORelativeTrafficDensityForRouteTravelTime(long double a1, long double a2)
{
  double v4 = pow(a2, 1.7) * 0.000167 + 300.0;
  uint64_t v5 = 2;
  if (v4 + a2 >= a1) {
    uint64_t v5 = 1;
  }
  if (a2 - v4 <= a1) {
    return v5;
  }
  else {
    return 0;
  }
}

void sub_189BFB320(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189BFB3C4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189BFB438(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189BFB53C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189BFB5E0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189BFB680(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189BFB7DC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189BFB8AC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189BFB9D0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189BFBB1C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189BFC838(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *a18, void *a19, uint64_t a20,uint64_t a21,uint64_t a22,void *a23,uint64_t a24,void *a25,void *a26,uint64_t a27,void *a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,char a57)
{
  zilch::Message::~Message((zilch::Message *)&a57);
  _Unwind_Resume(a1);
}

void sub_189BFCD54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10)
{
  zilch::WriteBitstream::~WriteBitstream((zilch::WriteBitstream *)&a9);
  zilch::Message::~Message((zilch::Message *)&a10);

  _Unwind_Resume(a1);
}

void sub_189BFD024(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, void *a12)
{
  _Unwind_Resume(a1);
}

void sub_189BFD160(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189BFD27C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189BFD3D8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189BFD510(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189BFD5C0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189BFEAF8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_189BFF4D0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189BFF590(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189BFF71C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t GEOVoltaireTileRequesterHandleStaleManifestForErrors(void *a1, void *a2)
{
  uint64_t v26 = *MEMORY[0x1E4F143B8];
  id v3 = a1;
  id v19 = a2;
  long long v21 = 0u;
  long long v22 = 0u;
  long long v23 = 0u;
  long long v24 = 0u;
  id v4 = v3;
  uint64_t v5 = [v4 countByEnumeratingWithState:&v21 objects:v25 count:16];
  if (v5)
  {
    uint64_t v6 = v5;
    uint64_t v7 = *(void *)v22;
    while (2)
    {
      for (uint64_t i = 0; i != v6; ++i)
      {
        if (*(void *)v22 != v7) {
          objc_enumerationMutation(v4);
        }
        id v9 = *(void **)(*((void *)&v21 + 1) + 8 * i);
        long long v10 = [v9 userInfo];
        long long v11 = [v10 objectForKey:@"HTTPStatus"];
        uint64_t v12 = v11;
        if (v11)
        {
          if ([v11 isEqualToNumber:&unk_1ED73DE10])
          {
            uint64_t v16 = GEOGetTileLoadingLog();
            if (os_log_type_enabled(v16, OS_LOG_TYPE_INFO))
            {
              *(_WORD *)buf = 0;
              _os_log_impl(&dword_188D96000, v16, OS_LOG_TYPE_INFO, "Encountered HTTP 410 response. Forcing manifest update.", buf, 2u);
            }

            [v19 updateManifest:1 completionHandler:0];
            goto LABEL_19;
          }
        }
        else
        {
          id v13 = [v9 userInfo];
          uint64_t v14 = [v13 objectForKeyedSubscript:@"SimpleTileRequesterUnderlyingErrors"];

          if ([v14 count] && (GEOVoltaireTileRequesterHandleStaleManifestForErrors(v14, v19) & 1) != 0)
          {

LABEL_19:
            uint64_t v15 = 1;
            goto LABEL_20;
          }
        }
      }
      uint64_t v6 = [v4 countByEnumeratingWithState:&v21 objects:v25 count:16];
      if (v6) {
        continue;
      }
      break;
    }
  }
  uint64_t v15 = 0;
LABEL_20:

  return v15;
}

void sub_189C00A14(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDAddressResultSubTypeFilterReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 80));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 76);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 72)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  int v11 = ((*(unsigned __int8 *)(a1 + 84) >> 1) & 1)
      + (*(unsigned char *)(a1 + 84) & 1)
      + ((*(unsigned __int8 *)(a1 + 84) >> 2) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v9])
    {
      case -4:
        ++v11;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_9;
      case 0:
        BOOL v14 = v11 != 0;
        int v15 = v14 & ~v10 | v7;
        int v76 = v14 | v10;
        uint64_t v16 = (int *)MEMORY[0x1E4F940E8];
        if (((v14 | v10) | v8)) {
          unint64_t v17 = 0;
        }
        else {
          unint64_t v17 = a3;
        }
        int v74 = 1;
        if (*(void *)(v3 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(v3 + *v6)) {
          goto LABEL_98;
        }
        char v73 = v15;
        int v75 = (v9 != 0) | v76 | v15;
        id v18 = (int *)MEMORY[0x1E4F940C8];
        id v19 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v11;
LABEL_7:
        uint64_t v12 = v7;
LABEL_8:
        uint64_t v13 = v10;
LABEL_9:
        ++v9;
        uint64_t v7 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(unsigned char *)(v3 + *v18)) {
      goto LABEL_96;
    }
    char v20 = 0;
    unsigned int v21 = 0;
    unint64_t v22 = 0;
    while (1)
    {
      uint64_t v23 = *v16;
      uint64_t v24 = *(void *)(v3 + v23);
      unint64_t v25 = v24 + 1;
      if (v24 == -1 || v25 > *(void *)(v3 + *v6)) {
        break;
      }
      char v26 = *(unsigned char *)(*(void *)(v3 + *v19) + v24);
      *(void *)(v3 + v23) = v25;
      v22 |= (unint64_t)(v26 & 0x7F) << v20;
      if ((v26 & 0x80) == 0) {
        goto LABEL_24;
      }
      v20 += 7;
      BOOL v27 = v21++ >= 9;
      if (v27)
      {
        unint64_t v22 = 0;
        int v28 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_26;
      }
    }
    *(unsigned char *)(v3 + *v18) = 1;
LABEL_24:
    int v28 = *(unsigned __int8 *)(v3 + *v18);
    if (*(unsigned char *)(v3 + *v18)) {
      unint64_t v22 = 0;
    }
LABEL_26:
    int v29 = v22 & 7;
    if (v28 || v29 == 4)
    {
LABEL_96:
      int v74 = 1;
      goto LABEL_97;
    }
    unint64_t v31 = v22 >> 3;
    BOOL v32 = v76;
    if (!((v17 == 0) | v76 & 1))
    {
      long long v33 = v17;
      do
      {
        int v35 = *v33++;
        int v34 = v35;
        BOOL v32 = v35 != 0;
        if (v35) {
          BOOL v36 = v34 == v31;
        }
        else {
          BOOL v36 = 1;
        }
      }
      while (!v36);
    }
    if (v31 == 2) {
      break;
    }
    if (v31 == 1)
    {
      if (v32 && (*(unsigned char *)(a1 + 84) & 4) == 0)
      {
        if (v29 == 2)
        {
          if (!PBReaderPlaceMark()) {
            goto LABEL_115;
          }
          while (*(void *)(v3 + *v16) < *(void *)(v3 + *v6) && !*(unsigned char *)(v3 + *v18))
          {
            char v37 = 0;
            unsigned int v38 = 0;
            uint64_t v39 = 0;
            while (1)
            {
              uint64_t v40 = *v16;
              uint64_t v41 = *(void *)(v3 + v40);
              unint64_t v42 = v41 + 1;
              if (v41 == -1 || v42 > *(void *)(v3 + *v6)) {
                break;
              }
              char v43 = *(unsigned char *)(*(void *)(v3 + *v19) + v41);
              *(void *)(v3 + v40) = v42;
              v39 |= (unint64_t)(v43 & 0x7F) << v37;
              if (v43 < 0)
              {
                v37 += 7;
                BOOL v27 = v38++ >= 9;
                if (!v27) {
                  continue;
                }
              }
              goto LABEL_53;
            }
            *(unsigned char *)(v3 + *v18) = 1;
LABEL_53:
            PBRepeatedInt32Add();
          }
LABEL_77:
          PBReaderRecallMark();
LABEL_94:
          if ((v75 & 1) == 0) {
            goto LABEL_96;
          }
          goto LABEL_95;
        }
        char v54 = 0;
        unsigned int v55 = 0;
        uint64_t v56 = 0;
        while (1)
        {
          uint64_t v57 = *v16;
          uint64_t v58 = *(void *)(v3 + v57);
          unint64_t v59 = v58 + 1;
          if (v58 == -1 || v59 > *(void *)(v3 + *v6)) {
            break;
          }
          char v60 = *(unsigned char *)(*(void *)(v3 + *v19) + v58);
          *(void *)(v3 + v57) = v59;
          v56 |= (unint64_t)(v60 & 0x7F) << v54;
          if (v60 < 0)
          {
            v54 += 7;
            BOOL v61 = v55++ > 8;
            if (!v61) {
              continue;
            }
          }
          goto LABEL_93;
        }
LABEL_92:
        *(unsigned char *)(v3 + *v18) = 1;
LABEL_93:
        PBRepeatedInt32Add();
        goto LABEL_94;
      }
    }
    else if ((v73 & 1) != 0 && (*(unsigned char *)(a1 + 84) & 1) == 0)
    {
      if (!*(void *)(a1 + 16))
      {
        id v51 = objc_alloc_init(MEMORY[0x1E4F940B0]);
        char v52 = *(void **)(a1 + 16);
        *(void *)(a1 + 16) = v51;
      }
      if ((PBUnknownFieldAdd() & 1) == 0)
      {
        int v74 = 0;
LABEL_99:
        *(unsigned char *)(a1 + 84) |= 1u;
        goto LABEL_100;
      }
      goto LABEL_94;
    }
LABEL_75:
    int v53 = PBReaderSkipValueWithTag();
    if ((v53 & v75 & 1) == 0)
    {
      int v74 = v53;
      goto LABEL_97;
    }
LABEL_95:
    if (*(void *)(v3 + *v16) >= *(void *)(v3 + *v6)) {
      goto LABEL_96;
    }
  }
  if (!v32 || (*(unsigned char *)(a1 + 84) & 2) != 0) {
    goto LABEL_75;
  }
  if (v29 != 2)
  {
    char v62 = 0;
    unsigned int v63 = 0;
    uint64_t v64 = 0;
    while (1)
    {
      uint64_t v65 = *v16;
      uint64_t v66 = *(void *)(v3 + v65);
      unint64_t v67 = v66 + 1;
      if (v66 == -1 || v67 > *(void *)(v3 + *v6)) {
        goto LABEL_92;
      }
      char v68 = *(unsigned char *)(*(void *)(v3 + *v19) + v66);
      *(void *)(v3 + v65) = v67;
      v64 |= (unint64_t)(v68 & 0x7F) << v62;
      if (v68 < 0)
      {
        v62 += 7;
        BOOL v61 = v63++ > 8;
        if (!v61) {
          continue;
        }
      }
      goto LABEL_93;
    }
  }
  if (PBReaderPlaceMark())
  {
    while (*(void *)(v3 + *v16) < *(void *)(v3 + *v6) && !*(unsigned char *)(v3 + *v18))
    {
      char v44 = 0;
      unsigned int v45 = 0;
      uint64_t v46 = 0;
      while (1)
      {
        uint64_t v47 = *v16;
        uint64_t v48 = *(void *)(v3 + v47);
        unint64_t v49 = v48 + 1;
        if (v48 == -1 || v49 > *(void *)(v3 + *v6)) {
          break;
        }
        char v50 = *(unsigned char *)(*(void *)(v3 + *v19) + v48);
        *(void *)(v3 + v47) = v49;
        v46 |= (unint64_t)(v50 & 0x7F) << v44;
        if (v50 < 0)
        {
          v44 += 7;
          BOOL v27 = v45++ >= 9;
          if (!v27) {
            continue;
          }
        }
        goto LABEL_68;
      }
      *(unsigned char *)(v3 + *v18) = 1;
LABEL_68:
      PBRepeatedInt32Add();
    }
    goto LABEL_77;
  }
LABEL_115:
  int v74 = 0;
LABEL_97:
  LOBYTE(v15) = v73;
LABEL_98:
  if (v15) {
    goto LABEL_99;
  }
LABEL_100:
  if (v76 & 1 | ((v74 & 1) == 0))
  {
    *(unsigned char *)(a1 + 84) |= 4u;
    *(unsigned char *)(a1 + 84) |= 2u;
    goto LABEL_109;
  }
  if (v17)
  {
    while (1)
    {
      int v70 = *v17++;
      int v69 = v70;
      if (v70 == 1) {
        break;
      }
      if (v69 == 2)
      {
LABEL_105:
        *(unsigned char *)(a1 + 84) |= v69;
      }
      else if (!v69)
      {
        goto LABEL_109;
      }
    }
    LOBYTE(v69) = 4;
    goto LABEL_105;
  }
LABEL_109:
  if (v74) {
    unint64_t v3 = *(unsigned char *)(v3 + (int)*MEMORY[0x1E4F940C8]) == 0;
  }
  else {
    unint64_t v3 = 0;
  }
  if (v76)
  {
    char v71 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_189C0135C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C01938(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDAddressResultSubTypeFilterReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 76))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDAddressResultSubTypeFilterReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 80));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 72) = [v8 position];
  *(_DWORD *)(a1 + 76) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOPDAddressResultSubTypeFilterReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOPDAddressResultSubTypeFilterReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDAddressResultSubTypeFilterReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 80));
  return Specified;
}

void sub_189C02044(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDAddressResultSubTypeFilterIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  long long v2 = (int *)MEMORY[0x1E4F940E8];
  unint64_t v3 = (int *)MEMORY[0x1E4F940E0];
  id v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_59;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        BOOL v13 = v7++ >= 9;
        if (v13)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        goto LABEL_59;
      }
      if ((v8 >> 3) == 2) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if (v15 == 2)
        {
          if (!PBReaderPlaceMark()) {
            goto LABEL_61;
          }
LABEL_38:
          while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
          {
            unsigned int v27 = a1[*v4];
            if (a1[*v4]) {
              break;
            }
            while (1)
            {
              uint64_t v28 = *v2;
              uint64_t v29 = *(void *)&a1[v28];
              unint64_t v30 = v29 + 1;
              if (v29 == -1 || v30 > *(void *)&a1[*v3]) {
                break;
              }
              int v31 = *(char *)(*(void *)&a1[*v5] + v29);
              *(void *)&a1[v28] = v30;
              if (v31 < 0)
              {
                BOOL v13 = v27++ >= 9;
                if (!v13) {
                  continue;
                }
              }
              goto LABEL_38;
            }
            a1[*v4] = 1;
          }
LABEL_57:
          PBReaderRecallMark();
          goto LABEL_58;
        }
        if ((v8 & 7) != 0) {
          goto LABEL_61;
        }
        while (1)
        {
          uint64_t v17 = *v2;
          uint64_t v18 = *(void *)&a1[v17];
          unint64_t v19 = v18 + 1;
          if (v18 == -1 || v19 > *(void *)&a1[*v3]) {
            break;
          }
          int v20 = *(char *)(*(void *)&a1[*v5] + v18);
          *(void *)&a1[v17] = v19;
          if (v20 < 0)
          {
            unsigned int v21 = v15++;
            if (v21 <= 8) {
              continue;
            }
          }
          goto LABEL_58;
        }
LABEL_36:
        a1[*v4] = 1;
        goto LABEL_58;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        goto LABEL_61;
      }
LABEL_58:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_59;
      }
    }
    if (v15 == 2)
    {
      if (!PBReaderPlaceMark())
      {
LABEL_61:
        PBReaderRecallMark();
        return 0;
      }
LABEL_48:
      while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
      {
        unsigned int v32 = a1[*v4];
        if (a1[*v4]) {
          break;
        }
        while (1)
        {
          uint64_t v33 = *v2;
          uint64_t v34 = *(void *)&a1[v33];
          unint64_t v35 = v34 + 1;
          if (v34 == -1 || v35 > *(void *)&a1[*v3]) {
            break;
          }
          int v36 = *(char *)(*(void *)&a1[*v5] + v34);
          *(void *)&a1[v33] = v35;
          if (v36 < 0)
          {
            BOOL v13 = v32++ >= 9;
            if (!v13) {
              continue;
            }
          }
          goto LABEL_48;
        }
        a1[*v4] = 1;
      }
      goto LABEL_57;
    }
    if ((v8 & 7) != 0) {
      goto LABEL_61;
    }
    while (1)
    {
      uint64_t v22 = *v2;
      uint64_t v23 = *(void *)&a1[v22];
      unint64_t v24 = v23 + 1;
      if (v23 == -1 || v24 > *(void *)&a1[*v3]) {
        goto LABEL_36;
      }
      int v25 = *(char *)(*(void *)&a1[*v5] + v23);
      *(void *)&a1[v22] = v24;
      if (v25 < 0)
      {
        unsigned int v26 = v15++;
        if (v26 <= 8) {
          continue;
        }
      }
      goto LABEL_58;
    }
  }
LABEL_59:
  BOOL v37 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v37;
}

void sub_189C0259C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDAddressResultSubTypeFilterIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 80));
  BOOL v2 = (*(unsigned char *)(a1 + 84) & 0xE) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 80));
  return v2;
}

void sub_189C02770(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDBrowseCategoriesReadAllFrom(uint64_t a1, void *a2, int a3)
{
  uint64_t v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    char v6 = (int *)MEMORY[0x1E4F940E8];
    unsigned int v7 = (int *)MEMORY[0x1E4F940E0];
    unint64_t v8 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v5[*MEMORY[0x1E4F940E8]] < *(void *)&v5[*MEMORY[0x1E4F940E0]])
    {
      uint64_t v9 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v5[*v8]) {
          break;
        }
        char v10 = 0;
        unsigned int v11 = 0;
        unint64_t v12 = 0;
        while (1)
        {
          uint64_t v13 = *v6;
          uint64_t v14 = *(void *)&v5[v13];
          unint64_t v15 = v14 + 1;
          if (v14 == -1 || v15 > *(void *)&v5[*v7]) {
            break;
          }
          char v16 = *(unsigned char *)(*(void *)&v5[*v9] + v14);
          *(void *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0) {
            goto LABEL_13;
          }
          v10 += 7;
          if (v11++ >= 9)
          {
            unint64_t v12 = 0;
            int v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        int v18 = v5[*v8];
        if (v5[*v8]) {
          unint64_t v12 = 0;
        }
LABEL_15:
        if (v18 || (v12 & 7) == 4) {
          break;
        }
        if ((v12 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_29;
          }
          int v20 = objc_alloc_init(GEOPDBrowseCategory);
          if (!GEOPDBrowseCategoryReadAllFrom((uint64_t)v20, v5, a3))
          {

            goto LABEL_29;
          }
          PBReaderRecallMark();
          -[GEOPDBrowseCategories addBrowseCategory:](a1, v20);
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v21 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            uint64_t v22 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v21;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_29;
          }
        }
      }
      while (*(void *)&v5[*v6] < *(void *)&v5[*v7]);
    }
    BOOL v23 = v5[*v8] == 0;
  }
  else
  {
LABEL_29:
    BOOL v23 = 0;
  }
  objc_sync_exit(v5);

  return v23;
}

void sub_189C03344(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDBrowseCategoryIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  unint64_t v3 = (int *)MEMORY[0x1E4F940E0];
  id v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 != 2) {
            goto LABEL_88;
          }
          goto LABEL_34;
        case 2u:
          if (v15 == 2) {
            goto LABEL_34;
          }
          goto LABEL_88;
        case 3u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOStyleAttributesIsValid(a1)) {
            goto LABEL_88;
          }
          goto LABEL_30;
        case 4u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDBrowseCategoryIsValid(a1)) {
            goto LABEL_88;
          }
LABEL_30:
          PBReaderRecallMark();
          continue;
        case 5u:
          if (v15 == 2) {
            goto LABEL_34;
          }
          goto LABEL_88;
        case 6u:
          if (v15 == 2) {
            goto LABEL_34;
          }
          goto LABEL_88;
        case 7u:
          if ((v8 & 7) != 0) {
            goto LABEL_88;
          }
          unsigned int v17 = 0;
          while (1)
          {
            uint64_t v18 = *v2;
            uint64_t v19 = *(void *)&a1[v18];
            unint64_t v20 = v19 + 1;
            if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
              goto LABEL_84;
            }
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if (v21 < 0)
            {
              BOOL v22 = v17++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_85;
          }
        case 8u:
          if ((v8 & 7) != 0) {
            goto LABEL_88;
          }
          unsigned int v23 = 0;
          while (1)
          {
            uint64_t v24 = *v2;
            uint64_t v25 = *(void *)&a1[v24];
            unint64_t v26 = v25 + 1;
            if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
              goto LABEL_84;
            }
            int v27 = *(char *)(*(void *)&a1[*v5] + v25);
            *(void *)&a1[v24] = v26;
            if (v27 < 0)
            {
              BOOL v22 = v23++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_85;
          }
        case 9u:
          if ((v8 & 7) != 0) {
            goto LABEL_88;
          }
          unsigned int v28 = 0;
          while (1)
          {
            uint64_t v29 = *v2;
            uint64_t v30 = *(void *)&a1[v29];
            unint64_t v31 = v30 + 1;
            if (v30 == -1 || v31 > *(void *)&a1[*v3]) {
              goto LABEL_84;
            }
            int v32 = *(char *)(*(void *)&a1[*v5] + v30);
            *(void *)&a1[v29] = v31;
            if (v32 < 0)
            {
              BOOL v22 = v28++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_85;
          }
        case 0xAu:
          if ((v8 & 7) != 0) {
            goto LABEL_88;
          }
          unsigned int v33 = 0;
          while (1)
          {
            uint64_t v34 = *v2;
            uint64_t v35 = *(void *)&a1[v34];
            unint64_t v36 = v35 + 1;
            if (v35 == -1 || v36 > *(void *)&a1[*v3]) {
              goto LABEL_84;
            }
            int v37 = *(char *)(*(void *)&a1[*v5] + v35);
            *(void *)&a1[v34] = v36;
            if (v37 < 0)
            {
              BOOL v22 = v33++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_85;
          }
        case 0xBu:
          if ((v8 & 7) != 0) {
            goto LABEL_88;
          }
          unsigned int v38 = 0;
          while (1)
          {
            uint64_t v39 = *v2;
            uint64_t v40 = *(void *)&a1[v39];
            unint64_t v41 = v40 + 1;
            if (v40 == -1 || v41 > *(void *)&a1[*v3]) {
              goto LABEL_84;
            }
            int v42 = *(char *)(*(void *)&a1[*v5] + v40);
            *(void *)&a1[v39] = v41;
            if (v42 < 0)
            {
              BOOL v22 = v38++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_85;
          }
        case 0xCu:
          if ((v8 & 7) != 0) {
            goto LABEL_88;
          }
          unsigned int v43 = 0;
          break;
        default:
LABEL_34:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_88:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        uint64_t v44 = *v2;
        uint64_t v45 = *(void *)&a1[v44];
        unint64_t v46 = v45 + 1;
        if (v45 == -1 || v46 > *(void *)&a1[*v3]) {
          break;
        }
        int v47 = *(char *)(*(void *)&a1[*v5] + v45);
        *(void *)&a1[v44] = v46;
        if (v47 < 0)
        {
          BOOL v22 = v43++ > 8;
          if (!v22) {
            continue;
          }
        }
        goto LABEL_85;
      }
LABEL_84:
      a1[*v4] = 1;
LABEL_85:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v48 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v48;
}

BOOL GEOPDBrowseCategoriesFilterReadAllFrom(uint64_t a1, void *a2)
{
  unint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    id v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          char v18 = 0;
          unsigned int v19 = 0;
          uint64_t v20 = 0;
          *(unsigned char *)(a1 + 20) |= 1u;
          while (1)
          {
            uint64_t v21 = *v4;
            uint64_t v22 = *(void *)&v3[v21];
            unint64_t v23 = v22 + 1;
            if (v22 == -1 || v23 > *(void *)&v3[*v5]) {
              break;
            }
            char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
            *(void *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0) {
              goto LABEL_32;
            }
            v18 += 7;
            BOOL v15 = v19++ >= 9;
            if (v15)
            {
              uint64_t v20 = 0;
              goto LABEL_34;
            }
          }
          v3[*v6] = 1;
LABEL_32:
          if (v3[*v6]) {
            uint64_t v20 = 0;
          }
LABEL_34:
          *(unsigned char *)(a1 + 16) = v20 != 0;
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v25 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            unint64_t v26 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v25;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_37;
          }
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v27 = v3[*v6] == 0;
  }
  else
  {
LABEL_37:
    BOOL v27 = 0;
  }
  objc_sync_exit(v3);

  return v27;
}

void sub_189C04434(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C047B4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDBrowseCategoryReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 80));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 76);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 72)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  unsigned int v12 = (unsigned __int16)(vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int16 *)(a1 + 100)), (uint16x4_t)0xFFF5FFF6FFF4FFF9), (int8x8_t)0x1000100010001))+ ((*(_WORD *)(a1 + 100) >> 9) & 1)+ (HIBYTE(*(_WORD *)(a1 + 100)) & 1)+ ((*(_WORD *)(a1 + 100) >> 6) & 1));
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 > 3;
        char v17 = v16 & ~(_BYTE)v11 | v9;
        unsigned __int8 v18 = v16 | v11;
        char v97 = v17;
        char v98 = v8;
        char v99 = v18 | v17;
        if ((v18 | v8)) {
          unsigned int v19 = 0;
        }
        else {
          unsigned int v19 = a3;
        }
        char v100 = (v19 == 0) | v18;
        BOOL v101 = v18;
        uint64_t v20 = (int *)MEMORY[0x1E4F940E8];
        uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
        uint64_t v22 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v9;
LABEL_8:
        uint64_t v14 = v10;
        uint64_t v15 = v11;
LABEL_10:
        ++v7;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v21)) {
      goto LABEL_158;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      BOOL v30 = v24++ >= 9;
      if (v30)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_25:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_158:
      int v95 = 1;
      goto LABEL_159;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v101;
    if ((v100 & 1) == 0)
    {
      uint64_t v35 = v19;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    switch((int)v33)
    {
      case 1:
        if (!v34) {
          goto LABEL_117;
        }
        if ((*(_WORD *)(a1 + 100) & 0x1000) == 0)
        {
          uint64_t v39 = PBReaderReadData();
          uint64_t v40 = 64;
          goto LABEL_67;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_179;
        }
        __int16 v90 = 8 * *(_WORD *)(a1 + 100);
        goto LABEL_155;
      case 2:
        if (!v34) {
          goto LABEL_117;
        }
        if ((*(_WORD *)(a1 + 100) & 0x80) == 0)
        {
          uint64_t v39 = PBReaderReadString();
          uint64_t v40 = 24;
          goto LABEL_67;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_179;
        }
        __int16 v90 = *(_WORD *)(a1 + 100) << 8;
        goto LABEL_155;
      case 3:
        if (!v34) {
          goto LABEL_117;
        }
        if ((*(_WORD *)(a1 + 100) & 0x400) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_179;
          }
          __int16 v90 = 32 * *(_WORD *)(a1 + 100);
LABEL_155:
          v7 += v90 >> 15;
          goto LABEL_156;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_179;
        }
        uint64_t v44 = objc_alloc_init(GEOStyleAttributes);
        if (GEOStyleAttributesReadAllFrom((uint64_t)v44, (void *)v3))
        {
          PBReaderRecallMark();
          uint64_t v45 = *(void **)(a1 + 48);
          *(void *)(a1 + 48) = v44;
LABEL_68:

          --v7;
LABEL_156:
          uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
          goto LABEL_157;
        }
LABEL_178:

LABEL_179:
        int v95 = 0;
        char v96 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__flags;
        uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_160:
        if (v97) {
LABEL_161:
        }
          *(_WORD *)(a1 + v96[1003]) |= 0x40u;
        if (v101 || (v95 & 1) == 0)
        {
          *(_WORD *)(a1 + v96[1003]) |= 0x1000u;
          *(_WORD *)(a1 + v96[1003]) |= 0x80u;
          *(_WORD *)(a1 + v96[1003]) |= 0x400u;
          *(_WORD *)(a1 + v96[1003]) |= 0x800u;
          *(_WORD *)(a1 + v96[1003]) |= 0x200u;
          *(_WORD *)(a1 + v96[1003]) |= 0x100u;
        }
        else if (v19)
        {
          while (1)
          {
            int v91 = *v19++;
            __int16 v92 = 4096;
            switch(v91)
            {
              case 0:
                goto LABEL_172;
              case 1:
                goto LABEL_171;
              case 2:
                __int16 v92 = 128;
                goto LABEL_171;
              case 3:
                __int16 v92 = 1024;
                goto LABEL_171;
              case 4:
                __int16 v92 = 2048;
                goto LABEL_171;
              case 5:
                __int16 v92 = 512;
                goto LABEL_171;
              case 6:
                __int16 v92 = 256;
LABEL_171:
                *(_WORD *)(a1 + v96[1003]) |= v92;
                break;
              default:
                continue;
            }
          }
        }
LABEL_172:
        if (v95) {
          unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
        }
        else {
          unint64_t v3 = 0;
        }
        if (v101)
        {
          unsigned int v93 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      case 4:
        if (!v34 || (*(_WORD *)(a1 + 100) & 0x800) != 0) {
          goto LABEL_117;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_179;
        }
        uint64_t v44 = objc_alloc_init(GEOPDBrowseCategory);
        if (!GEOPDBrowseCategoryReadAllFrom()) {
          goto LABEL_178;
        }
        PBReaderRecallMark();
        -[GEOPDBrowseCategory _addNoFlagsSubCategory:](a1, v44);

        goto LABEL_156;
      case 5:
        if (!v34) {
          goto LABEL_117;
        }
        if ((*(_WORD *)(a1 + 100) & 0x200) == 0)
        {
          uint64_t v39 = PBReaderReadString();
          uint64_t v40 = 40;
          goto LABEL_67;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_179;
        }
        __int16 v90 = *(_WORD *)(a1 + 100) << 6;
        goto LABEL_155;
      case 6:
        if (!v34) {
          goto LABEL_117;
        }
        if ((*(_WORD *)(a1 + 100) & 0x100) == 0)
        {
          uint64_t v39 = PBReaderReadString();
          uint64_t v40 = 32;
LABEL_67:
          uint64_t v45 = *(void **)(a1 + v40);
          *(void *)(a1 + v40) = v39;
          goto LABEL_68;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_179;
        }
        __int16 v90 = *(_WORD *)(a1 + 100) << 7;
        goto LABEL_155;
      case 7:
        if ((v98 & 1) == 0) {
          goto LABEL_117;
        }
        char v46 = 0;
        unsigned int v47 = 0;
        uint64_t v48 = 0;
        *(_WORD *)(a1 + 100) |= 2u;
        while (2)
        {
          uint64_t v49 = *v20;
          uint64_t v50 = *(void *)(v3 + v49);
          unint64_t v51 = v50 + 1;
          if (v50 == -1 || v51 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v52 = *(unsigned char *)(*(void *)(v3 + *v22) + v50);
            *(void *)(v3 + v49) = v51;
            v48 |= (unint64_t)(v52 & 0x7F) << v46;
            if (v52 < 0)
            {
              v46 += 7;
              BOOL v30 = v47++ >= 9;
              if (v30)
              {
                LODWORD(v48) = 0;
                goto LABEL_122;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          LODWORD(v48) = 0;
        }
LABEL_122:
        uint64_t v87 = 88;
        goto LABEL_131;
      case 8:
        if ((v98 & 1) == 0) {
          goto LABEL_117;
        }
        char v53 = 0;
        unsigned int v54 = 0;
        uint64_t v48 = 0;
        *(_WORD *)(a1 + 100) |= 1u;
        while (2)
        {
          uint64_t v55 = *v20;
          uint64_t v56 = *(void *)(v3 + v55);
          unint64_t v57 = v56 + 1;
          if (v56 == -1 || v57 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v58 = *(unsigned char *)(*(void *)(v3 + *v22) + v56);
            *(void *)(v3 + v55) = v57;
            v48 |= (unint64_t)(v58 & 0x7F) << v53;
            if (v58 < 0)
            {
              v53 += 7;
              BOOL v30 = v54++ >= 9;
              if (v30)
              {
                LODWORD(v48) = 0;
                goto LABEL_126;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          LODWORD(v48) = 0;
        }
LABEL_126:
        uint64_t v87 = 84;
        goto LABEL_131;
      case 9:
        if ((v98 & 1) == 0) {
          goto LABEL_117;
        }
        char v59 = 0;
        unsigned int v60 = 0;
        uint64_t v48 = 0;
        *(_WORD *)(a1 + 100) |= 4u;
        while (2)
        {
          uint64_t v61 = *v20;
          uint64_t v62 = *(void *)(v3 + v61);
          unint64_t v63 = v62 + 1;
          if (v62 == -1 || v63 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v64 = *(unsigned char *)(*(void *)(v3 + *v22) + v62);
            *(void *)(v3 + v61) = v63;
            v48 |= (unint64_t)(v64 & 0x7F) << v59;
            if (v64 < 0)
            {
              v59 += 7;
              BOOL v30 = v60++ >= 9;
              if (v30)
              {
                LODWORD(v48) = 0;
                goto LABEL_130;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          LODWORD(v48) = 0;
        }
LABEL_130:
        uint64_t v87 = 92;
LABEL_131:
        *(_DWORD *)(a1 + v87) = v48;
        goto LABEL_157;
      case 10:
        if ((v98 & 1) == 0) {
          goto LABEL_117;
        }
        char v65 = 0;
        unsigned int v66 = 0;
        uint64_t v67 = 0;
        *(_WORD *)(a1 + 100) |= 0x20u;
        while (2)
        {
          uint64_t v68 = *v20;
          uint64_t v69 = *(void *)(v3 + v68);
          unint64_t v70 = v69 + 1;
          if (v69 == -1 || v70 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v71 = *(unsigned char *)(*(void *)(v3 + *v22) + v69);
            *(void *)(v3 + v68) = v70;
            v67 |= (unint64_t)(v71 & 0x7F) << v65;
            if (v71 < 0)
            {
              v65 += 7;
              BOOL v30 = v66++ >= 9;
              if (v30)
              {
                uint64_t v67 = 0;
                goto LABEL_135;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          uint64_t v67 = 0;
        }
LABEL_135:
        BOOL v88 = v67 != 0;
        uint64_t v89 = 98;
        goto LABEL_144;
      case 11:
        if ((v98 & 1) == 0) {
          goto LABEL_117;
        }
        char v72 = 0;
        unsigned int v73 = 0;
        uint64_t v74 = 0;
        *(_WORD *)(a1 + 100) |= 8u;
        while (2)
        {
          uint64_t v75 = *v20;
          uint64_t v76 = *(void *)(v3 + v75);
          unint64_t v77 = v76 + 1;
          if (v76 == -1 || v77 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v78 = *(unsigned char *)(*(void *)(v3 + *v22) + v76);
            *(void *)(v3 + v75) = v77;
            v74 |= (unint64_t)(v78 & 0x7F) << v72;
            if (v78 < 0)
            {
              v72 += 7;
              BOOL v30 = v73++ >= 9;
              if (v30)
              {
                uint64_t v74 = 0;
                goto LABEL_139;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          uint64_t v74 = 0;
        }
LABEL_139:
        BOOL v88 = v74 != 0;
        uint64_t v89 = 96;
        goto LABEL_144;
      case 12:
        if ((v98 & 1) == 0) {
          goto LABEL_117;
        }
        char v79 = 0;
        unsigned int v80 = 0;
        uint64_t v81 = 0;
        *(_WORD *)(a1 + 100) |= 0x10u;
        while (2)
        {
          uint64_t v82 = *v20;
          uint64_t v83 = *(void *)(v3 + v82);
          unint64_t v84 = v83 + 1;
          if (v83 == -1 || v84 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v85 = *(unsigned char *)(*(void *)(v3 + *v22) + v83);
            *(void *)(v3 + v82) = v84;
            v81 |= (unint64_t)(v85 & 0x7F) << v79;
            if (v85 < 0)
            {
              v79 += 7;
              BOOL v30 = v80++ >= 9;
              if (v30)
              {
                uint64_t v81 = 0;
                goto LABEL_143;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          uint64_t v81 = 0;
        }
LABEL_143:
        BOOL v88 = v81 != 0;
        uint64_t v89 = 97;
LABEL_144:
        *(unsigned char *)(a1 + v89) = v88;
        goto LABEL_157;
      default:
        if ((v97 & 1) == 0 || (*(_WORD *)(a1 + 100) & 0x40) != 0)
        {
LABEL_117:
          char v86 = PBReaderSkipValueWithTag();
          uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
          if ((v86 & 1) == 0)
          {
            int v95 = 0;
LABEL_159:
            char v96 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__flags;
            goto LABEL_160;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v41 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            int v42 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v41;
          }
          int v43 = PBUnknownFieldAdd();
          uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
          if (!v43)
          {
            int v95 = 0;
            char v96 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__flags;
            goto LABEL_161;
          }
        }
LABEL_157:
        if (!(v99 & 1 | (v7 != 0))) {
          goto LABEL_158;
        }
        continue;
    }
  }
}

void sub_189C05598(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C05728(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C058B8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C05AE4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C05C74(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C066B8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDBrowseCategoryCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  [*(id *)(a1 + 48) readAll:1];
  long long v9 = 0u;
  long long v10 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  id v2 = *(id *)(a1 + 56);
  uint64_t v3 = [v2 countByEnumeratingWithState:&v7 objects:v11 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v8;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v8 != v5) {
          objc_enumerationMutation(v2);
        }
        -[GEOPDBrowseCategory readAll:](*(void *)(*((void *)&v7 + 1) + 8 * v6++), 1);
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v7 objects:v11 count:16];
    }
    while (v4);
  }
}

unint64_t GEOPDBrowseCategoryReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 76))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDBrowseCategoryReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)long long v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 80));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 72) = [v8 position];
  *(_DWORD *)(a1 + 76) = [v8 length];
  if (a3) {
    long long v9 = (int *)&GEOPDBrowseCategoryReadAllFrom_recursiveTag;
  }
  else {
    long long v9 = (int *)&GEOPDBrowseCategoryReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDBrowseCategoryReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOPDBrowseCategoryCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 80));
  return Specified;
}

void sub_189C07260(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C075D4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDBrowseCategoryIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 80));
  BOOL v2 = (*(_WORD *)(a1 + 100) & 0x3F80) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 80));
  return v2;
}

void sub_189C07A1C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDResultRefinementMetadataIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_41;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        goto LABEL_41;
      }
      unint64_t v17 = v8 >> 3;
      if ((v8 >> 3) == 3) {
        break;
      }
      if (v17 == 2)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDResultRefinementMetadataDefaultIsValid(a1)) {
          goto LABEL_43;
        }
LABEL_36:
        PBReaderRecallMark();
        goto LABEL_40;
      }
      if (v17 == 1)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_43;
        }
        unsigned int v18 = 0;
        while (1)
        {
          uint64_t v19 = *v2;
          uint64_t v20 = *(void *)&a1[v19];
          unint64_t v21 = v20 + 1;
          if (v20 == -1 || v21 > *(void *)&a1[*v3]) {
            break;
          }
          int v22 = *(char *)(*(void *)&a1[*v5] + v20);
          *(void *)&a1[v19] = v21;
          if (v22 < 0 && v18++ <= 8) {
            continue;
          }
          goto LABEL_40;
        }
        a1[*v4] = 1;
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_43;
      }
LABEL_40:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_41;
      }
    }
    if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDResultRefinementMetadataSortIsValid(a1))
    {
LABEL_43:
      PBReaderRecallMark();
      return 0;
    }
    goto LABEL_36;
  }
LABEL_41:
  BOOL v24 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v24;
}

void sub_189C08B74(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C09610(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C09A68(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDPoiIconCategoryFilterReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 80));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 76);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 72)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  int v11 = ((*(unsigned __int8 *)(a1 + 84) >> 1) & 1)
      + (*(unsigned char *)(a1 + 84) & 1)
      + ((*(unsigned __int8 *)(a1 + 84) >> 2) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v9])
    {
      case -4:
        ++v11;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_9;
      case 0:
        BOOL v14 = v11 != 0;
        int v15 = v14 & ~v10 | v7;
        int v76 = v14 | v10;
        BOOL v16 = (int *)MEMORY[0x1E4F940E8];
        if (((v14 | v10) | v8)) {
          unint64_t v17 = 0;
        }
        else {
          unint64_t v17 = a3;
        }
        int v74 = 1;
        if (*(void *)(v3 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(v3 + *v6)) {
          goto LABEL_98;
        }
        char v73 = v15;
        int v75 = (v9 != 0) | v76 | v15;
        unsigned int v18 = (int *)MEMORY[0x1E4F940C8];
        uint64_t v19 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v11;
LABEL_7:
        uint64_t v12 = v7;
LABEL_8:
        uint64_t v13 = v10;
LABEL_9:
        ++v9;
        uint64_t v7 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(unsigned char *)(v3 + *v18)) {
      goto LABEL_96;
    }
    char v20 = 0;
    unsigned int v21 = 0;
    unint64_t v22 = 0;
    while (1)
    {
      uint64_t v23 = *v16;
      uint64_t v24 = *(void *)(v3 + v23);
      unint64_t v25 = v24 + 1;
      if (v24 == -1 || v25 > *(void *)(v3 + *v6)) {
        break;
      }
      char v26 = *(unsigned char *)(*(void *)(v3 + *v19) + v24);
      *(void *)(v3 + v23) = v25;
      v22 |= (unint64_t)(v26 & 0x7F) << v20;
      if ((v26 & 0x80) == 0) {
        goto LABEL_24;
      }
      v20 += 7;
      BOOL v27 = v21++ >= 9;
      if (v27)
      {
        unint64_t v22 = 0;
        int v28 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_26;
      }
    }
    *(unsigned char *)(v3 + *v18) = 1;
LABEL_24:
    int v28 = *(unsigned __int8 *)(v3 + *v18);
    if (*(unsigned char *)(v3 + *v18)) {
      unint64_t v22 = 0;
    }
LABEL_26:
    int v29 = v22 & 7;
    if (v28 || v29 == 4)
    {
LABEL_96:
      int v74 = 1;
      goto LABEL_97;
    }
    unint64_t v31 = v22 >> 3;
    BOOL v32 = v76;
    if (!((v17 == 0) | v76 & 1))
    {
      unint64_t v33 = v17;
      do
      {
        int v35 = *v33++;
        int v34 = v35;
        BOOL v32 = v35 != 0;
        if (v35) {
          BOOL v36 = v34 == v31;
        }
        else {
          BOOL v36 = 1;
        }
      }
      while (!v36);
    }
    if (v31 == 2) {
      break;
    }
    if (v31 == 1)
    {
      if (v32 && (*(unsigned char *)(a1 + 84) & 4) == 0)
      {
        if (v29 == 2)
        {
          if (!PBReaderPlaceMark()) {
            goto LABEL_115;
          }
          while (*(void *)(v3 + *v16) < *(void *)(v3 + *v6) && !*(unsigned char *)(v3 + *v18))
          {
            char v37 = 0;
            unsigned int v38 = 0;
            uint64_t v39 = 0;
            while (1)
            {
              uint64_t v40 = *v16;
              uint64_t v41 = *(void *)(v3 + v40);
              unint64_t v42 = v41 + 1;
              if (v41 == -1 || v42 > *(void *)(v3 + *v6)) {
                break;
              }
              char v43 = *(unsigned char *)(*(void *)(v3 + *v19) + v41);
              *(void *)(v3 + v40) = v42;
              v39 |= (unint64_t)(v43 & 0x7F) << v37;
              if (v43 < 0)
              {
                v37 += 7;
                BOOL v27 = v38++ >= 9;
                if (!v27) {
                  continue;
                }
              }
              goto LABEL_53;
            }
            *(unsigned char *)(v3 + *v18) = 1;
LABEL_53:
            PBRepeatedUInt32Add();
          }
LABEL_77:
          PBReaderRecallMark();
LABEL_94:
          if ((v75 & 1) == 0) {
            goto LABEL_96;
          }
          goto LABEL_95;
        }
        char v54 = 0;
        unsigned int v55 = 0;
        uint64_t v56 = 0;
        while (1)
        {
          uint64_t v57 = *v16;
          uint64_t v58 = *(void *)(v3 + v57);
          unint64_t v59 = v58 + 1;
          if (v58 == -1 || v59 > *(void *)(v3 + *v6)) {
            break;
          }
          char v60 = *(unsigned char *)(*(void *)(v3 + *v19) + v58);
          *(void *)(v3 + v57) = v59;
          v56 |= (unint64_t)(v60 & 0x7F) << v54;
          if (v60 < 0)
          {
            v54 += 7;
            BOOL v61 = v55++ > 8;
            if (!v61) {
              continue;
            }
          }
          goto LABEL_93;
        }
LABEL_92:
        *(unsigned char *)(v3 + *v18) = 1;
LABEL_93:
        PBRepeatedUInt32Add();
        goto LABEL_94;
      }
    }
    else if ((v73 & 1) != 0 && (*(unsigned char *)(a1 + 84) & 1) == 0)
    {
      if (!*(void *)(a1 + 16))
      {
        id v51 = objc_alloc_init(MEMORY[0x1E4F940B0]);
        char v52 = *(void **)(a1 + 16);
        *(void *)(a1 + 16) = v51;
      }
      if ((PBUnknownFieldAdd() & 1) == 0)
      {
        int v74 = 0;
LABEL_99:
        *(unsigned char *)(a1 + 84) |= 1u;
        goto LABEL_100;
      }
      goto LABEL_94;
    }
LABEL_75:
    int v53 = PBReaderSkipValueWithTag();
    if ((v53 & v75 & 1) == 0)
    {
      int v74 = v53;
      goto LABEL_97;
    }
LABEL_95:
    if (*(void *)(v3 + *v16) >= *(void *)(v3 + *v6)) {
      goto LABEL_96;
    }
  }
  if (!v32 || (*(unsigned char *)(a1 + 84) & 2) != 0) {
    goto LABEL_75;
  }
  if (v29 != 2)
  {
    char v62 = 0;
    unsigned int v63 = 0;
    uint64_t v64 = 0;
    while (1)
    {
      uint64_t v65 = *v16;
      uint64_t v66 = *(void *)(v3 + v65);
      unint64_t v67 = v66 + 1;
      if (v66 == -1 || v67 > *(void *)(v3 + *v6)) {
        goto LABEL_92;
      }
      char v68 = *(unsigned char *)(*(void *)(v3 + *v19) + v66);
      *(void *)(v3 + v65) = v67;
      v64 |= (unint64_t)(v68 & 0x7F) << v62;
      if (v68 < 0)
      {
        v62 += 7;
        BOOL v61 = v63++ > 8;
        if (!v61) {
          continue;
        }
      }
      goto LABEL_93;
    }
  }
  if (PBReaderPlaceMark())
  {
    while (*(void *)(v3 + *v16) < *(void *)(v3 + *v6) && !*(unsigned char *)(v3 + *v18))
    {
      char v44 = 0;
      unsigned int v45 = 0;
      uint64_t v46 = 0;
      while (1)
      {
        uint64_t v47 = *v16;
        uint64_t v48 = *(void *)(v3 + v47);
        unint64_t v49 = v48 + 1;
        if (v48 == -1 || v49 > *(void *)(v3 + *v6)) {
          break;
        }
        char v50 = *(unsigned char *)(*(void *)(v3 + *v19) + v48);
        *(void *)(v3 + v47) = v49;
        v46 |= (unint64_t)(v50 & 0x7F) << v44;
        if (v50 < 0)
        {
          v44 += 7;
          BOOL v27 = v45++ >= 9;
          if (!v27) {
            continue;
          }
        }
        goto LABEL_68;
      }
      *(unsigned char *)(v3 + *v18) = 1;
LABEL_68:
      PBRepeatedUInt32Add();
    }
    goto LABEL_77;
  }
LABEL_115:
  int v74 = 0;
LABEL_97:
  LOBYTE(v15) = v73;
LABEL_98:
  if (v15) {
    goto LABEL_99;
  }
LABEL_100:
  if (v76 & 1 | ((v74 & 1) == 0))
  {
    *(unsigned char *)(a1 + 84) |= 4u;
    *(unsigned char *)(a1 + 84) |= 2u;
    goto LABEL_109;
  }
  if (v17)
  {
    while (1)
    {
      int v70 = *v17++;
      int v69 = v70;
      if (v70 == 1) {
        break;
      }
      if (v69 == 2)
      {
LABEL_105:
        *(unsigned char *)(a1 + 84) |= v69;
      }
      else if (!v69)
      {
        goto LABEL_109;
      }
    }
    LOBYTE(v69) = 4;
    goto LABEL_105;
  }
LABEL_109:
  if (v74) {
    unint64_t v3 = *(unsigned char *)(v3 + (int)*MEMORY[0x1E4F940C8]) == 0;
  }
  else {
    unint64_t v3 = 0;
  }
  if (v76)
  {
    char v71 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_189C0A3B0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C0A868(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDPoiIconCategoryFilterReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 76))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDPoiIconCategoryFilterReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 80));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 72) = [v8 position];
  *(_DWORD *)(a1 + 76) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOPDPoiIconCategoryFilterReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOPDPoiIconCategoryFilterReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDPoiIconCategoryFilterReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 80));
  return Specified;
}

void sub_189C0AD64(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C0AF48(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPoiIconCategoryFilterIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 80));
  BOOL v2 = (*(unsigned char *)(a1 + 84) & 0xE) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 80));
  return v2;
}

void sub_189C0B11C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C0B58C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDRefinementSessionStateReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  char v7 = 0;
  uint64_t v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  int v12 = ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1)
      + (*(unsigned char *)(a1 + 52) & 1)
      + ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1);
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v7 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 != 0;
        char v17 = v16 & ~(_BYTE)v11 | v9;
        unsigned __int8 v18 = v16 | v11;
        char v52 = v17;
        char v53 = v18 | v17;
        if ((v18 | v7)) {
          uint64_t v19 = 0;
        }
        else {
          uint64_t v19 = a3;
        }
        char v54 = (v19 == 0) | v18;
        BOOL v55 = v18;
        char v20 = (int *)MEMORY[0x1E4F940E8];
        unsigned int v21 = (int *)MEMORY[0x1E4F940C8];
        unint64_t v22 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v9;
LABEL_8:
        uint64_t v14 = v10;
        uint64_t v15 = v11;
LABEL_10:
        ++v8;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v21)) {
      goto LABEL_62;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      if (v24++ >= 9)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_25:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_62:
      int v50 = 1;
      goto LABEL_63;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v55;
    if ((v54 & 1) == 0)
    {
      int v35 = v19;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    if (v33 == 2) {
      break;
    }
    if (v33 == 1)
    {
      if (v34 && (*(unsigned char *)(a1 + 52) & 2) == 0)
      {
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_83;
        }
        uint64_t v39 = objc_alloc_init(GEOPDRelatedEntitySection);
        if (!GEOPDRelatedEntitySectionReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1)) {
          goto LABEL_82;
        }
        PBReaderRecallMark();
        -[GEOPDRefinementSessionState _addNoFlagsRelatedEntitySection:](a1, v39);

        goto LABEL_60;
      }
    }
    else if ((v52 & 1) != 0 && (*(unsigned char *)(a1 + 52) & 1) == 0)
    {
      if (!*(void *)(a1 + 16))
      {
        id v41 = objc_alloc_init(MEMORY[0x1E4F940B0]);
        unint64_t v42 = *(void **)(a1 + 16);
        *(void *)(a1 + 16) = v41;
      }
      int v43 = PBUnknownFieldAdd();
      unsigned int v21 = (int *)MEMORY[0x1E4F940C8];
      if (!v43)
      {
        int v50 = 0;
        id v51 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__flags;
        goto LABEL_65;
      }
      goto LABEL_61;
    }
LABEL_56:
    char v44 = PBReaderSkipValueWithTag();
    unsigned int v21 = (int *)MEMORY[0x1E4F940C8];
    if ((v44 & 1) == 0)
    {
      int v50 = 0;
LABEL_63:
      id v51 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__flags;
      goto LABEL_64;
    }
LABEL_61:
    if (!(v53 & 1 | (v8 != 0))) {
      goto LABEL_62;
    }
  }
  if (!v34) {
    goto LABEL_56;
  }
  if ((*(unsigned char *)(a1 + 52) & 4) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0) {
      goto LABEL_83;
    }
    v8 += *(unsigned __int8 *)(a1 + 52) << 29 >> 31;
    goto LABEL_60;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_83;
  }
  uint64_t v39 = objc_alloc_init(GEOPDSearchSectionList);
  if (GEOPDSearchSectionListReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1))
  {
    PBReaderRecallMark();
    uint64_t v40 = *(void **)(a1 + 32);
    *(void *)(a1 + 32) = v39;

    --v8;
LABEL_60:
    unsigned int v21 = (int *)MEMORY[0x1E4F940C8];
    goto LABEL_61;
  }
LABEL_82:

LABEL_83:
  int v50 = 0;
  id v51 = &OBJC_IVAR___GEOPDGroundViewLabelInfo__flags;
  unsigned int v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_64:
  if ((v52 & 1) == 0) {
    goto LABEL_66;
  }
LABEL_65:
  *(unsigned char *)(a1 + v51[1023]) |= 1u;
LABEL_66:
  if (v55 || (v50 & 1) == 0)
  {
    *(unsigned char *)(a1 + v51[1023]) |= 2u;
    *(unsigned char *)(a1 + v51[1023]) |= 4u;
    goto LABEL_76;
  }
  if (v19)
  {
    while (1)
    {
      int v47 = *v19++;
      int v46 = v47;
      if (v47 == 1) {
        break;
      }
      if (v46 == 2)
      {
        char v45 = 4;
LABEL_72:
        *(unsigned char *)(a1 + v51[1023]) |= v45;
      }
      else if (!v46)
      {
        goto LABEL_76;
      }
    }
    char v45 = 2;
    goto LABEL_72;
  }
LABEL_76:
  if (v50) {
    unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
  }
  else {
    unint64_t v3 = 0;
  }
  if (v55)
  {
    uint64_t v48 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_189C0BEA4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C0C6F4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDRefinementSessionStateCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v11 = *MEMORY[0x1E4F143B8];
  long long v6 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  id v1 = *(id *)(a1 + 24);
  uint64_t v2 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t v4 = *(void *)v7;
    do
    {
      uint64_t v5 = 0;
      do
      {
        if (*(void *)v7 != v4) {
          objc_enumerationMutation(v1);
        }
        -[GEOPDRelatedEntitySection readAll:](*(void *)(*((void *)&v6 + 1) + 8 * v5++), 1);
      }
      while (v3 != v5);
      uint64_t v3 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
    }
    while (v3);
  }
}

unint64_t GEOPDRefinementSessionStateReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDRefinementSessionStateReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    long long v9 = (int *)&GEOPDRefinementSessionStateReadAllFrom_recursiveTag;
  }
  else {
    long long v9 = (int *)&GEOPDRefinementSessionStateReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDRefinementSessionStateReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOPDRefinementSessionStateCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_189C0C984(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDRefinementSessionStateReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOPDRefinementSessionStateReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189C0C9E8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDRefinementSessionStateIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  uint64_t v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_30;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        goto LABEL_30;
      }
      if ((v8 >> 3) == 2) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDRelatedEntitySectionIsValid(a1)) {
          goto LABEL_31;
        }
LABEL_27:
        PBReaderRecallMark();
        goto LABEL_29;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        goto LABEL_31;
      }
LABEL_29:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_30;
      }
    }
    if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDSearchSectionListIsValid(a1))
    {
LABEL_31:
      PBReaderRecallMark();
      return 0;
    }
    goto LABEL_27;
  }
LABEL_30:
  BOOL v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

BOOL GEOPDRelatedEntitySectionIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  uint64_t v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        BOOL v13 = v7++ >= 9;
        if (v13)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 != 2) {
            goto LABEL_70;
          }
          goto LABEL_20;
        case 2u:
          if ((v8 & 7) != 0) {
            goto LABEL_70;
          }
          unsigned int v17 = 0;
          while (1)
          {
            uint64_t v18 = *v2;
            uint64_t v19 = *(void *)&a1[v18];
            unint64_t v20 = v19 + 1;
            if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
              goto LABEL_38;
            }
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if (v21 < 0)
            {
              BOOL v22 = v17++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_67;
          }
        case 3u:
          if ((v8 & 7) != 0) {
            goto LABEL_70;
          }
          unsigned int v23 = 0;
          while (1)
          {
            uint64_t v24 = *v2;
            uint64_t v25 = *(void *)&a1[v24];
            unint64_t v26 = v25 + 1;
            if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
              break;
            }
            int v27 = *(char *)(*(void *)&a1[*v5] + v25);
            *(void *)&a1[v24] = v26;
            if (v27 < 0)
            {
              BOOL v22 = v23++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_67;
          }
LABEL_38:
          a1[*v4] = 1;
          continue;
        case 4u:
          if (v15 != 2 || !PBReaderPlaceMark()) {
            goto LABEL_70;
          }
          objc_msgSend(a1, "position", 0, 0);
          [a1 length];
          break;
        default:
LABEL_20:
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_70;
          }
          continue;
      }
      while (*(void *)&a1[*v2] < *(void *)&a1[*v3] && !a1[*v4])
      {
        char v28 = 0;
        unsigned int v29 = 0;
        unint64_t v30 = 0;
        while (1)
        {
          uint64_t v31 = *v2;
          uint64_t v32 = *(void *)&a1[v31];
          unint64_t v33 = v32 + 1;
          if (v32 == -1 || v33 > *(void *)&a1[*v3]) {
            break;
          }
          char v34 = *(unsigned char *)(*(void *)&a1[*v5] + v32);
          *(void *)&a1[v31] = v33;
          v30 |= (unint64_t)(v34 & 0x7F) << v28;
          if ((v34 & 0x80) == 0) {
            goto LABEL_52;
          }
          v28 += 7;
          BOOL v13 = v29++ >= 9;
          if (v13)
          {
            unint64_t v30 = 0;
            int v35 = a1[*v4];
            goto LABEL_54;
          }
        }
        a1[*v4] = 1;
LABEL_52:
        int v35 = a1[*v4];
        if (a1[*v4]) {
          unint64_t v30 = 0;
        }
LABEL_54:
        int v36 = v30 & 7;
        if (v35 || v36 == 4) {
          break;
        }
        if ((v30 >> 3) == 2)
        {
          if (v36 == 2 && PBReaderPlaceMark() && GEOPDMapsIdentifierIsValid(a1))
          {
            PBReaderRecallMark();
            continue;
          }
LABEL_69:
          PBReaderRecallMark();
LABEL_70:
          PBReaderRecallMark();
          return 0;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_69;
        }
      }
      int v38 = a1[*v4];
      PBReaderRecallMark();
      if (v38) {
        goto LABEL_70;
      }
      PBReaderRecallMark();
LABEL_67:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v39 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v39;
}

BOOL GEOPDSearchSectionListIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  uint64_t v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] >= *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
LABEL_134:
    BOOL v70 = a1[*v4] == 0;
    PBReaderRecallMark();
    return v70;
  }
  uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
  while (1)
  {
    if (a1[*v4]) {
      goto LABEL_134;
    }
    char v6 = 0;
    unsigned int v7 = 0;
    unint64_t v8 = 0;
    while (1)
    {
      uint64_t v9 = *v2;
      uint64_t v10 = *(void *)&a1[v9];
      unint64_t v11 = v10 + 1;
      if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
        break;
      }
      char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
      *(void *)&a1[v9] = v11;
      v8 |= (unint64_t)(v12 & 0x7F) << v6;
      if ((v12 & 0x80) == 0) {
        goto LABEL_12;
      }
      v6 += 7;
      BOOL v13 = v7++ >= 9;
      if (v13)
      {
        unint64_t v8 = 0;
        int v14 = a1[*v4];
        goto LABEL_14;
      }
    }
    a1[*v4] = 1;
LABEL_12:
    int v14 = a1[*v4];
    if (a1[*v4]) {
      unint64_t v8 = 0;
    }
LABEL_14:
    int v15 = v8 & 7;
    if (v14 || v15 == 4) {
      goto LABEL_134;
    }
    if ((v8 >> 3) != 1)
    {
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        goto LABEL_137;
      }
      goto LABEL_133;
    }
    if (v15 != 2 || !PBReaderPlaceMark()) {
      goto LABEL_137;
    }
    objc_msgSend(a1, "position", 0, 0);
    [a1 length];
LABEL_22:
    if (*(void *)&a1[*v2] < *(void *)&a1[*v3] && !a1[*v4])
    {
      char v17 = 0;
      unsigned int v18 = 0;
      unint64_t v19 = 0;
      while (1)
      {
        uint64_t v20 = *v2;
        uint64_t v21 = *(void *)&a1[v20];
        unint64_t v22 = v21 + 1;
        if (v21 == -1 || v22 > *(void *)&a1[*v3]) {
          break;
        }
        char v23 = *(unsigned char *)(*(void *)&a1[*v5] + v21);
        *(void *)&a1[v20] = v22;
        v19 |= (unint64_t)(v23 & 0x7F) << v17;
        if ((v23 & 0x80) == 0) {
          goto LABEL_32;
        }
        v17 += 7;
        BOOL v13 = v18++ >= 9;
        if (v13)
        {
          unint64_t v19 = 0;
          int v24 = a1[*v4];
          goto LABEL_34;
        }
      }
      a1[*v4] = 1;
LABEL_32:
      int v24 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v19 = 0;
      }
LABEL_34:
      int v25 = v19 & 7;
      if (!v24 && v25 != 4) {
        break;
      }
    }
    int v69 = a1[*v4];
    PBReaderRecallMark();
    if (v69) {
      goto LABEL_137;
    }
    PBReaderRecallMark();
LABEL_133:
    if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
      goto LABEL_134;
    }
  }
  switch((v19 >> 3))
  {
    case 1u:
      if (v25 != 2) {
        goto LABEL_136;
      }
      goto LABEL_40;
    case 2u:
      if ((v19 & 7) != 0) {
        goto LABEL_136;
      }
      unsigned int v27 = 0;
      while (1)
      {
        uint64_t v28 = *v2;
        uint64_t v29 = *(void *)&a1[v28];
        unint64_t v30 = v29 + 1;
        if (v29 == -1 || v30 > *(void *)&a1[*v3]) {
          goto LABEL_128;
        }
        int v31 = *(char *)(*(void *)&a1[*v5] + v29);
        *(void *)&a1[v28] = v30;
        if (v31 < 0)
        {
          BOOL v32 = v27++ > 8;
          if (!v32) {
            continue;
          }
        }
        goto LABEL_22;
      }
    case 3u:
      if (v25 != 2 || !PBReaderPlaceMark()) {
        goto LABEL_136;
      }
      [a1 position];
      [a1 length];
      while (2)
      {
        while (2)
        {
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3] || a1[*v4]) {
            goto LABEL_102;
          }
          char v33 = 0;
          unsigned int v34 = 0;
          unint64_t v35 = 0;
          while (1)
          {
            uint64_t v36 = *v2;
            uint64_t v37 = *(void *)&a1[v36];
            unint64_t v38 = v37 + 1;
            if (v37 == -1 || v38 > *(void *)&a1[*v3]) {
              break;
            }
            char v39 = *(unsigned char *)(*(void *)&a1[*v5] + v37);
            *(void *)&a1[v36] = v38;
            v35 |= (unint64_t)(v39 & 0x7F) << v33;
            if ((v39 & 0x80) == 0) {
              goto LABEL_63;
            }
            v33 += 7;
            BOOL v13 = v34++ >= 9;
            if (v13)
            {
              unint64_t v35 = 0;
              int v40 = a1[*v4];
              goto LABEL_65;
            }
          }
          a1[*v4] = 1;
LABEL_63:
          int v40 = a1[*v4];
          if (a1[*v4]) {
            unint64_t v35 = 0;
          }
LABEL_65:
          int v41 = v35 & 7;
          if (v40 || v41 == 4) {
            goto LABEL_102;
          }
          if ((v35 >> 3) != 1)
          {
            if ((PBReaderSkipValueWithTag() & 1) == 0) {
              goto LABEL_135;
            }
            continue;
          }
          break;
        }
        if (v41 == 2 && PBReaderPlaceMark() && GEOPDMapsIdentifierIsValid(a1))
        {
          PBReaderRecallMark();
          continue;
        }
        goto LABEL_135;
      }
    case 4u:
      if (v25 != 2 || !PBReaderPlaceMark()) {
        goto LABEL_136;
      }
      [a1 position];
      [a1 length];
      while (2)
      {
        while (2)
        {
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3] || a1[*v4]) {
            goto LABEL_102;
          }
          char v43 = 0;
          unsigned int v44 = 0;
          unint64_t v45 = 0;
          while (1)
          {
            uint64_t v46 = *v2;
            uint64_t v47 = *(void *)&a1[v46];
            unint64_t v48 = v47 + 1;
            if (v47 == -1 || v48 > *(void *)&a1[*v3]) {
              break;
            }
            char v49 = *(unsigned char *)(*(void *)&a1[*v5] + v47);
            *(void *)&a1[v46] = v48;
            v45 |= (unint64_t)(v49 & 0x7F) << v43;
            if ((v49 & 0x80) == 0) {
              goto LABEL_89;
            }
            v43 += 7;
            BOOL v13 = v44++ >= 9;
            if (v13)
            {
              unint64_t v45 = 0;
              int v50 = a1[*v4];
              goto LABEL_91;
            }
          }
          a1[*v4] = 1;
LABEL_89:
          int v50 = a1[*v4];
          if (a1[*v4]) {
            unint64_t v45 = 0;
          }
LABEL_91:
          int v51 = v45 & 7;
          if (v50 || v51 == 4)
          {
LABEL_102:
            int v53 = a1[*v4];
            PBReaderRecallMark();
            if (v53) {
              goto LABEL_136;
            }
            PBReaderRecallMark();
            goto LABEL_22;
          }
          if ((v45 >> 3) != 1)
          {
            if ((PBReaderSkipValueWithTag() & 1) == 0) {
              goto LABEL_135;
            }
            continue;
          }
          break;
        }
        if (v51 == 2 && PBReaderPlaceMark() && GEOPDMapsIdentifierIsValid(a1))
        {
          PBReaderRecallMark();
          continue;
        }
        break;
      }
LABEL_135:
      PBReaderRecallMark();
LABEL_136:
      PBReaderRecallMark();
LABEL_137:
      PBReaderRecallMark();
      return 0;
    case 5u:
      if ((v19 & 7) != 0) {
        goto LABEL_136;
      }
      unsigned int v54 = 0;
      while (1)
      {
        uint64_t v55 = *v2;
        uint64_t v56 = *(void *)&a1[v55];
        unint64_t v57 = v56 + 1;
        if (v56 == -1 || v57 > *(void *)&a1[*v3]) {
          goto LABEL_128;
        }
        int v58 = *(char *)(*(void *)&a1[*v5] + v56);
        *(void *)&a1[v55] = v57;
        if (v58 < 0)
        {
          BOOL v32 = v54++ > 8;
          if (!v32) {
            continue;
          }
        }
        goto LABEL_22;
      }
    case 6u:
      if ((v19 & 7) != 0) {
        goto LABEL_136;
      }
      unsigned int v59 = 0;
      while (1)
      {
        uint64_t v60 = *v2;
        uint64_t v61 = *(void *)&a1[v60];
        unint64_t v62 = v61 + 1;
        if (v61 == -1 || v62 > *(void *)&a1[*v3]) {
          goto LABEL_128;
        }
        int v63 = *(char *)(*(void *)&a1[*v5] + v61);
        *(void *)&a1[v60] = v62;
        if (v63 < 0)
        {
          BOOL v32 = v59++ > 8;
          if (!v32) {
            continue;
          }
        }
        goto LABEL_22;
      }
    case 7u:
      if ((v19 & 7) != 0) {
        goto LABEL_136;
      }
      unsigned int v64 = 0;
      while (1)
      {
        uint64_t v65 = *v2;
        uint64_t v66 = *(void *)&a1[v65];
        unint64_t v67 = v66 + 1;
        if (v66 == -1 || v67 > *(void *)&a1[*v3]) {
          break;
        }
        int v68 = *(char *)(*(void *)&a1[*v5] + v66);
        *(void *)&a1[v65] = v67;
        if (v68 < 0)
        {
          BOOL v32 = v64++ > 8;
          if (!v32) {
            continue;
          }
        }
        goto LABEL_22;
      }
LABEL_128:
      a1[*v4] = 1;
      goto LABEL_22;
    default:
LABEL_40:
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        goto LABEL_136;
      }
      goto LABEL_22;
  }
}

void sub_189C0D964(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDRefinementSessionStateIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  BOOL v2 = (*(unsigned char *)(a1 + 52) & 0xE) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return v2;
}

void sub_189C0E10C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDRelatedCollectionSectionReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 2)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_29;
          }
          unsigned int v18 = objc_alloc_init(GEOPDMapsIdentifier);
          if (!GEOPDMapsIdentifierReadAllFrom((uint64_t)v18, v3))
          {

            goto LABEL_29;
          }
          PBReaderRecallMark();
          -[GEOPDRelatedCollectionSection addCollectionId:](a1, v18);
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v19 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            uint64_t v20 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v19;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_29;
          }
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v21 = v3[*v6] == 0;
  }
  else
  {
LABEL_29:
    BOOL v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_189C0EB70(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C0F298(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDRelatedEntitySectionReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  uint64_t v7 = 0;
  uint64_t v8 = 0;
  char v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  int v12 = ((*(unsigned __int8 *)(a1 + 60) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 4) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 2) & 1);
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v10])
    {
      case -4:
        ++v12;
        uint64_t v13 = v7;
        goto LABEL_8;
      case -3:
        char v9 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v13 = v7;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 != 0;
        char v17 = v16 & ~(_BYTE)v11 | v8;
        unsigned __int8 v18 = v16 | v11;
        char v68 = v17;
        char v69 = v9;
        char v70 = v18 | v17;
        if ((v18 | v9)) {
          id v19 = 0;
        }
        else {
          id v19 = a3;
        }
        char v71 = (v19 == 0) | v18;
        BOOL v72 = v18;
        uint64_t v20 = (int *)MEMORY[0x1E4F940E8];
        BOOL v21 = (int *)MEMORY[0x1E4F940C8];
        unint64_t v22 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v7;
        uint64_t v14 = v8;
LABEL_8:
        uint64_t v15 = v11;
LABEL_10:
        ++v10;
        uint64_t v7 = v13;
        uint64_t v8 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v21)) {
      goto LABEL_88;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      BOOL v30 = v24++ >= 9;
      if (v30)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_25:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_88:
      int v66 = 1;
      goto LABEL_89;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v72;
    if ((v71 & 1) == 0)
    {
      unint64_t v35 = v19;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    switch((int)v33)
    {
      case 1:
        if (!v34) {
          goto LABEL_70;
        }
        if ((*(unsigned char *)(a1 + 60) & 8) == 0)
        {
          uint64_t v39 = PBReaderReadString();
          int v40 = *(void **)(a1 + 24);
          *(void *)(a1 + 24) = v39;
          goto LABEL_69;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_109;
        }
        char v60 = 16 * *(unsigned char *)(a1 + 60);
        goto LABEL_85;
      case 2:
        if ((v69 & 1) == 0) {
          goto LABEL_70;
        }
        char v44 = 0;
        unsigned int v45 = 0;
        uint64_t v46 = 0;
        *(unsigned char *)(a1 + 60) |= 1u;
        while (2)
        {
          uint64_t v47 = *v20;
          uint64_t v48 = *(void *)(v3 + v47);
          unint64_t v49 = v48 + 1;
          if (v48 == -1 || v49 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v50 = *(unsigned char *)(*(void *)(v3 + *v22) + v48);
            *(void *)(v3 + v47) = v49;
            v46 |= (unint64_t)(v50 & 0x7F) << v44;
            if (v50 < 0)
            {
              v44 += 7;
              BOOL v30 = v45++ >= 9;
              if (v30)
              {
                LODWORD(v46) = 0;
                goto LABEL_75;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          LODWORD(v46) = 0;
        }
LABEL_75:
        uint64_t v59 = 52;
        goto LABEL_80;
      case 3:
        if ((v69 & 1) == 0) {
          goto LABEL_70;
        }
        char v51 = 0;
        unsigned int v52 = 0;
        uint64_t v46 = 0;
        *(unsigned char *)(a1 + 60) |= 2u;
        while (2)
        {
          uint64_t v53 = *v20;
          uint64_t v54 = *(void *)(v3 + v53);
          unint64_t v55 = v54 + 1;
          if (v54 == -1 || v55 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v56 = *(unsigned char *)(*(void *)(v3 + *v22) + v54);
            *(void *)(v3 + v53) = v55;
            v46 |= (unint64_t)(v56 & 0x7F) << v51;
            if (v56 < 0)
            {
              v51 += 7;
              BOOL v30 = v52++ >= 9;
              if (v30)
              {
                LODWORD(v46) = 0;
                goto LABEL_79;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          LODWORD(v46) = 0;
        }
LABEL_79:
        uint64_t v59 = 56;
LABEL_80:
        *(_DWORD *)(a1 + v59) = v46;
        goto LABEL_87;
      case 4:
        if (!v34) {
          goto LABEL_70;
        }
        if ((*(unsigned char *)(a1 + 60) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_109;
          }
          char v60 = 8 * *(unsigned char *)(a1 + 60);
LABEL_85:
          v10 += v60 >> 7;
          goto LABEL_86;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_109;
        }
        unint64_t v57 = objc_alloc_init(GEOPDRelatedCollectionSection);
        if (GEOPDRelatedCollectionSectionReadAllFrom((uint64_t)v57, (void *)v3))
        {
          PBReaderRecallMark();
          int v40 = *(void **)(a1 + 32);
          *(void *)(a1 + 32) = v57;
LABEL_69:

          --v10;
LABEL_86:
          BOOL v21 = (int *)MEMORY[0x1E4F940C8];
          goto LABEL_87;
        }

LABEL_109:
        int v66 = 0;
        unint64_t v67 = &OBJC_IVAR___GEOPDRelatedCollectionSection__collectionIds;
        BOOL v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_90:
        if (v68) {
LABEL_91:
        }
          *(unsigned char *)(a1 + v67[3]) |= 4u;
        if (v72 || (v66 & 1) == 0)
        {
          *(unsigned char *)(a1 + v67[3]) |= 8u;
          *(unsigned char *)(a1 + v67[3]) |= 0x10u;
          goto LABEL_102;
        }
        if (v19)
        {
          while (2)
          {
            while (1)
            {
              int v62 = *v19++;
              int v61 = v62;
              if (v62 == 1) {
                break;
              }
              if (v61 == 4)
              {
                char v63 = 16;
                goto LABEL_101;
              }
              if (!v61) {
                goto LABEL_102;
              }
            }
            char v63 = 8;
LABEL_101:
            *(unsigned char *)(a1 + v67[3]) |= v63;
            continue;
          }
        }
LABEL_102:
        if (v66) {
          unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
        }
        else {
          unint64_t v3 = 0;
        }
        if (v72)
        {
          unsigned int v64 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      default:
        if ((v68 & 1) == 0 || (*(unsigned char *)(a1 + 60) & 4) != 0)
        {
LABEL_70:
          char v58 = PBReaderSkipValueWithTag();
          BOOL v21 = (int *)MEMORY[0x1E4F940C8];
          if ((v58 & 1) == 0)
          {
            int v66 = 0;
LABEL_89:
            unint64_t v67 = &OBJC_IVAR___GEOPDRelatedCollectionSection__collectionIds;
            goto LABEL_90;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v41 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            unint64_t v42 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v41;
          }
          int v43 = PBUnknownFieldAdd();
          BOOL v21 = (int *)MEMORY[0x1E4F940C8];
          if (!v43)
          {
            int v66 = 0;
            unint64_t v67 = &OBJC_IVAR___GEOPDRelatedCollectionSection__collectionIds;
            goto LABEL_91;
          }
        }
LABEL_87:
        if (!(v70 & 1 | (v10 != 0))) {
          goto LABEL_88;
        }
        continue;
    }
  }
}

void sub_189C0FB14(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C0FF80(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDRelatedEntitySectionReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDRelatedEntitySectionReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    char v9 = (int *)&GEOPDRelatedEntitySectionReadAllFrom_recursiveTag;
  }
  else {
    char v9 = (int *)&GEOPDRelatedEntitySectionReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDRelatedEntitySectionReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_189C1063C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C10828(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDRelatedEntitySectionIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  BOOL v2 = (*(unsigned char *)(a1 + 60) & 0x38) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return v2;
}

void sub_189C10A78(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C10E3C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDRelatedSearchSuggestionReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 52);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 48)];
  uint64_t v7 = 0;
  uint64_t v8 = 0;
  char v9 = 0;
  uint64_t v10 = 0;
  unsigned int v11 = ((*(unsigned __int8 *)(a1 + 60) >> 3) & 1)
      + (*(unsigned char *)(a1 + 60) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 1) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 2) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v10])
    {
      case -4:
        ++v11;
        uint64_t v12 = v7;
        goto LABEL_8;
      case -3:
        char v9 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_8;
      case 0:
        BOOL v14 = v11 > 1;
        char v15 = v14 & ~(_BYTE)v7;
        unsigned __int8 v16 = v14 | v7;
        char v48 = v15 | v8;
        if ((v16 | v9)) {
          char v17 = 0;
        }
        else {
          char v17 = a3;
        }
        BOOL v51 = v16;
        char v49 = v16 | v15 | v8;
        char v50 = (v17 == 0) | v16;
        unsigned __int8 v18 = (int *)MEMORY[0x1E4F940E8];
        id v19 = (int *)MEMORY[0x1E4F940C8];
        uint64_t v20 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v11;
LABEL_7:
        uint64_t v12 = v7;
        uint64_t v13 = v8;
LABEL_8:
        ++v10;
        uint64_t v7 = v12;
        uint64_t v8 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v18) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v19)) {
      goto LABEL_65;
    }
    char v21 = 0;
    unsigned int v22 = 0;
    unint64_t v23 = 0;
    while (1)
    {
      uint64_t v24 = *v18;
      uint64_t v25 = *(void *)(v3 + v24);
      unint64_t v26 = v25 + 1;
      if (v25 == -1 || v26 > *(void *)(v3 + *v6)) {
        break;
      }
      char v27 = *(unsigned char *)(*(void *)(v3 + *v20) + v25);
      *(void *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0) {
        goto LABEL_23;
      }
      v21 += 7;
      if (v22++ >= 9)
      {
        unint64_t v23 = 0;
        int v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_25;
      }
    }
    *(unsigned char *)(v3 + *v19) = 1;
LABEL_23:
    int v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(unsigned char *)(v3 + *v19)) {
      unint64_t v23 = 0;
    }
LABEL_25:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_65:
      int v47 = 1;
      goto LABEL_66;
    }
    unint64_t v31 = v23 >> 3;
    BOOL v32 = v51;
    if ((v50 & 1) == 0)
    {
      unint64_t v33 = v17;
      do
      {
        int v35 = *v33++;
        int v34 = v35;
        BOOL v32 = v35 != 0;
        if (v35) {
          BOOL v36 = v34 == v31;
        }
        else {
          BOOL v36 = 1;
        }
      }
      while (!v36);
    }
    if (v31 == 3)
    {
      if (!v32) {
        goto LABEL_55;
      }
      if ((*(unsigned char *)(a1 + 60) & 4) != 0)
      {
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_81;
        }
        char v42 = 32 * *(unsigned char *)(a1 + 60);
        goto LABEL_63;
      }
      uint64_t v37 = PBReaderReadString();
      uint64_t v38 = 32;
      goto LABEL_48;
    }
    if (v31 == 2) {
      break;
    }
    if (v31 == 1)
    {
      if (!v32) {
        goto LABEL_55;
      }
      if ((*(unsigned char *)(a1 + 60) & 2) != 0)
      {
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_81;
        }
        char v42 = *(unsigned char *)(a1 + 60) << 6;
        goto LABEL_63;
      }
      uint64_t v37 = PBReaderReadString();
      uint64_t v38 = 24;
      goto LABEL_48;
    }
    if (v48 & 1) == 0 || (*(unsigned char *)(a1 + 60))
    {
LABEL_55:
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        goto LABEL_81;
      }
      goto LABEL_64;
    }
    if (!*(void *)(a1 + 16))
    {
      id v40 = objc_alloc_init(MEMORY[0x1E4F940B0]);
      id v41 = *(void **)(a1 + 16);
      *(void *)(a1 + 16) = v40;
    }
    if (!PBUnknownFieldAdd())
    {
      int v47 = 0;
      id v19 = (int *)MEMORY[0x1E4F940C8];
      goto LABEL_67;
    }
LABEL_64:
    id v19 = (int *)MEMORY[0x1E4F940C8];
    if (!(v49 & 1 | (v10 != 0))) {
      goto LABEL_65;
    }
  }
  if (!v32) {
    goto LABEL_55;
  }
  if ((*(unsigned char *)(a1 + 60) & 8) == 0)
  {
    uint64_t v37 = PBReaderReadData();
    uint64_t v38 = 40;
LABEL_48:
    uint64_t v39 = *(void **)(a1 + v38);
    *(void *)(a1 + v38) = v37;

    --v10;
    goto LABEL_64;
  }
  if (PBReaderSkipValueWithTag())
  {
    char v42 = 16 * *(unsigned char *)(a1 + 60);
LABEL_63:
    v10 += v42 >> 7;
    goto LABEL_64;
  }
LABEL_81:
  int v47 = 0;
  id v19 = (int *)MEMORY[0x1E4F940C8];
LABEL_66:
  if ((v48 & 1) == 0) {
    goto LABEL_68;
  }
LABEL_67:
  *(unsigned char *)(a1 + 60) |= 1u;
LABEL_68:
  if (v51 || (v47 & 1) == 0)
  {
    *(unsigned char *)(a1 + 60) |= 2u;
    *(unsigned char *)(a1 + 60) |= 8u;
    *(unsigned char *)(a1 + 60) |= 4u;
  }
  else if (v17)
  {
    while (1)
    {
      int v43 = *v17++;
      char v44 = 2;
      switch(v43)
      {
        case 0:
          goto LABEL_75;
        case 1:
          goto LABEL_74;
        case 2:
          char v44 = 8;
          goto LABEL_74;
        case 3:
          char v44 = 4;
LABEL_74:
          *(unsigned char *)(a1 + 60) |= v44;
          break;
        default:
          continue;
      }
    }
  }
LABEL_75:
  if (v47) {
    unint64_t v3 = *(unsigned char *)(v3 + *v19) == 0;
  }
  else {
    unint64_t v3 = 0;
  }
  if (v51)
  {
    unsigned int v45 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_189C1153C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C116D0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C11B44(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDRelatedSearchSuggestionReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 52))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDRelatedSearchSuggestionReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = [v8 position];
  *(_DWORD *)(a1 + 52) = [v8 length];
  if (a3) {
    char v9 = (int *)&GEOPDRelatedSearchSuggestionReadAllFrom_recursiveTag;
  }
  else {
    char v9 = (int *)&GEOPDRelatedSearchSuggestionReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDRelatedSearchSuggestionReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_189C11F38(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C120F8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDRelatedSearchSuggestionIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  BOOL v2 = (*(unsigned char *)(a1 + 60) & 0x1E) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return v2;
}

void sub_189C12304(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189C12824(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDResultRefinementReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 80));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 76);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 72)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  unsigned int v12 = (unsigned __int16)(vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int16 *)(a1 + 88)), (uint16x4_t)0xFFFAFFFDFFF9FFFBLL), (int8x8_t)0x1000100010001))+ ((*(_WORD *)(a1 + 88) >> 2) & 1)+ ((*(_WORD *)(a1 + 88) >> 4) & 1)+ ((*(_WORD *)(a1 + 88) >> 1) & 1));
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 > 3;
        char v17 = v16 & ~(_BYTE)v11 | v9;
        unsigned __int8 v18 = v16 | v11;
        char v60 = v17;
        char v61 = v18 | v17;
        if ((v18 | v8)) {
          id v19 = 0;
        }
        else {
          id v19 = a3;
        }
        char v62 = (v19 == 0) | v18;
        BOOL v63 = v18;
        uint64_t v20 = (int *)MEMORY[0x1E4F940E8];
        char v21 = (int *)MEMORY[0x1E4F940C8];
        unsigned int v22 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v9;
LABEL_8:
        uint64_t v14 = v10;
        uint64_t v15 = v11;
LABEL_10:
        ++v7;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v21)) {
      goto LABEL_105;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      BOOL v30 = v24++ >= 9;
      if (v30)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_25:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_105:
      int v58 = 1;
      goto LABEL_106;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v63;
    if ((v62 & 1) == 0)
    {
      int v35 = v19;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    switch((int)v33)
    {
      case 1:
        if ((v8 & 1) == 0) {
          goto LABEL_84;
        }
        char v39 = 0;
        unsigned int v40 = 0;
        uint64_t v41 = 0;
        *(_WORD *)(a1 + 88) |= 1u;
        while (1)
        {
          uint64_t v42 = *v20;
          uint64_t v43 = *(void *)(v3 + v42);
          unint64_t v44 = v43 + 1;
          if (v43 == -1 || v44 > *(void *)(v3 + *v6)) {
            break;
          }
          char v45 = *(unsigned char *)(*(void *)(v3 + *v22) + v43);
          *(void *)(v3 + v42) = v44;
          v41 |= (unint64_t)(v45 & 0x7F) << v39;
          if ((v45 & 0x80) == 0) {
            goto LABEL_87;
          }
          v39 += 7;
          BOOL v30 = v40++ >= 9;
          if (v30)
          {
            LODWORD(v41) = 0;
            goto LABEL_89;
          }
        }
        *(unsigned char *)(v3 + *v21) = 1;
LABEL_87:
        if (*(unsigned char *)(v3 + *v21)) {
          LODWORD(v41) = 0;
        }
LABEL_89:
        *(_DWORD *)(a1 + 84) = v41;
        goto LABEL_104;
      case 2:
        if (!v34) {
          goto LABEL_84;
        }
        if ((*(_WORD *)(a1 + 88) & 0x80) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_126;
          }
          __int16 v53 = *(_WORD *)(a1 + 88) << 8;
          goto LABEL_102;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_126;
        }
        char v49 = objc_alloc_init(GEOPDResultRefinementToggle);
        if (!GEOPDResultRefinementToggleReadAllFrom((uint64_t)v49, (void *)v3, v10 & 1)) {
          goto LABEL_125;
        }
        PBReaderRecallMark();
        uint64_t v50 = 64;
        goto LABEL_83;
      case 3:
        if (!v34) {
          goto LABEL_84;
        }
        if ((*(_WORD *)(a1 + 88) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_126;
          }
          __int16 v53 = *(_WORD *)(a1 + 88) << 10;
          goto LABEL_102;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_126;
        }
        char v49 = objc_alloc_init(GEOPDResultRefinementRange);
        if (!GEOPDResultRefinementRangeReadAllFrom((uint64_t)v49, (void *)v3, v10 & 1)) {
          goto LABEL_125;
        }
        PBReaderRecallMark();
        uint64_t v50 = 48;
        goto LABEL_83;
      case 4:
        if (!v34) {
          goto LABEL_84;
        }
        if ((*(_WORD *)(a1 + 88) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_126;
          }
          __int16 v53 = *(_WORD *)(a1 + 88) << 12;
          goto LABEL_102;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_126;
        }
        char v49 = objc_alloc_init(GEOPDResultRefinementMultiSelect);
        if (!GEOPDResultRefinementMultiSelectReadAllFrom((uint64_t)v49, (void *)v3, v10 & 1)) {
          goto LABEL_125;
        }
        PBReaderRecallMark();
        uint64_t v50 = 32;
        goto LABEL_83;
      case 5:
        if (!v34) {
          goto LABEL_84;
        }
        if ((*(_WORD *)(a1 + 88) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_126;
          }
          __int16 v53 = *(_WORD *)(a1 + 88) << 9;
          goto LABEL_102;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_126;
        }
        char v49 = objc_alloc_init(GEOPDResultRefinementSort);
        if (!GEOPDResultRefinementSortReadAllFrom((uint64_t)v49, (void *)v3, v10 & 1)) {
          goto LABEL_125;
        }
        PBReaderRecallMark();
        uint64_t v50 = 56;
        goto LABEL_83;
      case 6:
        if (!v34) {
          goto LABEL_84;
        }
        if ((*(_WORD *)(a1 + 88) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_126;
          }
          __int16 v53 = *(_WORD *)(a1 + 88) << 13;
          goto LABEL_102;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_126;
        }
        char v49 = objc_alloc_init(GEOPDResultRefinementGuidesHome);
        if (!GEOPDResultRefinementGuidesHomeReadAllFrom((uint64_t)v49, (void *)v3, v10 & 1)) {
          goto LABEL_125;
        }
        PBReaderRecallMark();
        uint64_t v50 = 24;
        goto LABEL_83;
      case 7:
        if (!v34) {
          goto LABEL_84;
        }
        if ((*(_WORD *)(a1 + 88) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_126;
          }
          __int16 v53 = *(_WORD *)(a1 + 88) << 11;
LABEL_102:
          v7 += v53 >> 15;
LABEL_103:
          char v21 = (int *)MEMORY[0x1E4F940C8];
          unsigned int v22 = (int *)MEMORY[0x1E4F940B8];
          goto LABEL_104;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_126;
        }
        char v49 = objc_alloc_init(GEOPDResultRefinementOpenOptions);
        if (GEOPDResultRefinementOpenOptionsReadAllFrom((uint64_t)v49, (void *)v3, v10 & 1))
        {
          PBReaderRecallMark();
          uint64_t v50 = 40;
LABEL_83:
          BOOL v51 = *(void **)(a1 + v50);
          *(void *)(a1 + v50) = v49;

          --v7;
          goto LABEL_103;
        }
LABEL_125:

LABEL_126:
        int v58 = 0;
        uint64_t v59 = &OBJC_IVAR___GEOPDRelatedCollectionSection__collectionIds;
        char v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_107:
        if (v60) {
LABEL_108:
        }
          *(_WORD *)(a1 + v59[18]) |= 2u;
        if (v63 || (v58 & 1) == 0)
        {
          *(_WORD *)(a1 + v59[18]) |= 0x80u;
          *(_WORD *)(a1 + v59[18]) |= 0x20u;
          *(_WORD *)(a1 + v59[18]) |= 8u;
          *(_WORD *)(a1 + v59[18]) |= 0x40u;
          *(_WORD *)(a1 + v59[18]) |= 4u;
          *(_WORD *)(a1 + v59[18]) |= 0x10u;
        }
        else if (v19)
        {
          while (1)
          {
            int v54 = *v19++;
            __int16 v55 = 128;
            switch(v54)
            {
              case 0:
                goto LABEL_119;
              case 2:
                goto LABEL_118;
              case 3:
                __int16 v55 = 32;
                goto LABEL_118;
              case 4:
                __int16 v55 = 8;
                goto LABEL_118;
              case 5:
                __int16 v55 = 64;
                goto LABEL_118;
              case 6:
                __int16 v55 = 4;
                goto LABEL_118;
              case 7:
                __int16 v55 = 16;
LABEL_118:
                *(_WORD *)(a1 + v59[18]) |= v55;
                break;
              default:
                continue;
            }
          }
        }
LABEL_119:
        if (v58) {
          unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
        }
        else {
          unint64_t v3 = 0;
        }
        if (v63)
        {
          char v56 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      default:
        if ((v60 & 1) == 0 || (*(_WORD *)(a1 + 88) & 2) != 0)
        {
LABEL_84:
          char v52 = PBReaderSkipValueWithTag();
          unsigned int v22 = (int *)MEMORY[0x1E4F940B8];
          char v21 = (int *)MEMORY[0x1E4F940C8];
          if ((v52 & 1) == 0)
          {
            int v58 = 0;
LABEL_106:
            uint64_t v59 = &OBJC_IVAR___GEOPDRelatedCollectionSection__collectionIds;
            goto LABEL_107;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v46 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            int v47 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v46;
          }
          int v48 = PBUnknownFieldAdd();
          char v21 = (int *)MEMORY[0x1E4F940C8];
          unsigned int v22 = (int *)MEMORY[0x1E4F940B8];
          if (!v48)
          {
            int v58 = 0;
            uint64_t v59 = &OBJC_IVAR___GEOPDRelatedCollectionSection__collectionIds;
            goto LABEL_108;
          }
        }
LABEL_104:
        if (!(v61 & 1 | (v7 != 0))) {
          goto LABEL_105;
        }
        continue;
    }
  }
}