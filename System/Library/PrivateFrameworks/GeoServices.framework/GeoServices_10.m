BOOL GEORouteAnnotationIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v14;
  int v15;
  int v16;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  int v22;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  BOOL v27;

  [a1 position];
  [a1 length];
  v2 = (int *)MEMORY[0x1E4F940E8];
  v3 = (int *)MEMORY[0x1E4F940E0];
  v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    v5 = (int *)MEMORY[0x1E4F940B8];
    while (!a1[*v4])
    {
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(void *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = *v4;
          v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = *v4;
      v15 = a1[v14];
      if (a1[v14]) {
        v8 = 0;
      }
LABEL_14:
      v16 = v8 & 7;
      if (v15 || v16 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_46;
          }
          v18 = 0;
          do
          {
            v19 = *v2;
            v20 = *(void *)&a1[v19];
            v21 = v20 + 1;
            if (v20 == -1 || v21 > *(void *)&a1[*v3])
            {
              v14 = *v4;
              goto LABEL_42;
            }
            v22 = *(char *)(*(void *)&a1[*v5] + v20);
            *(void *)&a1[v19] = v21;
            if ((v22 & 0x80000000) == 0) {
              break;
            }
          }
          while (v18++ <= 8);
          goto LABEL_43;
        case 2u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOPBTransitArtworkIsValid(a1)) {
            goto LABEL_46;
          }
          goto LABEL_36;
        case 3u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOMiniCardIsValid(a1)) {
            goto LABEL_46;
          }
LABEL_36:
          PBReaderRecallMark();
          goto LABEL_43;
        case 4u:
          if (v16 != 5) {
            goto LABEL_46;
          }
          v24 = *v2;
          v25 = *(void *)&a1[v24];
          if (v25 > 0xFFFFFFFFFFFFFFFBLL || (v26 = v25 + 4, v26 > *(void *)&a1[*v3])) {
LABEL_42:
          }
            a1[v14] = 1;
          else {
            *(void *)&a1[v24] = v26;
          }
          goto LABEL_43;
        default:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_46:
            PBReaderRecallMark();
            return 0;
          }
LABEL_43:
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_44;
          }
          break;
      }
    }
  }
LABEL_44:
  v27 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v27;
}

void sub_1897A0D44(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOEnrouteNoticeIsDirty(uint64_t a1)
{
  uint64_t v13 = *MEMORY[0x1E4F143B8];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  __int16 v2 = *(_WORD *)(a1 + 88);
  if ((v2 & 0xB00) != 0) {
    return 1;
  }
  if ((*(_WORD *)(a1 + 88) & 0x400) != 0)
  {
    if (GEORouteAnnotationIsDirty(*(os_unfair_lock_s **)(a1 + 40))) {
      return 1;
    }
    __int16 v2 = *(_WORD *)(a1 + 88);
  }
  if ((v2 & 0x100) == 0) {
    return 0;
  }
  long long v10 = 0u;
  long long v11 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  id v5 = *(id *)(a1 + 24);
  uint64_t v3 = [v5 countByEnumeratingWithState:&v8 objects:v12 count:16];
  if (v3)
  {
    uint64_t v6 = *(void *)v9;
    while (2)
    {
      for (uint64_t i = 0; i != v3; ++i)
      {
        if (*(void *)v9 != v6) {
          objc_enumerationMutation(v5);
        }
        if (GEOGuidanceEventIsDirty(*(os_unfair_lock_s **)(*((void *)&v8 + 1) + 8 * i)))
        {
          uint64_t v3 = 1;
          goto LABEL_19;
        }
      }
      uint64_t v3 = [v5 countByEnumeratingWithState:&v8 objects:v12 count:16];
      if (v3) {
        continue;
      }
      break;
    }
  }
LABEL_19:

  return v3;
}

os_unfair_lock_s *GEOEnrouteNoticeIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOEnrouteNoticeIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 14);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_1897A1500(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897A1BD8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOFareOptionsReadAllFrom(uint64_t a1, void *a2)
{
  uint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    v4 = (int *)MEMORY[0x1E4F940E8];
    id v5 = (int *)MEMORY[0x1E4F940E0];
    uint64_t v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      v7 = (int *)MEMORY[0x1E4F940B8];
      while (1)
      {
        if (v3[*v6]) {
          goto LABEL_49;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          goto LABEL_49;
        }
        if ((v10 >> 3) == 2) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          char v18 = 0;
          unsigned int v19 = 0;
          uint64_t v20 = 0;
          *(unsigned char *)(a1 + 24) |= 2u;
          while (1)
          {
            uint64_t v21 = *v4;
            uint64_t v22 = *(void *)&v3[v21];
            unint64_t v23 = v22 + 1;
            if (v22 == -1 || v23 > *(void *)&v3[*v5])
            {
              v26 = &OBJC_IVAR___GEOFareOptions__preferredSurchargeType;
              goto LABEL_41;
            }
            char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
            *(void *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0) {
              break;
            }
            v18 += 7;
            BOOL v25 = v19++ > 8;
            if (v25)
            {
              LODWORD(v20) = 0;
              v26 = &OBJC_IVAR___GEOFareOptions__preferredSurchargeType;
              goto LABEL_44;
            }
          }
          v26 = &OBJC_IVAR___GEOFareOptions__preferredSurchargeType;
LABEL_42:
          if (v3[*v6]) {
            LODWORD(v20) = 0;
          }
LABEL_44:
          *(_DWORD *)(a1 + *v26) = v20;
          goto LABEL_45;
        }
        if (!*(void *)(a1 + 8))
        {
          id v33 = objc_alloc_init(MEMORY[0x1E4F940B0]);
          v34 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = v33;
        }
        if ((PBUnknownFieldAdd() & 1) == 0) {
          goto LABEL_50;
        }
LABEL_45:
        if (*(void *)&v3[*v4] >= *(void *)&v3[*v5]) {
          goto LABEL_49;
        }
      }
      char v27 = 0;
      unsigned int v28 = 0;
      uint64_t v20 = 0;
      *(unsigned char *)(a1 + 24) |= 1u;
      while (1)
      {
        uint64_t v29 = *v4;
        uint64_t v30 = *(void *)&v3[v29];
        unint64_t v31 = v30 + 1;
        if (v30 == -1 || v31 > *(void *)&v3[*v5]) {
          break;
        }
        char v32 = *(unsigned char *)(*(void *)&v3[*v7] + v30);
        *(void *)&v3[v29] = v31;
        v20 |= (unint64_t)(v32 & 0x7F) << v27;
        if ((v32 & 0x80) == 0)
        {
          v26 = &OBJC_IVAR___GEOFareOptions__paymentType;
          goto LABEL_42;
        }
        v27 += 7;
        BOOL v25 = v28++ > 8;
        if (v25)
        {
          LODWORD(v20) = 0;
          v26 = &OBJC_IVAR___GEOFareOptions__paymentType;
          goto LABEL_44;
        }
      }
      v26 = &OBJC_IVAR___GEOFareOptions__paymentType;
LABEL_41:
      v3[*v6] = 1;
      goto LABEL_42;
    }
LABEL_49:
    BOOL v35 = v3[*v6] == 0;
  }
  else
  {
LABEL_50:
    BOOL v35 = 0;
  }
  objc_sync_exit(v3);

  return v35;
}

void sub_1897A27F0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOFareOptionsReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOFareOptionsReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1897A2854(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOFareOptionsIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  __int16 v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    id v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_39;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      if (v14 || (v8 & 7) == 4) {
        goto LABEL_39;
      }
      if ((v8 >> 3) == 2) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_41;
        }
        unsigned int v16 = 0;
        while (1)
        {
          uint64_t v17 = *v2;
          uint64_t v18 = *(void *)&a1[v17];
          unint64_t v19 = v18 + 1;
          if (v18 == -1 || v19 > *(void *)&a1[*v3]) {
            break;
          }
          int v20 = *(char *)(*(void *)&a1[*v5] + v18);
          *(void *)&a1[v17] = v19;
          if (v20 < 0)
          {
            BOOL v21 = v16++ > 8;
            if (!v21) {
              continue;
            }
          }
          goto LABEL_38;
        }
LABEL_36:
        a1[*v4] = 1;
        goto LABEL_38;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_41:
        BOOL v27 = 0;
        goto LABEL_40;
      }
LABEL_38:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_39;
      }
    }
    if ((v8 & 7) != 0) {
      goto LABEL_41;
    }
    unsigned int v22 = 0;
    while (1)
    {
      uint64_t v23 = *v2;
      uint64_t v24 = *(void *)&a1[v23];
      unint64_t v25 = v24 + 1;
      if (v24 == -1 || v25 > *(void *)&a1[*v3]) {
        goto LABEL_36;
      }
      int v26 = *(char *)(*(void *)&a1[*v5] + v24);
      *(void *)&a1[v23] = v25;
      if (v26 < 0)
      {
        BOOL v21 = v22++ > 8;
        if (!v21) {
          continue;
        }
      }
      goto LABEL_38;
    }
  }
LABEL_39:
  BOOL v27 = a1[*v4] == 0;
LABEL_40:
  PBReaderRecallMark();
  return v27;
}

void sub_1897A3024(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOFormatArgumentReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 152));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 148);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 144)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  unsigned int v12 = *(_DWORD *)(a1 + 172);
  uint32x4_t v13 = (uint32x4_t)vdupq_n_s32(v12);
  v14.i64[0] = 0x100000001;
  v14.i64[1] = 0x100000001;
  unsigned int v15 = vaddvq_s32(vaddq_s32(vaddq_s32((int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v13, (uint32x4_t)xmmword_18A633F40), v14), (int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v13, (uint32x4_t)xmmword_18A633F50), v14)), (int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v13, (uint32x4_t)xmmword_18A633F60), v14)))+ ((v12 >> 8) & 1)+ ((v12 >> 4) & 1);
  while (2)
  {
    uint64_t v16 = 1;
    uint64_t v17 = 1;
    uint64_t v18 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v15;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v17 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v19 = v15 > 9;
        char v20 = v19 & ~(_BYTE)v11 | v9;
        char v21 = v19 | v11;
        unsigned int v22 = (int *)MEMORY[0x1E4F940E8];
        if (((v19 | v11) | v8)) {
          uint64_t v23 = 0;
        }
        else {
          uint64_t v23 = a3;
        }
        int v103 = 1;
        char v24 = v20;
        if (*(void *)(v3 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(v3 + *v6)) {
          goto LABEL_214;
        }
        char v101 = v20;
        char v104 = v21 | v20;
        char v105 = (v23 == 0) | v21;
        unint64_t v25 = (int *)MEMORY[0x1E4F940C8];
        int v26 = (int *)MEMORY[0x1E4F940B8];
        char v102 = v21;
        break;
      default:
        ++v15;
LABEL_7:
        uint64_t v16 = v9;
LABEL_8:
        uint64_t v17 = v10;
        uint64_t v18 = v11;
LABEL_10:
        ++v7;
        uint64_t v9 = v16;
        uint64_t v10 = v17;
        uint64_t v11 = v18;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(unsigned char *)(v3 + *v25)) {
      goto LABEL_212;
    }
    char v27 = 0;
    unsigned int v28 = 0;
    unint64_t v29 = 0;
    while (1)
    {
      uint64_t v30 = *v22;
      uint64_t v31 = *(void *)(v3 + v30);
      unint64_t v32 = v31 + 1;
      if (v31 == -1 || v32 > *(void *)(v3 + *v6)) {
        break;
      }
      char v33 = *(unsigned char *)(*(void *)(v3 + *v26) + v31);
      *(void *)(v3 + v30) = v32;
      v29 |= (unint64_t)(v33 & 0x7F) << v27;
      if ((v33 & 0x80) == 0) {
        goto LABEL_25;
      }
      v27 += 7;
      BOOL v34 = v28++ >= 9;
      if (v34)
      {
        unint64_t v29 = 0;
        int v35 = *(unsigned __int8 *)(v3 + *v25);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v25) = 1;
LABEL_25:
    int v35 = *(unsigned __int8 *)(v3 + *v25);
    if (*(unsigned char *)(v3 + *v25)) {
      unint64_t v29 = 0;
    }
LABEL_27:
    int v36 = v29 & 7;
    if (v35 || v36 == 4)
    {
LABEL_212:
      int v103 = 1;
      goto LABEL_213;
    }
    unint64_t v38 = v29 >> 3;
    BOOL v39 = v21;
    if ((v105 & 1) == 0)
    {
      v40 = v23;
      do
      {
        int v42 = *v40++;
        int v41 = v42;
        BOOL v39 = v42 != 0;
        if (v42) {
          BOOL v43 = v41 == v38;
        }
        else {
          BOOL v43 = 1;
        }
      }
      while (!v43);
    }
    switch((int)v38)
    {
      case 1:
        if (!v39) {
          goto LABEL_155;
        }
        if ((*(unsigned char *)(a1 + 173) & 0x80) == 0)
        {
          uint64_t v44 = PBReaderReadString();
          uint64_t v45 = 120;
          goto LABEL_84;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_241;
        }
        int v89 = (int)(*(_DWORD *)(a1 + 172) << 16) >> 31;
        goto LABEL_196;
      case 2:
        if ((v8 & 1) == 0) {
          goto LABEL_155;
        }
        char v46 = 0;
        unsigned int v47 = 0;
        uint64_t v48 = 0;
        *(_DWORD *)(a1 + 172) |= 1u;
        while (2)
        {
          uint64_t v49 = *v22;
          uint64_t v50 = *(void *)(v3 + v49);
          unint64_t v51 = v50 + 1;
          if (v50 == -1 || v51 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v25) = 1;
          }
          else
          {
            char v52 = *(unsigned char *)(*(void *)(v3 + *v26) + v50);
            *(void *)(v3 + v49) = v51;
            v48 |= (unint64_t)(v52 & 0x7F) << v46;
            if (v52 < 0)
            {
              v46 += 7;
              BOOL v34 = v47++ >= 9;
              if (v34)
              {
                LODWORD(v48) = 0;
                goto LABEL_160;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v25)) {
          LODWORD(v48) = 0;
        }
LABEL_160:
        uint64_t v88 = 156;
        goto LABEL_173;
      case 3:
        if ((v8 & 1) == 0) {
          goto LABEL_155;
        }
        char v53 = 0;
        unsigned int v54 = 0;
        uint64_t v48 = 0;
        *(_DWORD *)(a1 + 172) |= 2u;
        while (2)
        {
          uint64_t v55 = *v22;
          uint64_t v56 = *(void *)(v3 + v55);
          unint64_t v57 = v56 + 1;
          if (v56 == -1 || v57 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v25) = 1;
          }
          else
          {
            char v58 = *(unsigned char *)(*(void *)(v3 + *v26) + v56);
            *(void *)(v3 + v55) = v57;
            v48 |= (unint64_t)(v58 & 0x7F) << v53;
            if (v58 < 0)
            {
              v53 += 7;
              BOOL v34 = v54++ >= 9;
              if (v34)
              {
                LODWORD(v48) = 0;
                goto LABEL_164;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v25)) {
          LODWORD(v48) = 0;
        }
LABEL_164:
        uint64_t v88 = 160;
        goto LABEL_173;
      case 4:
        if ((v8 & 1) == 0) {
          goto LABEL_155;
        }
        char v59 = 0;
        unsigned int v60 = 0;
        uint64_t v48 = 0;
        *(_DWORD *)(a1 + 172) |= 4u;
        while (2)
        {
          uint64_t v61 = *v22;
          uint64_t v62 = *(void *)(v3 + v61);
          unint64_t v63 = v62 + 1;
          if (v62 == -1 || v63 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v25) = 1;
          }
          else
          {
            char v64 = *(unsigned char *)(*(void *)(v3 + *v26) + v62);
            *(void *)(v3 + v61) = v63;
            v48 |= (unint64_t)(v64 & 0x7F) << v59;
            if (v64 < 0)
            {
              v59 += 7;
              BOOL v34 = v60++ >= 9;
              if (v34)
              {
                LODWORD(v48) = 0;
                goto LABEL_168;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v25)) {
          LODWORD(v48) = 0;
        }
LABEL_168:
        uint64_t v88 = 164;
        goto LABEL_173;
      case 5:
        if (!v39 || (*(unsigned char *)(a1 + 172) & 0x20) != 0) {
          goto LABEL_155;
        }
        if (v36 != 2)
        {
          char v90 = 0;
          unsigned int v91 = 0;
          uint64_t v92 = 0;
          while (1)
          {
            uint64_t v93 = *v22;
            uint64_t v94 = *(void *)(v3 + v93);
            unint64_t v95 = v94 + 1;
            if (v94 == -1 || v95 > *(void *)(v3 + *v6)) {
              break;
            }
            char v96 = *(unsigned char *)(*(void *)(v3 + *v26) + v94);
            *(void *)(v3 + v93) = v95;
            v92 |= (unint64_t)(v96 & 0x7F) << v90;
            if (v96 < 0)
            {
              v90 += 7;
              BOOL v34 = v91++ >= 9;
              if (!v34) {
                continue;
              }
            }
            goto LABEL_211;
          }
          *(unsigned char *)(v3 + *v25) = 1;
LABEL_211:
          PBRepeatedUInt32Add();
          goto LABEL_197;
        }
        if (!PBReaderPlaceMark()) {
          goto LABEL_241;
        }
        while (1)
        {
          v65 = (int *)MEMORY[0x1E4F940C8];
          if (*(void *)(v3 + *v22) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + (int)*MEMORY[0x1E4F940C8])) {
            break;
          }
          char v66 = 0;
          unsigned int v67 = 0;
          uint64_t v68 = 0;
          v69 = (int *)MEMORY[0x1E4F940B8];
          while (1)
          {
            uint64_t v70 = *v22;
            uint64_t v71 = *(void *)(v3 + v70);
            unint64_t v72 = v71 + 1;
            if (v71 == -1 || v72 > *(void *)(v3 + *v6)) {
              break;
            }
            char v73 = *(unsigned char *)(*(void *)(v3 + *v69) + v71);
            *(void *)(v3 + v70) = v72;
            v68 |= (unint64_t)(v73 & 0x7F) << v66;
            if (v73 < 0)
            {
              v66 += 7;
              BOOL v34 = v67++ >= 9;
              if (!v34) {
                continue;
              }
            }
            goto LABEL_80;
          }
          *(unsigned char *)(v3 + *v65) = 1;
LABEL_80:
          PBRepeatedUInt32Add();
        }
        PBReaderRecallMark();
        unint64_t v25 = (int *)MEMORY[0x1E4F940C8];
        char v21 = v102;
        goto LABEL_198;
      case 6:
        if (!v39) {
          goto LABEL_155;
        }
        if ((*(unsigned char *)(a1 + 174) & 2) == 0)
        {
          uint64_t v44 = PBReaderReadString();
          uint64_t v45 = 136;
LABEL_84:
          v74 = *(void **)(a1 + v45);
          *(void *)(a1 + v45) = v44;
          goto LABEL_142;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_241;
        }
        int v89 = (int)(*(_DWORD *)(a1 + 172) << 14) >> 31;
        goto LABEL_196;
      case 8:
        if (!v39) {
          goto LABEL_155;
        }
        if ((*(unsigned char *)(a1 + 173) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_241;
          }
          int v89 = (int)(*(_DWORD *)(a1 + 172) << 19) >> 31;
          goto LABEL_196;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_241;
        }
        v78 = objc_alloc_init(GEOPrice);
        if (!GEOPriceReadAllFrom((uint64_t)v78, (void *)v3)) {
          goto LABEL_240;
        }
        PBReaderRecallMark();
        uint64_t v79 = 96;
        goto LABEL_141;
      case 9:
        if (!v39) {
          goto LABEL_155;
        }
        if ((*(unsigned char *)(a1 + 172) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_241;
          }
          int v89 = (int)(*(_DWORD *)(a1 + 172) << 25) >> 31;
          goto LABEL_196;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_241;
        }
        v78 = objc_alloc_init(GEOPBTransitArtwork);
        if (!GEOPBTransitArtworkReadAllFrom((uint64_t)v78, (void *)v3, v10 & 1)) {
          goto LABEL_240;
        }
        PBReaderRecallMark();
        uint64_t v79 = 48;
        goto LABEL_141;
      case 10:
        if (!v39 || (*(unsigned char *)(a1 + 173) & 0x40) != 0)
        {
          char v86 = PBReaderSkipValueWithTag();
          char v21 = v102;
          unint64_t v25 = (int *)MEMORY[0x1E4F940C8];
          int v26 = (int *)MEMORY[0x1E4F940B8];
          if ((v86 & 1) == 0) {
            goto LABEL_239;
          }
          goto LABEL_199;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_241;
        }
        v78 = objc_alloc_init(GEOTimestampData);
        if (!GEOTimestampDataReadAllFrom((uint64_t)v78, (void *)v3, v10 & 1)) {
          goto LABEL_240;
        }
        PBReaderRecallMark();
        -[GEOFormatArgument _addNoFlagsTimestampData:](a1, v78);

        goto LABEL_197;
      case 11:
        if (!v39) {
          goto LABEL_155;
        }
        if ((*(unsigned char *)(a1 + 172) & 0x80) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_241;
          }
          int v89 = (int)(*(_DWORD *)(a1 + 172) << 24) >> 31;
          goto LABEL_196;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_241;
        }
        v78 = objc_alloc_init(GEOCountdownData);
        if (!GEOCountdownDataReadAllFrom((uint64_t)v78, (void *)v3, v10 & 1)) {
          goto LABEL_240;
        }
        PBReaderRecallMark();
        uint64_t v79 = 56;
        goto LABEL_141;
      case 12:
        if (!v39) {
          goto LABEL_155;
        }
        if ((*(unsigned char *)(a1 + 173) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_241;
          }
          int v89 = (int)(*(_DWORD *)(a1 + 172) << 20) >> 31;
          goto LABEL_196;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_241;
        }
        v78 = objc_alloc_init(GEONumberData);
        if (!GEONumberDataReadAllFrom((uint64_t)v78, (void *)v3)) {
          goto LABEL_240;
        }
        PBReaderRecallMark();
        uint64_t v79 = 88;
        goto LABEL_141;
      case 13:
        if (!v39) {
          goto LABEL_155;
        }
        if ((*(unsigned char *)(a1 + 173) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_241;
          }
          int v89 = (int)(*(_DWORD *)(a1 + 172) << 21) >> 31;
          goto LABEL_196;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_241;
        }
        v78 = objc_alloc_init(GEOMeasurementData);
        if (!GEOMeasurementDataReadAllFrom((uint64_t)v78, (void *)v3)) {
          goto LABEL_240;
        }
        PBReaderRecallMark();
        uint64_t v79 = 80;
        goto LABEL_141;
      case 14:
        if (!v39) {
          goto LABEL_155;
        }
        if (*(unsigned char *)(a1 + 174))
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_241;
          }
          int v89 = (int)(*(_DWORD *)(a1 + 172) << 15) >> 31;
          goto LABEL_196;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_241;
        }
        v78 = objc_alloc_init(GEOURLData);
        if (!GEOURLDataReadAllFrom((uint64_t)v78, (void *)v3, v10 & 1)) {
          goto LABEL_240;
        }
        PBReaderRecallMark();
        uint64_t v79 = 128;
        goto LABEL_141;
      case 15:
        if (!v39) {
          goto LABEL_155;
        }
        if ((*(unsigned char *)(a1 + 173) & 2) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_241;
          }
          int v89 = (int)(*(_DWORD *)(a1 + 172) << 22) >> 31;
          goto LABEL_196;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_241;
        }
        v78 = objc_alloc_init(GEOManeuverData);
        if (!GEOManeuverDataReadAllFrom((uint64_t)v78, (void *)v3)) {
          goto LABEL_240;
        }
        PBReaderRecallMark();
        uint64_t v79 = 72;
        goto LABEL_141;
      case 16:
        if (!v39) {
          goto LABEL_155;
        }
        if ((*(unsigned char *)(a1 + 173) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_241;
          }
          int v89 = (int)(*(_DWORD *)(a1 + 172) << 18) >> 31;
          goto LABEL_196;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_241;
        }
        v78 = objc_alloc_init(GEOGenericStringData);
        if (!GEOGenericStringDataReadAllFrom((uint64_t)v78, (void *)v3)) {
          goto LABEL_240;
        }
        PBReaderRecallMark();
        uint64_t v79 = 104;
        goto LABEL_141;
      case 17:
        if (!v39) {
          goto LABEL_155;
        }
        if (*(unsigned char *)(a1 + 173))
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_241;
          }
          int v89 = (int)(*(_DWORD *)(a1 + 172) << 23) >> 31;
LABEL_196:
          v7 += v89;
LABEL_197:
          char v21 = v102;
          unint64_t v25 = (int *)MEMORY[0x1E4F940C8];
LABEL_198:
          int v26 = (int *)MEMORY[0x1E4F940B8];
LABEL_199:
          if (!(v104 & 1 | (v7 != 0)) || *(void *)(v3 + *v22) >= *(void *)(v3 + *v6)) {
            goto LABEL_212;
          }
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_241;
        }
        v78 = objc_alloc_init(GEOGenericCombinations);
        if (GEOGenericCombinationsReadAllFrom(v78, (void *)v3))
        {
          PBReaderRecallMark();
          uint64_t v79 = 64;
LABEL_141:
          v74 = *(void **)(a1 + v79);
          *(void *)(a1 + v79) = v78;
LABEL_142:

          --v7;
          goto LABEL_197;
        }
LABEL_240:

LABEL_241:
        int v103 = 0;
        char v21 = v102;
LABEL_213:
        char v24 = v101;
LABEL_214:
        if (v24) {
LABEL_215:
        }
          *(_DWORD *)(a1 + 172) |= 0x10u;
        if (v21 & 1 | ((v103 & 1) == 0))
        {
          *(_DWORD *)(a1 + 172) |= 0x8000u;
          *(_DWORD *)(a1 + 172) |= 0x20u;
          *(_DWORD *)(a1 + 172) |= 0x20000u;
          *(_DWORD *)(a1 + 172) |= 0x1000u;
          *(_DWORD *)(a1 + 172) |= 0x40u;
          *(_DWORD *)(a1 + 172) |= 0x4000u;
          *(_DWORD *)(a1 + 172) |= 0x80u;
          *(_DWORD *)(a1 + 172) |= 0x800u;
          *(_DWORD *)(a1 + 172) |= 0x400u;
          *(_DWORD *)(a1 + 172) |= 0x10000u;
          *(_DWORD *)(a1 + 172) |= 0x200u;
          *(_DWORD *)(a1 + 172) |= 0x2000u;
          *(_DWORD *)(a1 + 172) |= 0x100u;
        }
        else if (v23)
        {
          while (1)
          {
            int v97 = *v23++;
            int v98 = 0x8000;
            switch(v97)
            {
              case 0:
                goto LABEL_233;
              case 1:
                goto LABEL_232;
              case 5:
                int v98 = 32;
                goto LABEL_232;
              case 6:
                int v98 = 0x20000;
                goto LABEL_232;
              case 8:
                int v98 = 4096;
                goto LABEL_232;
              case 9:
                int v98 = 64;
                goto LABEL_232;
              case 10:
                int v98 = 0x4000;
                goto LABEL_232;
              case 11:
                int v98 = 128;
                goto LABEL_232;
              case 12:
                int v98 = 2048;
                goto LABEL_232;
              case 13:
                int v98 = 1024;
                goto LABEL_232;
              case 14:
                int v98 = 0x10000;
                goto LABEL_232;
              case 15:
                int v98 = 512;
                goto LABEL_232;
              case 16:
                int v98 = 0x2000;
                goto LABEL_232;
              case 17:
                int v98 = 256;
LABEL_232:
                *(_DWORD *)(a1 + 172) |= v98;
                break;
              default:
                continue;
            }
          }
        }
LABEL_233:
        if (v103)
        {
          unint64_t v3 = *(unsigned char *)(v3 + (int)*MEMORY[0x1E4F940C8]) == 0;
          if ((v21 & 1) == 0) {
            return v3;
          }
LABEL_237:
          v99 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        else
        {
          unint64_t v3 = 0;
          if (v21) {
            goto LABEL_237;
          }
        }
        return v3;
      case 18:
        if ((v8 & 1) == 0) {
          goto LABEL_155;
        }
        char v80 = 0;
        unsigned int v81 = 0;
        uint64_t v48 = 0;
        *(_DWORD *)(a1 + 172) |= 8u;
        while (2)
        {
          uint64_t v82 = *v22;
          uint64_t v83 = *(void *)(v3 + v82);
          unint64_t v84 = v83 + 1;
          if (v83 == -1 || v84 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v25) = 1;
          }
          else
          {
            char v85 = *(unsigned char *)(*(void *)(v3 + *v26) + v83);
            *(void *)(v3 + v82) = v84;
            v48 |= (unint64_t)(v85 & 0x7F) << v80;
            if (v85 < 0)
            {
              v80 += 7;
              BOOL v34 = v81++ >= 9;
              if (v34)
              {
                LODWORD(v48) = 0;
                goto LABEL_172;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v25)) {
          LODWORD(v48) = 0;
        }
LABEL_172:
        uint64_t v88 = 168;
LABEL_173:
        *(_DWORD *)(a1 + v88) = v48;
        goto LABEL_199;
      default:
        if ((v101 & 1) == 0 || (*(unsigned char *)(a1 + 172) & 0x10) != 0)
        {
LABEL_155:
          char v87 = PBReaderSkipValueWithTag();
          int v26 = (int *)MEMORY[0x1E4F940B8];
          unint64_t v25 = (int *)MEMORY[0x1E4F940C8];
          char v21 = v102;
          if ((v87 & 1) == 0)
          {
LABEL_239:
            int v103 = 0;
            goto LABEL_213;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v75 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            v76 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v75;
          }
          int v77 = PBUnknownFieldAdd();
          char v21 = v102;
          unint64_t v25 = (int *)MEMORY[0x1E4F940C8];
          int v26 = (int *)MEMORY[0x1E4F940B8];
          if (!v77)
          {
            int v103 = 0;
            goto LABEL_215;
          }
        }
        goto LABEL_199;
    }
  }
}

void sub_1897A4484(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897A4814(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897A4984(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897A4AF8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897A4C70(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897A5034(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897A51AC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897A5324(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897A549C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897A5610(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897A5788(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897A5900(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897A7348(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOFormatArgumentCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  uint64_t v13 = *MEMORY[0x1E4F143B8];
  [a1[12] readAll:1];
  [a1[6] readAll:1];
  long long v10 = 0u;
  long long v11 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  id v2 = a1[14];
  uint64_t v3 = [v2 countByEnumeratingWithState:&v8 objects:v12 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v9;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v9 != v5) {
          objc_enumerationMutation(v2);
        }
        objc_msgSend(*(id *)(*((void *)&v8 + 1) + 8 * v6++), "readAll:", 1, (void)v8);
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v8 objects:v12 count:16];
    }
    while (v4);
  }

  [a1[7] readAll:1];
  [a1[11] readAll:1];
  [a1[10] readAll:1];
  [a1[16] readAll:1];
  [a1[9] readAll:1];
  [a1[13] readAll:1];
  return [a1[8] readAll:1];
}

unint64_t GEOFormatArgumentReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 148))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOFormatArgumentReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)long long v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 152));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 144) = [v8 position];
  *(_DWORD *)(a1 + 148) = [v8 length];
  if (a3) {
    long long v9 = (int *)&GEOFormatArgumentReadAllFrom_recursiveTag;
  }
  else {
    long long v9 = (int *)&GEOFormatArgumentReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOFormatArgumentReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOFormatArgumentCallReadAllRecursiveWithoutSynchronized((id *)a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 152));
  return Specified;
}

void sub_1897A767C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOFormatArgumentReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOFormatArgumentReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1897A76E0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOFormatArgumentIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (!a1[*v4])
    {
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        BOOL v13 = v7++ >= 9;
        if (v13)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 != 2) {
            goto LABEL_117;
          }
          goto LABEL_53;
        case 2u:
          if ((v8 & 7) != 0) {
            goto LABEL_117;
          }
          unsigned int v17 = 0;
          while (1)
          {
            uint64_t v18 = *v2;
            uint64_t v19 = *(void *)&a1[v18];
            unint64_t v20 = v19 + 1;
            if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
              goto LABEL_103;
            }
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if (v21 < 0)
            {
              BOOL v22 = v17++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_104;
          }
        case 3u:
          if ((v8 & 7) != 0) {
            goto LABEL_117;
          }
          unsigned int v23 = 0;
          while (1)
          {
            uint64_t v24 = *v2;
            uint64_t v25 = *(void *)&a1[v24];
            unint64_t v26 = v25 + 1;
            if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
              goto LABEL_103;
            }
            int v27 = *(char *)(*(void *)&a1[*v5] + v25);
            *(void *)&a1[v24] = v26;
            if (v27 < 0)
            {
              BOOL v22 = v23++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_104;
          }
        case 4u:
          if ((v8 & 7) != 0) {
            goto LABEL_117;
          }
          unsigned int v28 = 0;
          while (1)
          {
            uint64_t v29 = *v2;
            uint64_t v30 = *(void *)&a1[v29];
            unint64_t v31 = v30 + 1;
            if (v30 == -1 || v31 > *(void *)&a1[*v3]) {
              goto LABEL_103;
            }
            int v32 = *(char *)(*(void *)&a1[*v5] + v30);
            *(void *)&a1[v29] = v31;
            if (v32 < 0)
            {
              BOOL v22 = v28++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_104;
          }
        case 5u:
          if (v15 == 2)
          {
            if (!PBReaderPlaceMark())
            {
LABEL_117:
              PBReaderRecallMark();
              return 0;
            }
LABEL_107:
            while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
            {
              unsigned int v43 = a1[*v4];
              if (a1[*v4]) {
                break;
              }
              while (1)
              {
                uint64_t v44 = *v2;
                uint64_t v45 = *(void *)&a1[v44];
                unint64_t v46 = v45 + 1;
                if (v45 == -1 || v46 > *(void *)&a1[*v3]) {
                  break;
                }
                int v47 = *(char *)(*(void *)&a1[*v5] + v45);
                *(void *)&a1[v44] = v46;
                if (v47 < 0)
                {
                  BOOL v13 = v43++ >= 9;
                  if (!v13) {
                    continue;
                  }
                }
                goto LABEL_107;
              }
              a1[*v4] = 1;
            }
LABEL_94:
            PBReaderRecallMark();
          }
          else
          {
            if ((v8 & 7) != 0) {
              goto LABEL_117;
            }
            while (1)
            {
              uint64_t v33 = *v2;
              uint64_t v34 = *(void *)&a1[v33];
              unint64_t v35 = v34 + 1;
              if (v34 == -1 || v35 > *(void *)&a1[*v3]) {
                break;
              }
              int v36 = *(char *)(*(void *)&a1[*v5] + v34);
              *(void *)&a1[v33] = v35;
              if (v36 < 0)
              {
                unsigned int v37 = v15++;
                if (v37 <= 8) {
                  continue;
                }
              }
              goto LABEL_104;
            }
LABEL_103:
            a1[*v4] = 1;
          }
LABEL_104:
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_116;
          }
          break;
        case 6u:
          if (v15 == 2) {
            goto LABEL_53;
          }
          goto LABEL_117;
        case 8u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPriceIsValid(a1)) {
            goto LABEL_117;
          }
          goto LABEL_94;
        case 9u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPBTransitArtworkIsValid(a1)) {
            goto LABEL_117;
          }
          goto LABEL_94;
        case 0xAu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOTimestampDataIsValid(a1)) {
            goto LABEL_117;
          }
          goto LABEL_94;
        case 0xBu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOCountdownDataIsValid(a1)) {
            goto LABEL_117;
          }
          goto LABEL_94;
        case 0xCu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEONumberDataIsValid(a1)) {
            goto LABEL_117;
          }
          goto LABEL_94;
        case 0xDu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOMeasurementDataIsValid(a1)) {
            goto LABEL_117;
          }
          goto LABEL_94;
        case 0xEu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOURLDataIsValid(a1)) {
            goto LABEL_117;
          }
          goto LABEL_94;
        case 0xFu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOManeuverDataIsValid(a1)) {
            goto LABEL_117;
          }
          goto LABEL_94;
        case 0x10u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOGenericStringDataIsValid(a1)) {
            goto LABEL_117;
          }
          goto LABEL_94;
        case 0x11u:
          if (v15 == 2 && PBReaderPlaceMark() && GEOGenericCombinationsIsValid(a1)) {
            goto LABEL_94;
          }
          goto LABEL_117;
        case 0x12u:
          if ((v8 & 7) != 0) {
            goto LABEL_117;
          }
          unsigned int v38 = 0;
          while (1)
          {
            uint64_t v39 = *v2;
            uint64_t v40 = *(void *)&a1[v39];
            unint64_t v41 = v40 + 1;
            if (v40 == -1 || v41 > *(void *)&a1[*v3]) {
              goto LABEL_103;
            }
            int v42 = *(char *)(*(void *)&a1[*v5] + v40);
            *(void *)&a1[v39] = v41;
            if (v42 < 0)
            {
              BOOL v22 = v38++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_104;
          }
        default:
LABEL_53:
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_117;
          }
          goto LABEL_104;
      }
    }
  }
LABEL_116:
  BOOL v48 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v48;
}

BOOL GEOPriceIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          uint64_t v14 = *v4;
          int v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      uint64_t v14 = *v4;
      int v15 = a1[v14];
      if (a1[v14]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v16 = v8 & 7;
      if (v15 || v16 == 4) {
        break;
      }
      if ((v8 >> 3) == 2)
      {
        if (v16 != 2 || (PBReaderSkipValueWithTag() & 1) == 0)
        {
LABEL_33:
          BOOL v21 = 0;
          goto LABEL_32;
        }
      }
      else if ((v8 >> 3) == 1)
      {
        if (v16 != 5) {
          goto LABEL_33;
        }
        uint64_t v18 = *v2;
        unint64_t v19 = *(void *)&a1[v18];
        if (v19 <= 0xFFFFFFFFFFFFFFFBLL && (unint64_t v20 = v19 + 4, v20 <= *(void *)&a1[*v3])) {
          *(void *)&a1[v18] = v20;
        }
        else {
          a1[v14] = 1;
        }
      }
      else if (!PBReaderSkipValueWithTag())
      {
        goto LABEL_33;
      }
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v21 = a1[*v4] == 0;
LABEL_32:
  PBReaderRecallMark();
  return v21;
}

BOOL GEOTimestampDataIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_43;
          }
          unsigned int v17 = 0;
          while (1)
          {
            uint64_t v18 = *v2;
            uint64_t v19 = *(void *)&a1[v18];
            unint64_t v20 = v19 + 1;
            if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
              goto LABEL_37;
            }
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if (v21 < 0)
            {
              BOOL v22 = v17++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_40;
          }
        case 2u:
          if (v15 == 2) {
            goto LABEL_39;
          }
          goto LABEL_43;
        case 3u:
          if ((v8 & 7) != 0) {
            goto LABEL_43;
          }
          unsigned int v23 = 0;
          break;
        case 4u:
          if (v15 == 2) {
            goto LABEL_39;
          }
          goto LABEL_43;
        default:
LABEL_39:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_43:
          BOOL v28 = 0;
          goto LABEL_42;
      }
      while (1)
      {
        uint64_t v24 = *v2;
        uint64_t v25 = *(void *)&a1[v24];
        unint64_t v26 = v25 + 1;
        if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
          break;
        }
        int v27 = *(char *)(*(void *)&a1[*v5] + v25);
        *(void *)&a1[v24] = v26;
        if (v27 < 0)
        {
          BOOL v22 = v23++ > 8;
          if (!v22) {
            continue;
          }
        }
        goto LABEL_40;
      }
LABEL_37:
      a1[*v4] = 1;
LABEL_40:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v28 = a1[*v4] == 0;
LABEL_42:
  PBReaderRecallMark();
  return v28;
}

BOOL GEONumberDataIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          uint64_t v14 = *v4;
          int v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      uint64_t v14 = *v4;
      int v15 = a1[v14];
      if (a1[v14]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v16 = v8 & 7;
      if (v15 || v16 == 4) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if (v16 != 5) {
          goto LABEL_29;
        }
        uint64_t v18 = *v2;
        unint64_t v19 = *(void *)&a1[v18];
        if (v19 <= 0xFFFFFFFFFFFFFFFBLL && (unint64_t v20 = v19 + 4, v20 <= *(void *)&a1[*v3])) {
          *(void *)&a1[v18] = v20;
        }
        else {
          a1[v14] = 1;
        }
      }
      else if (!PBReaderSkipValueWithTag())
      {
LABEL_29:
        BOOL v21 = 0;
        goto LABEL_28;
      }
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v21 = a1[*v4] == 0;
LABEL_28:
  PBReaderRecallMark();
  return v21;
}

BOOL GEOMeasurementDataIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      if (v14 || (v8 & 7) == 4) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_33;
        }
        unsigned int v16 = 0;
        while (1)
        {
          uint64_t v17 = *v2;
          uint64_t v18 = *(void *)&a1[v17];
          unint64_t v19 = v18 + 1;
          if (v18 == -1 || v19 > *(void *)&a1[*v3]) {
            break;
          }
          int v20 = *(char *)(*(void *)&a1[*v5] + v18);
          *(void *)&a1[v17] = v19;
          if (v20 < 0 && v16++ <= 8) {
            continue;
          }
          goto LABEL_30;
        }
        a1[*v4] = 1;
      }
      else if (!PBReaderSkipValueWithTag())
      {
LABEL_33:
        BOOL v22 = 0;
        goto LABEL_32;
      }
LABEL_30:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v22 = a1[*v4] == 0;
LABEL_32:
  PBReaderRecallMark();
  return v22;
}

BOOL GEOURLDataIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_27;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        goto LABEL_27;
      }
      if ((v8 >> 3) == 2) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2) {
          goto LABEL_29;
        }
        goto LABEL_23;
      }
      if (!PBReaderSkipValueWithTag())
      {
LABEL_29:
        BOOL v17 = 0;
        goto LABEL_28;
      }
LABEL_26:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_27;
      }
    }
    if (v15 != 2) {
      goto LABEL_29;
    }
LABEL_23:
    if ((PBReaderSkipValueWithTag() & 1) == 0) {
      goto LABEL_29;
    }
    goto LABEL_26;
  }
LABEL_27:
  BOOL v17 = a1[*v4] == 0;
LABEL_28:
  PBReaderRecallMark();
  return v17;
}

BOOL GEOManeuverDataIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      if ((v8 >> 3) == 2)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOJunctionInfoIsValid(a1))
        {
LABEL_38:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_38;
        }
        unsigned int v17 = 0;
        while (1)
        {
          uint64_t v18 = *v2;
          uint64_t v19 = *(void *)&a1[v18];
          unint64_t v20 = v19 + 1;
          if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
            break;
          }
          int v21 = *(char *)(*(void *)&a1[*v5] + v19);
          *(void *)&a1[v18] = v20;
          if (v21 < 0 && v17++ <= 8) {
            continue;
          }
          goto LABEL_35;
        }
        a1[*v4] = 1;
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_38;
      }
LABEL_35:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v23 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v23;
}

BOOL GEOGenericStringDataIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_42;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        goto LABEL_42;
      }
      unint64_t v17 = v8 >> 3;
      if ((v8 >> 3) == 4) {
        break;
      }
      if (v17 == 2)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_44;
        }
        unsigned int v24 = 0;
        while (1)
        {
          uint64_t v25 = *v2;
          uint64_t v26 = *(void *)&a1[v25];
          unint64_t v27 = v26 + 1;
          if (v26 == -1 || v27 > *(void *)&a1[*v3]) {
            goto LABEL_39;
          }
          int v28 = *(char *)(*(void *)&a1[*v5] + v26);
          *(void *)&a1[v25] = v27;
          if (v28 < 0)
          {
            BOOL v23 = v24++ > 8;
            if (!v23) {
              continue;
            }
          }
          goto LABEL_41;
        }
      }
      if (v17 == 1 && v15 != 2 || (PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_44:
        BOOL v29 = 0;
        goto LABEL_43;
      }
LABEL_41:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_42;
      }
    }
    if ((v8 & 7) != 0) {
      goto LABEL_44;
    }
    unsigned int v18 = 0;
    while (1)
    {
      uint64_t v19 = *v2;
      uint64_t v20 = *(void *)&a1[v19];
      unint64_t v21 = v20 + 1;
      if (v20 == -1 || v21 > *(void *)&a1[*v3]) {
        break;
      }
      int v22 = *(char *)(*(void *)&a1[*v5] + v20);
      *(void *)&a1[v19] = v21;
      if (v22 < 0)
      {
        BOOL v23 = v18++ > 8;
        if (!v23) {
          continue;
        }
      }
      goto LABEL_41;
    }
LABEL_39:
    a1[*v4] = 1;
    goto LABEL_41;
  }
LABEL_42:
  BOOL v29 = a1[*v4] == 0;
LABEL_43:
  PBReaderRecallMark();
  return v29;
}

BOOL GEOGenericCombinationsIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      if ((v8 >> 3) == 2)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOGenericSubstitutesIsValid(a1))
        {
LABEL_27:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_27;
      }
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

void sub_1897A9128(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOFormatArgumentIsDirty(uint64_t a1)
{
  uint64_t v13 = *MEMORY[0x1E4F143B8];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 152));
  int v2 = *(_DWORD *)(a1 + 172);
  if ((v2 & 0x69020) != 0) {
    return 1;
  }
  if ((v2 & 0x40) != 0)
  {
    if (GEOPBTransitArtworkIsDirty(*(os_unfair_lock_s **)(a1 + 48))) {
      return 1;
    }
    int v2 = *(_DWORD *)(a1 + 172);
  }
  if ((v2 & 0x4000) != 0) {
    return 1;
  }
  if ((v2 & 0x80) != 0)
  {
    if (GEOCountdownDataIsDirty(*(void *)(a1 + 56))) {
      return 1;
    }
    int v2 = *(_DWORD *)(a1 + 172);
  }
  if ((v2 & 0xC00) != 0) {
    return 1;
  }
  if ((v2 & 0x10000) == 0) {
    goto LABEL_15;
  }
  if (GEOURLDataIsDirty(*(void *)(a1 + 128))) {
    return 1;
  }
  int v2 = *(_DWORD *)(a1 + 172);
LABEL_15:
  if ((v2 & 0x2300) != 0) {
    return 1;
  }
  if ((v2 & 0x4000) == 0) {
    return 0;
  }
  long long v10 = 0u;
  long long v11 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  id v5 = *(id *)(a1 + 112);
  uint64_t v3 = [v5 countByEnumeratingWithState:&v8 objects:v12 count:16];
  if (v3)
  {
    uint64_t v6 = *(void *)v9;
    while (2)
    {
      for (uint64_t i = 0; i != v3; ++i)
      {
        if (*(void *)v9 != v6) {
          objc_enumerationMutation(v5);
        }
        if (GEOTimestampDataIsDirty(*(void *)(*((void *)&v8 + 1) + 8 * i)))
        {
          uint64_t v3 = 1;
          goto LABEL_28;
        }
      }
      uint64_t v3 = [v5 countByEnumeratingWithState:&v8 objects:v12 count:16];
      if (v3) {
        continue;
      }
      break;
    }
  }
LABEL_28:

  return v3;
}

os_unfair_lock_s *GEOFormatArgumentIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOFormatArgumentIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 38);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_1897A9AA4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897AA3F4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOFormatStyleReadAllFrom(uint64_t a1, void *a2)
{
  uint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    id v5 = (int *)MEMORY[0x1E4F940E0];
    uint64_t v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 2)
        {
          char v20 = 0;
          unsigned int v21 = 0;
          uint64_t v22 = 0;
          *(unsigned char *)(a1 + 28) |= 1u;
          while (1)
          {
            uint64_t v23 = *v4;
            uint64_t v24 = *(void *)&v3[v23];
            unint64_t v25 = v24 + 1;
            if (v24 == -1 || v25 > *(void *)&v3[*v5]) {
              break;
            }
            char v26 = *(unsigned char *)(*(void *)&v3[*v7] + v24);
            *(void *)&v3[v23] = v25;
            v22 |= (unint64_t)(v26 & 0x7F) << v20;
            if ((v26 & 0x80) == 0) {
              goto LABEL_34;
            }
            v20 += 7;
            BOOL v15 = v21++ >= 9;
            if (v15)
            {
              LODWORD(v22) = 0;
              goto LABEL_36;
            }
          }
          v3[*v6] = 1;
LABEL_34:
          if (v3[*v6]) {
            LODWORD(v22) = 0;
          }
LABEL_36:
          *(_DWORD *)(a1 + 24) = v22;
        }
        else if ((v10 >> 3) == 1)
        {
          uint64_t v18 = PBReaderReadString();
          uint64_t v19 = *(void **)(a1 + 16);
          *(void *)(a1 + 16) = v18;
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v27 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            int v28 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v27;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_39;
          }
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v29 = v3[*v6] == 0;
  }
  else
  {
LABEL_39:
    BOOL v29 = 0;
  }
  objc_sync_exit(v3);

  return v29;
}

void sub_1897AB06C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOFormatStyleReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOFormatStyleReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1897AB0D0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897AB6E8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOFormattedStringReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 80));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 76);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 72)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  unsigned int v12 = (vaddv_s16((int16x4_t)(*(void *)&vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int8 *)(a1 + 84)), (uint16x4_t)0xFFFCFFFAFFFDFFFELL) & 0xFF01FF01FF01FF01))+ (*(unsigned char *)(a1 + 84) & 1)+ ((*(unsigned char *)(a1 + 84) & 2) != 0)+ ((*(unsigned char *)(a1 + 84) & 0x20) != 0));
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 > 3;
        char v17 = v16 & ~(_BYTE)v11 | v9;
        unsigned __int8 v18 = v16 | v11;
        char v53 = v17;
        char v54 = v18 | v17;
        if ((v18 | v8)) {
          uint64_t v19 = 0;
        }
        else {
          uint64_t v19 = a3;
        }
        char v55 = (v19 == 0) | v18;
        BOOL v56 = v18;
        char v20 = (int *)MEMORY[0x1E4F940E8];
        unsigned int v21 = (int *)MEMORY[0x1E4F940C8];
        uint64_t v22 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v9;
LABEL_8:
        uint64_t v14 = v10;
        uint64_t v15 = v11;
LABEL_10:
        ++v7;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v21)) {
      goto LABEL_84;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      if (v24++ >= 9)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_25:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_84:
      int v51 = 1;
      goto LABEL_85;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v56;
    if ((v55 & 1) == 0)
    {
      unint64_t v35 = v19;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    switch((int)v33)
    {
      case 3:
        if (!v34 || (*(unsigned char *)(a1 + 84) & 8) != 0) {
          goto LABEL_75;
        }
        PBReaderReadString();
        uint64_t v39 = (GEOFormatArgument *)objc_claimAutoreleasedReturnValue();
        if (v39) {
          -[GEOFormattedString _addNoFlagsFormatString:](a1, v39);
        }
        goto LABEL_63;
      case 4:
        if (!v34 || (*(unsigned char *)(a1 + 84) & 4) != 0) {
          goto LABEL_75;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_104;
        }
        uint64_t v39 = objc_alloc_init(GEOFormatArgument);
        if (!GEOFormatArgumentReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1)) {
          goto LABEL_103;
        }
        PBReaderRecallMark();
        -[GEOFormattedString _addNoFlagsFormatArgument:](a1, v39);
        goto LABEL_63;
      case 5:
        if (!v34 || (*(unsigned char *)(a1 + 84) & 0x40) != 0) {
          goto LABEL_75;
        }
        PBReaderReadString();
        uint64_t v39 = (GEOFormatArgument *)objc_claimAutoreleasedReturnValue();
        if (v39) {
          -[GEOFormattedString _addNoFlagsSeparator:](a1, v39);
        }
        goto LABEL_63;
      case 6:
        if (!v34 || (*(unsigned char *)(a1 + 84) & 0x10) != 0) {
          goto LABEL_75;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_104;
        }
        uint64_t v39 = objc_alloc_init(GEOFormatStyle);
        if (!GEOFormatStyleReadAllFrom((uint64_t)v39, (void *)v3)) {
          goto LABEL_103;
        }
        PBReaderRecallMark();
        -[GEOFormattedString _addNoFlagsFormatStyle:](a1, v39);
LABEL_63:

        goto LABEL_82;
      case 7:
        if (!v34) {
          goto LABEL_75;
        }
        if ((*(unsigned char *)(a1 + 84) & 2) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_104;
          }
          char v46 = *(unsigned char *)(a1 + 84) << 6;
          goto LABEL_81;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_104;
        }
        uint64_t v39 = objc_alloc_init(GEOConditionalFormattedString);
        if (!GEOConditionalFormattedStringReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1)) {
          goto LABEL_103;
        }
        PBReaderRecallMark();
        uint64_t v43 = 24;
        goto LABEL_74;
      case 8:
        if (!v34) {
          goto LABEL_75;
        }
        if ((*(unsigned char *)(a1 + 84) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_104;
          }
          char v46 = 4 * *(unsigned char *)(a1 + 84);
LABEL_81:
          v7 += v46 >> 7;
LABEL_82:
          unsigned int v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_83:
          if (!(v54 & 1 | (v7 != 0))) {
            goto LABEL_84;
          }
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_104;
        }
        uint64_t v39 = objc_alloc_init(GEOFormattedStringMetaData);
        if (GEOFormattedStringMetaDataReadAllFrom((uint64_t)v39, (void *)v3))
        {
          PBReaderRecallMark();
          uint64_t v43 = 56;
LABEL_74:
          uint64_t v44 = *(void **)(a1 + v43);
          *(void *)(a1 + v43) = v39;

          --v7;
          goto LABEL_82;
        }
LABEL_103:

LABEL_104:
        int v51 = 0;
        unsigned int v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_85:
        char v52 = &OBJC_IVAR___GEOActiveTileGroup__textureChecksums;
        if (v53) {
LABEL_86:
        }
          *(unsigned char *)(a1 + v52[463]) |= 1u;
        if (v56 || (v51 & 1) == 0)
        {
          *(unsigned char *)(a1 + v52[463]) |= 8u;
          *(unsigned char *)(a1 + v52[463]) |= 4u;
          *(unsigned char *)(a1 + v52[463]) |= 0x40u;
          *(unsigned char *)(a1 + v52[463]) |= 0x10u;
          *(unsigned char *)(a1 + v52[463]) |= 2u;
          *(unsigned char *)(a1 + v52[463]) |= 0x20u;
        }
        else if (v19)
        {
          while (1)
          {
            int v47 = *v19++;
            char v48 = 8;
            switch(v47)
            {
              case 0:
                goto LABEL_97;
              case 3:
                goto LABEL_96;
              case 4:
                char v48 = 4;
                goto LABEL_96;
              case 5:
                char v48 = 64;
                goto LABEL_96;
              case 6:
                char v48 = 16;
                goto LABEL_96;
              case 7:
                char v48 = 2;
                goto LABEL_96;
              case 8:
                char v48 = 32;
LABEL_96:
                *(unsigned char *)(a1 + v52[463]) |= v48;
                break;
              default:
                continue;
            }
          }
        }
LABEL_97:
        if (v51) {
          unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
        }
        else {
          unint64_t v3 = 0;
        }
        if (v56)
        {
          uint64_t v49 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      default:
        if (v53 & 1) == 0 || (*(unsigned char *)(a1 + 84))
        {
LABEL_75:
          char v45 = PBReaderSkipValueWithTag();
          unsigned int v21 = (int *)MEMORY[0x1E4F940C8];
          if ((v45 & 1) == 0)
          {
            int v51 = 0;
            goto LABEL_85;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v40 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            unint64_t v41 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v40;
          }
          int v42 = PBUnknownFieldAdd();
          unsigned int v21 = (int *)MEMORY[0x1E4F940C8];
          if (!v42)
          {
            int v51 = 0;
            char v52 = &OBJC_IVAR___GEOActiveTileGroup__textureChecksums;
            goto LABEL_86;
          }
        }
        goto LABEL_83;
    }
  }
}

void sub_1897AC278(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897AC640(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897ACA08(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897ACDD0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897ACF3C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897ADD14(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOFormattedStringCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  uint64_t v23 = *MEMORY[0x1E4F143B8];
  long long v17 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  long long v20 = 0u;
  id v2 = a1[4];
  uint64_t v3 = [v2 countByEnumeratingWithState:&v17 objects:v22 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v18;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v18 != v5) {
          objc_enumerationMutation(v2);
        }
        [*(id *)(*((void *)&v17 + 1) + 8 * v6++) readAll:1];
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v17 objects:v22 count:16];
    }
    while (v4);
  }

  long long v15 = 0u;
  long long v16 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  id v7 = a1[6];
  uint64_t v8 = [v7 countByEnumeratingWithState:&v13 objects:v21 count:16];
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)v14;
    do
    {
      uint64_t v11 = 0;
      do
      {
        if (*(void *)v14 != v10) {
          objc_enumerationMutation(v7);
        }
        objc_msgSend(*(id *)(*((void *)&v13 + 1) + 8 * v11++), "readAll:", 1, (void)v13);
      }
      while (v9 != v11);
      uint64_t v9 = [v7 countByEnumeratingWithState:&v13 objects:v21 count:16];
    }
    while (v9);
  }

  [a1[3] readAll:1];
  return [a1[7] readAll:1];
}

unint64_t GEOFormattedStringReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 76))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOFormattedStringReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 80));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 72) = [v8 position];
  *(_DWORD *)(a1 + 76) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOFormattedStringReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOFormattedStringReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOFormattedStringReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOFormattedStringCallReadAllRecursiveWithoutSynchronized((id *)a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 80));
  return Specified;
}

void sub_1897AE068(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOFormattedStringReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOFormattedStringReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1897AE0CC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOFormattedStringMetaDataIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_39;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      if (v14 || (v8 & 7) == 4) {
        goto LABEL_39;
      }
      if ((v8 >> 3) == 2) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_41;
        }
        unsigned int v16 = 0;
        while (1)
        {
          uint64_t v17 = *v2;
          uint64_t v18 = *(void *)&a1[v17];
          unint64_t v19 = v18 + 1;
          if (v18 == -1 || v19 > *(void *)&a1[*v3]) {
            break;
          }
          int v20 = *(char *)(*(void *)&a1[*v5] + v18);
          *(void *)&a1[v17] = v19;
          if (v20 < 0)
          {
            BOOL v21 = v16++ > 8;
            if (!v21) {
              continue;
            }
          }
          goto LABEL_38;
        }
LABEL_36:
        a1[*v4] = 1;
        goto LABEL_38;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_41:
        BOOL v27 = 0;
        goto LABEL_40;
      }
LABEL_38:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_39;
      }
    }
    if ((v8 & 7) != 0) {
      goto LABEL_41;
    }
    unsigned int v22 = 0;
    while (1)
    {
      uint64_t v23 = *v2;
      uint64_t v24 = *(void *)&a1[v23];
      unint64_t v25 = v24 + 1;
      if (v24 == -1 || v25 > *(void *)&a1[*v3]) {
        goto LABEL_36;
      }
      int v26 = *(char *)(*(void *)&a1[*v5] + v24);
      *(void *)&a1[v23] = v25;
      if (v26 < 0)
      {
        BOOL v21 = v22++ > 8;
        if (!v21) {
          continue;
        }
      }
      goto LABEL_38;
    }
  }
LABEL_39:
  BOOL v27 = a1[*v4] == 0;
LABEL_40:
  PBReaderRecallMark();
  return v27;
}

void sub_1897AE72C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOFormattedStringIsDirty(uint64_t a1)
{
  uint64_t v13 = *MEMORY[0x1E4F143B8];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 80));
  char v2 = *(unsigned char *)(a1 + 84);
  if ((v2 & 0xDC) != 0) {
    return 1;
  }
  if ((*(unsigned char *)(a1 + 84) & 2) != 0)
  {
    if (GEOConditionalFormattedStringIsDirty(*(os_unfair_lock_s **)(a1 + 24))) {
      return 1;
    }
    char v2 = *(unsigned char *)(a1 + 84);
  }
  if ((v2 & 0x20) != 0) {
    return 1;
  }
  if ((v2 & 4) == 0) {
    return 0;
  }
  long long v10 = 0u;
  long long v11 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  id v5 = *(id *)(a1 + 32);
  uint64_t v3 = [v5 countByEnumeratingWithState:&v8 objects:v12 count:16];
  if (v3)
  {
    uint64_t v6 = *(void *)v9;
    while (2)
    {
      for (uint64_t i = 0; i != v3; ++i)
      {
        if (*(void *)v9 != v6) {
          objc_enumerationMutation(v5);
        }
        if (GEOFormatArgumentIsDirty(*(os_unfair_lock_s **)(*((void *)&v8 + 1) + 8 * i)))
        {
          uint64_t v3 = 1;
          goto LABEL_20;
        }
      }
      uint64_t v3 = [v5 countByEnumeratingWithState:&v8 objects:v12 count:16];
      if (v3) {
        continue;
      }
      break;
    }
  }
LABEL_20:

  return v3;
}

os_unfair_lock_s *GEOFormattedStringIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOFormattedStringIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 20);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_1897AEFA8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897AF580(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOFormattedStringMetaDataReadAllFrom(uint64_t a1, void *a2)
{
  uint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    id v5 = (int *)MEMORY[0x1E4F940E0];
    uint64_t v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      while (1)
      {
        if (v3[*v6]) {
          goto LABEL_49;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          goto LABEL_49;
        }
        if ((v10 >> 3) == 2) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          char v18 = 0;
          unsigned int v19 = 0;
          uint64_t v20 = 0;
          *(unsigned char *)(a1 + 24) |= 1u;
          while (1)
          {
            uint64_t v21 = *v4;
            uint64_t v22 = *(void *)&v3[v21];
            unint64_t v23 = v22 + 1;
            if (v22 == -1 || v23 > *(void *)&v3[*v5])
            {
              int v26 = &OBJC_IVAR___GEOFormattedStringMetaData__realtimeStatus;
              goto LABEL_41;
            }
            char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
            *(void *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0) {
              break;
            }
            v18 += 7;
            BOOL v25 = v19++ > 8;
            if (v25)
            {
              LODWORD(v20) = 0;
              int v26 = &OBJC_IVAR___GEOFormattedStringMetaData__realtimeStatus;
              goto LABEL_44;
            }
          }
          int v26 = &OBJC_IVAR___GEOFormattedStringMetaData__realtimeStatus;
LABEL_42:
          if (v3[*v6]) {
            LODWORD(v20) = 0;
          }
LABEL_44:
          *(_DWORD *)(a1 + *v26) = v20;
          goto LABEL_45;
        }
        if (!*(void *)(a1 + 8))
        {
          id v33 = objc_alloc_init(MEMORY[0x1E4F940B0]);
          BOOL v34 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = v33;
        }
        if ((PBUnknownFieldAdd() & 1) == 0) {
          goto LABEL_50;
        }
LABEL_45:
        if (*(void *)&v3[*v4] >= *(void *)&v3[*v5]) {
          goto LABEL_49;
        }
      }
      char v27 = 0;
      unsigned int v28 = 0;
      uint64_t v20 = 0;
      *(unsigned char *)(a1 + 24) |= 2u;
      while (1)
      {
        uint64_t v29 = *v4;
        uint64_t v30 = *(void *)&v3[v29];
        unint64_t v31 = v30 + 1;
        if (v30 == -1 || v31 > *(void *)&v3[*v5]) {
          break;
        }
        char v32 = *(unsigned char *)(*(void *)&v3[*v7] + v30);
        *(void *)&v3[v29] = v31;
        v20 |= (unint64_t)(v32 & 0x7F) << v27;
        if ((v32 & 0x80) == 0)
        {
          int v26 = &OBJC_IVAR___GEOFormattedStringMetaData__spokenPrivacyFilterType;
          goto LABEL_42;
        }
        v27 += 7;
        BOOL v25 = v28++ > 8;
        if (v25)
        {
          LODWORD(v20) = 0;
          int v26 = &OBJC_IVAR___GEOFormattedStringMetaData__spokenPrivacyFilterType;
          goto LABEL_44;
        }
      }
      int v26 = &OBJC_IVAR___GEOFormattedStringMetaData__spokenPrivacyFilterType;
LABEL_41:
      v3[*v6] = 1;
      goto LABEL_42;
    }
LABEL_49:
    BOOL v35 = v3[*v6] == 0;
  }
  else
  {
LABEL_50:
    BOOL v35 = 0;
  }
  objc_sync_exit(v3);

  return v35;
}

void sub_1897B0568(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOFormattedStringMetaDataReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOFormattedStringMetaDataReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1897B05CC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOGenericCombinationsReadAllFrom(void *a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    id v5 = (int *)MEMORY[0x1E4F940E0];
    uint64_t v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 2)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_29;
          }
          char v18 = objc_alloc_init(GEOGenericSubstitutes);
          if (!GEOGenericSubstitutesReadAllFrom((uint64_t)v18, v3))
          {

            goto LABEL_29;
          }
          PBReaderRecallMark();
          objc_msgSend(a1, "addSubstitutes:", v18, 0, 0);
        }
        else
        {
          if (!a1[1])
          {
            id v19 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            uint64_t v20 = (void *)a1[1];
            a1[1] = v19;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_29;
          }
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v21 = v3[*v6] == 0;
  }
  else
  {
LABEL_29:
    BOOL v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_1897B133C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOGenericCombinationsReadFrom(void *a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOGenericCombinationsReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1897B13A0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOGenericSubstitutesIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  char v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    id v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      if ((v8 >> 3) == 2)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_38;
        }
        unsigned int v17 = 0;
        while (1)
        {
          uint64_t v18 = *v2;
          uint64_t v19 = *(void *)&a1[v18];
          unint64_t v20 = v19 + 1;
          if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
            break;
          }
          int v21 = *(char *)(*(void *)&a1[*v5] + v19);
          *(void *)&a1[v18] = v20;
          if (v21 < 0 && v17++ <= 8) {
            continue;
          }
          goto LABEL_35;
        }
        a1[*v4] = 1;
      }
      else if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOFormattedStringIsValid(a1))
        {
LABEL_38:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_38;
      }
LABEL_35:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v23 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v23;
}

BOOL GEOGenericInstructionReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    id v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          uint64_t v18 = PBReaderReadString();
          uint64_t v19 = *(void **)(a1 + 16);
          *(void *)(a1 + 16) = v18;
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v20 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            int v21 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v20;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_26;
          }
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v22 = v3[*v6] == 0;
  }
  else
  {
LABEL_26:
    BOOL v22 = 0;
  }
  objc_sync_exit(v3);

  return v22;
}

void sub_1897B2274(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOGenericInstructionReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOGenericInstructionReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1897B22D8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOGenericInstructionIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  char v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    id v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || (PBReaderSkipValueWithTag() & 1) == 0)
        {
LABEL_26:
          BOOL v17 = 0;
          goto LABEL_25;
        }
      }
      else if (!PBReaderSkipValueWithTag())
      {
        goto LABEL_26;
      }
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v17 = a1[*v4] == 0;
LABEL_25:
  PBReaderRecallMark();
  return v17;
}

BOOL GEOGenericStringDataReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    id v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      while (1)
      {
        if (v3[*v6]) {
          goto LABEL_51;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          goto LABEL_51;
        }
        unint64_t v18 = v10 >> 3;
        if ((v10 >> 3) == 4) {
          break;
        }
        if (v18 == 2)
        {
          char v28 = 0;
          unsigned int v29 = 0;
          uint64_t v23 = 0;
          *(unsigned char *)(a1 + 32) |= 2u;
          while (1)
          {
            uint64_t v30 = *v4;
            uint64_t v31 = *(void *)&v3[v30];
            unint64_t v32 = v31 + 1;
            if (v31 == -1 || v32 > *(void *)&v3[*v5]) {
              break;
            }
            char v33 = *(unsigned char *)(*(void *)&v3[*v7] + v31);
            *(void *)&v3[v30] = v32;
            v23 |= (unint64_t)(v33 & 0x7F) << v28;
            if ((v33 & 0x80) == 0) {
              goto LABEL_46;
            }
            v28 += 7;
            BOOL v15 = v29++ >= 9;
            if (v15)
            {
              LODWORD(v23) = 0;
              goto LABEL_48;
            }
          }
          v3[*v6] = 1;
LABEL_46:
          if (v3[*v6]) {
            LODWORD(v23) = 0;
          }
LABEL_48:
          uint64_t v36 = 28;
LABEL_49:
          *(_DWORD *)(a1 + v36) = v23;
          goto LABEL_50;
        }
        if (v18 == 1)
        {
          uint64_t v19 = PBReaderReadString();
          id v20 = *(void **)(a1 + 16);
          *(void *)(a1 + 16) = v19;
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v34 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            BOOL v35 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v34;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_52;
          }
        }
LABEL_50:
        if (*(void *)&v3[*v4] >= *(void *)&v3[*v5]) {
          goto LABEL_51;
        }
      }
      char v21 = 0;
      unsigned int v22 = 0;
      uint64_t v23 = 0;
      *(unsigned char *)(a1 + 32) |= 1u;
      while (1)
      {
        uint64_t v24 = *v4;
        uint64_t v25 = *(void *)&v3[v24];
        unint64_t v26 = v25 + 1;
        if (v25 == -1 || v26 > *(void *)&v3[*v5]) {
          break;
        }
        char v27 = *(unsigned char *)(*(void *)&v3[*v7] + v25);
        *(void *)&v3[v24] = v26;
        v23 |= (unint64_t)(v27 & 0x7F) << v21;
        if ((v27 & 0x80) == 0) {
          goto LABEL_42;
        }
        v21 += 7;
        BOOL v15 = v22++ >= 9;
        if (v15)
        {
          LODWORD(v23) = 0;
          goto LABEL_44;
        }
      }
      v3[*v6] = 1;
LABEL_42:
      if (v3[*v6]) {
        LODWORD(v23) = 0;
      }
LABEL_44:
      uint64_t v36 = 24;
      goto LABEL_49;
    }
LABEL_51:
    BOOL v37 = v3[*v6] == 0;
  }
  else
  {
LABEL_52:
    BOOL v37 = 0;
  }
  objc_sync_exit(v3);

  return v37;
}

void sub_1897B35D4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOGenericStringDataReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOGenericStringDataReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1897B3638(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOGenericSubstitutesReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    id v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 2)
        {
          char v20 = 0;
          unsigned int v21 = 0;
          uint64_t v22 = 0;
          *(unsigned char *)(a1 + 28) |= 1u;
          while (1)
          {
            uint64_t v23 = *v4;
            uint64_t v24 = *(void *)&v3[v23];
            unint64_t v25 = v24 + 1;
            if (v24 == -1 || v25 > *(void *)&v3[*v5]) {
              break;
            }
            char v26 = *(unsigned char *)(*(void *)&v3[*v7] + v24);
            *(void *)&v3[v23] = v25;
            v22 |= (unint64_t)(v26 & 0x7F) << v20;
            if ((v26 & 0x80) == 0) {
              goto LABEL_36;
            }
            v20 += 7;
            BOOL v15 = v21++ >= 9;
            if (v15)
            {
              LODWORD(v22) = 0;
              goto LABEL_38;
            }
          }
          v3[*v6] = 1;
LABEL_36:
          if (v3[*v6]) {
            LODWORD(v22) = 0;
          }
LABEL_38:
          *(_DWORD *)(a1 + 24) = v22;
        }
        else if ((v10 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_42;
          }
          unint64_t v18 = objc_alloc_init(GEOFormattedString);
          if (!GEOFormattedStringReadAllFrom(v18, v3))
          {

            goto LABEL_42;
          }
          PBReaderRecallMark();
          uint64_t v19 = *(void **)(a1 + 16);
          *(void *)(a1 + 16) = v18;
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v27 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            char v28 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v27;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_42;
          }
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v29 = v3[*v6] == 0;
  }
  else
  {
LABEL_42:
    BOOL v29 = 0;
  }
  objc_sync_exit(v3);

  return v29;
}

void sub_1897B47FC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOGenericSubstitutesReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOGenericSubstitutesReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1897B4860(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897B4FA8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOGuidanceEventReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 104));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 100);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 96)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  uint64_t v12 = (const float *)(a1 + 156);
  uint32x4_t v13 = (uint32x4_t)vld1q_dup_f32(v12);
  v14.i64[0] = 0x100000001;
  v14.i64[1] = 0x100000001;
  unsigned int v15 = vaddvq_s32(vaddq_s32((int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v13, (uint32x4_t)xmmword_18A633F70), v14), (int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v13, (uint32x4_t)xmmword_18A633F80), v14)));
  while (2)
  {
    uint64_t v16 = 1;
    uint64_t v17 = 1;
    uint64_t v18 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v15;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v17 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v19 = v15 > 4;
        char v20 = v19 | v11;
        char v146 = v19 & ~(_BYTE)v11 | v9;
        char v148 = v19 | v11 | v146;
        if (((v19 | v11) | v8)) {
          unsigned int v21 = 0;
        }
        else {
          unsigned int v21 = a3;
        }
        uint64_t v22 = (int *)MEMORY[0x1E4F940E8];
        uint64_t v23 = (int *)MEMORY[0x1E4F940C8];
        char v149 = (v21 == 0) | v20;
        uint64_t v24 = &OBJC_IVAR___GEOActiveTileGroup__textureChecksums;
        unint64_t v25 = (int *)MEMORY[0x1E4F940B8];
        char v147 = v19 | v11;
        break;
      default:
        ++v15;
LABEL_7:
        uint64_t v16 = v9;
LABEL_8:
        uint64_t v17 = v10;
        uint64_t v18 = v11;
LABEL_10:
        ++v7;
        uint64_t v9 = v16;
        uint64_t v10 = v17;
        uint64_t v11 = v18;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v22) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v23)) {
      goto LABEL_271;
    }
    char v26 = 0;
    unsigned int v27 = 0;
    unint64_t v28 = 0;
    while (1)
    {
      uint64_t v29 = *v22;
      uint64_t v30 = *(void *)(v3 + v29);
      unint64_t v31 = v30 + 1;
      if (v30 == -1 || v31 > *(void *)(v3 + *v6)) {
        break;
      }
      char v32 = *(unsigned char *)(*(void *)(v3 + *v25) + v30);
      *(void *)(v3 + v29) = v31;
      v28 |= (unint64_t)(v32 & 0x7F) << v26;
      if ((v32 & 0x80) == 0) {
        goto LABEL_25;
      }
      v26 += 7;
      BOOL v33 = v27++ >= 9;
      if (v33)
      {
        unint64_t v28 = 0;
        int v34 = *(unsigned __int8 *)(v3 + *v23);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v23) = 1;
LABEL_25:
    int v34 = *(unsigned __int8 *)(v3 + *v23);
    if (*(unsigned char *)(v3 + *v23)) {
      unint64_t v28 = 0;
    }
LABEL_27:
    if (v34 || (v28 & 7) == 4)
    {
LABEL_271:
      int v145 = 1;
      goto LABEL_272;
    }
    unint64_t v36 = v28 >> 3;
    BOOL v37 = v20;
    if ((v149 & 1) == 0)
    {
      BOOL v38 = v21;
      do
      {
        int v40 = *v38++;
        int v39 = v40;
        BOOL v37 = v40 != 0;
        if (v40) {
          BOOL v41 = v39 == v36;
        }
        else {
          BOOL v41 = 1;
        }
      }
      while (!v41);
    }
    switch((int)v36)
    {
      case 1:
        if ((v8 & 1) == 0) {
          goto LABEL_193;
        }
        char v42 = 0;
        unsigned int v43 = 0;
        uint64_t v44 = 0;
        *(_DWORD *)(a1 + v24[492]) |= 0x800u;
        while (1)
        {
          uint64_t v45 = *v22;
          uint64_t v46 = *(void *)(v3 + v45);
          unint64_t v47 = v46 + 1;
          if (v46 == -1 || v47 > *(void *)(v3 + *v6)) {
            break;
          }
          char v48 = *(unsigned char *)(*(void *)(v3 + *v25) + v46);
          *(void *)(v3 + v45) = v47;
          v44 |= (unint64_t)(v48 & 0x7F) << v42;
          if ((v48 & 0x80) == 0) {
            goto LABEL_196;
          }
          v42 += 7;
          BOOL v33 = v43++ >= 9;
          if (v33)
          {
            LODWORD(v44) = 0;
            goto LABEL_198;
          }
        }
        *(unsigned char *)(v3 + *v23) = 1;
LABEL_196:
        if (*(unsigned char *)(v3 + *v23)) {
          LODWORD(v44) = 0;
        }
LABEL_198:
        uint64_t v135 = 144;
        goto LABEL_243;
      case 2:
        if ((v8 & 1) == 0) {
          goto LABEL_193;
        }
        char v49 = 0;
        unsigned int v50 = 0;
        uint64_t v44 = 0;
        *(_DWORD *)(a1 + v24[492]) |= 0x20u;
        while (2)
        {
          uint64_t v51 = *v22;
          uint64_t v52 = *(void *)(v3 + v51);
          unint64_t v53 = v52 + 1;
          if (v52 == -1 || v53 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v23) = 1;
          }
          else
          {
            char v54 = *(unsigned char *)(*(void *)(v3 + *v25) + v52);
            *(void *)(v3 + v51) = v53;
            v44 |= (unint64_t)(v54 & 0x7F) << v49;
            if (v54 < 0)
            {
              v49 += 7;
              BOOL v33 = v50++ >= 9;
              if (v33)
              {
                LODWORD(v44) = 0;
                goto LABEL_202;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v23)) {
          LODWORD(v44) = 0;
        }
LABEL_202:
        uint64_t v135 = 120;
        goto LABEL_243;
      case 3:
        if (!v37) {
          goto LABEL_193;
        }
        if ((*(unsigned char *)(a1 + v24[492] + 2) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_293;
          }
          uint64_t v24 = &OBJC_IVAR___GEOActiveTileGroup__textureChecksums;
          int v138 = (int)(*(_DWORD *)(a1 + 156) << 10) >> 31;
          goto LABEL_263;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_293;
        }
        char v55 = objc_alloc_init(GEOSignGuidance);
        if (!GEOSignGuidanceReadAllFrom((uint64_t)v55, (void *)v3, v10 & 1)) {
          goto LABEL_292;
        }
        PBReaderRecallMark();
        uint64_t v56 = 80;
        goto LABEL_192;
      case 4:
        if (!v37) {
          goto LABEL_193;
        }
        if ((*(unsigned char *)(a1 + v24[492] + 2) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_293;
          }
          uint64_t v24 = &OBJC_IVAR___GEOActiveTileGroup__textureChecksums;
          int v138 = (int)(*(_DWORD *)(a1 + 156) << 9) >> 31;
          goto LABEL_263;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_293;
        }
        char v55 = objc_alloc_init(GEOSpokenGuidance);
        if (!GEOSpokenGuidanceReadAllFrom((uint64_t)v55, (void *)v3, v10 & 1)) {
          goto LABEL_292;
        }
        PBReaderRecallMark();
        uint64_t v56 = 88;
        goto LABEL_192;
      case 5:
        if (!v37) {
          goto LABEL_193;
        }
        if ((*(unsigned char *)(a1 + v24[492] + 2) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_293;
          }
          uint64_t v24 = &OBJC_IVAR___GEOActiveTileGroup__textureChecksums;
          int v138 = (int)(*(_DWORD *)(a1 + 156) << 12) >> 31;
          goto LABEL_263;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_293;
        }
        char v55 = objc_alloc_init(GEOVisualLaneGuidance);
        if (!GEOVisualLaneGuidanceReadAllFrom((uint64_t)v55, (void *)v3, v10 & 1)) {
          goto LABEL_292;
        }
        PBReaderRecallMark();
        uint64_t v56 = 48;
        goto LABEL_192;
      case 7:
        if ((v8 & 1) == 0) {
          goto LABEL_193;
        }
        char v60 = 0;
        unsigned int v61 = 0;
        uint64_t v44 = 0;
        *(_DWORD *)(a1 + v24[492]) |= 8u;
        while (2)
        {
          uint64_t v62 = *v22;
          uint64_t v63 = *(void *)(v3 + v62);
          unint64_t v64 = v63 + 1;
          if (v63 == -1 || v64 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v23) = 1;
          }
          else
          {
            char v65 = *(unsigned char *)(*(void *)(v3 + *v25) + v63);
            *(void *)(v3 + v62) = v64;
            v44 |= (unint64_t)(v65 & 0x7F) << v60;
            if (v65 < 0)
            {
              v60 += 7;
              BOOL v33 = v61++ >= 9;
              if (v33)
              {
                LODWORD(v44) = 0;
                goto LABEL_206;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v23)) {
          LODWORD(v44) = 0;
        }
LABEL_206:
        uint64_t v135 = 112;
        goto LABEL_243;
      case 8:
        if ((v8 & 1) == 0) {
          goto LABEL_193;
        }
        *(_DWORD *)(a1 + v24[492]) |= 2u;
        uint64_t v66 = *v22;
        unint64_t v67 = *(void *)(v3 + v66);
        if (v67 <= 0xFFFFFFFFFFFFFFF7 && v67 + 8 <= *(void *)(v3 + *v6))
        {
          uint64_t v68 = *(void *)(*(void *)(v3 + *v25) + v67);
          *(void *)(v3 + v66) = v67 + 8;
        }
        else
        {
          *(unsigned char *)(v3 + *v23) = 1;
          uint64_t v68 = 0;
        }
        uint64_t v139 = 64;
        goto LABEL_269;
      case 9:
        if ((v8 & 1) == 0) {
          goto LABEL_193;
        }
        *(_DWORD *)(a1 + v24[492]) |= 1u;
        uint64_t v69 = *v22;
        unint64_t v70 = *(void *)(v3 + v69);
        if (v70 <= 0xFFFFFFFFFFFFFFF7 && v70 + 8 <= *(void *)(v3 + *v6))
        {
          uint64_t v68 = *(void *)(*(void *)(v3 + *v25) + v70);
          *(void *)(v3 + v69) = v70 + 8;
        }
        else
        {
          *(unsigned char *)(v3 + *v23) = 1;
          uint64_t v68 = 0;
        }
        uint64_t v139 = 56;
LABEL_269:
        *(void *)(a1 + v139) = v68;
        goto LABEL_270;
      case 10:
        if ((v8 & 1) == 0) {
          goto LABEL_193;
        }
        char v71 = 0;
        unsigned int v72 = 0;
        uint64_t v44 = 0;
        *(_DWORD *)(a1 + v24[492]) |= 0x80u;
        while (2)
        {
          uint64_t v73 = *v22;
          uint64_t v74 = *(void *)(v3 + v73);
          unint64_t v75 = v74 + 1;
          if (v74 == -1 || v75 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v23) = 1;
          }
          else
          {
            char v76 = *(unsigned char *)(*(void *)(v3 + *v25) + v74);
            *(void *)(v3 + v73) = v75;
            v44 |= (unint64_t)(v76 & 0x7F) << v71;
            if (v76 < 0)
            {
              v71 += 7;
              BOOL v33 = v72++ >= 9;
              if (v33)
              {
                LODWORD(v44) = 0;
                goto LABEL_210;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v23)) {
          LODWORD(v44) = 0;
        }
LABEL_210:
        uint64_t v135 = 128;
        goto LABEL_243;
      case 11:
        if ((v8 & 1) == 0) {
          goto LABEL_193;
        }
        char v77 = 0;
        unsigned int v78 = 0;
        uint64_t v44 = 0;
        *(_DWORD *)(a1 + v24[492]) |= 0x100u;
        while (2)
        {
          uint64_t v79 = *v22;
          uint64_t v80 = *(void *)(v3 + v79);
          unint64_t v81 = v80 + 1;
          if (v80 == -1 || v81 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v23) = 1;
          }
          else
          {
            char v82 = *(unsigned char *)(*(void *)(v3 + *v25) + v80);
            *(void *)(v3 + v79) = v81;
            v44 |= (unint64_t)(v82 & 0x7F) << v77;
            if (v82 < 0)
            {
              v77 += 7;
              BOOL v33 = v78++ >= 9;
              if (v33)
              {
                LODWORD(v44) = 0;
                goto LABEL_214;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v23)) {
          LODWORD(v44) = 0;
        }
LABEL_214:
        uint64_t v135 = 132;
        goto LABEL_243;
      case 12:
        if ((v8 & 1) == 0) {
          goto LABEL_193;
        }
        char v83 = 0;
        unsigned int v84 = 0;
        uint64_t v44 = 0;
        *(_DWORD *)(a1 + v24[492]) |= 0x200u;
        while (2)
        {
          uint64_t v85 = *v22;
          uint64_t v86 = *(void *)(v3 + v85);
          unint64_t v87 = v86 + 1;
          if (v86 == -1 || v87 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v23) = 1;
          }
          else
          {
            char v88 = *(unsigned char *)(*(void *)(v3 + *v25) + v86);
            *(void *)(v3 + v85) = v87;
            v44 |= (unint64_t)(v88 & 0x7F) << v83;
            if (v88 < 0)
            {
              v83 += 7;
              BOOL v33 = v84++ >= 9;
              if (v33)
              {
                LODWORD(v44) = 0;
                goto LABEL_218;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v23)) {
          LODWORD(v44) = 0;
        }
LABEL_218:
        uint64_t v135 = 136;
        goto LABEL_243;
      case 13:
        if ((v8 & 1) == 0) {
          goto LABEL_193;
        }
        char v89 = 0;
        unsigned int v90 = 0;
        uint64_t v91 = 0;
        *(_DWORD *)(a1 + v24[492]) |= 0x4000u;
        while (2)
        {
          uint64_t v92 = *v22;
          uint64_t v93 = *(void *)(v3 + v92);
          unint64_t v94 = v93 + 1;
          if (v93 == -1 || v94 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v23) = 1;
          }
          else
          {
            char v95 = *(unsigned char *)(*(void *)(v3 + *v25) + v93);
            *(void *)(v3 + v92) = v94;
            v91 |= (unint64_t)(v95 & 0x7F) << v89;
            if (v95 < 0)
            {
              v89 += 7;
              BOOL v33 = v90++ >= 9;
              if (v33)
              {
                uint64_t v91 = 0;
                goto LABEL_222;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v23)) {
          uint64_t v91 = 0;
        }
LABEL_222:
        BOOL v136 = v91 != 0;
        uint64_t v137 = 153;
        goto LABEL_248;
      case 14:
        if (!v37) {
          goto LABEL_193;
        }
        if ((*(unsigned char *)(a1 + v24[492] + 2) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_293;
          }
          uint64_t v24 = &OBJC_IVAR___GEOActiveTileGroup__textureChecksums;
          int v138 = (int)(*(_DWORD *)(a1 + 156) << 13) >> 31;
          goto LABEL_263;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_293;
        }
        char v55 = objc_alloc_init(GEOJunctionView);
        if (!GEOJunctionViewReadAllFrom(v55, (void *)v3)) {
          goto LABEL_292;
        }
        PBReaderRecallMark();
        uint64_t v56 = 40;
        goto LABEL_192;
      case 15:
        if ((v8 & 1) == 0) {
          goto LABEL_193;
        }
        char v96 = 0;
        unsigned int v97 = 0;
        uint64_t v44 = 0;
        *(_DWORD *)(a1 + v24[492]) |= 0x1000u;
        while (2)
        {
          uint64_t v98 = *v22;
          uint64_t v99 = *(void *)(v3 + v98);
          unint64_t v100 = v99 + 1;
          if (v99 == -1 || v100 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v23) = 1;
          }
          else
          {
            char v101 = *(unsigned char *)(*(void *)(v3 + *v25) + v99);
            *(void *)(v3 + v98) = v100;
            v44 |= (unint64_t)(v101 & 0x7F) << v96;
            if (v101 < 0)
            {
              v96 += 7;
              BOOL v33 = v97++ >= 9;
              if (v33)
              {
                LODWORD(v44) = 0;
                goto LABEL_226;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v23)) {
          LODWORD(v44) = 0;
        }
LABEL_226:
        uint64_t v135 = 148;
        goto LABEL_243;
      case 16:
        if ((v8 & 1) == 0) {
          goto LABEL_193;
        }
        char v102 = 0;
        unsigned int v103 = 0;
        uint64_t v44 = 0;
        *(_DWORD *)(a1 + v24[492]) |= 0x40u;
        while (2)
        {
          uint64_t v104 = *v22;
          uint64_t v105 = *(void *)(v3 + v104);
          unint64_t v106 = v105 + 1;
          if (v105 == -1 || v106 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v23) = 1;
          }
          else
          {
            char v107 = *(unsigned char *)(*(void *)(v3 + *v25) + v105);
            *(void *)(v3 + v104) = v106;
            v44 |= (unint64_t)(v107 & 0x7F) << v102;
            if (v107 < 0)
            {
              v102 += 7;
              BOOL v33 = v103++ >= 9;
              if (v33)
              {
                LODWORD(v44) = 0;
                goto LABEL_230;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v23)) {
          LODWORD(v44) = 0;
        }
LABEL_230:
        uint64_t v135 = 124;
        goto LABEL_243;
      case 17:
        if ((v8 & 1) == 0) {
          goto LABEL_193;
        }
        char v108 = 0;
        unsigned int v109 = 0;
        uint64_t v44 = 0;
        *(_DWORD *)(a1 + v24[492]) |= 0x400u;
        while (2)
        {
          uint64_t v110 = *v22;
          uint64_t v111 = *(void *)(v3 + v110);
          unint64_t v112 = v111 + 1;
          if (v111 == -1 || v112 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v23) = 1;
          }
          else
          {
            char v113 = *(unsigned char *)(*(void *)(v3 + *v25) + v111);
            *(void *)(v3 + v110) = v112;
            v44 |= (unint64_t)(v113 & 0x7F) << v108;
            if (v113 < 0)
            {
              v108 += 7;
              BOOL v33 = v109++ >= 9;
              if (v33)
              {
                LODWORD(v44) = 0;
                goto LABEL_234;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v23)) {
          LODWORD(v44) = 0;
        }
LABEL_234:
        uint64_t v135 = 140;
        goto LABEL_243;
      case 18:
        if ((v8 & 1) == 0) {
          goto LABEL_193;
        }
        char v114 = 0;
        unsigned int v115 = 0;
        uint64_t v44 = 0;
        *(_DWORD *)(a1 + v24[492]) |= 0x10u;
        while (2)
        {
          uint64_t v116 = *v22;
          uint64_t v117 = *(void *)(v3 + v116);
          unint64_t v118 = v117 + 1;
          if (v117 == -1 || v118 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v23) = 1;
          }
          else
          {
            char v119 = *(unsigned char *)(*(void *)(v3 + *v25) + v117);
            *(void *)(v3 + v116) = v118;
            v44 |= (unint64_t)(v119 & 0x7F) << v114;
            if (v119 < 0)
            {
              v114 += 7;
              BOOL v33 = v115++ >= 9;
              if (v33)
              {
                LODWORD(v44) = 0;
                goto LABEL_238;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v23)) {
          LODWORD(v44) = 0;
        }
LABEL_238:
        uint64_t v135 = 116;
        goto LABEL_243;
      case 19:
        if ((v8 & 1) == 0) {
          goto LABEL_193;
        }
        char v120 = 0;
        unsigned int v121 = 0;
        uint64_t v44 = 0;
        *(_DWORD *)(a1 + v24[492]) |= 4u;
        while (2)
        {
          uint64_t v122 = *v22;
          uint64_t v123 = *(void *)(v3 + v122);
          unint64_t v124 = v123 + 1;
          if (v123 == -1 || v124 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v23) = 1;
          }
          else
          {
            char v125 = *(unsigned char *)(*(void *)(v3 + *v25) + v123);
            *(void *)(v3 + v122) = v124;
            v44 |= (unint64_t)(v125 & 0x7F) << v120;
            if (v125 < 0)
            {
              v120 += 7;
              BOOL v33 = v121++ >= 9;
              if (v33)
              {
                LODWORD(v44) = 0;
                goto LABEL_242;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v23)) {
          LODWORD(v44) = 0;
        }
LABEL_242:
        uint64_t v135 = 108;
LABEL_243:
        *(_DWORD *)(a1 + v135) = v44;
        goto LABEL_270;
      case 20:
        if (!v37) {
          goto LABEL_193;
        }
        if (*(unsigned char *)(a1 + v24[492] + 2))
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_293;
          }
          uint64_t v24 = &OBJC_IVAR___GEOActiveTileGroup__textureChecksums;
          int v138 = (int)(*(_DWORD *)(a1 + 156) << 15) >> 31;
          goto LABEL_263;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_293;
        }
        char v55 = objc_alloc_init(GEOARGuidance);
        if (!GEOARGuidanceReadAllFrom((uint64_t)v55, (void *)v3, v10 & 1)) {
          goto LABEL_292;
        }
        PBReaderRecallMark();
        uint64_t v56 = 24;
        goto LABEL_192;
      case 21:
        if ((v8 & 1) == 0) {
          goto LABEL_193;
        }
        char v126 = 0;
        unsigned int v127 = 0;
        uint64_t v128 = 0;
        *(_DWORD *)(a1 + v24[492]) |= 0x2000u;
        while (2)
        {
          uint64_t v129 = *v22;
          uint64_t v130 = *(void *)(v3 + v129);
          unint64_t v131 = v130 + 1;
          if (v130 == -1 || v131 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v23) = 1;
          }
          else
          {
            char v132 = *(unsigned char *)(*(void *)(v3 + *v25) + v130);
            *(void *)(v3 + v129) = v131;
            v128 |= (unint64_t)(v132 & 0x7F) << v126;
            if (v132 < 0)
            {
              v126 += 7;
              BOOL v33 = v127++ >= 9;
              if (v33)
              {
                uint64_t v128 = 0;
                goto LABEL_247;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v23)) {
          uint64_t v128 = 0;
        }
LABEL_247:
        BOOL v136 = v128 != 0;
        uint64_t v137 = 152;
LABEL_248:
        *(unsigned char *)(a1 + v137) = v136;
        goto LABEL_270;
      case 22:
        if (!v37) {
          goto LABEL_193;
        }
        if ((*(unsigned char *)(a1 + v24[492] + 2) & 2) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_293;
          }
          uint64_t v24 = &OBJC_IVAR___GEOActiveTileGroup__textureChecksums;
          int v138 = (int)(*(_DWORD *)(a1 + 156) << 14) >> 31;
          goto LABEL_263;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_293;
        }
        char v55 = objc_alloc_init(GEOGuidanceImportanceMode);
        if (!GEOGuidanceImportanceModeReadAllFrom((uint64_t)v55, (void *)v3)) {
          goto LABEL_292;
        }
        PBReaderRecallMark();
        uint64_t v56 = 32;
        goto LABEL_192;
      case 23:
        if (!v37) {
          goto LABEL_193;
        }
        if ((*(unsigned char *)(a1 + v24[492] + 2) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_293;
          }
          uint64_t v24 = &OBJC_IVAR___GEOActiveTileGroup__textureChecksums;
          int v138 = (int)(*(_DWORD *)(a1 + 156) << 11) >> 31;
LABEL_263:
          v7 += v138;
          char v20 = v147;
          uint64_t v23 = (int *)MEMORY[0x1E4F940C8];
LABEL_264:
          unint64_t v25 = (int *)MEMORY[0x1E4F940B8];
LABEL_270:
          if (!(v148 & 1 | (v7 != 0))) {
            goto LABEL_271;
          }
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_293;
        }
        char v55 = objc_alloc_init(GEONavTrayGuidance);
        if (GEONavTrayGuidanceReadAllFrom((uint64_t)v55, (void *)v3, v10 & 1))
        {
          PBReaderRecallMark();
          uint64_t v56 = 72;
LABEL_192:
          v133 = *(void **)(a1 + v56);
          *(void *)(a1 + v56) = v55;

          --v7;
          char v20 = v147;
          uint64_t v23 = (int *)MEMORY[0x1E4F940C8];
          uint64_t v24 = &OBJC_IVAR___GEOActiveTileGroup__textureChecksums;
          goto LABEL_264;
        }
LABEL_292:

LABEL_293:
        int v145 = 0;
        char v20 = v147;
        uint64_t v23 = (int *)MEMORY[0x1E4F940C8];
        uint64_t v24 = &OBJC_IVAR___GEOActiveTileGroup__textureChecksums;
LABEL_272:
        if (v146) {
LABEL_273:
        }
          *(_DWORD *)(a1 + v24[492]) |= 0x8000u;
        if (v20 & 1 | ((v145 & 1) == 0))
        {
          *(_DWORD *)(a1 + v24[492]) |= 0x200000u;
          *(_DWORD *)(a1 + v24[492]) |= 0x400000u;
          *(_DWORD *)(a1 + v24[492]) |= 0x80000u;
          *(_DWORD *)(a1 + v24[492]) |= 0x10000u;
          *(_DWORD *)(a1 + v24[492]) |= 0x100000u;
          *(_DWORD *)(a1 + v24[492]) |= 0x40000u;
          *(_DWORD *)(a1 + v24[492]) |= 0x20000u;
        }
        else if (v21)
        {
          while (2)
          {
            int v140 = *v21++;
            int v141 = v140 - 14;
            switch(v140)
            {
              case 14:
                int v142 = 0x40000;
                goto LABEL_285;
              case 15:
              case 16:
              case 17:
              case 18:
              case 19:
              case 21:
                continue;
              case 20:
                int v142 = 0x10000;
                goto LABEL_285;
              case 22:
                int v142 = 0x20000;
                goto LABEL_285;
              case 23:
                int v142 = 0x100000;
LABEL_285:
                *(_DWORD *)(a1 + v24[492]) |= v142;
                continue;
              default:
                int v142 = 0x200000;
                switch(v141)
                {
                  case 0:
                    goto LABEL_286;
                  case 3:
                    goto LABEL_285;
                  case 4:
                    int v142 = 0x400000;
                    goto LABEL_285;
                  case 5:
                    int v142 = 0x80000;
                    goto LABEL_285;
                  default:
                    continue;
                }
                goto LABEL_286;
            }
          }
        }
LABEL_286:
        if (v145)
        {
          unint64_t v3 = *(unsigned char *)(v3 + *v23) == 0;
          if ((v20 & 1) == 0) {
            return v3;
          }
LABEL_290:
          v143 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        else
        {
          unint64_t v3 = 0;
          if (v20) {
            goto LABEL_290;
          }
        }
        return v3;
      default:
        if ((v146 & 1) == 0 || (*(unsigned char *)(a1 + v24[492] + 1) & 0x80) != 0)
        {
LABEL_193:
          char v134 = PBReaderSkipValueWithTag();
          unint64_t v25 = (int *)MEMORY[0x1E4F940B8];
          uint64_t v24 = &OBJC_IVAR___GEOActiveTileGroup__textureChecksums;
          uint64_t v23 = (int *)MEMORY[0x1E4F940C8];
          char v20 = v147;
          if ((v134 & 1) == 0)
          {
            int v145 = 0;
            goto LABEL_272;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v57 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            char v58 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v57;
          }
          int v59 = PBUnknownFieldAdd();
          char v20 = v147;
          uint64_t v23 = (int *)MEMORY[0x1E4F940C8];
          uint64_t v24 = &OBJC_IVAR___GEOActiveTileGroup__textureChecksums;
          unint64_t v25 = (int *)MEMORY[0x1E4F940B8];
          if (!v59)
          {
            int v145 = 0;
            goto LABEL_273;
          }
        }
        goto LABEL_270;
    }
  }
}

void sub_1897B6534(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897B66A0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897B6810(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897B6980(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897B6AF0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897B75D0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897B8C08(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOGuidanceEventCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  [*(id *)(a1 + 80) readAll:1];
  [*(id *)(a1 + 88) readAll:1];
  [*(id *)(a1 + 48) readAll:1];
  [*(id *)(a1 + 24) readAll:1];
  [*(id *)(a1 + 72) readAll:1];
  [*(id *)(a1 + 40) readAll:1];
  char v2 = *(void **)(a1 + 32);

  return [v2 readAll:1];
}

unint64_t GEOGuidanceEventReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 100))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOGuidanceEventReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 104));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 96) = [v8 position];
  *(_DWORD *)(a1 + 100) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOGuidanceEventReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOGuidanceEventReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOGuidanceEventReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOGuidanceEventCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 104));
  return Specified;
}

void sub_1897B8E44(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOGuidanceEventReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOGuidanceEventReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1897B8EA8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOSignGuidanceIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  char v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    id v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
        case 2u:
        case 3u:
          if (v15 == 2 && PBReaderPlaceMark() && GEOFormattedStringIsValid(a1)) {
            goto LABEL_53;
          }
          goto LABEL_56;
        case 5u:
          if ((v8 & 7) != 0) {
            goto LABEL_56;
          }
          unsigned int v17 = 0;
          while (1)
          {
            uint64_t v18 = *v2;
            uint64_t v19 = *(void *)&a1[v18];
            unint64_t v20 = v19 + 1;
            if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
              goto LABEL_45;
            }
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if (v21 < 0)
            {
              BOOL v22 = v17++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_54;
          }
        case 6u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEONameInfoIsValid(a1)) {
            goto LABEL_56;
          }
          goto LABEL_53;
        case 7u:
          if ((v8 & 7) != 0) {
            goto LABEL_56;
          }
          unsigned int v23 = 0;
          break;
        case 8u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOJunctionInfoIsValid(a1)) {
            goto LABEL_56;
          }
          goto LABEL_53;
        case 9u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPBTransitArtworkIsValid(a1)) {
            goto LABEL_56;
          }
LABEL_53:
          PBReaderRecallMark();
          continue;
        default:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_56:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        uint64_t v24 = *v2;
        uint64_t v25 = *(void *)&a1[v24];
        unint64_t v26 = v25 + 1;
        if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
          break;
        }
        int v27 = *(char *)(*(void *)&a1[*v5] + v25);
        *(void *)&a1[v24] = v26;
        if (v27 < 0)
        {
          BOOL v22 = v23++ > 8;
          if (!v22) {
            continue;
          }
        }
        goto LABEL_54;
      }
LABEL_45:
      a1[*v4] = 1;
LABEL_54:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v28 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v28;
}

BOOL GEOSpokenGuidanceIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  char v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    id v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 == 2 && PBReaderPlaceMark() && GEOFormattedStringIsValid(a1)) {
            goto LABEL_84;
          }
          goto LABEL_97;
        case 2u:
          if ((v8 & 7) != 0) {
            goto LABEL_97;
          }
          unsigned int v17 = 0;
          while (1)
          {
            uint64_t v18 = *v2;
            uint64_t v19 = *(void *)&a1[v18];
            unint64_t v20 = v19 + 1;
            if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
              goto LABEL_93;
            }
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if (v21 < 0)
            {
              BOOL v22 = v17++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_94;
          }
        case 3u:
          if ((v8 & 7) != 0) {
            goto LABEL_97;
          }
          unsigned int v23 = 0;
          while (1)
          {
            uint64_t v24 = *v2;
            uint64_t v25 = *(void *)&a1[v24];
            unint64_t v26 = v25 + 1;
            if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
              goto LABEL_93;
            }
            int v27 = *(char *)(*(void *)&a1[*v5] + v25);
            *(void *)&a1[v24] = v26;
            if (v27 < 0)
            {
              BOOL v22 = v23++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_94;
          }
        case 4u:
          if ((v8 & 7) != 0) {
            goto LABEL_97;
          }
          unsigned int v28 = 0;
          while (1)
          {
            uint64_t v29 = *v2;
            uint64_t v30 = *(void *)&a1[v29];
            unint64_t v31 = v30 + 1;
            if (v30 == -1 || v31 > *(void *)&a1[*v3]) {
              goto LABEL_93;
            }
            int v32 = *(char *)(*(void *)&a1[*v5] + v30);
            *(void *)&a1[v29] = v31;
            if (v32 < 0)
            {
              BOOL v22 = v28++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_94;
          }
        case 5u:
          if ((v8 & 7) != 0) {
            goto LABEL_97;
          }
          unsigned int v33 = 0;
          while (1)
          {
            uint64_t v34 = *v2;
            uint64_t v35 = *(void *)&a1[v34];
            unint64_t v36 = v35 + 1;
            if (v35 == -1 || v36 > *(void *)&a1[*v3]) {
              goto LABEL_93;
            }
            int v37 = *(char *)(*(void *)&a1[*v5] + v35);
            *(void *)&a1[v34] = v36;
            if (v37 < 0)
            {
              BOOL v22 = v33++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_94;
          }
        case 6u:
          if ((v8 & 7) != 0) {
            goto LABEL_97;
          }
          unsigned int v38 = 0;
          while (1)
          {
            uint64_t v39 = *v2;
            uint64_t v40 = *(void *)&a1[v39];
            unint64_t v41 = v40 + 1;
            if (v40 == -1 || v41 > *(void *)&a1[*v3]) {
              goto LABEL_93;
            }
            int v42 = *(char *)(*(void *)&a1[*v5] + v40);
            *(void *)&a1[v39] = v41;
            if (v42 < 0)
            {
              BOOL v22 = v38++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_94;
          }
        case 7u:
          if ((v8 & 7) != 0) {
            goto LABEL_97;
          }
          unsigned int v43 = 0;
          while (1)
          {
            uint64_t v44 = *v2;
            uint64_t v45 = *(void *)&a1[v44];
            unint64_t v46 = v45 + 1;
            if (v45 == -1 || v46 > *(void *)&a1[*v3]) {
              goto LABEL_93;
            }
            int v47 = *(char *)(*(void *)&a1[*v5] + v45);
            *(void *)&a1[v44] = v46;
            if (v47 < 0)
            {
              BOOL v22 = v43++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_94;
          }
        case 9u:
          if ((v8 & 7) != 0) {
            goto LABEL_97;
          }
          unsigned int v48 = 0;
          while (1)
          {
            uint64_t v49 = *v2;
            uint64_t v50 = *(void *)&a1[v49];
            unint64_t v51 = v50 + 1;
            if (v50 == -1 || v51 > *(void *)&a1[*v3]) {
              goto LABEL_93;
            }
            int v52 = *(char *)(*(void *)&a1[*v5] + v50);
            *(void *)&a1[v49] = v51;
            if (v52 < 0)
            {
              BOOL v22 = v48++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_94;
          }
        case 0xAu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOTimeGapIsValid(a1)) {
            goto LABEL_97;
          }
LABEL_84:
          PBReaderRecallMark();
          continue;
        case 0xBu:
          if ((v8 & 7) != 0) {
            goto LABEL_97;
          }
          unsigned int v53 = 0;
          break;
        default:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_97:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        uint64_t v54 = *v2;
        uint64_t v55 = *(void *)&a1[v54];
        unint64_t v56 = v55 + 1;
        if (v55 == -1 || v56 > *(void *)&a1[*v3]) {
          break;
        }
        int v57 = *(char *)(*(void *)&a1[*v5] + v55);
        *(void *)&a1[v54] = v56;
        if (v57 < 0)
        {
          BOOL v22 = v53++ > 8;
          if (!v22) {
            continue;
          }
        }
        goto LABEL_94;
      }
LABEL_93:
      a1[*v4] = 1;
LABEL_94:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v58 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v58;
}

BOOL GEOVisualLaneGuidanceIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  char v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    id v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_31;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        goto LABEL_31;
      }
      unint64_t v17 = v8 >> 3;
      if ((v8 >> 3) == 3 || v17 == 2) {
        break;
      }
      if (v17 == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOLaneInfoIsValid(a1)) {
          goto LABEL_32;
        }
LABEL_28:
        PBReaderRecallMark();
        goto LABEL_30;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        goto LABEL_32;
      }
LABEL_30:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_31;
      }
    }
    if (v15 != 2 || !PBReaderPlaceMark() || !GEOFormattedStringIsValid(a1))
    {
LABEL_32:
      PBReaderRecallMark();
      return 0;
    }
    goto LABEL_28;
  }
LABEL_31:
  BOOL v18 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v18;
}

BOOL GEONavTrayGuidanceIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  char v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    id v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      if ((v8 >> 3) == 2 || (v8 >> 3) == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOFormattedStringIsValid(a1))
        {
LABEL_27:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_27;
      }
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

BOOL GEOJunctionViewIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  char v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    id v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || (PBReaderSkipValueWithTag() & 1) == 0)
        {
LABEL_26:
          BOOL v17 = 0;
          goto LABEL_25;
        }
      }
      else if (!PBReaderSkipValueWithTag())
      {
        goto LABEL_26;
      }
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v17 = a1[*v4] == 0;
LABEL_25:
  PBReaderRecallMark();
  return v17;
}

BOOL GEOGuidanceImportanceModeIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  char v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    id v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        BOOL v13 = v7++ >= 9;
        if (v13)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if (v15 == 2)
        {
          if (!PBReaderPlaceMark())
          {
LABEL_43:
            PBReaderRecallMark();
            return 0;
          }
LABEL_29:
          while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
          {
            unsigned int v22 = a1[*v4];
            if (a1[*v4]) {
              break;
            }
            while (1)
            {
              uint64_t v23 = *v2;
              uint64_t v24 = *(void *)&a1[v23];
              unint64_t v25 = v24 + 1;
              if (v24 == -1 || v25 > *(void *)&a1[*v3]) {
                break;
              }
              int v26 = *(char *)(*(void *)&a1[*v5] + v24);
              *(void *)&a1[v23] = v25;
              if (v26 < 0)
              {
                BOOL v13 = v22++ >= 9;
                if (!v13) {
                  continue;
                }
              }
              goto LABEL_29;
            }
            a1[*v4] = 1;
          }
          PBReaderRecallMark();
        }
        else
        {
          if ((v8 & 7) != 0) {
            goto LABEL_43;
          }
          while (1)
          {
            uint64_t v17 = *v2;
            uint64_t v18 = *(void *)&a1[v17];
            unint64_t v19 = v18 + 1;
            if (v18 == -1 || v19 > *(void *)&a1[*v3]) {
              break;
            }
            int v20 = *(char *)(*(void *)&a1[*v5] + v18);
            *(void *)&a1[v17] = v19;
            if (v20 < 0)
            {
              unsigned int v21 = v15++;
              if (v21 <= 8) {
                continue;
              }
            }
            goto LABEL_40;
          }
          a1[*v4] = 1;
        }
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_43;
      }
LABEL_40:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v27 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v27;
}

void sub_1897BA348(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOGuidanceEventIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 104));
  unsigned int v2 = *(_DWORD *)(a1 + 156);
  if ((v2 & 0x800000) != 0) {
    return 1;
  }
  if ((v2 & 0x200000) != 0)
  {
    if (GEOSignGuidanceIsDirty(*(os_unfair_lock_s **)(a1 + 80))) {
      return 1;
    }
    unsigned int v2 = *(_DWORD *)(a1 + 156);
  }
  if ((v2 & 0x400000) != 0)
  {
    if (GEOSpokenGuidanceIsDirty(*(void *)(a1 + 88))) {
      return 1;
    }
    unsigned int v2 = *(_DWORD *)(a1 + 156);
  }
  if ((v2 & 0x80000) != 0)
  {
    if (GEOVisualLaneGuidanceIsDirty(*(os_unfair_lock_s **)(a1 + 48))) {
      return 1;
    }
    unsigned int v2 = *(_DWORD *)(a1 + 156);
  }
  if ((v2 & 0x10000) != 0)
  {
    if (GEOARGuidanceIsDirty(*(os_unfair_lock_s **)(a1 + 24))) {
      return 1;
    }
    unsigned int v2 = *(_DWORD *)(a1 + 156);
  }
  if ((v2 & 0x100000) != 0)
  {
    if (GEONavTrayGuidanceIsDirty(*(os_unfair_lock_s **)(a1 + 72))) {
      return 1;
    }
    unsigned int v2 = *(_DWORD *)(a1 + 156);
  }
  if ((v2 & 0x40000) == 0) {
    return (v2 >> 17) & 1;
  }
  return 1;
}

os_unfair_lock_s *GEOGuidanceEventIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOGuidanceEventIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 26);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_1897BACD4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897BB904(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOGuidanceImportanceModeReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    id v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        int v17 = v10 & 7;
        if (v16 || v17 == 4) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          if (v17 == 2)
          {
            if (!PBReaderPlaceMark()) {
              goto LABEL_49;
            }
            while (*(void *)&v3[*v4] < *(void *)&v3[*v5] && !v3[*v6])
            {
              char v19 = 0;
              unsigned int v20 = 0;
              uint64_t v21 = 0;
              while (1)
              {
                uint64_t v22 = *v4;
                uint64_t v23 = *(void *)&v3[v22];
                unint64_t v24 = v23 + 1;
                if (v23 == -1 || v24 > *(void *)&v3[*v5]) {
                  break;
                }
                char v25 = *(unsigned char *)(*(void *)&v3[*v7] + v23);
                *(void *)&v3[v22] = v24;
                v21 |= (unint64_t)(v25 & 0x7F) << v19;
                if (v25 < 0)
                {
                  v19 += 7;
                  BOOL v15 = v20++ >= 9;
                  if (!v15) {
                    continue;
                  }
                }
                goto LABEL_32;
              }
              v3[*v6] = 1;
LABEL_32:
              PBRepeatedInt32Add();
            }
            PBReaderRecallMark();
          }
          else
          {
            char v28 = 0;
            unsigned int v29 = 0;
            uint64_t v30 = 0;
            while (1)
            {
              uint64_t v31 = *v4;
              uint64_t v32 = *(void *)&v3[v31];
              unint64_t v33 = v32 + 1;
              if (v32 == -1 || v33 > *(void *)&v3[*v5]) {
                break;
              }
              char v34 = *(unsigned char *)(*(void *)&v3[*v7] + v32);
              *(void *)&v3[v31] = v33;
              v30 |= (unint64_t)(v34 & 0x7F) << v28;
              if (v34 < 0)
              {
                v28 += 7;
                BOOL v15 = v29++ >= 9;
                if (!v15) {
                  continue;
                }
              }
              goto LABEL_46;
            }
            v3[*v6] = 1;
LABEL_46:
            PBRepeatedInt32Add();
          }
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v26 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            BOOL v27 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v26;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_49;
          }
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v35 = v3[*v6] == 0;
  }
  else
  {
LABEL_49:
    BOOL v35 = 0;
  }
  objc_sync_exit(v3);

  return v35;
}

void sub_1897BC678(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOGuidanceImportanceModeReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOGuidanceImportanceModeReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1897BC6E0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOIncidentOnRouteInfoReadAllFrom(void *a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    id v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_29;
          }
          uint64_t v18 = objc_alloc_init(GEOIndexAndOffset);
          if (!GEOIndexAndOffsetReadAllFrom((uint64_t)v18, v3))
          {

            goto LABEL_29;
          }
          PBReaderRecallMark();
          objc_msgSend(a1, "addIndexAndOffset:", v18, 0, 0);
        }
        else
        {
          if (!a1[1])
          {
            id v19 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            unsigned int v20 = (void *)a1[1];
            a1[1] = v19;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_29;
          }
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v21 = v3[*v6] == 0;
  }
  else
  {
LABEL_29:
    BOOL v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_1897BD39C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOIncidentOnRouteInfoReadFrom(void *a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOIncidentOnRouteInfoReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1897BD400(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOIncidentOnRouteInfoIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  unsigned int v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    id v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOIndexAndOffsetIsValid(a1))
        {
LABEL_27:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_27;
      }
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

BOOL GEOIndexAndOffsetIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  unsigned int v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    id v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_39;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      if (v14 || (v8 & 7) == 4) {
        goto LABEL_39;
      }
      if ((v8 >> 3) == 2) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_41;
        }
        unsigned int v16 = 0;
        while (1)
        {
          uint64_t v17 = *v2;
          uint64_t v18 = *(void *)&a1[v17];
          unint64_t v19 = v18 + 1;
          if (v18 == -1 || v19 > *(void *)&a1[*v3]) {
            break;
          }
          int v20 = *(char *)(*(void *)&a1[*v5] + v18);
          *(void *)&a1[v17] = v19;
          if (v20 < 0)
          {
            BOOL v21 = v16++ > 8;
            if (!v21) {
              continue;
            }
          }
          goto LABEL_38;
        }
LABEL_36:
        a1[*v4] = 1;
        goto LABEL_38;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_41:
        BOOL v27 = 0;
        goto LABEL_40;
      }
LABEL_38:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_39;
      }
    }
    if ((v8 & 7) != 0) {
      goto LABEL_41;
    }
    unsigned int v22 = 0;
    while (1)
    {
      uint64_t v23 = *v2;
      uint64_t v24 = *(void *)&a1[v23];
      unint64_t v25 = v24 + 1;
      if (v24 == -1 || v25 > *(void *)&a1[*v3]) {
        goto LABEL_36;
      }
      int v26 = *(char *)(*(void *)&a1[*v5] + v24);
      *(void *)&a1[v23] = v25;
      if (v26 < 0)
      {
        BOOL v21 = v22++ > 8;
        if (!v21) {
          continue;
        }
      }
      goto LABEL_38;
    }
  }
LABEL_39:
  BOOL v27 = a1[*v4] == 0;
LABEL_40:
  PBReaderRecallMark();
  return v27;
}

BOOL GEOIndexAndOffsetReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    id v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      while (1)
      {
        if (v3[*v6]) {
          goto LABEL_49;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          goto LABEL_49;
        }
        if ((v10 >> 3) == 2) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          char v18 = 0;
          unsigned int v19 = 0;
          uint64_t v20 = 0;
          *(unsigned char *)(a1 + 24) |= 1u;
          while (1)
          {
            uint64_t v21 = *v4;
            uint64_t v22 = *(void *)&v3[v21];
            unint64_t v23 = v22 + 1;
            if (v22 == -1 || v23 > *(void *)&v3[*v5])
            {
              int v26 = &OBJC_IVAR___GEOIndexAndOffset__index;
              goto LABEL_41;
            }
            char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
            *(void *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0) {
              break;
            }
            v18 += 7;
            BOOL v25 = v19++ > 8;
            if (v25)
            {
              LODWORD(v20) = 0;
              int v26 = &OBJC_IVAR___GEOIndexAndOffset__index;
              goto LABEL_44;
            }
          }
          int v26 = &OBJC_IVAR___GEOIndexAndOffset__index;
LABEL_42:
          if (v3[*v6]) {
            LODWORD(v20) = 0;
          }
LABEL_44:
          *(_DWORD *)(a1 + *v26) = v20;
          goto LABEL_45;
        }
        if (!*(void *)(a1 + 8))
        {
          id v33 = objc_alloc_init(MEMORY[0x1E4F940B0]);
          char v34 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = v33;
        }
        if ((PBUnknownFieldAdd() & 1) == 0) {
          goto LABEL_50;
        }
LABEL_45:
        if (*(void *)&v3[*v4] >= *(void *)&v3[*v5]) {
          goto LABEL_49;
        }
      }
      char v27 = 0;
      unsigned int v28 = 0;
      uint64_t v20 = 0;
      *(unsigned char *)(a1 + 24) |= 2u;
      while (1)
      {
        uint64_t v29 = *v4;
        uint64_t v30 = *(void *)&v3[v29];
        unint64_t v31 = v30 + 1;
        if (v30 == -1 || v31 > *(void *)&v3[*v5]) {
          break;
        }
        char v32 = *(unsigned char *)(*(void *)&v3[*v7] + v30);
        *(void *)&v3[v29] = v31;
        v20 |= (unint64_t)(v32 & 0x7F) << v27;
        if ((v32 & 0x80) == 0)
        {
          int v26 = &OBJC_IVAR___GEOIndexAndOffset__offset;
          goto LABEL_42;
        }
        v27 += 7;
        BOOL v25 = v28++ > 8;
        if (v25)
        {
          LODWORD(v20) = 0;
          int v26 = &OBJC_IVAR___GEOIndexAndOffset__offset;
          goto LABEL_44;
        }
      }
      int v26 = &OBJC_IVAR___GEOIndexAndOffset__offset;
LABEL_41:
      v3[*v6] = 1;
      goto LABEL_42;
    }
LABEL_49:
    BOOL v35 = v3[*v6] == 0;
  }
  else
  {
LABEL_50:
    BOOL v35 = 0;
  }
  objc_sync_exit(v3);

  return v35;
}

void sub_1897BE728(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOIndexAndOffsetReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOIndexAndOffsetReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1897BE78C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897BED7C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOInstructionSetReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 96));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 92);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 88)];
  unsigned int v7 = v6;
  uint64_t v8 = 0;
  char v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  uint64_t v12 = 0;
  unsigned int v13 = *(unsigned __int16 *)(a1 + 104);
  unsigned int v14 = ((v13 >> 1) & 1)
      + ((v13 >> 6) & 1)
      + (unsigned __int16)(vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16((uint16x4_t)vdup_n_s16(v13), (uint16x4_t)0xFFFDFFF9FFF7FFF8), (int8x8_t)0x1000100010001))+ ((v13 >> 2) & 1)+ ((v13 >> 5) & 1)+ ((v13 >> 4) & 1));
  while (2)
  {
    uint64_t v15 = 1;
    uint64_t v16 = 1;
    uint64_t v17 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v14;
        goto LABEL_8;
      case -3:
        char v9 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v16 = v11;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v18 = v14 > 5;
        char v19 = v18 & ~(_BYTE)v12 | v10;
        unsigned __int8 v20 = v18 | v12;
        char v61 = v19;
        char v62 = v20 | v19;
        if ((v20 | v9)) {
          uint64_t v21 = 0;
        }
        else {
          uint64_t v21 = a3;
        }
        uint64_t v22 = (int *)MEMORY[0x1E4F940E8];
        char v63 = (v21 == 0) | v20;
        BOOL v64 = v20;
        unint64_t v23 = (int *)MEMORY[0x1E4F940C8];
        char v24 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v14;
LABEL_7:
        uint64_t v15 = v10;
LABEL_8:
        uint64_t v16 = v11;
        uint64_t v17 = v12;
LABEL_10:
        ++v8;
        uint64_t v10 = v15;
        uint64_t v11 = v16;
        uint64_t v12 = v17;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v22) >= *(void *)(v3 + *v7) || *(unsigned char *)(v3 + *v23)) {
      goto LABEL_119;
    }
    char v25 = 0;
    unsigned int v26 = 0;
    unint64_t v27 = 0;
    while (1)
    {
      uint64_t v28 = *v22;
      uint64_t v29 = *(void *)(v3 + v28);
      unint64_t v30 = v29 + 1;
      if (v29 == -1 || v30 > *(void *)(v3 + *v7)) {
        break;
      }
      char v31 = *(unsigned char *)(*(void *)(v3 + *v24) + v29);
      *(void *)(v3 + v28) = v30;
      v27 |= (unint64_t)(v31 & 0x7F) << v25;
      if ((v31 & 0x80) == 0) {
        goto LABEL_25;
      }
      v25 += 7;
      BOOL v32 = v26++ >= 9;
      if (v32)
      {
        unint64_t v27 = 0;
        int v33 = *(unsigned __int8 *)(v3 + *v23);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v23) = 1;
LABEL_25:
    int v33 = *(unsigned __int8 *)(v3 + *v23);
    if (*(unsigned char *)(v3 + *v23)) {
      unint64_t v27 = 0;
    }
LABEL_27:
    if (v33 || (v27 & 7) == 4)
    {
LABEL_119:
      int v60 = 1;
      goto LABEL_120;
    }
    unint64_t v35 = v27 >> 3;
    BOOL v36 = v64;
    if ((v63 & 1) == 0)
    {
      int v37 = v21;
      do
      {
        int v39 = *v37++;
        int v38 = v39;
        BOOL v36 = v39 != 0;
        if (v39) {
          BOOL v40 = v38 == v35;
        }
        else {
          BOOL v40 = 1;
        }
      }
      while (!v40);
    }
    switch((int)v35)
    {
      case 1:
        if (!v36) {
          goto LABEL_94;
        }
        if ((*(_WORD *)(a1 + 104) & 0x200) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_142;
          }
          unint64_t v41 = objc_alloc_init(GEOTransitSignInstruction);
          if (GEOTransitSignInstructionReadAllFrom((uint64_t)v41, (void *)v3, v11 & 1))
          {
            PBReaderRecallMark();
            uint64_t v42 = 80;
            goto LABEL_79;
          }
          goto LABEL_141;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_142;
        }
        __int16 v55 = *(_WORD *)(a1 + 104) << 6;
        goto LABEL_116;
      case 2:
        if (!v36) {
          goto LABEL_94;
        }
        if ((*(_WORD *)(a1 + 104) & 0x100) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_142;
          }
          __int16 v55 = *(_WORD *)(a1 + 104) << 7;
          goto LABEL_116;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_142;
        }
        unint64_t v41 = objc_alloc_init(GEOTransitListInstruction);
        if (!GEOTransitListInstructionReadAllFrom((uint64_t)v41, (void *)v3, v11 & 1)) {
          goto LABEL_141;
        }
        PBReaderRecallMark();
        uint64_t v42 = 72;
        goto LABEL_79;
      case 3:
        if (!v36) {
          goto LABEL_94;
        }
        if ((*(_WORD *)(a1 + 104) & 0x80) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_142;
          }
          __int16 v55 = *(_WORD *)(a1 + 104) << 8;
          goto LABEL_116;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_142;
        }
        unint64_t v41 = objc_alloc_init(GEOGenericInstruction);
        if (!GEOGenericInstructionReadAllFrom((uint64_t)v41, (void *)v3)) {
          goto LABEL_141;
        }
        PBReaderRecallMark();
        uint64_t v42 = 64;
        goto LABEL_79;
      case 4:
        if (!v36) {
          goto LABEL_94;
        }
        if ((*(_WORD *)(a1 + 104) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_142;
          }
          __int16 v55 = *(_WORD *)(a1 + 104) << 12;
          goto LABEL_116;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_142;
        }
        unint64_t v41 = objc_alloc_init(GEOFormattedString);
        if (!GEOFormattedStringReadAllFrom((uint64_t)v41, (void *)v3, v11 & 1)) {
          goto LABEL_141;
        }
        PBReaderRecallMark();
        uint64_t v42 = 32;
        goto LABEL_79;
      case 5:
        if (!v36) {
          goto LABEL_94;
        }
        if ((*(_WORD *)(a1 + 104) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_142;
          }
          __int16 v55 = *(_WORD *)(a1 + 104) << 13;
          goto LABEL_116;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_142;
        }
        unint64_t v41 = objc_alloc_init(GEOFormattedString);
        if (!GEOFormattedStringReadAllFrom((uint64_t)v41, (void *)v3, v11 & 1)) {
          goto LABEL_141;
        }
        PBReaderRecallMark();
        uint64_t v42 = 24;
        goto LABEL_79;
      case 6:
        if (!v36) {
          goto LABEL_94;
        }
        if ((*(_WORD *)(a1 + 104) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_142;
          }
          __int16 v55 = *(_WORD *)(a1 + 104) << 10;
          goto LABEL_116;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_142;
        }
        unint64_t v41 = objc_alloc_init(GEODrivingWalkingInstruction);
        if (!GEODrivingWalkingInstructionReadAllFrom((uint64_t)v41, (void *)v3, v11 & 1)) {
          goto LABEL_141;
        }
        PBReaderRecallMark();
        uint64_t v42 = 48;
        goto LABEL_79;
      case 7:
        if (!v36) {
          goto LABEL_94;
        }
        if ((*(_WORD *)(a1 + 104) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_142;
          }
          __int16 v55 = *(_WORD *)(a1 + 104) << 11;
          goto LABEL_116;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_142;
        }
        unint64_t v41 = objc_alloc_init(GEODrivingWalkingInstruction);
        if (!GEODrivingWalkingInstructionReadAllFrom((uint64_t)v41, (void *)v3, v11 & 1)) {
          goto LABEL_141;
        }
        PBReaderRecallMark();
        uint64_t v42 = 40;
        goto LABEL_79;
      case 8:
        if (!v36) {
          goto LABEL_94;
        }
        if ((*(_WORD *)(a1 + 104) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_142;
          }
          __int16 v55 = *(_WORD *)(a1 + 104) << 9;
LABEL_116:
          v8 += v55 >> 15;
LABEL_117:
          unint64_t v23 = (int *)MEMORY[0x1E4F940C8];
          unsigned int v7 = (int *)MEMORY[0x1E4F940E0];
          char v24 = (int *)MEMORY[0x1E4F940B8];
LABEL_118:
          if (!(v62 & 1 | (v8 != 0))) {
            goto LABEL_119;
          }
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_142;
        }
        unint64_t v41 = objc_alloc_init(GEODrivingWalkingSpokenInstruction);
        if (GEODrivingWalkingSpokenInstructionReadAllFrom((uint64_t)v41, (void *)v3, v11 & 1))
        {
          PBReaderRecallMark();
          uint64_t v42 = 56;
LABEL_79:
          unsigned int v43 = *(void **)(a1 + v42);
          *(void *)(a1 + v42) = v41;

          --v8;
          goto LABEL_117;
        }
LABEL_141:

LABEL_142:
        int v60 = 0;
        unint64_t v23 = (int *)MEMORY[0x1E4F940C8];
LABEL_120:
        if (v61) {
LABEL_121:
        }
          *(_WORD *)(a1 + 104) |= 2u;
        if (v64 || (v60 & 1) == 0)
        {
          *(_WORD *)(a1 + 104) |= 0x200u;
          *(_WORD *)(a1 + 104) |= 0x100u;
          *(_WORD *)(a1 + 104) |= 0x80u;
          *(_WORD *)(a1 + 104) |= 8u;
          *(_WORD *)(a1 + 104) |= 4u;
          *(_WORD *)(a1 + 104) |= 0x20u;
          *(_WORD *)(a1 + 104) |= 0x10u;
          *(_WORD *)(a1 + 104) |= 0x40u;
        }
        else if (v21)
        {
          while (1)
          {
            int v57 = *v21++;
            __int16 v56 = 512;
            switch(v57)
            {
              case 0:
                goto LABEL_135;
              case 1:
                goto LABEL_133;
              case 2:
                __int16 v56 = 256;
                goto LABEL_133;
              case 3:
                __int16 v56 = 128;
                goto LABEL_133;
              case 4:
                __int16 v56 = 8;
                goto LABEL_133;
              case 5:
                __int16 v56 = 4;
                goto LABEL_133;
              case 6:
                __int16 v56 = 32;
                goto LABEL_133;
              case 7:
                __int16 v56 = 16;
                goto LABEL_133;
              case 8:
                __int16 v56 = 64;
LABEL_133:
                *(_WORD *)(a1 + 104) |= v56;
                break;
              default:
                continue;
            }
          }
        }
LABEL_135:
        if (v60) {
          unint64_t v3 = *(unsigned char *)(v3 + *v23) == 0;
        }
        else {
          unint64_t v3 = 0;
        }
        if (v64)
        {
          BOOL v58 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      case 10:
        if ((v9 & 1) == 0) {
          goto LABEL_94;
        }
        char v47 = 0;
        unsigned int v48 = 0;
        uint64_t v49 = 0;
        *(_WORD *)(a1 + 104) |= 1u;
        while (2)
        {
          uint64_t v50 = *v22;
          uint64_t v51 = *(void *)(v3 + v50);
          unint64_t v52 = v51 + 1;
          if (v51 == -1 || v52 > *(void *)(v3 + *v7))
          {
            *(unsigned char *)(v3 + *v23) = 1;
          }
          else
          {
            char v53 = *(unsigned char *)(*(void *)(v3 + *v24) + v51);
            *(void *)(v3 + v50) = v52;
            v49 |= (unint64_t)(v53 & 0x7F) << v47;
            if (v53 < 0)
            {
              v47 += 7;
              BOOL v32 = v48++ >= 9;
              if (v32)
              {
                LODWORD(v49) = 0;
                goto LABEL_99;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v23)) {
          LODWORD(v49) = 0;
        }
LABEL_99:
        *(_DWORD *)(a1 + 100) = v49;
        goto LABEL_118;
      default:
        if ((v61 & 1) == 0 || (*(_WORD *)(a1 + 104) & 2) != 0)
        {
LABEL_94:
          char v54 = PBReaderSkipValueWithTag();
          char v24 = (int *)MEMORY[0x1E4F940B8];
          unsigned int v7 = (int *)MEMORY[0x1E4F940E0];
          unint64_t v23 = (int *)MEMORY[0x1E4F940C8];
          if ((v54 & 1) == 0)
          {
            int v60 = 0;
            goto LABEL_120;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v44 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            uint64_t v45 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v44;
          }
          int v46 = PBUnknownFieldAdd();
          unint64_t v23 = (int *)MEMORY[0x1E4F940C8];
          unsigned int v7 = (int *)MEMORY[0x1E4F940E0];
          char v24 = (int *)MEMORY[0x1E4F940B8];
          if (!v46)
          {
            int v60 = 0;
            goto LABEL_121;
          }
        }
        goto LABEL_118;
    }
  }
}

void sub_1897BF9A8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897BFB14(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897BFC80(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897BFFB4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897C011C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897C0288(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897C03F4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897C10CC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOInstructionSetCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  [*(id *)(a1 + 80) readAll:1];
  [*(id *)(a1 + 72) readAll:1];
  [*(id *)(a1 + 64) readAll:1];
  [*(id *)(a1 + 32) readAll:1];
  [*(id *)(a1 + 24) readAll:1];
  -[GEODrivingWalkingInstruction readAll:](*(void *)(a1 + 48), 1);
  -[GEODrivingWalkingInstruction readAll:](*(void *)(a1 + 40), 1);
  unsigned int v2 = *(void **)(a1 + 56);

  return [v2 readAll:1];
}

unint64_t GEOInstructionSetReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 92))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOInstructionSetReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 96));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 88) = [v8 position];
  *(_DWORD *)(a1 + 92) = [v8 length];
  if (a3) {
    char v9 = (int *)&GEOInstructionSetReadAllFrom_recursiveTag;
  }
  else {
    char v9 = (int *)&GEOInstructionSetReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOInstructionSetReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOInstructionSetCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 96));
  return Specified;
}

void sub_1897C1318(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOInstructionSetReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOInstructionSetReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1897C137C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOInstructionSetIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  unsigned int v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    id v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 == 2 && PBReaderPlaceMark() && GEOTransitSignInstructionIsValid(a1)) {
            goto LABEL_42;
          }
          goto LABEL_57;
        case 2u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOTransitListInstructionIsValid(a1)) {
            goto LABEL_57;
          }
          goto LABEL_42;
        case 3u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOGenericInstructionIsValid(a1)) {
            goto LABEL_57;
          }
          goto LABEL_42;
        case 4u:
        case 5u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOFormattedStringIsValid(a1)) {
            goto LABEL_57;
          }
          goto LABEL_42;
        case 6u:
        case 7u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEODrivingWalkingInstructionIsValid(a1)) {
            goto LABEL_57;
          }
          goto LABEL_42;
        case 8u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEODrivingWalkingSpokenInstructionIsValid(a1)) {
            goto LABEL_57;
          }
LABEL_42:
          PBReaderRecallMark();
          continue;
        case 0xAu:
          if ((v8 & 7) != 0) {
            goto LABEL_57;
          }
          unsigned int v17 = 0;
          break;
        default:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_57:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        uint64_t v18 = *v2;
        uint64_t v19 = *(void *)&a1[v18];
        unint64_t v20 = v19 + 1;
        if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
          break;
        }
        int v21 = *(char *)(*(void *)&a1[*v5] + v19);
        *(void *)&a1[v18] = v20;
        if (v21 < 0 && v17++ <= 8) {
          continue;
        }
        goto LABEL_43;
      }
      a1[*v4] = 1;
LABEL_43:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v23 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v23;
}

BOOL GEOTransitSignInstructionIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  unsigned int v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    id v5 = (int *)MEMORY[0x1E4F940B8];
    while (!a1[*v4])
    {
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 4u:
        case 5u:
        case 6u:
        case 7u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOFormattedStringIsValid(a1)) {
            goto LABEL_26;
          }
          PBReaderRecallMark();
          goto LABEL_24;
        default:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_26:
            PBReaderRecallMark();
            return 0;
          }
LABEL_24:
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_25;
          }
          break;
      }
    }
  }
LABEL_25:
  BOOL v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

BOOL GEOTransitListInstructionIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  unsigned int v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] >= *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
LABEL_31:
    BOOL v17 = a1[*v4] == 0;
    PBReaderRecallMark();
    return v17;
  }
  id v5 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (a1[*v4]) {
      goto LABEL_31;
    }
    char v6 = 0;
    unsigned int v7 = 0;
    unint64_t v8 = 0;
    while (1)
    {
      uint64_t v9 = *v2;
      uint64_t v10 = *(void *)&a1[v9];
      unint64_t v11 = v10 + 1;
      if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
        break;
      }
      char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
      *(void *)&a1[v9] = v11;
      v8 |= (unint64_t)(v12 & 0x7F) << v6;
      if ((v12 & 0x80) == 0) {
        goto LABEL_12;
      }
      v6 += 7;
      if (v7++ >= 9)
      {
        unint64_t v8 = 0;
        int v14 = a1[*v4];
        goto LABEL_14;
      }
    }
    a1[*v4] = 1;
LABEL_12:
    int v14 = a1[*v4];
    if (a1[*v4]) {
      unint64_t v8 = 0;
    }
LABEL_14:
    int v15 = v8 & 7;
    if (v14 || v15 == 4) {
      goto LABEL_31;
    }
    switch((v8 >> 3))
    {
      case 4u:
      case 5u:
      case 6u:
      case 7u:
      case 9u:
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOFormattedStringIsValid(a1)) {
          goto LABEL_30;
        }
        goto LABEL_22;
      case 0xAu:
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOTransitListTimeInstructionIsValid(a1)) {
          goto LABEL_30;
        }
LABEL_22:
        PBReaderRecallMark();
        goto LABEL_23;
      default:
        if (PBReaderSkipValueWithTag())
        {
LABEL_23:
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_31;
          }
          continue;
        }
LABEL_30:
        PBReaderRecallMark();
        return 0;
    }
  }
}

void sub_1897C1D80(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOInstructionSetIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 96));
  __int16 v2 = *(_WORD *)(a1 + 104);
  if ((v2 & 0x400) != 0) {
    return 1;
  }
  if ((*(_WORD *)(a1 + 104) & 0x200) != 0)
  {
    if (GEOTransitSignInstructionIsDirty(*(os_unfair_lock_s **)(a1 + 80))) {
      return 1;
    }
    __int16 v2 = *(_WORD *)(a1 + 104);
  }
  if ((v2 & 0x100) != 0)
  {
    if (GEOTransitListInstructionIsDirty(*(os_unfair_lock_s **)(a1 + 72))) {
      return 1;
    }
    __int16 v2 = *(_WORD *)(a1 + 104);
  }
  if ((v2 & 0x80) != 0) {
    return 1;
  }
  if ((v2 & 8) != 0)
  {
    if (GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(a1 + 32))) {
      return 1;
    }
    __int16 v2 = *(_WORD *)(a1 + 104);
  }
  if ((v2 & 4) != 0)
  {
    if (GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(a1 + 24))) {
      return 1;
    }
    __int16 v2 = *(_WORD *)(a1 + 104);
  }
  if ((v2 & 0x20) == 0) {
    goto LABEL_18;
  }
  if (GEODrivingWalkingInstructionIsDirty(*(os_unfair_lock_s **)(a1 + 48))) {
    return 1;
  }
  __int16 v2 = *(_WORD *)(a1 + 104);
LABEL_18:
  if ((v2 & 0x10) != 0)
  {
    if (GEODrivingWalkingInstructionIsDirty(*(os_unfair_lock_s **)(a1 + 40))) {
      return 1;
    }
    __int16 v2 = *(_WORD *)(a1 + 104);
  }
  if ((v2 & 0x40) == 0) {
    return 0;
  }
  uint64_t v4 = *(os_unfair_lock_s **)(a1 + 56);

  return (uint64_t)GEODrivingWalkingSpokenInstructionIsDirty(v4);
}

os_unfair_lock_s *GEOInstructionSetIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOInstructionSetIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 24);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_1897C2324(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897C2898(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id GEOJunctionElementDescription(unsigned int *a1)
{
  __int16 v2 = NSString;
  id v3 = _GEOJunctionElementDictionaryRepresentation(a1);
  uint64_t v4 = [v2 stringWithFormat:@"GEOJunctionElement<%p> %@", a1, v3];

  return v4;
}

id _GEOJunctionElementDictionaryRepresentation(unsigned int *a1)
{
  __int16 v2 = [MEMORY[0x1E4F1CA60] dictionary];
  char v3 = *((unsigned char *)a1 + 12);
  if ((v3 & 1) == 0)
  {
    if ((a1[3] & 2) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v5 = (int)a1[1];
    if (v5 >= 3)
    {
      objc_msgSend(NSString, "stringWithFormat:", @"(unknown: %i)", (int)a1[1]);
      char v6 = (__CFString *)objc_claimAutoreleasedReturnValue();
    }
    else
    {
      char v6 = off_1E53E02A8[v5];
    }
    [v2 setObject:v6 forKey:@"type"];

    if ((a1[3] & 4) == 0) {
      goto LABEL_14;
    }
    goto LABEL_10;
  }
  uint64_t v4 = [NSNumber numberWithInt:*a1];
  [v2 setObject:v4 forKey:@"angle"];

  char v3 = *((unsigned char *)a1 + 12);
  if ((v3 & 2) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v3 & 4) != 0)
  {
LABEL_10:
    uint64_t v7 = (int)a1[2];
    if (v7 >= 3)
    {
      objc_msgSend(NSString, "stringWithFormat:", @"(unknown: %i)", (int)a1[2]);
      unint64_t v8 = (__CFString *)objc_claimAutoreleasedReturnValue();
    }
    else
    {
      unint64_t v8 = off_1E53E02C0[v7];
    }
    [v2 setObject:v8 forKey:@"usage"];
  }
LABEL_14:

  return v2;
}

void _GEOJunctionElementFromDictionaryRepresentation(void *a1, uint64_t a2)
{
  id v10 = a1;
  char v3 = [v10 objectForKeyedSubscript:@"angle"];
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    *(unsigned char *)(a2 + 12) |= 1u;
    *(_DWORD *)a2 = [v3 intValue];
  }

  uint64_t v4 = [v10 objectForKeyedSubscript:@"type"];
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    *(unsigned char *)(a2 + 12) |= 2u;
    id v5 = v4;
    if ([v5 isEqualToString:@"NORMAL"])
    {
      int v6 = 0;
    }
    else if ([v5 isEqualToString:@"RAMP"])
    {
      int v6 = 1;
    }
    else if ([v5 isEqualToString:@"HIGHWAY"])
    {
      int v6 = 2;
    }
    else
    {
      int v6 = 0;
    }
  }
  else
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) == 0) {
      goto LABEL_15;
    }
    int v6 = [v4 intValue];
  }
  *(_DWORD *)(a2 + 4) = v6;
LABEL_15:

  uint64_t v7 = [v10 objectForKeyedSubscript:@"usage"];
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    *(unsigned char *)(a2 + 12) |= 4u;
    id v8 = v7;
    if ([v8 isEqualToString:@"NA"])
    {
      int v9 = 0;
    }
    else if ([v8 isEqualToString:@"ENTRY"])
    {
      int v9 = 1;
    }
    else if ([v8 isEqualToString:@"EXIT"])
    {
      int v9 = 2;
    }
    else
    {
      int v9 = 0;
    }
  }
  else
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) == 0) {
      goto LABEL_27;
    }
    int v9 = [v7 intValue];
  }
  *(_DWORD *)(a2 + 8) = v9;
LABEL_27:
}

uint64_t GEOJunctionElementReadFrom(uint64_t a1, uint64_t a2)
{
  return GEOJunctionElementReadAllFrom(a1, a2);
}

uint64_t GEOJunctionElementReadAllFrom(uint64_t a1, uint64_t a2)
{
  char v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  id v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v15 = v9++ >= 9;
        if (v15)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        break;
      }
      unint64_t v18 = v10 >> 3;
      if ((v10 >> 3) == 3)
      {
        char v26 = 0;
        unsigned int v27 = 0;
        uint64_t v28 = 0;
        *(unsigned char *)(a1 + 12) |= 4u;
        while (1)
        {
          uint64_t v29 = *v3;
          uint64_t v30 = *(void *)(a2 + v29);
          unint64_t v31 = v30 + 1;
          if (v30 == -1 || v31 > *(void *)(a2 + *v4)) {
            break;
          }
          char v32 = *(unsigned char *)(*(void *)(a2 + *v7) + v30);
          *(void *)(a2 + v29) = v31;
          v28 |= (unint64_t)(v32 & 0x7F) << v26;
          if ((v32 & 0x80) == 0) {
            goto LABEL_49;
          }
          v26 += 7;
          BOOL v15 = v27++ >= 9;
          if (v15)
          {
            LODWORD(v28) = 0;
            goto LABEL_51;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_49:
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v28) = 0;
        }
LABEL_51:
        *(_DWORD *)(a1 + 8) = v28;
      }
      else if (v18 == 2)
      {
        char v33 = 0;
        unsigned int v34 = 0;
        uint64_t v35 = 0;
        *(unsigned char *)(a1 + 12) |= 2u;
        while (1)
        {
          uint64_t v36 = *v3;
          uint64_t v37 = *(void *)(a2 + v36);
          unint64_t v38 = v37 + 1;
          if (v37 == -1 || v38 > *(void *)(a2 + *v4)) {
            break;
          }
          char v39 = *(unsigned char *)(*(void *)(a2 + *v7) + v37);
          *(void *)(a2 + v36) = v38;
          v35 |= (unint64_t)(v39 & 0x7F) << v33;
          if ((v39 & 0x80) == 0) {
            goto LABEL_53;
          }
          v33 += 7;
          BOOL v15 = v34++ >= 9;
          if (v15)
          {
            LODWORD(v35) = 0;
            goto LABEL_55;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_53:
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v35) = 0;
        }
LABEL_55:
        *(_DWORD *)(a1 + 4) = v35;
      }
      else if (v18 == 1)
      {
        char v19 = 0;
        unsigned int v20 = 0;
        uint64_t v21 = 0;
        *(unsigned char *)(a1 + 12) |= 1u;
        while (1)
        {
          uint64_t v22 = *v3;
          uint64_t v23 = *(void *)(a2 + v22);
          unint64_t v24 = v23 + 1;
          if (v23 == -1 || v24 > *(void *)(a2 + *v4)) {
            break;
          }
          char v25 = *(unsigned char *)(*(void *)(a2 + *v7) + v23);
          *(void *)(a2 + v22) = v24;
          v21 |= (unint64_t)(v25 & 0x7F) << v19;
          if ((v25 & 0x80) == 0) {
            goto LABEL_45;
          }
          v19 += 7;
          BOOL v15 = v20++ >= 9;
          if (v15)
          {
            LODWORD(v21) = 0;
            goto LABEL_47;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_45:
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v21) = 0;
        }
LABEL_47:
        *(_DWORD *)a1 = -(v21 & 1) ^ ((int)v21 >> 1);
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t GEOJunctionElementWriteTo(uint64_t result)
{
  uint64_t v1 = result;
  char v2 = *(unsigned char *)(result + 12);
  if ((v2 & 1) == 0)
  {
    if ((*(unsigned char *)(result + 12) & 2) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t result = PBDataWriterWriteInt32Field();
    if ((*(unsigned char *)(v1 + 12) & 4) == 0) {
      return result;
    }
    goto LABEL_7;
  }
  uint64_t result = PBDataWriterWriteSint32Field();
  char v2 = *(unsigned char *)(v1 + 12);
  if ((v2 & 2) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v2 & 4) == 0) {
    return result;
  }
LABEL_7:

  return PBDataWriterWriteInt32Field();
}

BOOL GEOJunctionElementEquals(void *a1, void *a2)
{
  return *a1 == *a2 && a1[1] == a2[1];
}

uint64_t GEOJunctionElementHash()
{
  return PBHashBytes();
}

uint64_t GEOJunctionElementIsValid(void *a1)
{
  v4[2] = [a1 position];
  v4[3] = [a1 length];
  v4[0] = 0;
  v4[1] = 0;
  uint64_t AllFrom = GEOJunctionElementReadAllFrom((uint64_t)v4, (uint64_t)a1);
  PBReaderRecallMark();
  return AllFrom;
}

BOOL GEOJunctionInfoReadAllFrom(uint64_t a1, void *a2)
{
  char v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    id v5 = (int *)MEMORY[0x1E4F940E0];
    int v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        switch((v10 >> 3))
        {
          case 1u:
            if (!PBReaderPlaceMark()) {
              goto LABEL_63;
            }
            -[GEOJunctionInfo _reserveJunctionElements:](a1, 1uLL);
            if ((GEOJunctionElementReadAllFrom(*(void *)(a1 + 16) + 16 * *(void *)(a1 + 24), (uint64_t)v3) & 1) == 0) {
              goto LABEL_63;
            }
            PBReaderRecallMark();
            ++*(void *)(a1 + 24);
            continue;
          case 2u:
            char v20 = 0;
            unsigned int v21 = 0;
            uint64_t v22 = 0;
            *(unsigned char *)(a1 + 52) |= 2u;
            while (1)
            {
              uint64_t v23 = *v4;
              uint64_t v24 = *(void *)&v3[v23];
              unint64_t v25 = v24 + 1;
              if (v24 == -1 || v25 > *(void *)&v3[*v5]) {
                break;
              }
              char v26 = *(unsigned char *)(*(void *)&v3[*v7] + v24);
              *(void *)&v3[v23] = v25;
              v22 |= (unint64_t)(v26 & 0x7F) << v20;
              if ((v26 & 0x80) == 0) {
                goto LABEL_49;
              }
              v20 += 7;
              BOOL v15 = v21++ >= 9;
              if (v15)
              {
                LODWORD(v22) = 0;
                goto LABEL_51;
              }
            }
            v3[*v6] = 1;
LABEL_49:
            if (v3[*v6]) {
              LODWORD(v22) = 0;
            }
LABEL_51:
            uint64_t v39 = 44;
            goto LABEL_60;
          case 3u:
            char v27 = 0;
            unsigned int v28 = 0;
            uint64_t v22 = 0;
            *(unsigned char *)(a1 + 52) |= 4u;
            while (2)
            {
              uint64_t v29 = *v4;
              uint64_t v30 = *(void *)&v3[v29];
              unint64_t v31 = v30 + 1;
              if (v30 == -1 || v31 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v32 = *(unsigned char *)(*(void *)&v3[*v7] + v30);
                *(void *)&v3[v29] = v31;
                v22 |= (unint64_t)(v32 & 0x7F) << v27;
                if (v32 < 0)
                {
                  v27 += 7;
                  BOOL v15 = v28++ >= 9;
                  if (v15)
                  {
                    LODWORD(v22) = 0;
                    goto LABEL_55;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              LODWORD(v22) = 0;
            }
LABEL_55:
            uint64_t v39 = 48;
            goto LABEL_60;
          case 4u:
            char v33 = 0;
            unsigned int v34 = 0;
            uint64_t v22 = 0;
            *(unsigned char *)(a1 + 52) |= 1u;
            break;
          default:
            if (!*(void *)(a1 + 8))
            {
              id v18 = objc_alloc_init(MEMORY[0x1E4F940B0]);
              char v19 = *(void **)(a1 + 8);
              *(void *)(a1 + 8) = v18;
            }
            if (!PBUnknownFieldAdd()) {
              goto LABEL_63;
            }
            continue;
        }
        while (1)
        {
          uint64_t v35 = *v4;
          uint64_t v36 = *(void *)&v3[v35];
          unint64_t v37 = v36 + 1;
          if (v36 == -1 || v37 > *(void *)&v3[*v5]) {
            break;
          }
          char v38 = *(unsigned char *)(*(void *)&v3[*v7] + v36);
          *(void *)&v3[v35] = v37;
          v22 |= (unint64_t)(v38 & 0x7F) << v33;
          if ((v38 & 0x80) == 0) {
            goto LABEL_57;
          }
          v33 += 7;
          BOOL v15 = v34++ >= 9;
          if (v15)
          {
            LODWORD(v22) = 0;
            goto LABEL_59;
          }
        }
        v3[*v6] = 1;
LABEL_57:
        if (v3[*v6]) {
          LODWORD(v22) = 0;
        }
LABEL_59:
        uint64_t v39 = 40;
LABEL_60:
        *(_DWORD *)(a1 + v39) = v22;
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v40 = v3[*v6] == 0;
  }
  else
  {
LABEL_63:
    BOOL v40 = 0;
  }
  objc_sync_exit(v3);

  return v40;
}

void sub_1897C6098(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOJunctionInfoReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOJunctionInfoReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1897C610C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOJunctionInfoIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  char v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    id v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOJunctionElementIsValid(a1)) {
            goto LABEL_53;
          }
          PBReaderRecallMark();
          continue;
        case 2u:
          if ((v8 & 7) != 0) {
            goto LABEL_53;
          }
          unsigned int v17 = 0;
          while (1)
          {
            uint64_t v18 = *v2;
            uint64_t v19 = *(void *)&a1[v18];
            unint64_t v20 = v19 + 1;
            if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
              goto LABEL_49;
            }
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if (v21 < 0)
            {
              BOOL v22 = v17++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_50;
          }
        case 3u:
          if ((v8 & 7) != 0) {
            goto LABEL_53;
          }
          unsigned int v23 = 0;
          while (1)
          {
            uint64_t v24 = *v2;
            uint64_t v25 = *(void *)&a1[v24];
            unint64_t v26 = v25 + 1;
            if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
              goto LABEL_49;
            }
            int v27 = *(char *)(*(void *)&a1[*v5] + v25);
            *(void *)&a1[v24] = v26;
            if (v27 < 0)
            {
              BOOL v22 = v23++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_50;
          }
        case 4u:
          if ((v8 & 7) != 0) {
            goto LABEL_53;
          }
          unsigned int v28 = 0;
          break;
        default:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_53:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        uint64_t v29 = *v2;
        uint64_t v30 = *(void *)&a1[v29];
        unint64_t v31 = v30 + 1;
        if (v30 == -1 || v31 > *(void *)&a1[*v3]) {
          break;
        }
        int v32 = *(char *)(*(void *)&a1[*v5] + v30);
        *(void *)&a1[v29] = v31;
        if (v32 < 0)
        {
          BOOL v22 = v28++ > 8;
          if (!v22) {
            continue;
          }
        }
        goto LABEL_50;
      }
LABEL_49:
      a1[*v4] = 1;
LABEL_50:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v33 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v33;
}

BOOL GEOJunctionViewReadAllFrom(void *a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    id v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          uint64_t v18 = PBReaderReadData();
          if (v18) {
            [a1 addImageId:v18];
          }
        }
        else
        {
          if (!a1[1])
          {
            id v19 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            unint64_t v20 = (void *)a1[1];
            a1[1] = v19;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_28;
          }
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v21 = v3[*v6] == 0;
  }
  else
  {
LABEL_28:
    BOOL v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_1897C73F0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOJunctionViewReadFrom(void *a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOJunctionViewReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1897C7454(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897C7BD8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLPRInfoReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 68);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 64)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  unsigned int v11 = (vaddv_s16((int16x4_t)(*(void *)&vshl_u16((uint16x4_t)(*(void *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 80)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFAFFFCFFFDFFFBLL) & 0xFF01FF01FF01FF01))+ ((*(unsigned char *)(a1 + 80) & 4) != 0));
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v9])
    {
      case -4:
        ++v11;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_9;
      case 0:
        BOOL v14 = v11 > 2;
        char v15 = v14 & ~(_BYTE)v10 | v7;
        unsigned __int8 v16 = v14 | v10;
        char v65 = v15;
        char v66 = v16 | v15;
        if ((v16 | v8)) {
          unsigned int v17 = 0;
        }
        else {
          unsigned int v17 = a3;
        }
        char v67 = (v17 == 0) | v16;
        BOOL v68 = v16;
        uint64_t v18 = (int *)MEMORY[0x1E4F940E8];
        id v19 = (int *)MEMORY[0x1E4F940C8];
        unint64_t v20 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v11;
LABEL_7:
        uint64_t v12 = v7;
LABEL_8:
        uint64_t v13 = v10;
LABEL_9:
        ++v9;
        uint64_t v7 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v18) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v19)) {
      goto LABEL_94;
    }
    char v21 = 0;
    unsigned int v22 = 0;
    unint64_t v23 = 0;
    while (1)
    {
      uint64_t v24 = *v18;
      uint64_t v25 = *(void *)(v3 + v24);
      unint64_t v26 = v25 + 1;
      if (v25 == -1 || v26 > *(void *)(v3 + *v6)) {
        break;
      }
      char v27 = *(unsigned char *)(*(void *)(v3 + *v20) + v25);
      *(void *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0) {
        goto LABEL_24;
      }
      v21 += 7;
      BOOL v28 = v22++ >= 9;
      if (v28)
      {
        unint64_t v23 = 0;
        int v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_26;
      }
    }
    *(unsigned char *)(v3 + *v19) = 1;
LABEL_24:
    int v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(unsigned char *)(v3 + *v19)) {
      unint64_t v23 = 0;
    }
LABEL_26:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_94:
      int v63 = 1;
      goto LABEL_95;
    }
    unint64_t v31 = v23 >> 3;
    BOOL v32 = v68;
    if ((v67 & 1) == 0)
    {
      BOOL v33 = v17;
      do
      {
        int v35 = *v33++;
        int v34 = v35;
        BOOL v32 = v35 != 0;
        if (v35) {
          BOOL v36 = v34 == v31;
        }
        else {
          BOOL v36 = 1;
        }
      }
      while (!v36);
    }
    switch((int)v31)
    {
      case 1:
        if (!v32) {
          goto LABEL_73;
        }
        if ((*(unsigned char *)(a1 + 80) & 8) == 0)
        {
          uint64_t v37 = PBReaderReadString();
          uint64_t v38 = 24;
          goto LABEL_56;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_112;
        }
        char v58 = 16 * *(unsigned char *)(a1 + 80);
        goto LABEL_91;
      case 2:
        if (!v32) {
          goto LABEL_73;
        }
        if ((*(unsigned char *)(a1 + 80) & 0x20) == 0)
        {
          uint64_t v37 = PBReaderReadString();
          uint64_t v38 = 48;
          goto LABEL_56;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_112;
        }
        char v58 = 4 * *(unsigned char *)(a1 + 80);
        goto LABEL_91;
      case 3:
        if (!v32) {
          goto LABEL_73;
        }
        if ((*(unsigned char *)(a1 + 80) & 0x10) == 0)
        {
          uint64_t v37 = PBReaderReadString();
          uint64_t v38 = 32;
          goto LABEL_56;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_112;
        }
        char v58 = 8 * *(unsigned char *)(a1 + 80);
        goto LABEL_91;
      case 4:
        if (!v32) {
          goto LABEL_73;
        }
        if ((*(unsigned char *)(a1 + 80) & 0x40) == 0)
        {
          uint64_t v37 = PBReaderReadData();
          uint64_t v38 = 56;
LABEL_56:
          uint64_t v42 = *(void **)(a1 + v38);
          *(void *)(a1 + v38) = v37;

          --v9;
LABEL_92:
          id v19 = (int *)MEMORY[0x1E4F940C8];
LABEL_93:
          if (!(v66 & 1 | (v9 != 0))) {
            goto LABEL_94;
          }
          continue;
        }
        if (PBReaderSkipValueWithTag())
        {
          char v58 = 2 * *(unsigned char *)(a1 + 80);
LABEL_91:
          v9 += v58 >> 7;
          goto LABEL_92;
        }
LABEL_112:
        int v63 = 0;
        id v19 = (int *)MEMORY[0x1E4F940C8];
LABEL_95:
        BOOL v64 = &OBJC_IVAR___GEOActiveTileGroup__textureChecksums;
        if (v65) {
LABEL_96:
        }
          *(unsigned char *)(a1 + v64[551]) |= 4u;
        if (v68 || (v63 & 1) == 0)
        {
          *(unsigned char *)(a1 + v64[551]) |= 8u;
          *(unsigned char *)(a1 + v64[551]) |= 0x20u;
          *(unsigned char *)(a1 + v64[551]) |= 0x10u;
          *(unsigned char *)(a1 + v64[551]) |= 0x40u;
        }
        else if (v17)
        {
          while (1)
          {
            int v60 = *v17++;
            char v59 = 8;
            switch(v60)
            {
              case 0:
                goto LABEL_106;
              case 1:
                goto LABEL_104;
              case 2:
                char v59 = 32;
                goto LABEL_104;
              case 3:
                char v59 = 16;
                goto LABEL_104;
              case 4:
                char v59 = 64;
LABEL_104:
                *(unsigned char *)(a1 + v64[551]) |= v59;
                break;
              default:
                continue;
            }
          }
        }
LABEL_106:
        if (v63) {
          unint64_t v3 = *(unsigned char *)(v3 + *v19) == 0;
        }
        else {
          unint64_t v3 = 0;
        }
        if (v68)
        {
          char v61 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      case 5:
        if ((v8 & 1) == 0) {
          goto LABEL_73;
        }
        char v43 = 0;
        unsigned int v44 = 0;
        uint64_t v45 = 0;
        *(unsigned char *)(a1 + 80) |= 1u;
        while (2)
        {
          uint64_t v46 = *v18;
          uint64_t v47 = *(void *)(v3 + v46);
          unint64_t v48 = v47 + 1;
          if (v47 == -1 || v48 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v19) = 1;
          }
          else
          {
            char v49 = *(unsigned char *)(*(void *)(v3 + *v20) + v47);
            *(void *)(v3 + v46) = v48;
            v45 |= (unint64_t)(v49 & 0x7F) << v43;
            if (v49 < 0)
            {
              v43 += 7;
              BOOL v28 = v44++ >= 9;
              if (v28)
              {
                uint64_t v45 = 0;
                goto LABEL_78;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v19)) {
          uint64_t v45 = 0;
        }
LABEL_78:
        *(void *)(a1 + 40) = v45;
        goto LABEL_93;
      case 6:
        if ((v8 & 1) == 0) {
          goto LABEL_73;
        }
        char v50 = 0;
        unsigned int v51 = 0;
        uint64_t v52 = 0;
        *(unsigned char *)(a1 + 80) |= 2u;
        while (2)
        {
          uint64_t v53 = *v18;
          uint64_t v54 = *(void *)(v3 + v53);
          unint64_t v55 = v54 + 1;
          if (v54 == -1 || v55 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v19) = 1;
          }
          else
          {
            char v56 = *(unsigned char *)(*(void *)(v3 + *v20) + v54);
            *(void *)(v3 + v53) = v55;
            v52 |= (unint64_t)(v56 & 0x7F) << v50;
            if (v56 < 0)
            {
              v50 += 7;
              BOOL v28 = v51++ >= 9;
              if (v28)
              {
                LODWORD(v52) = 0;
                goto LABEL_82;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v19)) {
          LODWORD(v52) = 0;
        }
LABEL_82:
        *(_DWORD *)(a1 + 76) = v52;
        goto LABEL_93;
      default:
        if ((v65 & 1) == 0 || (*(unsigned char *)(a1 + 80) & 4) != 0)
        {
LABEL_73:
          char v57 = PBReaderSkipValueWithTag();
          id v19 = (int *)MEMORY[0x1E4F940C8];
          if ((v57 & 1) == 0)
          {
            int v63 = 0;
            goto LABEL_95;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v39 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            BOOL v40 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v39;
          }
          int v41 = PBUnknownFieldAdd();
          id v19 = (int *)MEMORY[0x1E4F940C8];
          if (!v41)
          {
            int v63 = 0;
            BOOL v64 = &OBJC_IVAR___GEOActiveTileGroup__textureChecksums;
            goto LABEL_96;
          }
        }
        goto LABEL_93;
    }
  }
}

void sub_1897C84FC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897C866C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897C87DC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897C9148(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLPRInfoReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 68))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOLPRInfoReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 72));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 64) = [v8 position];
  *(_DWORD *)(a1 + 68) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOLPRInfoReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOLPRInfoReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOLPRInfoReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
  return Specified;
}

void sub_1897C92D8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLPRInfoReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOLPRInfoReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1897C933C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLPRInfoIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  char v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    id v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 != 2) {
            goto LABEL_48;
          }
          goto LABEL_26;
        case 2u:
          if (v15 == 2) {
            goto LABEL_26;
          }
          goto LABEL_48;
        case 3u:
          if (v15 == 2) {
            goto LABEL_26;
          }
          goto LABEL_48;
        case 4u:
          if (v15 == 2) {
            goto LABEL_26;
          }
          goto LABEL_48;
        case 5u:
          if ((v8 & 7) != 0) {
            goto LABEL_48;
          }
          unsigned int v17 = 0;
          while (1)
          {
            uint64_t v18 = *v2;
            uint64_t v19 = *(void *)&a1[v18];
            unint64_t v20 = v19 + 1;
            if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
              goto LABEL_44;
            }
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if (v21 < 0)
            {
              BOOL v22 = v17++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_45;
          }
        case 6u:
          if ((v8 & 7) != 0) {
            goto LABEL_48;
          }
          unsigned int v23 = 0;
          break;
        default:
LABEL_26:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_48:
          BOOL v28 = 0;
          goto LABEL_47;
      }
      while (1)
      {
        uint64_t v24 = *v2;
        uint64_t v25 = *(void *)&a1[v24];
        unint64_t v26 = v25 + 1;
        if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
          break;
        }
        int v27 = *(char *)(*(void *)&a1[*v5] + v25);
        *(void *)&a1[v24] = v26;
        if (v27 < 0)
        {
          BOOL v22 = v23++ > 8;
          if (!v22) {
            continue;
          }
        }
        goto LABEL_45;
      }
LABEL_44:
      a1[*v4] = 1;
LABEL_45:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v28 = a1[*v4] == 0;
LABEL_47:
  PBReaderRecallMark();
  return v28;
}

void sub_1897C982C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLPRInfoIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  BOOL v2 = *(unsigned __int8 *)(a1 + 80) > 7u;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
  return v2;
}

void sub_1897C9C00(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897CA000(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLabelActionReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    id v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      while (1)
      {
        if (v3[*v6]) {
          goto LABEL_49;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          goto LABEL_49;
        }
        if ((v10 >> 3) == 2) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          char v18 = 0;
          unsigned int v19 = 0;
          uint64_t v20 = 0;
          *(unsigned char *)(a1 + 24) |= 2u;
          while (1)
          {
            uint64_t v21 = *v4;
            uint64_t v22 = *(void *)&v3[v21];
            unint64_t v23 = v22 + 1;
            if (v22 == -1 || v23 > *(void *)&v3[*v5])
            {
              unint64_t v26 = &OBJC_IVAR___GEOLabelAction__detailTextAction;
              goto LABEL_41;
            }
            char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
            *(void *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0) {
              break;
            }
            v18 += 7;
            BOOL v25 = v19++ > 8;
            if (v25)
            {
              LODWORD(v20) = 0;
              unint64_t v26 = &OBJC_IVAR___GEOLabelAction__detailTextAction;
              goto LABEL_44;
            }
          }
          unint64_t v26 = &OBJC_IVAR___GEOLabelAction__detailTextAction;
LABEL_42:
          if (v3[*v6]) {
            LODWORD(v20) = 0;
          }
LABEL_44:
          *(_DWORD *)(a1 + *v26) = v20;
          goto LABEL_45;
        }
        if (!*(void *)(a1 + 8))
        {
          id v33 = objc_alloc_init(MEMORY[0x1E4F940B0]);
          int v34 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = v33;
        }
        if ((PBUnknownFieldAdd() & 1) == 0) {
          goto LABEL_50;
        }
LABEL_45:
        if (*(void *)&v3[*v4] >= *(void *)&v3[*v5]) {
          goto LABEL_49;
        }
      }
      char v27 = 0;
      unsigned int v28 = 0;
      uint64_t v20 = 0;
      *(unsigned char *)(a1 + 24) |= 1u;
      while (1)
      {
        uint64_t v29 = *v4;
        uint64_t v30 = *(void *)&v3[v29];
        unint64_t v31 = v30 + 1;
        if (v30 == -1 || v31 > *(void *)&v3[*v5]) {
          break;
        }
        char v32 = *(unsigned char *)(*(void *)&v3[*v7] + v30);
        *(void *)&v3[v29] = v31;
        v20 |= (unint64_t)(v32 & 0x7F) << v27;
        if ((v32 & 0x80) == 0)
        {
          unint64_t v26 = &OBJC_IVAR___GEOLabelAction__artworkAction;
          goto LABEL_42;
        }
        v27 += 7;
        BOOL v25 = v28++ > 8;
        if (v25)
        {
          LODWORD(v20) = 0;
          unint64_t v26 = &OBJC_IVAR___GEOLabelAction__artworkAction;
          goto LABEL_44;
        }
      }
      unint64_t v26 = &OBJC_IVAR___GEOLabelAction__artworkAction;
LABEL_41:
      v3[*v6] = 1;
      goto LABEL_42;
    }
LABEL_49:
    BOOL v35 = v3[*v6] == 0;
  }
  else
  {
LABEL_50:
    BOOL v35 = 0;
  }
  objc_sync_exit(v3);

  return v35;
}

void sub_1897CADA8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLabelActionReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOLabelActionReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1897CAE0C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLabelActionIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    id v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_39;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      if (v14 || (v8 & 7) == 4) {
        goto LABEL_39;
      }
      if ((v8 >> 3) == 2) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_41;
        }
        unsigned int v16 = 0;
        while (1)
        {
          uint64_t v17 = *v2;
          uint64_t v18 = *(void *)&a1[v17];
          unint64_t v19 = v18 + 1;
          if (v18 == -1 || v19 > *(void *)&a1[*v3]) {
            break;
          }
          int v20 = *(char *)(*(void *)&a1[*v5] + v18);
          *(void *)&a1[v17] = v19;
          if (v20 < 0)
          {
            BOOL v21 = v16++ > 8;
            if (!v21) {
              continue;
            }
          }
          goto LABEL_38;
        }
LABEL_36:
        a1[*v4] = 1;
        goto LABEL_38;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_41:
        BOOL v27 = 0;
        goto LABEL_40;
      }
LABEL_38:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_39;
      }
    }
    if ((v8 & 7) != 0) {
      goto LABEL_41;
    }
    unsigned int v22 = 0;
    while (1)
    {
      uint64_t v23 = *v2;
      uint64_t v24 = *(void *)&a1[v23];
      unint64_t v25 = v24 + 1;
      if (v24 == -1 || v25 > *(void *)&a1[*v3]) {
        goto LABEL_36;
      }
      int v26 = *(char *)(*(void *)&a1[*v5] + v24);
      *(void *)&a1[v23] = v25;
      if (v26 < 0)
      {
        BOOL v21 = v22++ > 8;
        if (!v21) {
          continue;
        }
      }
      goto LABEL_38;
    }
  }
LABEL_39:
  BOOL v27 = a1[*v4] == 0;
LABEL_40:
  PBReaderRecallMark();
  return v27;
}

void sub_1897CB634(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLabelInfoReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 60);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 56)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  unsigned int v12 = (vaddv_s16((int16x4_t)(*(void *)&vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int8 *)(a1 + 68)), (uint16x4_t)0xFFFDFFFEFFFCFFFFLL) & 0xFF01FF01FF01FF01))+ (*(unsigned char *)(a1 + 68) & 1));
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 > 2;
        char v17 = v16 & ~(_BYTE)v11 | v9;
        unsigned __int8 v18 = v16 | v11;
        char v53 = v17;
        char v54 = v18 | v17;
        if ((v18 | v8)) {
          unint64_t v19 = 0;
        }
        else {
          unint64_t v19 = a3;
        }
        char v55 = (v19 == 0) | v18;
        BOOL v56 = v18;
        int v20 = (int *)MEMORY[0x1E4F940E8];
        BOOL v21 = (int *)MEMORY[0x1E4F940C8];
        unsigned int v22 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v9;
LABEL_8:
        uint64_t v14 = v10;
        uint64_t v15 = v11;
LABEL_10:
        ++v7;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v21)) {
      goto LABEL_79;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      if (v24++ >= 9)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_25:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_79:
      int v51 = 1;
      goto LABEL_80;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v56;
    if ((v55 & 1) == 0)
    {
      BOOL v35 = v19;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    switch((int)v33)
    {
      case 1:
        if (!v34) {
          goto LABEL_66;
        }
        if ((*(unsigned char *)(a1 + 68) & 0x10) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_97;
          }
          id v39 = objc_alloc_init(GEOFormattedString);
          if (GEOFormattedStringReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1))
          {
            PBReaderRecallMark();
            uint64_t v40 = 48;
            goto LABEL_65;
          }
          goto LABEL_96;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_97;
        }
        char v46 = 8 * *(unsigned char *)(a1 + 68);
        goto LABEL_76;
      case 2:
        if (!v34) {
          goto LABEL_66;
        }
        if ((*(unsigned char *)(a1 + 68) & 2) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_97;
          }
          char v46 = *(unsigned char *)(a1 + 68) << 6;
          goto LABEL_76;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_97;
        }
        id v39 = objc_alloc_init(GEOFormattedString);
        if (!GEOFormattedStringReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1)) {
          goto LABEL_96;
        }
        PBReaderRecallMark();
        uint64_t v40 = 24;
        goto LABEL_65;
      case 3:
        if (!v34) {
          goto LABEL_66;
        }
        if ((*(unsigned char *)(a1 + 68) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_97;
          }
          char v46 = 32 * *(unsigned char *)(a1 + 68);
          goto LABEL_76;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_97;
        }
        id v39 = objc_alloc_init(GEOPBTransitArtwork);
        if (!GEOPBTransitArtworkReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1)) {
          goto LABEL_96;
        }
        PBReaderRecallMark();
        uint64_t v40 = 32;
        goto LABEL_65;
      case 4:
        if (!v34) {
          goto LABEL_66;
        }
        if ((*(unsigned char *)(a1 + 68) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_97;
          }
          char v46 = 16 * *(unsigned char *)(a1 + 68);
LABEL_76:
          v7 += v46 >> 7;
LABEL_77:
          BOOL v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_78:
          if (!(v54 & 1 | (v7 != 0))) {
            goto LABEL_79;
          }
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_97;
        }
        id v39 = objc_alloc_init(GEOStyleAttributes);
        if (GEOStyleAttributesReadAllFrom((uint64_t)v39, (void *)v3))
        {
          PBReaderRecallMark();
          uint64_t v40 = 40;
LABEL_65:
          unsigned int v44 = *(void **)(a1 + v40);
          *(void *)(a1 + v40) = v39;

          --v7;
          goto LABEL_77;
        }
LABEL_96:

LABEL_97:
        int v51 = 0;
        BOOL v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_80:
        uint64_t v52 = &OBJC_IVAR___GEOActiveTileGroup__textureChecksums;
        if (v53) {
LABEL_81:
        }
          *(unsigned char *)(a1 + v52[566]) |= 1u;
        if (v56 || (v51 & 1) == 0)
        {
          *(unsigned char *)(a1 + v52[566]) |= 0x10u;
          *(unsigned char *)(a1 + v52[566]) |= 2u;
          *(unsigned char *)(a1 + v52[566]) |= 4u;
          *(unsigned char *)(a1 + v52[566]) |= 8u;
        }
        else if (v19)
        {
          while (1)
          {
            int v47 = *v19++;
            char v48 = 16;
            switch(v47)
            {
              case 0:
                goto LABEL_90;
              case 1:
                goto LABEL_89;
              case 2:
                char v48 = 2;
                goto LABEL_89;
              case 3:
                char v48 = 4;
                goto LABEL_89;
              case 4:
                char v48 = 8;
LABEL_89:
                *(unsigned char *)(a1 + v52[566]) |= v48;
                break;
              default:
                continue;
            }
          }
        }
LABEL_90:
        if (v51) {
          unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
        }
        else {
          unint64_t v3 = 0;
        }
        if (v56)
        {
          char v49 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      default:
        if (v53 & 1) == 0 || (*(unsigned char *)(a1 + 68))
        {
LABEL_66:
          char v45 = PBReaderSkipValueWithTag();
          BOOL v21 = (int *)MEMORY[0x1E4F940C8];
          if ((v45 & 1) == 0)
          {
            int v51 = 0;
            goto LABEL_80;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v41 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            uint64_t v42 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v41;
          }
          int v43 = PBUnknownFieldAdd();
          BOOL v21 = (int *)MEMORY[0x1E4F940C8];
          if (!v43)
          {
            int v51 = 0;
            uint64_t v52 = &OBJC_IVAR___GEOActiveTileGroup__textureChecksums;
            goto LABEL_81;
          }
        }
        goto LABEL_78;
    }
  }
}

void sub_1897CBEC8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897CC030(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897CC19C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897CC96C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOLabelInfoCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  [*(id *)(a1 + 48) readAll:1];
  [*(id *)(a1 + 24) readAll:1];
  [*(id *)(a1 + 32) readAll:1];
  BOOL v2 = *(void **)(a1 + 40);

  return [v2 readAll:1];
}

unint64_t GEOLabelInfoReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 60))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOLabelInfoReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = [v8 position];
  *(_DWORD *)(a1 + 60) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOLabelInfoReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOLabelInfoReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOLabelInfoReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOLabelInfoCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_1897CCB78(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLabelInfoReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOLabelInfoReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1897CCBDC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLabelInfoIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    id v5 = (int *)MEMORY[0x1E4F940B8];
    while (!a1[*v4])
    {
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
        case 2u:
          if (v15 == 2 && PBReaderPlaceMark() && GEOFormattedStringIsValid(a1)) {
            goto LABEL_32;
          }
          goto LABEL_35;
        case 3u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPBTransitArtworkIsValid(a1)) {
            goto LABEL_35;
          }
          goto LABEL_32;
        case 4u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOStyleAttributesIsValid(a1)) {
            goto LABEL_35;
          }
LABEL_32:
          PBReaderRecallMark();
          goto LABEL_33;
        default:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_35:
            PBReaderRecallMark();
            return 0;
          }
LABEL_33:
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_34;
          }
          break;
      }
    }
  }
LABEL_34:
  BOOL v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

void sub_1897CD008(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOLabelInfoIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  unsigned int v2 = *(unsigned __int8 *)(a1 + 68);
  if ((v2 & 0x20) != 0) {
    return 1;
  }
  if ((v2 & 0x10) != 0)
  {
    if (GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(a1 + 48))) {
      return 1;
    }
    unsigned int v2 = *(unsigned __int8 *)(a1 + 68);
  }
  if ((v2 & 2) == 0) {
    goto LABEL_8;
  }
  if (GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(a1 + 24))) {
    return 1;
  }
  unsigned int v2 = *(unsigned __int8 *)(a1 + 68);
LABEL_8:
  if ((v2 & 4) != 0)
  {
    if (GEOPBTransitArtworkIsDirty(*(os_unfair_lock_s **)(a1 + 32))) {
      return 1;
    }
    unsigned int v2 = *(unsigned __int8 *)(a1 + 68);
  }
  return (v2 >> 3) & 1;
}

os_unfair_lock_s *GEOLabelInfoIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    uint64_t v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOLabelInfoIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 16);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_1897CD3D0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897CD710(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLaneArrowheadReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    id v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      while (1)
      {
        if (v3[*v6]) {
          goto LABEL_49;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          goto LABEL_49;
        }
        if ((v10 >> 3) == 2) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          char v18 = 0;
          unsigned int v19 = 0;
          uint64_t v20 = 0;
          *(unsigned char *)(a1 + 24) |= 1u;
          while (1)
          {
            uint64_t v21 = *v4;
            uint64_t v22 = *(void *)&v3[v21];
            unint64_t v23 = v22 + 1;
            if (v22 == -1 || v23 > *(void *)&v3[*v5]) {
              break;
            }
            char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
            *(void *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0) {
              goto LABEL_40;
            }
            v18 += 7;
            BOOL v15 = v19++ >= 9;
            if (v15)
            {
              LODWORD(v20) = 0;
              goto LABEL_42;
            }
          }
          v3[*v6] = 1;
LABEL_40:
          if (v3[*v6]) {
            LODWORD(v20) = 0;
          }
LABEL_42:
          LODWORD(v20) = -(v20 & 1) ^ ((int)v20 >> 1);
          unint64_t v33 = &OBJC_IVAR___GEOLaneArrowhead__angle;
LABEL_47:
          *(_DWORD *)(a1 + *v33) = v20;
          goto LABEL_48;
        }
        if (!*(void *)(a1 + 8))
        {
          id v31 = objc_alloc_init(MEMORY[0x1E4F940B0]);
          char v32 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = v31;
        }
        if ((PBUnknownFieldAdd() & 1) == 0) {
          goto LABEL_50;
        }
LABEL_48:
        if (*(void *)&v3[*v4] >= *(void *)&v3[*v5]) {
          goto LABEL_49;
        }
      }
      char v25 = 0;
      unsigned int v26 = 0;
      uint64_t v20 = 0;
      *(unsigned char *)(a1 + 24) |= 2u;
      while (1)
      {
        uint64_t v27 = *v4;
        uint64_t v28 = *(void *)&v3[v27];
        unint64_t v29 = v28 + 1;
        if (v28 == -1 || v29 > *(void *)&v3[*v5]) {
          break;
        }
        char v30 = *(unsigned char *)(*(void *)&v3[*v7] + v28);
        *(void *)&v3[v27] = v29;
        v20 |= (unint64_t)(v30 & 0x7F) << v25;
        if ((v30 & 0x80) == 0) {
          goto LABEL_44;
        }
        v25 += 7;
        BOOL v15 = v26++ >= 9;
        if (v15)
        {
          LODWORD(v20) = 0;
          goto LABEL_46;
        }
      }
      v3[*v6] = 1;
LABEL_44:
      if (v3[*v6]) {
        LODWORD(v20) = 0;
      }
LABEL_46:
      unint64_t v33 = &OBJC_IVAR___GEOLaneArrowhead__category;
      goto LABEL_47;
    }
LABEL_49:
    BOOL v34 = v3[*v6] == 0;
  }
  else
  {
LABEL_50:
    BOOL v34 = 0;
  }
  objc_sync_exit(v3);

  return v34;
}

void sub_1897CE658(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLaneArrowheadReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOLaneArrowheadReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1897CE6BC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLaneArrowheadIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  unsigned int v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    id v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_39;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      if (v14 || (v8 & 7) == 4) {
        goto LABEL_39;
      }
      if ((v8 >> 3) == 2) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_41;
        }
        unsigned int v16 = 0;
        while (1)
        {
          uint64_t v17 = *v2;
          uint64_t v18 = *(void *)&a1[v17];
          unint64_t v19 = v18 + 1;
          if (v18 == -1 || v19 > *(void *)&a1[*v3]) {
            break;
          }
          int v20 = *(char *)(*(void *)&a1[*v5] + v18);
          *(void *)&a1[v17] = v19;
          if (v20 < 0)
          {
            BOOL v21 = v16++ > 8;
            if (!v21) {
              continue;
            }
          }
          goto LABEL_38;
        }
LABEL_36:
        a1[*v4] = 1;
        goto LABEL_38;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_41:
        BOOL v27 = 0;
        goto LABEL_40;
      }
LABEL_38:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_39;
      }
    }
    if ((v8 & 7) != 0) {
      goto LABEL_41;
    }
    unsigned int v22 = 0;
    while (1)
    {
      uint64_t v23 = *v2;
      uint64_t v24 = *(void *)&a1[v23];
      unint64_t v25 = v24 + 1;
      if (v24 == -1 || v25 > *(void *)&a1[*v3]) {
        goto LABEL_36;
      }
      int v26 = *(char *)(*(void *)&a1[*v5] + v24);
      *(void *)&a1[v23] = v25;
      if (v26 < 0)
      {
        BOOL v21 = v22++ > 8;
        if (!v21) {
          continue;
        }
      }
      goto LABEL_38;
    }
  }
LABEL_39:
  BOOL v27 = a1[*v4] == 0;
LABEL_40:
  PBReaderRecallMark();
  return v27;
}

BOOL GEOLaneChangeInfoReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    id v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      while (1)
      {
        if (v3[*v6]) {
          goto LABEL_59;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          goto LABEL_59;
        }
        unint64_t v18 = v10 >> 3;
        if ((v10 >> 3) == 3)
        {
          char v28 = 0;
          unsigned int v29 = 0;
          uint64_t v21 = 0;
          *(unsigned char *)(a1 + 28) |= 2u;
          while (1)
          {
            uint64_t v30 = *v4;
            uint64_t v31 = *(void *)&v3[v30];
            unint64_t v32 = v31 + 1;
            if (v31 == -1 || v32 > *(void *)&v3[*v5]) {
              break;
            }
            char v33 = *(unsigned char *)(*(void *)&v3[*v7] + v31);
            *(void *)&v3[v30] = v32;
            v21 |= (unint64_t)(v33 & 0x7F) << v28;
            if ((v33 & 0x80) == 0)
            {
              BOOL v27 = &OBJC_IVAR___GEOLaneChangeInfo__numValidLanes;
              goto LABEL_51;
            }
            v28 += 7;
            BOOL v26 = v29++ > 8;
            if (v26)
            {
              LODWORD(v21) = 0;
              BOOL v27 = &OBJC_IVAR___GEOLaneChangeInfo__numValidLanes;
              goto LABEL_53;
            }
          }
          BOOL v27 = &OBJC_IVAR___GEOLaneChangeInfo__numValidLanes;
LABEL_50:
          v3[*v6] = 1;
          goto LABEL_51;
        }
        if (v18 == 2) {
          break;
        }
        if (v18 == 1)
        {
          char v19 = 0;
          unsigned int v20 = 0;
          uint64_t v21 = 0;
          *(unsigned char *)(a1 + 28) |= 4u;
          while (1)
          {
            uint64_t v22 = *v4;
            uint64_t v23 = *(void *)&v3[v22];
            unint64_t v24 = v23 + 1;
            if (v23 == -1 || v24 > *(void *)&v3[*v5])
            {
              BOOL v27 = &OBJC_IVAR___GEOLaneChangeInfo__startOffsetCm;
              goto LABEL_50;
            }
            char v25 = *(unsigned char *)(*(void *)&v3[*v7] + v23);
            *(void *)&v3[v22] = v24;
            v21 |= (unint64_t)(v25 & 0x7F) << v19;
            if ((v25 & 0x80) == 0) {
              break;
            }
            v19 += 7;
            BOOL v26 = v20++ > 8;
            if (v26)
            {
              LODWORD(v21) = 0;
              BOOL v27 = &OBJC_IVAR___GEOLaneChangeInfo__startOffsetCm;
              goto LABEL_53;
            }
          }
          BOOL v27 = &OBJC_IVAR___GEOLaneChangeInfo__startOffsetCm;
          goto LABEL_51;
        }
        if (!*(void *)(a1 + 8))
        {
          id v40 = objc_alloc_init(MEMORY[0x1E4F940B0]);
          id v41 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = v40;
        }
        if ((PBUnknownFieldAdd() & 1) == 0) {
          goto LABEL_60;
        }
LABEL_54:
        if (*(void *)&v3[*v4] >= *(void *)&v3[*v5]) {
          goto LABEL_59;
        }
      }
      char v34 = 0;
      unsigned int v35 = 0;
      uint64_t v21 = 0;
      *(unsigned char *)(a1 + 28) |= 1u;
      while (1)
      {
        uint64_t v36 = *v4;
        uint64_t v37 = *(void *)&v3[v36];
        unint64_t v38 = v37 + 1;
        if (v37 == -1 || v38 > *(void *)&v3[*v5])
        {
          BOOL v27 = &OBJC_IVAR___GEOLaneChangeInfo__endOffsetCm;
          goto LABEL_50;
        }
        char v39 = *(unsigned char *)(*(void *)&v3[*v7] + v37);
        *(void *)&v3[v36] = v38;
        v21 |= (unint64_t)(v39 & 0x7F) << v34;
        if ((v39 & 0x80) == 0) {
          break;
        }
        v34 += 7;
        BOOL v26 = v35++ > 8;
        if (v26)
        {
          LODWORD(v21) = 0;
          BOOL v27 = &OBJC_IVAR___GEOLaneChangeInfo__endOffsetCm;
          goto LABEL_53;
        }
      }
      BOOL v27 = &OBJC_IVAR___GEOLaneChangeInfo__endOffsetCm;
LABEL_51:
      if (v3[*v6]) {
        LODWORD(v21) = 0;
      }
LABEL_53:
      *(_DWORD *)(a1 + *v27) = v21;
      goto LABEL_54;
    }
LABEL_59:
    BOOL v42 = v3[*v6] == 0;
  }
  else
  {
LABEL_60:
    BOOL v42 = 0;
  }
  objc_sync_exit(v3);

  return v42;
}

void sub_1897CF7E8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLaneChangeInfoReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL v4 = GEOLaneChangeInfoReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return v4;
}

void sub_1897CF84C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLaneChangeInfoIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  unsigned int v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  BOOL v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    id v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_48;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      if (v14 || (v8 & 7) == 4) {
        goto LABEL_48;
      }
      unint64_t v16 = v8 >> 3;
      if ((v8 >> 3) == 3) {
        break;
      }
      if (v16 == 2)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_50;
        }
        unsigned int v28 = 0;
        while (1)
        {
          uint64_t v29 = *v2;
          uint64_t v30 = *(void *)&a1[v29];
          unint64_t v31 = v30 + 1;
          if (v30 == -1 || v31 > *(void *)&a1[*v3]) {
            goto LABEL_45;
          }
          int v32 = *(char *)(*(void *)&a1[*v5] + v30);
          *(void *)&a1[v29] = v31;
          if (v32 < 0)
          {
            BOOL v22 = v28++ > 8;
            if (!v22) {
              continue;
            }
          }
          goto LABEL_47;
        }
      }
      if (v16 == 1)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_50;
        }
        unsigned int v17 = 0;
        while (1)
        {
          uint64_t v18 = *v2;
          uint64_t v19 = *(void *)&a1[v18];
          unint64_t v20 = v19 + 1;
          if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
            break;
          }
          int v21 = *(char *)(*(void *)&a1[*v5] + v19);
          *(void *)&a1[v18] = v20;
          if (v21 < 0)
          {
            BOOL v22 = v17++ > 8;
            if (!v22) {
              continue;
            }
          }
          goto LABEL_47;
        }
LABEL_45:
        a1[*v4] = 1;
        goto LABEL_47;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_50:
        BOOL v33 = 0;
        goto LABEL_49;
      }
LABEL_47:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_48;
      }
    }
    if ((v8 & 7) != 0) {
      goto LABEL_50;
    }
    unsigned int v23 = 0;
    while (1)
    {
      uint64_t v24 = *v2;
      uint64_t v25 = *(void *)&a1[v24];
      unint64_t v26 = v25 + 1;
      if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
        goto LABEL_45;
      }
      int v27 = *(char *)(*(void *)&a1[*v5] + v25);
      *(void *)&a1[v24] = v26;
      if (v27 < 0)
      {
        BOOL v22 = v23++ > 8;
        if (!v22) {
          continue;
        }
      }
      goto LABEL_47;
    }
  }
LABEL_48:
  BOOL v33 = a1[*v4] == 0;
LABEL_49:
  PBReaderRecallMark();
  return v33;
}

BOOL GEOLaneInfoReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    BOOL v4 = (int *)MEMORY[0x1E4F940E8];
    id v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      while (!v3[*v6])
      {
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        switch((v10 >> 3))
        {
          case 2u:
            char v18 = 0;
            unsigned int v19 = 0;
            uint64_t v20 = 0;
            *(unsigned char *)(a1 + 28) |= 4u;
            while (1)
            {
              uint64_t v21 = *v4;
              uint64_t v22 = *(void *)&v3[v21];
              unint64_t v23 = v22 + 1;
              if (v22 == -1 || v23 > *(void *)&v3[*v5]) {
                break;
              }
              char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
              *(void *)&v3[v21] = v23;
              v20 |= (unint64_t)(v24 & 0x7F) << v18;
              if ((v24 & 0x80) == 0) {
                goto LABEL_49;
              }
              v18 += 7;
              BOOL v15 = v19++ >= 9;
              if (v15)
              {
                uint64_t v20 = 0;
                goto LABEL_51;
              }
            }
            v3[*v6] = 1;
LABEL_49:
            if (v3[*v6]) {
              uint64_t v20 = 0;
            }
LABEL_51:
            BOOL v42 = v20 != 0;
            uint64_t v43 = 26;
            goto LABEL_60;
          case 3u:
            char v27 = 0;
            unsigned int v28 = 0;
            uint64_t v29 = 0;
            *(unsigned char *)(a1 + 28) |= 2u;
            while (2)
            {
              uint64_t v30 = *v4;
              uint64_t v31 = *(void *)&v3[v30];
              unint64_t v32 = v31 + 1;
              if (v31 == -1 || v32 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v33 = *(unsigned char *)(*(void *)&v3[*v7] + v31);
                *(void *)&v3[v30] = v32;
                v29 |= (unint64_t)(v33 & 0x7F) << v27;
                if (v33 < 0)
                {
                  v27 += 7;
                  BOOL v15 = v28++ >= 9;
                  if (v15)
                  {
                    uint64_t v29 = 0;
                    goto LABEL_55;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              uint64_t v29 = 0;
            }
LABEL_55:
            BOOL v42 = v29 != 0;
            uint64_t v43 = 25;
            goto LABEL_60;
          case 4u:
            char v34 = 0;
            unsigned int v35 = 0;
            uint64_t v36 = 0;
            *(unsigned char *)(a1 + 28) |= 1u;
            while (2)
            {
              uint64_t v37 = *v4;
              uint64_t v38 = *(void *)&v3[v37];
              unint64_t v39 = v38 + 1;
              if (v38 == -1 || v39 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v40 = *(unsigned char *)(*(void *)&v3[*v7] + v38);
                *(void *)&v3[v37] = v39;
                v36 |= (unint64_t)(v40 & 0x7F) << v34;
                if (v40 < 0)
                {
                  v34 += 7;
                  BOOL v15 = v35++ >= 9;
                  if (v15)
                  {
                    uint64_t v36 = 0;
                    goto LABEL_59;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              uint64_t v36 = 0;
            }
LABEL_59:
            BOOL v42 = v36 != 0;
            uint64_t v43 = 24;
LABEL_60:
            *(unsigned char *)(a1 + v43) = v42;
            goto LABEL_61;
          case 5u:
            if ((PBReaderPlaceMark() & 1) == 0) {
              goto LABEL_64;
            }
            id v41 = objc_alloc_init(GEOLaneArrowhead);
            if (!GEOLaneArrowheadReadAllFrom((uint64_t)v41, v3))
            {

              goto LABEL_64;
            }
            PBReaderRecallMark();
            objc_msgSend((id)a1, "addArrow:", v41, 0, 0);

LABEL_61:
            if (*(void *)&v3[*v4] >= *(void *)&v3[*v5]) {
              goto LABEL_62;
            }
            break;
          default:
            if (!*(void *)(a1 + 8))
            {
              id v25 = objc_alloc_init(MEMORY[0x1E4F940B0]);
              unint64_t v26 = *(void **)(a1 + 8);
              *(void *)(a1 + 8) = v25;
            }
            if (!PBUnknownFieldAdd()) {
              goto LABEL_64;
            }
            goto LABEL_61;
        }
      }
    }
LABEL_62:
    BOOL v44 = v3[*v6] == 0;
  }
  else
  {
LABEL_64:
    BOOL v44 = 0;
  }
  objc_sync_exit(v3);

  return v44;
}

void sub_1897D0EB0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLaneInfoReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOLaneInfoReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1897D0F24(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLaneInfoIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  unsigned int v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  BOOL v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    id v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 2u:
          if ((v8 & 7) != 0) {
            goto LABEL_53;
          }
          unsigned int v17 = 0;
          while (1)
          {
            uint64_t v18 = *v2;
            uint64_t v19 = *(void *)&a1[v18];
            unint64_t v20 = v19 + 1;
            if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
              goto LABEL_45;
            }
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if (v21 < 0)
            {
              BOOL v22 = v17++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_50;
          }
        case 3u:
          if ((v8 & 7) != 0) {
            goto LABEL_53;
          }
          unsigned int v23 = 0;
          while (1)
          {
            uint64_t v24 = *v2;
            uint64_t v25 = *(void *)&a1[v24];
            unint64_t v26 = v25 + 1;
            if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
              goto LABEL_45;
            }
            int v27 = *(char *)(*(void *)&a1[*v5] + v25);
            *(void *)&a1[v24] = v26;
            if (v27 < 0)
            {
              BOOL v22 = v23++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_50;
          }
        case 4u:
          if ((v8 & 7) != 0) {
            goto LABEL_53;
          }
          unsigned int v28 = 0;
          break;
        case 5u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOLaneArrowheadIsValid(a1)) {
            goto LABEL_53;
          }
          PBReaderRecallMark();
          continue;
        default:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_53:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        uint64_t v29 = *v2;
        uint64_t v30 = *(void *)&a1[v29];
        unint64_t v31 = v30 + 1;
        if (v30 == -1 || v31 > *(void *)&a1[*v3]) {
          break;
        }
        int v32 = *(char *)(*(void *)&a1[*v5] + v30);
        *(void *)&a1[v29] = v31;
        if (v32 < 0)
        {
          BOOL v22 = v28++ > 8;
          if (!v22) {
            continue;
          }
        }
        goto LABEL_50;
      }
LABEL_45:
      a1[*v4] = 1;
LABEL_50:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v33 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v33;
}

BOOL GEOLaneWidthReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    BOOL v4 = (int *)MEMORY[0x1E4F940E8];
    id v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      while (1)
      {
        if (v3[*v6]) {
          goto LABEL_59;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          goto LABEL_59;
        }
        unint64_t v18 = v10 >> 3;
        if ((v10 >> 3) == 3)
        {
          char v28 = 0;
          unsigned int v29 = 0;
          uint64_t v21 = 0;
          *(unsigned char *)(a1 + 28) |= 4u;
          while (1)
          {
            uint64_t v30 = *v4;
            uint64_t v31 = *(void *)&v3[v30];
            unint64_t v32 = v31 + 1;
            if (v31 == -1 || v32 > *(void *)&v3[*v5]) {
              break;
            }
            char v33 = *(unsigned char *)(*(void *)&v3[*v7] + v31);
            *(void *)&v3[v30] = v32;
            v21 |= (unint64_t)(v33 & 0x7F) << v28;
            if ((v33 & 0x80) == 0)
            {
              int v27 = &OBJC_IVAR___GEOLaneWidth__zilchPathIndex;
              goto LABEL_51;
            }
            v28 += 7;
            BOOL v26 = v29++ > 8;
            if (v26)
            {
              LODWORD(v21) = 0;
              int v27 = &OBJC_IVAR___GEOLaneWidth__zilchPathIndex;
              goto LABEL_53;
            }
          }
          int v27 = &OBJC_IVAR___GEOLaneWidth__zilchPathIndex;
LABEL_50:
          v3[*v6] = 1;
          goto LABEL_51;
        }
        if (v18 == 2) {
          break;
        }
        if (v18 == 1)
        {
          char v19 = 0;
          unsigned int v20 = 0;
          uint64_t v21 = 0;
          *(unsigned char *)(a1 + 28) |= 2u;
          while (1)
          {
            uint64_t v22 = *v4;
            uint64_t v23 = *(void *)&v3[v22];
            unint64_t v24 = v23 + 1;
            if (v23 == -1 || v24 > *(void *)&v3[*v5])
            {
              int v27 = &OBJC_IVAR___GEOLaneWidth__width;
              goto LABEL_50;
            }
            char v25 = *(unsigned char *)(*(void *)&v3[*v7] + v23);
            *(void *)&v3[v22] = v24;
            v21 |= (unint64_t)(v25 & 0x7F) << v19;
            if ((v25 & 0x80) == 0) {
              break;
            }
            v19 += 7;
            BOOL v26 = v20++ > 8;
            if (v26)
            {
              LODWORD(v21) = 0;
              int v27 = &OBJC_IVAR___GEOLaneWidth__width;
              goto LABEL_53;
            }
          }
          int v27 = &OBJC_IVAR___GEOLaneWidth__width;
          goto LABEL_51;
        }
        if (!*(void *)(a1 + 8))
        {
          id v40 = objc_alloc_init(MEMORY[0x1E4F940B0]);
          id v41 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = v40;
        }
        if ((PBUnknownFieldAdd() & 1) == 0) {
          goto LABEL_60;
        }
LABEL_54:
        if (*(void *)&v3[*v4] >= *(void *)&v3[*v5]) {
          goto LABEL_59;
        }
      }
      char v34 = 0;
      unsigned int v35 = 0;
      uint64_t v21 = 0;
      *(unsigned char *)(a1 + 28) |= 1u;
      while (1)
      {
        uint64_t v36 = *v4;
        uint64_t v37 = *(void *)&v3[v36];
        unint64_t v38 = v37 + 1;
        if (v37 == -1 || v38 > *(void *)&v3[*v5])
        {
          int v27 = &OBJC_IVAR___GEOLaneWidth__offset;
          goto LABEL_50;
        }
        char v39 = *(unsigned char *)(*(void *)&v3[*v7] + v37);
        *(void *)&v3[v36] = v38;
        v21 |= (unint64_t)(v39 & 0x7F) << v34;
        if ((v39 & 0x80) == 0) {
          break;
        }
        v34 += 7;
        BOOL v26 = v35++ > 8;
        if (v26)
        {
          LODWORD(v21) = 0;
          int v27 = &OBJC_IVAR___GEOLaneWidth__offset;
          goto LABEL_53;
        }
      }
      int v27 = &OBJC_IVAR___GEOLaneWidth__offset;
LABEL_51:
      if (v3[*v6]) {
        LODWORD(v21) = 0;
      }
LABEL_53:
      *(_DWORD *)(a1 + *v27) = v21;
      goto LABEL_54;
    }
LABEL_59:
    BOOL v42 = v3[*v6] == 0;
  }
  else
  {
LABEL_60:
    BOOL v42 = 0;
  }
  objc_sync_exit(v3);

  return v42;
}

void sub_1897D2620(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLaneWidthReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOLaneWidthReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1897D2684(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLaneWidthIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  unsigned int v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  BOOL v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    id v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_48;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      if (v14 || (v8 & 7) == 4) {
        goto LABEL_48;
      }
      unint64_t v16 = v8 >> 3;
      if ((v8 >> 3) == 3) {
        break;
      }
      if (v16 == 2)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_50;
        }
        unsigned int v28 = 0;
        while (1)
        {
          uint64_t v29 = *v2;
          uint64_t v30 = *(void *)&a1[v29];
          unint64_t v31 = v30 + 1;
          if (v30 == -1 || v31 > *(void *)&a1[*v3]) {
            goto LABEL_45;
          }
          int v32 = *(char *)(*(void *)&a1[*v5] + v30);
          *(void *)&a1[v29] = v31;
          if (v32 < 0)
          {
            BOOL v22 = v28++ > 8;
            if (!v22) {
              continue;
            }
          }
          goto LABEL_47;
        }
      }
      if (v16 == 1)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_50;
        }
        unsigned int v17 = 0;
        while (1)
        {
          uint64_t v18 = *v2;
          uint64_t v19 = *(void *)&a1[v18];
          unint64_t v20 = v19 + 1;
          if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
            break;
          }
          int v21 = *(char *)(*(void *)&a1[*v5] + v19);
          *(void *)&a1[v18] = v20;
          if (v21 < 0)
          {
            BOOL v22 = v17++ > 8;
            if (!v22) {
              continue;
            }
          }
          goto LABEL_47;
        }
LABEL_45:
        a1[*v4] = 1;
        goto LABEL_47;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_50:
        BOOL v33 = 0;
        goto LABEL_49;
      }
LABEL_47:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_48;
      }
    }
    if ((v8 & 7) != 0) {
      goto LABEL_50;
    }
    unsigned int v23 = 0;
    while (1)
    {
      uint64_t v24 = *v2;
      uint64_t v25 = *(void *)&a1[v24];
      unint64_t v26 = v25 + 1;
      if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
        goto LABEL_45;
      }
      int v27 = *(char *)(*(void *)&a1[*v5] + v25);
      *(void *)&a1[v24] = v26;
      if (v27 < 0)
      {
        BOOL v22 = v23++ > 8;
        if (!v22) {
          continue;
        }
      }
      goto LABEL_47;
    }
  }
LABEL_48:
  BOOL v33 = a1[*v4] == 0;
LABEL_49:
  PBReaderRecallMark();
  return v33;
}

void sub_1897D300C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLaunchAndGoCardTextReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 80));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 76);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 72)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  unsigned int v12 = (vaddv_s16((int16x4_t)(*(void *)&vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int8 *)(a1 + 84)), (uint16x4_t)0xFFFAFFFCFFFEFFFBLL) & 0xFF01FF01FF01FF01))+ (*(unsigned char *)(a1 + 84) & 1)+ ((*(unsigned char *)(a1 + 84) & 8) != 0)+ ((*(unsigned char *)(a1 + 84) & 2) != 0));
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 > 3;
        char v17 = v16 & ~(_BYTE)v11 | v9;
        unsigned __int8 v18 = v16 | v11;
        char v53 = v17;
        char v54 = v18 | v17;
        if ((v18 | v8)) {
          uint64_t v19 = 0;
        }
        else {
          uint64_t v19 = a3;
        }
        char v55 = (v19 == 0) | v18;
        BOOL v56 = v18;
        unint64_t v20 = (int *)MEMORY[0x1E4F940E8];
        int v21 = (int *)MEMORY[0x1E4F940C8];
        BOOL v22 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v9;
LABEL_8:
        uint64_t v14 = v10;
        uint64_t v15 = v11;
LABEL_10:
        ++v7;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v21)) {
      goto LABEL_93;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      if (v24++ >= 9)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_25:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_93:
      int v51 = 1;
      goto LABEL_94;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v56;
    if ((v55 & 1) == 0)
    {
      unsigned int v35 = v19;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    switch((int)v33)
    {
      case 1:
        if (!v34) {
          goto LABEL_76;
        }
        if ((*(unsigned char *)(a1 + 84) & 4) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_113;
          }
          char v39 = objc_alloc_init(GEOFormattedString);
          if (GEOFormattedStringReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1))
          {
            PBReaderRecallMark();
            uint64_t v40 = 32;
            goto LABEL_75;
          }
          goto LABEL_112;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_113;
        }
        char v46 = 32 * *(unsigned char *)(a1 + 84);
        goto LABEL_90;
      case 2:
        if (!v34) {
          goto LABEL_76;
        }
        if ((*(unsigned char *)(a1 + 84) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_113;
          }
          char v46 = 4 * *(unsigned char *)(a1 + 84);
          goto LABEL_90;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_113;
        }
        char v39 = objc_alloc_init(GEOFormattedString);
        if (!GEOFormattedStringReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1)) {
          goto LABEL_112;
        }
        PBReaderRecallMark();
        uint64_t v40 = 56;
        goto LABEL_75;
      case 3:
        if (!v34) {
          goto LABEL_76;
        }
        if ((*(unsigned char *)(a1 + 84) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_113;
          }
          char v46 = 8 * *(unsigned char *)(a1 + 84);
          goto LABEL_90;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_113;
        }
        char v39 = objc_alloc_init(GEOFormattedString);
        if (!GEOFormattedStringReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1)) {
          goto LABEL_112;
        }
        PBReaderRecallMark();
        uint64_t v40 = 48;
        goto LABEL_75;
      case 4:
        if (!v34) {
          goto LABEL_76;
        }
        if ((*(unsigned char *)(a1 + 84) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_113;
          }
          char v46 = 2 * *(unsigned char *)(a1 + 84);
          goto LABEL_90;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_113;
        }
        char v39 = objc_alloc_init(GEOPlaceFormattedString);
        if (!GEOPlaceFormattedStringReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1)) {
          goto LABEL_112;
        }
        PBReaderRecallMark();
        uint64_t v40 = 64;
        goto LABEL_75;
      case 5:
        if (!v34) {
          goto LABEL_76;
        }
        if ((*(unsigned char *)(a1 + 84) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_113;
          }
          char v46 = 16 * *(unsigned char *)(a1 + 84);
          goto LABEL_90;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_113;
        }
        char v39 = objc_alloc_init(GEOPlaceFormattedString);
        if (!GEOPlaceFormattedStringReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1)) {
          goto LABEL_112;
        }
        PBReaderRecallMark();
        uint64_t v40 = 40;
        goto LABEL_75;
      case 6:
        if (!v34) {
          goto LABEL_76;
        }
        if ((*(unsigned char *)(a1 + 84) & 2) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_113;
          }
          char v46 = *(unsigned char *)(a1 + 84) << 6;
LABEL_90:
          v7 += v46 >> 7;
LABEL_91:
          int v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_92:
          if (!(v54 & 1 | (v7 != 0))) {
            goto LABEL_93;
          }
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_113;
        }
        char v39 = objc_alloc_init(GEOPlaceFormattedString);
        if (GEOPlaceFormattedStringReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1))
        {
          PBReaderRecallMark();
          uint64_t v40 = 24;
LABEL_75:
          BOOL v44 = *(void **)(a1 + v40);
          *(void *)(a1 + v40) = v39;

          --v7;
          goto LABEL_91;
        }
LABEL_112:

LABEL_113:
        int v51 = 0;
        int v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_94:
        uint64_t v52 = &OBJC_IVAR___GEOActiveTileGroup__textureChecksums;
        if (v53) {
LABEL_95:
        }
          *(unsigned char *)(a1 + v52[596]) |= 1u;
        if (v56 || (v51 & 1) == 0)
        {
          *(unsigned char *)(a1 + v52[596]) |= 4u;
          *(unsigned char *)(a1 + v52[596]) |= 0x20u;
          *(unsigned char *)(a1 + v52[596]) |= 0x10u;
          *(unsigned char *)(a1 + v52[596]) |= 0x40u;
          *(unsigned char *)(a1 + v52[596]) |= 8u;
          *(unsigned char *)(a1 + v52[596]) |= 2u;
        }
        else if (v19)
        {
          while (1)
          {
            int v47 = *v19++;
            char v48 = 4;
            switch(v47)
            {
              case 0:
                goto LABEL_106;
              case 1:
                goto LABEL_105;
              case 2:
                char v48 = 32;
                goto LABEL_105;
              case 3:
                char v48 = 16;
                goto LABEL_105;
              case 4:
                char v48 = 64;
                goto LABEL_105;
              case 5:
                char v48 = 8;
                goto LABEL_105;
              case 6:
                char v48 = 2;
LABEL_105:
                *(unsigned char *)(a1 + v52[596]) |= v48;
                break;
              default:
                continue;
            }
          }
        }
LABEL_106:
        if (v51) {
          unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
        }
        else {
          unint64_t v3 = 0;
        }
        if (v56)
        {
          char v49 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      default:
        if (v53 & 1) == 0 || (*(unsigned char *)(a1 + 84))
        {
LABEL_76:
          char v45 = PBReaderSkipValueWithTag();
          int v21 = (int *)MEMORY[0x1E4F940C8];
          if ((v45 & 1) == 0)
          {
            int v51 = 0;
            goto LABEL_94;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v41 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            BOOL v42 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v41;
          }
          int v43 = PBUnknownFieldAdd();
          int v21 = (int *)MEMORY[0x1E4F940C8];
          if (!v43)
          {
            int v51 = 0;
            uint64_t v52 = &OBJC_IVAR___GEOActiveTileGroup__textureChecksums;
            goto LABEL_95;
          }
        }
        goto LABEL_92;
    }
  }
}

void sub_1897D3A1C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897D3B8C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897D3CFC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897D3E68(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897D3FD4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897D4940(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOLaunchAndGoCardTextCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  [*(id *)(a1 + 32) readAll:1];
  [*(id *)(a1 + 56) readAll:1];
  [*(id *)(a1 + 48) readAll:1];
  [*(id *)(a1 + 64) readAll:1];
  [*(id *)(a1 + 40) readAll:1];
  unsigned int v2 = *(void **)(a1 + 24);

  return [v2 readAll:1];
}

unint64_t GEOLaunchAndGoCardTextReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 76))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOLaunchAndGoCardTextReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 80));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 72) = [v8 position];
  *(_DWORD *)(a1 + 76) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOLaunchAndGoCardTextReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOLaunchAndGoCardTextReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOLaunchAndGoCardTextReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOLaunchAndGoCardTextCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 80));
  return Specified;
}

void sub_1897D4B70(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLaunchAndGoCardTextReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOLaunchAndGoCardTextReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1897D4BD4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLaunchAndGoCardTextIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  unsigned int v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  BOOL v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] >= *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
LABEL_31:
    BOOL v17 = a1[*v4] == 0;
    PBReaderRecallMark();
    return v17;
  }
  id v5 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (a1[*v4]) {
      goto LABEL_31;
    }
    char v6 = 0;
    unsigned int v7 = 0;
    unint64_t v8 = 0;
    while (1)
    {
      uint64_t v9 = *v2;
      uint64_t v10 = *(void *)&a1[v9];
      unint64_t v11 = v10 + 1;
      if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
        break;
      }
      char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
      *(void *)&a1[v9] = v11;
      v8 |= (unint64_t)(v12 & 0x7F) << v6;
      if ((v12 & 0x80) == 0) {
        goto LABEL_12;
      }
      v6 += 7;
      if (v7++ >= 9)
      {
        unint64_t v8 = 0;
        int v14 = a1[*v4];
        goto LABEL_14;
      }
    }
    a1[*v4] = 1;
LABEL_12:
    int v14 = a1[*v4];
    if (a1[*v4]) {
      unint64_t v8 = 0;
    }
LABEL_14:
    int v15 = v8 & 7;
    if (v14 || v15 == 4) {
      goto LABEL_31;
    }
    switch((v8 >> 3))
    {
      case 1u:
      case 2u:
      case 3u:
        if (v15 == 2 && PBReaderPlaceMark() && GEOFormattedStringIsValid(a1)) {
          goto LABEL_26;
        }
        goto LABEL_30;
      case 4u:
      case 5u:
      case 6u:
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOPlaceFormattedStringIsValid(a1)) {
          goto LABEL_30;
        }
LABEL_26:
        PBReaderRecallMark();
        goto LABEL_27;
      default:
        if (PBReaderSkipValueWithTag())
        {
LABEL_27:
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_31;
          }
          continue;
        }
LABEL_30:
        PBReaderRecallMark();
        return 0;
    }
  }
}

void sub_1897D501C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOLaunchAndGoCardTextIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 80));
  int v2 = *(char *)(a1 + 84);
  if (v2 < 0) {
    return 1;
  }
  if ((v2 & 4) != 0)
  {
    if (GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(a1 + 32))) {
      return 1;
    }
    LOBYTE(v2) = *(unsigned char *)(a1 + 84);
  }
  if ((v2 & 0x20) != 0)
  {
    if (GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(a1 + 56))) {
      return 1;
    }
    LOBYTE(v2) = *(unsigned char *)(a1 + 84);
  }
  if ((v2 & 0x10) != 0)
  {
    if (GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(a1 + 48))) {
      return 1;
    }
    LOBYTE(v2) = *(unsigned char *)(a1 + 84);
  }
  if ((v2 & 0x40) == 0) {
    goto LABEL_14;
  }
  if (GEOPlaceFormattedStringIsDirty(*(os_unfair_lock_s **)(a1 + 64))) {
    return 1;
  }
  LOBYTE(v2) = *(unsigned char *)(a1 + 84);
LABEL_14:
  if ((v2 & 8) != 0)
  {
    if (GEOPlaceFormattedStringIsDirty(*(os_unfair_lock_s **)(a1 + 40))) {
      return 1;
    }
    LOBYTE(v2) = *(unsigned char *)(a1 + 84);
  }
  if ((v2 & 2) == 0) {
    return 0;
  }
  BOOL v4 = *(os_unfair_lock_s **)(a1 + 24);

  return (uint64_t)GEOPlaceFormattedStringIsDirty(v4);
}

os_unfair_lock_s *GEOLaunchAndGoCardTextIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    uint64_t v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOLaunchAndGoCardTextIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 20);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_1897D54D4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897D58D8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOManeuverDataReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    BOOL v4 = (int *)MEMORY[0x1E4F940E8];
    id v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 2)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_42;
          }
          unint64_t v25 = objc_alloc_init(GEOJunctionInfo);
          if (!GEOJunctionInfoReadAllFrom((uint64_t)v25, v3))
          {

            goto LABEL_42;
          }
          PBReaderRecallMark();
          uint64_t v26 = *(void **)(a1 + 16);
          *(void *)(a1 + 16) = v25;
        }
        else if ((v10 >> 3) == 1)
        {
          char v18 = 0;
          unsigned int v19 = 0;
          uint64_t v20 = 0;
          *(unsigned char *)(a1 + 28) |= 1u;
          while (1)
          {
            uint64_t v21 = *v4;
            uint64_t v22 = *(void *)&v3[v21];
            unint64_t v23 = v22 + 1;
            if (v22 == -1 || v23 > *(void *)&v3[*v5]) {
              break;
            }
            char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
            *(void *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0) {
              goto LABEL_36;
            }
            v18 += 7;
            BOOL v15 = v19++ >= 9;
            if (v15)
            {
              LODWORD(v20) = 0;
              goto LABEL_38;
            }
          }
          v3[*v6] = 1;
LABEL_36:
          if (v3[*v6]) {
            LODWORD(v20) = 0;
          }
LABEL_38:
          *(_DWORD *)(a1 + 24) = v20;
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v27 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            unint64_t v28 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v27;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_42;
          }
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v29 = v3[*v6] == 0;
  }
  else
  {
LABEL_42:
    BOOL v29 = 0;
  }
  objc_sync_exit(v3);

  return v29;
}

void sub_1897D7D64(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOManeuverDataReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOManeuverDataReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1897D7DC8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOMeasurementDataReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    BOOL v4 = (int *)MEMORY[0x1E4F940E8];
    id v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          char v18 = 0;
          unsigned int v19 = 0;
          uint64_t v20 = 0;
          *(unsigned char *)(a1 + 20) |= 1u;
          while (1)
          {
            uint64_t v21 = *v4;
            uint64_t v22 = *(void *)&v3[v21];
            unint64_t v23 = v22 + 1;
            if (v22 == -1 || v23 > *(void *)&v3[*v5]) {
              break;
            }
            char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
            *(void *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0) {
              goto LABEL_32;
            }
            v18 += 7;
            BOOL v15 = v19++ >= 9;
            if (v15)
            {
              uint64_t v20 = 0;
              goto LABEL_34;
            }
          }
          v3[*v6] = 1;
LABEL_32:
          if (v3[*v6]) {
            uint64_t v20 = 0;
          }
LABEL_34:
          *(unsigned char *)(a1 + 16) = v20 != 0;
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v25 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            uint64_t v26 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v25;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_37;
          }
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v27 = v3[*v6] == 0;
  }
  else
  {
LABEL_37:
    BOOL v27 = 0;
  }
  objc_sync_exit(v3);

  return v27;
}

void sub_1897D897C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOMeasurementDataReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOMeasurementDataReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1897D89E0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897D8F08(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOMiniCardReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 60);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 56)];
  unsigned int v7 = v6;
  uint64_t v8 = 0;
  char v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  uint64_t v12 = 0;
  unsigned int v13 = (vaddv_s16((int16x4_t)(*(void *)&vshl_u16((uint16x4_t)(*(void *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 72)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFCFFFEFFFBFFFDLL) & 0xFF01FF01FF01FF01))+ ((*(unsigned char *)(a1 + 72) & 2) != 0));
  while (2)
  {
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    uint64_t v16 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v13;
        goto LABEL_8;
      case -3:
        char v9 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v15 = v11;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v17 = v13 > 2;
        char v18 = v17 & ~(_BYTE)v12 | v10;
        unsigned __int8 v19 = v17 | v12;
        char v62 = v18;
        char v63 = v19 | v18;
        if ((v19 | v9)) {
          uint64_t v20 = 0;
        }
        else {
          uint64_t v20 = a3;
        }
        char v64 = (v20 == 0) | v19;
        BOOL v65 = v19;
        uint64_t v21 = (int *)MEMORY[0x1E4F940E8];
        uint64_t v22 = (int *)MEMORY[0x1E4F940C8];
        unint64_t v23 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v13;
LABEL_7:
        uint64_t v14 = v10;
LABEL_8:
        uint64_t v15 = v11;
        uint64_t v16 = v12;
LABEL_10:
        ++v8;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        uint64_t v12 = v16;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v21) >= *(void *)(v3 + *v7) || *(unsigned char *)(v3 + *v22)) {
      goto LABEL_90;
    }
    char v24 = 0;
    unsigned int v25 = 0;
    unint64_t v26 = 0;
    while (1)
    {
      uint64_t v27 = *v21;
      uint64_t v28 = *(void *)(v3 + v27);
      unint64_t v29 = v28 + 1;
      if (v28 == -1 || v29 > *(void *)(v3 + *v7)) {
        break;
      }
      char v30 = *(unsigned char *)(*(void *)(v3 + *v23) + v28);
      *(void *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0) {
        goto LABEL_25;
      }
      v24 += 7;
      BOOL v31 = v25++ >= 9;
      if (v31)
      {
        unint64_t v26 = 0;
        int v32 = *(unsigned __int8 *)(v3 + *v22);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v22) = 1;
LABEL_25:
    int v32 = *(unsigned __int8 *)(v3 + *v22);
    if (*(unsigned char *)(v3 + *v22)) {
      unint64_t v26 = 0;
    }
LABEL_27:
    if (v32 || (v26 & 7) == 4)
    {
LABEL_90:
      int v60 = 1;
      goto LABEL_91;
    }
    unint64_t v34 = v26 >> 3;
    BOOL v35 = v65;
    if ((v64 & 1) == 0)
    {
      int v36 = v20;
      do
      {
        int v38 = *v36++;
        int v37 = v38;
        BOOL v35 = v38 != 0;
        if (v38) {
          BOOL v39 = v37 == v34;
        }
        else {
          BOOL v39 = 1;
        }
      }
      while (!v39);
    }
    switch((int)v34)
    {
      case 1:
        if (!v35) {
          goto LABEL_73;
        }
        if ((*(unsigned char *)(a1 + 72) & 0x20) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_108;
          }
          uint64_t v40 = objc_alloc_init(GEOFormattedString);
          if (GEOFormattedStringReadAllFrom((uint64_t)v40, (void *)v3, v11 & 1))
          {
            PBReaderRecallMark();
            uint64_t v41 = 48;
            goto LABEL_71;
          }
          goto LABEL_107;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_108;
        }
        char v55 = 4 * *(unsigned char *)(a1 + 72);
        goto LABEL_87;
      case 2:
        if (!v35) {
          goto LABEL_73;
        }
        if ((*(unsigned char *)(a1 + 72) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_108;
          }
          char v55 = 16 * *(unsigned char *)(a1 + 72);
          goto LABEL_87;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_108;
        }
        uint64_t v40 = objc_alloc_init(GEOFormattedString);
        if (!GEOFormattedStringReadAllFrom((uint64_t)v40, (void *)v3, v11 & 1)) {
          goto LABEL_107;
        }
        PBReaderRecallMark();
        uint64_t v41 = 32;
        goto LABEL_71;
      case 3:
        if (!v35) {
          goto LABEL_73;
        }
        if ((*(unsigned char *)(a1 + 72) & 4) == 0)
        {
          uint64_t v45 = PBReaderReadString();
          char v46 = *(void **)(a1 + 24);
          *(void *)(a1 + 24) = v45;
          goto LABEL_72;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_108;
        }
        char v55 = 32 * *(unsigned char *)(a1 + 72);
        goto LABEL_87;
      case 4:
        if ((v9 & 1) == 0) {
          goto LABEL_73;
        }
        char v47 = 0;
        unsigned int v48 = 0;
        uint64_t v49 = 0;
        *(unsigned char *)(a1 + 72) |= 1u;
        while (2)
        {
          uint64_t v50 = *v21;
          uint64_t v51 = *(void *)(v3 + v50);
          unint64_t v52 = v51 + 1;
          if (v51 == -1 || v52 > *(void *)(v3 + *v7))
          {
            *(unsigned char *)(v3 + *v22) = 1;
          }
          else
          {
            char v53 = *(unsigned char *)(*(void *)(v3 + *v23) + v51);
            *(void *)(v3 + v50) = v52;
            v49 |= (unint64_t)(v53 & 0x7F) << v47;
            if (v53 < 0)
            {
              v47 += 7;
              BOOL v31 = v48++ >= 9;
              if (v31)
              {
                uint64_t v49 = 0;
                goto LABEL_78;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v22)) {
          uint64_t v49 = 0;
        }
LABEL_78:
        *(unsigned char *)(a1 + 68) = v49 != 0;
        goto LABEL_89;
      case 5:
        if (!v35) {
          goto LABEL_73;
        }
        if ((*(unsigned char *)(a1 + 72) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_108;
          }
          char v55 = 8 * *(unsigned char *)(a1 + 72);
LABEL_87:
          v8 += v55 >> 7;
LABEL_88:
          uint64_t v22 = (int *)MEMORY[0x1E4F940C8];
          unsigned int v7 = (int *)MEMORY[0x1E4F940E0];
LABEL_89:
          if (!(v63 & 1 | (v8 != 0))) {
            goto LABEL_90;
          }
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_108;
        }
        uint64_t v40 = objc_alloc_init(GEOFormattedString);
        if (GEOFormattedStringReadAllFrom((uint64_t)v40, (void *)v3, v11 & 1))
        {
          PBReaderRecallMark();
          uint64_t v41 = 40;
LABEL_71:
          char v46 = *(void **)(a1 + v41);
          *(void *)(a1 + v41) = v40;
LABEL_72:

          --v8;
          goto LABEL_88;
        }
LABEL_107:

LABEL_108:
        int v60 = 0;
        uint64_t v22 = (int *)MEMORY[0x1E4F940C8];
LABEL_91:
        char v61 = &OBJC_IVAR___GEOActiveTileGroup__textureChecksums;
        if (v62) {
LABEL_92:
        }
          *(unsigned char *)(a1 + v61[614]) |= 2u;
        if (v65 || (v60 & 1) == 0)
        {
          *(unsigned char *)(a1 + v61[614]) |= 0x20u;
          *(unsigned char *)(a1 + v61[614]) |= 8u;
          *(unsigned char *)(a1 + v61[614]) |= 4u;
          *(unsigned char *)(a1 + v61[614]) |= 0x10u;
        }
        else if (v20)
        {
          while (1)
          {
            int v56 = *v20++;
            char v57 = 32;
            switch(v56)
            {
              case 0:
                goto LABEL_101;
              case 1:
                goto LABEL_100;
              case 2:
                char v57 = 8;
                goto LABEL_100;
              case 3:
                char v57 = 4;
                goto LABEL_100;
              case 5:
                char v57 = 16;
LABEL_100:
                *(unsigned char *)(a1 + v61[614]) |= v57;
                break;
              default:
                continue;
            }
          }
        }
LABEL_101:
        if (v60) {
          unint64_t v3 = *(unsigned char *)(v3 + *v22) == 0;
        }
        else {
          unint64_t v3 = 0;
        }
        if (v65)
        {
          char v58 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      default:
        if ((v62 & 1) == 0 || (*(unsigned char *)(a1 + 72) & 2) != 0)
        {
LABEL_73:
          char v54 = PBReaderSkipValueWithTag();
          unsigned int v7 = (int *)MEMORY[0x1E4F940E0];
          uint64_t v22 = (int *)MEMORY[0x1E4F940C8];
          if ((v54 & 1) == 0)
          {
            int v60 = 0;
            goto LABEL_91;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v42 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            int v43 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v42;
          }
          int v44 = PBUnknownFieldAdd();
          uint64_t v22 = (int *)MEMORY[0x1E4F940C8];
          unsigned int v7 = (int *)MEMORY[0x1E4F940E0];
          if (!v44)
          {
            int v60 = 0;
            char v61 = &OBJC_IVAR___GEOActiveTileGroup__textureChecksums;
            goto LABEL_92;
          }
        }
        goto LABEL_89;
    }
  }
}

void sub_1897D9858(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897D99C4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897D9B98(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897DA3F8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOMiniCardReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 60))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOMiniCardReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = [v8 position];
  *(_DWORD *)(a1 + 60) = [v8 length];
  if (a3) {
    char v9 = (int *)&GEOMiniCardReadAllFrom_recursiveTag;
  }
  else {
    char v9 = (int *)&GEOMiniCardReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOMiniCardReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    [*(id *)(a1 + 48) readAll:1];
    [*(id *)(a1 + 32) readAll:1];
    [*(id *)(a1 + 40) readAll:1];
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_1897DA5C0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOMiniCardReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOMiniCardReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1897DA624(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOMiniCardIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  int v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  BOOL v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    id v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
        case 2u:
        case 5u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOFormattedStringIsValid(a1)) {
            goto LABEL_37;
          }
          PBReaderRecallMark();
          continue;
        case 3u:
          if (v15 == 2) {
            goto LABEL_24;
          }
          goto LABEL_37;
        case 4u:
          if ((v8 & 7) != 0) {
            goto LABEL_37;
          }
          unsigned int v17 = 0;
          break;
        default:
LABEL_24:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_37:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        uint64_t v18 = *v2;
        uint64_t v19 = *(void *)&a1[v18];
        unint64_t v20 = v19 + 1;
        if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
          break;
        }
        int v21 = *(char *)(*(void *)&a1[*v5] + v19);
        *(void *)&a1[v18] = v20;
        if (v21 < 0 && v17++ <= 8) {
          continue;
        }
        goto LABEL_35;
      }
      a1[*v4] = 1;
LABEL_35:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v23 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v23;
}

void sub_1897DAA98(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOMiniCardIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  char v2 = *(unsigned char *)(a1 + 72);
  if ((v2 & 0x40) != 0) {
    return 1;
  }
  if ((*(unsigned char *)(a1 + 72) & 0x20) != 0)
  {
    if (GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(a1 + 48))) {
      return 1;
    }
    char v2 = *(unsigned char *)(a1 + 72);
  }
  if ((v2 & 8) == 0) {
    goto LABEL_8;
  }
  if (GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(a1 + 32))) {
    return 1;
  }
  char v2 = *(unsigned char *)(a1 + 72);
LABEL_8:
  if ((v2 & 4) != 0) {
    return 1;
  }
  if ((v2 & 0x10) == 0) {
    return 0;
  }
  BOOL v4 = *(os_unfair_lock_s **)(a1 + 40);

  return (uint64_t)GEOFormattedStringIsDirty(v4);
}

os_unfair_lock_s *GEOMiniCardIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    uint64_t v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOMiniCardIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 16);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_1897DAEDC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897DB2A8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOMinimumVisibleElevationRangeReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    BOOL v4 = (int *)MEMORY[0x1E4F940E8];
    id v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      while (1)
      {
        if (v3[*v6]) {
          goto LABEL_49;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          goto LABEL_49;
        }
        if ((v10 >> 3) == 2) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          char v18 = 0;
          unsigned int v19 = 0;
          uint64_t v20 = 0;
          *(unsigned char *)(a1 + 24) |= 1u;
          while (1)
          {
            uint64_t v21 = *v4;
            uint64_t v22 = *(void *)&v3[v21];
            unint64_t v23 = v22 + 1;
            if (v22 == -1 || v23 > *(void *)&v3[*v5])
            {
              unint64_t v26 = &OBJC_IVAR___GEOMinimumVisibleElevationRange__lowerBoundCm;
              goto LABEL_41;
            }
            char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
            *(void *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0) {
              break;
            }
            v18 += 7;
            BOOL v25 = v19++ > 8;
            if (v25)
            {
              LODWORD(v20) = 0;
              unint64_t v26 = &OBJC_IVAR___GEOMinimumVisibleElevationRange__lowerBoundCm;
              goto LABEL_44;
            }
          }
          unint64_t v26 = &OBJC_IVAR___GEOMinimumVisibleElevationRange__lowerBoundCm;
LABEL_42:
          if (v3[*v6]) {
            LODWORD(v20) = 0;
          }
LABEL_44:
          *(_DWORD *)(a1 + *v26) = -(v20 & 1) ^ ((int)v20 >> 1);
          goto LABEL_45;
        }
        if (!*(void *)(a1 + 8))
        {
          id v33 = objc_alloc_init(MEMORY[0x1E4F940B0]);
          unint64_t v34 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = v33;
        }
        if ((PBUnknownFieldAdd() & 1) == 0) {
          goto LABEL_50;
        }
LABEL_45:
        if (*(void *)&v3[*v4] >= *(void *)&v3[*v5]) {
          goto LABEL_49;
        }
      }
      char v27 = 0;
      unsigned int v28 = 0;
      uint64_t v20 = 0;
      *(unsigned char *)(a1 + 24) |= 2u;
      while (1)
      {
        uint64_t v29 = *v4;
        uint64_t v30 = *(void *)&v3[v29];
        unint64_t v31 = v30 + 1;
        if (v30 == -1 || v31 > *(void *)&v3[*v5]) {
          break;
        }
        char v32 = *(unsigned char *)(*(void *)&v3[*v7] + v30);
        *(void *)&v3[v29] = v31;
        v20 |= (unint64_t)(v32 & 0x7F) << v27;
        if ((v32 & 0x80) == 0)
        {
          unint64_t v26 = &OBJC_IVAR___GEOMinimumVisibleElevationRange__upperBoundCm;
          goto LABEL_42;
        }
        v27 += 7;
        BOOL v25 = v28++ > 8;
        if (v25)
        {
          LODWORD(v20) = 0;
          unint64_t v26 = &OBJC_IVAR___GEOMinimumVisibleElevationRange__upperBoundCm;
          goto LABEL_44;
        }
      }
      unint64_t v26 = &OBJC_IVAR___GEOMinimumVisibleElevationRange__upperBoundCm;
LABEL_41:
      v3[*v6] = 1;
      goto LABEL_42;
    }
LABEL_49:
    BOOL v35 = v3[*v6] == 0;
  }
  else
  {
LABEL_50:
    BOOL v35 = 0;
  }
  objc_sync_exit(v3);

  return v35;
}

void sub_1897DBCE4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOMinimumVisibleElevationRangeReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOMinimumVisibleElevationRangeReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1897DBD48(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897DC33C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEONavTrayGuidanceReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  char v7 = 0;
  uint64_t v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  int v12 = ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1)
      + (*(unsigned char *)(a1 + 52) & 1)
      + ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1);
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v7 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 != 0;
        char v17 = v16 & ~(_BYTE)v11 | v9;
        unsigned __int8 v18 = v16 | v11;
        char v53 = v17;
        char v54 = v18 | v17;
        if ((v18 | v7)) {
          unsigned int v19 = 0;
        }
        else {
          unsigned int v19 = a3;
        }
        uint64_t v20 = (int *)MEMORY[0x1E4F940E8];
        char v55 = (v19 == 0) | v18;
        BOOL v56 = v18;
        uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
        uint64_t v22 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v9;
LABEL_8:
        uint64_t v14 = v10;
        uint64_t v15 = v11;
LABEL_10:
        ++v8;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v21)) {
      goto LABEL_66;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      if (v24++ >= 9)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_25:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_66:
      int v51 = 1;
      goto LABEL_67;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v56;
    if ((v55 & 1) == 0)
    {
      BOOL v35 = v19;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    if (v33 == 2) {
      break;
    }
    if (v33 == 1)
    {
      if (!v34) {
        goto LABEL_57;
      }
      if ((*(unsigned char *)(a1 + 52) & 4) == 0)
      {
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_85;
        }
        BOOL v39 = objc_alloc_init(GEOFormattedString);
        if (!GEOFormattedStringReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1)) {
          goto LABEL_84;
        }
        PBReaderRecallMark();
        uint64_t v40 = 32;
LABEL_50:
        uint64_t v41 = *(void **)(a1 + v40);
        *(void *)(a1 + v40) = v39;

        --v8;
LABEL_64:
        uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
        goto LABEL_65;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        goto LABEL_85;
      }
      char v46 = 32 * *(unsigned char *)(a1 + 52);
LABEL_63:
      v8 += v46 >> 7;
      goto LABEL_64;
    }
    if (v53 & 1) == 0 || (*(unsigned char *)(a1 + 52))
    {
LABEL_57:
      char v45 = PBReaderSkipValueWithTag();
      uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
      if ((v45 & 1) == 0)
      {
        int v51 = 0;
        goto LABEL_67;
      }
      goto LABEL_65;
    }
    if (!*(void *)(a1 + 16))
    {
      id v42 = objc_alloc_init(MEMORY[0x1E4F940B0]);
      int v43 = *(void **)(a1 + 16);
      *(void *)(a1 + 16) = v42;
    }
    int v44 = PBUnknownFieldAdd();
    uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
    if (!v44)
    {
      int v51 = 0;
      unint64_t v52 = &OBJC_IVAR___GEOActiveTileGroup__textureChecksums;
      goto LABEL_68;
    }
LABEL_65:
    if (!(v54 & 1 | (v8 != 0))) {
      goto LABEL_66;
    }
  }
  if (!v34) {
    goto LABEL_57;
  }
  if ((*(unsigned char *)(a1 + 52) & 2) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0) {
      goto LABEL_85;
    }
    char v46 = *(unsigned char *)(a1 + 52) << 6;
    goto LABEL_63;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_85;
  }
  BOOL v39 = objc_alloc_init(GEOFormattedString);
  if (GEOFormattedStringReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1))
  {
    PBReaderRecallMark();
    uint64_t v40 = 24;
    goto LABEL_50;
  }
LABEL_84:

LABEL_85:
  int v51 = 0;
  uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_67:
  unint64_t v52 = &OBJC_IVAR___GEOActiveTileGroup__textureChecksums;
  if ((v53 & 1) == 0) {
    goto LABEL_69;
  }
LABEL_68:
  *(unsigned char *)(a1 + v52[629]) |= 1u;
LABEL_69:
  if (v56 || (v51 & 1) == 0)
  {
    *(unsigned char *)(a1 + v52[629]) |= 4u;
    *(unsigned char *)(a1 + v52[629]) |= 2u;
    goto LABEL_78;
  }
  if (v19)
  {
    while (1)
    {
      int v48 = *v19++;
      int v47 = v48;
      if (v48 == 1) {
        break;
      }
      if (v47 == 2)
      {
LABEL_74:
        *(unsigned char *)(a1 + v52[629]) |= v47;
      }
      else if (!v47)
      {
        goto LABEL_78;
      }
    }
    LOBYTE(v47) = 4;
    goto LABEL_74;
  }
LABEL_78:
  if (v51) {
    unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
  }
  else {
    unint64_t v3 = 0;
  }
  if (v56)
  {
    uint64_t v49 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_1897DCA0C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897DD054(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEONavTrayGuidanceReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEONavTrayGuidanceReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEONavTrayGuidanceReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEONavTrayGuidanceReadAllFrom_initialTag;
  }
  unint64_t Specified = GEONavTrayGuidanceReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    [*(id *)(a1 + 32) readAll:1];
    [*(id *)(a1 + 24) readAll:1];
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_1897DD210(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEONavTrayGuidanceReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEONavTrayGuidanceReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1897DD274(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897DD40C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEONavTrayGuidanceIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  char v2 = *(unsigned char *)(a1 + 52);
  if ((v2 & 8) != 0) {
    return 1;
  }
  if ((*(unsigned char *)(a1 + 52) & 4) != 0)
  {
    if (GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(a1 + 32))) {
      return 1;
    }
    char v2 = *(unsigned char *)(a1 + 52);
  }
  if ((v2 & 2) == 0) {
    return 0;
  }
  BOOL v4 = *(os_unfair_lock_s **)(a1 + 24);

  return (uint64_t)GEOFormattedStringIsDirty(v4);
}

os_unfair_lock_s *GEONavTrayGuidanceIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    uint64_t v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEONavTrayGuidanceIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 12);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_1897DD750(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897DD9CC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEONavigabilityInfoReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    BOOL v4 = (int *)MEMORY[0x1E4F940E8];
    id v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      char v7 = (int *)MEMORY[0x1E4F940B8];
      while (1)
      {
        if (v3[*v6]) {
          goto LABEL_49;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          goto LABEL_49;
        }
        if ((v10 >> 3) == 2) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          char v18 = 0;
          unsigned int v19 = 0;
          uint64_t v20 = 0;
          *(unsigned char *)(a1 + 20) |= 2u;
          while (1)
          {
            uint64_t v21 = *v4;
            uint64_t v22 = *(void *)&v3[v21];
            unint64_t v23 = v22 + 1;
            if (v22 == -1 || v23 > *(void *)&v3[*v5])
            {
              uint64_t v26 = &OBJC_IVAR___GEONavigabilityInfo__isEvFeasible;
              goto LABEL_41;
            }
            char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
            *(void *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0) {
              break;
            }
            v18 += 7;
            BOOL v25 = v19++ > 8;
            if (v25)
            {
              uint64_t v20 = 0;
              uint64_t v26 = &OBJC_IVAR___GEONavigabilityInfo__isEvFeasible;
              goto LABEL_44;
            }
          }
          uint64_t v26 = &OBJC_IVAR___GEONavigabilityInfo__isEvFeasible;
LABEL_42:
          if (v3[*v6]) {
            uint64_t v20 = 0;
          }
LABEL_44:
          *(unsigned char *)(a1 + *v26) = v20 != 0;
          goto LABEL_45;
        }
        if (!*(void *)(a1 + 8))
        {
          id v33 = objc_alloc_init(MEMORY[0x1E4F940B0]);
          BOOL v34 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = v33;
        }
        if ((PBUnknownFieldAdd() & 1) == 0) {
          goto LABEL_50;
        }
LABEL_45:
        if (*(void *)&v3[*v4] >= *(void *)&v3[*v5]) {
          goto LABEL_49;
        }
      }
      char v27 = 0;
      unsigned int v28 = 0;
      uint64_t v20 = 0;
      *(unsigned char *)(a1 + 20) |= 1u;
      while (1)
      {
        uint64_t v29 = *v4;
        uint64_t v30 = *(void *)&v3[v29];
        unint64_t v31 = v30 + 1;
        if (v30 == -1 || v31 > *(void *)&v3[*v5]) {
          break;
        }
        char v32 = *(unsigned char *)(*(void *)&v3[*v7] + v30);
        *(void *)&v3[v29] = v31;
        v20 |= (unint64_t)(v32 & 0x7F) << v27;
        if ((v32 & 0x80) == 0)
        {
          uint64_t v26 = &OBJC_IVAR___GEONavigabilityInfo__isBlocked;
          goto LABEL_42;
        }
        v27 += 7;
        BOOL v25 = v28++ > 8;
        if (v25)
        {
          uint64_t v20 = 0;
          uint64_t v26 = &OBJC_IVAR___GEONavigabilityInfo__isBlocked;
          goto LABEL_44;
        }
      }
      uint64_t v26 = &OBJC_IVAR___GEONavigabilityInfo__isBlocked;
LABEL_41:
      v3[*v6] = 1;
      goto LABEL_42;
    }
LABEL_49:
    BOOL v35 = v3[*v6] == 0;
  }
  else
  {
LABEL_50:
    BOOL v35 = 0;
  }
  objc_sync_exit(v3);

  return v35;
}

void sub_1897DE3D0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEONavigabilityInfoReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEONavigabilityInfoReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1897DE434(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEONavigabilityInfoIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  char v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  BOOL v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    id v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_39;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      if (v14 || (v8 & 7) == 4) {
        goto LABEL_39;
      }
      if ((v8 >> 3) == 2) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_41;
        }
        unsigned int v16 = 0;
        while (1)
        {
          uint64_t v17 = *v2;
          uint64_t v18 = *(void *)&a1[v17];
          unint64_t v19 = v18 + 1;
          if (v18 == -1 || v19 > *(void *)&a1[*v3]) {
            break;
          }
          int v20 = *(char *)(*(void *)&a1[*v5] + v18);
          *(void *)&a1[v17] = v19;
          if (v20 < 0)
          {
            BOOL v21 = v16++ > 8;
            if (!v21) {
              continue;
            }
          }
          goto LABEL_38;
        }
LABEL_36:
        a1[*v4] = 1;
        goto LABEL_38;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_41:
        BOOL v27 = 0;
        goto LABEL_40;
      }
LABEL_38:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_39;
      }
    }
    if ((v8 & 7) != 0) {
      goto LABEL_41;
    }
    unsigned int v22 = 0;
    while (1)
    {
      uint64_t v23 = *v2;
      uint64_t v24 = *(void *)&a1[v23];
      unint64_t v25 = v24 + 1;
      if (v24 == -1 || v25 > *(void *)&a1[*v3]) {
        goto LABEL_36;
      }
      int v26 = *(char *)(*(void *)&a1[*v5] + v24);
      *(void *)&a1[v23] = v25;
      if (v26 < 0)
      {
        BOOL v21 = v22++ > 8;
        if (!v21) {
          continue;
        }
      }
      goto LABEL_38;
    }
  }
LABEL_39:
  BOOL v27 = a1[*v4] == 0;
LABEL_40:
  PBReaderRecallMark();
  return v27;
}

BOOL GEONoMatchReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    BOOL v4 = (int *)MEMORY[0x1E4F940E8];
    id v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_29;
          }
          uint64_t v18 = objc_alloc_init(GEOPathStretch);
          if (!GEOPathStretchReadAllFrom((uint64_t)v18, v3))
          {

            goto LABEL_29;
          }
          PBReaderRecallMark();
          unint64_t v19 = *(void **)(a1 + 16);
          *(void *)(a1 + 16) = v18;
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v20 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            BOOL v21 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v20;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_29;
          }
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v22 = v3[*v6] == 0;
  }
  else
  {
LABEL_29:
    BOOL v22 = 0;
  }
  objc_sync_exit(v3);

  return v22;
}

void sub_1897DF158(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEONoMatchReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEONoMatchReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1897DF1BC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEONoMatchIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  char v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  BOOL v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    id v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOPathStretchIsValid(a1))
        {
LABEL_27:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_27;
      }
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

BOOL GEOPathStretchIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  char v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  BOOL v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    id v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_39;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      if (v14 || (v8 & 7) == 4) {
        goto LABEL_39;
      }
      if ((v8 >> 3) == 2) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_41;
        }
        unsigned int v16 = 0;
        while (1)
        {
          uint64_t v17 = *v2;
          uint64_t v18 = *(void *)&a1[v17];
          unint64_t v19 = v18 + 1;
          if (v18 == -1 || v19 > *(void *)&a1[*v3]) {
            break;
          }
          int v20 = *(char *)(*(void *)&a1[*v5] + v18);
          *(void *)&a1[v17] = v19;
          if (v20 < 0)
          {
            BOOL v21 = v16++ > 8;
            if (!v21) {
              continue;
            }
          }
          goto LABEL_38;
        }
LABEL_36:
        a1[*v4] = 1;
        goto LABEL_38;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_41:
        BOOL v27 = 0;
        goto LABEL_40;
      }
LABEL_38:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_39;
      }
    }
    if ((v8 & 7) != 0) {
      goto LABEL_41;
    }
    unsigned int v22 = 0;
    while (1)
    {
      uint64_t v23 = *v2;
      uint64_t v24 = *(void *)&a1[v23];
      unint64_t v25 = v24 + 1;
      if (v24 == -1 || v25 > *(void *)&a1[*v3]) {
        goto LABEL_36;
      }
      int v26 = *(char *)(*(void *)&a1[*v5] + v24);
      *(void *)&a1[v23] = v25;
      if (v26 < 0)
      {
        BOOL v21 = v22++ > 8;
        if (!v21) {
          continue;
        }
      }
      goto LABEL_38;
    }
  }
LABEL_39:
  BOOL v27 = a1[*v4] == 0;
LABEL_40:
  PBReaderRecallMark();
  return v27;
}

BOOL GEONumberDataReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    BOOL v4 = (int *)MEMORY[0x1E4F940E8];
    id v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          *(unsigned char *)(a1 + 20) |= 1u;
          uint64_t v18 = *v4;
          unint64_t v19 = *(void *)&v3[v18];
          if (v19 <= 0xFFFFFFFFFFFFFFFBLL && v19 + 4 <= *(void *)&v3[*v5])
          {
            int v20 = *(_DWORD *)(*(void *)&v3[*v7] + v19);
            *(void *)&v3[v18] = v19 + 4;
          }
          else
          {
            v3[*v6] = 1;
            int v20 = 0;
          }
          *(_DWORD *)(a1 + 16) = v20;
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v21 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            unsigned int v22 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v21;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_31;
          }
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v23 = v3[*v6] == 0;
  }
  else
  {
LABEL_31:
    BOOL v23 = 0;
  }
  objc_sync_exit(v3);

  return v23;
}

void sub_1897DFFF8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEONumberDataReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEONumberDataReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1897E005C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897E078C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOOriginalRouteReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  uint64_t v7 = 0;
  uint64_t v8 = 0;
  char v9 = 0;
  uint64_t v10 = 0;
  int v11 = ((*(unsigned __int8 *)(a1 + 60) >> 4) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 2) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v10])
    {
      case -4:
        ++v11;
        uint64_t v12 = v7;
        goto LABEL_8;
      case -3:
        char v9 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_8;
      case 0:
        BOOL v14 = v11 != 0;
        char v15 = v14 & ~(_BYTE)v7;
        unsigned __int8 v16 = v14 | v7;
        char v66 = v15 | v8;
        char v67 = v16 | v15 | v8;
        if ((v16 | v9)) {
          uint64_t v17 = 0;
        }
        else {
          uint64_t v17 = a3;
        }
        uint64_t v18 = (int *)MEMORY[0x1E4F940E8];
        char v68 = (v17 == 0) | v16;
        BOOL v69 = v16;
        unint64_t v19 = (int *)MEMORY[0x1E4F940C8];
        int v20 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v11;
LABEL_7:
        uint64_t v12 = v7;
        uint64_t v13 = v8;
LABEL_8:
        ++v10;
        uint64_t v7 = v12;
        uint64_t v8 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v18) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v19)) {
      goto LABEL_83;
    }
    char v21 = 0;
    unsigned int v22 = 0;
    unint64_t v23 = 0;
    while (1)
    {
      uint64_t v24 = *v18;
      uint64_t v25 = *(void *)(v3 + v24);
      unint64_t v26 = v25 + 1;
      if (v25 == -1 || v26 > *(void *)(v3 + *v6)) {
        break;
      }
      char v27 = *(unsigned char *)(*(void *)(v3 + *v20) + v25);
      *(void *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0) {
        goto LABEL_23;
      }
      v21 += 7;
      BOOL v28 = v22++ >= 9;
      if (v28)
      {
        unint64_t v23 = 0;
        int v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_25;
      }
    }
    *(unsigned char *)(v3 + *v19) = 1;
LABEL_23:
    int v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(unsigned char *)(v3 + *v19)) {
      unint64_t v23 = 0;
    }
LABEL_25:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_83:
      int v64 = 1;
      goto LABEL_84;
    }
    unint64_t v31 = v23 >> 3;
    BOOL v32 = v69;
    if ((v68 & 1) == 0)
    {
      id v33 = v17;
      do
      {
        int v35 = *v33++;
        int v34 = v35;
        BOOL v32 = v35 != 0;
        if (v35) {
          BOOL v36 = v34 == v31;
        }
        else {
          BOOL v36 = 1;
        }
      }
      while (!v36);
    }
    switch((int)v31)
    {
      case 1:
        if ((v9 & 1) == 0) {
          goto LABEL_66;
        }
        char v37 = 0;
        unsigned int v38 = 0;
        uint64_t v39 = 0;
        *(unsigned char *)(a1 + 60) |= 1u;
        while (1)
        {
          uint64_t v40 = *v18;
          uint64_t v41 = *(void *)(v3 + v40);
          unint64_t v42 = v41 + 1;
          if (v41 == -1 || v42 > *(void *)(v3 + *v6)) {
            break;
          }
          char v43 = *(unsigned char *)(*(void *)(v3 + *v20) + v41);
          *(void *)(v3 + v40) = v42;
          v39 |= (unint64_t)(v43 & 0x7F) << v37;
          if ((v43 & 0x80) == 0) {
            goto LABEL_69;
          }
          v37 += 7;
          BOOL v28 = v38++ >= 9;
          if (v28)
          {
            LODWORD(v39) = 0;
            goto LABEL_71;
          }
        }
        *(unsigned char *)(v3 + *v19) = 1;
LABEL_69:
        if (*(unsigned char *)(v3 + *v19)) {
          LODWORD(v39) = 0;
        }
LABEL_71:
        uint64_t v57 = 52;
        goto LABEL_76;
      case 2:
        if (!v32) {
          goto LABEL_66;
        }
        if ((*(unsigned char *)(a1 + 60) & 0x10) == 0)
        {
          uint64_t v47 = PBReaderReadData();
          uint64_t v48 = 32;
          goto LABEL_57;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_103;
        }
        char v58 = 8 * *(unsigned char *)(a1 + 60);
        goto LABEL_81;
      case 3:
        if (!v32) {
          goto LABEL_66;
        }
        if ((*(unsigned char *)(a1 + 60) & 8) == 0)
        {
          uint64_t v47 = PBReaderReadData();
          uint64_t v48 = 24;
LABEL_57:
          uint64_t v49 = *(void **)(a1 + v48);
          *(void *)(a1 + v48) = v47;

          unint64_t v19 = (int *)MEMORY[0x1E4F940C8];
          --v10;
          goto LABEL_82;
        }
        if (PBReaderSkipValueWithTag())
        {
          char v58 = 16 * *(unsigned char *)(a1 + 60);
LABEL_81:
          v10 += v58 >> 7;
          unint64_t v19 = (int *)MEMORY[0x1E4F940C8];
          goto LABEL_82;
        }
LABEL_103:
        int v64 = 0;
        BOOL v65 = &OBJC_IVAR___GEOComposedRoute__visualInfosForRouteNameLabels;
        unint64_t v19 = (int *)MEMORY[0x1E4F940C8];
LABEL_85:
        if (v66) {
LABEL_86:
        }
          *(unsigned char *)(a1 + v65[630]) |= 4u;
        if (v69 || (v64 & 1) == 0)
        {
          *(unsigned char *)(a1 + v65[630]) |= 0x10u;
          *(unsigned char *)(a1 + v65[630]) |= 8u;
          goto LABEL_97;
        }
        if (v17)
        {
          while (1)
          {
            int v61 = *v17++;
            int v60 = v61;
            if (v61 == 2) {
              break;
            }
            if (v60 == 3)
            {
              char v59 = 8;
LABEL_93:
              *(unsigned char *)(a1 + v65[630]) |= v59;
            }
            else if (!v60)
            {
              goto LABEL_97;
            }
          }
          char v59 = 16;
          goto LABEL_93;
        }
LABEL_97:
        if (v64) {
          unint64_t v3 = *(unsigned char *)(v3 + *v19) == 0;
        }
        else {
          unint64_t v3 = 0;
        }
        if (v69)
        {
          char v62 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      case 4:
        if ((v9 & 1) == 0) {
          goto LABEL_66;
        }
        char v50 = 0;
        unsigned int v51 = 0;
        uint64_t v39 = 0;
        *(unsigned char *)(a1 + 60) |= 2u;
        while (2)
        {
          uint64_t v52 = *v18;
          uint64_t v53 = *(void *)(v3 + v52);
          unint64_t v54 = v53 + 1;
          if (v53 == -1 || v54 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v19) = 1;
          }
          else
          {
            char v55 = *(unsigned char *)(*(void *)(v3 + *v20) + v53);
            *(void *)(v3 + v52) = v54;
            v39 |= (unint64_t)(v55 & 0x7F) << v50;
            if (v55 < 0)
            {
              v50 += 7;
              BOOL v28 = v51++ >= 9;
              if (v28)
              {
                LODWORD(v39) = 0;
                goto LABEL_75;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v19)) {
          LODWORD(v39) = 0;
        }
LABEL_75:
        uint64_t v57 = 56;
LABEL_76:
        *(_DWORD *)(a1 + v57) = v39;
        goto LABEL_82;
      default:
        if ((v66 & 1) == 0 || (*(unsigned char *)(a1 + 60) & 4) != 0)
        {
LABEL_66:
          char v56 = PBReaderSkipValueWithTag();
          unint64_t v19 = (int *)MEMORY[0x1E4F940C8];
          if ((v56 & 1) == 0)
          {
            int v64 = 0;
LABEL_84:
            BOOL v65 = &OBJC_IVAR___GEOComposedRoute__visualInfosForRouteNameLabels;
            goto LABEL_85;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v44 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            char v45 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v44;
          }
          int v46 = PBUnknownFieldAdd();
          unint64_t v19 = (int *)MEMORY[0x1E4F940C8];
          if (!v46)
          {
            int v64 = 0;
            BOOL v65 = &OBJC_IVAR___GEOComposedRoute__visualInfosForRouteNameLabels;
            goto LABEL_86;
          }
        }
LABEL_82:
        if (!(v67 & 1 | (v10 != 0))) {
          goto LABEL_83;
        }
        continue;
    }
  }
}

void sub_1897E0F90(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897E180C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOOriginalRouteReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOOriginalRouteReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    char v9 = (int *)&GEOOriginalRouteReadAllFrom_recursiveTag;
  }
  else {
    char v9 = (int *)&GEOOriginalRouteReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOOriginalRouteReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_1897E1998(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOOriginalRouteReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOOriginalRouteReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1897E19FC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOOriginalRouteIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  char v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  BOOL v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    id v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_44;
          }
          unsigned int v17 = 0;
          while (1)
          {
            uint64_t v18 = *v2;
            uint64_t v19 = *(void *)&a1[v18];
            unint64_t v20 = v19 + 1;
            if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
              goto LABEL_40;
            }
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if (v21 < 0)
            {
              BOOL v22 = v17++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_41;
          }
        case 2u:
          if (v15 == 2) {
            goto LABEL_30;
          }
          goto LABEL_44;
        case 3u:
          if (v15 == 2) {
            goto LABEL_30;
          }
          goto LABEL_44;
        case 4u:
          if ((v8 & 7) != 0) {
            goto LABEL_44;
          }
          unsigned int v23 = 0;
          break;
        default:
LABEL_30:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_44:
          BOOL v28 = 0;
          goto LABEL_43;
      }
      while (1)
      {
        uint64_t v24 = *v2;
        uint64_t v25 = *(void *)&a1[v24];
        unint64_t v26 = v25 + 1;
        if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
          break;
        }
        int v27 = *(char *)(*(void *)&a1[*v5] + v25);
        *(void *)&a1[v24] = v26;
        if (v27 < 0)
        {
          BOOL v22 = v23++ > 8;
          if (!v22) {
            continue;
          }
        }
        goto LABEL_41;
      }
LABEL_40:
      a1[*v4] = 1;
LABEL_41:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v28 = a1[*v4] == 0;
LABEL_43:
  PBReaderRecallMark();
  return v28;
}

void sub_1897E1E7C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOOriginalRouteIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  BOOL v2 = (*(unsigned char *)(a1 + 60) & 0x38) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return v2;
}

void sub_1897E2204(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897E2574(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897E2818(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOOriginalRouteLegReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 80));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 76);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 72)];
  unsigned int v7 = v6;
  uint64_t v8 = 0;
  char v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  uint64_t v12 = 0;
  unsigned int v13 = (vaddv_s16((int16x4_t)(*(void *)&vshl_u16((uint16x4_t)(*(void *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 84)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFCFFFDFFFAFFFBLL) & 0xFF01FF01FF01FF01))+ ((*(unsigned char *)(a1 + 84) & 4) != 0)+ ((*(unsigned char *)(a1 + 84) & 2) != 0));
  while (2)
  {
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    uint64_t v16 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v13;
        goto LABEL_8;
      case -3:
        char v9 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v15 = v11;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v17 = v13 > 3;
        char v18 = v17 & ~(_BYTE)v12 | v10;
        unsigned __int8 v19 = v17 | v12;
        char v63 = v18;
        char v64 = v19 | v18;
        if ((v19 | v9)) {
          unint64_t v20 = 0;
        }
        else {
          unint64_t v20 = a3;
        }
        char v65 = (v20 == 0) | v19;
        BOOL v66 = v19;
        int v21 = (int *)MEMORY[0x1E4F940E8];
        BOOL v22 = (int *)MEMORY[0x1E4F940C8];
        unsigned int v23 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v13;
LABEL_7:
        uint64_t v14 = v10;
LABEL_8:
        uint64_t v15 = v11;
        uint64_t v16 = v12;
LABEL_10:
        ++v8;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        uint64_t v12 = v16;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v21) >= *(void *)(v3 + *v7) || *(unsigned char *)(v3 + *v22)) {
      goto LABEL_96;
    }
    char v24 = 0;
    unsigned int v25 = 0;
    unint64_t v26 = 0;
    while (1)
    {
      uint64_t v27 = *v21;
      uint64_t v28 = *(void *)(v3 + v27);
      unint64_t v29 = v28 + 1;
      if (v28 == -1 || v29 > *(void *)(v3 + *v7)) {
        break;
      }
      char v30 = *(unsigned char *)(*(void *)(v3 + *v23) + v28);
      *(void *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0) {
        goto LABEL_25;
      }
      v24 += 7;
      BOOL v31 = v25++ >= 9;
      if (v31)
      {
        unint64_t v26 = 0;
        int v32 = *(unsigned __int8 *)(v3 + *v22);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v22) = 1;
LABEL_25:
    int v32 = *(unsigned __int8 *)(v3 + *v22);
    if (*(unsigned char *)(v3 + *v22)) {
      unint64_t v26 = 0;
    }
LABEL_27:
    if (v32 || (v26 & 7) == 4)
    {
LABEL_96:
      int v61 = 1;
      goto LABEL_97;
    }
    unint64_t v34 = v26 >> 3;
    BOOL v35 = v66;
    if ((v65 & 1) == 0)
    {
      BOOL v36 = v20;
      do
      {
        int v38 = *v36++;
        int v37 = v38;
        BOOL v35 = v38 != 0;
        if (v38) {
          BOOL v39 = v37 == v34;
        }
        else {
          BOOL v39 = 1;
        }
      }
      while (!v39);
    }
    switch((int)v34)
    {
      case 1:
        if (!v35) {
          goto LABEL_77;
        }
        if ((*(unsigned char *)(a1 + 84) & 0x40) == 0)
        {
          uint64_t v40 = PBReaderReadData();
          uint64_t v41 = 64;
          goto LABEL_67;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_115;
        }
        char v56 = 2 * *(unsigned char *)(a1 + 84);
        goto LABEL_93;
      case 2:
        if (!v35) {
          goto LABEL_77;
        }
        if ((*(unsigned char *)(a1 + 84) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_115;
          }
          char v56 = 16 * *(unsigned char *)(a1 + 84);
          goto LABEL_93;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_115;
        }
        char v45 = objc_alloc_init(GEOEVStateInfo);
        if (!GEOEVStateInfoReadAllFrom((uint64_t)v45, (void *)v3)) {
          goto LABEL_114;
        }
        PBReaderRecallMark();
        uint64_t v46 = 40;
        goto LABEL_63;
      case 3:
        if (!v35) {
          goto LABEL_77;
        }
        if ((*(unsigned char *)(a1 + 84) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_115;
          }
          char v56 = 8 * *(unsigned char *)(a1 + 84);
          goto LABEL_93;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_115;
        }
        char v45 = objc_alloc_init(GEOWaypointInfo);
        if (!GEOWaypointInfoReadAllFrom((uint64_t)v45, (void *)v3, v11 & 1)) {
          goto LABEL_114;
        }
        PBReaderRecallMark();
        uint64_t v46 = 48;
        goto LABEL_63;
      case 4:
        if (!v35) {
          goto LABEL_77;
        }
        if ((*(unsigned char *)(a1 + 84) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_115;
          }
          char v56 = 32 * *(unsigned char *)(a1 + 84);
LABEL_93:
          v8 += v56 >> 7;
LABEL_94:
          BOOL v22 = (int *)MEMORY[0x1E4F940C8];
          unsigned int v7 = (int *)MEMORY[0x1E4F940E0];
LABEL_95:
          if (!(v64 & 1 | (v8 != 0))) {
            goto LABEL_96;
          }
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_115;
        }
        char v45 = objc_alloc_init(GEOWaypointInfo);
        if (GEOWaypointInfoReadAllFrom((uint64_t)v45, (void *)v3, v11 & 1))
        {
          PBReaderRecallMark();
          uint64_t v46 = 24;
LABEL_63:
          uint64_t v47 = *(void **)(a1 + v46);
          *(void *)(a1 + v46) = v45;
LABEL_68:

          --v8;
          goto LABEL_94;
        }
LABEL_114:

LABEL_115:
        int v61 = 0;
        BOOL v22 = (int *)MEMORY[0x1E4F940C8];
LABEL_97:
        char v62 = &OBJC_IVAR___GEOActiveTileGroup__textureChecksums;
        if (v63) {
LABEL_98:
        }
          *(unsigned char *)(a1 + v62[654]) |= 2u;
        if (v66 || (v61 & 1) == 0)
        {
          *(unsigned char *)(a1 + v62[654]) |= 0x40u;
          *(unsigned char *)(a1 + v62[654]) |= 0x20u;
          *(unsigned char *)(a1 + v62[654]) |= 8u;
          *(unsigned char *)(a1 + v62[654]) |= 0x10u;
          *(unsigned char *)(a1 + v62[654]) |= 4u;
        }
        else if (v20)
        {
          while (1)
          {
            int v57 = *v20++;
            char v58 = 64;
            switch(v57)
            {
              case 0:
                goto LABEL_108;
              case 1:
                goto LABEL_107;
              case 2:
                char v58 = 8;
                goto LABEL_107;
              case 3:
                char v58 = 16;
                goto LABEL_107;
              case 4:
                char v58 = 4;
                goto LABEL_107;
              case 5:
                char v58 = 32;
LABEL_107:
                *(unsigned char *)(a1 + v62[654]) |= v58;
                break;
              default:
                continue;
            }
          }
        }
LABEL_108:
        if (v61) {
          unint64_t v3 = *(unsigned char *)(v3 + *v22) == 0;
        }
        else {
          unint64_t v3 = 0;
        }
        if (v66)
        {
          char v59 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      case 5:
        if (!v35) {
          goto LABEL_77;
        }
        if ((*(unsigned char *)(a1 + 84) & 0x20) == 0)
        {
          uint64_t v40 = PBReaderReadData();
          uint64_t v41 = 56;
LABEL_67:
          uint64_t v47 = *(void **)(a1 + v41);
          *(void *)(a1 + v41) = v40;
          goto LABEL_68;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_115;
        }
        char v56 = 4 * *(unsigned char *)(a1 + 84);
        goto LABEL_93;
      case 6:
        if ((v9 & 1) == 0) {
          goto LABEL_77;
        }
        char v48 = 0;
        unsigned int v49 = 0;
        uint64_t v50 = 0;
        *(unsigned char *)(a1 + 84) |= 1u;
        while (2)
        {
          uint64_t v51 = *v21;
          uint64_t v52 = *(void *)(v3 + v51);
          unint64_t v53 = v52 + 1;
          if (v52 == -1 || v53 > *(void *)(v3 + *v7))
          {
            *(unsigned char *)(v3 + *v22) = 1;
          }
          else
          {
            char v54 = *(unsigned char *)(*(void *)(v3 + *v23) + v52);
            *(void *)(v3 + v51) = v53;
            v50 |= (unint64_t)(v54 & 0x7F) << v48;
            if (v54 < 0)
            {
              v48 += 7;
              BOOL v31 = v49++ >= 9;
              if (v31)
              {
                uint64_t v50 = 0;
                goto LABEL_82;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v22)) {
          uint64_t v50 = 0;
        }
LABEL_82:
        *(void *)(a1 + 32) = v50;
        goto LABEL_95;
      default:
        if ((v63 & 1) == 0 || (*(unsigned char *)(a1 + 84) & 2) != 0)
        {
LABEL_77:
          char v55 = PBReaderSkipValueWithTag();
          unsigned int v7 = (int *)MEMORY[0x1E4F940E0];
          BOOL v22 = (int *)MEMORY[0x1E4F940C8];
          if ((v55 & 1) == 0)
          {
            int v61 = 0;
            goto LABEL_97;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v42 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            char v43 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v42;
          }
          int v44 = PBUnknownFieldAdd();
          BOOL v22 = (int *)MEMORY[0x1E4F940C8];
          unsigned int v7 = (int *)MEMORY[0x1E4F940E0];
          if (!v44)
          {
            int v61 = 0;
            char v62 = &OBJC_IVAR___GEOActiveTileGroup__textureChecksums;
            goto LABEL_98;
          }
        }
        goto LABEL_95;
    }
  }
}

void sub_1897E31E4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897E3354(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897E34C0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897E3630(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897E4050(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOOriginalRouteLegReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 76))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOOriginalRouteLegReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 80));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 72) = [v8 position];
  *(_DWORD *)(a1 + 76) = [v8 length];
  if (a3) {
    char v9 = (int *)&GEOOriginalRouteLegReadAllFrom_recursiveTag;
  }
  else {
    char v9 = (int *)&GEOOriginalRouteLegReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOOriginalRouteLegReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    [*(id *)(a1 + 40) readAll:1];
    [*(id *)(a1 + 48) readAll:1];
    [*(id *)(a1 + 24) readAll:1];
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 80));
  return Specified;
}

void sub_1897E421C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOOriginalRouteLegReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOOriginalRouteLegReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1897E4280(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOOriginalRouteLegIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  BOOL v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    id v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 != 2) {
            goto LABEL_43;
          }
          goto LABEL_30;
        case 2u:
          if (v15 == 2 && PBReaderPlaceMark() && GEOEVStateInfoIsValid(a1)) {
            goto LABEL_28;
          }
          goto LABEL_43;
        case 3u:
        case 4u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOWaypointInfoIsValid(a1)) {
            goto LABEL_43;
          }
LABEL_28:
          PBReaderRecallMark();
          continue;
        case 5u:
          if (v15 == 2) {
            goto LABEL_30;
          }
          goto LABEL_43;
        case 6u:
          if ((v8 & 7) != 0) {
            goto LABEL_43;
          }
          unsigned int v17 = 0;
          break;
        default:
LABEL_30:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_43:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        uint64_t v18 = *v2;
        uint64_t v19 = *(void *)&a1[v18];
        unint64_t v20 = v19 + 1;
        if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
          break;
        }
        int v21 = *(char *)(*(void *)&a1[*v5] + v19);
        *(void *)&a1[v18] = v20;
        if (v21 < 0 && v17++ <= 8) {
          continue;
        }
        goto LABEL_31;
      }
      a1[*v4] = 1;
LABEL_31:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v23 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v23;
}

BOOL GEOWaypointInfoIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  BOOL v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    id v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_73;
          }
          unsigned int v17 = 0;
          while (1)
          {
            uint64_t v18 = *v2;
            uint64_t v19 = *(void *)&a1[v18];
            unint64_t v20 = v19 + 1;
            if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
              goto LABEL_58;
            }
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if (v21 < 0)
            {
              BOOL v22 = v17++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_71;
          }
        case 2u:
          if (v15 == 2) {
            goto LABEL_28;
          }
          goto LABEL_73;
        case 3u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOLatLngIsValid(a1)) {
            goto LABEL_73;
          }
          goto LABEL_70;
        case 4u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOStyleAttributesIsValid(a1)) {
            goto LABEL_73;
          }
          goto LABEL_70;
        case 5u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPBTransitArtworkIsValid(a1)) {
            goto LABEL_73;
          }
          goto LABEL_70;
        case 6u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOEVChargingInfoIsValid(a1)) {
            goto LABEL_73;
          }
          goto LABEL_70;
        case 7u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOARInfoIsValid(a1)) {
            goto LABEL_73;
          }
          goto LABEL_70;
        case 8u:
          if ((v8 & 7) != 0) {
            goto LABEL_73;
          }
          unsigned int v23 = 0;
          break;
        case 9u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOAddressIsValid(a1)) {
            goto LABEL_73;
          }
          goto LABEL_70;
        case 0xAu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDSearchClientBehaviorIsValid(a1)) {
            goto LABEL_73;
          }
          goto LABEL_70;
        case 0xBu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOFormattedStringIsValid(a1)) {
            goto LABEL_73;
          }
LABEL_70:
          PBReaderRecallMark();
          continue;
        default:
LABEL_28:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_73:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        uint64_t v24 = *v2;
        uint64_t v25 = *(void *)&a1[v24];
        unint64_t v26 = v25 + 1;
        if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
          break;
        }
        int v27 = *(char *)(*(void *)&a1[*v5] + v25);
        *(void *)&a1[v24] = v26;
        if (v27 < 0)
        {
          BOOL v22 = v23++ > 8;
          if (!v22) {
            continue;
          }
        }
        goto LABEL_71;
      }
LABEL_58:
      a1[*v4] = 1;
LABEL_71:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v28 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v28;
}

void sub_1897E4B68(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOOriginalRouteLegIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 80));
  char v2 = *(unsigned char *)(a1 + 84);
  if ((v2 & 0xE8) != 0) {
    return 1;
  }
  if ((*(unsigned char *)(a1 + 84) & 0x10) != 0)
  {
    if (GEOWaypointInfoIsDirty(*(os_unfair_lock_s **)(a1 + 48))) {
      return 1;
    }
    char v2 = *(unsigned char *)(a1 + 84);
  }
  if ((v2 & 4) == 0) {
    return 0;
  }
  BOOL v4 = *(os_unfair_lock_s **)(a1 + 24);

  return (uint64_t)GEOWaypointInfoIsDirty(v4);
}

os_unfair_lock_s *GEOOriginalRouteLegIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    uint64_t v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOOriginalRouteLegIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 20);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_1897E503C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897E545C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOOriginalWaypointRouteReadAllFrom(uint64_t a1, void *a2, int a3)
{
  id v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    char v6 = (int *)MEMORY[0x1E4F940E8];
    unsigned int v7 = (int *)MEMORY[0x1E4F940E0];
    unint64_t v8 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v5[*MEMORY[0x1E4F940E8]] < *(void *)&v5[*MEMORY[0x1E4F940E0]])
    {
      uint64_t v9 = (int *)MEMORY[0x1E4F940B8];
      while (!v5[*v8])
      {
        char v10 = 0;
        unsigned int v11 = 0;
        unint64_t v12 = 0;
        while (1)
        {
          uint64_t v13 = *v6;
          uint64_t v14 = *(void *)&v5[v13];
          unint64_t v15 = v14 + 1;
          if (v14 == -1 || v15 > *(void *)&v5[*v7]) {
            break;
          }
          char v16 = *(unsigned char *)(*(void *)&v5[*v9] + v14);
          *(void *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0) {
            goto LABEL_13;
          }
          v10 += 7;
          BOOL v17 = v11++ >= 9;
          if (v17)
          {
            unint64_t v12 = 0;
            int v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        int v18 = v5[*v8];
        if (v5[*v8]) {
          unint64_t v12 = 0;
        }
LABEL_15:
        if (v18 || (v12 & 7) == 4) {
          break;
        }
        switch((v12 >> 3))
        {
          case 1u:
            char v20 = 0;
            unsigned int v21 = 0;
            uint64_t v22 = 0;
            *(unsigned char *)(a1 + 44) |= 2u;
            while (1)
            {
              uint64_t v23 = *v6;
              uint64_t v24 = *(void *)&v5[v23];
              unint64_t v25 = v24 + 1;
              if (v24 == -1 || v25 > *(void *)&v5[*v7]) {
                break;
              }
              char v26 = *(unsigned char *)(*(void *)&v5[*v9] + v24);
              *(void *)&v5[v23] = v25;
              v22 |= (unint64_t)(v26 & 0x7F) << v20;
              if ((v26 & 0x80) == 0) {
                goto LABEL_63;
              }
              v20 += 7;
              BOOL v17 = v21++ >= 9;
              if (v17)
              {
                LODWORD(v22) = 0;
                goto LABEL_65;
              }
            }
            v5[*v8] = 1;
LABEL_63:
            if (v5[*v8]) {
              LODWORD(v22) = 0;
            }
LABEL_65:
            uint64_t v54 = 28;
            goto LABEL_82;
          case 2u:
            if ((PBReaderPlaceMark() & 1) == 0) {
              goto LABEL_86;
            }
            unint64_t v29 = objc_alloc_init(GEOOriginalRouteLeg);
            if (!GEOOriginalRouteLegReadAllFrom((uint64_t)v29, v5, a3))
            {

              goto LABEL_86;
            }
            PBReaderRecallMark();
            objc_msgSend((id)a1, "addRouteLeg:", v29, 0, 0);

LABEL_83:
            if (*(void *)&v5[*v6] >= *(void *)&v5[*v7]) {
              goto LABEL_84;
            }
            break;
          case 3u:
            char v30 = 0;
            unsigned int v31 = 0;
            uint64_t v22 = 0;
            *(unsigned char *)(a1 + 44) |= 8u;
            while (2)
            {
              uint64_t v32 = *v6;
              uint64_t v33 = *(void *)&v5[v32];
              unint64_t v34 = v33 + 1;
              if (v33 == -1 || v34 > *(void *)&v5[*v7])
              {
                v5[*v8] = 1;
              }
              else
              {
                char v35 = *(unsigned char *)(*(void *)&v5[*v9] + v33);
                *(void *)&v5[v32] = v34;
                v22 |= (unint64_t)(v35 & 0x7F) << v30;
                if (v35 < 0)
                {
                  v30 += 7;
                  BOOL v17 = v31++ >= 9;
                  if (v17)
                  {
                    LODWORD(v22) = 0;
                    goto LABEL_69;
                  }
                  continue;
                }
              }
              break;
            }
            if (v5[*v8]) {
              LODWORD(v22) = 0;
            }
LABEL_69:
            uint64_t v54 = 36;
            goto LABEL_82;
          case 4u:
            char v36 = 0;
            unsigned int v37 = 0;
            uint64_t v22 = 0;
            *(unsigned char *)(a1 + 44) |= 0x10u;
            while (2)
            {
              uint64_t v38 = *v6;
              uint64_t v39 = *(void *)&v5[v38];
              unint64_t v40 = v39 + 1;
              if (v39 == -1 || v40 > *(void *)&v5[*v7])
              {
                v5[*v8] = 1;
              }
              else
              {
                char v41 = *(unsigned char *)(*(void *)&v5[*v9] + v39);
                *(void *)&v5[v38] = v40;
                v22 |= (unint64_t)(v41 & 0x7F) << v36;
                if (v41 < 0)
                {
                  v36 += 7;
                  BOOL v17 = v37++ >= 9;
                  if (v17)
                  {
                    LODWORD(v22) = 0;
                    goto LABEL_73;
                  }
                  continue;
                }
              }
              break;
            }
            if (v5[*v8]) {
              LODWORD(v22) = 0;
            }
LABEL_73:
            uint64_t v54 = 40;
            goto LABEL_82;
          case 5u:
            char v42 = 0;
            unsigned int v43 = 0;
            uint64_t v22 = 0;
            *(unsigned char *)(a1 + 44) |= 4u;
            while (2)
            {
              uint64_t v44 = *v6;
              uint64_t v45 = *(void *)&v5[v44];
              unint64_t v46 = v45 + 1;
              if (v45 == -1 || v46 > *(void *)&v5[*v7])
              {
                v5[*v8] = 1;
              }
              else
              {
                char v47 = *(unsigned char *)(*(void *)&v5[*v9] + v45);
                *(void *)&v5[v44] = v46;
                v22 |= (unint64_t)(v47 & 0x7F) << v42;
                if (v47 < 0)
                {
                  v42 += 7;
                  BOOL v17 = v43++ >= 9;
                  if (v17)
                  {
                    LODWORD(v22) = 0;
                    goto LABEL_77;
                  }
                  continue;
                }
              }
              break;
            }
            if (v5[*v8]) {
              LODWORD(v22) = 0;
            }
LABEL_77:
            uint64_t v54 = 32;
            goto LABEL_82;
          case 6u:
            char v48 = 0;
            unsigned int v49 = 0;
            uint64_t v22 = 0;
            *(unsigned char *)(a1 + 44) |= 1u;
            while (2)
            {
              uint64_t v50 = *v6;
              uint64_t v51 = *(void *)&v5[v50];
              unint64_t v52 = v51 + 1;
              if (v51 == -1 || v52 > *(void *)&v5[*v7])
              {
                v5[*v8] = 1;
              }
              else
              {
                char v53 = *(unsigned char *)(*(void *)&v5[*v9] + v51);
                *(void *)&v5[v50] = v52;
                v22 |= (unint64_t)(v53 & 0x7F) << v48;
                if (v53 < 0)
                {
                  v48 += 7;
                  BOOL v17 = v49++ >= 9;
                  if (v17)
                  {
                    LODWORD(v22) = 0;
                    goto LABEL_81;
                  }
                  continue;
                }
              }
              break;
            }
            if (v5[*v8]) {
              LODWORD(v22) = 0;
            }
LABEL_81:
            uint64_t v54 = 24;
LABEL_82:
            *(_DWORD *)(a1 + v54) = v22;
            goto LABEL_83;
          default:
            if (!*(void *)(a1 + 8))
            {
              id v27 = objc_alloc_init(MEMORY[0x1E4F940B0]);
              BOOL v28 = *(void **)(a1 + 8);
              *(void *)(a1 + 8) = v27;
            }
            if (!PBUnknownFieldAdd()) {
              goto LABEL_86;
            }
            goto LABEL_83;
        }
      }
    }
LABEL_84:
    BOOL v55 = v5[*v8] == 0;
  }
  else
  {
LABEL_86:
    BOOL v55 = 0;
  }
  objc_sync_exit(v5);

  return v55;
}

void sub_1897E6ED4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOOriginalWaypointRouteReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOOriginalWaypointRouteReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1897E6F50(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOOriginalWaypointRouteIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  char v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  BOOL v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    id v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_69;
          }
          unsigned int v17 = 0;
          while (1)
          {
            uint64_t v18 = *v2;
            uint64_t v19 = *(void *)&a1[v18];
            unint64_t v20 = v19 + 1;
            if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
              goto LABEL_65;
            }
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if (v21 < 0)
            {
              BOOL v22 = v17++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_66;
          }
        case 2u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOOriginalRouteLegIsValid(a1)) {
            goto LABEL_69;
          }
          PBReaderRecallMark();
          continue;
        case 3u:
          if ((v8 & 7) != 0) {
            goto LABEL_69;
          }
          unsigned int v23 = 0;
          while (1)
          {
            uint64_t v24 = *v2;
            uint64_t v25 = *(void *)&a1[v24];
            unint64_t v26 = v25 + 1;
            if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
              goto LABEL_65;
            }
            int v27 = *(char *)(*(void *)&a1[*v5] + v25);
            *(void *)&a1[v24] = v26;
            if (v27 < 0)
            {
              BOOL v22 = v23++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_66;
          }
        case 4u:
          if ((v8 & 7) != 0) {
            goto LABEL_69;
          }
          unsigned int v28 = 0;
          while (1)
          {
            uint64_t v29 = *v2;
            uint64_t v30 = *(void *)&a1[v29];
            unint64_t v31 = v30 + 1;
            if (v30 == -1 || v31 > *(void *)&a1[*v3]) {
              goto LABEL_65;
            }
            int v32 = *(char *)(*(void *)&a1[*v5] + v30);
            *(void *)&a1[v29] = v31;
            if (v32 < 0)
            {
              BOOL v22 = v28++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_66;
          }
        case 5u:
          if ((v8 & 7) != 0) {
            goto LABEL_69;
          }
          unsigned int v33 = 0;
          while (1)
          {
            uint64_t v34 = *v2;
            uint64_t v35 = *(void *)&a1[v34];
            unint64_t v36 = v35 + 1;
            if (v35 == -1 || v36 > *(void *)&a1[*v3]) {
              goto LABEL_65;
            }
            int v37 = *(char *)(*(void *)&a1[*v5] + v35);
            *(void *)&a1[v34] = v36;
            if (v37 < 0)
            {
              BOOL v22 = v33++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_66;
          }
        case 6u:
          if ((v8 & 7) != 0) {
            goto LABEL_69;
          }
          unsigned int v38 = 0;
          break;
        default:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_69:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        uint64_t v39 = *v2;
        uint64_t v40 = *(void *)&a1[v39];
        unint64_t v41 = v40 + 1;
        if (v40 == -1 || v41 > *(void *)&a1[*v3]) {
          break;
        }
        int v42 = *(char *)(*(void *)&a1[*v5] + v40);
        *(void *)&a1[v39] = v41;
        if (v42 < 0)
        {
          BOOL v22 = v38++ > 8;
          if (!v22) {
            continue;
          }
        }
        goto LABEL_66;
      }
LABEL_65:
      a1[*v4] = 1;
LABEL_66:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v43 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v43;
}

BOOL GEOOutOfMapsAlertsInfoReadAllFrom(uint64_t a1, void *a2, int a3)
{
  id v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    char v6 = (int *)MEMORY[0x1E4F940E8];
    unsigned int v7 = (int *)MEMORY[0x1E4F940E0];
    unint64_t v8 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v5[*MEMORY[0x1E4F940E8]] < *(void *)&v5[*MEMORY[0x1E4F940E0]])
    {
      uint64_t v9 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v5[*v8]) {
          break;
        }
        char v10 = 0;
        unsigned int v11 = 0;
        unint64_t v12 = 0;
        while (1)
        {
          uint64_t v13 = *v6;
          uint64_t v14 = *(void *)&v5[v13];
          unint64_t v15 = v14 + 1;
          if (v14 == -1 || v15 > *(void *)&v5[*v7]) {
            break;
          }
          char v16 = *(unsigned char *)(*(void *)&v5[*v9] + v14);
          *(void *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0) {
            goto LABEL_13;
          }
          v10 += 7;
          if (v11++ >= 9)
          {
            unint64_t v12 = 0;
            int v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        int v18 = v5[*v8];
        if (v5[*v8]) {
          unint64_t v12 = 0;
        }
LABEL_15:
        if (v18 || (v12 & 7) == 4) {
          break;
        }
        if ((v12 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_29;
          }
          unint64_t v20 = objc_alloc_init(GEOAlertNonRecommendedRouteText);
          if (!GEOAlertNonRecommendedRouteTextReadAllFrom((uint64_t)v20, v5, a3))
          {

            goto LABEL_29;
          }
          PBReaderRecallMark();
          int v21 = *(void **)(a1 + 16);
          *(void *)(a1 + 16) = v20;
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v22 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            unsigned int v23 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v22;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_29;
          }
        }
      }
      while (*(void *)&v5[*v6] < *(void *)&v5[*v7]);
    }
    BOOL v24 = v5[*v8] == 0;
  }
  else
  {
LABEL_29:
    BOOL v24 = 0;
  }
  objc_sync_exit(v5);

  return v24;
}

void sub_1897E860C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOOutOfMapsAlertsInfoReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOOutOfMapsAlertsInfoReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1897E8670(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOOutOfMapsAlertsInfoIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  char v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  BOOL v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    id v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOAlertNonRecommendedRouteTextIsValid(a1))
        {
LABEL_27:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_27;
      }
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

void sub_1897E91FC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPBTransitArtworkReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 68);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 64)];
  unsigned int v7 = v6;
  uint64_t v8 = 0;
  char v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  uint64_t v12 = 0;
  unsigned int v13 = (unsigned __int16)(vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int16 *)(a1 + 88)), (uint16x4_t)0xFFFCFFFBFFF8FFFALL), (int8x8_t)0x1000100010001))+ ((*(_WORD *)(a1 + 88) >> 7) & 1)+ ((*(_WORD *)(a1 + 88) >> 3) & 1));
  while (2)
  {
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    uint64_t v16 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v13;
        goto LABEL_8;
      case -3:
        char v9 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v15 = v11;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v17 = v13 > 3;
        char v18 = v17 & ~(_BYTE)v12 | v10;
        unsigned __int8 v19 = v17 | v12;
        char v74 = v18;
        char v75 = v19 | v18;
        if ((v19 | v9)) {
          unint64_t v20 = 0;
        }
        else {
          unint64_t v20 = a3;
        }
        char v76 = (v20 == 0) | v19;
        BOOL v77 = v19;
        int v21 = (int *)MEMORY[0x1E4F940E8];
        id v22 = (int *)MEMORY[0x1E4F940C8];
        unsigned int v23 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v13;
LABEL_7:
        uint64_t v14 = v10;
LABEL_8:
        uint64_t v15 = v11;
        uint64_t v16 = v12;
LABEL_10:
        ++v8;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        uint64_t v12 = v16;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v21) >= *(void *)(v3 + *v7) || *(unsigned char *)(v3 + *v22)) {
      goto LABEL_122;
    }
    char v24 = 0;
    unsigned int v25 = 0;
    unint64_t v26 = 0;
    while (1)
    {
      uint64_t v27 = *v21;
      uint64_t v28 = *(void *)(v3 + v27);
      unint64_t v29 = v28 + 1;
      if (v28 == -1 || v29 > *(void *)(v3 + *v7)) {
        break;
      }
      char v30 = *(unsigned char *)(*(void *)(v3 + *v23) + v28);
      *(void *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0) {
        goto LABEL_25;
      }
      v24 += 7;
      BOOL v31 = v25++ >= 9;
      if (v31)
      {
        unint64_t v26 = 0;
        int v32 = *(unsigned __int8 *)(v3 + *v22);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v22) = 1;
LABEL_25:
    int v32 = *(unsigned __int8 *)(v3 + *v22);
    if (*(unsigned char *)(v3 + *v22)) {
      unint64_t v26 = 0;
    }
LABEL_27:
    if (v32 || (v26 & 7) == 4)
    {
LABEL_122:
      int v73 = 1;
      goto LABEL_123;
    }
    unint64_t v34 = v26 >> 3;
    BOOL v35 = v77;
    if ((v76 & 1) == 0)
    {
      unint64_t v36 = v20;
      do
      {
        int v38 = *v36++;
        int v37 = v38;
        BOOL v35 = v38 != 0;
        if (v38) {
          BOOL v39 = v37 == v34;
        }
        else {
          BOOL v39 = 1;
        }
      }
      while (!v39);
    }
    switch((int)v34)
    {
      case 1:
        if ((v9 & 1) == 0) {
          goto LABEL_94;
        }
        char v40 = 0;
        unsigned int v41 = 0;
        uint64_t v42 = 0;
        *(_WORD *)(a1 + 88) |= 1u;
        while (1)
        {
          uint64_t v43 = *v21;
          uint64_t v44 = *(void *)(v3 + v43);
          unint64_t v45 = v44 + 1;
          if (v44 == -1 || v45 > *(void *)(v3 + *v7)) {
            break;
          }
          char v46 = *(unsigned char *)(*(void *)(v3 + *v23) + v44);
          *(void *)(v3 + v43) = v45;
          v42 |= (unint64_t)(v46 & 0x7F) << v40;
          if ((v46 & 0x80) == 0) {
            goto LABEL_97;
          }
          v40 += 7;
          BOOL v31 = v41++ >= 9;
          if (v31)
          {
            LODWORD(v42) = 0;
            goto LABEL_99;
          }
        }
        *(unsigned char *)(v3 + *v22) = 1;
LABEL_97:
        if (*(unsigned char *)(v3 + *v22)) {
          LODWORD(v42) = 0;
        }
LABEL_99:
        uint64_t v67 = 76;
        goto LABEL_108;
      case 2:
        if ((v9 & 1) == 0) {
          goto LABEL_94;
        }
        char v47 = 0;
        unsigned int v48 = 0;
        uint64_t v42 = 0;
        *(_WORD *)(a1 + 88) |= 2u;
        while (2)
        {
          uint64_t v49 = *v21;
          uint64_t v50 = *(void *)(v3 + v49);
          unint64_t v51 = v50 + 1;
          if (v50 == -1 || v51 > *(void *)(v3 + *v7))
          {
            *(unsigned char *)(v3 + *v22) = 1;
          }
          else
          {
            char v52 = *(unsigned char *)(*(void *)(v3 + *v23) + v50);
            *(void *)(v3 + v49) = v51;
            v42 |= (unint64_t)(v52 & 0x7F) << v47;
            if (v52 < 0)
            {
              v47 += 7;
              BOOL v31 = v48++ >= 9;
              if (v31)
              {
                LODWORD(v42) = 0;
                goto LABEL_103;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v22)) {
          LODWORD(v42) = 0;
        }
LABEL_103:
        uint64_t v67 = 80;
        goto LABEL_108;
      case 10:
        if (!v35) {
          goto LABEL_94;
        }
        if ((*(_WORD *)(a1 + 88) & 0x100) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_141;
          }
          __int16 v68 = *(_WORD *)(a1 + 88) << 7;
          goto LABEL_119;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_141;
        }
        char v56 = objc_alloc_init(GEOPBTransitShield);
        if (!GEOPBTransitShieldReadAllFrom((uint64_t)v56, (void *)v3, v11 & 1)) {
          goto LABEL_140;
        }
        PBReaderRecallMark();
        uint64_t v57 = 56;
        goto LABEL_92;
      case 11:
        if (!v35) {
          goto LABEL_94;
        }
        if ((*(_WORD *)(a1 + 88) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_141;
          }
          __int16 v68 = *(_WORD *)(a1 + 88) << 9;
          goto LABEL_119;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_141;
        }
        char v56 = objc_alloc_init(GEOPBTransitIcon);
        if (!GEOPBTransitIconReadAllFrom((uint64_t)v56, (void *)v3)) {
          goto LABEL_140;
        }
        PBReaderRecallMark();
        uint64_t v57 = 40;
        goto LABEL_92;
      case 12:
        if (!v35) {
          goto LABEL_94;
        }
        if ((*(_WORD *)(a1 + 88) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_141;
          }
          __int16 v68 = *(_WORD *)(a1 + 88) << 10;
          goto LABEL_119;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_141;
        }
        char v56 = objc_alloc_init(GEOPBTransitShield);
        if (!GEOPBTransitShieldReadAllFrom((uint64_t)v56, (void *)v3, v11 & 1)) {
          goto LABEL_140;
        }
        PBReaderRecallMark();
        uint64_t v57 = 32;
        goto LABEL_92;
      case 13:
        if ((v9 & 1) == 0) {
          goto LABEL_94;
        }
        char v58 = 0;
        unsigned int v59 = 0;
        uint64_t v42 = 0;
        *(_WORD *)(a1 + 88) |= 4u;
        while (2)
        {
          uint64_t v60 = *v21;
          uint64_t v61 = *(void *)(v3 + v60);
          unint64_t v62 = v61 + 1;
          if (v61 == -1 || v62 > *(void *)(v3 + *v7))
          {
            *(unsigned char *)(v3 + *v22) = 1;
          }
          else
          {
            char v63 = *(unsigned char *)(*(void *)(v3 + *v23) + v61);
            *(void *)(v3 + v60) = v62;
            v42 |= (unint64_t)(v63 & 0x7F) << v58;
            if (v63 < 0)
            {
              v58 += 7;
              BOOL v31 = v59++ >= 9;
              if (v31)
              {
                LODWORD(v42) = 0;
                goto LABEL_107;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v22)) {
          LODWORD(v42) = 0;
        }
LABEL_107:
        uint64_t v67 = 84;
LABEL_108:
        *(_DWORD *)(a1 + v67) = v42;
        goto LABEL_121;
      case 14:
        if (!v35) {
          goto LABEL_94;
        }
        if ((*(_WORD *)(a1 + 88) & 0x10) == 0)
        {
          uint64_t v64 = PBReaderReadString();
          char v65 = *(void **)(a1 + 24);
          *(void *)(a1 + 24) = v64;
          goto LABEL_93;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_141;
        }
        __int16 v68 = *(_WORD *)(a1 + 88) << 11;
        goto LABEL_119;
      case 15:
        if (!v35) {
          goto LABEL_94;
        }
        if ((*(_WORD *)(a1 + 88) & 0x80) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_141;
          }
          __int16 v68 = *(_WORD *)(a1 + 88) << 8;
LABEL_119:
          v8 += v68 >> 15;
LABEL_120:
          id v22 = (int *)MEMORY[0x1E4F940C8];
          unsigned int v7 = (int *)MEMORY[0x1E4F940E0];
          unsigned int v23 = (int *)MEMORY[0x1E4F940B8];
LABEL_121:
          if (!(v75 & 1 | (v8 != 0))) {
            goto LABEL_122;
          }
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_141;
        }
        char v56 = objc_alloc_init(GEOSFSymbol);
        if (GEOSFSymbolReadAllFrom((uint64_t)v56, (void *)v3))
        {
          PBReaderRecallMark();
          uint64_t v57 = 48;
LABEL_92:
          char v65 = *(void **)(a1 + v57);
          *(void *)(a1 + v57) = v56;
LABEL_93:

          --v8;
          goto LABEL_120;
        }
LABEL_140:

LABEL_141:
        int v73 = 0;
        id v22 = (int *)MEMORY[0x1E4F940C8];
LABEL_123:
        if (v74) {
LABEL_124:
        }
          *(_WORD *)(a1 + 88) |= 8u;
        if (v77 || (v73 & 1) == 0)
        {
          *(_WORD *)(a1 + 88) |= 0x100u;
          *(_WORD *)(a1 + 88) |= 0x40u;
          *(_WORD *)(a1 + 88) |= 0x20u;
          *(_WORD *)(a1 + 88) |= 0x10u;
          *(_WORD *)(a1 + 88) |= 0x80u;
        }
        else if (v20)
        {
          while (1)
          {
            int v69 = *v20++;
            __int16 v70 = 256;
            switch(v69)
            {
              case 10:
                goto LABEL_133;
              case 11:
                __int16 v70 = 64;
                goto LABEL_133;
              case 12:
                __int16 v70 = 32;
                goto LABEL_133;
              case 14:
                __int16 v70 = 16;
                goto LABEL_133;
              case 15:
                __int16 v70 = 128;
LABEL_133:
                *(_WORD *)(a1 + 88) |= v70;
                break;
              default:
                continue;
            }
          }
        }
        if (v73) {
          unint64_t v3 = *(unsigned char *)(v3 + *v22) == 0;
        }
        else {
          unint64_t v3 = 0;
        }
        if (v77)
        {
          char v71 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      default:
        if ((v74 & 1) == 0 || (*(_WORD *)(a1 + 88) & 8) != 0)
        {
LABEL_94:
          char v66 = PBReaderSkipValueWithTag();
          unsigned int v23 = (int *)MEMORY[0x1E4F940B8];
          unsigned int v7 = (int *)MEMORY[0x1E4F940E0];
          id v22 = (int *)MEMORY[0x1E4F940C8];
          if ((v66 & 1) == 0)
          {
            int v73 = 0;
            goto LABEL_123;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v53 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            uint64_t v54 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v53;
          }
          int v55 = PBUnknownFieldAdd();
          id v22 = (int *)MEMORY[0x1E4F940C8];
          unsigned int v7 = (int *)MEMORY[0x1E4F940E0];
          unsigned int v23 = (int *)MEMORY[0x1E4F940B8];
          if (!v55)
          {
            int v73 = 0;
            goto LABEL_124;
          }
        }
        goto LABEL_121;
    }
  }
}

void sub_1897E9D6C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897E9ED8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897EA1F4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897EA360(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897EB0A0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPBTransitArtworkCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  [*(id *)(a1 + 56) readAll:1];
  [*(id *)(a1 + 40) readAll:1];
  [*(id *)(a1 + 32) readAll:1];
  char v2 = *(void **)(a1 + 48);

  return [v2 readAll:1];
}

unint64_t GEOPBTransitArtworkReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 68))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPBTransitArtworkReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 72));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 64) = [v8 position];
  *(_DWORD *)(a1 + 68) = [v8 length];
  if (a3) {
    char v9 = (int *)&GEOPBTransitArtworkReadAllFrom_recursiveTag;
  }
  else {
    char v9 = (int *)&GEOPBTransitArtworkReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPBTransitArtworkReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOPBTransitArtworkCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
  return Specified;
}

void sub_1897EB2B4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPBTransitArtworkReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOPBTransitArtworkReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1897EB318(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPBTransitShieldIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  char v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  BOOL v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    id v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_38;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        goto LABEL_38;
      }
      unint64_t v17 = v8 >> 3;
      if ((v8 >> 3) == 4) {
        break;
      }
      if (v17 == 3)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_40;
        }
        unsigned int v18 = 0;
        while (1)
        {
          uint64_t v19 = *v2;
          uint64_t v20 = *(void *)&a1[v19];
          unint64_t v21 = v20 + 1;
          if (v20 == -1 || v21 > *(void *)&a1[*v3]) {
            break;
          }
          int v22 = *(char *)(*(void *)&a1[*v5] + v20);
          *(void *)&a1[v19] = v21;
          if (v22 < 0 && v18++ <= 8) {
            continue;
          }
          goto LABEL_37;
        }
        a1[*v4] = 1;
      }
      else
      {
        if (v17 == 2)
        {
          if (v15 != 2) {
            goto LABEL_40;
          }
          goto LABEL_24;
        }
        if (!PBReaderSkipValueWithTag())
        {
LABEL_40:
          BOOL v24 = 0;
          goto LABEL_39;
        }
      }
LABEL_37:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_38;
      }
    }
    if (v15 != 2) {
      goto LABEL_40;
    }
LABEL_24:
    if ((PBReaderSkipValueWithTag() & 1) == 0) {
      goto LABEL_40;
    }
    goto LABEL_37;
  }
LABEL_38:
  BOOL v24 = a1[*v4] == 0;
LABEL_39:
  PBReaderRecallMark();
  return v24;
}

BOOL GEOPBTransitIconIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  char v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  BOOL v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    id v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      unint64_t v17 = v8 >> 3;
      if ((v8 >> 3) == 3)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOStyleAttributesIsValid(a1))
        {
LABEL_46:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else
      {
        if (v17 == 2)
        {
          if ((v8 & 7) != 0) {
            goto LABEL_46;
          }
          unsigned int v24 = 0;
          while (1)
          {
            uint64_t v25 = *v2;
            uint64_t v26 = *(void *)&a1[v25];
            unint64_t v27 = v26 + 1;
            if (v26 == -1 || v27 > *(void *)&a1[*v3]) {
              goto LABEL_41;
            }
            int v28 = *(char *)(*(void *)&a1[*v5] + v26);
            *(void *)&a1[v25] = v27;
            if (v28 < 0)
            {
              BOOL v23 = v24++ > 8;
              if (!v23) {
                continue;
              }
            }
            goto LABEL_43;
          }
        }
        if (v17 == 1)
        {
          if ((v8 & 7) != 0) {
            goto LABEL_46;
          }
          unsigned int v18 = 0;
          while (1)
          {
            uint64_t v19 = *v2;
            uint64_t v20 = *(void *)&a1[v19];
            unint64_t v21 = v20 + 1;
            if (v20 == -1 || v21 > *(void *)&a1[*v3]) {
              break;
            }
            int v22 = *(char *)(*(void *)&a1[*v5] + v20);
            *(void *)&a1[v19] = v21;
            if (v22 < 0)
            {
              BOOL v23 = v18++ > 8;
              if (!v23) {
                continue;
              }
            }
            goto LABEL_43;
          }
LABEL_41:
          a1[*v4] = 1;
          continue;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_46;
        }
      }
LABEL_43:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v29 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v29;
}

BOOL GEOSFSymbolIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  char v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  BOOL v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    id v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || (PBReaderSkipValueWithTag() & 1) == 0)
        {
LABEL_26:
          BOOL v17 = 0;
          goto LABEL_25;
        }
      }
      else if (!PBReaderSkipValueWithTag())
      {
        goto LABEL_26;
      }
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v17 = a1[*v4] == 0;
LABEL_25:
  PBReaderRecallMark();
  return v17;
}

void sub_1897EBBC8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPBTransitArtworkIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  unsigned int v2 = *(unsigned __int16 *)(a1 + 88);
  if ((v2 & 0x200) != 0) {
    return 1;
  }
  if ((v2 & 0x100) != 0)
  {
    if (GEOPBTransitShieldIsDirty(*(void *)(a1 + 56))) {
      return 1;
    }
    unsigned int v2 = *(unsigned __int16 *)(a1 + 88);
  }
  if ((v2 & 0x40) == 0)
  {
    if ((v2 & 0x20) != 0)
    {
      if (GEOPBTransitShieldIsDirty(*(void *)(a1 + 32))) {
        return 1;
      }
      unsigned int v2 = *(unsigned __int16 *)(a1 + 88);
    }
    if ((v2 & 0x10) == 0) {
      return (v2 >> 7) & 1;
    }
  }
  return 1;
}

os_unfair_lock_s *GEOPBTransitArtworkIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    uint64_t v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOPBTransitArtworkIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 18);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_1897EC0C4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897EC5F0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPBTransitIconReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    BOOL v4 = (int *)MEMORY[0x1E4F940E8];
    id v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        unint64_t v18 = v10 >> 3;
        if ((v10 >> 3) == 3)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_55;
          }
          uint64_t v26 = objc_alloc_init(GEOStyleAttributes);
          if (!GEOStyleAttributesReadAllFrom((uint64_t)v26, v3))
          {

            goto LABEL_55;
          }
          PBReaderRecallMark();
          unint64_t v27 = *(void **)(a1 + 16);
          *(void *)(a1 + 16) = v26;
        }
        else
        {
          if (v18 == 2)
          {
            char v28 = 0;
            unsigned int v29 = 0;
            uint64_t v21 = 0;
            *(unsigned char *)(a1 + 32) |= 2u;
            while (1)
            {
              uint64_t v30 = *v4;
              uint64_t v31 = *(void *)&v3[v30];
              unint64_t v32 = v31 + 1;
              if (v31 == -1 || v32 > *(void *)&v3[*v5]) {
                break;
              }
              char v33 = *(unsigned char *)(*(void *)&v3[*v7] + v31);
              *(void *)&v3[v30] = v32;
              v21 |= (unint64_t)(v33 & 0x7F) << v28;
              if ((v33 & 0x80) == 0) {
                goto LABEL_48;
              }
              v28 += 7;
              BOOL v15 = v29++ >= 9;
              if (v15)
              {
                LODWORD(v21) = 0;
                goto LABEL_50;
              }
            }
            v3[*v6] = 1;
LABEL_48:
            if (v3[*v6]) {
              LODWORD(v21) = 0;
            }
LABEL_50:
            uint64_t v36 = 28;
            goto LABEL_51;
          }
          if (v18 == 1)
          {
            char v19 = 0;
            unsigned int v20 = 0;
            uint64_t v21 = 0;
            *(unsigned char *)(a1 + 32) |= 1u;
            while (1)
            {
              uint64_t v22 = *v4;
              uint64_t v23 = *(void *)&v3[v22];
              unint64_t v24 = v23 + 1;
              if (v23 == -1 || v24 > *(void *)&v3[*v5]) {
                break;
              }
              char v25 = *(unsigned char *)(*(void *)&v3[*v7] + v23);
              *(void *)&v3[v22] = v24;
              v21 |= (unint64_t)(v25 & 0x7F) << v19;
              if ((v25 & 0x80) == 0) {
                goto LABEL_44;
              }
              v19 += 7;
              BOOL v15 = v20++ >= 9;
              if (v15)
              {
                LODWORD(v21) = 0;
                goto LABEL_46;
              }
            }
            v3[*v6] = 1;
LABEL_44:
            if (v3[*v6]) {
              LODWORD(v21) = 0;
            }
LABEL_46:
            uint64_t v36 = 24;
LABEL_51:
            *(_DWORD *)(a1 + v36) = v21;
            continue;
          }
          if (!*(void *)(a1 + 8))
          {
            id v34 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            BOOL v35 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v34;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_55;
          }
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v37 = v3[*v6] == 0;
  }
  else
  {
LABEL_55:
    BOOL v37 = 0;
  }
  objc_sync_exit(v3);

  return v37;
}

void sub_1897ED1C0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPBTransitIconReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOPBTransitIconReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1897ED224(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897ED93C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPBTransitShieldReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  uint64_t v7 = 0;
  uint64_t v8 = 0;
  char v9 = 0;
  uint64_t v10 = 0;
  int v11 = ((*(unsigned __int8 *)(a1 + 56) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 56) >> 2) & 1)
      + ((*(unsigned __int8 *)(a1 + 56) >> 1) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v10])
    {
      case -4:
        ++v11;
        uint64_t v12 = v7;
        goto LABEL_8;
      case -3:
        char v9 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_8;
      case 0:
        BOOL v14 = v11 != 0;
        char v15 = v14 & ~(_BYTE)v7;
        unsigned __int8 v16 = v14 | v7;
        char v58 = v15 | v8;
        char v59 = v16 | v15 | v8;
        if ((v16 | v9)) {
          BOOL v17 = 0;
        }
        else {
          BOOL v17 = a3;
        }
        char v60 = (v17 == 0) | v16;
        BOOL v61 = v16;
        unint64_t v18 = (int *)MEMORY[0x1E4F940E8];
        char v19 = (int *)MEMORY[0x1E4F940C8];
        unsigned int v20 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v11;
LABEL_7:
        uint64_t v12 = v7;
        uint64_t v13 = v8;
LABEL_8:
        ++v10;
        uint64_t v7 = v12;
        uint64_t v8 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v18) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v19)) {
      goto LABEL_73;
    }
    char v21 = 0;
    unsigned int v22 = 0;
    unint64_t v23 = 0;
    while (1)
    {
      uint64_t v24 = *v18;
      uint64_t v25 = *(void *)(v3 + v24);
      unint64_t v26 = v25 + 1;
      if (v25 == -1 || v26 > *(void *)(v3 + *v6)) {
        break;
      }
      char v27 = *(unsigned char *)(*(void *)(v3 + *v20) + v25);
      *(void *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0) {
        goto LABEL_23;
      }
      v21 += 7;
      BOOL v28 = v22++ >= 9;
      if (v28)
      {
        unint64_t v23 = 0;
        int v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_25;
      }
    }
    *(unsigned char *)(v3 + *v19) = 1;
LABEL_23:
    int v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(unsigned char *)(v3 + *v19)) {
      unint64_t v23 = 0;
    }
LABEL_25:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_73:
      int v56 = 1;
      goto LABEL_74;
    }
    unint64_t v31 = v23 >> 3;
    BOOL v32 = v61;
    if ((v60 & 1) == 0)
    {
      char v33 = v17;
      do
      {
        int v35 = *v33++;
        int v34 = v35;
        BOOL v32 = v35 != 0;
        if (v35) {
          BOOL v36 = v34 == v31;
        }
        else {
          BOOL v36 = 1;
        }
      }
      while (!v36);
    }
    if (v31 == 4) {
      break;
    }
    if (v31 == 3)
    {
      if (v9)
      {
        char v40 = 0;
        unsigned int v41 = 0;
        uint64_t v42 = 0;
        *(unsigned char *)(a1 + 56) |= 1u;
        while (1)
        {
          uint64_t v43 = *v18;
          uint64_t v44 = *(void *)(v3 + v43);
          unint64_t v45 = v44 + 1;
          if (v44 == -1 || v45 > *(void *)(v3 + *v6)) {
            break;
          }
          char v46 = *(unsigned char *)(*(void *)(v3 + *v20) + v44);
          *(void *)(v3 + v43) = v45;
          v42 |= (unint64_t)(v46 & 0x7F) << v40;
          if ((v46 & 0x80) == 0) {
            goto LABEL_63;
          }
          v40 += 7;
          BOOL v28 = v41++ >= 9;
          if (v28)
          {
            LODWORD(v42) = 0;
            goto LABEL_65;
          }
        }
        *(unsigned char *)(v3 + *v19) = 1;
LABEL_63:
        if (*(unsigned char *)(v3 + *v19)) {
          LODWORD(v42) = 0;
        }
LABEL_65:
        *(_DWORD *)(a1 + 52) = v42;
        goto LABEL_72;
      }
    }
    else if (v31 == 2)
    {
      if (v32)
      {
        if ((*(unsigned char *)(a1 + 56) & 8) == 0)
        {
          uint64_t v37 = PBReaderReadString();
          uint64_t v38 = 32;
          goto LABEL_45;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_92;
        }
        char v51 = 16 * *(unsigned char *)(a1 + 56);
        goto LABEL_70;
      }
    }
    else if ((v58 & 1) != 0 && (*(unsigned char *)(a1 + 56) & 2) == 0)
    {
      if (!*(void *)(a1 + 16))
      {
        id v47 = objc_alloc_init(MEMORY[0x1E4F940B0]);
        unsigned int v48 = *(void **)(a1 + 16);
        *(void *)(a1 + 16) = v47;
      }
      int v49 = PBUnknownFieldAdd();
      char v19 = (int *)MEMORY[0x1E4F940C8];
      if (!v49)
      {
        int v56 = 0;
        uint64_t v57 = &OBJC_IVAR___GEOComposedRoute__visualInfosForRouteNameLabels;
        goto LABEL_76;
      }
      goto LABEL_72;
    }
LABEL_60:
    char v50 = PBReaderSkipValueWithTag();
    char v19 = (int *)MEMORY[0x1E4F940C8];
    if ((v50 & 1) == 0)
    {
      int v56 = 0;
LABEL_74:
      uint64_t v57 = &OBJC_IVAR___GEOComposedRoute__visualInfosForRouteNameLabels;
      goto LABEL_75;
    }
LABEL_72:
    if (!(v59 & 1 | (v10 != 0))) {
      goto LABEL_73;
    }
  }
  if (!v32) {
    goto LABEL_60;
  }
  if ((*(unsigned char *)(a1 + 56) & 4) == 0)
  {
    uint64_t v37 = PBReaderReadString();
    uint64_t v38 = 24;
LABEL_45:
    BOOL v39 = *(void **)(a1 + v38);
    *(void *)(a1 + v38) = v37;

    --v10;
LABEL_71:
    char v19 = (int *)MEMORY[0x1E4F940C8];
    goto LABEL_72;
  }
  if (PBReaderSkipValueWithTag())
  {
    char v51 = 32 * *(unsigned char *)(a1 + 56);
LABEL_70:
    v10 += v51 >> 7;
    goto LABEL_71;
  }
LABEL_92:
  int v56 = 0;
  uint64_t v57 = &OBJC_IVAR___GEOComposedRoute__visualInfosForRouteNameLabels;
  char v19 = (int *)MEMORY[0x1E4F940C8];
LABEL_75:
  if ((v58 & 1) == 0) {
    goto LABEL_77;
  }
LABEL_76:
  *(unsigned char *)(a1 + v57[636]) |= 2u;
LABEL_77:
  if (v61 || (v56 & 1) == 0)
  {
    *(unsigned char *)(a1 + v57[636]) |= 8u;
    *(unsigned char *)(a1 + v57[636]) |= 4u;
    goto LABEL_86;
  }
  if (v17)
  {
    while (2)
    {
      while (1)
      {
        int v53 = *v17++;
        int v52 = v53;
        if (v53 == 2) {
          break;
        }
        if (v52 == 4) {
          goto LABEL_85;
        }
        if (!v52) {
          goto LABEL_86;
        }
      }
      LOBYTE(v52) = 8;
LABEL_85:
      *(unsigned char *)(a1 + v57[636]) |= v52;
      continue;
    }
  }
LABEL_86:
  if (v56) {
    unint64_t v3 = *(unsigned char *)(v3 + *v19) == 0;
  }
  else {
    unint64_t v3 = 0;
  }
  if (v61)
  {
    uint64_t v54 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_1897EE0C4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897EE758(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPBTransitShieldReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPBTransitShieldReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    char v9 = (int *)&GEOPBTransitShieldReadAllFrom_recursiveTag;
  }
  else {
    char v9 = (int *)&GEOPBTransitShieldReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPBTransitShieldReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_1897EE8E4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPBTransitShieldReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOPBTransitShieldReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1897EE948(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897EEB18(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPBTransitShieldIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  BOOL v2 = (*(unsigned char *)(a1 + 56) & 0x1C) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return v2;
}

void sub_1897EEE50(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897EF130(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPathMapMatcherInstructionsReadAllFrom(void *a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    BOOL v4 = (int *)MEMORY[0x1E4F940E8];
    id v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_29;
          }
          unint64_t v18 = objc_alloc_init(GEONoMatch);
          if (!GEONoMatchReadAllFrom((uint64_t)v18, v3))
          {

            goto LABEL_29;
          }
          PBReaderRecallMark();
          objc_msgSend(a1, "addNoMatch:", v18, 0, 0);
        }
        else
        {
          if (!a1[1])
          {
            id v19 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            unsigned int v20 = (void *)a1[1];
            a1[1] = v19;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_29;
          }
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v21 = v3[*v6] == 0;
  }
  else
  {
LABEL_29:
    BOOL v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_1897EFB6C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPathMapMatcherInstructionsReadFrom(void *a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOPathMapMatcherInstructionsReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1897EFBD0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPathMapMatcherInstructionsIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  BOOL v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    id v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEONoMatchIsValid(a1))
        {
LABEL_27:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_27;
      }
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

BOOL GEOPathStretchReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    BOOL v4 = (int *)MEMORY[0x1E4F940E8];
    id v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      while (1)
      {
        if (v3[*v6]) {
          goto LABEL_49;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          goto LABEL_49;
        }
        if ((v10 >> 3) == 2) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          char v18 = 0;
          unsigned int v19 = 0;
          uint64_t v20 = 0;
          *(unsigned char *)(a1 + 24) |= 2u;
          while (1)
          {
            uint64_t v21 = *v4;
            uint64_t v22 = *(void *)&v3[v21];
            unint64_t v23 = v22 + 1;
            if (v22 == -1 || v23 > *(void *)&v3[*v5])
            {
              unint64_t v26 = &OBJC_IVAR___GEOPathStretch__startOffsetCm;
              goto LABEL_41;
            }
            char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
            *(void *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0) {
              break;
            }
            v18 += 7;
            BOOL v25 = v19++ > 8;
            if (v25)
            {
              LODWORD(v20) = 0;
              unint64_t v26 = &OBJC_IVAR___GEOPathStretch__startOffsetCm;
              goto LABEL_44;
            }
          }
          unint64_t v26 = &OBJC_IVAR___GEOPathStretch__startOffsetCm;
LABEL_42:
          if (v3[*v6]) {
            LODWORD(v20) = 0;
          }
LABEL_44:
          *(_DWORD *)(a1 + *v26) = v20;
          goto LABEL_45;
        }
        if (!*(void *)(a1 + 8))
        {
          id v33 = objc_alloc_init(MEMORY[0x1E4F940B0]);
          int v34 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = v33;
        }
        if ((PBUnknownFieldAdd() & 1) == 0) {
          goto LABEL_50;
        }
LABEL_45:
        if (*(void *)&v3[*v4] >= *(void *)&v3[*v5]) {
          goto LABEL_49;
        }
      }
      char v27 = 0;
      unsigned int v28 = 0;
      uint64_t v20 = 0;
      *(unsigned char *)(a1 + 24) |= 1u;
      while (1)
      {
        uint64_t v29 = *v4;
        uint64_t v30 = *(void *)&v3[v29];
        unint64_t v31 = v30 + 1;
        if (v30 == -1 || v31 > *(void *)&v3[*v5]) {
          break;
        }
        char v32 = *(unsigned char *)(*(void *)&v3[*v7] + v30);
        *(void *)&v3[v29] = v31;
        v20 |= (unint64_t)(v32 & 0x7F) << v27;
        if ((v32 & 0x80) == 0)
        {
          unint64_t v26 = &OBJC_IVAR___GEOPathStretch__endOffsetCm;
          goto LABEL_42;
        }
        v27 += 7;
        BOOL v25 = v28++ > 8;
        if (v25)
        {
          LODWORD(v20) = 0;
          unint64_t v26 = &OBJC_IVAR___GEOPathStretch__endOffsetCm;
          goto LABEL_44;
        }
      }
      unint64_t v26 = &OBJC_IVAR___GEOPathStretch__endOffsetCm;
LABEL_41:
      v3[*v6] = 1;
      goto LABEL_42;
    }
LABEL_49:
    BOOL v35 = v3[*v6] == 0;
  }
  else
  {
LABEL_50:
    BOOL v35 = 0;
  }
  objc_sync_exit(v3);

  return v35;
}

void sub_1897F0D14(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPathStretchReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOPathStretchReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1897F0D78(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897F136C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPlaceFormattedStringReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 104));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 100);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 96)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  unsigned int v12 = *(unsigned __int16 *)(a1 + 108);
  unsigned int v13 = ((v12 >> 8) & 1)
      + (v12 & 1)
      + ((v12 >> 4) & 1)
      + (unsigned __int16)(vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16((uint16x4_t)vdup_n_s16(v12), (uint16x4_t)0xFFFFFFFDFFFBFFF7), (int8x8_t)0x1000100010001))+ ((v12 >> 2) & 1)+ ((v12 >> 6) & 1)+ ((v12 >> 7) & 1));
  while (2)
  {
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    uint64_t v16 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v13;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v15 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v17 = v13 > 6;
        char v18 = v17 & ~(_BYTE)v11 | v9;
        unsigned __int8 v19 = v17 | v11;
        char v53 = v18;
        char v54 = v19 | v18;
        if ((v19 | v8)) {
          uint64_t v20 = 0;
        }
        else {
          uint64_t v20 = a3;
        }
        char v55 = (v20 == 0) | v19;
        BOOL v56 = v19;
        uint64_t v21 = (int *)MEMORY[0x1E4F940E8];
        uint64_t v22 = (int *)MEMORY[0x1E4F940C8];
        unint64_t v23 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v13;
LABEL_7:
        uint64_t v14 = v9;
LABEL_8:
        uint64_t v15 = v10;
        uint64_t v16 = v11;
LABEL_10:
        ++v7;
        uint64_t v9 = v14;
        uint64_t v10 = v15;
        uint64_t v11 = v16;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v21) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v22)) {
      goto LABEL_114;
    }
    char v24 = 0;
    unsigned int v25 = 0;
    unint64_t v26 = 0;
    while (1)
    {
      uint64_t v27 = *v21;
      uint64_t v28 = *(void *)(v3 + v27);
      unint64_t v29 = v28 + 1;
      if (v28 == -1 || v29 > *(void *)(v3 + *v6)) {
        break;
      }
      char v30 = *(unsigned char *)(*(void *)(v3 + *v23) + v28);
      *(void *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0) {
        goto LABEL_25;
      }
      v24 += 7;
      if (v25++ >= 9)
      {
        unint64_t v26 = 0;
        int v32 = *(unsigned __int8 *)(v3 + *v22);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v22) = 1;
LABEL_25:
    int v32 = *(unsigned __int8 *)(v3 + *v22);
    if (*(unsigned char *)(v3 + *v22)) {
      unint64_t v26 = 0;
    }
LABEL_27:
    if (v32 || (v26 & 7) == 4)
    {
LABEL_114:
      int v52 = 1;
      goto LABEL_115;
    }
    unint64_t v34 = v26 >> 3;
    BOOL v35 = v56;
    if ((v55 & 1) == 0)
    {
      BOOL v36 = v20;
      do
      {
        int v38 = *v36++;
        int v37 = v38;
        BOOL v35 = v38 != 0;
        if (v38) {
          BOOL v39 = v37 == v34;
        }
        else {
          BOOL v39 = 1;
        }
      }
      while (!v39);
    }
    switch((int)v34)
    {
      case 1:
        if (!v35) {
          goto LABEL_91;
        }
        if ((*(_WORD *)(a1 + 108) & 0x20) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_137;
          }
          char v40 = objc_alloc_init(GEOFormattedString);
          if (GEOFormattedStringReadAllFrom((uint64_t)v40, (void *)v3, v10 & 1))
          {
            PBReaderRecallMark();
            uint64_t v41 = 56;
            goto LABEL_90;
          }
          goto LABEL_136;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_137;
        }
        __int16 v47 = *(_WORD *)(a1 + 108) << 10;
        goto LABEL_111;
      case 2:
        if (!v35) {
          goto LABEL_91;
        }
        if ((*(_WORD *)(a1 + 108) & 0x200) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_137;
          }
          __int16 v47 = *(_WORD *)(a1 + 108) << 6;
          goto LABEL_111;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_137;
        }
        char v40 = objc_alloc_init(GEOFormattedString);
        if (!GEOFormattedStringReadAllFrom((uint64_t)v40, (void *)v3, v10 & 1)) {
          goto LABEL_136;
        }
        PBReaderRecallMark();
        uint64_t v41 = 88;
        goto LABEL_90;
      case 3:
        if (!v35) {
          goto LABEL_91;
        }
        if ((*(_WORD *)(a1 + 108) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_137;
          }
          __int16 v47 = *(_WORD *)(a1 + 108) << 12;
          goto LABEL_111;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_137;
        }
        char v40 = objc_alloc_init(GEOFormattedString);
        if (!GEOFormattedStringReadAllFrom((uint64_t)v40, (void *)v3, v10 & 1)) {
          goto LABEL_136;
        }
        PBReaderRecallMark();
        uint64_t v41 = 40;
        goto LABEL_90;
      case 4:
        if (!v35) {
          goto LABEL_91;
        }
        if ((*(_WORD *)(a1 + 108) & 2) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_137;
          }
          __int16 v47 = *(_WORD *)(a1 + 108) << 14;
          goto LABEL_111;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_137;
        }
        char v40 = objc_alloc_init(GEOFormattedString);
        if (!GEOFormattedStringReadAllFrom((uint64_t)v40, (void *)v3, v10 & 1)) {
          goto LABEL_136;
        }
        PBReaderRecallMark();
        uint64_t v41 = 24;
        goto LABEL_90;
      case 5:
        if (!v35) {
          goto LABEL_91;
        }
        if ((*(_WORD *)(a1 + 108) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_137;
          }
          __int16 v47 = *(_WORD *)(a1 + 108) << 13;
          goto LABEL_111;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_137;
        }
        char v40 = objc_alloc_init(GEOFormattedString);
        if (!GEOFormattedStringReadAllFrom((uint64_t)v40, (void *)v3, v10 & 1)) {
          goto LABEL_136;
        }
        PBReaderRecallMark();
        uint64_t v41 = 32;
        goto LABEL_90;
      case 6:
        if (!v35) {
          goto LABEL_91;
        }
        if ((*(_WORD *)(a1 + 108) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_137;
          }
          __int16 v47 = *(_WORD *)(a1 + 108) << 9;
          goto LABEL_111;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_137;
        }
        char v40 = objc_alloc_init(GEOFormattedString);
        if (!GEOFormattedStringReadAllFrom((uint64_t)v40, (void *)v3, v10 & 1)) {
          goto LABEL_136;
        }
        PBReaderRecallMark();
        uint64_t v41 = 64;
        goto LABEL_90;
      case 7:
        if (!v35) {
          goto LABEL_91;
        }
        if ((*(_WORD *)(a1 + 108) & 0x80) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_137;
          }
          __int16 v47 = *(_WORD *)(a1 + 108) << 8;
          goto LABEL_111;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_137;
        }
        char v40 = objc_alloc_init(GEOFormattedString);
        if (!GEOFormattedStringReadAllFrom((uint64_t)v40, (void *)v3, v10 & 1)) {
          goto LABEL_136;
        }
        PBReaderRecallMark();
        uint64_t v41 = 72;
        goto LABEL_90;
      case 8:
        if (!v35) {
          goto LABEL_91;
        }
        if ((*(_WORD *)(a1 + 108) & 0x100) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_137;
          }
          __int16 v47 = *(_WORD *)(a1 + 108) << 7;
          goto LABEL_111;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_137;
        }
        char v40 = objc_alloc_init(GEOFormattedString);
        if (!GEOFormattedStringReadAllFrom((uint64_t)v40, (void *)v3, v10 & 1)) {
          goto LABEL_136;
        }
        PBReaderRecallMark();
        uint64_t v41 = 80;
        goto LABEL_90;
      case 9:
        if (!v35) {
          goto LABEL_91;
        }
        if ((*(_WORD *)(a1 + 108) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_137;
          }
          __int16 v47 = *(_WORD *)(a1 + 108) << 11;
LABEL_111:
          v7 += v47 >> 15;
LABEL_112:
          uint64_t v22 = (int *)MEMORY[0x1E4F940C8];
LABEL_113:
          unint64_t v23 = (int *)MEMORY[0x1E4F940B8];
          if (!(v54 & 1 | (v7 != 0))) {
            goto LABEL_114;
          }
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_137;
        }
        char v40 = objc_alloc_init(GEOFormattedString);
        if (GEOFormattedStringReadAllFrom((uint64_t)v40, (void *)v3, v10 & 1))
        {
          PBReaderRecallMark();
          uint64_t v41 = 48;
LABEL_90:
          unint64_t v45 = *(void **)(a1 + v41);
          *(void *)(a1 + v41) = v40;

          --v7;
          goto LABEL_112;
        }
LABEL_136:

LABEL_137:
        int v52 = 0;
        uint64_t v22 = (int *)MEMORY[0x1E4F940C8];
LABEL_115:
        if (v53) {
LABEL_116:
        }
          *(_WORD *)(a1 + 108) |= 1u;
        if (v56 || (v52 & 1) == 0)
        {
          *(_WORD *)(a1 + 108) |= 0x20u;
          *(_WORD *)(a1 + 108) |= 0x200u;
          *(_WORD *)(a1 + 108) |= 8u;
          *(_WORD *)(a1 + 108) |= 2u;
          *(_WORD *)(a1 + 108) |= 4u;
          *(_WORD *)(a1 + 108) |= 0x40u;
          *(_WORD *)(a1 + 108) |= 0x80u;
          *(_WORD *)(a1 + 108) |= 0x100u;
          *(_WORD *)(a1 + 108) |= 0x10u;
        }
        else if (v20)
        {
          while (1)
          {
            int v48 = *v20++;
            __int16 v49 = 32;
            switch(v48)
            {
              case 0:
                goto LABEL_130;
              case 1:
                goto LABEL_129;
              case 2:
                __int16 v49 = 512;
                goto LABEL_129;
              case 3:
                __int16 v49 = 8;
                goto LABEL_129;
              case 4:
                __int16 v49 = 2;
                goto LABEL_129;
              case 5:
                __int16 v49 = 4;
                goto LABEL_129;
              case 6:
                __int16 v49 = 64;
                goto LABEL_129;
              case 7:
                __int16 v49 = 128;
                goto LABEL_129;
              case 8:
                __int16 v49 = 256;
                goto LABEL_129;
              case 9:
                __int16 v49 = 16;
LABEL_129:
                *(_WORD *)(a1 + 108) |= v49;
                break;
              default:
                continue;
            }
          }
        }
LABEL_130:
        if (v52) {
          unint64_t v3 = *(unsigned char *)(v3 + *v22) == 0;
        }
        else {
          unint64_t v3 = 0;
        }
        if (v56)
        {
          char v50 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      default:
        if (v53 & 1) == 0 || (*(_WORD *)(a1 + 108))
        {
LABEL_91:
          char v46 = PBReaderSkipValueWithTag();
          uint64_t v22 = (int *)MEMORY[0x1E4F940C8];
          if ((v46 & 1) == 0)
          {
            int v52 = 0;
            goto LABEL_115;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v42 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            uint64_t v43 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v42;
          }
          int v44 = PBUnknownFieldAdd();
          uint64_t v22 = (int *)MEMORY[0x1E4F940C8];
          if (!v44)
          {
            int v52 = 0;
            goto LABEL_116;
          }
        }
        goto LABEL_113;
    }
  }
}

void sub_1897F1F68(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897F20D4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897F2244(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897F23B4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897F2520(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897F2690(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897F2800(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897F2970(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897F3510(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPlaceFormattedStringCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  [*(id *)(a1 + 56) readAll:1];
  [*(id *)(a1 + 88) readAll:1];
  [*(id *)(a1 + 40) readAll:1];
  [*(id *)(a1 + 24) readAll:1];
  [*(id *)(a1 + 32) readAll:1];
  [*(id *)(a1 + 64) readAll:1];
  [*(id *)(a1 + 72) readAll:1];
  [*(id *)(a1 + 80) readAll:1];
  BOOL v2 = *(void **)(a1 + 48);

  return [v2 readAll:1];
}

unint64_t GEOPlaceFormattedStringReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 100))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPlaceFormattedStringReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 104));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 96) = [v8 position];
  *(_DWORD *)(a1 + 100) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOPlaceFormattedStringReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOPlaceFormattedStringReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPlaceFormattedStringReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOPlaceFormattedStringCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 104));
  return Specified;
}

void sub_1897F3770(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPlaceFormattedStringReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOPlaceFormattedStringReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1897F37D4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897F3A4C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPlaceFormattedStringIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 104));
  __int16 v2 = *(_WORD *)(a1 + 108);
  if ((v2 & 0x400) != 0) {
    return 1;
  }
  if ((v2 & 0x20) != 0)
  {
    if (GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(a1 + 56))) {
      return 1;
    }
    __int16 v2 = *(_WORD *)(a1 + 108);
  }
  if ((v2 & 0x200) != 0)
  {
    if (GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(a1 + 88))) {
      return 1;
    }
    __int16 v2 = *(_WORD *)(a1 + 108);
  }
  if ((v2 & 8) != 0)
  {
    if (GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(a1 + 40))) {
      return 1;
    }
    __int16 v2 = *(_WORD *)(a1 + 108);
  }
  if ((v2 & 2) != 0)
  {
    if (GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(a1 + 24))) {
      return 1;
    }
    __int16 v2 = *(_WORD *)(a1 + 108);
  }
  if ((v2 & 4) != 0)
  {
    if (GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(a1 + 32))) {
      return 1;
    }
    __int16 v2 = *(_WORD *)(a1 + 108);
  }
  if ((v2 & 0x40) != 0)
  {
    if (GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(a1 + 64))) {
      return 1;
    }
    __int16 v2 = *(_WORD *)(a1 + 108);
  }
  if ((v2 & 0x80) == 0) {
    goto LABEL_23;
  }
  if (GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(a1 + 72))) {
    return 1;
  }
  __int16 v2 = *(_WORD *)(a1 + 108);
LABEL_23:
  if ((v2 & 0x100) != 0)
  {
    if (GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(a1 + 80))) {
      return 1;
    }
    __int16 v2 = *(_WORD *)(a1 + 108);
  }
  if ((v2 & 0x10) == 0) {
    return 0;
  }
  BOOL v4 = *(os_unfair_lock_s **)(a1 + 48);

  return (uint64_t)GEOFormattedStringIsDirty(v4);
}

os_unfair_lock_s *GEOPlaceFormattedStringIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    uint64_t v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOPlaceFormattedStringIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 26);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_1897F4014(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897F453C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPointReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    BOOL v4 = (int *)MEMORY[0x1E4F940E8];
    id v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
      while (1)
      {
        if (v3[*v6]) {
          goto LABEL_49;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          goto LABEL_49;
        }
        if ((v10 >> 3) == 2) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          char v18 = 0;
          unsigned int v19 = 0;
          uint64_t v20 = 0;
          *(unsigned char *)(a1 + 24) |= 2u;
          while (1)
          {
            uint64_t v21 = *v4;
            uint64_t v22 = *(void *)&v3[v21];
            unint64_t v23 = v22 + 1;
            if (v22 == -1 || v23 > *(void *)&v3[*v5]) {
              break;
            }
            char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
            *(void *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0) {
              goto LABEL_40;
            }
            v18 += 7;
            BOOL v15 = v19++ >= 9;
            if (v15)
            {
              LODWORD(v20) = 0;
              goto LABEL_42;
            }
          }
          v3[*v6] = 1;
LABEL_40:
          if (v3[*v6]) {
            LODWORD(v20) = 0;
          }
LABEL_42:
          id v33 = &OBJC_IVAR___GEOPoint__offsetM;
LABEL_47:
          *(_DWORD *)(a1 + *v33) = v20;
          goto LABEL_48;
        }
        if (!*(void *)(a1 + 8))
        {
          id v31 = objc_alloc_init(MEMORY[0x1E4F940B0]);
          int v32 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = v31;
        }
        if ((PBUnknownFieldAdd() & 1) == 0) {
          goto LABEL_50;
        }
LABEL_48:
        if (*(void *)&v3[*v4] >= *(void *)&v3[*v5]) {
          goto LABEL_49;
        }
      }
      char v25 = 0;
      unsigned int v26 = 0;
      uint64_t v20 = 0;
      *(unsigned char *)(a1 + 24) |= 1u;
      while (1)
      {
        uint64_t v27 = *v4;
        uint64_t v28 = *(void *)&v3[v27];
        unint64_t v29 = v28 + 1;
        if (v28 == -1 || v29 > *(void *)&v3[*v5]) {
          break;
        }
        char v30 = *(unsigned char *)(*(void *)&v3[*v7] + v28);
        *(void *)&v3[v27] = v29;
        v20 |= (unint64_t)(v30 & 0x7F) << v25;
        if ((v30 & 0x80) == 0) {
          goto LABEL_44;
        }
        v25 += 7;
        BOOL v15 = v26++ >= 9;
        if (v15)
        {
          LODWORD(v20) = 0;
          goto LABEL_46;
        }
      }
      v3[*v6] = 1;
LABEL_44:
      if (v3[*v6]) {
        LODWORD(v20) = 0;
      }
LABEL_46:
      LODWORD(v20) = -(v20 & 1) ^ ((int)v20 >> 1);
      id v33 = &OBJC_IVAR___GEOPoint__elevationCm;
      goto LABEL_47;
    }
LABEL_49:
    BOOL v34 = v3[*v6] == 0;
  }
  else
  {
LABEL_50:
    BOOL v34 = 0;
  }
  objc_sync_exit(v3);

  return v34;
}

void sub_1897F5010(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPointReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOPointReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1897F5074(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPreferenceEntityReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    BOOL v4 = (int *)MEMORY[0x1E4F940E8];
    id v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
      while (1)
      {
        if (v3[*v6]) {
          goto LABEL_49;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          goto LABEL_49;
        }
        if ((v10 >> 3) == 2) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          char v18 = 0;
          unsigned int v19 = 0;
          uint64_t v20 = 0;
          *(unsigned char *)(a1 + 32) |= 1u;
          while (1)
          {
            uint64_t v21 = *v4;
            uint64_t v22 = *(void *)&v3[v21];
            unint64_t v23 = v22 + 1;
            if (v22 == -1 || v23 > *(void *)&v3[*v5])
            {
              unsigned int v26 = &OBJC_IVAR___GEOPreferenceEntity__chargingNetworkMuid;
              goto LABEL_41;
            }
            char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
            *(void *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0) {
              break;
            }
            v18 += 7;
            BOOL v25 = v19++ > 8;
            if (v25)
            {
              uint64_t v20 = 0;
              unsigned int v26 = &OBJC_IVAR___GEOPreferenceEntity__chargingNetworkMuid;
              goto LABEL_44;
            }
          }
          unsigned int v26 = &OBJC_IVAR___GEOPreferenceEntity__chargingNetworkMuid;
LABEL_42:
          if (v3[*v6]) {
            uint64_t v20 = 0;
          }
LABEL_44:
          *(void *)(a1 + *v26) = v20;
          goto LABEL_45;
        }
        if (!*(void *)(a1 + 8))
        {
          id v33 = objc_alloc_init(MEMORY[0x1E4F940B0]);
          BOOL v34 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = v33;
        }
        if ((PBUnknownFieldAdd() & 1) == 0) {
          goto LABEL_50;
        }
LABEL_45:
        if (*(void *)&v3[*v4] >= *(void *)&v3[*v5]) {
          goto LABEL_49;
        }
      }
      char v27 = 0;
      unsigned int v28 = 0;
      uint64_t v20 = 0;
      *(unsigned char *)(a1 + 32) |= 2u;
      while (1)
      {
        uint64_t v29 = *v4;
        uint64_t v30 = *(void *)&v3[v29];
        unint64_t v31 = v30 + 1;
        if (v30 == -1 || v31 > *(void *)&v3[*v5]) {
          break;
        }
        char v32 = *(unsigned char *)(*(void *)&v3[*v7] + v30);
        *(void *)&v3[v29] = v31;
        v20 |= (unint64_t)(v32 & 0x7F) << v27;
        if ((v32 & 0x80) == 0)
        {
          unsigned int v26 = &OBJC_IVAR___GEOPreferenceEntity__chargingStationMuid;
          goto LABEL_42;
        }
        v27 += 7;
        BOOL v25 = v28++ > 8;
        if (v25)
        {
          uint64_t v20 = 0;
          unsigned int v26 = &OBJC_IVAR___GEOPreferenceEntity__chargingStationMuid;
          goto LABEL_44;
        }
      }
      unsigned int v26 = &OBJC_IVAR___GEOPreferenceEntity__chargingStationMuid;
LABEL_41:
      v3[*v6] = 1;
      goto LABEL_42;
    }
LABEL_49:
    BOOL v35 = v3[*v6] == 0;
  }
  else
  {
LABEL_50:
    BOOL v35 = 0;
  }
  objc_sync_exit(v3);

  return v35;
}

void sub_1897F5D9C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPreferenceEntityReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOPreferenceEntityReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1897F5E00(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPriceReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    BOOL v4 = (int *)MEMORY[0x1E4F940E8];
    id v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 2)
        {
          uint64_t v21 = PBReaderReadString();
          uint64_t v22 = *(void **)(a1 + 16);
          *(void *)(a1 + 16) = v21;
        }
        else if ((v10 >> 3) == 1)
        {
          *(unsigned char *)(a1 + 28) |= 1u;
          uint64_t v18 = *v4;
          unint64_t v19 = *(void *)&v3[v18];
          if (v19 <= 0xFFFFFFFFFFFFFFFBLL && v19 + 4 <= *(void *)&v3[*v5])
          {
            int v20 = *(_DWORD *)(*(void *)&v3[*v7] + v19);
            *(void *)&v3[v18] = v19 + 4;
          }
          else
          {
            v3[*v6] = 1;
            int v20 = 0;
          }
          *(_DWORD *)(a1 + 24) = v20;
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v23 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            char v24 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v23;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_33;
          }
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v25 = v3[*v6] == 0;
  }
  else
  {
LABEL_33:
    BOOL v25 = 0;
  }
  objc_sync_exit(v3);

  return v25;
}

void sub_1897F69E4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPriceReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOPriceReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1897F6A48(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id GEOProblemDetailDescription(unsigned int *a1)
{
  __int16 v2 = NSString;
  id v3 = _GEOProblemDetailDictionaryRepresentation(a1);
  BOOL v4 = [v2 stringWithFormat:@"GEOProblemDetail<%p> %@", a1, v3];

  return v4;
}

id _GEOProblemDetailDictionaryRepresentation(unsigned int *a1)
{
  __int16 v2 = [MEMORY[0x1E4F1CA60] dictionary];
  char v3 = *((unsigned char *)a1 + 8);
  if (v3)
  {
    unsigned int v4 = *a1 - 1;
    if (v4 < 0x16 && ((0x3FFF9Fu >> v4) & 1) != 0)
    {
      id v5 = off_1E53E0420[v4];
    }
    else
    {
      objc_msgSend(NSString, "stringWithFormat:", @"(unknown: %i)", *a1);
      id v5 = (__CFString *)objc_claimAutoreleasedReturnValue();
    }
    [v2 setObject:v5 forKey:@"problemType"];

    char v3 = *((unsigned char *)a1 + 8);
  }
  if ((v3 & 2) != 0)
  {
    char v6 = [NSNumber numberWithInt:a1[1]];
    [v2 setObject:v6 forKey:@"waypointIndex"];
  }

  return v2;
}

void _GEOProblemDetailFromDictionaryRepresentation(void *a1, uint64_t a2)
{
  id v3 = a1;
  unsigned int v4 = [v3 objectForKeyedSubscript:@"problemType"];
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    *(unsigned char *)(a2 + 8) |= 1u;
    id v5 = v4;
    if ([v5 isEqualToString:@"SEARCH_FAILED"])
    {
      int v6 = 1;
    }
    else if ([v5 isEqualToString:@"FAR_FROM_ROADS"])
    {
      int v6 = 2;
    }
    else if ([v5 isEqualToString:@"OUT_OF_COVERAGE"])
    {
      int v6 = 3;
    }
    else if ([v5 isEqualToString:@"NO_PEDESTRIANS"])
    {
      int v6 = 4;
    }
    else if ([v5 isEqualToString:@"ACROSS_WATER"])
    {
      int v6 = 5;
    }
    else if ([v5 isEqualToString:@"PATH_DECODING_FAILURE"])
    {
      int v6 = 8;
    }
    else if ([v5 isEqualToString:@"WALKING_TOO_FAR"])
    {
      int v6 = 9;
    }
    else if ([v5 isEqualToString:@"BLOCKED_ROADS"])
    {
      int v6 = 10;
    }
    else if ([v5 isEqualToString:@"VEHICLE_TYPE_AVOIDANCE_FAILED"])
    {
      int v6 = 11;
    }
    else if ([v5 isEqualToString:@"BLOCKED_TRANSIT"])
    {
      int v6 = 12;
    }
    else if ([v5 isEqualToString:@"NOT_REACHABLE"])
    {
      int v6 = 13;
    }
    else if ([v5 isEqualToString:@"EV_OUT_OF_COVERAGE"])
    {
      int v6 = 14;
    }
    else if ([v5 isEqualToString:@"EV_OUT_OF_RANGE"])
    {
      int v6 = 15;
    }
    else if ([v5 isEqualToString:@"EV_INVALID_REQUEST"])
    {
      int v6 = 16;
    }
    else if ([v5 isEqualToString:@"LPR_DISABLED"])
    {
      int v6 = 17;
    }
    else if ([v5 isEqualToString:@"MAX_DISTANCE_EXCEEDED"])
    {
      int v6 = 18;
    }
    else if ([v5 isEqualToString:@"INSUFFICIENT_OFFLINE_DATA"])
    {
      int v6 = 19;
    }
    else if ([v5 isEqualToString:@"TRANSITION_FROM_DRIVING_DISABLED"])
    {
      int v6 = 20;
    }
    else if ([v5 isEqualToString:@"ANCHOR_LIMIT_EXCEEDED"])
    {
      int v6 = 21;
    }
    else if ([v5 isEqualToString:@"UNSUPPORTED_REQUEST"])
    {
      int v6 = 22;
    }
    else
    {
      int v6 = 1;
    }
  }
  else
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) == 0) {
      goto LABEL_47;
    }
    int v6 = [v4 intValue];
  }
  *(_DWORD *)a2 = v6;
LABEL_47:

  id v7 = [v3 objectForKeyedSubscript:@"waypointIndex"];

  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    *(unsigned char *)(a2 + 8) |= 2u;
    *(_DWORD *)(a2 + 4) = [v7 intValue];
  }
}

BOOL GEOProblemDetailReadFrom(uint64_t a1, uint64_t a2)
{
  return GEOProblemDetailReadAllFrom(a1, a2);
}

BOOL GEOProblemDetailReadAllFrom(uint64_t a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  unsigned int v4 = (int *)MEMORY[0x1E4F940E0];
  id v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    id v7 = (_DWORD *)(a1 + 4);
    char v8 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        uint64_t v12 = *v3;
        uint64_t v13 = *(void *)(a2 + v12);
        unint64_t v14 = v13 + 1;
        if (v13 == -1 || v14 > *(void *)(a2 + *v4)) {
          break;
        }
        char v15 = *(unsigned char *)(*(void *)(a2 + *v8) + v13);
        *(void *)(a2 + v12) = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0) {
          goto LABEL_12;
        }
        v9 += 7;
        if (v10++ >= 9)
        {
          unint64_t v11 = 0;
          int v17 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v17 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v11 = 0;
      }
LABEL_14:
      if (v17 || (v11 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      if ((v11 >> 3) == 2) {
        break;
      }
      if ((v11 >> 3) == 1)
      {
        char v19 = 0;
        unsigned int v20 = 0;
        uint64_t v21 = 0;
        *(unsigned char *)(a1 + 8) |= 1u;
        while (1)
        {
          uint64_t v22 = *v3;
          uint64_t v23 = *(void *)(a2 + v22);
          unint64_t v24 = v23 + 1;
          if (v23 == -1 || v24 > *(void *)(a2 + *v4))
          {
            char v27 = (_DWORD *)a1;
            goto LABEL_38;
          }
          char v25 = *(unsigned char *)(*(void *)(a2 + *v8) + v23);
          *(void *)(a2 + v22) = v24;
          v21 |= (unint64_t)(v25 & 0x7F) << v19;
          if ((v25 & 0x80) == 0) {
            break;
          }
          v19 += 7;
          BOOL v26 = v20++ > 8;
          if (v26)
          {
            LODWORD(v21) = 0;
            char v27 = (_DWORD *)a1;
            goto LABEL_41;
          }
        }
        char v27 = (_DWORD *)a1;
LABEL_39:
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v21) = 0;
        }
LABEL_41:
        *char v27 = v21;
        goto LABEL_42;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_42:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    char v28 = 0;
    unsigned int v29 = 0;
    uint64_t v21 = 0;
    *(unsigned char *)(a1 + 8) |= 2u;
    while (1)
    {
      uint64_t v30 = *v3;
      uint64_t v31 = *(void *)(a2 + v30);
      unint64_t v32 = v31 + 1;
      if (v31 == -1 || v32 > *(void *)(a2 + *v4)) {
        break;
      }
      char v33 = *(unsigned char *)(*(void *)(a2 + *v8) + v31);
      *(void *)(a2 + v30) = v32;
      v21 |= (unint64_t)(v33 & 0x7F) << v28;
      if ((v33 & 0x80) == 0)
      {
        char v27 = v7;
        goto LABEL_39;
      }
      v28 += 7;
      BOOL v26 = v29++ > 8;
      if (v26)
      {
        LODWORD(v21) = 0;
        char v27 = v7;
        goto LABEL_41;
      }
    }
    char v27 = v7;
LABEL_38:
    *(unsigned char *)(a2 + *v5) = 1;
    goto LABEL_39;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t GEOProblemDetailWriteTo(uint64_t result)
{
  uint64_t v1 = result;
  char v2 = *(unsigned char *)(result + 8);
  if (v2)
  {
    uint64_t result = PBDataWriterWriteInt32Field();
    char v2 = *(unsigned char *)(v1 + 8);
  }
  if ((v2 & 2) != 0)
  {
    return PBDataWriterWriteInt32Field();
  }
  return result;
}

BOOL GEOProblemDetailEquals(uint64_t a1, uint64_t a2)
{
  return *(void *)a1 == *(void *)a2 && *(_DWORD *)(a1 + 8) == (unint64_t)*(unsigned int *)(a2 + 8);
}

uint64_t GEOProblemDetailHash()
{
  return PBHashBytes();
}

BOOL GEOProblemDetailIsValid(void *a1)
{
  uint64_t v6 = [a1 position];
  uint64_t v7 = [a1 length];
  int v5 = 0;
  uint64_t v4 = 0;
  BOOL AllFrom = GEOProblemDetailReadAllFrom((uint64_t)&v4, (uint64_t)a1);
  PBReaderRecallMark();
  return AllFrom;
}

void sub_1897F7988(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORecentLocationHistoryReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 104));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 100);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 96)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  unsigned int v12 = (unsigned __int16)(vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int16 *)(a1 + 120)), (uint16x4_t)0xFFF8FFFBFFFAFFF6), (int8x8_t)0x1000100010001))+ ((*(_WORD *)(a1 + 120) >> 9) & 1)+ ((*(_WORD *)(a1 + 120) >> 7) & 1)+ ((*(_WORD *)(a1 + 120) >> 4) & 1));
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 > 3;
        char v17 = v16 & ~(_BYTE)v11 | v9;
        char v18 = v16 | v11;
        char v19 = (int *)MEMORY[0x1E4F940E8];
        if (((v16 | v11) | v8)) {
          unsigned int v20 = 0;
        }
        else {
          unsigned int v20 = a3;
        }
        int v101 = 1;
        char v21 = v16 & ~(_BYTE)v11 | v9;
        if (*(void *)(v3 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(v3 + *v6)) {
          goto LABEL_159;
        }
        char v99 = v17;
        char v102 = v18 | v17;
        char v103 = (v20 == 0) | v18;
        uint64_t v22 = (int *)MEMORY[0x1E4F940C8];
        uint64_t v23 = (int *)MEMORY[0x1E4F940B8];
        char v100 = v18;
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v9;
LABEL_8:
        uint64_t v14 = v10;
        uint64_t v15 = v11;
LABEL_10:
        ++v7;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(unsigned char *)(v3 + *v22)) {
      goto LABEL_157;
    }
    char v24 = 0;
    unsigned int v25 = 0;
    unint64_t v26 = 0;
    while (1)
    {
      uint64_t v27 = *v19;
      uint64_t v28 = *(void *)(v3 + v27);
      unint64_t v29 = v28 + 1;
      if (v28 == -1 || v29 > *(void *)(v3 + *v6)) {
        break;
      }
      char v30 = *(unsigned char *)(*(void *)(v3 + *v23) + v28);
      *(void *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0) {
        goto LABEL_25;
      }
      v24 += 7;
      BOOL v31 = v25++ >= 9;
      if (v31)
      {
        unint64_t v26 = 0;
        int v32 = *(unsigned __int8 *)(v3 + *v22);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v22) = 1;
LABEL_25:
    int v32 = *(unsigned __int8 *)(v3 + *v22);
    if (*(unsigned char *)(v3 + *v22)) {
      unint64_t v26 = 0;
    }
LABEL_27:
    int v33 = v26 & 7;
    if (v32 || v33 == 4)
    {
LABEL_157:
      int v101 = 1;
      goto LABEL_158;
    }
    unint64_t v35 = v26 >> 3;
    BOOL v36 = v18;
    if ((v103 & 1) == 0)
    {
      int v37 = v20;
      do
      {
        int v39 = *v37++;
        int v38 = v39;
        BOOL v36 = v39 != 0;
        if (v39) {
          BOOL v40 = v38 == v35;
        }
        else {
          BOOL v40 = 1;
        }
      }
      while (!v40);
    }
    switch((int)v35)
    {
      case 1:
        if (!v36) {
          goto LABEL_113;
        }
        if ((*(_WORD *)(a1 + 120) & 0x40) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_178;
          }
          uint64_t v41 = objc_alloc_init(GEOLatLngE7);
          if (GEOLatLngE7ReadAllFrom((uint64_t)v41, (void *)v3))
          {
            PBReaderRecallMark();
            id v42 = *(void **)(a1 + 48);
            *(void *)(a1 + 48) = v41;

            --v7;
            goto LABEL_141;
          }
          goto LABEL_177;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_178;
        }
        __int16 v87 = *(_WORD *)(a1 + 120) << 9;
        goto LABEL_140;
      case 2:
        if ((v8 & 1) == 0) {
          goto LABEL_113;
        }
        char v46 = 0;
        unsigned int v47 = 0;
        uint64_t v48 = 0;
        *(_WORD *)(a1 + 120) |= 1u;
        uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
        while (2)
        {
          uint64_t v49 = *v19;
          uint64_t v50 = *(void *)(v3 + v49);
          unint64_t v51 = v50 + 1;
          if (v50 == -1 || v51 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v22) = 1;
          }
          else
          {
            char v52 = *(unsigned char *)(*(void *)(v3 + *v23) + v50);
            *(void *)(v3 + v49) = v51;
            v48 |= (unint64_t)(v52 & 0x7F) << v46;
            if (v52 < 0)
            {
              v46 += 7;
              BOOL v31 = v47++ >= 9;
              if (v31)
              {
                uint64_t v48 = 0;
                goto LABEL_118;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v22)) {
          uint64_t v48 = 0;
        }
LABEL_118:
        *(void *)(a1 + 56) = v48;
        goto LABEL_144;
      case 3:
        if (!v36 || (*(_WORD *)(a1 + 120) & 0x400) != 0) {
          goto LABEL_113;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_178;
        }
        uint64_t v41 = objc_alloc_init(GEOLatLngE7);
        if (GEOLatLngE7ReadAllFrom((uint64_t)v41, (void *)v3))
        {
          PBReaderRecallMark();
          -[GEORecentLocationHistory _addNoFlagsRelativeLocations:](a1, v41);

LABEL_141:
          char v18 = v100;
          uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
LABEL_142:
          uint64_t v22 = (int *)MEMORY[0x1E4F940C8];
LABEL_143:
          uint64_t v23 = (int *)MEMORY[0x1E4F940B8];
LABEL_144:
          if (!(v102 & 1 | (v7 != 0)) || *(void *)(v3 + *v19) >= *(void *)(v3 + *v6)) {
            goto LABEL_157;
          }
          continue;
        }
LABEL_177:

LABEL_178:
        int v101 = 0;
        char v18 = v100;
LABEL_158:
        char v21 = v99;
LABEL_159:
        if (v21) {
LABEL_160:
        }
          *(_WORD *)(a1 + 120) |= 0x10u;
        if (v18 & 1 | ((v101 & 1) == 0))
        {
          *(_WORD *)(a1 + 120) |= 0x40u;
          *(_WORD *)(a1 + 120) |= 0x400u;
          *(_WORD *)(a1 + 120) |= 0x20u;
          *(_WORD *)(a1 + 120) |= 0x100u;
          *(_WORD *)(a1 + 120) |= 0x200u;
          *(_WORD *)(a1 + 120) |= 0x80u;
        }
        else if (v20)
        {
          while (1)
          {
            int v95 = *v20++;
            __int16 v96 = 64;
            switch(v95)
            {
              case 0:
                goto LABEL_171;
              case 1:
                goto LABEL_170;
              case 3:
                __int16 v96 = 1024;
                goto LABEL_170;
              case 6:
                __int16 v96 = 32;
                goto LABEL_170;
              case 8:
                __int16 v96 = 256;
                goto LABEL_170;
              case 9:
                __int16 v96 = 512;
                goto LABEL_170;
              case 10:
                __int16 v96 = 128;
LABEL_170:
                *(_WORD *)(a1 + 120) |= v96;
                break;
              default:
                continue;
            }
          }
        }
LABEL_171:
        if (v101)
        {
          unint64_t v3 = *(unsigned char *)(v3 + (int)*MEMORY[0x1E4F940C8]) == 0;
          if ((v18 & 1) == 0) {
            return v3;
          }
LABEL_175:
          unsigned int v97 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        else
        {
          unint64_t v3 = 0;
          if (v18) {
            goto LABEL_175;
          }
        }
        return v3;
      case 4:
        if ((v8 & 1) == 0) {
          goto LABEL_113;
        }
        char v53 = 0;
        unsigned int v54 = 0;
        uint64_t v55 = 0;
        *(_WORD *)(a1 + 120) |= 8u;
        uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
        while (2)
        {
          uint64_t v56 = *v19;
          uint64_t v57 = *(void *)(v3 + v56);
          unint64_t v58 = v57 + 1;
          if (v57 == -1 || v58 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v22) = 1;
          }
          else
          {
            char v59 = *(unsigned char *)(*(void *)(v3 + *v23) + v57);
            *(void *)(v3 + v56) = v58;
            v55 |= (unint64_t)(v59 & 0x7F) << v53;
            if (v59 < 0)
            {
              v53 += 7;
              BOOL v31 = v54++ >= 9;
              if (v31)
              {
                LODWORD(v55) = 0;
                goto LABEL_122;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v22)) {
          LODWORD(v55) = 0;
        }
LABEL_122:
        uint64_t v86 = 116;
        goto LABEL_131;
      case 5:
        if ((v8 & 1) == 0) {
          goto LABEL_113;
        }
        char v60 = 0;
        unsigned int v61 = 0;
        uint64_t v55 = 0;
        *(_WORD *)(a1 + 120) |= 2u;
        uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
        while (2)
        {
          uint64_t v62 = *v19;
          uint64_t v63 = *(void *)(v3 + v62);
          unint64_t v64 = v63 + 1;
          if (v63 == -1 || v64 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v22) = 1;
          }
          else
          {
            char v65 = *(unsigned char *)(*(void *)(v3 + *v23) + v63);
            *(void *)(v3 + v62) = v64;
            v55 |= (unint64_t)(v65 & 0x7F) << v60;
            if (v65 < 0)
            {
              v60 += 7;
              BOOL v31 = v61++ >= 9;
              if (v31)
              {
                LODWORD(v55) = 0;
                goto LABEL_126;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v22)) {
          LODWORD(v55) = 0;
        }
LABEL_126:
        uint64_t v86 = 108;
        goto LABEL_131;
      case 6:
        if (!v36 || (*(_WORD *)(a1 + 120) & 0x20) != 0) {
          goto LABEL_113;
        }
        if (v33 != 2)
        {
          char v88 = 0;
          unsigned int v89 = 0;
          uint64_t v90 = 0;
          uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
          while (1)
          {
            uint64_t v91 = *v19;
            uint64_t v92 = *(void *)(v3 + v91);
            unint64_t v93 = v92 + 1;
            if (v92 == -1 || v93 > *(void *)(v3 + *v6)) {
              break;
            }
            char v94 = *(unsigned char *)(*(void *)(v3 + *v23) + v92);
            *(void *)(v3 + v91) = v93;
            v90 |= (unint64_t)(v94 & 0x7F) << v88;
            if (v94 < 0)
            {
              v88 += 7;
              BOOL v31 = v89++ >= 9;
              if (!v31) {
                continue;
              }
            }
            goto LABEL_156;
          }
          *(unsigned char *)(v3 + *v22) = 1;
LABEL_156:
          PBRepeatedInt32Add();
          char v18 = v100;
          goto LABEL_142;
        }
        if (!PBReaderPlaceMark()) {
          goto LABEL_178;
        }
        unint64_t v66 = *(void *)(v3 + *v19);
        uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
        while (1)
        {
          uint64_t v67 = (int *)MEMORY[0x1E4F940C8];
          if (v66 >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + (int)*MEMORY[0x1E4F940C8])) {
            break;
          }
          char v68 = 0;
          unsigned int v69 = 0;
          uint64_t v70 = 0;
          char v71 = (int *)MEMORY[0x1E4F940B8];
          while (1)
          {
            uint64_t v72 = *v19;
            uint64_t v73 = *(void *)(v3 + v72);
            unint64_t v74 = v73 + 1;
            if (v73 == -1 || v74 > *(void *)(v3 + *v6)) {
              break;
            }
            char v75 = *(unsigned char *)(*(void *)(v3 + *v71) + v73);
            *(void *)(v3 + v72) = v74;
            v70 |= (unint64_t)(v75 & 0x7F) << v68;
            if (v75 < 0)
            {
              v68 += 7;
              BOOL v31 = v69++ >= 9;
              if (!v31) {
                continue;
              }
            }
            goto LABEL_94;
          }
          *(unsigned char *)(v3 + *v67) = 1;
LABEL_94:
          PBRepeatedInt32Add();
          unint64_t v66 = *(void *)(v3 + *v19);
        }
        PBReaderRecallMark();
        uint64_t v22 = (int *)MEMORY[0x1E4F940C8];
        char v18 = v100;
        goto LABEL_143;
      case 7:
        if ((v8 & 1) == 0) {
          goto LABEL_113;
        }
        char v76 = 0;
        unsigned int v77 = 0;
        uint64_t v55 = 0;
        *(_WORD *)(a1 + 120) |= 4u;
        uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
        while (2)
        {
          uint64_t v78 = *v19;
          uint64_t v79 = *(void *)(v3 + v78);
          unint64_t v80 = v79 + 1;
          if (v79 == -1 || v80 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v22) = 1;
          }
          else
          {
            char v81 = *(unsigned char *)(*(void *)(v3 + *v23) + v79);
            *(void *)(v3 + v78) = v80;
            v55 |= (unint64_t)(v81 & 0x7F) << v76;
            if (v81 < 0)
            {
              v76 += 7;
              BOOL v31 = v77++ >= 9;
              if (v31)
              {
                LODWORD(v55) = 0;
                goto LABEL_130;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v22)) {
          LODWORD(v55) = 0;
        }
LABEL_130:
        uint64_t v86 = 112;
LABEL_131:
        *(_DWORD *)(a1 + v86) = v55;
        goto LABEL_144;
      case 8:
        if (!v36) {
          goto LABEL_113;
        }
        if ((*(_WORD *)(a1 + 120) & 0x100) == 0)
        {
          uint64_t v82 = PBReaderReadData();
          uint64_t v83 = 72;
          goto LABEL_112;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_178;
        }
        __int16 v87 = *(_WORD *)(a1 + 120) << 7;
        goto LABEL_140;
      case 9:
        if (!v36) {
          goto LABEL_113;
        }
        if ((*(_WORD *)(a1 + 120) & 0x200) == 0)
        {
          uint64_t v82 = PBReaderReadData();
          uint64_t v83 = 80;
          goto LABEL_112;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_178;
        }
        __int16 v87 = *(_WORD *)(a1 + 120) << 6;
        goto LABEL_140;
      case 10:
        if (!v36) {
          goto LABEL_113;
        }
        if ((*(_WORD *)(a1 + 120) & 0x80) == 0)
        {
          uint64_t v82 = PBReaderReadData();
          uint64_t v83 = 64;
LABEL_112:
          unsigned int v84 = *(void **)(a1 + v83);
          *(void *)(a1 + v83) = v82;

          uint64_t v23 = (int *)MEMORY[0x1E4F940B8];
          uint64_t v22 = (int *)MEMORY[0x1E4F940C8];
          char v18 = v100;
          --v7;
          uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
          goto LABEL_144;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_178;
        }
        __int16 v87 = *(_WORD *)(a1 + 120) << 8;
LABEL_140:
        v7 += v87 >> 15;
        goto LABEL_141;
      default:
        if ((v99 & 1) == 0 || (*(_WORD *)(a1 + 120) & 0x10) != 0)
        {
LABEL_113:
          char v85 = PBReaderSkipValueWithTag();
          uint64_t v23 = (int *)MEMORY[0x1E4F940B8];
          uint64_t v22 = (int *)MEMORY[0x1E4F940C8];
          char v18 = v100;
          uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
          if ((v85 & 1) == 0)
          {
            int v101 = 0;
            goto LABEL_158;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v43 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            int v44 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v43;
          }
          int v45 = PBUnknownFieldAdd();
          char v18 = v100;
          uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
          uint64_t v22 = (int *)MEMORY[0x1E4F940C8];
          uint64_t v23 = (int *)MEMORY[0x1E4F940B8];
          if (!v45)
          {
            int v101 = 0;
            goto LABEL_160;
          }
        }
        goto LABEL_144;
    }
  }
}

void sub_1897F8810(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897F8D18(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897F9120(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897F928C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897F93F8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897FA2A8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEORecentLocationHistoryCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  [*(id *)(a1 + 48) readAll:1];
  long long v9 = 0u;
  long long v10 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  id v2 = *(id *)(a1 + 88);
  uint64_t v3 = [v2 countByEnumeratingWithState:&v7 objects:v11 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v8;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v8 != v5) {
          objc_enumerationMutation(v2);
        }
        objc_msgSend(*(id *)(*((void *)&v7 + 1) + 8 * v6++), "readAll:", 1, (void)v7);
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v7 objects:v11 count:16];
    }
    while (v4);
  }
}

unint64_t GEORecentLocationHistoryReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 100))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEORecentLocationHistoryReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)long long v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 104));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 96) = [v8 position];
  *(_DWORD *)(a1 + 100) = [v8 length];
  if (a3) {
    long long v9 = (int *)&GEORecentLocationHistoryReadAllFrom_recursiveTag;
  }
  else {
    long long v9 = (int *)&GEORecentLocationHistoryReadAllFrom_initialTag;
  }
  unint64_t Specified = GEORecentLocationHistoryReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEORecentLocationHistoryCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 104));
  return Specified;
}

void sub_1897FA550(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORecentLocationHistoryReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEORecentLocationHistoryReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1897FA5B4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORecentLocationHistoryIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (!a1[*v4])
    {
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        BOOL v13 = v7++ >= 9;
        if (v13)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
        case 3u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOLatLngE7IsValid(a1)) {
            goto LABEL_83;
          }
          goto LABEL_22;
        case 2u:
          if ((v8 & 7) != 0) {
            goto LABEL_83;
          }
          unsigned int v17 = 0;
          while (1)
          {
            uint64_t v18 = *v2;
            uint64_t v19 = *(void *)&a1[v18];
            unint64_t v20 = v19 + 1;
            if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
              goto LABEL_62;
            }
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if (v21 < 0)
            {
              BOOL v22 = v17++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_69;
          }
        case 4u:
          if ((v8 & 7) != 0) {
            goto LABEL_83;
          }
          unsigned int v23 = 0;
          while (1)
          {
            uint64_t v24 = *v2;
            uint64_t v25 = *(void *)&a1[v24];
            unint64_t v26 = v25 + 1;
            if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
              goto LABEL_62;
            }
            int v27 = *(char *)(*(void *)&a1[*v5] + v25);
            *(void *)&a1[v24] = v26;
            if (v27 < 0)
            {
              BOOL v22 = v23++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_69;
          }
        case 5u:
          if ((v8 & 7) != 0) {
            goto LABEL_83;
          }
          unsigned int v28 = 0;
          while (1)
          {
            uint64_t v29 = *v2;
            uint64_t v30 = *(void *)&a1[v29];
            unint64_t v31 = v30 + 1;
            if (v30 == -1 || v31 > *(void *)&a1[*v3]) {
              goto LABEL_62;
            }
            int v32 = *(char *)(*(void *)&a1[*v5] + v30);
            *(void *)&a1[v29] = v31;
            if (v32 < 0)
            {
              BOOL v22 = v28++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_69;
          }
        case 6u:
          if (v15 == 2)
          {
            if (!PBReaderPlaceMark())
            {
LABEL_83:
              PBReaderRecallMark();
              return 0;
            }
LABEL_72:
            while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
            {
              unsigned int v43 = a1[*v4];
              if (a1[*v4]) {
                break;
              }
              while (1)
              {
                uint64_t v44 = *v2;
                uint64_t v45 = *(void *)&a1[v44];
                unint64_t v46 = v45 + 1;
                if (v45 == -1 || v46 > *(void *)&a1[*v3]) {
                  break;
                }
                int v47 = *(char *)(*(void *)&a1[*v5] + v45);
                *(void *)&a1[v44] = v46;
                if (v47 < 0)
                {
                  BOOL v13 = v43++ >= 9;
                  if (!v13) {
                    continue;
                  }
                }
                goto LABEL_72;
              }
              a1[*v4] = 1;
            }
LABEL_22:
            PBReaderRecallMark();
          }
          else
          {
            if ((v8 & 7) != 0) {
              goto LABEL_83;
            }
            while (1)
            {
              uint64_t v33 = *v2;
              uint64_t v34 = *(void *)&a1[v33];
              unint64_t v35 = v34 + 1;
              if (v34 == -1 || v35 > *(void *)&a1[*v3]) {
                break;
              }
              int v36 = *(char *)(*(void *)&a1[*v5] + v34);
              *(void *)&a1[v33] = v35;
              if (v36 < 0)
              {
                unsigned int v37 = v15++;
                if (v37 <= 8) {
                  continue;
                }
              }
              goto LABEL_69;
            }
LABEL_62:
            a1[*v4] = 1;
          }
LABEL_69:
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_81;
          }
          break;
        case 7u:
          if ((v8 & 7) != 0) {
            goto LABEL_83;
          }
          unsigned int v38 = 0;
          while (1)
          {
            uint64_t v39 = *v2;
            uint64_t v40 = *(void *)&a1[v39];
            unint64_t v41 = v40 + 1;
            if (v40 == -1 || v41 > *(void *)&a1[*v3]) {
              goto LABEL_62;
            }
            int v42 = *(char *)(*(void *)&a1[*v5] + v40);
            *(void *)&a1[v39] = v41;
            if (v42 < 0)
            {
              BOOL v22 = v38++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_69;
          }
        case 8u:
          if (v15 == 2) {
            goto LABEL_68;
          }
          goto LABEL_83;
        case 9u:
          if (v15 == 2) {
            goto LABEL_68;
          }
          goto LABEL_83;
        case 0xAu:
          if (v15 == 2) {
            goto LABEL_68;
          }
          goto LABEL_83;
        default:
LABEL_68:
          if (PBReaderSkipValueWithTag()) {
            goto LABEL_69;
          }
          goto LABEL_83;
      }
    }
  }
LABEL_81:
  BOOL v48 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v48;
}

void sub_1897FAD90(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORecentLocationHistoryIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 104));
  BOOL v2 = (*(_WORD *)(a1 + 120) & 0xFE0) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 104));
  return v2;
}

void sub_1897FB3D0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1897FBA44(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORequestOptionReadAllFrom(uint64_t a1, void *a2, int a3)
{
  uint64_t v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    char v6 = (int *)MEMORY[0x1E4F940E8];
    unsigned int v7 = (int *)MEMORY[0x1E4F940E0];
    unint64_t v8 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v5[*MEMORY[0x1E4F940E8]] < *(void *)&v5[*MEMORY[0x1E4F940E0]])
    {
      uint64_t v9 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v5[*v8]) {
          break;
        }
        char v10 = 0;
        unsigned int v11 = 0;
        unint64_t v12 = 0;
        while (1)
        {
          uint64_t v13 = *v6;
          uint64_t v14 = *(void *)&v5[v13];
          unint64_t v15 = v14 + 1;
          if (v14 == -1 || v15 > *(void *)&v5[*v7]) {
            break;
          }
          char v16 = *(unsigned char *)(*(void *)&v5[*v9] + v14);
          *(void *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0) {
            goto LABEL_13;
          }
          v10 += 7;
          BOOL v17 = v11++ >= 9;
          if (v17)
          {
            unint64_t v12 = 0;
            int v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        int v18 = v5[*v8];
        if (v5[*v8]) {
          unint64_t v12 = 0;
        }
LABEL_15:
        if (v18 || (v12 & 7) == 4) {
          break;
        }
        if ((v12 >> 3) == 2)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_42;
          }
          int v27 = objc_alloc_init(GEOFormattedString);
          if (!GEOFormattedStringReadAllFrom((uint64_t)v27, v5, a3))
          {

            goto LABEL_42;
          }
          PBReaderRecallMark();
          unsigned int v28 = *(void **)(a1 + 16);
          *(void *)(a1 + 16) = v27;
        }
        else if ((v12 >> 3) == 1)
        {
          char v20 = 0;
          unsigned int v21 = 0;
          uint64_t v22 = 0;
          *(unsigned char *)(a1 + 28) |= 1u;
          while (1)
          {
            uint64_t v23 = *v6;
            uint64_t v24 = *(void *)&v5[v23];
            unint64_t v25 = v24 + 1;
            if (v24 == -1 || v25 > *(void *)&v5[*v7]) {
              break;
            }
            char v26 = *(unsigned char *)(*(void *)&v5[*v9] + v24);
            *(void *)&v5[v23] = v25;
            v22 |= (unint64_t)(v26 & 0x7F) << v20;
            if ((v26 & 0x80) == 0) {
              goto LABEL_36;
            }
            v20 += 7;
            BOOL v17 = v21++ >= 9;
            if (v17)
            {
              LODWORD(v22) = 0;
              goto LABEL_38;
            }
          }
          v5[*v8] = 1;
LABEL_36:
          if (v5[*v8]) {
            LODWORD(v22) = 0;
          }
LABEL_38:
          *(_DWORD *)(a1 + 24) = v22;
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v29 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            uint64_t v30 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v29;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_42;
          }
        }
      }
      while (*(void *)&v5[*v6] < *(void *)&v5[*v7]);
    }
    BOOL v31 = v5[*v8] == 0;
  }
  else
  {
LABEL_42:
    BOOL v31 = 0;
  }
  objc_sync_exit(v5);

  return v31;
}

void sub_1897FC49C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORequestOptionReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEORequestOptionReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1897FC500(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORequestOptionIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      if ((v8 >> 3) == 2)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOFormattedStringIsValid(a1))
        {
LABEL_38:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_38;
        }
        unsigned int v17 = 0;
        while (1)
        {
          uint64_t v18 = *v2;
          uint64_t v19 = *(void *)&a1[v18];
          unint64_t v20 = v19 + 1;
          if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
            break;
          }
          int v21 = *(char *)(*(void *)&a1[*v5] + v19);
          *(void *)&a1[v18] = v20;
          if (v21 < 0 && v17++ <= 8) {
            continue;
          }
          goto LABEL_35;
        }
        a1[*v4] = 1;
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_38;
      }
LABEL_35:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v23 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v23;
}

BOOL GEORequestOptionsReadAllFrom(uint64_t a1, void *a2, int a3)
{
  uint64_t v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    char v6 = (int *)MEMORY[0x1E4F940E8];
    unsigned int v7 = (int *)MEMORY[0x1E4F940E0];
    unint64_t v8 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v5[*MEMORY[0x1E4F940E8]] < *(void *)&v5[*MEMORY[0x1E4F940E0]])
    {
      uint64_t v9 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v5[*v8]) {
          break;
        }
        char v10 = 0;
        unsigned int v11 = 0;
        unint64_t v12 = 0;
        while (1)
        {
          uint64_t v13 = *v6;
          uint64_t v14 = *(void *)&v5[v13];
          unint64_t v15 = v14 + 1;
          if (v14 == -1 || v15 > *(void *)&v5[*v7]) {
            break;
          }
          char v16 = *(unsigned char *)(*(void *)&v5[*v9] + v14);
          *(void *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0) {
            goto LABEL_13;
          }
          v10 += 7;
          BOOL v17 = v11++ >= 9;
          if (v17)
          {
            unint64_t v12 = 0;
            int v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        int v18 = v5[*v8];
        if (v5[*v8]) {
          unint64_t v12 = 0;
        }
LABEL_15:
        if (v18 || (v12 & 7) == 4) {
          break;
        }
        if ((v12 >> 3) == 2)
        {
          char v21 = 0;
          unsigned int v22 = 0;
          uint64_t v23 = 0;
          *(unsigned char *)(a1 + 28) |= 1u;
          while (1)
          {
            uint64_t v24 = *v6;
            uint64_t v25 = *(void *)&v5[v24];
            unint64_t v26 = v25 + 1;
            if (v25 == -1 || v26 > *(void *)&v5[*v7]) {
              break;
            }
            char v27 = *(unsigned char *)(*(void *)&v5[*v9] + v25);
            *(void *)&v5[v24] = v26;
            v23 |= (unint64_t)(v27 & 0x7F) << v21;
            if ((v27 & 0x80) == 0) {
              goto LABEL_36;
            }
            v21 += 7;
            BOOL v17 = v22++ >= 9;
            if (v17)
            {
              LODWORD(v23) = 0;
              goto LABEL_38;
            }
          }
          v5[*v8] = 1;
LABEL_36:
          if (v5[*v8]) {
            LODWORD(v23) = 0;
          }
LABEL_38:
          *(_DWORD *)(a1 + 24) = v23;
        }
        else if ((v12 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_42;
          }
          unint64_t v20 = objc_alloc_init(GEORequestOption);
          if (!GEORequestOptionReadAllFrom((uint64_t)v20, v5, a3))
          {

            goto LABEL_42;
          }
          PBReaderRecallMark();
          -[GEORequestOptions addRequestOption:](a1, v20);
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v28 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            id v29 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v28;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_42;
          }
        }
      }
      while (*(void *)&v5[*v6] < *(void *)&v5[*v7]);
    }
    BOOL v30 = v5[*v8] == 0;
  }
  else
  {
LABEL_42:
    BOOL v30 = 0;
  }
  objc_sync_exit(v5);

  return v30;
}

void sub_1897FD644(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORequestOptionsIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      if ((v8 >> 3) == 2)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_38;
        }
        unsigned int v17 = 0;
        while (1)
        {
          uint64_t v18 = *v2;
          uint64_t v19 = *(void *)&a1[v18];
          unint64_t v20 = v19 + 1;
          if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
            break;
          }
          int v21 = *(char *)(*(void *)&a1[*v5] + v19);
          *(void *)&a1[v18] = v20;
          if (v21 < 0 && v17++ <= 8) {
            continue;
          }
          goto LABEL_35;
        }
        a1[*v4] = 1;
      }
      else if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEORequestOptionIsValid(a1))
        {
LABEL_38:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_38;
      }
LABEL_35:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v23 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v23;
}

BOOL GEORestrictedZoneIdReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      while (!v3[*v6])
      {
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        switch((v10 >> 3))
        {
          case 1u:
            char v18 = 0;
            unsigned int v19 = 0;
            uint64_t v20 = 0;
            *(unsigned char *)(a1 + 40) |= 1u;
            while (1)
            {
              uint64_t v21 = *v4;
              uint64_t v22 = *(void *)&v3[v21];
              unint64_t v23 = v22 + 1;
              if (v22 == -1 || v23 > *(void *)&v3[*v5]) {
                break;
              }
              char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
              *(void *)&v3[v21] = v23;
              v20 |= (unint64_t)(v24 & 0x7F) << v18;
              if ((v24 & 0x80) == 0) {
                goto LABEL_49;
              }
              v18 += 7;
              BOOL v15 = v19++ >= 9;
              if (v15)
              {
                uint64_t v20 = 0;
                goto LABEL_51;
              }
            }
            v3[*v6] = 1;
LABEL_49:
            if (v3[*v6]) {
              uint64_t v20 = 0;
            }
LABEL_51:
            *(void *)(a1 + 24) = v20;
            goto LABEL_61;
          case 2u:
            char v27 = 0;
            unsigned int v28 = 0;
            uint64_t v29 = 0;
            *(unsigned char *)(a1 + 40) |= 4u;
            while (2)
            {
              uint64_t v30 = *v4;
              uint64_t v31 = *(void *)&v3[v30];
              unint64_t v32 = v31 + 1;
              if (v31 == -1 || v32 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v33 = *(unsigned char *)(*(void *)&v3[*v7] + v31);
                *(void *)&v3[v30] = v32;
                v29 |= (unint64_t)(v33 & 0x7F) << v27;
                if (v33 < 0)
                {
                  v27 += 7;
                  BOOL v15 = v28++ >= 9;
                  if (v15)
                  {
                    LODWORD(v29) = 0;
                    goto LABEL_55;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              LODWORD(v29) = 0;
            }
LABEL_55:
            uint64_t v42 = 36;
            goto LABEL_60;
          case 3u:
            char v34 = 0;
            unsigned int v35 = 0;
            uint64_t v29 = 0;
            *(unsigned char *)(a1 + 40) |= 2u;
            while (2)
            {
              uint64_t v36 = *v4;
              uint64_t v37 = *(void *)&v3[v36];
              unint64_t v38 = v37 + 1;
              if (v37 == -1 || v38 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v39 = *(unsigned char *)(*(void *)&v3[*v7] + v37);
                *(void *)&v3[v36] = v38;
                v29 |= (unint64_t)(v39 & 0x7F) << v34;
                if (v39 < 0)
                {
                  v34 += 7;
                  BOOL v15 = v35++ >= 9;
                  if (v15)
                  {
                    LODWORD(v29) = 0;
                    goto LABEL_59;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              LODWORD(v29) = 0;
            }
LABEL_59:
            uint64_t v42 = 32;
LABEL_60:
            *(_DWORD *)(a1 + v42) = v29;
            goto LABEL_61;
          case 4u:
            if ((PBReaderPlaceMark() & 1) == 0) {
              goto LABEL_64;
            }
            uint64_t v40 = objc_alloc_init(GEOMapRegion);
            if (!GEOMapRegionReadAllFrom((uint64_t)v40, v3))
            {

              goto LABEL_64;
            }
            PBReaderRecallMark();
            unint64_t v41 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v40;

LABEL_61:
            if (*(void *)&v3[*v4] >= *(void *)&v3[*v5]) {
              goto LABEL_62;
            }
            break;
          default:
            if (!*(void *)(a1 + 8))
            {
              id v25 = objc_alloc_init(MEMORY[0x1E4F940B0]);
              unint64_t v26 = *(void **)(a1 + 8);
              *(void *)(a1 + 8) = v25;
            }
            if (!PBUnknownFieldAdd()) {
              goto LABEL_64;
            }
            goto LABEL_61;
        }
      }
    }
LABEL_62:
    BOOL v43 = v3[*v6] == 0;
  }
  else
  {
LABEL_64:
    BOOL v43 = 0;
  }
  objc_sync_exit(v3);

  return v43;
}

void sub_1897FEC74(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORestrictedZoneIdReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEORestrictedZoneIdReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1897FECE8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORestrictedZoneIdIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_53;
          }
          unsigned int v17 = 0;
          while (1)
          {
            uint64_t v18 = *v2;
            uint64_t v19 = *(void *)&a1[v18];
            unint64_t v20 = v19 + 1;
            if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
              goto LABEL_45;
            }
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if (v21 < 0)
            {
              BOOL v22 = v17++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_50;
          }
        case 2u:
          if ((v8 & 7) != 0) {
            goto LABEL_53;
          }
          unsigned int v23 = 0;
          while (1)
          {
            uint64_t v24 = *v2;
            uint64_t v25 = *(void *)&a1[v24];
            unint64_t v26 = v25 + 1;
            if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
              goto LABEL_45;
            }
            int v27 = *(char *)(*(void *)&a1[*v5] + v25);
            *(void *)&a1[v24] = v26;
            if (v27 < 0)
            {
              BOOL v22 = v23++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_50;
          }
        case 3u:
          if ((v8 & 7) != 0) {
            goto LABEL_53;
          }
          unsigned int v28 = 0;
          break;
        case 4u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOMapRegionIsValid(a1)) {
            goto LABEL_53;
          }
          PBReaderRecallMark();
          continue;
        default:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_53:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        uint64_t v29 = *v2;
        uint64_t v30 = *(void *)&a1[v29];
        unint64_t v31 = v30 + 1;
        if (v30 == -1 || v31 > *(void *)&a1[*v3]) {
          break;
        }
        int v32 = *(char *)(*(void *)&a1[*v5] + v30);
        *(void *)&a1[v29] = v31;
        if (v32 < 0)
        {
          BOOL v22 = v28++ > 8;
          if (!v22) {
            continue;
          }
        }
        goto LABEL_50;
      }
LABEL_45:
      a1[*v4] = 1;
LABEL_50:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v33 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v33;
}

void sub_1897FF814(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORestrictionDetailsReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  char v7 = 0;
  uint64_t v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  int v12 = ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1)
      + (*(unsigned char *)(a1 + 52) & 1)
      + ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1);
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v7 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 != 0;
        char v17 = v16 & ~(_BYTE)v11 | v9;
        unsigned __int8 v18 = v16 | v11;
        char v51 = v17;
        char v52 = v18 | v17;
        if ((v18 | v7)) {
          uint64_t v19 = 0;
        }
        else {
          uint64_t v19 = a3;
        }
        char v53 = (v19 == 0) | v18;
        BOOL v54 = v18;
        unint64_t v20 = (int *)MEMORY[0x1E4F940E8];
        int v21 = (int *)MEMORY[0x1E4F940C8];
        BOOL v22 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v9;
LABEL_8:
        uint64_t v14 = v10;
        uint64_t v15 = v11;
LABEL_10:
        ++v8;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v21)) {
      goto LABEL_62;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      if (v24++ >= 9)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_25:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_62:
      int v49 = 1;
      goto LABEL_63;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v54;
    if ((v53 & 1) == 0)
    {
      unsigned int v35 = v19;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    if (v33 == 2) {
      break;
    }
    if (v33 == 1)
    {
      if (!v34) {
        goto LABEL_56;
      }
      if ((*(unsigned char *)(a1 + 52) & 4) != 0)
      {
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_81;
        }
        v8 += *(unsigned __int8 *)(a1 + 52) << 29 >> 31;
      }
      else
      {
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_81;
        }
        char v39 = objc_alloc_init(GEOFormattedString);
        if (!GEOFormattedStringReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1)) {
          goto LABEL_80;
        }
        PBReaderRecallMark();
        uint64_t v40 = *(void **)(a1 + 32);
        *(void *)(a1 + 32) = v39;

        --v8;
      }
      goto LABEL_60;
    }
    if (v51 & 1) == 0 || (*(unsigned char *)(a1 + 52)) {
      goto LABEL_56;
    }
    if (!*(void *)(a1 + 16))
    {
      id v41 = objc_alloc_init(MEMORY[0x1E4F940B0]);
      uint64_t v42 = *(void **)(a1 + 16);
      *(void *)(a1 + 16) = v41;
    }
    int v43 = PBUnknownFieldAdd();
    int v21 = (int *)MEMORY[0x1E4F940C8];
    if (!v43)
    {
      int v49 = 0;
      uint64_t v50 = &OBJC_IVAR___GEOActiveTileGroup__textureChecksums;
      goto LABEL_64;
    }
LABEL_61:
    if (!(v52 & 1 | (v8 != 0))) {
      goto LABEL_62;
    }
  }
  if (!v34 || (*(unsigned char *)(a1 + 52) & 2) != 0)
  {
LABEL_56:
    char v44 = PBReaderSkipValueWithTag();
    int v21 = (int *)MEMORY[0x1E4F940C8];
    if ((v44 & 1) == 0)
    {
      int v49 = 0;
      goto LABEL_63;
    }
    goto LABEL_61;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_81;
  }
  char v39 = objc_alloc_init(GEOFormattedString);
  if (GEOFormattedStringReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1))
  {
    PBReaderRecallMark();
    -[GEORestrictionDetails _addNoFlagsMessageString:](a1, v39);

LABEL_60:
    int v21 = (int *)MEMORY[0x1E4F940C8];
    goto LABEL_61;
  }
LABEL_80:

LABEL_81:
  int v49 = 0;
  int v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_63:
  uint64_t v50 = &OBJC_IVAR___GEOActiveTileGroup__textureChecksums;
  if ((v51 & 1) == 0) {
    goto LABEL_65;
  }
LABEL_64:
  *(unsigned char *)(a1 + v50[755]) |= 1u;
LABEL_65:
  if (v54 || (v49 & 1) == 0)
  {
    *(unsigned char *)(a1 + v50[755]) |= 4u;
    *(unsigned char *)(a1 + v50[755]) |= 2u;
    goto LABEL_74;
  }
  if (v19)
  {
    while (1)
    {
      int v46 = *v19++;
      int v45 = v46;
      if (v46 == 1) {
        break;
      }
      if (v45 == 2)
      {
LABEL_70:
        *(unsigned char *)(a1 + v50[755]) |= v45;
      }
      else if (!v45)
      {
        goto LABEL_74;
      }
    }
    LOBYTE(v45) = 4;
    goto LABEL_70;
  }
LABEL_74:
  if (v49) {
    unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
  }
  else {
    unint64_t v3 = 0;
  }
  if (v54)
  {
    int v47 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_1897FFEC4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189800944(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEORestrictionDetailsCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  [*(id *)(a1 + 32) readAll:1];
  long long v9 = 0u;
  long long v10 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  id v2 = *(id *)(a1 + 24);
  uint64_t v3 = [v2 countByEnumeratingWithState:&v7 objects:v11 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v8;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v8 != v5) {
          objc_enumerationMutation(v2);
        }
        objc_msgSend(*(id *)(*((void *)&v7 + 1) + 8 * v6++), "readAll:", 1, (void)v7);
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v7 objects:v11 count:16];
    }
    while (v4);
  }
}

unint64_t GEORestrictionDetailsReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEORestrictionDetailsReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)long long v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    long long v9 = (int *)&GEORestrictionDetailsReadAllFrom_recursiveTag;
  }
  else {
    long long v9 = (int *)&GEORestrictionDetailsReadAllFrom_initialTag;
  }
  unint64_t Specified = GEORestrictionDetailsReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEORestrictionDetailsCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_189800BF0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORestrictionDetailsReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEORestrictionDetailsReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189800C54(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORestrictionDetailsIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      if ((v8 >> 3) == 2 || (v8 >> 3) == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOFormattedStringIsValid(a1))
        {
LABEL_27:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_27;
      }
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

void sub_18980105C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORestrictionDetailsIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  unsigned int v2 = *(unsigned __int8 *)(a1 + 52);
  if ((v2 & 8) != 0) {
    return 1;
  }
  if ((v2 & 4) != 0)
  {
    if (GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(a1 + 32))) {
      return 1;
    }
    unsigned int v2 = *(unsigned __int8 *)(a1 + 52);
  }
  return (v2 >> 1) & 1;
}

os_unfair_lock_s *GEORestrictionDetailsIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    uint64_t v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEORestrictionDetailsIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 12);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_189801490(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898017AC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189801B14(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORestrictionInfoReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 60);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 56)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  unsigned int v12 = (vaddv_s16((int16x4_t)(*(void *)&vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int8 *)(a1 + 68)), (uint16x4_t)0xFFFEFFFFFFFCFFFDLL) & 0xFF01FF01FF01FF01))+ (*(unsigned char *)(a1 + 68) & 1));
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 > 2;
        char v17 = v16 & ~(_BYTE)v11 | v9;
        unsigned __int8 v18 = v16 | v11;
        char v53 = v17;
        char v54 = v18 | v17;
        if ((v18 | v8)) {
          uint64_t v19 = 0;
        }
        else {
          uint64_t v19 = a3;
        }
        unint64_t v20 = (int *)MEMORY[0x1E4F940E8];
        int v21 = (int *)MEMORY[0x1E4F940C8];
        char v55 = (v19 == 0) | v18;
        BOOL v56 = v18;
        BOOL v22 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v9;
LABEL_8:
        uint64_t v14 = v10;
        uint64_t v15 = v11;
LABEL_10:
        ++v7;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v21)) {
      goto LABEL_77;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      if (v24++ >= 9)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_25:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_77:
      int v51 = 1;
      goto LABEL_78;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v56;
    if ((v55 & 1) == 0)
    {
      unsigned int v35 = v19;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    switch((int)v33)
    {
      case 3:
        if (!v34) {
          goto LABEL_66;
        }
        if ((*(unsigned char *)(a1 + 68) & 0x10) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_95;
          }
          char v39 = objc_alloc_init(GEOFormattedString);
          if (GEOFormattedStringReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1))
          {
            PBReaderRecallMark();
            uint64_t v40 = 48;
            goto LABEL_60;
          }
          goto LABEL_94;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_95;
        }
        char v46 = 8 * *(unsigned char *)(a1 + 68);
        goto LABEL_74;
      case 4:
        if (!v34) {
          goto LABEL_66;
        }
        if ((*(unsigned char *)(a1 + 68) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_95;
          }
          char v46 = 16 * *(unsigned char *)(a1 + 68);
          goto LABEL_74;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_95;
        }
        char v39 = objc_alloc_init(GEOFormattedString);
        if (!GEOFormattedStringReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1)) {
          goto LABEL_94;
        }
        PBReaderRecallMark();
        uint64_t v40 = 40;
        goto LABEL_60;
      case 5:
        if (!v34) {
          goto LABEL_66;
        }
        if ((*(unsigned char *)(a1 + 68) & 2) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_95;
          }
          char v46 = *(unsigned char *)(a1 + 68) << 6;
LABEL_74:
          v7 += v46 >> 7;
LABEL_75:
          int v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_76:
          if (!(v54 & 1 | (v7 != 0))) {
            goto LABEL_77;
          }
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_95;
        }
        char v39 = objc_alloc_init(GEOFormattedString);
        if (GEOFormattedStringReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1))
        {
          PBReaderRecallMark();
          uint64_t v40 = 24;
LABEL_60:
          char v44 = *(void **)(a1 + v40);
          *(void *)(a1 + v40) = v39;

          --v7;
          goto LABEL_75;
        }
LABEL_94:

LABEL_95:
        int v51 = 0;
        int v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_78:
        char v52 = &OBJC_IVAR___GEOActiveTileGroup__textureChecksums;
        if (v53) {
LABEL_79:
        }
          *(unsigned char *)(a1 + v52[762]) |= 1u;
        if (v56 || (v51 & 1) == 0)
        {
          *(unsigned char *)(a1 + v52[762]) |= 0x10u;
          *(unsigned char *)(a1 + v52[762]) |= 8u;
          *(unsigned char *)(a1 + v52[762]) |= 2u;
          *(unsigned char *)(a1 + v52[762]) |= 4u;
        }
        else if (v19)
        {
          while (1)
          {
            int v47 = *v19++;
            char v48 = 16;
            switch(v47)
            {
              case 0:
                goto LABEL_88;
              case 3:
                goto LABEL_87;
              case 4:
                char v48 = 8;
                goto LABEL_87;
              case 5:
                char v48 = 2;
                goto LABEL_87;
              case 6:
                char v48 = 4;
LABEL_87:
                *(unsigned char *)(a1 + v52[762]) |= v48;
                break;
              default:
                continue;
            }
          }
        }
LABEL_88:
        if (v51) {
          unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
        }
        else {
          unint64_t v3 = 0;
        }
        if (v56)
        {
          int v49 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      case 6:
        if (!v34 || (*(unsigned char *)(a1 + 68) & 4) != 0) {
          goto LABEL_66;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_95;
        }
        char v39 = objc_alloc_init(GEORestrictionDetails);
        if (!GEORestrictionDetailsReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1)) {
          goto LABEL_94;
        }
        PBReaderRecallMark();
        -[GEORestrictionInfo _addNoFlagsRestrictionDetails:](a1, v39);

        goto LABEL_75;
      default:
        if (v53 & 1) == 0 || (*(unsigned char *)(a1 + 68))
        {
LABEL_66:
          char v45 = PBReaderSkipValueWithTag();
          int v21 = (int *)MEMORY[0x1E4F940C8];
          if ((v45 & 1) == 0)
          {
            int v51 = 0;
            goto LABEL_78;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v41 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            uint64_t v42 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v41;
          }
          int v43 = PBUnknownFieldAdd();
          int v21 = (int *)MEMORY[0x1E4F940C8];
          if (!v43)
          {
            int v51 = 0;
            char v52 = &OBJC_IVAR___GEOActiveTileGroup__textureChecksums;
            goto LABEL_79;
          }
        }
        goto LABEL_76;
    }
  }
}

void sub_189802390(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898024FC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189802664(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898032B0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEORestrictionInfoCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  [a1[6] readAll:1];
  [a1[5] readAll:1];
  [a1[3] readAll:1];
  long long v9 = 0u;
  long long v10 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  id v2 = a1[4];
  uint64_t v3 = [v2 countByEnumeratingWithState:&v7 objects:v11 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v8;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v8 != v5) {
          objc_enumerationMutation(v2);
        }
        objc_msgSend(*(id *)(*((void *)&v7 + 1) + 8 * v6++), "readAll:", 1, (void)v7);
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v7 objects:v11 count:16];
    }
    while (v4);
  }
}

unint64_t GEORestrictionInfoReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 60))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEORestrictionInfoReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)long long v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = [v8 position];
  *(_DWORD *)(a1 + 60) = [v8 length];
  if (a3) {
    long long v9 = (int *)&GEORestrictionInfoReadAllFrom_recursiveTag;
  }
  else {
    long long v9 = (int *)&GEORestrictionInfoReadAllFrom_initialTag;
  }
  unint64_t Specified = GEORestrictionInfoReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEORestrictionInfoCallReadAllRecursiveWithoutSynchronized((id *)a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_189803578(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORestrictionInfoReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEORestrictionInfoReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1898035DC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORestrictionInfoIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (!a1[*v4])
    {
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 3u:
        case 4u:
        case 5u:
          if (v15 == 2 && PBReaderPlaceMark() && GEOFormattedStringIsValid(a1)) {
            goto LABEL_28;
          }
          goto LABEL_31;
        case 6u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORestrictionDetailsIsValid(a1)) {
            goto LABEL_31;
          }
LABEL_28:
          PBReaderRecallMark();
          goto LABEL_29;
        default:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_31:
            PBReaderRecallMark();
            return 0;
          }
LABEL_29:
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_30;
          }
          break;
      }
    }
  }
LABEL_30:
  BOOL v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

void sub_189803A74(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORestrictionInfoIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  unsigned int v2 = *(unsigned __int8 *)(a1 + 68);
  if ((v2 & 0x20) != 0) {
    return 1;
  }
  if ((v2 & 0x10) != 0)
  {
    if (GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(a1 + 48))) {
      return 1;
    }
    unsigned int v2 = *(unsigned __int8 *)(a1 + 68);
  }
  if ((v2 & 8) == 0) {
    goto LABEL_8;
  }
  if (GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(a1 + 40))) {
    return 1;
  }
  unsigned int v2 = *(unsigned __int8 *)(a1 + 68);
LABEL_8:
  if ((v2 & 2) != 0)
  {
    if (GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(a1 + 24))) {
      return 1;
    }
    unsigned int v2 = *(unsigned __int8 *)(a1 + 68);
  }
  return (v2 >> 2) & 1;
}

os_unfair_lock_s *GEORestrictionInfoIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    uint64_t v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEORestrictionInfoIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 16);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_189803F50(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189804328(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORestrictionZoneInfoReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        switch((v10 >> 3))
        {
          case 1u:
            if ((PBReaderPlaceMark() & 1) == 0) {
              goto LABEL_64;
            }
            unsigned __int8 v18 = objc_alloc_init(GEORestrictedZoneId);
            if (GEORestrictedZoneIdReadAllFrom((uint64_t)v18, v3))
            {
              PBReaderRecallMark();
              objc_msgSend((id)a1, "addRestrictedZoneIds:", v18, 0, 0);

              continue;
            }

            goto LABEL_64;
          case 2u:
            char v21 = 0;
            unsigned int v22 = 0;
            uint64_t v23 = 0;
            *(unsigned char *)(a1 + 36) |= 2u;
            while (2)
            {
              uint64_t v24 = *v4;
              uint64_t v25 = *(void *)&v3[v24];
              unint64_t v26 = v25 + 1;
              if (v25 == -1 || v26 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v27 = *(unsigned char *)(*(void *)&v3[*v7] + v25);
                *(void *)&v3[v24] = v26;
                v23 |= (unint64_t)(v27 & 0x7F) << v21;
                if (v27 < 0)
                {
                  v21 += 7;
                  BOOL v15 = v22++ >= 9;
                  if (v15)
                  {
                    LODWORD(v23) = 0;
                    goto LABEL_51;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              LODWORD(v23) = 0;
            }
LABEL_51:
            uint64_t v40 = 28;
            goto LABEL_60;
          case 3u:
            char v28 = 0;
            unsigned int v29 = 0;
            uint64_t v23 = 0;
            *(unsigned char *)(a1 + 36) |= 1u;
            while (2)
            {
              uint64_t v30 = *v4;
              uint64_t v31 = *(void *)&v3[v30];
              unint64_t v32 = v31 + 1;
              if (v31 == -1 || v32 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v33 = *(unsigned char *)(*(void *)&v3[*v7] + v31);
                *(void *)&v3[v30] = v32;
                v23 |= (unint64_t)(v33 & 0x7F) << v28;
                if (v33 < 0)
                {
                  v28 += 7;
                  BOOL v15 = v29++ >= 9;
                  if (v15)
                  {
                    LODWORD(v23) = 0;
                    goto LABEL_55;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              LODWORD(v23) = 0;
            }
LABEL_55:
            uint64_t v40 = 24;
            goto LABEL_60;
          case 4u:
            char v34 = 0;
            unsigned int v35 = 0;
            uint64_t v23 = 0;
            *(unsigned char *)(a1 + 36) |= 4u;
            break;
          default:
            if (!*(void *)(a1 + 8))
            {
              id v19 = objc_alloc_init(MEMORY[0x1E4F940B0]);
              unint64_t v20 = *(void **)(a1 + 8);
              *(void *)(a1 + 8) = v19;
            }
            if (!PBUnknownFieldAdd()) {
              goto LABEL_64;
            }
            continue;
        }
        while (1)
        {
          uint64_t v36 = *v4;
          uint64_t v37 = *(void *)&v3[v36];
          unint64_t v38 = v37 + 1;
          if (v37 == -1 || v38 > *(void *)&v3[*v5]) {
            break;
          }
          char v39 = *(unsigned char *)(*(void *)&v3[*v7] + v37);
          *(void *)&v3[v36] = v38;
          v23 |= (unint64_t)(v39 & 0x7F) << v34;
          if ((v39 & 0x80) == 0) {
            goto LABEL_57;
          }
          v34 += 7;
          BOOL v15 = v35++ >= 9;
          if (v15)
          {
            LODWORD(v23) = 0;
            goto LABEL_59;
          }
        }
        v3[*v6] = 1;
LABEL_57:
        if (v3[*v6]) {
          LODWORD(v23) = 0;
        }
LABEL_59:
        uint64_t v40 = 32;
LABEL_60:
        *(_DWORD *)(a1 + v40) = v23;
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v41 = v3[*v6] == 0;
  }
  else
  {
LABEL_64:
    BOOL v41 = 0;
  }
  objc_sync_exit(v3);

  return v41;
}

void sub_189805C08(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORestrictionZoneInfoReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEORestrictionZoneInfoReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189805C7C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORestrictionZoneInfoIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  unsigned int v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORestrictedZoneIdIsValid(a1)) {
            goto LABEL_53;
          }
          PBReaderRecallMark();
          continue;
        case 2u:
          if ((v8 & 7) != 0) {
            goto LABEL_53;
          }
          unsigned int v17 = 0;
          while (1)
          {
            uint64_t v18 = *v2;
            uint64_t v19 = *(void *)&a1[v18];
            unint64_t v20 = v19 + 1;
            if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
              goto LABEL_49;
            }
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if (v21 < 0)
            {
              BOOL v22 = v17++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_50;
          }
        case 3u:
          if ((v8 & 7) != 0) {
            goto LABEL_53;
          }
          unsigned int v23 = 0;
          while (1)
          {
            uint64_t v24 = *v2;
            uint64_t v25 = *(void *)&a1[v24];
            unint64_t v26 = v25 + 1;
            if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
              goto LABEL_49;
            }
            int v27 = *(char *)(*(void *)&a1[*v5] + v25);
            *(void *)&a1[v24] = v26;
            if (v27 < 0)
            {
              BOOL v22 = v23++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_50;
          }
        case 4u:
          if ((v8 & 7) != 0) {
            goto LABEL_53;
          }
          unsigned int v28 = 0;
          break;
        default:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_53:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        uint64_t v29 = *v2;
        uint64_t v30 = *(void *)&a1[v29];
        unint64_t v31 = v30 + 1;
        if (v30 == -1 || v31 > *(void *)&a1[*v3]) {
          break;
        }
        int v32 = *(char *)(*(void *)&a1[*v5] + v30);
        *(void *)&a1[v29] = v31;
        if (v32 < 0)
        {
          BOOL v22 = v28++ > 8;
          if (!v22) {
            continue;
          }
        }
        goto LABEL_50;
      }
LABEL_49:
      a1[*v4] = 1;
LABEL_50:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v33 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v33;
}

BOOL GEORoadComplexityReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      while (1)
      {
        if (v3[*v6]) {
          goto LABEL_53;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          goto LABEL_53;
        }
        unint64_t v18 = v10 >> 3;
        if ((v10 >> 3) == 3) {
          break;
        }
        if (v18 == 2)
        {
          char v27 = 0;
          unsigned int v28 = 0;
          uint64_t v22 = 0;
          *(unsigned char *)(a1 + 32) |= 1u;
          while (1)
          {
            uint64_t v29 = *v4;
            uint64_t v30 = *(void *)&v3[v29];
            unint64_t v31 = v30 + 1;
            if (v30 == -1 || v31 > *(void *)&v3[*v5]) {
              break;
            }
            char v32 = *(unsigned char *)(*(void *)&v3[*v7] + v30);
            *(void *)&v3[v29] = v31;
            v22 |= (unint64_t)(v32 & 0x7F) << v27;
            if ((v32 & 0x80) == 0) {
              goto LABEL_48;
            }
            v27 += 7;
            BOOL v15 = v28++ >= 9;
            if (v15)
            {
              LODWORD(v22) = 0;
              goto LABEL_50;
            }
          }
          v3[*v6] = 1;
LABEL_48:
          if (v3[*v6]) {
            LODWORD(v22) = 0;
          }
LABEL_50:
          uint64_t v35 = 24;
LABEL_51:
          *(_DWORD *)(a1 + v35) = v22;
          goto LABEL_52;
        }
        if (v18 == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_55;
          }
          uint64_t v19 = objc_alloc_init(GEOAttribute);
          if (!GEOAttributeReadAllFrom((uint64_t)v19, v3))
          {

            goto LABEL_55;
          }
          PBReaderRecallMark();
          objc_msgSend((id)a1, "addAttribute:", v19, 0, 0);
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v33 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            char v34 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v33;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_55;
          }
        }
LABEL_52:
        if (*(void *)&v3[*v4] >= *(void *)&v3[*v5]) {
          goto LABEL_53;
        }
      }
      char v20 = 0;
      unsigned int v21 = 0;
      uint64_t v22 = 0;
      *(unsigned char *)(a1 + 32) |= 2u;
      while (1)
      {
        uint64_t v23 = *v4;
        uint64_t v24 = *(void *)&v3[v23];
        unint64_t v25 = v24 + 1;
        if (v24 == -1 || v25 > *(void *)&v3[*v5]) {
          break;
        }
        char v26 = *(unsigned char *)(*(void *)&v3[*v7] + v24);
        *(void *)&v3[v23] = v25;
        v22 |= (unint64_t)(v26 & 0x7F) << v20;
        if ((v26 & 0x80) == 0) {
          goto LABEL_44;
        }
        v20 += 7;
        BOOL v15 = v21++ >= 9;
        if (v15)
        {
          LODWORD(v22) = 0;
          goto LABEL_46;
        }
      }
      v3[*v6] = 1;
LABEL_44:
      if (v3[*v6]) {
        LODWORD(v22) = 0;
      }
LABEL_46:
      uint64_t v35 = 28;
      goto LABEL_51;
    }
LABEL_53:
    BOOL v36 = v3[*v6] == 0;
  }
  else
  {
LABEL_55:
    BOOL v36 = 0;
  }
  objc_sync_exit(v3);

  return v36;
}

void sub_18980769C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORoadComplexityReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEORoadComplexityReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189807700(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORoadComplexityIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  unsigned int v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_44;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        goto LABEL_44;
      }
      unint64_t v17 = v8 >> 3;
      if ((v8 >> 3) == 3) {
        break;
      }
      if (v17 == 2)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_46;
        }
        unsigned int v24 = 0;
        while (1)
        {
          uint64_t v25 = *v2;
          uint64_t v26 = *(void *)&a1[v25];
          unint64_t v27 = v26 + 1;
          if (v26 == -1 || v27 > *(void *)&a1[*v3]) {
            goto LABEL_41;
          }
          int v28 = *(char *)(*(void *)&a1[*v5] + v26);
          *(void *)&a1[v25] = v27;
          if (v28 < 0)
          {
            BOOL v23 = v24++ > 8;
            if (!v23) {
              continue;
            }
          }
          goto LABEL_43;
        }
      }
      if (v17 == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOAttributeIsValid(a1))
        {
LABEL_46:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_46;
      }
LABEL_43:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_44;
      }
    }
    if ((v8 & 7) != 0) {
      goto LABEL_46;
    }
    unsigned int v18 = 0;
    while (1)
    {
      uint64_t v19 = *v2;
      uint64_t v20 = *(void *)&a1[v19];
      unint64_t v21 = v20 + 1;
      if (v20 == -1 || v21 > *(void *)&a1[*v3]) {
        break;
      }
      int v22 = *(char *)(*(void *)&a1[*v5] + v20);
      *(void *)&a1[v19] = v21;
      if (v22 < 0)
      {
        BOOL v23 = v18++ > 8;
        if (!v23) {
          continue;
        }
      }
      goto LABEL_43;
    }
LABEL_41:
    a1[*v4] = 1;
    goto LABEL_43;
  }
LABEL_44:
  BOOL v29 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v29;
}

BOOL GEORoadDescriptionReadAllFrom(uint64_t a1, void *a2, int a3)
{
  uint64_t v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    char v6 = (int *)MEMORY[0x1E4F940E8];
    unsigned int v7 = (int *)MEMORY[0x1E4F940E0];
    unint64_t v8 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v5[*MEMORY[0x1E4F940E8]] < *(void *)&v5[*MEMORY[0x1E4F940E0]])
    {
      uint64_t v9 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v5[*v8]) {
          break;
        }
        char v10 = 0;
        unsigned int v11 = 0;
        unint64_t v12 = 0;
        while (1)
        {
          uint64_t v13 = *v6;
          uint64_t v14 = *(void *)&v5[v13];
          unint64_t v15 = v14 + 1;
          if (v14 == -1 || v15 > *(void *)&v5[*v7]) {
            break;
          }
          char v16 = *(unsigned char *)(*(void *)&v5[*v9] + v14);
          *(void *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0) {
            goto LABEL_13;
          }
          v10 += 7;
          BOOL v17 = v11++ >= 9;
          if (v17)
          {
            unint64_t v12 = 0;
            int v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        int v18 = v5[*v8];
        if (v5[*v8]) {
          unint64_t v12 = 0;
        }
LABEL_15:
        if (v18 || (v12 & 7) == 4) {
          break;
        }
        if ((v12 >> 3) == 2)
        {
          char v22 = 0;
          unsigned int v23 = 0;
          uint64_t v24 = 0;
          *(unsigned char *)(a1 + 28) |= 1u;
          while (1)
          {
            uint64_t v25 = *v6;
            uint64_t v26 = *(void *)&v5[v25];
            unint64_t v27 = v26 + 1;
            if (v26 == -1 || v27 > *(void *)&v5[*v7]) {
              break;
            }
            char v28 = *(unsigned char *)(*(void *)&v5[*v9] + v26);
            *(void *)&v5[v25] = v27;
            v24 |= (unint64_t)(v28 & 0x7F) << v22;
            if ((v28 & 0x80) == 0) {
              goto LABEL_36;
            }
            v22 += 7;
            BOOL v17 = v23++ >= 9;
            if (v17)
            {
              LODWORD(v24) = 0;
              goto LABEL_38;
            }
          }
          v5[*v8] = 1;
LABEL_36:
          if (v5[*v8]) {
            LODWORD(v24) = 0;
          }
LABEL_38:
          *(_DWORD *)(a1 + 24) = v24;
        }
        else if ((v12 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_42;
          }
          uint64_t v20 = objc_alloc_init(GEOFormattedString);
          if (!GEOFormattedStringReadAllFrom((uint64_t)v20, v5, a3))
          {

            goto LABEL_42;
          }
          PBReaderRecallMark();
          unint64_t v21 = *(void **)(a1 + 16);
          *(void *)(a1 + 16) = v20;
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v29 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            uint64_t v30 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v29;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_42;
          }
        }
      }
      while (*(void *)&v5[*v6] < *(void *)&v5[*v7]);
    }
    BOOL v31 = v5[*v8] == 0;
  }
  else
  {
LABEL_42:
    BOOL v31 = 0;
  }
  objc_sync_exit(v5);

  return v31;
}

void sub_189808C68(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORoadDescriptionReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEORoadDescriptionReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189808CCC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORoadDescriptionIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  unsigned int v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      if ((v8 >> 3) == 2)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_38;
        }
        unsigned int v17 = 0;
        while (1)
        {
          uint64_t v18 = *v2;
          uint64_t v19 = *(void *)&a1[v18];
          unint64_t v20 = v19 + 1;
          if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
            break;
          }
          int v21 = *(char *)(*(void *)&a1[*v5] + v19);
          *(void *)&a1[v18] = v20;
          if (v21 < 0 && v17++ <= 8) {
            continue;
          }
          goto LABEL_35;
        }
        a1[*v4] = 1;
      }
      else if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOFormattedStringIsValid(a1))
        {
LABEL_38:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_38;
      }
LABEL_35:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v23 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v23;
}

void sub_18980980C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORouteReadSpecified(uint64_t a1, char *a2, int *a3)
{
  if (!a2) {
    return 0;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 496));
  *(void *)&a2[*MEMORY[0x1E4F940E0]] = *(unsigned int *)(a1 + 492);
  [a2 seekToOffset:*(unsigned int *)(a1 + 488)];
  uint64_t v6 = 0;
  uint64_t v7 = 0;
  uint64_t v8 = 0;
  uint64_t v9 = 0;
  int32x2_t v10 = (int32x2_t)*(unsigned __int8 *)(a1 + 572);
  unint64_t v11 = *(void *)(a1 + 564);
  *((int32x2_t *)&v12 + 1) = v10;
  *(void *)&long long v12 = v11;
  int32x2_t v13 = (int32x2_t)(v12 >> 49);
  *((int32x2_t *)&v12 + 1) = v10;
  *(void *)&long long v12 = v11;
  int32x2_t v14 = (int32x2_t)(v12 >> 58);
  *((int32x2_t *)&v12 + 1) = v10;
  *(void *)&long long v12 = v11;
  int32x2_t v15 = (int32x2_t)(v12 >> 46);
  *((int32x2_t *)&v12 + 1) = v10;
  *(void *)&long long v12 = v11;
  int32x2_t v16 = (int32x2_t)(v12 >> 59);
  *((int32x2_t *)&v12 + 1) = v10;
  *(void *)&long long v12 = v11;
  int32x2_t v312 = (int32x2_t)(v12 >> 50);
  int32x2_t v314 = v16;
  *((int32x2_t *)&v12 + 1) = v10;
  *(void *)&long long v12 = v11;
  int32x2_t v17 = (int32x2_t)(v12 >> 54);
  *((int32x2_t *)&v12 + 1) = v10;
  *(void *)&long long v12 = v11;
  int32x2_t v18 = (int32x2_t)(v12 >> 51);
  *((int32x2_t *)&v12 + 1) = v10;
  *(void *)&long long v12 = v11;
  int32x2_t v19 = (int32x2_t)(v12 >> 61);
  *((int32x2_t *)&v12 + 1) = v10;
  *(void *)&long long v12 = v11;
  int32x2_t v20 = (int32x2_t)(v12 >> 60);
  *((int32x2_t *)&v12 + 1) = v10;
  *(void *)&long long v12 = v11;
  int32x2_t v21 = (int32x2_t)(v12 >> 56);
  *((int32x2_t *)&v12 + 1) = v10;
  *(void *)&long long v12 = v11;
  int32x2_t v22 = (int32x2_t)(v12 >> 34);
  *((int32x2_t *)&v12 + 1) = v10;
  *(void *)&long long v12 = v11;
  int32x2_t v23 = (int32x2_t)(v12 >> 47);
  *((int32x2_t *)&v12 + 1) = v10;
  *(void *)&long long v12 = v11;
  int32x2_t v24 = (int32x2_t)(v12 >> 33);
  *((int32x2_t *)&v12 + 1) = v10;
  *(void *)&long long v12 = v11;
  int32x2_t v25 = (int32x2_t)(v12 >> 63);
  *((int32x2_t *)&v12 + 1) = v10;
  *(void *)&long long v12 = v11;
  int32x2_t v26 = (int32x2_t)(v12 >> 57);
  *((int32x2_t *)&v12 + 1) = v10;
  *(void *)&long long v12 = v11;
  int32x2_t v27 = (int32x2_t)(v12 >> 40);
  *((int32x2_t *)&v12 + 1) = v10;
  *(void *)&long long v12 = v11;
  int32x2_t v28 = (int32x2_t)(v12 >> 36);
  *((int32x2_t *)&v12 + 1) = v10;
  *(void *)&long long v12 = v11;
  int32x2_t v29 = (int32x2_t)(v12 >> 39);
  *((int32x2_t *)&v12 + 1) = v10;
  *(void *)&long long v12 = v11;
  int32x2_t v30 = (int32x2_t)(v12 >> 48);
  *((int32x2_t *)&v12 + 1) = v10;
  *(void *)&long long v12 = v11;
  int32x2_t v31 = (int32x2_t)(v12 >> 35);
  *((int32x2_t *)&v12 + 1) = v10;
  *(void *)&long long v12 = v11;
  int32x2_t v32 = (int32x2_t)(v12 >> 43);
  *((int32x2_t *)&v12 + 1) = v10;
  *(void *)&long long v12 = v11;
  int32x2_t v33 = (int32x2_t)(v12 >> 62);
  char v34 = a2;
  *((int32x2_t *)&v12 + 1) = v10;
  *(void *)&long long v12 = v11;
  uint64_t v35 = v12 >> 32;
  *((int32x2_t *)&v12 + 1) = v10;
  *(void *)&long long v12 = v11;
  int32x2_t v36 = (int32x2_t)(v12 >> 52);
  *((int32x2_t *)&v12 + 1) = v10;
  *(void *)&long long v12 = v11;
  *(int32x2_t *)v37.i8 = vzip1_s32(v28, v27);
  v37.u64[1] = (unint64_t)vzip1_s32(v30, v29);
  v38.i64[0] = 0x100000001;
  v38.i64[1] = 0x100000001;
  *(int32x2_t *)v39.i8 = vzip1_s32(v24, v23);
  v39.u64[1] = (unint64_t)vzip1_s32(v26, v25);
  v29.i32[0] = ((v11 >> 44) & 1)
             + ((v11 >> 28) & 1)
             + ((v11 >> 41) & 1)
             + vaddvq_s32(vaddq_s32((int32x4_t)vandq_s8(v37, v38), (int32x4_t)vandq_s8(v39, v38)));
  *(int32x2_t *)v40.i8 = vzip1_s32(v10, v13);
  v40.u64[1] = (unint64_t)vzip1_s32(v15, v14);
  uint32x4_t v41 = (uint32x4_t)vdupq_n_s32(v11);
  *(int32x2_t *)v42.i8 = vzip1_s32(v312, v314);
  v42.u64[1] = (unint64_t)vzip1_s32(v18, v17);
  *(int32x2_t *)v43.i8 = vzip1_s32(v20, v19);
  v43.u64[1] = (unint64_t)vzip1_s32(v22, v21);
  v39.i64[0] = v35;
  char v44 = v34;
  char v45 = (int *)MEMORY[0x1E4F940E0];
  v40.i32[0] = vaddvq_s32(vaddq_s32(vaddq_s32((int32x4_t)vandq_s8(v43, v38), (int32x4_t)vandq_s8(v42, v38)), vaddq_s32((int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v41, (uint32x4_t)xmmword_18A633F90), v38), (int32x4_t)vandq_s8(v40, v38))));
  v46.i32[0] = v11 >> 19;
  v46.i32[1] = (v11 >> 55) | (v10.i32[0] << 9);
  v43.i32[0] = v11 >> 18;
  v43.i32[1] = (v11 >> 37) | (v10.i32[0] << 27);
  v40.i32[1] = (v11 >> 21) & 1;
  *(int32x2_t *)v40.i8 = vadd_s32(vadd_s32(vadd_s32((int32x2_t)vand_s8((int8x8_t)vzip1_s32((int32x2_t)(v12 >> 42), v36), (int8x8_t)0x100000001), (int32x2_t)vand_s8(v46, (int8x8_t)0x100000001)), vadd_s32(vadd_s32((int32x2_t)vand_s8((int8x8_t)vshl_u32(*(uint32x2_t *)v41.i8, (uint32x2_t)0xFFFFFFEAFFFFFFECLL), (int8x8_t)0x100000001), (int32x2_t)vand_s8((int8x8_t)vzip1_s32(*(int32x2_t *)v39.i8, v33), (int8x8_t)0x100000001)), vadd_s32((int32x2_t)vand_s8((int8x8_t)vzip1_s32(v32, v31), (int8x8_t)0x100000001), (int32x2_t)(*(void *)&vshl_u32(
                                                           *(uint32x2_t *)v41.i8,
                                                           (uint32x2_t)0xFFFFFFE3FFFFFFE6) & 0xFFFFFFC1FFFFFFC1)))),
                           vadd_s32(*(int32x2_t *)v40.i8, (int32x2_t)vand_s8(*(int8x8_t *)v43.i8, (int8x8_t)0x100000001)));
  v10.i32[0] = ((v11 >> 38) & 1) + ((v11 >> 53) & 1) + ((v11 >> 25) & 1) + ((v11 >> 45) & 1) + v29.i32[0];
  char v47 = 0;
  unsigned int v48 = vadd_s32(*(int32x2_t *)v40.i8, vdup_lane_s32(*(int32x2_t *)v40.i8, 1)).u32[0]
      + v10.i32[0]
      + (v11 >> 31);
  while (2)
  {
    uint64_t v49 = 1;
    uint64_t v50 = 1;
    uint64_t v51 = 1;
    switch(a3[v6])
    {
      case -4:
        ++v48;
        goto LABEL_8;
      case -3:
        char v47 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v50 = v8;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v52 = v48 > 0x23;
        char v53 = v52 & ~(_BYTE)v9 | v7;
        char v54 = v52 | v9;
        char v317 = v47;
        char v55 = (int *)MEMORY[0x1E4F940E8];
        if (((v52 | v9) | v47)) {
          BOOL v56 = 0;
        }
        else {
          BOOL v56 = a3;
        }
        int v313 = 1;
        uint64_t v57 = (int *)MEMORY[0x1E4F940C8];
        if (*(void *)&v44[*MEMORY[0x1E4F940E8]] >= *(void *)&v44[*MEMORY[0x1E4F940E0]]) {
          goto LABEL_668;
        }
        char v315 = v54 | v53;
        unint64_t v58 = (int *)MEMORY[0x1E4F940B8];
        char v316 = v52 & ~(_BYTE)v9 | v7;
        break;
      default:
        ++v48;
LABEL_7:
        uint64_t v49 = v7;
LABEL_8:
        uint64_t v50 = v8;
        uint64_t v51 = v9;
LABEL_10:
        ++v6;
        uint64_t v7 = v49;
        uint64_t v8 = v50;
        uint64_t v9 = v51;
        continue;
    }
    break;
  }
  while (2)
  {
    if (v44[*v57]) {
      goto LABEL_660;
    }
    char v59 = 0;
    unsigned int v60 = 0;
    unint64_t v61 = 0;
    while (1)
    {
      uint64_t v62 = *v55;
      uint64_t v63 = *(void *)&v44[v62];
      unint64_t v64 = v63 + 1;
      if (v63 == -1 || v64 > *(void *)&v44[*v45]) {
        break;
      }
      char v65 = *(unsigned char *)(*(void *)&v44[*v58] + v63);
      *(void *)&v44[v62] = v64;
      v61 |= (unint64_t)(v65 & 0x7F) << v59;
      if ((v65 & 0x80) == 0) {
        goto LABEL_25;
      }
      v59 += 7;
      BOOL v66 = v60++ >= 9;
      if (v66)
      {
        unint64_t v61 = 0;
        int v67 = v44[*v57];
        goto LABEL_27;
      }
    }
    v44[*v57] = 1;
LABEL_25:
    int v67 = v44[*v57];
    if (v44[*v57]) {
      unint64_t v61 = 0;
    }
LABEL_27:
    int v68 = v61 & 7;
    if (v67 || v68 == 4)
    {
LABEL_660:
      int v313 = 1;
      if (v53) {
        goto LABEL_669;
      }
      goto LABEL_670;
    }
    unint64_t v70 = v61 >> 3;
    BOOL v71 = v54;
    if (!((v56 == 0) | v54 & 1))
    {
      uint64_t v72 = v56;
      do
      {
        int v74 = *v72++;
        int v73 = v74;
        BOOL v71 = v74 != 0;
        if (v74) {
          BOOL v75 = v73 == v70;
        }
        else {
          BOOL v75 = 1;
        }
      }
      while (!v75);
    }
    switch((int)v70)
    {
      case 1:
        if ((v317 & 1) == 0) {
          goto LABEL_489;
        }
        char v76 = 0;
        unsigned int v77 = 0;
        uint64_t v78 = 0;
        *(void *)(a1 + 564) |= 0x1000uLL;
        while (1)
        {
          uint64_t v79 = *v55;
          uint64_t v80 = *(void *)&v44[v79];
          unint64_t v81 = v80 + 1;
          if (v80 == -1 || v81 > *(void *)&v44[*v45]) {
            break;
          }
          char v82 = *(unsigned char *)(*(void *)&v44[*v58] + v80);
          *(void *)&v44[v79] = v81;
          v78 |= (unint64_t)(v82 & 0x7F) << v76;
          if ((v82 & 0x80) == 0) {
            goto LABEL_492;
          }
          v76 += 7;
          BOOL v66 = v77++ >= 9;
          if (v66)
          {
            LODWORD(v78) = 0;
            goto LABEL_494;
          }
        }
        v44[*v57] = 1;
LABEL_492:
        if (v44[*v57]) {
          LODWORD(v78) = 0;
        }
LABEL_494:
        uint64_t v258 = 548;
        goto LABEL_564;
      case 2:
        if (!v71 || (*(void *)(a1 + 564) & 0x400000000000000) != 0) {
          goto LABEL_486;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_667;
        }
        uint64_t v83 = objc_alloc_init(GEOStep);
        if (!GEOStepReadAllFrom((uint64_t)v83, v44, v8 & 1)) {
          goto LABEL_666;
        }
        PBReaderRecallMark();
        -[GEORoute _addNoFlagsStep:](a1, v83);
        goto LABEL_444;
      case 3:
        if (!v71) {
          goto LABEL_489;
        }
        if ((*(void *)(a1 + 564) & 0x20000000000) == 0)
        {
          uint64_t v84 = PBReaderReadString();
          uint64_t v85 = 296;
          goto LABEL_403;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_667;
        }
        uint64_t v261 = (uint64_t)(*(void *)(a1 + 564) << 22) >> 56;
        goto LABEL_607;
      case 4:
        if (!v71) {
          goto LABEL_489;
        }
        if ((*(void *)(a1 + 564) & 0x400000000000) == 0)
        {
          uint64_t v84 = PBReaderReadString();
          uint64_t v85 = 336;
          goto LABEL_403;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_667;
        }
        uint64_t v261 = (uint64_t)(*(void *)(a1 + 564) << 17) >> 56;
        goto LABEL_607;
      case 5:
        if ((v317 & 1) == 0) {
          goto LABEL_489;
        }
        char v86 = 0;
        unsigned int v87 = 0;
        uint64_t v78 = 0;
        *(void *)(a1 + 564) |= 8uLL;
        while (2)
        {
          uint64_t v88 = *v55;
          uint64_t v89 = *(void *)&v44[v88];
          unint64_t v90 = v89 + 1;
          if (v89 == -1 || v90 > *(void *)&v44[*v45])
          {
            v44[*v57] = 1;
          }
          else
          {
            char v91 = *(unsigned char *)(*(void *)&v44[*v58] + v89);
            *(void *)&v44[v88] = v90;
            v78 |= (unint64_t)(v91 & 0x7F) << v86;
            if (v91 < 0)
            {
              v86 += 7;
              BOOL v66 = v87++ >= 9;
              if (v66)
              {
                LODWORD(v78) = 0;
                goto LABEL_498;
              }
              continue;
            }
          }
          break;
        }
        if (v44[*v57]) {
          LODWORD(v78) = 0;
        }
LABEL_498:
        uint64_t v258 = 512;
        goto LABEL_564;
      case 6:
        if ((v317 & 1) == 0) {
          goto LABEL_489;
        }
        char v92 = 0;
        unsigned int v93 = 0;
        uint64_t v78 = 0;
        *(void *)(a1 + 564) |= 0x40uLL;
        while (2)
        {
          uint64_t v94 = *v55;
          uint64_t v95 = *(void *)&v44[v94];
          unint64_t v96 = v95 + 1;
          if (v95 == -1 || v96 > *(void *)&v44[*v45])
          {
            v44[*v57] = 1;
          }
          else
          {
            char v97 = *(unsigned char *)(*(void *)&v44[*v58] + v95);
            *(void *)&v44[v94] = v96;
            v78 |= (unint64_t)(v97 & 0x7F) << v92;
            if (v97 < 0)
            {
              v92 += 7;
              BOOL v66 = v93++ >= 9;
              if (v66)
              {
                LODWORD(v78) = 0;
                goto LABEL_502;
              }
              continue;
            }
          }
          break;
        }
        if (v44[*v57]) {
          LODWORD(v78) = 0;
        }
LABEL_502:
        uint64_t v258 = 524;
        goto LABEL_564;
      case 7:
        if (!v71) {
          goto LABEL_489;
        }
        if ((*(void *)(a1 + 564) & 0x2000000000000) == 0)
        {
          uint64_t v84 = PBReaderReadData();
          uint64_t v85 = 360;
          goto LABEL_403;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_667;
        }
        uint64_t v261 = (uint64_t)(*(void *)(a1 + 564) << 14) >> 56;
        goto LABEL_607;
      case 8:
        if ((v317 & 1) == 0) {
          goto LABEL_489;
        }
        char v98 = 0;
        unsigned int v99 = 0;
        uint64_t v78 = 0;
        *(void *)(a1 + 564) |= 0x200uLL;
        while (2)
        {
          uint64_t v100 = *v55;
          uint64_t v101 = *(void *)&v44[v100];
          unint64_t v102 = v101 + 1;
          if (v101 == -1 || v102 > *(void *)&v44[*v45])
          {
            v44[*v57] = 1;
          }
          else
          {
            char v103 = *(unsigned char *)(*(void *)&v44[*v58] + v101);
            *(void *)&v44[v100] = v102;
            v78 |= (unint64_t)(v103 & 0x7F) << v98;
            if (v103 < 0)
            {
              v98 += 7;
              BOOL v66 = v99++ >= 9;
              if (v66)
              {
                LODWORD(v78) = 0;
                goto LABEL_506;
              }
              continue;
            }
          }
          break;
        }
        if (v44[*v57]) {
          LODWORD(v78) = 0;
        }
LABEL_506:
        uint64_t v258 = 536;
        goto LABEL_564;
      case 9:
        if (!v71 || (*(unsigned char *)(a1 + 572) & 1) != 0) {
          goto LABEL_486;
        }
        PBReaderReadData();
        uint64_t v83 = (GEOStep *)objc_claimAutoreleasedReturnValue();
        if (v83) {
          -[GEORoute _addNoFlagsZilchPoints:](a1, v83);
        }
        goto LABEL_444;
      case 10:
        if ((v317 & 1) == 0) {
          goto LABEL_489;
        }
        char v104 = 0;
        unsigned int v105 = 0;
        uint64_t v78 = 0;
        *(void *)(a1 + 564) |= 0x10uLL;
        while (2)
        {
          uint64_t v106 = *v55;
          uint64_t v107 = *(void *)&v44[v106];
          unint64_t v108 = v107 + 1;
          if (v107 == -1 || v108 > *(void *)&v44[*v45])
          {
            v44[*v57] = 1;
          }
          else
          {
            char v109 = *(unsigned char *)(*(void *)&v44[*v58] + v107);
            *(void *)&v44[v106] = v108;
            v78 |= (unint64_t)(v109 & 0x7F) << v104;
            if (v109 < 0)
            {
              v104 += 7;
              BOOL v66 = v105++ >= 9;
              if (v66)
              {
                LODWORD(v78) = 0;
                goto LABEL_510;
              }
              continue;
            }
          }
          break;
        }
        if (v44[*v57]) {
          LODWORD(v78) = 0;
        }
LABEL_510:
        uint64_t v258 = 516;
        goto LABEL_564;
      case 16:
        if (!v71) {
          goto LABEL_489;
        }
        if ((*(void *)(a1 + 564) & 0x40000000) == 0)
        {
          uint64_t v84 = PBReaderReadData();
          uint64_t v85 = 208;
          goto LABEL_403;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_667;
        }
        uint64_t v261 = (uint64_t)(*(void *)(a1 + 564) << 33) >> 56;
        goto LABEL_607;
      case 17:
        if ((v317 & 1) == 0) {
          goto LABEL_489;
        }
        char v113 = 0;
        unsigned int v114 = 0;
        uint64_t v78 = 0;
        *(void *)(a1 + 564) |= 4uLL;
        while (2)
        {
          uint64_t v115 = *v55;
          uint64_t v116 = *(void *)&v44[v115];
          unint64_t v117 = v116 + 1;
          if (v116 == -1 || v117 > *(void *)&v44[*v45])
          {
            v44[*v57] = 1;
          }
          else
          {
            char v118 = *(unsigned char *)(*(void *)&v44[*v58] + v116);
            *(void *)&v44[v115] = v117;
            v78 |= (unint64_t)(v118 & 0x7F) << v113;
            if (v118 < 0)
            {
              v113 += 7;
              BOOL v66 = v114++ >= 9;
              if (v66)
              {
                LODWORD(v78) = 0;
                goto LABEL_514;
              }
              continue;
            }
          }
          break;
        }
        if (v44[*v57]) {
          LODWORD(v78) = 0;
        }
LABEL_514:
        uint64_t v258 = 508;
        goto LABEL_564;
      case 18:
        if (!v71) {
          goto LABEL_489;
        }
        if ((*(void *)(a1 + 564) & 0x8000000) == 0)
        {
          uint64_t v84 = PBReaderReadData();
          uint64_t v85 = 184;
          goto LABEL_403;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_667;
        }
        uint64_t v261 = (uint64_t)(*(void *)(a1 + 564) << 36) >> 56;
        goto LABEL_607;
      case 19:
        if ((v317 & 1) == 0) {
          goto LABEL_489;
        }
        char v119 = 0;
        unsigned int v120 = 0;
        uint64_t v78 = 0;
        *(void *)(a1 + 564) |= 1uLL;
        while (2)
        {
          uint64_t v121 = *v55;
          uint64_t v122 = *(void *)&v44[v121];
          unint64_t v123 = v122 + 1;
          if (v122 == -1 || v123 > *(void *)&v44[*v45])
          {
            v44[*v57] = 1;
          }
          else
          {
            char v124 = *(unsigned char *)(*(void *)&v44[*v58] + v122);
            *(void *)&v44[v121] = v123;
            v78 |= (unint64_t)(v124 & 0x7F) << v119;
            if (v124 < 0)
            {
              v119 += 7;
              BOOL v66 = v120++ >= 9;
              if (v66)
              {
                LODWORD(v78) = 0;
                goto LABEL_518;
              }
              continue;
            }
          }
          break;
        }
        if (v44[*v57]) {
          LODWORD(v78) = 0;
        }
LABEL_518:
        uint64_t v258 = 500;
        goto LABEL_564;
      case 20:
        if (!v71 || (*(void *)(a1 + 564) & 0x10000000) != 0) {
          goto LABEL_486;
        }
        PBReaderReadData();
        uint64_t v83 = (GEOStep *)objc_claimAutoreleasedReturnValue();
        if (v83) {
          -[GEORoute _addNoFlagsBasicPoints:](a1, v83);
        }
        goto LABEL_444;
      case 21:
        if (!v71 || (*(void *)(a1 + 564) & 0x2000000) != 0) {
          goto LABEL_486;
        }
        PBReaderReadString();
        uint64_t v83 = (GEOStep *)objc_claimAutoreleasedReturnValue();
        if (v83) {
          -[GEORoute _addNoFlagsAdvisoryNotice:](a1, v83);
        }
        goto LABEL_444;
      case 22:
        if (!v71 || (*(void *)(a1 + 564) & 0x1000000) != 0) {
          goto LABEL_489;
        }
        if (v68 != 2)
        {
          char v262 = 0;
          unsigned int v263 = 0;
          uint64_t v264 = 0;
          while (1)
          {
            uint64_t v265 = *v55;
            uint64_t v266 = *(void *)&v44[v265];
            unint64_t v267 = v266 + 1;
            if (v266 == -1 || v267 > *(void *)&v44[*v45]) {
              goto LABEL_655;
            }
            char v268 = *(unsigned char *)(*(void *)&v44[*v58] + v266);
            *(void *)&v44[v265] = v267;
            v264 |= (unint64_t)(v268 & 0x7F) << v262;
            if (v268 < 0)
            {
              v262 += 7;
              BOOL v66 = v263++ >= 9;
              if (!v66) {
                continue;
              }
            }
            goto LABEL_656;
          }
        }
        if (!PBReaderPlaceMark()) {
          goto LABEL_667;
        }
        while (1)
        {
          char v125 = (int *)MEMORY[0x1E4F940E0];
          char v126 = (int *)MEMORY[0x1E4F940C8];
          if (*(void *)&v44[*v55] >= *(void *)&v44[*MEMORY[0x1E4F940E0]] || v44[*MEMORY[0x1E4F940C8]]) {
            goto LABEL_488;
          }
          char v127 = 0;
          unsigned int v128 = 0;
          uint64_t v129 = 0;
          uint64_t v130 = (int *)MEMORY[0x1E4F940B8];
          while (1)
          {
            uint64_t v131 = *v55;
            uint64_t v132 = *(void *)&v44[v131];
            unint64_t v133 = v132 + 1;
            if (v132 == -1 || v133 > *(void *)&v44[*v125]) {
              break;
            }
            char v134 = *(unsigned char *)(*(void *)&v44[*v130] + v132);
            *(void *)&v44[v131] = v133;
            v129 |= (unint64_t)(v134 & 0x7F) << v127;
            if (v134 < 0)
            {
              v127 += 7;
              BOOL v66 = v128++ >= 9;
              if (!v66) {
                continue;
              }
            }
            goto LABEL_147;
          }
          v44[*v126] = 1;
LABEL_147:
          PBRepeatedUInt32Add();
        }
      case 23:
        if (!v71 || (*(void *)(a1 + 564) & 0x800000) != 0) {
          goto LABEL_489;
        }
        if (v68 != 2)
        {
          char v269 = 0;
          unsigned int v270 = 0;
          uint64_t v271 = 0;
          while (1)
          {
            uint64_t v272 = *v55;
            uint64_t v273 = *(void *)&v44[v272];
            unint64_t v274 = v273 + 1;
            if (v273 == -1 || v274 > *(void *)&v44[*v45]) {
              goto LABEL_655;
            }
            char v275 = *(unsigned char *)(*(void *)&v44[*v58] + v273);
            *(void *)&v44[v272] = v274;
            v271 |= (unint64_t)(v275 & 0x7F) << v269;
            if (v275 < 0)
            {
              v269 += 7;
              BOOL v66 = v270++ >= 9;
              if (!v66) {
                continue;
              }
            }
            goto LABEL_656;
          }
        }
        if (!PBReaderPlaceMark()) {
          goto LABEL_667;
        }
        while (1)
        {
          uint64_t v135 = (int *)MEMORY[0x1E4F940E0];
          BOOL v136 = (int *)MEMORY[0x1E4F940C8];
          if (*(void *)&v44[*v55] >= *(void *)&v44[*MEMORY[0x1E4F940E0]] || v44[*MEMORY[0x1E4F940C8]]) {
            goto LABEL_488;
          }
          char v137 = 0;
          unsigned int v138 = 0;
          uint64_t v139 = 0;
          int v140 = (int *)MEMORY[0x1E4F940B8];
          while (1)
          {
            uint64_t v141 = *v55;
            uint64_t v142 = *(void *)&v44[v141];
            unint64_t v143 = v142 + 1;
            if (v142 == -1 || v143 > *(void *)&v44[*v135]) {
              break;
            }
            char v144 = *(unsigned char *)(*(void *)&v44[*v140] + v142);
            *(void *)&v44[v141] = v143;
            v139 |= (unint64_t)(v144 & 0x7F) << v137;
            if (v144 < 0)
            {
              v137 += 7;
              BOOL v66 = v138++ >= 9;
              if (!v66) {
                continue;
              }
            }
            goto LABEL_162;
          }
          v44[*v136] = 1;
LABEL_162:
          PBRepeatedUInt32Add();
        }
      case 25:
        if (!v71 || (*(void *)(a1 + 564) & 0x4000000000000) != 0) {
          goto LABEL_486;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_667;
        }
        uint64_t v83 = objc_alloc_init(GEORouteName);
        if (!GEORouteNameReadAllFrom((uint64_t)v83, v44, v8 & 1)) {
          goto LABEL_666;
        }
        PBReaderRecallMark();
        -[GEORoute _addNoFlagsRouteName:](a1, v83);
        goto LABEL_444;
      case 26:
        if ((v317 & 1) == 0) {
          goto LABEL_489;
        }
        char v145 = 0;
        unsigned int v146 = 0;
        uint64_t v78 = 0;
        *(void *)(a1 + 564) |= 0x80uLL;
        while (2)
        {
          uint64_t v147 = *v55;
          uint64_t v148 = *(void *)&v44[v147];
          unint64_t v149 = v148 + 1;
          if (v148 == -1 || v149 > *(void *)&v44[*v45])
          {
            v44[*v57] = 1;
          }
          else
          {
            char v150 = *(unsigned char *)(*(void *)&v44[*v58] + v148);
            *(void *)&v44[v147] = v149;
            v78 |= (unint64_t)(v150 & 0x7F) << v145;
            if (v150 < 0)
            {
              v145 += 7;
              BOOL v66 = v146++ >= 9;
              if (v66)
              {
                LODWORD(v78) = 0;
                goto LABEL_522;
              }
              continue;
            }
          }
          break;
        }
        if (v44[*v57]) {
          LODWORD(v78) = 0;
        }
LABEL_522:
        uint64_t v258 = 528;
        goto LABEL_564;
      case 28:
        if ((v317 & 1) == 0) {
          goto LABEL_489;
        }
        char v151 = 0;
        unsigned int v152 = 0;
        uint64_t v78 = 0;
        *(void *)(a1 + 564) |= 0x2000uLL;
        while (2)
        {
          uint64_t v153 = *v55;
          uint64_t v154 = *(void *)&v44[v153];
          unint64_t v155 = v154 + 1;
          if (v154 == -1 || v155 > *(void *)&v44[*v45])
          {
            v44[*v57] = 1;
          }
          else
          {
            char v156 = *(unsigned char *)(*(void *)&v44[*v58] + v154);
            *(void *)&v44[v153] = v155;
            v78 |= (unint64_t)(v156 & 0x7F) << v151;
            if (v156 < 0)
            {
              v151 += 7;
              BOOL v66 = v152++ >= 9;
              if (v66)
              {
                LODWORD(v78) = 0;
                goto LABEL_526;
              }
              continue;
            }
          }
          break;
        }
        if (v44[*v57]) {
          LODWORD(v78) = 0;
        }
LABEL_526:
        uint64_t v258 = 552;
        goto LABEL_564;
      case 29:
        if ((v317 & 1) == 0) {
          goto LABEL_489;
        }
        char v157 = 0;
        unsigned int v158 = 0;
        uint64_t v78 = 0;
        *(void *)(a1 + 564) |= 0x4000uLL;
        while (2)
        {
          uint64_t v159 = *v55;
          uint64_t v160 = *(void *)&v44[v159];
          unint64_t v161 = v160 + 1;
          if (v160 == -1 || v161 > *(void *)&v44[*v45])
          {
            v44[*v57] = 1;
          }
          else
          {
            char v162 = *(unsigned char *)(*(void *)&v44[*v58] + v160);
            *(void *)&v44[v159] = v161;
            v78 |= (unint64_t)(v162 & 0x7F) << v157;
            if (v162 < 0)
            {
              v157 += 7;
              BOOL v66 = v158++ >= 9;
              if (v66)
              {
                LODWORD(v78) = 0;
                goto LABEL_530;
              }
              continue;
            }
          }
          break;
        }
        if (v44[*v57]) {
          LODWORD(v78) = 0;
        }
LABEL_530:
        uint64_t v258 = 556;
        goto LABEL_564;
      case 30:
        if ((v317 & 1) == 0) {
          goto LABEL_489;
        }
        char v163 = 0;
        unsigned int v164 = 0;
        uint64_t v78 = 0;
        *(void *)(a1 + 564) |= 0x400uLL;
        while (2)
        {
          uint64_t v165 = *v55;
          uint64_t v166 = *(void *)&v44[v165];
          unint64_t v167 = v166 + 1;
          if (v166 == -1 || v167 > *(void *)&v44[*v45])
          {
            v44[*v57] = 1;
          }
          else
          {
            char v168 = *(unsigned char *)(*(void *)&v44[*v58] + v166);
            *(void *)&v44[v165] = v167;
            v78 |= (unint64_t)(v168 & 0x7F) << v163;
            if (v168 < 0)
            {
              v163 += 7;
              BOOL v66 = v164++ >= 9;
              if (v66)
              {
                LODWORD(v78) = 0;
                goto LABEL_534;
              }
              continue;
            }
          }
          break;
        }
        if (v44[*v57]) {
          LODWORD(v78) = 0;
        }
LABEL_534:
        uint64_t v258 = 540;
        goto LABEL_564;
      case 31:
        if ((v317 & 1) == 0) {
          goto LABEL_489;
        }
        char v169 = 0;
        unsigned int v170 = 0;
        uint64_t v171 = 0;
        *(void *)(a1 + 564) |= 0x10000uLL;
        while (2)
        {
          uint64_t v172 = *v55;
          uint64_t v173 = *(void *)&v44[v172];
          unint64_t v174 = v173 + 1;
          if (v173 == -1 || v174 > *(void *)&v44[*v45])
          {
            v44[*v57] = 1;
          }
          else
          {
            char v175 = *(unsigned char *)(*(void *)&v44[*v58] + v173);
            *(void *)&v44[v172] = v174;
            v171 |= (unint64_t)(v175 & 0x7F) << v169;
            if (v175 < 0)
            {
              v169 += 7;
              BOOL v66 = v170++ >= 9;
              if (v66)
              {
                uint64_t v171 = 0;
                goto LABEL_538;
              }
              continue;
            }
          }
          break;
        }
        if (v44[*v57]) {
          uint64_t v171 = 0;
        }
LABEL_538:
        BOOL v259 = v171 != 0;
        uint64_t v260 = 561;
        goto LABEL_547;
      case 32:
        if ((v317 & 1) == 0) {
          goto LABEL_489;
        }
        char v176 = 0;
        unsigned int v177 = 0;
        uint64_t v178 = 0;
        *(void *)(a1 + 564) |= 0x8000uLL;
        while (2)
        {
          uint64_t v179 = *v55;
          uint64_t v180 = *(void *)&v44[v179];
          unint64_t v181 = v180 + 1;
          if (v180 == -1 || v181 > *(void *)&v44[*v45])
          {
            v44[*v57] = 1;
          }
          else
          {
            char v182 = *(unsigned char *)(*(void *)&v44[*v58] + v180);
            *(void *)&v44[v179] = v181;
            v178 |= (unint64_t)(v182 & 0x7F) << v176;
            if (v182 < 0)
            {
              v176 += 7;
              BOOL v66 = v177++ >= 9;
              if (v66)
              {
                uint64_t v178 = 0;
                goto LABEL_542;
              }
              continue;
            }
          }
          break;
        }
        if (v44[*v57]) {
          uint64_t v178 = 0;
        }
LABEL_542:
        BOOL v259 = v178 != 0;
        uint64_t v260 = 560;
        goto LABEL_547;
      case 33:
        if ((v317 & 1) == 0) {
          goto LABEL_489;
        }
        char v183 = 0;
        unsigned int v184 = 0;
        uint64_t v185 = 0;
        *(void *)(a1 + 564) |= 0x20000uLL;
        while (2)
        {
          uint64_t v186 = *v55;
          uint64_t v187 = *(void *)&v44[v186];
          unint64_t v188 = v187 + 1;
          if (v187 == -1 || v188 > *(void *)&v44[*v45])
          {
            v44[*v57] = 1;
          }
          else
          {
            char v189 = *(unsigned char *)(*(void *)&v44[*v58] + v187);
            *(void *)&v44[v186] = v188;
            v185 |= (unint64_t)(v189 & 0x7F) << v183;
            if (v189 < 0)
            {
              v183 += 7;
              BOOL v66 = v184++ >= 9;
              if (v66)
              {
                uint64_t v185 = 0;
                goto LABEL_546;
              }
              continue;
            }
          }
          break;
        }
        if (v44[*v57]) {
          uint64_t v185 = 0;
        }
LABEL_546:
        BOOL v259 = v185 != 0;
        uint64_t v260 = 562;
LABEL_547:
        *(unsigned char *)(a1 + v260) = v259;
        goto LABEL_610;
      case 34:
        if (!v71 || (*(void *)(a1 + 564) & 0x800000000) != 0) {
          goto LABEL_486;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_667;
        }
        uint64_t v83 = objc_alloc_init(GEOEnrouteNotice);
        if (!GEOEnrouteNoticeReadAllFrom((uint64_t)v83, v44, v8 & 1)) {
          goto LABEL_666;
        }
        PBReaderRecallMark();
        -[GEORoute _addNoFlagsEnrouteNotice:](a1, v83);
        goto LABEL_444;
      case 50:
        if (!v71) {
          goto LABEL_489;
        }
        if ((*(void *)(a1 + 564) & 0x4000000000000000) == 0)
        {
          uint64_t v84 = PBReaderReadData();
          uint64_t v85 = 464;
          goto LABEL_403;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_667;
        }
        uint64_t v261 = (2 * *(void *)(a1 + 564)) >> 56;
        goto LABEL_607;
      case 51:
        if (!v71 || (*(void *)(a1 + 564) & 0x400000) != 0) {
          goto LABEL_489;
        }
        if (v68 != 2)
        {
          char v276 = 0;
          unsigned int v277 = 0;
          uint64_t v278 = 0;
          while (1)
          {
            uint64_t v279 = *v55;
            uint64_t v280 = *(void *)&v44[v279];
            unint64_t v281 = v280 + 1;
            if (v280 == -1 || v281 > *(void *)&v44[*v45]) {
              goto LABEL_655;
            }
            char v282 = *(unsigned char *)(*(void *)&v44[*v58] + v280);
            *(void *)&v44[v279] = v281;
            v278 |= (unint64_t)(v282 & 0x7F) << v276;
            if (v282 < 0)
            {
              v276 += 7;
              BOOL v66 = v277++ >= 9;
              if (!v66) {
                continue;
              }
            }
            goto LABEL_656;
          }
        }
        if (!PBReaderPlaceMark()) {
          goto LABEL_667;
        }
        while (1)
        {
          v190 = (int *)MEMORY[0x1E4F940E0];
          v191 = (int *)MEMORY[0x1E4F940C8];
          if (*(void *)&v44[*v55] >= *(void *)&v44[*MEMORY[0x1E4F940E0]] || v44[*MEMORY[0x1E4F940C8]]) {
            goto LABEL_488;
          }
          char v192 = 0;
          unsigned int v193 = 0;
          uint64_t v194 = 0;
          v195 = (int *)MEMORY[0x1E4F940B8];
          while (1)
          {
            uint64_t v196 = *v55;
            uint64_t v197 = *(void *)&v44[v196];
            unint64_t v198 = v197 + 1;
            if (v197 == -1 || v198 > *(void *)&v44[*v190]) {
              break;
            }
            char v199 = *(unsigned char *)(*(void *)&v44[*v195] + v197);
            *(void *)&v44[v196] = v198;
            v194 |= (unint64_t)(v199 & 0x7F) << v192;
            if (v199 < 0)
            {
              v192 += 7;
              BOOL v66 = v193++ >= 9;
              if (!v66) {
                continue;
              }
            }
            goto LABEL_246;
          }
          v44[*v191] = 1;
LABEL_246:
          PBRepeatedUInt32Add();
        }
      case 52:
        if (!v71 || (*(void *)(a1 + 564) & 0x200000) != 0) {
          goto LABEL_489;
        }
        if (v68 != 2)
        {
          char v283 = 0;
          unsigned int v284 = 0;
          uint64_t v285 = 0;
          while (1)
          {
            uint64_t v286 = *v55;
            uint64_t v287 = *(void *)&v44[v286];
            unint64_t v288 = v287 + 1;
            if (v287 == -1 || v288 > *(void *)&v44[*v45]) {
              goto LABEL_655;
            }
            char v289 = *(unsigned char *)(*(void *)&v44[*v58] + v287);
            *(void *)&v44[v286] = v288;
            v285 |= (unint64_t)(v289 & 0x7F) << v283;
            if (v289 < 0)
            {
              v283 += 7;
              BOOL v66 = v284++ >= 9;
              if (!v66) {
                continue;
              }
            }
            goto LABEL_656;
          }
        }
        if (!PBReaderPlaceMark()) {
          goto LABEL_667;
        }
        while (1)
        {
          v200 = (int *)MEMORY[0x1E4F940E0];
          v201 = (int *)MEMORY[0x1E4F940C8];
          if (*(void *)&v44[*v55] >= *(void *)&v44[*MEMORY[0x1E4F940E0]] || v44[*MEMORY[0x1E4F940C8]]) {
            goto LABEL_488;
          }
          char v202 = 0;
          unsigned int v203 = 0;
          uint64_t v204 = 0;
          v205 = (int *)MEMORY[0x1E4F940B8];
          while (1)
          {
            uint64_t v206 = *v55;
            uint64_t v207 = *(void *)&v44[v206];
            unint64_t v208 = v207 + 1;
            if (v207 == -1 || v208 > *(void *)&v44[*v200]) {
              break;
            }
            char v209 = *(unsigned char *)(*(void *)&v44[*v205] + v207);
            *(void *)&v44[v206] = v208;
            v204 |= (unint64_t)(v209 & 0x7F) << v202;
            if (v209 < 0)
            {
              v202 += 7;
              BOOL v66 = v203++ >= 9;
              if (!v66) {
                continue;
              }
            }
            goto LABEL_261;
          }
          v44[*v201] = 1;
LABEL_261:
          PBRepeatedUInt32Add();
        }
      case 53:
        if (!v71) {
          goto LABEL_489;
        }
        if ((*(void *)(a1 + 564) & 0x80000000000000) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_667;
          }
          uint64_t v261 = *(char *)(a1 + 570);
          goto LABEL_607;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_667;
        }
        uint64_t v83 = objc_alloc_init(GEORouteInformation);
        if (!GEORouteInformationReadAllFrom((uint64_t)v83, v44, v8 & 1)) {
          goto LABEL_666;
        }
        PBReaderRecallMark();
        uint64_t v210 = 408;
        goto LABEL_460;
      case 54:
        if (!v71 || (*(void *)(a1 + 564) & 0x10000000000000) != 0) {
          goto LABEL_486;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_667;
        }
        uint64_t v83 = objc_alloc_init(GEOFormattedString);
        if (!GEOFormattedStringReadAllFrom((uint64_t)v83, v44, v8 & 1)) {
          goto LABEL_666;
        }
        PBReaderRecallMark();
        -[GEORoute _addNoFlagsRouteDescription:](a1, v83);
        goto LABEL_444;
      case 55:
        if (!v71 || (*(void *)(a1 + 564) & 0x100000000000000) != 0) {
          goto LABEL_486;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_667;
        }
        uint64_t v83 = objc_alloc_init(GEOFormattedString);
        if (!GEOFormattedStringReadAllFrom((uint64_t)v83, v44, v8 & 1)) {
          goto LABEL_666;
        }
        PBReaderRecallMark();
        -[GEORoute _addNoFlagsStartingRouteInstruction:](a1, v83);
        goto LABEL_444;
      case 56:
        if (!v71 || (*(void *)(a1 + 564) & 0x400000000) != 0) {
          goto LABEL_486;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_667;
        }
        uint64_t v83 = objc_alloc_init(GEOFormattedString);
        if (!GEOFormattedStringReadAllFrom((uint64_t)v83, v44, v8 & 1)) {
          goto LABEL_666;
        }
        PBReaderRecallMark();
        -[GEORoute _addNoFlagsEndingRouteInstruction:](a1, v83);
        goto LABEL_444;
      case 57:
        if (!v71) {
          goto LABEL_489;
        }
        if ((*(void *)(a1 + 564) & 0x2000000000000000) == 0)
        {
          uint64_t v84 = PBReaderReadString();
          uint64_t v85 = 456;
          goto LABEL_403;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_667;
        }
        uint64_t v261 = (4 * *(void *)(a1 + 564)) >> 56;
        goto LABEL_607;
      case 58:
        if (!v71) {
          goto LABEL_489;
        }
        if ((*(void *)(a1 + 564) & 0x1000000000000000) == 0)
        {
          uint64_t v84 = PBReaderReadString();
          uint64_t v85 = 448;
          goto LABEL_403;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_667;
        }
        uint64_t v261 = (8 * *(void *)(a1 + 564)) >> 56;
        goto LABEL_607;
      case 59:
        if (!v71) {
          goto LABEL_489;
        }
        if ((*(void *)(a1 + 564) & 0x4000000) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_667;
          }
          uint64_t v261 = (uint64_t)(*(void *)(a1 + 564) << 37) >> 56;
          goto LABEL_607;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_667;
        }
        uint64_t v83 = objc_alloc_init(GEOAlertNonRecommendedRouteText);
        if (!GEOAlertNonRecommendedRouteTextReadAllFrom((uint64_t)v83, v44, v8 & 1)) {
          goto LABEL_666;
        }
        PBReaderRecallMark();
        uint64_t v210 = 176;
        goto LABEL_460;
      case 60:
        if (!v71 || (*(void *)(a1 + 564) & 0x1000000000) != 0) {
          goto LABEL_486;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_667;
        }
        uint64_t v83 = objc_alloc_init(GEOGuidanceEvent);
        if (!GEOGuidanceEventReadAllFrom((uint64_t)v83, v44, v8 & 1)) {
          goto LABEL_666;
        }
        PBReaderRecallMark();
        -[GEORoute _addNoFlagsGuidanceEvent:](a1, v83);
        goto LABEL_444;
      case 61:
        if (!v71) {
          goto LABEL_489;
        }
        if ((*(void *)(a1 + 564) & 0x10000000000) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_667;
          }
          uint64_t v261 = (uint64_t)(*(void *)(a1 + 564) << 23) >> 56;
          goto LABEL_607;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_667;
        }
        uint64_t v83 = objc_alloc_init(GEOLaunchAndGoCardText);
        if (!GEOLaunchAndGoCardTextReadAllFrom((uint64_t)v83, v44, v8 & 1)) {
          goto LABEL_666;
        }
        PBReaderRecallMark();
        uint64_t v210 = 288;
        goto LABEL_460;
      case 62:
        if (!v71 || (*(void *)(a1 + 564) & 0x1000000000000) != 0) {
          goto LABEL_486;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_667;
        }
        uint64_t v83 = objc_alloc_init(GEORoadComplexity);
        if (!GEORoadComplexityReadAllFrom((uint64_t)v83, v44)) {
          goto LABEL_666;
        }
        PBReaderRecallMark();
        -[GEORoute _addNoFlagsRoadComplexity:](a1, v83);
        goto LABEL_444;
      case 63:
        if ((v317 & 1) == 0) {
          goto LABEL_489;
        }
        char v211 = 0;
        unsigned int v212 = 0;
        uint64_t v78 = 0;
        *(void *)(a1 + 564) |= 2uLL;
        while (2)
        {
          uint64_t v213 = *v55;
          uint64_t v214 = *(void *)&v44[v213];
          unint64_t v215 = v214 + 1;
          if (v214 == -1 || v215 > *(void *)&v44[*v45])
          {
            v44[*v57] = 1;
          }
          else
          {
            char v216 = *(unsigned char *)(*(void *)&v44[*v58] + v214);
            *(void *)&v44[v213] = v215;
            v78 |= (unint64_t)(v216 & 0x7F) << v211;
            if (v216 < 0)
            {
              v211 += 7;
              BOOL v66 = v212++ >= 9;
              if (v66)
              {
                LODWORD(v78) = 0;
                goto LABEL_551;
              }
              continue;
            }
          }
          break;
        }
        if (v44[*v57]) {
          LODWORD(v78) = 0;
        }
LABEL_551:
        uint64_t v258 = 504;
        goto LABEL_564;
      case 64:
        if (!v71 || (*(void *)(a1 + 564) & 0x8000000000) != 0) {
          goto LABEL_486;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_667;
        }
        uint64_t v83 = objc_alloc_init(GEOLaneWidth);
        if (!GEOLaneWidthReadAllFrom((uint64_t)v83, v44)) {
          goto LABEL_666;
        }
        PBReaderRecallMark();
        -[GEORoute _addNoFlagsLaneWidth:](a1, v83);
        goto LABEL_444;
      case 65:
        if (!v71) {
          goto LABEL_489;
        }
        if ((*(void *)(a1 + 564) & 0x20000000) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_667;
          }
          uint64_t v261 = (uint64_t)(*(void *)(a1 + 564) << 34) >> 56;
          goto LABEL_607;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_667;
        }
        uint64_t v83 = objc_alloc_init(GEOClickableAdvisory);
        if (!GEOClickableAdvisoryReadAllFrom((uint64_t)v83, v44, v8 & 1)) {
          goto LABEL_666;
        }
        PBReaderRecallMark();
        uint64_t v210 = 200;
        goto LABEL_460;
      case 66:
        if (!v71 || (*(void *)(a1 + 564) & 0x800000000000) != 0) {
          goto LABEL_486;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_667;
        }
        uint64_t v83 = objc_alloc_init(GEORestrictedZoneId);
        if (!GEORestrictedZoneIdReadAllFrom((uint64_t)v83, v44)) {
          goto LABEL_666;
        }
        PBReaderRecallMark();
        -[GEORoute _addNoFlagsRestrictedZoneIds:](a1, v83);
        goto LABEL_444;
      case 67:
        if (!v71 || (*(void *)(a1 + 564) & 0x200000000000000) != 0) {
          goto LABEL_486;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_667;
        }
        uint64_t v83 = objc_alloc_init(GEOStepGroup);
        if (!GEOStepGroupReadAllFrom((uint64_t)v83, v44, v8 & 1)) {
          goto LABEL_666;
        }
        PBReaderRecallMark();
        -[GEORoute _addNoFlagsStepGroup:](a1, v83);
        goto LABEL_444;
      case 68:
        if (!v71) {
          goto LABEL_489;
        }
        if ((*(void *)(a1 + 564) & 0x20000000000000) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_667;
          }
          uint64_t v261 = (uint64_t)(*(void *)(a1 + 564) << 10) >> 56;
          goto LABEL_607;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_667;
        }
        uint64_t v83 = objc_alloc_init(GEOFormattedString);
        if (!GEOFormattedStringReadAllFrom((uint64_t)v83, v44, v8 & 1)) {
          goto LABEL_666;
        }
        PBReaderRecallMark();
        uint64_t v210 = 392;
        goto LABEL_460;
      case 69:
        if (!v71) {
          goto LABEL_489;
        }
        if ((*(void *)(a1 + 564) & 0x200000000) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_667;
          }
          uint64_t v261 = (uint64_t)(*(void *)(a1 + 564) << 30) >> 56;
          goto LABEL_607;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_667;
        }
        uint64_t v83 = objc_alloc_init(GEOElevationProfile);
        if (!GEOElevationProfileReadAllFrom((uint64_t)v83, v44, v8 & 1)) {
          goto LABEL_666;
        }
        PBReaderRecallMark();
        uint64_t v210 = 232;
        goto LABEL_460;
      case 70:
        if (!v71) {
          goto LABEL_489;
        }
        if ((*(void *)(a1 + 564) & 0x4000000000) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_667;
          }
          uint64_t v261 = (uint64_t)(*(void *)(a1 + 564) << 25) >> 56;
          goto LABEL_607;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_667;
        }
        uint64_t v83 = objc_alloc_init(GEOFormattedString);
        if (!GEOFormattedStringReadAllFrom((uint64_t)v83, v44, v8 & 1)) {
          goto LABEL_666;
        }
        PBReaderRecallMark();
        uint64_t v210 = 272;
        goto LABEL_460;
      case 71:
        if (!v71 || (*(void *)(a1 + 564) & 0x800000000000000) != 0) {
          goto LABEL_486;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_667;
        }
        uint64_t v83 = objc_alloc_init(GEOTrafficColorInfo);
        if (!GEOTrafficColorInfoReadAllFrom(v83, v44)) {
          goto LABEL_666;
        }
        PBReaderRecallMark();
        -[GEORoute _addNoFlagsTrafficColorInfo:](a1, v83);
        goto LABEL_444;
      case 72:
        if (!v71 || (*(void *)(a1 + 564) & 0x2000000000) != 0) {
          goto LABEL_486;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_667;
        }
        uint64_t v83 = objc_alloc_init(GEOIncidentOnRouteInfo);
        if (!GEOIncidentOnRouteInfoReadAllFrom(v83, v44)) {
          goto LABEL_666;
        }
        PBReaderRecallMark();
        -[GEORoute _addNoFlagsIncidentOnRouteInfo:](a1, v83);
        goto LABEL_444;
      case 73:
        if ((v317 & 1) == 0) {
          goto LABEL_489;
        }
        char v217 = 0;
        unsigned int v218 = 0;
        uint64_t v78 = 0;
        *(void *)(a1 + 564) |= 0x100uLL;
        while (2)
        {
          uint64_t v219 = *v55;
          uint64_t v220 = *(void *)&v44[v219];
          unint64_t v221 = v220 + 1;
          if (v220 == -1 || v221 > *(void *)&v44[*v45])
          {
            v44[*v57] = 1;
          }
          else
          {
            char v222 = *(unsigned char *)(*(void *)&v44[*v58] + v220);
            *(void *)&v44[v219] = v221;
            v78 |= (unint64_t)(v222 & 0x7F) << v217;
            if (v222 < 0)
            {
              v217 += 7;
              BOOL v66 = v218++ >= 9;
              if (v66)
              {
                LODWORD(v78) = 0;
                goto LABEL_555;
              }
              continue;
            }
          }
          break;
        }
        if (v44[*v57]) {
          LODWORD(v78) = 0;
        }
LABEL_555:
        uint64_t v258 = 532;
        goto LABEL_564;
      case 74:
        if (!v71 || (*(void *)(a1 + 564) & 0x8000000000000000) != 0) {
          goto LABEL_486;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_667;
        }
        uint64_t v83 = objc_alloc_init(GEOUpdateLocation);
        if (!GEOUpdateLocationReadAllFrom((uint64_t)v83, v44)) {
          goto LABEL_666;
        }
        PBReaderRecallMark();
        -[GEORoute _addNoFlagsUpdateLocation:](a1, v83);
        goto LABEL_444;
      case 75:
        if (!v71) {
          goto LABEL_489;
        }
        if ((*(void *)(a1 + 564) & 0x80000000000) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_667;
          }
          uint64_t v261 = (uint64_t)(*(void *)(a1 + 564) << 20) >> 56;
          goto LABEL_607;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_667;
        }
        uint64_t v83 = objc_alloc_init(GEOWaypointInfo);
        if (!GEOWaypointInfoReadAllFrom((uint64_t)v83, v44, v8 & 1)) {
          goto LABEL_666;
        }
        PBReaderRecallMark();
        uint64_t v210 = 312;
        goto LABEL_460;
      case 76:
        if (!v71) {
          goto LABEL_489;
        }
        if ((*(void *)(a1 + 564) & 0x100000000) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_667;
          }
          uint64_t v261 = (uint64_t)(*(void *)(a1 + 564) << 31) >> 56;
          goto LABEL_607;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_667;
        }
        uint64_t v83 = objc_alloc_init(GEOWaypointInfo);
        if (!GEOWaypointInfoReadAllFrom((uint64_t)v83, v44, v8 & 1)) {
          goto LABEL_666;
        }
        PBReaderRecallMark();
        uint64_t v210 = 224;
        goto LABEL_460;
      case 77:
        if ((v317 & 1) == 0) {
          goto LABEL_489;
        }
        char v223 = 0;
        unsigned int v224 = 0;
        uint64_t v78 = 0;
        *(void *)(a1 + 564) |= 0x20uLL;
        while (2)
        {
          uint64_t v225 = *v55;
          uint64_t v226 = *(void *)&v44[v225];
          unint64_t v227 = v226 + 1;
          if (v226 == -1 || v227 > *(void *)&v44[*v45])
          {
            v44[*v57] = 1;
          }
          else
          {
            char v228 = *(unsigned char *)(*(void *)&v44[*v58] + v226);
            *(void *)&v44[v225] = v227;
            v78 |= (unint64_t)(v228 & 0x7F) << v223;
            if (v228 < 0)
            {
              v223 += 7;
              BOOL v66 = v224++ >= 9;
              if (v66)
              {
                LODWORD(v78) = 0;
                goto LABEL_559;
              }
              continue;
            }
          }
          break;
        }
        if (v44[*v57]) {
          LODWORD(v78) = 0;
        }
LABEL_559:
        uint64_t v258 = 520;
        goto LABEL_564;
      case 78:
        if ((v317 & 1) == 0) {
          goto LABEL_489;
        }
        char v229 = 0;
        unsigned int v230 = 0;
        uint64_t v78 = 0;
        *(void *)(a1 + 564) |= 0x800uLL;
        while (2)
        {
          uint64_t v231 = *v55;
          uint64_t v232 = *(void *)&v44[v231];
          unint64_t v233 = v232 + 1;
          if (v232 == -1 || v233 > *(void *)&v44[*v45])
          {
            v44[*v57] = 1;
          }
          else
          {
            char v234 = *(unsigned char *)(*(void *)&v44[*v58] + v232);
            *(void *)&v44[v231] = v233;
            v78 |= (unint64_t)(v234 & 0x7F) << v229;
            if (v234 < 0)
            {
              v229 += 7;
              BOOL v66 = v230++ >= 9;
              if (v66)
              {
                LODWORD(v78) = 0;
                goto LABEL_563;
              }
              continue;
            }
          }
          break;
        }
        if (v44[*v57]) {
          LODWORD(v78) = 0;
        }
LABEL_563:
        uint64_t v258 = 544;
LABEL_564:
        *(_DWORD *)(a1 + v258) = v78;
        goto LABEL_610;
      case 79:
        if (!v71) {
          goto LABEL_489;
        }
        if ((*(void *)(a1 + 564) & 0x100000000000) == 0)
        {
          uint64_t v84 = PBReaderReadData();
          uint64_t v85 = 320;
LABEL_403:
          v235 = *(void **)(a1 + v85);
          *(void *)(a1 + v85) = v84;
          goto LABEL_461;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_667;
        }
        uint64_t v261 = (uint64_t)(*(void *)(a1 + 564) << 19) >> 56;
        goto LABEL_607;
      case 80:
        if (!v71 || (*(void *)(a1 + 564) & 0x100000) != 0) {
          goto LABEL_489;
        }
        if (v68 != 2)
        {
          char v290 = 0;
          unsigned int v291 = 0;
          uint64_t v292 = 0;
          while (1)
          {
            uint64_t v293 = *v55;
            uint64_t v294 = *(void *)&v44[v293];
            unint64_t v295 = v294 + 1;
            if (v294 == -1 || v295 > *(void *)&v44[*v45]) {
              break;
            }
            char v296 = *(unsigned char *)(*(void *)&v44[*v58] + v294);
            *(void *)&v44[v293] = v295;
            v292 |= (unint64_t)(v296 & 0x7F) << v290;
            if (v296 < 0)
            {
              v290 += 7;
              BOOL v66 = v291++ >= 9;
              if (!v66) {
                continue;
              }
            }
            goto LABEL_658;
          }
          v44[*v57] = 1;
LABEL_658:
          PBRepeatedInt32Add();
          goto LABEL_608;
        }
        if (!PBReaderPlaceMark()) {
          goto LABEL_667;
        }
        while (1)
        {
          v236 = (int *)MEMORY[0x1E4F940E0];
          v237 = (int *)MEMORY[0x1E4F940C8];
          if (*(void *)&v44[*v55] >= *(void *)&v44[*MEMORY[0x1E4F940E0]] || v44[*MEMORY[0x1E4F940C8]]) {
            goto LABEL_488;
          }
          char v238 = 0;
          unsigned int v239 = 0;
          uint64_t v240 = 0;
          v241 = (int *)MEMORY[0x1E4F940B8];
          while (1)
          {
            uint64_t v242 = *v55;
            uint64_t v243 = *(void *)&v44[v242];
            unint64_t v244 = v243 + 1;
            if (v243 == -1 || v244 > *(void *)&v44[*v236]) {
              break;
            }
            char v245 = *(unsigned char *)(*(void *)&v44[*v241] + v243);
            *(void *)&v44[v242] = v244;
            v240 |= (unint64_t)(v245 & 0x7F) << v238;
            if (v245 < 0)
            {
              v238 += 7;
              BOOL v66 = v239++ >= 9;
              if (!v66) {
                continue;
              }
            }
            goto LABEL_418;
          }
          v44[*v237] = 1;
LABEL_418:
          PBRepeatedInt32Add();
        }
      case 81:
        if (!v71 || (*(void *)(a1 + 564) & 0x80000) != 0) {
          goto LABEL_489;
        }
        if (v68 != 2)
        {
          char v297 = 0;
          unsigned int v298 = 0;
          uint64_t v299 = 0;
          while (1)
          {
            uint64_t v300 = *v55;
            uint64_t v301 = *(void *)&v44[v300];
            unint64_t v302 = v301 + 1;
            if (v301 == -1 || v302 > *(void *)&v44[*v45]) {
              break;
            }
            char v303 = *(unsigned char *)(*(void *)&v44[*v58] + v301);
            *(void *)&v44[v300] = v302;
            v299 |= (unint64_t)(v303 & 0x7F) << v297;
            if (v303 < 0)
            {
              v297 += 7;
              BOOL v66 = v298++ >= 9;
              if (!v66) {
                continue;
              }
            }
            goto LABEL_656;
          }
LABEL_655:
          v44[*v57] = 1;
LABEL_656:
          PBRepeatedUInt32Add();
          goto LABEL_608;
        }
        if (!PBReaderPlaceMark()) {
          goto LABEL_667;
        }
        while (1)
        {
          v246 = (int *)MEMORY[0x1E4F940E0];
          v247 = (int *)MEMORY[0x1E4F940C8];
          if (*(void *)&v44[*v55] >= *(void *)&v44[*MEMORY[0x1E4F940E0]] || v44[*MEMORY[0x1E4F940C8]]) {
            break;
          }
          char v248 = 0;
          unsigned int v249 = 0;
          uint64_t v250 = 0;
          v251 = (int *)MEMORY[0x1E4F940B8];
          while (1)
          {
            uint64_t v252 = *v55;
            uint64_t v253 = *(void *)&v44[v252];
            unint64_t v254 = v253 + 1;
            if (v253 == -1 || v254 > *(void *)&v44[*v246]) {
              break;
            }
            char v255 = *(unsigned char *)(*(void *)&v44[*v251] + v253);
            *(void *)&v44[v252] = v254;
            v250 |= (unint64_t)(v255 & 0x7F) << v248;
            if (v255 < 0)
            {
              v248 += 7;
              BOOL v66 = v249++ >= 9;
              if (!v66) {
                continue;
              }
            }
            goto LABEL_433;
          }
          v44[*v247] = 1;
LABEL_433:
          PBRepeatedUInt32Add();
        }
LABEL_488:
        PBReaderRecallMark();
        char v45 = (int *)MEMORY[0x1E4F940E0];
        uint64_t v57 = (int *)MEMORY[0x1E4F940C8];
        goto LABEL_609;
      case 82:
        if (!v71 || (*(void *)(a1 + 564) & 0x40000000000000) != 0) {
          goto LABEL_486;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_667;
        }
        uint64_t v83 = objc_alloc_init(GEORouteLineStyleInfo);
        if (!GEORouteLineStyleInfoReadAllFrom((uint64_t)v83, v44, v8 & 1)) {
          goto LABEL_666;
        }
        PBReaderRecallMark();
        -[GEORoute _addNoFlagsRouteLineStyleInfo:](a1, v83);
        goto LABEL_444;
      case 83:
        if (!v71 || (*(void *)(a1 + 564) & 0x8000000000000) != 0)
        {
LABEL_486:
          char v256 = PBReaderSkipValueWithTag();
          uint64_t v57 = (int *)MEMORY[0x1E4F940C8];
          char v45 = (int *)MEMORY[0x1E4F940E0];
          unint64_t v58 = (int *)MEMORY[0x1E4F940B8];
          if ((v256 & 1) == 0) {
            goto LABEL_663;
          }
          goto LABEL_610;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_667;
        }
        uint64_t v83 = objc_alloc_init(GEORouteLineStyleInfo);
        if (!GEORouteLineStyleInfoReadAllFrom((uint64_t)v83, v44, v8 & 1)) {
          goto LABEL_666;
        }
        PBReaderRecallMark();
        -[GEORoute _addNoFlagsRouteCameraInputInfo:](a1, v83);
LABEL_444:

        goto LABEL_608;
      case 86:
        if (!v71) {
          goto LABEL_489;
        }
        if ((*(void *)(a1 + 564) & 0x40000000000) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_667;
          }
          uint64_t v261 = (uint64_t)(*(void *)(a1 + 564) << 21) >> 56;
          goto LABEL_607;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_667;
        }
        uint64_t v83 = objc_alloc_init(GEODrivingWalkingInstruction);
        if (!GEODrivingWalkingInstructionReadAllFrom((uint64_t)v83, v44, v8 & 1)) {
          goto LABEL_666;
        }
        PBReaderRecallMark();
        uint64_t v210 = 304;
        goto LABEL_460;
      case 87:
        if (!v71) {
          goto LABEL_489;
        }
        if ((*(_DWORD *)(a1 + 564) & 0x80000000) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_667;
          }
          uint64_t v261 = *(char *)(a1 + 567);
          goto LABEL_607;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_667;
        }
        uint64_t v83 = objc_alloc_init(GEODrivingWalkingInstruction);
        if (!GEODrivingWalkingInstructionReadAllFrom((uint64_t)v83, v44, v8 & 1)) {
          goto LABEL_666;
        }
        PBReaderRecallMark();
        uint64_t v210 = 216;
        goto LABEL_460;
      case 88:
        if (!v71) {
          goto LABEL_489;
        }
        if ((*(void *)(a1 + 564) & 0x200000000000) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_667;
          }
          uint64_t v261 = (uint64_t)(*(void *)(a1 + 564) << 18) >> 56;
LABEL_607:
          v6 += v261 >> 7;
LABEL_608:
          uint64_t v57 = (int *)MEMORY[0x1E4F940C8];
          char v45 = (int *)MEMORY[0x1E4F940E0];
LABEL_609:
          unint64_t v58 = (int *)MEMORY[0x1E4F940B8];
LABEL_610:
          if (!(v315 & 1 | (v6 != 0)))
          {
            int v313 = 1;
            goto LABEL_664;
          }
          char v53 = v316;
          if (*(void *)&v44[*v55] >= *(void *)&v44[*v45]) {
            goto LABEL_660;
          }
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_667;
        }
        uint64_t v83 = objc_alloc_init(GEOPathMapMatcherInstructions);
        if (GEOPathMapMatcherInstructionsReadAllFrom(v83, v44))
        {
          PBReaderRecallMark();
          uint64_t v210 = 328;
LABEL_460:
          v235 = *(void **)(a1 + v210);
          *(void *)(a1 + v210) = v83;
LABEL_461:

          --v6;
          goto LABEL_608;
        }
LABEL_666:

LABEL_667:
        int v313 = 0;
        uint64_t v57 = (int *)MEMORY[0x1E4F940C8];
        char v53 = v316;
LABEL_668:
        if (v53) {
LABEL_669:
        }
          *(void *)(a1 + 564) |= 0x40000uLL;
LABEL_670:
        if (v54 & 1 | ((v313 & 1) == 0))
        {
          char v305 = *(unsigned char *)(a1 + 572) | 1;
          *(void *)(a1 + 564) |= 0xFFFFFFFFFFF80000;
          *(unsigned char *)(a1 + 572) = v305;
        }
        else if (v56)
        {
          while (1)
          {
            int v306 = *v56++;
            char v307 = 0;
            unint64_t v308 = 0x400000000000000;
            switch(v306)
            {
              case 0:
                goto LABEL_720;
              case 2:
                goto LABEL_719;
              case 3:
                char v307 = 0;
                unint64_t v308 = 0x20000000000;
                goto LABEL_719;
              case 4:
                char v307 = 0;
                unint64_t v308 = 0x400000000000;
                goto LABEL_719;
              case 7:
                char v307 = 0;
                unint64_t v308 = 0x2000000000000;
                goto LABEL_719;
              case 9:
                unint64_t v308 = 0;
                char v307 = 1;
                goto LABEL_719;
              case 16:
                char v307 = 0;
                unint64_t v308 = 0x40000000;
                goto LABEL_719;
              case 18:
                char v307 = 0;
                unint64_t v308 = 0x8000000;
                goto LABEL_719;
              case 20:
                char v307 = 0;
                unint64_t v308 = 0x10000000;
                goto LABEL_719;
              case 21:
                char v307 = 0;
                unint64_t v308 = 0x2000000;
                goto LABEL_719;
              case 22:
                char v307 = 0;
                unint64_t v308 = 0x1000000;
                goto LABEL_719;
              case 23:
                char v307 = 0;
                unint64_t v308 = 0x800000;
                goto LABEL_719;
              case 25:
                char v307 = 0;
                unint64_t v308 = 0x4000000000000;
                goto LABEL_719;
              case 34:
                char v307 = 0;
                unint64_t v308 = 0x800000000;
                goto LABEL_719;
              case 50:
                char v307 = 0;
                unint64_t v308 = 0x4000000000000000;
                goto LABEL_719;
              case 51:
                char v307 = 0;
                unint64_t v308 = 0x400000;
                goto LABEL_719;
              case 52:
                char v307 = 0;
                unint64_t v308 = 0x200000;
                goto LABEL_719;
              case 53:
                char v307 = 0;
                unint64_t v308 = 0x80000000000000;
                goto LABEL_719;
              case 54:
                char v307 = 0;
                unint64_t v308 = 0x10000000000000;
                goto LABEL_719;
              case 55:
                char v307 = 0;
                unint64_t v308 = 0x100000000000000;
                goto LABEL_719;
              case 56:
                char v307 = 0;
                unint64_t v308 = 0x400000000;
                goto LABEL_719;
              case 57:
                char v307 = 0;
                unint64_t v308 = 0x2000000000000000;
                goto LABEL_719;
              case 58:
                char v307 = 0;
                unint64_t v308 = 0x1000000000000000;
                goto LABEL_719;
              case 59:
                char v307 = 0;
                unint64_t v308 = 0x4000000;
                goto LABEL_719;
              case 60:
                char v307 = 0;
                unint64_t v308 = 0x1000000000;
                goto LABEL_719;
              case 61:
                char v307 = 0;
                unint64_t v308 = 0x10000000000;
                goto LABEL_719;
              case 62:
                char v307 = 0;
                unint64_t v308 = 0x1000000000000;
                goto LABEL_719;
              case 64:
                char v307 = 0;
                unint64_t v308 = 0x8000000000;
                goto LABEL_719;
              case 65:
                char v307 = 0;
                unint64_t v308 = 0x20000000;
                goto LABEL_719;
              case 66:
                char v307 = 0;
                unint64_t v308 = 0x800000000000;
                goto LABEL_719;
              case 67:
                char v307 = 0;
                unint64_t v308 = 0x200000000000000;
                goto LABEL_719;
              case 68:
                char v307 = 0;
                unint64_t v308 = 0x20000000000000;
                goto LABEL_719;
              case 69:
                char v307 = 0;
                unint64_t v308 = 0x200000000;
                goto LABEL_719;
              case 70:
                char v307 = 0;
                unint64_t v308 = 0x4000000000;
                goto LABEL_719;
              case 71:
                char v307 = 0;
                unint64_t v308 = 0x800000000000000;
                goto LABEL_719;
              case 72:
                char v307 = 0;
                unint64_t v308 = 0x2000000000;
                goto LABEL_719;
              case 74:
                char v307 = 0;
                unint64_t v308 = 0x8000000000000000;
                goto LABEL_719;
              case 75:
                char v307 = 0;
                unint64_t v308 = 0x80000000000;
                goto LABEL_719;
              case 76:
                char v307 = 0;
                unint64_t v308 = 0x100000000;
                goto LABEL_719;
              case 79:
                char v307 = 0;
                unint64_t v308 = 0x100000000000;
                goto LABEL_719;
              case 80:
                char v307 = 0;
                unint64_t v308 = 0x100000;
                goto LABEL_719;
              case 81:
                char v307 = 0;
                unint64_t v308 = 0x80000;
                goto LABEL_719;
              case 82:
                char v307 = 0;
                unint64_t v308 = 0x40000000000000;
                goto LABEL_719;
              case 83:
                char v307 = 0;
                unint64_t v308 = 0x8000000000000;
                goto LABEL_719;
              case 86:
                char v307 = 0;
                unint64_t v308 = 0x40000000000;
                goto LABEL_719;
              case 87:
                char v307 = 0;
                unint64_t v308 = 0x80000000;
                goto LABEL_719;
              case 88:
                char v307 = 0;
                unint64_t v308 = 0x200000000000;
LABEL_719:
                char v309 = *(unsigned char *)(a1 + 572) | v307;
                *(void *)(a1 + 564) |= v308;
                *(unsigned char *)(a1 + 572) = v309;
                break;
              default:
                continue;
            }
          }
        }
LABEL_720:
        if (v313)
        {
          BOOL v304 = v44[*v57] == 0;
          if ((v54 & 1) == 0) {
            return v304;
          }
LABEL_724:
          v310 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        else
        {
          BOOL v304 = 0;
          if (v54) {
            goto LABEL_724;
          }
        }
        return v304;
      default:
        if ((v53 & 1) == 0 || (*(void *)(a1 + 564) & 0x40000) != 0)
        {
LABEL_489:
          char v257 = PBReaderSkipValueWithTag();
          unint64_t v58 = (int *)MEMORY[0x1E4F940B8];
          char v45 = (int *)MEMORY[0x1E4F940E0];
          uint64_t v57 = (int *)MEMORY[0x1E4F940C8];
          if ((v257 & 1) == 0)
          {
LABEL_663:
            int v313 = 0;
LABEL_664:
            if (v316) {
              goto LABEL_669;
            }
            goto LABEL_670;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v110 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            uint64_t v111 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v110;
          }
          int v112 = PBUnknownFieldAdd();
          uint64_t v57 = (int *)MEMORY[0x1E4F940C8];
          char v45 = (int *)MEMORY[0x1E4F940E0];
          unint64_t v58 = (int *)MEMORY[0x1E4F940B8];
          if (!v112)
          {
            int v313 = 0;
            goto LABEL_669;
          }
        }
        goto LABEL_610;
    }
  }
}

void sub_18980CF58(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18980D0D0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18980D368(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18980D708(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18980DAD4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18980DEA0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18980E018(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18980E358(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18980E560(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18980E760(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18980EAF4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18980EE88(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18980F254(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18980F620(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18980F9EC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18980FE48(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189810214(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18981038C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189810504(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898109DC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189810DA8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189810F20(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898112B4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189811648(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189811A14(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189811B8C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189811F58(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189812324(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898126F0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189812868(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898129E0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189812B58(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189812F24(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18981309C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189813468(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189813834(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189813A3C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18981451C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898148E8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189814CB4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189814E2C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189814FA4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18981541C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898157B0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189815928(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18981B3F0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEORouteCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v162 = *MEMORY[0x1E4F143B8];
  long long v142 = 0u;
  long long v143 = 0u;
  long long v144 = 0u;
  long long v145 = 0u;
  id v2 = *(id *)(a1 + 432);
  uint64_t v3 = [v2 countByEnumeratingWithState:&v142 objects:v161 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v143;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v143 != v5) {
          objc_enumerationMutation(v2);
        }
        [*(id *)(*((void *)&v142 + 1) + 8 * v6++) readAll:1];
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v142 objects:v161 count:16];
    }
    while (v4);
  }

  [*(id *)(a1 + 328) readAll:1];
  long long v140 = 0u;
  long long v141 = 0u;
  long long v138 = 0u;
  long long v139 = 0u;
  id v7 = *(id *)(a1 + 400);
  uint64_t v8 = [v7 countByEnumeratingWithState:&v138 objects:v160 count:16];
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)v139;
    do
    {
      uint64_t v11 = 0;
      do
      {
        if (*(void *)v139 != v10) {
          objc_enumerationMutation(v7);
        }
        [*(id *)(*((void *)&v138 + 1) + 8 * v11++) readAll:1];
      }
      while (v9 != v11);
      uint64_t v9 = [v7 countByEnumeratingWithState:&v138 objects:v160 count:16];
    }
    while (v9);
  }

  long long v136 = 0u;
  long long v137 = 0u;
  long long v134 = 0u;
  long long v135 = 0u;
  id v12 = *(id *)(a1 + 376);
  uint64_t v13 = [v12 countByEnumeratingWithState:&v134 objects:v159 count:16];
  if (v13)
  {
    uint64_t v14 = v13;
    uint64_t v15 = *(void *)v135;
    do
    {
      uint64_t v16 = 0;
      do
      {
        if (*(void *)v135 != v15) {
          objc_enumerationMutation(v12);
        }
        [*(id *)(*((void *)&v134 + 1) + 8 * v16++) readAll:1];
      }
      while (v14 != v16);
      uint64_t v14 = [v12 countByEnumeratingWithState:&v134 objects:v159 count:16];
    }
    while (v14);
  }

  long long v132 = 0u;
  long long v133 = 0u;
  long long v130 = 0u;
  long long v131 = 0u;
  id v17 = *(id *)(a1 + 440);
  uint64_t v18 = [v17 countByEnumeratingWithState:&v130 objects:v158 count:16];
  if (v18)
  {
    uint64_t v19 = v18;
    uint64_t v20 = *(void *)v131;
    do
    {
      uint64_t v21 = 0;
      do
      {
        if (*(void *)v131 != v20) {
          objc_enumerationMutation(v17);
        }
        [*(id *)(*((void *)&v130 + 1) + 8 * v21++) readAll:1];
      }
      while (v19 != v21);
      uint64_t v19 = [v17 countByEnumeratingWithState:&v130 objects:v158 count:16];
    }
    while (v19);
  }

  long long v128 = 0u;
  long long v129 = 0u;
  long long v126 = 0u;
  long long v127 = 0u;
  id v22 = *(id *)(a1 + 368);
  uint64_t v23 = [v22 countByEnumeratingWithState:&v126 objects:v157 count:16];
  if (v23)
  {
    uint64_t v24 = v23;
    uint64_t v25 = *(void *)v127;
    do
    {
      uint64_t v26 = 0;
      do
      {
        if (*(void *)v127 != v25) {
          objc_enumerationMutation(v22);
        }
        [*(id *)(*((void *)&v126 + 1) + 8 * v26++) readAll:1];
      }
      while (v24 != v26);
      uint64_t v24 = [v22 countByEnumeratingWithState:&v126 objects:v157 count:16];
    }
    while (v24);
  }

  [*(id *)(a1 + 392) readAll:1];
  [*(id *)(a1 + 272) readAll:1];
  [*(id *)(a1 + 200) readAll:1];
  long long v124 = 0u;
  long long v125 = 0u;
  long long v122 = 0u;
  long long v123 = 0u;
  id v27 = *(id *)(a1 + 248);
  uint64_t v28 = [v27 countByEnumeratingWithState:&v122 objects:v156 count:16];
  if (v28)
  {
    uint64_t v29 = v28;
    uint64_t v30 = *(void *)v123;
    do
    {
      uint64_t v31 = 0;
      do
      {
        if (*(void *)v123 != v30) {
          objc_enumerationMutation(v27);
        }
        [*(id *)(*((void *)&v122 + 1) + 8 * v31++) readAll:1];
      }
      while (v29 != v31);
      uint64_t v29 = [v27 countByEnumeratingWithState:&v122 objects:v156 count:16];
    }
    while (v29);
  }

  long long v120 = 0u;
  long long v121 = 0u;
  long long v118 = 0u;
  long long v119 = 0u;
  id v32 = *(id *)(a1 + 264);
  uint64_t v33 = [v32 countByEnumeratingWithState:&v118 objects:v155 count:16];
  if (v33)
  {
    uint64_t v34 = v33;
    uint64_t v35 = *(void *)v119;
    do
    {
      uint64_t v36 = 0;
      do
      {
        if (*(void *)v119 != v35) {
          objc_enumerationMutation(v32);
        }
        [*(id *)(*((void *)&v118 + 1) + 8 * v36++) readAll:1];
      }
      while (v34 != v36);
      uint64_t v34 = [v32 countByEnumeratingWithState:&v118 objects:v155 count:16];
    }
    while (v34);
  }

  -[GEORouteInformation readAll:](*(void *)(a1 + 408), 1);
  long long v116 = 0u;
  long long v117 = 0u;
  long long v114 = 0u;
  long long v115 = 0u;
  id v37 = *(id *)(a1 + 384);
  uint64_t v38 = [v37 countByEnumeratingWithState:&v114 objects:v154 count:16];
  if (v38)
  {
    uint64_t v39 = v38;
    uint64_t v40 = *(void *)v115;
    do
    {
      uint64_t v41 = 0;
      do
      {
        if (*(void *)v115 != v40) {
          objc_enumerationMutation(v37);
        }
        [*(id *)(*((void *)&v114 + 1) + 8 * v41++) readAll:1];
      }
      while (v39 != v41);
      uint64_t v39 = [v37 countByEnumeratingWithState:&v114 objects:v154 count:16];
    }
    while (v39);
  }

  long long v112 = 0u;
  long long v113 = 0u;
  long long v110 = 0u;
  long long v111 = 0u;
  id v42 = *(id *)(a1 + 416);
  uint64_t v43 = [v42 countByEnumeratingWithState:&v110 objects:v153 count:16];
  if (v43)
  {
    uint64_t v44 = v43;
    uint64_t v45 = *(void *)v111;
    do
    {
      uint64_t v46 = 0;
      do
      {
        if (*(void *)v111 != v45) {
          objc_enumerationMutation(v42);
        }
        [*(id *)(*((void *)&v110 + 1) + 8 * v46++) readAll:1];
      }
      while (v44 != v46);
      uint64_t v44 = [v42 countByEnumeratingWithState:&v110 objects:v153 count:16];
    }
    while (v44);
  }

  long long v108 = 0u;
  long long v109 = 0u;
  long long v106 = 0u;
  long long v107 = 0u;
  id v47 = *(id *)(a1 + 240);
  uint64_t v48 = [v47 countByEnumeratingWithState:&v106 objects:v152 count:16];
  if (v48)
  {
    uint64_t v49 = v48;
    uint64_t v50 = *(void *)v107;
    do
    {
      uint64_t v51 = 0;
      do
      {
        if (*(void *)v107 != v50) {
          objc_enumerationMutation(v47);
        }
        [*(id *)(*((void *)&v106 + 1) + 8 * v51++) readAll:1];
      }
      while (v49 != v51);
      uint64_t v49 = [v47 countByEnumeratingWithState:&v106 objects:v152 count:16];
    }
    while (v49);
  }

  [*(id *)(a1 + 176) readAll:1];
  long long v104 = 0u;
  long long v105 = 0u;
  long long v102 = 0u;
  long long v103 = 0u;
  id v52 = *(id *)(a1 + 256);
  uint64_t v53 = [v52 countByEnumeratingWithState:&v102 objects:v151 count:16];
  if (v53)
  {
    uint64_t v54 = v53;
    uint64_t v55 = *(void *)v103;
    do
    {
      uint64_t v56 = 0;
      do
      {
        if (*(void *)v103 != v55) {
          objc_enumerationMutation(v52);
        }
        [*(id *)(*((void *)&v102 + 1) + 8 * v56++) readAll:1];
      }
      while (v54 != v56);
      uint64_t v54 = [v52 countByEnumeratingWithState:&v102 objects:v151 count:16];
    }
    while (v54);
  }

  [*(id *)(a1 + 288) readAll:1];
  long long v100 = 0u;
  long long v101 = 0u;
  long long v98 = 0u;
  long long v99 = 0u;
  id v57 = *(id *)(a1 + 352);
  uint64_t v58 = [v57 countByEnumeratingWithState:&v98 objects:v150 count:16];
  if (v58)
  {
    uint64_t v59 = v58;
    uint64_t v60 = *(void *)v99;
    do
    {
      uint64_t v61 = 0;
      do
      {
        if (*(void *)v99 != v60) {
          objc_enumerationMutation(v57);
        }
        [*(id *)(*((void *)&v98 + 1) + 8 * v61++) readAll:1];
      }
      while (v59 != v61);
      uint64_t v59 = [v57 countByEnumeratingWithState:&v98 objects:v150 count:16];
    }
    while (v59);
  }

  long long v96 = 0u;
  long long v97 = 0u;
  long long v94 = 0u;
  long long v95 = 0u;
  id v62 = *(id *)(a1 + 280);
  uint64_t v63 = [v62 countByEnumeratingWithState:&v94 objects:v149 count:16];
  if (v63)
  {
    uint64_t v64 = v63;
    uint64_t v65 = *(void *)v95;
    do
    {
      uint64_t v66 = 0;
      do
      {
        if (*(void *)v95 != v65) {
          objc_enumerationMutation(v62);
        }
        [*(id *)(*((void *)&v94 + 1) + 8 * v66++) readAll:1];
      }
      while (v64 != v66);
      uint64_t v64 = [v62 countByEnumeratingWithState:&v94 objects:v149 count:16];
    }
    while (v64);
  }

  [*(id *)(a1 + 232) readAll:1];
  long long v92 = 0u;
  long long v93 = 0u;
  long long v90 = 0u;
  long long v91 = 0u;
  id v67 = *(id *)(a1 + 344);
  uint64_t v68 = [v67 countByEnumeratingWithState:&v90 objects:v148 count:16];
  if (v68)
  {
    uint64_t v69 = v68;
    uint64_t v70 = *(void *)v91;
    do
    {
      uint64_t v71 = 0;
      do
      {
        if (*(void *)v91 != v70) {
          objc_enumerationMutation(v67);
        }
        [*(id *)(*((void *)&v90 + 1) + 8 * v71++) readAll:1];
      }
      while (v69 != v71);
      uint64_t v69 = [v67 countByEnumeratingWithState:&v90 objects:v148 count:16];
    }
    while (v69);
  }

  long long v88 = 0u;
  long long v89 = 0u;
  long long v86 = 0u;
  long long v87 = 0u;
  id v72 = *(id *)(a1 + 424);
  uint64_t v73 = [v72 countByEnumeratingWithState:&v86 objects:v147 count:16];
  if (v73)
  {
    uint64_t v74 = v73;
    uint64_t v75 = *(void *)v87;
    do
    {
      uint64_t v76 = 0;
      do
      {
        if (*(void *)v87 != v75) {
          objc_enumerationMutation(v72);
        }
        [*(id *)(*((void *)&v86 + 1) + 8 * v76++) readAll:1];
      }
      while (v74 != v76);
      uint64_t v74 = [v72 countByEnumeratingWithState:&v86 objects:v147 count:16];
    }
    while (v74);
  }

  long long v84 = 0u;
  long long v85 = 0u;
  long long v82 = 0u;
  long long v83 = 0u;
  id v77 = *(id *)(a1 + 472);
  uint64_t v78 = [v77 countByEnumeratingWithState:&v82 objects:v146 count:16];
  if (v78)
  {
    uint64_t v79 = v78;
    uint64_t v80 = *(void *)v83;
    do
    {
      uint64_t v81 = 0;
      do
      {
        if (*(void *)v83 != v80) {
          objc_enumerationMutation(v77);
        }
        objc_msgSend(*(id *)(*((void *)&v82 + 1) + 8 * v81++), "readAll:", 1, (void)v82);
      }
      while (v79 != v81);
      uint64_t v79 = [v77 countByEnumeratingWithState:&v82 objects:v146 count:16];
    }
    while (v79);
  }

  [*(id *)(a1 + 312) readAll:1];
  [*(id *)(a1 + 224) readAll:1];
  -[GEODrivingWalkingInstruction readAll:](*(void *)(a1 + 304), 1);
  -[GEODrivingWalkingInstruction readAll:](*(void *)(a1 + 216), 1);
}

BOOL GEORouteReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 492))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEORouteReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 496));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 488) = [v8 position];
  *(_DWORD *)(a1 + 492) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEORouteReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEORouteReadAllFrom_initialTag;
  }
  BOOL Specified = GEORouteReadSpecified(a1, (char *)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEORouteCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 496));
  return Specified;
}

void sub_18981C04C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORouteReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEORouteReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18981C0B0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORouteIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (!a1[*v4])
    {
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        BOOL v13 = v7++ >= 9;
        if (v13)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_379;
          }
          unsigned int v17 = 0;
          while (1)
          {
            uint64_t v18 = *v2;
            uint64_t v19 = *(void *)&a1[v18];
            unint64_t v20 = v19 + 1;
            if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
              goto LABEL_310;
            }
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if (v21 < 0)
            {
              BOOL v22 = v17++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_315;
          }
        case 2u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOStepIsValid(a1)) {
            goto LABEL_379;
          }
          goto LABEL_314;
        case 3u:
          if (v15 == 2) {
            goto LABEL_294;
          }
          goto LABEL_379;
        case 4u:
          if (v15 == 2) {
            goto LABEL_294;
          }
          goto LABEL_379;
        case 5u:
          if ((v8 & 7) != 0) {
            goto LABEL_379;
          }
          unsigned int v23 = 0;
          while (1)
          {
            uint64_t v24 = *v2;
            uint64_t v25 = *(void *)&a1[v24];
            unint64_t v26 = v25 + 1;
            if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
              goto LABEL_310;
            }
            int v27 = *(char *)(*(void *)&a1[*v5] + v25);
            *(void *)&a1[v24] = v26;
            if (v27 < 0)
            {
              BOOL v22 = v23++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_315;
          }
        case 6u:
          if ((v8 & 7) != 0) {
            goto LABEL_379;
          }
          unsigned int v28 = 0;
          while (1)
          {
            uint64_t v29 = *v2;
            uint64_t v30 = *(void *)&a1[v29];
            unint64_t v31 = v30 + 1;
            if (v30 == -1 || v31 > *(void *)&a1[*v3]) {
              goto LABEL_310;
            }
            int v32 = *(char *)(*(void *)&a1[*v5] + v30);
            *(void *)&a1[v29] = v31;
            if (v32 < 0)
            {
              BOOL v22 = v28++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_315;
          }
        case 7u:
          if (v15 == 2) {
            goto LABEL_294;
          }
          goto LABEL_379;
        case 8u:
          if ((v8 & 7) != 0) {
            goto LABEL_379;
          }
          unsigned int v33 = 0;
          while (1)
          {
            uint64_t v34 = *v2;
            uint64_t v35 = *(void *)&a1[v34];
            unint64_t v36 = v35 + 1;
            if (v35 == -1 || v36 > *(void *)&a1[*v3]) {
              goto LABEL_310;
            }
            int v37 = *(char *)(*(void *)&a1[*v5] + v35);
            *(void *)&a1[v34] = v36;
            if (v37 < 0)
            {
              BOOL v22 = v33++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_315;
          }
        case 9u:
          if (v15 == 2) {
            goto LABEL_294;
          }
          goto LABEL_379;
        case 0xAu:
          if ((v8 & 7) != 0) {
            goto LABEL_379;
          }
          unsigned int v38 = 0;
          while (1)
          {
            uint64_t v39 = *v2;
            uint64_t v40 = *(void *)&a1[v39];
            unint64_t v41 = v40 + 1;
            if (v40 == -1 || v41 > *(void *)&a1[*v3]) {
              goto LABEL_310;
            }
            int v42 = *(char *)(*(void *)&a1[*v5] + v40);
            *(void *)&a1[v39] = v41;
            if (v42 < 0)
            {
              BOOL v22 = v38++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_315;
          }
        case 0x10u:
          if (v15 == 2) {
            goto LABEL_294;
          }
          goto LABEL_379;
        case 0x11u:
          if ((v8 & 7) != 0) {
            goto LABEL_379;
          }
          unsigned int v43 = 0;
          while (1)
          {
            uint64_t v44 = *v2;
            uint64_t v45 = *(void *)&a1[v44];
            unint64_t v46 = v45 + 1;
            if (v45 == -1 || v46 > *(void *)&a1[*v3]) {
              goto LABEL_310;
            }
            int v47 = *(char *)(*(void *)&a1[*v5] + v45);
            *(void *)&a1[v44] = v46;
            if (v47 < 0)
            {
              BOOL v22 = v43++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_315;
          }
        case 0x12u:
          if (v15 == 2) {
            goto LABEL_294;
          }
          goto LABEL_379;
        case 0x13u:
          if ((v8 & 7) != 0) {
            goto LABEL_379;
          }
          unsigned int v48 = 0;
          while (1)
          {
            uint64_t v49 = *v2;
            uint64_t v50 = *(void *)&a1[v49];
            unint64_t v51 = v50 + 1;
            if (v50 == -1 || v51 > *(void *)&a1[*v3]) {
              goto LABEL_310;
            }
            int v52 = *(char *)(*(void *)&a1[*v5] + v50);
            *(void *)&a1[v49] = v51;
            if (v52 < 0)
            {
              BOOL v22 = v48++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_315;
          }
        case 0x14u:
          if (v15 == 2) {
            goto LABEL_294;
          }
          goto LABEL_379;
        case 0x15u:
          if (v15 == 2) {
            goto LABEL_294;
          }
          goto LABEL_379;
        case 0x16u:
          if (v15 != 2)
          {
            if ((v8 & 7) != 0) {
              goto LABEL_379;
            }
            while (1)
            {
              uint64_t v53 = *v2;
              uint64_t v54 = *(void *)&a1[v53];
              unint64_t v55 = v54 + 1;
              if (v54 == -1 || v55 > *(void *)&a1[*v3]) {
                goto LABEL_310;
              }
              int v56 = *(char *)(*(void *)&a1[*v5] + v54);
              *(void *)&a1[v53] = v55;
              if (v56 < 0)
              {
                unsigned int v57 = v15++;
                if (v57 <= 8) {
                  continue;
                }
              }
              goto LABEL_315;
            }
          }
          if (!PBReaderPlaceMark()) {
            goto LABEL_379;
          }
LABEL_318:
          while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
          {
            unsigned int v138 = a1[*v4];
            if (a1[*v4]) {
              break;
            }
            while (1)
            {
              uint64_t v139 = *v2;
              uint64_t v140 = *(void *)&a1[v139];
              unint64_t v141 = v140 + 1;
              if (v140 == -1 || v141 > *(void *)&a1[*v3]) {
                break;
              }
              int v142 = *(char *)(*(void *)&a1[*v5] + v140);
              *(void *)&a1[v139] = v141;
              if (v142 < 0)
              {
                BOOL v13 = v138++ >= 9;
                if (!v13) {
                  continue;
                }
              }
              goto LABEL_318;
            }
            a1[*v4] = 1;
          }
          goto LABEL_314;
        case 0x17u:
          if (v15 != 2)
          {
            if ((v8 & 7) != 0) {
              goto LABEL_379;
            }
            while (1)
            {
              uint64_t v58 = *v2;
              uint64_t v59 = *(void *)&a1[v58];
              unint64_t v60 = v59 + 1;
              if (v59 == -1 || v60 > *(void *)&a1[*v3]) {
                goto LABEL_310;
              }
              int v61 = *(char *)(*(void *)&a1[*v5] + v59);
              *(void *)&a1[v58] = v60;
              if (v61 < 0)
              {
                unsigned int v62 = v15++;
                if (v62 <= 8) {
                  continue;
                }
              }
              goto LABEL_315;
            }
          }
          if (!PBReaderPlaceMark()) {
            goto LABEL_379;
          }
LABEL_328:
          while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
          {
            unsigned int v143 = a1[*v4];
            if (a1[*v4]) {
              break;
            }
            while (1)
            {
              uint64_t v144 = *v2;
              uint64_t v145 = *(void *)&a1[v144];
              unint64_t v146 = v145 + 1;
              if (v145 == -1 || v146 > *(void *)&a1[*v3]) {
                break;
              }
              int v147 = *(char *)(*(void *)&a1[*v5] + v145);
              *(void *)&a1[v144] = v146;
              if (v147 < 0)
              {
                BOOL v13 = v143++ >= 9;
                if (!v13) {
                  continue;
                }
              }
              goto LABEL_328;
            }
            a1[*v4] = 1;
          }
          goto LABEL_314;
        case 0x19u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORouteNameIsValid(a1)) {
            goto LABEL_379;
          }
          goto LABEL_314;
        case 0x1Au:
          if ((v8 & 7) != 0) {
            goto LABEL_379;
          }
          unsigned int v63 = 0;
          while (1)
          {
            uint64_t v64 = *v2;
            uint64_t v65 = *(void *)&a1[v64];
            unint64_t v66 = v65 + 1;
            if (v65 == -1 || v66 > *(void *)&a1[*v3]) {
              goto LABEL_310;
            }
            int v67 = *(char *)(*(void *)&a1[*v5] + v65);
            *(void *)&a1[v64] = v66;
            if (v67 < 0)
            {
              BOOL v22 = v63++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_315;
          }
        case 0x1Cu:
          if ((v8 & 7) != 0) {
            goto LABEL_379;
          }
          unsigned int v68 = 0;
          while (1)
          {
            uint64_t v69 = *v2;
            uint64_t v70 = *(void *)&a1[v69];
            unint64_t v71 = v70 + 1;
            if (v70 == -1 || v71 > *(void *)&a1[*v3]) {
              goto LABEL_310;
            }
            int v72 = *(char *)(*(void *)&a1[*v5] + v70);
            *(void *)&a1[v69] = v71;
            if (v72 < 0)
            {
              BOOL v22 = v68++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_315;
          }
        case 0x1Du:
          if ((v8 & 7) != 0) {
            goto LABEL_379;
          }
          unsigned int v73 = 0;
          while (1)
          {
            uint64_t v74 = *v2;
            uint64_t v75 = *(void *)&a1[v74];
            unint64_t v76 = v75 + 1;
            if (v75 == -1 || v76 > *(void *)&a1[*v3]) {
              goto LABEL_310;
            }
            int v77 = *(char *)(*(void *)&a1[*v5] + v75);
            *(void *)&a1[v74] = v76;
            if (v77 < 0)
            {
              BOOL v22 = v73++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_315;
          }
        case 0x1Eu:
          if ((v8 & 7) != 0) {
            goto LABEL_379;
          }
          unsigned int v78 = 0;
          while (1)
          {
            uint64_t v79 = *v2;
            uint64_t v80 = *(void *)&a1[v79];
            unint64_t v81 = v80 + 1;
            if (v80 == -1 || v81 > *(void *)&a1[*v3]) {
              goto LABEL_310;
            }
            int v82 = *(char *)(*(void *)&a1[*v5] + v80);
            *(void *)&a1[v79] = v81;
            if (v82 < 0)
            {
              BOOL v22 = v78++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_315;
          }
        case 0x1Fu:
          if ((v8 & 7) != 0) {
            goto LABEL_379;
          }
          unsigned int v83 = 0;
          while (1)
          {
            uint64_t v84 = *v2;
            uint64_t v85 = *(void *)&a1[v84];
            unint64_t v86 = v85 + 1;
            if (v85 == -1 || v86 > *(void *)&a1[*v3]) {
              goto LABEL_310;
            }
            int v87 = *(char *)(*(void *)&a1[*v5] + v85);
            *(void *)&a1[v84] = v86;
            if (v87 < 0)
            {
              BOOL v22 = v83++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_315;
          }
        case 0x20u:
          if ((v8 & 7) != 0) {
            goto LABEL_379;
          }
          unsigned int v88 = 0;
          while (1)
          {
            uint64_t v89 = *v2;
            uint64_t v90 = *(void *)&a1[v89];
            unint64_t v91 = v90 + 1;
            if (v90 == -1 || v91 > *(void *)&a1[*v3]) {
              goto LABEL_310;
            }
            int v92 = *(char *)(*(void *)&a1[*v5] + v90);
            *(void *)&a1[v89] = v91;
            if (v92 < 0)
            {
              BOOL v22 = v88++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_315;
          }
        case 0x21u:
          if ((v8 & 7) != 0) {
            goto LABEL_379;
          }
          unsigned int v93 = 0;
          while (1)
          {
            uint64_t v94 = *v2;
            uint64_t v95 = *(void *)&a1[v94];
            unint64_t v96 = v95 + 1;
            if (v95 == -1 || v96 > *(void *)&a1[*v3]) {
              goto LABEL_310;
            }
            int v97 = *(char *)(*(void *)&a1[*v5] + v95);
            *(void *)&a1[v94] = v96;
            if (v97 < 0)
            {
              BOOL v22 = v93++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_315;
          }
        case 0x22u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOEnrouteNoticeIsValid(a1)) {
            goto LABEL_379;
          }
          goto LABEL_314;
        case 0x32u:
          if (v15 == 2) {
            goto LABEL_294;
          }
          goto LABEL_379;
        case 0x33u:
          if (v15 != 2)
          {
            if ((v8 & 7) != 0) {
              goto LABEL_379;
            }
            while (1)
            {
              uint64_t v98 = *v2;
              uint64_t v99 = *(void *)&a1[v98];
              unint64_t v100 = v99 + 1;
              if (v99 == -1 || v100 > *(void *)&a1[*v3]) {
                goto LABEL_310;
              }
              int v101 = *(char *)(*(void *)&a1[*v5] + v99);
              *(void *)&a1[v98] = v100;
              if (v101 < 0)
              {
                unsigned int v102 = v15++;
                if (v102 <= 8) {
                  continue;
                }
              }
              goto LABEL_315;
            }
          }
          if (!PBReaderPlaceMark()) {
            goto LABEL_379;
          }
LABEL_338:
          while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
          {
            unsigned int v148 = a1[*v4];
            if (a1[*v4]) {
              break;
            }
            while (1)
            {
              uint64_t v149 = *v2;
              uint64_t v150 = *(void *)&a1[v149];
              unint64_t v151 = v150 + 1;
              if (v150 == -1 || v151 > *(void *)&a1[*v3]) {
                break;
              }
              int v152 = *(char *)(*(void *)&a1[*v5] + v150);
              *(void *)&a1[v149] = v151;
              if (v152 < 0)
              {
                BOOL v13 = v148++ >= 9;
                if (!v13) {
                  continue;
                }
              }
              goto LABEL_338;
            }
            a1[*v4] = 1;
          }
          goto LABEL_314;
        case 0x34u:
          if (v15 != 2)
          {
            if ((v8 & 7) != 0) {
              goto LABEL_379;
            }
            while (1)
            {
              uint64_t v103 = *v2;
              uint64_t v104 = *(void *)&a1[v103];
              unint64_t v105 = v104 + 1;
              if (v104 == -1 || v105 > *(void *)&a1[*v3]) {
                goto LABEL_310;
              }
              int v106 = *(char *)(*(void *)&a1[*v5] + v104);
              *(void *)&a1[v103] = v105;
              if (v106 < 0)
              {
                unsigned int v107 = v15++;
                if (v107 <= 8) {
                  continue;
                }
              }
              goto LABEL_315;
            }
          }
          if (!PBReaderPlaceMark()) {
            goto LABEL_379;
          }
LABEL_348:
          while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
          {
            unsigned int v153 = a1[*v4];
            if (a1[*v4]) {
              break;
            }
            while (1)
            {
              uint64_t v154 = *v2;
              uint64_t v155 = *(void *)&a1[v154];
              unint64_t v156 = v155 + 1;
              if (v155 == -1 || v156 > *(void *)&a1[*v3]) {
                break;
              }
              int v157 = *(char *)(*(void *)&a1[*v5] + v155);
              *(void *)&a1[v154] = v156;
              if (v157 < 0)
              {
                BOOL v13 = v153++ >= 9;
                if (!v13) {
                  continue;
                }
              }
              goto LABEL_348;
            }
            a1[*v4] = 1;
          }
          goto LABEL_314;
        case 0x35u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORouteInformationIsValid(a1)) {
            goto LABEL_379;
          }
          goto LABEL_314;
        case 0x36u:
        case 0x37u:
        case 0x38u:
        case 0x44u:
        case 0x46u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOFormattedStringIsValid(a1)) {
            goto LABEL_379;
          }
          goto LABEL_314;
        case 0x39u:
          if (v15 == 2) {
            goto LABEL_294;
          }
          goto LABEL_379;
        case 0x3Au:
          if (v15 == 2) {
            goto LABEL_294;
          }
          goto LABEL_379;
        case 0x3Bu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOAlertNonRecommendedRouteTextIsValid(a1)) {
            goto LABEL_379;
          }
          goto LABEL_314;
        case 0x3Cu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOGuidanceEventIsValid(a1)) {
            goto LABEL_379;
          }
          goto LABEL_314;
        case 0x3Du:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOLaunchAndGoCardTextIsValid(a1)) {
            goto LABEL_379;
          }
          goto LABEL_314;
        case 0x3Eu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORoadComplexityIsValid(a1)) {
            goto LABEL_379;
          }
          goto LABEL_314;
        case 0x3Fu:
          if ((v8 & 7) != 0) {
            goto LABEL_379;
          }
          unsigned int v108 = 0;
          while (1)
          {
            uint64_t v109 = *v2;
            uint64_t v110 = *(void *)&a1[v109];
            unint64_t v111 = v110 + 1;
            if (v110 == -1 || v111 > *(void *)&a1[*v3]) {
              goto LABEL_310;
            }
            int v112 = *(char *)(*(void *)&a1[*v5] + v110);
            *(void *)&a1[v109] = v111;
            if (v112 < 0)
            {
              BOOL v22 = v108++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_315;
          }
        case 0x40u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOLaneWidthIsValid(a1)) {
            goto LABEL_379;
          }
          goto LABEL_314;
        case 0x41u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOClickableAdvisoryIsValid(a1)) {
            goto LABEL_379;
          }
          goto LABEL_314;
        case 0x42u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORestrictedZoneIdIsValid(a1)) {
            goto LABEL_379;
          }
          goto LABEL_314;
        case 0x43u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOStepGroupIsValid(a1)) {
            goto LABEL_379;
          }
          goto LABEL_314;
        case 0x45u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOElevationProfileIsValid(a1)) {
            goto LABEL_379;
          }
          goto LABEL_314;
        case 0x47u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOTrafficColorInfoIsValid(a1)) {
            goto LABEL_379;
          }
          goto LABEL_314;
        case 0x48u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOIncidentOnRouteInfoIsValid(a1)) {
            goto LABEL_379;
          }
          goto LABEL_314;
        case 0x49u:
          if ((v8 & 7) != 0) {
            goto LABEL_379;
          }
          unsigned int v113 = 0;
          while (1)
          {
            uint64_t v114 = *v2;
            uint64_t v115 = *(void *)&a1[v114];
            unint64_t v116 = v115 + 1;
            if (v115 == -1 || v116 > *(void *)&a1[*v3]) {
              goto LABEL_310;
            }
            int v117 = *(char *)(*(void *)&a1[*v5] + v115);
            *(void *)&a1[v114] = v116;
            if (v117 < 0)
            {
              BOOL v22 = v113++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_315;
          }
        case 0x4Au:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOUpdateLocationIsValid(a1)) {
            goto LABEL_379;
          }
          goto LABEL_314;
        case 0x4Bu:
        case 0x4Cu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOWaypointInfoIsValid(a1)) {
            goto LABEL_379;
          }
          goto LABEL_314;
        case 0x4Du:
          if ((v8 & 7) != 0) {
            goto LABEL_379;
          }
          unsigned int v118 = 0;
          while (1)
          {
            uint64_t v119 = *v2;
            uint64_t v120 = *(void *)&a1[v119];
            unint64_t v121 = v120 + 1;
            if (v120 == -1 || v121 > *(void *)&a1[*v3]) {
              goto LABEL_310;
            }
            int v122 = *(char *)(*(void *)&a1[*v5] + v120);
            *(void *)&a1[v119] = v121;
            if (v122 < 0)
            {
              BOOL v22 = v118++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_315;
          }
        case 0x4Eu:
          if ((v8 & 7) != 0) {
            goto LABEL_379;
          }
          unsigned int v123 = 0;
          while (1)
          {
            uint64_t v124 = *v2;
            uint64_t v125 = *(void *)&a1[v124];
            unint64_t v126 = v125 + 1;
            if (v125 == -1 || v126 > *(void *)&a1[*v3]) {
              goto LABEL_310;
            }
            int v127 = *(char *)(*(void *)&a1[*v5] + v125);
            *(void *)&a1[v124] = v126;
            if (v127 < 0)
            {
              BOOL v22 = v123++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_315;
          }
        case 0x4Fu:
          if (v15 == 2) {
            goto LABEL_294;
          }
          goto LABEL_379;
        case 0x50u:
          if (v15 != 2)
          {
            if ((v8 & 7) != 0) {
              goto LABEL_379;
            }
            while (1)
            {
              uint64_t v128 = *v2;
              uint64_t v129 = *(void *)&a1[v128];
              unint64_t v130 = v129 + 1;
              if (v129 == -1 || v130 > *(void *)&a1[*v3]) {
                goto LABEL_310;
              }
              int v131 = *(char *)(*(void *)&a1[*v5] + v129);
              *(void *)&a1[v128] = v130;
              if (v131 < 0)
              {
                unsigned int v132 = v15++;
                if (v132 <= 8) {
                  continue;
                }
              }
              goto LABEL_315;
            }
          }
          if (!PBReaderPlaceMark()) {
            goto LABEL_379;
          }
LABEL_358:
          while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
          {
            unsigned int v158 = a1[*v4];
            if (a1[*v4]) {
              break;
            }
            while (1)
            {
              uint64_t v159 = *v2;
              uint64_t v160 = *(void *)&a1[v159];
              unint64_t v161 = v160 + 1;
              if (v160 == -1 || v161 > *(void *)&a1[*v3]) {
                break;
              }
              int v162 = *(char *)(*(void *)&a1[*v5] + v160);
              *(void *)&a1[v159] = v161;
              if (v162 < 0)
              {
                BOOL v13 = v158++ >= 9;
                if (!v13) {
                  continue;
                }
              }
              goto LABEL_358;
            }
            a1[*v4] = 1;
          }
          goto LABEL_314;
        case 0x51u:
          if (v15 == 2)
          {
            if (!PBReaderPlaceMark())
            {
LABEL_379:
              PBReaderRecallMark();
              return 0;
            }
LABEL_368:
            while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
            {
              unsigned int v163 = a1[*v4];
              if (a1[*v4]) {
                break;
              }
              while (1)
              {
                uint64_t v164 = *v2;
                uint64_t v165 = *(void *)&a1[v164];
                unint64_t v166 = v165 + 1;
                if (v165 == -1 || v166 > *(void *)&a1[*v3]) {
                  break;
                }
                int v167 = *(char *)(*(void *)&a1[*v5] + v165);
                *(void *)&a1[v164] = v166;
                if (v167 < 0)
                {
                  BOOL v13 = v163++ >= 9;
                  if (!v13) {
                    continue;
                  }
                }
                goto LABEL_368;
              }
              a1[*v4] = 1;
            }
LABEL_314:
            PBReaderRecallMark();
          }
          else
          {
            if ((v8 & 7) != 0) {
              goto LABEL_379;
            }
            while (1)
            {
              uint64_t v133 = *v2;
              uint64_t v134 = *(void *)&a1[v133];
              unint64_t v135 = v134 + 1;
              if (v134 == -1 || v135 > *(void *)&a1[*v3]) {
                break;
              }
              int v136 = *(char *)(*(void *)&a1[*v5] + v134);
              *(void *)&a1[v133] = v135;
              if (v136 < 0)
              {
                unsigned int v137 = v15++;
                if (v137 <= 8) {
                  continue;
                }
              }
              goto LABEL_315;
            }
LABEL_310:
            a1[*v4] = 1;
          }
LABEL_315:
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_377;
          }
          break;
        case 0x52u:
        case 0x53u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORouteLineStyleInfoIsValid(a1)) {
            goto LABEL_379;
          }
          goto LABEL_314;
        case 0x56u:
        case 0x57u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEODrivingWalkingInstructionIsValid(a1)) {
            goto LABEL_379;
          }
          goto LABEL_314;
        case 0x58u:
          if (v15 == 2 && PBReaderPlaceMark() && GEOPathMapMatcherInstructionsIsValid(a1)) {
            goto LABEL_314;
          }
          goto LABEL_379;
        default:
LABEL_294:
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_379;
          }
          goto LABEL_315;
      }
    }
  }
LABEL_377:
  BOOL v168 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v168;
}

BOOL GEOStepIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          uint64_t v14 = *v4;
          int v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      uint64_t v14 = *v4;
      int v15 = a1[v14];
      if (a1[v14]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v16 = v8 & 7;
      if (v15 || v16 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_257;
          }
          unsigned int v18 = 0;
          while (1)
          {
            uint64_t v19 = *v2;
            uint64_t v20 = *(void *)&a1[v19];
            unint64_t v21 = v20 + 1;
            if (v20 == -1 || v21 > *(void *)&a1[*v3]) {
              goto LABEL_252;
            }
            int v22 = *(char *)(*(void *)&a1[*v5] + v20);
            *(void *)&a1[v19] = v21;
            if (v22 < 0)
            {
              BOOL v23 = v18++ > 8;
              if (!v23) {
                continue;
              }
            }
            goto LABEL_254;
          }
        case 2u:
          if ((v8 & 7) != 0) {
            goto LABEL_257;
          }
          unsigned int v24 = 0;
          while (1)
          {
            uint64_t v25 = *v2;
            uint64_t v26 = *(void *)&a1[v25];
            unint64_t v27 = v26 + 1;
            if (v26 == -1 || v27 > *(void *)&a1[*v3]) {
              goto LABEL_252;
            }
            int v28 = *(char *)(*(void *)&a1[*v5] + v26);
            *(void *)&a1[v25] = v27;
            if (v28 < 0)
            {
              BOOL v23 = v24++ > 8;
              if (!v23) {
                continue;
              }
            }
            goto LABEL_254;
          }
        case 3u:
          if ((v8 & 7) != 0) {
            goto LABEL_257;
          }
          unsigned int v29 = 0;
          while (1)
          {
            uint64_t v30 = *v2;
            uint64_t v31 = *(void *)&a1[v30];
            unint64_t v32 = v31 + 1;
            if (v31 == -1 || v32 > *(void *)&a1[*v3]) {
              goto LABEL_252;
            }
            int v33 = *(char *)(*(void *)&a1[*v5] + v31);
            *(void *)&a1[v30] = v32;
            if (v33 < 0)
            {
              BOOL v23 = v29++ > 8;
              if (!v23) {
                continue;
              }
            }
            goto LABEL_254;
          }
        case 4u:
          if ((v8 & 7) != 0) {
            goto LABEL_257;
          }
          unsigned int v34 = 0;
          while (1)
          {
            uint64_t v35 = *v2;
            uint64_t v36 = *(void *)&a1[v35];
            unint64_t v37 = v36 + 1;
            if (v36 == -1 || v37 > *(void *)&a1[*v3]) {
              goto LABEL_252;
            }
            int v38 = *(char *)(*(void *)&a1[*v5] + v36);
            *(void *)&a1[v35] = v37;
            if (v38 < 0)
            {
              BOOL v23 = v34++ > 8;
              if (!v23) {
                continue;
              }
            }
            goto LABEL_254;
          }
        case 5u:
          if ((v8 & 7) != 0) {
            goto LABEL_257;
          }
          unsigned int v39 = 0;
          while (1)
          {
            uint64_t v40 = *v2;
            uint64_t v41 = *(void *)&a1[v40];
            unint64_t v42 = v41 + 1;
            if (v41 == -1 || v42 > *(void *)&a1[*v3]) {
              goto LABEL_252;
            }
            int v43 = *(char *)(*(void *)&a1[*v5] + v41);
            *(void *)&a1[v40] = v42;
            if (v43 < 0)
            {
              BOOL v23 = v39++ > 8;
              if (!v23) {
                continue;
              }
            }
            goto LABEL_254;
          }
        case 6u:
          if ((v8 & 7) != 0) {
            goto LABEL_257;
          }
          unsigned int v44 = 0;
          while (1)
          {
            uint64_t v45 = *v2;
            uint64_t v46 = *(void *)&a1[v45];
            unint64_t v47 = v46 + 1;
            if (v46 == -1 || v47 > *(void *)&a1[*v3]) {
              goto LABEL_252;
            }
            int v48 = *(char *)(*(void *)&a1[*v5] + v46);
            *(void *)&a1[v45] = v47;
            if (v48 < 0)
            {
              BOOL v23 = v44++ > 8;
              if (!v23) {
                continue;
              }
            }
            goto LABEL_254;
          }
        case 7u:
          if ((v8 & 7) != 0) {
            goto LABEL_257;
          }
          unsigned int v49 = 0;
          while (1)
          {
            uint64_t v50 = *v2;
            uint64_t v51 = *(void *)&a1[v50];
            unint64_t v52 = v51 + 1;
            if (v51 == -1 || v52 > *(void *)&a1[*v3]) {
              goto LABEL_252;
            }
            int v53 = *(char *)(*(void *)&a1[*v5] + v51);
            *(void *)&a1[v50] = v52;
            if (v53 < 0)
            {
              BOOL v23 = v49++ > 8;
              if (!v23) {
                continue;
              }
            }
            goto LABEL_254;
          }
        case 8u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEONameInfoListIsValid(a1)) {
            goto LABEL_257;
          }
          goto LABEL_235;
        case 0xAu:
          if ((v8 & 7) != 0) {
            goto LABEL_257;
          }
          unsigned int v54 = 0;
          while (1)
          {
            uint64_t v55 = *v2;
            uint64_t v56 = *(void *)&a1[v55];
            unint64_t v57 = v56 + 1;
            if (v56 == -1 || v57 > *(void *)&a1[*v3]) {
              goto LABEL_252;
            }
            int v58 = *(char *)(*(void *)&a1[*v5] + v56);
            *(void *)&a1[v55] = v57;
            if (v58 < 0)
            {
              BOOL v23 = v54++ > 8;
              if (!v23) {
                continue;
              }
            }
            goto LABEL_254;
          }
        case 0xBu:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOJunctionElementIsValid(a1)) {
            goto LABEL_257;
          }
          goto LABEL_235;
        case 0xCu:
        case 0x13u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEONameInfoIsValid(a1)) {
            goto LABEL_257;
          }
          goto LABEL_235;
        case 0xDu:
          if (v16 != 5) {
            goto LABEL_257;
          }
          uint64_t v59 = *v2;
          unint64_t v60 = *(void *)&a1[v59];
          if (v60 > 0xFFFFFFFFFFFFFFFBLL) {
            goto LABEL_253;
          }
          unint64_t v61 = v60 + 4;
          if (v61 > *(void *)&a1[*v3]) {
            goto LABEL_253;
          }
          *(void *)&a1[v59] = v61;
          continue;
        case 0x10u:
          if ((v8 & 7) != 0) {
            goto LABEL_257;
          }
          unsigned int v62 = 0;
          while (1)
          {
            uint64_t v63 = *v2;
            uint64_t v64 = *(void *)&a1[v63];
            unint64_t v65 = v64 + 1;
            if (v64 == -1 || v65 > *(void *)&a1[*v3]) {
              goto LABEL_252;
            }
            int v66 = *(char *)(*(void *)&a1[*v5] + v64);
            *(void *)&a1[v63] = v65;
            if (v66 < 0)
            {
              BOOL v23 = v62++ > 8;
              if (!v23) {
                continue;
              }
            }
            goto LABEL_254;
          }
        case 0x11u:
          if ((v8 & 7) != 0) {
            goto LABEL_257;
          }
          unsigned int v67 = 0;
          while (1)
          {
            uint64_t v68 = *v2;
            uint64_t v69 = *(void *)&a1[v68];
            unint64_t v70 = v69 + 1;
            if (v69 == -1 || v70 > *(void *)&a1[*v3]) {
              goto LABEL_252;
            }
            int v71 = *(char *)(*(void *)&a1[*v5] + v69);
            *(void *)&a1[v68] = v70;
            if (v71 < 0)
            {
              BOOL v23 = v67++ > 8;
              if (!v23) {
                continue;
              }
            }
            goto LABEL_254;
          }
        case 0x12u:
          if ((v8 & 7) != 0) {
            goto LABEL_257;
          }
          unsigned int v72 = 0;
          while (1)
          {
            uint64_t v73 = *v2;
            uint64_t v74 = *(void *)&a1[v73];
            unint64_t v75 = v74 + 1;
            if (v74 == -1 || v75 > *(void *)&a1[*v3]) {
              goto LABEL_252;
            }
            int v76 = *(char *)(*(void *)&a1[*v5] + v74);
            *(void *)&a1[v73] = v75;
            if (v76 < 0)
            {
              BOOL v23 = v72++ > 8;
              if (!v23) {
                continue;
              }
            }
            goto LABEL_254;
          }
        case 0x14u:
          if ((v8 & 7) != 0) {
            goto LABEL_257;
          }
          unsigned int v77 = 0;
          while (1)
          {
            uint64_t v78 = *v2;
            uint64_t v79 = *(void *)&a1[v78];
            unint64_t v80 = v79 + 1;
            if (v79 == -1 || v80 > *(void *)&a1[*v3]) {
              goto LABEL_252;
            }
            int v81 = *(char *)(*(void *)&a1[*v5] + v79);
            *(void *)&a1[v78] = v80;
            if (v81 < 0)
            {
              BOOL v23 = v77++ > 8;
              if (!v23) {
                continue;
              }
            }
            goto LABEL_254;
          }
        case 0x15u:
          if ((v8 & 7) != 0) {
            goto LABEL_257;
          }
          unsigned int v82 = 0;
          while (1)
          {
            uint64_t v83 = *v2;
            uint64_t v84 = *(void *)&a1[v83];
            unint64_t v85 = v84 + 1;
            if (v84 == -1 || v85 > *(void *)&a1[*v3]) {
              goto LABEL_252;
            }
            int v86 = *(char *)(*(void *)&a1[*v5] + v84);
            *(void *)&a1[v83] = v85;
            if (v86 < 0)
            {
              BOOL v23 = v82++ > 8;
              if (!v23) {
                continue;
              }
            }
            goto LABEL_254;
          }
        case 0x16u:
          if ((v8 & 7) != 0) {
            goto LABEL_257;
          }
          unsigned int v87 = 0;
          while (1)
          {
            uint64_t v88 = *v2;
            uint64_t v89 = *(void *)&a1[v88];
            unint64_t v90 = v89 + 1;
            if (v89 == -1 || v90 > *(void *)&a1[*v3]) {
              goto LABEL_252;
            }
            int v91 = *(char *)(*(void *)&a1[*v5] + v89);
            *(void *)&a1[v88] = v90;
            if (v91 < 0)
            {
              BOOL v23 = v87++ > 8;
              if (!v23) {
                continue;
              }
            }
            goto LABEL_254;
          }
        case 0x18u:
          if ((v8 & 7) != 0) {
            goto LABEL_257;
          }
          unsigned int v92 = 0;
          while (1)
          {
            uint64_t v93 = *v2;
            uint64_t v94 = *(void *)&a1[v93];
            unint64_t v95 = v94 + 1;
            if (v94 == -1 || v95 > *(void *)&a1[*v3]) {
              goto LABEL_252;
            }
            int v96 = *(char *)(*(void *)&a1[*v5] + v94);
            *(void *)&a1[v93] = v95;
            if (v96 < 0)
            {
              BOOL v23 = v92++ > 8;
              if (!v23) {
                continue;
              }
            }
            goto LABEL_254;
          }
        case 0x1Eu:
          if (v16 == 2) {
            goto LABEL_158;
          }
          goto LABEL_257;
        case 0x1Fu:
          if (v16 == 2) {
            goto LABEL_158;
          }
          goto LABEL_257;
        case 0x20u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOTimeCheckpointsIsValid(a1)) {
            goto LABEL_257;
          }
          goto LABEL_235;
        case 0x21u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOInstructionSetIsValid(a1)) {
            goto LABEL_257;
          }
          goto LABEL_235;
        case 0x22u:
          if ((v8 & 7) != 0) {
            goto LABEL_257;
          }
          unsigned int v97 = 0;
          while (1)
          {
            uint64_t v98 = *v2;
            uint64_t v99 = *(void *)&a1[v98];
            unint64_t v100 = v99 + 1;
            if (v99 == -1 || v100 > *(void *)&a1[*v3]) {
              goto LABEL_252;
            }
            int v101 = *(char *)(*(void *)&a1[*v5] + v99);
            *(void *)&a1[v98] = v100;
            if (v101 < 0)
            {
              BOOL v23 = v97++ > 8;
              if (!v23) {
                continue;
              }
            }
            goto LABEL_254;
          }
        case 0x23u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOGuidanceEventIsValid(a1)) {
            goto LABEL_257;
          }
          goto LABEL_235;
        case 0x24u:
          if ((v8 & 7) != 0) {
            goto LABEL_257;
          }
          unsigned int v102 = 0;
          while (1)
          {
            uint64_t v103 = *v2;
            uint64_t v104 = *(void *)&a1[v103];
            unint64_t v105 = v104 + 1;
            if (v104 == -1 || v105 > *(void *)&a1[*v3]) {
              goto LABEL_252;
            }
            int v106 = *(char *)(*(void *)&a1[*v5] + v104);
            *(void *)&a1[v103] = v105;
            if (v106 < 0)
            {
              BOOL v23 = v102++ > 8;
              if (!v23) {
                continue;
              }
            }
            goto LABEL_254;
          }
        case 0x25u:
          if ((v8 & 7) != 0) {
            goto LABEL_257;
          }
          unsigned int v107 = 0;
          while (1)
          {
            uint64_t v108 = *v2;
            uint64_t v109 = *(void *)&a1[v108];
            unint64_t v110 = v109 + 1;
            if (v109 == -1 || v110 > *(void *)&a1[*v3]) {
              goto LABEL_252;
            }
            int v111 = *(char *)(*(void *)&a1[*v5] + v109);
            *(void *)&a1[v108] = v110;
            if (v111 < 0)
            {
              BOOL v23 = v107++ > 8;
              if (!v23) {
                continue;
              }
            }
            goto LABEL_254;
          }
        case 0x26u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOEVStateInfoIsValid(a1)) {
            goto LABEL_257;
          }
          goto LABEL_235;
        case 0x29u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOEVStepInfoIsValid(a1)) {
            goto LABEL_257;
          }
          goto LABEL_235;
        case 0x2Au:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOEVChargeInfoIsValid(a1)) {
            goto LABEL_257;
          }
          goto LABEL_235;
        case 0x2Bu:
          if ((v8 & 7) != 0) {
            goto LABEL_257;
          }
          unsigned int v112 = 0;
          while (1)
          {
            uint64_t v113 = *v2;
            uint64_t v114 = *(void *)&a1[v113];
            unint64_t v115 = v114 + 1;
            if (v114 == -1 || v115 > *(void *)&a1[*v3]) {
              goto LABEL_252;
            }
            int v116 = *(char *)(*(void *)&a1[*v5] + v114);
            *(void *)&a1[v113] = v115;
            if (v116 < 0)
            {
              BOOL v23 = v112++ > 8;
              if (!v23) {
                continue;
              }
            }
            goto LABEL_254;
          }
        case 0x2Cu:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOPBTransitArtworkIsValid(a1)) {
            goto LABEL_257;
          }
          goto LABEL_235;
        case 0x2Du:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOStopWaypointIsValid(a1)) {
            goto LABEL_257;
          }
          goto LABEL_235;
        case 0x2Eu:
          if ((v8 & 7) != 0) {
            goto LABEL_257;
          }
          unsigned int v117 = 0;
          while (1)
          {
            uint64_t v118 = *v2;
            uint64_t v119 = *(void *)&a1[v118];
            unint64_t v120 = v119 + 1;
            if (v119 == -1 || v120 > *(void *)&a1[*v3]) {
              goto LABEL_252;
            }
            int v121 = *(char *)(*(void *)&a1[*v5] + v119);
            *(void *)&a1[v118] = v120;
            if (v121 < 0)
            {
              BOOL v23 = v117++ > 8;
              if (!v23) {
                continue;
              }
            }
            goto LABEL_254;
          }
        case 0x2Fu:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEORoadDescriptionIsValid(a1)) {
            goto LABEL_257;
          }
LABEL_235:
          PBReaderRecallMark();
          continue;
        case 0x30u:
          if ((v8 & 7) != 0) {
            goto LABEL_257;
          }
          unsigned int v122 = 0;
          while (1)
          {
            uint64_t v123 = *v2;
            uint64_t v124 = *(void *)&a1[v123];
            unint64_t v125 = v124 + 1;
            if (v124 == -1 || v125 > *(void *)&a1[*v3]) {
              goto LABEL_252;
            }
            int v126 = *(char *)(*(void *)&a1[*v5] + v124);
            *(void *)&a1[v123] = v125;
            if (v126 < 0)
            {
              BOOL v23 = v122++ > 8;
              if (!v23) {
                continue;
              }
            }
            goto LABEL_254;
          }
        case 0x31u:
          if ((v8 & 7) != 0) {
            goto LABEL_257;
          }
          unsigned int v127 = 0;
          break;
        default:
LABEL_158:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_257:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        uint64_t v128 = *v2;
        uint64_t v129 = *(void *)&a1[v128];
        unint64_t v130 = v129 + 1;
        if (v129 == -1 || v130 > *(void *)&a1[*v3]) {
          break;
        }
        int v131 = *(char *)(*(void *)&a1[*v5] + v129);
        *(void *)&a1[v128] = v130;
        if (v131 < 0)
        {
          BOOL v23 = v127++ > 8;
          if (!v23) {
            continue;
          }
        }
        goto LABEL_254;
      }
LABEL_252:
      uint64_t v14 = *v4;
LABEL_253:
      a1[v14] = 1;
LABEL_254:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v132 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v132;
}

BOOL GEORouteLineStyleInfoIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_69;
          }
          unsigned int v17 = 0;
          while (1)
          {
            uint64_t v18 = *v2;
            uint64_t v19 = *(void *)&a1[v18];
            unint64_t v20 = v19 + 1;
            if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
              goto LABEL_61;
            }
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if (v21 < 0)
            {
              BOOL v22 = v17++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_66;
          }
        case 2u:
          if ((v8 & 7) != 0) {
            goto LABEL_69;
          }
          unsigned int v23 = 0;
          while (1)
          {
            uint64_t v24 = *v2;
            uint64_t v25 = *(void *)&a1[v24];
            unint64_t v26 = v25 + 1;
            if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
              goto LABEL_61;
            }
            int v27 = *(char *)(*(void *)&a1[*v5] + v25);
            *(void *)&a1[v24] = v26;
            if (v27 < 0)
            {
              BOOL v22 = v23++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_66;
          }
        case 3u:
          if ((v8 & 7) != 0) {
            goto LABEL_69;
          }
          unsigned int v28 = 0;
          while (1)
          {
            uint64_t v29 = *v2;
            uint64_t v30 = *(void *)&a1[v29];
            unint64_t v31 = v30 + 1;
            if (v30 == -1 || v31 > *(void *)&a1[*v3]) {
              goto LABEL_61;
            }
            int v32 = *(char *)(*(void *)&a1[*v5] + v30);
            *(void *)&a1[v29] = v31;
            if (v32 < 0)
            {
              BOOL v22 = v28++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_66;
          }
        case 4u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOStyleAttributesIsValid(a1)) {
            goto LABEL_69;
          }
          goto LABEL_65;
        case 5u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOLabelInfoIsValid(a1)) {
            goto LABEL_69;
          }
          goto LABEL_65;
        case 6u:
          if ((v8 & 7) != 0) {
            goto LABEL_69;
          }
          unsigned int v33 = 0;
          break;
        case 7u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOLaneChangeInfoIsValid(a1)) {
            goto LABEL_69;
          }
LABEL_65:
          PBReaderRecallMark();
          continue;
        default:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_69:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        uint64_t v34 = *v2;
        uint64_t v35 = *(void *)&a1[v34];
        unint64_t v36 = v35 + 1;
        if (v35 == -1 || v36 > *(void *)&a1[*v3]) {
          break;
        }
        int v37 = *(char *)(*(void *)&a1[*v5] + v35);
        *(void *)&a1[v34] = v36;
        if (v37 < 0)
        {
          BOOL v22 = v33++ > 8;
          if (!v22) {
            continue;
          }
        }
        goto LABEL_66;
      }
LABEL_61:
      a1[*v4] = 1;
LABEL_66:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v38 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v38;
}

BOOL GEOTrafficColorInfoIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOTrafficColorAndOffsetIsValid(a1))
        {
LABEL_27:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_27;
      }
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

BOOL GEORouteNameIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_41;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        goto LABEL_41;
      }
      unint64_t v17 = v8 >> 3;
      if ((v8 >> 3) == 3) {
        break;
      }
      if (v17 == 2)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_43;
        }
        unsigned int v18 = 0;
        while (1)
        {
          uint64_t v19 = *v2;
          uint64_t v20 = *(void *)&a1[v19];
          unint64_t v21 = v20 + 1;
          if (v20 == -1 || v21 > *(void *)&a1[*v3]) {
            break;
          }
          int v22 = *(char *)(*(void *)&a1[*v5] + v20);
          *(void *)&a1[v19] = v21;
          if (v22 < 0 && v18++ <= 8) {
            continue;
          }
          goto LABEL_40;
        }
        a1[*v4] = 1;
      }
      else
      {
        if (v17 == 1)
        {
          if (v15 != 2 || !PBReaderPlaceMark() || !GEONameInfoIsValid(a1)) {
            goto LABEL_43;
          }
LABEL_28:
          PBReaderRecallMark();
          goto LABEL_40;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_43;
        }
      }
LABEL_40:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_41;
      }
    }
    if (v15 != 2 || !PBReaderPlaceMark() || !GEORouteLegRangeIsValid(a1))
    {
LABEL_43:
      PBReaderRecallMark();
      return 0;
    }
    goto LABEL_28;
  }
LABEL_41:
  BOOL v24 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v24;
}

BOOL GEORouteInformationIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (!a1[*v4])
    {
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
        case 2u:
        case 3u:
        case 4u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOFormattedStringIsValid(a1)) {
            goto LABEL_27;
          }
          PBReaderRecallMark();
          goto LABEL_25;
        case 5u:
          if (v15 == 2) {
            goto LABEL_24;
          }
          goto LABEL_27;
        default:
LABEL_24:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_27:
            PBReaderRecallMark();
            return 0;
          }
LABEL_25:
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_26;
          }
          break;
      }
    }
  }
LABEL_26:
  BOOL v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

BOOL GEOStepGroupIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        BOOL v13 = v7++ >= 9;
        if (v13)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      if ((v8 >> 3) == 2)
      {
        if (v15 == 2)
        {
          if (!PBReaderPlaceMark()) {
            goto LABEL_47;
          }
LABEL_34:
          while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
          {
            unsigned int v22 = a1[*v4];
            if (a1[*v4]) {
              break;
            }
            while (1)
            {
              uint64_t v23 = *v2;
              uint64_t v24 = *(void *)&a1[v23];
              unint64_t v25 = v24 + 1;
              if (v24 == -1 || v25 > *(void *)&a1[*v3]) {
                break;
              }
              int v26 = *(char *)(*(void *)&a1[*v5] + v24);
              *(void *)&a1[v23] = v25;
              if (v26 < 0)
              {
                BOOL v13 = v22++ >= 9;
                if (!v13) {
                  continue;
                }
              }
              goto LABEL_34;
            }
            a1[*v4] = 1;
          }
          goto LABEL_23;
        }
        if ((v8 & 7) != 0) {
          goto LABEL_47;
        }
        while (1)
        {
          uint64_t v17 = *v2;
          uint64_t v18 = *(void *)&a1[v17];
          unint64_t v19 = v18 + 1;
          if (v18 == -1 || v19 > *(void *)&a1[*v3]) {
            break;
          }
          int v20 = *(char *)(*(void *)&a1[*v5] + v18);
          *(void *)&a1[v17] = v19;
          if (v20 < 0)
          {
            unsigned int v21 = v15++;
            if (v21 <= 8) {
              continue;
            }
          }
          goto LABEL_44;
        }
        a1[*v4] = 1;
      }
      else
      {
        if ((v8 >> 3) == 1)
        {
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOFormattedStringIsValid(a1))
          {
LABEL_47:
            PBReaderRecallMark();
            return 0;
          }
LABEL_23:
          PBReaderRecallMark();
          continue;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_47;
        }
      }
LABEL_44:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v27 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v27;
}

BOOL GEOUpdateLocationIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_39;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      if (v14 || (v8 & 7) == 4) {
        goto LABEL_39;
      }
      if ((v8 >> 3) == 2) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_41;
        }
        unsigned int v16 = 0;
        while (1)
        {
          uint64_t v17 = *v2;
          uint64_t v18 = *(void *)&a1[v17];
          unint64_t v19 = v18 + 1;
          if (v18 == -1 || v19 > *(void *)&a1[*v3]) {
            break;
          }
          int v20 = *(char *)(*(void *)&a1[*v5] + v18);
          *(void *)&a1[v17] = v19;
          if (v20 < 0)
          {
            BOOL v21 = v16++ > 8;
            if (!v21) {
              continue;
            }
          }
          goto LABEL_38;
        }
LABEL_36:
        a1[*v4] = 1;
        goto LABEL_38;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_41:
        BOOL v27 = 0;
        goto LABEL_40;
      }
LABEL_38:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_39;
      }
    }
    if ((v8 & 7) != 0) {
      goto LABEL_41;
    }
    unsigned int v22 = 0;
    while (1)
    {
      uint64_t v23 = *v2;
      uint64_t v24 = *(void *)&a1[v23];
      unint64_t v25 = v24 + 1;
      if (v24 == -1 || v25 > *(void *)&a1[*v3]) {
        goto LABEL_36;
      }
      int v26 = *(char *)(*(void *)&a1[*v5] + v24);
      *(void *)&a1[v23] = v25;
      if (v26 < 0)
      {
        BOOL v21 = v22++ > 8;
        if (!v21) {
          continue;
        }
      }
      goto LABEL_38;
    }
  }
LABEL_39:
  BOOL v27 = a1[*v4] == 0;
LABEL_40:
  PBReaderRecallMark();
  return v27;
}

void sub_189820268(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORouteIsDirty(uint64_t a1)
{
  uint64_t v94 = *MEMORY[0x1E4F143B8];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 496));
  uint64_t v2 = *(void *)(a1 + 564);
  if (v2 & 0xC4E72005B800000 | *(unsigned char *)(a1 + 572) & 3) {
    return 1;
  }
  if ((v2 & 0x20000000000000) != 0)
  {
    if (GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(a1 + 392))) {
      return 1;
    }
    uint64_t v2 = *(void *)(a1 + 564);
  }
  if ((v2 & 0x4000000000) != 0)
  {
    if (GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(a1 + 272))) {
      return 1;
    }
    uint64_t v2 = *(void *)(a1 + 564);
  }
  if ((v2 & 0x20000000) != 0)
  {
    if (GEOClickableAdvisoryIsDirty(*(os_unfair_lock_s **)(a1 + 200))) {
      return 1;
    }
    uint64_t v2 = *(void *)(a1 + 564);
  }
  if ((v2 & 0x4000002800600000) == 0)
  {
    if ((v2 & 0x80000000000000) != 0)
    {
      if (GEORouteInformationIsDirty(*(os_unfair_lock_s **)(a1 + 408))) {
        return 1;
      }
      uint64_t v2 = *(void *)(a1 + 564);
    }
    if ((v2 & 0x3110000400000000) == 0)
    {
      if ((v2 & 0x4000000) != 0)
      {
        if (GEOAlertNonRecommendedRouteTextIsDirty(*(os_unfair_lock_s **)(a1 + 176))) {
          return 1;
        }
        uint64_t v2 = *(void *)(a1 + 564);
      }
      if ((v2 & 0x1000000000) == 0)
      {
        if ((v2 & 0x10000000000) != 0)
        {
          if (GEOLaunchAndGoCardTextIsDirty(*(os_unfair_lock_s **)(a1 + 288))) {
            return 1;
          }
          uint64_t v2 = *(void *)(a1 + 564);
        }
        if ((v2 & 0x1008000000000) == 0)
        {
          if ((v2 & 0x200000000) != 0)
          {
            if (GEOElevationProfileIsDirty(*(os_unfair_lock_s **)(a1 + 232))) {
              return 1;
            }
            uint64_t v2 = *(void *)(a1 + 564);
          }
          if ((v2 & 0x8200800000000000) == 0)
          {
            if ((v2 & 0x80000000000) != 0)
            {
              if (GEOWaypointInfoIsDirty(*(os_unfair_lock_s **)(a1 + 312))) {
                return 1;
              }
              uint64_t v2 = *(void *)(a1 + 564);
            }
            if ((v2 & 0x100000000) != 0)
            {
              if (GEOWaypointInfoIsDirty(*(os_unfair_lock_s **)(a1 + 224))) {
                return 1;
              }
              uint64_t v2 = *(void *)(a1 + 564);
            }
            if ((v2 & 0x180000) == 0)
            {
              if ((v2 & 0x40000000000) != 0)
              {
                if (GEODrivingWalkingInstructionIsDirty(*(os_unfair_lock_s **)(a1 + 304))) {
                  return 1;
                }
                uint64_t v2 = *(void *)(a1 + 564);
              }
              if ((v2 & 0x80000000) == 0) {
                goto LABEL_43;
              }
              if ((GEODrivingWalkingInstructionIsDirty(*(os_unfair_lock_s **)(a1 + 216)) & 1) == 0)
              {
                uint64_t v2 = *(void *)(a1 + 564);
LABEL_43:
                if ((v2 & 0x400000000000000) != 0)
                {
                  long long v82 = 0u;
                  long long v83 = 0u;
                  long long v80 = 0u;
                  long long v81 = 0u;
                  id v5 = *(id *)(a1 + 432);
                  uint64_t v6 = [v5 countByEnumeratingWithState:&v80 objects:v93 count:16];
                  if (v6)
                  {
                    uint64_t v7 = v6;
                    uint64_t v8 = *(void *)v81;
LABEL_46:
                    uint64_t v9 = 0;
                    while (1)
                    {
                      if (*(void *)v81 != v8) {
                        objc_enumerationMutation(v5);
                      }
                      if (GEOStepIsDirty(*(os_unfair_lock_s **)(*((void *)&v80 + 1) + 8 * v9))) {
                        goto LABEL_144;
                      }
                      if (v7 == ++v9)
                      {
                        uint64_t v7 = [v5 countByEnumeratingWithState:&v80 objects:v93 count:16];
                        if (v7) {
                          goto LABEL_46;
                        }
                        break;
                      }
                    }
                  }

                  uint64_t v2 = *(void *)(a1 + 564);
                }
                if ((v2 & 0x40000000000000) != 0)
                {
                  long long v78 = 0u;
                  long long v79 = 0u;
                  long long v76 = 0u;
                  long long v77 = 0u;
                  id v5 = *(id *)(a1 + 400);
                  uint64_t v10 = [v5 countByEnumeratingWithState:&v76 objects:v92 count:16];
                  if (v10)
                  {
                    uint64_t v11 = v10;
                    uint64_t v12 = *(void *)v77;
LABEL_56:
                    uint64_t v13 = 0;
                    while (1)
                    {
                      if (*(void *)v77 != v12) {
                        objc_enumerationMutation(v5);
                      }
                      if ((GEORouteLineStyleInfoIsDirty(*(os_unfair_lock_s **)(*((void *)&v76 + 1)
                                                                                               + 8 * v13)) & 1) != 0)
                        goto LABEL_144;
                      if (v11 == ++v13)
                      {
                        uint64_t v11 = [v5 countByEnumeratingWithState:&v76 objects:v92 count:16];
                        if (v11) {
                          goto LABEL_56;
                        }
                        break;
                      }
                    }
                  }

                  uint64_t v2 = *(void *)(a1 + 564);
                }
                if ((v2 & 0x8000000000000) != 0)
                {
                  long long v74 = 0u;
                  long long v75 = 0u;
                  long long v72 = 0u;
                  long long v73 = 0u;
                  id v5 = *(id *)(a1 + 376);
                  uint64_t v14 = [v5 countByEnumeratingWithState:&v72 objects:v91 count:16];
                  if (v14)
                  {
                    uint64_t v15 = v14;
                    uint64_t v16 = *(void *)v73;
LABEL_66:
                    uint64_t v17 = 0;
                    while (1)
                    {
                      if (*(void *)v73 != v16) {
                        objc_enumerationMutation(v5);
                      }
                      if ((GEORouteLineStyleInfoIsDirty(*(os_unfair_lock_s **)(*((void *)&v72 + 1)
                                                                                               + 8 * v17)) & 1) != 0)
                        goto LABEL_144;
                      if (v15 == ++v17)
                      {
                        uint64_t v15 = [v5 countByEnumeratingWithState:&v72 objects:v91 count:16];
                        if (v15) {
                          goto LABEL_66;
                        }
                        break;
                      }
                    }
                  }

                  uint64_t v2 = *(void *)(a1 + 564);
                }
                if ((v2 & 0x4000000000000) != 0)
                {
                  long long v70 = 0u;
                  long long v71 = 0u;
                  long long v68 = 0u;
                  long long v69 = 0u;
                  id v5 = *(id *)(a1 + 368);
                  uint64_t v18 = [v5 countByEnumeratingWithState:&v68 objects:v90 count:16];
                  if (v18)
                  {
                    uint64_t v19 = v18;
                    uint64_t v20 = *(void *)v69;
LABEL_76:
                    uint64_t v21 = 0;
                    while (1)
                    {
                      if (*(void *)v69 != v20) {
                        objc_enumerationMutation(v5);
                      }
                      if (GEORouteNameIsDirty(*(os_unfair_lock_s **)(*((void *)&v68 + 1) + 8 * v21))) {
                        goto LABEL_144;
                      }
                      if (v19 == ++v21)
                      {
                        uint64_t v19 = [v5 countByEnumeratingWithState:&v68 objects:v90 count:16];
                        if (v19) {
                          goto LABEL_76;
                        }
                        break;
                      }
                    }
                  }

                  uint64_t v2 = *(void *)(a1 + 564);
                }
                if ((v2 & 0x800000000) != 0)
                {
                  long long v66 = 0u;
                  long long v67 = 0u;
                  long long v64 = 0u;
                  long long v65 = 0u;
                  id v5 = *(id *)(a1 + 248);
                  uint64_t v22 = [v5 countByEnumeratingWithState:&v64 objects:v89 count:16];
                  if (v22)
                  {
                    uint64_t v23 = v22;
                    uint64_t v24 = *(void *)v65;
LABEL_86:
                    uint64_t v25 = 0;
                    while (1)
                    {
                      if (*(void *)v65 != v24) {
                        objc_enumerationMutation(v5);
                      }
                      if ((GEOEnrouteNoticeIsDirty(*(os_unfair_lock_s **)(*((void *)&v64 + 1)
                                                                                          + 8 * v25)) & 1) != 0)
                        goto LABEL_144;
                      if (v23 == ++v25)
                      {
                        uint64_t v23 = [v5 countByEnumeratingWithState:&v64 objects:v89 count:16];
                        if (v23) {
                          goto LABEL_86;
                        }
                        break;
                      }
                    }
                  }

                  uint64_t v2 = *(void *)(a1 + 564);
                }
                if ((v2 & 0x10000000000000) != 0)
                {
                  long long v62 = 0u;
                  long long v63 = 0u;
                  long long v60 = 0u;
                  long long v61 = 0u;
                  id v5 = *(id *)(a1 + 384);
                  uint64_t v26 = [v5 countByEnumeratingWithState:&v60 objects:v88 count:16];
                  if (v26)
                  {
                    uint64_t v27 = v26;
                    uint64_t v28 = *(void *)v61;
LABEL_96:
                    uint64_t v29 = 0;
                    while (1)
                    {
                      if (*(void *)v61 != v28) {
                        objc_enumerationMutation(v5);
                      }
                      if ((GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(*((void *)&v60 + 1)
                                                                                            + 8 * v29)) & 1) != 0)
                        goto LABEL_144;
                      if (v27 == ++v29)
                      {
                        uint64_t v27 = [v5 countByEnumeratingWithState:&v60 objects:v88 count:16];
                        if (v27) {
                          goto LABEL_96;
                        }
                        break;
                      }
                    }
                  }

                  uint64_t v2 = *(void *)(a1 + 564);
                }
                if ((v2 & 0x100000000000000) != 0)
                {
                  long long v58 = 0u;
                  long long v59 = 0u;
                  long long v56 = 0u;
                  long long v57 = 0u;
                  id v5 = *(id *)(a1 + 416);
                  uint64_t v30 = [v5 countByEnumeratingWithState:&v56 objects:v87 count:16];
                  if (v30)
                  {
                    uint64_t v31 = v30;
                    uint64_t v32 = *(void *)v57;
LABEL_106:
                    uint64_t v33 = 0;
                    while (1)
                    {
                      if (*(void *)v57 != v32) {
                        objc_enumerationMutation(v5);
                      }
                      if ((GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(*((void *)&v56 + 1)
                                                                                            + 8 * v33)) & 1) != 0)
                        goto LABEL_144;
                      if (v31 == ++v33)
                      {
                        uint64_t v31 = [v5 countByEnumeratingWithState:&v56 objects:v87 count:16];
                        if (v31) {
                          goto LABEL_106;
                        }
                        break;
                      }
                    }
                  }

                  uint64_t v2 = *(void *)(a1 + 564);
                }
                if ((v2 & 0x400000000) != 0)
                {
                  long long v54 = 0u;
                  long long v55 = 0u;
                  long long v52 = 0u;
                  long long v53 = 0u;
                  id v5 = *(id *)(a1 + 240);
                  uint64_t v34 = [v5 countByEnumeratingWithState:&v52 objects:v86 count:16];
                  if (v34)
                  {
                    uint64_t v35 = v34;
                    uint64_t v36 = *(void *)v53;
LABEL_116:
                    uint64_t v37 = 0;
                    while (1)
                    {
                      if (*(void *)v53 != v36) {
                        objc_enumerationMutation(v5);
                      }
                      if ((GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(*((void *)&v52 + 1)
                                                                                            + 8 * v37)) & 1) != 0)
                        goto LABEL_144;
                      if (v35 == ++v37)
                      {
                        uint64_t v35 = [v5 countByEnumeratingWithState:&v52 objects:v86 count:16];
                        if (v35) {
                          goto LABEL_116;
                        }
                        break;
                      }
                    }
                  }

                  uint64_t v2 = *(void *)(a1 + 564);
                }
                if ((v2 & 0x1000000000) != 0)
                {
                  long long v50 = 0u;
                  long long v51 = 0u;
                  long long v48 = 0u;
                  long long v49 = 0u;
                  id v5 = *(id *)(a1 + 256);
                  uint64_t v38 = [v5 countByEnumeratingWithState:&v48 objects:v85 count:16];
                  if (v38)
                  {
                    uint64_t v39 = v38;
                    uint64_t v40 = *(void *)v49;
LABEL_126:
                    uint64_t v41 = 0;
                    while (1)
                    {
                      if (*(void *)v49 != v40) {
                        objc_enumerationMutation(v5);
                      }
                      if ((GEOGuidanceEventIsDirty(*(os_unfair_lock_s **)(*((void *)&v48 + 1)
                                                                                          + 8 * v41)) & 1) != 0)
                        goto LABEL_144;
                      if (v39 == ++v41)
                      {
                        uint64_t v39 = [v5 countByEnumeratingWithState:&v48 objects:v85 count:16];
                        if (v39) {
                          goto LABEL_126;
                        }
                        break;
                      }
                    }
                  }

                  uint64_t v2 = *(void *)(a1 + 564);
                }
                if ((v2 & 0x200000000000000) == 0) {
                  return 0;
                }
                long long v46 = 0u;
                long long v47 = 0u;
                long long v44 = 0u;
                long long v45 = 0u;
                id v5 = *(id *)(a1 + 424);
                uint64_t v3 = [v5 countByEnumeratingWithState:&v44 objects:v84 count:16];
                if (!v3)
                {
LABEL_145:

                  return v3;
                }
                uint64_t v42 = *(void *)v45;
LABEL_137:
                uint64_t v43 = 0;
                while (1)
                {
                  if (*(void *)v45 != v42) {
                    objc_enumerationMutation(v5);
                  }
                  if (GEOStepGroupIsDirty(*(os_unfair_lock_s **)(*((void *)&v44 + 1) + 8 * v43))) {
                    break;
                  }
                  if (v3 == ++v43)
                  {
                    uint64_t v3 = [v5 countByEnumeratingWithState:&v44 objects:v84 count:16];
                    if (v3) {
                      goto LABEL_137;
                    }
                    goto LABEL_145;
                  }
                }
LABEL_144:
                uint64_t v3 = 1;
                goto LABEL_145;
              }
            }
          }
        }
      }
    }
  }
  return 1;
}

os_unfair_lock_s *GEORouteIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    uint64_t v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEORouteIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 124);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_189823078(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189825670(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189826744(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORouteAnnotationReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  uint64_t v7 = v6;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  uint64_t v12 = 0;
  int v13 = ((*(unsigned __int8 *)(a1 + 60) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 4) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 2) & 1);
  while (2)
  {
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    uint64_t v16 = 1;
    switch(a3[v9])
    {
      case -4:
        ++v13;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v15 = v11;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v17 = v13 != 0;
        char v18 = v17 & ~(_BYTE)v12 | v10;
        unsigned __int8 v19 = v17 | v12;
        char v65 = v18;
        char v66 = v19 | v18;
        if ((v19 | v8)) {
          uint64_t v20 = 0;
        }
        else {
          uint64_t v20 = a3;
        }
        char v67 = (v20 == 0) | v19;
        BOOL v68 = v19;
        uint64_t v21 = (int *)MEMORY[0x1E4F940E8];
        uint64_t v22 = (int *)MEMORY[0x1E4F940C8];
        uint64_t v23 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v13;
LABEL_7:
        uint64_t v14 = v10;
LABEL_8:
        uint64_t v15 = v11;
        uint64_t v16 = v12;
LABEL_10:
        ++v9;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        uint64_t v12 = v16;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v21) >= *(void *)(v3 + *v7) || *(unsigned char *)(v3 + *v22)) {
      goto LABEL_83;
    }
    char v24 = 0;
    unsigned int v25 = 0;
    unint64_t v26 = 0;
    while (1)
    {
      uint64_t v27 = *v21;
      uint64_t v28 = *(void *)(v3 + v27);
      unint64_t v29 = v28 + 1;
      if (v28 == -1 || v29 > *(void *)(v3 + *v7)) {
        break;
      }
      char v30 = *(unsigned char *)(*(void *)(v3 + *v23) + v28);
      *(void *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0) {
        goto LABEL_25;
      }
      v24 += 7;
      BOOL v31 = v25++ >= 9;
      if (v31)
      {
        unint64_t v26 = 0;
        int v32 = *(unsigned __int8 *)(v3 + *v22);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v22) = 1;
LABEL_25:
    int v32 = *(unsigned __int8 *)(v3 + *v22);
    if (*(unsigned char *)(v3 + *v22)) {
      unint64_t v26 = 0;
    }
LABEL_27:
    if (v32 || (v26 & 7) == 4)
    {
LABEL_83:
      int v63 = 1;
      goto LABEL_84;
    }
    unint64_t v34 = v26 >> 3;
    BOOL v35 = v68;
    if ((v67 & 1) == 0)
    {
      uint64_t v36 = v20;
      do
      {
        int v38 = *v36++;
        int v37 = v38;
        BOOL v35 = v38 != 0;
        if (v38) {
          BOOL v39 = v37 == v34;
        }
        else {
          BOOL v39 = 1;
        }
      }
      while (!v39);
    }
    switch((int)v34)
    {
      case 1:
        if ((v8 & 1) == 0) {
          goto LABEL_68;
        }
        char v40 = 0;
        unsigned int v41 = 0;
        uint64_t v42 = 0;
        *(unsigned char *)(a1 + 60) |= 1u;
        while (1)
        {
          uint64_t v43 = *v21;
          uint64_t v44 = *(void *)(v3 + v43);
          unint64_t v45 = v44 + 1;
          if (v44 == -1 || v45 > *(void *)(v3 + *v7)) {
            break;
          }
          char v46 = *(unsigned char *)(*(void *)(v3 + *v23) + v44);
          *(void *)(v3 + v43) = v45;
          v42 |= (unint64_t)(v46 & 0x7F) << v40;
          if ((v46 & 0x80) == 0) {
            goto LABEL_71;
          }
          v40 += 7;
          BOOL v31 = v41++ >= 9;
          if (v31)
          {
            LODWORD(v42) = 0;
            goto LABEL_73;
          }
        }
        *(unsigned char *)(v3 + *v22) = 1;
LABEL_71:
        if (*(unsigned char *)(v3 + *v22)) {
          LODWORD(v42) = 0;
        }
LABEL_73:
        *(_DWORD *)(a1 + 52) = v42;
        goto LABEL_82;
      case 2:
        if (!v35) {
          goto LABEL_68;
        }
        if ((*(unsigned char *)(a1 + 60) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_103;
          }
          char v57 = 16 * *(unsigned char *)(a1 + 60);
          goto LABEL_78;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_103;
        }
        long long v50 = objc_alloc_init(GEOPBTransitArtwork);
        if (!GEOPBTransitArtworkReadAllFrom((uint64_t)v50, (void *)v3, v11 & 1)) {
          goto LABEL_102;
        }
        PBReaderRecallMark();
        uint64_t v51 = 24;
        goto LABEL_63;
      case 3:
        if (!v35) {
          goto LABEL_68;
        }
        if ((*(unsigned char *)(a1 + 60) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_103;
          }
          char v57 = 8 * *(unsigned char *)(a1 + 60);
LABEL_78:
          v9 += v57 >> 7;
LABEL_79:
          uint64_t v22 = (int *)MEMORY[0x1E4F940C8];
          uint64_t v7 = (int *)MEMORY[0x1E4F940E0];
LABEL_82:
          if (!(v66 & 1 | (v9 != 0))) {
            goto LABEL_83;
          }
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_103;
        }
        long long v50 = objc_alloc_init(GEOMiniCard);
        if (GEOMiniCardReadAllFrom((uint64_t)v50, (void *)v3, v11 & 1))
        {
          PBReaderRecallMark();
          uint64_t v51 = 32;
LABEL_63:
          long long v52 = *(void **)(a1 + v51);
          *(void *)(a1 + v51) = v50;

          --v9;
          goto LABEL_79;
        }
LABEL_102:

LABEL_103:
        int v63 = 0;
        uint64_t v22 = (int *)MEMORY[0x1E4F940C8];
LABEL_84:
        long long v64 = &OBJC_IVAR___GEOActiveTileGroup__textureChecksums;
        if (v65) {
LABEL_85:
        }
          *(unsigned char *)(a1 + v64[856]) |= 4u;
        if (v68 || (v63 & 1) == 0)
        {
          *(unsigned char *)(a1 + v64[856]) |= 8u;
          *(unsigned char *)(a1 + v64[856]) |= 0x10u;
          goto LABEL_96;
        }
        if (v20)
        {
          while (2)
          {
            while (1)
            {
              int v59 = *v20++;
              int v58 = v59;
              if (v59 == 2) {
                break;
              }
              if (v58 == 3)
              {
                char v60 = 16;
                goto LABEL_95;
              }
              if (!v58) {
                goto LABEL_96;
              }
            }
            char v60 = 8;
LABEL_95:
            *(unsigned char *)(a1 + v64[856]) |= v60;
            continue;
          }
        }
LABEL_96:
        if (v63) {
          unint64_t v3 = *(unsigned char *)(v3 + *v22) == 0;
        }
        else {
          unint64_t v3 = 0;
        }
        if (v68)
        {
          long long v61 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      case 4:
        if ((v8 & 1) == 0) {
          goto LABEL_68;
        }
        *(unsigned char *)(a1 + 60) |= 2u;
        uint64_t v53 = *v21;
        unint64_t v54 = *(void *)(v3 + v53);
        if (v54 <= 0xFFFFFFFFFFFFFFFBLL && v54 + 4 <= *(void *)(v3 + *v7))
        {
          int v55 = *(_DWORD *)(*(void *)(v3 + *v23) + v54);
          *(void *)(v3 + v53) = v54 + 4;
        }
        else
        {
          *(unsigned char *)(v3 + *v22) = 1;
          int v55 = 0;
        }
        *(_DWORD *)(a1 + 56) = v55;
        goto LABEL_82;
      default:
        if ((v65 & 1) == 0 || (*(unsigned char *)(a1 + 60) & 4) != 0)
        {
LABEL_68:
          char v56 = PBReaderSkipValueWithTag();
          uint64_t v7 = (int *)MEMORY[0x1E4F940E0];
          uint64_t v22 = (int *)MEMORY[0x1E4F940C8];
          if ((v56 & 1) == 0)
          {
            int v63 = 0;
            goto LABEL_84;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v47 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            long long v48 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v47;
          }
          int v49 = PBUnknownFieldAdd();
          uint64_t v22 = (int *)MEMORY[0x1E4F940C8];
          uint64_t v7 = (int *)MEMORY[0x1E4F940E0];
          if (!v49)
          {
            int v63 = 0;
            long long v64 = &OBJC_IVAR___GEOActiveTileGroup__textureChecksums;
            goto LABEL_85;
          }
        }
        goto LABEL_82;
    }
  }
}

void sub_189826FA0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898277DC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORouteAnnotationReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEORouteAnnotationReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEORouteAnnotationReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEORouteAnnotationReadAllFrom_initialTag;
  }
  unint64_t Specified = GEORouteAnnotationReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    [*(id *)(a1 + 24) readAll:1];
    [*(id *)(a1 + 32) readAll:1];
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_189827994(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORouteAnnotationReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEORouteAnnotationReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1898279F8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189827BE0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORouteAnnotationIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  char v2 = *(unsigned char *)(a1 + 60);
  if ((v2 & 0x20) != 0) {
    return 1;
  }
  if ((*(unsigned char *)(a1 + 60) & 8) != 0)
  {
    if (GEOPBTransitArtworkIsDirty(*(os_unfair_lock_s **)(a1 + 24))) {
      return 1;
    }
    char v2 = *(unsigned char *)(a1 + 60);
  }
  if ((v2 & 0x10) == 0) {
    return 0;
  }
  uint64_t v4 = *(os_unfair_lock_s **)(a1 + 32);

  return (uint64_t)GEOMiniCardIsDirty(v4);
}

os_unfair_lock_s *GEORouteAnnotationIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    uint64_t v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEORouteAnnotationIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 12);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_189827FE4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898283E0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189829064(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t GEORouteAttributesReadSpecified(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 176));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 172);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 168)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  unsigned int v12 = *(_DWORD *)(a1 + 216);
  uint32x4_t v13 = (uint32x4_t)vdupq_n_s32(v12);
  v14.i64[0] = 0x100000001;
  v14.i64[1] = 0x100000001;
  unsigned int v15 = vaddvq_s32(vaddq_s32((int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v13, (uint32x4_t)xmmword_18A633FB0), v14), (int32x4_t)(*(_OWORD *)&vshlq_u32(v13, (uint32x4_t)xmmword_18A633FA0) & __PAIR128__(0xFFFFFF01FFFFFF01, 0xFFFFFF01FFFFFF01))))+ ((v12 >> 23) & 1)+ ((v12 >> 21) & 1);
  while (2)
  {
    uint64_t v16 = 1;
    uint64_t v17 = 1;
    uint64_t v18 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v15;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v17 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v19 = v15 > 6;
        char v20 = v19 & ~(_BYTE)v11 | v9;
        char v21 = v19 | v11;
        uint64_t v22 = (int *)MEMORY[0x1E4F940E8];
        if (((v19 | v11) | v8)) {
          uint64_t v23 = 0;
        }
        else {
          uint64_t v23 = a3;
        }
        int v24 = 1;
        if (*(void *)(v3 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(v3 + *v6)) {
          goto LABEL_426;
        }
        char v246 = v21 | v20;
        unsigned int v25 = (int *)MEMORY[0x1E4F940C8];
        char v249 = (v23 == 0) | v21;
        unint64_t v26 = (int *)MEMORY[0x1E4F940B8];
        char v247 = v19 & ~(_BYTE)v11 | v9;
        char v248 = v19 | v11;
        break;
      default:
        ++v15;
LABEL_7:
        uint64_t v16 = v9;
LABEL_8:
        uint64_t v17 = v10;
        uint64_t v18 = v11;
LABEL_10:
        ++v7;
        uint64_t v9 = v16;
        uint64_t v10 = v17;
        uint64_t v11 = v18;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(unsigned char *)(v3 + *v25)) {
      goto LABEL_425;
    }
    char v27 = 0;
    unsigned int v28 = 0;
    unint64_t v29 = 0;
    while (1)
    {
      uint64_t v30 = *v22;
      uint64_t v31 = *(void *)(v3 + v30);
      unint64_t v32 = v31 + 1;
      if (v31 == -1 || v32 > *(void *)(v3 + *v6)) {
        break;
      }
      char v33 = *(unsigned char *)(*(void *)(v3 + *v26) + v31);
      *(void *)(v3 + v30) = v32;
      v29 |= (unint64_t)(v33 & 0x7F) << v27;
      if ((v33 & 0x80) == 0) {
        goto LABEL_25;
      }
      v27 += 7;
      BOOL v34 = v28++ >= 9;
      if (v34)
      {
        unint64_t v29 = 0;
        int v35 = *(unsigned __int8 *)(v3 + *v25);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v25) = 1;
LABEL_25:
    int v35 = *(unsigned __int8 *)(v3 + *v25);
    if (*(unsigned char *)(v3 + *v25)) {
      unint64_t v29 = 0;
    }
LABEL_27:
    int v36 = v29 & 7;
    if (v35 || v36 == 4)
    {
LABEL_425:
      int v24 = 1;
LABEL_426:
      if ((v20 & 1) == 0) {
        goto LABEL_428;
      }
      goto LABEL_427;
    }
    unint64_t v38 = v29 >> 3;
    BOOL v39 = v21;
    if ((v249 & 1) == 0)
    {
      char v40 = v23;
      do
      {
        int v42 = *v40++;
        int v41 = v42;
        BOOL v39 = v42 != 0;
        if (v42) {
          BOOL v43 = v41 == v38;
        }
        else {
          BOOL v43 = 1;
        }
      }
      while (!v43);
    }
    switch((int)v38)
    {
      case 1:
        if ((v8 & 1) == 0) {
          goto LABEL_300;
        }
        char v44 = 0;
        unsigned int v45 = 0;
        uint64_t v46 = 0;
        *(_DWORD *)(a1 + 216) |= 8u;
        while (1)
        {
          uint64_t v47 = *v22;
          uint64_t v48 = *(void *)(v3 + v47);
          unint64_t v49 = v48 + 1;
          if (v48 == -1 || v49 > *(void *)(v3 + *v6)) {
            break;
          }
          char v50 = *(unsigned char *)(*(void *)(v3 + *v26) + v48);
          *(void *)(v3 + v47) = v49;
          v46 |= (unint64_t)(v50 & 0x7F) << v44;
          if ((v50 & 0x80) == 0) {
            goto LABEL_304;
          }
          v44 += 7;
          BOOL v34 = v45++ >= 9;
          if (v34)
          {
            LODWORD(v46) = 0;
            goto LABEL_306;
          }
        }
        *(unsigned char *)(v3 + *v25) = 1;
LABEL_304:
        if (*(unsigned char *)(v3 + *v25)) {
          LODWORD(v46) = 0;
        }
LABEL_306:
        uint64_t v216 = 188;
        goto LABEL_359;
      case 2:
        if ((v8 & 1) == 0) {
          goto LABEL_300;
        }
        char v51 = 0;
        unsigned int v52 = 0;
        uint64_t v53 = 0;
        *(_DWORD *)(a1 + 216) |= 0x1000u;
        while (2)
        {
          uint64_t v54 = *v22;
          uint64_t v55 = *(void *)(v3 + v54);
          unint64_t v56 = v55 + 1;
          if (v55 == -1 || v56 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v25) = 1;
          }
          else
          {
            char v57 = *(unsigned char *)(*(void *)(v3 + *v26) + v55);
            *(void *)(v3 + v54) = v56;
            v53 |= (unint64_t)(v57 & 0x7F) << v51;
            if (v57 < 0)
            {
              v51 += 7;
              BOOL v34 = v52++ >= 9;
              if (v34)
              {
                uint64_t v53 = 0;
                goto LABEL_310;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v25)) {
          uint64_t v53 = 0;
        }
LABEL_310:
        BOOL v217 = v53 != 0;
        uint64_t v218 = 206;
        goto LABEL_384;
      case 3:
        if ((v8 & 1) == 0) {
          goto LABEL_300;
        }
        char v58 = 0;
        unsigned int v59 = 0;
        uint64_t v60 = 0;
        *(_DWORD *)(a1 + 216) |= 0x800u;
        while (2)
        {
          uint64_t v61 = *v22;
          uint64_t v62 = *(void *)(v3 + v61);
          unint64_t v63 = v62 + 1;
          if (v62 == -1 || v63 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v25) = 1;
          }
          else
          {
            char v64 = *(unsigned char *)(*(void *)(v3 + *v26) + v62);
            *(void *)(v3 + v61) = v63;
            v60 |= (unint64_t)(v64 & 0x7F) << v58;
            if (v64 < 0)
            {
              v58 += 7;
              BOOL v34 = v59++ >= 9;
              if (v34)
              {
                uint64_t v60 = 0;
                goto LABEL_314;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v25)) {
          uint64_t v60 = 0;
        }
LABEL_314:
        BOOL v217 = v60 != 0;
        uint64_t v218 = 205;
        goto LABEL_384;
      case 4:
        if ((v8 & 1) == 0) {
          goto LABEL_300;
        }
        char v65 = 0;
        unsigned int v66 = 0;
        uint64_t v67 = 0;
        *(_DWORD *)(a1 + 216) |= 0x8000u;
        while (2)
        {
          uint64_t v68 = *v22;
          uint64_t v69 = *(void *)(v3 + v68);
          unint64_t v70 = v69 + 1;
          if (v69 == -1 || v70 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v25) = 1;
          }
          else
          {
            char v71 = *(unsigned char *)(*(void *)(v3 + *v26) + v69);
            *(void *)(v3 + v68) = v70;
            v67 |= (unint64_t)(v71 & 0x7F) << v65;
            if (v71 < 0)
            {
              v65 += 7;
              BOOL v34 = v66++ >= 9;
              if (v34)
              {
                uint64_t v67 = 0;
                goto LABEL_318;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v25)) {
          uint64_t v67 = 0;
        }
LABEL_318:
        BOOL v217 = v67 != 0;
        uint64_t v218 = 209;
        goto LABEL_384;
      case 5:
        if ((v8 & 1) == 0) {
          goto LABEL_300;
        }
        char v72 = 0;
        unsigned int v73 = 0;
        uint64_t v74 = 0;
        *(_DWORD *)(a1 + 216) |= 0x100u;
        while (2)
        {
          uint64_t v75 = *v22;
          uint64_t v76 = *(void *)(v3 + v75);
          unint64_t v77 = v76 + 1;
          if (v76 == -1 || v77 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v25) = 1;
          }
          else
          {
            char v78 = *(unsigned char *)(*(void *)(v3 + *v26) + v76);
            *(void *)(v3 + v75) = v77;
            v74 |= (unint64_t)(v78 & 0x7F) << v72;
            if (v78 < 0)
            {
              v72 += 7;
              BOOL v34 = v73++ >= 9;
              if (v34)
              {
                uint64_t v74 = 0;
                goto LABEL_322;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v25)) {
          uint64_t v74 = 0;
        }
LABEL_322:
        BOOL v217 = v74 != 0;
        uint64_t v218 = 202;
        goto LABEL_384;
      case 6:
        if ((v8 & 1) == 0) {
          goto LABEL_300;
        }
        char v79 = 0;
        unsigned int v80 = 0;
        uint64_t v81 = 0;
        *(_DWORD *)(a1 + 216) |= 0x400u;
        while (2)
        {
          uint64_t v82 = *v22;
          uint64_t v83 = *(void *)(v3 + v82);
          unint64_t v84 = v83 + 1;
          if (v83 == -1 || v84 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v25) = 1;
          }
          else
          {
            char v85 = *(unsigned char *)(*(void *)(v3 + *v26) + v83);
            *(void *)(v3 + v82) = v84;
            v81 |= (unint64_t)(v85 & 0x7F) << v79;
            if (v85 < 0)
            {
              v79 += 7;
              BOOL v34 = v80++ >= 9;
              if (v34)
              {
                uint64_t v81 = 0;
                goto LABEL_326;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v25)) {
          uint64_t v81 = 0;
        }
LABEL_326:
        BOOL v217 = v81 != 0;
        uint64_t v218 = 204;
        goto LABEL_384;
      case 7:
        if ((v8 & 1) == 0) {
          goto LABEL_300;
        }
        char v86 = 0;
        unsigned int v87 = 0;
        uint64_t v46 = 0;
        *(_DWORD *)(a1 + 216) |= 2u;
        while (2)
        {
          uint64_t v88 = *v22;
          uint64_t v89 = *(void *)(v3 + v88);
          unint64_t v90 = v89 + 1;
          if (v89 == -1 || v90 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v25) = 1;
          }
          else
          {
            char v91 = *(unsigned char *)(*(void *)(v3 + *v26) + v89);
            *(void *)(v3 + v88) = v90;
            v46 |= (unint64_t)(v91 & 0x7F) << v86;
            if (v91 < 0)
            {
              v86 += 7;
              BOOL v34 = v87++ >= 9;
              if (v34)
              {
                LODWORD(v46) = 0;
                goto LABEL_330;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v25)) {
          LODWORD(v46) = 0;
        }
LABEL_330:
        uint64_t v216 = 180;
        goto LABEL_359;
      case 8:
        if ((v8 & 1) == 0) {
          goto LABEL_300;
        }
        char v92 = 0;
        unsigned int v93 = 0;
        uint64_t v46 = 0;
        *(_DWORD *)(a1 + 216) |= 0x10u;
        while (2)
        {
          uint64_t v94 = *v22;
          uint64_t v95 = *(void *)(v3 + v94);
          unint64_t v96 = v95 + 1;
          if (v95 == -1 || v96 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v25) = 1;
          }
          else
          {
            char v97 = *(unsigned char *)(*(void *)(v3 + *v26) + v95);
            *(void *)(v3 + v94) = v96;
            v46 |= (unint64_t)(v97 & 0x7F) << v92;
            if (v97 < 0)
            {
              v92 += 7;
              BOOL v34 = v93++ >= 9;
              if (v34)
              {
                LODWORD(v46) = 0;
                goto LABEL_334;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v25)) {
          LODWORD(v46) = 0;
        }
LABEL_334:
        uint64_t v216 = 192;
        goto LABEL_359;
      case 9:
        if (!v39) {
          goto LABEL_300;
        }
        if ((*(unsigned char *)(a1 + 219) & 0x10) == 0)
        {
          uint64_t v98 = PBReaderReadString();
          uint64_t v99 = *(void **)(a1 + 144);
          *(void *)(a1 + 144) = v98;
          goto LABEL_252;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_455;
        }
        int v219 = (8 * *(_DWORD *)(a1 + 216)) >> 31;
        goto LABEL_397;
      case 10:
        if ((v8 & 1) == 0) {
          goto LABEL_300;
        }
        char v100 = 0;
        unsigned int v101 = 0;
        uint64_t v102 = 0;
        *(_DWORD *)(a1 + 216) |= 0x2000u;
        while (2)
        {
          uint64_t v103 = *v22;
          uint64_t v104 = *(void *)(v3 + v103);
          unint64_t v105 = v104 + 1;
          if (v104 == -1 || v105 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v25) = 1;
          }
          else
          {
            char v106 = *(unsigned char *)(*(void *)(v3 + *v26) + v104);
            *(void *)(v3 + v103) = v105;
            v102 |= (unint64_t)(v106 & 0x7F) << v100;
            if (v106 < 0)
            {
              v100 += 7;
              BOOL v34 = v101++ >= 9;
              if (v34)
              {
                uint64_t v102 = 0;
                goto LABEL_338;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v25)) {
          uint64_t v102 = 0;
        }
LABEL_338:
        BOOL v217 = v102 != 0;
        uint64_t v218 = 207;
        goto LABEL_384;
      case 11:
        if ((v8 & 1) == 0)
        {
          char v214 = PBReaderSkipValueWithTag();
          unsigned int v25 = (int *)MEMORY[0x1E4F940C8];
          unint64_t v26 = (int *)MEMORY[0x1E4F940B8];
          if ((v214 & 1) == 0) {
            goto LABEL_455;
          }
          goto LABEL_423;
        }
        if (!PBReaderPlaceMark() || (GEOTimepointReadAllFrom(a1 + 96, v3) & 1) == 0) {
          goto LABEL_455;
        }
        PBReaderRecallMark();
        *(_DWORD *)(a1 + 216) |= 1u;
        goto LABEL_421;
      case 12:
        if ((v8 & 1) == 0) {
          goto LABEL_300;
        }
        char v107 = 0;
        unsigned int v108 = 0;
        uint64_t v109 = 0;
        *(_DWORD *)(a1 + 216) |= 0x200u;
        while (2)
        {
          uint64_t v110 = *v22;
          uint64_t v111 = *(void *)(v3 + v110);
          unint64_t v112 = v111 + 1;
          if (v111 == -1 || v112 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v25) = 1;
          }
          else
          {
            char v113 = *(unsigned char *)(*(void *)(v3 + *v26) + v111);
            *(void *)(v3 + v110) = v112;
            v109 |= (unint64_t)(v113 & 0x7F) << v107;
            if (v113 < 0)
            {
              v107 += 7;
              BOOL v34 = v108++ >= 9;
              if (v34)
              {
                uint64_t v109 = 0;
                goto LABEL_342;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v25)) {
          uint64_t v109 = 0;
        }
LABEL_342:
        BOOL v217 = v109 != 0;
        uint64_t v218 = 203;
        goto LABEL_384;
      case 14:
        if ((v8 & 1) == 0) {
          goto LABEL_300;
        }
        char v117 = 0;
        unsigned int v118 = 0;
        uint64_t v119 = 0;
        *(_DWORD *)(a1 + 216) |= 0x4000u;
        while (2)
        {
          uint64_t v120 = *v22;
          uint64_t v121 = *(void *)(v3 + v120);
          unint64_t v122 = v121 + 1;
          if (v121 == -1 || v122 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v25) = 1;
          }
          else
          {
            char v123 = *(unsigned char *)(*(void *)(v3 + *v26) + v121);
            *(void *)(v3 + v120) = v122;
            v119 |= (unint64_t)(v123 & 0x7F) << v117;
            if (v123 < 0)
            {
              v117 += 7;
              BOOL v34 = v118++ >= 9;
              if (v34)
              {
                uint64_t v119 = 0;
                goto LABEL_346;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v25)) {
          uint64_t v119 = 0;
        }
LABEL_346:
        BOOL v217 = v119 != 0;
        uint64_t v218 = 208;
        goto LABEL_384;
      case 15:
        if ((v8 & 1) == 0) {
          goto LABEL_300;
        }
        char v124 = 0;
        unsigned int v125 = 0;
        uint64_t v46 = 0;
        *(_DWORD *)(a1 + 216) |= 0x20u;
        while (2)
        {
          uint64_t v126 = *v22;
          uint64_t v127 = *(void *)(v3 + v126);
          unint64_t v128 = v127 + 1;
          if (v127 == -1 || v128 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v25) = 1;
          }
          else
          {
            char v129 = *(unsigned char *)(*(void *)(v3 + *v26) + v127);
            *(void *)(v3 + v126) = v128;
            v46 |= (unint64_t)(v129 & 0x7F) << v124;
            if (v129 < 0)
            {
              v124 += 7;
              BOOL v34 = v125++ >= 9;
              if (v34)
              {
                LODWORD(v46) = 0;
                goto LABEL_350;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v25)) {
          LODWORD(v46) = 0;
        }
LABEL_350:
        uint64_t v216 = 196;
        goto LABEL_359;
      case 16:
        if (!v39 || (*(unsigned char *)(a1 + 218) & 0x40) != 0) {
          goto LABEL_300;
        }
        if (v36 != 2)
        {
          char v220 = 0;
          unsigned int v221 = 0;
          uint64_t v222 = 0;
          while (1)
          {
            uint64_t v223 = *v22;
            uint64_t v224 = *(void *)(v3 + v223);
            unint64_t v225 = v224 + 1;
            if (v224 == -1 || v225 > *(void *)(v3 + *v6)) {
              goto LABEL_419;
            }
            char v226 = *(unsigned char *)(*(void *)(v3 + *v26) + v224);
            *(void *)(v3 + v223) = v225;
            v222 |= (unint64_t)(v226 & 0x7F) << v220;
            if (v226 < 0)
            {
              v220 += 7;
              BOOL v34 = v221++ >= 9;
              if (!v34) {
                continue;
              }
            }
            goto LABEL_420;
          }
        }
        if (!PBReaderPlaceMark()) {
          goto LABEL_455;
        }
        while (1)
        {
          unint64_t v130 = (int *)MEMORY[0x1E4F940C8];
          if (*(void *)(v3 + *v22) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + (int)*MEMORY[0x1E4F940C8])) {
            goto LABEL_302;
          }
          char v131 = 0;
          unsigned int v132 = 0;
          uint64_t v133 = 0;
          uint64_t v134 = (int *)MEMORY[0x1E4F940B8];
          while (1)
          {
            uint64_t v135 = *v22;
            uint64_t v136 = *(void *)(v3 + v135);
            unint64_t v137 = v136 + 1;
            if (v136 == -1 || v137 > *(void *)(v3 + *v6)) {
              break;
            }
            char v138 = *(unsigned char *)(*(void *)(v3 + *v134) + v136);
            *(void *)(v3 + v135) = v137;
            v133 |= (unint64_t)(v138 & 0x7F) << v131;
            if (v138 < 0)
            {
              v131 += 7;
              BOOL v34 = v132++ >= 9;
              if (!v34) {
                continue;
              }
            }
            goto LABEL_162;
          }
          *(unsigned char *)(v3 + *v130) = 1;
LABEL_162:
          PBRepeatedInt32Add();
        }
      case 17:
        if (!v39) {
          goto LABEL_300;
        }
        if ((*(unsigned char *)(a1 + 219) & 2) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_455;
          }
          int v219 = (int)(*(_DWORD *)(a1 + 216) << 6) >> 31;
          goto LABEL_397;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_455;
        }
        uint64_t v139 = objc_alloc_init(GEOAutomobileOptions);
        if (!GEOAutomobileOptionsReadAllFrom((uint64_t)v139, (void *)v3, v10 & 1)) {
          goto LABEL_454;
        }
        PBReaderRecallMark();
        uint64_t v140 = 120;
        goto LABEL_251;
      case 18:
        if (!v39) {
          goto LABEL_300;
        }
        if ((*(unsigned char *)(a1 + 219) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_455;
          }
          int v219 = (4 * *(_DWORD *)(a1 + 216)) >> 31;
          goto LABEL_397;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_455;
        }
        uint64_t v139 = objc_alloc_init(GEOTransitOptions);
        if (!GEOTransitOptionsReadAllFrom((uint64_t)v139, (void *)v3, v10 & 1)) {
          goto LABEL_454;
        }
        PBReaderRecallMark();
        uint64_t v140 = 152;
        goto LABEL_251;
      case 19:
        if (!v39) {
          goto LABEL_300;
        }
        if ((*(unsigned char *)(a1 + 219) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_455;
          }
          int v219 = (2 * *(_DWORD *)(a1 + 216)) >> 31;
          goto LABEL_397;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_455;
        }
        uint64_t v139 = objc_alloc_init(GEOWalkingOptions);
        if (!GEOWalkingOptionsReadAllFrom((uint64_t)v139, (void *)v3, v10 & 1)) {
          goto LABEL_454;
        }
        PBReaderRecallMark();
        uint64_t v140 = 160;
        goto LABEL_251;
      case 20:
        if (!v39 || (*(unsigned char *)(a1 + 219) & 1) != 0) {
          goto LABEL_300;
        }
        if (v36 != 2)
        {
          char v227 = 0;
          unsigned int v228 = 0;
          uint64_t v229 = 0;
          while (1)
          {
            uint64_t v230 = *v22;
            uint64_t v231 = *(void *)(v3 + v230);
            unint64_t v232 = v231 + 1;
            if (v231 == -1 || v232 > *(void *)(v3 + *v6)) {
              goto LABEL_419;
            }
            char v233 = *(unsigned char *)(*(void *)(v3 + *v26) + v231);
            *(void *)(v3 + v230) = v232;
            v229 |= (unint64_t)(v233 & 0x7F) << v227;
            if (v233 < 0)
            {
              v227 += 7;
              BOOL v34 = v228++ >= 9;
              if (!v34) {
                continue;
              }
            }
            goto LABEL_420;
          }
        }
        if (!PBReaderPlaceMark()) {
          goto LABEL_455;
        }
        while (1)
        {
          unint64_t v141 = (int *)MEMORY[0x1E4F940C8];
          if (*(void *)(v3 + *v22) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + (int)*MEMORY[0x1E4F940C8])) {
            goto LABEL_302;
          }
          char v142 = 0;
          unsigned int v143 = 0;
          uint64_t v144 = 0;
          uint64_t v145 = (int *)MEMORY[0x1E4F940B8];
          while (1)
          {
            uint64_t v146 = *v22;
            uint64_t v147 = *(void *)(v3 + v146);
            unint64_t v148 = v147 + 1;
            if (v147 == -1 || v148 > *(void *)(v3 + *v6)) {
              break;
            }
            char v149 = *(unsigned char *)(*(void *)(v3 + *v145) + v147);
            *(void *)(v3 + v146) = v148;
            v144 |= (unint64_t)(v149 & 0x7F) << v142;
            if (v149 < 0)
            {
              v142 += 7;
              BOOL v34 = v143++ >= 9;
              if (!v34) {
                continue;
              }
            }
            goto LABEL_192;
          }
          *(unsigned char *)(v3 + *v141) = 1;
LABEL_192:
          PBRepeatedInt32Add();
        }
      case 21:
        if ((v8 & 1) == 0) {
          goto LABEL_300;
        }
        char v150 = 0;
        unsigned int v151 = 0;
        uint64_t v152 = 0;
        *(_DWORD *)(a1 + 216) |= 0x100000u;
        while (2)
        {
          uint64_t v153 = *v22;
          uint64_t v154 = *(void *)(v3 + v153);
          unint64_t v155 = v154 + 1;
          if (v154 == -1 || v155 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v25) = 1;
          }
          else
          {
            char v156 = *(unsigned char *)(*(void *)(v3 + *v26) + v154);
            *(void *)(v3 + v153) = v155;
            v152 |= (unint64_t)(v156 & 0x7F) << v150;
            if (v156 < 0)
            {
              v150 += 7;
              BOOL v34 = v151++ >= 9;
              if (v34)
              {
                uint64_t v152 = 0;
                goto LABEL_354;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v25)) {
          uint64_t v152 = 0;
        }
LABEL_354:
        BOOL v217 = v152 != 0;
        uint64_t v218 = 214;
        goto LABEL_384;
      case 30:
        if (!v39) {
          goto LABEL_300;
        }
        if ((*(unsigned char *)(a1 + 219) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_455;
          }
          int v219 = (16 * *(_DWORD *)(a1 + 216)) >> 31;
          goto LABEL_397;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_455;
        }
        uint64_t v139 = objc_alloc_init(GEOWaypointNameProperties);
        if (!GEOWaypointNamePropertiesReadAllFrom((uint64_t)v139, (void *)v3)) {
          goto LABEL_454;
        }
        PBReaderRecallMark();
        uint64_t v140 = 136;
        goto LABEL_251;
      case 31:
        if ((v8 & 1) == 0) {
          goto LABEL_300;
        }
        char v157 = 0;
        unsigned int v158 = 0;
        uint64_t v46 = 0;
        *(_DWORD *)(a1 + 216) |= 4u;
        while (2)
        {
          uint64_t v159 = *v22;
          uint64_t v160 = *(void *)(v3 + v159);
          unint64_t v161 = v160 + 1;
          if (v160 == -1 || v161 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v25) = 1;
          }
          else
          {
            char v162 = *(unsigned char *)(*(void *)(v3 + *v26) + v160);
            *(void *)(v3 + v159) = v161;
            v46 |= (unint64_t)(v162 & 0x7F) << v157;
            if (v162 < 0)
            {
              v157 += 7;
              BOOL v34 = v158++ >= 9;
              if (v34)
              {
                LODWORD(v46) = 0;
                goto LABEL_358;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v25)) {
          LODWORD(v46) = 0;
        }
LABEL_358:
        uint64_t v216 = 184;
LABEL_359:
        *(_DWORD *)(a1 + v216) = v46;
        goto LABEL_423;
      case 32:
        if ((v8 & 1) == 0) {
          goto LABEL_300;
        }
        char v163 = 0;
        unsigned int v164 = 0;
        uint64_t v165 = 0;
        *(_DWORD *)(a1 + 216) |= 0x20000u;
        while (2)
        {
          uint64_t v166 = *v22;
          uint64_t v167 = *(void *)(v3 + v166);
          unint64_t v168 = v167 + 1;
          if (v167 == -1 || v168 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v25) = 1;
          }
          else
          {
            char v169 = *(unsigned char *)(*(void *)(v3 + *v26) + v167);
            *(void *)(v3 + v166) = v168;
            v165 |= (unint64_t)(v169 & 0x7F) << v163;
            if (v169 < 0)
            {
              v163 += 7;
              BOOL v34 = v164++ >= 9;
              if (v34)
              {
                uint64_t v165 = 0;
                goto LABEL_363;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v25)) {
          uint64_t v165 = 0;
        }
LABEL_363:
        BOOL v217 = v165 != 0;
        uint64_t v218 = 211;
        goto LABEL_384;
      case 33:
        if ((v8 & 1) == 0) {
          goto LABEL_300;
        }
        char v170 = 0;
        unsigned int v171 = 0;
        uint64_t v172 = 0;
        *(_DWORD *)(a1 + 216) |= 0x80u;
        while (2)
        {
          uint64_t v173 = *v22;
          uint64_t v174 = *(void *)(v3 + v173);
          unint64_t v175 = v174 + 1;
          if (v174 == -1 || v175 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v25) = 1;
          }
          else
          {
            char v176 = *(unsigned char *)(*(void *)(v3 + *v26) + v174);
            *(void *)(v3 + v173) = v175;
            v172 |= (unint64_t)(v176 & 0x7F) << v170;
            if (v176 < 0)
            {
              v170 += 7;
              BOOL v34 = v171++ >= 9;
              if (v34)
              {
                uint64_t v172 = 0;
                goto LABEL_367;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v25)) {
          uint64_t v172 = 0;
        }
LABEL_367:
        BOOL v217 = v172 != 0;
        uint64_t v218 = 201;
        goto LABEL_384;
      case 34:
        if ((v8 & 1) == 0) {
          goto LABEL_300;
        }
        char v177 = 0;
        unsigned int v178 = 0;
        uint64_t v179 = 0;
        *(_DWORD *)(a1 + 216) |= 0x40u;
        while (2)
        {
          uint64_t v180 = *v22;
          uint64_t v181 = *(void *)(v3 + v180);
          unint64_t v182 = v181 + 1;
          if (v181 == -1 || v182 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v25) = 1;
          }
          else
          {
            char v183 = *(unsigned char *)(*(void *)(v3 + *v26) + v181);
            *(void *)(v3 + v180) = v182;
            v179 |= (unint64_t)(v183 & 0x7F) << v177;
            if (v183 < 0)
            {
              v177 += 7;
              BOOL v34 = v178++ >= 9;
              if (v34)
              {
                uint64_t v179 = 0;
                goto LABEL_371;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v25)) {
          uint64_t v179 = 0;
        }
LABEL_371:
        BOOL v217 = v179 != 0;
        uint64_t v218 = 200;
        goto LABEL_384;
      case 35:
        if ((v8 & 1) == 0) {
          goto LABEL_300;
        }
        char v184 = 0;
        unsigned int v185 = 0;
        uint64_t v186 = 0;
        *(_DWORD *)(a1 + 216) |= 0x40000u;
        while (2)
        {
          uint64_t v187 = *v22;
          uint64_t v188 = *(void *)(v3 + v187);
          unint64_t v189 = v188 + 1;
          if (v188 == -1 || v189 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v25) = 1;
          }
          else
          {
            char v190 = *(unsigned char *)(*(void *)(v3 + *v26) + v188);
            *(void *)(v3 + v187) = v189;
            v186 |= (unint64_t)(v190 & 0x7F) << v184;
            if (v190 < 0)
            {
              v184 += 7;
              BOOL v34 = v185++ >= 9;
              if (v34)
              {
                uint64_t v186 = 0;
                goto LABEL_375;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v25)) {
          uint64_t v186 = 0;
        }
LABEL_375:
        BOOL v217 = v186 != 0;
        uint64_t v218 = 212;
        goto LABEL_384;
      case 36:
        if (!v39) {
          goto LABEL_300;
        }
        if ((*(unsigned char *)(a1 + 219) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_455;
          }
          int v219 = (32 * *(_DWORD *)(a1 + 216)) >> 31;
LABEL_397:
          v7 += v219;
LABEL_421:
          unsigned int v25 = (int *)MEMORY[0x1E4F940C8];
LABEL_422:
          unint64_t v26 = (int *)MEMORY[0x1E4F940B8];
          goto LABEL_423;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_455;
        }
        uint64_t v139 = objc_alloc_init(GEOCyclingOptions);
        if (GEOCyclingOptionsReadAllFrom((uint64_t)v139, (void *)v3, v10 & 1))
        {
          PBReaderRecallMark();
          uint64_t v140 = 128;
LABEL_251:
          uint64_t v99 = *(void **)(a1 + v140);
          *(void *)(a1 + v140) = v139;
LABEL_252:

          --v7;
          goto LABEL_421;
        }
LABEL_454:

LABEL_455:
        int v24 = 0;
LABEL_456:
        char v21 = v248;
        if (v247) {
          goto LABEL_427;
        }
LABEL_428:
        if (v21 & 1 | ((v24 & 1) == 0))
        {
          *(_DWORD *)(a1 + 216) |= 0x10000000u;
          *(_DWORD *)(a1 + 216) |= 0x400000u;
          *(_DWORD *)(a1 + 216) |= 0x2000000u;
          *(_DWORD *)(a1 + 216) |= 0x4000000u;
          *(_DWORD *)(a1 + 216) |= 0x20000000u;
          *(_DWORD *)(a1 + 216) |= 0x40000000u;
          *(_DWORD *)(a1 + 216) |= 0x1000000u;
          *(_DWORD *)(a1 + 216) |= 0x8000000u;
          *(_DWORD *)(a1 + 216) |= 0x800000u;
          goto LABEL_447;
        }
        if (v23)
        {
          while (2)
          {
            while (1)
            {
              int v242 = *v23++;
              int v241 = v242;
              if (v242 > 35) {
                break;
              }
              switch(v241)
              {
                case 16:
                  int v243 = 0x400000;
                  goto LABEL_445;
                case 17:
                  int v243 = 0x2000000;
                  goto LABEL_445;
                case 18:
                  int v243 = 0x20000000;
                  goto LABEL_445;
                case 19:
                  int v243 = 0x40000000;
                  goto LABEL_445;
                case 20:
                  int v243 = 0x1000000;
                  goto LABEL_445;
                case 21:
                case 22:
                case 23:
                case 24:
                case 25:
                case 26:
                case 27:
                case 28:
                case 29:
                  continue;
                case 30:
                  int v243 = 0x8000000;
                  goto LABEL_445;
                default:
                  if (v241 == 9)
                  {
                    int v243 = 0x10000000;
LABEL_445:
                    *(_DWORD *)(a1 + 216) |= v243;
                    continue;
                  }
                  if (!v241) {
                    goto LABEL_447;
                  }
                  break;
              }
            }
            if (v241 == 36)
            {
              int v243 = 0x4000000;
            }
            else
            {
              if (v241 != 38) {
                continue;
              }
              int v243 = 0x800000;
            }
            goto LABEL_445;
          }
        }
LABEL_447:
        if (v24)
        {
          uint64_t v3 = *(unsigned char *)(v3 + (int)*MEMORY[0x1E4F940C8]) == 0;
          if ((v21 & 1) == 0) {
            return v3;
          }
LABEL_451:
          unint64_t v244 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        else
        {
          uint64_t v3 = 0;
          if (v21) {
            goto LABEL_451;
          }
        }
        return v3;
      case 37:
        if ((v8 & 1) == 0) {
          goto LABEL_300;
        }
        char v191 = 0;
        unsigned int v192 = 0;
        uint64_t v193 = 0;
        *(_DWORD *)(a1 + 216) |= 0x80000u;
        while (2)
        {
          uint64_t v194 = *v22;
          uint64_t v195 = *(void *)(v3 + v194);
          unint64_t v196 = v195 + 1;
          if (v195 == -1 || v196 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v25) = 1;
          }
          else
          {
            char v197 = *(unsigned char *)(*(void *)(v3 + *v26) + v195);
            *(void *)(v3 + v194) = v196;
            v193 |= (unint64_t)(v197 & 0x7F) << v191;
            if (v197 < 0)
            {
              v191 += 7;
              BOOL v34 = v192++ >= 9;
              if (v34)
              {
                uint64_t v193 = 0;
                goto LABEL_379;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v25)) {
          uint64_t v193 = 0;
        }
LABEL_379:
        BOOL v217 = v193 != 0;
        uint64_t v218 = 213;
        goto LABEL_384;
      case 38:
        if (!v39 || (*(unsigned char *)(a1 + 218) & 0x80) != 0) {
          goto LABEL_300;
        }
        if (v36 != 2)
        {
          char v234 = 0;
          unsigned int v235 = 0;
          uint64_t v236 = 0;
          while (1)
          {
            uint64_t v237 = *v22;
            uint64_t v238 = *(void *)(v3 + v237);
            unint64_t v239 = v238 + 1;
            if (v238 == -1 || v239 > *(void *)(v3 + *v6)) {
              break;
            }
            char v240 = *(unsigned char *)(*(void *)(v3 + *v26) + v238);
            *(void *)(v3 + v237) = v239;
            v236 |= (unint64_t)(v240 & 0x7F) << v234;
            if (v240 < 0)
            {
              v234 += 7;
              BOOL v34 = v235++ >= 9;
              if (!v34) {
                continue;
              }
            }
            goto LABEL_420;
          }
LABEL_419:
          *(unsigned char *)(v3 + *v25) = 1;
LABEL_420:
          PBRepeatedInt32Add();
          goto LABEL_421;
        }
        if (!PBReaderPlaceMark()) {
          goto LABEL_455;
        }
        while (1)
        {
          unint64_t v198 = (int *)MEMORY[0x1E4F940C8];
          if (*(void *)(v3 + *v22) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + (int)*MEMORY[0x1E4F940C8])) {
            break;
          }
          char v199 = 0;
          unsigned int v200 = 0;
          uint64_t v201 = 0;
          char v202 = (int *)MEMORY[0x1E4F940B8];
          while (1)
          {
            uint64_t v203 = *v22;
            uint64_t v204 = *(void *)(v3 + v203);
            unint64_t v205 = v204 + 1;
            if (v204 == -1 || v205 > *(void *)(v3 + *v6)) {
              break;
            }
            char v206 = *(unsigned char *)(*(void *)(v3 + *v202) + v204);
            *(void *)(v3 + v203) = v205;
            v201 |= (unint64_t)(v206 & 0x7F) << v199;
            if (v206 < 0)
            {
              v199 += 7;
              BOOL v34 = v200++ >= 9;
              if (!v34) {
                continue;
              }
            }
            goto LABEL_275;
          }
          *(unsigned char *)(v3 + *v198) = 1;
LABEL_275:
          PBRepeatedInt32Add();
        }
LABEL_302:
        PBReaderRecallMark();
        unsigned int v25 = (int *)MEMORY[0x1E4F940C8];
        goto LABEL_422;
      case 39:
        if ((v8 & 1) == 0) {
          goto LABEL_300;
        }
        char v207 = 0;
        unsigned int v208 = 0;
        uint64_t v209 = 0;
        *(_DWORD *)(a1 + 216) |= 0x10000u;
        while (2)
        {
          uint64_t v210 = *v22;
          uint64_t v211 = *(void *)(v3 + v210);
          unint64_t v212 = v211 + 1;
          if (v211 == -1 || v212 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v25) = 1;
          }
          else
          {
            char v213 = *(unsigned char *)(*(void *)(v3 + *v26) + v211);
            *(void *)(v3 + v210) = v212;
            v209 |= (unint64_t)(v213 & 0x7F) << v207;
            if (v213 < 0)
            {
              v207 += 7;
              BOOL v34 = v208++ >= 9;
              if (v34)
              {
                uint64_t v209 = 0;
                goto LABEL_383;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v25)) {
          uint64_t v209 = 0;
        }
LABEL_383:
        BOOL v217 = v209 != 0;
        uint64_t v218 = 210;
LABEL_384:
        *(unsigned char *)(a1 + v218) = v217;
        goto LABEL_423;
      default:
        if ((v20 & 1) != 0 && (*(unsigned char *)(a1 + 218) & 0x20) == 0)
        {
          if (!*(void *)(a1 + 16))
          {
            id v114 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            unint64_t v115 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v114;
          }
          int v116 = PBUnknownFieldAdd();
          unsigned int v25 = (int *)MEMORY[0x1E4F940C8];
          unint64_t v26 = (int *)MEMORY[0x1E4F940B8];
          if (v116) {
            goto LABEL_423;
          }
          int v24 = 0;
          char v21 = v248;
LABEL_427:
          *(_DWORD *)(a1 + 216) |= 0x200000u;
          goto LABEL_428;
        }
LABEL_300:
        char v215 = PBReaderSkipValueWithTag();
        unint64_t v26 = (int *)MEMORY[0x1E4F940B8];
        unsigned int v25 = (int *)MEMORY[0x1E4F940C8];
        if ((v215 & 1) == 0) {
          goto LABEL_455;
        }
LABEL_423:
        if (!(v246 & 1 | (v7 != 0)))
        {
          int v24 = 1;
          goto LABEL_456;
        }
        char v20 = v247;
        char v21 = v248;
        if (*(void *)(v3 + *v22) >= *(void *)(v3 + *v6)) {
          goto LABEL_425;
        }
        continue;
    }
  }
}

void sub_18982B338(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18982B858(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18982B9C8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18982BB38(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18982C14C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18982C730(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id GEOTimepointJSONRepresentation(uint64_t a1)
{
  return _GEOTimepointDictionaryRepresentation(a1, 1);
}

id GEOTimepointDictionaryRepresentation(uint64_t a1)
{
  return _GEOTimepointDictionaryRepresentation(a1, 0);
}

void GEOTimepointFromJSONRepresentation(void *a1, uint64_t a2)
{
}

void GEOTimepointFromDictionaryRepresentation(void *a1, uint64_t a2)
{
}

uint64_t _GEORouteAttributesCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  [*(id *)(a1 + 120) readAll:1];
  [*(id *)(a1 + 128) readAll:1];
  [*(id *)(a1 + 152) readAll:1];
  [*(id *)(a1 + 160) readAll:1];
  char v2 = *(void **)(a1 + 136);

  return [v2 readAll:1];
}

uint64_t GEORouteAttributesReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 172))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEORouteAttributesReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 176));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 168) = [v8 position];
  *(_DWORD *)(a1 + 172) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEORouteAttributesReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEORouteAttributesReadAllFrom_initialTag;
  }
  uint64_t Specified = GEORouteAttributesReadSpecified(a1, (uint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEORouteAttributesCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 176));
  return Specified;
}

void sub_18982EE34(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t GEORouteAttributesReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  uint64_t AllFrom = GEORouteAttributesReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18982EE98(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORouteAttributesIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  char v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    id v5 = (int *)MEMORY[0x1E4F940B8];
    while (!a1[*v4])
    {
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        BOOL v13 = v7++ >= 9;
        if (v13)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_263;
          }
          unsigned int v17 = 0;
          while (1)
          {
            uint64_t v18 = *v2;
            uint64_t v19 = *(void *)&a1[v18];
            unint64_t v20 = v19 + 1;
            if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
              goto LABEL_228;
            }
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if (v21 < 0)
            {
              BOOL v22 = v17++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_229;
          }
        case 2u:
          if ((v8 & 7) != 0) {
            goto LABEL_263;
          }
          unsigned int v23 = 0;
          while (1)
          {
            uint64_t v24 = *v2;
            uint64_t v25 = *(void *)&a1[v24];
            unint64_t v26 = v25 + 1;
            if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
              goto LABEL_228;
            }
            int v27 = *(char *)(*(void *)&a1[*v5] + v25);
            *(void *)&a1[v24] = v26;
            if (v27 < 0)
            {
              BOOL v22 = v23++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_229;
          }
        case 3u:
          if ((v8 & 7) != 0) {
            goto LABEL_263;
          }
          unsigned int v28 = 0;
          while (1)
          {
            uint64_t v29 = *v2;
            uint64_t v30 = *(void *)&a1[v29];
            unint64_t v31 = v30 + 1;
            if (v30 == -1 || v31 > *(void *)&a1[*v3]) {
              goto LABEL_228;
            }
            int v32 = *(char *)(*(void *)&a1[*v5] + v30);
            *(void *)&a1[v29] = v31;
            if (v32 < 0)
            {
              BOOL v22 = v28++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_229;
          }
        case 4u:
          if ((v8 & 7) != 0) {
            goto LABEL_263;
          }
          unsigned int v33 = 0;
          while (1)
          {
            uint64_t v34 = *v2;
            uint64_t v35 = *(void *)&a1[v34];
            unint64_t v36 = v35 + 1;
            if (v35 == -1 || v36 > *(void *)&a1[*v3]) {
              goto LABEL_228;
            }
            int v37 = *(char *)(*(void *)&a1[*v5] + v35);
            *(void *)&a1[v34] = v36;
            if (v37 < 0)
            {
              BOOL v22 = v33++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_229;
          }
        case 5u:
          if ((v8 & 7) != 0) {
            goto LABEL_263;
          }
          unsigned int v38 = 0;
          while (1)
          {
            uint64_t v39 = *v2;
            uint64_t v40 = *(void *)&a1[v39];
            unint64_t v41 = v40 + 1;
            if (v40 == -1 || v41 > *(void *)&a1[*v3]) {
              goto LABEL_228;
            }
            int v42 = *(char *)(*(void *)&a1[*v5] + v40);
            *(void *)&a1[v39] = v41;
            if (v42 < 0)
            {
              BOOL v22 = v38++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_229;
          }
        case 6u:
          if ((v8 & 7) != 0) {
            goto LABEL_263;
          }
          unsigned int v43 = 0;
          while (1)
          {
            uint64_t v44 = *v2;
            uint64_t v45 = *(void *)&a1[v44];
            unint64_t v46 = v45 + 1;
            if (v45 == -1 || v46 > *(void *)&a1[*v3]) {
              goto LABEL_228;
            }
            int v47 = *(char *)(*(void *)&a1[*v5] + v45);
            *(void *)&a1[v44] = v46;
            if (v47 < 0)
            {
              BOOL v22 = v43++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_229;
          }
        case 7u:
          if ((v8 & 7) != 0) {
            goto LABEL_263;
          }
          unsigned int v48 = 0;
          while (1)
          {
            uint64_t v49 = *v2;
            uint64_t v50 = *(void *)&a1[v49];
            unint64_t v51 = v50 + 1;
            if (v50 == -1 || v51 > *(void *)&a1[*v3]) {
              goto LABEL_228;
            }
            int v52 = *(char *)(*(void *)&a1[*v5] + v50);
            *(void *)&a1[v49] = v51;
            if (v52 < 0)
            {
              BOOL v22 = v48++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_229;
          }
        case 8u:
          if ((v8 & 7) != 0) {
            goto LABEL_263;
          }
          unsigned int v53 = 0;
          while (1)
          {
            uint64_t v54 = *v2;
            uint64_t v55 = *(void *)&a1[v54];
            unint64_t v56 = v55 + 1;
            if (v55 == -1 || v56 > *(void *)&a1[*v3]) {
              goto LABEL_228;
            }
            int v57 = *(char *)(*(void *)&a1[*v5] + v55);
            *(void *)&a1[v54] = v56;
            if (v57 < 0)
            {
              BOOL v22 = v53++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_229;
          }
        case 9u:
          if (v15 == 2) {
            goto LABEL_105;
          }
          goto LABEL_263;
        case 0xAu:
          if ((v8 & 7) != 0) {
            goto LABEL_263;
          }
          unsigned int v58 = 0;
          while (1)
          {
            uint64_t v59 = *v2;
            uint64_t v60 = *(void *)&a1[v59];
            unint64_t v61 = v60 + 1;
            if (v60 == -1 || v61 > *(void *)&a1[*v3]) {
              goto LABEL_228;
            }
            int v62 = *(char *)(*(void *)&a1[*v5] + v60);
            *(void *)&a1[v59] = v61;
            if (v62 < 0)
            {
              BOOL v22 = v58++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_229;
          }
        case 0xBu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOTimepointIsValid(a1)) {
            goto LABEL_263;
          }
          goto LABEL_204;
        case 0xCu:
          if ((v8 & 7) != 0) {
            goto LABEL_263;
          }
          unsigned int v63 = 0;
          while (1)
          {
            uint64_t v64 = *v2;
            uint64_t v65 = *(void *)&a1[v64];
            unint64_t v66 = v65 + 1;
            if (v65 == -1 || v66 > *(void *)&a1[*v3]) {
              goto LABEL_228;
            }
            int v67 = *(char *)(*(void *)&a1[*v5] + v65);
            *(void *)&a1[v64] = v66;
            if (v67 < 0)
            {
              BOOL v22 = v63++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_229;
          }
        case 0xEu:
          if ((v8 & 7) != 0) {
            goto LABEL_263;
          }
          unsigned int v68 = 0;
          while (1)
          {
            uint64_t v69 = *v2;
            uint64_t v70 = *(void *)&a1[v69];
            unint64_t v71 = v70 + 1;
            if (v70 == -1 || v71 > *(void *)&a1[*v3]) {
              goto LABEL_228;
            }
            int v72 = *(char *)(*(void *)&a1[*v5] + v70);
            *(void *)&a1[v69] = v71;
            if (v72 < 0)
            {
              BOOL v22 = v68++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_229;
          }
        case 0xFu:
          if ((v8 & 7) != 0) {
            goto LABEL_263;
          }
          unsigned int v73 = 0;
          while (1)
          {
            uint64_t v74 = *v2;
            uint64_t v75 = *(void *)&a1[v74];
            unint64_t v76 = v75 + 1;
            if (v75 == -1 || v76 > *(void *)&a1[*v3]) {
              goto LABEL_228;
            }
            int v77 = *(char *)(*(void *)&a1[*v5] + v75);
            *(void *)&a1[v74] = v76;
            if (v77 < 0)
            {
              BOOL v22 = v73++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_229;
          }
        case 0x10u:
          if (v15 != 2)
          {
            if ((v8 & 7) != 0) {
              goto LABEL_263;
            }
            while (1)
            {
              uint64_t v78 = *v2;
              uint64_t v79 = *(void *)&a1[v78];
              unint64_t v80 = v79 + 1;
              if (v79 == -1 || v80 > *(void *)&a1[*v3]) {
                goto LABEL_228;
              }
              int v81 = *(char *)(*(void *)&a1[*v5] + v79);
              *(void *)&a1[v78] = v80;
              if (v81 < 0)
              {
                unsigned int v82 = v15++;
                if (v82 <= 8) {
                  continue;
                }
              }
              goto LABEL_229;
            }
          }
          if (!PBReaderPlaceMark()) {
            goto LABEL_263;
          }
LABEL_232:
          while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
          {
            unsigned int v133 = a1[*v4];
            if (a1[*v4]) {
              break;
            }
            while (1)
            {
              uint64_t v134 = *v2;
              uint64_t v135 = *(void *)&a1[v134];
              unint64_t v136 = v135 + 1;
              if (v135 == -1 || v136 > *(void *)&a1[*v3]) {
                break;
              }
              int v137 = *(char *)(*(void *)&a1[*v5] + v135);
              *(void *)&a1[v134] = v136;
              if (v137 < 0)
              {
                BOOL v13 = v133++ >= 9;
                if (!v13) {
                  continue;
                }
              }
              goto LABEL_232;
            }
            a1[*v4] = 1;
          }
          goto LABEL_204;
        case 0x11u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOAutomobileOptionsIsValid(a1)) {
            goto LABEL_263;
          }
          goto LABEL_204;
        case 0x12u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOTransitOptionsIsValid(a1)) {
            goto LABEL_263;
          }
          goto LABEL_204;
        case 0x13u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOWalkingOptionsIsValid(a1)) {
            goto LABEL_263;
          }
          goto LABEL_204;
        case 0x14u:
          if (v15 != 2)
          {
            if ((v8 & 7) != 0) {
              goto LABEL_263;
            }
            while (1)
            {
              uint64_t v83 = *v2;
              uint64_t v84 = *(void *)&a1[v83];
              unint64_t v85 = v84 + 1;
              if (v84 == -1 || v85 > *(void *)&a1[*v3]) {
                goto LABEL_228;
              }
              int v86 = *(char *)(*(void *)&a1[*v5] + v84);
              *(void *)&a1[v83] = v85;
              if (v86 < 0)
              {
                unsigned int v87 = v15++;
                if (v87 <= 8) {
                  continue;
                }
              }
              goto LABEL_229;
            }
          }
          if (!PBReaderPlaceMark()) {
            goto LABEL_263;
          }
LABEL_242:
          while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
          {
            unsigned int v138 = a1[*v4];
            if (a1[*v4]) {
              break;
            }
            while (1)
            {
              uint64_t v139 = *v2;
              uint64_t v140 = *(void *)&a1[v139];
              unint64_t v141 = v140 + 1;
              if (v140 == -1 || v141 > *(void *)&a1[*v3]) {
                break;
              }
              int v142 = *(char *)(*(void *)&a1[*v5] + v140);
              *(void *)&a1[v139] = v141;
              if (v142 < 0)
              {
                BOOL v13 = v138++ >= 9;
                if (!v13) {
                  continue;
                }
              }
              goto LABEL_242;
            }
            a1[*v4] = 1;
          }
          goto LABEL_204;
        case 0x15u:
          if ((v8 & 7) != 0) {
            goto LABEL_263;
          }
          unsigned int v88 = 0;
          while (1)
          {
            uint64_t v89 = *v2;
            uint64_t v90 = *(void *)&a1[v89];
            unint64_t v91 = v90 + 1;
            if (v90 == -1 || v91 > *(void *)&a1[*v3]) {
              goto LABEL_228;
            }
            int v92 = *(char *)(*(void *)&a1[*v5] + v90);
            *(void *)&a1[v89] = v91;
            if (v92 < 0)
            {
              BOOL v22 = v88++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_229;
          }
        case 0x1Eu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOWaypointNamePropertiesIsValid(a1)) {
            goto LABEL_263;
          }
          goto LABEL_204;
        case 0x1Fu:
          if ((v8 & 7) != 0) {
            goto LABEL_263;
          }
          unsigned int v93 = 0;
          while (1)
          {
            uint64_t v94 = *v2;
            uint64_t v95 = *(void *)&a1[v94];
            unint64_t v96 = v95 + 1;
            if (v95 == -1 || v96 > *(void *)&a1[*v3]) {
              goto LABEL_228;
            }
            int v97 = *(char *)(*(void *)&a1[*v5] + v95);
            *(void *)&a1[v94] = v96;
            if (v97 < 0)
            {
              BOOL v22 = v93++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_229;
          }
        case 0x20u:
          if ((v8 & 7) != 0) {
            goto LABEL_263;
          }
          unsigned int v98 = 0;
          while (1)
          {
            uint64_t v99 = *v2;
            uint64_t v100 = *(void *)&a1[v99];
            unint64_t v101 = v100 + 1;
            if (v100 == -1 || v101 > *(void *)&a1[*v3]) {
              goto LABEL_228;
            }
            int v102 = *(char *)(*(void *)&a1[*v5] + v100);
            *(void *)&a1[v99] = v101;
            if (v102 < 0)
            {
              BOOL v22 = v98++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_229;
          }
        case 0x21u:
          if ((v8 & 7) != 0) {
            goto LABEL_263;
          }
          unsigned int v103 = 0;
          while (1)
          {
            uint64_t v104 = *v2;
            uint64_t v105 = *(void *)&a1[v104];
            unint64_t v106 = v105 + 1;
            if (v105 == -1 || v106 > *(void *)&a1[*v3]) {
              goto LABEL_228;
            }
            int v107 = *(char *)(*(void *)&a1[*v5] + v105);
            *(void *)&a1[v104] = v106;
            if (v107 < 0)
            {
              BOOL v22 = v103++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_229;
          }
        case 0x22u:
          if ((v8 & 7) != 0) {
            goto LABEL_263;
          }
          unsigned int v108 = 0;
          while (1)
          {
            uint64_t v109 = *v2;
            uint64_t v110 = *(void *)&a1[v109];
            unint64_t v111 = v110 + 1;
            if (v110 == -1 || v111 > *(void *)&a1[*v3]) {
              goto LABEL_228;
            }
            int v112 = *(char *)(*(void *)&a1[*v5] + v110);
            *(void *)&a1[v109] = v111;
            if (v112 < 0)
            {
              BOOL v22 = v108++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_229;
          }
        case 0x23u:
          if ((v8 & 7) != 0) {
            goto LABEL_263;
          }
          unsigned int v113 = 0;
          while (1)
          {
            uint64_t v114 = *v2;
            uint64_t v115 = *(void *)&a1[v114];
            unint64_t v116 = v115 + 1;
            if (v115 == -1 || v116 > *(void *)&a1[*v3]) {
              goto LABEL_228;
            }
            int v117 = *(char *)(*(void *)&a1[*v5] + v115);
            *(void *)&a1[v114] = v116;
            if (v117 < 0)
            {
              BOOL v22 = v113++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_229;
          }
        case 0x24u:
          if (v15 == 2 && PBReaderPlaceMark() && GEOCyclingOptionsIsValid(a1)) {
            goto LABEL_204;
          }
          goto LABEL_263;
        case 0x25u:
          if ((v8 & 7) != 0) {
            goto LABEL_263;
          }
          unsigned int v118 = 0;
          while (1)
          {
            uint64_t v119 = *v2;
            uint64_t v120 = *(void *)&a1[v119];
            unint64_t v121 = v120 + 1;
            if (v120 == -1 || v121 > *(void *)&a1[*v3]) {
              goto LABEL_228;
            }
            int v122 = *(char *)(*(void *)&a1[*v5] + v120);
            *(void *)&a1[v119] = v121;
            if (v122 < 0)
            {
              BOOL v22 = v118++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_229;
          }
        case 0x26u:
          if (v15 == 2)
          {
            if (!PBReaderPlaceMark())
            {
LABEL_263:
              PBReaderRecallMark();
              return 0;
            }
LABEL_252:
            while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
            {
              unsigned int v143 = a1[*v4];
              if (a1[*v4]) {
                break;
              }
              while (1)
              {
                uint64_t v144 = *v2;
                uint64_t v145 = *(void *)&a1[v144];
                unint64_t v146 = v145 + 1;
                if (v145 == -1 || v146 > *(void *)&a1[*v3]) {
                  break;
                }
                int v147 = *(char *)(*(void *)&a1[*v5] + v145);
                *(void *)&a1[v144] = v146;
                if (v147 < 0)
                {
                  BOOL v13 = v143++ >= 9;
                  if (!v13) {
                    continue;
                  }
                }
                goto LABEL_252;
              }
              a1[*v4] = 1;
            }
LABEL_204:
            PBReaderRecallMark();
          }
          else
          {
            if ((v8 & 7) != 0) {
              goto LABEL_263;
            }
            while (1)
            {
              uint64_t v123 = *v2;
              uint64_t v124 = *(void *)&a1[v123];
              unint64_t v125 = v124 + 1;
              if (v124 == -1 || v125 > *(void *)&a1[*v3]) {
                break;
              }
              int v126 = *(char *)(*(void *)&a1[*v5] + v124);
              *(void *)&a1[v123] = v125;
              if (v126 < 0)
              {
                unsigned int v127 = v15++;
                if (v127 <= 8) {
                  continue;
                }
              }
              goto LABEL_229;
            }
LABEL_228:
            a1[*v4] = 1;
          }
LABEL_229:
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_261;
          }
          break;
        case 0x27u:
          if ((v8 & 7) != 0) {
            goto LABEL_263;
          }
          unsigned int v128 = 0;
          while (1)
          {
            uint64_t v129 = *v2;
            uint64_t v130 = *(void *)&a1[v129];
            unint64_t v131 = v130 + 1;
            if (v130 == -1 || v131 > *(void *)&a1[*v3]) {
              goto LABEL_228;
            }
            int v132 = *(char *)(*(void *)&a1[*v5] + v130);
            *(void *)&a1[v129] = v131;
            if (v132 < 0)
            {
              BOOL v22 = v128++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_229;
          }
        default:
LABEL_105:
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_263;
          }
          goto LABEL_229;
      }
    }
  }
LABEL_261:
  BOOL v148 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v148;
}

uint64_t GEOTimepointIsValid(void *a1)
{
  v4[3] = [a1 position];
  void v4[4] = [a1 length];
  memset(v4, 0, 24);
  uint64_t AllFrom = GEOTimepointReadAllFrom((uint64_t)v4, (uint64_t)a1);
  PBReaderRecallMark();
  return AllFrom;
}

BOOL GEOTransitOptionsIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  char v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    id v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        BOOL v13 = v7++ >= 9;
        if (v13)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 6u:
          if (v15 == 2)
          {
            if (!PBReaderPlaceMark()) {
              goto LABEL_71;
            }
            while (1)
            {
LABEL_60:
              if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
                goto LABEL_39;
              }
              unsigned int v38 = a1[*v4];
              if (a1[*v4]) {
                goto LABEL_39;
              }
              while (1)
              {
                uint64_t v39 = *v2;
                uint64_t v40 = *(void *)&a1[v39];
                unint64_t v41 = v40 + 1;
                if (v40 == -1 || v41 > *(void *)&a1[*v3]) {
                  break;
                }
                int v42 = *(char *)(*(void *)&a1[*v5] + v40);
                *(void *)&a1[v39] = v41;
                if (v42 < 0)
                {
                  BOOL v13 = v38++ >= 9;
                  if (!v13) {
                    continue;
                  }
                }
                goto LABEL_60;
              }
              a1[*v4] = 1;
            }
          }
          if ((v8 & 7) != 0) {
            goto LABEL_71;
          }
          while (1)
          {
            uint64_t v17 = *v2;
            uint64_t v18 = *(void *)&a1[v17];
            unint64_t v19 = v18 + 1;
            if (v18 == -1 || v19 > *(void *)&a1[*v3]) {
              goto LABEL_56;
            }
            int v20 = *(char *)(*(void *)&a1[*v5] + v18);
            *(void *)&a1[v17] = v19;
            if (v20 < 0)
            {
              unsigned int v21 = v15++;
              if (v21 <= 8) {
                continue;
              }
            }
            goto LABEL_57;
          }
        case 8u:
          if ((v8 & 7) != 0) {
            goto LABEL_71;
          }
          unsigned int v22 = 0;
          while (1)
          {
            uint64_t v23 = *v2;
            uint64_t v24 = *(void *)&a1[v23];
            unint64_t v25 = v24 + 1;
            if (v24 == -1 || v25 > *(void *)&a1[*v3]) {
              goto LABEL_56;
            }
            int v26 = *(char *)(*(void *)&a1[*v5] + v24);
            *(void *)&a1[v23] = v25;
            if (v26 < 0)
            {
              BOOL v27 = v22++ > 8;
              if (!v27) {
                continue;
              }
            }
            goto LABEL_57;
          }
        case 0xAu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOFareOptionsIsValid(a1)) {
            goto LABEL_71;
          }
LABEL_39:
          PBReaderRecallMark();
          continue;
        case 0xBu:
          if ((v8 & 7) != 0) {
            goto LABEL_71;
          }
          unsigned int v28 = 0;
          while (1)
          {
            uint64_t v29 = *v2;
            uint64_t v30 = *(void *)&a1[v29];
            unint64_t v31 = v30 + 1;
            if (v30 == -1 || v31 > *(void *)&a1[*v3]) {
              goto LABEL_56;
            }
            int v32 = *(char *)(*(void *)&a1[*v5] + v30);
            *(void *)&a1[v29] = v31;
            if (v32 < 0)
            {
              BOOL v27 = v28++ > 8;
              if (!v27) {
                continue;
              }
            }
            goto LABEL_57;
          }
        case 0xCu:
          if ((v8 & 7) != 0) {
            goto LABEL_71;
          }
          unsigned int v33 = 0;
          break;
        default:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_71:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        uint64_t v34 = *v2;
        uint64_t v35 = *(void *)&a1[v34];
        unint64_t v36 = v35 + 1;
        if (v35 == -1 || v36 > *(void *)&a1[*v3]) {
          break;
        }
        int v37 = *(char *)(*(void *)&a1[*v5] + v35);
        *(void *)&a1[v34] = v36;
        if (v37 < 0)
        {
          BOOL v27 = v33++ > 8;
          if (!v27) {
            continue;
          }
        }
        goto LABEL_57;
      }
LABEL_56:
      a1[*v4] = 1;
LABEL_57:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v43 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v43;
}

BOOL GEOWalkingOptionsIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  char v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    id v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_51;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        BOOL v13 = v7++ >= 9;
        if (v13)
        {
          unint64_t v8 = 0;
          uint64_t v14 = *v4;
          int v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      uint64_t v14 = *v4;
      int v15 = a1[v14];
      if (a1[v14]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v16 = v8 & 7;
      if (v15 || v16 == 4) {
        goto LABEL_51;
      }
      unint64_t v18 = v8 >> 3;
      if ((v8 >> 3) == 3) {
        break;
      }
      if (v18 == 2)
      {
        if (v16 != 2)
        {
          if ((v8 & 7) != 0) {
            goto LABEL_53;
          }
          while (1)
          {
            uint64_t v22 = *v2;
            uint64_t v23 = *(void *)&a1[v22];
            unint64_t v24 = v23 + 1;
            if (v23 == -1 || v24 > *(void *)&a1[*v3]) {
              break;
            }
            int v25 = *(char *)(*(void *)&a1[*v5] + v23);
            *(void *)&a1[v22] = v24;
            if (v25 < 0)
            {
              unsigned int v26 = v16++;
              if (v26 <= 8) {
                continue;
              }
            }
            goto LABEL_50;
          }
          uint64_t v14 = *v4;
LABEL_49:
          a1[v14] = 1;
          goto LABEL_50;
        }
        if (!PBReaderPlaceMark()) {
          goto LABEL_53;
        }
LABEL_39:
        while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
        {
          unsigned int v27 = a1[*v4];
          if (a1[*v4]) {
            break;
          }
          while (1)
          {
            uint64_t v28 = *v2;
            uint64_t v29 = *(void *)&a1[v28];
            unint64_t v30 = v29 + 1;
            if (v29 == -1 || v30 > *(void *)&a1[*v3]) {
              break;
            }
            int v31 = *(char *)(*(void *)&a1[*v5] + v29);
            *(void *)&a1[v28] = v30;
            if (v31 < 0)
            {
              BOOL v13 = v27++ >= 9;
              if (!v13) {
                continue;
              }
            }
            goto LABEL_39;
          }
          a1[*v4] = 1;
        }
        goto LABEL_28;
      }
      if (v18 == 1)
      {
        if (v16 != 1) {
          goto LABEL_53;
        }
        uint64_t v19 = *v2;
        unint64_t v20 = *(void *)&a1[v19];
        if (v20 > 0xFFFFFFFFFFFFFFF7) {
          goto LABEL_49;
        }
        unint64_t v21 = v20 + 8;
        if (v21 > *(void *)&a1[*v3]) {
          goto LABEL_49;
        }
        *(void *)&a1[v19] = v21;
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_53;
      }
LABEL_50:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_51;
      }
    }
    if (v16 != 2 || !PBReaderPlaceMark() || !GEOWalkingUserPreferencesIsValid(a1))
    {
LABEL_53:
      PBReaderRecallMark();
      return 0;
    }
LABEL_28:
    PBReaderRecallMark();
    goto LABEL_50;
  }
LABEL_51:
  BOOL v32 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v32;
}

void sub_189830818(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORouteAttributesIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 176));
  unsigned int v2 = *(_DWORD *)(a1 + 216);
  if ((v2 & 0x90400000) != 0) {
    return 1;
  }
  if ((v2 & 0x2000000) != 0)
  {
    if (GEOAutomobileOptionsIsDirty(*(os_unfair_lock_s **)(a1 + 120))) {
      return 1;
    }
    unsigned int v2 = *(_DWORD *)(a1 + 216);
  }
  if ((v2 & 0x4000000) != 0)
  {
    if (GEOCyclingOptionsIsDirty(*(void *)(a1 + 128))) {
      return 1;
    }
    unsigned int v2 = *(_DWORD *)(a1 + 216);
  }
  if ((v2 & 0x20000000) != 0)
  {
    if (GEOTransitOptionsIsDirty(*(void *)(a1 + 152))) {
      return 1;
    }
    unsigned int v2 = *(_DWORD *)(a1 + 216);
  }
  if ((v2 & 0x40000000) == 0) {
    goto LABEL_15;
  }
  if (GEOWalkingOptionsIsDirty(*(void *)(a1 + 160))) {
    return 1;
  }
  unsigned int v2 = *(_DWORD *)(a1 + 216);
LABEL_15:
  if ((v2 & 0x9000000) != 0) {
    return 1;
  }
  return (v2 >> 23) & 1;
}

os_unfair_lock_s *GEORouteAttributesIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    uint64_t v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEORouteAttributesIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 44);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

BOOL GEOTimepointEquals(void *a1, void *a2)
{
  return *a1 == *a2 && a1[1] == a2[1] && a1[2] == a2[2];
}

void sub_189831F34(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898321BC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORouteIncidentReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 120));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 116);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 112)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  unsigned int v12 = *(_DWORD *)(a1 + 152);
  uint32x4_t v13 = (uint32x4_t)vdupq_n_s32(v12);
  v14.i64[0] = 0x100000001;
  v14.i64[1] = 0x100000001;
  unsigned int v15 = vaddvq_s32(vaddq_s32((int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v13, (uint32x4_t)xmmword_18A633FC0), v14), (int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v13, (uint32x4_t)xmmword_18A633FD0), v14)))+ ((v12 >> 11) & 1);
  while (2)
  {
    uint64_t v16 = 1;
    uint64_t v17 = 1;
    uint64_t v18 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v15;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v17 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v19 = v15 > 5;
        char v20 = v19 | v11;
        char v122 = v19 & ~(_BYTE)v11 | v9;
        char v123 = v8;
        char v125 = v19 | v11 | v122;
        if (((v19 | v11) | v8)) {
          unint64_t v21 = 0;
        }
        else {
          unint64_t v21 = a3;
        }
        char v126 = (v21 == 0) | v20;
        uint64_t v22 = (int *)MEMORY[0x1E4F940E8];
        uint64_t v23 = (int *)MEMORY[0x1E4F940C8];
        unint64_t v24 = (int *)MEMORY[0x1E4F940B8];
        char v124 = v19 | v11;
        break;
      default:
        ++v15;
LABEL_7:
        uint64_t v16 = v9;
LABEL_8:
        uint64_t v17 = v10;
        uint64_t v18 = v11;
LABEL_10:
        ++v7;
        uint64_t v9 = v16;
        uint64_t v10 = v17;
        uint64_t v11 = v18;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v22) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v23)) {
      goto LABEL_216;
    }
    char v25 = 0;
    unsigned int v26 = 0;
    unint64_t v27 = 0;
    while (1)
    {
      uint64_t v28 = *v22;
      uint64_t v29 = *(void *)(v3 + v28);
      unint64_t v30 = v29 + 1;
      if (v29 == -1 || v30 > *(void *)(v3 + *v6)) {
        break;
      }
      char v31 = *(unsigned char *)(*(void *)(v3 + *v24) + v29);
      *(void *)(v3 + v28) = v30;
      v27 |= (unint64_t)(v31 & 0x7F) << v25;
      if ((v31 & 0x80) == 0) {
        goto LABEL_25;
      }
      v25 += 7;
      BOOL v32 = v26++ >= 9;
      if (v32)
      {
        unint64_t v27 = 0;
        int v33 = *(unsigned __int8 *)(v3 + *v23);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v23) = 1;
LABEL_25:
    int v33 = *(unsigned __int8 *)(v3 + *v23);
    if (*(unsigned char *)(v3 + *v23)) {
      unint64_t v27 = 0;
    }
LABEL_27:
    if (v33 || (v27 & 7) == 4)
    {
LABEL_216:
      int v121 = 1;
      goto LABEL_217;
    }
    unint64_t v35 = v27 >> 3;
    BOOL v36 = v20;
    if ((v126 & 1) == 0)
    {
      int v37 = v21;
      do
      {
        int v39 = *v37++;
        int v38 = v39;
        BOOL v36 = v39 != 0;
        if (v39) {
          BOOL v40 = v38 == v35;
        }
        else {
          BOOL v40 = 1;
        }
      }
      while (!v40);
    }
    switch((int)v35)
    {
      case 1:
        if (!v36) {
          goto LABEL_156;
        }
        if ((*(unsigned char *)(a1 + 154) & 1) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_239;
          }
          unint64_t v41 = objc_alloc_init(GEOLatLng);
          if (GEOLatLngReadAllFrom((uint64_t)v41, (void *)v3))
          {
            PBReaderRecallMark();
            uint64_t v42 = 64;
            goto LABEL_154;
          }
          goto LABEL_238;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_239;
        }
        int v115 = (int)(*(_DWORD *)(a1 + 152) << 15) >> 31;
        goto LABEL_206;
      case 2:
        if (!v36) {
          goto LABEL_156;
        }
        if ((*(unsigned char *)(a1 + 153) & 0x40) == 0)
        {
          uint64_t v46 = PBReaderReadString();
          uint64_t v47 = 48;
          goto LABEL_70;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_239;
        }
        int v115 = (int)(*(_DWORD *)(a1 + 152) << 17) >> 31;
        goto LABEL_206;
      case 3:
        if (!v36) {
          goto LABEL_156;
        }
        if ((*(unsigned char *)(a1 + 153) & 0x80) == 0)
        {
          uint64_t v46 = PBReaderReadString();
          uint64_t v47 = 56;
          goto LABEL_70;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_239;
        }
        int v115 = (int)(*(_DWORD *)(a1 + 152) << 16) >> 31;
        goto LABEL_206;
      case 4:
        if ((v123 & 1) == 0) {
          goto LABEL_156;
        }
        char v48 = 0;
        unsigned int v49 = 0;
        uint64_t v50 = 0;
        *(_DWORD *)(a1 + 152) |= 0x80u;
        while (2)
        {
          uint64_t v51 = *v22;
          uint64_t v52 = *(void *)(v3 + v51);
          unint64_t v53 = v52 + 1;
          if (v52 == -1 || v53 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v23) = 1;
          }
          else
          {
            char v54 = *(unsigned char *)(*(void *)(v3 + *v24) + v52);
            *(void *)(v3 + v51) = v53;
            v50 |= (unint64_t)(v54 & 0x7F) << v48;
            if (v54 < 0)
            {
              v48 += 7;
              BOOL v32 = v49++ >= 9;
              if (v32)
              {
                LODWORD(v50) = 0;
                goto LABEL_161;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v23)) {
          LODWORD(v50) = 0;
        }
LABEL_161:
        uint64_t v112 = 140;
        goto LABEL_191;
      case 5:
        if (!v36) {
          goto LABEL_156;
        }
        if ((*(unsigned char *)(a1 + 154) & 4) == 0)
        {
          uint64_t v46 = PBReaderReadString();
          uint64_t v47 = 88;
          goto LABEL_70;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_239;
        }
        int v115 = (int)(*(_DWORD *)(a1 + 152) << 13) >> 31;
        goto LABEL_206;
      case 6:
        if (!v36) {
          goto LABEL_156;
        }
        if ((*(unsigned char *)(a1 + 153) & 0x20) == 0)
        {
          uint64_t v46 = PBReaderReadString();
          uint64_t v47 = 32;
LABEL_70:
          uint64_t v55 = *(void **)(a1 + v47);
          *(void *)(a1 + v47) = v46;
          goto LABEL_155;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_239;
        }
        int v115 = (int)(*(_DWORD *)(a1 + 152) << 18) >> 31;
        goto LABEL_206;
      case 7:
        if ((v123 & 1) == 0) {
          goto LABEL_156;
        }
        *(_DWORD *)(a1 + 152) |= 2u;
        uint64_t v56 = *v22;
        unint64_t v57 = *(void *)(v3 + v56);
        if (v57 <= 0xFFFFFFFFFFFFFFF7 && (unint64_t v58 = v57 + 8, v57 + 8 <= *(void *)(v3 + *v6)))
        {
          uint64_t v59 = *(void *)(*(void *)(v3 + *v24) + v57);
          *(void *)(v3 + v56) = v58;
        }
        else
        {
          uint64_t v59 = 0;
          *(unsigned char *)(v3 + *v23) = 1;
        }
        uint64_t v116 = 80;
        goto LABEL_214;
      case 8:
        if ((v123 & 1) == 0) {
          goto LABEL_156;
        }
        *(_DWORD *)(a1 + 152) |= 1u;
        uint64_t v60 = *v22;
        unint64_t v61 = *(void *)(v3 + v60);
        if (v61 <= 0xFFFFFFFFFFFFFFF7 && (unint64_t v62 = v61 + 8, v61 + 8 <= *(void *)(v3 + *v6)))
        {
          uint64_t v59 = *(void *)(*(void *)(v3 + *v24) + v61);
          *(void *)(v3 + v60) = v62;
        }
        else
        {
          uint64_t v59 = 0;
          *(unsigned char *)(v3 + *v23) = 1;
        }
        uint64_t v116 = 40;
        goto LABEL_214;
      case 9:
        if ((v123 & 1) == 0) {
          goto LABEL_156;
        }
        *(_DWORD *)(a1 + 152) |= 4u;
        uint64_t v63 = *v22;
        unint64_t v64 = *(void *)(v3 + v63);
        if (v64 <= 0xFFFFFFFFFFFFFFF7 && (unint64_t v65 = v64 + 8, v64 + 8 <= *(void *)(v3 + *v6)))
        {
          uint64_t v59 = *(void *)(*(void *)(v3 + *v24) + v64);
          *(void *)(v3 + v63) = v65;
        }
        else
        {
          uint64_t v59 = 0;
          *(unsigned char *)(v3 + *v23) = 1;
        }
        uint64_t v116 = 96;
LABEL_214:
        *(void *)(a1 + v116) = v59;
        goto LABEL_215;
      case 10:
        if ((v123 & 1) == 0) {
          goto LABEL_156;
        }
        char v66 = 0;
        unsigned int v67 = 0;
        uint64_t v50 = 0;
        *(_DWORD *)(a1 + 152) |= 0x20u;
        while (2)
        {
          uint64_t v68 = *v22;
          uint64_t v69 = *(void *)(v3 + v68);
          unint64_t v70 = v69 + 1;
          if (v69 == -1 || v70 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v23) = 1;
          }
          else
          {
            char v71 = *(unsigned char *)(*(void *)(v3 + *v24) + v69);
            *(void *)(v3 + v68) = v70;
            v50 |= (unint64_t)(v71 & 0x7F) << v66;
            if (v71 < 0)
            {
              v66 += 7;
              BOOL v32 = v67++ >= 9;
              if (v32)
              {
                LODWORD(v50) = 0;
                goto LABEL_165;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v23)) {
          LODWORD(v50) = 0;
        }
LABEL_165:
        uint64_t v112 = 132;
        goto LABEL_191;
      case 11:
        if ((v123 & 1) == 0) {
          goto LABEL_156;
        }
        char v72 = 0;
        unsigned int v73 = 0;
        uint64_t v50 = 0;
        *(_DWORD *)(a1 + 152) |= 0x10u;
        while (2)
        {
          uint64_t v74 = *v22;
          uint64_t v75 = *(void *)(v3 + v74);
          unint64_t v76 = v75 + 1;
          if (v75 == -1 || v76 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v23) = 1;
          }
          else
          {
            char v77 = *(unsigned char *)(*(void *)(v3 + *v24) + v75);
            *(void *)(v3 + v74) = v76;
            v50 |= (unint64_t)(v77 & 0x7F) << v72;
            if (v77 < 0)
            {
              v72 += 7;
              BOOL v32 = v73++ >= 9;
              if (v32)
              {
                LODWORD(v50) = 0;
                goto LABEL_169;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v23)) {
          LODWORD(v50) = 0;
        }
LABEL_169:
        uint64_t v112 = 128;
        goto LABEL_191;
      case 12:
        if ((v123 & 1) == 0) {
          goto LABEL_156;
        }
        char v78 = 0;
        unsigned int v79 = 0;
        uint64_t v80 = 0;
        *(_DWORD *)(a1 + 152) |= 0x200u;
        while (2)
        {
          uint64_t v81 = *v22;
          uint64_t v82 = *(void *)(v3 + v81);
          unint64_t v83 = v82 + 1;
          if (v82 == -1 || v83 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v23) = 1;
          }
          else
          {
            char v84 = *(unsigned char *)(*(void *)(v3 + *v24) + v82);
            *(void *)(v3 + v81) = v83;
            v80 |= (unint64_t)(v84 & 0x7F) << v78;
            if (v84 < 0)
            {
              v78 += 7;
              BOOL v32 = v79++ >= 9;
              if (v32)
              {
                uint64_t v80 = 0;
                goto LABEL_173;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v23)) {
          uint64_t v80 = 0;
        }
LABEL_173:
        BOOL v113 = v80 != 0;
        uint64_t v114 = 148;
        goto LABEL_186;
      case 13:
        if ((v123 & 1) == 0) {
          goto LABEL_156;
        }
        char v85 = 0;
        unsigned int v86 = 0;
        uint64_t v50 = 0;
        *(_DWORD *)(a1 + 152) |= 0x40u;
        while (2)
        {
          uint64_t v87 = *v22;
          uint64_t v88 = *(void *)(v3 + v87);
          unint64_t v89 = v88 + 1;
          if (v88 == -1 || v89 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v23) = 1;
          }
          else
          {
            char v90 = *(unsigned char *)(*(void *)(v3 + *v24) + v88);
            *(void *)(v3 + v87) = v89;
            v50 |= (unint64_t)(v90 & 0x7F) << v85;
            if (v90 < 0)
            {
              v85 += 7;
              BOOL v32 = v86++ >= 9;
              if (v32)
              {
                LODWORD(v50) = 0;
                goto LABEL_177;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v23)) {
          LODWORD(v50) = 0;
        }
LABEL_177:
        uint64_t v112 = 136;
        goto LABEL_191;
      case 14:
        if (!v36) {
          goto LABEL_156;
        }
        if ((*(unsigned char *)(a1 + 154) & 2) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_239;
          }
          int v115 = (int)(*(_DWORD *)(a1 + 152) << 14) >> 31;
          goto LABEL_206;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_239;
        }
        unint64_t v41 = objc_alloc_init(GEORestrictionInfo);
        if (!GEORestrictionInfoReadAllFrom((uint64_t)v41, (void *)v3, v10 & 1)) {
          goto LABEL_238;
        }
        PBReaderRecallMark();
        uint64_t v42 = 72;
        goto LABEL_154;
      case 15:
        if ((v123 & 1) == 0) {
          goto LABEL_156;
        }
        char v91 = 0;
        unsigned int v92 = 0;
        uint64_t v50 = 0;
        *(_DWORD *)(a1 + 152) |= 0x100u;
        while (2)
        {
          uint64_t v93 = *v22;
          uint64_t v94 = *(void *)(v3 + v93);
          unint64_t v95 = v94 + 1;
          if (v94 == -1 || v95 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v23) = 1;
          }
          else
          {
            char v96 = *(unsigned char *)(*(void *)(v3 + *v24) + v94);
            *(void *)(v3 + v93) = v95;
            v50 |= (unint64_t)(v96 & 0x7F) << v91;
            if (v96 < 0)
            {
              v91 += 7;
              BOOL v32 = v92++ >= 9;
              if (v32)
              {
                LODWORD(v50) = 0;
                goto LABEL_181;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v23)) {
          LODWORD(v50) = 0;
        }
LABEL_181:
        uint64_t v112 = 144;
        goto LABEL_191;
      case 16:
        if ((v123 & 1) == 0) {
          goto LABEL_156;
        }
        char v97 = 0;
        unsigned int v98 = 0;
        uint64_t v99 = 0;
        *(_DWORD *)(a1 + 152) |= 0x400u;
        while (2)
        {
          uint64_t v100 = *v22;
          uint64_t v101 = *(void *)(v3 + v100);
          unint64_t v102 = v101 + 1;
          if (v101 == -1 || v102 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v23) = 1;
          }
          else
          {
            char v103 = *(unsigned char *)(*(void *)(v3 + *v24) + v101);
            *(void *)(v3 + v100) = v102;
            v99 |= (unint64_t)(v103 & 0x7F) << v97;
            if (v103 < 0)
            {
              v97 += 7;
              BOOL v32 = v98++ >= 9;
              if (v32)
              {
                uint64_t v99 = 0;
                goto LABEL_185;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v23)) {
          uint64_t v99 = 0;
        }
LABEL_185:
        BOOL v113 = v99 != 0;
        uint64_t v114 = 149;
LABEL_186:
        *(unsigned char *)(a1 + v114) = v113;
        goto LABEL_215;
      case 17:
        if (!v36 || (*(unsigned char *)(a1 + 154) & 8) != 0) {
          goto LABEL_156;
        }
        uint64_t v104 = PBReaderReadString();
        if (v104) {
          -[GEORouteIncident _addNoFlagsUserReportId:](a1, v104);
        }

        goto LABEL_207;
      case 18:
        if ((v123 & 1) == 0) {
          goto LABEL_156;
        }
        char v105 = 0;
        unsigned int v106 = 0;
        uint64_t v50 = 0;
        *(_DWORD *)(a1 + 152) |= 8u;
        while (2)
        {
          uint64_t v107 = *v22;
          uint64_t v108 = *(void *)(v3 + v107);
          unint64_t v109 = v108 + 1;
          if (v108 == -1 || v109 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v23) = 1;
          }
          else
          {
            char v110 = *(unsigned char *)(*(void *)(v3 + *v24) + v108);
            *(void *)(v3 + v107) = v109;
            v50 |= (unint64_t)(v110 & 0x7F) << v105;
            if (v110 < 0)
            {
              v105 += 7;
              BOOL v32 = v106++ >= 9;
              if (v32)
              {
                LODWORD(v50) = 0;
                goto LABEL_190;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v23)) {
          LODWORD(v50) = 0;
        }
LABEL_190:
        uint64_t v112 = 124;
LABEL_191:
        *(_DWORD *)(a1 + v112) = v50;
        goto LABEL_215;
      case 19:
        if (!v36) {
          goto LABEL_156;
        }
        if ((*(unsigned char *)(a1 + 153) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_239;
          }
          int v115 = (int)(*(_DWORD *)(a1 + 152) << 19) >> 31;
LABEL_206:
          v7 += v115;
LABEL_207:
          char v20 = v124;
          uint64_t v23 = (int *)MEMORY[0x1E4F940C8];
          unint64_t v24 = (int *)MEMORY[0x1E4F940B8];
LABEL_215:
          if (!(v125 & 1 | (v7 != 0))) {
            goto LABEL_216;
          }
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_239;
        }
        unint64_t v41 = objc_alloc_init(GEOPBTransitArtwork);
        if (GEOPBTransitArtworkReadAllFrom((uint64_t)v41, (void *)v3, v10 & 1))
        {
          PBReaderRecallMark();
          uint64_t v42 = 24;
LABEL_154:
          uint64_t v55 = *(void **)(a1 + v42);
          *(void *)(a1 + v42) = v41;
LABEL_155:

          --v7;
          goto LABEL_207;
        }
LABEL_238:

LABEL_239:
        int v121 = 0;
        char v20 = v124;
        uint64_t v23 = (int *)MEMORY[0x1E4F940C8];
LABEL_217:
        if (v122) {
LABEL_218:
        }
          *(_DWORD *)(a1 + 152) |= 0x800u;
        if (v20 & 1 | ((v121 & 1) == 0))
        {
          *(_DWORD *)(a1 + 152) |= 0x10000u;
          *(_DWORD *)(a1 + 152) |= 0x4000u;
          *(_DWORD *)(a1 + 152) |= 0x8000u;
          *(_DWORD *)(a1 + 152) |= 0x40000u;
          *(_DWORD *)(a1 + 152) |= 0x2000u;
          *(_DWORD *)(a1 + 152) |= 0x20000u;
          *(_DWORD *)(a1 + 152) |= 0x80000u;
          *(_DWORD *)(a1 + 152) |= 0x1000u;
        }
        else if (v21)
        {
          while (1)
          {
            int v118 = *v21++;
            int v117 = 0x10000;
            switch(v118)
            {
              case 0:
                goto LABEL_232;
              case 1:
                goto LABEL_230;
              case 2:
                int v117 = 0x4000;
                goto LABEL_230;
              case 3:
                int v117 = 0x8000;
                goto LABEL_230;
              case 5:
                int v117 = 0x40000;
                goto LABEL_230;
              case 6:
                int v117 = 0x2000;
                goto LABEL_230;
              case 14:
                int v117 = 0x20000;
                goto LABEL_230;
              case 17:
                int v117 = 0x80000;
                goto LABEL_230;
              case 19:
                int v117 = 4096;
LABEL_230:
                *(_DWORD *)(a1 + 152) |= v117;
                break;
              default:
                continue;
            }
          }
        }
LABEL_232:
        if (v121)
        {
          unint64_t v3 = *(unsigned char *)(v3 + *v23) == 0;
          if ((v20 & 1) == 0) {
            return v3;
          }
LABEL_236:
          uint64_t v119 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        else
        {
          unint64_t v3 = 0;
          if (v20) {
            goto LABEL_236;
          }
        }
        return v3;
      default:
        if ((v122 & 1) == 0 || (*(unsigned char *)(a1 + 153) & 8) != 0)
        {
LABEL_156:
          char v111 = PBReaderSkipValueWithTag();
          unint64_t v24 = (int *)MEMORY[0x1E4F940B8];
          uint64_t v23 = (int *)MEMORY[0x1E4F940C8];
          char v20 = v124;
          if ((v111 & 1) == 0)
          {
            int v121 = 0;
            goto LABEL_217;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v43 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            uint64_t v44 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v43;
          }
          int v45 = PBUnknownFieldAdd();
          char v20 = v124;
          uint64_t v23 = (int *)MEMORY[0x1E4F940C8];
          unint64_t v24 = (int *)MEMORY[0x1E4F940B8];
          if (!v45)
          {
            int v121 = 0;
            goto LABEL_218;
          }
        }
        goto LABEL_215;
    }
  }
}

void sub_1898333B0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189833524(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189833B24(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189833C94(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898344F0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898347CC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189834C10(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898361F0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORouteIncidentReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 116))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEORouteIncidentReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 120));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 112) = [v8 position];
  *(_DWORD *)(a1 + 116) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEORouteIncidentReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEORouteIncidentReadAllFrom_initialTag;
  }
  unint64_t Specified = GEORouteIncidentReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    [*(id *)(a1 + 64) readAll:1];
    [*(id *)(a1 + 72) readAll:1];
    [*(id *)(a1 + 24) readAll:1];
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 120));
  return Specified;
}

void sub_1898363BC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORouteIncidentReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEORouteIncidentReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189836420(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189836884(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORouteIncidentIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 120));
  int v2 = *(_DWORD *)(a1 + 152);
  if ((v2 & 0x15E000) != 0) {
    return 1;
  }
  if ((v2 & 0x20000) != 0)
  {
    if (GEORestrictionInfoIsDirty(*(os_unfair_lock_s **)(a1 + 72))) {
      return 1;
    }
    int v2 = *(_DWORD *)(a1 + 152);
  }
  if ((v2 & 0x80000) != 0) {
    return 1;
  }
  if ((v2 & 0x1000) == 0) {
    return 0;
  }
  uint64_t v4 = *(os_unfair_lock_s **)(a1 + 24);

  return (uint64_t)GEOPBTransitArtworkIsDirty(v4);
}

os_unfair_lock_s *GEORouteIncidentIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    uint64_t v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEORouteIncidentIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 30);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_189837218(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189837CA4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189837FEC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORouteInformationReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 68);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 64)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  unsigned int v12 = (vaddv_s16((int16x4_t)(*(void *)&vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int8 *)(a1 + 76)), (uint16x4_t)0xFFFCFFFEFFFDFFFFLL) & 0xFF01FF01FF01FF01))+ (*(unsigned char *)(a1 + 76) & 1)+ ((*(unsigned char *)(a1 + 76) & 0x20) != 0));
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 > 3;
        char v17 = v16 & ~(_BYTE)v11 | v9;
        unsigned __int8 v18 = v16 | v11;
        char v54 = v17;
        char v55 = v18 | v17;
        if ((v18 | v8)) {
          BOOL v19 = 0;
        }
        else {
          BOOL v19 = a3;
        }
        char v20 = (int *)MEMORY[0x1E4F940E8];
        unint64_t v21 = (int *)MEMORY[0x1E4F940C8];
        char v56 = (v19 == 0) | v18;
        BOOL v57 = v18;
        uint64_t v22 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v9;
LABEL_8:
        uint64_t v14 = v10;
        uint64_t v15 = v11;
LABEL_10:
        ++v7;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v21)) {
      goto LABEL_85;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      if (v24++ >= 9)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_25:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_85:
      int v52 = 1;
      goto LABEL_86;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v57;
    if ((v56 & 1) == 0)
    {
      unint64_t v35 = v19;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    switch((int)v33)
    {
      case 1:
        if (!v34) {
          goto LABEL_70;
        }
        if ((*(unsigned char *)(a1 + 76) & 8) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_106;
          }
          int v39 = objc_alloc_init(GEOFormattedString);
          if (GEOFormattedStringReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1))
          {
            PBReaderRecallMark();
            uint64_t v40 = 40;
            goto LABEL_65;
          }
          goto LABEL_105;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_106;
        }
        char v47 = 16 * *(unsigned char *)(a1 + 76);
        goto LABEL_82;
      case 2:
        if (!v34) {
          goto LABEL_70;
        }
        if ((*(unsigned char *)(a1 + 76) & 2) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_106;
          }
          char v47 = *(unsigned char *)(a1 + 76) << 6;
          goto LABEL_82;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_106;
        }
        int v39 = objc_alloc_init(GEOFormattedString);
        if (!GEOFormattedStringReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1)) {
          goto LABEL_105;
        }
        PBReaderRecallMark();
        uint64_t v40 = 24;
        goto LABEL_65;
      case 3:
        if (!v34) {
          goto LABEL_70;
        }
        if ((*(unsigned char *)(a1 + 76) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_106;
          }
          char v47 = 32 * *(unsigned char *)(a1 + 76);
          goto LABEL_82;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_106;
        }
        int v39 = objc_alloc_init(GEOFormattedString);
        if (!GEOFormattedStringReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1)) {
          goto LABEL_105;
        }
        PBReaderRecallMark();
        uint64_t v40 = 32;
        goto LABEL_65;
      case 4:
        if (!v34) {
          goto LABEL_70;
        }
        if ((*(unsigned char *)(a1 + 76) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_106;
          }
          char v47 = 8 * *(unsigned char *)(a1 + 76);
LABEL_82:
          v7 += v47 >> 7;
LABEL_83:
          unint64_t v21 = (int *)MEMORY[0x1E4F940C8];
          goto LABEL_84;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_106;
        }
        int v39 = objc_alloc_init(GEOFormattedString);
        if (GEOFormattedStringReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1))
        {
          PBReaderRecallMark();
          uint64_t v40 = 48;
LABEL_65:
          uint64_t v44 = *(void **)(a1 + v40);
          *(void *)(a1 + v40) = v39;
LABEL_69:

          --v7;
          goto LABEL_83;
        }
LABEL_105:

LABEL_106:
        int v52 = 0;
        unint64_t v53 = &OBJC_IVAR___GEOComposedRoute__visualInfosForRouteNameLabels;
        unint64_t v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_87:
        if (v54) {
LABEL_88:
        }
          *(unsigned char *)(a1 + v53[652]) |= 1u;
        if (v57 || (v52 & 1) == 0)
        {
          *(unsigned char *)(a1 + v53[652]) |= 8u;
          *(unsigned char *)(a1 + v53[652]) |= 2u;
          *(unsigned char *)(a1 + v53[652]) |= 4u;
          *(unsigned char *)(a1 + v53[652]) |= 0x10u;
          *(unsigned char *)(a1 + v53[652]) |= 0x20u;
        }
        else if (v19)
        {
          while (1)
          {
            int v49 = *v19++;
            char v48 = 8;
            switch(v49)
            {
              case 0:
                goto LABEL_99;
              case 1:
                goto LABEL_97;
              case 2:
                char v48 = 2;
                goto LABEL_97;
              case 3:
                char v48 = 4;
                goto LABEL_97;
              case 4:
                char v48 = 16;
                goto LABEL_97;
              case 5:
                char v48 = 32;
LABEL_97:
                *(unsigned char *)(a1 + v53[652]) |= v48;
                break;
              default:
                continue;
            }
          }
        }
LABEL_99:
        if (v52) {
          unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
        }
        else {
          unint64_t v3 = 0;
        }
        if (v57)
        {
          uint64_t v50 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      case 5:
        if (!v34) {
          goto LABEL_70;
        }
        if ((*(unsigned char *)(a1 + 76) & 0x20) == 0)
        {
          uint64_t v45 = PBReaderReadString();
          uint64_t v44 = *(void **)(a1 + 56);
          *(void *)(a1 + 56) = v45;
          goto LABEL_69;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_106;
        }
        char v47 = 4 * *(unsigned char *)(a1 + 76);
        goto LABEL_82;
      default:
        if (v54 & 1) == 0 || (*(unsigned char *)(a1 + 76))
        {
LABEL_70:
          char v46 = PBReaderSkipValueWithTag();
          unint64_t v21 = (int *)MEMORY[0x1E4F940C8];
          if ((v46 & 1) == 0)
          {
            int v52 = 0;
LABEL_86:
            unint64_t v53 = &OBJC_IVAR___GEOComposedRoute__visualInfosForRouteNameLabels;
            goto LABEL_87;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v41 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            uint64_t v42 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v41;
          }
          int v43 = PBUnknownFieldAdd();
          unint64_t v21 = (int *)MEMORY[0x1E4F940C8];
          if (!v43)
          {
            int v52 = 0;
            unint64_t v53 = &OBJC_IVAR___GEOComposedRoute__visualInfosForRouteNameLabels;
            goto LABEL_88;
          }
        }
LABEL_84:
        if (!(v55 & 1 | (v7 != 0))) {
          goto LABEL_85;
        }
        continue;
    }
  }
}

void sub_1898389C0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189838B50(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189838CE0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18983919C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189839288(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORouteInformationCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  [*(id *)(a1 + 40) readAll:1];
  [*(id *)(a1 + 24) readAll:1];
  [*(id *)(a1 + 32) readAll:1];
  int v2 = *(void **)(a1 + 48);

  return [v2 readAll:1];
}

unint64_t GEORouteInformationReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 68))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEORouteInformationReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 72));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 64) = [v8 position];
  *(_DWORD *)(a1 + 68) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEORouteInformationReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEORouteInformationReadAllFrom_initialTag;
  }
  unint64_t Specified = GEORouteInformationReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEORouteInformationCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
  return Specified;
}

void sub_1898397D0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898399C0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORouteInformationIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  unsigned int v2 = *(unsigned __int8 *)(a1 + 76);
  if ((v2 & 0x40) != 0) {
    return 1;
  }
  if ((v2 & 8) != 0)
  {
    if (GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(a1 + 40))) {
      return 1;
    }
    unsigned int v2 = *(unsigned __int8 *)(a1 + 76);
  }
  if ((v2 & 2) != 0)
  {
    if (GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(a1 + 24))) {
      return 1;
    }
    unsigned int v2 = *(unsigned __int8 *)(a1 + 76);
  }
  if ((v2 & 4) == 0) {
    goto LABEL_11;
  }
  if (GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(a1 + 32))) {
    return 1;
  }
  unsigned int v2 = *(unsigned __int8 *)(a1 + 76);
LABEL_11:
  if ((v2 & 0x10) != 0)
  {
    if (GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(a1 + 48))) {
      return 1;
    }
    unsigned int v2 = *(unsigned __int8 *)(a1 + 76);
  }
  return (v2 >> 5) & 1;
}

os_unfair_lock_s *GEORouteInformationIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    uint64_t v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEORouteInformationIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 18);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_189839CC0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORouteLegRangeReadAllFrom(uint64_t a1, void *a2)
{
  unint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    id v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
      while (1)
      {
        if (v3[*v6]) {
          goto LABEL_49;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          goto LABEL_49;
        }
        if ((v10 >> 3) == 18) {
          break;
        }
        if ((v10 >> 3) == 17)
        {
          char v18 = 0;
          unsigned int v19 = 0;
          uint64_t v20 = 0;
          *(unsigned char *)(a1 + 24) |= 2u;
          while (1)
          {
            uint64_t v21 = *v4;
            uint64_t v22 = *(void *)&v3[v21];
            unint64_t v23 = v22 + 1;
            if (v22 == -1 || v23 > *(void *)&v3[*v5])
            {
              uint64_t v26 = &OBJC_IVAR___GEORouteLegRange__startValidDistanceOffsetCm;
              goto LABEL_41;
            }
            char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
            *(void *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0) {
              break;
            }
            v18 += 7;
            BOOL v25 = v19++ > 8;
            if (v25)
            {
              LODWORD(v20) = 0;
              uint64_t v26 = &OBJC_IVAR___GEORouteLegRange__startValidDistanceOffsetCm;
              goto LABEL_44;
            }
          }
          uint64_t v26 = &OBJC_IVAR___GEORouteLegRange__startValidDistanceOffsetCm;
LABEL_42:
          if (v3[*v6]) {
            LODWORD(v20) = 0;
          }
LABEL_44:
          *(_DWORD *)(a1 + *v26) = v20;
          goto LABEL_45;
        }
        if (!*(void *)(a1 + 8))
        {
          id v33 = objc_alloc_init(MEMORY[0x1E4F940B0]);
          BOOL v34 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = v33;
        }
        if ((PBUnknownFieldAdd() & 1) == 0) {
          goto LABEL_50;
        }
LABEL_45:
        if (*(void *)&v3[*v4] >= *(void *)&v3[*v5]) {
          goto LABEL_49;
        }
      }
      char v27 = 0;
      unsigned int v28 = 0;
      uint64_t v20 = 0;
      *(unsigned char *)(a1 + 24) |= 1u;
      while (1)
      {
        uint64_t v29 = *v4;
        uint64_t v30 = *(void *)&v3[v29];
        unint64_t v31 = v30 + 1;
        if (v30 == -1 || v31 > *(void *)&v3[*v5]) {
          break;
        }
        char v32 = *(unsigned char *)(*(void *)&v3[*v7] + v30);
        *(void *)&v3[v29] = v31;
        v20 |= (unint64_t)(v32 & 0x7F) << v27;
        if ((v32 & 0x80) == 0)
        {
          uint64_t v26 = &OBJC_IVAR___GEORouteLegRange__endValidDistanceOffsetCm;
          goto LABEL_42;
        }
        v27 += 7;
        BOOL v25 = v28++ > 8;
        if (v25)
        {
          LODWORD(v20) = 0;
          uint64_t v26 = &OBJC_IVAR___GEORouteLegRange__endValidDistanceOffsetCm;
          goto LABEL_44;
        }
      }
      uint64_t v26 = &OBJC_IVAR___GEORouteLegRange__endValidDistanceOffsetCm;
LABEL_41:
      v3[*v6] = 1;
      goto LABEL_42;
    }
LABEL_49:
    BOOL v35 = v3[*v6] == 0;
  }
  else
  {
LABEL_50:
    BOOL v35 = 0;
  }
  objc_sync_exit(v3);

  return v35;
}

void sub_18983A7E8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORouteLegRangeReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEORouteLegRangeReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18983A84C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18983B07C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORouteLineStyleInfoReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 52);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 48)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  uint64_t v12 = (const __int16 *)(a1 + 76);
  uint16x4_t v13 = (uint16x4_t)vld1_dup_s16(v12);
  int16x4_t v14 = (int16x4_t)vand_s8((int8x8_t)vshl_u16(v13, (uint16x4_t)0xFFFCFFFAFFF9FFFBLL), (int8x8_t)0x1000100010001);
  v14.i16[0] = vaddv_s16(v14);
  unsigned int v15 = v14.i32[0];
  while (2)
  {
    uint64_t v16 = 1;
    uint64_t v17 = 1;
    uint64_t v18 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v15;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v17 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v19 = v15 > 1;
        char v20 = v19 & ~(_BYTE)v11 | v9;
        unsigned __int8 v21 = v19 | v11;
        char v83 = v20;
        char v84 = v8;
        char v85 = v21 | v20;
        if ((v21 | v8)) {
          uint64_t v22 = 0;
        }
        else {
          uint64_t v22 = a3;
        }
        char v86 = (v22 == 0) | v21;
        BOOL v87 = v21;
        unint64_t v23 = (int *)MEMORY[0x1E4F940E8];
        char v24 = (int *)MEMORY[0x1E4F940C8];
        BOOL v25 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v15;
LABEL_7:
        uint64_t v16 = v9;
LABEL_8:
        uint64_t v17 = v10;
        uint64_t v18 = v11;
LABEL_10:
        ++v7;
        uint64_t v9 = v16;
        uint64_t v10 = v17;
        uint64_t v11 = v18;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v23) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v24)) {
      goto LABEL_119;
    }
    char v26 = 0;
    unsigned int v27 = 0;
    unint64_t v28 = 0;
    while (1)
    {
      uint64_t v29 = *v23;
      uint64_t v30 = *(void *)(v3 + v29);
      unint64_t v31 = v30 + 1;
      if (v30 == -1 || v31 > *(void *)(v3 + *v6)) {
        break;
      }
      char v32 = *(unsigned char *)(*(void *)(v3 + *v25) + v30);
      *(void *)(v3 + v29) = v31;
      v28 |= (unint64_t)(v32 & 0x7F) << v26;
      if ((v32 & 0x80) == 0) {
        goto LABEL_25;
      }
      v26 += 7;
      BOOL v33 = v27++ >= 9;
      if (v33)
      {
        unint64_t v28 = 0;
        int v34 = *(unsigned __int8 *)(v3 + *v24);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v24) = 1;
LABEL_25:
    int v34 = *(unsigned __int8 *)(v3 + *v24);
    if (*(unsigned char *)(v3 + *v24)) {
      unint64_t v28 = 0;
    }
LABEL_27:
    if (v34 || (v28 & 7) == 4)
    {
LABEL_119:
      int v81 = 1;
      goto LABEL_120;
    }
    unint64_t v36 = v28 >> 3;
    BOOL v37 = v87;
    if ((v86 & 1) == 0)
    {
      BOOL v38 = v22;
      do
      {
        int v40 = *v38++;
        int v39 = v40;
        BOOL v37 = v40 != 0;
        if (v40) {
          BOOL v41 = v39 == v36;
        }
        else {
          BOOL v41 = 1;
        }
      }
      while (!v41);
    }
    switch((int)v36)
    {
      case 1:
        if ((v84 & 1) == 0) {
          goto LABEL_93;
        }
        char v42 = 0;
        unsigned int v43 = 0;
        uint64_t v44 = 0;
        *(_WORD *)(a1 + 76) |= 2u;
        while (1)
        {
          uint64_t v45 = *v23;
          uint64_t v46 = *(void *)(v3 + v45);
          unint64_t v47 = v46 + 1;
          if (v46 == -1 || v47 > *(void *)(v3 + *v6)) {
            break;
          }
          char v48 = *(unsigned char *)(*(void *)(v3 + *v25) + v46);
          *(void *)(v3 + v45) = v47;
          v44 |= (unint64_t)(v48 & 0x7F) << v42;
          if ((v48 & 0x80) == 0) {
            goto LABEL_96;
          }
          v42 += 7;
          BOOL v33 = v43++ >= 9;
          if (v33)
          {
            LODWORD(v44) = 0;
            goto LABEL_98;
          }
        }
        *(unsigned char *)(v3 + *v24) = 1;
LABEL_96:
        if (*(unsigned char *)(v3 + *v24)) {
          LODWORD(v44) = 0;
        }
LABEL_98:
        uint64_t v75 = 64;
        goto LABEL_107;
      case 2:
        if ((v84 & 1) == 0) {
          goto LABEL_93;
        }
        char v52 = 0;
        unsigned int v53 = 0;
        uint64_t v44 = 0;
        *(_WORD *)(a1 + 76) |= 4u;
        while (2)
        {
          uint64_t v54 = *v23;
          uint64_t v55 = *(void *)(v3 + v54);
          unint64_t v56 = v55 + 1;
          if (v55 == -1 || v56 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v24) = 1;
          }
          else
          {
            char v57 = *(unsigned char *)(*(void *)(v3 + *v25) + v55);
            *(void *)(v3 + v54) = v56;
            v44 |= (unint64_t)(v57 & 0x7F) << v52;
            if (v57 < 0)
            {
              v52 += 7;
              BOOL v33 = v53++ >= 9;
              if (v33)
              {
                LODWORD(v44) = 0;
                goto LABEL_102;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v24)) {
          LODWORD(v44) = 0;
        }
LABEL_102:
        uint64_t v75 = 68;
        goto LABEL_107;
      case 3:
        if ((v84 & 1) == 0) {
          goto LABEL_93;
        }
        char v58 = 0;
        unsigned int v59 = 0;
        uint64_t v44 = 0;
        *(_WORD *)(a1 + 76) |= 1u;
        while (2)
        {
          uint64_t v60 = *v23;
          uint64_t v61 = *(void *)(v3 + v60);
          unint64_t v62 = v61 + 1;
          if (v61 == -1 || v62 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v24) = 1;
          }
          else
          {
            char v63 = *(unsigned char *)(*(void *)(v3 + *v25) + v61);
            *(void *)(v3 + v60) = v62;
            v44 |= (unint64_t)(v63 & 0x7F) << v58;
            if (v63 < 0)
            {
              v58 += 7;
              BOOL v33 = v59++ >= 9;
              if (v33)
              {
                LODWORD(v44) = 0;
                goto LABEL_106;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v24)) {
          LODWORD(v44) = 0;
        }
LABEL_106:
        uint64_t v75 = 60;
LABEL_107:
        *(_DWORD *)(a1 + v75) = v44;
        goto LABEL_118;
      case 4:
        if (!v37) {
          goto LABEL_93;
        }
        if ((*(_WORD *)(a1 + 76) & 0x80) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_137;
          }
          __int16 v76 = *(_WORD *)(a1 + 76) << 8;
          goto LABEL_116;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_137;
        }
        unint64_t v64 = objc_alloc_init(GEOStyleAttributes);
        if (!GEOStyleAttributesReadAllFrom((uint64_t)v64, (void *)v3)) {
          goto LABEL_136;
        }
        PBReaderRecallMark();
        uint64_t v65 = 40;
        goto LABEL_79;
      case 5:
        if (!v37) {
          goto LABEL_93;
        }
        if ((*(_WORD *)(a1 + 76) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_137;
          }
          __int16 v76 = *(_WORD *)(a1 + 76) << 10;
LABEL_116:
          v7 += v76 >> 15;
LABEL_117:
          char v24 = (int *)MEMORY[0x1E4F940C8];
          goto LABEL_118;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_137;
        }
        unint64_t v64 = objc_alloc_init(GEOLabelInfo);
        if (GEOLabelInfoReadAllFrom((uint64_t)v64, (void *)v3, v10 & 1))
        {
          PBReaderRecallMark();
          uint64_t v65 = 24;
LABEL_79:
          char v66 = *(void **)(a1 + v65);
          *(void *)(a1 + v65) = v64;

          --v7;
          goto LABEL_117;
        }
LABEL_136:

LABEL_137:
        int v81 = 0;
        uint64_t v82 = &OBJC_IVAR___GEOComposedRoute__visualInfosForRouteNameLabels;
        char v24 = (int *)MEMORY[0x1E4F940C8];
LABEL_121:
        if (v83) {
LABEL_122:
        }
          *(_WORD *)(a1 + v82[659]) |= 0x10u;
        if (v87 || (v81 & 1) == 0)
        {
          *(_WORD *)(a1 + v82[659]) |= 0x80u;
          *(_WORD *)(a1 + v82[659]) |= 0x20u;
          *(_WORD *)(a1 + v82[659]) |= 0x40u;
        }
        else if (v22)
        {
          while (1)
          {
            int v77 = *v22++;
            __int16 v78 = 128;
            switch(v77)
            {
              case 0:
                goto LABEL_130;
              case 4:
                goto LABEL_129;
              case 5:
                __int16 v78 = 32;
                goto LABEL_129;
              case 7:
                __int16 v78 = 64;
LABEL_129:
                *(_WORD *)(a1 + v82[659]) |= v78;
                break;
              default:
                continue;
            }
          }
        }
LABEL_130:
        if (v81) {
          unint64_t v3 = *(unsigned char *)(v3 + *v24) == 0;
        }
        else {
          unint64_t v3 = 0;
        }
        if (v87)
        {
          unsigned int v79 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      case 6:
        if ((v84 & 1) == 0) {
          goto LABEL_93;
        }
        char v67 = 0;
        unsigned int v68 = 0;
        uint64_t v69 = 0;
        *(_WORD *)(a1 + 76) |= 8u;
        while (2)
        {
          uint64_t v70 = *v23;
          uint64_t v71 = *(void *)(v3 + v70);
          unint64_t v72 = v71 + 1;
          if (v71 == -1 || v72 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v24) = 1;
          }
          else
          {
            char v73 = *(unsigned char *)(*(void *)(v3 + *v25) + v71);
            *(void *)(v3 + v70) = v72;
            v69 |= (unint64_t)(v73 & 0x7F) << v67;
            if (v73 < 0)
            {
              v67 += 7;
              BOOL v33 = v68++ >= 9;
              if (v33)
              {
                uint64_t v69 = 0;
                goto LABEL_111;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v24)) {
          uint64_t v69 = 0;
        }
LABEL_111:
        *(unsigned char *)(a1 + 72) = v69 != 0;
        goto LABEL_118;
      case 7:
        if (!v37 || (*(_WORD *)(a1 + 76) & 0x40) != 0) {
          goto LABEL_93;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_137;
        }
        unint64_t v64 = objc_alloc_init(GEOLaneChangeInfo);
        if (!GEOLaneChangeInfoReadAllFrom((uint64_t)v64, (void *)v3)) {
          goto LABEL_136;
        }
        PBReaderRecallMark();
        -[GEORouteLineStyleInfo _addNoFlagsLaneChangeInfo:](a1, v64);

        goto LABEL_117;
      default:
        if ((v83 & 1) == 0 || (*(_WORD *)(a1 + 76) & 0x10) != 0)
        {
LABEL_93:
          char v74 = PBReaderSkipValueWithTag();
          char v24 = (int *)MEMORY[0x1E4F940C8];
          if ((v74 & 1) == 0)
          {
            int v81 = 0;
LABEL_120:
            uint64_t v82 = &OBJC_IVAR___GEOComposedRoute__visualInfosForRouteNameLabels;
            goto LABEL_121;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v49 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            uint64_t v50 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v49;
          }
          int v51 = PBUnknownFieldAdd();
          char v24 = (int *)MEMORY[0x1E4F940C8];
          if (!v51)
          {
            int v81 = 0;
            uint64_t v82 = &OBJC_IVAR___GEOComposedRoute__visualInfosForRouteNameLabels;
            goto LABEL_122;
          }
        }
LABEL_118:
        if (!(v85 & 1 | (v7 != 0))) {
          goto LABEL_119;
        }
        continue;
    }
  }
}

void sub_18983BB50(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18983BD98(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18983CBE8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEORouteLineStyleInfoCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  [a1[5] readAll:1];
  [a1[3] readAll:1];
  long long v9 = 0u;
  long long v10 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  id v2 = a1[4];
  uint64_t v3 = [v2 countByEnumeratingWithState:&v7 objects:v11 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v8;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v8 != v5) {
          objc_enumerationMutation(v2);
        }
        objc_msgSend(*(id *)(*((void *)&v7 + 1) + 8 * v6++), "readAll:", 1, (void)v7);
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v7 objects:v11 count:16];
    }
    while (v4);
  }
}

unint64_t GEORouteLineStyleInfoReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 52))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEORouteLineStyleInfoReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)long long v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = [v8 position];
  *(_DWORD *)(a1 + 52) = [v8 length];
  if (a3) {
    long long v9 = (int *)&GEORouteLineStyleInfoReadAllFrom_recursiveTag;
  }
  else {
    long long v9 = (int *)&GEORouteLineStyleInfoReadAllFrom_initialTag;
  }
  unint64_t Specified = GEORouteLineStyleInfoReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEORouteLineStyleInfoCallReadAllRecursiveWithoutSynchronized((id *)a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_18983CEA4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORouteLineStyleInfoReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEORouteLineStyleInfoReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18983CF08(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18983D1F0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORouteLineStyleInfoIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  unsigned int v2 = *(unsigned __int16 *)(a1 + 76);
  if ((v2 & 0x180) != 0) {
    return 1;
  }
  if ((v2 & 0x20) != 0)
  {
    if (GEOLabelInfoIsDirty(*(os_unfair_lock_s **)(a1 + 24))) {
      return 1;
    }
    unsigned int v2 = *(unsigned __int16 *)(a1 + 76);
  }
  return (v2 >> 6) & 1;
}

os_unfair_lock_s *GEORouteLineStyleInfoIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    uint64_t v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEORouteLineStyleInfoIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 14);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_18983D7C4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18983DD54(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18983E0EC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORouteNameReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  char v6 = 0;
  uint64_t v7 = 0;
  uint64_t v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  int v11 = ((*(unsigned __int8 *)(a1 + 56) >> 2) & 1)
      + ((*(unsigned __int8 *)(a1 + 56) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 56) >> 1) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v11;
        goto LABEL_8;
      case -3:
        char v6 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v13 = v9;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v15 = v11 != 0;
        char v16 = v15 & ~(_BYTE)v10 | v8;
        unsigned __int8 v17 = v15 | v10;
        char v59 = v16;
        char v60 = v17 | v16;
        if ((v17 | v6)) {
          uint64_t v18 = 0;
        }
        else {
          uint64_t v18 = a3;
        }
        char v61 = (v18 == 0) | v17;
        BOOL v62 = v17;
        BOOL v19 = (int *)MEMORY[0x1E4F940E8];
        char v20 = (int *)MEMORY[0x1E4F940C8];
        unsigned __int8 v21 = (int *)MEMORY[0x1E4F940B8];
        uint64_t v22 = (int *)MEMORY[0x1E4F940E0];
        break;
      default:
        ++v11;
LABEL_7:
        uint64_t v12 = v8;
LABEL_8:
        uint64_t v13 = v9;
        uint64_t v14 = v10;
LABEL_10:
        ++v7;
        uint64_t v8 = v12;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v19) >= *(void *)(v3 + *v22) || *(unsigned char *)(v3 + *v20)) {
      goto LABEL_75;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v19;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v22)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v21) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      BOOL v30 = v24++ >= 9;
      if (v30)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v20);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v20) = 1;
LABEL_25:
    int v31 = *(unsigned __int8 *)(v3 + *v20);
    if (*(unsigned char *)(v3 + *v20)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_75:
      int v57 = 1;
      goto LABEL_76;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v62;
    if ((v61 & 1) == 0)
    {
      BOOL v35 = v18;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    if (v33 == 3) {
      break;
    }
    if (v33 == 2)
    {
      if ((v6 & 1) == 0) {
        goto LABEL_65;
      }
      char v41 = 0;
      unsigned int v42 = 0;
      uint64_t v43 = 0;
      *(unsigned char *)(a1 + 56) |= 1u;
      while (1)
      {
        uint64_t v44 = *v19;
        uint64_t v45 = *(void *)(v3 + v44);
        unint64_t v46 = v45 + 1;
        if (v45 == -1 || v46 > *(void *)(v3 + *v22)) {
          break;
        }
        char v47 = *(unsigned char *)(*(void *)(v3 + *v21) + v45);
        *(void *)(v3 + v44) = v46;
        v43 |= (unint64_t)(v47 & 0x7F) << v41;
        if ((v47 & 0x80) == 0) {
          goto LABEL_68;
        }
        v41 += 7;
        BOOL v30 = v42++ >= 9;
        if (v30)
        {
          LODWORD(v43) = 0;
          goto LABEL_70;
        }
      }
      *(unsigned char *)(v3 + *v20) = 1;
LABEL_68:
      if (*(unsigned char *)(v3 + *v20)) {
        LODWORD(v43) = 0;
      }
LABEL_70:
      *(_DWORD *)(a1 + 52) = v43;
    }
    else
    {
      if (v33 == 1)
      {
        if (!v34) {
          goto LABEL_65;
        }
        if ((*(unsigned char *)(a1 + 56) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_95;
          }
          v7 += *(unsigned __int8 *)(a1 + 56) << 29 >> 31;
        }
        else
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_95;
          }
          int v39 = objc_alloc_init(GEONameInfo);
          if (!GEONameInfoReadAllFrom((uint64_t)v39, (void *)v3, v9 & 1)) {
            goto LABEL_94;
          }
          PBReaderRecallMark();
          int v40 = *(void **)(a1 + 24);
          *(void *)(a1 + 24) = v39;

          --v7;
        }
        goto LABEL_73;
      }
      if ((v59 & 1) == 0 || (*(unsigned char *)(a1 + 56) & 2) != 0) {
        goto LABEL_65;
      }
      if (!*(void *)(a1 + 16))
      {
        id v48 = objc_alloc_init(MEMORY[0x1E4F940B0]);
        id v49 = *(void **)(a1 + 16);
        *(void *)(a1 + 16) = v48;
      }
      int v50 = PBUnknownFieldAdd();
      char v20 = (int *)MEMORY[0x1E4F940C8];
      uint64_t v22 = (int *)MEMORY[0x1E4F940E0];
      if (!v50)
      {
        int v57 = 0;
        char v58 = &OBJC_IVAR___GEOActiveTileGroup__textureChecksums;
        goto LABEL_77;
      }
    }
LABEL_74:
    if (!(v60 & 1 | (v7 != 0))) {
      goto LABEL_75;
    }
  }
  if (!v34 || (*(unsigned char *)(a1 + 56) & 8) != 0)
  {
LABEL_65:
    char v51 = PBReaderSkipValueWithTag();
    uint64_t v22 = (int *)MEMORY[0x1E4F940E0];
    char v20 = (int *)MEMORY[0x1E4F940C8];
    if ((v51 & 1) == 0)
    {
      int v57 = 0;
      goto LABEL_76;
    }
    goto LABEL_74;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_95;
  }
  int v39 = objc_alloc_init(GEORouteLegRange);
  if (GEORouteLegRangeReadAllFrom((uint64_t)v39, (void *)v3))
  {
    PBReaderRecallMark();
    -[GEORouteName _addNoFlagsNameRange:](a1, v39);

LABEL_73:
    char v20 = (int *)MEMORY[0x1E4F940C8];
    uint64_t v22 = (int *)MEMORY[0x1E4F940E0];
    goto LABEL_74;
  }
LABEL_94:

LABEL_95:
  int v57 = 0;
  char v20 = (int *)MEMORY[0x1E4F940C8];
LABEL_76:
  char v58 = &OBJC_IVAR___GEOActiveTileGroup__textureChecksums;
  if ((v59 & 1) == 0) {
    goto LABEL_78;
  }
LABEL_77:
  *(unsigned char *)(a1 + v58[939]) |= 2u;
LABEL_78:
  if (v62 || (v57 & 1) == 0)
  {
    *(unsigned char *)(a1 + v58[939]) |= 4u;
    *(unsigned char *)(a1 + v58[939]) |= 8u;
    goto LABEL_88;
  }
  if (v18)
  {
    while (2)
    {
      while (1)
      {
        int v53 = *v18++;
        int v52 = v53;
        if (v53 == 1) {
          break;
        }
        if (v52 == 3)
        {
          char v54 = 8;
          goto LABEL_87;
        }
        if (!v52) {
          goto LABEL_88;
        }
      }
      char v54 = 4;
LABEL_87:
      *(unsigned char *)(a1 + v58[939]) |= v54;
      continue;
    }
  }
LABEL_88:
  if (v57) {
    unint64_t v3 = *(unsigned char *)(v3 + *v20) == 0;
  }
  else {
    unint64_t v3 = 0;
  }
  if (v62)
  {
    uint64_t v55 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_18983E950(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18983F464(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEORouteNameCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  [*(id *)(a1 + 24) readAll:1];
  long long v9 = 0u;
  long long v10 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  id v2 = *(id *)(a1 + 32);
  uint64_t v3 = [v2 countByEnumeratingWithState:&v7 objects:v11 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v8;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v8 != v5) {
          objc_enumerationMutation(v2);
        }
        objc_msgSend(*(id *)(*((void *)&v7 + 1) + 8 * v6++), "readAll:", 1, (void)v7);
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v7 objects:v11 count:16];
    }
    while (v4);
  }
}

unint64_t GEORouteNameReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEORouteNameReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)long long v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    long long v9 = (int *)&GEORouteNameReadAllFrom_recursiveTag;
  }
  else {
    long long v9 = (int *)&GEORouteNameReadAllFrom_initialTag;
  }
  unint64_t Specified = GEORouteNameReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEORouteNameCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_18983F710(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORouteNameReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEORouteNameReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18983F774(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18983F9D4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORouteNameIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  unsigned int v2 = *(unsigned __int8 *)(a1 + 56);
  if ((v2 & 0x10) != 0) {
    return 1;
  }
  if ((v2 & 4) != 0)
  {
    if (GEONameInfoIsDirty(*(void *)(a1 + 24))) {
      return 1;
    }
    unsigned int v2 = *(unsigned __int8 *)(a1 + 56);
  }
  return (v2 >> 3) & 1;
}

os_unfair_lock_s *GEORouteNameIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    uint64_t v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEORouteNameIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 12);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_18983FE74(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189840228(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189840594(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORoutePlanningInfoReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 96));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 92);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 88)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  unsigned int v12 = *(unsigned __int16 *)(a1 + 100);
  unsigned int v13 = ((v12 >> 7) & 1)
      + (v12 & 1)
      + (unsigned __int16)(vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16((uint16x4_t)vdup_n_s16(v12), (uint16x4_t)0xFFFDFFFCFFFAFFFBLL), (int8x8_t)0x1000100010001))+ ((v12 >> 2) & 1)+ ((v12 >> 1) & 1)+ ((v12 >> 8) & 1));
  while (2)
  {
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    uint64_t v16 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v13;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v15 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v17 = v13 > 5;
        char v18 = v17 & ~(_BYTE)v11 | v9;
        unsigned __int8 v19 = v17 | v11;
        char v53 = v18;
        char v54 = v19 | v18;
        if ((v19 | v8)) {
          char v20 = 0;
        }
        else {
          char v20 = a3;
        }
        char v55 = (v20 == 0) | v19;
        BOOL v56 = v19;
        unsigned __int8 v21 = (int *)MEMORY[0x1E4F940E8];
        uint64_t v22 = (int *)MEMORY[0x1E4F940C8];
        char v23 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v13;
LABEL_7:
        uint64_t v14 = v9;
LABEL_8:
        uint64_t v15 = v10;
        uint64_t v16 = v11;
LABEL_10:
        ++v7;
        uint64_t v9 = v14;
        uint64_t v10 = v15;
        uint64_t v11 = v16;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v21) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v22)) {
      goto LABEL_107;
    }
    char v24 = 0;
    unsigned int v25 = 0;
    unint64_t v26 = 0;
    while (1)
    {
      uint64_t v27 = *v21;
      uint64_t v28 = *(void *)(v3 + v27);
      unint64_t v29 = v28 + 1;
      if (v28 == -1 || v29 > *(void *)(v3 + *v6)) {
        break;
      }
      char v30 = *(unsigned char *)(*(void *)(v3 + *v23) + v28);
      *(void *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0) {
        goto LABEL_25;
      }
      v24 += 7;
      if (v25++ >= 9)
      {
        unint64_t v26 = 0;
        int v32 = *(unsigned __int8 *)(v3 + *v22);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v22) = 1;
LABEL_25:
    int v32 = *(unsigned __int8 *)(v3 + *v22);
    if (*(unsigned char *)(v3 + *v22)) {
      unint64_t v26 = 0;
    }
LABEL_27:
    if (v32 || (v26 & 7) == 4)
    {
LABEL_107:
      int v52 = 1;
      goto LABEL_108;
    }
    unint64_t v34 = v26 >> 3;
    BOOL v35 = v56;
    if ((v55 & 1) == 0)
    {
      int v36 = v20;
      do
      {
        int v38 = *v36++;
        int v37 = v38;
        BOOL v35 = v38 != 0;
        if (v38) {
          BOOL v39 = v37 == v34;
        }
        else {
          BOOL v39 = 1;
        }
      }
      while (!v39);
    }
    switch((int)v34)
    {
      case 1:
        if (!v35) {
          goto LABEL_86;
        }
        if ((*(_WORD *)(a1 + 100) & 0x40) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_130;
          }
          int v40 = objc_alloc_init(GEORouteInformation);
          if (GEORouteInformationReadAllFrom((uint64_t)v40, (void *)v3, v10 & 1))
          {
            PBReaderRecallMark();
            uint64_t v41 = 64;
            goto LABEL_85;
          }
          goto LABEL_129;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_130;
        }
        __int16 v47 = *(_WORD *)(a1 + 100) << 9;
        goto LABEL_104;
      case 2:
        if (!v35) {
          goto LABEL_86;
        }
        if ((*(_WORD *)(a1 + 100) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_130;
          }
          __int16 v47 = *(_WORD *)(a1 + 100) << 10;
          goto LABEL_104;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_130;
        }
        int v40 = objc_alloc_init(GEOFormattedString);
        if (!GEOFormattedStringReadAllFrom((uint64_t)v40, (void *)v3, v10 & 1)) {
          goto LABEL_129;
        }
        PBReaderRecallMark();
        uint64_t v41 = 56;
        goto LABEL_85;
      case 3:
        if (!v35) {
          goto LABEL_86;
        }
        if ((*(_WORD *)(a1 + 100) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_130;
          }
          __int16 v47 = *(_WORD *)(a1 + 100) << 13;
          goto LABEL_104;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_130;
        }
        int v40 = objc_alloc_init(GEOFormattedString);
        if (!GEOFormattedStringReadAllFrom((uint64_t)v40, (void *)v3, v10 & 1)) {
          goto LABEL_129;
        }
        PBReaderRecallMark();
        uint64_t v41 = 32;
        goto LABEL_85;
      case 4:
        if (!v35) {
          goto LABEL_86;
        }
        if ((*(_WORD *)(a1 + 100) & 2) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_130;
          }
          __int16 v47 = *(_WORD *)(a1 + 100) << 14;
          goto LABEL_104;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_130;
        }
        int v40 = objc_alloc_init(GEOAdvisoriesInfo);
        if (!GEOAdvisoriesInfoReadAllFrom((uint64_t)v40, (void *)v3, v10 & 1)) {
          goto LABEL_129;
        }
        PBReaderRecallMark();
        uint64_t v41 = 24;
        goto LABEL_85;
      case 5:
        if (!v35) {
          goto LABEL_86;
        }
        if ((*(_WORD *)(a1 + 100) & 0x100) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_130;
          }
          __int16 v47 = *(_WORD *)(a1 + 100) << 7;
          goto LABEL_104;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_130;
        }
        int v40 = objc_alloc_init(GEOFormattedString);
        if (!GEOFormattedStringReadAllFrom((uint64_t)v40, (void *)v3, v10 & 1)) {
          goto LABEL_129;
        }
        PBReaderRecallMark();
        uint64_t v41 = 80;
        goto LABEL_85;
      case 6:
        if (!v35) {
          goto LABEL_86;
        }
        if ((*(_WORD *)(a1 + 100) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_130;
          }
          __int16 v47 = *(_WORD *)(a1 + 100) << 11;
          goto LABEL_104;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_130;
        }
        int v40 = objc_alloc_init(GEOPBTransitArtwork);
        if (!GEOPBTransitArtworkReadAllFrom((uint64_t)v40, (void *)v3, v10 & 1)) {
          goto LABEL_129;
        }
        PBReaderRecallMark();
        uint64_t v41 = 48;
        goto LABEL_85;
      case 7:
        if (!v35) {
          goto LABEL_86;
        }
        if ((*(_WORD *)(a1 + 100) & 0x80) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_130;
          }
          __int16 v47 = *(_WORD *)(a1 + 100) << 8;
          goto LABEL_104;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_130;
        }
        int v40 = objc_alloc_init(GEOPBTransitArtwork);
        if (!GEOPBTransitArtworkReadAllFrom((uint64_t)v40, (void *)v3, v10 & 1)) {
          goto LABEL_129;
        }
        PBReaderRecallMark();
        uint64_t v41 = 72;
        goto LABEL_85;
      case 8:
        if (!v35) {
          goto LABEL_86;
        }
        if ((*(_WORD *)(a1 + 100) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_130;
          }
          __int16 v47 = *(_WORD *)(a1 + 100) << 12;
LABEL_104:
          v7 += v47 >> 15;
LABEL_105:
          uint64_t v22 = (int *)MEMORY[0x1E4F940C8];
LABEL_106:
          char v23 = (int *)MEMORY[0x1E4F940B8];
          if (!(v54 & 1 | (v7 != 0))) {
            goto LABEL_107;
          }
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_130;
        }
        int v40 = objc_alloc_init(GEOLabelAction);
        if (GEOLabelActionReadAllFrom((uint64_t)v40, (void *)v3))
        {
          PBReaderRecallMark();
          uint64_t v41 = 40;
LABEL_85:
          uint64_t v45 = *(void **)(a1 + v41);
          *(void *)(a1 + v41) = v40;

          --v7;
          goto LABEL_105;
        }
LABEL_129:

LABEL_130:
        int v52 = 0;
        uint64_t v22 = (int *)MEMORY[0x1E4F940C8];
LABEL_108:
        if (v53) {
LABEL_109:
        }
          *(_WORD *)(a1 + 100) |= 1u;
        if (v56 || (v52 & 1) == 0)
        {
          *(_WORD *)(a1 + 100) |= 0x40u;
          *(_WORD *)(a1 + 100) |= 0x20u;
          *(_WORD *)(a1 + 100) |= 0x10u;
          *(_WORD *)(a1 + 100) |= 8u;
          *(_WORD *)(a1 + 100) |= 4u;
          *(_WORD *)(a1 + 100) |= 2u;
          *(_WORD *)(a1 + 100) |= 0x100u;
          *(_WORD *)(a1 + 100) |= 0x80u;
        }
        else if (v20)
        {
          while (1)
          {
            int v49 = *v20++;
            __int16 v48 = 64;
            switch(v49)
            {
              case 0:
                goto LABEL_123;
              case 1:
                goto LABEL_121;
              case 2:
                __int16 v48 = 32;
                goto LABEL_121;
              case 3:
                __int16 v48 = 4;
                goto LABEL_121;
              case 4:
                __int16 v48 = 2;
                goto LABEL_121;
              case 5:
                __int16 v48 = 256;
                goto LABEL_121;
              case 6:
                __int16 v48 = 16;
                goto LABEL_121;
              case 7:
                __int16 v48 = 128;
                goto LABEL_121;
              case 8:
                __int16 v48 = 8;
LABEL_121:
                *(_WORD *)(a1 + 100) |= v48;
                break;
              default:
                continue;
            }
          }
        }
LABEL_123:
        if (v52) {
          unint64_t v3 = *(unsigned char *)(v3 + *v22) == 0;
        }
        else {
          unint64_t v3 = 0;
        }
        if (v56)
        {
          int v50 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      default:
        if (v53 & 1) == 0 || (*(_WORD *)(a1 + 100))
        {
LABEL_86:
          char v46 = PBReaderSkipValueWithTag();
          uint64_t v22 = (int *)MEMORY[0x1E4F940C8];
          if ((v46 & 1) == 0)
          {
            int v52 = 0;
            goto LABEL_108;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v42 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            uint64_t v43 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v42;
          }
          int v44 = PBUnknownFieldAdd();
          uint64_t v22 = (int *)MEMORY[0x1E4F940C8];
          if (!v44)
          {
            int v52 = 0;
            goto LABEL_109;
          }
        }
        goto LABEL_106;
    }
  }
}

void sub_1898410DC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18984124C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898413BC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18984152C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18984169C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189841808(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189841974(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898424C8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORoutePlanningInfoCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  -[GEORouteInformation readAll:](*(void *)(a1 + 64), 1);
  [*(id *)(a1 + 56) readAll:1];
  [*(id *)(a1 + 48) readAll:1];
  [*(id *)(a1 + 40) readAll:1];
  [*(id *)(a1 + 32) readAll:1];
  [*(id *)(a1 + 24) readAll:1];
  [*(id *)(a1 + 80) readAll:1];
  unsigned int v2 = *(void **)(a1 + 72);

  return [v2 readAll:1];
}

unint64_t GEORoutePlanningInfoReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 92))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEORoutePlanningInfoReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 96));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 88) = [v8 position];
  *(_DWORD *)(a1 + 92) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEORoutePlanningInfoReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEORoutePlanningInfoReadAllFrom_initialTag;
  }
  unint64_t Specified = GEORoutePlanningInfoReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEORoutePlanningInfoCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 96));
  return Specified;
}

void sub_189842718(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORoutePlanningInfoReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEORoutePlanningInfoReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18984277C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORoutePlanningInfoIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  unsigned int v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (!a1[*v4])
    {
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 == 2 && PBReaderPlaceMark() && GEORouteInformationIsValid(a1)) {
            goto LABEL_40;
          }
          goto LABEL_43;
        case 2u:
        case 3u:
        case 5u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOFormattedStringIsValid(a1)) {
            goto LABEL_43;
          }
          goto LABEL_40;
        case 4u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOAdvisoriesInfoIsValid(a1)) {
            goto LABEL_43;
          }
          goto LABEL_40;
        case 6u:
        case 7u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPBTransitArtworkIsValid(a1)) {
            goto LABEL_43;
          }
          goto LABEL_40;
        case 8u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOLabelActionIsValid(a1)) {
            goto LABEL_43;
          }
LABEL_40:
          PBReaderRecallMark();
          goto LABEL_41;
        default:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_43:
            PBReaderRecallMark();
            return 0;
          }
LABEL_41:
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_42;
          }
          break;
      }
    }
  }
LABEL_42:
  BOOL v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

void sub_189842C90(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORoutePlanningInfoIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 96));
  __int16 v2 = *(_WORD *)(a1 + 100);
  if ((v2 & 0x200) != 0) {
    return 1;
  }
  if ((v2 & 0x40) != 0)
  {
    if (GEORouteInformationIsDirty(*(os_unfair_lock_s **)(a1 + 64))) {
      return 1;
    }
    __int16 v2 = *(_WORD *)(a1 + 100);
  }
  if ((v2 & 0x20) != 0)
  {
    if (GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(a1 + 56))) {
      return 1;
    }
    __int16 v2 = *(_WORD *)(a1 + 100);
  }
  if ((v2 & 0x10) != 0)
  {
    if (GEOPBTransitArtworkIsDirty(*(os_unfair_lock_s **)(a1 + 48))) {
      return 1;
    }
    __int16 v2 = *(_WORD *)(a1 + 100);
  }
  if ((v2 & 8) != 0) {
    return 1;
  }
  if ((v2 & 4) != 0)
  {
    if (GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(a1 + 32))) {
      return 1;
    }
    __int16 v2 = *(_WORD *)(a1 + 100);
  }
  if ((v2 & 2) == 0) {
    goto LABEL_18;
  }
  if (GEOAdvisoriesInfoIsDirty(*(os_unfair_lock_s **)(a1 + 24))) {
    return 1;
  }
  __int16 v2 = *(_WORD *)(a1 + 100);
LABEL_18:
  if ((v2 & 0x100) != 0)
  {
    if (GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(a1 + 80))) {
      return 1;
    }
    __int16 v2 = *(_WORD *)(a1 + 100);
  }
  if ((v2 & 0x80) == 0) {
    return 0;
  }
  uint64_t v4 = *(os_unfair_lock_s **)(a1 + 72);

  return (uint64_t)GEOPBTransitArtworkIsDirty(v4);
}

os_unfair_lock_s *GEORoutePlanningInfoIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    uint64_t v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEORoutePlanningInfoIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 24);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_189843224(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898436EC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189843C6C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORouteTrafficDetailReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 52);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 48)];
  uint64_t v7 = 0;
  uint64_t v8 = 0;
  char v9 = 0;
  uint64_t v10 = 0;
  unsigned int v11 = vaddv_s16((int16x4_t)(*(void *)&vshl_u16((uint16x4_t)(*(void *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 64)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFFFFFDFFFCFFFELL) & 0xFF01FF01FF01FF01));
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v10])
    {
      case -4:
        ++v11;
        uint64_t v12 = v7;
        goto LABEL_8;
      case -3:
        char v9 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_8;
      case 0:
        BOOL v14 = v11 > 1;
        char v15 = v14 & ~(_BYTE)v7;
        unsigned __int8 v16 = v14 | v7;
        char v58 = v15 | v8;
        char v59 = v16 | v15 | v8;
        if ((v16 | v9)) {
          BOOL v17 = 0;
        }
        else {
          BOOL v17 = a3;
        }
        char v18 = (int *)MEMORY[0x1E4F940E8];
        char v60 = (v17 == 0) | v16;
        BOOL v61 = v16;
        unsigned __int8 v19 = (int *)MEMORY[0x1E4F940C8];
        char v20 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v11;
LABEL_7:
        uint64_t v12 = v7;
        uint64_t v13 = v8;
LABEL_8:
        ++v10;
        uint64_t v7 = v12;
        uint64_t v8 = v13;
        continue;
    }
    break;
  }
  while (*(void *)(v3 + *v18) < *(void *)(v3 + *v6) && !*(unsigned char *)(v3 + *v19))
  {
    char v21 = 0;
    unsigned int v22 = 0;
    unint64_t v23 = 0;
    while (1)
    {
      uint64_t v24 = *v18;
      uint64_t v25 = *(void *)(v3 + v24);
      unint64_t v26 = v25 + 1;
      if (v25 == -1 || v26 > *(void *)(v3 + *v6)) {
        break;
      }
      char v27 = *(unsigned char *)(*(void *)(v3 + *v20) + v25);
      *(void *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0) {
        goto LABEL_23;
      }
      v21 += 7;
      BOOL v28 = v22++ >= 9;
      if (v28)
      {
        unint64_t v23 = 0;
        int v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_25;
      }
    }
    *(unsigned char *)(v3 + *v19) = 1;
LABEL_23:
    int v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(unsigned char *)(v3 + *v19)) {
      unint64_t v23 = 0;
    }
LABEL_25:
    if (v29 || (v23 & 7) == 4) {
      break;
    }
    unint64_t v31 = v23 >> 3;
    BOOL v32 = v61;
    if ((v60 & 1) == 0)
    {
      unint64_t v33 = v17;
      do
      {
        int v35 = *v33++;
        int v34 = v35;
        BOOL v32 = v35 != 0;
        if (v35) {
          BOOL v36 = v34 == v31;
        }
        else {
          BOOL v36 = 1;
        }
      }
      while (!v36);
    }
    switch((int)v31)
    {
      case 1:
        if ((v9 & 1) == 0) {
          goto LABEL_61;
        }
        char v37 = 0;
        unsigned int v38 = 0;
        uint64_t v39 = 0;
        *(unsigned char *)(a1 + 64) |= 1u;
        while (1)
        {
          uint64_t v40 = *v18;
          uint64_t v41 = *(void *)(v3 + v40);
          unint64_t v42 = v41 + 1;
          if (v41 == -1 || v42 > *(void *)(v3 + *v6)) {
            break;
          }
          char v43 = *(unsigned char *)(*(void *)(v3 + *v20) + v41);
          *(void *)(v3 + v40) = v42;
          v39 |= (unint64_t)(v43 & 0x7F) << v37;
          if ((v43 & 0x80) == 0) {
            goto LABEL_64;
          }
          v37 += 7;
          BOOL v28 = v38++ >= 9;
          if (v28)
          {
            LODWORD(v39) = 0;
            goto LABEL_66;
          }
        }
        *(unsigned char *)(v3 + *v19) = 1;
LABEL_64:
        if (*(unsigned char *)(v3 + *v19)) {
          LODWORD(v39) = 0;
        }
LABEL_66:
        *(_DWORD *)(a1 + 60) = v39;
        goto LABEL_74;
      case 2:
        if (!v32) {
          goto LABEL_61;
        }
        if ((*(unsigned char *)(a1 + 64) & 0x10) == 0)
        {
          uint64_t v47 = PBReaderReadString();
          uint64_t v48 = 40;
          goto LABEL_60;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_92;
        }
        char v51 = 8 * *(unsigned char *)(a1 + 64);
        goto LABEL_73;
      case 3:
        if (!v32) {
          goto LABEL_61;
        }
        if ((*(unsigned char *)(a1 + 64) & 4) == 0)
        {
          uint64_t v47 = PBReaderReadString();
          uint64_t v48 = 24;
          goto LABEL_60;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_92;
        }
        char v51 = 32 * *(unsigned char *)(a1 + 64);
        goto LABEL_73;
      case 4:
        if (!v32) {
          goto LABEL_61;
        }
        if ((*(unsigned char *)(a1 + 64) & 8) == 0)
        {
          uint64_t v47 = PBReaderReadString();
          uint64_t v48 = 32;
LABEL_60:
          int v49 = *(void **)(a1 + v48);
          *(void *)(a1 + v48) = v47;

          unsigned __int8 v19 = (int *)MEMORY[0x1E4F940C8];
          --v10;
          goto LABEL_74;
        }
        if (PBReaderSkipValueWithTag())
        {
          char v51 = 16 * *(unsigned char *)(a1 + 64);
LABEL_73:
          v10 += v51 >> 7;
          unsigned __int8 v19 = (int *)MEMORY[0x1E4F940C8];
          goto LABEL_74;
        }
LABEL_92:
        int v56 = 0;
        int v57 = &OBJC_IVAR___GEOComposedRoute__visualInfosForRouteNameLabels;
        unsigned __int8 v19 = (int *)MEMORY[0x1E4F940C8];
LABEL_77:
        if (v58) {
LABEL_78:
        }
          *(unsigned char *)(a1 + v57[662]) |= 2u;
        if (v61 || (v56 & 1) == 0)
        {
          *(unsigned char *)(a1 + v57[662]) |= 0x10u;
          *(unsigned char *)(a1 + v57[662]) |= 4u;
          *(unsigned char *)(a1 + v57[662]) |= 8u;
        }
        else if (v17)
        {
          while (1)
          {
            int v52 = *v17++;
            char v53 = 16;
            switch(v52)
            {
              case 0:
                goto LABEL_86;
              case 2:
                goto LABEL_85;
              case 3:
                char v53 = 4;
                goto LABEL_85;
              case 4:
                char v53 = 8;
LABEL_85:
                *(unsigned char *)(a1 + v57[662]) |= v53;
                break;
              default:
                continue;
            }
          }
        }
LABEL_86:
        if (v56) {
          unint64_t v3 = *(unsigned char *)(v3 + *v19) == 0;
        }
        else {
          unint64_t v3 = 0;
        }
        if (v61)
        {
          char v54 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      default:
        if ((v58 & 1) == 0 || (*(unsigned char *)(a1 + 64) & 2) != 0)
        {
LABEL_61:
          char v50 = PBReaderSkipValueWithTag();
          unsigned __int8 v19 = (int *)MEMORY[0x1E4F940C8];
          if ((v50 & 1) == 0)
          {
            int v56 = 0;
LABEL_76:
            int v57 = &OBJC_IVAR___GEOComposedRoute__visualInfosForRouteNameLabels;
            goto LABEL_77;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v44 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            uint64_t v45 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v44;
          }
          int v46 = PBUnknownFieldAdd();
          unsigned __int8 v19 = (int *)MEMORY[0x1E4F940C8];
          if (!v46)
          {
            int v56 = 0;
            int v57 = &OBJC_IVAR___GEOComposedRoute__visualInfosForRouteNameLabels;
            goto LABEL_78;
          }
        }
LABEL_74:
        if (!(v59 & 1 | (v10 != 0))) {
          goto LABEL_75;
        }
        break;
    }
  }
LABEL_75:
  int v56 = 1;
  goto LABEL_76;
}

void sub_189844468(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898445D4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189844E00(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORouteTrafficDetailReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 52))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEORouteTrafficDetailReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = [v8 position];
  *(_DWORD *)(a1 + 52) = [v8 length];
  if (a3) {
    char v9 = (int *)&GEORouteTrafficDetailReadAllFrom_recursiveTag;
  }
  else {
    char v9 = (int *)&GEORouteTrafficDetailReadAllFrom_initialTag;
  }
  unint64_t Specified = GEORouteTrafficDetailReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_189844F8C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORouteTrafficDetailReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEORouteTrafficDetailReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189844FF0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORouteTrafficDetailIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  __int16 v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (!a1[*v4])
    {
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_40;
          }
          unsigned int v17 = 0;
          do
          {
            uint64_t v18 = *v2;
            uint64_t v19 = *(void *)&a1[v18];
            unint64_t v20 = v19 + 1;
            if (v19 == -1 || v20 > *(void *)&a1[*v3])
            {
              a1[*v4] = 1;
              goto LABEL_35;
            }
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if ((v21 & 0x80000000) == 0) {
              break;
            }
          }
          while (v17++ <= 8);
          goto LABEL_35;
        case 2u:
          if (v15 == 2) {
            goto LABEL_34;
          }
          goto LABEL_40;
        case 3u:
          if (v15 == 2) {
            goto LABEL_34;
          }
          goto LABEL_40;
        case 4u:
          if (v15 != 2) {
            goto LABEL_40;
          }
LABEL_34:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_40:
            BOOL v23 = 0;
            goto LABEL_39;
          }
LABEL_35:
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_38;
          }
          break;
        default:
          if (!PBReaderSkipValueWithTag()) {
            goto LABEL_40;
          }
          goto LABEL_35;
      }
    }
  }
LABEL_38:
  BOOL v23 = a1[*v4] == 0;
LABEL_39:
  PBReaderRecallMark();
  return v23;
}

void sub_18984543C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORouteTrafficDetailIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  BOOL v2 = (*(unsigned char *)(a1 + 64) & 0x3C) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return v2;
}

void sub_1898457B0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189845AE8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOSFSymbolReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          uint64_t v18 = PBReaderReadString();
          uint64_t v19 = *(void **)(a1 + 16);
          *(void *)(a1 + 16) = v18;
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v20 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            int v21 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v20;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_26;
          }
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v22 = v3[*v6] == 0;
  }
  else
  {
LABEL_26:
    BOOL v22 = 0;
  }
  objc_sync_exit(v3);

  return v22;
}

void sub_189846224(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOSFSymbolReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOSFSymbolReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189846288(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOScoreCategoryReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 2)
        {
          *(unsigned char *)(a1 + 28) |= 1u;
          uint64_t v20 = *v4;
          unint64_t v21 = *(void *)&v3[v20];
          if (v21 <= 0xFFFFFFFFFFFFFFFBLL && v21 + 4 <= *(void *)&v3[*v5])
          {
            int v22 = *(_DWORD *)(*(void *)&v3[*v7] + v21);
            *(void *)&v3[v20] = v21 + 4;
          }
          else
          {
            v3[*v6] = 1;
            int v22 = 0;
          }
          *(_DWORD *)(a1 + 24) = v22;
        }
        else if ((v10 >> 3) == 1)
        {
          uint64_t v18 = PBReaderReadString();
          uint64_t v19 = *(void **)(a1 + 16);
          *(void *)(a1 + 16) = v18;
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v23 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            uint64_t v24 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v23;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_33;
          }
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v25 = v3[*v6] == 0;
  }
  else
  {
LABEL_33:
    BOOL v25 = 0;
  }
  objc_sync_exit(v3);

  return v25;
}

void sub_189846D64(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOScoreCategoryReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOScoreCategoryReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189846DC8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOScoreCategoryIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          uint64_t v14 = *v4;
          int v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      uint64_t v14 = *v4;
      int v15 = a1[v14];
      if (a1[v14]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v16 = v8 & 7;
      if (v15 || v16 == 4) {
        break;
      }
      if ((v8 >> 3) == 2)
      {
        if (v16 != 5) {
          goto LABEL_33;
        }
        uint64_t v18 = *v2;
        unint64_t v19 = *(void *)&a1[v18];
        if (v19 <= 0xFFFFFFFFFFFFFFFBLL && (unint64_t v20 = v19 + 4, v20 <= *(void *)&a1[*v3])) {
          *(void *)&a1[v18] = v20;
        }
        else {
          a1[v14] = 1;
        }
      }
      else if ((v8 >> 3) == 1)
      {
        if (v16 != 2 || (PBReaderSkipValueWithTag() & 1) == 0)
        {
LABEL_33:
          BOOL v21 = 0;
          goto LABEL_32;
        }
      }
      else if (!PBReaderSkipValueWithTag())
      {
        goto LABEL_33;
      }
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v21 = a1[*v4] == 0;
LABEL_32:
  PBReaderRecallMark();
  return v21;
}

void sub_189847638(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOSignGuidanceReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 80));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 76);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 72)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  unsigned int v12 = (unsigned __int16)(vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int16 *)(a1 + 92)), (uint16x4_t)0xFFFAFFFBFFF8FFF9), (int8x8_t)0x1000100010001))+ ((*(_WORD *)(a1 + 92) >> 4) & 1)+ ((*(_WORD *)(a1 + 92) >> 3) & 1)+ ((*(_WORD *)(a1 + 92) >> 2) & 1));
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 > 3;
        char v17 = v16 & ~(_BYTE)v11 | v9;
        unsigned __int8 v18 = v16 | v11;
        char v67 = v17;
        char v68 = v18 | v17;
        if ((v18 | v8)) {
          unint64_t v19 = 0;
        }
        else {
          unint64_t v19 = a3;
        }
        unint64_t v20 = (int *)MEMORY[0x1E4F940E8];
        char v69 = (v19 == 0) | v18;
        BOOL v70 = v18;
        BOOL v21 = (int *)MEMORY[0x1E4F940C8];
        int v22 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v9;
LABEL_8:
        uint64_t v14 = v10;
        uint64_t v15 = v11;
LABEL_10:
        ++v7;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v21)) {
      goto LABEL_113;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      BOOL v30 = v24++ >= 9;
      if (v30)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_25:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_113:
      int v65 = 1;
      goto LABEL_114;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v70;
    if ((v69 & 1) == 0)
    {
      int v35 = v19;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    switch((int)v33)
    {
      case 1:
        if (!v34 || (*(_WORD *)(a1 + 92) & 0x100) != 0) {
          goto LABEL_93;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_133;
        }
        uint64_t v39 = objc_alloc_init(GEOFormattedString);
        if (!GEOFormattedStringReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1)) {
          goto LABEL_132;
        }
        PBReaderRecallMark();
        -[GEOSignGuidance _addNoFlagsSignTitle:](a1, v39);
        goto LABEL_54;
      case 2:
        if (!v34 || (*(_WORD *)(a1 + 92) & 0x80) != 0) {
          goto LABEL_93;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_133;
        }
        uint64_t v39 = objc_alloc_init(GEOFormattedString);
        if (!GEOFormattedStringReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1)) {
          goto LABEL_132;
        }
        PBReaderRecallMark();
        -[GEOSignGuidance _addNoFlagsSignDetail:](a1, v39);
        goto LABEL_54;
      case 3:
        if (!v34 || (*(_WORD *)(a1 + 92) & 0x20) != 0) {
          goto LABEL_93;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_133;
        }
        uint64_t v39 = objc_alloc_init(GEOFormattedString);
        if (!GEOFormattedStringReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1)) {
          goto LABEL_132;
        }
        PBReaderRecallMark();
        -[GEOSignGuidance _addNoFlagsSecondarySign:](a1, v39);
LABEL_54:

        goto LABEL_111;
      case 5:
        if ((v8 & 1) == 0) {
          goto LABEL_93;
        }
        char v43 = 0;
        unsigned int v44 = 0;
        uint64_t v45 = 0;
        *(_WORD *)(a1 + 92) |= 1u;
        while (2)
        {
          uint64_t v46 = *v20;
          uint64_t v47 = *(void *)(v3 + v46);
          unint64_t v48 = v47 + 1;
          if (v47 == -1 || v48 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v49 = *(unsigned char *)(*(void *)(v3 + *v22) + v47);
            *(void *)(v3 + v46) = v48;
            v45 |= (unint64_t)(v49 & 0x7F) << v43;
            if (v49 < 0)
            {
              v43 += 7;
              BOOL v30 = v44++ >= 9;
              if (v30)
              {
                LODWORD(v45) = 0;
                goto LABEL_98;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          LODWORD(v45) = 0;
        }
LABEL_98:
        uint64_t v59 = 84;
        goto LABEL_103;
      case 6:
        if (!v34) {
          goto LABEL_93;
        }
        if ((*(_WORD *)(a1 + 92) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_133;
          }
          __int16 v60 = *(_WORD *)(a1 + 92) << 9;
          goto LABEL_110;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_133;
        }
        uint64_t v39 = objc_alloc_init(GEONameInfo);
        if (!GEONameInfoReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1)) {
          goto LABEL_132;
        }
        PBReaderRecallMark();
        uint64_t v50 = 48;
        goto LABEL_92;
      case 7:
        if ((v8 & 1) == 0) {
          goto LABEL_93;
        }
        char v51 = 0;
        unsigned int v52 = 0;
        uint64_t v45 = 0;
        *(_WORD *)(a1 + 92) |= 2u;
        while (2)
        {
          uint64_t v53 = *v20;
          uint64_t v54 = *(void *)(v3 + v53);
          unint64_t v55 = v54 + 1;
          if (v54 == -1 || v55 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v56 = *(unsigned char *)(*(void *)(v3 + *v22) + v54);
            *(void *)(v3 + v53) = v55;
            v45 |= (unint64_t)(v56 & 0x7F) << v51;
            if (v56 < 0)
            {
              v51 += 7;
              BOOL v30 = v52++ >= 9;
              if (v30)
              {
                LODWORD(v45) = 0;
                goto LABEL_102;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          LODWORD(v45) = 0;
        }
LABEL_102:
        uint64_t v59 = 88;
LABEL_103:
        *(_DWORD *)(a1 + v59) = v45;
        goto LABEL_112;
      case 8:
        if (!v34) {
          goto LABEL_93;
        }
        if ((*(_WORD *)(a1 + 92) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_133;
          }
          __int16 v60 = *(_WORD *)(a1 + 92) << 11;
          goto LABEL_110;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_133;
        }
        uint64_t v39 = objc_alloc_init(GEOJunctionInfo);
        if (!GEOJunctionInfoReadAllFrom((uint64_t)v39, (void *)v3)) {
          goto LABEL_132;
        }
        PBReaderRecallMark();
        uint64_t v50 = 32;
        goto LABEL_92;
      case 9:
        if (!v34) {
          goto LABEL_93;
        }
        if ((*(_WORD *)(a1 + 92) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_133;
          }
          __int16 v60 = *(_WORD *)(a1 + 92) << 12;
LABEL_110:
          v7 += v60 >> 15;
LABEL_111:
          BOOL v21 = (int *)MEMORY[0x1E4F940C8];
          int v22 = (int *)MEMORY[0x1E4F940B8];
LABEL_112:
          if (!(v68 & 1 | (v7 != 0))) {
            goto LABEL_113;
          }
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_133;
        }
        uint64_t v39 = objc_alloc_init(GEOPBTransitArtwork);
        if (GEOPBTransitArtworkReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1))
        {
          PBReaderRecallMark();
          uint64_t v50 = 24;
LABEL_92:
          int v57 = *(void **)(a1 + v50);
          *(void *)(a1 + v50) = v39;

          --v7;
          goto LABEL_111;
        }
LABEL_132:

LABEL_133:
        int v65 = 0;
        BOOL v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_114:
        char v66 = &OBJC_IVAR___GEOActiveTileGroup__textureChecksums;
        if (v67) {
LABEL_115:
        }
          *(_WORD *)(a1 + v66[976]) |= 4u;
        if (v70 || (v65 & 1) == 0)
        {
          *(_WORD *)(a1 + v66[976]) |= 0x100u;
          *(_WORD *)(a1 + v66[976]) |= 0x80u;
          *(_WORD *)(a1 + v66[976]) |= 0x20u;
          *(_WORD *)(a1 + v66[976]) |= 0x40u;
          *(_WORD *)(a1 + v66[976]) |= 0x10u;
          *(_WORD *)(a1 + v66[976]) |= 8u;
        }
        else if (v19)
        {
          while (1)
          {
            int v61 = *v19++;
            __int16 v62 = 256;
            switch(v61)
            {
              case 0:
                goto LABEL_126;
              case 1:
                goto LABEL_125;
              case 2:
                __int16 v62 = 128;
                goto LABEL_125;
              case 3:
                __int16 v62 = 32;
                goto LABEL_125;
              case 6:
                __int16 v62 = 64;
                goto LABEL_125;
              case 8:
                __int16 v62 = 16;
                goto LABEL_125;
              case 9:
                __int16 v62 = 8;
LABEL_125:
                *(_WORD *)(a1 + v66[976]) |= v62;
                break;
              default:
                continue;
            }
          }
        }
LABEL_126:
        if (v65) {
          unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
        }
        else {
          unint64_t v3 = 0;
        }
        if (v70)
        {
          char v63 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      default:
        if ((v67 & 1) == 0 || (*(_WORD *)(a1 + 92) & 4) != 0)
        {
LABEL_93:
          char v58 = PBReaderSkipValueWithTag();
          int v22 = (int *)MEMORY[0x1E4F940B8];
          BOOL v21 = (int *)MEMORY[0x1E4F940C8];
          if ((v58 & 1) == 0)
          {
            int v65 = 0;
            goto LABEL_114;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v40 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            uint64_t v41 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v40;
          }
          int v42 = PBUnknownFieldAdd();
          BOOL v21 = (int *)MEMORY[0x1E4F940C8];
          int v22 = (int *)MEMORY[0x1E4F940B8];
          if (!v42)
          {
            int v65 = 0;
            char v66 = &OBJC_IVAR___GEOActiveTileGroup__textureChecksums;
            goto LABEL_115;
          }
        }
        goto LABEL_112;
    }
  }
}

void sub_1898483D4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189848798(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189849AE8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189849CCC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189849E3C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18984B9AC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOSignGuidanceCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  uint64_t v33 = *MEMORY[0x1E4F143B8];
  long long v26 = 0u;
  long long v27 = 0u;
  long long v28 = 0u;
  long long v29 = 0u;
  id v2 = a1[8];
  uint64_t v3 = [v2 countByEnumeratingWithState:&v26 objects:v32 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v27;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v27 != v5) {
          objc_enumerationMutation(v2);
        }
        [*(id *)(*((void *)&v26 + 1) + 8 * v6++) readAll:1];
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v26 objects:v32 count:16];
    }
    while (v4);
  }

  long long v24 = 0u;
  long long v25 = 0u;
  long long v22 = 0u;
  long long v23 = 0u;
  id v7 = a1[7];
  uint64_t v8 = [v7 countByEnumeratingWithState:&v22 objects:v31 count:16];
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)v23;
    do
    {
      uint64_t v11 = 0;
      do
      {
        if (*(void *)v23 != v10) {
          objc_enumerationMutation(v7);
        }
        [*(id *)(*((void *)&v22 + 1) + 8 * v11++) readAll:1];
      }
      while (v9 != v11);
      uint64_t v9 = [v7 countByEnumeratingWithState:&v22 objects:v31 count:16];
    }
    while (v9);
  }

  long long v20 = 0u;
  long long v21 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  id v12 = a1[5];
  uint64_t v13 = [v12 countByEnumeratingWithState:&v18 objects:v30 count:16];
  if (v13)
  {
    uint64_t v14 = v13;
    uint64_t v15 = *(void *)v19;
    do
    {
      uint64_t v16 = 0;
      do
      {
        if (*(void *)v19 != v15) {
          objc_enumerationMutation(v12);
        }
        objc_msgSend(*(id *)(*((void *)&v18 + 1) + 8 * v16++), "readAll:", 1, (void)v18);
      }
      while (v14 != v16);
      uint64_t v14 = [v12 countByEnumeratingWithState:&v18 objects:v30 count:16];
    }
    while (v14);
  }

  [a1[6] readAll:1];
  [a1[4] readAll:1];
  return [a1[3] readAll:1];
}

unint64_t GEOSignGuidanceReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 76))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOSignGuidanceReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 80));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 72) = [v8 position];
  *(_DWORD *)(a1 + 76) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOSignGuidanceReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOSignGuidanceReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOSignGuidanceReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOSignGuidanceCallReadAllRecursiveWithoutSynchronized((id *)a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 80));
  return Specified;
}

void sub_18984BDAC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOSignGuidanceReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOSignGuidanceReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18984BE10(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18984C200(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOSignGuidanceIsDirty(uint64_t a1)
{
  uint64_t v31 = *MEMORY[0x1E4F143B8];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 80));
  __int16 v2 = *(_WORD *)(a1 + 92);
  if ((v2 & 0x3A0) != 0) {
    return 1;
  }
  if ((v2 & 0x40) != 0)
  {
    if (GEONameInfoIsDirty(*(void *)(a1 + 48))) {
      return 1;
    }
    __int16 v2 = *(_WORD *)(a1 + 92);
  }
  if ((v2 & 0x10) == 0)
  {
    if ((v2 & 8) == 0) {
      goto LABEL_11;
    }
    if ((GEOPBTransitArtworkIsDirty(*(os_unfair_lock_s **)(a1 + 24)) & 1) == 0)
    {
      __int16 v2 = *(_WORD *)(a1 + 92);
LABEL_11:
      if ((v2 & 0x100) != 0)
      {
        long long v26 = 0u;
        long long v27 = 0u;
        long long v24 = 0u;
        long long v25 = 0u;
        id v5 = *(id *)(a1 + 64);
        uint64_t v6 = [v5 countByEnumeratingWithState:&v24 objects:v30 count:16];
        if (v6)
        {
          uint64_t v7 = v6;
          uint64_t v8 = *(void *)v25;
LABEL_14:
          uint64_t v9 = 0;
          while (1)
          {
            if (*(void *)v25 != v8) {
              objc_enumerationMutation(v5);
            }
            if (GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(*((void *)&v24 + 1) + 8 * v9))) {
              goto LABEL_42;
            }
            if (v7 == ++v9)
            {
              uint64_t v7 = [v5 countByEnumeratingWithState:&v24 objects:v30 count:16];
              if (v7) {
                goto LABEL_14;
              }
              break;
            }
          }
        }

        __int16 v2 = *(_WORD *)(a1 + 92);
      }
      if ((v2 & 0x80) != 0)
      {
        long long v22 = 0u;
        long long v23 = 0u;
        long long v20 = 0u;
        long long v21 = 0u;
        id v5 = *(id *)(a1 + 56);
        uint64_t v10 = [v5 countByEnumeratingWithState:&v20 objects:v29 count:16];
        if (v10)
        {
          uint64_t v11 = v10;
          uint64_t v12 = *(void *)v21;
LABEL_24:
          uint64_t v13 = 0;
          while (1)
          {
            if (*(void *)v21 != v12) {
              objc_enumerationMutation(v5);
            }
            if (GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(*((void *)&v20 + 1) + 8 * v13))) {
              goto LABEL_42;
            }
            if (v11 == ++v13)
            {
              uint64_t v11 = [v5 countByEnumeratingWithState:&v20 objects:v29 count:16];
              if (v11) {
                goto LABEL_24;
              }
              break;
            }
          }
        }

        __int16 v2 = *(_WORD *)(a1 + 92);
      }
      if ((v2 & 0x20) == 0) {
        return 0;
      }
      long long v18 = 0u;
      long long v19 = 0u;
      long long v16 = 0u;
      long long v17 = 0u;
      id v5 = *(id *)(a1 + 40);
      uint64_t v3 = [v5 countByEnumeratingWithState:&v16 objects:v28 count:16];
      if (!v3)
      {
LABEL_43:

        return v3;
      }
      uint64_t v14 = *(void *)v17;
LABEL_35:
      uint64_t v15 = 0;
      while (1)
      {
        if (*(void *)v17 != v14) {
          objc_enumerationMutation(v5);
        }
        if (GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(*((void *)&v16 + 1) + 8 * v15))) {
          break;
        }
        if (v3 == ++v15)
        {
          uint64_t v3 = [v5 countByEnumeratingWithState:&v16 objects:v28 count:16];
          if (v3) {
            goto LABEL_35;
          }
          goto LABEL_43;
        }
      }
LABEL_42:
      uint64_t v3 = 1;
      goto LABEL_43;
    }
  }
  return 1;
}

os_unfair_lock_s *GEOSignGuidanceIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    uint64_t v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOSignGuidanceIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 20);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_18984CBD8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18984D274(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18984D75C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOSnapScoreMetadataReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 60);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 56)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  unsigned int v12 = (vaddv_s16((int16x4_t)(*(void *)&vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int8 *)(a1 + 68)), (uint16x4_t)0xFFFFFFFEFFFCFFFDLL) & 0xFF01FF01FF01FF01))+ (*(unsigned char *)(a1 + 68) & 1));
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 > 2;
        char v17 = v16 & ~(_BYTE)v11 | v9;
        unsigned __int8 v18 = v16 | v11;
        char v51 = v17;
        char v52 = v18 | v17;
        if ((v18 | v8)) {
          long long v19 = 0;
        }
        else {
          long long v19 = a3;
        }
        char v53 = (v19 == 0) | v18;
        BOOL v54 = v18;
        long long v20 = (int *)MEMORY[0x1E4F940E8];
        long long v21 = (int *)MEMORY[0x1E4F940C8];
        long long v22 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v9;
LABEL_8:
        uint64_t v14 = v10;
        uint64_t v15 = v11;
LABEL_10:
        ++v7;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v21)) {
      goto LABEL_72;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      if (v24++ >= 9)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_25:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_72:
      int v49 = 1;
      goto LABEL_73;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v54;
    if ((v53 & 1) == 0)
    {
      int v35 = v19;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    switch((int)v33)
    {
      case 1:
        if (!v34) {
          goto LABEL_66;
        }
        if ((*(unsigned char *)(a1 + 68) & 0x10) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_90;
          }
          uint64_t v39 = objc_alloc_init(GEOSnapScorePoint);
          if (GEOSnapScorePointReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1))
          {
            PBReaderRecallMark();
            id v40 = *(void **)(a1 + 48);
            *(void *)(a1 + 48) = v39;

            --v7;
            goto LABEL_70;
          }
          goto LABEL_89;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_90;
        }
        v7 += *(unsigned __int8 *)(a1 + 68) << 27 >> 31;
        goto LABEL_70;
      case 2:
        if (!v34 || (*(unsigned char *)(a1 + 68) & 8) != 0) {
          goto LABEL_66;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_90;
        }
        uint64_t v39 = objc_alloc_init(GEOSnapScorePoint);
        if (!GEOSnapScorePointReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1)) {
          goto LABEL_89;
        }
        PBReaderRecallMark();
        -[GEOSnapScoreMetadata _addNoFlagsOriginAccessPoint:](a1, v39);
        goto LABEL_65;
      case 3:
        if (!v34 || (*(unsigned char *)(a1 + 68) & 4) != 0) {
          goto LABEL_66;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_90;
        }
        uint64_t v39 = objc_alloc_init(GEOSnapScorePoint);
        if (!GEOSnapScorePointReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1)) {
          goto LABEL_89;
        }
        PBReaderRecallMark();
        -[GEOSnapScoreMetadata _addNoFlagsDestinationPoint:](a1, v39);
        goto LABEL_65;
      case 4:
        if (!v34 || (*(unsigned char *)(a1 + 68) & 2) != 0) {
          goto LABEL_66;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_90;
        }
        uint64_t v39 = objc_alloc_init(GEOSnapScorePoint);
        if (GEOSnapScorePointReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1))
        {
          PBReaderRecallMark();
          -[GEOSnapScoreMetadata _addNoFlagsDestinationAccessPoint:](a1, v39);
LABEL_65:

LABEL_70:
          long long v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_71:
          if (!(v52 & 1 | (v7 != 0))) {
            goto LABEL_72;
          }
          continue;
        }
LABEL_89:

LABEL_90:
        int v49 = 0;
        long long v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_73:
        uint64_t v50 = &OBJC_IVAR___GEOActiveTileGroup__textureChecksums;
        if (v51) {
LABEL_74:
        }
          *(unsigned char *)(a1 + v50[989]) |= 1u;
        if (v54 || (v49 & 1) == 0)
        {
          *(unsigned char *)(a1 + v50[989]) |= 0x10u;
          *(unsigned char *)(a1 + v50[989]) |= 8u;
          *(unsigned char *)(a1 + v50[989]) |= 4u;
          *(unsigned char *)(a1 + v50[989]) |= 2u;
        }
        else if (v19)
        {
          while (1)
          {
            int v45 = *v19++;
            char v46 = 16;
            switch(v45)
            {
              case 0:
                goto LABEL_83;
              case 1:
                goto LABEL_82;
              case 2:
                char v46 = 8;
                goto LABEL_82;
              case 3:
                char v46 = 4;
                goto LABEL_82;
              case 4:
                char v46 = 2;
LABEL_82:
                *(unsigned char *)(a1 + v50[989]) |= v46;
                break;
              default:
                continue;
            }
          }
        }
LABEL_83:
        if (v49) {
          unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
        }
        else {
          unint64_t v3 = 0;
        }
        if (v54)
        {
          uint64_t v47 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      default:
        if (v51 & 1) == 0 || (*(unsigned char *)(a1 + 68))
        {
LABEL_66:
          char v44 = PBReaderSkipValueWithTag();
          long long v21 = (int *)MEMORY[0x1E4F940C8];
          if ((v44 & 1) == 0)
          {
            int v49 = 0;
            goto LABEL_73;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v41 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            int v42 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v41;
          }
          int v43 = PBUnknownFieldAdd();
          long long v21 = (int *)MEMORY[0x1E4F940C8];
          if (!v43)
          {
            int v49 = 0;
            uint64_t v50 = &OBJC_IVAR___GEOActiveTileGroup__textureChecksums;
            goto LABEL_74;
          }
        }
        goto LABEL_71;
    }
  }
}

void sub_18984DF54(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18984E124(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18984E2F4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18984EAF8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOSnapScoreMetadataCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  uint64_t v32 = *MEMORY[0x1E4F143B8];
  [a1[6] readAll:1];
  long long v27 = 0u;
  long long v28 = 0u;
  long long v25 = 0u;
  long long v26 = 0u;
  id v2 = a1[5];
  uint64_t v3 = [v2 countByEnumeratingWithState:&v25 objects:v31 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v26;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v26 != v5) {
          objc_enumerationMutation(v2);
        }
        [*(id *)(*((void *)&v25 + 1) + 8 * v6++) readAll:1];
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v25 objects:v31 count:16];
    }
    while (v4);
  }

  long long v23 = 0u;
  long long v24 = 0u;
  long long v21 = 0u;
  long long v22 = 0u;
  id v7 = a1[4];
  uint64_t v8 = [v7 countByEnumeratingWithState:&v21 objects:v30 count:16];
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)v22;
    do
    {
      uint64_t v11 = 0;
      do
      {
        if (*(void *)v22 != v10) {
          objc_enumerationMutation(v7);
        }
        [*(id *)(*((void *)&v21 + 1) + 8 * v11++) readAll:1];
      }
      while (v9 != v11);
      uint64_t v9 = [v7 countByEnumeratingWithState:&v21 objects:v30 count:16];
    }
    while (v9);
  }

  long long v19 = 0u;
  long long v20 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  id v12 = a1[3];
  uint64_t v13 = [v12 countByEnumeratingWithState:&v17 objects:v29 count:16];
  if (v13)
  {
    uint64_t v14 = v13;
    uint64_t v15 = *(void *)v18;
    do
    {
      uint64_t v16 = 0;
      do
      {
        if (*(void *)v18 != v15) {
          objc_enumerationMutation(v12);
        }
        objc_msgSend(*(id *)(*((void *)&v17 + 1) + 8 * v16++), "readAll:", 1, (void)v17);
      }
      while (v14 != v16);
      uint64_t v14 = [v12 countByEnumeratingWithState:&v17 objects:v29 count:16];
    }
    while (v14);
  }
}

unint64_t GEOSnapScoreMetadataReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 60))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOSnapScoreMetadataReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = [v8 position];
  *(_DWORD *)(a1 + 60) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOSnapScoreMetadataReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOSnapScoreMetadataReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOSnapScoreMetadataReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOSnapScoreMetadataCallReadAllRecursiveWithoutSynchronized((id *)a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_18984F41C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOSnapScoreMetadataIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (!a1[*v4])
    {
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
        case 2u:
        case 3u:
        case 4u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOSnapScorePointIsValid(a1)) {
            goto LABEL_26;
          }
          PBReaderRecallMark();
          goto LABEL_24;
        default:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_26:
            PBReaderRecallMark();
            return 0;
          }
LABEL_24:
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_25;
          }
          break;
      }
    }
  }
LABEL_25:
  BOOL v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

BOOL GEOSnapScorePointIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_30;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        goto LABEL_30;
      }
      if ((v8 >> 3) == 2) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOLatLngIsValid(a1)) {
          goto LABEL_31;
        }
LABEL_27:
        PBReaderRecallMark();
        goto LABEL_29;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        goto LABEL_31;
      }
LABEL_29:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_30;
      }
    }
    if (v15 != 2 || !PBReaderPlaceMark() || !GEOSnapScoreSegmentIsValid(a1))
    {
LABEL_31:
      PBReaderRecallMark();
      return 0;
    }
    goto LABEL_27;
  }
LABEL_30:
  BOOL v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

void sub_18984FB7C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOSnapScoreMetadataIsDirty(uint64_t a1)
{
  uint64_t v31 = *MEMORY[0x1E4F143B8];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  char v2 = *(unsigned char *)(a1 + 68);
  if ((v2 & 0x20) != 0) {
    return 1;
  }
  if ((*(unsigned char *)(a1 + 68) & 0x10) == 0)
  {
LABEL_5:
    if ((v2 & 0xE) != 0) {
      return 1;
    }
    if ((v2 & 8) != 0)
    {
      long long v26 = 0u;
      long long v27 = 0u;
      long long v24 = 0u;
      long long v25 = 0u;
      id v5 = *(id *)(a1 + 40);
      uint64_t v6 = [v5 countByEnumeratingWithState:&v24 objects:v30 count:16];
      if (v6)
      {
        uint64_t v7 = v6;
        uint64_t v8 = *(void *)v25;
LABEL_11:
        uint64_t v9 = 0;
        while (1)
        {
          if (*(void *)v25 != v8) {
            objc_enumerationMutation(v5);
          }
          if (GEOSnapScorePointIsDirty(*(os_unfair_lock_s **)(*((void *)&v24 + 1) + 8 * v9))) {
            goto LABEL_39;
          }
          if (v7 == ++v9)
          {
            uint64_t v7 = [v5 countByEnumeratingWithState:&v24 objects:v30 count:16];
            if (v7) {
              goto LABEL_11;
            }
            break;
          }
        }
      }

      char v2 = *(unsigned char *)(a1 + 68);
    }
    if ((v2 & 4) != 0)
    {
      long long v22 = 0u;
      long long v23 = 0u;
      long long v20 = 0u;
      long long v21 = 0u;
      id v5 = *(id *)(a1 + 32);
      uint64_t v10 = [v5 countByEnumeratingWithState:&v20 objects:v29 count:16];
      if (v10)
      {
        uint64_t v11 = v10;
        uint64_t v12 = *(void *)v21;
LABEL_21:
        uint64_t v13 = 0;
        while (1)
        {
          if (*(void *)v21 != v12) {
            objc_enumerationMutation(v5);
          }
          if (GEOSnapScorePointIsDirty(*(os_unfair_lock_s **)(*((void *)&v20 + 1) + 8 * v13))) {
            goto LABEL_39;
          }
          if (v11 == ++v13)
          {
            uint64_t v11 = [v5 countByEnumeratingWithState:&v20 objects:v29 count:16];
            if (v11) {
              goto LABEL_21;
            }
            break;
          }
        }
      }

      char v2 = *(unsigned char *)(a1 + 68);
    }
    if ((v2 & 2) == 0) {
      return 0;
    }
    long long v18 = 0u;
    long long v19 = 0u;
    long long v16 = 0u;
    long long v17 = 0u;
    id v5 = *(id *)(a1 + 24);
    uint64_t v3 = [v5 countByEnumeratingWithState:&v16 objects:v28 count:16];
    if (!v3)
    {
LABEL_40:

      return v3;
    }
    uint64_t v14 = *(void *)v17;
LABEL_32:
    uint64_t v15 = 0;
    while (1)
    {
      if (*(void *)v17 != v14) {
        objc_enumerationMutation(v5);
      }
      if (GEOSnapScorePointIsDirty(*(os_unfair_lock_s **)(*((void *)&v16 + 1) + 8 * v15))) {
        break;
      }
      if (v3 == ++v15)
      {
        uint64_t v3 = [v5 countByEnumeratingWithState:&v16 objects:v28 count:16];
        if (v3) {
          goto LABEL_32;
        }
        goto LABEL_40;
      }
    }
LABEL_39:
    uint64_t v3 = 1;
    goto LABEL_40;
  }
  if ((GEOSnapScorePointIsDirty(*(os_unfair_lock_s **)(a1 + 48)) & 1) == 0)
  {
    char v2 = *(unsigned char *)(a1 + 68);
    goto LABEL_5;
  }
  return 1;
}

os_unfair_lock_s *GEOSnapScoreMetadataIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    uint64_t v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOSnapScoreMetadataIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 16);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_1898504B8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189850D88(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOSnapScorePointReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  char v7 = 0;
  uint64_t v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  int v12 = ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1)
      + (*(unsigned char *)(a1 + 52) & 1)
      + ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1);
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v7 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 != 0;
        char v17 = v16 & ~(_BYTE)v11 | v9;
        unsigned __int8 v18 = v16 | v11;
        char v51 = v17;
        char v52 = v18 | v17;
        if ((v18 | v7)) {
          long long v19 = 0;
        }
        else {
          long long v19 = a3;
        }
        long long v20 = (int *)MEMORY[0x1E4F940E8];
        char v53 = (v19 == 0) | v18;
        BOOL v54 = v18;
        long long v21 = (int *)MEMORY[0x1E4F940C8];
        long long v22 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v9;
LABEL_8:
        uint64_t v14 = v10;
        uint64_t v15 = v11;
LABEL_10:
        ++v8;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v21)) {
      goto LABEL_62;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      if (v24++ >= 9)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_25:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_62:
      int v49 = 1;
      goto LABEL_63;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v54;
    if ((v53 & 1) == 0)
    {
      int v35 = v19;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    if (v33 == 2) {
      break;
    }
    if (v33 == 1)
    {
      if (!v34) {
        goto LABEL_56;
      }
      if ((*(unsigned char *)(a1 + 52) & 4) != 0)
      {
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_81;
        }
        v8 += *(unsigned __int8 *)(a1 + 52) << 29 >> 31;
      }
      else
      {
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_81;
        }
        uint64_t v39 = objc_alloc_init(GEOLatLng);
        if (!GEOLatLngReadAllFrom((uint64_t)v39, (void *)v3)) {
          goto LABEL_80;
        }
        PBReaderRecallMark();
        id v40 = *(void **)(a1 + 32);
        *(void *)(a1 + 32) = v39;

        --v8;
      }
      goto LABEL_60;
    }
    if (v51 & 1) == 0 || (*(unsigned char *)(a1 + 52)) {
      goto LABEL_56;
    }
    if (!*(void *)(a1 + 16))
    {
      id v41 = objc_alloc_init(MEMORY[0x1E4F940B0]);
      int v42 = *(void **)(a1 + 16);
      *(void *)(a1 + 16) = v41;
    }
    int v43 = PBUnknownFieldAdd();
    long long v21 = (int *)MEMORY[0x1E4F940C8];
    if (!v43)
    {
      int v49 = 0;
      uint64_t v50 = &OBJC_IVAR___GEOActiveTileGroup__textureChecksums;
      goto LABEL_64;
    }
LABEL_61:
    if (!(v52 & 1 | (v8 != 0))) {
      goto LABEL_62;
    }
  }
  if (!v34 || (*(unsigned char *)(a1 + 52) & 2) != 0)
  {
LABEL_56:
    char v44 = PBReaderSkipValueWithTag();
    long long v21 = (int *)MEMORY[0x1E4F940C8];
    if ((v44 & 1) == 0)
    {
      int v49 = 0;
      goto LABEL_63;
    }
    goto LABEL_61;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_81;
  }
  uint64_t v39 = objc_alloc_init(GEOSnapScoreSegment);
  if (GEOSnapScoreSegmentReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1))
  {
    PBReaderRecallMark();
    -[GEOSnapScorePoint _addNoFlagsCandidate:](a1, v39);

LABEL_60:
    long long v21 = (int *)MEMORY[0x1E4F940C8];
    goto LABEL_61;
  }
LABEL_80:

LABEL_81:
  int v49 = 0;
  long long v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_63:
  uint64_t v50 = &OBJC_IVAR___GEOActiveTileGroup__textureChecksums;
  if ((v51 & 1) == 0) {
    goto LABEL_65;
  }
LABEL_64:
  *(unsigned char *)(a1 + v50[998]) |= 1u;
LABEL_65:
  if (v54 || (v49 & 1) == 0)
  {
    *(unsigned char *)(a1 + v50[998]) |= 4u;
    *(unsigned char *)(a1 + v50[998]) |= 2u;
    goto LABEL_74;
  }
  if (v19)
  {
    while (1)
    {
      int v46 = *v19++;
      int v45 = v46;
      if (v46 == 1) {
        break;
      }
      if (v45 == 2)
      {
LABEL_70:
        *(unsigned char *)(a1 + v50[998]) |= v45;
      }
      else if (!v45)
      {
        goto LABEL_74;
      }
    }
    LOBYTE(v45) = 4;
    goto LABEL_70;
  }
LABEL_74:
  if (v49) {
    unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
  }
  else {
    unint64_t v3 = 0;
  }
  if (v54)
  {
    uint64_t v47 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_189851438(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189851E98(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOSnapScorePointCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  [*(id *)(a1 + 32) readAll:1];
  long long v9 = 0u;
  long long v10 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  id v2 = *(id *)(a1 + 24);
  uint64_t v3 = [v2 countByEnumeratingWithState:&v7 objects:v11 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v8;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v8 != v5) {
          objc_enumerationMutation(v2);
        }
        objc_msgSend(*(id *)(*((void *)&v7 + 1) + 8 * v6++), "readAll:", 1, (void)v7);
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v7 objects:v11 count:16];
    }
    while (v4);
  }
}

unint64_t GEOSnapScorePointReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOSnapScorePointReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)long long v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    long long v9 = (int *)&GEOSnapScorePointReadAllFrom_recursiveTag;
  }
  else {
    long long v9 = (int *)&GEOSnapScorePointReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOSnapScorePointReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOSnapScorePointCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_189852144(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOSnapScorePointReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOSnapScorePointReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1898521A8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOSnapScoreSegmentIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (!a1[*v4])
    {
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          uint64_t v14 = *v4;
          int v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      uint64_t v14 = *v4;
      int v15 = a1[v14];
      if (a1[v14]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v16 = v8 & 7;
      if (v15 || v16 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_47;
          }
          unsigned int v18 = 0;
          do
          {
            uint64_t v19 = *v2;
            uint64_t v20 = *(void *)&a1[v19];
            unint64_t v21 = v20 + 1;
            if (v20 == -1 || v21 > *(void *)&a1[*v3])
            {
              uint64_t v14 = *v4;
              goto LABEL_43;
            }
            int v22 = *(char *)(*(void *)&a1[*v5] + v20);
            *(void *)&a1[v19] = v21;
            if ((v22 & 0x80000000) == 0) {
              break;
            }
          }
          while (v18++ <= 8);
          goto LABEL_44;
        case 2u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOLatLngIsValid(a1)) {
            goto LABEL_47;
          }
          goto LABEL_38;
        case 3u:
          if (v16 != 5) {
            goto LABEL_47;
          }
          uint64_t v24 = *v2;
          unint64_t v25 = *(void *)&a1[v24];
          if (v25 > 0xFFFFFFFFFFFFFFFBLL || (unint64_t v26 = v25 + 4, v26 > *(void *)&a1[*v3])) {
LABEL_43:
          }
            a1[v14] = 1;
          else {
            *(void *)&a1[v24] = v26;
          }
          goto LABEL_44;
        case 4u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOScoreCategoryIsValid(a1)) {
            goto LABEL_47;
          }
LABEL_38:
          PBReaderRecallMark();
          goto LABEL_44;
        case 5u:
          if (v16 == 2) {
            goto LABEL_40;
          }
          goto LABEL_47;
        default:
LABEL_40:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_47:
            PBReaderRecallMark();
            return 0;
          }
LABEL_44:
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_45;
          }
          break;
      }
    }
  }
LABEL_45:
  BOOL v27 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v27;
}

void sub_1898526B0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOSnapScorePointIsDirty(uint64_t a1)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  if ((*(unsigned char *)(a1 + 52) & 0xE) != 0) {
    return 1;
  }
  if ((*(unsigned char *)(a1 + 52) & 2) == 0) {
    return 0;
  }
  long long v9 = 0u;
  long long v10 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  id v3 = *(id *)(a1 + 24);
  uint64_t v2 = [v3 countByEnumeratingWithState:&v7 objects:v11 count:16];
  if (v2)
  {
    uint64_t v4 = *(void *)v8;
    while (2)
    {
      for (uint64_t i = 0; i != v2; ++i)
      {
        if (*(void *)v8 != v4) {
          objc_enumerationMutation(v3);
        }
        if (GEOSnapScoreSegmentIsDirty(*(void *)(*((void *)&v7 + 1) + 8 * i)))
        {
          uint64_t v2 = 1;
          goto LABEL_15;
        }
      }
      uint64_t v2 = [v3 countByEnumeratingWithState:&v7 objects:v11 count:16];
      if (v2) {
        continue;
      }
      break;
    }
  }
LABEL_15:

  return v2;
}

os_unfair_lock_s *GEOSnapScorePointIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    uint64_t v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOSnapScorePointIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 12);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_189852CEC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189853008(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898533E0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOSnapScoreSegmentReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 60);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 56)];
  long long v7 = v6;
  uint64_t v8 = 0;
  char v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  uint64_t v12 = 0;
  unsigned int v13 = vaddv_s16((int16x4_t)(*(void *)&vshl_u16((uint16x4_t)(*(void *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 72)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFEFFFDFFFBFFFCLL) & 0xFF01FF01FF01FF01));
  while (2)
  {
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    uint64_t v16 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v13;
        goto LABEL_8;
      case -3:
        char v9 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v15 = v11;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v17 = v13 > 1;
        char v18 = v17 & ~(_BYTE)v12 | v10;
        unsigned __int8 v19 = v17 | v12;
        char v62 = v18;
        char v63 = v19 | v18;
        if ((v19 | v9)) {
          uint64_t v20 = 0;
        }
        else {
          uint64_t v20 = a3;
        }
        unint64_t v21 = (int *)MEMORY[0x1E4F940E8];
        int v22 = (int *)MEMORY[0x1E4F940C8];
        char v64 = (v20 == 0) | v19;
        BOOL v65 = v19;
        char v23 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v13;
LABEL_7:
        uint64_t v14 = v10;
LABEL_8:
        uint64_t v15 = v11;
        uint64_t v16 = v12;
LABEL_10:
        ++v8;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        uint64_t v12 = v16;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v21) >= *(void *)(v3 + *v7) || *(unsigned char *)(v3 + *v22)) {
      goto LABEL_84;
    }
    char v24 = 0;
    unsigned int v25 = 0;
    unint64_t v26 = 0;
    while (1)
    {
      uint64_t v27 = *v21;
      uint64_t v28 = *(void *)(v3 + v27);
      unint64_t v29 = v28 + 1;
      if (v28 == -1 || v29 > *(void *)(v3 + *v7)) {
        break;
      }
      char v30 = *(unsigned char *)(*(void *)(v3 + *v23) + v28);
      *(void *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0) {
        goto LABEL_25;
      }
      v24 += 7;
      BOOL v31 = v25++ >= 9;
      if (v31)
      {
        unint64_t v26 = 0;
        int v32 = *(unsigned __int8 *)(v3 + *v22);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v22) = 1;
LABEL_25:
    int v32 = *(unsigned __int8 *)(v3 + *v22);
    if (*(unsigned char *)(v3 + *v22)) {
      unint64_t v26 = 0;
    }
LABEL_27:
    if (v32 || (v26 & 7) == 4)
    {
LABEL_84:
      int v60 = 1;
      goto LABEL_85;
    }
    unint64_t v34 = v26 >> 3;
    BOOL v35 = v65;
    if ((v64 & 1) == 0)
    {
      int v36 = v20;
      do
      {
        int v38 = *v36++;
        int v37 = v38;
        BOOL v35 = v38 != 0;
        if (v38) {
          BOOL v39 = v37 == v34;
        }
        else {
          BOOL v39 = 1;
        }
      }
      while (!v39);
    }
    switch((int)v34)
    {
      case 1:
        if ((v9 & 1) == 0) {
          goto LABEL_72;
        }
        char v40 = 0;
        unsigned int v41 = 0;
        uint64_t v42 = 0;
        *(unsigned char *)(a1 + 72) |= 1u;
        while (1)
        {
          uint64_t v43 = *v21;
          uint64_t v44 = *(void *)(v3 + v43);
          unint64_t v45 = v44 + 1;
          if (v44 == -1 || v45 > *(void *)(v3 + *v7)) {
            break;
          }
          char v46 = *(unsigned char *)(*(void *)(v3 + *v23) + v44);
          *(void *)(v3 + v43) = v45;
          v42 |= (unint64_t)(v46 & 0x7F) << v40;
          if ((v46 & 0x80) == 0) {
            goto LABEL_75;
          }
          v40 += 7;
          BOOL v31 = v41++ >= 9;
          if (v31)
          {
            uint64_t v42 = 0;
            goto LABEL_77;
          }
        }
        *(unsigned char *)(v3 + *v22) = 1;
LABEL_75:
        if (*(unsigned char *)(v3 + *v22)) {
          uint64_t v42 = 0;
        }
LABEL_77:
        *(void *)(a1 + 40) = v42;
        goto LABEL_83;
      case 2:
        if (!v35) {
          goto LABEL_72;
        }
        if ((*(unsigned char *)(a1 + 72) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_101;
          }
          v8 += *(unsigned __int8 *)(a1 + 72) << 26 >> 31;
          goto LABEL_80;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_101;
        }
        uint64_t v50 = objc_alloc_init(GEOLatLng);
        if (GEOLatLngReadAllFrom((uint64_t)v50, (void *)v3))
        {
          PBReaderRecallMark();
          char v51 = *(void **)(a1 + 48);
          *(void *)(a1 + 48) = v50;

          --v8;
LABEL_80:
          int v22 = (int *)MEMORY[0x1E4F940C8];
          long long v7 = (int *)MEMORY[0x1E4F940E0];
LABEL_83:
          if (!(v63 & 1 | (v8 != 0))) {
            goto LABEL_84;
          }
          continue;
        }
LABEL_100:

LABEL_101:
        int v60 = 0;
        int v22 = (int *)MEMORY[0x1E4F940C8];
LABEL_85:
        int v61 = &OBJC_IVAR___GEOActiveTileGroup__textureChecksums;
        if (v62) {
LABEL_86:
        }
          *(unsigned char *)(a1 + v61[1007]) |= 4u;
        if (v65 || (v60 & 1) == 0)
        {
          *(unsigned char *)(a1 + v61[1007]) |= 0x20u;
          *(unsigned char *)(a1 + v61[1007]) |= 0x10u;
          *(unsigned char *)(a1 + v61[1007]) |= 8u;
        }
        else if (v20)
        {
          while (1)
          {
            int v56 = *v20++;
            char v57 = 32;
            switch(v56)
            {
              case 0:
                goto LABEL_94;
              case 2:
                goto LABEL_93;
              case 4:
                char v57 = 16;
                goto LABEL_93;
              case 5:
                char v57 = 8;
LABEL_93:
                *(unsigned char *)(a1 + v61[1007]) |= v57;
                break;
              default:
                continue;
            }
          }
        }
LABEL_94:
        if (v60) {
          unint64_t v3 = *(unsigned char *)(v3 + *v22) == 0;
        }
        else {
          unint64_t v3 = 0;
        }
        if (v65)
        {
          char v58 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      case 3:
        if ((v9 & 1) == 0) {
          goto LABEL_72;
        }
        *(unsigned char *)(a1 + 72) |= 2u;
        uint64_t v52 = *v21;
        unint64_t v53 = *(void *)(v3 + v52);
        if (v53 <= 0xFFFFFFFFFFFFFFFBLL && v53 + 4 <= *(void *)(v3 + *v7))
        {
          int v54 = *(_DWORD *)(*(void *)(v3 + *v23) + v53);
          *(void *)(v3 + v52) = v53 + 4;
        }
        else
        {
          *(unsigned char *)(v3 + *v22) = 1;
          int v54 = 0;
        }
        *(_DWORD *)(a1 + 68) = v54;
        goto LABEL_83;
      case 4:
        if (!v35 || (*(unsigned char *)(a1 + 72) & 0x10) != 0) {
          goto LABEL_72;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_101;
        }
        uint64_t v50 = objc_alloc_init(GEOScoreCategory);
        if (!GEOScoreCategoryReadAllFrom((uint64_t)v50, (void *)v3)) {
          goto LABEL_100;
        }
        PBReaderRecallMark();
        -[GEOSnapScoreSegment _addNoFlagsCategoryScore:](a1, v50);
LABEL_71:

        goto LABEL_80;
      case 5:
        if (!v35 || (*(unsigned char *)(a1 + 72) & 8) != 0) {
          goto LABEL_72;
        }
        PBReaderReadString();
        uint64_t v50 = (GEOLatLng *)objc_claimAutoreleasedReturnValue();
        if (v50) {
          -[GEOSnapScoreSegment _addNoFlagsAttribute:](a1, v50);
        }
        goto LABEL_71;
      default:
        if ((v62 & 1) == 0 || (*(unsigned char *)(a1 + 72) & 4) != 0)
        {
LABEL_72:
          char v55 = PBReaderSkipValueWithTag();
          long long v7 = (int *)MEMORY[0x1E4F940E0];
          int v22 = (int *)MEMORY[0x1E4F940C8];
          if ((v55 & 1) == 0)
          {
            int v60 = 0;
            goto LABEL_85;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v47 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            unint64_t v48 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v47;
          }
          int v49 = PBUnknownFieldAdd();
          int v22 = (int *)MEMORY[0x1E4F940C8];
          long long v7 = (int *)MEMORY[0x1E4F940E0];
          if (!v49)
          {
            int v60 = 0;
            int v61 = &OBJC_IVAR___GEOActiveTileGroup__textureChecksums;
            goto LABEL_86;
          }
        }
        goto LABEL_83;
    }
  }
}

void sub_189853D24(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898540E8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189854E08(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOSnapScoreSegmentCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  [*(id *)(a1 + 48) readAll:1];
  long long v9 = 0u;
  long long v10 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  id v2 = *(id *)(a1 + 32);
  uint64_t v3 = [v2 countByEnumeratingWithState:&v7 objects:v11 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v8;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v8 != v5) {
          objc_enumerationMutation(v2);
        }
        objc_msgSend(*(id *)(*((void *)&v7 + 1) + 8 * v6++), "readAll:", 1, (void)v7);
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v7 objects:v11 count:16];
    }
    while (v4);
  }
}

unint64_t GEOSnapScoreSegmentReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 60))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOSnapScoreSegmentReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)long long v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = [v8 position];
  *(_DWORD *)(a1 + 60) = [v8 length];
  if (a3) {
    long long v9 = (int *)&GEOSnapScoreSegmentReadAllFrom_recursiveTag;
  }
  else {
    long long v9 = (int *)&GEOSnapScoreSegmentReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOSnapScoreSegmentReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOSnapScoreSegmentCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_1898550B4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOSnapScoreSegmentReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOSnapScoreSegmentReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189855118(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189855440(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOSnapScoreSegmentIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  BOOL v2 = (*(unsigned char *)(a1 + 72) & 0x78) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return v2;
}

void sub_189855A1C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189855F88(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189856300(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOSpokenGuidanceReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  char v7 = 0;
  uint64_t v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  int v12 = ((*(unsigned __int16 *)(a1 + 84) >> 9) & 1)
      + ((*(unsigned __int16 *)(a1 + 84) >> 10) & 1)
      + (HIBYTE(*(unsigned __int16 *)(a1 + 84)) & 1);
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v7 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 != 0;
        int v17 = v16 & ~v11 | v9;
        int v18 = v16 | v11;
        if (((v16 | v11) | v7)) {
          unsigned __int8 v19 = 0;
        }
        else {
          unsigned __int8 v19 = a3;
        }
        uint64_t v20 = (int *)MEMORY[0x1E4F940E8];
        BOOL v21 = v8 != 0;
        int v22 = 1;
        if (*(void *)(v3 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(v3 + *v6)) {
          goto LABEL_159;
        }
        char v102 = v16 & ~(_BYTE)v11 | v9;
        int v104 = v21 | v18 | v17;
        char v105 = (v19 == 0) | v18;
        char v23 = (int *)MEMORY[0x1E4F940C8];
        char v24 = (int *)MEMORY[0x1E4F940B8];
        char v103 = v16 | v11;
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v9;
LABEL_8:
        uint64_t v14 = v10;
        uint64_t v15 = v11;
LABEL_10:
        ++v8;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(unsigned char *)(v3 + *v23)) {
      goto LABEL_157;
    }
    char v25 = 0;
    unsigned int v26 = 0;
    unint64_t v27 = 0;
    while (1)
    {
      uint64_t v28 = *v20;
      uint64_t v29 = *(void *)(v3 + v28);
      unint64_t v30 = v29 + 1;
      if (v29 == -1 || v30 > *(void *)(v3 + *v6)) {
        break;
      }
      char v31 = *(unsigned char *)(*(void *)(v3 + *v24) + v29);
      *(void *)(v3 + v28) = v30;
      v27 |= (unint64_t)(v31 & 0x7F) << v25;
      if ((v31 & 0x80) == 0) {
        goto LABEL_25;
      }
      v25 += 7;
      BOOL v32 = v26++ >= 9;
      if (v32)
      {
        unint64_t v27 = 0;
        int v33 = *(unsigned __int8 *)(v3 + *v23);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v23) = 1;
LABEL_25:
    int v33 = *(unsigned __int8 *)(v3 + *v23);
    if (*(unsigned char *)(v3 + *v23)) {
      unint64_t v27 = 0;
    }
LABEL_27:
    if (v33 || (v27 & 7) == 4)
    {
LABEL_157:
      int v22 = 1;
      goto LABEL_158;
    }
    unint64_t v35 = v27 >> 3;
    BOOL v36 = v18;
    if ((v105 & 1) == 0)
    {
      int v37 = v19;
      do
      {
        int v39 = *v37++;
        int v38 = v39;
        BOOL v36 = v39 != 0;
        if (v39) {
          BOOL v40 = v38 == v35;
        }
        else {
          BOOL v40 = 1;
        }
      }
      while (!v40);
    }
    switch((int)v35)
    {
      case 1:
        if (!v36 || (*(_WORD *)(a1 + 84) & 0x200) != 0) {
          goto LABEL_120;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_178;
        }
        unsigned int v41 = objc_alloc_init(GEOFormattedString);
        if (!GEOFormattedStringReadAllFrom((uint64_t)v41, (void *)v3, v10 & 1)) {
          goto LABEL_177;
        }
        PBReaderRecallMark();
        -[GEOSpokenGuidance _addNoFlagsAnnouncement:](a1, v41);
        goto LABEL_111;
      case 2:
        if ((v7 & 1) == 0) {
          goto LABEL_120;
        }
        char v42 = 0;
        unsigned int v43 = 0;
        uint64_t v44 = 0;
        *(_WORD *)(a1 + 84) |= 0x40u;
        while (2)
        {
          uint64_t v45 = *v20;
          uint64_t v46 = *(void *)(v3 + v45);
          unint64_t v47 = v46 + 1;
          if (v46 == -1 || v47 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v23) = 1;
          }
          else
          {
            char v48 = *(unsigned char *)(*(void *)(v3 + *v24) + v46);
            *(void *)(v3 + v45) = v47;
            v44 |= (unint64_t)(v48 & 0x7F) << v42;
            if (v48 < 0)
            {
              v42 += 7;
              BOOL v32 = v43++ >= 9;
              if (v32)
              {
                LODWORD(v44) = 0;
                goto LABEL_125;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v23)) {
          LODWORD(v44) = 0;
        }
LABEL_125:
        uint64_t v96 = 76;
        goto LABEL_154;
      case 3:
        if ((v7 & 1) == 0) {
          goto LABEL_120;
        }
        char v49 = 0;
        unsigned int v50 = 0;
        uint64_t v44 = 0;
        *(_WORD *)(a1 + 84) |= 2u;
        while (2)
        {
          uint64_t v51 = *v20;
          uint64_t v52 = *(void *)(v3 + v51);
          unint64_t v53 = v52 + 1;
          if (v52 == -1 || v53 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v23) = 1;
          }
          else
          {
            char v54 = *(unsigned char *)(*(void *)(v3 + *v24) + v52);
            *(void *)(v3 + v51) = v53;
            v44 |= (unint64_t)(v54 & 0x7F) << v49;
            if (v54 < 0)
            {
              v49 += 7;
              BOOL v32 = v50++ >= 9;
              if (v32)
              {
                LODWORD(v44) = 0;
                goto LABEL_129;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v23)) {
          LODWORD(v44) = 0;
        }
LABEL_129:
        uint64_t v96 = 56;
        goto LABEL_154;
      case 4:
        if ((v7 & 1) == 0) {
          goto LABEL_120;
        }
        char v55 = 0;
        unsigned int v56 = 0;
        uint64_t v44 = 0;
        *(_WORD *)(a1 + 84) |= 1u;
        while (2)
        {
          uint64_t v57 = *v20;
          uint64_t v58 = *(void *)(v3 + v57);
          unint64_t v59 = v58 + 1;
          if (v58 == -1 || v59 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v23) = 1;
          }
          else
          {
            char v60 = *(unsigned char *)(*(void *)(v3 + *v24) + v58);
            *(void *)(v3 + v57) = v59;
            v44 |= (unint64_t)(v60 & 0x7F) << v55;
            if (v60 < 0)
            {
              v55 += 7;
              BOOL v32 = v56++ >= 9;
              if (v32)
              {
                LODWORD(v44) = 0;
                goto LABEL_133;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v23)) {
          LODWORD(v44) = 0;
        }
LABEL_133:
        uint64_t v96 = 52;
        goto LABEL_154;
      case 5:
        if ((v7 & 1) == 0) {
          goto LABEL_120;
        }
        char v61 = 0;
        unsigned int v62 = 0;
        uint64_t v44 = 0;
        *(_WORD *)(a1 + 84) |= 0x20u;
        while (2)
        {
          uint64_t v63 = *v20;
          uint64_t v64 = *(void *)(v3 + v63);
          unint64_t v65 = v64 + 1;
          if (v64 == -1 || v65 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v23) = 1;
          }
          else
          {
            char v66 = *(unsigned char *)(*(void *)(v3 + *v24) + v64);
            *(void *)(v3 + v63) = v65;
            v44 |= (unint64_t)(v66 & 0x7F) << v61;
            if (v66 < 0)
            {
              v61 += 7;
              BOOL v32 = v62++ >= 9;
              if (v32)
              {
                LODWORD(v44) = 0;
                goto LABEL_137;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v23)) {
          LODWORD(v44) = 0;
        }
LABEL_137:
        uint64_t v96 = 72;
        goto LABEL_154;
      case 6:
        if ((v7 & 1) == 0) {
          goto LABEL_120;
        }
        char v67 = 0;
        unsigned int v68 = 0;
        uint64_t v44 = 0;
        *(_WORD *)(a1 + 84) |= 0x10u;
        while (2)
        {
          uint64_t v69 = *v20;
          uint64_t v70 = *(void *)(v3 + v69);
          unint64_t v71 = v70 + 1;
          if (v70 == -1 || v71 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v23) = 1;
          }
          else
          {
            char v72 = *(unsigned char *)(*(void *)(v3 + *v24) + v70);
            *(void *)(v3 + v69) = v71;
            v44 |= (unint64_t)(v72 & 0x7F) << v67;
            if (v72 < 0)
            {
              v67 += 7;
              BOOL v32 = v68++ >= 9;
              if (v32)
              {
                LODWORD(v44) = 0;
                goto LABEL_141;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v23)) {
          LODWORD(v44) = 0;
        }
LABEL_141:
        uint64_t v96 = 68;
        goto LABEL_154;
      case 7:
        if ((v7 & 1) == 0) {
          goto LABEL_120;
        }
        char v73 = 0;
        unsigned int v74 = 0;
        uint64_t v44 = 0;
        *(_WORD *)(a1 + 84) |= 8u;
        while (2)
        {
          uint64_t v75 = *v20;
          uint64_t v76 = *(void *)(v3 + v75);
          unint64_t v77 = v76 + 1;
          if (v76 == -1 || v77 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v23) = 1;
          }
          else
          {
            char v78 = *(unsigned char *)(*(void *)(v3 + *v24) + v76);
            *(void *)(v3 + v75) = v77;
            v44 |= (unint64_t)(v78 & 0x7F) << v73;
            if (v78 < 0)
            {
              v73 += 7;
              BOOL v32 = v74++ >= 9;
              if (v32)
              {
                LODWORD(v44) = 0;
                goto LABEL_145;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v23)) {
          LODWORD(v44) = 0;
        }
LABEL_145:
        uint64_t v96 = 64;
        goto LABEL_154;
      case 9:
        if ((v7 & 1) == 0) {
          goto LABEL_120;
        }
        char v82 = 0;
        unsigned int v83 = 0;
        uint64_t v84 = 0;
        *(_WORD *)(a1 + 84) |= 0x80u;
        while (2)
        {
          uint64_t v85 = *v20;
          uint64_t v86 = *(void *)(v3 + v85);
          unint64_t v87 = v86 + 1;
          if (v86 == -1 || v87 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v23) = 1;
          }
          else
          {
            char v88 = *(unsigned char *)(*(void *)(v3 + *v24) + v86);
            *(void *)(v3 + v85) = v87;
            v84 |= (unint64_t)(v88 & 0x7F) << v82;
            if (v88 < 0)
            {
              v82 += 7;
              BOOL v32 = v83++ >= 9;
              if (v32)
              {
                uint64_t v84 = 0;
                goto LABEL_149;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v23)) {
          uint64_t v84 = 0;
        }
LABEL_149:
        *(unsigned char *)(a1 + 80) = v84 != 0;
        goto LABEL_155;
      case 10:
        if (!v36 || (*(_WORD *)(a1 + 84) & 0x400) != 0) {
          goto LABEL_120;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_178;
        }
        unsigned int v41 = objc_alloc_init(GEOTimeGap);
        if (!GEOTimeGapReadAllFrom((uint64_t)v41, (void *)v3))
        {
LABEL_177:

LABEL_178:
          int v22 = 0;
          LOBYTE(v18) = v103;
          goto LABEL_158;
        }
        PBReaderRecallMark();
        -[GEOSpokenGuidance _addNoFlagsTimeGap:](a1, v41);
LABEL_111:

        LOBYTE(v18) = v103;
        char v23 = (int *)MEMORY[0x1E4F940C8];
        goto LABEL_155;
      case 11:
        if ((v7 & 1) == 0) {
          goto LABEL_120;
        }
        char v89 = 0;
        unsigned int v90 = 0;
        uint64_t v44 = 0;
        *(_WORD *)(a1 + 84) |= 4u;
        while (2)
        {
          uint64_t v91 = *v20;
          uint64_t v92 = *(void *)(v3 + v91);
          unint64_t v93 = v92 + 1;
          if (v92 == -1 || v93 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v23) = 1;
          }
          else
          {
            char v94 = *(unsigned char *)(*(void *)(v3 + *v24) + v92);
            *(void *)(v3 + v91) = v93;
            v44 |= (unint64_t)(v94 & 0x7F) << v89;
            if (v94 < 0)
            {
              v89 += 7;
              BOOL v32 = v90++ >= 9;
              if (v32)
              {
                LODWORD(v44) = 0;
                goto LABEL_153;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v23)) {
          LODWORD(v44) = 0;
        }
LABEL_153:
        uint64_t v96 = 60;
LABEL_154:
        *(_DWORD *)(a1 + v96) = v44;
        goto LABEL_155;
      default:
        if ((v102 & 1) != 0 && (*(_WORD *)(a1 + 84) & 0x100) == 0)
        {
          if (!*(void *)(a1 + 16))
          {
            id v79 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            uint64_t v80 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v79;
          }
          int v81 = PBUnknownFieldAdd();
          LOBYTE(v18) = v103;
          char v23 = (int *)MEMORY[0x1E4F940C8];
          if (!v81)
          {
            int v22 = 0;
            goto LABEL_160;
          }
LABEL_155:
          if ((v104 & 1) == 0) {
            goto LABEL_157;
          }
LABEL_156:
          if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6)) {
            goto LABEL_157;
          }
          continue;
        }
LABEL_120:
        int v95 = PBReaderSkipValueWithTag();
        char v23 = (int *)MEMORY[0x1E4F940C8];
        LOBYTE(v18) = v103;
        if (v95 & v104) {
          goto LABEL_156;
        }
        int v22 = v95;
LABEL_158:
        LOBYTE(v17) = v102;
LABEL_159:
        if (v17) {
LABEL_160:
        }
          *(_WORD *)(a1 + 84) |= 0x100u;
        if (v18 & 1 | ((v22 & 1) == 0))
        {
          *(_WORD *)(a1 + 84) |= 0x200u;
          *(_WORD *)(a1 + 84) |= 0x400u;
          goto LABEL_171;
        }
        if (v19)
        {
          while (2)
          {
            while (1)
            {
              int v98 = *v19++;
              int v97 = v98;
              if (v98 == 1) {
                break;
              }
              if (v97 == 10)
              {
                __int16 v99 = 1024;
                goto LABEL_170;
              }
              if (!v97) {
                goto LABEL_171;
              }
            }
            __int16 v99 = 512;
LABEL_170:
            *(_WORD *)(a1 + 84) |= v99;
            continue;
          }
        }
LABEL_171:
        if (v22)
        {
          unint64_t v3 = *(unsigned char *)(v3 + (int)*MEMORY[0x1E4F940C8]) == 0;
          if ((v18 & 1) == 0) {
            return v3;
          }
LABEL_175:
          uint64_t v100 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        else
        {
          unint64_t v3 = 0;
          if (v18) {
            goto LABEL_175;
          }
        }
        return v3;
    }
  }
}

void sub_1898576A0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189858908(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOSpokenGuidanceCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v22 = *MEMORY[0x1E4F143B8];
  long long v16 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  id v2 = *(id *)(a1 + 24);
  uint64_t v3 = [v2 countByEnumeratingWithState:&v16 objects:v21 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v17;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v17 != v5) {
          objc_enumerationMutation(v2);
        }
        [*(id *)(*((void *)&v16 + 1) + 8 * v6++) readAll:1];
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v16 objects:v21 count:16];
    }
    while (v4);
  }

  long long v14 = 0u;
  long long v15 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  id v7 = *(id *)(a1 + 32);
  uint64_t v8 = [v7 countByEnumeratingWithState:&v12 objects:v20 count:16];
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)v13;
    do
    {
      uint64_t v11 = 0;
      do
      {
        if (*(void *)v13 != v10) {
          objc_enumerationMutation(v7);
        }
        objc_msgSend(*(id *)(*((void *)&v12 + 1) + 8 * v11++), "readAll:", 1, (void)v12);
      }
      while (v9 != v11);
      uint64_t v9 = [v7 countByEnumeratingWithState:&v12 objects:v20 count:16];
    }
    while (v9);
  }
}

unint64_t GEOSpokenGuidanceReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOSpokenGuidanceReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOSpokenGuidanceReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOSpokenGuidanceReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOSpokenGuidanceReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOSpokenGuidanceCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_189858C38(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOSpokenGuidanceReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOSpokenGuidanceReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189858C9C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOTimeGapIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_48;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      if (v14 || (v8 & 7) == 4) {
        goto LABEL_48;
      }
      unint64_t v16 = v8 >> 3;
      if ((v8 >> 3) == 3) {
        break;
      }
      if (v16 == 2)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_50;
        }
        unsigned int v28 = 0;
        while (1)
        {
          uint64_t v29 = *v2;
          uint64_t v30 = *(void *)&a1[v29];
          unint64_t v31 = v30 + 1;
          if (v30 == -1 || v31 > *(void *)&a1[*v3]) {
            goto LABEL_45;
          }
          int v32 = *(char *)(*(void *)&a1[*v5] + v30);
          *(void *)&a1[v29] = v31;
          if (v32 < 0)
          {
            BOOL v22 = v28++ > 8;
            if (!v22) {
              continue;
            }
          }
          goto LABEL_47;
        }
      }
      if (v16 == 1)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_50;
        }
        unsigned int v17 = 0;
        while (1)
        {
          uint64_t v18 = *v2;
          uint64_t v19 = *(void *)&a1[v18];
          unint64_t v20 = v19 + 1;
          if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
            break;
          }
          int v21 = *(char *)(*(void *)&a1[*v5] + v19);
          *(void *)&a1[v18] = v20;
          if (v21 < 0)
          {
            BOOL v22 = v17++ > 8;
            if (!v22) {
              continue;
            }
          }
          goto LABEL_47;
        }
LABEL_45:
        a1[*v4] = 1;
        goto LABEL_47;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_50:
        BOOL v33 = 0;
        goto LABEL_49;
      }
LABEL_47:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_48;
      }
    }
    if ((v8 & 7) != 0) {
      goto LABEL_50;
    }
    unsigned int v23 = 0;
    while (1)
    {
      uint64_t v24 = *v2;
      uint64_t v25 = *(void *)&a1[v24];
      unint64_t v26 = v25 + 1;
      if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
        goto LABEL_45;
      }
      int v27 = *(char *)(*(void *)&a1[*v5] + v25);
      *(void *)&a1[v24] = v26;
      if (v27 < 0)
      {
        BOOL v22 = v23++ > 8;
        if (!v22) {
          continue;
        }
      }
      goto LABEL_47;
    }
  }
LABEL_48:
  BOOL v33 = a1[*v4] == 0;
LABEL_49:
  PBReaderRecallMark();
  return v33;
}

void sub_1898592F8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOSpokenGuidanceIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  BOOL v2 = (*(_WORD *)(a1 + 84) & 0xE00) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return v2;
}

void sub_189859A38(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18985A1A4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18985B9F4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t GEOStepReadSpecified(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 168));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 164);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 160)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  unint64_t v12 = *(void *)(a1 + 244);
  unsigned int v13 = vaddvq_s32((int32x4_t)(*(_OWORD *)&vshlq_u32((uint32x4_t)vdupq_n_s32(v12), (uint32x4_t)xmmword_18A633FE0) & __PAIR128__(0xFFFFFFC1FFFFFFC1, 0xFFFFFFC1FFFFFFC1)))
      + (BYTE3(v12) & 1)
      + ((v12 >> 33) & 1)
      + ((v12 >> 36) & 1)
      + ((v12 >> 29) & 1)
      + (BYTE4(v12) & 1)
      + ((v12 >> 34) & 1)
      + ((v12 >> 38) & 1)
      + ((v12 >> 25) & 1)
      + ((v12 >> 37) & 1)
      + ((v12 >> 35) & 1)
      + ((v12 >> 23) & 1)
      + (v12 >> 31);
  while (2)
  {
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    uint64_t v16 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v13;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v15 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v17 = v13 > 0xB;
        char v18 = v17 | v11;
        char v201 = v17 & ~(_BYTE)v11 | v9;
        char v202 = v8;
        char v204 = v17 | v11 | v201;
        if (((v17 | v11) | v8)) {
          uint64_t v19 = 0;
        }
        else {
          uint64_t v19 = a3;
        }
        char v205 = (v19 == 0) | v18;
        unint64_t v20 = (int *)MEMORY[0x1E4F940E8];
        int v21 = (int *)MEMORY[0x1E4F940C8];
        BOOL v22 = (int *)MEMORY[0x1E4F940B8];
        char v203 = v17 | v11;
        break;
      default:
        ++v13;
LABEL_7:
        uint64_t v14 = v9;
LABEL_8:
        uint64_t v15 = v10;
        uint64_t v16 = v11;
LABEL_10:
        ++v7;
        uint64_t v9 = v14;
        uint64_t v10 = v15;
        uint64_t v11 = v16;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v21)) {
      goto LABEL_418;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      BOOL v30 = v24++ >= 9;
      if (v30)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_25:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_418:
      int v200 = 1;
      goto LABEL_419;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v18;
    if ((v205 & 1) == 0)
    {
      unint64_t v35 = v19;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    switch((int)v33)
    {
      case 1:
        if ((v202 & 1) == 0) {
          goto LABEL_300;
        }
        char v39 = 0;
        unsigned int v40 = 0;
        uint64_t v41 = 0;
        *(void *)(a1 + 244) |= 0x4000uLL;
        while (1)
        {
          uint64_t v42 = *v20;
          uint64_t v43 = *(void *)(v3 + v42);
          unint64_t v44 = v43 + 1;
          if (v43 == -1 || v44 > *(void *)(v3 + *v6)) {
            break;
          }
          char v45 = *(unsigned char *)(*(void *)(v3 + *v22) + v43);
          *(void *)(v3 + v42) = v44;
          v41 |= (unint64_t)(v45 & 0x7F) << v39;
          if ((v45 & 0x80) == 0) {
            goto LABEL_303;
          }
          v39 += 7;
          BOOL v30 = v40++ >= 9;
          if (v30)
          {
            LODWORD(v41) = 0;
            goto LABEL_305;
          }
        }
        *(unsigned char *)(v3 + *v21) = 1;
LABEL_303:
        if (*(unsigned char *)(v3 + *v21)) {
          LODWORD(v41) = 0;
        }
LABEL_305:
        uint64_t v191 = 228;
        goto LABEL_391;
      case 2:
        if ((v202 & 1) == 0) {
          goto LABEL_300;
        }
        char v46 = 0;
        unsigned int v47 = 0;
        uint64_t v41 = 0;
        *(void *)(a1 + 244) |= 0x80uLL;
        while (2)
        {
          uint64_t v48 = *v20;
          uint64_t v49 = *(void *)(v3 + v48);
          unint64_t v50 = v49 + 1;
          if (v49 == -1 || v50 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v51 = *(unsigned char *)(*(void *)(v3 + *v22) + v49);
            *(void *)(v3 + v48) = v50;
            v41 |= (unint64_t)(v51 & 0x7F) << v46;
            if (v51 < 0)
            {
              v46 += 7;
              BOOL v30 = v47++ >= 9;
              if (v30)
              {
                LODWORD(v41) = 0;
                goto LABEL_309;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          LODWORD(v41) = 0;
        }
LABEL_309:
        uint64_t v191 = 200;
        goto LABEL_391;
      case 3:
        if ((v202 & 1) == 0) {
          goto LABEL_300;
        }
        char v52 = 0;
        unsigned int v53 = 0;
        uint64_t v41 = 0;
        *(void *)(a1 + 244) |= 0x200uLL;
        while (2)
        {
          uint64_t v54 = *v20;
          uint64_t v55 = *(void *)(v3 + v54);
          unint64_t v56 = v55 + 1;
          if (v55 == -1 || v56 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v57 = *(unsigned char *)(*(void *)(v3 + *v22) + v55);
            *(void *)(v3 + v54) = v56;
            v41 |= (unint64_t)(v57 & 0x7F) << v52;
            if (v57 < 0)
            {
              v52 += 7;
              BOOL v30 = v53++ >= 9;
              if (v30)
              {
                LODWORD(v41) = 0;
                goto LABEL_313;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          LODWORD(v41) = 0;
        }
LABEL_313:
        uint64_t v191 = 208;
        goto LABEL_391;
      case 4:
        if ((v202 & 1) == 0) {
          goto LABEL_300;
        }
        char v58 = 0;
        unsigned int v59 = 0;
        uint64_t v41 = 0;
        *(void *)(a1 + 244) |= 0x100uLL;
        while (2)
        {
          uint64_t v60 = *v20;
          uint64_t v61 = *(void *)(v3 + v60);
          unint64_t v62 = v61 + 1;
          if (v61 == -1 || v62 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v63 = *(unsigned char *)(*(void *)(v3 + *v22) + v61);
            *(void *)(v3 + v60) = v62;
            v41 |= (unint64_t)(v63 & 0x7F) << v58;
            if (v63 < 0)
            {
              v58 += 7;
              BOOL v30 = v59++ >= 9;
              if (v30)
              {
                LODWORD(v41) = 0;
                goto LABEL_317;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          LODWORD(v41) = 0;
        }
LABEL_317:
        uint64_t v191 = 204;
        goto LABEL_391;
      case 5:
        if ((v202 & 1) == 0) {
          goto LABEL_300;
        }
        char v64 = 0;
        unsigned int v65 = 0;
        uint64_t v41 = 0;
        *(void *)(a1 + 244) |= 8uLL;
        while (2)
        {
          uint64_t v66 = *v20;
          uint64_t v67 = *(void *)(v3 + v66);
          unint64_t v68 = v67 + 1;
          if (v67 == -1 || v68 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v69 = *(unsigned char *)(*(void *)(v3 + *v22) + v67);
            *(void *)(v3 + v66) = v68;
            v41 |= (unint64_t)(v69 & 0x7F) << v64;
            if (v69 < 0)
            {
              v64 += 7;
              BOOL v30 = v65++ >= 9;
              if (v30)
              {
                LODWORD(v41) = 0;
                goto LABEL_321;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          LODWORD(v41) = 0;
        }
LABEL_321:
        uint64_t v191 = 184;
        goto LABEL_391;
      case 6:
        if ((v202 & 1) == 0) {
          goto LABEL_300;
        }
        char v70 = 0;
        unsigned int v71 = 0;
        uint64_t v41 = 0;
        *(void *)(a1 + 244) |= 0x10uLL;
        while (2)
        {
          uint64_t v72 = *v20;
          uint64_t v73 = *(void *)(v3 + v72);
          unint64_t v74 = v73 + 1;
          if (v73 == -1 || v74 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v75 = *(unsigned char *)(*(void *)(v3 + *v22) + v73);
            *(void *)(v3 + v72) = v74;
            v41 |= (unint64_t)(v75 & 0x7F) << v70;
            if (v75 < 0)
            {
              v70 += 7;
              BOOL v30 = v71++ >= 9;
              if (v30)
              {
                LODWORD(v41) = 0;
                goto LABEL_325;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          LODWORD(v41) = 0;
        }
LABEL_325:
        uint64_t v191 = 188;
        goto LABEL_391;
      case 7:
        if ((v202 & 1) == 0) {
          goto LABEL_300;
        }
        char v76 = 0;
        unsigned int v77 = 0;
        uint64_t v41 = 0;
        *(void *)(a1 + 244) |= 0x400uLL;
        while (2)
        {
          uint64_t v78 = *v20;
          uint64_t v79 = *(void *)(v3 + v78);
          unint64_t v80 = v79 + 1;
          if (v79 == -1 || v80 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v81 = *(unsigned char *)(*(void *)(v3 + *v22) + v79);
            *(void *)(v3 + v78) = v80;
            v41 |= (unint64_t)(v81 & 0x7F) << v76;
            if (v81 < 0)
            {
              v76 += 7;
              BOOL v30 = v77++ >= 9;
              if (v30)
              {
                LODWORD(v41) = 0;
                goto LABEL_329;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          LODWORD(v41) = 0;
        }
LABEL_329:
        uint64_t v191 = 212;
        goto LABEL_391;
      case 8:
        if (!v34 || (*(unsigned char *)(a1 + 248) & 2) != 0) {
          goto LABEL_300;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_453;
        }
        char v82 = objc_alloc_init(GEONameInfoList);
        if (!GEONameInfoListReadAllFrom(v82, (void *)v3, v10 & 1)) {
          goto LABEL_452;
        }
        PBReaderRecallMark();
        -[GEOStep _addNoFlagsManeuverName:](a1, v82);
        goto LABEL_283;
      case 10:
        if ((v202 & 1) == 0) {
          goto LABEL_300;
        }
        char v86 = 0;
        unsigned int v87 = 0;
        uint64_t v41 = 0;
        *(void *)(a1 + 244) |= 0x40uLL;
        while (2)
        {
          uint64_t v88 = *v20;
          uint64_t v89 = *(void *)(v3 + v88);
          unint64_t v90 = v89 + 1;
          if (v89 == -1 || v90 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v91 = *(unsigned char *)(*(void *)(v3 + *v22) + v89);
            *(void *)(v3 + v88) = v90;
            v41 |= (unint64_t)(v91 & 0x7F) << v86;
            if (v91 < 0)
            {
              v86 += 7;
              BOOL v30 = v87++ >= 9;
              if (v30)
              {
                LODWORD(v41) = 0;
                goto LABEL_333;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          LODWORD(v41) = 0;
        }
LABEL_333:
        uint64_t v191 = 196;
        goto LABEL_391;
      case 11:
        if (!v34 || (*(unsigned char *)(a1 + 247) & 1) != 0) {
          goto LABEL_300;
        }
        if (!PBReaderPlaceMark()) {
          goto LABEL_453;
        }
        -[GEOStep _reserveJunctionElements:](a1, 1uLL);
        if ((GEOJunctionElementReadAllFrom(*(void *)(a1 + 24) + 16 * *(void *)(a1 + 32), v3) & 1) == 0) {
          goto LABEL_453;
        }
        PBReaderRecallMark();
        ++*(void *)(a1 + 32);
        goto LABEL_413;
      case 12:
        if (!v34 || (*(unsigned char *)(a1 + 248) & 0x10) != 0) {
          goto LABEL_300;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_453;
        }
        char v82 = objc_alloc_init(GEONameInfo);
        if (!GEONameInfoReadAllFrom((uint64_t)v82, (void *)v3, v10 & 1)) {
          goto LABEL_452;
        }
        PBReaderRecallMark();
        -[GEOStep _addNoFlagsSignpost:](a1, v82);
        goto LABEL_283;
      case 13:
        if ((v202 & 1) == 0) {
          goto LABEL_300;
        }
        *(void *)(a1 + 244) |= 4uLL;
        uint64_t v92 = *v20;
        unint64_t v93 = *(void *)(v3 + v92);
        if (v93 <= 0xFFFFFFFFFFFFFFFBLL && v93 + 4 <= *(void *)(v3 + *v6))
        {
          int v94 = *(_DWORD *)(*(void *)(v3 + *v22) + v93);
          *(void *)(v3 + v92) = v93 + 4;
        }
        else
        {
          *(unsigned char *)(v3 + *v21) = 1;
          int v94 = 0;
        }
        *(_DWORD *)(a1 + 180) = v94;
        goto LABEL_414;
      case 16:
        if ((v202 & 1) == 0) {
          goto LABEL_300;
        }
        char v95 = 0;
        unsigned int v96 = 0;
        uint64_t v41 = 0;
        *(void *)(a1 + 244) |= 0x20uLL;
        while (2)
        {
          uint64_t v97 = *v20;
          uint64_t v98 = *(void *)(v3 + v97);
          unint64_t v99 = v98 + 1;
          if (v98 == -1 || v99 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v100 = *(unsigned char *)(*(void *)(v3 + *v22) + v98);
            *(void *)(v3 + v97) = v99;
            v41 |= (unint64_t)(v100 & 0x7F) << v95;
            if (v100 < 0)
            {
              v95 += 7;
              BOOL v30 = v96++ >= 9;
              if (v30)
              {
                LODWORD(v41) = 0;
                goto LABEL_337;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          LODWORD(v41) = 0;
        }
LABEL_337:
        uint64_t v191 = 192;
        goto LABEL_391;
      case 17:
        if ((v202 & 1) == 0) {
          goto LABEL_300;
        }
        char v101 = 0;
        unsigned int v102 = 0;
        uint64_t v41 = 0;
        *(void *)(a1 + 244) |= 0x2000uLL;
        while (2)
        {
          uint64_t v103 = *v20;
          uint64_t v104 = *(void *)(v3 + v103);
          unint64_t v105 = v104 + 1;
          if (v104 == -1 || v105 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v106 = *(unsigned char *)(*(void *)(v3 + *v22) + v104);
            *(void *)(v3 + v103) = v105;
            v41 |= (unint64_t)(v106 & 0x7F) << v101;
            if (v106 < 0)
            {
              v101 += 7;
              BOOL v30 = v102++ >= 9;
              if (v30)
              {
                LODWORD(v41) = 0;
                goto LABEL_341;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          LODWORD(v41) = 0;
        }
LABEL_341:
        uint64_t v191 = 224;
        goto LABEL_391;
      case 18:
        if ((v202 & 1) == 0) {
          goto LABEL_300;
        }
        char v107 = 0;
        unsigned int v108 = 0;
        uint64_t v41 = 0;
        *(void *)(a1 + 244) |= 0x1000uLL;
        while (2)
        {
          uint64_t v109 = *v20;
          uint64_t v110 = *(void *)(v3 + v109);
          unint64_t v111 = v110 + 1;
          if (v110 == -1 || v111 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v112 = *(unsigned char *)(*(void *)(v3 + *v22) + v110);
            *(void *)(v3 + v109) = v111;
            v41 |= (unint64_t)(v112 & 0x7F) << v107;
            if (v112 < 0)
            {
              v107 += 7;
              BOOL v30 = v108++ >= 9;
              if (v30)
              {
                LODWORD(v41) = 0;
                goto LABEL_345;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          LODWORD(v41) = 0;
        }
LABEL_345:
        uint64_t v191 = 220;
        goto LABEL_391;
      case 19:
        if (!v34) {
          goto LABEL_300;
        }
        if ((*(unsigned char *)(a1 + 247) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_453;
          }
          uint64_t v194 = *(void *)(a1 + 244) << 34;
          goto LABEL_412;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_453;
        }
        char v82 = objc_alloc_init(GEONameInfo);
        if (!GEONameInfoReadAllFrom((uint64_t)v82, (void *)v3, v10 & 1)) {
          goto LABEL_452;
        }
        PBReaderRecallMark();
        uint64_t v113 = 80;
        goto LABEL_268;
      case 20:
        if ((v202 & 1) == 0) {
          goto LABEL_300;
        }
        char v114 = 0;
        unsigned int v115 = 0;
        uint64_t v116 = 0;
        *(void *)(a1 + 244) |= 0x400000uLL;
        while (2)
        {
          uint64_t v117 = *v20;
          uint64_t v118 = *(void *)(v3 + v117);
          unint64_t v119 = v118 + 1;
          if (v118 == -1 || v119 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v120 = *(unsigned char *)(*(void *)(v3 + *v22) + v118);
            *(void *)(v3 + v117) = v119;
            v116 |= (unint64_t)(v120 & 0x7F) << v114;
            if (v120 < 0)
            {
              v114 += 7;
              BOOL v30 = v115++ >= 9;
              if (v30)
              {
                uint64_t v116 = 0;
                goto LABEL_349;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          uint64_t v116 = 0;
        }
LABEL_349:
        BOOL v192 = v116 != 0;
        uint64_t v193 = 242;
        goto LABEL_374;
      case 21:
        if ((v202 & 1) == 0) {
          goto LABEL_300;
        }
        char v121 = 0;
        unsigned int v122 = 0;
        uint64_t v123 = 0;
        *(void *)(a1 + 244) |= 0x200000uLL;
        while (2)
        {
          uint64_t v124 = *v20;
          uint64_t v125 = *(void *)(v3 + v124);
          unint64_t v126 = v125 + 1;
          if (v125 == -1 || v126 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v127 = *(unsigned char *)(*(void *)(v3 + *v22) + v125);
            *(void *)(v3 + v124) = v126;
            v123 |= (unint64_t)(v127 & 0x7F) << v121;
            if (v127 < 0)
            {
              v121 += 7;
              BOOL v30 = v122++ >= 9;
              if (v30)
              {
                uint64_t v123 = 0;
                goto LABEL_353;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          uint64_t v123 = 0;
        }
LABEL_353:
        BOOL v192 = v123 != 0;
        uint64_t v193 = 241;
        goto LABEL_374;
      case 22:
        if ((v202 & 1) == 0) {
          goto LABEL_300;
        }
        char v128 = 0;
        unsigned int v129 = 0;
        uint64_t v130 = 0;
        *(void *)(a1 + 244) |= 0x10000uLL;
        while (2)
        {
          uint64_t v131 = *v20;
          uint64_t v132 = *(void *)(v3 + v131);
          unint64_t v133 = v132 + 1;
          if (v132 == -1 || v133 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v134 = *(unsigned char *)(*(void *)(v3 + *v22) + v132);
            *(void *)(v3 + v131) = v133;
            v130 |= (unint64_t)(v134 & 0x7F) << v128;
            if (v134 < 0)
            {
              v128 += 7;
              BOOL v30 = v129++ >= 9;
              if (v30)
              {
                uint64_t v130 = 0;
                goto LABEL_357;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          uint64_t v130 = 0;
        }
LABEL_357:
        BOOL v192 = v130 != 0;
        uint64_t v193 = 236;
        goto LABEL_374;
      case 24:
        if ((v202 & 1) == 0) {
          goto LABEL_300;
        }
        char v135 = 0;
        unsigned int v136 = 0;
        uint64_t v137 = 0;
        *(void *)(a1 + 244) |= 0x100000uLL;
        while (2)
        {
          uint64_t v138 = *v20;
          uint64_t v139 = *(void *)(v3 + v138);
          unint64_t v140 = v139 + 1;
          if (v139 == -1 || v140 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v141 = *(unsigned char *)(*(void *)(v3 + *v22) + v139);
            *(void *)(v3 + v138) = v140;
            v137 |= (unint64_t)(v141 & 0x7F) << v135;
            if (v141 < 0)
            {
              v135 += 7;
              BOOL v30 = v136++ >= 9;
              if (v30)
              {
                uint64_t v137 = 0;
                goto LABEL_361;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          uint64_t v137 = 0;
        }
LABEL_361:
        BOOL v192 = v137 != 0;
        uint64_t v193 = 240;
        goto LABEL_374;
      case 30:
        if (!v34) {
          goto LABEL_300;
        }
        if ((*(unsigned char *)(a1 + 248) & 1) == 0)
        {
          uint64_t v142 = PBReaderReadString();
          uint64_t v143 = 104;
          goto LABEL_195;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_453;
        }
        uint64_t v194 = *(void *)(a1 + 244) << 31;
        goto LABEL_412;
      case 31:
        if (!v34) {
          goto LABEL_300;
        }
        if ((*(unsigned char *)(a1 + 248) & 4) == 0)
        {
          uint64_t v142 = PBReaderReadString();
          uint64_t v143 = 120;
LABEL_195:
          uint64_t v144 = *(void **)(a1 + v143);
          *(void *)(a1 + v143) = v142;
          goto LABEL_269;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_453;
        }
        uint64_t v194 = *(void *)(a1 + 244) << 29;
        goto LABEL_412;
      case 32:
        if (!v34) {
          goto LABEL_300;
        }
        if ((*(unsigned char *)(a1 + 248) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_453;
          }
          uint64_t v194 = *(void *)(a1 + 244) << 25;
          goto LABEL_412;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_453;
        }
        char v82 = objc_alloc_init(GEOTimeCheckpoints);
        if (!GEOTimeCheckpointsReadAllFrom((uint64_t)v82, (void *)v3, v10 & 1)) {
          goto LABEL_452;
        }
        PBReaderRecallMark();
        uint64_t v113 = 152;
        goto LABEL_268;
      case 33:
        if (!v34) {
          goto LABEL_300;
        }
        if ((*(unsigned char *)(a1 + 247) & 0x80) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_453;
          }
          uint64_t v194 = *(void *)(a1 + 244) << 32;
          goto LABEL_412;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_453;
        }
        char v82 = objc_alloc_init(GEOInstructionSet);
        if (!GEOInstructionSetReadAllFrom((uint64_t)v82, (void *)v3, v10 & 1)) {
          goto LABEL_452;
        }
        PBReaderRecallMark();
        uint64_t v113 = 96;
        goto LABEL_268;
      case 34:
        if ((v202 & 1) == 0) {
          goto LABEL_300;
        }
        char v145 = 0;
        unsigned int v146 = 0;
        uint64_t v147 = 0;
        *(void *)(a1 + 244) |= 0x40000uLL;
        while (2)
        {
          uint64_t v148 = *v20;
          uint64_t v149 = *(void *)(v3 + v148);
          unint64_t v150 = v149 + 1;
          if (v149 == -1 || v150 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v151 = *(unsigned char *)(*(void *)(v3 + *v22) + v149);
            *(void *)(v3 + v148) = v150;
            v147 |= (unint64_t)(v151 & 0x7F) << v145;
            if (v151 < 0)
            {
              v145 += 7;
              BOOL v30 = v146++ >= 9;
              if (v30)
              {
                uint64_t v147 = 0;
                goto LABEL_365;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          uint64_t v147 = 0;
        }
LABEL_365:
        BOOL v192 = v147 != 0;
        uint64_t v193 = 238;
        goto LABEL_374;
      case 35:
        if (!v34 || (*(unsigned char *)(a1 + 247) & 0x40) != 0) {
          goto LABEL_300;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_453;
        }
        char v82 = objc_alloc_init(GEOGuidanceEvent);
        if (!GEOGuidanceEventReadAllFrom((uint64_t)v82, (void *)v3, v10 & 1)) {
          goto LABEL_452;
        }
        PBReaderRecallMark();
        -[GEOStep _addNoFlagsGuidanceEvent:](a1, v82);
        goto LABEL_283;
      case 36:
        if ((v202 & 1) == 0) {
          goto LABEL_300;
        }
        char v152 = 0;
        unsigned int v153 = 0;
        uint64_t v154 = 0;
        *(void *)(a1 + 244) |= 0x80000uLL;
        while (2)
        {
          uint64_t v155 = *v20;
          uint64_t v156 = *(void *)(v3 + v155);
          unint64_t v157 = v156 + 1;
          if (v156 == -1 || v157 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v158 = *(unsigned char *)(*(void *)(v3 + *v22) + v156);
            *(void *)(v3 + v155) = v157;
            v154 |= (unint64_t)(v158 & 0x7F) << v152;
            if (v158 < 0)
            {
              v152 += 7;
              BOOL v30 = v153++ >= 9;
              if (v30)
              {
                uint64_t v154 = 0;
                goto LABEL_369;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          uint64_t v154 = 0;
        }
LABEL_369:
        BOOL v192 = v154 != 0;
        uint64_t v193 = 239;
        goto LABEL_374;
      case 37:
        if ((v202 & 1) == 0) {
          goto LABEL_300;
        }
        char v159 = 0;
        unsigned int v160 = 0;
        uint64_t v161 = 0;
        *(void *)(a1 + 244) |= 0x20000uLL;
        while (2)
        {
          uint64_t v162 = *v20;
          uint64_t v163 = *(void *)(v3 + v162);
          unint64_t v164 = v163 + 1;
          if (v163 == -1 || v164 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v165 = *(unsigned char *)(*(void *)(v3 + *v22) + v163);
            *(void *)(v3 + v162) = v164;
            v161 |= (unint64_t)(v165 & 0x7F) << v159;
            if (v165 < 0)
            {
              v159 += 7;
              BOOL v30 = v160++ >= 9;
              if (v30)
              {
                uint64_t v161 = 0;
                goto LABEL_373;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          uint64_t v161 = 0;
        }
LABEL_373:
        BOOL v192 = v161 != 0;
        uint64_t v193 = 237;
LABEL_374:
        *(unsigned char *)(a1 + v193) = v192;
        goto LABEL_414;
      case 38:
        if (!v34) {
          goto LABEL_300;
        }
        if ((*(unsigned char *)(a1 + 247) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_453;
          }
          uint64_t v194 = *(void *)(a1 + 244) << 35;
          goto LABEL_412;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_453;
        }
        char v82 = objc_alloc_init(GEOEVStateInfo);
        if (!GEOEVStateInfoReadAllFrom((uint64_t)v82, (void *)v3)) {
          goto LABEL_452;
        }
        PBReaderRecallMark();
        uint64_t v113 = 72;
        goto LABEL_268;
      case 41:
        if (!v34) {
          goto LABEL_300;
        }
        if ((*(unsigned char *)(a1 + 247) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_453;
          }
          uint64_t v194 = *(void *)(a1 + 244) << 36;
          goto LABEL_412;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_453;
        }
        char v82 = objc_alloc_init(GEOEVStepInfo);
        if (!GEOEVStepInfoReadAllFrom((uint64_t)v82, (void *)v3)) {
          goto LABEL_452;
        }
        PBReaderRecallMark();
        uint64_t v113 = 64;
        goto LABEL_268;
      case 42:
        if (!v34) {
          goto LABEL_300;
        }
        if ((*(unsigned char *)(a1 + 247) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_453;
          }
          uint64_t v194 = *(void *)(a1 + 244) << 37;
          goto LABEL_412;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_453;
        }
        char v82 = objc_alloc_init(GEOEVChargeInfo);
        if (!GEOEVChargeInfoReadAllFrom((uint64_t)v82, (void *)v3)) {
          goto LABEL_452;
        }
        PBReaderRecallMark();
        uint64_t v113 = 56;
        goto LABEL_268;
      case 43:
        if ((v202 & 1) == 0) {
          goto LABEL_300;
        }
        char v166 = 0;
        unsigned int v167 = 0;
        uint64_t v41 = 0;
        *(void *)(a1 + 244) |= 1uLL;
        while (2)
        {
          uint64_t v168 = *v20;
          uint64_t v169 = *(void *)(v3 + v168);
          unint64_t v170 = v169 + 1;
          if (v169 == -1 || v170 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v171 = *(unsigned char *)(*(void *)(v3 + *v22) + v169);
            *(void *)(v3 + v168) = v170;
            v41 |= (unint64_t)(v171 & 0x7F) << v166;
            if (v171 < 0)
            {
              v166 += 7;
              BOOL v30 = v167++ >= 9;
              if (v30)
              {
                LODWORD(v41) = 0;
                goto LABEL_378;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          LODWORD(v41) = 0;
        }
LABEL_378:
        uint64_t v191 = 172;
        goto LABEL_391;
      case 44:
        if (!v34) {
          goto LABEL_300;
        }
        if ((*(unsigned char *)(a1 + 247) & 2) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_453;
          }
          uint64_t v194 = *(void *)(a1 + 244) << 38;
          goto LABEL_412;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_453;
        }
        char v82 = objc_alloc_init(GEOPBTransitArtwork);
        if (!GEOPBTransitArtworkReadAllFrom((uint64_t)v82, (void *)v3, v10 & 1)) {
          goto LABEL_452;
        }
        PBReaderRecallMark();
        uint64_t v113 = 48;
        goto LABEL_268;
      case 45:
        if (!v34) {
          goto LABEL_300;
        }
        if ((*(unsigned char *)(a1 + 248) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_453;
          }
          uint64_t v194 = *(void *)(a1 + 244) << 26;
LABEL_412:
          v7 += v194 >> 63;
LABEL_413:
          char v18 = v203;
          int v21 = (int *)MEMORY[0x1E4F940C8];
          BOOL v22 = (int *)MEMORY[0x1E4F940B8];
LABEL_414:
          if (!(v204 & 1 | (v7 != 0))) {
            goto LABEL_418;
          }
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_453;
        }
        char v82 = objc_alloc_init(GEOStopWaypoint);
        if (GEOStopWaypointReadAllFrom((uint64_t)v82, (void *)v3, v10 & 1))
        {
          PBReaderRecallMark();
          uint64_t v113 = 144;
LABEL_268:
          uint64_t v144 = *(void **)(a1 + v113);
          *(void *)(a1 + v113) = v82;
LABEL_269:

          --v7;
          goto LABEL_413;
        }
LABEL_452:

LABEL_453:
        int v200 = 0;
        char v18 = v203;
        int v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_419:
        if (v201) {
LABEL_420:
        }
          *(void *)(a1 + 244) |= 0x800000uLL;
        if (v18 & 1 | ((v200 & 1) == 0))
        {
          *(void *)(a1 + 244) |= 0x7FFF000000uLL;
          goto LABEL_446;
        }
        if (v19)
        {
          while (1)
          {
            int v196 = *v19++;
            int v195 = v196;
            if (v196 > 11)
            {
              switch(v195)
              {
                case 19:
                  uint64_t v197 = 0x20000000;
                  goto LABEL_444;
                case 20:
                case 21:
                case 22:
                case 23:
                case 24:
                case 25:
                case 26:
                case 27:
                case 28:
                case 29:
                case 34:
                case 36:
                case 37:
                case 39:
                case 40:
                case 43:
                case 46:
                  continue;
                case 30:
                  uint64_t v197 = 0x100000000;
                  goto LABEL_444;
                case 31:
                  uint64_t v197 = 0x400000000;
                  goto LABEL_444;
                case 32:
                  uint64_t v197 = 0x4000000000;
                  goto LABEL_444;
                case 33:
                  uint64_t v197 = 0x80000000;
                  goto LABEL_444;
                case 35:
                  uint64_t v197 = 0x40000000;
                  goto LABEL_444;
                case 38:
                  uint64_t v197 = 0x10000000;
                  goto LABEL_444;
                case 41:
                  uint64_t v197 = 0x8000000;
                  goto LABEL_444;
                case 42:
                  uint64_t v197 = 0x4000000;
                  goto LABEL_444;
                case 44:
                  uint64_t v197 = 0x2000000;
                  goto LABEL_444;
                case 45:
                  uint64_t v197 = 0x2000000000;
                  goto LABEL_444;
                case 47:
                  uint64_t v197 = 0x800000000;
                  goto LABEL_444;
                default:
                  if (v195 != 12) {
                    continue;
                  }
                  uint64_t v197 = 0x1000000000;
                  break;
              }
              goto LABEL_444;
            }
            if (v195 == 8) {
              break;
            }
            if (v195 == 11)
            {
              uint64_t v197 = 0x1000000;
LABEL_444:
              *(void *)(a1 + 244) |= v197;
              continue;
            }
            if (!v195) {
              goto LABEL_446;
            }
          }
          uint64_t v197 = 0x200000000;
          goto LABEL_444;
        }
LABEL_446:
        if (v200)
        {
          uint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
          if ((v18 & 1) == 0) {
            return v3;
          }
LABEL_450:
          unint64_t v198 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        else
        {
          uint64_t v3 = 0;
          if (v18) {
            goto LABEL_450;
          }
        }
        return v3;
      case 46:
        if ((v202 & 1) == 0) {
          goto LABEL_300;
        }
        char v172 = 0;
        unsigned int v173 = 0;
        uint64_t v41 = 0;
        *(void *)(a1 + 244) |= 0x8000uLL;
        while (2)
        {
          uint64_t v174 = *v20;
          uint64_t v175 = *(void *)(v3 + v174);
          unint64_t v176 = v175 + 1;
          if (v175 == -1 || v176 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v177 = *(unsigned char *)(*(void *)(v3 + *v22) + v175);
            *(void *)(v3 + v174) = v176;
            v41 |= (unint64_t)(v177 & 0x7F) << v172;
            if (v177 < 0)
            {
              v172 += 7;
              BOOL v30 = v173++ >= 9;
              if (v30)
              {
                LODWORD(v41) = 0;
                goto LABEL_382;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          LODWORD(v41) = 0;
        }
LABEL_382:
        uint64_t v191 = 232;
        goto LABEL_391;
      case 47:
        if (!v34 || (*(unsigned char *)(a1 + 248) & 8) != 0) {
          goto LABEL_300;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_453;
        }
        char v82 = objc_alloc_init(GEORoadDescription);
        if (!GEORoadDescriptionReadAllFrom((uint64_t)v82, (void *)v3, v10 & 1)) {
          goto LABEL_452;
        }
        PBReaderRecallMark();
        -[GEOStep _addNoFlagsRoadDescription:](a1, v82);
LABEL_283:

        goto LABEL_413;
      case 48:
        if ((v202 & 1) == 0) {
          goto LABEL_300;
        }
        char v178 = 0;
        unsigned int v179 = 0;
        uint64_t v41 = 0;
        *(void *)(a1 + 244) |= 2uLL;
        while (2)
        {
          uint64_t v180 = *v20;
          uint64_t v181 = *(void *)(v3 + v180);
          unint64_t v182 = v181 + 1;
          if (v181 == -1 || v182 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v183 = *(unsigned char *)(*(void *)(v3 + *v22) + v181);
            *(void *)(v3 + v180) = v182;
            v41 |= (unint64_t)(v183 & 0x7F) << v178;
            if (v183 < 0)
            {
              v178 += 7;
              BOOL v30 = v179++ >= 9;
              if (v30)
              {
                LODWORD(v41) = 0;
                goto LABEL_386;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          LODWORD(v41) = 0;
        }
LABEL_386:
        uint64_t v191 = 176;
        goto LABEL_391;
      case 49:
        if ((v202 & 1) == 0) {
          goto LABEL_300;
        }
        char v184 = 0;
        unsigned int v185 = 0;
        uint64_t v41 = 0;
        *(void *)(a1 + 244) |= 0x800uLL;
        while (2)
        {
          uint64_t v186 = *v20;
          uint64_t v187 = *(void *)(v3 + v186);
          unint64_t v188 = v187 + 1;
          if (v187 == -1 || v188 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v189 = *(unsigned char *)(*(void *)(v3 + *v22) + v187);
            *(void *)(v3 + v186) = v188;
            v41 |= (unint64_t)(v189 & 0x7F) << v184;
            if (v189 < 0)
            {
              v184 += 7;
              BOOL v30 = v185++ >= 9;
              if (v30)
              {
                LODWORD(v41) = 0;
                goto LABEL_390;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          LODWORD(v41) = 0;
        }
LABEL_390:
        uint64_t v191 = 216;
LABEL_391:
        *(_DWORD *)(a1 + v191) = v41;
        goto LABEL_414;
      default:
        if ((v201 & 1) == 0 || (*(unsigned char *)(a1 + 246) & 0x80) != 0)
        {
LABEL_300:
          char v190 = PBReaderSkipValueWithTag();
          BOOL v22 = (int *)MEMORY[0x1E4F940B8];
          int v21 = (int *)MEMORY[0x1E4F940C8];
          char v18 = v203;
          if ((v190 & 1) == 0)
          {
            int v200 = 0;
            goto LABEL_419;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v83 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            uint64_t v84 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v83;
          }
          int v85 = PBUnknownFieldAdd();
          char v18 = v203;
          int v21 = (int *)MEMORY[0x1E4F940C8];
          BOOL v22 = (int *)MEMORY[0x1E4F940B8];
          if (!v85)
          {
            int v200 = 0;
            goto LABEL_420;
          }
        }
        goto LABEL_414;
    }
  }
}

void sub_18985DDF4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18985E2C4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18985EA7C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18985EF94(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18985F108(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18985F27C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18985F3EC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18985F5E8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18985FB80(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18985FCF8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18985FE70(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18986005C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898601D4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898603CC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189863B00(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOStepCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  uint64_t v42 = *MEMORY[0x1E4F143B8];
  long long v34 = 0u;
  long long v35 = 0u;
  long long v36 = 0u;
  long long v37 = 0u;
  id v2 = a1[14];
  uint64_t v3 = [v2 countByEnumeratingWithState:&v34 objects:v41 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v35;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v35 != v5) {
          objc_enumerationMutation(v2);
        }
        [*(id *)(*((void *)&v34 + 1) + 8 * v6++) readAll:1];
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v34 objects:v41 count:16];
    }
    while (v4);
  }

  long long v32 = 0u;
  long long v33 = 0u;
  long long v30 = 0u;
  long long v31 = 0u;
  id v7 = a1[17];
  uint64_t v8 = [v7 countByEnumeratingWithState:&v30 objects:v40 count:16];
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)v31;
    do
    {
      uint64_t v11 = 0;
      do
      {
        if (*(void *)v31 != v10) {
          objc_enumerationMutation(v7);
        }
        [*(id *)(*((void *)&v30 + 1) + 8 * v11++) readAll:1];
      }
      while (v9 != v11);
      uint64_t v9 = [v7 countByEnumeratingWithState:&v30 objects:v40 count:16];
    }
    while (v9);
  }

  [a1[10] readAll:1];
  [a1[19] readAll:1];
  [a1[12] readAll:1];
  long long v28 = 0u;
  long long v29 = 0u;
  long long v26 = 0u;
  long long v27 = 0u;
  id v12 = a1[11];
  uint64_t v13 = [v12 countByEnumeratingWithState:&v26 objects:v39 count:16];
  if (v13)
  {
    uint64_t v14 = v13;
    uint64_t v15 = *(void *)v27;
    do
    {
      uint64_t v16 = 0;
      do
      {
        if (*(void *)v27 != v15) {
          objc_enumerationMutation(v12);
        }
        [*(id *)(*((void *)&v26 + 1) + 8 * v16++) readAll:1];
      }
      while (v14 != v16);
      uint64_t v14 = [v12 countByEnumeratingWithState:&v26 objects:v39 count:16];
    }
    while (v14);
  }

  [a1[9] readAll:1];
  [a1[8] readAll:1];
  [a1[7] readAll:1];
  [a1[6] readAll:1];
  [a1[18] readAll:1];
  long long v24 = 0u;
  long long v25 = 0u;
  long long v22 = 0u;
  long long v23 = 0u;
  id v17 = a1[16];
  uint64_t v18 = [v17 countByEnumeratingWithState:&v22 objects:v38 count:16];
  if (v18)
  {
    uint64_t v19 = v18;
    uint64_t v20 = *(void *)v23;
    do
    {
      uint64_t v21 = 0;
      do
      {
        if (*(void *)v23 != v20) {
          objc_enumerationMutation(v17);
        }
        objc_msgSend(*(id *)(*((void *)&v22 + 1) + 8 * v21++), "readAll:", 1, (void)v22);
      }
      while (v19 != v21);
      uint64_t v19 = [v17 countByEnumeratingWithState:&v22 objects:v38 count:16];
    }
    while (v19);
  }
}

uint64_t GEOStepReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 164))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOStepReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 168));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 160) = [v8 position];
  *(_DWORD *)(a1 + 164) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOStepReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOStepReadAllFrom_initialTag;
  }
  uint64_t Specified = GEOStepReadSpecified(a1, (uint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOStepCallReadAllRecursiveWithoutSynchronized((id *)a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 168));
  return Specified;
}

void sub_189863FE8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t GEOStepReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  uint64_t AllFrom = GEOStepReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18986404C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOTimeCheckpointsIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_59;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        BOOL v13 = v7++ >= 9;
        if (v13)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        goto LABEL_59;
      }
      if ((v8 >> 3) == 2) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if (v15 == 2)
        {
          if (!PBReaderPlaceMark()) {
            goto LABEL_61;
          }
LABEL_38:
          while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
          {
            unsigned int v27 = a1[*v4];
            if (a1[*v4]) {
              break;
            }
            while (1)
            {
              uint64_t v28 = *v2;
              uint64_t v29 = *(void *)&a1[v28];
              unint64_t v30 = v29 + 1;
              if (v29 == -1 || v30 > *(void *)&a1[*v3]) {
                break;
              }
              int v31 = *(char *)(*(void *)&a1[*v5] + v29);
              *(void *)&a1[v28] = v30;
              if (v31 < 0)
              {
                BOOL v13 = v27++ >= 9;
                if (!v13) {
                  continue;
                }
              }
              goto LABEL_38;
            }
            a1[*v4] = 1;
          }
LABEL_57:
          PBReaderRecallMark();
          goto LABEL_58;
        }
        if ((v8 & 7) != 0) {
          goto LABEL_61;
        }
        while (1)
        {
          uint64_t v17 = *v2;
          uint64_t v18 = *(void *)&a1[v17];
          unint64_t v19 = v18 + 1;
          if (v18 == -1 || v19 > *(void *)&a1[*v3]) {
            break;
          }
          int v20 = *(char *)(*(void *)&a1[*v5] + v18);
          *(void *)&a1[v17] = v19;
          if (v20 < 0)
          {
            unsigned int v21 = v15++;
            if (v21 <= 8) {
              continue;
            }
          }
          goto LABEL_58;
        }
LABEL_36:
        a1[*v4] = 1;
        goto LABEL_58;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        goto LABEL_61;
      }
LABEL_58:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_59;
      }
    }
    if (v15 == 2)
    {
      if (!PBReaderPlaceMark())
      {
LABEL_61:
        PBReaderRecallMark();
        return 0;
      }
LABEL_48:
      while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
      {
        unsigned int v32 = a1[*v4];
        if (a1[*v4]) {
          break;
        }
        while (1)
        {
          uint64_t v33 = *v2;
          uint64_t v34 = *(void *)&a1[v33];
          unint64_t v35 = v34 + 1;
          if (v34 == -1 || v35 > *(void *)&a1[*v3]) {
            break;
          }
          int v36 = *(char *)(*(void *)&a1[*v5] + v34);
          *(void *)&a1[v33] = v35;
          if (v36 < 0)
          {
            BOOL v13 = v32++ >= 9;
            if (!v13) {
              continue;
            }
          }
          goto LABEL_48;
        }
        a1[*v4] = 1;
      }
      goto LABEL_57;
    }
    if ((v8 & 7) != 0) {
      goto LABEL_61;
    }
    while (1)
    {
      uint64_t v22 = *v2;
      uint64_t v23 = *(void *)&a1[v22];
      unint64_t v24 = v23 + 1;
      if (v23 == -1 || v24 > *(void *)&a1[*v3]) {
        goto LABEL_36;
      }
      int v25 = *(char *)(*(void *)&a1[*v5] + v23);
      *(void *)&a1[v22] = v24;
      if (v25 < 0)
      {
        unsigned int v26 = v15++;
        if (v26 <= 8) {
          continue;
        }
      }
      goto LABEL_58;
    }
  }
LABEL_59:
  BOOL v37 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v37;
}

BOOL GEOStopWaypointIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (!a1[*v4])
    {
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_41;
          }
          unsigned int v17 = 0;
          do
          {
            uint64_t v18 = *v2;
            uint64_t v19 = *(void *)&a1[v18];
            unint64_t v20 = v19 + 1;
            if (v19 == -1 || v20 > *(void *)&a1[*v3])
            {
              a1[*v4] = 1;
              goto LABEL_39;
            }
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if ((v21 & 0x80000000) == 0) {
              break;
            }
          }
          while (v17++ <= 8);
          goto LABEL_39;
        case 2u:
          if (v15 == 2) {
            goto LABEL_28;
          }
          goto LABEL_41;
        case 3u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOLatLngIsValid(a1)) {
            goto LABEL_41;
          }
          goto LABEL_37;
        case 4u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOStyleAttributesIsValid(a1)) {
            goto LABEL_41;
          }
LABEL_37:
          PBReaderRecallMark();
          goto LABEL_39;
        default:
LABEL_28:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_41:
            PBReaderRecallMark();
            return 0;
          }
LABEL_39:
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_40;
          }
          break;
      }
    }
  }
LABEL_40:
  BOOL v23 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v23;
}

void sub_189864ED0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOStepIsDirty(uint64_t a1)
{
  uint64_t v22 = *MEMORY[0x1E4F143B8];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 168));
  uint64_t v2 = *(void *)(a1 + 244);
  if ((v2 & 0x9201000000) != 0) {
    return 1;
  }
  if ((v2 & 0x20000000) == 0)
  {
LABEL_5:
    if ((v2 & 0x500000000) != 0) {
      return 1;
    }
    if ((v2 & 0x4000000000) != 0)
    {
      if (GEOTimeCheckpointsIsDirty(*(void *)(a1 + 152))) {
        return 1;
      }
      uint64_t v2 = *(void *)(a1 + 244);
    }
    if ((v2 & 0x80000000) != 0)
    {
      if (GEOInstructionSetIsDirty(*(os_unfair_lock_s **)(a1 + 96))) {
        return 1;
      }
      uint64_t v2 = *(void *)(a1 + 244);
    }
    if ((v2 & 0x5C000000) != 0) {
      return 1;
    }
    if ((v2 & 0x2000000) != 0)
    {
      if (GEOPBTransitArtworkIsDirty(*(os_unfair_lock_s **)(a1 + 48))) {
        return 1;
      }
      uint64_t v2 = *(void *)(a1 + 244);
    }
    if ((v2 & 0x2000000000) != 0)
    {
      if (GEOStopWaypointIsDirty(*(void *)(a1 + 144))) {
        return 1;
      }
      uint64_t v2 = *(void *)(a1 + 244);
    }
    if ((v2 & 0x800000000) != 0) {
      return 1;
    }
    if ((v2 & 0x1000000000) != 0)
    {
      long long v18 = 0u;
      long long v19 = 0u;
      long long v16 = 0u;
      long long v17 = 0u;
      id v5 = *(id *)(a1 + 136);
      uint64_t v6 = [v5 countByEnumeratingWithState:&v16 objects:v21 count:16];
      if (v6)
      {
        uint64_t v7 = v6;
        uint64_t v8 = *(void *)v17;
LABEL_25:
        uint64_t v9 = 0;
        while (1)
        {
          if (*(void *)v17 != v8) {
            objc_enumerationMutation(v5);
          }
          if (GEONameInfoIsDirty(*(void *)(*((void *)&v16 + 1) + 8 * v9))) {
            goto LABEL_43;
          }
          if (v7 == ++v9)
          {
            uint64_t v7 = [v5 countByEnumeratingWithState:&v16 objects:v21 count:16];
            if (v7) {
              goto LABEL_25;
            }
            break;
          }
        }
      }

      uint64_t v2 = *(void *)(a1 + 244);
    }
    if ((v2 & 0x40000000) == 0) {
      return 0;
    }
    long long v14 = 0u;
    long long v15 = 0u;
    long long v12 = 0u;
    long long v13 = 0u;
    id v5 = *(id *)(a1 + 88);
    uint64_t v3 = [v5 countByEnumeratingWithState:&v12 objects:v20 count:16];
    if (!v3)
    {
LABEL_44:

      return v3;
    }
    uint64_t v10 = *(void *)v13;
LABEL_36:
    uint64_t v11 = 0;
    while (1)
    {
      if (*(void *)v13 != v10) {
        objc_enumerationMutation(v5);
      }
      if (GEOGuidanceEventIsDirty(*(os_unfair_lock_s **)(*((void *)&v12 + 1) + 8 * v11))) {
        break;
      }
      if (v3 == ++v11)
      {
        uint64_t v3 = [v5 countByEnumeratingWithState:&v12 objects:v20 count:16];
        if (v3) {
          goto LABEL_36;
        }
        goto LABEL_44;
      }
    }
LABEL_43:
    uint64_t v3 = 1;
    goto LABEL_44;
  }
  if (!GEONameInfoIsDirty(*(void *)(a1 + 80)))
  {
    uint64_t v2 = *(void *)(a1 + 244);
    goto LABEL_5;
  }
  return 1;
}

os_unfair_lock_s *GEOStepIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    uint64_t v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOStepIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 42);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_18986628C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189867844(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189867F04(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOStepGroupReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 60);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 56)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  int v12 = ((*(unsigned __int8 *)(a1 + 68) >> 1) & 1)
      + (*(unsigned char *)(a1 + 68) & 1)
      + ((*(unsigned __int8 *)(a1 + 68) >> 2) & 1);
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v9])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 != 0;
        char v17 = v16 & ~(_BYTE)v11 | v7;
        char v18 = v16 | v11;
        if (((v16 | v11) | v8)) {
          long long v19 = 0;
        }
        else {
          long long v19 = a3;
        }
        unint64_t v20 = (int *)MEMORY[0x1E4F940E8];
        int v21 = 1;
        uint64_t v22 = (int *)MEMORY[0x1E4F940C8];
        if (*(void *)(v3 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(v3 + *v6)) {
          goto LABEL_86;
        }
        char v65 = v17;
        char v66 = v18 | v17;
        char v68 = (v19 == 0) | v18;
        BOOL v23 = (int *)MEMORY[0x1E4F940B8];
        char v67 = v16 | v11;
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v7;
LABEL_8:
        uint64_t v14 = v10;
        uint64_t v15 = v11;
LABEL_10:
        ++v9;
        uint64_t v7 = v13;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(unsigned char *)(v3 + *v22)) {
      goto LABEL_84;
    }
    char v24 = 0;
    unsigned int v25 = 0;
    unint64_t v26 = 0;
    while (1)
    {
      uint64_t v27 = *v20;
      uint64_t v28 = *(void *)(v3 + v27);
      unint64_t v29 = v28 + 1;
      if (v28 == -1 || v29 > *(void *)(v3 + *v6)) {
        break;
      }
      char v30 = *(unsigned char *)(*(void *)(v3 + *v23) + v28);
      *(void *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0) {
        goto LABEL_25;
      }
      v24 += 7;
      BOOL v31 = v25++ >= 9;
      if (v31)
      {
        unint64_t v26 = 0;
        int v32 = *(unsigned __int8 *)(v3 + *v22);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v22) = 1;
LABEL_25:
    int v32 = *(unsigned __int8 *)(v3 + *v22);
    if (*(unsigned char *)(v3 + *v22)) {
      unint64_t v26 = 0;
    }
LABEL_27:
    int v33 = v26 & 7;
    if (v32 || v33 == 4)
    {
LABEL_84:
      int v21 = 1;
      goto LABEL_85;
    }
    unint64_t v35 = v26 >> 3;
    BOOL v36 = v18;
    if ((v68 & 1) == 0)
    {
      BOOL v37 = v19;
      do
      {
        int v39 = *v37++;
        int v38 = v39;
        BOOL v36 = v39 != 0;
        if (v39) {
          BOOL v40 = v38 == v35;
        }
        else {
          BOOL v40 = 1;
        }
      }
      while (!v40);
    }
    if (v35 == 2)
    {
      if (v36 && (*(unsigned char *)(a1 + 68) & 2) == 0)
      {
        if (v33 == 2)
        {
          if (!PBReaderPlaceMark()) {
            goto LABEL_105;
          }
          uint64_t v22 = (int *)MEMORY[0x1E4F940C8];
          while (*(void *)(v3 + *v20) < *(void *)(v3 + *v6))
          {
            if (*(unsigned char *)(v3 + *v22)) {
              break;
            }
            char v43 = 0;
            unsigned int v44 = 0;
            uint64_t v45 = 0;
            while (1)
            {
              uint64_t v46 = *v20;
              uint64_t v47 = *(void *)(v3 + v46);
              unint64_t v48 = v47 + 1;
              if (v47 == -1 || v48 > *(void *)(v3 + *v6)) {
                break;
              }
              char v49 = *(unsigned char *)(*(void *)(v3 + *v23) + v47);
              *(void *)(v3 + v46) = v48;
              v45 |= (unint64_t)(v49 & 0x7F) << v43;
              if (v49 < 0)
              {
                v43 += 7;
                BOOL v31 = v44++ >= 9;
                if (!v31) {
                  continue;
                }
              }
              goto LABEL_59;
            }
            *(unsigned char *)(v3 + *v22) = 1;
LABEL_59:
            PBRepeatedUInt32Add();
          }
          PBReaderRecallMark();
        }
        else
        {
          char v54 = 0;
          unsigned int v55 = 0;
          uint64_t v56 = 0;
          uint64_t v22 = (int *)MEMORY[0x1E4F940C8];
          while (1)
          {
            uint64_t v57 = *v20;
            uint64_t v58 = *(void *)(v3 + v57);
            unint64_t v59 = v58 + 1;
            if (v58 == -1 || v59 > *(void *)(v3 + *v6)) {
              break;
            }
            char v60 = *(unsigned char *)(*(void *)(v3 + *v23) + v58);
            *(void *)(v3 + v57) = v59;
            v56 |= (unint64_t)(v60 & 0x7F) << v54;
            if (v60 < 0)
            {
              v54 += 7;
              BOOL v31 = v55++ >= 9;
              if (!v31) {
                continue;
              }
            }
            goto LABEL_82;
          }
          *(unsigned char *)(v3 + *v22) = 1;
LABEL_82:
          PBRepeatedUInt32Add();
        }
        char v18 = v67;
        goto LABEL_68;
      }
      goto LABEL_67;
    }
    if (v35 == 1) {
      break;
    }
    if (v65 & 1) == 0 || (*(unsigned char *)(a1 + 68)) {
      goto LABEL_67;
    }
    if (!*(void *)(a1 + 16))
    {
      id v50 = objc_alloc_init(MEMORY[0x1E4F940B0]);
      char v51 = *(void **)(a1 + 16);
      *(void *)(a1 + 16) = v50;
    }
    int v52 = PBUnknownFieldAdd();
    char v18 = v67;
    uint64_t v22 = (int *)MEMORY[0x1E4F940C8];
    if (!v52)
    {
      int v21 = 0;
      goto LABEL_87;
    }
LABEL_68:
    if (!(v66 & 1 | (v9 != 0)) || *(void *)(v3 + *v20) >= *(void *)(v3 + *v6)) {
      goto LABEL_84;
    }
  }
  if (!v36)
  {
LABEL_67:
    char v53 = PBReaderSkipValueWithTag();
    char v18 = v67;
    uint64_t v22 = (int *)MEMORY[0x1E4F940C8];
    if ((v53 & 1) == 0)
    {
      int v21 = 0;
      goto LABEL_85;
    }
    goto LABEL_68;
  }
  if ((*(unsigned char *)(a1 + 68) & 4) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0) {
      goto LABEL_105;
    }
    v9 += *(unsigned __int8 *)(a1 + 68) << 29 >> 31;
    goto LABEL_73;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_105;
  }
  uint64_t v41 = objc_alloc_init(GEOFormattedString);
  if (GEOFormattedStringReadAllFrom((uint64_t)v41, (void *)v3, v10 & 1))
  {
    PBReaderRecallMark();
    uint64_t v42 = *(void **)(a1 + 48);
    *(void *)(a1 + 48) = v41;

    --v9;
LABEL_73:
    char v18 = v67;
    uint64_t v22 = (int *)MEMORY[0x1E4F940C8];
    goto LABEL_68;
  }

LABEL_105:
  int v21 = 0;
  char v18 = v67;
  uint64_t v22 = (int *)MEMORY[0x1E4F940C8];
LABEL_85:
  char v17 = v65;
LABEL_86:
  if (v17) {
LABEL_87:
  }
    *(unsigned char *)(a1 + 68) |= 1u;
  if (v18 & 1 | ((v21 & 1) == 0))
  {
    *(unsigned char *)(a1 + 68) |= 4u;
    *(unsigned char *)(a1 + 68) |= 2u;
    goto LABEL_97;
  }
  if (v19)
  {
    while (2)
    {
      while (1)
      {
        int v62 = *v19++;
        int v61 = v62;
        if (v62 == 1) {
          break;
        }
        if (v61 == 2) {
          goto LABEL_96;
        }
        if (!v61) {
          goto LABEL_97;
        }
      }
      LOBYTE(v61) = 4;
LABEL_96:
      *(unsigned char *)(a1 + 68) |= v61;
      continue;
    }
  }
LABEL_97:
  if (v21)
  {
    unint64_t v3 = *(unsigned char *)(v3 + *v22) == 0;
    if ((v18 & 1) == 0) {
      return v3;
    }
LABEL_101:
    char v63 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  else
  {
    unint64_t v3 = 0;
    if (v18) {
      goto LABEL_101;
    }
  }
  return v3;
}

void sub_189868744(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18986907C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOStepGroupReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 60))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOStepGroupReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = [v8 position];
  *(_DWORD *)(a1 + 60) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOStepGroupReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOStepGroupReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOStepGroupReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    [*(id *)(a1 + 48) readAll:1];
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_189869224(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOStepGroupReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOStepGroupReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189869288(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189869440(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOStepGroupIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  unsigned int v2 = *(unsigned __int8 *)(a1 + 68);
  if ((v2 & 8) != 0) {
    return 1;
  }
  if ((v2 & 4) != 0)
  {
    if (GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(a1 + 48))) {
      return 1;
    }
    unsigned int v2 = *(unsigned __int8 *)(a1 + 68);
  }
  return (v2 >> 1) & 1;
}

os_unfair_lock_s *GEOStepGroupIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    uint64_t v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOStepGroupIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 16);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_189869780(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189869A00(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOStopStepEVInfoReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    id v5 = (int *)MEMORY[0x1E4F940E0];
    uint64_t v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        switch((v10 >> 3))
        {
          case 1u:
            char v18 = 0;
            unsigned int v19 = 0;
            uint64_t v20 = 0;
            *(unsigned char *)(a1 + 56) |= 8u;
            while (1)
            {
              uint64_t v21 = *v4;
              uint64_t v22 = *(void *)&v3[v21];
              unint64_t v23 = v22 + 1;
              if (v22 == -1 || v23 > *(void *)&v3[*v5]) {
                break;
              }
              char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
              *(void *)&v3[v21] = v23;
              v20 |= (unint64_t)(v24 & 0x7F) << v18;
              if ((v24 & 0x80) == 0) {
                goto LABEL_66;
              }
              v18 += 7;
              BOOL v15 = v19++ >= 9;
              if (v15)
              {
                LODWORD(v20) = 0;
                goto LABEL_68;
              }
            }
            v3[*v6] = 1;
LABEL_66:
            if (v3[*v6]) {
              LODWORD(v20) = 0;
            }
LABEL_68:
            uint64_t v57 = 40;
            goto LABEL_85;
          case 2u:
            *(unsigned char *)(a1 + 56) |= 1u;
            uint64_t v27 = *v4;
            unint64_t v28 = *(void *)&v3[v27];
            if (v28 <= 0xFFFFFFFFFFFFFFF7 && v28 + 8 <= *(void *)&v3[*v5])
            {
              uint64_t v29 = *(void *)(*(void *)&v3[*v7] + v28);
              *(void *)&v3[v27] = v28 + 8;
            }
            else
            {
              v3[*v6] = 1;
              uint64_t v29 = 0;
            }
            uint64_t v58 = 16;
            goto LABEL_90;
          case 3u:
            char v30 = 0;
            unsigned int v31 = 0;
            uint64_t v20 = 0;
            *(unsigned char *)(a1 + 56) |= 0x20u;
            while (2)
            {
              uint64_t v32 = *v4;
              uint64_t v33 = *(void *)&v3[v32];
              unint64_t v34 = v33 + 1;
              if (v33 == -1 || v34 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v35 = *(unsigned char *)(*(void *)&v3[*v7] + v33);
                *(void *)&v3[v32] = v34;
                v20 |= (unint64_t)(v35 & 0x7F) << v30;
                if (v35 < 0)
                {
                  v30 += 7;
                  BOOL v15 = v31++ >= 9;
                  if (v15)
                  {
                    LODWORD(v20) = 0;
                    goto LABEL_72;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              LODWORD(v20) = 0;
            }
LABEL_72:
            uint64_t v57 = 48;
            goto LABEL_85;
          case 4u:
            char v36 = 0;
            unsigned int v37 = 0;
            uint64_t v38 = 0;
            *(unsigned char *)(a1 + 56) |= 2u;
            while (2)
            {
              uint64_t v39 = *v4;
              uint64_t v40 = *(void *)&v3[v39];
              unint64_t v41 = v40 + 1;
              if (v40 == -1 || v41 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v42 = *(unsigned char *)(*(void *)&v3[*v7] + v40);
                *(void *)&v3[v39] = v41;
                v38 |= (unint64_t)(v42 & 0x7F) << v36;
                if (v42 < 0)
                {
                  v36 += 7;
                  BOOL v15 = v37++ >= 9;
                  if (v15)
                  {
                    uint64_t v38 = 0;
                    goto LABEL_76;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              uint64_t v38 = 0;
            }
LABEL_76:
            *(void *)(a1 + 24) = v38;
            continue;
          case 5u:
            char v43 = 0;
            unsigned int v44 = 0;
            uint64_t v20 = 0;
            *(unsigned char *)(a1 + 56) |= 0x10u;
            while (2)
            {
              uint64_t v45 = *v4;
              uint64_t v46 = *(void *)&v3[v45];
              unint64_t v47 = v46 + 1;
              if (v46 == -1 || v47 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v48 = *(unsigned char *)(*(void *)&v3[*v7] + v46);
                *(void *)&v3[v45] = v47;
                v20 |= (unint64_t)(v48 & 0x7F) << v43;
                if (v48 < 0)
                {
                  v43 += 7;
                  BOOL v15 = v44++ >= 9;
                  if (v15)
                  {
                    LODWORD(v20) = 0;
                    goto LABEL_80;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              LODWORD(v20) = 0;
            }
LABEL_80:
            uint64_t v57 = 44;
            goto LABEL_85;
          case 6u:
            char v49 = 0;
            unsigned int v50 = 0;
            uint64_t v20 = 0;
            *(unsigned char *)(a1 + 56) |= 0x40u;
            break;
          case 7u:
            *(unsigned char *)(a1 + 56) |= 4u;
            uint64_t v55 = *v4;
            unint64_t v56 = *(void *)&v3[v55];
            if (v56 <= 0xFFFFFFFFFFFFFFF7 && v56 + 8 <= *(void *)&v3[*v5])
            {
              uint64_t v29 = *(void *)(*(void *)&v3[*v7] + v56);
              *(void *)&v3[v55] = v56 + 8;
            }
            else
            {
              v3[*v6] = 1;
              uint64_t v29 = 0;
            }
            uint64_t v58 = 32;
LABEL_90:
            *(void *)(a1 + v58) = v29;
            continue;
          default:
            if (!*(void *)(a1 + 8))
            {
              id v25 = objc_alloc_init(MEMORY[0x1E4F940B0]);
              unint64_t v26 = *(void **)(a1 + 8);
              *(void *)(a1 + 8) = v25;
            }
            if (!PBUnknownFieldAdd()) {
              goto LABEL_93;
            }
            continue;
        }
        while (1)
        {
          uint64_t v51 = *v4;
          uint64_t v52 = *(void *)&v3[v51];
          unint64_t v53 = v52 + 1;
          if (v52 == -1 || v53 > *(void *)&v3[*v5]) {
            break;
          }
          char v54 = *(unsigned char *)(*(void *)&v3[*v7] + v52);
          *(void *)&v3[v51] = v53;
          v20 |= (unint64_t)(v54 & 0x7F) << v49;
          if ((v54 & 0x80) == 0) {
            goto LABEL_82;
          }
          v49 += 7;
          BOOL v15 = v50++ >= 9;
          if (v15)
          {
            LODWORD(v20) = 0;
            goto LABEL_84;
          }
        }
        v3[*v6] = 1;
LABEL_82:
        if (v3[*v6]) {
          LODWORD(v20) = 0;
        }
LABEL_84:
        uint64_t v57 = 52;
LABEL_85:
        *(_DWORD *)(a1 + v57) = v20;
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v59 = v3[*v6] == 0;
  }
  else
  {
LABEL_93:
    BOOL v59 = 0;
  }
  objc_sync_exit(v3);

  return v59;
}

void sub_18986AC24(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOStopStepEVInfoReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOStopStepEVInfoReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18986ACA4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOStopStepEVInfoIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  unsigned int v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    id v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          uint64_t v14 = *v4;
          int v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      uint64_t v14 = *v4;
      int v15 = a1[v14];
      if (a1[v14]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v16 = v8 & 7;
      if (v15 || v16 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_70;
          }
          unsigned int v27 = 0;
          while (1)
          {
            uint64_t v28 = *v2;
            uint64_t v29 = *(void *)&a1[v28];
            unint64_t v30 = v29 + 1;
            if (v29 == -1 || v30 > *(void *)&a1[*v3]) {
              goto LABEL_65;
            }
            int v31 = *(char *)(*(void *)&a1[*v5] + v29);
            *(void *)&a1[v28] = v30;
            if (v31 < 0)
            {
              BOOL v26 = v27++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_67;
          }
        case 2u:
        case 7u:
          if (v16 != 1) {
            goto LABEL_70;
          }
          uint64_t v18 = *v2;
          unint64_t v19 = *(void *)&a1[v18];
          if (v19 > 0xFFFFFFFFFFFFFFF7) {
            goto LABEL_66;
          }
          unint64_t v20 = v19 + 8;
          if (v20 > *(void *)&a1[*v3]) {
            goto LABEL_66;
          }
          *(void *)&a1[v18] = v20;
          continue;
        case 3u:
          if ((v8 & 7) != 0) {
            goto LABEL_70;
          }
          unsigned int v32 = 0;
          while (1)
          {
            uint64_t v33 = *v2;
            uint64_t v34 = *(void *)&a1[v33];
            unint64_t v35 = v34 + 1;
            if (v34 == -1 || v35 > *(void *)&a1[*v3]) {
              goto LABEL_65;
            }
            int v36 = *(char *)(*(void *)&a1[*v5] + v34);
            *(void *)&a1[v33] = v35;
            if (v36 < 0)
            {
              BOOL v26 = v32++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_67;
          }
        case 4u:
          if ((v8 & 7) != 0) {
            goto LABEL_70;
          }
          unsigned int v21 = 0;
          while (1)
          {
            uint64_t v22 = *v2;
            uint64_t v23 = *(void *)&a1[v22];
            unint64_t v24 = v23 + 1;
            if (v23 == -1 || v24 > *(void *)&a1[*v3]) {
              goto LABEL_65;
            }
            int v25 = *(char *)(*(void *)&a1[*v5] + v23);
            *(void *)&a1[v22] = v24;
            if (v25 < 0)
            {
              BOOL v26 = v21++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_67;
          }
        case 5u:
          if ((v8 & 7) != 0) {
            goto LABEL_70;
          }
          unsigned int v37 = 0;
          while (1)
          {
            uint64_t v38 = *v2;
            uint64_t v39 = *(void *)&a1[v38];
            unint64_t v40 = v39 + 1;
            if (v39 == -1 || v40 > *(void *)&a1[*v3]) {
              goto LABEL_65;
            }
            int v41 = *(char *)(*(void *)&a1[*v5] + v39);
            *(void *)&a1[v38] = v40;
            if (v41 < 0)
            {
              BOOL v26 = v37++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_67;
          }
        case 6u:
          if ((v8 & 7) != 0) {
            goto LABEL_70;
          }
          unsigned int v42 = 0;
          break;
        default:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_70:
          BOOL v47 = 0;
          goto LABEL_69;
      }
      while (1)
      {
        uint64_t v43 = *v2;
        uint64_t v44 = *(void *)&a1[v43];
        unint64_t v45 = v44 + 1;
        if (v44 == -1 || v45 > *(void *)&a1[*v3]) {
          break;
        }
        int v46 = *(char *)(*(void *)&a1[*v5] + v44);
        *(void *)&a1[v43] = v45;
        if (v46 < 0)
        {
          BOOL v26 = v42++ > 8;
          if (!v26) {
            continue;
          }
        }
        goto LABEL_67;
      }
LABEL_65:
      uint64_t v14 = *v4;
LABEL_66:
      a1[v14] = 1;
LABEL_67:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v47 = a1[*v4] == 0;
LABEL_69:
  PBReaderRecallMark();
  return v47;
}

void sub_18986BBF8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOStopWaypointReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 60);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 56)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  unsigned int v12 = vaddv_s16((int16x4_t)(*(void *)&vshl_u16((uint16x4_t)(*(void *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 68)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFFFFFCFFFEFFFDLL) & 0xFF01FF01FF01FF01));
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 > 1;
        char v17 = v16 & ~(_BYTE)v11 | v9;
        unsigned __int8 v18 = v16 | v11;
        char v62 = v17;
        char v63 = v18 | v17;
        char v61 = v8;
        if ((v18 | v8)) {
          unint64_t v19 = 0;
        }
        else {
          unint64_t v19 = a3;
        }
        unint64_t v20 = (int *)MEMORY[0x1E4F940E8];
        unsigned int v21 = (int *)MEMORY[0x1E4F940C8];
        char v64 = (v19 == 0) | v18;
        BOOL v65 = v18;
        uint64_t v22 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v9;
LABEL_8:
        uint64_t v14 = v10;
        uint64_t v15 = v11;
LABEL_10:
        ++v7;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v21)) {
      goto LABEL_83;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      BOOL v30 = v24++ >= 9;
      if (v30)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_25:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_83:
      int v59 = 1;
      goto LABEL_84;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v65;
    if ((v64 & 1) == 0)
    {
      unint64_t v35 = v19;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    switch((int)v33)
    {
      case 1:
        if ((v61 & 1) == 0) {
          goto LABEL_68;
        }
        char v39 = 0;
        unsigned int v40 = 0;
        uint64_t v41 = 0;
        *(unsigned char *)(a1 + 68) |= 1u;
        while (1)
        {
          uint64_t v42 = *v20;
          uint64_t v43 = *(void *)(v3 + v42);
          unint64_t v44 = v43 + 1;
          if (v43 == -1 || v44 > *(void *)(v3 + *v6)) {
            break;
          }
          char v45 = *(unsigned char *)(*(void *)(v3 + *v22) + v43);
          *(void *)(v3 + v42) = v44;
          v41 |= (unint64_t)(v45 & 0x7F) << v39;
          if ((v45 & 0x80) == 0) {
            goto LABEL_71;
          }
          v39 += 7;
          BOOL v30 = v40++ >= 9;
          if (v30)
          {
            uint64_t v41 = 0;
            goto LABEL_73;
          }
        }
        *(unsigned char *)(v3 + *v21) = 1;
LABEL_71:
        if (*(unsigned char *)(v3 + *v21)) {
          uint64_t v41 = 0;
        }
LABEL_73:
        *(void *)(a1 + 24) = v41;
        goto LABEL_82;
      case 2:
        if (!v34) {
          goto LABEL_68;
        }
        if ((*(unsigned char *)(a1 + 68) & 4) == 0)
        {
          uint64_t v49 = PBReaderReadString();
          unsigned int v50 = *(void **)(a1 + 32);
          *(void *)(a1 + 32) = v49;
          goto LABEL_67;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_101;
        }
        char v54 = 32 * *(unsigned char *)(a1 + 68);
        goto LABEL_80;
      case 3:
        if (!v34) {
          goto LABEL_68;
        }
        if ((*(unsigned char *)(a1 + 68) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_101;
          }
          char v54 = 16 * *(unsigned char *)(a1 + 68);
          goto LABEL_80;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_101;
        }
        uint64_t v51 = objc_alloc_init(GEOLatLng);
        if (!GEOLatLngReadAllFrom((uint64_t)v51, (void *)v3)) {
          goto LABEL_100;
        }
        PBReaderRecallMark();
        uint64_t v52 = 40;
        goto LABEL_66;
      case 4:
        if (!v34) {
          goto LABEL_68;
        }
        if ((*(unsigned char *)(a1 + 68) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_101;
          }
          char v54 = 8 * *(unsigned char *)(a1 + 68);
LABEL_80:
          v7 += v54 >> 7;
LABEL_81:
          unsigned int v21 = (int *)MEMORY[0x1E4F940C8];
          goto LABEL_82;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_101;
        }
        uint64_t v51 = objc_alloc_init(GEOStyleAttributes);
        if (GEOStyleAttributesReadAllFrom((uint64_t)v51, (void *)v3))
        {
          PBReaderRecallMark();
          uint64_t v52 = 48;
LABEL_66:
          unsigned int v50 = *(void **)(a1 + v52);
          *(void *)(a1 + v52) = v51;
LABEL_67:

          --v7;
          goto LABEL_81;
        }
LABEL_100:

LABEL_101:
        int v59 = 0;
        char v60 = &OBJC_IVAR___GEOComposedRoute__visualInfosForRouteNameLabels;
        unsigned int v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_85:
        if (v62) {
LABEL_86:
        }
          *(unsigned char *)(a1 + v60[666]) |= 2u;
        if (v65 || (v59 & 1) == 0)
        {
          *(unsigned char *)(a1 + v60[666]) |= 4u;
          *(unsigned char *)(a1 + v60[666]) |= 8u;
          *(unsigned char *)(a1 + v60[666]) |= 0x10u;
        }
        else if (v19)
        {
          while (1)
          {
            int v55 = *v19++;
            char v56 = 4;
            switch(v55)
            {
              case 0:
                goto LABEL_94;
              case 2:
                goto LABEL_93;
              case 3:
                char v56 = 8;
                goto LABEL_93;
              case 4:
                char v56 = 16;
LABEL_93:
                *(unsigned char *)(a1 + v60[666]) |= v56;
                break;
              default:
                continue;
            }
          }
        }
LABEL_94:
        if (v59) {
          unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
        }
        else {
          unint64_t v3 = 0;
        }
        if (v65)
        {
          uint64_t v57 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      default:
        if ((v62 & 1) == 0 || (*(unsigned char *)(a1 + 68) & 2) != 0)
        {
LABEL_68:
          char v53 = PBReaderSkipValueWithTag();
          unsigned int v21 = (int *)MEMORY[0x1E4F940C8];
          if ((v53 & 1) == 0)
          {
            int v59 = 0;
LABEL_84:
            char v60 = &OBJC_IVAR___GEOComposedRoute__visualInfosForRouteNameLabels;
            goto LABEL_85;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v46 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            BOOL v47 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v46;
          }
          int v48 = PBUnknownFieldAdd();
          unsigned int v21 = (int *)MEMORY[0x1E4F940C8];
          if (!v48)
          {
            int v59 = 0;
            char v60 = &OBJC_IVAR___GEOComposedRoute__visualInfosForRouteNameLabels;
            goto LABEL_86;
          }
        }
LABEL_82:
        if (!(v63 & 1 | (v7 != 0))) {
          goto LABEL_83;
        }
        continue;
    }
  }
}

void sub_18986C47C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18986C5E8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18986CD58(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOStopWaypointReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 60))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOStopWaypointReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = [v8 position];
  *(_DWORD *)(a1 + 60) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOStopWaypointReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOStopWaypointReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOStopWaypointReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    [*(id *)(a1 + 40) readAll:1];
    [*(id *)(a1 + 48) readAll:1];
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_18986CF10(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOStopWaypointReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOStopWaypointReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18986CF74(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18986D164(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOStopWaypointIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  BOOL v2 = (*(unsigned char *)(a1 + 68) & 0x3C) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return v2;
}

void sub_18986D520(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18986D880(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18986DBB8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOTimeCheckpointsReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 80));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 76);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 72)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  int v11 = ((*(unsigned __int8 *)(a1 + 84) >> 2) & 1)
      + (*(unsigned char *)(a1 + 84) & 1)
      + ((*(unsigned __int8 *)(a1 + 84) >> 1) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v9])
    {
      case -4:
        ++v11;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_9;
      case 0:
        BOOL v14 = v11 != 0;
        int v15 = v14 & ~v10 | v7;
        int v77 = v14 | v10;
        BOOL v16 = (int *)MEMORY[0x1E4F940E8];
        if (((v14 | v10) | v8)) {
          char v17 = 0;
        }
        else {
          char v17 = a3;
        }
        int v75 = 1;
        if (*(void *)(v3 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(v3 + *v6)) {
          goto LABEL_98;
        }
        char v74 = v15;
        int v76 = (v9 != 0) | v77 | v15;
        unsigned __int8 v18 = (int *)MEMORY[0x1E4F940C8];
        unint64_t v19 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v11;
LABEL_7:
        uint64_t v12 = v7;
LABEL_8:
        uint64_t v13 = v10;
LABEL_9:
        ++v9;
        uint64_t v7 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(unsigned char *)(v3 + *v18)) {
      goto LABEL_96;
    }
    char v20 = 0;
    unsigned int v21 = 0;
    unint64_t v22 = 0;
    while (1)
    {
      uint64_t v23 = *v16;
      uint64_t v24 = *(void *)(v3 + v23);
      unint64_t v25 = v24 + 1;
      if (v24 == -1 || v25 > *(void *)(v3 + *v6)) {
        break;
      }
      char v26 = *(unsigned char *)(*(void *)(v3 + *v19) + v24);
      *(void *)(v3 + v23) = v25;
      v22 |= (unint64_t)(v26 & 0x7F) << v20;
      if ((v26 & 0x80) == 0) {
        goto LABEL_24;
      }
      v20 += 7;
      BOOL v27 = v21++ >= 9;
      if (v27)
      {
        unint64_t v22 = 0;
        int v28 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_26;
      }
    }
    *(unsigned char *)(v3 + *v18) = 1;
LABEL_24:
    int v28 = *(unsigned __int8 *)(v3 + *v18);
    if (*(unsigned char *)(v3 + *v18)) {
      unint64_t v22 = 0;
    }
LABEL_26:
    int v29 = v22 & 7;
    if (v28 || v29 == 4)
    {
LABEL_96:
      int v75 = 1;
      goto LABEL_97;
    }
    unint64_t v31 = v22 >> 3;
    BOOL v32 = v77;
    if (!((v17 == 0) | v77 & 1))
    {
      unint64_t v33 = v17;
      do
      {
        int v35 = *v33++;
        int v34 = v35;
        BOOL v32 = v35 != 0;
        if (v35) {
          BOOL v36 = v34 == v31;
        }
        else {
          BOOL v36 = 1;
        }
      }
      while (!v36);
    }
    if (v31 == 2) {
      break;
    }
    if (v31 == 1)
    {
      if (v32 && (*(unsigned char *)(a1 + 84) & 2) == 0)
      {
        if (v29 == 2)
        {
          if (!PBReaderPlaceMark()) {
            goto LABEL_116;
          }
          while (*(void *)(v3 + *v16) < *(void *)(v3 + *v6) && !*(unsigned char *)(v3 + *v18))
          {
            char v37 = 0;
            unsigned int v38 = 0;
            uint64_t v39 = 0;
            while (1)
            {
              uint64_t v40 = *v16;
              uint64_t v41 = *(void *)(v3 + v40);
              unint64_t v42 = v41 + 1;
              if (v41 == -1 || v42 > *(void *)(v3 + *v6)) {
                break;
              }
              char v43 = *(unsigned char *)(*(void *)(v3 + *v19) + v41);
              *(void *)(v3 + v40) = v42;
              v39 |= (unint64_t)(v43 & 0x7F) << v37;
              if (v43 < 0)
              {
                v37 += 7;
                BOOL v27 = v38++ >= 9;
                if (!v27) {
                  continue;
                }
              }
              goto LABEL_53;
            }
            *(unsigned char *)(v3 + *v18) = 1;
LABEL_53:
            PBRepeatedUInt32Add();
          }
LABEL_77:
          PBReaderRecallMark();
LABEL_94:
          if ((v76 & 1) == 0) {
            goto LABEL_96;
          }
          goto LABEL_95;
        }
        char v54 = 0;
        unsigned int v55 = 0;
        uint64_t v56 = 0;
        while (1)
        {
          uint64_t v57 = *v16;
          uint64_t v58 = *(void *)(v3 + v57);
          unint64_t v59 = v58 + 1;
          if (v58 == -1 || v59 > *(void *)(v3 + *v6)) {
            break;
          }
          char v60 = *(unsigned char *)(*(void *)(v3 + *v19) + v58);
          *(void *)(v3 + v57) = v59;
          v56 |= (unint64_t)(v60 & 0x7F) << v54;
          if (v60 < 0)
          {
            v54 += 7;
            BOOL v61 = v55++ > 8;
            if (!v61) {
              continue;
            }
          }
          goto LABEL_93;
        }
LABEL_92:
        *(unsigned char *)(v3 + *v18) = 1;
LABEL_93:
        PBRepeatedUInt32Add();
        goto LABEL_94;
      }
    }
    else if ((v74 & 1) != 0 && (*(unsigned char *)(a1 + 84) & 1) == 0)
    {
      if (!*(void *)(a1 + 16))
      {
        id v51 = objc_alloc_init(MEMORY[0x1E4F940B0]);
        uint64_t v52 = *(void **)(a1 + 16);
        *(void *)(a1 + 16) = v51;
      }
      if ((PBUnknownFieldAdd() & 1) == 0)
      {
        int v75 = 0;
LABEL_99:
        *(unsigned char *)(a1 + 84) |= 1u;
        goto LABEL_100;
      }
      goto LABEL_94;
    }
LABEL_75:
    int v53 = PBReaderSkipValueWithTag();
    if ((v53 & v76 & 1) == 0)
    {
      int v75 = v53;
      goto LABEL_97;
    }
LABEL_95:
    if (*(void *)(v3 + *v16) >= *(void *)(v3 + *v6)) {
      goto LABEL_96;
    }
  }
  if (!v32 || (*(unsigned char *)(a1 + 84) & 4) != 0) {
    goto LABEL_75;
  }
  if (v29 != 2)
  {
    char v62 = 0;
    unsigned int v63 = 0;
    uint64_t v64 = 0;
    while (1)
    {
      uint64_t v65 = *v16;
      uint64_t v66 = *(void *)(v3 + v65);
      unint64_t v67 = v66 + 1;
      if (v66 == -1 || v67 > *(void *)(v3 + *v6)) {
        goto LABEL_92;
      }
      char v68 = *(unsigned char *)(*(void *)(v3 + *v19) + v66);
      *(void *)(v3 + v65) = v67;
      v64 |= (unint64_t)(v68 & 0x7F) << v62;
      if (v68 < 0)
      {
        v62 += 7;
        BOOL v61 = v63++ > 8;
        if (!v61) {
          continue;
        }
      }
      goto LABEL_93;
    }
  }
  if (PBReaderPlaceMark())
  {
    while (*(void *)(v3 + *v16) < *(void *)(v3 + *v6) && !*(unsigned char *)(v3 + *v18))
    {
      char v44 = 0;
      unsigned int v45 = 0;
      uint64_t v46 = 0;
      while (1)
      {
        uint64_t v47 = *v16;
        uint64_t v48 = *(void *)(v3 + v47);
        unint64_t v49 = v48 + 1;
        if (v48 == -1 || v49 > *(void *)(v3 + *v6)) {
          break;
        }
        char v50 = *(unsigned char *)(*(void *)(v3 + *v19) + v48);
        *(void *)(v3 + v47) = v49;
        v46 |= (unint64_t)(v50 & 0x7F) << v44;
        if (v50 < 0)
        {
          v44 += 7;
          BOOL v27 = v45++ >= 9;
          if (!v27) {
            continue;
          }
        }
        goto LABEL_68;
      }
      *(unsigned char *)(v3 + *v18) = 1;
LABEL_68:
      PBRepeatedUInt32Add();
    }
    goto LABEL_77;
  }
LABEL_116:
  int v75 = 0;
LABEL_97:
  LOBYTE(v15) = v74;
LABEL_98:
  if (v15) {
    goto LABEL_99;
  }
LABEL_100:
  if (v77 & 1 | ((v75 & 1) == 0))
  {
    *(unsigned char *)(a1 + 84) |= 2u;
    *(unsigned char *)(a1 + 84) |= 4u;
    goto LABEL_110;
  }
  if (v17)
  {
    while (1)
    {
      int v71 = *v17++;
      int v70 = v71;
      if (v71 == 1) {
        break;
      }
      if (v70 == 2)
      {
        char v69 = 4;
LABEL_106:
        *(unsigned char *)(a1 + 84) |= v69;
      }
      else if (!v70)
      {
        goto LABEL_110;
      }
    }
    char v69 = 2;
    goto LABEL_106;
  }
LABEL_110:
  if (v75) {
    unint64_t v3 = *(unsigned char *)(v3 + (int)*MEMORY[0x1E4F940C8]) == 0;
  }
  else {
    unint64_t v3 = 0;
  }
  if (v77)
  {
    uint64_t v72 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_18986E678(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18986EFBC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOTimeCheckpointsReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 76))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOTimeCheckpointsReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 80));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 72) = [v8 position];
  *(_DWORD *)(a1 + 76) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOTimeCheckpointsReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOTimeCheckpointsReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOTimeCheckpointsReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 80));
  return Specified;
}

void sub_18986F148(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOTimeCheckpointsReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOTimeCheckpointsReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18986F1AC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18986F3D8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOTimeCheckpointsIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 80));
  BOOL v2 = (*(unsigned char *)(a1 + 84) & 0xE) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 80));
  return v2;
}

void sub_18986F6F0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18986F96C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOTimeGapReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    id v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
      while (1)
      {
        if (v3[*v6]) {
          goto LABEL_61;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          goto LABEL_61;
        }
        unint64_t v18 = v10 >> 3;
        if ((v10 >> 3) == 3)
        {
          char v26 = 0;
          unsigned int v27 = 0;
          uint64_t v28 = 0;
          *(unsigned char *)(a1 + 28) |= 4u;
          while (1)
          {
            uint64_t v29 = *v4;
            uint64_t v30 = *(void *)&v3[v29];
            unint64_t v31 = v30 + 1;
            if (v30 == -1 || v31 > *(void *)&v3[*v5]) {
              break;
            }
            char v32 = *(unsigned char *)(*(void *)&v3[*v7] + v30);
            *(void *)&v3[v29] = v31;
            v28 |= (unint64_t)(v32 & 0x7F) << v26;
            if ((v32 & 0x80) == 0) {
              goto LABEL_52;
            }
            v26 += 7;
            BOOL v15 = v27++ >= 9;
            if (v15)
            {
              uint64_t v28 = 0;
              goto LABEL_54;
            }
          }
          v3[*v6] = 1;
LABEL_52:
          if (v3[*v6]) {
            uint64_t v28 = 0;
          }
LABEL_54:
          *(unsigned char *)(a1 + 24) = v28 != 0;
          goto LABEL_60;
        }
        if (v18 == 2) {
          break;
        }
        if (v18 == 1)
        {
          char v19 = 0;
          unsigned int v20 = 0;
          uint64_t v21 = 0;
          *(unsigned char *)(a1 + 28) |= 2u;
          while (1)
          {
            uint64_t v22 = *v4;
            uint64_t v23 = *(void *)&v3[v22];
            unint64_t v24 = v23 + 1;
            if (v23 == -1 || v24 > *(void *)&v3[*v5]) {
              break;
            }
            char v25 = *(unsigned char *)(*(void *)&v3[*v7] + v23);
            *(void *)&v3[v22] = v24;
            v21 |= (unint64_t)(v25 & 0x7F) << v19;
            if ((v25 & 0x80) == 0) {
              goto LABEL_48;
            }
            v19 += 7;
            BOOL v15 = v20++ >= 9;
            if (v15)
            {
              LODWORD(v21) = 0;
              goto LABEL_50;
            }
          }
          v3[*v6] = 1;
LABEL_48:
          if (v3[*v6]) {
            LODWORD(v21) = 0;
          }
LABEL_50:
          uint64_t v41 = 20;
LABEL_59:
          *(_DWORD *)(a1 + v41) = v21;
          goto LABEL_60;
        }
        if (!*(void *)(a1 + 8))
        {
          id v39 = objc_alloc_init(MEMORY[0x1E4F940B0]);
          uint64_t v40 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = v39;
        }
        if (!PBUnknownFieldAdd()) {
          goto LABEL_62;
        }
LABEL_60:
        if (*(void *)&v3[*v4] >= *(void *)&v3[*v5]) {
          goto LABEL_61;
        }
      }
      char v33 = 0;
      unsigned int v34 = 0;
      uint64_t v21 = 0;
      *(unsigned char *)(a1 + 28) |= 1u;
      while (1)
      {
        uint64_t v35 = *v4;
        uint64_t v36 = *(void *)&v3[v35];
        unint64_t v37 = v36 + 1;
        if (v36 == -1 || v37 > *(void *)&v3[*v5]) {
          break;
        }
        char v38 = *(unsigned char *)(*(void *)&v3[*v7] + v36);
        *(void *)&v3[v35] = v37;
        v21 |= (unint64_t)(v38 & 0x7F) << v33;
        if ((v38 & 0x80) == 0) {
          goto LABEL_56;
        }
        v33 += 7;
        BOOL v15 = v34++ >= 9;
        if (v15)
        {
          LODWORD(v21) = 0;
          goto LABEL_58;
        }
      }
      v3[*v6] = 1;
LABEL_56:
      if (v3[*v6]) {
        LODWORD(v21) = 0;
      }
LABEL_58:
      uint64_t v41 = 16;
      goto LABEL_59;
    }
LABEL_61:
    BOOL v42 = v3[*v6] == 0;
  }
  else
  {
LABEL_62:
    BOOL v42 = 0;
  }
  objc_sync_exit(v3);

  return v42;
}

void sub_1898704C8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOTimeGapReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOTimeGapReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18987052C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id GEOTimepointDescription(uint64_t a1)
{
  BOOL v2 = NSString;
  id v3 = _GEOTimepointDictionaryRepresentation(a1, 0);
  uint64_t v4 = [v2 stringWithFormat:@"GEOTimepoint<%p> %@", a1, v3];

  return v4;
}

id _GEOTimepointDictionaryRepresentation(uint64_t a1, int a2)
{
  uint64_t v4 = [MEMORY[0x1E4F1CA60] dictionary];
  char v5 = *(unsigned char *)(a1 + 20);
  if ((v5 & 1) == 0)
  {
    if ((*(unsigned char *)(a1 + 20) & 2) == 0) {
      goto LABEL_3;
    }
LABEL_9:
    char v8 = [NSNumber numberWithDouble:*(double *)(a1 + 8)];
    [v4 setObject:v8 forKey:@"time"];

    if ((*(unsigned char *)(a1 + 20) & 4) == 0) {
      goto LABEL_16;
    }
LABEL_10:
    int v9 = *(_DWORD *)(a1 + 16);
    if (v9)
    {
      if (v9 == 1)
      {
        unint64_t v10 = @"ARRIVE";
      }
      else
      {
        objc_msgSend(NSString, "stringWithFormat:", @"(unknown: %i)", *(unsigned int *)(a1 + 16));
        unint64_t v10 = (__CFString *)objc_claimAutoreleasedReturnValue();
      }
    }
    else
    {
      unint64_t v10 = @"DEPART";
    }
    [v4 setObject:v10 forKey:@"type"];

    goto LABEL_16;
  }
  char v6 = [NSNumber numberWithDouble:*(double *)a1];
  if (a2) {
    uint64_t v7 = @"currentUserTime";
  }
  else {
    uint64_t v7 = @"current_user_time";
  }
  [v4 setObject:v6 forKey:v7];

  char v5 = *(unsigned char *)(a1 + 20);
  if ((v5 & 2) != 0) {
    goto LABEL_9;
  }
LABEL_3:
  if ((v5 & 4) != 0) {
    goto LABEL_10;
  }
LABEL_16:

  return v4;
}

void _GEOTimepointFromDictionaryRepresentation(void *a1, uint64_t a2, int a3)
{
  id v13 = a1;
  char v5 = [v13 objectForKeyedSubscript:@"time"];
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    *(unsigned char *)(a2 + 20) |= 2u;
    [v5 doubleValue];
    *(void *)(a2 + 8) = v6;
  }

  uint64_t v7 = [v13 objectForKeyedSubscript:@"type"];
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    *(unsigned char *)(a2 + 20) |= 4u;
    id v8 = v7;
    if ([v8 isEqualToString:@"DEPART"]) {
      int v9 = 0;
    }
    else {
      int v9 = [v8 isEqualToString:@"ARRIVE"];
    }
  }
  else
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) == 0) {
      goto LABEL_11;
    }
    int v9 = [v7 intValue];
  }
  *(_DWORD *)(a2 + 16) = v9;
LABEL_11:

  if (a3) {
    unint64_t v10 = @"currentUserTime";
  }
  else {
    unint64_t v10 = @"current_user_time";
  }
  uint64_t v11 = [v13 objectForKeyedSubscript:v10];
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    *(unsigned char *)(a2 + 20) |= 1u;
    [v11 doubleValue];
    *(void *)a2 = v12;
  }
}

uint64_t GEOTimepointReadFrom(uint64_t a1, uint64_t a2)
{
  return GEOTimepointReadAllFrom(a1, a2);
}

uint64_t GEOTimepointHash()
{
  return PBHashBytes();
}

void sub_189871020(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOTimestampDataReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  uint64_t v7 = 0;
  uint64_t v8 = 0;
  char v9 = 0;
  uint64_t v10 = 0;
  int v11 = ((*(unsigned __int8 *)(a1 + 60) >> 4) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 2) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v10])
    {
      case -4:
        ++v11;
        uint64_t v12 = v7;
        goto LABEL_8;
      case -3:
        char v9 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_8;
      case 0:
        BOOL v14 = v11 != 0;
        char v15 = v14 & ~(_BYTE)v7;
        unsigned __int8 v16 = v14 | v7;
        char v66 = v15 | v8;
        char v67 = v16 | v15 | v8;
        if ((v16 | v9)) {
          char v17 = 0;
        }
        else {
          char v17 = a3;
        }
        char v68 = (v17 == 0) | v16;
        BOOL v69 = v16;
        unint64_t v18 = (int *)MEMORY[0x1E4F940E8];
        char v19 = (int *)MEMORY[0x1E4F940C8];
        unsigned int v20 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v11;
LABEL_7:
        uint64_t v12 = v7;
        uint64_t v13 = v8;
LABEL_8:
        ++v10;
        uint64_t v7 = v12;
        uint64_t v8 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v18) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v19)) {
      goto LABEL_82;
    }
    char v21 = 0;
    unsigned int v22 = 0;
    unint64_t v23 = 0;
    while (1)
    {
      uint64_t v24 = *v18;
      uint64_t v25 = *(void *)(v3 + v24);
      unint64_t v26 = v25 + 1;
      if (v25 == -1 || v26 > *(void *)(v3 + *v6)) {
        break;
      }
      char v27 = *(unsigned char *)(*(void *)(v3 + *v20) + v25);
      *(void *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0) {
        goto LABEL_23;
      }
      v21 += 7;
      BOOL v28 = v22++ >= 9;
      if (v28)
      {
        unint64_t v23 = 0;
        int v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_25;
      }
    }
    *(unsigned char *)(v3 + *v19) = 1;
LABEL_23:
    int v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(unsigned char *)(v3 + *v19)) {
      unint64_t v23 = 0;
    }
LABEL_25:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_82:
      int v64 = 1;
      goto LABEL_83;
    }
    unint64_t v31 = v23 >> 3;
    BOOL v32 = v69;
    if ((v68 & 1) == 0)
    {
      char v33 = v17;
      do
      {
        int v35 = *v33++;
        int v34 = v35;
        BOOL v32 = v35 != 0;
        if (v35) {
          BOOL v36 = v34 == v31;
        }
        else {
          BOOL v36 = 1;
        }
      }
      while (!v36);
    }
    switch((int)v31)
    {
      case 1:
        if ((v9 & 1) == 0) {
          goto LABEL_66;
        }
        char v37 = 0;
        unsigned int v38 = 0;
        uint64_t v39 = 0;
        *(unsigned char *)(a1 + 60) |= 1u;
        while (1)
        {
          uint64_t v40 = *v18;
          uint64_t v41 = *(void *)(v3 + v40);
          unint64_t v42 = v41 + 1;
          if (v41 == -1 || v42 > *(void *)(v3 + *v6)) {
            break;
          }
          char v43 = *(unsigned char *)(*(void *)(v3 + *v20) + v41);
          *(void *)(v3 + v40) = v42;
          v39 |= (unint64_t)(v43 & 0x7F) << v37;
          if ((v43 & 0x80) == 0) {
            goto LABEL_70;
          }
          v37 += 7;
          BOOL v28 = v38++ >= 9;
          if (v28)
          {
            LODWORD(v39) = 0;
            goto LABEL_72;
          }
        }
        *(unsigned char *)(v3 + *v19) = 1;
LABEL_70:
        if (*(unsigned char *)(v3 + *v19)) {
          LODWORD(v39) = 0;
        }
LABEL_72:
        *(_DWORD *)(a1 + 52) = v39;
        goto LABEL_67;
      case 2:
        if (!v32) {
          goto LABEL_66;
        }
        if ((*(unsigned char *)(a1 + 60) & 0x10) == 0)
        {
          uint64_t v47 = PBReaderReadString();
          uint64_t v48 = 32;
          goto LABEL_65;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_102;
        }
        char v58 = 8 * *(unsigned char *)(a1 + 60);
        goto LABEL_81;
      case 3:
        if ((v9 & 1) == 0) {
          goto LABEL_66;
        }
        char v49 = 0;
        unsigned int v50 = 0;
        uint64_t v51 = 0;
        *(unsigned char *)(a1 + 60) |= 2u;
        while (2)
        {
          uint64_t v52 = *v18;
          uint64_t v53 = *(void *)(v3 + v52);
          unint64_t v54 = v53 + 1;
          if (v53 == -1 || v54 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v19) = 1;
          }
          else
          {
            char v55 = *(unsigned char *)(*(void *)(v3 + *v20) + v53);
            *(void *)(v3 + v52) = v54;
            v51 |= (unint64_t)(v55 & 0x7F) << v49;
            if (v55 < 0)
            {
              v49 += 7;
              BOOL v28 = v50++ >= 9;
              if (v28)
              {
                uint64_t v51 = 0;
                goto LABEL_76;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v19)) {
          uint64_t v51 = 0;
        }
LABEL_76:
        *(unsigned char *)(a1 + 56) = v51 != 0;
        goto LABEL_67;
      case 4:
        if (!v32) {
          goto LABEL_66;
        }
        if ((*(unsigned char *)(a1 + 60) & 8) == 0)
        {
          uint64_t v47 = PBReaderReadString();
          uint64_t v48 = 24;
LABEL_65:
          uint64_t v56 = *(void **)(a1 + v48);
          *(void *)(a1 + v48) = v47;

          char v19 = (int *)MEMORY[0x1E4F940C8];
          --v10;
          goto LABEL_67;
        }
        if (PBReaderSkipValueWithTag())
        {
          char v58 = 16 * *(unsigned char *)(a1 + 60);
LABEL_81:
          v10 += v58 >> 7;
          char v19 = (int *)MEMORY[0x1E4F940C8];
LABEL_67:
          if (!(v67 & 1 | (v10 != 0))) {
            goto LABEL_82;
          }
          continue;
        }
LABEL_102:
        int v64 = 0;
        char v19 = (int *)MEMORY[0x1E4F940C8];
LABEL_83:
        uint64_t v65 = &OBJC_IVAR___GEOSpokenGuidance__priority;
        if (v66) {
LABEL_84:
        }
          *(unsigned char *)(a1 + v65[92]) |= 4u;
        if (v69 || (v64 & 1) == 0)
        {
          *(unsigned char *)(a1 + v65[92]) |= 0x10u;
          *(unsigned char *)(a1 + v65[92]) |= 8u;
          goto LABEL_95;
        }
        if (v17)
        {
          while (1)
          {
            int v61 = *v17++;
            int v60 = v61;
            if (v61 == 2) {
              break;
            }
            if (v60 == 4)
            {
              char v59 = 8;
LABEL_91:
              *(unsigned char *)(a1 + v65[92]) |= v59;
            }
            else if (!v60)
            {
              goto LABEL_95;
            }
          }
          char v59 = 16;
          goto LABEL_91;
        }
LABEL_95:
        if (v64) {
          unint64_t v3 = *(unsigned char *)(v3 + *v19) == 0;
        }
        else {
          unint64_t v3 = 0;
        }
        if (v69)
        {
          char v62 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      default:
        if ((v66 & 1) == 0 || (*(unsigned char *)(a1 + 60) & 4) != 0)
        {
LABEL_66:
          char v57 = PBReaderSkipValueWithTag();
          char v19 = (int *)MEMORY[0x1E4F940C8];
          if ((v57 & 1) == 0)
          {
            int v64 = 0;
            goto LABEL_83;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v44 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            unsigned int v45 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v44;
          }
          int v46 = PBUnknownFieldAdd();
          char v19 = (int *)MEMORY[0x1E4F940C8];
          if (!v46)
          {
            int v64 = 0;
            uint64_t v65 = &OBJC_IVAR___GEOSpokenGuidance__priority;
            goto LABEL_84;
          }
        }
        goto LABEL_67;
    }
  }
}

void sub_1898718A0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189871FD8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOTimestampDataReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOTimestampDataReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    char v9 = (int *)&GEOTimestampDataReadAllFrom_recursiveTag;
  }
  else {
    char v9 = (int *)&GEOTimestampDataReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOTimestampDataReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_189872168(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOTimestampDataReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOTimestampDataReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1898721CC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898723C0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOTimestampDataIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  BOOL v2 = (*(unsigned char *)(a1 + 60) & 0x38) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return v2;
}

void sub_189872740(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189872AB0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189872D50(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOTrafficBannerTextReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 152));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 148);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 144)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  unsigned int v12 = *(_DWORD *)(a1 + 212);
  uint32x4_t v13 = (uint32x4_t)vdupq_n_s32(v12);
  v14.i64[0] = 0x100000001;
  v14.i64[1] = 0x100000001;
  unsigned int v15 = vaddvq_s32((int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v13, (uint32x4_t)xmmword_18A633FF0), v14))
      + (*(_DWORD *)(a1 + 216) & 1)
      + ((v12 >> 27) & 1)
      + ((v12 >> 29) & 1)
      + vaddvq_s32(vaddq_s32((int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v13, (uint32x4_t)xmmword_18A634000), v14), (int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v13, (uint32x4_t)xmmword_18A634010), v14)))+ (v12 >> 31);
  while (2)
  {
    uint64_t v16 = 1;
    uint64_t v17 = 1;
    uint64_t v18 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v15;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v17 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v19 = v15 > 0xB;
        char v20 = v19 & ~(_BYTE)v11 | v9;
        unsigned __int8 v21 = v19 | v11;
        char v167 = v20;
        char v168 = v8;
        char v169 = v21 | v20;
        if ((v21 | v8)) {
          unsigned int v22 = 0;
        }
        else {
          unsigned int v22 = a3;
        }
        char v170 = (v22 == 0) | v21;
        BOOL v171 = v21;
        unint64_t v23 = (int *)MEMORY[0x1E4F940E8];
        uint64_t v24 = (int *)MEMORY[0x1E4F940C8];
        uint64_t v25 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v15;
LABEL_7:
        uint64_t v16 = v9;
LABEL_8:
        uint64_t v17 = v10;
        uint64_t v18 = v11;
LABEL_10:
        ++v7;
        uint64_t v9 = v16;
        uint64_t v10 = v17;
        uint64_t v11 = v18;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v23) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v24)) {
      goto LABEL_348;
    }
    char v26 = 0;
    unsigned int v27 = 0;
    unint64_t v28 = 0;
    while (1)
    {
      uint64_t v29 = *v23;
      uint64_t v30 = *(void *)(v3 + v29);
      unint64_t v31 = v30 + 1;
      if (v30 == -1 || v31 > *(void *)(v3 + *v6)) {
        break;
      }
      char v32 = *(unsigned char *)(*(void *)(v3 + *v25) + v30);
      *(void *)(v3 + v29) = v31;
      v28 |= (unint64_t)(v32 & 0x7F) << v26;
      if ((v32 & 0x80) == 0) {
        goto LABEL_25;
      }
      v26 += 7;
      BOOL v33 = v27++ >= 9;
      if (v33)
      {
        unint64_t v28 = 0;
        int v34 = *(unsigned __int8 *)(v3 + *v24);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v24) = 1;
LABEL_25:
    int v34 = *(unsigned __int8 *)(v3 + *v24);
    if (*(unsigned char *)(v3 + *v24)) {
      unint64_t v28 = 0;
    }
LABEL_27:
    if (v34 || (v28 & 7) == 4)
    {
LABEL_348:
      int v166 = 1;
      goto LABEL_349;
    }
    unint64_t v36 = v28 >> 3;
    BOOL v37 = v171;
    if ((v170 & 1) == 0)
    {
      unsigned int v38 = v22;
      do
      {
        int v40 = *v38++;
        int v39 = v40;
        BOOL v37 = v40 != 0;
        if (v40) {
          BOOL v41 = v39 == v36;
        }
        else {
          BOOL v41 = 1;
        }
      }
      while (!v41);
    }
    switch((int)v36)
    {
      case 1:
        if (!v37 || (*(unsigned char *)(a1 + 215) & 8) != 0) {
          goto LABEL_251;
        }
        PBReaderReadString();
        unint64_t v42 = (GEOFormattedString *)objc_claimAutoreleasedReturnValue();
        if (v42) {
          -[GEOTrafficBannerText _addNoFlagsLocalizedIncidentBanner:](a1, v42);
        }
        goto LABEL_141;
      case 2:
        if (!v37 || (*(unsigned char *)(a1 + 215) & 0x20) != 0) {
          goto LABEL_251;
        }
        PBReaderReadString();
        unint64_t v42 = (GEOFormattedString *)objc_claimAutoreleasedReturnValue();
        if (v42) {
          -[GEOTrafficBannerText _addNoFlagsLocalizedIncidentSubBanner:](a1, v42);
        }
        goto LABEL_141;
      case 3:
        if (!v37 || (*(unsigned char *)(a1 + 215) & 0x10) != 0) {
          goto LABEL_251;
        }
        PBReaderReadString();
        unint64_t v42 = (GEOFormattedString *)objc_claimAutoreleasedReturnValue();
        if (v42) {
          -[GEOTrafficBannerText _addNoFlagsLocalizedIncidentSpokenText:](a1, v42);
        }
        goto LABEL_141;
      case 4:
        if (!v37) {
          goto LABEL_251;
        }
        if ((*(unsigned char *)(a1 + 214) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_378;
          }
          uint64_t v161 = *(void *)(a1 + 212) << 41;
          goto LABEL_345;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_378;
        }
        unint64_t v42 = objc_alloc_init(GEOFormattedString);
        if (!GEOFormattedStringReadAllFrom((uint64_t)v42, (void *)v3, v10 & 1)) {
          goto LABEL_377;
        }
        PBReaderRecallMark();
        uint64_t v46 = 56;
        goto LABEL_249;
      case 5:
        if (!v37) {
          goto LABEL_251;
        }
        if ((*(unsigned char *)(a1 + 214) & 0x80) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_378;
          }
          uint64_t v161 = *(void *)(a1 + 212) << 40;
          goto LABEL_345;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_378;
        }
        unint64_t v42 = objc_alloc_init(GEOFormattedString);
        if (!GEOFormattedStringReadAllFrom((uint64_t)v42, (void *)v3, v10 & 1)) {
          goto LABEL_377;
        }
        PBReaderRecallMark();
        uint64_t v46 = 64;
        goto LABEL_249;
      case 6:
        if (!v37) {
          goto LABEL_251;
        }
        if ((*(unsigned char *)(a1 + 215) & 0x80) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_378;
          }
          uint64_t v161 = *(void *)(a1 + 212) << 32;
          goto LABEL_345;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_378;
        }
        unint64_t v42 = objc_alloc_init(GEOFormattedString);
        if (!GEOFormattedStringReadAllFrom((uint64_t)v42, (void *)v3, v10 & 1)) {
          goto LABEL_377;
        }
        PBReaderRecallMark();
        uint64_t v46 = 128;
        goto LABEL_249;
      case 7:
        if ((v168 & 1) == 0) {
          goto LABEL_251;
        }
        char v47 = 0;
        unsigned int v48 = 0;
        uint64_t v49 = 0;
        *(void *)(a1 + 212) |= 0x800uLL;
        while (2)
        {
          uint64_t v50 = *v23;
          uint64_t v51 = *(void *)(v3 + v50);
          unint64_t v52 = v51 + 1;
          if (v51 == -1 || v52 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v24) = 1;
          }
          else
          {
            char v53 = *(unsigned char *)(*(void *)(v3 + *v25) + v51);
            *(void *)(v3 + v50) = v52;
            v49 |= (unint64_t)(v53 & 0x7F) << v47;
            if (v53 < 0)
            {
              v47 += 7;
              BOOL v33 = v48++ >= 9;
              if (v33)
              {
                LODWORD(v49) = 0;
                goto LABEL_256;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v24)) {
          LODWORD(v49) = 0;
        }
LABEL_256:
        uint64_t v158 = 200;
        goto LABEL_317;
      case 8:
        if ((v168 & 1) == 0) {
          goto LABEL_251;
        }
        char v54 = 0;
        unsigned int v55 = 0;
        uint64_t v49 = 0;
        *(void *)(a1 + 212) |= 8uLL;
        while (2)
        {
          uint64_t v56 = *v23;
          uint64_t v57 = *(void *)(v3 + v56);
          unint64_t v58 = v57 + 1;
          if (v57 == -1 || v58 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v24) = 1;
          }
          else
          {
            char v59 = *(unsigned char *)(*(void *)(v3 + *v25) + v57);
            *(void *)(v3 + v56) = v58;
            v49 |= (unint64_t)(v59 & 0x7F) << v54;
            if (v59 < 0)
            {
              v54 += 7;
              BOOL v33 = v55++ >= 9;
              if (v33)
              {
                LODWORD(v49) = 0;
                goto LABEL_260;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v24)) {
          LODWORD(v49) = 0;
        }
LABEL_260:
        uint64_t v158 = 168;
        goto LABEL_317;
      case 9:
        if ((v168 & 1) == 0) {
          goto LABEL_251;
        }
        char v60 = 0;
        unsigned int v61 = 0;
        uint64_t v49 = 0;
        *(void *)(a1 + 212) |= 0x10uLL;
        while (2)
        {
          uint64_t v62 = *v23;
          uint64_t v63 = *(void *)(v3 + v62);
          unint64_t v64 = v63 + 1;
          if (v63 == -1 || v64 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v24) = 1;
          }
          else
          {
            char v65 = *(unsigned char *)(*(void *)(v3 + *v25) + v63);
            *(void *)(v3 + v62) = v64;
            v49 |= (unint64_t)(v65 & 0x7F) << v60;
            if (v65 < 0)
            {
              v60 += 7;
              BOOL v33 = v61++ >= 9;
              if (v33)
              {
                LODWORD(v49) = 0;
                goto LABEL_264;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v24)) {
          LODWORD(v49) = 0;
        }
LABEL_264:
        uint64_t v158 = 172;
        goto LABEL_317;
      case 10:
        if ((v168 & 1) == 0) {
          goto LABEL_251;
        }
        char v66 = 0;
        unsigned int v67 = 0;
        uint64_t v49 = 0;
        *(void *)(a1 + 212) |= 0x20uLL;
        while (2)
        {
          uint64_t v68 = *v23;
          uint64_t v69 = *(void *)(v3 + v68);
          unint64_t v70 = v69 + 1;
          if (v69 == -1 || v70 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v24) = 1;
          }
          else
          {
            char v71 = *(unsigned char *)(*(void *)(v3 + *v25) + v69);
            *(void *)(v3 + v68) = v70;
            v49 |= (unint64_t)(v71 & 0x7F) << v66;
            if (v71 < 0)
            {
              v66 += 7;
              BOOL v33 = v67++ >= 9;
              if (v33)
              {
                LODWORD(v49) = 0;
                goto LABEL_268;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v24)) {
          LODWORD(v49) = 0;
        }
LABEL_268:
        uint64_t v158 = 176;
        goto LABEL_317;
      case 11:
        if ((v168 & 1) == 0) {
          goto LABEL_251;
        }
        char v72 = 0;
        unsigned int v73 = 0;
        uint64_t v49 = 0;
        *(void *)(a1 + 212) |= 0x100uLL;
        while (2)
        {
          uint64_t v74 = *v23;
          uint64_t v75 = *(void *)(v3 + v74);
          unint64_t v76 = v75 + 1;
          if (v75 == -1 || v76 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v24) = 1;
          }
          else
          {
            char v77 = *(unsigned char *)(*(void *)(v3 + *v25) + v75);
            *(void *)(v3 + v74) = v76;
            v49 |= (unint64_t)(v77 & 0x7F) << v72;
            if (v77 < 0)
            {
              v72 += 7;
              BOOL v33 = v73++ >= 9;
              if (v33)
              {
                LODWORD(v49) = 0;
                goto LABEL_272;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v24)) {
          LODWORD(v49) = 0;
        }
LABEL_272:
        uint64_t v158 = 188;
        goto LABEL_317;
      case 12:
        if ((v168 & 1) == 0) {
          goto LABEL_251;
        }
        char v78 = 0;
        unsigned int v79 = 0;
        uint64_t v80 = 0;
        *(void *)(a1 + 212) |= 0x4000uLL;
        while (2)
        {
          uint64_t v81 = *v23;
          uint64_t v82 = *(void *)(v3 + v81);
          unint64_t v83 = v82 + 1;
          if (v82 == -1 || v83 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v24) = 1;
          }
          else
          {
            char v84 = *(unsigned char *)(*(void *)(v3 + *v25) + v82);
            *(void *)(v3 + v81) = v83;
            v80 |= (unint64_t)(v84 & 0x7F) << v78;
            if (v84 < 0)
            {
              v78 += 7;
              BOOL v33 = v79++ >= 9;
              if (v33)
              {
                uint64_t v80 = 0;
                goto LABEL_276;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v24)) {
          uint64_t v80 = 0;
        }
LABEL_276:
        BOOL v159 = v80 != 0;
        uint64_t v160 = 209;
        goto LABEL_322;
      case 13:
        if ((v168 & 1) == 0) {
          goto LABEL_251;
        }
        char v85 = 0;
        unsigned int v86 = 0;
        uint64_t v49 = 0;
        *(void *)(a1 + 212) |= 2uLL;
        while (2)
        {
          uint64_t v87 = *v23;
          uint64_t v88 = *(void *)(v3 + v87);
          unint64_t v89 = v88 + 1;
          if (v88 == -1 || v89 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v24) = 1;
          }
          else
          {
            char v90 = *(unsigned char *)(*(void *)(v3 + *v25) + v88);
            *(void *)(v3 + v87) = v89;
            v49 |= (unint64_t)(v90 & 0x7F) << v85;
            if (v90 < 0)
            {
              v85 += 7;
              BOOL v33 = v86++ >= 9;
              if (v33)
              {
                LODWORD(v49) = 0;
                goto LABEL_280;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v24)) {
          LODWORD(v49) = 0;
        }
LABEL_280:
        uint64_t v158 = 160;
        goto LABEL_317;
      case 14:
        if ((v168 & 1) == 0) {
          goto LABEL_251;
        }
        char v91 = 0;
        unsigned int v92 = 0;
        uint64_t v49 = 0;
        *(void *)(a1 + 212) |= 0x400uLL;
        while (2)
        {
          uint64_t v93 = *v23;
          uint64_t v94 = *(void *)(v3 + v93);
          unint64_t v95 = v94 + 1;
          if (v94 == -1 || v95 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v24) = 1;
          }
          else
          {
            char v96 = *(unsigned char *)(*(void *)(v3 + *v25) + v94);
            *(void *)(v3 + v93) = v95;
            v49 |= (unint64_t)(v96 & 0x7F) << v91;
            if (v96 < 0)
            {
              v91 += 7;
              BOOL v33 = v92++ >= 9;
              if (v33)
              {
                LODWORD(v49) = 0;
                goto LABEL_284;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v24)) {
          LODWORD(v49) = 0;
        }
LABEL_284:
        uint64_t v158 = 196;
        goto LABEL_317;
      case 15:
        if (!v37 || (*(unsigned char *)(a1 + 215) & 1) != 0) {
          goto LABEL_251;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_378;
        }
        unint64_t v42 = objc_alloc_init(GEOTrafficBannerTextButton);
        if (!GEOTrafficBannerTextButtonReadAllFrom((uint64_t)v42, (void *)v3, v10 & 1)) {
          goto LABEL_377;
        }
        PBReaderRecallMark();
        -[GEOTrafficBannerText _addNoFlagsButton:](a1, v42);
LABEL_141:

        goto LABEL_346;
      case 16:
        if ((v168 & 1) == 0) {
          goto LABEL_251;
        }
        char v97 = 0;
        unsigned int v98 = 0;
        uint64_t v49 = 0;
        *(void *)(a1 + 212) |= 4uLL;
        while (2)
        {
          uint64_t v99 = *v23;
          uint64_t v100 = *(void *)(v3 + v99);
          unint64_t v101 = v100 + 1;
          if (v100 == -1 || v101 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v24) = 1;
          }
          else
          {
            char v102 = *(unsigned char *)(*(void *)(v3 + *v25) + v100);
            *(void *)(v3 + v99) = v101;
            v49 |= (unint64_t)(v102 & 0x7F) << v97;
            if (v102 < 0)
            {
              v97 += 7;
              BOOL v33 = v98++ >= 9;
              if (v33)
              {
                LODWORD(v49) = 0;
                goto LABEL_288;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v24)) {
          LODWORD(v49) = 0;
        }
LABEL_288:
        uint64_t v158 = 164;
        goto LABEL_317;
      case 17:
        if ((v168 & 1) == 0) {
          goto LABEL_251;
        }
        char v103 = 0;
        unsigned int v104 = 0;
        uint64_t v49 = 0;
        *(void *)(a1 + 212) |= 1uLL;
        while (2)
        {
          uint64_t v105 = *v23;
          uint64_t v106 = *(void *)(v3 + v105);
          unint64_t v107 = v106 + 1;
          if (v106 == -1 || v107 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v24) = 1;
          }
          else
          {
            char v108 = *(unsigned char *)(*(void *)(v3 + *v25) + v106);
            *(void *)(v3 + v105) = v107;
            v49 |= (unint64_t)(v108 & 0x7F) << v103;
            if (v108 < 0)
            {
              v103 += 7;
              BOOL v33 = v104++ >= 9;
              if (v33)
              {
                LODWORD(v49) = 0;
                goto LABEL_292;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v24)) {
          LODWORD(v49) = 0;
        }
LABEL_292:
        uint64_t v158 = 156;
        goto LABEL_317;
      case 18:
        if ((v168 & 1) == 0) {
          goto LABEL_251;
        }
        char v109 = 0;
        unsigned int v110 = 0;
        uint64_t v111 = 0;
        *(void *)(a1 + 212) |= 0x10000uLL;
        while (2)
        {
          uint64_t v112 = *v23;
          uint64_t v113 = *(void *)(v3 + v112);
          unint64_t v114 = v113 + 1;
          if (v113 == -1 || v114 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v24) = 1;
          }
          else
          {
            char v115 = *(unsigned char *)(*(void *)(v3 + *v25) + v113);
            *(void *)(v3 + v112) = v114;
            v111 |= (unint64_t)(v115 & 0x7F) << v109;
            if (v115 < 0)
            {
              v109 += 7;
              BOOL v33 = v110++ >= 9;
              if (v33)
              {
                uint64_t v111 = 0;
                goto LABEL_296;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v24)) {
          uint64_t v111 = 0;
        }
LABEL_296:
        BOOL v159 = v111 != 0;
        uint64_t v160 = 211;
        goto LABEL_322;
      case 19:
        if ((v168 & 1) == 0) {
          goto LABEL_251;
        }
        char v116 = 0;
        unsigned int v117 = 0;
        uint64_t v49 = 0;
        *(void *)(a1 + 212) |= 0x1000uLL;
        while (2)
        {
          uint64_t v118 = *v23;
          uint64_t v119 = *(void *)(v3 + v118);
          unint64_t v120 = v119 + 1;
          if (v119 == -1 || v120 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v24) = 1;
          }
          else
          {
            char v121 = *(unsigned char *)(*(void *)(v3 + *v25) + v119);
            *(void *)(v3 + v118) = v120;
            v49 |= (unint64_t)(v121 & 0x7F) << v116;
            if (v121 < 0)
            {
              v116 += 7;
              BOOL v33 = v117++ >= 9;
              if (v33)
              {
                LODWORD(v49) = 0;
                goto LABEL_300;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v24)) {
          LODWORD(v49) = 0;
        }
LABEL_300:
        uint64_t v158 = 204;
        goto LABEL_317;
      case 20:
        if (!v37) {
          goto LABEL_251;
        }
        if ((*(unsigned char *)(a1 + 214) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_378;
          }
          uint64_t v161 = *(void *)(a1 + 212) << 43;
          goto LABEL_345;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_378;
        }
        unint64_t v42 = objc_alloc_init(GEOFormattedString);
        if (!GEOFormattedStringReadAllFrom((uint64_t)v42, (void *)v3, v10 & 1)) {
          goto LABEL_377;
        }
        PBReaderRecallMark();
        uint64_t v46 = 40;
        goto LABEL_249;
      case 21:
        if (!v37) {
          goto LABEL_251;
        }
        if ((*(unsigned char *)(a1 + 214) & 0x20) == 0)
        {
          uint64_t v122 = PBReaderReadString();
          uint64_t v123 = 48;
          goto LABEL_243;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_378;
        }
        uint64_t v161 = *(void *)(a1 + 212) << 42;
        goto LABEL_345;
      case 22:
        if ((v168 & 1) == 0) {
          goto LABEL_251;
        }
        char v124 = 0;
        unsigned int v125 = 0;
        uint64_t v126 = 0;
        *(void *)(a1 + 212) |= 0x2000uLL;
        while (2)
        {
          uint64_t v127 = *v23;
          uint64_t v128 = *(void *)(v3 + v127);
          unint64_t v129 = v128 + 1;
          if (v128 == -1 || v129 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v24) = 1;
          }
          else
          {
            char v130 = *(unsigned char *)(*(void *)(v3 + *v25) + v128);
            *(void *)(v3 + v127) = v129;
            v126 |= (unint64_t)(v130 & 0x7F) << v124;
            if (v130 < 0)
            {
              v124 += 7;
              BOOL v33 = v125++ >= 9;
              if (v33)
              {
                uint64_t v126 = 0;
                goto LABEL_304;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v24)) {
          uint64_t v126 = 0;
        }
LABEL_304:
        BOOL v159 = v126 != 0;
        uint64_t v160 = 208;
        goto LABEL_322;
      case 23:
        if (!v37) {
          goto LABEL_251;
        }
        if ((*(unsigned char *)(a1 + 214) & 4) == 0)
        {
          uint64_t v122 = PBReaderReadString();
          uint64_t v123 = 24;
          goto LABEL_243;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_378;
        }
        uint64_t v161 = *(void *)(a1 + 212) << 45;
        goto LABEL_345;
      case 24:
        if (!v37) {
          goto LABEL_251;
        }
        if (*(unsigned char *)(a1 + 216))
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_378;
          }
          uint64_t v161 = *(void *)(a1 + 212) << 31;
          goto LABEL_345;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_378;
        }
        unint64_t v42 = objc_alloc_init(GEOTriggerPointRange);
        if (!GEOTriggerPointRangeReadAllFrom((uint64_t)v42, (void *)v3, v10 & 1)) {
          goto LABEL_377;
        }
        PBReaderRecallMark();
        uint64_t v46 = 136;
        goto LABEL_249;
      case 25:
        if (!v37) {
          goto LABEL_251;
        }
        if ((*(unsigned char *)(a1 + 215) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_378;
          }
          uint64_t v161 = *(void *)(a1 + 212) << 33;
          goto LABEL_345;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_378;
        }
        unint64_t v42 = objc_alloc_init(GEOTriggerPointRange);
        if (!GEOTriggerPointRangeReadAllFrom((uint64_t)v42, (void *)v3, v10 & 1)) {
          goto LABEL_377;
        }
        PBReaderRecallMark();
        uint64_t v46 = 120;
        goto LABEL_249;
      case 26:
        if ((v168 & 1) == 0) {
          goto LABEL_251;
        }
        char v131 = 0;
        unsigned int v132 = 0;
        uint64_t v49 = 0;
        *(void *)(a1 + 212) |= 0x200uLL;
        while (2)
        {
          uint64_t v133 = *v23;
          uint64_t v134 = *(void *)(v3 + v133);
          unint64_t v135 = v134 + 1;
          if (v134 == -1 || v135 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v24) = 1;
          }
          else
          {
            char v136 = *(unsigned char *)(*(void *)(v3 + *v25) + v134);
            *(void *)(v3 + v133) = v135;
            v49 |= (unint64_t)(v136 & 0x7F) << v131;
            if (v136 < 0)
            {
              v131 += 7;
              BOOL v33 = v132++ >= 9;
              if (v33)
              {
                LODWORD(v49) = 0;
                goto LABEL_308;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v24)) {
          LODWORD(v49) = 0;
        }
LABEL_308:
        uint64_t v158 = 192;
        goto LABEL_317;
      case 27:
        if ((v168 & 1) == 0) {
          goto LABEL_251;
        }
        char v137 = 0;
        unsigned int v138 = 0;
        uint64_t v49 = 0;
        *(void *)(a1 + 212) |= 0x40uLL;
        while (2)
        {
          uint64_t v139 = *v23;
          uint64_t v140 = *(void *)(v3 + v139);
          unint64_t v141 = v140 + 1;
          if (v140 == -1 || v141 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v24) = 1;
          }
          else
          {
            char v142 = *(unsigned char *)(*(void *)(v3 + *v25) + v140);
            *(void *)(v3 + v139) = v141;
            v49 |= (unint64_t)(v142 & 0x7F) << v137;
            if (v142 < 0)
            {
              v137 += 7;
              BOOL v33 = v138++ >= 9;
              if (v33)
              {
                LODWORD(v49) = 0;
                goto LABEL_312;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v24)) {
          LODWORD(v49) = 0;
        }
LABEL_312:
        uint64_t v158 = 180;
        goto LABEL_317;
      case 28:
        if ((v168 & 1) == 0) {
          goto LABEL_251;
        }
        char v143 = 0;
        unsigned int v144 = 0;
        uint64_t v49 = 0;
        *(void *)(a1 + 212) |= 0x80uLL;
        while (2)
        {
          uint64_t v145 = *v23;
          uint64_t v146 = *(void *)(v3 + v145);
          unint64_t v147 = v146 + 1;
          if (v146 == -1 || v147 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v24) = 1;
          }
          else
          {
            char v148 = *(unsigned char *)(*(void *)(v3 + *v25) + v146);
            *(void *)(v3 + v145) = v147;
            v49 |= (unint64_t)(v148 & 0x7F) << v143;
            if (v148 < 0)
            {
              v143 += 7;
              BOOL v33 = v144++ >= 9;
              if (v33)
              {
                LODWORD(v49) = 0;
                goto LABEL_316;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v24)) {
          LODWORD(v49) = 0;
        }
LABEL_316:
        uint64_t v158 = 184;
LABEL_317:
        *(_DWORD *)(a1 + v158) = v49;
        goto LABEL_347;
      case 29:
        if (!v37) {
          goto LABEL_251;
        }
        if ((*(unsigned char *)(a1 + 214) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_378;
          }
          uint64_t v161 = *(void *)(a1 + 212) << 44;
          goto LABEL_345;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_378;
        }
        unint64_t v42 = objc_alloc_init(GEOPBTransitArtwork);
        if (!GEOPBTransitArtworkReadAllFrom((uint64_t)v42, (void *)v3, v10 & 1)) {
          goto LABEL_377;
        }
        PBReaderRecallMark();
        uint64_t v46 = 32;
        goto LABEL_249;
      case 30:
        if ((v168 & 1) == 0) {
          goto LABEL_251;
        }
        char v149 = 0;
        unsigned int v150 = 0;
        uint64_t v151 = 0;
        *(void *)(a1 + 212) |= 0x8000uLL;
        while (2)
        {
          uint64_t v152 = *v23;
          uint64_t v153 = *(void *)(v3 + v152);
          unint64_t v154 = v153 + 1;
          if (v153 == -1 || v154 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v24) = 1;
          }
          else
          {
            char v155 = *(unsigned char *)(*(void *)(v3 + *v25) + v153);
            *(void *)(v3 + v152) = v154;
            v151 |= (unint64_t)(v155 & 0x7F) << v149;
            if (v155 < 0)
            {
              v149 += 7;
              BOOL v33 = v150++ >= 9;
              if (v33)
              {
                uint64_t v151 = 0;
                goto LABEL_321;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v24)) {
          uint64_t v151 = 0;
        }
LABEL_321:
        BOOL v159 = v151 != 0;
        uint64_t v160 = 210;
LABEL_322:
        *(unsigned char *)(a1 + v160) = v159;
        goto LABEL_347;
      case 31:
        if (!v37) {
          goto LABEL_251;
        }
        if ((*(unsigned char *)(a1 + 215) & 4) == 0)
        {
          uint64_t v122 = PBReaderReadData();
          uint64_t v123 = 88;
LABEL_243:
          uint64_t v156 = *(void **)(a1 + v123);
          *(void *)(a1 + v123) = v122;
          goto LABEL_250;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_378;
        }
        uint64_t v161 = *(void *)(a1 + 212) << 37;
        goto LABEL_345;
      case 32:
        if (!v37) {
          goto LABEL_251;
        }
        if ((*(unsigned char *)(a1 + 215) & 2) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_378;
          }
          uint64_t v161 = *(void *)(a1 + 212) << 38;
LABEL_345:
          v7 += v161 >> 63;
LABEL_346:
          uint64_t v24 = (int *)MEMORY[0x1E4F940C8];
          uint64_t v25 = (int *)MEMORY[0x1E4F940B8];
LABEL_347:
          if (!(v169 & 1 | (v7 != 0))) {
            goto LABEL_348;
          }
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_378;
        }
        unint64_t v42 = objc_alloc_init(GEOCameraInput);
        if (GEOCameraInputReadAllFrom(v42, (void *)v3))
        {
          PBReaderRecallMark();
          uint64_t v46 = 80;
LABEL_249:
          uint64_t v156 = *(void **)(a1 + v46);
          *(void *)(a1 + v46) = v42;
LABEL_250:

          --v7;
          goto LABEL_346;
        }
LABEL_377:

LABEL_378:
        int v166 = 0;
        uint64_t v24 = (int *)MEMORY[0x1E4F940C8];
LABEL_349:
        if (v167) {
LABEL_350:
        }
          *(void *)(a1 + 212) |= 0x20000uLL;
        if (v171 || (v166 & 1) == 0)
        {
          *(void *)(a1 + 212) |= 0x1FFFC0000uLL;
        }
        else if (v22)
        {
          while (1)
          {
            int v163 = *v22++;
            uint64_t v162 = 0x8000000;
            switch(v163)
            {
              case 0:
                goto LABEL_371;
              case 1:
                goto LABEL_369;
              case 2:
                uint64_t v162 = 0x20000000;
                goto LABEL_369;
              case 3:
                uint64_t v162 = 0x10000000;
                goto LABEL_369;
              case 4:
                uint64_t v162 = 0x400000;
                goto LABEL_369;
              case 5:
                uint64_t v162 = 0x800000;
                goto LABEL_369;
              case 6:
                uint64_t v162 = 0x80000000;
                goto LABEL_369;
              case 15:
                uint64_t v162 = 0x1000000;
                goto LABEL_369;
              case 20:
                uint64_t v162 = 0x100000;
                goto LABEL_369;
              case 21:
                uint64_t v162 = 0x200000;
                goto LABEL_369;
              case 23:
                uint64_t v162 = 0x40000;
                goto LABEL_369;
              case 24:
                uint64_t v162 = 0x100000000;
                goto LABEL_369;
              case 25:
                uint64_t v162 = 0x40000000;
                goto LABEL_369;
              case 29:
                uint64_t v162 = 0x80000;
                goto LABEL_369;
              case 31:
                uint64_t v162 = 0x4000000;
                goto LABEL_369;
              case 32:
                uint64_t v162 = 0x2000000;
LABEL_369:
                *(void *)(a1 + 212) |= v162;
                break;
              default:
                continue;
            }
          }
        }
LABEL_371:
        if (v166) {
          unint64_t v3 = *(unsigned char *)(v3 + *v24) == 0;
        }
        else {
          unint64_t v3 = 0;
        }
        if (v171)
        {
          unint64_t v164 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      default:
        if ((v167 & 1) == 0 || (*(unsigned char *)(a1 + 214) & 2) != 0)
        {
LABEL_251:
          char v157 = PBReaderSkipValueWithTag();
          uint64_t v25 = (int *)MEMORY[0x1E4F940B8];
          uint64_t v24 = (int *)MEMORY[0x1E4F940C8];
          if ((v157 & 1) == 0)
          {
            int v166 = 0;
            goto LABEL_349;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v43 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            id v44 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v43;
          }
          int v45 = PBUnknownFieldAdd();
          uint64_t v24 = (int *)MEMORY[0x1E4F940C8];
          uint64_t v25 = (int *)MEMORY[0x1E4F940B8];
          if (!v45)
          {
            int v166 = 0;
            goto LABEL_350;
          }
        }
        goto LABEL_347;
    }
  }
}

void sub_189874A54(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189874E20(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898751EC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189875360(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898754D4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18987584C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898759C0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189875B2C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898763B0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189876A38(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189876BAC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189876E08(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189876F7C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898771D8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189879338(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOTrafficBannerTextCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  uint64_t v13 = *MEMORY[0x1E4F143B8];
  [a1[7] readAll:1];
  [a1[8] readAll:1];
  [a1[16] readAll:1];
  [a1[10] readAll:1];
  [a1[17] readAll:1];
  [a1[15] readAll:1];
  long long v10 = 0u;
  long long v11 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  id v2 = a1[9];
  uint64_t v3 = [v2 countByEnumeratingWithState:&v8 objects:v12 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v9;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v9 != v5) {
          objc_enumerationMutation(v2);
        }
        objc_msgSend(*(id *)(*((void *)&v8 + 1) + 8 * v6++), "readAll:", 1, (void)v8);
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v8 objects:v12 count:16];
    }
    while (v4);
  }

  [a1[5] readAll:1];
  return [a1[4] readAll:1];
}

unint64_t GEOTrafficBannerTextReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 148))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOTrafficBannerTextReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)long long v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 152));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 144) = [v8 position];
  *(_DWORD *)(a1 + 148) = [v8 length];
  if (a3) {
    long long v9 = (int *)&GEOTrafficBannerTextReadAllFrom_recursiveTag;
  }
  else {
    long long v9 = (int *)&GEOTrafficBannerTextReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOTrafficBannerTextReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOTrafficBannerTextCallReadAllRecursiveWithoutSynchronized((id *)a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 152));
  return Specified;
}

void sub_189879658(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOTrafficBannerTextReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOTrafficBannerTextReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1898796BC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOTrafficBannerTextIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 != 2) {
            goto LABEL_192;
          }
          goto LABEL_183;
        case 2u:
          if (v15 == 2) {
            goto LABEL_183;
          }
          goto LABEL_192;
        case 3u:
          if (v15 == 2) {
            goto LABEL_183;
          }
          goto LABEL_192;
        case 4u:
        case 5u:
        case 6u:
        case 0x14u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOFormattedStringIsValid(a1)) {
            goto LABEL_192;
          }
          goto LABEL_188;
        case 7u:
          if ((v8 & 7) != 0) {
            goto LABEL_192;
          }
          unsigned int v17 = 0;
          while (1)
          {
            uint64_t v18 = *v2;
            uint64_t v19 = *(void *)&a1[v18];
            unint64_t v20 = v19 + 1;
            if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
              goto LABEL_181;
            }
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if (v21 < 0)
            {
              BOOL v22 = v17++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_189;
          }
        case 8u:
          if ((v8 & 7) != 0) {
            goto LABEL_192;
          }
          unsigned int v23 = 0;
          while (1)
          {
            uint64_t v24 = *v2;
            uint64_t v25 = *(void *)&a1[v24];
            unint64_t v26 = v25 + 1;
            if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
              goto LABEL_181;
            }
            int v27 = *(char *)(*(void *)&a1[*v5] + v25);
            *(void *)&a1[v24] = v26;
            if (v27 < 0)
            {
              BOOL v22 = v23++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_189;
          }
        case 9u:
          if ((v8 & 7) != 0) {
            goto LABEL_192;
          }
          unsigned int v28 = 0;
          while (1)
          {
            uint64_t v29 = *v2;
            uint64_t v30 = *(void *)&a1[v29];
            unint64_t v31 = v30 + 1;
            if (v30 == -1 || v31 > *(void *)&a1[*v3]) {
              goto LABEL_181;
            }
            int v32 = *(char *)(*(void *)&a1[*v5] + v30);
            *(void *)&a1[v29] = v31;
            if (v32 < 0)
            {
              BOOL v22 = v28++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_189;
          }
        case 0xAu:
          if ((v8 & 7) != 0) {
            goto LABEL_192;
          }
          unsigned int v33 = 0;
          while (1)
          {
            uint64_t v34 = *v2;
            uint64_t v35 = *(void *)&a1[v34];
            unint64_t v36 = v35 + 1;
            if (v35 == -1 || v36 > *(void *)&a1[*v3]) {
              goto LABEL_181;
            }
            int v37 = *(char *)(*(void *)&a1[*v5] + v35);
            *(void *)&a1[v34] = v36;
            if (v37 < 0)
            {
              BOOL v22 = v33++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_189;
          }
        case 0xBu:
          if ((v8 & 7) != 0) {
            goto LABEL_192;
          }
          unsigned int v38 = 0;
          while (1)
          {
            uint64_t v39 = *v2;
            uint64_t v40 = *(void *)&a1[v39];
            unint64_t v41 = v40 + 1;
            if (v40 == -1 || v41 > *(void *)&a1[*v3]) {
              goto LABEL_181;
            }
            int v42 = *(char *)(*(void *)&a1[*v5] + v40);
            *(void *)&a1[v39] = v41;
            if (v42 < 0)
            {
              BOOL v22 = v38++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_189;
          }
        case 0xCu:
          if ((v8 & 7) != 0) {
            goto LABEL_192;
          }
          unsigned int v43 = 0;
          while (1)
          {
            uint64_t v44 = *v2;
            uint64_t v45 = *(void *)&a1[v44];
            unint64_t v46 = v45 + 1;
            if (v45 == -1 || v46 > *(void *)&a1[*v3]) {
              goto LABEL_181;
            }
            int v47 = *(char *)(*(void *)&a1[*v5] + v45);
            *(void *)&a1[v44] = v46;
            if (v47 < 0)
            {
              BOOL v22 = v43++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_189;
          }
        case 0xDu:
          if ((v8 & 7) != 0) {
            goto LABEL_192;
          }
          unsigned int v48 = 0;
          while (1)
          {
            uint64_t v49 = *v2;
            uint64_t v50 = *(void *)&a1[v49];
            unint64_t v51 = v50 + 1;
            if (v50 == -1 || v51 > *(void *)&a1[*v3]) {
              goto LABEL_181;
            }
            int v52 = *(char *)(*(void *)&a1[*v5] + v50);
            *(void *)&a1[v49] = v51;
            if (v52 < 0)
            {
              BOOL v22 = v48++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_189;
          }
        case 0xEu:
          if ((v8 & 7) != 0) {
            goto LABEL_192;
          }
          unsigned int v53 = 0;
          while (1)
          {
            uint64_t v54 = *v2;
            uint64_t v55 = *(void *)&a1[v54];
            unint64_t v56 = v55 + 1;
            if (v55 == -1 || v56 > *(void *)&a1[*v3]) {
              goto LABEL_181;
            }
            int v57 = *(char *)(*(void *)&a1[*v5] + v55);
            *(void *)&a1[v54] = v56;
            if (v57 < 0)
            {
              BOOL v22 = v53++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_189;
          }
        case 0xFu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOTrafficBannerTextButtonIsValid(a1)) {
            goto LABEL_192;
          }
          goto LABEL_188;
        case 0x10u:
          if ((v8 & 7) != 0) {
            goto LABEL_192;
          }
          unsigned int v58 = 0;
          while (1)
          {
            uint64_t v59 = *v2;
            uint64_t v60 = *(void *)&a1[v59];
            unint64_t v61 = v60 + 1;
            if (v60 == -1 || v61 > *(void *)&a1[*v3]) {
              goto LABEL_181;
            }
            int v62 = *(char *)(*(void *)&a1[*v5] + v60);
            *(void *)&a1[v59] = v61;
            if (v62 < 0)
            {
              BOOL v22 = v58++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_189;
          }
        case 0x11u:
          if ((v8 & 7) != 0) {
            goto LABEL_192;
          }
          unsigned int v63 = 0;
          while (1)
          {
            uint64_t v64 = *v2;
            uint64_t v65 = *(void *)&a1[v64];
            unint64_t v66 = v65 + 1;
            if (v65 == -1 || v66 > *(void *)&a1[*v3]) {
              goto LABEL_181;
            }
            int v67 = *(char *)(*(void *)&a1[*v5] + v65);
            *(void *)&a1[v64] = v66;
            if (v67 < 0)
            {
              BOOL v22 = v63++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_189;
          }
        case 0x12u:
          if ((v8 & 7) != 0) {
            goto LABEL_192;
          }
          unsigned int v68 = 0;
          while (1)
          {
            uint64_t v69 = *v2;
            uint64_t v70 = *(void *)&a1[v69];
            unint64_t v71 = v70 + 1;
            if (v70 == -1 || v71 > *(void *)&a1[*v3]) {
              goto LABEL_181;
            }
            int v72 = *(char *)(*(void *)&a1[*v5] + v70);
            *(void *)&a1[v69] = v71;
            if (v72 < 0)
            {
              BOOL v22 = v68++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_189;
          }
        case 0x13u:
          if ((v8 & 7) != 0) {
            goto LABEL_192;
          }
          unsigned int v73 = 0;
          while (1)
          {
            uint64_t v74 = *v2;
            uint64_t v75 = *(void *)&a1[v74];
            unint64_t v76 = v75 + 1;
            if (v75 == -1 || v76 > *(void *)&a1[*v3]) {
              goto LABEL_181;
            }
            int v77 = *(char *)(*(void *)&a1[*v5] + v75);
            *(void *)&a1[v74] = v76;
            if (v77 < 0)
            {
              BOOL v22 = v73++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_189;
          }
        case 0x15u:
          if (v15 == 2) {
            goto LABEL_183;
          }
          goto LABEL_192;
        case 0x16u:
          if ((v8 & 7) != 0) {
            goto LABEL_192;
          }
          unsigned int v78 = 0;
          while (1)
          {
            uint64_t v79 = *v2;
            uint64_t v80 = *(void *)&a1[v79];
            unint64_t v81 = v80 + 1;
            if (v80 == -1 || v81 > *(void *)&a1[*v3]) {
              goto LABEL_181;
            }
            int v82 = *(char *)(*(void *)&a1[*v5] + v80);
            *(void *)&a1[v79] = v81;
            if (v82 < 0)
            {
              BOOL v22 = v78++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_189;
          }
        case 0x17u:
          if (v15 == 2) {
            goto LABEL_183;
          }
          goto LABEL_192;
        case 0x18u:
        case 0x19u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOTriggerPointRangeIsValid(a1)) {
            goto LABEL_192;
          }
          goto LABEL_188;
        case 0x1Au:
          if ((v8 & 7) != 0) {
            goto LABEL_192;
          }
          unsigned int v83 = 0;
          while (1)
          {
            uint64_t v84 = *v2;
            uint64_t v85 = *(void *)&a1[v84];
            unint64_t v86 = v85 + 1;
            if (v85 == -1 || v86 > *(void *)&a1[*v3]) {
              goto LABEL_181;
            }
            int v87 = *(char *)(*(void *)&a1[*v5] + v85);
            *(void *)&a1[v84] = v86;
            if (v87 < 0)
            {
              BOOL v22 = v83++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_189;
          }
        case 0x1Bu:
          if ((v8 & 7) != 0) {
            goto LABEL_192;
          }
          unsigned int v88 = 0;
          while (1)
          {
            uint64_t v89 = *v2;
            uint64_t v90 = *(void *)&a1[v89];
            unint64_t v91 = v90 + 1;
            if (v90 == -1 || v91 > *(void *)&a1[*v3]) {
              goto LABEL_181;
            }
            int v92 = *(char *)(*(void *)&a1[*v5] + v90);
            *(void *)&a1[v89] = v91;
            if (v92 < 0)
            {
              BOOL v22 = v88++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_189;
          }
        case 0x1Cu:
          if ((v8 & 7) != 0) {
            goto LABEL_192;
          }
          unsigned int v93 = 0;
          while (1)
          {
            uint64_t v94 = *v2;
            uint64_t v95 = *(void *)&a1[v94];
            unint64_t v96 = v95 + 1;
            if (v95 == -1 || v96 > *(void *)&a1[*v3]) {
              goto LABEL_181;
            }
            int v97 = *(char *)(*(void *)&a1[*v5] + v95);
            *(void *)&a1[v94] = v96;
            if (v97 < 0)
            {
              BOOL v22 = v93++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_189;
          }
        case 0x1Du:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPBTransitArtworkIsValid(a1)) {
            goto LABEL_192;
          }
          goto LABEL_188;
        case 0x1Eu:
          if ((v8 & 7) != 0) {
            goto LABEL_192;
          }
          unsigned int v98 = 0;
          break;
        case 0x1Fu:
          if (v15 == 2) {
            goto LABEL_183;
          }
          goto LABEL_192;
        case 0x20u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOCameraInputIsValid(a1)) {
            goto LABEL_192;
          }
LABEL_188:
          PBReaderRecallMark();
          continue;
        default:
LABEL_183:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_192:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        uint64_t v99 = *v2;
        uint64_t v100 = *(void *)&a1[v99];
        unint64_t v101 = v100 + 1;
        if (v100 == -1 || v101 > *(void *)&a1[*v3]) {
          break;
        }
        int v102 = *(char *)(*(void *)&a1[*v5] + v100);
        *(void *)&a1[v99] = v101;
        if (v102 < 0)
        {
          BOOL v22 = v98++ > 8;
          if (!v22) {
            continue;
          }
        }
        goto LABEL_189;
      }
LABEL_181:
      a1[*v4] = 1;
LABEL_189:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v103 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v103;
}

BOOL GEOTriggerPointRangeIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      unint64_t v17 = v8 >> 3;
      if ((v8 >> 3) == 3)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_38;
        }
        unsigned int v18 = 0;
        while (1)
        {
          uint64_t v19 = *v2;
          uint64_t v20 = *(void *)&a1[v19];
          unint64_t v21 = v20 + 1;
          if (v20 == -1 || v21 > *(void *)&a1[*v3]) {
            break;
          }
          int v22 = *(char *)(*(void *)&a1[*v5] + v20);
          *(void *)&a1[v19] = v21;
          if (v22 < 0 && v18++ <= 8) {
            continue;
          }
          goto LABEL_36;
        }
        a1[*v4] = 1;
      }
      else if (v17 == 2 || v17 == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOTriggerPointIsValid(a1))
        {
LABEL_38:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_38;
      }
LABEL_36:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v24 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v24;
}

BOOL GEOTrafficBannerTextButtonIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_44;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        goto LABEL_44;
      }
      unint64_t v17 = v8 >> 3;
      if ((v8 >> 3) == 3) {
        break;
      }
      if (v17 == 2)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_46;
        }
        unsigned int v24 = 0;
        while (1)
        {
          uint64_t v25 = *v2;
          uint64_t v26 = *(void *)&a1[v25];
          unint64_t v27 = v26 + 1;
          if (v26 == -1 || v27 > *(void *)&a1[*v3]) {
            goto LABEL_41;
          }
          int v28 = *(char *)(*(void *)&a1[*v5] + v26);
          *(void *)&a1[v25] = v27;
          if (v28 < 0)
          {
            BOOL v23 = v24++ > 8;
            if (!v23) {
              continue;
            }
          }
          goto LABEL_43;
        }
      }
      if (v17 == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOFormattedStringIsValid(a1))
        {
LABEL_46:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_46;
      }
LABEL_43:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_44;
      }
    }
    if ((v8 & 7) != 0) {
      goto LABEL_46;
    }
    unsigned int v18 = 0;
    while (1)
    {
      uint64_t v19 = *v2;
      uint64_t v20 = *(void *)&a1[v19];
      unint64_t v21 = v20 + 1;
      if (v20 == -1 || v21 > *(void *)&a1[*v3]) {
        break;
      }
      int v22 = *(char *)(*(void *)&a1[*v5] + v20);
      *(void *)&a1[v19] = v21;
      if (v22 < 0)
      {
        BOOL v23 = v18++ > 8;
        if (!v23) {
          continue;
        }
      }
      goto LABEL_43;
    }
LABEL_41:
    a1[*v4] = 1;
    goto LABEL_43;
  }
LABEL_44:
  BOOL v29 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v29;
}

void sub_18987ABBC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOTrafficBannerTextIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 152));
  unint64_t v2 = *(void *)(a1 + 212);
  if ((v2 & 0x238000000) != 0) {
    return 1;
  }
  if ((v2 & 0x400000) != 0)
  {
    if (GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(a1 + 56))) {
      return 1;
    }
    unint64_t v2 = *(void *)(a1 + 212);
  }
  if ((v2 & 0x800000) != 0)
  {
    if (GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(a1 + 64))) {
      return 1;
    }
    unint64_t v2 = *(void *)(a1 + 212);
  }
  if ((v2 & 0x80000000) != 0)
  {
    if (GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(a1 + 128))) {
      return 1;
    }
    unint64_t v2 = *(void *)(a1 + 212);
  }
  if ((v2 & 0x2000000) != 0) {
    return 1;
  }
  if ((v2 & 0x100000000) != 0)
  {
    if (GEOTriggerPointRangeIsDirty(*(void *)(a1 + 136))) {
      return 1;
    }
    unint64_t v2 = *(void *)(a1 + 212);
  }
  if ((v2 & 0x40000000) != 0)
  {
    if (GEOTriggerPointRangeIsDirty(*(void *)(a1 + 120))) {
      return 1;
    }
    unint64_t v2 = *(void *)(a1 + 212);
  }
  if ((v2 & 0x1000000) != 0) {
    return 1;
  }
  if ((v2 & 0x100000) != 0)
  {
    if (GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(a1 + 40))) {
      return 1;
    }
    unint64_t v2 = *(void *)(a1 + 212);
  }
  if ((v2 & 0x240000) != 0) {
    return 1;
  }
  if ((v2 & 0x80000) != 0)
  {
    if ((GEOPBTransitArtworkIsDirty(*(os_unfair_lock_s **)(a1 + 32)) & 1) == 0)
    {
      unint64_t v2 = *(void *)(a1 + 212);
      return (v2 >> 26) & 1;
    }
    return 1;
  }
  return (v2 >> 26) & 1;
}

os_unfair_lock_s *GEOTrafficBannerTextIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    uint64_t v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOTrafficBannerTextIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 38);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_18987BBFC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18987CDD4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOTrafficBannerTextButtonReadAllFrom(uint64_t a1, void *a2, int a3)
{
  uint64_t v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    char v6 = (int *)MEMORY[0x1E4F940E8];
    unsigned int v7 = (int *)MEMORY[0x1E4F940E0];
    unint64_t v8 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v5[*MEMORY[0x1E4F940E8]] < *(void *)&v5[*MEMORY[0x1E4F940E0]])
    {
      uint64_t v9 = (int *)MEMORY[0x1E4F940B8];
      while (1)
      {
        if (v5[*v8]) {
          goto LABEL_53;
        }
        char v10 = 0;
        unsigned int v11 = 0;
        unint64_t v12 = 0;
        while (1)
        {
          uint64_t v13 = *v6;
          uint64_t v14 = *(void *)&v5[v13];
          unint64_t v15 = v14 + 1;
          if (v14 == -1 || v15 > *(void *)&v5[*v7]) {
            break;
          }
          char v16 = *(unsigned char *)(*(void *)&v5[*v9] + v14);
          *(void *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0) {
            goto LABEL_13;
          }
          v10 += 7;
          BOOL v17 = v11++ >= 9;
          if (v17)
          {
            unint64_t v12 = 0;
            int v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        int v18 = v5[*v8];
        if (v5[*v8]) {
          unint64_t v12 = 0;
        }
LABEL_15:
        if (v18 || (v12 & 7) == 4) {
          goto LABEL_53;
        }
        unint64_t v20 = v12 >> 3;
        if ((v12 >> 3) == 3) {
          break;
        }
        if (v20 == 2)
        {
          char v30 = 0;
          unsigned int v31 = 0;
          uint64_t v25 = 0;
          *(unsigned char *)(a1 + 32) |= 1u;
          while (1)
          {
            uint64_t v32 = *v6;
            uint64_t v33 = *(void *)&v5[v32];
            unint64_t v34 = v33 + 1;
            if (v33 == -1 || v34 > *(void *)&v5[*v7]) {
              break;
            }
            char v35 = *(unsigned char *)(*(void *)&v5[*v9] + v33);
            *(void *)&v5[v32] = v34;
            v25 |= (unint64_t)(v35 & 0x7F) << v30;
            if ((v35 & 0x80) == 0) {
              goto LABEL_48;
            }
            v30 += 7;
            BOOL v17 = v31++ >= 9;
            if (v17)
            {
              LODWORD(v25) = 0;
              goto LABEL_50;
            }
          }
          v5[*v8] = 1;
LABEL_48:
          if (v5[*v8]) {
            LODWORD(v25) = 0;
          }
LABEL_50:
          uint64_t v38 = 24;
LABEL_51:
          *(_DWORD *)(a1 + v38) = v25;
          goto LABEL_52;
        }
        if (v20 == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_55;
          }
          unint64_t v21 = objc_alloc_init(GEOFormattedString);
          if (!GEOFormattedStringReadAllFrom((uint64_t)v21, v5, a3))
          {

            goto LABEL_55;
          }
          PBReaderRecallMark();
          int v22 = *(void **)(a1 + 16);
          *(void *)(a1 + 16) = v21;
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v36 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            int v37 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v36;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_55;
          }
        }
LABEL_52:
        if (*(void *)&v5[*v6] >= *(void *)&v5[*v7]) {
          goto LABEL_53;
        }
      }
      char v23 = 0;
      unsigned int v24 = 0;
      uint64_t v25 = 0;
      *(unsigned char *)(a1 + 32) |= 2u;
      while (1)
      {
        uint64_t v26 = *v6;
        uint64_t v27 = *(void *)&v5[v26];
        unint64_t v28 = v27 + 1;
        if (v27 == -1 || v28 > *(void *)&v5[*v7]) {
          break;
        }
        char v29 = *(unsigned char *)(*(void *)&v5[*v9] + v27);
        *(void *)&v5[v26] = v28;
        v25 |= (unint64_t)(v29 & 0x7F) << v23;
        if ((v29 & 0x80) == 0) {
          goto LABEL_44;
        }
        v23 += 7;
        BOOL v17 = v24++ >= 9;
        if (v17)
        {
          LODWORD(v25) = 0;
          goto LABEL_46;
        }
      }
      v5[*v8] = 1;
LABEL_44:
      if (v5[*v8]) {
        LODWORD(v25) = 0;
      }
LABEL_46:
      uint64_t v38 = 28;
      goto LABEL_51;
    }
LABEL_53:
    BOOL v39 = v5[*v8] == 0;
  }
  else
  {
LABEL_55:
    BOOL v39 = 0;
  }
  objc_sync_exit(v5);

  return v39;
}

void sub_18987DE3C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOTrafficBannerTextButtonReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOTrafficBannerTextButtonReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18987DEA0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18987E5C0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOTrafficCameraReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 80));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 76);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 72)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  unsigned int v12 = (unsigned __int16)(vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int16 *)(a1 + 100)), (uint16x4_t)0xFFF7FFF9FFFAFFF8), (int8x8_t)0x1000100010001))+ ((*(_WORD *)(a1 + 100) >> 10) & 1)+ ((*(_WORD *)(a1 + 100) >> 5) & 1));
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 > 3;
        char v17 = v16 & ~(_BYTE)v11 | v9;
        unsigned __int8 v18 = v16 | v11;
        char v84 = v17;
        char v85 = v18 | v17;
        if ((v18 | v8)) {
          uint64_t v19 = 0;
        }
        else {
          uint64_t v19 = a3;
        }
        unint64_t v20 = (int *)MEMORY[0x1E4F940E8];
        unint64_t v21 = (int *)MEMORY[0x1E4F940C8];
        char v86 = (v19 == 0) | v18;
        BOOL v87 = v18;
        int v22 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v9;
LABEL_8:
        uint64_t v14 = v10;
        uint64_t v15 = v11;
LABEL_10:
        ++v7;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v21)) {
      goto LABEL_140;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      BOOL v30 = v24++ >= 9;
      if (v30)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_25:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_140:
      int v82 = 1;
      goto LABEL_141;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v87;
    if ((v86 & 1) == 0)
    {
      char v35 = v19;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    switch((int)v33)
    {
      case 1:
        if (!v34) {
          goto LABEL_105;
        }
        if ((*(_WORD *)(a1 + 100) & 0x40) == 0)
        {
          uint64_t v39 = PBReaderReadString();
          uint64_t v40 = 24;
          goto LABEL_77;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_160;
        }
        __int16 v77 = *(_WORD *)(a1 + 100) << 9;
        goto LABEL_134;
      case 2:
        if ((v8 & 1) == 0) {
          goto LABEL_105;
        }
        char v44 = 0;
        unsigned int v45 = 0;
        uint64_t v46 = 0;
        *(_WORD *)(a1 + 100) |= 0x10u;
        while (2)
        {
          uint64_t v47 = *v20;
          uint64_t v48 = *(void *)(v3 + v47);
          unint64_t v49 = v48 + 1;
          if (v48 == -1 || v49 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v50 = *(unsigned char *)(*(void *)(v3 + *v22) + v48);
            *(void *)(v3 + v47) = v49;
            v46 |= (unint64_t)(v50 & 0x7F) << v44;
            if (v50 < 0)
            {
              v44 += 7;
              BOOL v30 = v45++ >= 9;
              if (v30)
              {
                LODWORD(v46) = 0;
                goto LABEL_110;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          LODWORD(v46) = 0;
        }
LABEL_110:
        uint64_t v76 = 96;
        goto LABEL_123;
      case 3:
        if (!v34) {
          goto LABEL_105;
        }
        if ((*(_WORD *)(a1 + 100) & 0x100) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_160;
          }
          __int16 v77 = *(_WORD *)(a1 + 100) << 7;
          goto LABEL_134;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_160;
        }
        unint64_t v51 = objc_alloc_init(GEOLatLng);
        if (!GEOLatLngReadAllFrom((uint64_t)v51, (void *)v3)) {
          goto LABEL_159;
        }
        PBReaderRecallMark();
        uint64_t v52 = 40;
        goto LABEL_87;
      case 4:
        if ((v8 & 1) == 0) {
          goto LABEL_105;
        }
        char v53 = 0;
        unsigned int v54 = 0;
        uint64_t v46 = 0;
        *(_WORD *)(a1 + 100) |= 8u;
        while (2)
        {
          uint64_t v55 = *v20;
          uint64_t v56 = *(void *)(v3 + v55);
          unint64_t v57 = v56 + 1;
          if (v56 == -1 || v57 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v58 = *(unsigned char *)(*(void *)(v3 + *v22) + v56);
            *(void *)(v3 + v55) = v57;
            v46 |= (unint64_t)(v58 & 0x7F) << v53;
            if (v58 < 0)
            {
              v53 += 7;
              BOOL v30 = v54++ >= 9;
              if (v30)
              {
                LODWORD(v46) = 0;
                goto LABEL_114;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          LODWORD(v46) = 0;
        }
LABEL_114:
        uint64_t v76 = 92;
        goto LABEL_123;
      case 5:
        if (!v34) {
          goto LABEL_105;
        }
        if ((*(_WORD *)(a1 + 100) & 0x80) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_160;
          }
          __int16 v77 = *(_WORD *)(a1 + 100) << 8;
          goto LABEL_134;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_160;
        }
        unint64_t v51 = objc_alloc_init(GEOMiniCard);
        if (!GEOMiniCardReadAllFrom((uint64_t)v51, (void *)v3, v10 & 1)) {
          goto LABEL_159;
        }
        PBReaderRecallMark();
        uint64_t v52 = 32;
        goto LABEL_87;
      case 6:
        if (!v34) {
          goto LABEL_105;
        }
        if ((*(_WORD *)(a1 + 100) & 0x200) == 0)
        {
          uint64_t v39 = PBReaderReadString();
          uint64_t v40 = 48;
LABEL_77:
          uint64_t v59 = *(void **)(a1 + v40);
          *(void *)(a1 + v40) = v39;
          goto LABEL_88;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_160;
        }
        __int16 v77 = *(_WORD *)(a1 + 100) << 6;
        goto LABEL_134;
      case 7:
        if ((v8 & 1) == 0) {
          goto LABEL_105;
        }
        *(_WORD *)(a1 + 100) |= 1u;
        uint64_t v60 = *v20;
        unint64_t v61 = *(void *)(v3 + v60);
        if (v61 <= 0xFFFFFFFFFFFFFFF7 && v61 + 8 <= *(void *)(v3 + *v6))
        {
          uint64_t v62 = *(void *)(*(void *)(v3 + *v22) + v61);
          *(void *)(v3 + v60) = v61 + 8;
        }
        else
        {
          *(unsigned char *)(v3 + *v21) = 1;
          uint64_t v62 = 0;
        }
        *(void *)(a1 + 56) = v62;
        goto LABEL_136;
      case 8:
        if (!v34) {
          goto LABEL_105;
        }
        if ((*(_WORD *)(a1 + 100) & 0x400) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_160;
          }
          __int16 v77 = 32 * *(_WORD *)(a1 + 100);
LABEL_134:
          v7 += v77 >> 15;
LABEL_135:
          unint64_t v21 = (int *)MEMORY[0x1E4F940C8];
          int v22 = (int *)MEMORY[0x1E4F940B8];
          goto LABEL_136;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_160;
        }
        unint64_t v51 = objc_alloc_init(GEOMiniCard);
        if (GEOMiniCardReadAllFrom((uint64_t)v51, (void *)v3, v10 & 1))
        {
          PBReaderRecallMark();
          uint64_t v52 = 64;
LABEL_87:
          uint64_t v59 = *(void **)(a1 + v52);
          *(void *)(a1 + v52) = v51;
LABEL_88:

          --v7;
          goto LABEL_135;
        }
LABEL_159:

LABEL_160:
        int v82 = 0;
        unsigned int v83 = &OBJC_IVAR___GEOComposedRoute__visualInfosForRouteNameLabels;
        unint64_t v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_142:
        if (v84) {
LABEL_143:
        }
          *(_WORD *)(a1 + v83[671]) |= 0x20u;
        if (v87 || (v82 & 1) == 0)
        {
          *(_WORD *)(a1 + v83[671]) |= 0x40u;
          *(_WORD *)(a1 + v83[671]) |= 0x100u;
          *(_WORD *)(a1 + v83[671]) |= 0x80u;
          *(_WORD *)(a1 + v83[671]) |= 0x200u;
          *(_WORD *)(a1 + v83[671]) |= 0x400u;
        }
        else if (v19)
        {
          while (1)
          {
            int v78 = *v19++;
            __int16 v79 = 64;
            switch(v78)
            {
              case 0:
                goto LABEL_153;
              case 1:
                goto LABEL_152;
              case 3:
                __int16 v79 = 256;
                goto LABEL_152;
              case 5:
                __int16 v79 = 128;
                goto LABEL_152;
              case 6:
                __int16 v79 = 512;
                goto LABEL_152;
              case 8:
                __int16 v79 = 1024;
LABEL_152:
                *(_WORD *)(a1 + v83[671]) |= v79;
                break;
              default:
                continue;
            }
          }
        }
LABEL_153:
        if (v82) {
          unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
        }
        else {
          unint64_t v3 = 0;
        }
        if (v87)
        {
          uint64_t v80 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      case 9:
        if ((v8 & 1) == 0) {
          goto LABEL_105;
        }
        char v63 = 0;
        unsigned int v64 = 0;
        uint64_t v46 = 0;
        *(_WORD *)(a1 + 100) |= 2u;
        while (2)
        {
          uint64_t v65 = *v20;
          uint64_t v66 = *(void *)(v3 + v65);
          unint64_t v67 = v66 + 1;
          if (v66 == -1 || v67 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v68 = *(unsigned char *)(*(void *)(v3 + *v22) + v66);
            *(void *)(v3 + v65) = v67;
            v46 |= (unint64_t)(v68 & 0x7F) << v63;
            if (v68 < 0)
            {
              v63 += 7;
              BOOL v30 = v64++ >= 9;
              if (v30)
              {
                LODWORD(v46) = 0;
                goto LABEL_118;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          LODWORD(v46) = 0;
        }
LABEL_118:
        uint64_t v76 = 84;
        goto LABEL_123;
      case 10:
        if ((v8 & 1) == 0) {
          goto LABEL_105;
        }
        char v69 = 0;
        unsigned int v70 = 0;
        uint64_t v46 = 0;
        *(_WORD *)(a1 + 100) |= 4u;
        while (2)
        {
          uint64_t v71 = *v20;
          uint64_t v72 = *(void *)(v3 + v71);
          unint64_t v73 = v72 + 1;
          if (v72 == -1 || v73 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v74 = *(unsigned char *)(*(void *)(v3 + *v22) + v72);
            *(void *)(v3 + v71) = v73;
            v46 |= (unint64_t)(v74 & 0x7F) << v69;
            if (v74 < 0)
            {
              v69 += 7;
              BOOL v30 = v70++ >= 9;
              if (v30)
              {
                LODWORD(v46) = 0;
                goto LABEL_122;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          LODWORD(v46) = 0;
        }
LABEL_122:
        uint64_t v76 = 88;
LABEL_123:
        *(_DWORD *)(a1 + v76) = v46;
        goto LABEL_136;
      default:
        if ((v84 & 1) == 0 || (*(_WORD *)(a1 + 100) & 0x20) != 0)
        {
LABEL_105:
          char v75 = PBReaderSkipValueWithTag();
          int v22 = (int *)MEMORY[0x1E4F940B8];
          unint64_t v21 = (int *)MEMORY[0x1E4F940C8];
          if ((v75 & 1) == 0)
          {
            int v82 = 0;
LABEL_141:
            unsigned int v83 = &OBJC_IVAR___GEOComposedRoute__visualInfosForRouteNameLabels;
            goto LABEL_142;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v41 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            int v42 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v41;
          }
          int v43 = PBUnknownFieldAdd();
          unint64_t v21 = (int *)MEMORY[0x1E4F940C8];
          int v22 = (int *)MEMORY[0x1E4F940B8];
          if (!v43)
          {
            int v82 = 0;
            unsigned int v83 = &OBJC_IVAR___GEOComposedRoute__visualInfosForRouteNameLabels;
            goto LABEL_143;
          }
        }
LABEL_136:
        if (!(v85 & 1 | (v7 != 0))) {
          goto LABEL_140;
        }
        continue;
    }
  }
}

void sub_18987F474(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18987F654(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18987F7C0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18987F998(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18988073C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOTrafficCameraReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 76))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOTrafficCameraReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 80));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 72) = [v8 position];
  *(_DWORD *)(a1 + 76) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOTrafficCameraReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOTrafficCameraReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOTrafficCameraReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    [*(id *)(a1 + 40) readAll:1];
    [*(id *)(a1 + 32) readAll:1];
    [*(id *)(a1 + 64) readAll:1];
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 80));
  return Specified;
}

void sub_189880908(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOTrafficCameraReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOTrafficCameraReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18988096C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOTrafficCameraIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  unint64_t v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          uint64_t v14 = *v4;
          int v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      uint64_t v14 = *v4;
      int v15 = a1[v14];
      if (a1[v14]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v16 = v8 & 7;
      if (v15 || v16 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v16 != 2) {
            goto LABEL_73;
          }
          goto LABEL_46;
        case 2u:
          if ((v8 & 7) != 0) {
            goto LABEL_73;
          }
          unsigned int v18 = 0;
          while (1)
          {
            uint64_t v19 = *v2;
            uint64_t v20 = *(void *)&a1[v19];
            unint64_t v21 = v20 + 1;
            if (v20 == -1 || v21 > *(void *)&a1[*v3]) {
              goto LABEL_68;
            }
            int v22 = *(char *)(*(void *)&a1[*v5] + v20);
            *(void *)&a1[v19] = v21;
            if (v22 < 0)
            {
              BOOL v23 = v18++ > 8;
              if (!v23) {
                continue;
              }
            }
            goto LABEL_70;
          }
        case 3u:
          if (v16 == 2 && PBReaderPlaceMark() && GEOLatLngIsValid(a1)) {
            goto LABEL_36;
          }
          goto LABEL_73;
        case 4u:
          if ((v8 & 7) != 0) {
            goto LABEL_73;
          }
          unsigned int v24 = 0;
          while (1)
          {
            uint64_t v25 = *v2;
            uint64_t v26 = *(void *)&a1[v25];
            unint64_t v27 = v26 + 1;
            if (v26 == -1 || v27 > *(void *)&a1[*v3]) {
              goto LABEL_68;
            }
            int v28 = *(char *)(*(void *)&a1[*v5] + v26);
            *(void *)&a1[v25] = v27;
            if (v28 < 0)
            {
              BOOL v23 = v24++ > 8;
              if (!v23) {
                continue;
              }
            }
            goto LABEL_70;
          }
        case 5u:
        case 8u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOMiniCardIsValid(a1)) {
            goto LABEL_73;
          }
LABEL_36:
          PBReaderRecallMark();
          continue;
        case 6u:
          if (v16 == 2) {
            goto LABEL_46;
          }
          goto LABEL_73;
        case 7u:
          if (v16 != 1) {
            goto LABEL_73;
          }
          uint64_t v29 = *v2;
          unint64_t v30 = *(void *)&a1[v29];
          if (v30 > 0xFFFFFFFFFFFFFFF7) {
            goto LABEL_69;
          }
          unint64_t v31 = v30 + 8;
          if (v31 > *(void *)&a1[*v3]) {
            goto LABEL_69;
          }
          *(void *)&a1[v29] = v31;
          continue;
        case 9u:
          if ((v8 & 7) != 0) {
            goto LABEL_73;
          }
          unsigned int v32 = 0;
          while (1)
          {
            uint64_t v33 = *v2;
            uint64_t v34 = *(void *)&a1[v33];
            unint64_t v35 = v34 + 1;
            if (v34 == -1 || v35 > *(void *)&a1[*v3]) {
              goto LABEL_68;
            }
            int v36 = *(char *)(*(void *)&a1[*v5] + v34);
            *(void *)&a1[v33] = v35;
            if (v36 < 0)
            {
              BOOL v23 = v32++ > 8;
              if (!v23) {
                continue;
              }
            }
            goto LABEL_70;
          }
        case 0xAu:
          if ((v8 & 7) != 0) {
            goto LABEL_73;
          }
          unsigned int v37 = 0;
          break;
        default:
LABEL_46:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_73:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        uint64_t v38 = *v2;
        uint64_t v39 = *(void *)&a1[v38];
        unint64_t v40 = v39 + 1;
        if (v39 == -1 || v40 > *(void *)&a1[*v3]) {
          break;
        }
        int v41 = *(char *)(*(void *)&a1[*v5] + v39);
        *(void *)&a1[v38] = v40;
        if (v41 < 0)
        {
          BOOL v23 = v37++ > 8;
          if (!v23) {
            continue;
          }
        }
        goto LABEL_70;
      }
LABEL_68:
      uint64_t v14 = *v4;
LABEL_69:
      a1[v14] = 1;
LABEL_70:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v42 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v42;
}

void sub_189881008(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOTrafficCameraIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 80));
  __int16 v2 = *(_WORD *)(a1 + 100);
  if ((v2 & 0x940) != 0) {
    return 1;
  }
  if ((v2 & 0x80) != 0)
  {
    if (GEOMiniCardIsDirty(*(os_unfair_lock_s **)(a1 + 32))) {
      return 1;
    }
    __int16 v2 = *(_WORD *)(a1 + 100);
  }
  if ((v2 & 0x200) != 0) {
    return 1;
  }
  if ((v2 & 0x400) == 0) {
    return 0;
  }
  uint64_t v4 = *(os_unfair_lock_s **)(a1 + 64);

  return (uint64_t)GEOMiniCardIsDirty(v4);
}

os_unfair_lock_s *GEOTrafficCameraIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    uint64_t v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOTrafficCameraIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 20);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_1898815F0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189881C60(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOTrafficColorAndOffsetReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      while (1)
      {
        if (v3[*v6]) {
          goto LABEL_49;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          goto LABEL_49;
        }
        if ((v10 >> 3) == 2) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          char v18 = 0;
          unsigned int v19 = 0;
          uint64_t v20 = 0;
          *(unsigned char *)(a1 + 24) |= 1u;
          while (1)
          {
            uint64_t v21 = *v4;
            uint64_t v22 = *(void *)&v3[v21];
            unint64_t v23 = v22 + 1;
            if (v22 == -1 || v23 > *(void *)&v3[*v5])
            {
              uint64_t v26 = &OBJC_IVAR___GEOTrafficColorAndOffset__color;
              goto LABEL_41;
            }
            char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
            *(void *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0) {
              break;
            }
            v18 += 7;
            BOOL v25 = v19++ > 8;
            if (v25)
            {
              LODWORD(v20) = 0;
              uint64_t v26 = &OBJC_IVAR___GEOTrafficColorAndOffset__color;
              goto LABEL_44;
            }
          }
          uint64_t v26 = &OBJC_IVAR___GEOTrafficColorAndOffset__color;
LABEL_42:
          if (v3[*v6]) {
            LODWORD(v20) = 0;
          }
LABEL_44:
          *(_DWORD *)(a1 + *v26) = v20;
          goto LABEL_45;
        }
        if (!*(void *)(a1 + 8))
        {
          id v33 = objc_alloc_init(MEMORY[0x1E4F940B0]);
          uint64_t v34 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = v33;
        }
        if ((PBUnknownFieldAdd() & 1) == 0) {
          goto LABEL_50;
        }
LABEL_45:
        if (*(void *)&v3[*v4] >= *(void *)&v3[*v5]) {
          goto LABEL_49;
        }
      }
      char v27 = 0;
      unsigned int v28 = 0;
      uint64_t v20 = 0;
      *(unsigned char *)(a1 + 24) |= 2u;
      while (1)
      {
        uint64_t v29 = *v4;
        uint64_t v30 = *(void *)&v3[v29];
        unint64_t v31 = v30 + 1;
        if (v30 == -1 || v31 > *(void *)&v3[*v5]) {
          break;
        }
        char v32 = *(unsigned char *)(*(void *)&v3[*v7] + v30);
        *(void *)&v3[v29] = v31;
        v20 |= (unint64_t)(v32 & 0x7F) << v27;
        if ((v32 & 0x80) == 0)
        {
          uint64_t v26 = &OBJC_IVAR___GEOTrafficColorAndOffset__offset;
          goto LABEL_42;
        }
        v27 += 7;
        BOOL v25 = v28++ > 8;
        if (v25)
        {
          LODWORD(v20) = 0;
          uint64_t v26 = &OBJC_IVAR___GEOTrafficColorAndOffset__offset;
          goto LABEL_44;
        }
      }
      uint64_t v26 = &OBJC_IVAR___GEOTrafficColorAndOffset__offset;
LABEL_41:
      v3[*v6] = 1;
      goto LABEL_42;
    }
LABEL_49:
    BOOL v35 = v3[*v6] == 0;
  }
  else
  {
LABEL_50:
    BOOL v35 = 0;
  }
  objc_sync_exit(v3);

  return v35;
}

void sub_18988265C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOTrafficColorAndOffsetReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOTrafficColorAndOffsetReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1898826C0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOTrafficColorAndOffsetIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  __int16 v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_39;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      if (v14 || (v8 & 7) == 4) {
        goto LABEL_39;
      }
      if ((v8 >> 3) == 2) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_41;
        }
        unsigned int v16 = 0;
        while (1)
        {
          uint64_t v17 = *v2;
          uint64_t v18 = *(void *)&a1[v17];
          unint64_t v19 = v18 + 1;
          if (v18 == -1 || v19 > *(void *)&a1[*v3]) {
            break;
          }
          int v20 = *(char *)(*(void *)&a1[*v5] + v18);
          *(void *)&a1[v17] = v19;
          if (v20 < 0)
          {
            BOOL v21 = v16++ > 8;
            if (!v21) {
              continue;
            }
          }
          goto LABEL_38;
        }
LABEL_36:
        a1[*v4] = 1;
        goto LABEL_38;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_41:
        BOOL v27 = 0;
        goto LABEL_40;
      }
LABEL_38:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_39;
      }
    }
    if ((v8 & 7) != 0) {
      goto LABEL_41;
    }
    unsigned int v22 = 0;
    while (1)
    {
      uint64_t v23 = *v2;
      uint64_t v24 = *(void *)&a1[v23];
      unint64_t v25 = v24 + 1;
      if (v24 == -1 || v25 > *(void *)&a1[*v3]) {
        goto LABEL_36;
      }
      int v26 = *(char *)(*(void *)&a1[*v5] + v24);
      *(void *)&a1[v23] = v25;
      if (v26 < 0)
      {
        BOOL v21 = v22++ > 8;
        if (!v21) {
          continue;
        }
      }
      goto LABEL_38;
    }
  }
LABEL_39:
  BOOL v27 = a1[*v4] == 0;
LABEL_40:
  PBReaderRecallMark();
  return v27;
}

BOOL GEOTrafficColorInfoReadAllFrom(void *a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_29;
          }
          uint64_t v18 = objc_alloc_init(GEOTrafficColorAndOffset);
          if (!GEOTrafficColorAndOffsetReadAllFrom((uint64_t)v18, v3))
          {

            goto LABEL_29;
          }
          PBReaderRecallMark();
          objc_msgSend(a1, "addTrafficColorAndOffset:", v18, 0, 0);
        }
        else
        {
          if (!a1[1])
          {
            id v19 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            int v20 = (void *)a1[1];
            a1[1] = v19;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_29;
          }
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v21 = v3[*v6] == 0;
  }
  else
  {
LABEL_29:
    BOOL v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_189883684(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOTrafficColorInfoReadFrom(void *a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOTrafficColorInfoReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1898836E8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189883F2C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOTrafficSignalReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  uint64_t v7 = 0;
  uint64_t v8 = 0;
  char v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  int v12 = ((*(unsigned __int8 *)(a1 + 60) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 4) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 2) & 1);
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v10])
    {
      case -4:
        ++v12;
        uint64_t v13 = v7;
        goto LABEL_8;
      case -3:
        char v9 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v13 = v7;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 != 0;
        char v17 = v16 & ~(_BYTE)v11 | v8;
        unsigned __int8 v18 = v16 | v11;
        char v68 = v17;
        char v69 = v9;
        char v70 = v18 | v17;
        if ((v18 | v9)) {
          id v19 = 0;
        }
        else {
          id v19 = a3;
        }
        char v71 = (v19 == 0) | v18;
        BOOL v72 = v18;
        int v20 = (int *)MEMORY[0x1E4F940E8];
        BOOL v21 = (int *)MEMORY[0x1E4F940C8];
        unsigned int v22 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v7;
        uint64_t v14 = v8;
LABEL_8:
        uint64_t v15 = v11;
LABEL_10:
        ++v10;
        uint64_t v7 = v13;
        uint64_t v8 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v21)) {
      goto LABEL_88;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      BOOL v30 = v24++ >= 9;
      if (v30)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_25:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_88:
      int v66 = 1;
      goto LABEL_89;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v72;
    if ((v71 & 1) == 0)
    {
      BOOL v35 = v19;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    switch((int)v33)
    {
      case 1:
        if (!v34) {
          goto LABEL_70;
        }
        if ((*(unsigned char *)(a1 + 60) & 8) == 0)
        {
          uint64_t v39 = PBReaderReadString();
          unint64_t v40 = *(void **)(a1 + 24);
          *(void *)(a1 + 24) = v39;
          goto LABEL_61;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_109;
        }
        char v60 = 16 * *(unsigned char *)(a1 + 60);
        goto LABEL_85;
      case 2:
        if ((v69 & 1) == 0) {
          goto LABEL_70;
        }
        char v44 = 0;
        unsigned int v45 = 0;
        uint64_t v46 = 0;
        *(unsigned char *)(a1 + 60) |= 2u;
        while (2)
        {
          uint64_t v47 = *v20;
          uint64_t v48 = *(void *)(v3 + v47);
          unint64_t v49 = v48 + 1;
          if (v48 == -1 || v49 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v50 = *(unsigned char *)(*(void *)(v3 + *v22) + v48);
            *(void *)(v3 + v47) = v49;
            v46 |= (unint64_t)(v50 & 0x7F) << v44;
            if (v50 < 0)
            {
              v44 += 7;
              BOOL v30 = v45++ >= 9;
              if (v30)
              {
                LODWORD(v46) = 0;
                goto LABEL_75;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          LODWORD(v46) = 0;
        }
LABEL_75:
        uint64_t v59 = 56;
        goto LABEL_80;
      case 3:
        if (!v34) {
          goto LABEL_70;
        }
        if ((*(unsigned char *)(a1 + 60) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_109;
          }
          char v60 = 8 * *(unsigned char *)(a1 + 60);
LABEL_85:
          v10 += v60 >> 7;
          goto LABEL_86;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_109;
        }
        unint64_t v51 = objc_alloc_init(GEOLatLng);
        if (GEOLatLngReadAllFrom((uint64_t)v51, (void *)v3))
        {
          PBReaderRecallMark();
          unint64_t v40 = *(void **)(a1 + 32);
          *(void *)(a1 + 32) = v51;
LABEL_61:

          --v10;
LABEL_86:
          BOOL v21 = (int *)MEMORY[0x1E4F940C8];
          goto LABEL_87;
        }

LABEL_109:
        int v66 = 0;
        unint64_t v67 = &OBJC_IVAR___GEOComposedRoute__visualInfosForRouteNameLabels;
        BOOL v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_90:
        if (v68) {
LABEL_91:
        }
          *(unsigned char *)(a1 + v67[675]) |= 4u;
        if (v72 || (v66 & 1) == 0)
        {
          *(unsigned char *)(a1 + v67[675]) |= 8u;
          *(unsigned char *)(a1 + v67[675]) |= 0x10u;
          goto LABEL_102;
        }
        if (v19)
        {
          while (2)
          {
            while (1)
            {
              int v62 = *v19++;
              int v61 = v62;
              if (v62 == 1) {
                break;
              }
              if (v61 == 3)
              {
                char v63 = 16;
                goto LABEL_101;
              }
              if (!v61) {
                goto LABEL_102;
              }
            }
            char v63 = 8;
LABEL_101:
            *(unsigned char *)(a1 + v67[675]) |= v63;
            continue;
          }
        }
LABEL_102:
        if (v66) {
          unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
        }
        else {
          unint64_t v3 = 0;
        }
        if (v72)
        {
          unsigned int v64 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      case 4:
        if ((v69 & 1) == 0) {
          goto LABEL_70;
        }
        char v52 = 0;
        unsigned int v53 = 0;
        uint64_t v46 = 0;
        *(unsigned char *)(a1 + 60) |= 1u;
        while (2)
        {
          uint64_t v54 = *v20;
          uint64_t v55 = *(void *)(v3 + v54);
          unint64_t v56 = v55 + 1;
          if (v55 == -1 || v56 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v57 = *(unsigned char *)(*(void *)(v3 + *v22) + v55);
            *(void *)(v3 + v54) = v56;
            v46 |= (unint64_t)(v57 & 0x7F) << v52;
            if (v57 < 0)
            {
              v52 += 7;
              BOOL v30 = v53++ >= 9;
              if (v30)
              {
                LODWORD(v46) = 0;
                goto LABEL_79;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          LODWORD(v46) = 0;
        }
LABEL_79:
        uint64_t v59 = 52;
LABEL_80:
        *(_DWORD *)(a1 + v59) = v46;
        goto LABEL_87;
      default:
        if ((v68 & 1) == 0 || (*(unsigned char *)(a1 + 60) & 4) != 0)
        {
LABEL_70:
          char v58 = PBReaderSkipValueWithTag();
          BOOL v21 = (int *)MEMORY[0x1E4F940C8];
          if ((v58 & 1) == 0)
          {
            int v66 = 0;
LABEL_89:
            unint64_t v67 = &OBJC_IVAR___GEOComposedRoute__visualInfosForRouteNameLabels;
            goto LABEL_90;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v41 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            BOOL v42 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v41;
          }
          int v43 = PBUnknownFieldAdd();
          BOOL v21 = (int *)MEMORY[0x1E4F940C8];
          if (!v43)
          {
            int v66 = 0;
            unint64_t v67 = &OBJC_IVAR___GEOComposedRoute__visualInfosForRouteNameLabels;
            goto LABEL_91;
          }
        }
LABEL_87:
        if (!(v70 & 1 | (v10 != 0))) {
          goto LABEL_88;
        }
        continue;
    }
  }
}

void sub_189884944(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189885194(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOTrafficSignalReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOTrafficSignalReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    char v9 = (int *)&GEOTrafficSignalReadAllFrom_recursiveTag;
  }
  else {
    char v9 = (int *)&GEOTrafficSignalReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOTrafficSignalReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    [*(id *)(a1 + 32) readAll:1];
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_189885338(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOTrafficSignalReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOTrafficSignalReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18988539C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOTrafficSignalIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  __int16 v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 != 2) {
            goto LABEL_46;
          }
          goto LABEL_20;
        case 2u:
          if ((v8 & 7) != 0) {
            goto LABEL_46;
          }
          unsigned int v17 = 0;
          while (1)
          {
            uint64_t v18 = *v2;
            uint64_t v19 = *(void *)&a1[v18];
            unint64_t v20 = v19 + 1;
            if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
              goto LABEL_42;
            }
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if (v21 < 0)
            {
              BOOL v22 = v17++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_43;
          }
        case 3u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOLatLngIsValid(a1)) {
            goto LABEL_46;
          }
          PBReaderRecallMark();
          continue;
        case 4u:
          if ((v8 & 7) != 0) {
            goto LABEL_46;
          }
          unsigned int v23 = 0;
          break;
        default:
LABEL_20:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_46:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        uint64_t v24 = *v2;
        uint64_t v25 = *(void *)&a1[v24];
        unint64_t v26 = v25 + 1;
        if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
          break;
        }
        int v27 = *(char *)(*(void *)&a1[*v5] + v25);
        *(void *)&a1[v24] = v26;
        if (v27 < 0)
        {
          BOOL v22 = v23++ > 8;
          if (!v22) {
            continue;
          }
        }
        goto LABEL_43;
      }
LABEL_42:
      a1[*v4] = 1;
LABEL_43:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v28 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v28;
}

void sub_18988584C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOTrafficSignalIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  BOOL v2 = (*(unsigned char *)(a1 + 60) & 0x38) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return v2;
}

void sub_189885C14(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189885F98(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189886250(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOTransitListInstructionReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 80));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 76);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 72)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  unsigned int v12 = (vaddv_s16((int16x4_t)(*(void *)&vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int8 *)(a1 + 84)), (uint16x4_t)0xFFFBFFFEFFFCFFFFLL) & 0xFF01FF01FF01FF01))+ (*(unsigned char *)(a1 + 84) & 1)+ ((*(unsigned char *)(a1 + 84) & 8) != 0)+ ((*(unsigned char *)(a1 + 84) & 0x40) != 0));
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 > 3;
        char v17 = v16 & ~(_BYTE)v11 | v9;
        unsigned __int8 v18 = v16 | v11;
        char v53 = v17;
        char v54 = v18 | v17;
        if ((v18 | v8)) {
          uint64_t v19 = 0;
        }
        else {
          uint64_t v19 = a3;
        }
        char v55 = (v19 == 0) | v18;
        BOOL v56 = v18;
        unint64_t v20 = (int *)MEMORY[0x1E4F940E8];
        int v21 = (int *)MEMORY[0x1E4F940C8];
        BOOL v22 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v9;
LABEL_8:
        uint64_t v14 = v10;
        uint64_t v15 = v11;
LABEL_10:
        ++v7;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v21)) {
      goto LABEL_86;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      if (v24++ >= 9)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_25:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_86:
      int v51 = 1;
      goto LABEL_87;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v56;
    if ((v55 & 1) == 0)
    {
      BOOL v35 = v19;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    switch((int)v33)
    {
      case 4:
        if (!v34 || (*(unsigned char *)(a1 + 84) & 0x10) != 0) {
          goto LABEL_77;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_106;
        }
        uint64_t v39 = objc_alloc_init(GEOFormattedString);
        if (!GEOFormattedStringReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1)) {
          goto LABEL_105;
        }
        PBReaderRecallMark();
        -[GEOTransitListInstruction _addNoFlagsNoticeFormatted:](a1, v39);
        goto LABEL_59;
      case 5:
        if (!v34 || (*(unsigned char *)(a1 + 84) & 2) != 0) {
          goto LABEL_77;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_106;
        }
        uint64_t v39 = objc_alloc_init(GEOFormattedString);
        if (!GEOFormattedStringReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1)) {
          goto LABEL_105;
        }
        PBReaderRecallMark();
        -[GEOTransitListInstruction _addNoFlagsCommandFormatted:](a1, v39);
        goto LABEL_59;
      case 6:
        if (!v34 || (*(unsigned char *)(a1 + 84) & 4) != 0) {
          goto LABEL_77;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_106;
        }
        uint64_t v39 = objc_alloc_init(GEOFormattedString);
        if (!GEOFormattedStringReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1)) {
          goto LABEL_105;
        }
        PBReaderRecallMark();
        -[GEOTransitListInstruction _addNoFlagsDetailFormatted:](a1, v39);
        goto LABEL_59;
      case 7:
        if (!v34 || (*(unsigned char *)(a1 + 84) & 0x20) != 0) {
          goto LABEL_77;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_106;
        }
        uint64_t v39 = objc_alloc_init(GEOFormattedString);
        if (!GEOFormattedStringReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1)) {
          goto LABEL_105;
        }
        PBReaderRecallMark();
        -[GEOTransitListInstruction _addNoFlagsPriceFormatted:](a1, v39);
LABEL_59:

        goto LABEL_84;
      case 9:
        if (!v34) {
          goto LABEL_77;
        }
        if ((*(unsigned char *)(a1 + 84) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_106;
          }
          char v46 = 16 * *(unsigned char *)(a1 + 84);
          goto LABEL_83;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_106;
        }
        uint64_t v39 = objc_alloc_init(GEOFormattedString);
        if (!GEOFormattedStringReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1)) {
          goto LABEL_105;
        }
        PBReaderRecallMark();
        uint64_t v43 = 40;
        goto LABEL_76;
      case 10:
        if (!v34) {
          goto LABEL_77;
        }
        if ((*(unsigned char *)(a1 + 84) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_106;
          }
          char v46 = 2 * *(unsigned char *)(a1 + 84);
LABEL_83:
          v7 += v46 >> 7;
LABEL_84:
          int v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_85:
          if (!(v54 & 1 | (v7 != 0))) {
            goto LABEL_86;
          }
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_106;
        }
        uint64_t v39 = objc_alloc_init(GEOTransitListTimeInstruction);
        if (GEOTransitListTimeInstructionReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1))
        {
          PBReaderRecallMark();
          uint64_t v43 = 64;
LABEL_76:
          char v44 = *(void **)(a1 + v43);
          *(void *)(a1 + v43) = v39;

          --v7;
          goto LABEL_84;
        }
LABEL_105:

LABEL_106:
        int v51 = 0;
        int v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_87:
        char v52 = &OBJC_IVAR___GEOComposedRoute__visualInfosForRouteNameLabels;
        if (v53) {
LABEL_88:
        }
          *(unsigned char *)(a1 + v52[712]) |= 1u;
        if (v56 || (v51 & 1) == 0)
        {
          *(unsigned char *)(a1 + v52[712]) |= 0x10u;
          *(unsigned char *)(a1 + v52[712]) |= 2u;
          *(unsigned char *)(a1 + v52[712]) |= 4u;
          *(unsigned char *)(a1 + v52[712]) |= 0x20u;
          *(unsigned char *)(a1 + v52[712]) |= 8u;
          *(unsigned char *)(a1 + v52[712]) |= 0x40u;
        }
        else if (v19)
        {
          while (1)
          {
            int v47 = *v19++;
            char v48 = 16;
            switch(v47)
            {
              case 0:
                goto LABEL_99;
              case 4:
                goto LABEL_98;
              case 5:
                char v48 = 2;
                goto LABEL_98;
              case 6:
                char v48 = 4;
                goto LABEL_98;
              case 7:
                char v48 = 32;
                goto LABEL_98;
              case 9:
                char v48 = 8;
                goto LABEL_98;
              case 10:
                char v48 = 64;
LABEL_98:
                *(unsigned char *)(a1 + v52[712]) |= v48;
                break;
              default:
                continue;
            }
          }
        }
LABEL_99:
        if (v51) {
          unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
        }
        else {
          unint64_t v3 = 0;
        }
        if (v56)
        {
          unint64_t v49 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      default:
        if (v53 & 1) == 0 || (*(unsigned char *)(a1 + 84))
        {
LABEL_77:
          char v45 = PBReaderSkipValueWithTag();
          int v21 = (int *)MEMORY[0x1E4F940C8];
          if ((v45 & 1) == 0)
          {
            int v51 = 0;
            goto LABEL_87;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v40 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            id v41 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v40;
          }
          int v42 = PBUnknownFieldAdd();
          int v21 = (int *)MEMORY[0x1E4F940C8];
          if (!v42)
          {
            int v51 = 0;
            char v52 = &OBJC_IVAR___GEOComposedRoute__visualInfosForRouteNameLabels;
            goto LABEL_88;
          }
        }
        goto LABEL_85;
    }
  }
}

void sub_189886E3C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189887200(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898875C4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189887988(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189887AF4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189888AC8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOTransitListInstructionCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  uint64_t v43 = *MEMORY[0x1E4F143B8];
  long long v35 = 0u;
  long long v36 = 0u;
  long long v37 = 0u;
  long long v38 = 0u;
  id v2 = a1[6];
  uint64_t v3 = [v2 countByEnumeratingWithState:&v35 objects:v42 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v36;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v36 != v5) {
          objc_enumerationMutation(v2);
        }
        [*(id *)(*((void *)&v35 + 1) + 8 * v6++) readAll:1];
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v35 objects:v42 count:16];
    }
    while (v4);
  }

  long long v33 = 0u;
  long long v34 = 0u;
  long long v31 = 0u;
  long long v32 = 0u;
  id v7 = a1[3];
  uint64_t v8 = [v7 countByEnumeratingWithState:&v31 objects:v41 count:16];
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)v32;
    do
    {
      uint64_t v11 = 0;
      do
      {
        if (*(void *)v32 != v10) {
          objc_enumerationMutation(v7);
        }
        [*(id *)(*((void *)&v31 + 1) + 8 * v11++) readAll:1];
      }
      while (v9 != v11);
      uint64_t v9 = [v7 countByEnumeratingWithState:&v31 objects:v41 count:16];
    }
    while (v9);
  }

  long long v29 = 0u;
  long long v30 = 0u;
  long long v27 = 0u;
  long long v28 = 0u;
  id v12 = a1[4];
  uint64_t v13 = [v12 countByEnumeratingWithState:&v27 objects:v40 count:16];
  if (v13)
  {
    uint64_t v14 = v13;
    uint64_t v15 = *(void *)v28;
    do
    {
      uint64_t v16 = 0;
      do
      {
        if (*(void *)v28 != v15) {
          objc_enumerationMutation(v12);
        }
        [*(id *)(*((void *)&v27 + 1) + 8 * v16++) readAll:1];
      }
      while (v14 != v16);
      uint64_t v14 = [v12 countByEnumeratingWithState:&v27 objects:v40 count:16];
    }
    while (v14);
  }

  long long v25 = 0u;
  long long v26 = 0u;
  long long v23 = 0u;
  long long v24 = 0u;
  id v17 = a1[7];
  uint64_t v18 = [v17 countByEnumeratingWithState:&v23 objects:v39 count:16];
  if (v18)
  {
    uint64_t v19 = v18;
    uint64_t v20 = *(void *)v24;
    do
    {
      uint64_t v21 = 0;
      do
      {
        if (*(void *)v24 != v20) {
          objc_enumerationMutation(v17);
        }
        objc_msgSend(*(id *)(*((void *)&v23 + 1) + 8 * v21++), "readAll:", 1, (void)v23);
      }
      while (v19 != v21);
      uint64_t v19 = [v17 countByEnumeratingWithState:&v23 objects:v39 count:16];
    }
    while (v19);
  }

  [a1[5] readAll:1];
  return [a1[8] readAll:1];
}

unint64_t GEOTransitListInstructionReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 76))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOTransitListInstructionReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 80));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 72) = [v8 position];
  *(_DWORD *)(a1 + 76) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOTransitListInstructionReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOTransitListInstructionReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOTransitListInstructionReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOTransitListInstructionCallReadAllRecursiveWithoutSynchronized((id *)a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 80));
  return Specified;
}

void sub_189888F50(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOTransitListInstructionReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOTransitListInstructionReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189888FB4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOTransitListTimeInstructionIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      unint64_t v17 = v8 >> 3;
      if ((v8 >> 3) == 3)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_38;
        }
        unsigned int v18 = 0;
        while (1)
        {
          uint64_t v19 = *v2;
          uint64_t v20 = *(void *)&a1[v19];
          unint64_t v21 = v20 + 1;
          if (v20 == -1 || v21 > *(void *)&a1[*v3]) {
            break;
          }
          int v22 = *(char *)(*(void *)&a1[*v5] + v20);
          *(void *)&a1[v19] = v21;
          if (v22 < 0 && v18++ <= 8) {
            continue;
          }
          goto LABEL_36;
        }
        a1[*v4] = 1;
      }
      else if (v17 == 2 || v17 == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOFormattedStringIsValid(a1))
        {
LABEL_38:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_38;
      }
LABEL_36:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v24 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v24;
}

void sub_189889610(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOTransitListInstructionIsDirty(uint64_t a1)
{
  uint64_t v40 = *MEMORY[0x1E4F143B8];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 80));
  char v2 = *(unsigned char *)(a1 + 84);
  if ((v2 & 0xB6) != 0) {
    return 1;
  }
  if ((*(unsigned char *)(a1 + 84) & 8) != 0)
  {
    if (GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(a1 + 40))) {
      return 1;
    }
    char v2 = *(unsigned char *)(a1 + 84);
  }
  if ((v2 & 0x40) == 0) {
    goto LABEL_10;
  }
  if ((GEOTransitListTimeInstructionIsDirty(*(os_unfair_lock_s **)(a1 + 64)) & 1) == 0)
  {
    char v2 = *(unsigned char *)(a1 + 84);
LABEL_10:
    if ((v2 & 0x10) != 0)
    {
      long long v34 = 0u;
      long long v35 = 0u;
      long long v32 = 0u;
      long long v33 = 0u;
      id v5 = *(id *)(a1 + 48);
      uint64_t v6 = [v5 countByEnumeratingWithState:&v32 objects:v39 count:16];
      if (v6)
      {
        uint64_t v7 = v6;
        uint64_t v8 = *(void *)v33;
LABEL_13:
        uint64_t v9 = 0;
        while (1)
        {
          if (*(void *)v33 != v8) {
            objc_enumerationMutation(v5);
          }
          if (GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(*((void *)&v32 + 1) + 8 * v9))) {
            goto LABEL_51;
          }
          if (v7 == ++v9)
          {
            uint64_t v7 = [v5 countByEnumeratingWithState:&v32 objects:v39 count:16];
            if (v7) {
              goto LABEL_13;
            }
            break;
          }
        }
      }

      char v2 = *(unsigned char *)(a1 + 84);
    }
    if ((v2 & 2) != 0)
    {
      long long v30 = 0u;
      long long v31 = 0u;
      long long v28 = 0u;
      long long v29 = 0u;
      id v5 = *(id *)(a1 + 24);
      uint64_t v10 = [v5 countByEnumeratingWithState:&v28 objects:v38 count:16];
      if (v10)
      {
        uint64_t v11 = v10;
        uint64_t v12 = *(void *)v29;
LABEL_23:
        uint64_t v13 = 0;
        while (1)
        {
          if (*(void *)v29 != v12) {
            objc_enumerationMutation(v5);
          }
          if (GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(*((void *)&v28 + 1) + 8 * v13))) {
            goto LABEL_51;
          }
          if (v11 == ++v13)
          {
            uint64_t v11 = [v5 countByEnumeratingWithState:&v28 objects:v38 count:16];
            if (v11) {
              goto LABEL_23;
            }
            break;
          }
        }
      }

      char v2 = *(unsigned char *)(a1 + 84);
    }
    if ((v2 & 4) != 0)
    {
      long long v26 = 0u;
      long long v27 = 0u;
      long long v24 = 0u;
      long long v25 = 0u;
      id v5 = *(id *)(a1 + 32);
      uint64_t v14 = [v5 countByEnumeratingWithState:&v24 objects:v37 count:16];
      if (v14)
      {
        uint64_t v15 = v14;
        uint64_t v16 = *(void *)v25;
LABEL_33:
        uint64_t v17 = 0;
        while (1)
        {
          if (*(void *)v25 != v16) {
            objc_enumerationMutation(v5);
          }
          if (GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(*((void *)&v24 + 1) + 8 * v17))) {
            goto LABEL_51;
          }
          if (v15 == ++v17)
          {
            uint64_t v15 = [v5 countByEnumeratingWithState:&v24 objects:v37 count:16];
            if (v15) {
              goto LABEL_33;
            }
            break;
          }
        }
      }

      char v2 = *(unsigned char *)(a1 + 84);
    }
    if ((v2 & 0x20) == 0) {
      return 0;
    }
    long long v22 = 0u;
    long long v23 = 0u;
    long long v20 = 0u;
    long long v21 = 0u;
    id v5 = *(id *)(a1 + 56);
    uint64_t v3 = [v5 countByEnumeratingWithState:&v20 objects:v36 count:16];
    if (!v3)
    {
LABEL_52:

      return v3;
    }
    uint64_t v18 = *(void *)v21;
LABEL_44:
    uint64_t v19 = 0;
    while (1)
    {
      if (*(void *)v21 != v18) {
        objc_enumerationMutation(v5);
      }
      if (GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(*((void *)&v20 + 1) + 8 * v19))) {
        break;
      }
      if (v3 == ++v19)
      {
        uint64_t v3 = [v5 countByEnumeratingWithState:&v20 objects:v36 count:16];
        if (v3) {
          goto LABEL_44;
        }
        goto LABEL_52;
      }
    }
LABEL_51:
    uint64_t v3 = 1;
    goto LABEL_52;
  }
  return 1;
}

os_unfair_lock_s *GEOTransitListInstructionIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    uint64_t v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOTransitListInstructionIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 20);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_18988A0A4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18988A67C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18988ABFC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOTransitListTimeInstructionReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  char v7 = 0;
  uint64_t v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  int v12 = ((*(unsigned __int8 *)(a1 + 56) >> 2) & 1)
      + ((*(unsigned __int8 *)(a1 + 56) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 56) >> 1) & 1);
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v7 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 != 0;
        char v17 = v16 & ~(_BYTE)v11 | v9;
        unsigned __int8 v18 = v16 | v11;
        char v62 = v17;
        char v63 = v18 | v17;
        char v61 = v7;
        if ((v18 | v7)) {
          uint64_t v19 = 0;
        }
        else {
          uint64_t v19 = a3;
        }
        long long v20 = (int *)MEMORY[0x1E4F940E8];
        char v64 = (v19 == 0) | v18;
        BOOL v65 = v18;
        long long v21 = (int *)MEMORY[0x1E4F940C8];
        long long v22 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v9;
LABEL_8:
        uint64_t v14 = v10;
        uint64_t v15 = v11;
LABEL_10:
        ++v8;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v21)) {
      goto LABEL_79;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      BOOL v30 = v24++ >= 9;
      if (v30)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_25:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_79:
      int v59 = 1;
      goto LABEL_80;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v65;
    if ((v64 & 1) == 0)
    {
      long long v35 = v19;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    if (v33 == 3)
    {
      if (v61)
      {
        char v41 = 0;
        unsigned int v42 = 0;
        uint64_t v43 = 0;
        *(unsigned char *)(a1 + 56) |= 1u;
        while (1)
        {
          uint64_t v44 = *v20;
          uint64_t v45 = *(void *)(v3 + v44);
          unint64_t v46 = v45 + 1;
          if (v45 == -1 || v46 > *(void *)(v3 + *v6)) {
            break;
          }
          char v47 = *(unsigned char *)(*(void *)(v3 + *v22) + v45);
          *(void *)(v3 + v44) = v46;
          v43 |= (unint64_t)(v47 & 0x7F) << v41;
          if ((v47 & 0x80) == 0) {
            goto LABEL_69;
          }
          v41 += 7;
          BOOL v30 = v42++ >= 9;
          if (v30)
          {
            uint64_t v43 = 0;
            goto LABEL_71;
          }
        }
        *(unsigned char *)(v3 + *v21) = 1;
LABEL_69:
        if (*(unsigned char *)(v3 + *v21)) {
          uint64_t v43 = 0;
        }
LABEL_71:
        *(unsigned char *)(a1 + 52) = v43 != 0;
        goto LABEL_78;
      }
      goto LABEL_66;
    }
    if (v33 == 2) {
      break;
    }
    if (v33 == 1)
    {
      if (v34)
      {
        if ((*(unsigned char *)(a1 + 56) & 4) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_100;
          }
          uint64_t v39 = objc_alloc_init(GEOFormattedString);
          if (!GEOFormattedStringReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1)) {
            goto LABEL_99;
          }
          PBReaderRecallMark();
          uint64_t v40 = 24;
LABEL_59:
          char v48 = *(void **)(a1 + v40);
          *(void *)(a1 + v40) = v39;

          --v8;
LABEL_77:
          long long v21 = (int *)MEMORY[0x1E4F940C8];
          goto LABEL_78;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_100;
        }
        char v53 = 32 * *(unsigned char *)(a1 + 56);
LABEL_76:
        v8 += v53 >> 7;
        goto LABEL_77;
      }
    }
    else if ((v62 & 1) != 0 && (*(unsigned char *)(a1 + 56) & 2) == 0)
    {
      if (!*(void *)(a1 + 16))
      {
        id v49 = objc_alloc_init(MEMORY[0x1E4F940B0]);
        char v50 = *(void **)(a1 + 16);
        *(void *)(a1 + 16) = v49;
      }
      int v51 = PBUnknownFieldAdd();
      long long v21 = (int *)MEMORY[0x1E4F940C8];
      if (!v51)
      {
        int v59 = 0;
        char v60 = &OBJC_IVAR___GEOComposedRoute__visualInfosForRouteNameLabels;
        goto LABEL_82;
      }
      goto LABEL_78;
    }
LABEL_66:
    char v52 = PBReaderSkipValueWithTag();
    long long v21 = (int *)MEMORY[0x1E4F940C8];
    if ((v52 & 1) == 0)
    {
      int v59 = 0;
LABEL_80:
      char v60 = &OBJC_IVAR___GEOComposedRoute__visualInfosForRouteNameLabels;
      goto LABEL_81;
    }
LABEL_78:
    if (!(v63 & 1 | (v8 != 0))) {
      goto LABEL_79;
    }
  }
  if (!v34) {
    goto LABEL_66;
  }
  if ((*(unsigned char *)(a1 + 56) & 8) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0) {
      goto LABEL_100;
    }
    char v53 = 16 * *(unsigned char *)(a1 + 56);
    goto LABEL_76;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_100;
  }
  uint64_t v39 = objc_alloc_init(GEOFormattedString);
  if (GEOFormattedStringReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1))
  {
    PBReaderRecallMark();
    uint64_t v40 = 32;
    goto LABEL_59;
  }
LABEL_99:

LABEL_100:
  int v59 = 0;
  char v60 = &OBJC_IVAR___GEOComposedRoute__visualInfosForRouteNameLabels;
  long long v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_81:
  if ((v62 & 1) == 0) {
    goto LABEL_83;
  }
LABEL_82:
  *(unsigned char *)(a1 + v60[677]) |= 2u;
LABEL_83:
  if (v65 || (v59 & 1) == 0)
  {
    *(unsigned char *)(a1 + v60[677]) |= 4u;
    *(unsigned char *)(a1 + v60[677]) |= 8u;
    goto LABEL_93;
  }
  if (v19)
  {
    while (2)
    {
      while (1)
      {
        int v55 = *v19++;
        int v54 = v55;
        if (v55 == 1) {
          break;
        }
        if (v54 == 2)
        {
          char v56 = 8;
          goto LABEL_92;
        }
        if (!v54) {
          goto LABEL_93;
        }
      }
      char v56 = 4;
LABEL_92:
      *(unsigned char *)(a1 + v60[677]) |= v56;
      continue;
    }
  }
LABEL_93:
  if (v59) {
    unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
  }
  else {
    unint64_t v3 = 0;
  }
  if (v65)
  {
    char v57 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_18988B3B4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18988BB4C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOTransitListTimeInstructionReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOTransitListTimeInstructionReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOTransitListTimeInstructionReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOTransitListTimeInstructionReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOTransitListTimeInstructionReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    [*(id *)(a1 + 24) readAll:1];
    [*(id *)(a1 + 32) readAll:1];
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_18988BD04(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOTransitListTimeInstructionReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOTransitListTimeInstructionReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18988BD68(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18988BF2C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOTransitListTimeInstructionIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  char v2 = *(unsigned char *)(a1 + 56);
  if ((v2 & 0x10) != 0) {
    return 1;
  }
  if ((*(unsigned char *)(a1 + 56) & 4) != 0)
  {
    if (GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(a1 + 24))) {
      return 1;
    }
    char v2 = *(unsigned char *)(a1 + 56);
  }
  if ((v2 & 8) == 0) {
    return 0;
  }
  uint64_t v4 = *(os_unfair_lock_s **)(a1 + 32);

  return (uint64_t)GEOFormattedStringIsDirty(v4);
}

os_unfair_lock_s *GEOTransitListTimeInstructionIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    uint64_t v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOTransitListTimeInstructionIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 12);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_18988C2E4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18988C5FC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18988C86C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOTransitOptionsReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 60);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 56)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = &OBJC_IVAR___GEOComposedRoute__visualInfosForRouteNameLabels;
  int v12 = ((*(unsigned __int8 *)(a1 + 80) >> 4) & 1)
      + ((*(unsigned __int8 *)(a1 + 80) >> 5) & 1)
      + ((*(unsigned __int8 *)(a1 + 80) >> 3) & 1);
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    switch(a3[v9])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_9;
      case 0:
        BOOL v15 = v12 != 0;
        char v16 = v15 & ~(_BYTE)v10 | v7;
        char v17 = v15 | v10;
        unsigned __int8 v18 = (int *)MEMORY[0x1E4F940E8];
        if (((v15 | v10) | v8)) {
          uint64_t v19 = 0;
        }
        else {
          uint64_t v19 = a3;
        }
        int v20 = 1;
        if (*(void *)(v3 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(v3 + *v6)) {
          goto LABEL_121;
        }
        char v87 = v16;
        char v89 = v17 | v16;
        char v90 = (v19 == 0) | v17;
        long long v21 = (int *)MEMORY[0x1E4F940C8];
        long long v22 = (int *)MEMORY[0x1E4F940B8];
        char v88 = v15 | v10;
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v7;
LABEL_8:
        uint64_t v14 = v10;
LABEL_9:
        ++v9;
        uint64_t v7 = v13;
        uint64_t v10 = v14;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(unsigned char *)(v3 + *v21)) {
      goto LABEL_118;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v18;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_24;
      }
      v23 += 7;
      BOOL v30 = v24++ >= 9;
      if (v30)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_26;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_24:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_26:
    int v32 = v25 & 7;
    if (v31 || v32 == 4)
    {
LABEL_118:
      int v20 = 1;
      goto LABEL_119;
    }
    unint64_t v34 = v25 >> 3;
    BOOL v35 = v17;
    if ((v90 & 1) == 0)
    {
      int v36 = v19;
      do
      {
        int v38 = *v36++;
        int v37 = v38;
        BOOL v35 = v38 != 0;
        if (v38) {
          BOOL v39 = v37 == v34;
        }
        else {
          BOOL v39 = 1;
        }
      }
      while (!v39);
    }
    switch((int)v34)
    {
      case 6:
        if (!v35 || (*(unsigned char *)(a1 + 80) & 0x10) != 0) {
          goto LABEL_88;
        }
        if (v32 == 2)
        {
          if (!PBReaderPlaceMark()) {
            goto LABEL_140;
          }
          while (1)
          {
            uint64_t v40 = (int *)MEMORY[0x1E4F940C8];
            if (*(void *)(v3 + *v18) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + (int)*MEMORY[0x1E4F940C8]))
            {
              PBReaderRecallMark();
              long long v21 = (int *)MEMORY[0x1E4F940C8];
              char v17 = v88;
              goto LABEL_116;
            }
            char v41 = 0;
            unsigned int v42 = 0;
            uint64_t v43 = 0;
            while (1)
            {
              uint64_t v44 = *v18;
              uint64_t v45 = *(void *)(v3 + v44);
              unint64_t v46 = v45 + 1;
              if (v45 == -1 || v46 > *(void *)(v3 + *v6)) {
                break;
              }
              char v47 = *(unsigned char *)(*(void *)(v3 + *v22) + v45);
              *(void *)(v3 + v44) = v46;
              v43 |= (unint64_t)(v47 & 0x7F) << v41;
              if (v47 < 0)
              {
                v41 += 7;
                BOOL v30 = v42++ >= 9;
                if (!v30) {
                  continue;
                }
              }
              goto LABEL_52;
            }
            *(unsigned char *)(v3 + *v40) = 1;
LABEL_52:
            PBRepeatedInt32Add();
          }
        }
        char v75 = 0;
        unsigned int v76 = 0;
        uint64_t v77 = 0;
        while (1)
        {
          uint64_t v78 = *v18;
          uint64_t v79 = *(void *)(v3 + v78);
          unint64_t v80 = v79 + 1;
          if (v79 == -1 || v80 > *(void *)(v3 + *v6)) {
            break;
          }
          char v81 = *(unsigned char *)(*(void *)(v3 + *v22) + v79);
          *(void *)(v3 + v78) = v80;
          v77 |= (unint64_t)(v81 & 0x7F) << v75;
          if (v81 < 0)
          {
            v75 += 7;
            BOOL v30 = v76++ >= 9;
            if (!v30) {
              continue;
            }
          }
          goto LABEL_114;
        }
        *(unsigned char *)(v3 + *v21) = 1;
LABEL_114:
        PBRepeatedInt32Add();
        goto LABEL_115;
      case 8:
        if ((v8 & 1) == 0) {
          goto LABEL_88;
        }
        char v51 = 0;
        unsigned int v52 = 0;
        uint64_t v53 = 0;
        *(unsigned char *)(a1 + 80) |= 1u;
        while (2)
        {
          uint64_t v54 = *v18;
          uint64_t v55 = *(void *)(v3 + v54);
          unint64_t v56 = v55 + 1;
          if (v55 == -1 || v56 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v57 = *(unsigned char *)(*(void *)(v3 + *v22) + v55);
            *(void *)(v3 + v54) = v56;
            v53 |= (unint64_t)(v57 & 0x7F) << v51;
            if (v57 < 0)
            {
              v51 += 7;
              BOOL v30 = v52++ >= 9;
              if (v30)
              {
                LODWORD(v53) = 0;
                goto LABEL_93;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          LODWORD(v53) = 0;
        }
LABEL_93:
        uint64_t v74 = 68;
        goto LABEL_98;
      case 10:
        if (!v35) {
          goto LABEL_88;
        }
        if ((*(unsigned char *)(a1 + 80) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_140;
          }
          v9 += *(unsigned __int8 *)(a1 + 80) << 26 >> 31;
          goto LABEL_115;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_140;
        }
        char v58 = objc_alloc_init(GEOFareOptions);
        if (GEOFareOptionsReadAllFrom((uint64_t)v58, (void *)v3))
        {
          PBReaderRecallMark();
          int v59 = *(void **)(a1 + 48);
          *(void *)(a1 + 48) = v58;

          --v9;
LABEL_115:
          char v17 = v88;
          long long v21 = (int *)MEMORY[0x1E4F940C8];
          goto LABEL_116;
        }

LABEL_140:
        int v20 = 0;
        uint64_t v11 = &OBJC_IVAR___GEOComposedRoute__visualInfosForRouteNameLabels;
        char v17 = v88;
LABEL_120:
        char v16 = v87;
LABEL_121:
        if (v16) {
LABEL_122:
        }
          *(unsigned char *)(a1 + v11[681]) |= 8u;
        if (v17 & 1 | ((v20 & 1) == 0))
        {
          *(unsigned char *)(a1 + v11[681]) |= 0x10u;
          *(unsigned char *)(a1 + v11[681]) |= 0x20u;
          goto LABEL_133;
        }
        if (v19)
        {
          while (2)
          {
            while (1)
            {
              int v83 = *v19++;
              int v82 = v83;
              if (v83 == 6) {
                break;
              }
              if (v82 == 10)
              {
                char v84 = 32;
                goto LABEL_132;
              }
              if (!v82) {
                goto LABEL_133;
              }
            }
            char v84 = 16;
LABEL_132:
            *(unsigned char *)(a1 + v11[681]) |= v84;
            continue;
          }
        }
LABEL_133:
        if (v20)
        {
          unint64_t v3 = *(unsigned char *)(v3 + (int)*MEMORY[0x1E4F940C8]) == 0;
          if ((v17 & 1) == 0) {
            return v3;
          }
LABEL_137:
          char v85 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        else
        {
          unint64_t v3 = 0;
          if (v17) {
            goto LABEL_137;
          }
        }
        return v3;
      case 11:
        if ((v8 & 1) == 0) {
          goto LABEL_88;
        }
        char v60 = 0;
        unsigned int v61 = 0;
        uint64_t v53 = 0;
        *(unsigned char *)(a1 + 80) |= 2u;
        while (2)
        {
          uint64_t v62 = *v18;
          uint64_t v63 = *(void *)(v3 + v62);
          unint64_t v64 = v63 + 1;
          if (v63 == -1 || v64 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v65 = *(unsigned char *)(*(void *)(v3 + *v22) + v63);
            *(void *)(v3 + v62) = v64;
            v53 |= (unint64_t)(v65 & 0x7F) << v60;
            if (v65 < 0)
            {
              v60 += 7;
              BOOL v30 = v61++ >= 9;
              if (v30)
              {
                LODWORD(v53) = 0;
                goto LABEL_97;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          LODWORD(v53) = 0;
        }
LABEL_97:
        uint64_t v74 = 72;
LABEL_98:
        *(_DWORD *)(a1 + v74) = v53;
        goto LABEL_116;
      case 12:
        if ((v8 & 1) == 0) {
          goto LABEL_88;
        }
        char v66 = 0;
        unsigned int v67 = 0;
        uint64_t v68 = 0;
        *(unsigned char *)(a1 + 80) |= 4u;
        while (2)
        {
          uint64_t v69 = *v18;
          uint64_t v70 = *(void *)(v3 + v69);
          unint64_t v71 = v70 + 1;
          if (v70 == -1 || v71 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v72 = *(unsigned char *)(*(void *)(v3 + *v22) + v70);
            *(void *)(v3 + v69) = v71;
            v68 |= (unint64_t)(v72 & 0x7F) << v66;
            if (v72 < 0)
            {
              v66 += 7;
              BOOL v30 = v67++ >= 9;
              if (v30)
              {
                uint64_t v68 = 0;
                goto LABEL_102;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          uint64_t v68 = 0;
        }
LABEL_102:
        *(unsigned char *)(a1 + 76) = v68 != 0;
        goto LABEL_116;
      default:
        if ((v87 & 1) == 0 || (*(unsigned char *)(a1 + 80) & 8) != 0)
        {
LABEL_88:
          char v73 = PBReaderSkipValueWithTag();
          long long v21 = (int *)MEMORY[0x1E4F940C8];
          char v17 = v88;
          if (v73) {
            goto LABEL_116;
          }
          int v20 = 0;
LABEL_119:
          uint64_t v11 = &OBJC_IVAR___GEOComposedRoute__visualInfosForRouteNameLabels;
          goto LABEL_120;
        }
        if (!*(void *)(a1 + 16))
        {
          id v48 = objc_alloc_init(MEMORY[0x1E4F940B0]);
          id v49 = *(void **)(a1 + 16);
          *(void *)(a1 + 16) = v48;
        }
        int v50 = PBUnknownFieldAdd();
        char v17 = v88;
        long long v21 = (int *)MEMORY[0x1E4F940C8];
        if (!v50)
        {
          int v20 = 0;
          uint64_t v11 = &OBJC_IVAR___GEOComposedRoute__visualInfosForRouteNameLabels;
          goto LABEL_122;
        }
LABEL_116:
        if (!(v89 & 1 | (v9 != 0)) || *(void *)(v3 + *v18) >= *(void *)(v3 + *v6)) {
          goto LABEL_118;
        }
        continue;
    }
  }
}

void sub_18988D7F0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOTransitOptionsReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 60))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOTransitOptionsReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = [v8 position];
  *(_DWORD *)(a1 + 60) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOTransitOptionsReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOTransitOptionsReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOTransitOptionsReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    [*(id *)(a1 + 48) readAll:1];
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_18988E700(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOTransitOptionsReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOTransitOptionsReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18988E764(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOTransitOptionsIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  BOOL v2 = (*(unsigned char *)(a1 + 80) & 0x70) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return v2;
}

void sub_18988EB68(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18988EF80(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18988F1C4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOTransitSignInstructionReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (a2)
  {
    os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
    uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
    *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 60);
    [(id)v3 seekToOffset:*(unsigned int *)(a1 + 56)];
    uint64_t v7 = 0;
    char v8 = 0;
    uint64_t v9 = 0;
    uint64_t v10 = 0;
    uint64_t v11 = 0;
    unsigned int v12 = (vaddv_s16((int16x4_t)(*(void *)&vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int8 *)(a1 + 68)), (uint16x4_t)0xFFFCFFFDFFFFFFFELL) & 0xFF01FF01FF01FF01))+ (*(unsigned char *)(a1 + 68) & 1));
    while (2)
    {
      uint64_t v13 = 1;
      uint64_t v14 = 1;
      uint64_t v15 = 1;
      switch(a3[v7])
      {
        case -4:
          ++v12;
          goto LABEL_8;
        case -3:
          char v8 = 1;
          goto LABEL_7;
        case -2:
          uint64_t v14 = v10;
          goto LABEL_10;
        case -1:
          goto LABEL_10;
        case 0:
          BOOL v16 = v12 > 2;
          int v17 = v16 & ~v11 | v9;
          int v18 = v16 | v11;
          if (((v16 | v11) | v8)) {
            uint64_t v19 = 0;
          }
          else {
            uint64_t v19 = a3;
          }
          BOOL v20 = v7 != 0;
          long long v21 = (int *)MEMORY[0x1E4F940E8];
          int v22 = 1;
          char v23 = (int *)MEMORY[0x1E4F940C8];
          if (*(void *)(v3 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(v3 + *v6)) {
            goto LABEL_72;
          }
          char v48 = v17;
          int v49 = v20 | v18 | v17;
          unsigned int v24 = (int *)MEMORY[0x1E4F940B8];
          break;
        default:
          ++v12;
LABEL_7:
          uint64_t v13 = v9;
LABEL_8:
          uint64_t v14 = v10;
          uint64_t v15 = v11;
LABEL_10:
          ++v7;
          uint64_t v9 = v13;
          uint64_t v10 = v14;
          uint64_t v11 = v15;
          continue;
      }
      break;
    }
    while (!*(unsigned char *)(v3 + *v23))
    {
      char v25 = 0;
      unsigned int v26 = 0;
      unint64_t v27 = 0;
      while (1)
      {
        uint64_t v28 = *v21;
        uint64_t v29 = *(void *)(v3 + v28);
        unint64_t v30 = v29 + 1;
        if (v29 == -1 || v30 > *(void *)(v3 + *v6)) {
          break;
        }
        char v31 = *(unsigned char *)(*(void *)(v3 + *v24) + v29);
        *(void *)(v3 + v28) = v30;
        v27 |= (unint64_t)(v31 & 0x7F) << v25;
        if ((v31 & 0x80) == 0) {
          goto LABEL_25;
        }
        v25 += 7;
        if (v26++ >= 9)
        {
          unint64_t v27 = 0;
          int v33 = *(unsigned __int8 *)(v3 + *v23);
          goto LABEL_27;
        }
      }
      *(unsigned char *)(v3 + *v23) = 1;
LABEL_25:
      int v33 = *(unsigned __int8 *)(v3 + *v23);
      if (*(unsigned char *)(v3 + *v23)) {
        unint64_t v27 = 0;
      }
LABEL_27:
      if (v33 || (v27 & 7) == 4) {
        break;
      }
      unint64_t v35 = v27 >> 3;
      BOOL v36 = v18;
      if (!((v19 == 0) | v18 & 1))
      {
        int v37 = v19;
        do
        {
          int v39 = *v37++;
          int v38 = v39;
          BOOL v36 = v39 != 0;
          if (v39) {
            BOOL v40 = v38 == v35;
          }
          else {
            BOOL v40 = 1;
          }
        }
        while (!v40);
      }
      switch((int)v35)
      {
        case 4:
          if (!v36 || (*(unsigned char *)(a1 + 68) & 8) != 0) {
            goto LABEL_68;
          }
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_89;
          }
          char v41 = objc_alloc_init(GEOFormattedString);
          if (!GEOFormattedStringReadAllFrom((uint64_t)v41, (void *)v3, v10 & 1)) {
            goto LABEL_88;
          }
          PBReaderRecallMark();
          -[GEOTransitSignInstruction _addNoFlagsNoticeFormatted:](a1, v41);
          goto LABEL_65;
        case 5:
          if (!v36 || (*(unsigned char *)(a1 + 68) & 2) != 0) {
            goto LABEL_68;
          }
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_89;
          }
          char v41 = objc_alloc_init(GEOFormattedString);
          if (!GEOFormattedStringReadAllFrom((uint64_t)v41, (void *)v3, v10 & 1)) {
            goto LABEL_88;
          }
          PBReaderRecallMark();
          -[GEOTransitSignInstruction _addNoFlagsCommandFormatted:](a1, v41);
          goto LABEL_65;
        case 6:
          if (!v36 || (*(unsigned char *)(a1 + 68) & 4) != 0) {
            goto LABEL_68;
          }
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_89;
          }
          char v41 = objc_alloc_init(GEOFormattedString);
          if (!GEOFormattedStringReadAllFrom((uint64_t)v41, (void *)v3, v10 & 1)) {
            goto LABEL_88;
          }
          PBReaderRecallMark();
          -[GEOTransitSignInstruction _addNoFlagsDetailFormatted:](a1, v41);
          goto LABEL_65;
        case 7:
          if (!v36 || (*(unsigned char *)(a1 + 68) & 0x10) != 0) {
            goto LABEL_68;
          }
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_89;
          }
          char v41 = objc_alloc_init(GEOFormattedString);
          if (!GEOFormattedStringReadAllFrom((uint64_t)v41, (void *)v3, v10 & 1))
          {
LABEL_88:

LABEL_89:
            int v22 = 0;
            char v23 = (int *)MEMORY[0x1E4F940C8];
            goto LABEL_71;
          }
          PBReaderRecallMark();
          -[GEOTransitSignInstruction _addNoFlagsPriceFormatted:](a1, v41);
LABEL_65:

          char v23 = (int *)MEMORY[0x1E4F940C8];
LABEL_66:
          if ((v49 & 1) == 0) {
            goto LABEL_70;
          }
LABEL_69:
          if (*(void *)(v3 + *v21) >= *(void *)(v3 + *v6)) {
            goto LABEL_70;
          }
          break;
        default:
          if (v48 & 1) == 0 || (*(unsigned char *)(a1 + 68))
          {
LABEL_68:
            int v22 = PBReaderSkipValueWithTag();
            char v23 = (int *)MEMORY[0x1E4F940C8];
            if ((v22 & v49 & 1) == 0) {
              goto LABEL_71;
            }
            goto LABEL_69;
          }
          if (!*(void *)(a1 + 16))
          {
            id v42 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            uint64_t v43 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v42;
          }
          int v22 = PBUnknownFieldAdd();
          char v23 = (int *)MEMORY[0x1E4F940C8];
          if (!v22) {
            goto LABEL_73;
          }
          goto LABEL_66;
      }
    }
LABEL_70:
    int v22 = 1;
LABEL_71:
    LOBYTE(v17) = v48;
LABEL_72:
    if (v17) {
LABEL_73:
    }
      *(unsigned char *)(a1 + 68) |= 1u;
    if (v18 & 1 | ((v22 & 1) == 0))
    {
      *(unsigned char *)(a1 + 68) |= 2u;
      *(unsigned char *)(a1 + 68) |= 4u;
      *(unsigned char *)(a1 + 68) |= 8u;
      *(unsigned char *)(a1 + 68) |= 0x10u;
    }
    else if (v19)
    {
      while (1)
      {
        int v44 = *v19++;
        char v45 = 2;
        switch(v44)
        {
          case 0:
            goto LABEL_82;
          case 4:
            char v45 = 8;
            goto LABEL_81;
          case 5:
            goto LABEL_81;
          case 6:
            char v45 = 4;
            goto LABEL_81;
          case 7:
            char v45 = 16;
LABEL_81:
            *(unsigned char *)(a1 + 68) |= v45;
            break;
          default:
            continue;
        }
      }
    }
LABEL_82:
    if (v22)
    {
      unint64_t v3 = *(unsigned char *)(v3 + *v23) == 0;
      if ((v18 & 1) == 0) {
        return v3;
      }
      goto LABEL_86;
    }
    unint64_t v3 = 0;
    if (v18)
    {
LABEL_86:
      unint64_t v46 = *(void **)(a1 + 8);
      *(void *)(a1 + 8) = 0;
    }
  }
  return v3;
}

void sub_18988FC30(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18988FFF4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898903B8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189891448(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOTransitSignInstructionCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  uint64_t v42 = *MEMORY[0x1E4F143B8];
  long long v34 = 0u;
  long long v35 = 0u;
  long long v36 = 0u;
  long long v37 = 0u;
  id v2 = a1[3];
  uint64_t v3 = [v2 countByEnumeratingWithState:&v34 objects:v41 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v35;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v35 != v5) {
          objc_enumerationMutation(v2);
        }
        [*(id *)(*((void *)&v34 + 1) + 8 * v6++) readAll:1];
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v34 objects:v41 count:16];
    }
    while (v4);
  }

  long long v32 = 0u;
  long long v33 = 0u;
  long long v30 = 0u;
  long long v31 = 0u;
  id v7 = a1[4];
  uint64_t v8 = [v7 countByEnumeratingWithState:&v30 objects:v40 count:16];
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)v31;
    do
    {
      uint64_t v11 = 0;
      do
      {
        if (*(void *)v31 != v10) {
          objc_enumerationMutation(v7);
        }
        [*(id *)(*((void *)&v30 + 1) + 8 * v11++) readAll:1];
      }
      while (v9 != v11);
      uint64_t v9 = [v7 countByEnumeratingWithState:&v30 objects:v40 count:16];
    }
    while (v9);
  }

  long long v28 = 0u;
  long long v29 = 0u;
  long long v26 = 0u;
  long long v27 = 0u;
  id v12 = a1[5];
  uint64_t v13 = [v12 countByEnumeratingWithState:&v26 objects:v39 count:16];
  if (v13)
  {
    uint64_t v14 = v13;
    uint64_t v15 = *(void *)v27;
    do
    {
      uint64_t v16 = 0;
      do
      {
        if (*(void *)v27 != v15) {
          objc_enumerationMutation(v12);
        }
        [*(id *)(*((void *)&v26 + 1) + 8 * v16++) readAll:1];
      }
      while (v14 != v16);
      uint64_t v14 = [v12 countByEnumeratingWithState:&v26 objects:v39 count:16];
    }
    while (v14);
  }

  long long v24 = 0u;
  long long v25 = 0u;
  long long v22 = 0u;
  long long v23 = 0u;
  id v17 = a1[6];
  uint64_t v18 = [v17 countByEnumeratingWithState:&v22 objects:v38 count:16];
  if (v18)
  {
    uint64_t v19 = v18;
    uint64_t v20 = *(void *)v23;
    do
    {
      uint64_t v21 = 0;
      do
      {
        if (*(void *)v23 != v20) {
          objc_enumerationMutation(v17);
        }
        objc_msgSend(*(id *)(*((void *)&v22 + 1) + 8 * v21++), "readAll:", 1, (void)v22);
      }
      while (v19 != v21);
      uint64_t v19 = [v17 countByEnumeratingWithState:&v22 objects:v38 count:16];
    }
    while (v19);
  }
}

unint64_t GEOTransitSignInstructionReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 60))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOTransitSignInstructionReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = [v8 position];
  *(_DWORD *)(a1 + 60) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOTransitSignInstructionReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOTransitSignInstructionReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOTransitSignInstructionReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOTransitSignInstructionCallReadAllRecursiveWithoutSynchronized((id *)a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_1898918A8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOTransitSignInstructionReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOTransitSignInstructionReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18989190C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189891CFC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOTransitSignInstructionIsDirty(uint64_t a1)
{
  uint64_t v31 = *MEMORY[0x1E4F143B8];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  char v2 = *(unsigned char *)(a1 + 68);
  if ((v2 & 0x3E) == 0)
  {
    if ((*(unsigned char *)(a1 + 68) & 4) != 0)
    {
      long long v26 = 0u;
      long long v27 = 0u;
      long long v24 = 0u;
      long long v25 = 0u;
      id v4 = *(id *)(a1 + 32);
      uint64_t v5 = [v4 countByEnumeratingWithState:&v24 objects:v30 count:16];
      if (v5)
      {
        uint64_t v6 = v5;
        uint64_t v7 = *(void *)v25;
LABEL_6:
        uint64_t v8 = 0;
        while (1)
        {
          if (*(void *)v25 != v7) {
            objc_enumerationMutation(v4);
          }
          if (GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(*((void *)&v24 + 1) + 8 * v8))) {
            goto LABEL_34;
          }
          if (v6 == ++v8)
          {
            uint64_t v6 = [v4 countByEnumeratingWithState:&v24 objects:v30 count:16];
            if (v6) {
              goto LABEL_6;
            }
            break;
          }
        }
      }

      char v2 = *(unsigned char *)(a1 + 68);
    }
    if ((v2 & 8) != 0)
    {
      long long v22 = 0u;
      long long v23 = 0u;
      long long v20 = 0u;
      long long v21 = 0u;
      id v4 = *(id *)(a1 + 40);
      uint64_t v9 = [v4 countByEnumeratingWithState:&v20 objects:v29 count:16];
      if (v9)
      {
        uint64_t v10 = v9;
        uint64_t v11 = *(void *)v21;
LABEL_16:
        uint64_t v12 = 0;
        while (1)
        {
          if (*(void *)v21 != v11) {
            objc_enumerationMutation(v4);
          }
          if (GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(*((void *)&v20 + 1) + 8 * v12))) {
            goto LABEL_34;
          }
          if (v10 == ++v12)
          {
            uint64_t v10 = [v4 countByEnumeratingWithState:&v20 objects:v29 count:16];
            if (v10) {
              goto LABEL_16;
            }
            break;
          }
        }
      }

      char v2 = *(unsigned char *)(a1 + 68);
    }
    if ((v2 & 0x10) == 0) {
      return 0;
    }
    long long v18 = 0u;
    long long v19 = 0u;
    long long v16 = 0u;
    long long v17 = 0u;
    id v4 = *(id *)(a1 + 48);
    uint64_t v3 = [v4 countByEnumeratingWithState:&v16 objects:v28 count:16];
    if (!v3)
    {
LABEL_35:

      return v3;
    }
    uint64_t v13 = *(void *)v17;
LABEL_27:
    uint64_t v14 = 0;
    while (1)
    {
      if (*(void *)v17 != v13) {
        objc_enumerationMutation(v4);
      }
      if (GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(*((void *)&v16 + 1) + 8 * v14))) {
        break;
      }
      if (v3 == ++v14)
      {
        uint64_t v3 = [v4 countByEnumeratingWithState:&v16 objects:v28 count:16];
        if (v3) {
          goto LABEL_27;
        }
        goto LABEL_35;
      }
    }
LABEL_34:
    uint64_t v3 = 1;
    goto LABEL_35;
  }
  return 1;
}

os_unfair_lock_s *GEOTransitSignInstructionIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    uint64_t v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOTransitSignInstructionIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 16);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_189892628(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189892B44(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOTraversalTimesReadAllFrom(uint64_t a1, void *a2)
{
  uint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    id v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    uint64_t v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        switch((v10 >> 3))
        {
          case 1u:
            char v18 = 0;
            unsigned int v19 = 0;
            uint64_t v20 = 0;
            *(unsigned char *)(a1 + 36) |= 4u;
            while (1)
            {
              uint64_t v21 = *v4;
              uint64_t v22 = *(void *)&v3[v21];
              unint64_t v23 = v22 + 1;
              if (v22 == -1 || v23 > *(void *)&v3[*v5])
              {
                long long v26 = &OBJC_IVAR___GEOTraversalTimes__estimatedSeconds;
                goto LABEL_64;
              }
              char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
              *(void *)&v3[v21] = v23;
              v20 |= (unint64_t)(v24 & 0x7F) << v18;
              if ((v24 & 0x80) == 0) {
                break;
              }
              v18 += 7;
              BOOL v25 = v19++ > 8;
              if (v25)
              {
                LODWORD(v20) = 0;
                long long v26 = &OBJC_IVAR___GEOTraversalTimes__estimatedSeconds;
                goto LABEL_67;
              }
            }
            long long v26 = &OBJC_IVAR___GEOTraversalTimes__estimatedSeconds;
            goto LABEL_65;
          case 2u:
            char v29 = 0;
            unsigned int v30 = 0;
            uint64_t v20 = 0;
            *(unsigned char *)(a1 + 36) |= 0x10u;
            while (2)
            {
              uint64_t v31 = *v4;
              uint64_t v32 = *(void *)&v3[v31];
              unint64_t v33 = v32 + 1;
              if (v32 == -1 || v33 > *(void *)&v3[*v5])
              {
                long long v26 = &OBJC_IVAR___GEOTraversalTimes__historicalEstimatedSeconds;
                goto LABEL_64;
              }
              char v34 = *(unsigned char *)(*(void *)&v3[*v7] + v32);
              *(void *)&v3[v31] = v33;
              v20 |= (unint64_t)(v34 & 0x7F) << v29;
              if (v34 < 0)
              {
                v29 += 7;
                BOOL v25 = v30++ > 8;
                if (v25)
                {
                  LODWORD(v20) = 0;
                  long long v26 = &OBJC_IVAR___GEOTraversalTimes__historicalEstimatedSeconds;
                  goto LABEL_67;
                }
                continue;
              }
              break;
            }
            long long v26 = &OBJC_IVAR___GEOTraversalTimes__historicalEstimatedSeconds;
            goto LABEL_65;
          case 3u:
            char v35 = 0;
            unsigned int v36 = 0;
            uint64_t v20 = 0;
            *(unsigned char *)(a1 + 36) |= 8u;
            while (2)
            {
              uint64_t v37 = *v4;
              uint64_t v38 = *(void *)&v3[v37];
              unint64_t v39 = v38 + 1;
              if (v38 == -1 || v39 > *(void *)&v3[*v5])
              {
                long long v26 = &OBJC_IVAR___GEOTraversalTimes__freeflowEstimatedSeconds;
                goto LABEL_64;
              }
              char v40 = *(unsigned char *)(*(void *)&v3[*v7] + v38);
              *(void *)&v3[v37] = v39;
              v20 |= (unint64_t)(v40 & 0x7F) << v35;
              if (v40 < 0)
              {
                v35 += 7;
                BOOL v25 = v36++ > 8;
                if (v25)
                {
                  LODWORD(v20) = 0;
                  long long v26 = &OBJC_IVAR___GEOTraversalTimes__freeflowEstimatedSeconds;
                  goto LABEL_67;
                }
                continue;
              }
              break;
            }
            long long v26 = &OBJC_IVAR___GEOTraversalTimes__freeflowEstimatedSeconds;
            goto LABEL_65;
          case 4u:
            char v41 = 0;
            unsigned int v42 = 0;
            uint64_t v20 = 0;
            *(unsigned char *)(a1 + 36) |= 1u;
            while (2)
            {
              uint64_t v43 = *v4;
              uint64_t v44 = *(void *)&v3[v43];
              unint64_t v45 = v44 + 1;
              if (v44 == -1 || v45 > *(void *)&v3[*v5])
              {
                long long v26 = &OBJC_IVAR___GEOTraversalTimes__aggressiveEstimatedSeconds;
                goto LABEL_64;
              }
              char v46 = *(unsigned char *)(*(void *)&v3[*v7] + v44);
              *(void *)&v3[v43] = v45;
              v20 |= (unint64_t)(v46 & 0x7F) << v41;
              if (v46 < 0)
              {
                v41 += 7;
                BOOL v25 = v42++ > 8;
                if (v25)
                {
                  LODWORD(v20) = 0;
                  long long v26 = &OBJC_IVAR___GEOTraversalTimes__aggressiveEstimatedSeconds;
                  goto LABEL_67;
                }
                continue;
              }
              break;
            }
            long long v26 = &OBJC_IVAR___GEOTraversalTimes__aggressiveEstimatedSeconds;
            goto LABEL_65;
          case 5u:
            char v47 = 0;
            unsigned int v48 = 0;
            uint64_t v20 = 0;
            *(unsigned char *)(a1 + 36) |= 2u;
            break;
          default:
            if (!*(void *)(a1 + 8))
            {
              id v27 = objc_alloc_init(MEMORY[0x1E4F940B0]);
              long long v28 = *(void **)(a1 + 8);
              *(void *)(a1 + 8) = v27;
            }
            if ((PBUnknownFieldAdd() & 1) == 0) {
              goto LABEL_76;
            }
            continue;
        }
        while (1)
        {
          uint64_t v49 = *v4;
          uint64_t v50 = *(void *)&v3[v49];
          unint64_t v51 = v50 + 1;
          if (v50 == -1 || v51 > *(void *)&v3[*v5]) {
            break;
          }
          char v52 = *(unsigned char *)(*(void *)&v3[*v7] + v50);
          *(void *)&v3[v49] = v51;
          v20 |= (unint64_t)(v52 & 0x7F) << v47;
          if ((v52 & 0x80) == 0)
          {
            long long v26 = &OBJC_IVAR___GEOTraversalTimes__conservativeEstimatedSeconds;
            goto LABEL_65;
          }
          v47 += 7;
          BOOL v25 = v48++ > 8;
          if (v25)
          {
            LODWORD(v20) = 0;
            long long v26 = &OBJC_IVAR___GEOTraversalTimes__conservativeEstimatedSeconds;
            goto LABEL_67;
          }
        }
        long long v26 = &OBJC_IVAR___GEOTraversalTimes__conservativeEstimatedSeconds;
LABEL_64:
        v3[*v6] = 1;
LABEL_65:
        if (v3[*v6]) {
          LODWORD(v20) = 0;
        }
LABEL_67:
        *(_DWORD *)(a1 + *v26) = v20;
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v53 = v3[*v6] == 0;
  }
  else
  {
LABEL_76:
    BOOL v53 = 0;
  }
  objc_sync_exit(v3);

  return v53;
}

void sub_189893D20(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOTraversalTimesReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOTraversalTimesReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189893D98(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOTraversalTimesIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  char v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  id v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      if (v14 || (v8 & 7) == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_65;
          }
          unsigned int v16 = 0;
          while (1)
          {
            uint64_t v17 = *v2;
            uint64_t v18 = *(void *)&a1[v17];
            unint64_t v19 = v18 + 1;
            if (v18 == -1 || v19 > *(void *)&a1[*v3]) {
              goto LABEL_61;
            }
            int v20 = *(char *)(*(void *)&a1[*v5] + v18);
            *(void *)&a1[v17] = v19;
            if (v20 < 0)
            {
              BOOL v21 = v16++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_62;
          }
        case 2u:
          if ((v8 & 7) != 0) {
            goto LABEL_65;
          }
          unsigned int v22 = 0;
          while (1)
          {
            uint64_t v23 = *v2;
            uint64_t v24 = *(void *)&a1[v23];
            unint64_t v25 = v24 + 1;
            if (v24 == -1 || v25 > *(void *)&a1[*v3]) {
              goto LABEL_61;
            }
            int v26 = *(char *)(*(void *)&a1[*v5] + v24);
            *(void *)&a1[v23] = v25;
            if (v26 < 0)
            {
              BOOL v21 = v22++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_62;
          }
        case 3u:
          if ((v8 & 7) != 0) {
            goto LABEL_65;
          }
          unsigned int v27 = 0;
          while (1)
          {
            uint64_t v28 = *v2;
            uint64_t v29 = *(void *)&a1[v28];
            unint64_t v30 = v29 + 1;
            if (v29 == -1 || v30 > *(void *)&a1[*v3]) {
              goto LABEL_61;
            }
            int v31 = *(char *)(*(void *)&a1[*v5] + v29);
            *(void *)&a1[v28] = v30;
            if (v31 < 0)
            {
              BOOL v21 = v27++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_62;
          }
        case 4u:
          if ((v8 & 7) != 0) {
            goto LABEL_65;
          }
          unsigned int v32 = 0;
          while (1)
          {
            uint64_t v33 = *v2;
            uint64_t v34 = *(void *)&a1[v33];
            unint64_t v35 = v34 + 1;
            if (v34 == -1 || v35 > *(void *)&a1[*v3]) {
              goto LABEL_61;
            }
            int v36 = *(char *)(*(void *)&a1[*v5] + v34);
            *(void *)&a1[v33] = v35;
            if (v36 < 0)
            {
              BOOL v21 = v32++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_62;
          }
        case 5u:
          if ((v8 & 7) != 0) {
            goto LABEL_65;
          }
          unsigned int v37 = 0;
          break;
        default:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_65:
          BOOL v42 = 0;
          goto LABEL_64;
      }
      while (1)
      {
        uint64_t v38 = *v2;
        uint64_t v39 = *(void *)&a1[v38];
        unint64_t v40 = v39 + 1;
        if (v39 == -1 || v40 > *(void *)&a1[*v3]) {
          break;
        }
        int v41 = *(char *)(*(void *)&a1[*v5] + v39);
        *(void *)&a1[v38] = v40;
        if (v41 < 0)
        {
          BOOL v21 = v37++ > 8;
          if (!v21) {
            continue;
          }
        }
        goto LABEL_62;
      }
LABEL_61:
      a1[*v4] = 1;
LABEL_62:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v42 = a1[*v4] == 0;
LABEL_64:
  PBReaderRecallMark();
  return v42;
}

BOOL GEOTriggerPointReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    id v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        switch((v10 >> 3))
        {
          case 1u:
            char v18 = 0;
            unsigned int v19 = 0;
            uint64_t v20 = 0;
            *(unsigned char *)(a1 + 28) |= 2u;
            while (1)
            {
              uint64_t v21 = *v4;
              uint64_t v22 = *(void *)&v3[v21];
              unint64_t v23 = v22 + 1;
              if (v22 == -1 || v23 > *(void *)&v3[*v5]) {
                break;
              }
              char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
              *(void *)&v3[v21] = v23;
              v20 |= (unint64_t)(v24 & 0x7F) << v18;
              if ((v24 & 0x80) == 0) {
                goto LABEL_53;
              }
              v18 += 7;
              BOOL v15 = v19++ >= 9;
              if (v15)
              {
                LODWORD(v20) = 0;
                goto LABEL_55;
              }
            }
            v3[*v6] = 1;
LABEL_53:
            if (v3[*v6]) {
              LODWORD(v20) = 0;
            }
LABEL_55:
            uint64_t v47 = 20;
            goto LABEL_60;
          case 2u:
            char v27 = 0;
            unsigned int v28 = 0;
            uint64_t v20 = 0;
            *(unsigned char *)(a1 + 28) |= 1u;
            while (2)
            {
              uint64_t v29 = *v4;
              uint64_t v30 = *(void *)&v3[v29];
              unint64_t v31 = v30 + 1;
              if (v30 == -1 || v31 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v32 = *(unsigned char *)(*(void *)&v3[*v7] + v30);
                *(void *)&v3[v29] = v31;
                v20 |= (unint64_t)(v32 & 0x7F) << v27;
                if (v32 < 0)
                {
                  v27 += 7;
                  BOOL v15 = v28++ >= 9;
                  if (v15)
                  {
                    LODWORD(v20) = 0;
                    goto LABEL_59;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              LODWORD(v20) = 0;
            }
LABEL_59:
            uint64_t v47 = 16;
LABEL_60:
            *(_DWORD *)(a1 + v47) = v20;
            continue;
          case 3u:
            char v33 = 0;
            unsigned int v34 = 0;
            uint64_t v35 = 0;
            *(unsigned char *)(a1 + 28) |= 8u;
            while (2)
            {
              uint64_t v36 = *v4;
              uint64_t v37 = *(void *)&v3[v36];
              unint64_t v38 = v37 + 1;
              if (v37 == -1 || v38 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v39 = *(unsigned char *)(*(void *)&v3[*v7] + v37);
                *(void *)&v3[v36] = v38;
                v35 |= (unint64_t)(v39 & 0x7F) << v33;
                if (v39 < 0)
                {
                  v33 += 7;
                  BOOL v15 = v34++ >= 9;
                  if (v15)
                  {
                    uint64_t v35 = 0;
                    goto LABEL_64;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              uint64_t v35 = 0;
            }
LABEL_64:
            BOOL v48 = v35 != 0;
            uint64_t v49 = 25;
            goto LABEL_69;
          case 4u:
            char v40 = 0;
            unsigned int v41 = 0;
            uint64_t v42 = 0;
            *(unsigned char *)(a1 + 28) |= 4u;
            break;
          default:
            if (!*(void *)(a1 + 8))
            {
              id v25 = objc_alloc_init(MEMORY[0x1E4F940B0]);
              int v26 = *(void **)(a1 + 8);
              *(void *)(a1 + 8) = v25;
            }
            if (!PBUnknownFieldAdd()) {
              goto LABEL_72;
            }
            continue;
        }
        while (1)
        {
          uint64_t v43 = *v4;
          uint64_t v44 = *(void *)&v3[v43];
          unint64_t v45 = v44 + 1;
          if (v44 == -1 || v45 > *(void *)&v3[*v5]) {
            break;
          }
          char v46 = *(unsigned char *)(*(void *)&v3[*v7] + v44);
          *(void *)&v3[v43] = v45;
          v42 |= (unint64_t)(v46 & 0x7F) << v40;
          if ((v46 & 0x80) == 0) {
            goto LABEL_66;
          }
          v40 += 7;
          BOOL v15 = v41++ >= 9;
          if (v15)
          {
            uint64_t v42 = 0;
            goto LABEL_68;
          }
        }
        v3[*v6] = 1;
LABEL_66:
        if (v3[*v6]) {
          uint64_t v42 = 0;
        }
LABEL_68:
        BOOL v48 = v42 != 0;
        uint64_t v49 = 24;
LABEL_69:
        *(unsigned char *)(a1 + v49) = v48;
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v50 = v3[*v6] == 0;
  }
  else
  {
LABEL_72:
    BOOL v50 = 0;
  }
  objc_sync_exit(v3);

  return v50;
}

void sub_189895490(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOTriggerPointReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOTriggerPointReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189895504(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOTriggerPointIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  char v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  id v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      if (v14 || (v8 & 7) == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_57;
          }
          unsigned int v16 = 0;
          while (1)
          {
            uint64_t v17 = *v2;
            uint64_t v18 = *(void *)&a1[v17];
            unint64_t v19 = v18 + 1;
            if (v18 == -1 || v19 > *(void *)&a1[*v3]) {
              goto LABEL_53;
            }
            int v20 = *(char *)(*(void *)&a1[*v5] + v18);
            *(void *)&a1[v17] = v19;
            if (v20 < 0)
            {
              BOOL v21 = v16++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_54;
          }
        case 2u:
          if ((v8 & 7) != 0) {
            goto LABEL_57;
          }
          unsigned int v22 = 0;
          while (1)
          {
            uint64_t v23 = *v2;
            uint64_t v24 = *(void *)&a1[v23];
            unint64_t v25 = v24 + 1;
            if (v24 == -1 || v25 > *(void *)&a1[*v3]) {
              goto LABEL_53;
            }
            int v26 = *(char *)(*(void *)&a1[*v5] + v24);
            *(void *)&a1[v23] = v25;
            if (v26 < 0)
            {
              BOOL v21 = v22++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_54;
          }
        case 3u:
          if ((v8 & 7) != 0) {
            goto LABEL_57;
          }
          unsigned int v27 = 0;
          while (1)
          {
            uint64_t v28 = *v2;
            uint64_t v29 = *(void *)&a1[v28];
            unint64_t v30 = v29 + 1;
            if (v29 == -1 || v30 > *(void *)&a1[*v3]) {
              goto LABEL_53;
            }
            int v31 = *(char *)(*(void *)&a1[*v5] + v29);
            *(void *)&a1[v28] = v30;
            if (v31 < 0)
            {
              BOOL v21 = v27++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_54;
          }
        case 4u:
          if ((v8 & 7) != 0) {
            goto LABEL_57;
          }
          unsigned int v32 = 0;
          break;
        default:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_57:
          BOOL v37 = 0;
          goto LABEL_56;
      }
      while (1)
      {
        uint64_t v33 = *v2;
        uint64_t v34 = *(void *)&a1[v33];
        unint64_t v35 = v34 + 1;
        if (v34 == -1 || v35 > *(void *)&a1[*v3]) {
          break;
        }
        int v36 = *(char *)(*(void *)&a1[*v5] + v34);
        *(void *)&a1[v33] = v35;
        if (v36 < 0)
        {
          BOOL v21 = v32++ > 8;
          if (!v21) {
            continue;
          }
        }
        goto LABEL_54;
      }
LABEL_53:
      a1[*v4] = 1;
LABEL_54:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v37 = a1[*v4] == 0;
LABEL_56:
  PBReaderRecallMark();
  return v37;
}

void sub_189895FF4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOTriggerPointRangeReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  char v7 = 0;
  uint64_t v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  int v11 = ((*(unsigned __int8 *)(a1 + 56) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 56) >> 2) & 1)
      + ((*(unsigned __int8 *)(a1 + 56) >> 1) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v11;
        goto LABEL_8;
      case -3:
        char v7 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_9;
      case 0:
        BOOL v14 = v11 != 0;
        char v15 = v14 & ~(_BYTE)v10 | v9;
        unsigned __int8 v16 = v14 | v10;
        char v59 = v15;
        char v60 = v16 | v15;
        if ((v16 | v7)) {
          uint64_t v17 = 0;
        }
        else {
          uint64_t v17 = a3;
        }
        char v61 = (v17 == 0) | v16;
        BOOL v62 = v16;
        uint64_t v18 = (int *)MEMORY[0x1E4F940E8];
        unint64_t v19 = (int *)MEMORY[0x1E4F940C8];
        int v20 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v11;
LABEL_7:
        uint64_t v12 = v9;
LABEL_8:
        uint64_t v13 = v10;
LABEL_9:
        ++v8;
        uint64_t v9 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v18) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v19)) {
      goto LABEL_78;
    }
    char v21 = 0;
    unsigned int v22 = 0;
    unint64_t v23 = 0;
    while (1)
    {
      uint64_t v24 = *v18;
      uint64_t v25 = *(void *)(v3 + v24);
      unint64_t v26 = v25 + 1;
      if (v25 == -1 || v26 > *(void *)(v3 + *v6)) {
        break;
      }
      char v27 = *(unsigned char *)(*(void *)(v3 + *v20) + v25);
      *(void *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0) {
        goto LABEL_24;
      }
      v21 += 7;
      BOOL v28 = v22++ >= 9;
      if (v28)
      {
        unint64_t v23 = 0;
        int v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_26;
      }
    }
    *(unsigned char *)(v3 + *v19) = 1;
LABEL_24:
    int v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(unsigned char *)(v3 + *v19)) {
      unint64_t v23 = 0;
    }
LABEL_26:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_78:
      int v57 = 1;
      goto LABEL_79;
    }
    unint64_t v31 = v23 >> 3;
    BOOL v32 = v62;
    if ((v61 & 1) == 0)
    {
      uint64_t v33 = v17;
      do
      {
        int v35 = *v33++;
        int v34 = v35;
        BOOL v32 = v35 != 0;
        if (v35) {
          BOOL v36 = v34 == v31;
        }
        else {
          BOOL v36 = 1;
        }
      }
      while (!v36);
    }
    if (v31 == 3)
    {
      if ((v7 & 1) == 0) {
        goto LABEL_65;
      }
      char v39 = 0;
      unsigned int v40 = 0;
      uint64_t v41 = 0;
      *(unsigned char *)(a1 + 56) |= 1u;
      while (1)
      {
        uint64_t v42 = *v18;
        uint64_t v43 = *(void *)(v3 + v42);
        unint64_t v44 = v43 + 1;
        if (v43 == -1 || v44 > *(void *)(v3 + *v6)) {
          break;
        }
        char v45 = *(unsigned char *)(*(void *)(v3 + *v20) + v43);
        *(void *)(v3 + v42) = v44;
        v41 |= (unint64_t)(v45 & 0x7F) << v39;
        if ((v45 & 0x80) == 0) {
          goto LABEL_68;
        }
        v39 += 7;
        BOOL v28 = v40++ >= 9;
        if (v28)
        {
          LODWORD(v41) = 0;
          goto LABEL_70;
        }
      }
      *(unsigned char *)(v3 + *v19) = 1;
LABEL_68:
      if (*(unsigned char *)(v3 + *v19)) {
        LODWORD(v41) = 0;
      }
LABEL_70:
      *(_DWORD *)(a1 + 52) = v41;
      goto LABEL_77;
    }
    if (v31 == 2) {
      break;
    }
    if (v31 == 1)
    {
      if (!v32) {
        goto LABEL_65;
      }
      if ((*(unsigned char *)(a1 + 56) & 8) == 0)
      {
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_98;
        }
        BOOL v37 = objc_alloc_init(GEOTriggerPoint);
        if (!GEOTriggerPointReadAllFrom((uint64_t)v37, (void *)v3)) {
          goto LABEL_97;
        }
        PBReaderRecallMark();
        uint64_t v38 = 32;
LABEL_58:
        char v46 = *(void **)(a1 + v38);
        *(void *)(a1 + v38) = v37;

        --v8;
LABEL_76:
        unint64_t v19 = (int *)MEMORY[0x1E4F940C8];
        goto LABEL_77;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        goto LABEL_98;
      }
      char v51 = 16 * *(unsigned char *)(a1 + 56);
LABEL_75:
      v8 += v51 >> 7;
      goto LABEL_76;
    }
    if ((v59 & 1) == 0 || (*(unsigned char *)(a1 + 56) & 2) != 0)
    {
LABEL_65:
      char v50 = PBReaderSkipValueWithTag();
      unint64_t v19 = (int *)MEMORY[0x1E4F940C8];
      if ((v50 & 1) == 0)
      {
        int v57 = 0;
        goto LABEL_79;
      }
      goto LABEL_77;
    }
    if (!*(void *)(a1 + 16))
    {
      id v47 = objc_alloc_init(MEMORY[0x1E4F940B0]);
      BOOL v48 = *(void **)(a1 + 16);
      *(void *)(a1 + 16) = v47;
    }
    int v49 = PBUnknownFieldAdd();
    unint64_t v19 = (int *)MEMORY[0x1E4F940C8];
    if (!v49)
    {
      int v57 = 0;
      char v58 = &OBJC_IVAR___GEOComposedRoute__visualInfosForRouteNameLabels;
      goto LABEL_80;
    }
LABEL_77:
    if (!(v60 & 1 | (v8 != 0))) {
      goto LABEL_78;
    }
  }
  if (!v32) {
    goto LABEL_65;
  }
  if ((*(unsigned char *)(a1 + 56) & 4) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0) {
      goto LABEL_98;
    }
    char v51 = 32 * *(unsigned char *)(a1 + 56);
    goto LABEL_75;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_98;
  }
  BOOL v37 = objc_alloc_init(GEOTriggerPoint);
  if (GEOTriggerPointReadAllFrom((uint64_t)v37, (void *)v3))
  {
    PBReaderRecallMark();
    uint64_t v38 = 24;
    goto LABEL_58;
  }
LABEL_97:

LABEL_98:
  int v57 = 0;
  unint64_t v19 = (int *)MEMORY[0x1E4F940C8];
LABEL_79:
  char v58 = &OBJC_IVAR___GEOComposedRoute__visualInfosForRouteNameLabels;
  if ((v59 & 1) == 0) {
    goto LABEL_81;
  }
LABEL_80:
  *(unsigned char *)(a1 + v58[761]) |= 2u;
LABEL_81:
  if (v62 || (v57 & 1) == 0)
  {
    *(unsigned char *)(a1 + v58[761]) |= 8u;
    *(unsigned char *)(a1 + v58[761]) |= 4u;
    goto LABEL_91;
  }
  if (v17)
  {
    while (2)
    {
      while (1)
      {
        int v53 = *v17++;
        int v52 = v53;
        if (v53 == 1) {
          break;
        }
        if (v52 == 2)
        {
          char v54 = 4;
          goto LABEL_90;
        }
        if (!v52) {
          goto LABEL_91;
        }
      }
      char v54 = 8;
LABEL_90:
      *(unsigned char *)(a1 + v58[761]) |= v54;
      continue;
    }
  }
LABEL_91:
  if (v57) {
    unint64_t v3 = *(unsigned char *)(v3 + *v19) == 0;
  }
  else {
    unint64_t v3 = 0;
  }
  if (v62)
  {
    uint64_t v55 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_189896778(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189896F14(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOTriggerPointRangeReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOTriggerPointRangeReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOTriggerPointRangeReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOTriggerPointRangeReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOTriggerPointRangeReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    [*(id *)(a1 + 32) readAll:1];
    [*(id *)(a1 + 24) readAll:1];
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_1898970D0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOTriggerPointRangeReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOTriggerPointRangeReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189897134(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189897304(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOTriggerPointRangeIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  BOOL v2 = (*(unsigned char *)(a1 + 56) & 0x1C) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return v2;
}

void sub_189897620(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189897934(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOTripInfoReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    id v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      char v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          char v18 = 0;
          unsigned int v19 = 0;
          uint64_t v20 = 0;
          *(unsigned char *)(a1 + 20) |= 1u;
          while (1)
          {
            uint64_t v21 = *v4;
            uint64_t v22 = *(void *)&v3[v21];
            unint64_t v23 = v22 + 1;
            if (v22 == -1 || v23 > *(void *)&v3[*v5]) {
              break;
            }
            char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
            *(void *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0) {
              goto LABEL_32;
            }
            v18 += 7;
            BOOL v15 = v19++ >= 9;
            if (v15)
            {
              uint64_t v20 = 0;
              goto LABEL_34;
            }
          }
          v3[*v6] = 1;
LABEL_32:
          if (v3[*v6]) {
            uint64_t v20 = 0;
          }
LABEL_34:
          *(unsigned char *)(a1 + 16) = v20 != 0;
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v25 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            unint64_t v26 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v25;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_37;
          }
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v27 = v3[*v6] == 0;
  }
  else
  {
LABEL_37:
    BOOL v27 = 0;
  }
  objc_sync_exit(v3);

  return v27;
}

void sub_18989814C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOTripInfoReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOTripInfoReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1898981B0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOTripInfoIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  id v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      if (v14 || (v8 & 7) == 4) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_33;
        }
        unsigned int v16 = 0;
        while (1)
        {
          uint64_t v17 = *v2;
          uint64_t v18 = *(void *)&a1[v17];
          unint64_t v19 = v18 + 1;
          if (v18 == -1 || v19 > *(void *)&a1[*v3]) {
            break;
          }
          int v20 = *(char *)(*(void *)&a1[*v5] + v18);
          *(void *)&a1[v17] = v19;
          if (v20 < 0 && v16++ <= 8) {
            continue;
          }
          goto LABEL_30;
        }
        a1[*v4] = 1;
      }
      else if (!PBReaderSkipValueWithTag())
      {
LABEL_33:
        BOOL v22 = 0;
        goto LABEL_32;
      }
LABEL_30:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v22 = a1[*v4] == 0;
LABEL_32:
  PBReaderRecallMark();
  return v22;
}

void sub_1898988BC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOURLDataReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  uint64_t v7 = 0;
  uint64_t v8 = 0;
  char v9 = 0;
  uint64_t v10 = 0;
  int v11 = ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1)
      + (*(unsigned char *)(a1 + 52) & 1)
      + ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v10])
    {
      case -4:
        ++v11;
        uint64_t v12 = v7;
        goto LABEL_8;
      case -3:
        char v9 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_8;
      case 0:
        BOOL v14 = v11 != 0;
        char v15 = v14 & ~(_BYTE)v7;
        unsigned __int8 v16 = v14 | v7;
        char v51 = v15 | v8;
        if ((v16 | v9)) {
          uint64_t v17 = 0;
        }
        else {
          uint64_t v17 = a3;
        }
        BOOL v54 = v16;
        char v52 = v16 | v15 | v8;
        char v53 = (v17 == 0) | v16;
        uint64_t v18 = (int *)MEMORY[0x1E4F940E8];
        unint64_t v19 = (int *)MEMORY[0x1E4F940C8];
        int v20 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v11;
LABEL_7:
        uint64_t v12 = v7;
        uint64_t v13 = v8;
LABEL_8:
        ++v10;
        uint64_t v7 = v12;
        uint64_t v8 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v18) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v19)) {
      goto LABEL_59;
    }
    char v21 = 0;
    unsigned int v22 = 0;
    unint64_t v23 = 0;
    while (1)
    {
      uint64_t v24 = *v18;
      uint64_t v25 = *(void *)(v3 + v24);
      unint64_t v26 = v25 + 1;
      if (v25 == -1 || v26 > *(void *)(v3 + *v6)) {
        break;
      }
      char v27 = *(unsigned char *)(*(void *)(v3 + *v20) + v25);
      *(void *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0) {
        goto LABEL_23;
      }
      v21 += 7;
      if (v22++ >= 9)
      {
        unint64_t v23 = 0;
        int v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_25;
      }
    }
    *(unsigned char *)(v3 + *v19) = 1;
LABEL_23:
    int v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(unsigned char *)(v3 + *v19)) {
      unint64_t v23 = 0;
    }
LABEL_25:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_59:
      int v50 = 1;
      goto LABEL_60;
    }
    unint64_t v31 = v23 >> 3;
    BOOL v32 = v54;
    if ((v53 & 1) == 0)
    {
      uint64_t v33 = v17;
      do
      {
        int v35 = *v33++;
        int v34 = v35;
        BOOL v32 = v35 != 0;
        if (v35) {
          BOOL v36 = v34 == v31;
        }
        else {
          BOOL v36 = 1;
        }
      }
      while (!v36);
    }
    if (v31 == 2) {
      break;
    }
    if (v31 == 1)
    {
      if (!v32) {
        goto LABEL_51;
      }
      if ((*(unsigned char *)(a1 + 52) & 2) != 0)
      {
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_78;
        }
        char v44 = *(unsigned char *)(a1 + 52) << 6;
        goto LABEL_57;
      }
      uint64_t v37 = PBReaderReadString();
      uint64_t v38 = 24;
      goto LABEL_44;
    }
    if (v51 & 1) == 0 || (*(unsigned char *)(a1 + 52))
    {
LABEL_51:
      char v43 = PBReaderSkipValueWithTag();
      unint64_t v19 = (int *)MEMORY[0x1E4F940C8];
      if ((v43 & 1) == 0)
      {
        int v50 = 0;
        goto LABEL_60;
      }
      goto LABEL_58;
    }
    if (!*(void *)(a1 + 16))
    {
      id v40 = objc_alloc_init(MEMORY[0x1E4F940B0]);
      uint64_t v41 = *(void **)(a1 + 16);
      *(void *)(a1 + 16) = v40;
    }
    int v42 = PBUnknownFieldAdd();
    unint64_t v19 = (int *)MEMORY[0x1E4F940C8];
    if (!v42)
    {
      int v50 = 0;
      goto LABEL_61;
    }
LABEL_58:
    if (!(v52 & 1 | (v10 != 0))) {
      goto LABEL_59;
    }
  }
  if (!v32) {
    goto LABEL_51;
  }
  if ((*(unsigned char *)(a1 + 52) & 4) == 0)
  {
    uint64_t v37 = PBReaderReadString();
    uint64_t v38 = 32;
LABEL_44:
    char v39 = *(void **)(a1 + v38);
    *(void *)(a1 + v38) = v37;

    unint64_t v19 = (int *)MEMORY[0x1E4F940C8];
    --v10;
    goto LABEL_58;
  }
  if (PBReaderSkipValueWithTag())
  {
    char v44 = 32 * *(unsigned char *)(a1 + 52);
LABEL_57:
    v10 += v44 >> 7;
    unint64_t v19 = (int *)MEMORY[0x1E4F940C8];
    goto LABEL_58;
  }
LABEL_78:
  int v50 = 0;
  unint64_t v19 = (int *)MEMORY[0x1E4F940C8];
LABEL_60:
  if ((v51 & 1) == 0) {
    goto LABEL_62;
  }
LABEL_61:
  *(unsigned char *)(a1 + 52) |= 1u;
LABEL_62:
  if (v54 || (v50 & 1) == 0)
  {
    *(unsigned char *)(a1 + 52) |= 2u;
    *(unsigned char *)(a1 + 52) |= 4u;
    goto LABEL_72;
  }
  if (v17)
  {
    while (1)
    {
      int v47 = *v17++;
      int v46 = v47;
      if (v47 == 1) {
        break;
      }
      if (v46 == 2)
      {
        char v45 = 4;
LABEL_68:
        *(unsigned char *)(a1 + 52) |= v45;
      }
      else if (!v46)
      {
        goto LABEL_72;
      }
    }
    char v45 = 2;
    goto LABEL_68;
  }
LABEL_72:
  if (v50) {
    unint64_t v3 = *(unsigned char *)(v3 + *v19) == 0;
  }
  else {
    unint64_t v3 = 0;
  }
  if (v54)
  {
    BOOL v48 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_189898F0C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898994C8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOURLDataReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOURLDataReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    char v9 = (int *)&GEOURLDataReadAllFrom_recursiveTag;
  }
  else {
    char v9 = (int *)&GEOURLDataReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOURLDataReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_189899658(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOURLDataReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOURLDataReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1898996BC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189899864(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOURLDataIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  BOOL v2 = (*(unsigned char *)(a1 + 52) & 0xE) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return v2;
}

void sub_189899B18(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189899D6C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOUpdateLocationReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    id v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
      while (1)
      {
        if (v3[*v6]) {
          goto LABEL_49;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          goto LABEL_49;
        }
        if ((v10 >> 3) == 2) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          char v18 = 0;
          unsigned int v19 = 0;
          uint64_t v20 = 0;
          *(unsigned char *)(a1 + 24) |= 1u;
          while (1)
          {
            uint64_t v21 = *v4;
            uint64_t v22 = *(void *)&v3[v21];
            unint64_t v23 = v22 + 1;
            if (v22 == -1 || v23 > *(void *)&v3[*v5])
            {
              unint64_t v26 = &OBJC_IVAR___GEOUpdateLocation__metersFromStartOfRoute;
              goto LABEL_41;
            }
            char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
            *(void *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0) {
              break;
            }
            v18 += 7;
            BOOL v25 = v19++ > 8;
            if (v25)
            {
              LODWORD(v20) = 0;
              unint64_t v26 = &OBJC_IVAR___GEOUpdateLocation__metersFromStartOfRoute;
              goto LABEL_44;
            }
          }
          unint64_t v26 = &OBJC_IVAR___GEOUpdateLocation__metersFromStartOfRoute;
LABEL_42:
          if (v3[*v6]) {
            LODWORD(v20) = 0;
          }
LABEL_44:
          *(_DWORD *)(a1 + *v26) = v20;
          goto LABEL_45;
        }
        if (!*(void *)(a1 + 8))
        {
          id v33 = objc_alloc_init(MEMORY[0x1E4F940B0]);
          int v34 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = v33;
        }
        if ((PBUnknownFieldAdd() & 1) == 0) {
          goto LABEL_50;
        }
LABEL_45:
        if (*(void *)&v3[*v4] >= *(void *)&v3[*v5]) {
          goto LABEL_49;
        }
      }
      char v27 = 0;
      unsigned int v28 = 0;
      uint64_t v20 = 0;
      *(unsigned char *)(a1 + 24) |= 2u;
      while (1)
      {
        uint64_t v29 = *v4;
        uint64_t v30 = *(void *)&v3[v29];
        unint64_t v31 = v30 + 1;
        if (v30 == -1 || v31 > *(void *)&v3[*v5]) {
          break;
        }
        char v32 = *(unsigned char *)(*(void *)&v3[*v7] + v30);
        *(void *)&v3[v29] = v31;
        v20 |= (unint64_t)(v32 & 0x7F) << v27;
        if ((v32 & 0x80) == 0)
        {
          unint64_t v26 = &OBJC_IVAR___GEOUpdateLocation__minSecondsSinceLastUpdate;
          goto LABEL_42;
        }
        v27 += 7;
        BOOL v25 = v28++ > 8;
        if (v25)
        {
          LODWORD(v20) = 0;
          unint64_t v26 = &OBJC_IVAR___GEOUpdateLocation__minSecondsSinceLastUpdate;
          goto LABEL_44;
        }
      }
      unint64_t v26 = &OBJC_IVAR___GEOUpdateLocation__minSecondsSinceLastUpdate;
LABEL_41:
      v3[*v6] = 1;
      goto LABEL_42;
    }
LABEL_49:
    BOOL v35 = v3[*v6] == 0;
  }
  else
  {
LABEL_50:
    BOOL v35 = 0;
  }
  objc_sync_exit(v3);

  return v35;
}

void sub_18989A740(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOUpdateLocationReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOUpdateLocationReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18989A7A4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOUserPreferencesReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    id v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        unint64_t v18 = v10 >> 3;
        if ((v10 >> 3) == 3)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_55;
          }
          unint64_t v26 = objc_alloc_init(GEOEVChargingPreference);
          if (!GEOEVChargingPreferenceReadAllFrom((uint64_t)v26, v3))
          {

            goto LABEL_55;
          }
          PBReaderRecallMark();
          objc_msgSend((id)a1, "addEvChargingPreferences:", v26, 0, 0);
        }
        else
        {
          if (v18 == 2)
          {
            char v27 = 0;
            unsigned int v28 = 0;
            uint64_t v29 = 0;
            *(unsigned char *)(a1 + 28) |= 1u;
            while (1)
            {
              uint64_t v30 = *v4;
              uint64_t v31 = *(void *)&v3[v30];
              unint64_t v32 = v31 + 1;
              if (v31 == -1 || v32 > *(void *)&v3[*v5]) {
                break;
              }
              char v33 = *(unsigned char *)(*(void *)&v3[*v7] + v31);
              *(void *)&v3[v30] = v32;
              v29 |= (unint64_t)(v33 & 0x7F) << v27;
              if ((v33 & 0x80) == 0) {
                goto LABEL_48;
              }
              v27 += 7;
              BOOL v15 = v28++ >= 9;
              if (v15)
              {
                uint64_t v29 = 0;
                goto LABEL_50;
              }
            }
            v3[*v6] = 1;
LABEL_48:
            if (v3[*v6]) {
              uint64_t v29 = 0;
            }
LABEL_50:
            BOOL v36 = v29 != 0;
            uint64_t v37 = 24;
            goto LABEL_51;
          }
          if (v18 == 1)
          {
            char v19 = 0;
            unsigned int v20 = 0;
            uint64_t v21 = 0;
            *(unsigned char *)(a1 + 28) |= 2u;
            while (1)
            {
              uint64_t v22 = *v4;
              uint64_t v23 = *(void *)&v3[v22];
              unint64_t v24 = v23 + 1;
              if (v23 == -1 || v24 > *(void *)&v3[*v5]) {
                break;
              }
              char v25 = *(unsigned char *)(*(void *)&v3[*v7] + v23);
              *(void *)&v3[v22] = v24;
              v21 |= (unint64_t)(v25 & 0x7F) << v19;
              if ((v25 & 0x80) == 0) {
                goto LABEL_44;
              }
              v19 += 7;
              BOOL v15 = v20++ >= 9;
              if (v15)
              {
                uint64_t v21 = 0;
                goto LABEL_46;
              }
            }
            v3[*v6] = 1;
LABEL_44:
            if (v3[*v6]) {
              uint64_t v21 = 0;
            }
LABEL_46:
            BOOL v36 = v21 != 0;
            uint64_t v37 = 25;
LABEL_51:
            *(unsigned char *)(a1 + v37) = v36;
            continue;
          }
          if (!*(void *)(a1 + 8))
          {
            id v34 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            BOOL v35 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v34;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_55;
          }
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v38 = v3[*v6] == 0;
  }
  else
  {
LABEL_55:
    BOOL v38 = 0;
  }
  objc_sync_exit(v3);

  return v38;
}

void sub_18989B884(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOUserPreferencesReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOUserPreferencesReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18989B8E8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOVehicleInfoReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    id v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
      while (1)
      {
        if (v3[*v6]) {
          goto LABEL_49;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          goto LABEL_49;
        }
        if ((v10 >> 3) == 2) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          char v18 = 0;
          unsigned int v19 = 0;
          uint64_t v20 = 0;
          *(unsigned char *)(a1 + 24) |= 1u;
          while (1)
          {
            uint64_t v21 = *v4;
            uint64_t v22 = *(void *)&v3[v21];
            unint64_t v23 = v22 + 1;
            if (v22 == -1 || v23 > *(void *)&v3[*v5])
            {
              unint64_t v26 = &OBJC_IVAR___GEOVehicleInfo__carPlayConnectionStatus;
              goto LABEL_41;
            }
            char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
            *(void *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0) {
              break;
            }
            v18 += 7;
            BOOL v25 = v19++ > 8;
            if (v25)
            {
              LODWORD(v20) = 0;
              unint64_t v26 = &OBJC_IVAR___GEOVehicleInfo__carPlayConnectionStatus;
              goto LABEL_44;
            }
          }
          unint64_t v26 = &OBJC_IVAR___GEOVehicleInfo__carPlayConnectionStatus;
LABEL_42:
          if (v3[*v6]) {
            LODWORD(v20) = 0;
          }
LABEL_44:
          *(_DWORD *)(a1 + *v26) = v20;
          goto LABEL_45;
        }
        if (!*(void *)(a1 + 8))
        {
          id v33 = objc_alloc_init(MEMORY[0x1E4F940B0]);
          id v34 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = v33;
        }
        if ((PBUnknownFieldAdd() & 1) == 0) {
          goto LABEL_50;
        }
LABEL_45:
        if (*(void *)&v3[*v4] >= *(void *)&v3[*v5]) {
          goto LABEL_49;
        }
      }
      char v27 = 0;
      unsigned int v28 = 0;
      uint64_t v20 = 0;
      *(unsigned char *)(a1 + 24) |= 2u;
      while (1)
      {
        uint64_t v29 = *v4;
        uint64_t v30 = *(void *)&v3[v29];
        unint64_t v31 = v30 + 1;
        if (v30 == -1 || v31 > *(void *)&v3[*v5]) {
          break;
        }
        char v32 = *(unsigned char *)(*(void *)&v3[*v7] + v30);
        *(void *)&v3[v29] = v31;
        v20 |= (unint64_t)(v32 & 0x7F) << v27;
        if ((v32 & 0x80) == 0)
        {
          unint64_t v26 = &OBJC_IVAR___GEOVehicleInfo__intentsConnectionStatus;
          goto LABEL_42;
        }
        v27 += 7;
        BOOL v25 = v28++ > 8;
        if (v25)
        {
          LODWORD(v20) = 0;
          unint64_t v26 = &OBJC_IVAR___GEOVehicleInfo__intentsConnectionStatus;
          goto LABEL_44;
        }
      }
      unint64_t v26 = &OBJC_IVAR___GEOVehicleInfo__intentsConnectionStatus;
LABEL_41:
      v3[*v6] = 1;
      goto LABEL_42;
    }
LABEL_49:
    BOOL v35 = v3[*v6] == 0;
  }
  else
  {
LABEL_50:
    BOOL v35 = 0;
  }
  objc_sync_exit(v3);

  return v35;
}

void sub_18989C9F4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOVehicleInfoReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOVehicleInfoReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18989CA58(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOVehicleInfoIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  id v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_39;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      if (v14 || (v8 & 7) == 4) {
        goto LABEL_39;
      }
      if ((v8 >> 3) == 2) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_41;
        }
        unsigned int v16 = 0;
        while (1)
        {
          uint64_t v17 = *v2;
          uint64_t v18 = *(void *)&a1[v17];
          unint64_t v19 = v18 + 1;
          if (v18 == -1 || v19 > *(void *)&a1[*v3]) {
            break;
          }
          int v20 = *(char *)(*(void *)&a1[*v5] + v18);
          *(void *)&a1[v17] = v19;
          if (v20 < 0)
          {
            BOOL v21 = v16++ > 8;
            if (!v21) {
              continue;
            }
          }
          goto LABEL_38;
        }
LABEL_36:
        a1[*v4] = 1;
        goto LABEL_38;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_41:
        BOOL v27 = 0;
        goto LABEL_40;
      }
LABEL_38:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_39;
      }
    }
    if ((v8 & 7) != 0) {
      goto LABEL_41;
    }
    unsigned int v22 = 0;
    while (1)
    {
      uint64_t v23 = *v2;
      uint64_t v24 = *(void *)&a1[v23];
      unint64_t v25 = v24 + 1;
      if (v24 == -1 || v25 > *(void *)&a1[*v3]) {
        goto LABEL_36;
      }
      int v26 = *(char *)(*(void *)&a1[*v5] + v24);
      *(void *)&a1[v23] = v25;
      if (v26 < 0)
      {
        BOOL v21 = v22++ > 8;
        if (!v21) {
          continue;
        }
      }
      goto LABEL_38;
    }
  }
LABEL_39:
  BOOL v27 = a1[*v4] == 0;
LABEL_40:
  PBReaderRecallMark();
  return v27;
}

void sub_18989D280(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOVehicleSpecificationsReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 52);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 48)];
  unsigned int v7 = v6;
  uint64_t v8 = 0;
  char v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  uint64_t v12 = 0;
  unsigned int v13 = vaddv_s16((int16x4_t)(*(void *)&vshl_u16((uint16x4_t)(*(void *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 64)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFFFFFCFFFDFFFELL) & 0xFF01FF01FF01FF01));
  while (2)
  {
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    uint64_t v16 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v13;
        goto LABEL_8;
      case -3:
        char v9 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v15 = v11;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v17 = v13 > 1;
        char v18 = v17 & ~(_BYTE)v12 | v10;
        unsigned __int8 v19 = v17 | v12;
        char v61 = v18;
        char v62 = v19 | v18;
        if ((v19 | v9)) {
          int v20 = 0;
        }
        else {
          int v20 = a3;
        }
        char v63 = (v20 == 0) | v19;
        BOOL v64 = v19;
        BOOL v21 = (int *)MEMORY[0x1E4F940E8];
        unsigned int v22 = (int *)MEMORY[0x1E4F940C8];
        uint64_t v23 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v13;
LABEL_7:
        uint64_t v14 = v10;
LABEL_8:
        uint64_t v15 = v11;
        uint64_t v16 = v12;
LABEL_10:
        ++v8;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        uint64_t v12 = v16;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v21) >= *(void *)(v3 + *v7) || *(unsigned char *)(v3 + *v22)) {
      goto LABEL_84;
    }
    char v24 = 0;
    unsigned int v25 = 0;
    unint64_t v26 = 0;
    while (1)
    {
      uint64_t v27 = *v21;
      uint64_t v28 = *(void *)(v3 + v27);
      unint64_t v29 = v28 + 1;
      if (v28 == -1 || v29 > *(void *)(v3 + *v7)) {
        break;
      }
      char v30 = *(unsigned char *)(*(void *)(v3 + *v23) + v28);
      *(void *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0) {
        goto LABEL_25;
      }
      v24 += 7;
      BOOL v31 = v25++ >= 9;
      if (v31)
      {
        unint64_t v26 = 0;
        int v32 = *(unsigned __int8 *)(v3 + *v22);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v22) = 1;
LABEL_25:
    int v32 = *(unsigned __int8 *)(v3 + *v22);
    if (*(unsigned char *)(v3 + *v22)) {
      unint64_t v26 = 0;
    }
LABEL_27:
    if (v32 || (v26 & 7) == 4)
    {
LABEL_84:
      int v59 = 1;
      goto LABEL_85;
    }
    unint64_t v34 = v26 >> 3;
    BOOL v35 = v64;
    if ((v63 & 1) == 0)
    {
      BOOL v36 = v20;
      do
      {
        int v38 = *v36++;
        int v37 = v38;
        BOOL v35 = v38 != 0;
        if (v38) {
          BOOL v39 = v37 == v34;
        }
        else {
          BOOL v39 = 1;
        }
      }
      while (!v39);
    }
    switch((int)v34)
    {
      case 1:
        if (!v35) {
          goto LABEL_69;
        }
        if ((*(unsigned char *)(a1 + 64) & 8) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_101;
          }
          id v40 = objc_alloc_init(GEOLPRInfo);
          if (GEOLPRInfoReadAllFrom((uint64_t)v40, (void *)v3, v11 & 1))
          {
            PBReaderRecallMark();
            uint64_t v41 = 32;
            goto LABEL_54;
          }
          goto LABEL_100;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_101;
        }
        char v54 = 16 * *(unsigned char *)(a1 + 64);
        goto LABEL_81;
      case 2:
        if (!v35) {
          goto LABEL_69;
        }
        if ((*(unsigned char *)(a1 + 64) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_101;
          }
          char v54 = 32 * *(unsigned char *)(a1 + 64);
          goto LABEL_81;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_101;
        }
        id v40 = objc_alloc_init(GEOEVInfo);
        if (!GEOEVInfoReadAllFrom((uint64_t)v40, (void *)v3, v11 & 1)) {
          goto LABEL_100;
        }
        PBReaderRecallMark();
        uint64_t v41 = 24;
        goto LABEL_54;
      case 3:
        if (!v35) {
          goto LABEL_69;
        }
        if ((*(unsigned char *)(a1 + 64) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_101;
          }
          char v54 = 8 * *(unsigned char *)(a1 + 64);
LABEL_81:
          v8 += v54 >> 7;
LABEL_82:
          unsigned int v22 = (int *)MEMORY[0x1E4F940C8];
          unsigned int v7 = (int *)MEMORY[0x1E4F940E0];
LABEL_83:
          if (!(v62 & 1 | (v8 != 0))) {
            goto LABEL_84;
          }
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_101;
        }
        id v40 = objc_alloc_init(GEOVehicleInfo);
        if (GEOVehicleInfoReadAllFrom((uint64_t)v40, (void *)v3))
        {
          PBReaderRecallMark();
          uint64_t v41 = 40;
LABEL_54:
          int v42 = *(void **)(a1 + v41);
          *(void *)(a1 + v41) = v40;

          --v8;
          goto LABEL_82;
        }
LABEL_100:

LABEL_101:
        int v59 = 0;
        unsigned int v22 = (int *)MEMORY[0x1E4F940C8];
LABEL_85:
        char v60 = &OBJC_IVAR___GEOComposedRoute__visualInfosForRouteNameLabels;
        if (v61) {
LABEL_86:
        }
          *(unsigned char *)(a1 + v60[793]) |= 2u;
        if (v64 || (v59 & 1) == 0)
        {
          *(unsigned char *)(a1 + v60[793]) |= 8u;
          *(unsigned char *)(a1 + v60[793]) |= 4u;
          *(unsigned char *)(a1 + v60[793]) |= 0x10u;
        }
        else if (v20)
        {
          while (1)
          {
            int v55 = *v20++;
            char v56 = 8;
            switch(v55)
            {
              case 0:
                goto LABEL_94;
              case 1:
                goto LABEL_93;
              case 2:
                char v56 = 4;
                goto LABEL_93;
              case 3:
                char v56 = 16;
LABEL_93:
                *(unsigned char *)(a1 + v60[793]) |= v56;
                break;
              default:
                continue;
            }
          }
        }
LABEL_94:
        if (v59) {
          unint64_t v3 = *(unsigned char *)(v3 + *v22) == 0;
        }
        else {
          unint64_t v3 = 0;
        }
        if (v64)
        {
          int v57 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      case 5:
        if ((v9 & 1) == 0) {
          goto LABEL_69;
        }
        char v46 = 0;
        unsigned int v47 = 0;
        uint64_t v48 = 0;
        *(unsigned char *)(a1 + 64) |= 1u;
        while (2)
        {
          uint64_t v49 = *v21;
          uint64_t v50 = *(void *)(v3 + v49);
          unint64_t v51 = v50 + 1;
          if (v50 == -1 || v51 > *(void *)(v3 + *v7))
          {
            *(unsigned char *)(v3 + *v22) = 1;
          }
          else
          {
            char v52 = *(unsigned char *)(*(void *)(v3 + *v23) + v50);
            *(void *)(v3 + v49) = v51;
            v48 |= (unint64_t)(v52 & 0x7F) << v46;
            if (v52 < 0)
            {
              v46 += 7;
              BOOL v31 = v47++ >= 9;
              if (v31)
              {
                LODWORD(v48) = 0;
                goto LABEL_74;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v22)) {
          LODWORD(v48) = 0;
        }
LABEL_74:
        *(_DWORD *)(a1 + 60) = v48;
        goto LABEL_83;
      default:
        if ((v61 & 1) == 0 || (*(unsigned char *)(a1 + 64) & 2) != 0)
        {
LABEL_69:
          char v53 = PBReaderSkipValueWithTag();
          unsigned int v7 = (int *)MEMORY[0x1E4F940E0];
          unsigned int v22 = (int *)MEMORY[0x1E4F940C8];
          if ((v53 & 1) == 0)
          {
            int v59 = 0;
            goto LABEL_85;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v43 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            char v44 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v43;
          }
          int v45 = PBUnknownFieldAdd();
          unsigned int v22 = (int *)MEMORY[0x1E4F940C8];
          unsigned int v7 = (int *)MEMORY[0x1E4F940E0];
          if (!v45)
          {
            int v59 = 0;
            char v60 = &OBJC_IVAR___GEOComposedRoute__visualInfosForRouteNameLabels;
            goto LABEL_86;
          }
        }
        goto LABEL_83;
    }
  }
}

void sub_18989DB3C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18989DCA8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18989E710(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOVehicleSpecificationsReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 52))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOVehicleSpecificationsReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = [v8 position];
  *(_DWORD *)(a1 + 52) = [v8 length];
  if (a3) {
    char v9 = (int *)&GEOVehicleSpecificationsReadAllFrom_recursiveTag;
  }
  else {
    char v9 = (int *)&GEOVehicleSpecificationsReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOVehicleSpecificationsReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    [*(id *)(a1 + 32) readAll:1];
    [*(id *)(a1 + 24) readAll:1];
    [*(id *)(a1 + 40) readAll:1];
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_18989E8D8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOVehicleSpecificationsReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOVehicleSpecificationsReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18989E93C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18989EB20(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOVehicleSpecificationsIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  unsigned int v2 = *(unsigned __int8 *)(a1 + 64);
  if ((v2 & 0x20) != 0) {
    return 1;
  }
  if ((v2 & 8) != 0)
  {
    if (GEOLPRInfoIsDirty(*(void *)(a1 + 32))) {
      return 1;
    }
    unsigned int v2 = *(unsigned __int8 *)(a1 + 64);
  }
  if ((v2 & 4) != 0)
  {
    if (GEOEVInfoIsDirty(*(os_unfair_lock_s **)(a1 + 24))) {
      return 1;
    }
    unsigned int v2 = *(unsigned __int8 *)(a1 + 64);
  }
  return (v2 >> 4) & 1;
}

os_unfair_lock_s *GEOVehicleSpecificationsIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    uint64_t v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOVehicleSpecificationsIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 14);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_18989EEF8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18989F270(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18989F558(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOVisualLaneGuidanceReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 52);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 48)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  unsigned int v12 = ((*(unsigned __int8 *)(a1 + 60) >> 1) & 1)
      + (*(unsigned char *)(a1 + 60) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 2) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 3) & 1);
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 > 1;
        int v17 = v16 & ~v11 | v9;
        int v18 = v16 | v11;
        if (((v16 | v11) | v8)) {
          unsigned __int8 v19 = 0;
        }
        else {
          unsigned __int8 v19 = a3;
        }
        int v20 = (int *)MEMORY[0x1E4F940E8];
        BOOL v21 = v7 != 0;
        int v22 = 1;
        if (*(void *)(v3 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(v3 + *v6)) {
          goto LABEL_68;
        }
        char v48 = v17;
        int v49 = v21 | v18 | v17;
        uint64_t v23 = (int *)MEMORY[0x1E4F940C8];
        char v24 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v9;
LABEL_8:
        uint64_t v14 = v10;
        uint64_t v15 = v11;
LABEL_10:
        ++v7;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(unsigned char *)(v3 + *v23)) {
      goto LABEL_66;
    }
    char v25 = 0;
    unsigned int v26 = 0;
    unint64_t v27 = 0;
    while (1)
    {
      uint64_t v28 = *v20;
      uint64_t v29 = *(void *)(v3 + v28);
      unint64_t v30 = v29 + 1;
      if (v29 == -1 || v30 > *(void *)(v3 + *v6)) {
        break;
      }
      char v31 = *(unsigned char *)(*(void *)(v3 + *v24) + v29);
      *(void *)(v3 + v28) = v30;
      v27 |= (unint64_t)(v31 & 0x7F) << v25;
      if ((v31 & 0x80) == 0) {
        goto LABEL_25;
      }
      v25 += 7;
      if (v26++ >= 9)
      {
        unint64_t v27 = 0;
        int v33 = *(unsigned __int8 *)(v3 + *v23);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v23) = 1;
LABEL_25:
    int v33 = *(unsigned __int8 *)(v3 + *v23);
    if (*(unsigned char *)(v3 + *v23)) {
      unint64_t v27 = 0;
    }
LABEL_27:
    if (v33 || (v27 & 7) == 4)
    {
LABEL_66:
      int v22 = 1;
      goto LABEL_67;
    }
    unint64_t v35 = v27 >> 3;
    BOOL v36 = v18;
    if (!((v19 == 0) | v18 & 1))
    {
      int v37 = v19;
      do
      {
        int v39 = *v37++;
        int v38 = v39;
        BOOL v36 = v39 != 0;
        if (v39) {
          BOOL v40 = v38 == v35;
        }
        else {
          BOOL v40 = 1;
        }
      }
      while (!v40);
    }
    if (v35 == 3)
    {
      if (!v36 || (*(unsigned char *)(a1 + 60) & 8) != 0)
      {
LABEL_64:
        int v22 = PBReaderSkipValueWithTag();
        if ((v22 & v49 & 1) == 0) {
          goto LABEL_67;
        }
        goto LABEL_65;
      }
      if ((PBReaderPlaceMark() & 1) == 0) {
        goto LABEL_84;
      }
      uint64_t v41 = objc_alloc_init(GEOFormattedString);
      if (!GEOFormattedStringReadAllFrom((uint64_t)v41, (void *)v3, v10 & 1)) {
        goto LABEL_83;
      }
      PBReaderRecallMark();
      -[GEOVisualLaneGuidance _addNoFlagsTitle:](a1, v41);
      goto LABEL_56;
    }
    if (v35 == 2) {
      break;
    }
    if (v35 == 1)
    {
      if (!v36 || (*(unsigned char *)(a1 + 60) & 4) != 0) {
        goto LABEL_64;
      }
      if ((PBReaderPlaceMark() & 1) == 0) {
        goto LABEL_84;
      }
      uint64_t v41 = objc_alloc_init(GEOLaneInfo);
      if (!GEOLaneInfoReadAllFrom((uint64_t)v41, (void *)v3)) {
        goto LABEL_83;
      }
      PBReaderRecallMark();
      -[GEOVisualLaneGuidance _addNoFlagsLaneInfo:](a1, v41);
      goto LABEL_56;
    }
    if (v48 & 1) == 0 || (*(unsigned char *)(a1 + 60)) {
      goto LABEL_64;
    }
    if (!*(void *)(a1 + 16))
    {
      id v42 = objc_alloc_init(MEMORY[0x1E4F940B0]);
      id v43 = *(void **)(a1 + 16);
      *(void *)(a1 + 16) = v42;
    }
    int v22 = PBUnknownFieldAdd();
    if (!v22) {
      goto LABEL_69;
    }
LABEL_62:
    if ((v49 & 1) == 0) {
      goto LABEL_66;
    }
LABEL_65:
    uint64_t v23 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6)) {
      goto LABEL_66;
    }
  }
  if (!v36 || (*(unsigned char *)(a1 + 60) & 2) != 0) {
    goto LABEL_64;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_84;
  }
  uint64_t v41 = objc_alloc_init(GEOFormattedString);
  if (GEOFormattedStringReadAllFrom((uint64_t)v41, (void *)v3, v10 & 1))
  {
    PBReaderRecallMark();
    -[GEOVisualLaneGuidance _addNoFlagsInstruction:](a1, v41);
LABEL_56:

    goto LABEL_62;
  }
LABEL_83:

LABEL_84:
  int v22 = 0;
LABEL_67:
  LOBYTE(v17) = v48;
LABEL_68:
  if (v17) {
LABEL_69:
  }
    *(unsigned char *)(a1 + 60) |= 1u;
  if (v18 & 1 | ((v22 & 1) == 0))
  {
    *(unsigned char *)(a1 + 60) |= 4u;
    *(unsigned char *)(a1 + 60) |= 2u;
    *(unsigned char *)(a1 + 60) |= 8u;
  }
  else if (v19)
  {
    while (1)
    {
      int v44 = *v19++;
      char v45 = 4;
      switch(v44)
      {
        case 0:
          goto LABEL_77;
        case 1:
          goto LABEL_76;
        case 2:
          char v45 = 2;
          goto LABEL_76;
        case 3:
          char v45 = 8;
LABEL_76:
          *(unsigned char *)(a1 + 60) |= v45;
          break;
        default:
          continue;
      }
    }
  }
LABEL_77:
  if (v22)
  {
    unint64_t v3 = *(unsigned char *)(v3 + (int)*MEMORY[0x1E4F940C8]) == 0;
    if ((v18 & 1) == 0) {
      return v3;
    }
LABEL_81:
    char v46 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  else
  {
    unint64_t v3 = 0;
    if (v18) {
      goto LABEL_81;
    }
  }
  return v3;
}

void sub_18989FEEC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898A02B0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898A10C0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOVisualLaneGuidanceCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  uint64_t v32 = *MEMORY[0x1E4F143B8];
  long long v25 = 0u;
  long long v26 = 0u;
  long long v27 = 0u;
  long long v28 = 0u;
  id v2 = a1[4];
  uint64_t v3 = [v2 countByEnumeratingWithState:&v25 objects:v31 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v26;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v26 != v5) {
          objc_enumerationMutation(v2);
        }
        [*(id *)(*((void *)&v25 + 1) + 8 * v6++) readAll:1];
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v25 objects:v31 count:16];
    }
    while (v4);
  }

  long long v23 = 0u;
  long long v24 = 0u;
  long long v21 = 0u;
  long long v22 = 0u;
  id v7 = a1[3];
  uint64_t v8 = [v7 countByEnumeratingWithState:&v21 objects:v30 count:16];
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)v22;
    do
    {
      uint64_t v11 = 0;
      do
      {
        if (*(void *)v22 != v10) {
          objc_enumerationMutation(v7);
        }
        [*(id *)(*((void *)&v21 + 1) + 8 * v11++) readAll:1];
      }
      while (v9 != v11);
      uint64_t v9 = [v7 countByEnumeratingWithState:&v21 objects:v30 count:16];
    }
    while (v9);
  }

  long long v19 = 0u;
  long long v20 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  id v12 = a1[5];
  uint64_t v13 = [v12 countByEnumeratingWithState:&v17 objects:v29 count:16];
  if (v13)
  {
    uint64_t v14 = v13;
    uint64_t v15 = *(void *)v18;
    do
    {
      uint64_t v16 = 0;
      do
      {
        if (*(void *)v18 != v15) {
          objc_enumerationMutation(v12);
        }
        objc_msgSend(*(id *)(*((void *)&v17 + 1) + 8 * v16++), "readAll:", 1, (void)v17);
      }
      while (v14 != v16);
      uint64_t v14 = [v12 countByEnumeratingWithState:&v17 objects:v29 count:16];
    }
    while (v14);
  }
}

unint64_t GEOVisualLaneGuidanceReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 52))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOVisualLaneGuidanceReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = [v8 position];
  *(_DWORD *)(a1 + 52) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOVisualLaneGuidanceReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOVisualLaneGuidanceReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOVisualLaneGuidanceReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOVisualLaneGuidanceCallReadAllRecursiveWithoutSynchronized((id *)a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_1898A1488(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOVisualLaneGuidanceReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOVisualLaneGuidanceReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1898A14EC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898A1840(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOVisualLaneGuidanceIsDirty(uint64_t a1)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  if ((*(unsigned char *)(a1 + 60) & 0x1E) != 0) {
    return 1;
  }
  if ((*(unsigned char *)(a1 + 60) & 8) == 0) {
    return 0;
  }
  long long v9 = 0u;
  long long v10 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  id v3 = *(id *)(a1 + 40);
  uint64_t v2 = [v3 countByEnumeratingWithState:&v7 objects:v11 count:16];
  if (v2)
  {
    uint64_t v4 = *(void *)v8;
    while (2)
    {
      for (uint64_t i = 0; i != v2; ++i)
      {
        if (*(void *)v8 != v4) {
          objc_enumerationMutation(v3);
        }
        if (GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(*((void *)&v7 + 1) + 8 * i)))
        {
          uint64_t v2 = 1;
          goto LABEL_15;
        }
      }
      uint64_t v2 = [v3 countByEnumeratingWithState:&v7 objects:v11 count:16];
      if (v2) {
        continue;
      }
      break;
    }
  }
LABEL_15:

  return v2;
}

os_unfair_lock_s *GEOVisualLaneGuidanceIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    uint64_t v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOVisualLaneGuidanceIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 14);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_1898A1F18(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898A2368(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898A2800(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOWalkingOptionsReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 68);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 64)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = &OBJC_IVAR___GEOComposedRoute__visualInfosForRouteNameLabels;
  int v12 = ((*(unsigned __int8 *)(a1 + 76) >> 2) & 1)
      + ((*(unsigned __int8 *)(a1 + 76) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 76) >> 1) & 1);
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    switch(a3[v9])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_9;
      case 0:
        BOOL v15 = v12 != 0;
        char v16 = v15 & ~(_BYTE)v10 | v7;
        char v17 = v15 | v10;
        if (((v15 | v10) | v8)) {
          long long v18 = 0;
        }
        else {
          long long v18 = a3;
        }
        long long v19 = (int *)MEMORY[0x1E4F940E8];
        int v73 = 1;
        long long v20 = (int *)MEMORY[0x1E4F940C8];
        char v21 = v15 & ~(_BYTE)v10 | v7;
        if (*(void *)(v3 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(v3 + *v6)) {
          goto LABEL_96;
        }
        char v71 = v16;
        char v74 = v17 | v16;
        char v75 = (v18 == 0) | v17;
        long long v22 = (int *)MEMORY[0x1E4F940B8];
        char v72 = v17;
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v7;
LABEL_8:
        uint64_t v14 = v10;
LABEL_9:
        ++v9;
        uint64_t v7 = v13;
        uint64_t v10 = v14;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(unsigned char *)(v3 + *v20)) {
      goto LABEL_93;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v19;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_24;
      }
      v23 += 7;
      BOOL v30 = v24++ >= 9;
      if (v30)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v20);
        goto LABEL_26;
      }
    }
    *(unsigned char *)(v3 + *v20) = 1;
LABEL_24:
    int v31 = *(unsigned __int8 *)(v3 + *v20);
    if (*(unsigned char *)(v3 + *v20)) {
      unint64_t v25 = 0;
    }
LABEL_26:
    int v32 = v25 & 7;
    if (v31 || v32 == 4)
    {
LABEL_93:
      int v73 = 1;
      goto LABEL_94;
    }
    unint64_t v34 = v22;
    unint64_t v35 = v20;
    unint64_t v36 = v25 >> 3;
    BOOL v37 = v17;
    if ((v75 & 1) == 0)
    {
      int v38 = v18;
      do
      {
        int v40 = *v38++;
        int v39 = v40;
        BOOL v37 = v40 != 0;
        if (v40) {
          BOOL v41 = v39 == v36;
        }
        else {
          BOOL v41 = 1;
        }
      }
      while (!v41);
    }
    if (v36 == 3) {
      break;
    }
    if (v36 == 2)
    {
      long long v20 = v35;
      if (v37 && (*(unsigned char *)(a1 + 76) & 4) == 0)
      {
        long long v22 = v34;
        if (v32 == 2)
        {
          int v47 = PBReaderPlaceMark();
          uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
          if (!v47) {
            goto LABEL_115;
          }
          while (*(void *)(v3 + *v19) < *(void *)(v3 + *v6) && !*(unsigned char *)(v3 + *v20))
          {
            char v48 = 0;
            unsigned int v49 = 0;
            uint64_t v50 = 0;
            while (1)
            {
              uint64_t v51 = *v19;
              uint64_t v52 = *(void *)(v3 + v51);
              unint64_t v53 = v52 + 1;
              if (v52 == -1 || v53 > *(void *)(v3 + *v6)) {
                break;
              }
              char v54 = *(unsigned char *)(*(void *)(v3 + *v22) + v52);
              *(void *)(v3 + v51) = v53;
              v50 |= (unint64_t)(v54 & 0x7F) << v48;
              if (v54 < 0)
              {
                v48 += 7;
                BOOL v30 = v49++ >= 9;
                if (!v30) {
                  continue;
                }
              }
              goto LABEL_63;
            }
            *(unsigned char *)(v3 + *v20) = 1;
LABEL_63:
            PBRepeatedInt32Add();
          }
          PBReaderRecallMark();
        }
        else
        {
          char v59 = 0;
          unsigned int v60 = 0;
          uint64_t v61 = 0;
          uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
          while (1)
          {
            uint64_t v62 = *v19;
            uint64_t v63 = *(void *)(v3 + v62);
            unint64_t v64 = v63 + 1;
            if (v63 == -1 || v64 > *(void *)(v3 + *v6)) {
              break;
            }
            char v65 = *(unsigned char *)(*(void *)(v3 + *v22) + v63);
            *(void *)(v3 + v62) = v64;
            v61 |= (unint64_t)(v65 & 0x7F) << v59;
            if (v65 < 0)
            {
              v59 += 7;
              BOOL v30 = v60++ >= 9;
              if (!v30) {
                continue;
              }
            }
            goto LABEL_89;
          }
          *(unsigned char *)(v3 + *v20) = 1;
LABEL_89:
          PBRepeatedInt32Add();
        }
        char v17 = v72;
        goto LABEL_91;
      }
      char v58 = PBReaderSkipValueWithTag();
      char v17 = v72;
LABEL_72:
      long long v22 = v34;
      uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
      if (v58) {
        goto LABEL_91;
      }
      int v73 = 0;
LABEL_94:
      uint64_t v11 = &OBJC_IVAR___GEOComposedRoute__visualInfosForRouteNameLabels;
      goto LABEL_95;
    }
    if (v36 == 1)
    {
      if ((v8 & 1) == 0) {
        goto LABEL_71;
      }
      *(unsigned char *)(a1 + 76) |= 1u;
      uint64_t v42 = *v19;
      unint64_t v43 = *(void *)(v3 + v42);
      long long v20 = v35;
      if (v43 <= 0xFFFFFFFFFFFFFFF7 && v43 + 8 <= *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]))
      {
        long long v22 = v34;
        uint64_t v44 = *(void *)(*(void *)(v3 + *v34) + v43);
        *(void *)(v3 + v42) = v43 + 8;
      }
      else
      {
        *(unsigned char *)(v3 + *v35) = 1;
        uint64_t v44 = 0;
        long long v22 = v34;
      }
      *(void *)(a1 + 48) = v44;
      goto LABEL_79;
    }
    if ((v71 & 1) == 0 || (*(unsigned char *)(a1 + 76) & 2) != 0)
    {
LABEL_71:
      char v58 = PBReaderSkipValueWithTag();
      char v17 = v72;
      long long v20 = v35;
      goto LABEL_72;
    }
    if (!*(void *)(a1 + 16))
    {
      id v55 = objc_alloc_init(MEMORY[0x1E4F940B0]);
      char v56 = *(void **)(a1 + 16);
      *(void *)(a1 + 16) = v55;
    }
    int v57 = PBUnknownFieldAdd();
    char v17 = v72;
    long long v20 = v35;
    long long v22 = v34;
    uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
    if (!v57)
    {
      int v73 = 0;
      uint64_t v11 = &OBJC_IVAR___GEOComposedRoute__visualInfosForRouteNameLabels;
      goto LABEL_97;
    }
LABEL_91:
    if (!(v74 & 1 | (v9 != 0)) || *(void *)(v3 + *v19) >= *(void *)(v3 + *v6)) {
      goto LABEL_93;
    }
  }
  if (!v37) {
    goto LABEL_71;
  }
  long long v20 = v35;
  if ((*(unsigned char *)(a1 + 76) & 8) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0) {
      goto LABEL_115;
    }
    long long v22 = v34;
    v9 += *(unsigned __int8 *)(a1 + 76) << 28 >> 31;
LABEL_76:
    char v17 = v72;
LABEL_79:
    uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
    goto LABEL_91;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_115;
  }
  long long v22 = v34;
  char v45 = objc_alloc_init(GEOWalkingUserPreferences);
  if (GEOWalkingUserPreferencesReadAllFrom((uint64_t)v45, (void *)v3))
  {
    PBReaderRecallMark();
    char v46 = *(void **)(a1 + 56);
    *(void *)(a1 + 56) = v45;

    --v9;
    goto LABEL_76;
  }

LABEL_115:
  int v73 = 0;
  uint64_t v11 = &OBJC_IVAR___GEOComposedRoute__visualInfosForRouteNameLabels;
  char v17 = v72;
LABEL_95:
  char v21 = v71;
LABEL_96:
  if (v21) {
LABEL_97:
  }
    *(unsigned char *)(a1 + v11[684]) |= 2u;
  if (v17 & 1 | ((v73 & 1) == 0))
  {
    *(unsigned char *)(a1 + v11[684]) |= 4u;
    *(unsigned char *)(a1 + v11[684]) |= 8u;
    goto LABEL_108;
  }
  if (v18)
  {
    while (2)
    {
      while (1)
      {
        int v67 = *v18++;
        int v66 = v67;
        if (v67 == 2) {
          break;
        }
        if (v66 == 3)
        {
          char v68 = 8;
          goto LABEL_107;
        }
        if (!v66) {
          goto LABEL_108;
        }
      }
      char v68 = 4;
LABEL_107:
      *(unsigned char *)(a1 + v11[684]) |= v68;
      continue;
    }
  }
LABEL_108:
  if (v73)
  {
    unint64_t v3 = *(unsigned char *)(v3 + *v20) == 0;
    if ((v17 & 1) == 0) {
      return v3;
    }
LABEL_112:
    uint64_t v69 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  else
  {
    unint64_t v3 = 0;
    if (v17) {
      goto LABEL_112;
    }
  }
  return v3;
}

void sub_1898A33B0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOWalkingOptionsReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 68))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOWalkingOptionsReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 72));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 64) = [v8 position];
  *(_DWORD *)(a1 + 68) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOWalkingOptionsReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOWalkingOptionsReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOWalkingOptionsReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    [*(id *)(a1 + 56) readAll:1];
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
  return Specified;
}

void sub_1898A3CFC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOWalkingOptionsReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOWalkingOptionsReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1898A3D60(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOWalkingUserPreferencesIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  uint64_t v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_48;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      if (v14 || (v8 & 7) == 4) {
        goto LABEL_48;
      }
      unint64_t v16 = v8 >> 3;
      if ((v8 >> 3) == 3) {
        break;
      }
      if (v16 == 2)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_50;
        }
        unsigned int v28 = 0;
        while (1)
        {
          uint64_t v29 = *v2;
          uint64_t v30 = *(void *)&a1[v29];
          unint64_t v31 = v30 + 1;
          if (v30 == -1 || v31 > *(void *)&a1[*v3]) {
            goto LABEL_45;
          }
          int v32 = *(char *)(*(void *)&a1[*v5] + v30);
          *(void *)&a1[v29] = v31;
          if (v32 < 0)
          {
            BOOL v22 = v28++ > 8;
            if (!v22) {
              continue;
            }
          }
          goto LABEL_47;
        }
      }
      if (v16 == 1)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_50;
        }
        unsigned int v17 = 0;
        while (1)
        {
          uint64_t v18 = *v2;
          uint64_t v19 = *(void *)&a1[v18];
          unint64_t v20 = v19 + 1;
          if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
            break;
          }
          int v21 = *(char *)(*(void *)&a1[*v5] + v19);
          *(void *)&a1[v18] = v20;
          if (v21 < 0)
          {
            BOOL v22 = v17++ > 8;
            if (!v22) {
              continue;
            }
          }
          goto LABEL_47;
        }
LABEL_45:
        a1[*v4] = 1;
        goto LABEL_47;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_50:
        BOOL v33 = 0;
        goto LABEL_49;
      }
LABEL_47:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_48;
      }
    }
    if ((v8 & 7) != 0) {
      goto LABEL_50;
    }
    unsigned int v23 = 0;
    while (1)
    {
      uint64_t v24 = *v2;
      uint64_t v25 = *(void *)&a1[v24];
      unint64_t v26 = v25 + 1;
      if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
        goto LABEL_45;
      }
      int v27 = *(char *)(*(void *)&a1[*v5] + v25);
      *(void *)&a1[v24] = v26;
      if (v27 < 0)
      {
        BOOL v22 = v23++ > 8;
        if (!v22) {
          continue;
        }
      }
      goto LABEL_47;
    }
  }
LABEL_48:
  BOOL v33 = a1[*v4] == 0;
LABEL_49:
  PBReaderRecallMark();
  return v33;
}

BOOL GEOWalkingOptionsIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  BOOL v2 = (*(unsigned char *)(a1 + 76) & 0x1C) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
  return v2;
}

void sub_1898A4360(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898A46D4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOWalkingUserPreferencesReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      while (1)
      {
        if (v3[*v6]) {
          goto LABEL_59;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          goto LABEL_59;
        }
        unint64_t v18 = v10 >> 3;
        if ((v10 >> 3) == 3)
        {
          char v28 = 0;
          unsigned int v29 = 0;
          uint64_t v21 = 0;
          *(unsigned char *)(a1 + 20) |= 1u;
          while (1)
          {
            uint64_t v30 = *v4;
            uint64_t v31 = *(void *)&v3[v30];
            unint64_t v32 = v31 + 1;
            if (v31 == -1 || v32 > *(void *)&v3[*v5]) {
              break;
            }
            char v33 = *(unsigned char *)(*(void *)&v3[*v7] + v31);
            *(void *)&v3[v30] = v32;
            v21 |= (unint64_t)(v33 & 0x7F) << v28;
            if ((v33 & 0x80) == 0)
            {
              int v27 = &OBJC_IVAR___GEOWalkingUserPreferences__avoidBusyRoads;
              goto LABEL_51;
            }
            v28 += 7;
            BOOL v26 = v29++ > 8;
            if (v26)
            {
              uint64_t v21 = 0;
              int v27 = &OBJC_IVAR___GEOWalkingUserPreferences__avoidBusyRoads;
              goto LABEL_53;
            }
          }
          int v27 = &OBJC_IVAR___GEOWalkingUserPreferences__avoidBusyRoads;
LABEL_50:
          v3[*v6] = 1;
          goto LABEL_51;
        }
        if (v18 == 2) {
          break;
        }
        if (v18 == 1)
        {
          char v19 = 0;
          unsigned int v20 = 0;
          uint64_t v21 = 0;
          *(unsigned char *)(a1 + 20) |= 4u;
          while (1)
          {
            uint64_t v22 = *v4;
            uint64_t v23 = *(void *)&v3[v22];
            unint64_t v24 = v23 + 1;
            if (v23 == -1 || v24 > *(void *)&v3[*v5])
            {
              int v27 = &OBJC_IVAR___GEOWalkingUserPreferences__avoidStairs;
              goto LABEL_50;
            }
            char v25 = *(unsigned char *)(*(void *)&v3[*v7] + v23);
            *(void *)&v3[v22] = v24;
            v21 |= (unint64_t)(v25 & 0x7F) << v19;
            if ((v25 & 0x80) == 0) {
              break;
            }
            v19 += 7;
            BOOL v26 = v20++ > 8;
            if (v26)
            {
              uint64_t v21 = 0;
              int v27 = &OBJC_IVAR___GEOWalkingUserPreferences__avoidStairs;
              goto LABEL_53;
            }
          }
          int v27 = &OBJC_IVAR___GEOWalkingUserPreferences__avoidStairs;
          goto LABEL_51;
        }
        if (!*(void *)(a1 + 8))
        {
          id v40 = objc_alloc_init(MEMORY[0x1E4F940B0]);
          BOOL v41 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = v40;
        }
        if ((PBUnknownFieldAdd() & 1) == 0) {
          goto LABEL_60;
        }
LABEL_54:
        if (*(void *)&v3[*v4] >= *(void *)&v3[*v5]) {
          goto LABEL_59;
        }
      }
      char v34 = 0;
      unsigned int v35 = 0;
      uint64_t v21 = 0;
      *(unsigned char *)(a1 + 20) |= 2u;
      while (1)
      {
        uint64_t v36 = *v4;
        uint64_t v37 = *(void *)&v3[v36];
        unint64_t v38 = v37 + 1;
        if (v37 == -1 || v38 > *(void *)&v3[*v5])
        {
          int v27 = &OBJC_IVAR___GEOWalkingUserPreferences__avoidHills;
          goto LABEL_50;
        }
        char v39 = *(unsigned char *)(*(void *)&v3[*v7] + v37);
        *(void *)&v3[v36] = v38;
        v21 |= (unint64_t)(v39 & 0x7F) << v34;
        if ((v39 & 0x80) == 0) {
          break;
        }
        v34 += 7;
        BOOL v26 = v35++ > 8;
        if (v26)
        {
          uint64_t v21 = 0;
          int v27 = &OBJC_IVAR___GEOWalkingUserPreferences__avoidHills;
          goto LABEL_53;
        }
      }
      int v27 = &OBJC_IVAR___GEOWalkingUserPreferences__avoidHills;
LABEL_51:
      if (v3[*v6]) {
        uint64_t v21 = 0;
      }
LABEL_53:
      *(unsigned char *)(a1 + *v27) = v21 != 0;
      goto LABEL_54;
    }
LABEL_59:
    BOOL v42 = v3[*v6] == 0;
  }
  else
  {
LABEL_60:
    BOOL v42 = 0;
  }
  objc_sync_exit(v3);

  return v42;
}

void sub_1898A5050(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOWalkingUserPreferencesReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOWalkingUserPreferencesReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1898A50B4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898A574C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOWaypointInfoReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 112));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 108);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 104)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  unsigned int v12 = ((*(unsigned __int16 *)(a1 + 120) >> 11) & 1)
      + ((*(unsigned __int16 *)(a1 + 120) >> 10) & 1)
      + ((*(unsigned __int16 *)(a1 + 120) >> 2) & 1)
      + (unsigned __int16)(vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int16 *)(a1 + 120)), (uint16x4_t)0xFFFCFFF7FFF9FFF8), (int8x8_t)0x1000100010001))+ ((*(_WORD *)(a1 + 120) >> 5) & 1)+ ((*(_WORD *)(a1 + 120) >> 3) & 1)+ ((*(_WORD *)(a1 + 120) >> 6) & 1));
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 > 6;
        char v17 = v16 & ~(_BYTE)v11 | v9;
        unsigned __int8 v18 = v16 | v11;
        char v68 = v17;
        char v69 = v18 | v17;
        char v67 = v8;
        if ((v18 | v8)) {
          char v19 = 0;
        }
        else {
          char v19 = a3;
        }
        char v70 = (v19 == 0) | v18;
        BOOL v71 = v18;
        unsigned int v20 = (int *)MEMORY[0x1E4F940E8];
        uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
        uint64_t v22 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v9;
LABEL_8:
        uint64_t v14 = v10;
        uint64_t v15 = v11;
LABEL_10:
        ++v7;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v21)) {
      goto LABEL_137;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      BOOL v30 = v24++ >= 9;
      if (v30)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_25:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_137:
      int v66 = 1;
      goto LABEL_138;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v71;
    if ((v70 & 1) == 0)
    {
      unsigned int v35 = v19;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    switch((int)v33)
    {
      case 1:
        if ((v67 & 1) == 0) {
          goto LABEL_106;
        }
        char v39 = 0;
        unsigned int v40 = 0;
        uint64_t v41 = 0;
        *(_WORD *)(a1 + 120) |= 1u;
        while (1)
        {
          uint64_t v42 = *v20;
          uint64_t v43 = *(void *)(v3 + v42);
          unint64_t v44 = v43 + 1;
          if (v43 == -1 || v44 > *(void *)(v3 + *v6)) {
            break;
          }
          char v45 = *(unsigned char *)(*(void *)(v3 + *v22) + v43);
          *(void *)(v3 + v42) = v44;
          v41 |= (unint64_t)(v45 & 0x7F) << v39;
          if ((v45 & 0x80) == 0) {
            goto LABEL_109;
          }
          v39 += 7;
          BOOL v30 = v40++ >= 9;
          if (v30)
          {
            uint64_t v41 = 0;
            goto LABEL_111;
          }
        }
        *(unsigned char *)(v3 + *v21) = 1;
LABEL_109:
        if (*(unsigned char *)(v3 + *v21)) {
          uint64_t v41 = 0;
        }
LABEL_111:
        *(void *)(a1 + 56) = v41;
        goto LABEL_136;
      case 2:
        if (!v34) {
          goto LABEL_106;
        }
        if ((*(_WORD *)(a1 + 120) & 0x80) == 0)
        {
          uint64_t v49 = PBReaderReadString();
          uint64_t v50 = *(void **)(a1 + 64);
          *(void *)(a1 + 64) = v49;
          goto LABEL_105;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_160;
        }
        __int16 v61 = *(_WORD *)(a1 + 120) << 8;
        goto LABEL_134;
      case 3:
        if (!v34) {
          goto LABEL_106;
        }
        if ((*(_WORD *)(a1 + 120) & 0x100) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_160;
          }
          __int16 v61 = *(_WORD *)(a1 + 120) << 7;
          goto LABEL_134;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_160;
        }
        uint64_t v51 = objc_alloc_init(GEOLatLng);
        if (!GEOLatLngReadAllFrom((uint64_t)v51, (void *)v3)) {
          goto LABEL_159;
        }
        PBReaderRecallMark();
        uint64_t v52 = 72;
        goto LABEL_104;
      case 4:
        if (!v34) {
          goto LABEL_106;
        }
        if ((*(_WORD *)(a1 + 120) & 0x200) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_160;
          }
          __int16 v61 = *(_WORD *)(a1 + 120) << 6;
          goto LABEL_134;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_160;
        }
        uint64_t v51 = objc_alloc_init(GEOStyleAttributes);
        if (!GEOStyleAttributesReadAllFrom((uint64_t)v51, (void *)v3)) {
          goto LABEL_159;
        }
        PBReaderRecallMark();
        uint64_t v52 = 80;
        goto LABEL_104;
      case 5:
        if (!v34) {
          goto LABEL_106;
        }
        if ((*(_WORD *)(a1 + 120) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_160;
          }
          __int16 v61 = *(_WORD *)(a1 + 120) << 11;
          goto LABEL_134;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_160;
        }
        uint64_t v51 = objc_alloc_init(GEOPBTransitArtwork);
        if (!GEOPBTransitArtworkReadAllFrom((uint64_t)v51, (void *)v3, v10 & 1)) {
          goto LABEL_159;
        }
        PBReaderRecallMark();
        uint64_t v52 = 32;
        goto LABEL_104;
      case 6:
        if (!v34) {
          goto LABEL_106;
        }
        if ((*(_WORD *)(a1 + 120) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_160;
          }
          __int16 v61 = *(_WORD *)(a1 + 120) << 10;
          goto LABEL_134;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_160;
        }
        uint64_t v51 = objc_alloc_init(GEOEVChargingInfo);
        if (!GEOEVChargingInfoReadAllFrom((uint64_t)v51, (void *)v3, v10 & 1)) {
          goto LABEL_159;
        }
        PBReaderRecallMark();
        uint64_t v52 = 40;
        goto LABEL_104;
      case 7:
        if (!v34) {
          goto LABEL_106;
        }
        if ((*(_WORD *)(a1 + 120) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_160;
          }
          __int16 v61 = *(_WORD *)(a1 + 120) << 12;
          goto LABEL_134;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_160;
        }
        uint64_t v51 = objc_alloc_init(GEOARInfo);
        if (!GEOARInfoReadAllFrom(v51, (void *)v3)) {
          goto LABEL_159;
        }
        PBReaderRecallMark();
        uint64_t v52 = 24;
        goto LABEL_104;
      case 8:
        if ((v67 & 1) == 0) {
          goto LABEL_106;
        }
        char v53 = 0;
        unsigned int v54 = 0;
        uint64_t v55 = 0;
        *(_WORD *)(a1 + 120) |= 2u;
        while (2)
        {
          uint64_t v56 = *v20;
          uint64_t v57 = *(void *)(v3 + v56);
          unint64_t v58 = v57 + 1;
          if (v57 == -1 || v58 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v59 = *(unsigned char *)(*(void *)(v3 + *v22) + v57);
            *(void *)(v3 + v56) = v58;
            v55 |= (unint64_t)(v59 & 0x7F) << v53;
            if (v59 < 0)
            {
              v53 += 7;
              BOOL v30 = v54++ >= 9;
              if (v30)
              {
                LODWORD(v55) = 0;
                goto LABEL_115;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          LODWORD(v55) = 0;
        }
LABEL_115:
        *(_DWORD *)(a1 + 116) = v55;
        goto LABEL_136;
      case 9:
        if (!v34) {
          goto LABEL_106;
        }
        if ((*(_WORD *)(a1 + 120) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_160;
          }
          __int16 v61 = *(_WORD *)(a1 + 120) << 9;
          goto LABEL_134;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_160;
        }
        uint64_t v51 = objc_alloc_init(GEOAddress);
        if (!GEOAddressReadAllFrom((uint64_t)v51, (void *)v3, v10 & 1)) {
          goto LABEL_159;
        }
        PBReaderRecallMark();
        uint64_t v52 = 48;
        goto LABEL_104;
      case 10:
        if (!v34) {
          goto LABEL_106;
        }
        if ((*(_WORD *)(a1 + 120) & 0x400) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_160;
          }
          __int16 v61 = 32 * *(_WORD *)(a1 + 120);
          goto LABEL_134;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_160;
        }
        uint64_t v51 = objc_alloc_init(GEOWaypointUUID);
        if (!GEOWaypointUUIDReadAllFrom((uint64_t)v51, (void *)v3)) {
          goto LABEL_159;
        }
        PBReaderRecallMark();
        uint64_t v52 = 88;
        goto LABEL_104;
      case 11:
        if (!v34) {
          goto LABEL_106;
        }
        if ((*(_WORD *)(a1 + 120) & 0x800) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_160;
          }
          __int16 v61 = 16 * *(_WORD *)(a1 + 120);
LABEL_134:
          v7 += v61 >> 15;
LABEL_135:
          uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
          uint64_t v22 = (int *)MEMORY[0x1E4F940B8];
LABEL_136:
          if (!(v69 & 1 | (v7 != 0))) {
            goto LABEL_137;
          }
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_160;
        }
        uint64_t v51 = objc_alloc_init(GEOFormattedString);
        if (GEOFormattedStringReadAllFrom((uint64_t)v51, (void *)v3, v10 & 1))
        {
          PBReaderRecallMark();
          uint64_t v52 = 96;
LABEL_104:
          uint64_t v50 = *(void **)(a1 + v52);
          *(void *)(a1 + v52) = v51;
LABEL_105:

          --v7;
          goto LABEL_135;
        }
LABEL_159:

LABEL_160:
        int v66 = 0;
        uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_138:
        if (v68) {
LABEL_139:
        }
          *(_WORD *)(a1 + 120) |= 4u;
        if (v71 || (v66 & 1) == 0)
        {
          *(_WORD *)(a1 + 120) |= 0x80u;
          *(_WORD *)(a1 + 120) |= 0x100u;
          *(_WORD *)(a1 + 120) |= 0x200u;
          *(_WORD *)(a1 + 120) |= 0x10u;
          *(_WORD *)(a1 + 120) |= 0x20u;
          *(_WORD *)(a1 + 120) |= 8u;
          *(_WORD *)(a1 + 120) |= 0x40u;
          *(_WORD *)(a1 + 120) |= 0x400u;
          *(_WORD *)(a1 + 120) |= 0x800u;
        }
        else if (v19)
        {
          while (1)
          {
            int v62 = *v19++;
            __int16 v63 = 128;
            switch(v62)
            {
              case 0:
                goto LABEL_153;
              case 2:
                goto LABEL_152;
              case 3:
                __int16 v63 = 256;
                goto LABEL_152;
              case 4:
                __int16 v63 = 512;
                goto LABEL_152;
              case 5:
                __int16 v63 = 16;
                goto LABEL_152;
              case 6:
                __int16 v63 = 32;
                goto LABEL_152;
              case 7:
                __int16 v63 = 8;
                goto LABEL_152;
              case 9:
                __int16 v63 = 64;
                goto LABEL_152;
              case 10:
                __int16 v63 = 1024;
                goto LABEL_152;
              case 11:
                __int16 v63 = 2048;
LABEL_152:
                *(_WORD *)(a1 + 120) |= v63;
                break;
              default:
                continue;
            }
          }
        }
LABEL_153:
        if (v66) {
          unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
        }
        else {
          unint64_t v3 = 0;
        }
        if (v71)
        {
          unint64_t v64 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      default:
        if ((v68 & 1) == 0 || (*(_WORD *)(a1 + 120) & 4) != 0)
        {
LABEL_106:
          char v60 = PBReaderSkipValueWithTag();
          uint64_t v22 = (int *)MEMORY[0x1E4F940B8];
          uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
          if ((v60 & 1) == 0)
          {
            int v66 = 0;
            goto LABEL_138;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v46 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            int v47 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v46;
          }
          int v48 = PBUnknownFieldAdd();
          uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
          uint64_t v22 = (int *)MEMORY[0x1E4F940B8];
          if (!v48)
          {
            int v66 = 0;
            goto LABEL_139;
          }
        }
        goto LABEL_136;
    }
  }
}

void sub_1898A64B0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898A67D4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898A6940(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898A6AA8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898A6C14(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898A6D80(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898A6EEC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898A7058(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898A7DC4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOWaypointInfoCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  [*(id *)(a1 + 72) readAll:1];
  [*(id *)(a1 + 80) readAll:1];
  [*(id *)(a1 + 32) readAll:1];
  [*(id *)(a1 + 40) readAll:1];
  [*(id *)(a1 + 24) readAll:1];
  [*(id *)(a1 + 48) readAll:1];
  BOOL v2 = *(void **)(a1 + 96);

  return [v2 readAll:1];
}

unint64_t GEOWaypointInfoReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 108))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOWaypointInfoReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 112));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 104) = [v8 position];
  *(_DWORD *)(a1 + 108) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOWaypointInfoReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOWaypointInfoReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOWaypointInfoReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOWaypointInfoCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 112));
  return Specified;
}

void sub_1898A800C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOWaypointInfoReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOWaypointInfoReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1898A8070(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898A8338(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOWaypointInfoIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 112));
  __int16 v2 = *(_WORD *)(a1 + 120);
  if ((v2 & 0x1380) != 0) {
    return 1;
  }
  if ((v2 & 0x10) != 0)
  {
    if (GEOPBTransitArtworkIsDirty(*(os_unfair_lock_s **)(a1 + 32))) {
      return 1;
    }
    __int16 v2 = *(_WORD *)(a1 + 120);
  }
  if ((v2 & 0x28) != 0) {
    return 1;
  }
  if ((v2 & 0x40) != 0)
  {
    if (GEOAddressIsDirty(*(void *)(a1 + 48))) {
      return 1;
    }
    __int16 v2 = *(_WORD *)(a1 + 120);
  }
  if ((v2 & 0x400) != 0) {
    return 1;
  }
  if ((v2 & 0x800) == 0) {
    return 0;
  }
  uint64_t v4 = *(os_unfair_lock_s **)(a1 + 96);

  return (uint64_t)GEOFormattedStringIsDirty(v4);
}

os_unfair_lock_s *GEOWaypointInfoIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    uint64_t v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOWaypointInfoIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 28);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_1898A8958(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898A8FA0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898A9438(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOWaypointRouteReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 160));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 156);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 152)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  unsigned int v12 = *(_DWORD *)(a1 + 184);
  uint32x4_t v13 = (uint32x4_t)vdupq_n_s32(v12);
  v14.i64[0] = 0x100000001;
  v14.i64[1] = 0x100000001;
  unsigned int v15 = vaddvq_s32(vaddq_s32(vaddq_s32((int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v13, (uint32x4_t)xmmword_18A634020), v14), (int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v13, (uint32x4_t)xmmword_18A634030), v14)), (int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v13, (uint32x4_t)xmmword_18A634040), v14)))+ ((v12 >> 15) & 1)+ ((v12 >> 6) & 1)+ ((v12 >> 5) & 1);
  while (2)
  {
    uint64_t v16 = 1;
    uint64_t v17 = 1;
    uint64_t v18 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v15;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v17 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v19 = v15 > 0xA;
        char v20 = v19 & ~(_BYTE)v11 | v9;
        char v21 = v19 | v11;
        uint64_t v22 = (int *)MEMORY[0x1E4F940E8];
        if (((v19 | v11) | v8)) {
          char v23 = 0;
        }
        else {
          char v23 = a3;
        }
        int v107 = 1;
        char v24 = v20;
        if (*(void *)(v3 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(v3 + *v6)) {
          goto LABEL_223;
        }
        char v105 = v20;
        char v108 = v21 | v20;
        unint64_t v25 = (int *)MEMORY[0x1E4F940C8];
        char v109 = (v23 == 0) | v21;
        uint64_t v26 = (int *)MEMORY[0x1E4F940B8];
        char v106 = v21;
        break;
      default:
        ++v15;
LABEL_7:
        uint64_t v16 = v9;
LABEL_8:
        uint64_t v17 = v10;
        uint64_t v18 = v11;
LABEL_10:
        ++v7;
        uint64_t v9 = v16;
        uint64_t v10 = v17;
        uint64_t v11 = v18;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(unsigned char *)(v3 + *v25)) {
      goto LABEL_221;
    }
    char v27 = 0;
    unsigned int v28 = 0;
    unint64_t v29 = 0;
    while (1)
    {
      uint64_t v30 = *v22;
      uint64_t v31 = *(void *)(v3 + v30);
      unint64_t v32 = v31 + 1;
      if (v31 == -1 || v32 > *(void *)(v3 + *v6)) {
        break;
      }
      char v33 = *(unsigned char *)(*(void *)(v3 + *v26) + v31);
      *(void *)(v3 + v30) = v32;
      v29 |= (unint64_t)(v33 & 0x7F) << v27;
      if ((v33 & 0x80) == 0) {
        goto LABEL_25;
      }
      v27 += 7;
      BOOL v34 = v28++ >= 9;
      if (v34)
      {
        unint64_t v29 = 0;
        int v35 = *(unsigned __int8 *)(v3 + *v25);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v25) = 1;
LABEL_25:
    int v35 = *(unsigned __int8 *)(v3 + *v25);
    if (*(unsigned char *)(v3 + *v25)) {
      unint64_t v29 = 0;
    }
LABEL_27:
    int v36 = v29 & 7;
    if (v35 || v36 == 4)
    {
LABEL_221:
      int v107 = 1;
      goto LABEL_222;
    }
    unint64_t v38 = v29 >> 3;
    BOOL v39 = v21;
    if ((v109 & 1) == 0)
    {
      unsigned int v40 = v23;
      do
      {
        int v42 = *v40++;
        int v41 = v42;
        BOOL v39 = v42 != 0;
        if (v42) {
          BOOL v43 = v41 == v38;
        }
        else {
          BOOL v43 = 1;
        }
      }
      while (!v43);
    }
    switch((int)v38)
    {
      case 1:
        if ((v8 & 1) == 0) {
          goto LABEL_170;
        }
        char v44 = 0;
        unsigned int v45 = 0;
        uint64_t v46 = 0;
        *(_DWORD *)(a1 + 184) |= 4u;
        while (1)
        {
          uint64_t v47 = *v22;
          uint64_t v48 = *(void *)(v3 + v47);
          unint64_t v49 = v48 + 1;
          if (v48 == -1 || v49 > *(void *)(v3 + *v6)) {
            break;
          }
          char v50 = *(unsigned char *)(*(void *)(v3 + *v26) + v48);
          *(void *)(v3 + v47) = v49;
          v46 |= (unint64_t)(v50 & 0x7F) << v44;
          if ((v50 & 0x80) == 0) {
            goto LABEL_173;
          }
          v44 += 7;
          BOOL v34 = v45++ >= 9;
          if (v34)
          {
            LODWORD(v46) = 0;
            goto LABEL_175;
          }
        }
        *(unsigned char *)(v3 + *v25) = 1;
LABEL_173:
        if (*(unsigned char *)(v3 + *v25)) {
          LODWORD(v46) = 0;
        }
LABEL_175:
        uint64_t v92 = 172;
        goto LABEL_192;
      case 2:
        if (!v39 || (*(unsigned char *)(a1 + 185) & 0x20) != 0) {
          goto LABEL_168;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_251;
        }
        unsigned int v54 = objc_alloc_init(GEORoute);
        if (!GEORouteReadAllFrom((uint64_t)v54, (void *)v3, v10 & 1)) {
          goto LABEL_250;
        }
        PBReaderRecallMark();
        -[GEOWaypointRoute _addNoFlagsRouteLeg:](a1, v54);
        goto LABEL_145;
      case 3:
        if ((v8 & 1) == 0) {
          goto LABEL_170;
        }
        char v55 = 0;
        unsigned int v56 = 0;
        uint64_t v46 = 0;
        *(_DWORD *)(a1 + 184) |= 8u;
        while (2)
        {
          uint64_t v57 = *v22;
          uint64_t v58 = *(void *)(v3 + v57);
          unint64_t v59 = v58 + 1;
          if (v58 == -1 || v59 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v25) = 1;
          }
          else
          {
            char v60 = *(unsigned char *)(*(void *)(v3 + *v26) + v58);
            *(void *)(v3 + v57) = v59;
            v46 |= (unint64_t)(v60 & 0x7F) << v55;
            if (v60 < 0)
            {
              v55 += 7;
              BOOL v34 = v56++ >= 9;
              if (v34)
              {
                LODWORD(v46) = 0;
                goto LABEL_179;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v25)) {
          LODWORD(v46) = 0;
        }
LABEL_179:
        uint64_t v92 = 176;
        goto LABEL_192;
      case 4:
        if ((v8 & 1) == 0) {
          goto LABEL_170;
        }
        char v61 = 0;
        unsigned int v62 = 0;
        uint64_t v46 = 0;
        *(_DWORD *)(a1 + 184) |= 2u;
        while (2)
        {
          uint64_t v63 = *v22;
          uint64_t v64 = *(void *)(v3 + v63);
          unint64_t v65 = v64 + 1;
          if (v64 == -1 || v65 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v25) = 1;
          }
          else
          {
            char v66 = *(unsigned char *)(*(void *)(v3 + *v26) + v64);
            *(void *)(v3 + v63) = v65;
            v46 |= (unint64_t)(v66 & 0x7F) << v61;
            if (v66 < 0)
            {
              v61 += 7;
              BOOL v34 = v62++ >= 9;
              if (v34)
              {
                LODWORD(v46) = 0;
                goto LABEL_183;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v25)) {
          LODWORD(v46) = 0;
        }
LABEL_183:
        uint64_t v92 = 168;
        goto LABEL_192;
      case 5:
        if ((v8 & 1) == 0) {
          goto LABEL_170;
        }
        char v67 = 0;
        unsigned int v68 = 0;
        uint64_t v46 = 0;
        *(_DWORD *)(a1 + 184) |= 0x10u;
        while (2)
        {
          uint64_t v69 = *v22;
          uint64_t v70 = *(void *)(v3 + v69);
          unint64_t v71 = v70 + 1;
          if (v70 == -1 || v71 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v25) = 1;
          }
          else
          {
            char v72 = *(unsigned char *)(*(void *)(v3 + *v26) + v70);
            *(void *)(v3 + v69) = v71;
            v46 |= (unint64_t)(v72 & 0x7F) << v67;
            if (v72 < 0)
            {
              v67 += 7;
              BOOL v34 = v68++ >= 9;
              if (v34)
              {
                LODWORD(v46) = 0;
                goto LABEL_187;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v25)) {
          LODWORD(v46) = 0;
        }
LABEL_187:
        uint64_t v92 = 180;
        goto LABEL_192;
      case 6:
        if (!v39 || (*(unsigned char *)(a1 + 185) & 4) != 0) {
          goto LABEL_168;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_251;
        }
        unsigned int v54 = objc_alloc_init(GEONameInfo);
        if (!GEONameInfoReadAllFrom((uint64_t)v54, (void *)v3, v10 & 1)) {
          goto LABEL_250;
        }
        PBReaderRecallMark();
        -[GEOWaypointRoute _addNoFlagsName:](a1, v54);
        goto LABEL_145;
      case 7:
        if ((v8 & 1) == 0) {
          goto LABEL_170;
        }
        char v73 = 0;
        unsigned int v74 = 0;
        uint64_t v46 = 0;
        *(_DWORD *)(a1 + 184) |= 1u;
        while (2)
        {
          uint64_t v75 = *v22;
          uint64_t v76 = *(void *)(v3 + v75);
          unint64_t v77 = v76 + 1;
          if (v76 == -1 || v77 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v25) = 1;
          }
          else
          {
            char v78 = *(unsigned char *)(*(void *)(v3 + *v26) + v76);
            *(void *)(v3 + v75) = v77;
            v46 |= (unint64_t)(v78 & 0x7F) << v73;
            if (v78 < 0)
            {
              v73 += 7;
              BOOL v34 = v74++ >= 9;
              if (v34)
              {
                LODWORD(v46) = 0;
                goto LABEL_191;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v25)) {
          LODWORD(v46) = 0;
        }
LABEL_191:
        uint64_t v92 = 164;
LABEL_192:
        *(_DWORD *)(a1 + v92) = v46;
        goto LABEL_208;
      case 8:
        if (!v39) {
          goto LABEL_170;
        }
        if ((*(unsigned char *)(a1 + 186) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_251;
          }
          int v93 = (int)(*(_DWORD *)(a1 + 184) << 13) >> 31;
          goto LABEL_205;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_251;
        }
        unsigned int v54 = objc_alloc_init(GEOTraversalTimes);
        if (!GEOTraversalTimesReadAllFrom((uint64_t)v54, (void *)v3)) {
          goto LABEL_250;
        }
        PBReaderRecallMark();
        uint64_t v79 = 136;
        goto LABEL_166;
      case 9:
        if (!v39) {
          goto LABEL_170;
        }
        if (*(unsigned char *)(a1 + 185))
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_251;
          }
          int v93 = (int)(*(_DWORD *)(a1 + 184) << 23) >> 31;
          goto LABEL_205;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_251;
        }
        unsigned int v54 = objc_alloc_init(GEOWaypointRouteFeatures);
        if (!GEOWaypointRouteFeaturesReadAllFrom((uint64_t)v54, (void *)v3)) {
          goto LABEL_250;
        }
        PBReaderRecallMark();
        uint64_t v79 = 56;
        goto LABEL_166;
      case 10:
        if (!v39) {
          goto LABEL_170;
        }
        if ((*(unsigned char *)(a1 + 185) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_251;
          }
          int v93 = (int)(*(_DWORD *)(a1 + 184) << 17) >> 31;
          goto LABEL_205;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_251;
        }
        unsigned int v54 = objc_alloc_init(GEORoutePlanningInfo);
        if (!GEORoutePlanningInfoReadAllFrom((uint64_t)v54, (void *)v3, v10 & 1)) {
          goto LABEL_250;
        }
        PBReaderRecallMark();
        uint64_t v79 = 104;
        goto LABEL_166;
      case 11:
        if (!v39 || (*(unsigned char *)(a1 + 184) & 0x80) != 0) {
          goto LABEL_168;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_251;
        }
        unsigned int v54 = objc_alloc_init(GEOArrivalParameters);
        if (!GEOArrivalParametersReadAllFrom((uint64_t)v54, (void *)v3, v10 & 1)) {
          goto LABEL_250;
        }
        PBReaderRecallMark();
        -[GEOWaypointRoute _addNoFlagsArrivalParameters:](a1, v54);
        goto LABEL_145;
      case 12:
        if (!v39 || (*(unsigned char *)(a1 + 186) & 2) != 0) {
          goto LABEL_168;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_251;
        }
        unsigned int v54 = objc_alloc_init(GEOTrafficSignal);
        if (!GEOTrafficSignalReadAllFrom((uint64_t)v54, (void *)v3, v10 & 1)) {
          goto LABEL_250;
        }
        PBReaderRecallMark();
        -[GEOWaypointRoute _addNoFlagsTrafficSignal:](a1, v54);
        goto LABEL_145;
      case 13:
        if (!v39 || (*(unsigned char *)(a1 + 186) & 1) != 0) {
          goto LABEL_168;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_251;
        }
        unsigned int v54 = objc_alloc_init(GEOTrafficCamera);
        if (!GEOTrafficCameraReadAllFrom((uint64_t)v54, (void *)v3, v10 & 1)) {
          goto LABEL_250;
        }
        PBReaderRecallMark();
        -[GEOWaypointRoute _addNoFlagsTrafficCamera:](a1, v54);
        goto LABEL_145;
      case 14:
        if (!v39 || (*(unsigned char *)(a1 + 185) & 2) != 0) {
          goto LABEL_168;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_251;
        }
        unsigned int v54 = objc_alloc_init(GEORouteIncident);
        if (!GEORouteIncidentReadAllFrom((uint64_t)v54, (void *)v3, v10 & 1)) {
          goto LABEL_250;
        }
        PBReaderRecallMark();
        -[GEOWaypointRoute _addNoFlagsIncidentsOnRouteLegs:](a1, v54);
        goto LABEL_145;
      case 15:
        if (!v39) {
          goto LABEL_170;
        }
        if ((*(unsigned char *)(a1 + 185) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_251;
          }
          int v93 = (int)(*(_DWORD *)(a1 + 184) << 19) >> 31;
          goto LABEL_205;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_251;
        }
        unsigned int v54 = objc_alloc_init(GEORestrictionZoneInfo);
        if (!GEORestrictionZoneInfoReadAllFrom((uint64_t)v54, (void *)v3)) {
          goto LABEL_250;
        }
        PBReaderRecallMark();
        uint64_t v79 = 88;
        goto LABEL_166;
      case 16:
        if (!v39) {
          goto LABEL_170;
        }
        if ((*(unsigned char *)(a1 + 185) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_251;
          }
          int v93 = (int)(*(_DWORD *)(a1 + 184) << 20) >> 31;
          goto LABEL_205;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_251;
        }
        unsigned int v54 = objc_alloc_init(GEOOutOfMapsAlertsInfo);
        if (!GEOOutOfMapsAlertsInfoReadAllFrom((uint64_t)v54, (void *)v3, v10 & 1)) {
          goto LABEL_250;
        }
        PBReaderRecallMark();
        uint64_t v79 = 80;
        goto LABEL_166;
      case 17:
        if (!v39 || (*(unsigned char *)(a1 + 185) & 0x80) != 0)
        {
LABEL_168:
          char v90 = PBReaderSkipValueWithTag();
          char v21 = v106;
          unint64_t v25 = (int *)MEMORY[0x1E4F940C8];
          uint64_t v26 = (int *)MEMORY[0x1E4F940B8];
          if ((v90 & 1) == 0) {
            goto LABEL_249;
          }
          goto LABEL_208;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_251;
        }
        unsigned int v54 = objc_alloc_init(GEOTrafficBannerText);
        if (!GEOTrafficBannerTextReadAllFrom((uint64_t)v54, (void *)v3, v10 & 1)) {
          goto LABEL_250;
        }
        PBReaderRecallMark();
        -[GEOWaypointRoute _addNoFlagsTrafficBannerText:](a1, v54);
LABEL_145:

        goto LABEL_206;
      case 18:
        if (!v39 || (*(unsigned char *)(a1 + 184) & 0x40) != 0) {
          goto LABEL_170;
        }
        if (v36 != 2)
        {
          char v94 = 0;
          unsigned int v95 = 0;
          uint64_t v96 = 0;
          while (1)
          {
            uint64_t v97 = *v22;
            uint64_t v98 = *(void *)(v3 + v97);
            unint64_t v99 = v98 + 1;
            if (v98 == -1 || v99 > *(void *)(v3 + *v6)) {
              break;
            }
            char v100 = *(unsigned char *)(*(void *)(v3 + *v26) + v98);
            *(void *)(v3 + v97) = v99;
            v96 |= (unint64_t)(v100 & 0x7F) << v94;
            if (v100 < 0)
            {
              v94 += 7;
              BOOL v34 = v95++ >= 9;
              if (!v34) {
                continue;
              }
            }
            goto LABEL_220;
          }
          *(unsigned char *)(v3 + *v25) = 1;
LABEL_220:
          PBRepeatedInt32Add();
          goto LABEL_206;
        }
        if (!PBReaderPlaceMark()) {
          goto LABEL_251;
        }
        while (1)
        {
          unint64_t v80 = (int *)MEMORY[0x1E4F940C8];
          if (*(void *)(v3 + *v22) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + (int)*MEMORY[0x1E4F940C8])) {
            break;
          }
          char v81 = 0;
          unsigned int v82 = 0;
          uint64_t v83 = 0;
          char v84 = (int *)MEMORY[0x1E4F940B8];
          while (1)
          {
            uint64_t v85 = *v22;
            uint64_t v86 = *(void *)(v3 + v85);
            unint64_t v87 = v86 + 1;
            if (v86 == -1 || v87 > *(void *)(v3 + *v6)) {
              break;
            }
            char v88 = *(unsigned char *)(*(void *)(v3 + *v84) + v86);
            *(void *)(v3 + v85) = v87;
            v83 |= (unint64_t)(v88 & 0x7F) << v81;
            if (v88 < 0)
            {
              v81 += 7;
              BOOL v34 = v82++ >= 9;
              if (!v34) {
                continue;
              }
            }
            goto LABEL_160;
          }
          *(unsigned char *)(v3 + *v80) = 1;
LABEL_160:
          PBRepeatedInt32Add();
        }
        PBReaderRecallMark();
        unint64_t v25 = (int *)MEMORY[0x1E4F940C8];
        char v21 = v106;
        goto LABEL_207;
      case 19:
        if (!v39) {
          goto LABEL_170;
        }
        if ((*(unsigned char *)(a1 + 186) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_251;
          }
          int v93 = (int)(*(_DWORD *)(a1 + 184) << 12) >> 31;
LABEL_205:
          v7 += v93;
LABEL_206:
          char v21 = v106;
          unint64_t v25 = (int *)MEMORY[0x1E4F940C8];
LABEL_207:
          uint64_t v26 = (int *)MEMORY[0x1E4F940B8];
LABEL_208:
          if (!(v108 & 1 | (v7 != 0)) || *(void *)(v3 + *v22) >= *(void *)(v3 + *v6)) {
            goto LABEL_221;
          }
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_251;
        }
        unsigned int v54 = objc_alloc_init(GEOTraversalTimes);
        if (GEOTraversalTimesReadAllFrom((uint64_t)v54, (void *)v3))
        {
          PBReaderRecallMark();
          uint64_t v79 = 144;
LABEL_166:
          char v89 = *(void **)(a1 + v79);
          *(void *)(a1 + v79) = v54;

          --v7;
          goto LABEL_206;
        }
LABEL_250:

LABEL_251:
        int v107 = 0;
        char v21 = v106;
LABEL_222:
        char v24 = v105;
LABEL_223:
        if (v24) {
LABEL_224:
        }
          *(_DWORD *)(a1 + 184) |= 0x20u;
        if (v21 & 1 | ((v107 & 1) == 0))
        {
          *(_DWORD *)(a1 + 184) |= 0x2000u;
          *(_DWORD *)(a1 + 184) |= 0x400u;
          *(_DWORD *)(a1 + 184) |= 0x40000u;
          *(_DWORD *)(a1 + 184) |= 0x80000u;
          *(_DWORD *)(a1 + 184) |= 0x100u;
          *(_DWORD *)(a1 + 184) |= 0x4000u;
          *(_DWORD *)(a1 + 184) |= 0x80u;
          *(_DWORD *)(a1 + 184) |= 0x20000u;
          *(_DWORD *)(a1 + 184) |= 0x10000u;
          *(_DWORD *)(a1 + 184) |= 0x200u;
          *(_DWORD *)(a1 + 184) |= 0x1000u;
          *(_DWORD *)(a1 + 184) |= 0x800u;
          *(_DWORD *)(a1 + 184) |= 0x8000u;
          *(_DWORD *)(a1 + 184) |= 0x40u;
        }
        else if (v23)
        {
          while (1)
          {
            int v101 = *v23++;
            int v102 = 0x2000;
            switch(v101)
            {
              case 0:
                goto LABEL_243;
              case 2:
                goto LABEL_242;
              case 6:
                int v102 = 1024;
                goto LABEL_242;
              case 8:
                int v102 = 0x40000;
                goto LABEL_242;
              case 9:
                int v102 = 256;
                goto LABEL_242;
              case 10:
                int v102 = 0x4000;
                goto LABEL_242;
              case 11:
                int v102 = 128;
                goto LABEL_242;
              case 12:
                int v102 = 0x20000;
                goto LABEL_242;
              case 13:
                int v102 = 0x10000;
                goto LABEL_242;
              case 14:
                int v102 = 512;
                goto LABEL_242;
              case 15:
                int v102 = 4096;
                goto LABEL_242;
              case 16:
                int v102 = 2048;
                goto LABEL_242;
              case 17:
                int v102 = 0x8000;
                goto LABEL_242;
              case 18:
                int v102 = 64;
                goto LABEL_242;
              case 19:
                int v102 = 0x80000;
LABEL_242:
                *(_DWORD *)(a1 + 184) |= v102;
                break;
              default:
                continue;
            }
          }
        }
LABEL_243:
        if (v107)
        {
          unint64_t v3 = *(unsigned char *)(v3 + (int)*MEMORY[0x1E4F940C8]) == 0;
          if ((v21 & 1) == 0) {
            return v3;
          }
LABEL_247:
          BOOL v103 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        else
        {
          unint64_t v3 = 0;
          if (v21) {
            goto LABEL_247;
          }
        }
        return v3;
      default:
        if ((v105 & 1) == 0 || (*(unsigned char *)(a1 + 184) & 0x20) != 0)
        {
LABEL_170:
          char v91 = PBReaderSkipValueWithTag();
          uint64_t v26 = (int *)MEMORY[0x1E4F940B8];
          unint64_t v25 = (int *)MEMORY[0x1E4F940C8];
          char v21 = v106;
          if ((v91 & 1) == 0)
          {
LABEL_249:
            int v107 = 0;
            goto LABEL_222;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v51 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            uint64_t v52 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v51;
          }
          int v53 = PBUnknownFieldAdd();
          char v21 = v106;
          unint64_t v25 = (int *)MEMORY[0x1E4F940C8];
          uint64_t v26 = (int *)MEMORY[0x1E4F940B8];
          if (!v53)
          {
            int v107 = 0;
            goto LABEL_224;
          }
        }
        goto LABEL_208;
    }
  }
}

void sub_1898AB0F4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898AB530(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898AB6A0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898AB80C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898AB980(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898ABAF0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898ABEBC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898AC288(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898AC654(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898ACA20(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898ACB94(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898ACD08(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898AD0D0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898AF664(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOWaypointRouteCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  uint64_t v72 = *MEMORY[0x1E4F143B8];
  long long v61 = 0u;
  long long v62 = 0u;
  long long v63 = 0u;
  long long v64 = 0u;
  id v2 = a1[12];
  uint64_t v3 = [v2 countByEnumeratingWithState:&v61 objects:v71 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v62;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v62 != v5) {
          objc_enumerationMutation(v2);
        }
        [*(id *)(*((void *)&v61 + 1) + 8 * v6++) readAll:1];
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v61 objects:v71 count:16];
    }
    while (v4);
  }

  long long v59 = 0u;
  long long v60 = 0u;
  long long v57 = 0u;
  long long v58 = 0u;
  id v7 = a1[9];
  uint64_t v8 = [v7 countByEnumeratingWithState:&v57 objects:v70 count:16];
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)v58;
    do
    {
      uint64_t v11 = 0;
      do
      {
        if (*(void *)v58 != v10) {
          objc_enumerationMutation(v7);
        }
        [*(id *)(*((void *)&v57 + 1) + 8 * v11++) readAll:1];
      }
      while (v9 != v11);
      uint64_t v9 = [v7 countByEnumeratingWithState:&v57 objects:v70 count:16];
    }
    while (v9);
  }

  [a1[17] readAll:1];
  [a1[18] readAll:1];
  [a1[7] readAll:1];
  [a1[13] readAll:1];
  long long v55 = 0u;
  long long v56 = 0u;
  long long v53 = 0u;
  long long v54 = 0u;
  id v12 = a1[6];
  uint64_t v13 = [v12 countByEnumeratingWithState:&v53 objects:v69 count:16];
  if (v13)
  {
    uint64_t v14 = v13;
    uint64_t v15 = *(void *)v54;
    do
    {
      uint64_t v16 = 0;
      do
      {
        if (*(void *)v54 != v15) {
          objc_enumerationMutation(v12);
        }
        [*(id *)(*((void *)&v53 + 1) + 8 * v16++) readAll:1];
      }
      while (v14 != v16);
      uint64_t v14 = [v12 countByEnumeratingWithState:&v53 objects:v69 count:16];
    }
    while (v14);
  }

  long long v51 = 0u;
  long long v52 = 0u;
  long long v49 = 0u;
  long long v50 = 0u;
  id v17 = a1[16];
  uint64_t v18 = [v17 countByEnumeratingWithState:&v49 objects:v68 count:16];
  if (v18)
  {
    uint64_t v19 = v18;
    uint64_t v20 = *(void *)v50;
    do
    {
      uint64_t v21 = 0;
      do
      {
        if (*(void *)v50 != v20) {
          objc_enumerationMutation(v17);
        }
        [*(id *)(*((void *)&v49 + 1) + 8 * v21++) readAll:1];
      }
      while (v19 != v21);
      uint64_t v19 = [v17 countByEnumeratingWithState:&v49 objects:v68 count:16];
    }
    while (v19);
  }

  long long v47 = 0u;
  long long v48 = 0u;
  long long v45 = 0u;
  long long v46 = 0u;
  id v22 = a1[15];
  uint64_t v23 = [v22 countByEnumeratingWithState:&v45 objects:v67 count:16];
  if (v23)
  {
    uint64_t v24 = v23;
    uint64_t v25 = *(void *)v46;
    do
    {
      uint64_t v26 = 0;
      do
      {
        if (*(void *)v46 != v25) {
          objc_enumerationMutation(v22);
        }
        [*(id *)(*((void *)&v45 + 1) + 8 * v26++) readAll:1];
      }
      while (v24 != v26);
      uint64_t v24 = [v22 countByEnumeratingWithState:&v45 objects:v67 count:16];
    }
    while (v24);
  }

  long long v43 = 0u;
  long long v44 = 0u;
  long long v41 = 0u;
  long long v42 = 0u;
  id v27 = a1[8];
  uint64_t v28 = [v27 countByEnumeratingWithState:&v41 objects:v66 count:16];
  if (v28)
  {
    uint64_t v29 = v28;
    uint64_t v30 = *(void *)v42;
    do
    {
      uint64_t v31 = 0;
      do
      {
        if (*(void *)v42 != v30) {
          objc_enumerationMutation(v27);
        }
        [*(id *)(*((void *)&v41 + 1) + 8 * v31++) readAll:1];
      }
      while (v29 != v31);
      uint64_t v29 = [v27 countByEnumeratingWithState:&v41 objects:v66 count:16];
    }
    while (v29);
  }

  [a1[11] readAll:1];
  [a1[10] readAll:1];
  long long v39 = 0u;
  long long v40 = 0u;
  long long v37 = 0u;
  long long v38 = 0u;
  id v32 = a1[14];
  uint64_t v33 = [v32 countByEnumeratingWithState:&v37 objects:v65 count:16];
  if (v33)
  {
    uint64_t v34 = v33;
    uint64_t v35 = *(void *)v38;
    do
    {
      uint64_t v36 = 0;
      do
      {
        if (*(void *)v38 != v35) {
          objc_enumerationMutation(v32);
        }
        objc_msgSend(*(id *)(*((void *)&v37 + 1) + 8 * v36++), "readAll:", 1, (void)v37);
      }
      while (v34 != v36);
      uint64_t v34 = [v32 countByEnumeratingWithState:&v37 objects:v65 count:16];
    }
    while (v34);
  }
}

unint64_t GEOWaypointRouteReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 156))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOWaypointRouteReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 160));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 152) = [v8 position];
  *(_DWORD *)(a1 + 156) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOWaypointRouteReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOWaypointRouteReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOWaypointRouteReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOWaypointRouteCallReadAllRecursiveWithoutSynchronized((id *)a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 160));
  return Specified;
}

void sub_1898AFCF0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOWaypointRouteReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOWaypointRouteReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1898AFD54(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOWaypointRouteIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (!a1[*v4])
    {
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        BOOL v13 = v7++ >= 9;
        if (v13)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_130;
          }
          unsigned int v17 = 0;
          while (1)
          {
            uint64_t v18 = *v2;
            uint64_t v19 = *(void *)&a1[v18];
            unint64_t v20 = v19 + 1;
            if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
              goto LABEL_116;
            }
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if (v21 < 0)
            {
              BOOL v22 = v17++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_117;
          }
        case 2u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORouteIsValid(a1)) {
            goto LABEL_130;
          }
          goto LABEL_108;
        case 3u:
          if ((v8 & 7) != 0) {
            goto LABEL_130;
          }
          unsigned int v23 = 0;
          while (1)
          {
            uint64_t v24 = *v2;
            uint64_t v25 = *(void *)&a1[v24];
            unint64_t v26 = v25 + 1;
            if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
              goto LABEL_116;
            }
            int v27 = *(char *)(*(void *)&a1[*v5] + v25);
            *(void *)&a1[v24] = v26;
            if (v27 < 0)
            {
              BOOL v22 = v23++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_117;
          }
        case 4u:
          if ((v8 & 7) != 0) {
            goto LABEL_130;
          }
          unsigned int v28 = 0;
          while (1)
          {
            uint64_t v29 = *v2;
            uint64_t v30 = *(void *)&a1[v29];
            unint64_t v31 = v30 + 1;
            if (v30 == -1 || v31 > *(void *)&a1[*v3]) {
              goto LABEL_116;
            }
            int v32 = *(char *)(*(void *)&a1[*v5] + v30);
            *(void *)&a1[v29] = v31;
            if (v32 < 0)
            {
              BOOL v22 = v28++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_117;
          }
        case 5u:
          if ((v8 & 7) != 0) {
            goto LABEL_130;
          }
          unsigned int v33 = 0;
          while (1)
          {
            uint64_t v34 = *v2;
            uint64_t v35 = *(void *)&a1[v34];
            unint64_t v36 = v35 + 1;
            if (v35 == -1 || v36 > *(void *)&a1[*v3]) {
              goto LABEL_116;
            }
            int v37 = *(char *)(*(void *)&a1[*v5] + v35);
            *(void *)&a1[v34] = v36;
            if (v37 < 0)
            {
              BOOL v22 = v33++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_117;
          }
        case 6u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEONameInfoIsValid(a1)) {
            goto LABEL_130;
          }
          goto LABEL_108;
        case 7u:
          if ((v8 & 7) != 0) {
            goto LABEL_130;
          }
          unsigned int v38 = 0;
          while (1)
          {
            uint64_t v39 = *v2;
            uint64_t v40 = *(void *)&a1[v39];
            unint64_t v41 = v40 + 1;
            if (v40 == -1 || v41 > *(void *)&a1[*v3]) {
              goto LABEL_116;
            }
            int v42 = *(char *)(*(void *)&a1[*v5] + v40);
            *(void *)&a1[v39] = v41;
            if (v42 < 0)
            {
              BOOL v22 = v38++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_117;
          }
        case 8u:
        case 0x13u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOTraversalTimesIsValid(a1)) {
            goto LABEL_130;
          }
          goto LABEL_108;
        case 9u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOWaypointRouteFeaturesIsValid(a1)) {
            goto LABEL_130;
          }
          goto LABEL_108;
        case 0xAu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORoutePlanningInfoIsValid(a1)) {
            goto LABEL_130;
          }
          goto LABEL_108;
        case 0xBu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOArrivalParametersIsValid(a1)) {
            goto LABEL_130;
          }
          goto LABEL_108;
        case 0xCu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOTrafficSignalIsValid(a1)) {
            goto LABEL_130;
          }
          goto LABEL_108;
        case 0xDu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOTrafficCameraIsValid(a1)) {
            goto LABEL_130;
          }
          goto LABEL_108;
        case 0xEu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORouteIncidentIsValid(a1)) {
            goto LABEL_130;
          }
          goto LABEL_108;
        case 0xFu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORestrictionZoneInfoIsValid(a1)) {
            goto LABEL_130;
          }
          goto LABEL_108;
        case 0x10u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOOutOfMapsAlertsInfoIsValid(a1)) {
            goto LABEL_130;
          }
          goto LABEL_108;
        case 0x11u:
          if (v15 == 2 && PBReaderPlaceMark() && GEOTrafficBannerTextIsValid(a1)) {
            goto LABEL_108;
          }
          goto LABEL_130;
        case 0x12u:
          if (v15 == 2)
          {
            if (!PBReaderPlaceMark())
            {
LABEL_130:
              PBReaderRecallMark();
              return 0;
            }
LABEL_120:
            while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
            {
              unsigned int v48 = a1[*v4];
              if (a1[*v4]) {
                break;
              }
              while (1)
              {
                uint64_t v49 = *v2;
                uint64_t v50 = *(void *)&a1[v49];
                unint64_t v51 = v50 + 1;
                if (v50 == -1 || v51 > *(void *)&a1[*v3]) {
                  break;
                }
                int v52 = *(char *)(*(void *)&a1[*v5] + v50);
                *(void *)&a1[v49] = v51;
                if (v52 < 0)
                {
                  BOOL v13 = v48++ >= 9;
                  if (!v13) {
                    continue;
                  }
                }
                goto LABEL_120;
              }
              a1[*v4] = 1;
            }
LABEL_108:
            PBReaderRecallMark();
          }
          else
          {
            if ((v8 & 7) != 0) {
              goto LABEL_130;
            }
            while (1)
            {
              uint64_t v43 = *v2;
              uint64_t v44 = *(void *)&a1[v43];
              unint64_t v45 = v44 + 1;
              if (v44 == -1 || v45 > *(void *)&a1[*v3]) {
                break;
              }
              int v46 = *(char *)(*(void *)&a1[*v5] + v44);
              *(void *)&a1[v43] = v45;
              if (v46 < 0)
              {
                unsigned int v47 = v15++;
                if (v47 <= 8) {
                  continue;
                }
              }
              goto LABEL_117;
            }
LABEL_116:
            a1[*v4] = 1;
          }
LABEL_117:
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_129;
          }
          break;
        default:
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_130;
          }
          goto LABEL_117;
      }
    }
  }
LABEL_129:
  BOOL v53 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v53;
}

BOOL GEOWaypointRouteFeaturesIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_48;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      if (v14 || (v8 & 7) == 4) {
        goto LABEL_48;
      }
      unint64_t v16 = v8 >> 3;
      if ((v8 >> 3) == 3) {
        break;
      }
      if (v16 == 2)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_50;
        }
        unsigned int v28 = 0;
        while (1)
        {
          uint64_t v29 = *v2;
          uint64_t v30 = *(void *)&a1[v29];
          unint64_t v31 = v30 + 1;
          if (v30 == -1 || v31 > *(void *)&a1[*v3]) {
            goto LABEL_45;
          }
          int v32 = *(char *)(*(void *)&a1[*v5] + v30);
          *(void *)&a1[v29] = v31;
          if (v32 < 0)
          {
            BOOL v22 = v28++ > 8;
            if (!v22) {
              continue;
            }
          }
          goto LABEL_47;
        }
      }
      if (v16 == 1)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_50;
        }
        unsigned int v17 = 0;
        while (1)
        {
          uint64_t v18 = *v2;
          uint64_t v19 = *(void *)&a1[v18];
          unint64_t v20 = v19 + 1;
          if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
            break;
          }
          int v21 = *(char *)(*(void *)&a1[*v5] + v19);
          *(void *)&a1[v18] = v20;
          if (v21 < 0)
          {
            BOOL v22 = v17++ > 8;
            if (!v22) {
              continue;
            }
          }
          goto LABEL_47;
        }
LABEL_45:
        a1[*v4] = 1;
        goto LABEL_47;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_50:
        BOOL v33 = 0;
        goto LABEL_49;
      }
LABEL_47:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_48;
      }
    }
    if ((v8 & 7) != 0) {
      goto LABEL_50;
    }
    unsigned int v23 = 0;
    while (1)
    {
      uint64_t v24 = *v2;
      uint64_t v25 = *(void *)&a1[v24];
      unint64_t v26 = v25 + 1;
      if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
        goto LABEL_45;
      }
      int v27 = *(char *)(*(void *)&a1[*v5] + v25);
      *(void *)&a1[v24] = v26;
      if (v27 < 0)
      {
        BOOL v22 = v23++ > 8;
        if (!v22) {
          continue;
        }
      }
      goto LABEL_47;
    }
  }
LABEL_48:
  BOOL v33 = a1[*v4] == 0;
LABEL_49:
  PBReaderRecallMark();
  return v33;
}

void sub_1898B0DD0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOWaypointRouteIsDirty(uint64_t a1)
{
  uint64_t v67 = *MEMORY[0x1E4F143B8];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 160));
  int v2 = *(_DWORD *)(a1 + 184);
  if ((v2 & 0x1C2500) != 0) {
    return 1;
  }
  if ((v2 & 0x4000) == 0)
  {
LABEL_5:
    if ((v2 & 0x39AC0) != 0) {
      return 1;
    }
    if ((v2 & 0x2000) != 0)
    {
      long long v58 = 0u;
      long long v59 = 0u;
      long long v56 = 0u;
      long long v57 = 0u;
      id v5 = *(id *)(a1 + 96);
      uint64_t v6 = [v5 countByEnumeratingWithState:&v56 objects:v66 count:16];
      if (v6)
      {
        uint64_t v7 = v6;
        uint64_t v8 = *(void *)v57;
LABEL_11:
        uint64_t v9 = 0;
        while (1)
        {
          if (*(void *)v57 != v8) {
            objc_enumerationMutation(v5);
          }
          if (GEORouteIsDirty(*(os_unfair_lock_s **)(*((void *)&v56 + 1) + 8 * v9))) {
            goto LABEL_79;
          }
          if (v7 == ++v9)
          {
            uint64_t v7 = [v5 countByEnumeratingWithState:&v56 objects:v66 count:16];
            if (v7) {
              goto LABEL_11;
            }
            break;
          }
        }
      }

      int v2 = *(_DWORD *)(a1 + 184);
    }
    if ((v2 & 0x400) != 0)
    {
      long long v54 = 0u;
      long long v55 = 0u;
      long long v52 = 0u;
      long long v53 = 0u;
      id v5 = *(id *)(a1 + 72);
      uint64_t v10 = [v5 countByEnumeratingWithState:&v52 objects:v65 count:16];
      if (v10)
      {
        uint64_t v11 = v10;
        uint64_t v12 = *(void *)v53;
LABEL_21:
        uint64_t v13 = 0;
        while (1)
        {
          if (*(void *)v53 != v12) {
            objc_enumerationMutation(v5);
          }
          if (GEONameInfoIsDirty(*(void *)(*((void *)&v52 + 1) + 8 * v13))) {
            goto LABEL_79;
          }
          if (v11 == ++v13)
          {
            uint64_t v11 = [v5 countByEnumeratingWithState:&v52 objects:v65 count:16];
            if (v11) {
              goto LABEL_21;
            }
            break;
          }
        }
      }

      int v2 = *(_DWORD *)(a1 + 184);
    }
    if ((v2 & 0x80) != 0)
    {
      long long v50 = 0u;
      long long v51 = 0u;
      long long v48 = 0u;
      long long v49 = 0u;
      id v5 = *(id *)(a1 + 48);
      uint64_t v14 = [v5 countByEnumeratingWithState:&v48 objects:v64 count:16];
      if (v14)
      {
        uint64_t v15 = v14;
        uint64_t v16 = *(void *)v49;
LABEL_31:
        uint64_t v17 = 0;
        while (1)
        {
          if (*(void *)v49 != v16) {
            objc_enumerationMutation(v5);
          }
          if (GEOArrivalParametersIsDirty(*(void *)(*((void *)&v48 + 1) + 8 * v17))) {
            goto LABEL_79;
          }
          if (v15 == ++v17)
          {
            uint64_t v15 = [v5 countByEnumeratingWithState:&v48 objects:v64 count:16];
            if (v15) {
              goto LABEL_31;
            }
            break;
          }
        }
      }

      int v2 = *(_DWORD *)(a1 + 184);
    }
    if ((v2 & 0x20000) != 0)
    {
      long long v46 = 0u;
      long long v47 = 0u;
      long long v44 = 0u;
      long long v45 = 0u;
      id v5 = *(id *)(a1 + 128);
      uint64_t v18 = [v5 countByEnumeratingWithState:&v44 objects:v63 count:16];
      if (v18)
      {
        uint64_t v19 = v18;
        uint64_t v20 = *(void *)v45;
LABEL_41:
        uint64_t v21 = 0;
        while (1)
        {
          if (*(void *)v45 != v20) {
            objc_enumerationMutation(v5);
          }
          if (GEOTrafficSignalIsDirty(*(void *)(*((void *)&v44 + 1) + 8 * v21))) {
            goto LABEL_79;
          }
          if (v19 == ++v21)
          {
            uint64_t v19 = [v5 countByEnumeratingWithState:&v44 objects:v63 count:16];
            if (v19) {
              goto LABEL_41;
            }
            break;
          }
        }
      }

      int v2 = *(_DWORD *)(a1 + 184);
    }
    if ((v2 & 0x10000) != 0)
    {
      long long v42 = 0u;
      long long v43 = 0u;
      long long v40 = 0u;
      long long v41 = 0u;
      id v5 = *(id *)(a1 + 120);
      uint64_t v22 = [v5 countByEnumeratingWithState:&v40 objects:v62 count:16];
      if (v22)
      {
        uint64_t v23 = v22;
        uint64_t v24 = *(void *)v41;
LABEL_51:
        uint64_t v25 = 0;
        while (1)
        {
          if (*(void *)v41 != v24) {
            objc_enumerationMutation(v5);
          }
          if (GEOTrafficCameraIsDirty(*(os_unfair_lock_s **)(*((void *)&v40 + 1) + 8 * v25))) {
            goto LABEL_79;
          }
          if (v23 == ++v25)
          {
            uint64_t v23 = [v5 countByEnumeratingWithState:&v40 objects:v62 count:16];
            if (v23) {
              goto LABEL_51;
            }
            break;
          }
        }
      }

      int v2 = *(_DWORD *)(a1 + 184);
    }
    if ((v2 & 0x200) != 0)
    {
      long long v38 = 0u;
      long long v39 = 0u;
      long long v36 = 0u;
      long long v37 = 0u;
      id v5 = *(id *)(a1 + 64);
      uint64_t v26 = [v5 countByEnumeratingWithState:&v36 objects:v61 count:16];
      if (v26)
      {
        uint64_t v27 = v26;
        uint64_t v28 = *(void *)v37;
LABEL_61:
        uint64_t v29 = 0;
        while (1)
        {
          if (*(void *)v37 != v28) {
            objc_enumerationMutation(v5);
          }
          if (GEORouteIncidentIsDirty(*(os_unfair_lock_s **)(*((void *)&v36 + 1) + 8 * v29))) {
            goto LABEL_79;
          }
          if (v27 == ++v29)
          {
            uint64_t v27 = [v5 countByEnumeratingWithState:&v36 objects:v61 count:16];
            if (v27) {
              goto LABEL_61;
            }
            break;
          }
        }
      }

      int v2 = *(_DWORD *)(a1 + 184);
    }
    if ((v2 & 0x8000) == 0) {
      return 0;
    }
    long long v34 = 0u;
    long long v35 = 0u;
    long long v32 = 0u;
    long long v33 = 0u;
    id v5 = *(id *)(a1 + 112);
    uint64_t v3 = [v5 countByEnumeratingWithState:&v32 objects:v60 count:16];
    if (!v3)
    {
LABEL_80:

      return v3;
    }
    uint64_t v30 = *(void *)v33;
LABEL_72:
    uint64_t v31 = 0;
    while (1)
    {
      if (*(void *)v33 != v30) {
        objc_enumerationMutation(v5);
      }
      if (GEOTrafficBannerTextIsDirty(*(os_unfair_lock_s **)(*((void *)&v32 + 1) + 8 * v31))) {
        break;
      }
      if (v3 == ++v31)
      {
        uint64_t v3 = [v5 countByEnumeratingWithState:&v32 objects:v60 count:16];
        if (v3) {
          goto LABEL_72;
        }
        goto LABEL_80;
      }
    }
LABEL_79:
    uint64_t v3 = 1;
    goto LABEL_80;
  }
  if ((GEORoutePlanningInfoIsDirty(*(os_unfair_lock_s **)(a1 + 104)) & 1) == 0)
  {
    int v2 = *(_DWORD *)(a1 + 184);
    goto LABEL_5;
  }
  return 1;
}

os_unfair_lock_s *GEOWaypointRouteIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    uint64_t v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOWaypointRouteIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 40);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_1898B24D0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898B3158(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOWaypointRouteFeaturesReadAllFrom(uint64_t a1, void *a2)
{
  uint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    id v5 = (int *)MEMORY[0x1E4F940E0];
    uint64_t v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
      while (1)
      {
        if (v3[*v6]) {
          goto LABEL_59;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          goto LABEL_59;
        }
        unint64_t v18 = v10 >> 3;
        if ((v10 >> 3) == 3)
        {
          char v28 = 0;
          unsigned int v29 = 0;
          uint64_t v21 = 0;
          *(unsigned char *)(a1 + 20) |= 4u;
          while (1)
          {
            uint64_t v30 = *v4;
            uint64_t v31 = *(void *)&v3[v30];
            unint64_t v32 = v31 + 1;
            if (v31 == -1 || v32 > *(void *)&v3[*v5]) {
              break;
            }
            char v33 = *(unsigned char *)(*(void *)&v3[*v7] + v31);
            *(void *)&v3[v30] = v32;
            v21 |= (unint64_t)(v33 & 0x7F) << v28;
            if ((v33 & 0x80) == 0)
            {
              uint64_t v27 = &OBJC_IVAR___GEOWaypointRouteFeatures__avoidsTraffic;
              goto LABEL_51;
            }
            v28 += 7;
            BOOL v26 = v29++ > 8;
            if (v26)
            {
              uint64_t v21 = 0;
              uint64_t v27 = &OBJC_IVAR___GEOWaypointRouteFeatures__avoidsTraffic;
              goto LABEL_53;
            }
          }
          uint64_t v27 = &OBJC_IVAR___GEOWaypointRouteFeatures__avoidsTraffic;
LABEL_50:
          v3[*v6] = 1;
          goto LABEL_51;
        }
        if (v18 == 2) {
          break;
        }
        if (v18 == 1)
        {
          char v19 = 0;
          unsigned int v20 = 0;
          uint64_t v21 = 0;
          *(unsigned char *)(a1 + 20) |= 2u;
          while (1)
          {
            uint64_t v22 = *v4;
            uint64_t v23 = *(void *)&v3[v22];
            unint64_t v24 = v23 + 1;
            if (v23 == -1 || v24 > *(void *)&v3[*v5])
            {
              uint64_t v27 = &OBJC_IVAR___GEOWaypointRouteFeatures__avoidsTolls;
              goto LABEL_50;
            }
            char v25 = *(unsigned char *)(*(void *)&v3[*v7] + v23);
            *(void *)&v3[v22] = v24;
            v21 |= (unint64_t)(v25 & 0x7F) << v19;
            if ((v25 & 0x80) == 0) {
              break;
            }
            v19 += 7;
            BOOL v26 = v20++ > 8;
            if (v26)
            {
              uint64_t v21 = 0;
              uint64_t v27 = &OBJC_IVAR___GEOWaypointRouteFeatures__avoidsTolls;
              goto LABEL_53;
            }
          }
          uint64_t v27 = &OBJC_IVAR___GEOWaypointRouteFeatures__avoidsTolls;
          goto LABEL_51;
        }
        if (!*(void *)(a1 + 8))
        {
          id v40 = objc_alloc_init(MEMORY[0x1E4F940B0]);
          long long v41 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = v40;
        }
        if ((PBUnknownFieldAdd() & 1) == 0) {
          goto LABEL_60;
        }
LABEL_54:
        if (*(void *)&v3[*v4] >= *(void *)&v3[*v5]) {
          goto LABEL_59;
        }
      }
      char v34 = 0;
      unsigned int v35 = 0;
      uint64_t v21 = 0;
      *(unsigned char *)(a1 + 20) |= 1u;
      while (1)
      {
        uint64_t v36 = *v4;
        uint64_t v37 = *(void *)&v3[v36];
        unint64_t v38 = v37 + 1;
        if (v37 == -1 || v38 > *(void *)&v3[*v5])
        {
          uint64_t v27 = &OBJC_IVAR___GEOWaypointRouteFeatures__avoidsHighways;
          goto LABEL_50;
        }
        char v39 = *(unsigned char *)(*(void *)&v3[*v7] + v37);
        *(void *)&v3[v36] = v38;
        v21 |= (unint64_t)(v39 & 0x7F) << v34;
        if ((v39 & 0x80) == 0) {
          break;
        }
        v34 += 7;
        BOOL v26 = v35++ > 8;
        if (v26)
        {
          uint64_t v21 = 0;
          uint64_t v27 = &OBJC_IVAR___GEOWaypointRouteFeatures__avoidsHighways;
          goto LABEL_53;
        }
      }
      uint64_t v27 = &OBJC_IVAR___GEOWaypointRouteFeatures__avoidsHighways;
LABEL_51:
      if (v3[*v6]) {
        uint64_t v21 = 0;
      }
LABEL_53:
      *(unsigned char *)(a1 + *v27) = v21 != 0;
      goto LABEL_54;
    }
LABEL_59:
    BOOL v42 = v3[*v6] == 0;
  }
  else
  {
LABEL_60:
    BOOL v42 = 0;
  }
  objc_sync_exit(v3);

  return v42;
}

void sub_1898B4268(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOWaypointRouteFeaturesReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOWaypointRouteFeaturesReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1898B42CC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEODataRequestKindFromString(void *a1)
{
  id v1 = a1;
  if (([v1 isEqual:@"CurrentCountry"] & 1) == 0)
  {
    if ([v1 isEqual:@"SearchAttribution"])
    {
      uint64_t v2 = 0;
      unsigned int v3 = 2;
      goto LABEL_137;
    }
    if ([v1 isEqual:@"ResourceManifest"])
    {
      uint64_t v2 = 0;
      unsigned int v3 = 3;
      goto LABEL_137;
    }
    if ([v1 isEqual:@"ResourceData"])
    {
      uint64_t v2 = 0;
      unsigned int v3 = 4;
      goto LABEL_137;
    }
    if ([v1 isEqual:@"SearchAttributionData"])
    {
      uint64_t v2 = 0;
      unsigned int v3 = 5;
      goto LABEL_137;
    }
    if ([v1 isEqual:@"NetworkDefaults"])
    {
      uint64_t v2 = 0;
      unsigned int v3 = 6;
      goto LABEL_137;
    }
    if ([v1 isEqual:@"AnalyticsUpload"])
    {
      uint64_t v2 = 0;
      unsigned int v3 = 15;
      goto LABEL_137;
    }
    if ([v1 isEqual:@"Directions"])
    {
      uint64_t v2 = 0;
      unsigned int v3 = 512;
      goto LABEL_137;
    }
    if ([v1 isEqual:@"ETA"])
    {
      uint64_t v2 = 0;
      unsigned int v3 = 672;
      goto LABEL_137;
    }
    if ([v1 isEqual:@"ETAU"])
    {
      uint64_t v2 = 0;
      unsigned int v3 = 673;
      goto LABEL_137;
    }
    if ([v1 isEqual:@"TransitUpdate"])
    {
      uint64_t v2 = 0;
      unsigned int v3 = 2857;
      goto LABEL_137;
    }
    if ([v1 isEqual:@"LogMessageCollection"])
    {
      uint64_t v2 = 0;
      unsigned int v3 = 2560;
      goto LABEL_137;
    }
    if ([v1 isEqual:@"ProblemSubmission"])
    {
      uint64_t v2 = 0;
      unsigned int v3 = 2816;
      goto LABEL_137;
    }
    if ([v1 isEqual:@"ProblemStatus"])
    {
      uint64_t v2 = 0;
      unsigned int v3 = 2817;
      goto LABEL_137;
    }
    if ([v1 isEqual:@"AddressCorrectionInit"])
    {
      uint64_t v2 = 0;
      unsigned int v3 = 2848;
      goto LABEL_137;
    }
    if ([v1 isEqual:@"AddressCorrectUpdate"])
    {
      uint64_t v2 = 0;
      unsigned int v3 = 2849;
      goto LABEL_137;
    }
    if ([v1 isEqual:@"ABAssign"])
    {
      uint64_t v2 = 0;
      unsigned int v3 = 2850;
      goto LABEL_137;
    }
    if ([v1 isEqual:@"LocationShift"])
    {
      uint64_t v2 = 0;
      unsigned int v3 = 2851;
      goto LABEL_137;
    }
    if ([v1 isEqual:@"SpatialLookup"])
    {
      uint64_t v2 = 0;
      unsigned int v3 = 2852;
      goto LABEL_137;
    }
    if ([v1 isEqual:@"ReportAProblem"])
    {
      uint64_t v2 = 0;
      unsigned int v3 = 2853;
      goto LABEL_137;
    }
    if ([v1 isEqual:@"ImageService"])
    {
      uint64_t v2 = 0;
      unsigned int v3 = 2854;
      goto LABEL_137;
    }
    if ([v1 isEqual:@"BatchRevGeo"])
    {
      uint64_t v2 = 0;
      unsigned int v3 = 2855;
      goto LABEL_137;
    }
    if ([v1 isEqual:@"WiFiQuality"])
    {
      uint64_t v2 = 0;
      unsigned int v3 = 2856;
      goto LABEL_137;
    }
    if ([v1 isEqual:@"WiFiTile"])
    {
      uint64_t v2 = 0;
      unsigned int v3 = 2858;
      goto LABEL_137;
    }
    if ([v1 isEqual:@"OfflineDataService"])
    {
      uint64_t v2 = 0;
      unsigned int v3 = 2859;
      goto LABEL_137;
    }
    if ([v1 isEqual:@"ConnectivityCheck"])
    {
      uint64_t v2 = 0;
      unsigned int v3 = 2860;
      goto LABEL_137;
    }
    if ([v1 hasPrefix:@"Tile."])
    {
      if ((unint64_t)[v1 length] < 7)
      {
        uint64_t v2 = 0;
        unsigned int v3 = 256;
        goto LABEL_137;
      }
      id v4 = [v1 substringFromIndex:6];
      if ([v4 isEqualToString:@"RASTER_STANDARD"])
      {
        uint64_t v2 = 0;
LABEL_57:
        unsigned int v3 = 256;
LABEL_135:
        id v5 = v4;
        goto LABEL_136;
      }
      if ([v4 isEqualToString:@"VECTOR_STANDARD"])
      {
        unsigned int v3 = 256;
LABEL_83:
        uint64_t v2 = 1;
        goto LABEL_135;
      }
      if ([v4 isEqualToString:@"VECTOR_TRAFFIC_SEGMENTS_FOR_RASTER"])
      {
        unsigned int v3 = 256;
LABEL_91:
        uint64_t v2 = 2;
        goto LABEL_135;
      }
      if ([v4 isEqualToString:@"VECTOR_TRAFFIC_INCIDENTS_FOR_RASTER"])
      {
        unsigned int v3 = 256;
LABEL_98:
        uint64_t v2 = 3;
        goto LABEL_135;
      }
      if ([v4 isEqualToString:@"VECTOR_TRAFFIC_SEGMENTS_AND_INCIDENTS_FOR_RASTER"])
      {
        unsigned int v3 = 256;
LABEL_105:
        uint64_t v2 = 4;
        goto LABEL_135;
      }
      if ([v4 isEqualToString:@"RASTER_STANDARD_BACKGROUND"])
      {
        unsigned int v3 = 256;
LABEL_112:
        uint64_t v2 = 5;
        goto LABEL_135;
      }
      if ([v4 isEqualToString:@"RASTER_HYBRID"])
      {
        unsigned int v3 = 256;
LABEL_119:
        uint64_t v2 = 6;
        goto LABEL_135;
      }
      if ([v4 isEqualToString:@"RASTER_SATELLITE"])
      {
        unsigned int v3 = 256;
LABEL_126:
        uint64_t v2 = 7;
        goto LABEL_135;
      }
      if ([v4 isEqualToString:@"RASTER_TERRAIN"])
      {
        unsigned int v3 = 256;
LABEL_134:
        uint64_t v2 = 8;
        goto LABEL_135;
      }
      if ([v4 isEqualToString:@"VECTOR_BUILDINGS"])
      {
        unsigned int v3 = 256;
LABEL_131:
        uint64_t v2 = 11;
        goto LABEL_135;
      }
      if ([v4 isEqualToString:@"VECTOR_TRAFFIC"])
      {
        unsigned int v3 = 256;
LABEL_142:
        uint64_t v2 = 12;
        goto LABEL_135;
      }
      if ([v4 isEqualToString:@"VECTOR_POI"])
      {
        unsigned int v3 = 256;
LABEL_150:
        uint64_t v2 = 13;
        goto LABEL_135;
      }
      if ([v4 isEqualToString:@"SPUTNIK_METADATA"])
      {
        unsigned int v3 = 256;
LABEL_158:
        uint64_t v2 = 14;
        goto LABEL_135;
      }
      if ([v4 isEqualToString:@"SPUTNIK_C3M"])
      {
        unsigned int v3 = 256;
LABEL_165:
        uint64_t v2 = 15;
        goto LABEL_135;
      }
      if ([v4 isEqualToString:@"SPUTNIK_DSM"])
      {
        unsigned int v3 = 256;
LABEL_172:
        uint64_t v2 = 16;
        goto LABEL_135;
      }
      if ([v4 isEqualToString:@"SPUTNIK_DSM_GLOBAL"])
      {
        unsigned int v3 = 256;
LABEL_179:
        uint64_t v2 = 17;
        goto LABEL_135;
      }
      if ([v4 isEqualToString:@"VECTOR_REALISTIC"])
      {
        unsigned int v3 = 256;
LABEL_186:
        uint64_t v2 = 18;
        goto LABEL_135;
      }
      if ([v4 isEqualToString:@"VECTOR_LEGACY_REALISTIC"])
      {
        unsigned int v3 = 256;
LABEL_193:
        uint64_t v2 = 19;
        goto LABEL_135;
      }
      if ([v4 isEqualToString:@"VECTOR_ROADS"])
      {
        unsigned int v3 = 256;
LABEL_200:
        uint64_t v2 = 20;
        goto LABEL_135;
      }
      if ([v4 isEqualToString:@"RASTER_VEGETATION"])
      {
        unsigned int v3 = 256;
LABEL_207:
        uint64_t v2 = 21;
        goto LABEL_135;
      }
      if ([v4 isEqualToString:@"VECTOR_TRAFFIC_SKELETON"])
      {
        unsigned int v3 = 256;
LABEL_214:
        uint64_t v2 = 22;
        goto LABEL_135;
      }
      if ([v4 isEqualToString:@"RASTER_COASTLINE_MASK"])
      {
        unsigned int v3 = 256;
LABEL_221:
        uint64_t v2 = 23;
        goto LABEL_135;
      }
      if ([v4 isEqualToString:@"RASTER_HILLSHADE"])
      {
        unsigned int v3 = 256;
LABEL_228:
        uint64_t v2 = 24;
        goto LABEL_135;
      }
      if ([v4 isEqualToString:@"VECTOR_TRAFFIC_WITH_GREEN"])
      {
        unsigned int v3 = 256;
LABEL_235:
        uint64_t v2 = 25;
        goto LABEL_135;
      }
      if ([v4 isEqualToString:@"VECTOR_TRAFFIC_STATIC"])
      {
        unsigned int v3 = 256;
LABEL_242:
        uint64_t v2 = 26;
        goto LABEL_135;
      }
      if ([v4 isEqualToString:@"RASTER_COASTLINE_DROP_MASK"])
      {
        unsigned int v3 = 256;
LABEL_249:
        uint64_t v2 = 27;
        goto LABEL_135;
      }
      if ([v4 isEqualToString:@"VECTOR_TRAFFIC_SKELETON_WITH_HISTORICAL"])
      {
        unsigned int v3 = 256;
LABEL_256:
        uint64_t v2 = 28;
        goto LABEL_135;
      }
      if ([v4 isEqualToString:@"VECTOR_SPEED_PROFILES"])
      {
        unsigned int v3 = 256;
LABEL_263:
        uint64_t v2 = 29;
        goto LABEL_135;
      }
      if ([v4 isEqualToString:@"VECTOR_VENUES"])
      {
        unsigned int v3 = 256;
LABEL_270:
        uint64_t v2 = 30;
        goto LABEL_135;
      }
      if ([v4 isEqualToString:@"RASTER_DOWN_SAMPLED"])
      {
        unsigned int v3 = 256;
LABEL_277:
        uint64_t v2 = 31;
        goto LABEL_135;
      }
      if ([v4 isEqualToString:@"RASTER_COLOR_BALANCED"])
      {
        unsigned int v3 = 256;
        uint64_t v2 = 32;
        goto LABEL_135;
      }
      if ([v4 isEqualToString:@"RASTER_SATELLITE_NIGHT"])
      {
        unsigned int v3 = 256;
        uint64_t v2 = 33;
        goto LABEL_135;
      }
      if ([v4 isEqualToString:@"SPUTNIK_VECTOR_BORDER"])
      {
        unsigned int v3 = 256;
        uint64_t v2 = 34;
        goto LABEL_135;
      }
      if ([v4 isEqualToString:@"RASTER_SATELLITE_DIGITIZE"])
      {
        unsigned int v3 = 256;
        uint64_t v2 = 35;
        goto LABEL_135;
      }
      if ([v4 isEqualToString:@"RASTER_HILLSHADE_PARKS"])
      {
        unsigned int v3 = 256;
LABEL_332:
        uint64_t v2 = 36;
        goto LABEL_135;
      }
      if ([v4 isEqualToString:@"VECTOR_TRANSIT"])
      {
        unsigned int v3 = 256;
LABEL_339:
        uint64_t v2 = 37;
        goto LABEL_135;
      }
      if ([v4 isEqualToString:@"RASTER_STANDARD_BASE"])
      {
        unsigned int v3 = 256;
LABEL_346:
        uint64_t v2 = 38;
        goto LABEL_135;
      }
      if ([v4 isEqualToString:@"RASTER_STANDARD_LABELS"])
      {
        unsigned int v3 = 256;
LABEL_353:
        uint64_t v2 = 39;
        goto LABEL_135;
      }
      if ([v4 isEqualToString:@"RASTER_HYBRID_ROADS"])
      {
        unsigned int v3 = 256;
LABEL_360:
        uint64_t v2 = 40;
        goto LABEL_135;
      }
      if ([v4 isEqualToString:@"RASTER_HYBRID_LABELS"])
      {
        unsigned int v3 = 256;
LABEL_367:
        uint64_t v2 = 41;
        goto LABEL_135;
      }
      if ([v4 isEqualToString:@"FLYOVER_C3M_MESH"])
      {
        unsigned int v3 = 256;
LABEL_374:
        uint64_t v2 = 42;
        goto LABEL_135;
      }
      if ([v4 isEqualToString:@"FLYOVER_C3M_JPEG_TEXTURE"])
      {
        unsigned int v3 = 256;
LABEL_381:
        uint64_t v2 = 43;
        goto LABEL_135;
      }
      if ([v4 isEqualToString:@"FLYOVER_C3M_ASTC_TEXTURE"])
      {
        unsigned int v3 = 256;
LABEL_388:
        uint64_t v2 = 44;
        goto LABEL_135;
      }
      if ([v4 isEqualToString:@"RASTER_SATELLITE_ASTC"])
      {
        unsigned int v3 = 256;
        goto LABEL_395;
      }
      if ([v4 isEqualToString:@"RASTER_HYBRID_ROADS_AND_LABELS"])
      {
        unsigned int v3 = 256;
LABEL_398:
        uint64_t v2 = 46;
        goto LABEL_135;
      }
      if ([v4 isEqualToString:@"VECTOR_TRANSIT_SELECTION"])
      {
        unsigned int v3 = 256;
LABEL_405:
        uint64_t v2 = 47;
        goto LABEL_135;
      }
      if ([v4 isEqualToString:@"VECTOR_COVERAGE"])
      {
        unsigned int v3 = 256;
LABEL_412:
        uint64_t v2 = 48;
        goto LABEL_135;
      }
      if ([v4 isEqualToString:@"FLYOVER_METADATA"])
      {
        unsigned int v3 = 256;
LABEL_437:
        uint64_t v2 = 52;
        goto LABEL_135;
      }
      if ([v4 isEqualToString:@"VECTOR_ROAD_NETWORK"])
      {
        unsigned int v3 = 256;
LABEL_444:
        uint64_t v2 = 53;
        goto LABEL_135;
      }
      if ([v4 isEqualToString:@"VECTOR_LAND_COVER"])
      {
        unsigned int v3 = 256;
LABEL_451:
        uint64_t v2 = 54;
        goto LABEL_135;
      }
      if ([v4 isEqualToString:@"VECTOR_DEBUG"])
      {
        unsigned int v3 = 256;
LABEL_458:
        uint64_t v2 = 55;
        goto LABEL_135;
      }
      if ([v4 isEqualToString:@"VECTOR_STREET_POI"])
      {
        unsigned int v3 = 256;
LABEL_465:
        uint64_t v2 = 56;
        goto LABEL_135;
      }
      if ([v4 isEqualToString:@"MUNIN_METADATA"])
      {
        unsigned int v3 = 256;
LABEL_472:
        uint64_t v2 = 57;
        goto LABEL_135;
      }
      if ([v4 isEqualToString:@"VECTOR_SPR_MERCATOR"])
      {
        unsigned int v3 = 256;
LABEL_479:
        uint64_t v2 = 58;
        goto LABEL_135;
      }
      if ([v4 isEqualToString:@"VECTOR_SPR_MODELS"])
      {
        unsigned int v3 = 256;
LABEL_486:
        uint64_t v2 = 59;
        goto LABEL_135;
      }
      if ([v4 isEqualToString:@"VECTOR_SPR_MATERIALS"])
      {
        unsigned int v3 = 256;
LABEL_493:
        uint64_t v2 = 60;
        goto LABEL_135;
      }
      if (([v4 isEqualToString:@"VECTOR_SPR_METADATA"] & 1) == 0)
      {
        if ([v4 isEqualToString:@"VECTOR_TRACKS"])
        {
          unsigned int v3 = 256;
          uint64_t v2 = 62;
          goto LABEL_135;
        }
        if ([v4 isEqualToString:@"VECTOR_RESERVED_2"])
        {
          unsigned int v3 = 256;
          uint64_t v2 = 63;
          goto LABEL_135;
        }
        if ([v4 isEqualToString:@"VECTOR_STREET_LANDMARKS"])
        {
          unsigned int v3 = 256;
          uint64_t v2 = 64;
          goto LABEL_135;
        }
        if ([v4 isEqualToString:@"COARSE_LOCATION_POLYGONS"])
        {
          unsigned int v3 = 256;
          uint64_t v2 = 65;
          goto LABEL_135;
        }
        if ([v4 isEqualToString:@"VECTOR_SPR_ROADS"])
        {
          unsigned int v3 = 256;
          uint64_t v2 = 66;
          goto LABEL_135;
        }
        if ([v4 isEqualToString:@"VECTOR_SPR_STANDARD"])
        {
          unsigned int v3 = 256;
          uint64_t v2 = 67;
          goto LABEL_135;
        }
        if ([v4 isEqualToString:@"VECTOR_POI_V2"])
        {
          unsigned int v3 = 256;
          uint64_t v2 = 68;
          goto LABEL_135;
        }
        if ([v4 isEqualToString:@"VECTOR_POLYGON_SELECTION"])
        {
          unsigned int v3 = 256;
          uint64_t v2 = 69;
          goto LABEL_135;
        }
        if ([v4 isEqualToString:@"VL_METADATA"])
        {
          unsigned int v3 = 256;
          uint64_t v2 = 70;
          goto LABEL_135;
        }
        if ([v4 isEqualToString:@"VL_DATA"])
        {
          unsigned int v3 = 256;
          uint64_t v2 = 71;
          goto LABEL_135;
        }
        if ([v4 isEqualToString:@"PROACTIVE_APP_CLIP"])
        {
          unsigned int v3 = 256;
          uint64_t v2 = 72;
          goto LABEL_135;
        }
        if ([v4 isEqualToString:@"VECTOR_BUILDINGS_V2"])
        {
          unsigned int v3 = 256;
          uint64_t v2 = 73;
          goto LABEL_135;
        }
        if ([v4 isEqualToString:@"POI_BUSYNESS"])
        {
          unsigned int v3 = 256;
          uint64_t v2 = 74;
          goto LABEL_135;
        }
        if ([v4 isEqualToString:@"POI_DP_BUSYNESS"])
        {
          unsigned int v3 = 256;
          uint64_t v2 = 75;
          goto LABEL_135;
        }
        if ([v4 isEqualToString:@"SMART_INTERFACE_SELECTION"])
        {
          unsigned int v3 = 256;
          uint64_t v2 = 76;
          goto LABEL_135;
        }
        if ([v4 isEqualToString:@"VECTOR_ASSETS"])
        {
          unsigned int v3 = 256;
          uint64_t v2 = 77;
          goto LABEL_135;
        }
        if ([v4 isEqualToString:@"SPR_ASSET_METADATA"])
        {
          unsigned int v3 = 256;
          uint64_t v2 = 78;
          goto LABEL_135;
        }
        if ([v4 isEqualToString:@"VECTOR_SPR_POLAR"])
        {
          unsigned int v3 = 256;
          uint64_t v2 = 79;
          goto LABEL_135;
        }
        if ([v4 isEqualToString:@"SMART_DATA_MODE"])
        {
          unsigned int v3 = 256;
          uint64_t v2 = 80;
          goto LABEL_135;
        }
        if ([v4 isEqualToString:@"CELLULAR_PERFORMANCE_SCORE"])
        {
          unsigned int v3 = 256;
          uint64_t v2 = 81;
          goto LABEL_135;
        }
        if ([v4 isEqualToString:@"VECTOR_SPR_MODELS_OCCLUSION"])
        {
          unsigned int v3 = 256;
          uint64_t v2 = 82;
          goto LABEL_135;
        }
        if ([v4 isEqualToString:@"VECTOR_TOPOGRAPHIC"])
        {
          unsigned int v3 = 256;
          uint64_t v2 = 83;
          goto LABEL_135;
        }
        if ([v4 isEqualToString:@"VECTOR_POI_V2_UPDATE"])
        {
          unsigned int v3 = 256;
          uint64_t v2 = 84;
          goto LABEL_135;
        }
        if ([v4 isEqualToString:@"VECTOR_LIVE_DATA_UPDATES"])
        {
          unsigned int v3 = 256;
          uint64_t v2 = 85;
          goto LABEL_135;
        }
        if ([v4 isEqualToString:@"VECTOR_TRAFFIC_V2"])
        {
          unsigned int v3 = 256;
          uint64_t v2 = 86;
          goto LABEL_135;
        }
        if ([v4 isEqualToString:@"VECTOR_ROAD_SELECTION"])
        {
          unsigned int v3 = 256;
          uint64_t v2 = 87;
          goto LABEL_135;
        }
        if ([v4 isEqualToString:@"VECTOR_REGION_METADATA"])
        {
          unsigned int v3 = 256;
          uint64_t v2 = 88;
          goto LABEL_135;
        }
        if ([v4 isEqualToString:@"RAY_TRACING"])
        {
          unsigned int v3 = 256;
          uint64_t v2 = 89;
          goto LABEL_135;
        }
        if ([v4 isEqualToString:@"VECTOR_CONTOURS"])
        {
          unsigned int v3 = 256;
          uint64_t v2 = 90;
          goto LABEL_135;
        }
        if ([v4 isEqualToString:@"RASTER_SATELLITE_POLAR"])
        {
          unsigned int v3 = 256;
          uint64_t v2 = 91;
          goto LABEL_135;
        }
        if ([v4 isEqualToString:@"VMAP4_ELEVATION"])
        {
          unsigned int v3 = 256;
          uint64_t v2 = 92;
          goto LABEL_135;
        }
        if ([v4 isEqualToString:@"VMAP4_ELEVATION_POLAR"])
        {
          unsigned int v3 = 256;
          uint64_t v2 = 93;
          goto LABEL_135;
        }
        if ([v4 isEqualToString:@"CELLULAR_COVERAGE_PLMN"])
        {
          unsigned int v3 = 256;
          uint64_t v2 = 94;
          goto LABEL_135;
        }
        if ([v4 isEqualToString:@"RASTER_SATELLITE_POLAR_NIGHT"])
        {
          unsigned int v3 = 256;
          uint64_t v2 = 95;
          goto LABEL_135;
        }
        if ([v4 isEqualToString:@"UNUSED_96"])
        {
          unsigned int v3 = 256;
          uint64_t v2 = 96;
          goto LABEL_135;
        }
        if ([v4 isEqualToString:@"UNUSED_97"])
        {
          unsigned int v3 = 256;
          uint64_t v2 = 97;
          goto LABEL_135;
        }
        if ([v4 isEqualToString:@"UNUSED_98"])
        {
          unsigned int v3 = 256;
          uint64_t v2 = 98;
          goto LABEL_135;
        }
        if ([v4 isEqualToString:@"UNUSED_99"])
        {
          unsigned int v3 = 256;
          uint64_t v2 = 99;
          goto LABEL_135;
        }
        if ([v4 isEqualToString:@"UNUSED_100"])
        {
          unsigned int v3 = 256;
          uint64_t v2 = 100;
          goto LABEL_135;
        }
        if ([v4 isEqualToString:@"UNUSED_101"])
        {
          unsigned int v3 = 256;
          uint64_t v2 = 101;
          goto LABEL_135;
        }
        if ([v4 isEqualToString:@"UNUSED_102"])
        {
          unsigned int v3 = 256;
          uint64_t v2 = 102;
          goto LABEL_135;
        }
        if ([v4 isEqualToString:@"UNUSED_103"])
        {
          unsigned int v3 = 256;
          uint64_t v2 = 103;
          goto LABEL_135;
        }
        if ([v4 isEqualToString:@"UNUSED_104"])
        {
          unsigned int v3 = 256;
          uint64_t v2 = 104;
          goto LABEL_135;
        }
        if ([v4 isEqualToString:@"UNUSED_105"])
        {
          unsigned int v3 = 256;
          uint64_t v2 = 105;
          goto LABEL_135;
        }
        if ([v4 isEqualToString:@"UNUSED_106"])
        {
          unsigned int v3 = 256;
          uint64_t v2 = 106;
          goto LABEL_135;
        }
        if ([v4 isEqualToString:@"UNUSED_107"])
        {
          unsigned int v3 = 256;
          uint64_t v2 = 107;
          goto LABEL_135;
        }
        if ([v4 isEqualToString:@"UNUSED_108"])
        {
          unsigned int v3 = 256;
          uint64_t v2 = 108;
          goto LABEL_135;
        }
        if ([v4 isEqualToString:@"UNUSED_109"])
        {
          unsigned int v3 = 256;
          uint64_t v2 = 109;
          goto LABEL_135;
        }
        if ([v4 isEqualToString:@"UNUSED_110"])
        {
          unsigned int v3 = 256;
          uint64_t v2 = 110;
          goto LABEL_135;
        }
        if ([v4 isEqualToString:@"UNUSED_111"])
        {
          unsigned int v3 = 256;
          uint64_t v2 = 111;
          goto LABEL_135;
        }
        if ([v4 isEqualToString:@"UNUSED_112"])
        {
          unsigned int v3 = 256;
          uint64_t v2 = 112;
          goto LABEL_135;
        }
        if ([v4 isEqualToString:@"UNUSED_113"])
        {
          unsigned int v3 = 256;
          uint64_t v2 = 113;
          goto LABEL_135;
        }
        if ([v4 isEqualToString:@"UNUSED_114"])
        {
          unsigned int v3 = 256;
          uint64_t v2 = 114;
          goto LABEL_135;
        }
        if ([v4 isEqualToString:@"UNUSED_115"])
        {
          unsigned int v3 = 256;
          uint64_t v2 = 115;
          goto LABEL_135;
        }
        if ([v4 isEqualToString:@"UNUSED_116"])
        {
          unsigned int v3 = 256;
          uint64_t v2 = 116;
          goto LABEL_135;
        }
        if ([v4 isEqualToString:@"UNUSED_117"])
        {
          unsigned int v3 = 256;
          uint64_t v2 = 117;
          goto LABEL_135;
        }
        if ([v4 isEqualToString:@"UNUSED_118"])
        {
          unsigned int v3 = 256;
          uint64_t v2 = 118;
          goto LABEL_135;
        }
        if ([v4 isEqualToString:@"UNUSED_119"]) {
          uint64_t v2 = 119;
        }
        else {
          uint64_t v2 = 0;
        }
        goto LABEL_57;
      }
      unsigned int v3 = 256;
LABEL_500:
      uint64_t v2 = 61;
      goto LABEL_135;
    }
    if ([v1 hasPrefix:@"PlaceRequest."])
    {
      if ((unint64_t)[v1 length] < 0xE)
      {
        uint64_t v2 = 0;
        unsigned int v3 = 768;
        goto LABEL_137;
      }
      id v4 = [v1 substringFromIndex:13];
      if ([v4 isEqualToString:@"REQUEST_TYPE_UNKNOWN"])
      {
        uint64_t v2 = 0;
        goto LABEL_62;
      }
      if ([v4 isEqualToString:@"REQUEST_TYPE_SEARCH"])
      {
        unsigned int v3 = 768;
        goto LABEL_83;
      }
      if ([v4 isEqualToString:@"REQUEST_TYPE_GEOCODING"])
      {
        unsigned int v3 = 768;
        goto LABEL_91;
      }
      if ([v4 isEqualToString:@"REQUEST_TYPE_CANONICAL_LOCATION_SEARCH"])
      {
        unsigned int v3 = 768;
        goto LABEL_98;
      }
      if ([v4 isEqualToString:@"REQUEST_TYPE_REVERSE_GEOCODING"])
      {
        unsigned int v3 = 768;
        goto LABEL_105;
      }
      if ([v4 isEqualToString:@"REQUEST_TYPE_PLACE_LOOKUP"])
      {
        unsigned int v3 = 768;
        goto LABEL_112;
      }
      if ([v4 isEqualToString:@"REQUEST_TYPE_MERCHANT_LOOKUP"])
      {
        unsigned int v3 = 768;
        goto LABEL_119;
      }
      if ([v4 isEqualToString:@"REQUEST_TYPE_PLACE_REFINEMENT"])
      {
        unsigned int v3 = 768;
        goto LABEL_126;
      }
      if ([v4 isEqualToString:@"REQUEST_TYPE_SIRI_SEARCH"])
      {
        unsigned int v3 = 768;
        goto LABEL_134;
      }
      if ([v4 isEqualToString:@"REQUEST_TYPE_LOCATION_DIRECTED_SEARCH"])
      {
        unsigned int v3 = 768;
LABEL_145:
        uint64_t v2 = 9;
        goto LABEL_135;
      }
      if ([v4 isEqualToString:@"REQUEST_TYPE_AUTOCOMPLETE"])
      {
        unsigned int v3 = 768;
LABEL_153:
        uint64_t v2 = 10;
        goto LABEL_135;
      }
      if ([v4 isEqualToString:@"REQUEST_TYPE_BROWSE_CATEGORY_SUGGESTION"])
      {
        unsigned int v3 = 768;
        goto LABEL_131;
      }
      if ([v4 isEqualToString:@"REQUEST_TYPE_CATEGORY_SEARCH"])
      {
        unsigned int v3 = 768;
        goto LABEL_142;
      }
      if ([v4 isEqualToString:@"REQUEST_TYPE_POPULAR_NEARBY_SEARCH"])
      {
        unsigned int v3 = 768;
        goto LABEL_150;
      }
      if ([v4 isEqualToString:@"REQUEST_TYPE_ZERO_KEYWORD_CATEGORY_SUGGESTION"])
      {
        unsigned int v3 = 768;
        goto LABEL_158;
      }
      if ([v4 isEqualToString:@"REQUEST_TYPE_SEARCH_FIELD_PLACEHOLDER"])
      {
        unsigned int v3 = 768;
        goto LABEL_165;
      }
      if ([v4 isEqualToString:@"REQUEST_TYPE_BATCH_POPULAR_NEARBY_SEARCH"])
      {
        unsigned int v3 = 768;
        goto LABEL_172;
      }
      if ([v4 isEqualToString:@"REQUEST_TYPE_VENDOR_SPECIFIC_PLACE_REFINEMENT"])
      {
        unsigned int v3 = 768;
        goto LABEL_179;
      }
      if ([v4 isEqualToString:@"REQUEST_TYPE_NEARBY_SEARCH"])
      {
        unsigned int v3 = 768;
        goto LABEL_186;
      }
      if ([v4 isEqualToString:@"REQUEST_TYPE_ADDRESS_OBJECT_GEOCODING"])
      {
        unsigned int v3 = 768;
        goto LABEL_193;
      }
      if ([v4 isEqualToString:@"REQUEST_TYPE_ZERO_KEYWORD_WITH_SEARCH_RESULTS_SUGGESTION"])
      {
        unsigned int v3 = 768;
        goto LABEL_200;
      }
      if ([v4 isEqualToString:@"REQUEST_TYPE_EXTERNAL_TRANSIT_LOOKUP"])
      {
        unsigned int v3 = 768;
        goto LABEL_207;
      }
      if ([v4 isEqualToString:@"REQUEST_TYPE_FEATURE_ID_GEOCODING"])
      {
        unsigned int v3 = 768;
        goto LABEL_214;
      }
      if ([v4 isEqualToString:@"REQUEST_TYPE_MAPS_IDENTIFIER_PLACE_LOOKUP"])
      {
        unsigned int v3 = 768;
        goto LABEL_221;
      }
      if ([v4 isEqualToString:@"REQUEST_TYPE_DATASET_STATUS_CHECK"])
      {
        unsigned int v3 = 768;
        goto LABEL_228;
      }
      if ([v4 isEqualToString:@"REQUEST_TYPE_OFFLINE_AREA_LOOKUP"])
      {
        unsigned int v3 = 768;
        goto LABEL_235;
      }
      if ([v4 isEqualToString:@"REQUEST_TYPE_BATCH_REVERSE_GEOCODING"])
      {
        unsigned int v3 = 768;
        goto LABEL_242;
      }
      if ([v4 isEqualToString:@"REQUEST_TYPE_OFFLINE_SUGGESTED_REGIONS"])
      {
        unsigned int v3 = 768;
        goto LABEL_249;
      }
      if ([v4 isEqualToString:@"REQUEST_TYPE_OFFLINE_POLYGON_QUAD_NODES"])
      {
        unsigned int v3 = 768;
        goto LABEL_256;
      }
      if ([v4 isEqualToString:@"REQUEST_TYPE_OFFLINE_PROACTIVE_REGIONS"])
      {
        unsigned int v3 = 768;
        goto LABEL_263;
      }
      if ([v4 isEqualToString:@"REQUEST_TYPE_BRAND_LOOKUP"])
      {
        unsigned int v3 = 768;
        goto LABEL_270;
      }
      if ([v4 isEqualToString:@"REQUEST_TYPE_OFFLINE_UPDATE_MANIFEST"])
      {
        unsigned int v3 = 768;
        goto LABEL_277;
      }
      if ([v4 isEqualToString:@"REQUEST_TYPE_WIFI_FINGERPRINT_LOOKUP"])
      {
        unsigned int v3 = 768;
LABEL_304:
        uint64_t v2 = 32;
        goto LABEL_135;
      }
      if ([v4 isEqualToString:@"REQUEST_TYPE_INITIAL_OFFLINE_SUGGESTION"])
      {
        unsigned int v3 = 768;
LABEL_311:
        uint64_t v2 = 33;
        goto LABEL_135;
      }
      if ([v4 isEqualToString:@"REQUEST_TYPE_IP_GEO_LOOKUP"])
      {
        unsigned int v3 = 768;
LABEL_318:
        uint64_t v2 = 34;
        goto LABEL_135;
      }
      if (([v4 isEqualToString:@"REQUEST_TYPE_GROUND_VIEW_LABEL"] & 1) == 0)
      {
        if ([v4 isEqualToString:@"REQUEST_TYPE_BATCH_SPATIAL_LOOKUP"])
        {
          unsigned int v3 = 768;
          goto LABEL_332;
        }
        if ([v4 isEqualToString:@"REQUEST_TYPE_TRANSIT_VEHICLE_POSITION"])
        {
          unsigned int v3 = 768;
          goto LABEL_339;
        }
        if ([v4 isEqualToString:@"REQUEST_TYPE_PLACE_COLLECTION_LOOKUP"])
        {
          unsigned int v3 = 768;
          goto LABEL_346;
        }
        if ([v4 isEqualToString:@"REQUEST_TYPE_TRANSIT_SCHEDULE_LOOKUP"])
        {
          unsigned int v3 = 768;
          goto LABEL_353;
        }
        if ([v4 isEqualToString:@"REQUEST_TYPE_BATCH_CATEGORY_LOOKUP"])
        {
          unsigned int v3 = 768;
          goto LABEL_360;
        }
        if ([v4 isEqualToString:@"REQUEST_TYPE_BATCH_MERCHANT_LOOKUP_BRAND"])
        {
          unsigned int v3 = 768;
          goto LABEL_367;
        }
        if ([v4 isEqualToString:@"REQUEST_TYPE_CHILD_PLACE_LOOKUP_BY_CATEGORY"])
        {
          unsigned int v3 = 768;
          goto LABEL_374;
        }
        if ([v4 isEqualToString:@"REQUEST_TYPE_COLLECTION_SUGGESTION"])
        {
          unsigned int v3 = 768;
          goto LABEL_381;
        }
        if ([v4 isEqualToString:@"REQUEST_TYPE_MAPS_SEARCH_HOME"])
        {
          unsigned int v3 = 768;
          goto LABEL_388;
        }
        if ([v4 isEqualToString:@"REQUEST_TYPE_PLACE_QUESTIONNAIRE_LOOKUP"])
        {
          unsigned int v3 = 768;
          goto LABEL_395;
        }
        if ([v4 isEqualToString:@"REQUEST_TYPE_PUBLISHER_VIEW"])
        {
          unsigned int v3 = 768;
          goto LABEL_398;
        }
        if ([v4 isEqualToString:@"REQUEST_TYPE_ALL_COLLECTIONS_VIEW"])
        {
          unsigned int v3 = 768;
          goto LABEL_405;
        }
        if ([v4 isEqualToString:@"REQUEST_TYPE_AIRPORT_ENTITY_PLACE_LOOKUP"])
        {
          unsigned int v3 = 768;
          goto LABEL_412;
        }
        if ([v4 isEqualToString:@"REQUEST_TYPE_TERRITORY_LOOKUP"])
        {
          unsigned int v3 = 768;
          uint64_t v2 = 49;
          goto LABEL_135;
        }
        if ([v4 isEqualToString:@"REQUEST_TYPE_TRANSIT_NEARBY_SCHEDULE_LOOKUP"])
        {
          unsigned int v3 = 768;
          uint64_t v2 = 50;
          goto LABEL_135;
        }
        if ([v4 isEqualToString:@"REQUEST_TYPE_MAPS_HOME"])
        {
          unsigned int v3 = 768;
          uint64_t v2 = 51;
          goto LABEL_135;
        }
        if ([v4 isEqualToString:@"REQUEST_TYPE_ALL_GUIDES_LOCATIONS"])
        {
          unsigned int v3 = 768;
          goto LABEL_437;
        }
        if ([v4 isEqualToString:@"REQUEST_TYPE_GUIDES_HOME"])
        {
          unsigned int v3 = 768;
          goto LABEL_444;
        }
        if ([v4 isEqualToString:@"REQUEST_TYPE_EXTENDED_GEO_LOOKUP"])
        {
          unsigned int v3 = 768;
          goto LABEL_451;
        }
        if ([v4 isEqualToString:@"REQUEST_TYPE_QUERY_UNDERSTANDING"])
        {
          unsigned int v3 = 768;
          goto LABEL_458;
        }
        if ([v4 isEqualToString:@"REQUEST_TYPE_POI_AT_ADDRESS_LOOKUP"])
        {
          unsigned int v3 = 768;
          goto LABEL_465;
        }
        if ([v4 isEqualToString:@"REQUEST_TYPE_TRANSIT_NEARBY_PAYMENT_METHOD_LOOKUP"])
        {
          unsigned int v3 = 768;
          goto LABEL_472;
        }
        if ([v4 isEqualToString:@"REQUEST_TYPE_PLACECARD_ENRICHMENT"])
        {
          unsigned int v3 = 768;
          goto LABEL_479;
        }
        if ([v4 isEqualToString:@"REQUEST_TYPE_OFFLINE_REGION_NAME"])
        {
          unsigned int v3 = 768;
          goto LABEL_486;
        }
        if ([v4 isEqualToString:@"REQUEST_TYPE_SEARCH_CAPABILITIES"])
        {
          unsigned int v3 = 768;
          goto LABEL_493;
        }
        if ([v4 isEqualToString:@"REQUEST_TYPE_REFRESH_ID_LOOKUP"])
        {
          unsigned int v3 = 768;
          goto LABEL_500;
        }
        if ([v4 isEqualToString:@"REQUEST_TYPE_ADDRESS_RECOMMENDATION"]) {
          uint64_t v2 = 62;
        }
        else {
          uint64_t v2 = 0;
        }
LABEL_62:
        unsigned int v3 = 768;
        goto LABEL_135;
      }
      unsigned int v3 = 768;
    }
    else
    {
      if (![v1 hasPrefix:@"BackgroundPlaceRequest."])
      {
        if (!objc_msgSend(v1, "hasPrefix:", @"Unknown(") {
          || (unint64_t)[v1 length] < 0xB)
        }
        {
          uint64_t v2 = 0;
          unsigned int v3 = 0;
          goto LABEL_137;
        }
        id v5 = objc_msgSend(v1, "substringWithRange:", 8, objc_msgSend(v1, "length") - 9);
        id v4 = [v5 componentsSeparatedByString:@"."];
        if ([v4 count] == 2)
        {
          uint64_t v6 = [v4 objectAtIndexedSubscript:0];
          unsigned int v3 = [v6 intValue];
          uint64_t v7 = [v4 objectAtIndexedSubscript:1];
          uint64_t v2 = [v7 intValue];
        }
        else
        {
          uint64_t v2 = 0;
          unsigned int v3 = 0;
        }
LABEL_136:

        goto LABEL_137;
      }
      if ((unint64_t)[v1 length] < 0x18)
      {
        uint64_t v2 = 0;
        unsigned int v3 = 1280;
        goto LABEL_137;
      }
      id v4 = [v1 substringFromIndex:23];
      if ([v4 isEqualToString:@"REQUEST_TYPE_UNKNOWN"])
      {
        uint64_t v2 = 0;
        unsigned int v3 = 1280;
        goto LABEL_135;
      }
      if ([v4 isEqualToString:@"REQUEST_TYPE_SEARCH"])
      {
        unsigned int v3 = 1280;
        goto LABEL_83;
      }
      if ([v4 isEqualToString:@"REQUEST_TYPE_GEOCODING"])
      {
        unsigned int v3 = 1280;
        goto LABEL_91;
      }
      if ([v4 isEqualToString:@"REQUEST_TYPE_CANONICAL_LOCATION_SEARCH"])
      {
        unsigned int v3 = 1280;
        goto LABEL_98;
      }
      if ([v4 isEqualToString:@"REQUEST_TYPE_REVERSE_GEOCODING"])
      {
        unsigned int v3 = 1280;
        goto LABEL_105;
      }
      if ([v4 isEqualToString:@"REQUEST_TYPE_PLACE_LOOKUP"])
      {
        unsigned int v3 = 1280;
        goto LABEL_112;
      }
      if ([v4 isEqualToString:@"REQUEST_TYPE_MERCHANT_LOOKUP"])
      {
        unsigned int v3 = 1280;
        goto LABEL_119;
      }
      if ([v4 isEqualToString:@"REQUEST_TYPE_PLACE_REFINEMENT"])
      {
        unsigned int v3 = 1280;
        goto LABEL_126;
      }
      if ([v4 isEqualToString:@"REQUEST_TYPE_SIRI_SEARCH"])
      {
        unsigned int v3 = 1280;
        goto LABEL_134;
      }
      if ([v4 isEqualToString:@"REQUEST_TYPE_LOCATION_DIRECTED_SEARCH"])
      {
        unsigned int v3 = 1280;
        goto LABEL_145;
      }
      if ([v4 isEqualToString:@"REQUEST_TYPE_AUTOCOMPLETE"])
      {
        unsigned int v3 = 1280;
        goto LABEL_153;
      }
      if ([v4 isEqualToString:@"REQUEST_TYPE_BROWSE_CATEGORY_SUGGESTION"])
      {
        unsigned int v3 = 1280;
        goto LABEL_131;
      }
      if ([v4 isEqualToString:@"REQUEST_TYPE_CATEGORY_SEARCH"])
      {
        unsigned int v3 = 1280;
        goto LABEL_142;
      }
      if ([v4 isEqualToString:@"REQUEST_TYPE_POPULAR_NEARBY_SEARCH"])
      {
        unsigned int v3 = 1280;
        goto LABEL_150;
      }
      if ([v4 isEqualToString:@"REQUEST_TYPE_ZERO_KEYWORD_CATEGORY_SUGGESTION"])
      {
        unsigned int v3 = 1280;
        goto LABEL_158;
      }
      if ([v4 isEqualToString:@"REQUEST_TYPE_SEARCH_FIELD_PLACEHOLDER"])
      {
        unsigned int v3 = 1280;
        goto LABEL_165;
      }
      if ([v4 isEqualToString:@"REQUEST_TYPE_BATCH_POPULAR_NEARBY_SEARCH"])
      {
        unsigned int v3 = 1280;
        goto LABEL_172;
      }
      if ([v4 isEqualToString:@"REQUEST_TYPE_VENDOR_SPECIFIC_PLACE_REFINEMENT"])
      {
        unsigned int v3 = 1280;
        goto LABEL_179;
      }
      if ([v4 isEqualToString:@"REQUEST_TYPE_NEARBY_SEARCH"])
      {
        unsigned int v3 = 1280;
        goto LABEL_186;
      }
      if ([v4 isEqualToString:@"REQUEST_TYPE_ADDRESS_OBJECT_GEOCODING"])
      {
        unsigned int v3 = 1280;
        goto LABEL_193;
      }
      if ([v4 isEqualToString:@"REQUEST_TYPE_ZERO_KEYWORD_WITH_SEARCH_RESULTS_SUGGESTION"])
      {
        unsigned int v3 = 1280;
        goto LABEL_200;
      }
      if ([v4 isEqualToString:@"REQUEST_TYPE_EXTERNAL_TRANSIT_LOOKUP"])
      {
        unsigned int v3 = 1280;
        goto LABEL_207;
      }
      if ([v4 isEqualToString:@"REQUEST_TYPE_FEATURE_ID_GEOCODING"])
      {
        unsigned int v3 = 1280;
        goto LABEL_214;
      }
      if ([v4 isEqualToString:@"REQUEST_TYPE_MAPS_IDENTIFIER_PLACE_LOOKUP"])
      {
        unsigned int v3 = 1280;
        goto LABEL_221;
      }
      if ([v4 isEqualToString:@"REQUEST_TYPE_DATASET_STATUS_CHECK"])
      {
        unsigned int v3 = 1280;
        goto LABEL_228;
      }
      if ([v4 isEqualToString:@"REQUEST_TYPE_OFFLINE_AREA_LOOKUP"])
      {
        unsigned int v3 = 1280;
        goto LABEL_235;
      }
      if ([v4 isEqualToString:@"REQUEST_TYPE_BATCH_REVERSE_GEOCODING"])
      {
        unsigned int v3 = 1280;
        goto LABEL_242;
      }
      if ([v4 isEqualToString:@"REQUEST_TYPE_OFFLINE_SUGGESTED_REGIONS"])
      {
        unsigned int v3 = 1280;
        goto LABEL_249;
      }
      if ([v4 isEqualToString:@"REQUEST_TYPE_OFFLINE_POLYGON_QUAD_NODES"])
      {
        unsigned int v3 = 1280;
        goto LABEL_256;
      }
      if ([v4 isEqualToString:@"REQUEST_TYPE_OFFLINE_PROACTIVE_REGIONS"])
      {
        unsigned int v3 = 1280;
        goto LABEL_263;
      }
      if ([v4 isEqualToString:@"REQUEST_TYPE_BRAND_LOOKUP"])
      {
        unsigned int v3 = 1280;
        goto LABEL_270;
      }
      if ([v4 isEqualToString:@"REQUEST_TYPE_OFFLINE_UPDATE_MANIFEST"])
      {
        unsigned int v3 = 1280;
        goto LABEL_277;
      }
      if ([v4 isEqualToString:@"REQUEST_TYPE_WIFI_FINGERPRINT_LOOKUP"])
      {
        unsigned int v3 = 1280;
        goto LABEL_304;
      }
      if ([v4 isEqualToString:@"REQUEST_TYPE_INITIAL_OFFLINE_SUGGESTION"])
      {
        unsigned int v3 = 1280;
        goto LABEL_311;
      }
      if ([v4 isEqualToString:@"REQUEST_TYPE_IP_GEO_LOOKUP"])
      {
        unsigned int v3 = 1280;
        goto LABEL_318;
      }
      if (([v4 isEqualToString:@"REQUEST_TYPE_GROUND_VIEW_LABEL"] & 1) == 0)
      {
        if ([v4 isEqualToString:@"REQUEST_TYPE_BATCH_SPATIAL_LOOKUP"])
        {
          unsigned int v3 = 1280;
          goto LABEL_332;
        }
        if ([v4 isEqualToString:@"REQUEST_TYPE_TRANSIT_VEHICLE_POSITION"])
        {
          unsigned int v3 = 1280;
          goto LABEL_339;
        }
        if ([v4 isEqualToString:@"REQUEST_TYPE_PLACE_COLLECTION_LOOKUP"])
        {
          unsigned int v3 = 1280;
          goto LABEL_346;
        }
        if ([v4 isEqualToString:@"REQUEST_TYPE_TRANSIT_SCHEDULE_LOOKUP"])
        {
          unsigned int v3 = 1280;
          goto LABEL_353;
        }
        if ([v4 isEqualToString:@"REQUEST_TYPE_BATCH_CATEGORY_LOOKUP"])
        {
          unsigned int v3 = 1280;
          goto LABEL_360;
        }
        if ([v4 isEqualToString:@"REQUEST_TYPE_BATCH_MERCHANT_LOOKUP_BRAND"])
        {
          unsigned int v3 = 1280;
          goto LABEL_367;
        }
        if ([v4 isEqualToString:@"REQUEST_TYPE_CHILD_PLACE_LOOKUP_BY_CATEGORY"])
        {
          unsigned int v3 = 1280;
          goto LABEL_374;
        }
        if ([v4 isEqualToString:@"REQUEST_TYPE_COLLECTION_SUGGESTION"])
        {
          unsigned int v3 = 1280;
          goto LABEL_381;
        }
        if ([v4 isEqualToString:@"REQUEST_TYPE_MAPS_SEARCH_HOME"])
        {
          unsigned int v3 = 1280;
          goto LABEL_388;
        }
        if (([v4 isEqualToString:@"REQUEST_TYPE_PLACE_QUESTIONNAIRE_LOOKUP"] & 1) == 0)
        {
          if ([v4 isEqualToString:@"REQUEST_TYPE_PUBLISHER_VIEW"])
          {
            uint64_t v2 = 46;
          }
          else if ([v4 isEqualToString:@"REQUEST_TYPE_ALL_COLLECTIONS_VIEW"])
          {
            uint64_t v2 = 47;
          }
          else if ([v4 isEqualToString:@"REQUEST_TYPE_AIRPORT_ENTITY_PLACE_LOOKUP"])
          {
            uint64_t v2 = 48;
          }
          else if ([v4 isEqualToString:@"REQUEST_TYPE_TERRITORY_LOOKUP"])
          {
            uint64_t v2 = 49;
          }
          else if ([v4 isEqualToString:@"REQUEST_TYPE_TRANSIT_NEARBY_SCHEDULE_LOOKUP"])
          {
            uint64_t v2 = 50;
          }
          else if ([v4 isEqualToString:@"REQUEST_TYPE_MAPS_HOME"])
          {
            uint64_t v2 = 51;
          }
          else if ([v4 isEqualToString:@"REQUEST_TYPE_ALL_GUIDES_LOCATIONS"])
          {
            uint64_t v2 = 52;
          }
          else if ([v4 isEqualToString:@"REQUEST_TYPE_GUIDES_HOME"])
          {
            uint64_t v2 = 53;
          }
          else if ([v4 isEqualToString:@"REQUEST_TYPE_EXTENDED_GEO_LOOKUP"])
          {
            uint64_t v2 = 54;
          }
          else if ([v4 isEqualToString:@"REQUEST_TYPE_QUERY_UNDERSTANDING"])
          {
            uint64_t v2 = 55;
          }
          else if ([v4 isEqualToString:@"REQUEST_TYPE_POI_AT_ADDRESS_LOOKUP"])
          {
            uint64_t v2 = 56;
          }
          else if ([v4 isEqualToString:@"REQUEST_TYPE_TRANSIT_NEARBY_PAYMENT_METHOD_LOOKUP"])
          {
            uint64_t v2 = 57;
          }
          else if ([v4 isEqualToString:@"REQUEST_TYPE_PLACECARD_ENRICHMENT"])
          {
            uint64_t v2 = 58;
          }
          else if ([v4 isEqualToString:@"REQUEST_TYPE_OFFLINE_REGION_NAME"])
          {
            uint64_t v2 = 59;
          }
          else if ([v4 isEqualToString:@"REQUEST_TYPE_SEARCH_CAPABILITIES"])
          {
            uint64_t v2 = 60;
          }
          else if ([v4 isEqualToString:@"REQUEST_TYPE_REFRESH_ID_LOOKUP"])
          {
            uint64_t v2 = 61;
          }
          else if ([v4 isEqualToString:@"REQUEST_TYPE_ADDRESS_RECOMMENDATION"])
          {
            uint64_t v2 = 62;
          }
          else
          {
            uint64_t v2 = 0;
          }
          id v5 = v4;
          unsigned int v3 = 1280;
          goto LABEL_136;
        }
        unsigned int v3 = 1280;
LABEL_395:
        uint64_t v2 = 45;
        goto LABEL_135;
      }
      unsigned int v3 = 1280;
    }
    uint64_t v2 = 35;
    goto LABEL_135;
  }
  uint64_t v2 = 0;
  unsigned int v3 = 1;
LABEL_137:

  return v3 | (unint64_t)(v2 << 32);
}

void __GEODataRequestTimeout_block_invoke()
{
  uint64_t v0 = geo_isolater_create();
  id v1 = (void *)qword_1EB29F8E8;
  qword_1EB29F8E8 = v0;

  _MergedGlobals_220 = _GEOConfigHasValue(GeoServicesConfig_ResourceManifestEnvironment, (uint64_t)off_1E9113958);
  global_queue = (void *)geo_get_global_queue();
  uint64_t v3 = _GEOConfigAddBlockListenerForKey(GeoServicesConfig_ResourceManifestEnvironment, (uint64_t)off_1E9113958, global_queue, &__block_literal_global_250_0);
  id v4 = (void *)qword_1EB29F8F0;
  qword_1EB29F8F0 = v3;

  if (_MergedGlobals_220) {
    id v5 = (uint64_t *)&off_1E9114F28;
  }
  else {
    id v5 = (uint64_t *)&off_1E9114F18;
  }
  uint64_t v6 = *v5;
  if (_MergedGlobals_220) {
    uint64_t v7 = &GeoServicesConfig_RequestTypeTimeoutsForNonDefaultEnvironments;
  }
  else {
    uint64_t v7 = &GeoServicesConfig_RequestTypeTimeouts;
  }
  uint64_t v8 = *v7;
  _updateTimeoutWatcherIsolated(*v7, v6);
  uint64_t v9 = _loadTimeouts(v8, v6);
  unint64_t v10 = (void *)qword_1EB29F8F8;
  qword_1EB29F8F8 = v9;
}

void __GEODataRequestTimeout_block_invoke_2()
{
  int HasValue = _GEOConfigHasValue(GeoServicesConfig_ResourceManifestEnvironment, (uint64_t)off_1E9113958);
  uint64_t v5 = 0;
  uint64_t v6 = &v5;
  uint64_t v7 = 0x2020000000;
  char v8 = 0;
  geo_isolate_sync_data();
  if (*((unsigned __int8 *)v6 + 24) != HasValue)
  {
    BOOL v1 = HasValue == 0;
    if (HasValue) {
      uint64_t v2 = off_1E9114F28;
    }
    else {
      uint64_t v2 = off_1E9114F18;
    }
    if (v1) {
      int v3 = GeoServicesConfig_RequestTypeTimeouts;
    }
    else {
      int v3 = GeoServicesConfig_RequestTypeTimeoutsForNonDefaultEnvironments;
    }
    _loadTimeouts(v3, (uint64_t)v2);
    id v4 = (id)objc_claimAutoreleasedReturnValue();
    geo_isolate_sync_data();
  }
  _Block_object_dispose(&v5, 8);
}

void sub_1898B826C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  va_start(va, a17);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __GEODataRequestTimeout_block_invoke_3(uint64_t result)
{
  *(unsigned char *)(*(void *)(*(void *)(result + 32) + 8) + 24) = _MergedGlobals_220;
  _MergedGlobals_220 = *(unsigned char *)(result + 40);
  return result;
}

id _loadTimeouts(int a1, uint64_t a2)
{
  uint64_t v13 = *MEMORY[0x1E4F143B8];
  uint64_t v2 = _getValue(a1, a2, 1, 0, 0, 0);
  int v3 = objc_msgSend(MEMORY[0x1E4F1CA60], "dictionaryWithCapacity:", objc_msgSend(v2, "count"));
  v9[0] = MEMORY[0x1E4F143A8];
  v9[1] = 3221225472;
  v9[2] = ___loadTimeouts_block_invoke;
  v9[3] = &unk_1E53E0928;
  id v4 = v3;
  id v10 = v4;
  [v2 enumerateKeysAndObjectsUsingBlock:v9];
  uint64_t v5 = [v4 objectForKeyedSubscript:&unk_1ED73DB88];

  if (!v5) {
    [v4 setObject:&unk_1ED73F450 forKeyedSubscript:&unk_1ED73DB88];
  }
  uint64_t v6 = GEOGetDataRequestLog();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)buf = 138412290;
    id v12 = v4;
    _os_log_impl(&dword_188D96000, v6, OS_LOG_TYPE_DEBUG, "Loaded new timeouts: %@", buf, 0xCu);
  }

  uint64_t v7 = (void *)[v4 copy];

  return v7;
}

void __GEODataRequestTimeout_block_invoke_4(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 40);
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v3 = *(void *)(a1 + 56);
  uint64_t v5 = *(void *)(a1 + 64);
  if (v2 != v3 || v4 != v5) {
    _updateTimeoutWatcherIsolated(v3, v5);
  }
  uint64_t v7 = *(void **)(a1 + 32);

  objc_storeStrong((id *)&qword_1EB29F8F8, v7);
}

void _updateTimeoutWatcherIsolated(uint64_t a1, uint64_t a2)
{
  if (_timeoutWatcher)
  {
    GEOConfigRemoveBlockListener((void *)_timeoutWatcher);
    uint64_t v4 = (void *)_timeoutWatcher;
    _timeoutWatcher = 0;
  }
  global_queue = (void *)geo_get_global_queue();
  v8[0] = MEMORY[0x1E4F143A8];
  v8[1] = 3221225472;
  v8[2] = ___updateTimeoutWatcherIsolated_block_invoke;
  v8[3] = &__block_descriptor_48_e14_v24__0___I_v_8l;
  v8[4] = a1;
  v8[5] = a2;
  uint64_t v6 = _GEOConfigAddBlockListenerForKey(a1, a2, global_queue, v8);
  uint64_t v7 = (void *)_timeoutWatcher;
  _timeoutWatcher = v6;
}

void ___loadTimeouts_block_invoke(uint64_t a1, void *a2, void *a3)
{
  uint64_t v24 = *MEMORY[0x1E4F143B8];
  id v5 = a2;
  id v6 = a3;
  objc_opt_class();
  if (objc_opt_isKindOfClass() & 1) != 0 && (objc_opt_class(), (objc_opt_isKindOfClass()))
  {
    if ([v5 isEqual:@"default"])
    {
      unsigned int v7 = 0;
      int v8 = 0;
LABEL_13:
      [v6 doubleValue];
      uint64_t v17 = objc_msgSend(NSNumber, "numberWithDouble:", fmax(fmin(v16, 600.0), 1.0));
      unint64_t v18 = *(void **)(a1 + 32);
      char v19 = [NSNumber numberWithInt:v8 | v7];
      [v18 setObject:v17 forKeyedSubscript:v19];

      goto LABEL_14;
    }
    if ([v5 hasSuffix:@"*"])
    {
      uint64_t v14 = objc_msgSend(v5, "substringToIndex:", objc_msgSend(v5, "length") - 1);

      id v5 = (id)v14;
    }
    unint64_t v15 = GEODataRequestKindFromString(v5);
    unsigned int v7 = v15;
    if (v15)
    {
      int v8 = HIDWORD(v15);
      goto LABEL_13;
    }
    uint64_t v9 = GEOGetDataRequestLog();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
    {
      int v20 = 138412290;
      id v21 = v5;
      id v10 = "Unrecognized request type \"%@\"";
      uint64_t v11 = v9;
      os_log_type_t v12 = OS_LOG_TYPE_ERROR;
      uint32_t v13 = 12;
      goto LABEL_7;
    }
  }
  else
  {
    uint64_t v9 = GEOGetDataRequestLog();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_FAULT))
    {
      int v20 = 138412546;
      id v21 = v5;
      __int16 v22 = 2112;
      id v23 = v6;
      id v10 = "RequestTypeTimeouts key (%@) is not of type string or value (%@) is not of type number";
      uint64_t v11 = v9;
      os_log_type_t v12 = OS_LOG_TYPE_FAULT;
      uint32_t v13 = 22;
LABEL_7:
      _os_log_impl(&dword_188D96000, v11, v12, v10, (uint8_t *)&v20, v13);
    }
  }

LABEL_14:
}

id GEOGetDataRequestLog()
{
  if (qword_1EB29F910 != -1) {
    dispatch_once(&qword_1EB29F910, &__block_literal_global_803);
  }
  uint64_t v0 = (void *)qword_1EB29F908;

  return v0;
}

void __GEOGetDataRequestLog_block_invoke()
{
  os_log_t v0 = os_log_create("com.apple.GeoServices", "DataRequest");
  BOOL v1 = (void *)qword_1EB29F908;
  qword_1EB29F908 = (uint64_t)v0;
}

void ___updateTimeoutWatcherIsolated_block_invoke(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a1 + 32);
  uint64_t v6 = *(void *)(a1 + 40);
  if (v5 == a2 && v6 == a3)
  {
    uint64_t v9 = _loadTimeouts(v5, v6);
    id v8 = v9;
    geo_isolate_sync_data();
  }
}

void ___updateTimeoutWatcherIsolated_block_invoke_2(uint64_t a1)
{
}

void sub_1898B89CC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1898B8A34(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1898B8A94(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1898B8AF0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1898B8B60(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1898B8BF8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1898B8C4C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1898B8CD8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1898B9180(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1898B934C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1898B98CC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOWalletCategoryMappingReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOWalletCategoryMappingReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1898B9930(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOWalletCategoryMappingIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  int v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        unint64_t v10 = *(void *)&a1[v9];
        if (v10 == -1 || v10 >= *(void *)&a1[*v3]) {
          break;
        }
        char v11 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v13 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v14 = v8 & 7;
      if (v13 || v14 == 4) {
        break;
      }
      if ((v8 >> 3) == 2)
      {
        if (v14 != 2 || !PBReaderPlaceMark() || !GEOStyleAttributesIsValid(a1)) {
          goto LABEL_29;
        }
        PBReaderRecallMark();
      }
      else if ((v8 >> 3) == 1 && v14 != 2 || (PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_29:
        PBReaderRecallMark();
        return 0;
      }
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v16 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v16;
}

void sub_1898B9CA8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOWalletCategoryMappingIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  BOOL v2 = (*(unsigned char *)(a1 + 44) & 7) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return v2;
}

void sub_1898B9F48(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOWalletCategoryStylingMapReadFrom(void *a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOWalletCategoryStylingMapReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1898BA63C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOWalletCategoryStylingMapIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        unint64_t v10 = *(void *)&a1[v9];
        if (v10 == -1 || v10 >= *(void *)&a1[*v3]) {
          break;
        }
        char v11 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v13 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v14 = v8 & 7;
      if (v13 || v14 == 4) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if (v14 != 2 || !PBReaderPlaceMark() || !GEOWalletCategoryMappingIsValid(a1))
        {
LABEL_27:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_27;
      }
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v16 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v16;
}

BOOL GEOPDStorefrontIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] >= *(void *)&a1[*MEMORY[0x1E4F940E0]]) {
    goto LABEL_64;
  }
  uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
  do
  {
    if (a1[*v4]) {
      break;
    }
    char v6 = 0;
    unsigned int v7 = 0;
    unint64_t v8 = 0;
    while (1)
    {
      uint64_t v9 = *v2;
      unint64_t v10 = *(void *)&a1[v9];
      if (v10 == -1 || v10 >= *(void *)&a1[*v3]) {
        break;
      }
      char v11 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
      *(void *)&a1[v9] = v10 + 1;
      v8 |= (unint64_t)(v11 & 0x7F) << v6;
      if ((v11 & 0x80) == 0) {
        goto LABEL_12;
      }
      v6 += 7;
      BOOL v12 = v7++ >= 9;
      if (v12)
      {
        unint64_t v8 = 0;
        int v13 = a1[*v4];
        goto LABEL_14;
      }
    }
    a1[*v4] = 1;
LABEL_12:
    int v13 = a1[*v4];
    if (a1[*v4]) {
      unint64_t v8 = 0;
    }
LABEL_14:
    int v14 = v8 & 7;
    if (v13) {
      BOOL v15 = 1;
    }
    else {
      BOOL v15 = v14 == 4;
    }
    if (v15) {
      break;
    }
    if ((v8 >> 3) != 4)
    {
      if (PBReaderSkipValueWithTag()) {
        continue;
      }
LABEL_66:
      PBReaderRecallMark();
      return 0;
    }
    if (v14 != 2 || !PBReaderPlaceMark()) {
      goto LABEL_66;
    }
    objc_msgSend(a1, "position", 0, 0);
    [a1 length];
LABEL_22:
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3] && !a1[*v4])
    {
      char v16 = 0;
      unsigned int v17 = 0;
      unint64_t v18 = 0;
      while (1)
      {
        uint64_t v19 = *v2;
        unint64_t v20 = *(void *)&a1[v19];
        if (v20 == -1 || v20 >= *(void *)&a1[*v3]) {
          break;
        }
        char v21 = *(unsigned char *)(*(void *)&a1[*v5] + v20);
        *(void *)&a1[v19] = v20 + 1;
        v18 |= (unint64_t)(v21 & 0x7F) << v16;
        if ((v21 & 0x80) == 0) {
          goto LABEL_32;
        }
        v16 += 7;
        BOOL v12 = v17++ >= 9;
        if (v12)
        {
          unint64_t v18 = 0;
          int v22 = a1[*v4];
          goto LABEL_34;
        }
      }
      a1[*v4] = 1;
LABEL_32:
      int v22 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v18 = 0;
      }
LABEL_34:
      if (v22 || (v18 & 7) == 4) {
        break;
      }
      if ((v18 >> 3) == 2)
      {
        if ((v18 & 7) != 0) {
          goto LABEL_65;
        }
        unsigned int v30 = 0;
        while (1)
        {
          uint64_t v31 = *v2;
          unint64_t v32 = *(void *)&a1[v31];
          if (v32 == -1 || v32 >= *(void *)&a1[*v3]) {
            break;
          }
          unint64_t v33 = v32 + 1;
          int v34 = *(char *)(*(void *)&a1[*v5] + v32);
          *(void *)&a1[v31] = v33;
          if (v34 < 0)
          {
            BOOL v29 = v30++ > 8;
            if (!v29) {
              continue;
            }
          }
          goto LABEL_22;
        }
LABEL_56:
        a1[*v4] = 1;
      }
      else
      {
        if ((v18 >> 3) == 1)
        {
          if ((v18 & 7) != 0) {
            goto LABEL_65;
          }
          unsigned int v24 = 0;
          while (1)
          {
            uint64_t v25 = *v2;
            unint64_t v26 = *(void *)&a1[v25];
            if (v26 == -1 || v26 >= *(void *)&a1[*v3]) {
              goto LABEL_56;
            }
            unint64_t v27 = v26 + 1;
            int v28 = *(char *)(*(void *)&a1[*v5] + v26);
            *(void *)&a1[v25] = v27;
            if (v28 < 0)
            {
              BOOL v29 = v24++ > 8;
              if (!v29) {
                continue;
              }
            }
            goto LABEL_22;
          }
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
        {
LABEL_65:
          PBReaderRecallMark();
          goto LABEL_66;
        }
      }
    }
    int v35 = a1[*v4];
    PBReaderRecallMark();
    if (v35) {
      goto LABEL_66;
    }
    PBReaderRecallMark();
  }
  while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
LABEL_64:
  BOOL v36 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v36;
}

void sub_1898BB97C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDStorefrontBundleReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 52);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 48)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  int v11 = ((*(unsigned __int8 *)(a1 + 60) >> 3) & 1) + ((*(unsigned __int8 *)(a1 + 60) >> 2) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v7])
    {
      case -3:
        char v8 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        int v14 = v10 & 1 | v11;
        BOOL v15 = v14 != 0;
        if ((v14 != 0) | v8 & 1) {
          char v16 = 0;
        }
        else {
          char v16 = a3;
        }
        if (v14) {
          BOOL v17 = 1;
        }
        else {
          BOOL v17 = v16 == 0;
        }
        BOOL v61 = v17;
        unint64_t v18 = (int *)MEMORY[0x1E4F940E8];
        uint64_t v19 = (int *)MEMORY[0x1E4F940C8];
        unint64_t v20 = (int *)MEMORY[0x1E4F940B8];
        char v21 = &OBJC_IVAR___GEOComposedRoute__visualInfosForRouteNameLabels;
        BOOL v60 = v15;
        break;
      default:
        ++v11;
LABEL_6:
        uint64_t v12 = v9;
        uint64_t v13 = v10;
LABEL_8:
        ++v7;
        uint64_t v9 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v18) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v19)) {
      goto LABEL_87;
    }
    char v22 = 0;
    unsigned int v23 = 0;
    unint64_t v24 = 0;
    while (1)
    {
      uint64_t v25 = *v18;
      unint64_t v26 = *(void *)(v3 + v25);
      if (v26 == -1 || v26 >= *(void *)(v3 + *v6)) {
        break;
      }
      char v27 = *(unsigned char *)(*(void *)(v3 + *v20) + v26);
      *(void *)(v3 + v25) = v26 + 1;
      v24 |= (unint64_t)(v27 & 0x7F) << v22;
      if ((v27 & 0x80) == 0) {
        goto LABEL_26;
      }
      v22 += 7;
      BOOL v28 = v23++ >= 9;
      if (v28)
      {
        unint64_t v24 = 0;
        int v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_28;
      }
    }
    *(unsigned char *)(v3 + *v19) = 1;
LABEL_26:
    int v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(unsigned char *)(v3 + *v19)) {
      unint64_t v24 = 0;
    }
LABEL_28:
    if (v29 || (v24 & 7) == 4)
    {
LABEL_87:
      if (v15)
      {
        char v54 = 1;
        goto LABEL_101;
      }
      if (!v16) {
        goto LABEL_102;
      }
      while (1)
      {
        int v56 = *v16++;
        int v55 = v56;
        if (v56 == 2) {
          break;
        }
        if (v55 == 3)
        {
          char v57 = 4;
LABEL_96:
          *(unsigned char *)(a1 + v21[886]) |= v57;
        }
        else if (!v55)
        {
          goto LABEL_102;
        }
      }
      char v57 = 8;
      goto LABEL_96;
    }
    unint64_t v31 = v24 >> 3;
    BOOL v32 = v15;
    if (!v61)
    {
      unint64_t v33 = v16;
      do
      {
        int v35 = *v33++;
        int v34 = v35;
        BOOL v32 = v35 != 0;
        if (v35) {
          BOOL v36 = v34 == v31;
        }
        else {
          BOOL v36 = 1;
        }
      }
      while (!v36);
    }
    switch((int)v31)
    {
      case 1:
        if ((v8 & 1) == 0) {
          goto LABEL_69;
        }
        char v37 = 0;
        unsigned int v38 = 0;
        uint64_t v39 = 0;
        *(unsigned char *)(a1 + v21[886]) |= 1u;
        while (1)
        {
          uint64_t v40 = *v18;
          unint64_t v41 = *(void *)(v3 + v40);
          if (v41 == -1 || v41 >= *(void *)(v3 + *v6)) {
            break;
          }
          char v42 = *(unsigned char *)(*(void *)(v3 + *v20) + v41);
          *(void *)(v3 + v40) = v41 + 1;
          v39 |= (unint64_t)(v42 & 0x7F) << v37;
          if ((v42 & 0x80) == 0) {
            goto LABEL_72;
          }
          v37 += 7;
          BOOL v28 = v38++ >= 9;
          if (v28)
          {
            uint64_t v39 = 0;
            goto LABEL_74;
          }
        }
        *(unsigned char *)(v3 + *v19) = 1;
LABEL_72:
        if (*(unsigned char *)(v3 + *v19)) {
          uint64_t v39 = 0;
        }
LABEL_74:
        uint64_t v52 = 24;
        goto LABEL_79;
      case 2:
        if (!v32) {
          goto LABEL_69;
        }
        if ((*(unsigned char *)(a1 + v21[886]) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_98:
            char v54 = 0;
            goto LABEL_100;
          }
          v7 += *(unsigned __int8 *)(a1 + v21[886]) << 28 >> 31;
          goto LABEL_82;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_98;
        }
        long long v44 = objc_alloc_init(GEOPDStorefrontPresentation);
        if (GEOPDStorefrontPresentationReadAllFrom((uint64_t)v44, (void *)v3, v9 & 1))
        {
          PBReaderRecallMark();
          long long v45 = *(void **)(a1 + 40);
          *(void *)(a1 + 40) = v44;

          --v7;
LABEL_60:
          char v21 = &OBJC_IVAR___GEOComposedRoute__visualInfosForRouteNameLabels;
LABEL_82:
          BOOL v15 = v60;
          uint64_t v19 = (int *)MEMORY[0x1E4F940C8];
LABEL_83:
          if (v7) {
            char v53 = 1;
          }
          else {
            char v53 = v15;
          }
          if ((v53 & 1) == 0) {
            goto LABEL_87;
          }
          continue;
        }
LABEL_99:

        char v54 = 0;
        char v21 = &OBJC_IVAR___GEOComposedRoute__visualInfosForRouteNameLabels;
LABEL_100:
        BOOL v15 = v60;
        uint64_t v19 = (int *)MEMORY[0x1E4F940C8];
LABEL_101:
        *(unsigned char *)(a1 + v21[886]) |= 8u;
        *(unsigned char *)(a1 + v21[886]) |= 4u;
        if (v54)
        {
LABEL_102:
          unint64_t v3 = *(unsigned char *)(v3 + *v19) == 0;
          if (v15) {
            goto LABEL_103;
          }
        }
        else
        {
          unint64_t v3 = 0;
          if (v15)
          {
LABEL_103:
            long long v58 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = 0;
          }
        }
        return v3;
      case 3:
        if (!v32 || (*(unsigned char *)(a1 + v21[886]) & 4) != 0) {
          goto LABEL_69;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_98;
        }
        long long v44 = objc_alloc_init(GEOPDStorefrontFace);
        if (!GEOPDStorefrontFaceReadAllFrom((uint64_t)v44, (void *)v3, v9 & 1)) {
          goto LABEL_99;
        }
        PBReaderRecallMark();
        -[GEOPDStorefrontBundle _addNoFlagsFace:](a1, v44);

        goto LABEL_60;
      case 4:
        if (v8)
        {
          char v46 = 0;
          unsigned int v47 = 0;
          uint64_t v39 = 0;
          *(unsigned char *)(a1 + v21[886]) |= 2u;
          while (1)
          {
            uint64_t v48 = *v18;
            unint64_t v49 = *(void *)(v3 + v48);
            if (v49 == -1 || v49 >= *(void *)(v3 + *v6)) {
              break;
            }
            char v50 = *(unsigned char *)(*(void *)(v3 + *v20) + v49);
            *(void *)(v3 + v48) = v49 + 1;
            v39 |= (unint64_t)(v50 & 0x7F) << v46;
            if ((v50 & 0x80) == 0) {
              goto LABEL_76;
            }
            v46 += 7;
            BOOL v28 = v47++ >= 9;
            if (v28)
            {
              uint64_t v39 = 0;
              goto LABEL_78;
            }
          }
          *(unsigned char *)(v3 + *v19) = 1;
LABEL_76:
          if (*(unsigned char *)(v3 + *v19)) {
            uint64_t v39 = 0;
          }
LABEL_78:
          uint64_t v52 = 32;
LABEL_79:
          *(void *)(a1 + v52) = v39;
        }
        else
        {
LABEL_69:
          char v51 = PBReaderSkipValueWithTag();
          uint64_t v19 = (int *)MEMORY[0x1E4F940C8];
          BOOL v15 = v60;
          if ((v51 & 1) == 0)
          {
LABEL_97:
            char v54 = 0;
            goto LABEL_101;
          }
        }
        goto LABEL_83;
      default:
        int v43 = PBReaderSkipValueWithTag();
        uint64_t v19 = (int *)MEMORY[0x1E4F940C8];
        BOOL v15 = v60;
        if (!v43) {
          goto LABEL_97;
        }
        goto LABEL_83;
    }
  }
}

void sub_1898BC120(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898BCB94(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDStorefrontBundleCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  [*(id *)(a1 + 40) readAll:1];
  long long v9 = 0u;
  long long v10 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  id v2 = *(id *)(a1 + 16);
  uint64_t v3 = [v2 countByEnumeratingWithState:&v7 objects:v11 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v8;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v8 != v5) {
          objc_enumerationMutation(v2);
        }
        objc_msgSend(*(id *)(*((void *)&v7 + 1) + 8 * v6++), "readAll:", 1, (void)v7);
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v7 objects:v11 count:16];
    }
    while (v4);
  }
}

unint64_t GEOPDStorefrontBundleReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 52))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDStorefrontBundleReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)long long v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = [v8 position];
  *(_DWORD *)(a1 + 52) = [v8 length];
  if (a3) {
    long long v9 = (int *)&GEOPDStorefrontBundleReadAllFrom_recursiveTag;
  }
  else {
    long long v9 = (int *)&GEOPDStorefrontBundleReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDStorefrontBundleReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOPDStorefrontBundleCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_1898BCE3C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDStorefrontBundleReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOPDStorefrontBundleReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1898BCEA0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDStorefrontBundleIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        unint64_t v10 = *(void *)&a1[v9];
        if (v10 == -1 || v10 >= *(void *)&a1[*v3]) {
          break;
        }
        char v11 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v13 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v14 = v8 & 7;
      if (v13 || v14 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_49;
          }
          unsigned int v16 = 0;
          while (1)
          {
            uint64_t v17 = *v2;
            unint64_t v18 = *(void *)&a1[v17];
            if (v18 == -1 || v18 >= *(void *)&a1[*v3]) {
              goto LABEL_45;
            }
            unint64_t v19 = v18 + 1;
            int v20 = *(char *)(*(void *)&a1[*v5] + v18);
            *(void *)&a1[v17] = v19;
            if (v20 < 0)
            {
              BOOL v21 = v16++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_46;
          }
        case 2u:
          if (v14 != 2 || !PBReaderPlaceMark() || !GEOPDStorefrontPresentationIsValid(a1)) {
            goto LABEL_49;
          }
          goto LABEL_36;
        case 3u:
          if (v14 != 2 || !PBReaderPlaceMark() || !GEOPDStorefrontFaceIsValid(a1)) {
            goto LABEL_49;
          }
LABEL_36:
          PBReaderRecallMark();
          continue;
        case 4u:
          if ((v8 & 7) != 0) {
            goto LABEL_49;
          }
          unsigned int v22 = 0;
          break;
        default:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_49:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        uint64_t v23 = *v2;
        unint64_t v24 = *(void *)&a1[v23];
        if (v24 == -1 || v24 >= *(void *)&a1[*v3]) {
          break;
        }
        unint64_t v25 = v24 + 1;
        int v26 = *(char *)(*(void *)&a1[*v5] + v24);
        *(void *)&a1[v23] = v25;
        if (v26 < 0)
        {
          BOOL v21 = v22++ > 8;
          if (!v21) {
            continue;
          }
        }
        goto LABEL_46;
      }
LABEL_45:
      a1[*v4] = 1;
LABEL_46:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v27 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v27;
}

BOOL GEOPDStorefrontFaceIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        unint64_t v10 = *(void *)&a1[v9];
        if (v10 == -1 || v10 >= *(void *)&a1[*v3]) {
          break;
        }
        char v11 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v13 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v14 = v8 & 7;
      if (v13 || v14 == 4) {
        break;
      }
      unint64_t v16 = v8 >> 3;
      if ((v8 >> 3) == 3)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_43;
        }
        unsigned int v17 = 0;
        while (1)
        {
          uint64_t v18 = *v2;
          unint64_t v19 = *(void *)&a1[v18];
          if (v19 == -1 || v19 >= *(void *)&a1[*v3]) {
            break;
          }
          unint64_t v20 = v19 + 1;
          int v21 = *(char *)(*(void *)&a1[*v5] + v19);
          *(void *)&a1[v18] = v20;
          if (v21 < 0 && v17++ <= 8) {
            continue;
          }
          goto LABEL_40;
        }
        a1[*v4] = 1;
      }
      else
      {
        if (v16 == 2)
        {
          if (v14 != 2 || !PBReaderPlaceMark() || !GEOPDStorefrontFeatureIsValid(a1))
          {
LABEL_43:
            PBReaderRecallMark();
            return 0;
          }
          goto LABEL_36;
        }
        if (v16 == 1)
        {
          if (v14 != 2 || !PBReaderPlaceMark() || !GEOPDOrientedBoundingBoxIsValid(a1)) {
            goto LABEL_43;
          }
LABEL_36:
          PBReaderRecallMark();
          continue;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_43;
        }
      }
LABEL_40:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v23 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v23;
}

void sub_1898BD654(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDStorefrontBundleIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  unsigned int v2 = *(unsigned __int8 *)(a1 + 60);
  if ((v2 & 0x10) != 0) {
    return 1;
  }
  if ((v2 & 8) != 0)
  {
    if (GEOPDStorefrontPresentationIsDirty(*(os_unfair_lock_s **)(a1 + 40))) {
      return 1;
    }
    unsigned int v2 = *(unsigned __int8 *)(a1 + 60);
  }
  return (v2 >> 2) & 1;
}

os_unfair_lock_s *GEOPDStorefrontBundleIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    BOOL v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOPDStorefrontBundleIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 14);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_1898BDB2C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898BE3D4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDStorefrontFaceReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  int v11 = ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1) + ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v7])
    {
      case -3:
        char v8 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        int v14 = v10 & 1 | v11;
        if ((v14 != 0) | v8 & 1) {
          BOOL v15 = 0;
        }
        else {
          BOOL v15 = a3;
        }
        BOOL v16 = v14 != 0;
        if (v14) {
          BOOL v17 = 1;
        }
        else {
          BOOL v17 = v15 == 0;
        }
        BOOL v53 = v17;
        uint64_t v18 = (int *)MEMORY[0x1E4F940E8];
        unint64_t v19 = (int *)MEMORY[0x1E4F940C8];
        unint64_t v20 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v11;
LABEL_6:
        uint64_t v12 = v9;
        uint64_t v13 = v10;
LABEL_8:
        ++v7;
        uint64_t v9 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v18) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v19)) {
      goto LABEL_76;
    }
    char v21 = 0;
    unsigned int v22 = 0;
    unint64_t v23 = 0;
    while (1)
    {
      uint64_t v24 = *v18;
      unint64_t v25 = *(void *)(v3 + v24);
      if (v25 == -1 || v25 >= *(void *)(v3 + *v6)) {
        break;
      }
      char v26 = *(unsigned char *)(*(void *)(v3 + *v20) + v25);
      *(void *)(v3 + v24) = v25 + 1;
      v23 |= (unint64_t)(v26 & 0x7F) << v21;
      if ((v26 & 0x80) == 0) {
        goto LABEL_26;
      }
      v21 += 7;
      BOOL v27 = v22++ >= 9;
      if (v27)
      {
        unint64_t v23 = 0;
        int v28 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_28;
      }
    }
    *(unsigned char *)(v3 + *v19) = 1;
LABEL_26:
    int v28 = *(unsigned __int8 *)(v3 + *v19);
    if (*(unsigned char *)(v3 + *v19)) {
      unint64_t v23 = 0;
    }
LABEL_28:
    if (v28 || (v23 & 7) == 4)
    {
LABEL_76:
      if (v16)
      {
        char v47 = 1;
        goto LABEL_90;
      }
      if (!v15) {
        goto LABEL_91;
      }
      while (1)
      {
        int v49 = *v15++;
        int v48 = v49;
        if (v49 == 1) {
          break;
        }
        if (v48 == 2)
        {
LABEL_81:
          *(unsigned char *)(a1 + 52) |= v48;
        }
        else if (!v48)
        {
          goto LABEL_91;
        }
      }
      LOBYTE(v48) = 4;
      goto LABEL_81;
    }
    unint64_t v30 = v23 >> 3;
    BOOL v31 = v16;
    if (!v53)
    {
      BOOL v32 = v15;
      do
      {
        int v34 = *v32++;
        int v33 = v34;
        BOOL v31 = v34 != 0;
        if (v34) {
          BOOL v35 = v33 == v30;
        }
        else {
          BOOL v35 = 1;
        }
      }
      while (!v35);
    }
    if (v30 == 3)
    {
      if (v8)
      {
        char v38 = 0;
        unsigned int v39 = 0;
        uint64_t v40 = 0;
        *(unsigned char *)(a1 + 52) |= 1u;
        while (1)
        {
          uint64_t v41 = *v18;
          unint64_t v42 = *(void *)(v3 + v41);
          if (v42 == -1 || v42 >= *(void *)(v3 + *v6)) {
            break;
          }
          char v43 = *(unsigned char *)(*(void *)(v3 + *v20) + v42);
          *(void *)(v3 + v41) = v42 + 1;
          v40 |= (unint64_t)(v43 & 0x7F) << v38;
          if ((v43 & 0x80) == 0) {
            goto LABEL_66;
          }
          v38 += 7;
          BOOL v27 = v39++ >= 9;
          if (v27)
          {
            uint64_t v40 = 0;
            goto LABEL_68;
          }
        }
        *(unsigned char *)(v3 + *v19) = 1;
LABEL_66:
        if (*(unsigned char *)(v3 + *v19)) {
          uint64_t v40 = 0;
        }
LABEL_68:
        *(void *)(a1 + 32) = v40;
        goto LABEL_72;
      }
      goto LABEL_63;
    }
    if (v30 == 2) {
      break;
    }
    if (v30 != 1)
    {
      int v44 = PBReaderSkipValueWithTag();
      unint64_t v19 = (int *)MEMORY[0x1E4F940C8];
      if (!v44) {
        goto LABEL_86;
      }
      goto LABEL_72;
    }
    if (v31)
    {
      if ((*(unsigned char *)(a1 + 52) & 4) != 0)
      {
        if ((PBReaderSkipValueWithTag() & 1) == 0)
        {
LABEL_87:
          char v47 = 0;
          goto LABEL_89;
        }
        v7 += *(unsigned __int8 *)(a1 + 52) << 29 >> 31;
      }
      else
      {
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_87;
        }
        BOOL v52 = v16;
        BOOL v36 = objc_alloc_init(GEOPDOrientedBoundingBox);
        if (!GEOPDOrientedBoundingBoxReadAllFrom((uint64_t)v36, (void *)v3)) {
          goto LABEL_88;
        }
        PBReaderRecallMark();
        char v37 = *(void **)(a1 + 24);
        *(void *)(a1 + 24) = v36;

        --v7;
LABEL_60:
        BOOL v16 = v52;
      }
      unint64_t v19 = (int *)MEMORY[0x1E4F940C8];
      goto LABEL_72;
    }
LABEL_63:
    char v45 = PBReaderSkipValueWithTag();
    unint64_t v19 = (int *)MEMORY[0x1E4F940C8];
    if ((v45 & 1) == 0)
    {
LABEL_86:
      char v47 = 0;
      goto LABEL_90;
    }
LABEL_72:
    if (v7) {
      char v46 = 1;
    }
    else {
      char v46 = v16;
    }
    if ((v46 & 1) == 0) {
      goto LABEL_76;
    }
  }
  if (!v31 || (*(unsigned char *)(a1 + 52) & 2) != 0) {
    goto LABEL_63;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_87;
  }
  BOOL v52 = v16;
  BOOL v36 = objc_alloc_init(GEOPDStorefrontFeature);
  if (GEOPDStorefrontFeatureReadAllFrom((uint64_t)v36, (void *)v3))
  {
    PBReaderRecallMark();
    -[GEOPDStorefrontFace _addNoFlagsFeature:](a1, v36);

    goto LABEL_60;
  }
LABEL_88:

  char v47 = 0;
  BOOL v16 = v52;
LABEL_89:
  unint64_t v19 = (int *)MEMORY[0x1E4F940C8];
LABEL_90:
  *(unsigned char *)(a1 + 52) |= 4u;
  *(unsigned char *)(a1 + 52) |= 2u;
  if (v47)
  {
LABEL_91:
    unint64_t v3 = *(unsigned char *)(v3 + *v19) == 0;
    if (v16) {
      goto LABEL_92;
    }
  }
  else
  {
    unint64_t v3 = 0;
    if (v16)
    {
LABEL_92:
      char v50 = *(void **)(a1 + 8);
      *(void *)(a1 + 8) = 0;
    }
  }
  return v3;
}

void sub_1898BEAA0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898BF478(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDStorefrontFaceCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  [*(id *)(a1 + 24) readAll:1];
  long long v9 = 0u;
  long long v10 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  id v2 = *(id *)(a1 + 16);
  uint64_t v3 = [v2 countByEnumeratingWithState:&v7 objects:v11 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v8;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v8 != v5) {
          objc_enumerationMutation(v2);
        }
        objc_msgSend(*(id *)(*((void *)&v7 + 1) + 8 * v6++), "readAll:", 1, (void)v7);
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v7 objects:v11 count:16];
    }
    while (v4);
  }
}

unint64_t GEOPDStorefrontFaceReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDStorefrontFaceReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)long long v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    long long v9 = (int *)&GEOPDStorefrontFaceReadAllFrom_recursiveTag;
  }
  else {
    long long v9 = (int *)&GEOPDStorefrontFaceReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDStorefrontFaceReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOPDStorefrontFaceCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_1898BF724(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDStorefrontFaceReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOPDStorefrontFaceReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1898BF788(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDStorefrontFeatureIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        unint64_t v10 = *(void *)&a1[v9];
        if (v10 == -1 || v10 >= *(void *)&a1[*v3]) {
          break;
        }
        char v11 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v13 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v14 = v8 & 7;
      if (v13 || v14 == 4) {
        break;
      }
      if ((v8 >> 3) == 2)
      {
        if (v14 != 2 || !PBReaderPlaceMark() || !GEOPDOrientedBoundingBoxIsValid(a1))
        {
LABEL_38:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_38;
        }
        unsigned int v16 = 0;
        while (1)
        {
          uint64_t v17 = *v2;
          unint64_t v18 = *(void *)&a1[v17];
          if (v18 == -1 || v18 >= *(void *)&a1[*v3]) {
            break;
          }
          unint64_t v19 = v18 + 1;
          int v20 = *(char *)(*(void *)&a1[*v5] + v18);
          *(void *)&a1[v17] = v19;
          if (v20 < 0 && v16++ <= 8) {
            continue;
          }
          goto LABEL_35;
        }
        a1[*v4] = 1;
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_38;
      }
LABEL_35:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v22 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v22;
}

void sub_1898BFC14(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDStorefrontFaceIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  BOOL v2 = (*(unsigned char *)(a1 + 52) & 0xE) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return v2;
}

void sub_1898C0030(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDStorefrontFacesFilterReadAllFrom(uint64_t a1, void *a2)
{
  BOOL v2 = a2;
  objc_sync_enter(v2);
  if (v2)
  {
    id v3 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
    uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
    char v6 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      int v7 = v2[*v5];
      if (*(void *)&v2[*v3] >= *(void *)&v2[*v4]) {
        break;
      }
      if (v2[*v5])
      {
        int v7 = 1;
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      uint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)&v2[v11];
        if (v12 == -1 || v12 >= *(void *)&v2[*v4]) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)&v2[*v6] + v12);
        *(void *)&v2[v11] = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_13;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          LOBYTE(v10) = 0;
          int v7 = v2[*v5];
          goto LABEL_15;
        }
      }
      v2[*v5] = 1;
LABEL_13:
      int v7 = v2[*v5];
      if (v2[*v5]) {
        LOBYTE(v10) = 0;
      }
LABEL_15:
      if (v7) {
        BOOL v15 = 1;
      }
      else {
        BOOL v15 = (v10 & 7) == 4;
      }
      if (v15) {
        break;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        goto LABEL_20;
      }
    }
    BOOL v16 = v7 == 0;
  }
  else
  {
LABEL_20:
    BOOL v16 = 0;
  }
  objc_sync_exit(v2);

  return v16;
}

void sub_1898C059C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDStorefrontFeatureReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          unint64_t v12 = *(void *)&v3[v11];
          if (v12 == -1 || v12 >= *(void *)&v3[*v5]) {
            break;
          }
          char v13 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v12 + 1;
          v10 |= (unint64_t)(v13 & 0x7F) << v8;
          if ((v13 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v14 = v9++ >= 9;
          if (v14)
          {
            unint64_t v10 = 0;
            int v15 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v15 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v15 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 2)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_40;
          }
          unint64_t v23 = objc_alloc_init(GEOPDOrientedBoundingBox);
          if (!GEOPDOrientedBoundingBoxReadAllFrom((uint64_t)v23, v3))
          {

            goto LABEL_40;
          }
          PBReaderRecallMark();
          uint64_t v24 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = v23;
        }
        else if ((v10 >> 3) == 1)
        {
          char v17 = 0;
          unsigned int v18 = 0;
          uint64_t v19 = 0;
          *(unsigned char *)(a1 + 20) |= 1u;
          while (1)
          {
            uint64_t v20 = *v4;
            unint64_t v21 = *(void *)&v3[v20];
            if (v21 == -1 || v21 >= *(void *)&v3[*v5]) {
              break;
            }
            char v22 = *(unsigned char *)(*(void *)&v3[*v7] + v21);
            *(void *)&v3[v20] = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0) {
              goto LABEL_34;
            }
            v17 += 7;
            BOOL v14 = v18++ >= 9;
            if (v14)
            {
              LODWORD(v19) = 0;
              goto LABEL_36;
            }
          }
          v3[*v6] = 1;
LABEL_34:
          if (v3[*v6]) {
            LODWORD(v19) = 0;
          }
LABEL_36:
          *(_DWORD *)(a1 + 16) = v19;
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_40;
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v25 = v3[*v6] == 0;
  }
  else
  {
LABEL_40:
    BOOL v25 = 0;
  }
  objc_sync_exit(v3);

  return v25;
}

void sub_1898C0EA0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDStorefrontFeatureReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOPDStorefrontFeatureReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1898C0F04(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898C1528(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898C16C0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898C1828(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898C1D98(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDStorefrontPresentationReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOPDStorefrontPresentationReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1898C1DFC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

os_unfair_lock_s *GEOPDStorefrontPresentationIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    BOOL v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOPDStorefrontPresentationIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 12);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_1898C2450(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDStorefrontViewReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 60);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 56)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  unsigned int v11 = vaddv_s16((int16x4_t)(*(void *)&vshl_u16((uint16x4_t)(*(void *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 68)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFCFFFFFFFDFFFELL) & 0xFF01FF01FF01FF01));
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v7])
    {
      case -3:
        char v8 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        unsigned __int8 v14 = v10 | (v11 > 2);
        if ((v14 | v8)) {
          int v15 = 0;
        }
        else {
          int v15 = a3;
        }
        BOOL v16 = v14;
        char v53 = (v15 == 0) | v14;
        char v17 = (int *)MEMORY[0x1E4F940E8];
        unsigned int v18 = (int *)MEMORY[0x1E4F940C8];
        uint64_t v19 = (int *)MEMORY[0x1E4F940B8];
        BOOL v52 = v14;
        break;
      default:
        ++v11;
LABEL_6:
        uint64_t v12 = v9;
        uint64_t v13 = v10;
LABEL_8:
        ++v7;
        uint64_t v9 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v17) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v18)) {
      goto LABEL_85;
    }
    char v20 = 0;
    unsigned int v21 = 0;
    unint64_t v22 = 0;
    while (1)
    {
      uint64_t v23 = *v17;
      unint64_t v24 = *(void *)(v3 + v23);
      if (v24 == -1 || v24 >= *(void *)(v3 + *v6)) {
        break;
      }
      char v25 = *(unsigned char *)(*(void *)(v3 + *v19) + v24);
      *(void *)(v3 + v23) = v24 + 1;
      v22 |= (unint64_t)(v25 & 0x7F) << v20;
      if ((v25 & 0x80) == 0) {
        goto LABEL_23;
      }
      v20 += 7;
      BOOL v26 = v21++ >= 9;
      if (v26)
      {
        unint64_t v22 = 0;
        int v27 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_25;
      }
    }
    *(unsigned char *)(v3 + *v18) = 1;
LABEL_23:
    int v27 = *(unsigned __int8 *)(v3 + *v18);
    if (*(unsigned char *)(v3 + *v18)) {
      unint64_t v22 = 0;
    }
LABEL_25:
    if (v27 || (v22 & 7) == 4)
    {
LABEL_85:
      if (v16)
      {
        char v47 = 1;
        goto LABEL_97;
      }
      if (v15)
      {
        while (1)
        {
          int v48 = *v15++;
          char v49 = 8;
          switch(v48)
          {
            case 0:
              goto LABEL_98;
            case 2:
              goto LABEL_92;
            case 5:
              char v49 = 4;
              goto LABEL_92;
            case 6:
              char v49 = 2;
              goto LABEL_92;
            case 7:
              char v49 = 16;
LABEL_92:
              *(unsigned char *)(a1 + 68) |= v49;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_98;
    }
    unint64_t v29 = v22 >> 3;
    BOOL v30 = v16;
    if ((v53 & 1) == 0)
    {
      BOOL v31 = v15;
      do
      {
        int v33 = *v31++;
        int v32 = v33;
        BOOL v30 = v33 != 0;
        if (v33) {
          BOOL v34 = v32 == v29;
        }
        else {
          BOOL v34 = 1;
        }
      }
      while (!v34);
    }
    switch((int)v29)
    {
      case 2:
        if (!v30) {
          goto LABEL_68;
        }
        if ((*(unsigned char *)(a1 + 68) & 8) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_94;
          }
          BOOL v35 = objc_alloc_init(GEOPDPhotoPosition);
          if (GEOPDPhotoPositionReadAllFrom((uint64_t)v35, (void *)v3, v9 & 1))
          {
            PBReaderRecallMark();
            uint64_t v36 = 40;
            goto LABEL_67;
          }
          goto LABEL_95;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_94;
        }
        char v46 = 16 * *(unsigned char *)(a1 + 68);
        goto LABEL_82;
      case 4:
        if ((v8 & 1) == 0) {
          goto LABEL_68;
        }
        char v38 = 0;
        unsigned int v39 = 0;
        uint64_t v40 = 0;
        *(unsigned char *)(a1 + 68) |= 1u;
        while (2)
        {
          uint64_t v41 = *v17;
          unint64_t v42 = *(void *)(v3 + v41);
          if (v42 == -1 || v42 >= *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v43 = *(unsigned char *)(*(void *)(v3 + *v19) + v42);
            *(void *)(v3 + v41) = v42 + 1;
            v40 |= (unint64_t)(v43 & 0x7F) << v38;
            if (v43 < 0)
            {
              v38 += 7;
              BOOL v26 = v39++ >= 9;
              if (v26)
              {
                uint64_t v40 = 0;
                goto LABEL_73;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          uint64_t v40 = 0;
        }
LABEL_73:
        *(void *)(a1 + 16) = v40;
        goto LABEL_84;
      case 5:
        if (!v30) {
          goto LABEL_68;
        }
        if ((*(unsigned char *)(a1 + 68) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_94;
          }
          char v46 = 32 * *(unsigned char *)(a1 + 68);
          goto LABEL_82;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_94;
        }
        BOOL v35 = objc_alloc_init(GEOPDOrientedPosition);
        if (!GEOPDOrientedPositionReadAllFrom((uint64_t)v35, (void *)v3)) {
          goto LABEL_95;
        }
        PBReaderRecallMark();
        uint64_t v36 = 32;
        goto LABEL_67;
      case 6:
        if (!v30) {
          goto LABEL_68;
        }
        if ((*(unsigned char *)(a1 + 68) & 2) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_94;
          }
          char v46 = *(unsigned char *)(a1 + 68) << 6;
          goto LABEL_82;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_94;
        }
        BOOL v35 = objc_alloc_init(GEOPDGeographicCoordinate);
        if (!GEOPDGeographicCoordinateReadAllFrom((uint64_t)v35, (void *)v3)) {
          goto LABEL_95;
        }
        PBReaderRecallMark();
        uint64_t v36 = 24;
        goto LABEL_67;
      case 7:
        if (!v30)
        {
LABEL_68:
          char v45 = PBReaderSkipValueWithTag();
          unsigned int v18 = (int *)MEMORY[0x1E4F940C8];
          if ((v45 & 1) == 0)
          {
LABEL_93:
            char v47 = 0;
            goto LABEL_97;
          }
LABEL_84:
          if (!v16 && v7 == 0) {
            goto LABEL_85;
          }
          continue;
        }
        if ((*(unsigned char *)(a1 + 68) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_94:
            char v47 = 0;
            goto LABEL_96;
          }
          char v46 = 8 * *(unsigned char *)(a1 + 68);
LABEL_82:
          v7 += v46 >> 7;
          goto LABEL_83;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_94;
        }
        BOOL v35 = objc_alloc_init(GEOPDGeographicCoordinate);
        if (GEOPDGeographicCoordinateReadAllFrom((uint64_t)v35, (void *)v3))
        {
          PBReaderRecallMark();
          uint64_t v36 = 48;
LABEL_67:
          int v44 = *(void **)(a1 + v36);
          *(void *)(a1 + v36) = v35;

          --v7;
          BOOL v16 = v52;
LABEL_83:
          unsigned int v18 = (int *)MEMORY[0x1E4F940C8];
          goto LABEL_84;
        }
LABEL_95:

        char v47 = 0;
        BOOL v16 = v52;
LABEL_96:
        unsigned int v18 = (int *)MEMORY[0x1E4F940C8];
LABEL_97:
        *(unsigned char *)(a1 + 68) |= 8u;
        *(unsigned char *)(a1 + 68) |= 4u;
        *(unsigned char *)(a1 + 68) |= 2u;
        *(unsigned char *)(a1 + 68) |= 0x10u;
        if (v47)
        {
LABEL_98:
          unint64_t v3 = *(unsigned char *)(v3 + *v18) == 0;
          if (v16) {
            goto LABEL_99;
          }
        }
        else
        {
          unint64_t v3 = 0;
          if (v16)
          {
LABEL_99:
            char v50 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = 0;
          }
        }
        return v3;
      default:
        int v37 = PBReaderSkipValueWithTag();
        unsigned int v18 = (int *)MEMORY[0x1E4F940C8];
        if (!v37) {
          goto LABEL_93;
        }
        goto LABEL_84;
    }
  }
}

void sub_1898C2D68(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898C2ED8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898C3044(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898C374C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDStorefrontViewCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  [*(id *)(a1 + 40) readAll:1];
  [*(id *)(a1 + 32) readAll:1];
  [*(id *)(a1 + 24) readAll:1];
  BOOL v2 = *(void **)(a1 + 48);

  return [v2 readAll:1];
}

unint64_t GEOPDStorefrontViewReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 60))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDStorefrontViewReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = [v8 position];
  *(_DWORD *)(a1 + 60) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOPDStorefrontViewReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOPDStorefrontViewReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDStorefrontViewReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOPDStorefrontViewCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_1898C395C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDStorefrontViewReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOPDStorefrontViewReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1898C39C0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898C3BA0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDStorefrontViewIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  unsigned int v2 = *(unsigned __int8 *)(a1 + 68);
  if ((v2 & 0x20) != 0) {
    return 1;
  }
  if ((v2 & 8) != 0)
  {
    if (GEOPDPhotoPositionIsDirty(*(os_unfair_lock_s **)(a1 + 40))) {
      return 1;
    }
    unsigned int v2 = *(unsigned __int8 *)(a1 + 68);
  }
  if ((v2 & 6) != 0) {
    return 1;
  }
  return (v2 >> 4) & 1;
}

os_unfair_lock_s *GEOPDStorefrontViewIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    BOOL v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOPDStorefrontViewIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 16);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_1898C3F88(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898C6190(_Unwind_Exception *a1)
{
}

uint64_t CoreLocationLibraryCore()
{
  uint64_t v8 = *MEMORY[0x1E4F143B8];
  uint64_t v2 = 0;
  id v3 = &v2;
  uint64_t v4 = 0x2020000000;
  uint64_t v0 = CoreLocationLibraryCore_frameworkLibrary;
  uint64_t v5 = CoreLocationLibraryCore_frameworkLibrary;
  if (!CoreLocationLibraryCore_frameworkLibrary)
  {
    long long v6 = xmmword_1E53E0D30;
    long long v7 = *(_OWORD *)&off_1E53E0D40;
    v3[3] = _sl_dlopen();
    CoreLocationLibraryCore_frameworkLibrary = v3[3];
    uint64_t v0 = v3[3];
  }
  _Block_object_dispose(&v2, 8);
  return v0;
}

void sub_1898C7268(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __CoreLocationLibraryCore_block_invoke(uint64_t a1)
{
  uint64_t result = _sl_dlopen();
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  CoreLocationLibraryCore_frameworkLibrary = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t CoreLocationLibrary()
{
  uint64_t v0 = CoreLocationLibraryCore();
  if (!v0)
  {
    uint64_t v2 = (void *)abort_report_np();
    free(v2);
  }
  return v0;
}

id getCLLocationManagerClass()
{
  uint64_t v4 = 0;
  uint64_t v5 = &v4;
  uint64_t v6 = 0x2050000000;
  uint64_t v0 = (void *)getCLLocationManagerClass_softClass;
  uint64_t v7 = getCLLocationManagerClass_softClass;
  if (!getCLLocationManagerClass_softClass)
  {
    v3[0] = MEMORY[0x1E4F143A8];
    v3[1] = 3221225472;
    v3[2] = __getCLLocationManagerClass_block_invoke;
    v3[3] = &unk_1E53DB3C8;
    v3[4] = &v4;
    __getCLLocationManagerClass_block_invoke((uint64_t)v3);
    uint64_t v0 = (void *)v5[3];
  }
  id v1 = v0;
  _Block_object_dispose(&v4, 8);

  return v1;
}

void sub_1898C7438(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void __getCLLocationManagerClass_block_invoke(uint64_t a1)
{
  CoreLocationLibrary();
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = objc_getClass("CLLocationManager");
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    getCLLocationManagerClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    uint64_t v2 = (GEOURLCamera *)abort_report_np();
    [(GEOURLCamera *)v2 setHasLatitude:v4];
  }
}

BOOL GEOURLCameraReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOURLCameraReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1898C7A6C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOURLCameraIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  uint64_t v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  BOOL v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (!a1[*v4])
    {
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          uint64_t v14 = *v4;
          int v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      uint64_t v14 = *v4;
      int v15 = a1[v14];
      if (a1[v14]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v16 = v8 & 7;
      if (v15 || v16 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
        case 2u:
        case 3u:
        case 4u:
        case 5u:
          if (v16 != 1) {
            goto LABEL_28;
          }
          uint64_t v18 = *v2;
          unint64_t v19 = *(void *)&a1[v18];
          if (v19 <= 0xFFFFFFFFFFFFFFF7 && (unint64_t v20 = v19 + 8, v20 <= *(void *)&a1[*v3])) {
            *(void *)&a1[v18] = v20;
          }
          else {
            a1[v14] = 1;
          }
          goto LABEL_25;
        default:
          if (!PBReaderSkipValueWithTag())
          {
LABEL_28:
            BOOL v21 = 0;
            goto LABEL_27;
          }
LABEL_25:
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_26;
          }
          break;
      }
    }
  }
LABEL_26:
  BOOL v21 = a1[*v4] == 0;
LABEL_27:
  PBReaderRecallMark();
  return v21;
}

BOOL GEOURLCenterSpanReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    BOOL v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        switch((v10 >> 3))
        {
          case 1u:
            *(unsigned char *)(a1 + 40) |= 2u;
            uint64_t v18 = *v4;
            unint64_t v19 = *(void *)&v3[v18];
            if (v19 <= 0xFFFFFFFFFFFFFFF7 && v19 + 8 <= *(void *)&v3[*v5])
            {
              uint64_t v20 = *(void *)(*(void *)&v3[*v7] + v19);
              *(void *)&v3[v18] = v19 + 8;
            }
            else
            {
              v3[*v6] = 1;
              uint64_t v20 = 0;
            }
            int v27 = &OBJC_IVAR___GEOURLCenterSpan__latitude;
            goto LABEL_42;
          case 2u:
            *(unsigned char *)(a1 + 40) |= 8u;
            uint64_t v21 = *v4;
            unint64_t v22 = *(void *)&v3[v21];
            if (v22 <= 0xFFFFFFFFFFFFFFF7 && v22 + 8 <= *(void *)&v3[*v5])
            {
              uint64_t v20 = *(void *)(*(void *)&v3[*v7] + v22);
              *(void *)&v3[v21] = v22 + 8;
            }
            else
            {
              v3[*v6] = 1;
              uint64_t v20 = 0;
            }
            int v27 = &OBJC_IVAR___GEOURLCenterSpan__longitude;
            goto LABEL_42;
          case 3u:
            *(unsigned char *)(a1 + 40) |= 1u;
            uint64_t v23 = *v4;
            unint64_t v24 = *(void *)&v3[v23];
            if (v24 <= 0xFFFFFFFFFFFFFFF7 && v24 + 8 <= *(void *)&v3[*v5])
            {
              uint64_t v20 = *(void *)(*(void *)&v3[*v7] + v24);
              *(void *)&v3[v23] = v24 + 8;
            }
            else
            {
              v3[*v6] = 1;
              uint64_t v20 = 0;
            }
            int v27 = &OBJC_IVAR___GEOURLCenterSpan__latitudeDelta;
            goto LABEL_42;
          case 4u:
            *(unsigned char *)(a1 + 40) |= 4u;
            uint64_t v25 = *v4;
            unint64_t v26 = *(void *)&v3[v25];
            if (v26 <= 0xFFFFFFFFFFFFFFF7 && v26 + 8 <= *(void *)&v3[*v5])
            {
              uint64_t v20 = *(void *)(*(void *)&v3[*v7] + v26);
              *(void *)&v3[v25] = v26 + 8;
            }
            else
            {
              v3[*v6] = 1;
              uint64_t v20 = 0;
            }
            int v27 = &OBJC_IVAR___GEOURLCenterSpan__longitudeDelta;
LABEL_42:
            *(void *)(a1 + *v27) = v20;
            break;
          default:
            if ((PBReaderSkipValueWithTag() & 1) == 0) {
              goto LABEL_45;
            }
            break;
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v28 = v3[*v6] == 0;
  }
  else
  {
LABEL_45:
    BOOL v28 = 0;
  }
  objc_sync_exit(v3);

  return v28;
}

void sub_1898C8C48(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOURLCenterSpanReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOURLCenterSpanReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1898C8CBC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOURLCenterSpanIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  uint64_t v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  BOOL v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (!a1[*v4])
    {
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          uint64_t v14 = *v4;
          int v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      uint64_t v14 = *v4;
      int v15 = a1[v14];
      if (a1[v14]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v16 = v8 & 7;
      if (v15 || v16 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
        case 2u:
        case 3u:
        case 4u:
          if (v16 != 1) {
            goto LABEL_29;
          }
          uint64_t v18 = *v2;
          unint64_t v19 = *(void *)&a1[v18];
          if (v19 <= 0xFFFFFFFFFFFFFFF7 && (unint64_t v20 = v19 + 8, v20 <= *(void *)&a1[*v3])) {
            *(void *)&a1[v18] = v20;
          }
          else {
            a1[v14] = 1;
          }
          goto LABEL_26;
        default:
          if (!PBReaderSkipValueWithTag())
          {
LABEL_29:
            BOOL v21 = 0;
            goto LABEL_28;
          }
LABEL_26:
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_27;
          }
          break;
      }
    }
  }
LABEL_27:
  BOOL v21 = a1[*v4] == 0;
LABEL_28:
  PBReaderRecallMark();
  return v21;
}

void sub_1898C973C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOURLItemReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 36);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 32)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  int v11 = ((*(unsigned __int8 *)(a1 + 48) >> 2) & 1) + ((*(unsigned __int8 *)(a1 + 48) >> 1) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v7])
    {
      case -3:
        char v8 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        int v14 = v10 & 1 | v11;
        BOOL v15 = v14 != 0;
        if ((v14 != 0) | v8 & 1) {
          int v16 = 0;
        }
        else {
          int v16 = a3;
        }
        if (v14) {
          BOOL v17 = 1;
        }
        else {
          BOOL v17 = v16 == 0;
        }
        BOOL v59 = v17;
        uint64_t v18 = (int *)MEMORY[0x1E4F940E8];
        unint64_t v19 = (int *)MEMORY[0x1E4F940C8];
        unint64_t v20 = (int *)MEMORY[0x1E4F940B8];
        BOOL v21 = &OBJC_IVAR___GEOComposedRoute__visualInfosForRouteNameLabels;
        BOOL v58 = v15;
        break;
      default:
        ++v11;
LABEL_6:
        uint64_t v12 = v9;
        uint64_t v13 = v10;
LABEL_8:
        ++v7;
        uint64_t v9 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v18) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v19)) {
      goto LABEL_79;
    }
    char v22 = 0;
    unsigned int v23 = 0;
    unint64_t v24 = 0;
    while (1)
    {
      uint64_t v25 = *v18;
      uint64_t v26 = *(void *)(v3 + v25);
      unint64_t v27 = v26 + 1;
      if (v26 == -1 || v27 > *(void *)(v3 + *v6)) {
        break;
      }
      char v28 = *(unsigned char *)(*(void *)(v3 + *v20) + v26);
      *(void *)(v3 + v25) = v27;
      v24 |= (unint64_t)(v28 & 0x7F) << v22;
      if ((v28 & 0x80) == 0) {
        goto LABEL_26;
      }
      v22 += 7;
      BOOL v29 = v23++ >= 9;
      if (v29)
      {
        unint64_t v24 = 0;
        int v30 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_28;
      }
    }
    *(unsigned char *)(v3 + *v19) = 1;
LABEL_26:
    int v30 = *(unsigned __int8 *)(v3 + *v19);
    if (*(unsigned char *)(v3 + *v19)) {
      unint64_t v24 = 0;
    }
LABEL_28:
    if (v30 || (v24 & 7) == 4)
    {
LABEL_79:
      if (v15)
      {
        char v52 = 1;
        goto LABEL_94;
      }
      if (!v16) {
        goto LABEL_95;
      }
      while (1)
      {
        int v55 = *v16++;
        int v54 = v55;
        if (v55 == 1) {
          break;
        }
        if (v54 == 3)
        {
          char v53 = 2;
LABEL_85:
          *(unsigned char *)(a1 + v21[910]) |= v53;
        }
        else if (!v54)
        {
          goto LABEL_95;
        }
      }
      char v53 = 4;
      goto LABEL_85;
    }
    unint64_t v32 = v24 >> 3;
    BOOL v33 = v15;
    if (!v59)
    {
      BOOL v34 = v16;
      do
      {
        int v36 = *v34++;
        int v35 = v36;
        BOOL v33 = v36 != 0;
        if (v36) {
          BOOL v37 = v35 == v32;
        }
        else {
          BOOL v37 = 1;
        }
      }
      while (!v37);
    }
    if (v32 == 3) {
      break;
    }
    if (v32 == 2)
    {
      if (v8)
      {
        char v41 = 0;
        unsigned int v42 = 0;
        uint64_t v43 = 0;
        *(unsigned char *)(a1 + v21[910]) |= 1u;
        while (1)
        {
          uint64_t v44 = *v18;
          uint64_t v45 = *(void *)(v3 + v44);
          unint64_t v46 = v45 + 1;
          if (v45 == -1 || v46 > *(void *)(v3 + *v6)) {
            break;
          }
          char v47 = *(unsigned char *)(*(void *)(v3 + *v20) + v45);
          *(void *)(v3 + v44) = v46;
          v43 |= (unint64_t)(v47 & 0x7F) << v41;
          if ((v47 & 0x80) == 0) {
            goto LABEL_66;
          }
          v41 += 7;
          BOOL v29 = v42++ >= 9;
          if (v29)
          {
            uint64_t v43 = 0;
            goto LABEL_68;
          }
        }
        *(unsigned char *)(v3 + *v19) = 1;
LABEL_66:
        if (*(unsigned char *)(v3 + *v19)) {
          uint64_t v43 = 0;
        }
LABEL_68:
        *(unsigned char *)(a1 + 44) = v43 != 0;
        goto LABEL_75;
      }
    }
    else
    {
      if (v32 != 1)
      {
        int v48 = PBReaderSkipValueWithTag();
        unint64_t v19 = (int *)MEMORY[0x1E4F940C8];
        BOOL v15 = v58;
        if (!v48) {
          goto LABEL_90;
        }
        goto LABEL_75;
      }
      if (v33)
      {
        if ((*(unsigned char *)(a1 + v21[910]) & 4) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_91;
          }
          char v38 = objc_alloc_init(GEOPlace);
          if (!GEOPlaceReadAllFrom((uint64_t)v38, (void *)v3, v9 & 1)) {
            goto LABEL_92;
          }
          PBReaderRecallMark();
          uint64_t v39 = 24;
LABEL_52:
          uint64_t v40 = *(void **)(a1 + v39);
          *(void *)(a1 + v39) = v38;

          --v7;
          BOOL v21 = &OBJC_IVAR___GEOComposedRoute__visualInfosForRouteNameLabels;
LABEL_74:
          BOOL v15 = v58;
          unint64_t v19 = (int *)MEMORY[0x1E4F940C8];
          goto LABEL_75;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_91;
        }
        char v50 = 32 * *(unsigned char *)(a1 + v21[910]);
LABEL_73:
        v7 += v50 >> 7;
        goto LABEL_74;
      }
    }
LABEL_63:
    char v49 = PBReaderSkipValueWithTag();
    unint64_t v19 = (int *)MEMORY[0x1E4F940C8];
    BOOL v15 = v58;
    if ((v49 & 1) == 0)
    {
LABEL_90:
      char v52 = 0;
      goto LABEL_94;
    }
LABEL_75:
    if (v7) {
      char v51 = 1;
    }
    else {
      char v51 = v15;
    }
    if ((v51 & 1) == 0) {
      goto LABEL_79;
    }
  }
  if (!v33) {
    goto LABEL_63;
  }
  if ((*(unsigned char *)(a1 + v21[910]) & 2) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0)
    {
LABEL_91:
      char v52 = 0;
      goto LABEL_93;
    }
    char v50 = *(unsigned char *)(a1 + v21[910]) << 6;
    goto LABEL_73;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_91;
  }
  char v38 = objc_alloc_init(GEOMapItemStorage);
  if (GEOMapItemStorageReadAllFrom((uint64_t)v38, (void *)v3, v9 & 1))
  {
    PBReaderRecallMark();
    uint64_t v39 = 16;
    goto LABEL_52;
  }
LABEL_92:

  char v52 = 0;
  BOOL v21 = &OBJC_IVAR___GEOComposedRoute__visualInfosForRouteNameLabels;
LABEL_93:
  BOOL v15 = v58;
  unint64_t v19 = (int *)MEMORY[0x1E4F940C8];
LABEL_94:
  *(unsigned char *)(a1 + v21[910]) |= 4u;
  *(unsigned char *)(a1 + v21[910]) |= 2u;
  if (v52)
  {
LABEL_95:
    unint64_t v3 = *(unsigned char *)(v3 + *v19) == 0;
    if (v15) {
      goto LABEL_96;
    }
  }
  else
  {
    unint64_t v3 = 0;
    if (v15)
    {
LABEL_96:
      int v56 = *(void **)(a1 + 8);
      *(void *)(a1 + 8) = 0;
    }
  }
  return v3;
}

void sub_1898C9DC8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898CA1A4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOURLItemReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 36))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOURLItemReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 40));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 32) = [v8 position];
  *(_DWORD *)(a1 + 36) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOURLItemReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOURLItemReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOURLItemReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    [*(id *)(a1 + 24) readAll:1];
    [*(id *)(a1 + 16) readAll:1];
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return Specified;
}

void sub_1898CA35C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898CA4FC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOURLItemIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  char v2 = *(unsigned char *)(a1 + 48);
  if ((v2 & 8) != 0) {
    return 1;
  }
  if ((*(unsigned char *)(a1 + 48) & 4) != 0)
  {
    if (GEOPlaceIsDirty(*(os_unfair_lock_s **)(a1 + 24))) {
      return 1;
    }
    char v2 = *(unsigned char *)(a1 + 48);
  }
  if ((v2 & 2) == 0) {
    return 0;
  }
  BOOL v4 = *(os_unfair_lock_s **)(a1 + 16);

  return (uint64_t)GEOMapItemStorageIsDirty(v4);
}

void sub_1898CA72C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898CAE90(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOURLOptionsReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 60);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 56)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  unsigned int v11 = (unsigned __int16)(vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int16 *)(a1 + 84)), (uint16x4_t)0xFFF6FFF7FFF8FFF9), (int8x8_t)0x1000100010001))+ ((*(_WORD *)(a1 + 84) >> 11) & 1));
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v7])
    {
      case -3:
        char v8 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        BOOL v14 = v11 > 3;
        char v15 = v10 | v14;
        if (((v10 | v14) | v8)) {
          int v16 = 0;
        }
        else {
          int v16 = a3;
        }
        char v99 = (v16 == 0) | v15;
        BOOL v17 = (int *)MEMORY[0x1E4F940E8];
        uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
        unint64_t v19 = (int *)MEMORY[0x1E4F940B8];
        char v98 = v10 | v14;
        break;
      default:
        ++v11;
LABEL_6:
        uint64_t v12 = v9;
        uint64_t v13 = v10;
LABEL_8:
        ++v7;
        uint64_t v9 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v17) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v18)) {
      goto LABEL_165;
    }
    char v20 = 0;
    unsigned int v21 = 0;
    unint64_t v22 = 0;
    while (1)
    {
      uint64_t v23 = *v17;
      uint64_t v24 = *(void *)(v3 + v23);
      unint64_t v25 = v24 + 1;
      if (v24 == -1 || v25 > *(void *)(v3 + *v6)) {
        break;
      }
      char v26 = *(unsigned char *)(*(void *)(v3 + *v19) + v24);
      *(void *)(v3 + v23) = v25;
      v22 |= (unint64_t)(v26 & 0x7F) << v20;
      if ((v26 & 0x80) == 0) {
        goto LABEL_23;
      }
      v20 += 7;
      BOOL v27 = v21++ >= 9;
      if (v27)
      {
        unint64_t v22 = 0;
        int v28 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_25;
      }
    }
    *(unsigned char *)(v3 + *v18) = 1;
LABEL_23:
    int v28 = *(unsigned __int8 *)(v3 + *v18);
    if (*(unsigned char *)(v3 + *v18)) {
      unint64_t v22 = 0;
    }
LABEL_25:
    if (v28 || (v22 & 7) == 4)
    {
LABEL_165:
      if (v15)
      {
        char v92 = 1;
        goto LABEL_177;
      }
      if (v16)
      {
        while (1)
        {
          int v93 = *v16++;
          __int16 v94 = 256;
          switch(v93)
          {
            case 0:
              goto LABEL_178;
            case 4:
              goto LABEL_173;
            case 5:
              __int16 v94 = 128;
              goto LABEL_173;
            case 6:
              __int16 v94 = 512;
              goto LABEL_173;
            case 8:
              __int16 v94 = 1024;
              goto LABEL_173;
            case 9:
              __int16 v94 = 2048;
LABEL_173:
              *(_WORD *)(a1 + 84) |= v94;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_178;
    }
    unint64_t v30 = v22 >> 3;
    BOOL v31 = v15;
    if ((v99 & 1) == 0)
    {
      unint64_t v32 = v16;
      do
      {
        int v34 = *v32++;
        int v33 = v34;
        BOOL v31 = v34 != 0;
        if (v34) {
          BOOL v35 = v33 == v30;
        }
        else {
          BOOL v35 = 1;
        }
      }
      while (!v35);
    }
    switch((int)v30)
    {
      case 1:
        if ((v8 & 1) == 0) {
          goto LABEL_120;
        }
        char v36 = 0;
        unsigned int v37 = 0;
        uint64_t v38 = 0;
        *(_WORD *)(a1 + 84) |= 0x10u;
        while (1)
        {
          uint64_t v39 = *v17;
          uint64_t v40 = *(void *)(v3 + v39);
          unint64_t v41 = v40 + 1;
          if (v40 == -1 || v41 > *(void *)(v3 + *v6)) {
            break;
          }
          char v42 = *(unsigned char *)(*(void *)(v3 + *v19) + v40);
          *(void *)(v3 + v39) = v41;
          v38 |= (unint64_t)(v42 & 0x7F) << v36;
          if ((v42 & 0x80) == 0) {
            goto LABEL_123;
          }
          v36 += 7;
          BOOL v27 = v37++ >= 9;
          if (v27)
          {
            uint64_t v38 = 0;
            goto LABEL_125;
          }
        }
        *(unsigned char *)(v3 + *v18) = 1;
LABEL_123:
        if (*(unsigned char *)(v3 + *v18)) {
          uint64_t v38 = 0;
        }
LABEL_125:
        BOOL v88 = v38 != 0;
        uint64_t v89 = 81;
        goto LABEL_151;
      case 2:
        if ((v8 & 1) == 0) {
          goto LABEL_120;
        }
        char v44 = 0;
        unsigned int v45 = 0;
        uint64_t v46 = 0;
        *(_WORD *)(a1 + 84) |= 1u;
        while (2)
        {
          uint64_t v47 = *v17;
          uint64_t v48 = *(void *)(v3 + v47);
          unint64_t v49 = v48 + 1;
          if (v48 == -1 || v49 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v50 = *(unsigned char *)(*(void *)(v3 + *v19) + v48);
            *(void *)(v3 + v47) = v49;
            v46 |= (unint64_t)(v50 & 0x7F) << v44;
            if (v50 < 0)
            {
              v44 += 7;
              BOOL v27 = v45++ >= 9;
              if (v27)
              {
                LODWORD(v46) = 0;
                goto LABEL_129;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          LODWORD(v46) = 0;
        }
LABEL_129:
        uint64_t v90 = 68;
        goto LABEL_138;
      case 3:
        if ((v8 & 1) == 0) {
          goto LABEL_120;
        }
        char v51 = 0;
        unsigned int v52 = 0;
        uint64_t v46 = 0;
        *(_WORD *)(a1 + 84) |= 2u;
        while (2)
        {
          uint64_t v53 = *v17;
          uint64_t v54 = *(void *)(v3 + v53);
          unint64_t v55 = v54 + 1;
          if (v54 == -1 || v55 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v56 = *(unsigned char *)(*(void *)(v3 + *v19) + v54);
            *(void *)(v3 + v53) = v55;
            v46 |= (unint64_t)(v56 & 0x7F) << v51;
            if (v56 < 0)
            {
              v51 += 7;
              BOOL v27 = v52++ >= 9;
              if (v27)
              {
                LODWORD(v46) = 0;
                goto LABEL_133;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          LODWORD(v46) = 0;
        }
LABEL_133:
        uint64_t v90 = 72;
        goto LABEL_138;
      case 4:
        if (!v31) {
          goto LABEL_120;
        }
        if ((*(_WORD *)(a1 + 84) & 0x100) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_176;
          }
          __int16 v91 = *(_WORD *)(a1 + 84) << 7;
          goto LABEL_162;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_176;
        }
        uint64_t v97 = objc_alloc_init(GEOURLCenterSpan);
        if (!GEOURLCenterSpanReadAllFrom((uint64_t)v97, (void *)v3)) {
          goto LABEL_175;
        }
        PBReaderRecallMark();
        uint64_t v57 = 24;
        goto LABEL_94;
      case 5:
        if (!v31) {
          goto LABEL_120;
        }
        if ((*(_WORD *)(a1 + 84) & 0x80) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_176;
          }
          __int16 v91 = *(_WORD *)(a1 + 84) << 8;
          goto LABEL_162;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_176;
        }
        uint64_t v97 = objc_alloc_init(GEOURLCamera);
        if (!GEOURLCameraReadAllFrom((uint64_t)v97, (void *)v3)) {
          goto LABEL_175;
        }
        PBReaderRecallMark();
        uint64_t v57 = 16;
        goto LABEL_94;
      case 6:
        if (!v31) {
          goto LABEL_120;
        }
        if ((*(_WORD *)(a1 + 84) & 0x200) == 0)
        {
          uint64_t v58 = PBReaderReadString();
          BOOL v59 = *(void **)(a1 + 32);
          *(void *)(a1 + 32) = v58;
          goto LABEL_95;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_176;
        }
        __int16 v91 = *(_WORD *)(a1 + 84) << 6;
        goto LABEL_162;
      case 7:
        if ((v8 & 1) == 0) {
          goto LABEL_120;
        }
        char v60 = 0;
        unsigned int v61 = 0;
        uint64_t v46 = 0;
        *(_WORD *)(a1 + 84) |= 4u;
        while (2)
        {
          uint64_t v62 = *v17;
          uint64_t v63 = *(void *)(v3 + v62);
          unint64_t v64 = v63 + 1;
          if (v63 == -1 || v64 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v65 = *(unsigned char *)(*(void *)(v3 + *v19) + v63);
            *(void *)(v3 + v62) = v64;
            v46 |= (unint64_t)(v65 & 0x7F) << v60;
            if (v65 < 0)
            {
              v60 += 7;
              BOOL v27 = v61++ >= 9;
              if (v27)
              {
                LODWORD(v46) = 0;
                goto LABEL_137;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          LODWORD(v46) = 0;
        }
LABEL_137:
        uint64_t v90 = 76;
LABEL_138:
        *(_DWORD *)(a1 + v90) = v46;
        goto LABEL_164;
      case 8:
        if (!v31) {
          goto LABEL_120;
        }
        if ((*(_WORD *)(a1 + 84) & 0x400) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_176;
          }
          __int16 v91 = 32 * *(_WORD *)(a1 + 84);
          goto LABEL_162;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_176;
        }
        uint64_t v97 = objc_alloc_init(GEOURLRouteHandle);
        if (!GEOURLRouteHandleReadAllFrom((uint64_t)v97, (void *)v3, v9 & 1)) {
          goto LABEL_175;
        }
        PBReaderRecallMark();
        uint64_t v57 = 40;
        goto LABEL_94;
      case 9:
        if (!v31) {
          goto LABEL_120;
        }
        if ((*(_WORD *)(a1 + 84) & 0x800) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_176;
          }
          __int16 v91 = 16 * *(_WORD *)(a1 + 84);
LABEL_162:
          v7 += v91 >> 15;
LABEL_163:
          char v15 = v98;
          uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
LABEL_164:
          if (!(v15 & 1 | (v7 != 0))) {
            goto LABEL_165;
          }
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_176;
        }
        uint64_t v97 = objc_alloc_init(GEOURLTimePoint);
        if (GEOURLTimePointReadAllFrom((uint64_t)v97, (void *)v3))
        {
          PBReaderRecallMark();
          uint64_t v57 = 48;
LABEL_94:
          BOOL v59 = *(void **)(a1 + v57);
          *(void *)(a1 + v57) = v97;
LABEL_95:

          --v7;
          goto LABEL_163;
        }
LABEL_175:

LABEL_176:
        char v92 = 0;
        char v15 = v98;
        uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
LABEL_177:
        *(_WORD *)(a1 + 84) |= 0x100u;
        *(_WORD *)(a1 + 84) |= 0x80u;
        *(_WORD *)(a1 + 84) |= 0x200u;
        *(_WORD *)(a1 + 84) |= 0x400u;
        *(_WORD *)(a1 + 84) |= 0x800u;
        if (v92)
        {
LABEL_178:
          unint64_t v3 = *(unsigned char *)(v3 + *v18) == 0;
          if (v15) {
            goto LABEL_179;
          }
        }
        else
        {
          unint64_t v3 = 0;
          if (v15)
          {
LABEL_179:
            unsigned int v95 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = 0;
          }
        }
        return v3;
      case 10:
        if ((v8 & 1) == 0) {
          goto LABEL_120;
        }
        char v66 = 0;
        unsigned int v67 = 0;
        uint64_t v68 = 0;
        *(_WORD *)(a1 + 84) |= 8u;
        while (2)
        {
          uint64_t v69 = *v17;
          uint64_t v70 = *(void *)(v3 + v69);
          unint64_t v71 = v70 + 1;
          if (v70 == -1 || v71 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v72 = *(unsigned char *)(*(void *)(v3 + *v19) + v70);
            *(void *)(v3 + v69) = v71;
            v68 |= (unint64_t)(v72 & 0x7F) << v66;
            if (v72 < 0)
            {
              v66 += 7;
              BOOL v27 = v67++ >= 9;
              if (v27)
              {
                uint64_t v68 = 0;
                goto LABEL_142;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          uint64_t v68 = 0;
        }
LABEL_142:
        BOOL v88 = v68 != 0;
        uint64_t v89 = 80;
        goto LABEL_151;
      case 11:
        if ((v8 & 1) == 0) {
          goto LABEL_120;
        }
        char v73 = 0;
        unsigned int v74 = 0;
        uint64_t v75 = 0;
        *(_WORD *)(a1 + 84) |= 0x40u;
        while (2)
        {
          uint64_t v76 = *v17;
          uint64_t v77 = *(void *)(v3 + v76);
          unint64_t v78 = v77 + 1;
          if (v77 == -1 || v78 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v79 = *(unsigned char *)(*(void *)(v3 + *v19) + v77);
            *(void *)(v3 + v76) = v78;
            v75 |= (unint64_t)(v79 & 0x7F) << v73;
            if (v79 < 0)
            {
              v73 += 7;
              BOOL v27 = v74++ >= 9;
              if (v27)
              {
                uint64_t v75 = 0;
                goto LABEL_146;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          uint64_t v75 = 0;
        }
LABEL_146:
        BOOL v88 = v75 != 0;
        uint64_t v89 = 83;
        goto LABEL_151;
      case 12:
        if (v8)
        {
          char v80 = 0;
          unsigned int v81 = 0;
          uint64_t v82 = 0;
          *(_WORD *)(a1 + 84) |= 0x20u;
          while (1)
          {
            uint64_t v83 = *v17;
            uint64_t v84 = *(void *)(v3 + v83);
            unint64_t v85 = v84 + 1;
            if (v84 == -1 || v85 > *(void *)(v3 + *v6)) {
              break;
            }
            char v86 = *(unsigned char *)(*(void *)(v3 + *v19) + v84);
            *(void *)(v3 + v83) = v85;
            v82 |= (unint64_t)(v86 & 0x7F) << v80;
            if ((v86 & 0x80) == 0) {
              goto LABEL_148;
            }
            v80 += 7;
            BOOL v27 = v81++ >= 9;
            if (v27)
            {
              uint64_t v82 = 0;
              goto LABEL_150;
            }
          }
          *(unsigned char *)(v3 + *v18) = 1;
LABEL_148:
          if (*(unsigned char *)(v3 + *v18)) {
            uint64_t v82 = 0;
          }
LABEL_150:
          BOOL v88 = v82 != 0;
          uint64_t v89 = 82;
LABEL_151:
          *(unsigned char *)(a1 + v89) = v88;
        }
        else
        {
LABEL_120:
          char v87 = PBReaderSkipValueWithTag();
          uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
          char v15 = v98;
          if ((v87 & 1) == 0)
          {
LABEL_174:
            char v92 = 0;
            goto LABEL_177;
          }
        }
        goto LABEL_164;
      default:
        int v43 = PBReaderSkipValueWithTag();
        uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
        char v15 = v98;
        if (!v43) {
          goto LABEL_174;
        }
        goto LABEL_164;
    }
  }
}

void sub_1898CBBF0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898CBD34(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898CC034(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898CC1A4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOURLOptionsCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  [*(id *)(a1 + 24) readAll:1];
  [*(id *)(a1 + 16) readAll:1];
  [*(id *)(a1 + 40) readAll:1];
  char v2 = *(void **)(a1 + 48);

  return [v2 readAll:1];
}

unint64_t GEOURLOptionsReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 60))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOURLOptionsReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = [v8 position];
  *(_DWORD *)(a1 + 60) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOURLOptionsReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOURLOptionsReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOURLOptionsReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOURLOptionsCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_1898CD148(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOURLOptionsReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOURLOptionsReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1898CD1AC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOURLOptionsIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  char v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  BOOL v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_98;
          }
          unsigned int v17 = 0;
          while (1)
          {
            uint64_t v18 = *v2;
            uint64_t v19 = *(void *)&a1[v18];
            unint64_t v20 = v19 + 1;
            if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
              goto LABEL_94;
            }
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if (v21 < 0)
            {
              BOOL v22 = v17++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_95;
          }
        case 2u:
          if ((v8 & 7) != 0) {
            goto LABEL_98;
          }
          unsigned int v23 = 0;
          while (1)
          {
            uint64_t v24 = *v2;
            uint64_t v25 = *(void *)&a1[v24];
            unint64_t v26 = v25 + 1;
            if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
              goto LABEL_94;
            }
            int v27 = *(char *)(*(void *)&a1[*v5] + v25);
            *(void *)&a1[v24] = v26;
            if (v27 < 0)
            {
              BOOL v22 = v23++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_95;
          }
        case 3u:
          if ((v8 & 7) != 0) {
            goto LABEL_98;
          }
          unsigned int v28 = 0;
          while (1)
          {
            uint64_t v29 = *v2;
            uint64_t v30 = *(void *)&a1[v29];
            unint64_t v31 = v30 + 1;
            if (v30 == -1 || v31 > *(void *)&a1[*v3]) {
              goto LABEL_94;
            }
            int v32 = *(char *)(*(void *)&a1[*v5] + v30);
            *(void *)&a1[v29] = v31;
            if (v32 < 0)
            {
              BOOL v22 = v28++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_95;
          }
        case 4u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOURLCenterSpanIsValid(a1)) {
            goto LABEL_98;
          }
          goto LABEL_69;
        case 5u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOURLCameraIsValid(a1)) {
            goto LABEL_98;
          }
          goto LABEL_69;
        case 6u:
          if (v15 == 2) {
            goto LABEL_52;
          }
          goto LABEL_98;
        case 7u:
          if ((v8 & 7) != 0) {
            goto LABEL_98;
          }
          unsigned int v33 = 0;
          while (1)
          {
            uint64_t v34 = *v2;
            uint64_t v35 = *(void *)&a1[v34];
            unint64_t v36 = v35 + 1;
            if (v35 == -1 || v36 > *(void *)&a1[*v3]) {
              goto LABEL_94;
            }
            int v37 = *(char *)(*(void *)&a1[*v5] + v35);
            *(void *)&a1[v34] = v36;
            if (v37 < 0)
            {
              BOOL v22 = v33++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_95;
          }
        case 8u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOURLRouteHandleIsValid(a1)) {
            goto LABEL_98;
          }
          goto LABEL_69;
        case 9u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOURLTimePointIsValid(a1)) {
            goto LABEL_98;
          }
LABEL_69:
          PBReaderRecallMark();
          continue;
        case 0xAu:
          if ((v8 & 7) != 0) {
            goto LABEL_98;
          }
          unsigned int v38 = 0;
          while (1)
          {
            uint64_t v39 = *v2;
            uint64_t v40 = *(void *)&a1[v39];
            unint64_t v41 = v40 + 1;
            if (v40 == -1 || v41 > *(void *)&a1[*v3]) {
              goto LABEL_94;
            }
            int v42 = *(char *)(*(void *)&a1[*v5] + v40);
            *(void *)&a1[v39] = v41;
            if (v42 < 0)
            {
              BOOL v22 = v38++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_95;
          }
        case 0xBu:
          if ((v8 & 7) != 0) {
            goto LABEL_98;
          }
          unsigned int v43 = 0;
          while (1)
          {
            uint64_t v44 = *v2;
            uint64_t v45 = *(void *)&a1[v44];
            unint64_t v46 = v45 + 1;
            if (v45 == -1 || v46 > *(void *)&a1[*v3]) {
              goto LABEL_94;
            }
            int v47 = *(char *)(*(void *)&a1[*v5] + v45);
            *(void *)&a1[v44] = v46;
            if (v47 < 0)
            {
              BOOL v22 = v43++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_95;
          }
        case 0xCu:
          if ((v8 & 7) != 0) {
            goto LABEL_98;
          }
          unsigned int v48 = 0;
          break;
        default:
LABEL_52:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_98:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        uint64_t v49 = *v2;
        uint64_t v50 = *(void *)&a1[v49];
        unint64_t v51 = v50 + 1;
        if (v50 == -1 || v51 > *(void *)&a1[*v3]) {
          break;
        }
        int v52 = *(char *)(*(void *)&a1[*v5] + v50);
        *(void *)&a1[v49] = v51;
        if (v52 < 0)
        {
          BOOL v22 = v48++ > 8;
          if (!v22) {
            continue;
          }
        }
        goto LABEL_95;
      }
LABEL_94:
      a1[*v4] = 1;
LABEL_95:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v53 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v53;
}

BOOL GEOURLRouteHandleIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  char v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  BOOL v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (!a1[*v4])
    {
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 != 2) {
            goto LABEL_32;
          }
          goto LABEL_28;
        case 2u:
          if (v15 == 2) {
            goto LABEL_28;
          }
          goto LABEL_32;
        case 3u:
          if (v15 == 2) {
            goto LABEL_28;
          }
          goto LABEL_32;
        case 4u:
          if (v15 != 2) {
            goto LABEL_32;
          }
LABEL_28:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_32:
            BOOL v17 = 0;
            goto LABEL_31;
          }
LABEL_29:
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_30;
          }
          break;
        default:
          if (!PBReaderSkipValueWithTag()) {
            goto LABEL_32;
          }
          goto LABEL_29;
      }
    }
  }
LABEL_30:
  BOOL v17 = a1[*v4] == 0;
LABEL_31:
  PBReaderRecallMark();
  return v17;
}

BOOL GEOURLTimePointIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  char v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  BOOL v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_37;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          uint64_t v14 = *v4;
          int v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      uint64_t v14 = *v4;
      int v15 = a1[v14];
      if (a1[v14]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v16 = v8 & 7;
      if (v15 || v16 == 4) {
        goto LABEL_37;
      }
      if ((v8 >> 3) == 2) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if (v16 != 1) {
          goto LABEL_39;
        }
        uint64_t v18 = *v2;
        unint64_t v19 = *(void *)&a1[v18];
        if (v19 > 0xFFFFFFFFFFFFFFF7) {
          goto LABEL_35;
        }
        unint64_t v20 = v19 + 8;
        if (v20 > *(void *)&a1[*v3]) {
          goto LABEL_35;
        }
        *(void *)&a1[v18] = v20;
      }
      else if (!PBReaderSkipValueWithTag())
      {
LABEL_39:
        BOOL v27 = 0;
        goto LABEL_38;
      }
LABEL_36:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_37;
      }
    }
    if ((v8 & 7) != 0) {
      goto LABEL_39;
    }
    unsigned int v21 = 0;
    while (1)
    {
      uint64_t v22 = *v2;
      uint64_t v23 = *(void *)&a1[v22];
      unint64_t v24 = v23 + 1;
      if (v23 == -1 || v24 > *(void *)&a1[*v3]) {
        break;
      }
      int v25 = *(char *)(*(void *)&a1[*v5] + v23);
      *(void *)&a1[v22] = v24;
      if (v25 < 0 && v21++ <= 8) {
        continue;
      }
      goto LABEL_36;
    }
    uint64_t v14 = *v4;
LABEL_35:
    a1[v14] = 1;
    goto LABEL_36;
  }
LABEL_37:
  BOOL v27 = a1[*v4] == 0;
LABEL_38:
  PBReaderRecallMark();
  return v27;
}

uint64_t _GEOURLOptionsIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  unsigned int v2 = *(unsigned __int16 *)(a1 + 84);
  if ((v2 & 0x1380) != 0) {
    return 1;
  }
  if ((v2 & 0x400) != 0)
  {
    if (GEOURLRouteHandleIsDirty(*(void *)(a1 + 40))) {
      return 1;
    }
    unsigned int v2 = *(unsigned __int16 *)(a1 + 84);
  }
  return (v2 >> 11) & 1;
}

os_unfair_lock_s *GEOURLOptionsIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOURLOptionsIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 16);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_1898CE0E8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898CE8F8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOURLPresentReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 36);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 32)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  int v11 = ((*(unsigned __int8 *)(a1 + 44) >> 1) & 1) + (*(unsigned char *)(a1 + 44) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v7])
    {
      case -3:
        char v8 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        int v14 = v10 & 1 | v11;
        BOOL v15 = v14 != 0;
        if ((v14 != 0) | v8 & 1) {
          int v16 = 0;
        }
        else {
          int v16 = a3;
        }
        BOOL v17 = v16 == 0;
        if (v14) {
          BOOL v17 = 1;
        }
        BOOL v48 = v17;
        uint64_t v18 = (int *)MEMORY[0x1E4F940E8];
        unint64_t v19 = (int *)MEMORY[0x1E4F940C8];
        unint64_t v20 = (int *)MEMORY[0x1E4F940B8];
        unsigned int v21 = &OBJC_IVAR___GEOComposedRoute__visualInfosForRouteNameLabels;
        break;
      default:
        ++v11;
LABEL_6:
        uint64_t v12 = v9;
        uint64_t v13 = v10;
LABEL_8:
        ++v7;
        uint64_t v9 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v18) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v19)) {
      goto LABEL_62;
    }
    char v22 = 0;
    unsigned int v23 = 0;
    unint64_t v24 = 0;
    while (1)
    {
      uint64_t v25 = *v18;
      uint64_t v26 = *(void *)(v3 + v25);
      unint64_t v27 = v26 + 1;
      if (v26 == -1 || v27 > *(void *)(v3 + *v6)) {
        break;
      }
      char v28 = *(unsigned char *)(*(void *)(v3 + *v20) + v26);
      *(void *)(v3 + v25) = v27;
      v24 |= (unint64_t)(v28 & 0x7F) << v22;
      if ((v28 & 0x80) == 0) {
        goto LABEL_25;
      }
      v22 += 7;
      if (v23++ >= 9)
      {
        unint64_t v24 = 0;
        int v30 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v19) = 1;
LABEL_25:
    int v30 = *(unsigned __int8 *)(v3 + *v19);
    if (*(unsigned char *)(v3 + *v19)) {
      unint64_t v24 = 0;
    }
LABEL_27:
    if (v30 || (v24 & 7) == 4)
    {
LABEL_62:
      if (v15)
      {
        char v43 = 1;
        goto LABEL_74;
      }
      if (v16)
      {
        do
        {
          while (1)
          {
            int v45 = *v16++;
            int v44 = v45;
            if (v45 != 1 && v44 != 2) {
              break;
            }
            *(unsigned char *)(a1 + v21[916]) |= v44;
          }
        }
        while (v44);
      }
      goto LABEL_75;
    }
    unint64_t v32 = v24 >> 3;
    BOOL v33 = v15;
    if (!v48)
    {
      uint64_t v34 = v16;
      do
      {
        int v36 = *v34++;
        int v35 = v36;
        BOOL v33 = v36 != 0;
        if (v36) {
          BOOL v37 = v35 == v32;
        }
        else {
          BOOL v37 = 1;
        }
      }
      while (!v37);
    }
    if (v32 == 2) {
      break;
    }
    if (v32 != 1)
    {
      int v40 = PBReaderSkipValueWithTag();
      unint64_t v19 = (int *)MEMORY[0x1E4F940C8];
      if (!v40) {
        goto LABEL_70;
      }
      goto LABEL_58;
    }
    if (v33 && (*(unsigned char *)(a1 + v21[916]) & 1) == 0)
    {
      if ((PBReaderPlaceMark() & 1) == 0) {
        goto LABEL_71;
      }
      unsigned int v38 = objc_alloc_init(GEOURLItem);
      if (!GEOURLItemReadAllFrom((uint64_t)v38, (void *)v3, v9 & 1)) {
        goto LABEL_72;
      }
      PBReaderRecallMark();
      -[GEOURLPresent _addNoFlagsItem:](a1, v38);

LABEL_50:
      unsigned int v21 = &OBJC_IVAR___GEOComposedRoute__visualInfosForRouteNameLabels;
LABEL_57:
      unint64_t v19 = (int *)MEMORY[0x1E4F940C8];
      goto LABEL_58;
    }
LABEL_53:
    char v41 = PBReaderSkipValueWithTag();
    unint64_t v19 = (int *)MEMORY[0x1E4F940C8];
    if ((v41 & 1) == 0)
    {
LABEL_70:
      char v43 = 0;
      goto LABEL_74;
    }
LABEL_58:
    if (v7) {
      char v42 = 1;
    }
    else {
      char v42 = v15;
    }
    if ((v42 & 1) == 0) {
      goto LABEL_62;
    }
  }
  if (!v33) {
    goto LABEL_53;
  }
  if ((*(unsigned char *)(a1 + v21[916]) & 2) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0)
    {
LABEL_71:
      char v43 = 0;
      goto LABEL_73;
    }
    v7 += *(unsigned __int8 *)(a1 + v21[916]) << 30 >> 31;
    goto LABEL_57;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_71;
  }
  unsigned int v38 = objc_alloc_init(GEOURLOptions);
  if (GEOURLOptionsReadAllFrom((uint64_t)v38, (void *)v3, v9 & 1))
  {
    PBReaderRecallMark();
    uint64_t v39 = *(void **)(a1 + 24);
    *(void *)(a1 + 24) = v38;

    --v7;
    goto LABEL_50;
  }
LABEL_72:

  char v43 = 0;
  unsigned int v21 = &OBJC_IVAR___GEOComposedRoute__visualInfosForRouteNameLabels;
LABEL_73:
  unint64_t v19 = (int *)MEMORY[0x1E4F940C8];
LABEL_74:
  *(unsigned char *)(a1 + v21[916]) |= 1u;
  *(unsigned char *)(a1 + v21[916]) |= 2u;
  if (v43)
  {
LABEL_75:
    unint64_t v3 = *(unsigned char *)(v3 + *v19) == 0;
    if (!v15) {
      return v3;
    }
    goto LABEL_76;
  }
  unint64_t v3 = 0;
  if (v15)
  {
LABEL_76:
    unint64_t v46 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_1898CEFA4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898CF51C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOURLPresentReadAllFrom(uint64_t a1, void *a2)
{
  if (*(_DWORD *)(a1 + 36))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOURLPresentReadAllFrom can only be called once per object"];
  }
  else
  {
    if (!((unint64_t)[a2 position] >> 32)
      && !((unint64_t)[a2 length] >> 32))
    {
      os_unfair_lock_lock((os_unfair_lock_t)(a1 + 40));
      id v6 = a2;
      objc_sync_enter(v6);
      objc_storeStrong((id *)(a1 + 8), a2);
      *(_DWORD *)(a1 + 32) = [v6 position];
      *(_DWORD *)(a1 + 36) = [v6 length];
      unint64_t Specified = GEOURLPresentReadSpecified(a1, (unint64_t)v6, (int *)&GEOURLPresentReadAllFrom_initialTag);
      objc_sync_exit(v6);

      os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
      return Specified;
    }
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v7 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v7, 2u);
    }
  }
  return 0;
}

void sub_1898CF69C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898CF9C8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898CFBFC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898CFEFC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOURLRouteHandleReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  id v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 52);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 48)];
  char v7 = 0;
  uint64_t v8 = 0;
  char v9 = 0;
  unsigned int v10 = ((*(unsigned __int8 *)(a1 + 60) >> 1) & 1)
      + (*(unsigned char *)(a1 + 60) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 2) & 1);
  while (1)
  {
    unsigned int v11 = a3[v8];
    if (v11 >= 0xFFFFFFFE)
    {
      char v9 = 1;
      goto LABEL_9;
    }
    if (v11 != -3) {
      break;
    }
    char v7 = 1;
LABEL_9:
    ++v8;
  }
  if (v11)
  {
    ++v10;
    goto LABEL_9;
  }
  char v12 = v9 | (v10 > 2);
  if (v9 & 1 | (v10 > 2) | v7 & 1) {
    uint64_t v13 = 0;
  }
  else {
    uint64_t v13 = a3;
  }
  int v14 = (int *)MEMORY[0x1E4F940E8];
  BOOL v15 = (int *)MEMORY[0x1E4F940C8];
  int v16 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(void *)(v3 + *v14) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v15)) {
      goto LABEL_66;
    }
    char v17 = 0;
    unsigned int v18 = 0;
    unint64_t v19 = 0;
    while (1)
    {
      uint64_t v20 = *v14;
      uint64_t v21 = *(void *)(v3 + v20);
      unint64_t v22 = v21 + 1;
      if (v21 == -1 || v22 > *(void *)(v3 + *v6)) {
        break;
      }
      char v23 = *(unsigned char *)(*(void *)(v3 + *v16) + v21);
      *(void *)(v3 + v20) = v22;
      v19 |= (unint64_t)(v23 & 0x7F) << v17;
      if ((v23 & 0x80) == 0) {
        goto LABEL_24;
      }
      v17 += 7;
      if (v18++ >= 9)
      {
        unint64_t v19 = 0;
        int v25 = *(unsigned __int8 *)(v3 + *v15);
        goto LABEL_26;
      }
    }
    *(unsigned char *)(v3 + *v15) = 1;
LABEL_24:
    int v25 = *(unsigned __int8 *)(v3 + *v15);
    if (*(unsigned char *)(v3 + *v15)) {
      unint64_t v19 = 0;
    }
LABEL_26:
    if (v25 || (v19 & 7) == 4)
    {
LABEL_66:
      if (v12)
      {
        char v39 = 1;
        goto LABEL_77;
      }
      if (v13)
      {
        while (1)
        {
          int v41 = *v13++;
          char v40 = 1;
          switch(v41)
          {
            case 0:
              goto LABEL_78;
            case 1:
              goto LABEL_73;
            case 2:
              char v40 = 2;
              goto LABEL_73;
            case 3:
              char v40 = 8;
              goto LABEL_73;
            case 4:
              char v40 = 4;
LABEL_73:
              *(unsigned char *)(a1 + 60) |= v40;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_78;
    }
    unint64_t v27 = v19 >> 3;
    BOOL v28 = v12;
    if (!((v13 == 0) | v12 & 1))
    {
      uint64_t v29 = v13;
      do
      {
        int v31 = *v29++;
        int v30 = v31;
        BOOL v28 = v31 != 0;
        if (v31) {
          BOOL v32 = v30 == v27;
        }
        else {
          BOOL v32 = 1;
        }
      }
      while (!v32);
    }
    switch((int)v27)
    {
      case 1:
        if (!v28) {
          goto LABEL_53;
        }
        if ((*(unsigned char *)(a1 + 60) & 1) == 0)
        {
          uint64_t v33 = PBReaderReadData();
          uint64_t v34 = 16;
          goto LABEL_52;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_76;
        }
        v8 -= *(unsigned char *)(a1 + 60) & 1;
        goto LABEL_64;
      case 2:
        if (!v28) {
          goto LABEL_53;
        }
        if ((*(unsigned char *)(a1 + 60) & 2) == 0)
        {
          uint64_t v33 = PBReaderReadData();
          uint64_t v34 = 24;
          goto LABEL_52;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_76;
        }
        char v38 = *(unsigned char *)(a1 + 60) << 6;
        goto LABEL_63;
      case 3:
        if (!v28) {
          goto LABEL_53;
        }
        if ((*(unsigned char *)(a1 + 60) & 8) == 0)
        {
          uint64_t v33 = PBReaderReadData();
          uint64_t v34 = 40;
          goto LABEL_52;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_76;
        }
        char v38 = 16 * *(unsigned char *)(a1 + 60);
        goto LABEL_63;
      case 4:
        if (!v28)
        {
LABEL_53:
          char v37 = PBReaderSkipValueWithTag();
          BOOL v15 = (int *)MEMORY[0x1E4F940C8];
          if ((v37 & 1) == 0)
          {
LABEL_75:
            char v39 = 0;
            goto LABEL_77;
          }
          goto LABEL_65;
        }
        if ((*(unsigned char *)(a1 + 60) & 4) == 0)
        {
          uint64_t v33 = PBReaderReadData();
          uint64_t v34 = 32;
LABEL_52:
          int v36 = *(void **)(a1 + v34);
          *(void *)(a1 + v34) = v33;

          BOOL v15 = (int *)MEMORY[0x1E4F940C8];
          --v8;
          goto LABEL_65;
        }
        if (PBReaderSkipValueWithTag())
        {
          char v38 = 32 * *(unsigned char *)(a1 + 60);
LABEL_63:
          v8 += v38 >> 7;
LABEL_64:
          BOOL v15 = (int *)MEMORY[0x1E4F940C8];
LABEL_65:
          if (!(v12 & 1 | (v8 != 0))) {
            goto LABEL_66;
          }
          continue;
        }
LABEL_76:
        char v39 = 0;
        BOOL v15 = (int *)MEMORY[0x1E4F940C8];
LABEL_77:
        *(unsigned char *)(a1 + 60) |= 1u;
        *(unsigned char *)(a1 + 60) |= 2u;
        *(unsigned char *)(a1 + 60) |= 8u;
        *(unsigned char *)(a1 + 60) |= 4u;
        if (v39)
        {
LABEL_78:
          unint64_t v3 = *(unsigned char *)(v3 + *v15) == 0;
          if (v12) {
            goto LABEL_79;
          }
        }
        else
        {
          unint64_t v3 = 0;
          if (v12)
          {
LABEL_79:
            char v42 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = 0;
          }
        }
        return v3;
      default:
        int v35 = PBReaderSkipValueWithTag();
        BOOL v15 = (int *)MEMORY[0x1E4F940C8];
        if (!v35) {
          goto LABEL_75;
        }
        goto LABEL_65;
    }
  }
}

void sub_1898D0574(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898D06E0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898D0848(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898D0E28(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOURLRouteHandleReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 52))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOURLRouteHandleReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)unsigned int v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = [v8 position];
  *(_DWORD *)(a1 + 52) = [v8 length];
  if (a3) {
    char v9 = (int *)&GEOURLRouteHandleReadAllFrom_recursiveTag;
  }
  else {
    char v9 = (int *)&GEOURLRouteHandleReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOURLRouteHandleReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_1898D0FB4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOURLRouteHandleReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOURLRouteHandleReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1898D1018(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898D11E0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOURLRouteHandleIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  BOOL v2 = (*(unsigned char *)(a1 + 60) & 0x1F) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return v2;
}

void sub_1898D1500(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOURLTimePointReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    BOOL v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    id v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      char v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 2)
        {
          char v21 = 0;
          unsigned int v22 = 0;
          uint64_t v23 = 0;
          *(unsigned char *)(a1 + 20) |= 2u;
          while (1)
          {
            uint64_t v24 = *v4;
            uint64_t v25 = *(void *)&v3[v24];
            unint64_t v26 = v25 + 1;
            if (v25 == -1 || v26 > *(void *)&v3[*v5]) {
              break;
            }
            char v27 = *(unsigned char *)(*(void *)&v3[*v7] + v25);
            *(void *)&v3[v24] = v26;
            v23 |= (unint64_t)(v27 & 0x7F) << v21;
            if ((v27 & 0x80) == 0) {
              goto LABEL_34;
            }
            v21 += 7;
            BOOL v15 = v22++ >= 9;
            if (v15)
            {
              LODWORD(v23) = 0;
              goto LABEL_36;
            }
          }
          v3[*v6] = 1;
LABEL_34:
          if (v3[*v6]) {
            LODWORD(v23) = 0;
          }
LABEL_36:
          *(_DWORD *)(a1 + 16) = v23;
        }
        else if ((v10 >> 3) == 1)
        {
          *(unsigned char *)(a1 + 20) |= 1u;
          uint64_t v18 = *v4;
          unint64_t v19 = *(void *)&v3[v18];
          if (v19 <= 0xFFFFFFFFFFFFFFF7 && v19 + 8 <= *(void *)&v3[*v5])
          {
            uint64_t v20 = *(void *)(*(void *)&v3[*v7] + v19);
            *(void *)&v3[v18] = v19 + 8;
          }
          else
          {
            v3[*v6] = 1;
            uint64_t v20 = 0;
          }
          *(void *)(a1 + 8) = v20;
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_41;
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v28 = v3[*v6] == 0;
  }
  else
  {
LABEL_41:
    BOOL v28 = 0;
  }
  objc_sync_exit(v3);

  return v28;
}

void sub_1898D1F54(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOURLTimePointReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOURLTimePointReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1898D1FB8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t __ContactsLibraryCore_block_invoke(uint64_t a1)
{
  uint64_t result = _sl_dlopen();
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  ContactsLibraryCore_frameworkLibrary = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

id getCNPostalAddressFormatterClass()
{
  uint64_t v4 = 0;
  uint64_t v5 = &v4;
  uint64_t v6 = 0x2050000000;
  uint64_t v0 = (void *)getCNPostalAddressFormatterClass_softClass;
  uint64_t v7 = getCNPostalAddressFormatterClass_softClass;
  if (!getCNPostalAddressFormatterClass_softClass)
  {
    v3[0] = MEMORY[0x1E4F143A8];
    v3[1] = 3221225472;
    v3[2] = __getCNPostalAddressFormatterClass_block_invoke;
    v3[3] = &unk_1E53DB3C8;
    v3[4] = &v4;
    __getCNPostalAddressFormatterClass_block_invoke((uint64_t)v3);
    uint64_t v0 = (void *)v5[3];
  }
  id v1 = v0;
  _Block_object_dispose(&v4, 8);

  return v1;
}

void sub_1898D2544(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

NSMutableArray *__getCNPostalAddressFormatterClass_block_invoke(uint64_t a1)
{
  ContactsLibrary();
  uint64_t result = (NSMutableArray *)objc_getClass("CNPostalAddressFormatter");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    getCNPostalAddressFormatterClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    id v3 = (GEORoutingFeatures *)abort_report_np();
    return [(GEORoutingFeatures *)v3 routingFeaturesInfos];
  }
  return result;
}

BOOL GEORoutingFeaturesReadAllFrom(void *a1, void *a2, int a3)
{
  uint64_t v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    uint64_t v6 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v7 = (int *)MEMORY[0x1E4F940E0];
    char v8 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v5[*MEMORY[0x1E4F940E8]] < *(void *)&v5[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v9 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v5[*v8]) {
          break;
        }
        char v10 = 0;
        unsigned int v11 = 0;
        unint64_t v12 = 0;
        while (1)
        {
          uint64_t v13 = *v6;
          unint64_t v14 = *(void *)&v5[v13];
          if (v14 == -1 || v14 >= *(void *)&v5[*v7]) {
            break;
          }
          char v15 = *(unsigned char *)(*(void *)&v5[*v9] + v14);
          *(void *)&v5[v13] = v14 + 1;
          v12 |= (unint64_t)(v15 & 0x7F) << v10;
          if ((v15 & 0x80) == 0) {
            goto LABEL_13;
          }
          v10 += 7;
          if (v11++ >= 9)
          {
            unint64_t v12 = 0;
            int v17 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        int v17 = v5[*v8];
        if (v5[*v8]) {
          unint64_t v12 = 0;
        }
LABEL_15:
        if (v17 || (v12 & 7) == 4) {
          break;
        }
        if ((v12 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_27;
          }
          unint64_t v19 = objc_alloc_init(GEORoutingFeaturesInfo);
          if (!GEORoutingFeaturesInfoReadAllFrom((uint64_t)v19, v5, a3))
          {

            goto LABEL_27;
          }
          PBReaderRecallMark();
          objc_msgSend(a1, "addRoutingFeaturesInfo:", v19, 0, 0);
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_27;
        }
      }
      while (*(void *)&v5[*v6] < *(void *)&v5[*v7]);
    }
    BOOL v20 = v5[*v8] == 0;
  }
  else
  {
LABEL_27:
    BOOL v20 = 0;
  }
  objc_sync_exit(v5);

  return v20;
}

void sub_1898D2D00(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORoutingFeaturesReadFrom(void *a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEORoutingFeaturesReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1898D2D64(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORoutingFeaturesIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  SEL v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        unint64_t v10 = *(void *)&a1[v9];
        if (v10 == -1 || v10 >= *(void *)&a1[*v3]) {
          break;
        }
        char v11 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v13 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v14 = v8 & 7;
      if (v13 || v14 == 4) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if (v14 != 2 || !PBReaderPlaceMark() || !GEORoutingFeaturesInfoIsValid(a1))
        {
LABEL_27:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_27;
      }
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v16 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v16;
}

BOOL GEORoutingFeaturesInfoIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  SEL v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        unint64_t v10 = *(void *)&a1[v9];
        if (v10 == -1 || v10 >= *(void *)&a1[*v3]) {
          break;
        }
        char v11 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v13 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v14 = v8 & 7;
      if (v13 || v14 == 4) {
        break;
      }
      if ((v8 >> 3) == 2)
      {
        if (v14 != 2 || !PBReaderPlaceMark() || !GEOChargingNetworkInfoIsValid(a1))
        {
LABEL_38:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_38;
        }
        unsigned int v16 = 0;
        while (1)
        {
          uint64_t v17 = *v2;
          unint64_t v18 = *(void *)&a1[v17];
          if (v18 == -1 || v18 >= *(void *)&a1[*v3]) {
            break;
          }
          unint64_t v19 = v18 + 1;
          int v20 = *(char *)(*(void *)&a1[*v5] + v18);
          *(void *)&a1[v17] = v19;
          if (v20 < 0 && v16++ <= 8) {
            continue;
          }
          goto LABEL_35;
        }
        a1[*v4] = 1;
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_38;
      }
LABEL_35:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v22 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v22;
}

BOOL GEORoutingFeaturesInfoReadAllFrom(uint64_t a1, void *a2, int a3)
{
  uint64_t v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    char v6 = (int *)MEMORY[0x1E4F940E8];
    unsigned int v7 = (int *)MEMORY[0x1E4F940E0];
    unint64_t v8 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v5[*MEMORY[0x1E4F940E8]] < *(void *)&v5[*MEMORY[0x1E4F940E0]])
    {
      uint64_t v9 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v5[*v8]) {
          break;
        }
        char v10 = 0;
        unsigned int v11 = 0;
        unint64_t v12 = 0;
        while (1)
        {
          uint64_t v13 = *v6;
          unint64_t v14 = *(void *)&v5[v13];
          if (v14 == -1 || v14 >= *(void *)&v5[*v7]) {
            break;
          }
          char v15 = *(unsigned char *)(*(void *)&v5[*v9] + v14);
          *(void *)&v5[v13] = v14 + 1;
          v12 |= (unint64_t)(v15 & 0x7F) << v10;
          if ((v15 & 0x80) == 0) {
            goto LABEL_13;
          }
          v10 += 7;
          BOOL v16 = v11++ >= 9;
          if (v16)
          {
            unint64_t v12 = 0;
            int v17 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        int v17 = v5[*v8];
        if (v5[*v8]) {
          unint64_t v12 = 0;
        }
LABEL_15:
        if (v17 || (v12 & 7) == 4) {
          break;
        }
        if ((v12 >> 3) == 2)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_40;
          }
          uint64_t v25 = objc_alloc_init(GEOChargingNetworkInfo);
          if (!GEOChargingNetworkInfoReadAllFrom(v25, v5, a3))
          {

            goto LABEL_40;
          }
          PBReaderRecallMark();
          unint64_t v26 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = v25;
        }
        else if ((v12 >> 3) == 1)
        {
          char v19 = 0;
          unsigned int v20 = 0;
          uint64_t v21 = 0;
          *(unsigned char *)(a1 + 20) |= 1u;
          while (1)
          {
            uint64_t v22 = *v6;
            unint64_t v23 = *(void *)&v5[v22];
            if (v23 == -1 || v23 >= *(void *)&v5[*v7]) {
              break;
            }
            char v24 = *(unsigned char *)(*(void *)&v5[*v9] + v23);
            *(void *)&v5[v22] = v23 + 1;
            v21 |= (unint64_t)(v24 & 0x7F) << v19;
            if ((v24 & 0x80) == 0) {
              goto LABEL_34;
            }
            v19 += 7;
            BOOL v16 = v20++ >= 9;
            if (v16)
            {
              LODWORD(v21) = 0;
              goto LABEL_36;
            }
          }
          v5[*v8] = 1;
LABEL_34:
          if (v5[*v8]) {
            LODWORD(v21) = 0;
          }
LABEL_36:
          *(_DWORD *)(a1 + 16) = v21;
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_40;
        }
      }
      while (*(void *)&v5[*v6] < *(void *)&v5[*v7]);
    }
    BOOL v27 = v5[*v8] == 0;
  }
  else
  {
LABEL_40:
    BOOL v27 = 0;
  }
  objc_sync_exit(v5);

  return v27;
}

void sub_1898D3E78(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORoutingFeaturesInfoReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEORoutingFeaturesInfoReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1898D3EDC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void __TransitMergingProtocol_block_invoke()
{
}

BOOL GEOStorageCameraViewReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    SEL v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          unint64_t v12 = *(void *)&v3[v11];
          if (v12 == -1 || v12 >= *(void *)&v3[*v5]) {
            break;
          }
          char v13 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v12 + 1;
          v10 |= (unint64_t)(v13 & 0x7F) << v8;
          if ((v13 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v14 = v9++ >= 9;
          if (v14)
          {
            unint64_t v10 = 0;
            int v15 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v15 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v15 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 2)
        {
          char v19 = 0;
          unsigned int v20 = 0;
          uint64_t v21 = 0;
          *(unsigned char *)(a1 + 28) |= 1u;
          while (1)
          {
            uint64_t v22 = *v4;
            unint64_t v23 = *(void *)&v3[v22];
            if (v23 == -1 || v23 >= *(void *)&v3[*v5]) {
              break;
            }
            char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v23);
            *(void *)&v3[v22] = v23 + 1;
            v21 |= (unint64_t)(v24 & 0x7F) << v19;
            if ((v24 & 0x80) == 0) {
              goto LABEL_36;
            }
            v19 += 7;
            BOOL v14 = v20++ >= 9;
            if (v14)
            {
              LODWORD(v21) = 0;
              goto LABEL_38;
            }
          }
          v3[*v6] = 1;
LABEL_36:
          if (v3[*v6]) {
            LODWORD(v21) = 0;
          }
LABEL_38:
          *(_DWORD *)(a1 + 24) = v21;
        }
        else if ((v10 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_42;
          }
          int v17 = objc_alloc_init(GEOURLCamera);
          if (!GEOURLCameraReadAllFrom((uint64_t)v17, v3))
          {

            goto LABEL_42;
          }
          PBReaderRecallMark();
          unint64_t v18 = *(void **)(a1 + 16);
          *(void *)(a1 + 16) = v17;
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v25 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            unint64_t v26 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v25;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_42;
          }
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v27 = v3[*v6] == 0;
  }
  else
  {
LABEL_42:
    BOOL v27 = 0;
  }
  objc_sync_exit(v3);

  return v27;
}

void sub_1898D7840(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOStorageCameraViewReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOStorageCameraViewReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1898D78A4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOStorageCameraViewIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  SEL v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        unint64_t v10 = *(void *)&a1[v9];
        if (v10 == -1 || v10 >= *(void *)&a1[*v3]) {
          break;
        }
        char v11 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v13 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v14 = v8 & 7;
      if (v13 || v14 == 4) {
        break;
      }
      if ((v8 >> 3) == 2)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_38;
        }
        unsigned int v16 = 0;
        while (1)
        {
          uint64_t v17 = *v2;
          unint64_t v18 = *(void *)&a1[v17];
          if (v18 == -1 || v18 >= *(void *)&a1[*v3]) {
            break;
          }
          unint64_t v19 = v18 + 1;
          int v20 = *(char *)(*(void *)&a1[*v5] + v18);
          *(void *)&a1[v17] = v19;
          if (v20 < 0 && v16++ <= 8) {
            continue;
          }
          goto LABEL_35;
        }
        a1[*v4] = 1;
      }
      else if ((v8 >> 3) == 1)
      {
        if (v14 != 2 || !PBReaderPlaceMark() || !GEOURLCameraIsValid(a1))
        {
LABEL_38:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_38;
      }
LABEL_35:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v22 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v22;
}

BOOL GEOStorageCompletionReadAllFrom(uint64_t a1, void *a2, int a3)
{
  uint64_t v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    char v6 = (int *)MEMORY[0x1E4F940E8];
    unsigned int v7 = (int *)MEMORY[0x1E4F940E0];
    unint64_t v8 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v5[*MEMORY[0x1E4F940E8]] < *(void *)&v5[*MEMORY[0x1E4F940E0]])
    {
      uint64_t v9 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v5[*v8]) {
          break;
        }
        char v10 = 0;
        unsigned int v11 = 0;
        unint64_t v12 = 0;
        while (1)
        {
          uint64_t v13 = *v6;
          unint64_t v14 = *(void *)&v5[v13];
          if (v14 == -1 || v14 >= *(void *)&v5[*v7]) {
            break;
          }
          char v15 = *(unsigned char *)(*(void *)&v5[*v9] + v14);
          *(void *)&v5[v13] = v14 + 1;
          v12 |= (unint64_t)(v15 & 0x7F) << v10;
          if ((v15 & 0x80) == 0) {
            goto LABEL_13;
          }
          v10 += 7;
          if (v11++ >= 9)
          {
            unint64_t v12 = 0;
            int v17 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        int v17 = v5[*v8];
        if (v5[*v8]) {
          unint64_t v12 = 0;
        }
LABEL_15:
        if (v17 || (v12 & 7) == 4) {
          break;
        }
        if ((v12 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_29;
          }
          unint64_t v19 = objc_alloc_init(GEOPDAutocompleteEntry);
          if (!GEOPDAutocompleteEntryReadAllFrom((uint64_t)v19, v5, a3))
          {

            goto LABEL_29;
          }
          PBReaderRecallMark();
          int v20 = *(void **)(a1 + 16);
          *(void *)(a1 + 16) = v19;
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v21 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            BOOL v22 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v21;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_29;
          }
        }
      }
      while (*(void *)&v5[*v6] < *(void *)&v5[*v7]);
    }
    BOOL v23 = v5[*v8] == 0;
  }
  else
  {
LABEL_29:
    BOOL v23 = 0;
  }
  objc_sync_exit(v5);

  return v23;
}

void sub_1898D85F8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOStorageCompletionReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOStorageCompletionReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1898D865C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOStorageCompletionIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  SEL v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        unint64_t v10 = *(void *)&a1[v9];
        if (v10 == -1 || v10 >= *(void *)&a1[*v3]) {
          break;
        }
        char v11 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v13 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v14 = v8 & 7;
      if (v13 || v14 == 4) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if (v14 != 2 || !PBReaderPlaceMark() || !GEOPDAutocompleteEntryIsValid(a1))
        {
LABEL_27:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_27;
      }
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v16 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v16;
}

void sub_1898D8D98(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOStorageResumeRouteHandleReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  unsigned int v7 = v6;
  uint64_t v8 = 0;
  uint64_t v9 = 0;
  char v10 = 0;
  uint64_t v11 = 0;
  uint64_t v12 = 0;
  int v13 = ((*(unsigned __int8 *)(a1 + 56) >> 2) & 1)
      + ((*(unsigned __int8 *)(a1 + 56) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 56) >> 1) & 1);
  while (2)
  {
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    uint64_t v16 = 1;
    switch(a3[v11])
    {
      case -4:
        ++v13;
        uint64_t v14 = v8;
        goto LABEL_8;
      case -3:
        char v10 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v8;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v17 = v13 != 0;
        char v18 = v17 & ~(_BYTE)v12 | v9;
        unsigned __int8 v19 = v17 | v12;
        char v60 = v18;
        char v61 = v19 | v18;
        if ((v19 | v10)) {
          int v20 = 0;
        }
        else {
          int v20 = a3;
        }
        char v62 = (v20 == 0) | v19;
        BOOL v63 = v19;
        id v21 = (int *)MEMORY[0x1E4F940E8];
        BOOL v22 = (int *)MEMORY[0x1E4F940C8];
        BOOL v23 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v13;
LABEL_7:
        uint64_t v14 = v8;
        uint64_t v15 = v9;
LABEL_8:
        uint64_t v16 = v12;
LABEL_10:
        ++v11;
        uint64_t v8 = v14;
        uint64_t v9 = v15;
        uint64_t v12 = v16;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v21) >= *(void *)(v3 + *v7) || *(unsigned char *)(v3 + *v22)) {
      goto LABEL_77;
    }
    char v24 = 0;
    unsigned int v25 = 0;
    unint64_t v26 = 0;
    while (1)
    {
      uint64_t v27 = *v21;
      unint64_t v28 = *(void *)(v3 + v27);
      if (v28 == -1 || v28 >= *(void *)(v3 + *v7)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v23) + v28);
      *(void *)(v3 + v27) = v28 + 1;
      v26 |= (unint64_t)(v29 & 0x7F) << v24;
      if ((v29 & 0x80) == 0) {
        goto LABEL_25;
      }
      v24 += 7;
      BOOL v30 = v25++ >= 9;
      if (v30)
      {
        unint64_t v26 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v22);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v22) = 1;
LABEL_25:
    int v31 = *(unsigned __int8 *)(v3 + *v22);
    if (*(unsigned char *)(v3 + *v22)) {
      unint64_t v26 = 0;
    }
LABEL_27:
    if (v31 || (v26 & 7) == 4)
    {
LABEL_77:
      int v58 = 1;
      goto LABEL_78;
    }
    unint64_t v33 = v26 >> 3;
    BOOL v34 = v63;
    if ((v62 & 1) == 0)
    {
      int v35 = v20;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    if (v33 == 3)
    {
      if ((v10 & 1) == 0) {
        goto LABEL_64;
      }
      char v41 = 0;
      unsigned int v42 = 0;
      uint64_t v43 = 0;
      *(unsigned char *)(a1 + 56) |= 1u;
      while (1)
      {
        uint64_t v44 = *v21;
        unint64_t v45 = *(void *)(v3 + v44);
        if (v45 == -1 || v45 >= *(void *)(v3 + *v7)) {
          break;
        }
        char v46 = *(unsigned char *)(*(void *)(v3 + *v23) + v45);
        *(void *)(v3 + v44) = v45 + 1;
        v43 |= (unint64_t)(v46 & 0x7F) << v41;
        if ((v46 & 0x80) == 0) {
          goto LABEL_67;
        }
        v41 += 7;
        BOOL v30 = v42++ >= 9;
        if (v30)
        {
          uint64_t v43 = 0;
          goto LABEL_69;
        }
      }
      *(unsigned char *)(v3 + *v22) = 1;
LABEL_67:
      if (*(unsigned char *)(v3 + *v22)) {
        uint64_t v43 = 0;
      }
LABEL_69:
      *(unsigned char *)(a1 + 52) = v43 != 0;
      goto LABEL_76;
    }
    if (v33 == 2)
    {
      if (!v34) {
        goto LABEL_64;
      }
      if ((*(unsigned char *)(a1 + 56) & 8) == 0)
      {
        uint64_t v47 = PBReaderReadData();
        char v40 = *(void **)(a1 + 32);
        *(void *)(a1 + 32) = v47;
LABEL_57:

        --v11;
LABEL_75:
        BOOL v22 = (int *)MEMORY[0x1E4F940C8];
        unsigned int v7 = (int *)MEMORY[0x1E4F940E0];
        goto LABEL_76;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        goto LABEL_97;
      }
      char v52 = 16 * *(unsigned char *)(a1 + 56);
LABEL_74:
      v11 += v52 >> 7;
      goto LABEL_75;
    }
    if (v33 == 1) {
      break;
    }
    if ((v60 & 1) == 0 || (*(unsigned char *)(a1 + 56) & 2) != 0)
    {
LABEL_64:
      char v51 = PBReaderSkipValueWithTag();
      unsigned int v7 = (int *)MEMORY[0x1E4F940E0];
      BOOL v22 = (int *)MEMORY[0x1E4F940C8];
      if ((v51 & 1) == 0)
      {
        int v58 = 0;
        goto LABEL_78;
      }
      goto LABEL_76;
    }
    if (!*(void *)(a1 + 16))
    {
      id v48 = objc_alloc_init(MEMORY[0x1E4F940B0]);
      uint64_t v49 = *(void **)(a1 + 16);
      *(void *)(a1 + 16) = v48;
    }
    int v50 = PBUnknownFieldAdd();
    BOOL v22 = (int *)MEMORY[0x1E4F940C8];
    unsigned int v7 = (int *)MEMORY[0x1E4F940E0];
    if (!v50)
    {
      int v58 = 0;
      BOOL v59 = &OBJC_IVAR___GEOSpokenGuidance__priority;
      goto LABEL_79;
    }
LABEL_76:
    if (!(v61 & 1 | (v11 != 0))) {
      goto LABEL_77;
    }
  }
  if (!v34) {
    goto LABEL_64;
  }
  if ((*(unsigned char *)(a1 + 56) & 4) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0) {
      goto LABEL_97;
    }
    char v52 = 32 * *(unsigned char *)(a1 + 56);
    goto LABEL_74;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_97;
  }
  char v39 = objc_alloc_init(GEOOriginalWaypointRoute);
  if (GEOOriginalWaypointRouteReadAllFrom((uint64_t)v39, (void *)v3, v8 & 1))
  {
    PBReaderRecallMark();
    char v40 = *(void **)(a1 + 24);
    *(void *)(a1 + 24) = v39;
    goto LABEL_57;
  }

LABEL_97:
  int v58 = 0;
  BOOL v22 = (int *)MEMORY[0x1E4F940C8];
LABEL_78:
  BOOL v59 = &OBJC_IVAR___GEOSpokenGuidance__priority;
  if ((v60 & 1) == 0) {
    goto LABEL_80;
  }
LABEL_79:
  *(unsigned char *)(a1 + v59[245]) |= 2u;
LABEL_80:
  if (v63 || (v58 & 1) == 0)
  {
    *(unsigned char *)(a1 + v59[245]) |= 4u;
    *(unsigned char *)(a1 + v59[245]) |= 8u;
    goto LABEL_90;
  }
  if (v20)
  {
    while (2)
    {
      while (1)
      {
        int v54 = *v20++;
        int v53 = v54;
        if (v54 == 1) {
          break;
        }
        if (v53 == 2)
        {
          char v55 = 8;
          goto LABEL_89;
        }
        if (!v53) {
          goto LABEL_90;
        }
      }
      char v55 = 4;
LABEL_89:
      *(unsigned char *)(a1 + v59[245]) |= v55;
      continue;
    }
  }
LABEL_90:
  if (v58) {
    unint64_t v3 = *(unsigned char *)(v3 + *v22) == 0;
  }
  else {
    unint64_t v3 = 0;
  }
  if (v63)
  {
    char v56 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_1898D953C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898D9C68(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOStorageResumeRouteHandleReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOStorageResumeRouteHandleReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)char v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOStorageResumeRouteHandleReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOStorageResumeRouteHandleReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOStorageResumeRouteHandleReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    [*(id *)(a1 + 24) readAll:1];
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_1898D9E10(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOStorageResumeRouteHandleReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOStorageResumeRouteHandleReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1898D9E74(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOStorageResumeRouteHandleIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  SEL v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_38;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        unint64_t v10 = *(void *)&a1[v9];
        if (v10 == -1 || v10 >= *(void *)&a1[*v3]) {
          break;
        }
        char v11 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v13 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v14 = v8 & 7;
      if (v13 || v14 == 4) {
        goto LABEL_38;
      }
      unint64_t v16 = v8 >> 3;
      if ((v8 >> 3) == 3)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_40;
        }
        unsigned int v17 = 0;
        while (1)
        {
          uint64_t v18 = *v2;
          unint64_t v19 = *(void *)&a1[v18];
          if (v19 == -1 || v19 >= *(void *)&a1[*v3]) {
            break;
          }
          unint64_t v20 = v19 + 1;
          int v21 = *(char *)(*(void *)&a1[*v5] + v19);
          *(void *)&a1[v18] = v20;
          if (v21 < 0 && v17++ <= 8) {
            continue;
          }
          goto LABEL_37;
        }
        a1[*v4] = 1;
        goto LABEL_37;
      }
      if (v16 == 2) {
        break;
      }
      if (v16 != 1) {
        goto LABEL_34;
      }
      if (v14 != 2 || !PBReaderPlaceMark() || !GEOOriginalWaypointRouteIsValid(a1))
      {
LABEL_40:
        PBReaderRecallMark();
        return 0;
      }
      PBReaderRecallMark();
LABEL_37:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_38;
      }
    }
    if (v14 != 2) {
      goto LABEL_40;
    }
LABEL_34:
    if ((PBReaderSkipValueWithTag() & 1) == 0) {
      goto LABEL_40;
    }
    goto LABEL_37;
  }
LABEL_38:
  BOOL v23 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v23;
}

void sub_1898DA294(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOStorageResumeRouteHandleIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  BOOL v2 = (*(unsigned char *)(a1 + 56) & 0x1C) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return v2;
}

void sub_1898DA5F8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898DA900(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898DABB4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOStorageRouteRequestStorageReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 96));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 92);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 88)];
  unsigned int v7 = v6;
  uint64_t v8 = 0;
  char v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  uint64_t v12 = 0;
  unsigned int v13 = *(unsigned __int16 *)(a1 + 104);
  unsigned int v14 = ((v13 >> 1) & 1)
      + ((v13 >> 4) & 1)
      + (unsigned __int16)(vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16((uint16x4_t)vdup_n_s16(v13), (uint16x4_t)0xFFF9FFFEFFF7FFFALL), (int8x8_t)0x1000100010001))+ ((v13 >> 8) & 1)+ ((v13 >> 3) & 1)+ ((v13 >> 5) & 1));
  while (2)
  {
    uint64_t v15 = 1;
    uint64_t v16 = 1;
    uint64_t v17 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v14;
        goto LABEL_8;
      case -3:
        char v9 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v16 = v11;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v18 = v14 > 5;
        char v19 = v18 & ~(_BYTE)v12 | v10;
        unsigned __int8 v20 = v18 | v12;
        char v60 = v19;
        char v61 = v20 | v19;
        if ((v20 | v9)) {
          int v21 = 0;
        }
        else {
          int v21 = a3;
        }
        BOOL v22 = (int *)MEMORY[0x1E4F940E8];
        char v62 = (v21 == 0) | v20;
        BOOL v63 = v20;
        BOOL v23 = (int *)MEMORY[0x1E4F940C8];
        char v24 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v14;
LABEL_7:
        uint64_t v15 = v10;
LABEL_8:
        uint64_t v16 = v11;
        uint64_t v17 = v12;
LABEL_10:
        ++v8;
        uint64_t v10 = v15;
        uint64_t v11 = v16;
        uint64_t v12 = v17;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v22) >= *(void *)(v3 + *v7) || *(unsigned char *)(v3 + *v23)) {
      goto LABEL_116;
    }
    char v25 = 0;
    unsigned int v26 = 0;
    unint64_t v27 = 0;
    while (1)
    {
      uint64_t v28 = *v22;
      unint64_t v29 = *(void *)(v3 + v28);
      if (v29 == -1 || v29 >= *(void *)(v3 + *v7)) {
        break;
      }
      char v30 = *(unsigned char *)(*(void *)(v3 + *v24) + v29);
      *(void *)(v3 + v28) = v29 + 1;
      v27 |= (unint64_t)(v30 & 0x7F) << v25;
      if ((v30 & 0x80) == 0) {
        goto LABEL_25;
      }
      v25 += 7;
      BOOL v31 = v26++ >= 9;
      if (v31)
      {
        unint64_t v27 = 0;
        int v32 = *(unsigned __int8 *)(v3 + *v23);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v23) = 1;
LABEL_25:
    int v32 = *(unsigned __int8 *)(v3 + *v23);
    if (*(unsigned char *)(v3 + *v23)) {
      unint64_t v27 = 0;
    }
LABEL_27:
    if (v32 || (v27 & 7) == 4)
    {
LABEL_116:
      int v59 = 1;
      goto LABEL_117;
    }
    unint64_t v34 = v27 >> 3;
    BOOL v35 = v63;
    if ((v62 & 1) == 0)
    {
      int v36 = v21;
      do
      {
        int v38 = *v36++;
        int v37 = v38;
        BOOL v35 = v38 != 0;
        if (v38) {
          BOOL v39 = v37 == v34;
        }
        else {
          BOOL v39 = 1;
        }
      }
      while (!v39);
    }
    switch((int)v34)
    {
      case 1:
        if (!v35 || (*(_WORD *)(a1 + 104) & 0x200) != 0) {
          goto LABEL_93;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_139;
        }
        char v40 = objc_alloc_init(GEOComposedWaypoint);
        if (!GEOComposedWaypointReadAllFrom((uint64_t)v40, (void *)v3, v11 & 1)) {
          goto LABEL_138;
        }
        PBReaderRecallMark();
        -[GEOStorageRouteRequestStorage _addNoFlagsWaypoints:](a1, v40);

        goto LABEL_114;
      case 2:
        if ((v9 & 1) == 0) {
          goto LABEL_93;
        }
        char v44 = 0;
        unsigned int v45 = 0;
        uint64_t v46 = 0;
        *(_WORD *)(a1 + 104) |= 1u;
        while (2)
        {
          uint64_t v47 = *v22;
          unint64_t v48 = *(void *)(v3 + v47);
          if (v48 == -1 || v48 >= *(void *)(v3 + *v7))
          {
            *(unsigned char *)(v3 + *v23) = 1;
          }
          else
          {
            char v49 = *(unsigned char *)(*(void *)(v3 + *v24) + v48);
            *(void *)(v3 + v47) = v48 + 1;
            v46 |= (unint64_t)(v49 & 0x7F) << v44;
            if (v49 < 0)
            {
              v44 += 7;
              BOOL v31 = v45++ >= 9;
              if (v31)
              {
                LODWORD(v46) = 0;
                goto LABEL_98;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v23)) {
          LODWORD(v46) = 0;
        }
LABEL_98:
        *(_DWORD *)(a1 + 100) = v46;
        goto LABEL_115;
      case 3:
        if (!v35) {
          goto LABEL_93;
        }
        if ((*(_WORD *)(a1 + 104) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_139;
          }
          __int16 v54 = *(_WORD *)(a1 + 104) << 9;
          goto LABEL_113;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_139;
        }
        char v40 = objc_alloc_init(GEOURLRouteHandle);
        if (!GEOURLRouteHandleReadAllFrom((uint64_t)v40, (void *)v3, v11 & 1)) {
          goto LABEL_138;
        }
        PBReaderRecallMark();
        uint64_t v50 = 56;
        goto LABEL_88;
      case 4:
        if (!v35) {
          goto LABEL_93;
        }
        if ((*(_WORD *)(a1 + 104) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_139;
          }
          __int16 v54 = *(_WORD *)(a1 + 104) << 13;
          goto LABEL_113;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_139;
        }
        char v40 = objc_alloc_init(GEOAutomobileOptions);
        if (!GEOAutomobileOptionsReadAllFrom((uint64_t)v40, (void *)v3, v11 & 1)) {
          goto LABEL_138;
        }
        PBReaderRecallMark();
        uint64_t v50 = 24;
        goto LABEL_88;
      case 5:
        if (!v35) {
          goto LABEL_93;
        }
        if ((*(_WORD *)(a1 + 104) & 0x80) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_139;
          }
          __int16 v54 = *(_WORD *)(a1 + 104) << 8;
          goto LABEL_113;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_139;
        }
        char v40 = objc_alloc_init(GEOTransitOptions);
        if (!GEOTransitOptionsReadAllFrom((uint64_t)v40, (void *)v3, v11 & 1)) {
          goto LABEL_138;
        }
        PBReaderRecallMark();
        uint64_t v50 = 64;
        goto LABEL_88;
      case 6:
        if (!v35) {
          goto LABEL_93;
        }
        if ((*(_WORD *)(a1 + 104) & 0x100) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_139;
          }
          __int16 v54 = *(_WORD *)(a1 + 104) << 7;
          goto LABEL_113;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_139;
        }
        char v40 = objc_alloc_init(GEOWalkingOptions);
        if (!GEOWalkingOptionsReadAllFrom((uint64_t)v40, (void *)v3, v11 & 1)) {
          goto LABEL_138;
        }
        PBReaderRecallMark();
        uint64_t v50 = 72;
        goto LABEL_88;
      case 7:
        if (!v35) {
          goto LABEL_93;
        }
        if ((*(_WORD *)(a1 + 104) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_139;
          }
          __int16 v54 = *(_WORD *)(a1 + 104) << 12;
          goto LABEL_113;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_139;
        }
        char v40 = objc_alloc_init(GEOCyclingOptions);
        if (!GEOCyclingOptionsReadAllFrom((uint64_t)v40, (void *)v3, v11 & 1)) {
          goto LABEL_138;
        }
        PBReaderRecallMark();
        uint64_t v50 = 32;
        goto LABEL_88;
      case 8:
        if (!v35) {
          goto LABEL_93;
        }
        if ((*(_WORD *)(a1 + 104) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_139;
          }
          __int16 v54 = *(_WORD *)(a1 + 104) << 10;
LABEL_113:
          v8 += v54 >> 15;
LABEL_114:
          BOOL v23 = (int *)MEMORY[0x1E4F940C8];
          unsigned int v7 = (int *)MEMORY[0x1E4F940E0];
          char v24 = (int *)MEMORY[0x1E4F940B8];
LABEL_115:
          if (!(v61 & 1 | (v8 != 0))) {
            goto LABEL_116;
          }
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_139;
        }
        char v40 = objc_alloc_init(GEOStorageResumeRouteHandle);
        if (GEOStorageResumeRouteHandleReadAllFrom((uint64_t)v40, (void *)v3, v11 & 1))
        {
          PBReaderRecallMark();
          uint64_t v50 = 48;
LABEL_88:
          char v51 = *(void **)(a1 + v50);
          *(void *)(a1 + v50) = v40;
LABEL_89:

          --v8;
          goto LABEL_114;
        }
LABEL_138:

LABEL_139:
        int v59 = 0;
        BOOL v23 = (int *)MEMORY[0x1E4F940C8];
LABEL_117:
        if (v60) {
LABEL_118:
        }
          *(_WORD *)(a1 + 104) |= 2u;
        if (v63 || (v59 & 1) == 0)
        {
          *(_WORD *)(a1 + 104) |= 0x200u;
          *(_WORD *)(a1 + 104) |= 0x40u;
          *(_WORD *)(a1 + 104) |= 4u;
          *(_WORD *)(a1 + 104) |= 0x80u;
          *(_WORD *)(a1 + 104) |= 0x100u;
          *(_WORD *)(a1 + 104) |= 8u;
          *(_WORD *)(a1 + 104) |= 0x20u;
          *(_WORD *)(a1 + 104) |= 0x10u;
        }
        else if (v21)
        {
          while (1)
          {
            int v56 = *v21++;
            __int16 v55 = 512;
            switch(v56)
            {
              case 0:
                goto LABEL_132;
              case 1:
                goto LABEL_130;
              case 3:
                __int16 v55 = 64;
                goto LABEL_130;
              case 4:
                __int16 v55 = 4;
                goto LABEL_130;
              case 5:
                __int16 v55 = 128;
                goto LABEL_130;
              case 6:
                __int16 v55 = 256;
                goto LABEL_130;
              case 7:
                __int16 v55 = 8;
                goto LABEL_130;
              case 8:
                __int16 v55 = 32;
                goto LABEL_130;
              case 9:
                __int16 v55 = 16;
LABEL_130:
                *(_WORD *)(a1 + 104) |= v55;
                break;
              default:
                continue;
            }
          }
        }
LABEL_132:
        if (v59) {
          unint64_t v3 = *(unsigned char *)(v3 + *v23) == 0;
        }
        else {
          unint64_t v3 = 0;
        }
        if (v63)
        {
          uint64_t v57 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      case 9:
        if (!v35) {
          goto LABEL_93;
        }
        if ((*(_WORD *)(a1 + 104) & 0x10) == 0)
        {
          uint64_t v52 = PBReaderReadData();
          char v51 = *(void **)(a1 + 40);
          *(void *)(a1 + 40) = v52;
          goto LABEL_89;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_139;
        }
        __int16 v54 = *(_WORD *)(a1 + 104) << 11;
        goto LABEL_113;
      default:
        if ((v60 & 1) == 0 || (*(_WORD *)(a1 + 104) & 2) != 0)
        {
LABEL_93:
          char v53 = PBReaderSkipValueWithTag();
          char v24 = (int *)MEMORY[0x1E4F940B8];
          unsigned int v7 = (int *)MEMORY[0x1E4F940E0];
          BOOL v23 = (int *)MEMORY[0x1E4F940C8];
          if ((v53 & 1) == 0)
          {
            int v59 = 0;
            goto LABEL_117;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v41 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            unsigned int v42 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v41;
          }
          int v43 = PBUnknownFieldAdd();
          BOOL v23 = (int *)MEMORY[0x1E4F940C8];
          unsigned int v7 = (int *)MEMORY[0x1E4F940E0];
          char v24 = (int *)MEMORY[0x1E4F940B8];
          if (!v43)
          {
            int v59 = 0;
            goto LABEL_118;
          }
        }
        goto LABEL_115;
    }
  }
}

void sub_1898DBC14(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898DBD84(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898DBEF0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898DC060(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898DC1D0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898DC340(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898DC4B0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898DD2BC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOStorageRouteRequestStorageCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  uint64_t v13 = *MEMORY[0x1E4F143B8];
  long long v8 = 0u;
  long long v9 = 0u;
  long long v10 = 0u;
  long long v11 = 0u;
  id v2 = a1[10];
  uint64_t v3 = [v2 countByEnumeratingWithState:&v8 objects:v12 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v9;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v9 != v5) {
          objc_enumerationMutation(v2);
        }
        objc_msgSend(*(id *)(*((void *)&v8 + 1) + 8 * v6++), "readAll:", 1, (void)v8);
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v8 objects:v12 count:16];
    }
    while (v4);
  }

  [a1[7] readAll:1];
  [a1[3] readAll:1];
  [a1[8] readAll:1];
  [a1[9] readAll:1];
  [a1[4] readAll:1];
  return [a1[6] readAll:1];
}

unint64_t GEOStorageRouteRequestStorageReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 92))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOStorageRouteRequestStorageReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)long long v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 96));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 88) = [v8 position];
  *(_DWORD *)(a1 + 92) = [v8 length];
  if (a3) {
    long long v9 = (int *)&GEOStorageRouteRequestStorageReadAllFrom_recursiveTag;
  }
  else {
    long long v9 = (int *)&GEOStorageRouteRequestStorageReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOStorageRouteRequestStorageReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOStorageRouteRequestStorageCallReadAllRecursiveWithoutSynchronized((id *)a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 96));
  return Specified;
}

void sub_1898DD5BC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOStorageRouteRequestStorageReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOStorageRouteRequestStorageReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1898DD620(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOStorageRouteRequestStorageIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        unint64_t v10 = *(void *)&a1[v9];
        if (v10 == -1 || v10 >= *(void *)&a1[*v3]) {
          break;
        }
        char v11 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v13 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v14 = v8 & 7;
      if (v13 || v14 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v14 == 2 && PBReaderPlaceMark() && GEOComposedWaypointIsValid(a1)) {
            goto LABEL_54;
          }
          goto LABEL_61;
        case 2u:
          if ((v8 & 7) != 0) {
            goto LABEL_61;
          }
          unsigned int v16 = 0;
          break;
        case 3u:
          if (v14 != 2 || !PBReaderPlaceMark() || !GEOURLRouteHandleIsValid(a1)) {
            goto LABEL_61;
          }
          goto LABEL_54;
        case 4u:
          if (v14 != 2 || !PBReaderPlaceMark() || !GEOAutomobileOptionsIsValid(a1)) {
            goto LABEL_61;
          }
          goto LABEL_54;
        case 5u:
          if (v14 != 2 || !PBReaderPlaceMark() || !GEOTransitOptionsIsValid(a1)) {
            goto LABEL_61;
          }
          goto LABEL_54;
        case 6u:
          if (v14 != 2 || !PBReaderPlaceMark() || !GEOWalkingOptionsIsValid(a1)) {
            goto LABEL_61;
          }
          goto LABEL_54;
        case 7u:
          if (v14 != 2 || !PBReaderPlaceMark() || !GEOCyclingOptionsIsValid(a1)) {
            goto LABEL_61;
          }
          goto LABEL_54;
        case 8u:
          if (v14 != 2 || !PBReaderPlaceMark() || !GEOStorageResumeRouteHandleIsValid(a1)) {
            goto LABEL_61;
          }
LABEL_54:
          PBReaderRecallMark();
          continue;
        case 9u:
          if (v14 == 2) {
            goto LABEL_56;
          }
          goto LABEL_61;
        default:
LABEL_56:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_61:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        uint64_t v17 = *v2;
        unint64_t v18 = *(void *)&a1[v17];
        if (v18 == -1 || v18 >= *(void *)&a1[*v3]) {
          break;
        }
        unint64_t v19 = v18 + 1;
        int v20 = *(char *)(*(void *)&a1[*v5] + v18);
        *(void *)&a1[v17] = v19;
        if (v20 < 0 && v16++ <= 8) {
          continue;
        }
        goto LABEL_59;
      }
      a1[*v4] = 1;
LABEL_59:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v22 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v22;
}

void sub_1898DDCB8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOStorageRouteRequestStorageIsDirty(uint64_t a1)
{
  uint64_t v13 = *MEMORY[0x1E4F143B8];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 96));
  __int16 v2 = *(_WORD *)(a1 + 104);
  if ((v2 & 0x600) != 0) {
    return 1;
  }
  if ((v2 & 0x40) != 0)
  {
    if (GEOURLRouteHandleIsDirty(*(void *)(a1 + 56))) {
      return 1;
    }
    __int16 v2 = *(_WORD *)(a1 + 104);
  }
  if ((v2 & 4) != 0)
  {
    if (GEOAutomobileOptionsIsDirty(*(os_unfair_lock_s **)(a1 + 24))) {
      return 1;
    }
    __int16 v2 = *(_WORD *)(a1 + 104);
  }
  if ((v2 & 0x80) != 0)
  {
    if (GEOTransitOptionsIsDirty(*(void *)(a1 + 64))) {
      return 1;
    }
    __int16 v2 = *(_WORD *)(a1 + 104);
  }
  if ((v2 & 0x100) != 0)
  {
    if (GEOWalkingOptionsIsDirty(*(void *)(a1 + 72))) {
      return 1;
    }
    __int16 v2 = *(_WORD *)(a1 + 104);
  }
  if ((v2 & 8) != 0)
  {
    if (GEOCyclingOptionsIsDirty(*(void *)(a1 + 32))) {
      return 1;
    }
    __int16 v2 = *(_WORD *)(a1 + 104);
  }
  if ((v2 & 0x20) == 0) {
    goto LABEL_22;
  }
  if (GEOStorageResumeRouteHandleIsDirty(*(void *)(a1 + 48))) {
    return 1;
  }
  __int16 v2 = *(_WORD *)(a1 + 104);
LABEL_22:
  if ((v2 & 0x10) != 0) {
    return 1;
  }
  if ((v2 & 0x200) == 0) {
    return 0;
  }
  long long v10 = 0u;
  long long v11 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  id v5 = *(id *)(a1 + 80);
  uint64_t v3 = [v5 countByEnumeratingWithState:&v8 objects:v12 count:16];
  if (v3)
  {
    uint64_t v6 = *(void *)v9;
    while (2)
    {
      for (uint64_t i = 0; i != v3; ++i)
      {
        if (*(void *)v9 != v6) {
          objc_enumerationMutation(v5);
        }
        if (GEOComposedWaypointIsDirty(*(os_unfair_lock_s **)(*((void *)&v8 + 1) + 8 * i)))
        {
          uint64_t v3 = 1;
          goto LABEL_35;
        }
      }
      uint64_t v3 = [v5 countByEnumeratingWithState:&v8 objects:v12 count:16];
      if (v3) {
        continue;
      }
      break;
    }
  }
LABEL_35:

  return v3;
}

os_unfair_lock_s *GEOStorageRouteRequestStorageIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOStorageRouteRequestStorageIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 24);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

unint64_t GEOStorageRouteRequestStorageClearSensitiveFields(uint64_t a1, uint64_t a2, int a3)
{
  -[GEOStorageRouteRequestStorage _readWaypoints](a1);
  unint64_t result = [*(id *)(a1 + 80) count];
  if (result)
  {
    for (unint64_t i = 0; i < result; ++i)
    {
      long long v8 = [*(id *)(a1 + 80) objectAtIndexedSubscript:i];
      long long v9 = v8;
      if (a3 && GEOComposedWaypointHasSensitiveFields(v8, a2))
      {
        long long v10 = (void *)[v9 copy];
        GEOComposedWaypointClearSensitiveFields(v10, a2, 0);
        [*(id *)(a1 + 80) replaceObjectAtIndex:i withObject:v10];
      }
      else
      {
        [v9 clearSensitiveFields:a2];
      }

      unint64_t result = [*(id *)(a1 + 80) count];
    }
  }
  return result;
}

uint64_t GEOStorageRouteRequestStorageHasSensitiveFields(void *a1, uint64_t a2)
{
  uint64_t v15 = *MEMORY[0x1E4F143B8];
  if (!a1) {
    return 0;
  }
  long long v12 = 0u;
  long long v13 = 0u;
  long long v10 = 0u;
  long long v11 = 0u;
  uint64_t v3 = objc_msgSend(a1, "waypoints", 0);
  uint64_t v4 = [v3 countByEnumeratingWithState:&v10 objects:v14 count:16];
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = *(void *)v11;
    while (2)
    {
      uint64_t v7 = 0;
      do
      {
        if (*(void *)v11 != v6) {
          objc_enumerationMutation(v3);
        }
        if (GEOComposedWaypointHasSensitiveFields(*(void **)(*((void *)&v10 + 1) + 8 * v7), a2))
        {
          uint64_t v8 = 1;
          goto LABEL_12;
        }
        ++v7;
      }
      while (v5 != v7);
      uint64_t v5 = [v3 countByEnumeratingWithState:&v10 objects:v14 count:16];
      if (v5) {
        continue;
      }
      break;
    }
  }
  uint64_t v8 = 0;
LABEL_12:

  return v8;
}

void sub_1898DE7B0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898DED84(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898DF198(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOBrandInfoMappingReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 68);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 64)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  unsigned int v11 = ((*(unsigned __int8 *)(a1 + 76) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 76) >> 2) & 1)
      + ((*(unsigned __int8 *)(a1 + 76) >> 1) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v7])
    {
      case -3:
        char v8 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        int v14 = v10 | (v11 > 1);
        if ((v14 | v8)) {
          uint64_t v15 = 0;
        }
        else {
          uint64_t v15 = a3;
        }
        LODWORD(v16) = v14;
        uint64_t v17 = (int *)MEMORY[0x1E4F940E8];
        unint64_t v18 = (int *)MEMORY[0x1E4F940C8];
        if (*(void *)(v3 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(v3 + *v6)) {
          goto LABEL_91;
        }
        char v63 = (v7 != 0) | v14;
        char v64 = (v15 == 0) | v14;
        unint64_t v19 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v11;
LABEL_6:
        uint64_t v12 = v9;
        uint64_t v13 = v10;
LABEL_8:
        ++v7;
        uint64_t v9 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(unsigned char *)(v3 + *v18)) {
      goto LABEL_91;
    }
    char v20 = 0;
    unsigned int v21 = 0;
    unint64_t v22 = 0;
    while (1)
    {
      uint64_t v23 = *v17;
      unint64_t v24 = *(void *)(v3 + v23);
      if (v24 == -1 || v24 >= *(void *)(v3 + *v6)) {
        break;
      }
      char v25 = *(unsigned char *)(*(void *)(v3 + *v19) + v24);
      *(void *)(v3 + v23) = v24 + 1;
      v22 |= (unint64_t)(v25 & 0x7F) << v20;
      if ((v25 & 0x80) == 0) {
        goto LABEL_23;
      }
      v20 += 7;
      BOOL v26 = v21++ >= 9;
      if (v26)
      {
        unint64_t v22 = 0;
        int v27 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_25;
      }
    }
    *(unsigned char *)(v3 + *v18) = 1;
LABEL_23:
    int v27 = *(unsigned __int8 *)(v3 + *v18);
    if (*(unsigned char *)(v3 + *v18)) {
      unint64_t v22 = 0;
    }
LABEL_25:
    int v28 = v22 & 7;
    if (v27 || v28 == 4)
    {
LABEL_91:
      if (v16)
      {
        char v57 = 1;
        goto LABEL_93;
      }
      if (v15)
      {
        while (1)
        {
          int v58 = *v15++;
          char v59 = 8;
          switch(v58)
          {
            case 0:
              goto LABEL_101;
            case 2:
              goto LABEL_100;
            case 3:
              char v59 = 4;
              goto LABEL_100;
            case 4:
              char v59 = 2;
LABEL_100:
              *(unsigned char *)(a1 + 76) |= v59;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_101;
    }
    unint64_t v30 = v22 >> 3;
    BOOL v31 = (char)v16;
    if ((v64 & 1) == 0)
    {
      int v32 = v15;
      do
      {
        int v34 = *v32++;
        int v33 = v34;
        BOOL v31 = v34 != 0;
        if (v34) {
          BOOL v35 = v33 == v30;
        }
        else {
          BOOL v35 = 1;
        }
      }
      while (!v35);
    }
    switch((int)v30)
    {
      case 1:
        if ((v8 & 1) == 0) {
          goto LABEL_72;
        }
        char v36 = 0;
        unsigned int v37 = 0;
        uint64_t v38 = 0;
        *(unsigned char *)(a1 + 76) |= 1u;
        while (1)
        {
          uint64_t v39 = *v17;
          unint64_t v40 = *(void *)(v3 + v39);
          if (v40 == -1 || v40 >= *(void *)(v3 + *v6)) {
            break;
          }
          char v41 = *(unsigned char *)(*(void *)(v3 + *v19) + v40);
          *(void *)(v3 + v39) = v40 + 1;
          v38 |= (unint64_t)(v41 & 0x7F) << v36;
          if ((v41 & 0x80) == 0) {
            goto LABEL_75;
          }
          v36 += 7;
          BOOL v26 = v37++ >= 9;
          if (v26)
          {
            uint64_t v38 = 0;
            goto LABEL_77;
          }
        }
        *(unsigned char *)(v3 + *v18) = 1;
LABEL_75:
        if (*(unsigned char *)(v3 + *v18)) {
          uint64_t v38 = 0;
        }
LABEL_77:
        *(void *)(a1 + 40) = v38;
        goto LABEL_89;
      case 2:
        if (!v31 || (*(unsigned char *)(a1 + 76) & 8) != 0) {
          goto LABEL_72;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_105;
        }
        int v62 = (int)v16;
        unsigned int v16 = objc_alloc_init(GEOScopedBrandInfo);
        if (GEOScopedBrandInfoReadAllFrom((uint64_t)v16, (void *)v3, v9 & 1))
        {
          PBReaderRecallMark();
          -[GEOBrandInfoMapping _addNoFlagsScopedBrandInfo:](a1, v16);
LABEL_56:

          LODWORD(v16) = v62;
LABEL_88:
          unint64_t v18 = (int *)MEMORY[0x1E4F940C8];
LABEL_89:
          if ((v63 & 1) == 0 || *(void *)(v3 + *v17) >= *(void *)(v3 + *v6)) {
            goto LABEL_91;
          }
          continue;
        }

        char v57 = 0;
        LOBYTE(v16) = v62;
LABEL_107:
        unint64_t v18 = (int *)MEMORY[0x1E4F940C8];
LABEL_93:
        *(unsigned char *)(a1 + 76) |= 8u;
        *(unsigned char *)(a1 + 76) |= 4u;
        *(unsigned char *)(a1 + 76) |= 2u;
        if (v57)
        {
LABEL_101:
          unint64_t v3 = *(unsigned char *)(v3 + *v18) == 0;
          if (v16) {
            goto LABEL_102;
          }
          return v3;
        }
        unint64_t v3 = 0;
        if ((v16 & 1) == 0) {
          return v3;
        }
LABEL_102:
        char v60 = *(void **)(a1 + 8);
        *(void *)(a1 + 8) = 0;

        return v3;
      case 3:
        if (!v31 || (*(unsigned char *)(a1 + 76) & 4) != 0) {
          goto LABEL_72;
        }
        int v62 = (int)v16;
        PBReaderReadString();
        unsigned int v16 = (GEOScopedBrandInfo *)objc_claimAutoreleasedReturnValue();
        if (v16) {
          -[GEOBrandInfoMapping _addNoFlagsIsoCountryCode:](a1, v16);
        }
        goto LABEL_56;
      case 4:
        if (v31 && (*(unsigned char *)(a1 + 76) & 2) == 0)
        {
          if (v28 == 2)
          {
            if (!PBReaderPlaceMark())
            {
LABEL_105:
              char v57 = 0;
              goto LABEL_107;
            }
            while (1)
            {
              int v43 = (int *)MEMORY[0x1E4F940C8];
              if (*(void *)(v3 + *v17) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + (int)*MEMORY[0x1E4F940C8])) {
                break;
              }
              char v44 = 0;
              unsigned int v45 = 0;
              uint64_t v46 = 0;
              while (1)
              {
                uint64_t v47 = *v17;
                unint64_t v48 = *(void *)(v3 + v47);
                if (v48 == -1 || v48 >= *(void *)(v3 + *v6)) {
                  break;
                }
                char v49 = *(unsigned char *)(*(void *)(v3 + *v19) + v48);
                *(void *)(v3 + v47) = v48 + 1;
                v46 |= (unint64_t)(v49 & 0x7F) << v44;
                if (v49 < 0)
                {
                  v44 += 7;
                  BOOL v26 = v45++ >= 9;
                  if (!v26) {
                    continue;
                  }
                }
                goto LABEL_71;
              }
              *(unsigned char *)(v3 + *v43) = 1;
LABEL_71:
              PBRepeatedBOOLAdd();
            }
            PBReaderRecallMark();
          }
          else
          {
            char v51 = 0;
            unsigned int v52 = 0;
            uint64_t v53 = 0;
            while (1)
            {
              uint64_t v54 = *v17;
              unint64_t v55 = *(void *)(v3 + v54);
              if (v55 == -1 || v55 >= *(void *)(v3 + *v6)) {
                break;
              }
              char v56 = *(unsigned char *)(*(void *)(v3 + *v19) + v55);
              *(void *)(v3 + v54) = v55 + 1;
              v53 |= (unint64_t)(v56 & 0x7F) << v51;
              if (v56 < 0)
              {
                v51 += 7;
                BOOL v26 = v52++ >= 9;
                if (!v26) {
                  continue;
                }
              }
              goto LABEL_87;
            }
            *(unsigned char *)(v3 + *v18) = 1;
LABEL_87:
            PBRepeatedBOOLAdd();
          }
          goto LABEL_88;
        }
LABEL_72:
        char v50 = PBReaderSkipValueWithTag();
        unint64_t v18 = (int *)MEMORY[0x1E4F940C8];
        if ((v50 & 1) == 0)
        {
LABEL_104:
          char v57 = 0;
          goto LABEL_93;
        }
        goto LABEL_89;
      default:
        int v42 = PBReaderSkipValueWithTag();
        unint64_t v18 = (int *)MEMORY[0x1E4F940C8];
        if (!v42) {
          goto LABEL_104;
        }
        goto LABEL_89;
    }
  }
}

void sub_1898DFC88(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898E004C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898E0B7C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOBrandInfoMappingCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v11 = *MEMORY[0x1E4F143B8];
  long long v6 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  id v1 = *(id *)(a1 + 56);
  uint64_t v2 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t v4 = *(void *)v7;
    do
    {
      uint64_t v5 = 0;
      do
      {
        if (*(void *)v7 != v4) {
          objc_enumerationMutation(v1);
        }
        objc_msgSend(*(id *)(*((void *)&v6 + 1) + 8 * v5++), "readAll:", 1, (void)v6);
      }
      while (v3 != v5);
      uint64_t v3 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
    }
    while (v3);
  }
}

unint64_t GEOBrandInfoMappingReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 68))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOBrandInfoMappingReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 72));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 64) = [v8 position];
  *(_DWORD *)(a1 + 68) = [v8 length];
  if (a3) {
    long long v9 = (int *)&GEOBrandInfoMappingReadAllFrom_recursiveTag;
  }
  else {
    long long v9 = (int *)&GEOBrandInfoMappingReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOBrandInfoMappingReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOBrandInfoMappingCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
  return Specified;
}

void sub_1898E0E10(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOBrandInfoMappingReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOBrandInfoMappingReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1898E0E74(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOBrandInfoMappingIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  uint64_t v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (!a1[*v4])
    {
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        unint64_t v10 = *(void *)&a1[v9];
        if (v10 == -1 || v10 >= *(void *)&a1[*v3]) {
          break;
        }
        char v11 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        BOOL v12 = v7++ >= 9;
        if (v12)
        {
          unint64_t v8 = 0;
          int v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v13 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v14 = v8 & 7;
      if (v13 || v14 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_56;
          }
          unsigned int v16 = 0;
          while (1)
          {
            uint64_t v17 = *v2;
            unint64_t v18 = *(void *)&a1[v17];
            if (v18 == -1 || v18 >= *(void *)&a1[*v3]) {
              goto LABEL_41;
            }
            unint64_t v19 = v18 + 1;
            int v20 = *(char *)(*(void *)&a1[*v5] + v18);
            *(void *)&a1[v17] = v19;
            if (v20 < 0 && v16++ <= 8) {
              continue;
            }
            goto LABEL_42;
          }
        case 2u:
          if (v14 == 2 && PBReaderPlaceMark() && GEOScopedBrandInfoIsValid(a1)) {
            goto LABEL_30;
          }
          goto LABEL_56;
        case 3u:
          if (v14 == 2) {
            goto LABEL_32;
          }
          goto LABEL_56;
        case 4u:
          if (v14 == 2)
          {
            if (!PBReaderPlaceMark())
            {
LABEL_56:
              PBReaderRecallMark();
              return 0;
            }
LABEL_45:
            while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
            {
              unsigned int v27 = a1[*v4];
              if (a1[*v4]) {
                break;
              }
              while (1)
              {
                uint64_t v28 = *v2;
                unint64_t v29 = *(void *)&a1[v28];
                if (v29 == -1 || v29 >= *(void *)&a1[*v3]) {
                  break;
                }
                unint64_t v30 = v29 + 1;
                int v31 = *(char *)(*(void *)&a1[*v5] + v29);
                *(void *)&a1[v28] = v30;
                if (v31 < 0)
                {
                  BOOL v12 = v27++ >= 9;
                  if (!v12) {
                    continue;
                  }
                }
                goto LABEL_45;
              }
              a1[*v4] = 1;
            }
LABEL_30:
            PBReaderRecallMark();
          }
          else
          {
            if ((v8 & 7) != 0) {
              goto LABEL_56;
            }
            while (1)
            {
              uint64_t v22 = *v2;
              unint64_t v23 = *(void *)&a1[v22];
              if (v23 == -1 || v23 >= *(void *)&a1[*v3]) {
                break;
              }
              unint64_t v24 = v23 + 1;
              int v25 = *(char *)(*(void *)&a1[*v5] + v23);
              *(void *)&a1[v22] = v24;
              if (v25 < 0)
              {
                unsigned int v26 = v14++;
                if (v26 <= 8) {
                  continue;
                }
              }
              goto LABEL_42;
            }
LABEL_41:
            a1[*v4] = 1;
          }
LABEL_42:
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_54;
          }
          break;
        default:
LABEL_32:
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_56;
          }
          goto LABEL_42;
      }
    }
  }
LABEL_54:
  BOOL v32 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v32;
}

BOOL GEOScopedBrandInfoIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  uint64_t v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        unint64_t v10 = *(void *)&a1[v9];
        if (v10 == -1 || v10 >= *(void *)&a1[*v3]) {
          break;
        }
        char v11 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v13 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v14 = v8 & 7;
      if (v13 || v14 == 4) {
        break;
      }
      if ((v8 >> 3) == 2)
      {
        if (v14 != 2 || !PBReaderPlaceMark() || !GEOLocalizedStringIsValid(a1)) {
          goto LABEL_29;
        }
        PBReaderRecallMark();
      }
      else if ((v8 >> 3) == 1 && v14 != 2 || (PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_29:
        PBReaderRecallMark();
        return 0;
      }
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v16 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v16;
}

void sub_1898E16F8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOBrandInfoMappingIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  BOOL v2 = (*(unsigned char *)(a1 + 76) & 0x1E) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
  return v2;
}

void sub_1898E1C50(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOChargingNetworkInfoReadAllFrom(void *a1, void *a2, int a3)
{
  uint64_t v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    char v6 = (int *)MEMORY[0x1E4F940E8];
    unsigned int v7 = (int *)MEMORY[0x1E4F940E0];
    unint64_t v8 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v5[*MEMORY[0x1E4F940E8]] < *(void *)&v5[*MEMORY[0x1E4F940E0]])
    {
      uint64_t v9 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v5[*v8]) {
          break;
        }
        char v10 = 0;
        unsigned int v11 = 0;
        unint64_t v12 = 0;
        while (1)
        {
          uint64_t v13 = *v6;
          unint64_t v14 = *(void *)&v5[v13];
          if (v14 == -1 || v14 >= *(void *)&v5[*v7]) {
            break;
          }
          char v15 = *(unsigned char *)(*(void *)&v5[*v9] + v14);
          *(void *)&v5[v13] = v14 + 1;
          v12 |= (unint64_t)(v15 & 0x7F) << v10;
          if ((v15 & 0x80) == 0) {
            goto LABEL_13;
          }
          v10 += 7;
          if (v11++ >= 9)
          {
            unint64_t v12 = 0;
            int v17 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        int v17 = v5[*v8];
        if (v5[*v8]) {
          unint64_t v12 = 0;
        }
LABEL_15:
        if (v17 || (v12 & 7) == 4) {
          break;
        }
        if ((v12 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_27;
          }
          unint64_t v19 = objc_alloc_init(GEOBrandInfoMapping);
          if (!GEOBrandInfoMappingReadAllFrom((uint64_t)v19, v5, a3))
          {

            goto LABEL_27;
          }
          PBReaderRecallMark();
          objc_msgSend(a1, "addBrandInfoMapping:", v19, 0, 0);
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_27;
        }
      }
      while (*(void *)&v5[*v6] < *(void *)&v5[*v7]);
    }
    BOOL v20 = v5[*v8] == 0;
  }
  else
  {
LABEL_27:
    BOOL v20 = 0;
  }
  objc_sync_exit(v5);

  return v20;
}

void sub_1898E27B4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOChargingNetworkInfoReadFrom(void *a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOChargingNetworkInfoReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1898E2818(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOChargingNetworkInfoIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        unint64_t v10 = *(void *)&a1[v9];
        if (v10 == -1 || v10 >= *(void *)&a1[*v3]) {
          break;
        }
        char v11 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v13 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v14 = v8 & 7;
      if (v13 || v14 == 4) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if (v14 != 2 || !PBReaderPlaceMark() || !GEOBrandInfoMappingIsValid(a1))
        {
LABEL_27:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_27;
      }
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v16 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v16;
}

void sub_1898E3080(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOScopedBrandInfoReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 36);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 32)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  int v11 = ((*(unsigned __int8 *)(a1 + 44) >> 1) & 1) + (*(unsigned char *)(a1 + 44) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v9])
    {
      case -3:
        char v8 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v12 = v7;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        int v14 = v10 & 1 | v11;
        BOOL v15 = v14 != 0;
        if ((v14 != 0) | v8 & 1) {
          BOOL v16 = 0;
        }
        else {
          BOOL v16 = a3;
        }
        BOOL v17 = v16 == 0;
        if (v14) {
          BOOL v17 = 1;
        }
        BOOL v45 = v17;
        unint64_t v18 = (int *)MEMORY[0x1E4F940E8];
        unint64_t v19 = (int *)MEMORY[0x1E4F940C8];
        BOOL v20 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v11;
LABEL_6:
        uint64_t v12 = v7;
        uint64_t v13 = v10;
LABEL_8:
        ++v9;
        uint64_t v7 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v18) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v19)) {
      goto LABEL_58;
    }
    char v21 = 0;
    unsigned int v22 = 0;
    unint64_t v23 = 0;
    while (1)
    {
      uint64_t v24 = *v18;
      unint64_t v25 = *(void *)(v3 + v24);
      if (v25 == -1 || v25 >= *(void *)(v3 + *v6)) {
        break;
      }
      char v26 = *(unsigned char *)(*(void *)(v3 + *v20) + v25);
      *(void *)(v3 + v24) = v25 + 1;
      v23 |= (unint64_t)(v26 & 0x7F) << v21;
      if ((v26 & 0x80) == 0) {
        goto LABEL_25;
      }
      v21 += 7;
      if (v22++ >= 9)
      {
        unint64_t v23 = 0;
        int v28 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v19) = 1;
LABEL_25:
    int v28 = *(unsigned __int8 *)(v3 + *v19);
    if (*(unsigned char *)(v3 + *v19)) {
      unint64_t v23 = 0;
    }
LABEL_27:
    if (v28 || (v23 & 7) == 4)
    {
LABEL_58:
      if (v15)
      {
        char v40 = 1;
        goto LABEL_68;
      }
      if (v16)
      {
        do
        {
          while (1)
          {
            int v42 = *v16++;
            int v41 = v42;
            if (v42 != 1 && v41 != 2) {
              break;
            }
            *(unsigned char *)(a1 + 44) |= v41;
          }
        }
        while (v41);
      }
      goto LABEL_69;
    }
    unint64_t v30 = v23 >> 3;
    BOOL v31 = v15;
    if (!v45)
    {
      BOOL v32 = v16;
      do
      {
        int v34 = *v32++;
        int v33 = v34;
        BOOL v31 = v34 != 0;
        if (v34) {
          BOOL v35 = v33 == v30;
        }
        else {
          BOOL v35 = 1;
        }
      }
      while (!v35);
    }
    if (v30 == 2) {
      break;
    }
    if (v30 == 1)
    {
      if (!v31) {
        goto LABEL_50;
      }
      if (*(unsigned char *)(a1 + 44))
      {
        if ((PBReaderSkipValueWithTag() & 1) == 0)
        {
LABEL_67:
          char v40 = 0;
          goto LABEL_68;
        }
        v9 -= *(unsigned char *)(a1 + 44) & 1;
      }
      else
      {
        uint64_t v36 = PBReaderReadString();
        unsigned int v37 = *(void **)(a1 + 16);
        *(void *)(a1 + 16) = v36;

        --v9;
      }
    }
    else if (!PBReaderSkipValueWithTag())
    {
      goto LABEL_67;
    }
LABEL_51:
    if (v9) {
      char v39 = 1;
    }
    else {
      char v39 = v15;
    }
    if ((v39 & 1) == 0) {
      goto LABEL_58;
    }
  }
  if (!v31 || (*(unsigned char *)(a1 + 44) & 2) != 0)
  {
LABEL_50:
    if ((PBReaderSkipValueWithTag() & 1) == 0) {
      goto LABEL_67;
    }
    goto LABEL_51;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_67;
  }
  uint64_t v38 = objc_alloc_init(GEOLocalizedString);
  if (GEOLocalizedStringReadAllFrom((uint64_t)v38, (void *)v3, v7 & 1))
  {
    PBReaderRecallMark();
    -[GEOScopedBrandInfo _addNoFlagsLocalizedName:](a1, v38);

    unint64_t v19 = (int *)MEMORY[0x1E4F940C8];
    goto LABEL_51;
  }

  char v40 = 0;
  unint64_t v19 = (int *)MEMORY[0x1E4F940C8];
LABEL_68:
  *(unsigned char *)(a1 + 44) |= 1u;
  *(unsigned char *)(a1 + 44) |= 2u;
  if (v40)
  {
LABEL_69:
    unint64_t v3 = *(unsigned char *)(v3 + *v19) == 0;
    if (!v15) {
      return v3;
    }
    goto LABEL_70;
  }
  unint64_t v3 = 0;
  if (v15)
  {
LABEL_70:
    int v43 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_1898E3628(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898E3EE8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOScopedBrandInfoCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v11 = *MEMORY[0x1E4F143B8];
  long long v6 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  id v1 = *(id *)(a1 + 24);
  uint64_t v2 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t v4 = *(void *)v7;
    do
    {
      uint64_t v5 = 0;
      do
      {
        if (*(void *)v7 != v4) {
          objc_enumerationMutation(v1);
        }
        objc_msgSend(*(id *)(*((void *)&v6 + 1) + 8 * v5++), "readAll:", 1, (void)v6);
      }
      while (v3 != v5);
      uint64_t v3 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
    }
    while (v3);
  }
}

unint64_t GEOScopedBrandInfoReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 36))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOScopedBrandInfoReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 40));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 32) = [v8 position];
  *(_DWORD *)(a1 + 36) = [v8 length];
  if (a3) {
    long long v9 = (int *)&GEOScopedBrandInfoReadAllFrom_recursiveTag;
  }
  else {
    long long v9 = (int *)&GEOScopedBrandInfoReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOScopedBrandInfoReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOScopedBrandInfoCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return Specified;
}

void sub_1898E417C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOScopedBrandInfoReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOScopedBrandInfoReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1898E41E0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898E4404(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOScopedBrandInfoIsDirty(uint64_t a1)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  if ((*(unsigned char *)(a1 + 44) & 7) != 0) {
    return 1;
  }
  if ((*(unsigned char *)(a1 + 44) & 2) == 0) {
    return 0;
  }
  long long v9 = 0u;
  long long v10 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  id v3 = *(id *)(a1 + 24);
  uint64_t v2 = [v3 countByEnumeratingWithState:&v7 objects:v11 count:16];
  if (v2)
  {
    uint64_t v4 = *(void *)v8;
    while (2)
    {
      for (uint64_t i = 0; i != v2; ++i)
      {
        if (*(void *)v8 != v4) {
          objc_enumerationMutation(v3);
        }
        if (GEOLocalizedStringIsDirty(*(void *)(*((void *)&v7 + 1) + 8 * i)))
        {
          uint64_t v2 = 1;
          goto LABEL_15;
        }
      }
      uint64_t v2 = [v3 countByEnumeratingWithState:&v7 objects:v11 count:16];
      if (v2) {
        continue;
      }
      break;
    }
  }
LABEL_15:

  return v2;
}

os_unfair_lock_s *GEOScopedBrandInfoIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOScopedBrandInfoIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 10);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_1898E48EC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

long double GEOCoordinateForTilePoint(double a1, double a2, double a3)
{
  double v3 = a2 * 0.0078125;
  long double v4 = exp2((double)(int)a3 + 1.0);
  long double v5 = exp((v3 + v4 * -0.5) / (v4 / 6.28318531));
  return (atan(v5) * -2.0 + 1.57079633) * 57.2957795;
}

double GEODistanceBetweenPointAndLine(double a1, double a2, double a3, double a4, double a5, double a6)
{
  double v6 = a1 - a3;
  double v7 = a2 - a4;
  double v8 = a5 - a3;
  double v9 = a6 - a4;
  if (v8 == 0.0 && v9 == 0.0) {
    return sqrt(v7 * v7 + v6 * v6);
  }
  else {
    return fabs(v6 * v9 - v8 * v7) / sqrt(v9 * v9 + v8 * v8);
  }
}

double GEOClosestCoordinateOnLineSegmentFromCoordinate3D(double result, double a2, double a3, double a4, double a5, double a6, double a7, double a8, double a9, double a10)
{
  double v15 = a4 - result;
  double v16 = a5 - a2;
  if (a4 - result != 0.0 || v16 != 0.0)
  {
    double v17 = (v16 * (a10 - a2) + (a9 - result) * v15) / (v16 * v16 + v15 * v15);
    if (v17 >= 0.0)
    {
      if (v17 <= 1.0) {
        return result + v17 * v15;
      }
      else {
        return a4;
      }
    }
  }
  return result;
}

double GEOClosestCoordinateOnLineSegmentFromCoordinate(double a1, double a2, double a3, double a4, double a5, double a6, double a7, double a8)
{
  return GEOClosestCoordinateOnLineSegmentFromCoordinate3D(a1, a2, 1.79769313e308, a3, a4, 1.79769313e308, a4, a8, a5, a6);
}

long double GEOBearingFromCoordinateToCoordinate(double a1, double a2, double a3, double a4)
{
  double v4 = a2 * 0.0174532925;
  double v5 = a3 * 0.0174532925;
  double v6 = a4 * 0.0174532925;
  __double2 v7 = __sincos_stret(a1 * 0.0174532925);
  __double2 v8 = __sincos_stret(v5);
  __double2 v9 = __sincos_stret(v6 - v4);
  long double v10 = atan2(v8.__cosval * v9.__sinval, -(v7.__sinval * v8.__cosval) * v9.__cosval + v7.__cosval * v8.__sinval);
  return fmod(v10, 6.28318531) * 57.2957795;
}

long double GEOCoordinate2DAlongBearing(double a1, double a2, double a3, double a4)
{
  GEOTilePointForCoordinate(a1, a2, 20.0);
  double v8 = v7;
  double v9 = a3 + 360.0;
  if (a3 >= 0.0) {
    double v9 = a3;
  }
  double v10 = v9 * -0.0174532925 + 1.57079633;
  long double v11 = GEOMapPointsPerMeterAtLatitude(a1) * a4;
  double sinval = __sincos_stret(v10).__sinval;
  long double v13 = exp(((v8 - v11 * sinval) * 0.0078125 + -1048576.0) / 333772.107);
  return (atan(v13) * -2.0 + 1.57079633) * 57.2957795;
}

long double GEOMapPointsPerMeterAtLatitude(double a1)
{
  double v2 = a1 * 0.0174532925;
  long double v3 = cos(v2 + v2) * -559.82 + 111132.92;
  long double v4 = v3 + cos(v2 * 4.0) * 1.175;
  long double v5 = v4 + cos(v2 * 6.0) * -0.0023;
  GEOTilePointForCoordinate(a1 + -0.5, 0.0, 20.0);
  double v7 = v6;
  GEOTilePointForCoordinate(a1 + 0.5, 0.0, 20.0);
  return vabdd_f64(v8, v7) / v5;
}

void GEOCoordinatesForRegion(uint64_t a1, uint64_t a2, double a3, double a4, double a5, double a6)
{
  GEOMapRectForCoordinateRegion(a3, a4, a5, a6);
  double v12 = v8;
  double v13 = fabs(v9);
  if (fabs(v8) == INFINITY || v13 == INFINITY)
  {
    *(_OWORD *)a1 = kGEOLocationCoordinate2DInvalid_1;
    *(_OWORD *)a2 = kGEOLocationCoordinate2DInvalid_1;
  }
  else
  {
    double v18 = v8 + v10;
    double v15 = v9 + v11;
    long double v16 = exp((v9 * 0.0078125 + -1048576.0) / 333772.107);
    *(long double *)a1 = (atan(v16) * -2.0 + 1.57079633) * 57.2957795;
    *(double *)(a1 + 8) = v12 * 0.0078125 * 0.000171661377 + -180.0;
    long double v17 = exp((v15 * 0.0078125 + -1048576.0) / 333772.107);
    *(long double *)a2 = (atan(v17) * -2.0 + 1.57079633) * 57.2957795;
    *(double *)(a2 + 8) = v18 * 0.0078125 * 0.000171661377 + -180.0;
  }
}

uint64_t GEOMapRectIsNull(double a1, double a2)
{
  BOOL v2 = fabs(a1) == INFINITY;
  return fabs(a2) == INFINITY || v2;
}

double GEOLocationCoordinate3DLerp(double a1, double a2, double a3, double a4, double a5, double a6, double a7)
{
  return a1 + (a4 - a1) * a7;
}

long double GEOCalculateDistanceHighPrecision(double a1, double a2, double a3, double a4)
{
  double v8 = sin(a1 * 0.0174532925) * -21000.0 + 6378160.0;

  return GEOCalculateDistanceRadius(a1, a2, a3, a4, v8);
}

void GEOMapPoint3DForCoordinate(double a1, double a2)
{
}

long double GEOCoordinate3DForMapPoint(double a1, double a2)
{
  long double v2 = exp((a2 * 0.0078125 + -1048576.0) / 333772.107);
  return (atan(v2) * -2.0 + 1.57079633) * 57.2957795;
}

long double GEOZoomScaleForZoomLevelF(double a1)
{
  return 1.0 / exp2(20.0 - a1);
}

long double GEOMetersPerDegreeAtLatitude(double a1)
{
  long double v2 = cos(a1 + a1) * -559.82 + 111132.92;
  long double v3 = v2 + cos(a1 * 4.0) * 1.175;
  return v3 + cos(a1 * 6.0) * -0.0023;
}

long double GEOMetersPerMapPointAtLatitude(double a1)
{
  return 1.0 / GEOMapPointsPerMeterAtLatitude(a1);
}

long double GEOMetersBetweenMapPoints(double a1, double a2, double a3, double a4)
{
  long double v5 = exp((a2 * 0.0078125 + -1048576.0) / 333772.107);
  double v6 = (atan(v5) * -2.0 + 1.57079633) * 57.2957795;
  long double v7 = exp((a4 * 0.0078125 + -1048576.0) / 333772.107);
  double v8 = (atan(v7) * -2.0 + 1.57079633) * 57.2957795;
  double v9 = sin(v6 * 0.0174532925) * -21000.0 + 6378160.0;

  return GEOCalculateDistanceRadius(v6, a1 * 0.0078125 * 0.000171661377 + -180.0, v8, a3 * 0.0078125 * 0.000171661377 + -180.0, v9);
}

uint64_t GEOStringFromMapRectBounds(double a1, double a2, double a3, double a4)
{
  return [NSString stringWithFormat:@"%.1f, %.1f\n%.1f, %.1f\n%.1f, %.1f\n%.1f, %.1f", *(void *)&a1, *(void *)&a2, *(void *)&a1, a2 + a4, a1 + a3, a2 + a4, a1 + a3, *(void *)&a2];
}

uint64_t GEOStringFromCoordinateRegionBounds(double a1, double a2, double a3, double a4)
{
  uint64_t v7 = 0;
  uint64_t v8 = 0;
  uint64_t v5 = 0;
  uint64_t v6 = 0;
  GEOCoordinatesForRegion((uint64_t)&v7, (uint64_t)&v5, a1, a2, a3, a4);
  return [NSString stringWithFormat:@"%0.6f, %0.6f\n%0.6f, %0.6f\n%0.6f, %0.6f\n%0.6f, %0.6f", v7, v8, v5, v8, v5, v6, v7, v6];
}

double GEOMapRectUnion(double a1, double a2, double a3, double a4, double a5, double a6)
{
  double v6 = fabs(a2);
  if (fabs(a1) != INFINITY && v6 != INFINITY)
  {
    double v8 = fabs(a6);
    if (fabs(a5) == INFINITY || v8 == INFINITY)
    {
      return a1;
    }
    else if (a1 < a5)
    {
      return a1;
    }
  }
  return a5;
}

uint64_t GEOMapBoxUnion@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  float64x2_t v3 = *(float64x2_t *)result;
  if (fabs(*(double *)result) == INFINITY
    || (double v4 = *(double *)(result + 16),
        v5.f64[1] = *(float64_t *)(result + 8),
        v5.f64[0] = v4,
        int32x2_t v6 = vmovn_s64(vceqq_f64(vabsq_f64(v5), (float64x2_t)vdupq_n_s64(0x7FF0000000000000uLL))),
        (v6.i8[4] & 1) != 0)
    || (v6.i8[0] & 1) != 0)
  {
    long long v18 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a3 = *(_OWORD *)a2;
    *(_OWORD *)(a3 + 16) = v18;
    long long v19 = *(_OWORD *)(a2 + 32);
LABEL_15:
    *(_OWORD *)(a3 + 32) = v19;
    return result;
  }
  float64x2_t v7 = *(float64x2_t *)a2;
  if (fabs(*(double *)a2) == INFINITY
    || (double v8 = *(double *)(a2 + 16),
        v9.f64[1] = *(float64_t *)(a2 + 8),
        v9.f64[0] = v8,
        int32x2_t v10 = vmovn_s64(vceqq_f64(vabsq_f64(v9), (float64x2_t)vdupq_n_s64(0x7FF0000000000000uLL))),
        (v10.i8[4] & 1) != 0)
    || (v10.i8[0] & 1) != 0)
  {
    long long v20 = *(_OWORD *)(result + 16);
    *(_OWORD *)a3 = *(_OWORD *)result;
    *(_OWORD *)(a3 + 16) = v20;
    long long v19 = *(_OWORD *)(result + 32);
    goto LABEL_15;
  }
  int8x16_t v11 = (int8x16_t)vcgtq_f64(v7, v3);
  if (v4 >= v8) {
    double v12 = *(double *)(a2 + 16);
  }
  else {
    double v12 = *(double *)(result + 16);
  }
  double v13 = v4 + *(double *)(result + 40);
  double v14 = v8 + *(double *)(a2 + 40);
  if (v13 <= v14) {
    double v13 = v14;
  }
  *(double *)(a3 + 16) = v12;
  float64x2_t v15 = (float64x2_t)vbslq_s8(v11, (int8x16_t)v3, (int8x16_t)v7);
  float64x2_t v16 = vaddq_f64(v3, *(float64x2_t *)(result + 24));
  float64x2_t v17 = vaddq_f64(v7, *(float64x2_t *)(a2 + 24));
  *(float64x2_t *)a3 = v15;
  *(float64x2_t *)(a3 + 24) = vsubq_f64((float64x2_t)vbslq_s8((int8x16_t)vcgtq_f64(v16, v17), (int8x16_t)v16, (int8x16_t)v17), v15);
  *(double *)(a3 + 40) = v13 - v12;
  return result;
}

BOOL GEOMapBoxIsNull(double *a1)
{
  return fabs(*a1) == INFINITY || fabs(a1[1]) == INFINITY || fabs(a1[2]) == INFINITY;
}

double GEOMapRectIntersection(double a1, double a2, double a3, double a4, double a5, double a6, double a7, double a8)
{
  double v9 = fabs(a1);
  double v10 = fabs(a2);
  double result = INFINITY;
  if (v9 != INFINITY && v10 != INFINITY)
  {
    double v13 = fabs(a6);
    double result = INFINITY;
    if (fabs(a5) != INFINITY && v13 != INFINITY)
    {
      double result = a1 <= a5 ? a5 : a1;
      double v15 = a5 + a7;
      double v16 = a1 + a3 >= v15 ? v15 : a1 + a3;
      if (result > v16) {
        return INFINITY;
      }
      double v17 = a2 <= a6 ? a6 : a2;
      double v18 = a2 + a4;
      if (v18 >= a6 + a8) {
        double v18 = a6 + a8;
      }
      if (v17 > v18) {
        return INFINITY;
      }
    }
  }
  return result;
}

double GEOMapRectInset(double result, double a2, double a3, double a4, double a5)
{
  double v5 = fabs(a2);
  if (fabs(result) != INFINITY && v5 != INFINITY) {
    return result + a5;
  }
  return result;
}

double GEOMapRectOffset(double a1, double a2, double a3, double a4, double a5)
{
  BOOL v5 = fabs(a1) == INFINITY;
  if (fabs(a2) == INFINITY) {
    BOOL v5 = 1;
  }
  if (v5) {
    a5 = -0.0;
  }
  return a1 + a5;
}

double GEOMapRectDivide(uint64_t a1, uint64_t a2, int a3, double a4, double a5, double a6, double a7, double a8)
{
  double v8 = fabs(a5);
  if (fabs(a4) == INFINITY || v8 == INFINITY)
  {
    double result = *(double *)&GEOMapRectNull;
    *(_OWORD *)a1 = GEOMapRectNull;
    *(_OWORD *)(a1 + 16) = unk_18A635B88;
    *(_OWORD *)a2 = GEOMapRectNull;
    *(_OWORD *)(a2 + 16) = unk_18A635B88;
  }
  else
  {
    *(double *)a2 = a4;
    *(double *)(a2 + 8) = a5;
    *(double *)(a2 + 16) = a6;
    *(double *)(a2 + 24) = a7;
    long long v11 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v11;
    double v12 = 0.0;
    if (a8 >= 0.0) {
      double v12 = a8;
    }
    if ((a3 | 2) == 2)
    {
      if (v12 > a6) {
        double v12 = a6;
      }
      *(double *)(a1 + 16) = v12;
      double v13 = *(double *)(a2 + 16) - v12;
      *(double *)(a2 + 16) = v13;
      if (a3)
      {
        double result = v13 + *(double *)a1;
        *(double *)a1 = result;
      }
      else
      {
        double result = v12 + *(double *)a2;
        *(double *)a2 = result;
      }
    }
    else
    {
      if (v12 > a7) {
        double v12 = a7;
      }
      *(double *)(a1 + 24) = v12;
      double v14 = *(double *)(a2 + 24) - v12;
      *(double *)(a2 + 24) = v14;
      if (a3 == 1)
      {
        double result = v12 + *(double *)(a2 + 8);
        *(double *)(a2 + 8) = result;
      }
      else
      {
        double result = v14 + *(double *)(a1 + 8);
        *(double *)(a1 + 8) = result;
      }
    }
  }
  return result;
}

BOOL GEOMapRectContainsPoint(double a1, double a2, double a3, double a4, double a5, double a6)
{
  double v6 = fabs(a2);
  double v7 = a1 + a3;
  return fabs(a1) != INFINITY && v6 != INFINITY && a5 >= a1 && a5 < v7 && a6 >= a2 && a6 < a2 + a4;
}

BOOL GEOMapRectContainsRect(double a1, double a2, double a3, double a4, double a5, double a6, double a7, double a8)
{
  double v8 = fabs(a6);
  if (fabs(a5) == INFINITY || v8 == INFINITY) {
    return 1;
  }
  double v11 = fabs(a2);
  if (fabs(a1) == INFINITY || v11 == INFINITY || a1 > a5) {
    return 0;
  }
  return a1 + a3 >= a5 + a7 && a2 <= a6 && a2 + a4 >= a6 + a8;
}

BOOL GEOMapRectIntersectsSegment(double a1, double a2, double a3, double a4, double a5, double a6, double a7, double a8)
{
  if (a5 >= a7) {
    double v8 = a7;
  }
  else {
    double v8 = a5;
  }
  if (a5 <= a7) {
    double v9 = a7;
  }
  else {
    double v9 = a5;
  }
  if (a1 > v8) {
    double v8 = a1;
  }
  double v10 = a1 + a3;
  if (v10 >= v9) {
    double v10 = v9;
  }
  if (v8 > v10) {
    return 0;
  }
  if (vabdd_f64(a7, a5) > 0.0000001)
  {
    double v12 = (a8 - a6) / (a7 - a5);
    double v13 = a6 - v12 * a5;
    a6 = v13 + v12 * v8;
    a8 = v13 + v12 * v10;
  }
  if (a6 <= a8) {
    double v14 = a6;
  }
  else {
    double v14 = a8;
  }
  if (a6 <= a8) {
    double v15 = a8;
  }
  else {
    double v15 = a6;
  }
  if (a2 > v14) {
    double v14 = a2;
  }
  double v16 = a2 + a4;
  if (v16 >= v15) {
    double v16 = v15;
  }
  return v14 <= v16;
}

long double GEOMapRectMakeWithRadialDistance(double a1, double a2, double a3)
{
  double v5 = GEOTilePointForCoordinate(a1, a2, 20.0);
  return v5 - GEOMapPointsPerMeterAtLatitude(a1) * a3;
}

double GEOMapBoxBoundingMapPoints@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  float64x2_t v3 = (float64x2_t)vdupq_n_s64(0x7FF0000000000000uLL);
  float64x2_t v4 = (float64x2_t)vdupq_n_s64(0xFFF0000000000000);
  if (a2)
  {
    double v5 = (double *)(a1 + 16);
    double v6 = INFINITY;
    double v7 = -INFINITY;
    do
    {
      if (*v5 < v6) {
        double v6 = *v5;
      }
      float64x2_t v8 = *(float64x2_t *)(v5 - 2);
      float64x2_t v3 = (float64x2_t)vbslq_s8((int8x16_t)vcgtq_f64(v3, v8), (int8x16_t)v8, (int8x16_t)v3);
      float64x2_t v4 = (float64x2_t)vbslq_s8((int8x16_t)vcgtq_f64(v8, v4), (int8x16_t)v8, (int8x16_t)v4);
      if (*v5 > v7) {
        double v7 = *v5;
      }
      v5 += 3;
      --a2;
    }
    while (a2);
  }
  else
  {
    double v7 = -INFINITY;
    double v6 = INFINITY;
  }
  float64x2_t v9 = vsubq_f64(v4, v3);
  *(float64x2_t *)a3 = v3;
  double result = v7 - v6;
  *(double *)(a3 + 16) = v6;
  *(float64x2_t *)(a3 + 24) = v9;
  *(double *)(a3 + 40) = v7 - v6;
  return result;
}

double *GEOBoundingMapBoxAddPoint@<X0>(double *result@<X0>, double *a2@<X8>, double a3@<D0>, double a4@<D1>, double a5@<D2>)
{
  double v6 = *result;
  double v5 = result[1];
  double v7 = result[2];
  double v8 = fabs(v5);
  double v9 = fabs(v7);
  if (fabs(*result) == INFINITY || v8 == INFINITY || v9 == INFINITY)
  {
    double v12 = 0.0;
    double v13 = 0.0;
    double v14 = 0.0;
  }
  else
  {
    if (v6 >= a3) {
      double v15 = a3;
    }
    else {
      double v15 = *result;
    }
    if (v6 + result[3] > a3) {
      a3 = v6 + result[3];
    }
    if (v5 >= a4) {
      double v16 = a4;
    }
    else {
      double v16 = result[1];
    }
    double v17 = v5 + result[4];
    if (v17 > a4) {
      a4 = v17;
    }
    if (v7 >= a5) {
      double v18 = a5;
    }
    else {
      double v18 = result[2];
    }
    double v19 = v7 + result[5];
    if (v19 > a5) {
      a5 = v19;
    }
    double v12 = a3 - v15;
    double v13 = a4 - v16;
    double v14 = a5 - v18;
    a3 = v15;
    a4 = v16;
    a5 = v18;
  }
  *a2 = a3;
  a2[1] = a4;
  a2[2] = a5;
  a2[3] = v12;
  a2[4] = v13;
  a2[5] = v14;
  return result;
}

uint64_t GEOMapPointInPolygon(double *a1, unint64_t a2, double a3, double a4)
{
  if (a2 >= 3)
  {
    unint64_t v5 = 0;
    char v4 = 0;
    for (uint64_t i = a1; ; i += 2)
    {
      if (v5) {
        unint64_t v7 = v5;
      }
      else {
        unint64_t v7 = a2;
      }
      double v8 = i[1];
      double v9 = &a1[2 * v7];
      double v10 = v9 - 2;
      double v11 = *(v9 - 1);
      BOOL v12 = v8 < v11;
      if (v8 >= v11) {
        double v13 = v9 - 2;
      }
      else {
        double v13 = i;
      }
      double v14 = v13[1];
      if (!v12) {
        double v10 = i;
      }
      double v15 = v10[1];
      if (v14 <= a4 && a4 <= v15)
      {
        double v17 = (*v13 - a3) * (v15 - v14) - (v14 - a4) * (*v10 - *v13);
        if (v17 == 0.0)
        {
          char v4 = 1;
          return v4 & 1;
        }
        if (v17 > 0.0) {
          v4 ^= 1u;
        }
      }
      if (a2 == ++v5) {
        return v4 & 1;
      }
    }
  }
  char v4 = 0;
  return v4 & 1;
}

BOOL GEOMapRectSpans180thMeridian(double a1, double a2, double a3)
{
  return a1 + a3 > 268435456.0 || a1 < 0.0;
}

double GEOMapRectRemainder(double a1, double a2, double a3)
{
  if (a1 < 0.0) {
    return a1 + 268435456.0;
  }
  if (a1 + a3 <= 268435456.0) {
    return INFINITY;
  }
  return 0.0;
}

BOOL GEOMapRectIsEmpty(double a1, double a2, double a3, double a4)
{
  double v4 = fabs(a2);
  if (fabs(a1) == INFINITY || v4 == INFINITY) {
    return 1;
  }
  if (a4 == 0.0) {
    return a3 == 0.0;
  }
  return 0;
}

double GEOMapPointDistanceSquared(float64x2_t *a1, float64x2_t *a2)
{
  float64x2_t v2 = vsubq_f64(*a2, *a1);
  return vaddvq_f64(vmulq_f64(v2, v2));
}

double GEOMapRectForGEOTileKey(uint64_t a1)
{
  if ((*(unsigned char *)a1 & 0x7F) == 0x14)
  {
    uint64_t v2 = *(void *)(a1 + 1);
    signed int v3 = v2 >> 6;
  }
  else
  {
    GEOTileKeyAssertIsStandard(a1);
    LOBYTE(v2) = (unsigned __int16)WORD2(*(void *)(a1 + 1)) >> 8;
    signed int v3 = ((*(void *)(a1 + 1) >> 46) | (*(_DWORD *)(a1 + 9) << 18)) & 0x3FFFFFF;
  }
  return 268435456.0 / (double)(1 << v2) * (double)v3;
}

void GEOCoordinateAzimuth(double a1, double a2, double a3, double a4)
{
  double v10 = a2 / 360.0 + 0.5;
  long double v6 = tan((1.57079633 - a1 * 0.0174532925) * 0.5);
  long double v7 = log(v6) / 6.28318531;
  long double v8 = tan((1.57079633 - a3 * 0.0174532925) * 0.5);
  long double v9 = log(v8);
  atan2(v7 + -0.5 + 0.5 - v9 / 6.28318531, a4 / 360.0 + 0.5 - v10);
}

double GEOCoordinateWithReducedPrecision(int a1, double a2)
{
  double v3 = __exp10((double)-a1);
  return v3 * round(a2 / v3);
}

unint64_t GEOCoordinateHash(double a1, double a2)
{
  double v3 = -a1;
  if (a1 >= 0.0) {
    double v3 = a1;
  }
  long double v4 = floor(v3 + 0.5);
  double v5 = (v3 - v4) * 1.84467441e19;
  double v6 = fmod(v4, 1.84467441e19);
  unint64_t v7 = 2654435761u * (unint64_t)v6;
  unint64_t v8 = v7 + (unint64_t)v5;
  if (v5 <= 0.0) {
    unint64_t v8 = 2654435761u * (unint64_t)v6;
  }
  unint64_t v9 = v7 - (unint64_t)fabs(v5);
  if (v5 < 0.0) {
    unint64_t v10 = v9;
  }
  else {
    unint64_t v10 = v8;
  }
  if (a2 >= 0.0) {
    double v11 = a2;
  }
  else {
    double v11 = -a2;
  }
  long double v12 = floor(v11 + 0.5);
  double v13 = (v11 - v12) * 1.84467441e19;
  unint64_t v14 = 2654435761u * (unint64_t)fmod(v12, 1.84467441e19);
  unint64_t v15 = v14 + (unint64_t)v13;
  double v16 = fabs(v13);
  if (v13 <= 0.0) {
    unint64_t v15 = v14;
  }
  unint64_t v17 = v14 - (unint64_t)v16;
  if (v13 >= 0.0) {
    unint64_t v17 = v15;
  }
  return v17 ^ v10;
}

void GEOWrapAngleDegrees(long double a1)
{
}

void GEOAngleDifferenceDegrees(long double a1, long double a2)
{
}

double GEODistanceTraveledForLocationOnStep(uint64_t a1, unsigned int a2, double a3, double a4, double a5, double a6, double a7, double a8, double a9, double a10)
{
  if (a2 < 2)
  {
    unsigned int v14 = 0;
    *(double *)&unint64_t v19 = -180.0;
    *(double *)&unint64_t v18 = -180.0;
  }
  else
  {
    uint64_t v13 = 0;
    unsigned int v14 = 0;
    double v15 = 1.79769313e308;
    uint64_t v16 = a2 - 1;
    unint64_t v17 = (double *)(a1 + 16);
    *(double *)&unint64_t v18 = -180.0;
    *(double *)&unint64_t v19 = -180.0;
    do
    {
      double v20 = GEOClosestCoordinateOnLineSegmentFromCoordinate3D(*(v17 - 2), *(v17 - 1), 1.79769313e308, *v17, v17[1], 1.79769313e308, a9, a10, a3, a4);
      double v22 = v21;
      double v23 = GEOCalculateDistanceRadius(a3, a4, v20, v21, 6367000.0);
      if (v23 < v15)
      {
        double v15 = v23;
        *(double *)&unint64_t v19 = v22;
        *(double *)&unint64_t v18 = v20;
        unsigned int v14 = v13;
      }
      ++v13;
      v17 += 2;
    }
    while (v16 != v13);
  }
  uint64_t v24 = v14;
  if (v14 + 1 > 1) {
    uint64_t v25 = v14 + 1;
  }
  else {
    uint64_t v25 = 1;
  }
  char v26 = (double *)(a1 + 16);
  double v27 = 0.0;
  do
  {
    double v28 = *(double *)&v18;
    double v29 = *(double *)&v19;
    if (v24)
    {
      double v28 = *v26;
      double v29 = v26[1];
    }
    double v27 = v27 + GEOCalculateDistanceRadius(*(v26 - 2), *(v26 - 1), v28, v29, 6367000.0);
    v26 += 2;
    --v24;
    --v25;
  }
  while (v25);
  return v27;
}

void GEODistancePercentageTraveledForLocationOnStep(uint64_t a1, unsigned int a2, double a3, double a4, double a5, double a6, double a7, double a8, double a9, double a10)
{
  GEODistanceTraveledForLocationOnStep(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
  double v12 = 0.0;
  if (a2 >= 2)
  {
    uint64_t v13 = a2 - 1;
    unsigned int v14 = (double *)(a1 + 16);
    do
    {
      double v15 = *(v14 - 2);
      double v16 = *(v14 - 1);
      double v17 = *v14;
      double v18 = v14[1];
      v14 += 2;
      double v12 = v12 + GEOCalculateDistanceRadius(v15, v16, v17, v18, 6367000.0);
      --v13;
    }
    while (v13);
  }
}

void sub_1898E67BC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1898E6A98(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1898E6ED0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1898E7584(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *__p, uint64_t a17)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_1898E7B40(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1898E7DE8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1898E7F44(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1898E82A8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void ___ZL23GEOGetGEOPathMatcherLogv_block_invoke_1()
{
  os_log_t v0 = os_log_create("com.apple.GeoServices", "GEOPathMatcher");
  id v1 = (void *)_MergedGlobals_224;
  _MergedGlobals_224 = (uint64_t)v0;
}

os_log_t GEOGetRequestResponseLog(const char *a1)
{
  return GEOFindOrCreateLog("com.apple.Maps.RequestResponse", a1);
}

void _GEOStateCaptureLog(void *a1)
{
  uint64_t v24 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  uint64_t v2 = v1;
  if (v1 && [v1 length])
  {
    if ((unint64_t)[v2 length] > 0x7000)
    {
      double v16 = v2;
      id v4 = v2;
      id v5 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
      if ((unint64_t)[v4 length] >= 0x7000)
      {
        uint64_t v6 = 0;
        uint64_t v7 = 0;
        do
        {
          unint64_t v8 = objc_msgSend(v4, "substringWithRange:", v6, 28672);
          [v5 addObject:v8];
          v6 += 28672;

          ++v7;
        }
        while (v7 < (((unint64_t)[v4 length] >> 12) * (unsigned __int128)0x2492492492492493uLL) >> 64);
      }
      else
      {
        uint64_t v6 = 0;
      }
      unint64_t v9 = [v4 substringFromIndex:v6];
      if (v9) {
        [v5 addObject:v9];
      }

      long long v19 = 0u;
      long long v20 = 0u;
      long long v17 = 0u;
      long long v18 = 0u;
      double v3 = v5;
      uint64_t v10 = [v3 countByEnumeratingWithState:&v17 objects:v21 count:16];
      if (v10)
      {
        uint64_t v11 = v10;
        uint64_t v12 = *(void *)v18;
        do
        {
          for (uint64_t i = 0; i != v11; ++i)
          {
            if (*(void *)v18 != v12) {
              objc_enumerationMutation(v3);
            }
            unsigned int v14 = *(void **)(*((void *)&v17 + 1) + 8 * i);
            double v15 = GEOFindOrCreateLog("com.apple.Maps", "TileStateCapture");
            if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
            {
              *(_DWORD *)buf = 138543362;
              double v23 = v14;
              _os_log_impl(&dword_188D96000, v15, OS_LOG_TYPE_ERROR, "Tile State for Maps: %{public}@", buf, 0xCu);
            }
          }
          uint64_t v11 = [v3 countByEnumeratingWithState:&v17 objects:v21 count:16];
        }
        while (v11);
      }

      uint64_t v2 = v16;
    }
    else
    {
      double v3 = GEOFindOrCreateLog("com.apple.Maps", "TileStateCapture");
      if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 138543362;
        double v23 = v2;
        _os_log_impl(&dword_188D96000, v3, OS_LOG_TYPE_ERROR, "Tile State for Maps: %{public}@", buf, 0xCu);
      }
    }
  }
}

id _GEORequestResponseLogQueue()
{
  if (qword_1EB29F968 != -1) {
    dispatch_once(&qword_1EB29F968, &__block_literal_global_66);
  }
  os_log_t v0 = (void *)qword_1EB29F960;

  return v0;
}

id protobufDataWithHeader(void *a1, void *a2)
{
  double v3 = a1;
  id v4 = a2;
  id v5 = (void *)MEMORY[0x18C1203C0]();
  LOBYTE(destLen) = 0;
  unint64_t v8 = compress(v3, &destLen, v6, v7);
  unint64_t v9 = v8;
  if (v8)
  {
    uint64_t v10 = v8;

    char v11 = destLen | 1;
    double v3 = v10;
  }
  else
  {
    char v11 = 1;
  }

  uint64_t v12 = [v4 dataUsingEncoding:4];
  uint64_t v13 = objc_msgSend(MEMORY[0x1E4F1CA58], "dataWithCapacity:", -[Bytef length](v3, "length") + objc_msgSend(v12, "length") + 2);
  char v16 = v11;
  [v13 appendBytes:&v16 length:1];
  [v13 appendData:v12];
  char v15 = 0;
  [v13 appendBytes:&v15 length:1];
  [v13 appendData:v3];

  return v13;
}

id protobufDataParts(void *a1, void *a2)
{
  double v3 = a1;
  id v4 = a2;
  if (v4 && (uint64_t v5 = [(Bytef *)v3 length], (unint64_t)(v5 - 143361) >= 0xFFFFFFFFFFFE4000))
  {
    uint64_t v7 = v5;
    unint64_t v8 = [v4 dataUsingEncoding:4];
    unint64_t v9 = (void *)MEMORY[0x18C1203C0]();
    LOBYTE(destLen[0]) = 0;
    uint64_t v12 = compress(v3, destLen, v10, v11);
    uint64_t v13 = v12;
    id v27 = v4;
    if (v12)
    {
      id v14 = v12;

      char v29 = LOBYTE(destLen[0]) | 2;
      uint64_t v7 = [v14 length];
      double v3 = (Bytef *)v14;
    }
    else
    {
      char v29 = 2;
    }
    unint64_t v15 = v7 + 28671;

    uint64_t v35 = 0;
    uint64_t v36 = &v35;
    uint64_t v37 = 0x2020000000;
    unint64_t v33 = 0;
    destLen[0] = MEMORY[0x1E4F143A8];
    destLen[1] = 3221225472;
    destLen[2] = (uLongf)__nextIdentifier_block_invoke;
    destLen[3] = (uLongf)&unk_1E53DB3C8;
    destLen[4] = (uLongf)&v35;
    if (nextIdentifier_onceToken != -1) {
      dispatch_once(&nextIdentifier_onceToken, destLen);
    }
    unint64_t add = atomic_fetch_add(v36 + 3, 1uLL);
    _Block_object_dispose(&v35, 8);
    unint64_t v33 = add;
    uint64_t v6 = [MEMORY[0x1E4F1CA48] array];
    if (v15 >= 0x7000)
    {
      uint64_t v17 = 0;
      uint64_t v18 = 0;
      unint64_t v19 = ((v15 >> 12) * (unsigned __int128)0x2492492492492493uLL) >> 64;
      if (v19 <= 1) {
        uint64_t v20 = 1;
      }
      else {
        uint64_t v20 = v19;
      }
      uint64_t v28 = v20;
      unint64_t v21 = 28672;
      do
      {
        unint64_t v22 = [(Bytef *)v3 length];
        uint64_t v23 = v21;
        if (v21 >= v22) {
          uint64_t v23 = [(Bytef *)v3 length];
        }
        uint64_t v24 = -[Bytef subdataWithRange:](v3, "subdataWithRange:", v21 - 28672, v23 + v17);
        uint64_t v25 = objc_msgSend(MEMORY[0x1E4F1CA58], "dataWithCapacity:", objc_msgSend(v24, "length") + objc_msgSend(v8, "length") + 12);
        char v32 = v29;
        [v25 appendBytes:&v32 length:1];
        [v25 appendBytes:&v33 length:8];
        v31[0] = v18;
        v31[1] = v19;
        [v25 appendBytes:v31 length:2];
        [v25 appendData:v8];
        char v30 = 0;
        [v25 appendBytes:&v30 length:1];
        [v25 appendData:v24];
        [v6 addObject:v25];

        ++v18;
        v17 -= 28672;
        v21 += 28672;
      }
      while (v28 != v18);
    }

    id v4 = v27;
  }
  else
  {
    uint64_t v6 = 0;
  }

  return v6;
}

id rrPersister(void *a1)
{
  uint64_t v26 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  if (+[GEOPlatform isRunningInGeod])
  {
    uint64_t v2 = _GEORequestResponseLogQueue();
    dispatch_assert_queue_V2(v2);

    if (qword_1EB29F988 != -1) {
      dispatch_once(&qword_1EB29F988, &__block_literal_global_9);
    }
    if (_MergedGlobals_225)
    {
      if (qword_1EB29F970)
      {
        double v3 = [MEMORY[0x1E4F1C9C8] now];
        uint64_t v4 = [v3 compare:qword_1EB29F970];

        if (v4 == 1)
        {
          _MergedGlobals_225 = 0;
          GEOConfigSetBOOL(GeoServicesConfig_MapsRequestResponseLoggingPersisted, (uint64_t)off_1E9113ED8);
          _setValue(GeoServicesConfig_MapsRequestResponseLoggingPersistedStopAt, (uint64_t)off_1E9113F18, 0, 0, 0);
        }
      }
      uint64_t v5 = [v1 dataTask];
      uint64_t v6 = [v5 requestCounterTicket];
      uint64_t v7 = [v6 appId];

      if (!_MergedGlobals_225) {
        goto LABEL_27;
      }
      if ([v7 length] && objc_msgSend((id)qword_1EB29F978, "count"))
      {
        long long v23 = 0u;
        long long v24 = 0u;
        long long v21 = 0u;
        long long v22 = 0u;
        id v8 = (id)qword_1EB29F978;
        uint64_t v9 = [v8 countByEnumeratingWithState:&v21 objects:v25 count:16];
        if (v9)
        {
          uint64_t v10 = v9;
          uint64_t v11 = *(void *)v22;
          while (2)
          {
            for (uint64_t i = 0; i != v10; ++i)
            {
              if (*(void *)v22 != v11) {
                objc_enumerationMutation(v8);
              }
              uint64_t v13 = *(void **)(*((void *)&v21 + 1) + 8 * i);
              if (objc_msgSend(v13, "hasSuffix:", @"*", (void)v21))
              {
                id v14 = objc_msgSend(v13, "substringToIndex:", objc_msgSend(v13, "length") - 1);
                char v15 = [v7 hasPrefix:v14];

                if (v15) {
                  goto LABEL_23;
                }
              }
              else if ([v7 isEqual:v13])
              {
LABEL_23:

                goto LABEL_24;
              }
            }
            uint64_t v10 = [v8 countByEnumeratingWithState:&v21 objects:v25 count:16];
            if (v10) {
              continue;
            }
            break;
          }
        }

        id v16 = 0;
        goto LABEL_30;
      }
LABEL_24:
      if (_MergedGlobals_225)
      {
        uint64_t v17 = (void *)qword_1EB29F980;
        if (qword_1EB29F980)
        {
LABEL_29:
          id v16 = v17;
LABEL_30:

          goto LABEL_31;
        }
        id v18 = [[GEORequestResponsePersister alloc] initWritable:1];
      }
      else
      {
LABEL_27:
        id v18 = 0;
      }
      unint64_t v19 = (void *)qword_1EB29F980;
      qword_1EB29F980 = (uint64_t)v18;

      uint64_t v17 = (void *)qword_1EB29F980;
      goto LABEL_29;
    }
  }
  id v16 = 0;
LABEL_31:

  return v16;
}

id _GEOLogPBCodableData(void *a1)
{
  id v1 = a1;
  uint64_t v2 = [v1 data];
  if (v2)
  {
    double v3 = (objc_class *)objc_opt_class();
    uint64_t v4 = NSStringFromClass(v3);
    uint64_t v5 = protobufDataWithHeader(v2, v4);
  }
  else
  {
    uint64_t v5 = 0;
  }

  return v5;
}

void _block_invoke(uint64_t a1, int a2, void *a3)
{
  uint64_t v5 = _GEORequestResponseLogQueue();
  dispatch_assert_queue_V2(v5);

  if (a2) {
    BOOL v6 = a3 == 0;
  }
  else {
    BOOL v6 = 1;
  }
  int v7 = !v6;
  if (v6)
  {
    _MergedGlobals_225 = GEOConfigGetBOOL(GeoServicesConfig_MapsRequestResponseLoggingPersisted, (uint64_t)off_1E9113ED8);
    int v9 = GeoServicesConfig_MapsRequestResponseLoggingPersistedStopAt;
    uint64_t v10 = off_1E9113F18;
  }
  else
  {
    if (a2 == GeoServicesConfig_MapsRequestResponseLoggingPersisted && a3 == off_1E9113ED8) {
      _MergedGlobals_225 = GEOConfigGetBOOL(GeoServicesConfig_MapsRequestResponseLoggingPersisted, (uint64_t)off_1E9113ED8);
    }
    int v9 = GeoServicesConfig_MapsRequestResponseLoggingPersistedStopAt;
    uint64_t v10 = off_1E9113F18;
    if (a2 != GeoServicesConfig_MapsRequestResponseLoggingPersistedStopAt || a3 != off_1E9113F18) {
      goto LABEL_21;
    }
  }
  uint64_t v12 = _getValue(v9, (uint64_t)v10, 1, 0, 0, 0);
  uint64_t v13 = (void *)qword_1EB29F970;
  qword_1EB29F970 = v12;

  if (!v7)
  {
    int v14 = GeoServicesConfig_MapsRequestResponseLoggingPersistedLimitBundleIds;
    char v15 = off_1E9113F08;
LABEL_27:
    uint64_t v17 = _getValue(v14, (uint64_t)v15, 1, 0, 0, 0);
    id v18 = (void *)qword_1EB29F978;
    qword_1EB29F978 = v17;

    return;
  }
LABEL_21:
  int v14 = GeoServicesConfig_MapsRequestResponseLoggingPersistedLimitBundleIds;
  char v15 = off_1E9113F08;
  if (a2 == GeoServicesConfig_MapsRequestResponseLoggingPersistedLimitBundleIds && a3 == off_1E9113F08) {
    goto LABEL_27;
  }
}

void __rrPersister_block_invoke()
{
  v9[3] = *MEMORY[0x1E4F143B8];
  os_log_t v0 = _GEORequestResponseLogQueue();
  id v1 = _GEOConfigAddBlockListenerForKey(GeoServicesConfig_MapsRequestResponseLoggingPersisted, (uint64_t)off_1E9113ED8, v0, &__block_literal_global_7);
  v9[0] = v1;
  uint64_t v2 = _GEORequestResponseLogQueue();
  double v3 = _GEOConfigAddBlockListenerForKey(GeoServicesConfig_MapsRequestResponseLoggingPersistedStopAt, (uint64_t)off_1E9113F18, v2, &__block_literal_global_7);
  v9[1] = v3;
  uint64_t v4 = _GEORequestResponseLogQueue();
  uint64_t v5 = _GEOConfigAddBlockListenerForKey(GeoServicesConfig_MapsRequestResponseLoggingPersistedLimitBundleIds, (uint64_t)off_1E9113F08, v4, &__block_literal_global_7);
  v9[2] = v5;
  uint64_t v6 = [MEMORY[0x1E4F1C978] arrayWithObjects:v9 count:3];
  int v7 = (void *)rrPersister_persisterListeners;
  rrPersister_persisterListeners = v6;

  _block_invoke(v8, GEOConfigKey_Invalid, unk_1E91186C0);
}

int compress(Bytef *dest, uLongf *destLen, const Bytef *source, uLong sourceLen)
{
  uint64_t v5 = dest;
  if (qword_1EB29F990 != -1) {
    dispatch_once(&qword_1EB29F990, &__block_literal_global_17_0);
  }
  id v6 = 0;
  if (destLen && byte_1EB29F959)
  {
    id v6 = 0;
    HIDWORD(v7) = byte_1EB29F959;
    LODWORD(v7) = byte_1EB29F959 - 4;
    switch((v7 >> 2))
    {
      case 0u:
        size_t v8 = (unint64_t)[(Bytef *)v5 length] >> 1;
        compression_algorithm v9 = COMPRESSION_LZFSE;
        goto LABEL_10;
      case 1u:
        size_t v8 = 2 * [(Bytef *)v5 length] / 3uLL;
        compression_algorithm v9 = COMPRESSION_LZ4;
        goto LABEL_10;
      case 3u:
        size_t v8 = (unint64_t)[(Bytef *)v5 length] >> 1;
        compression_algorithm v9 = COMPRESSION_ZLIB;
        goto LABEL_10;
      case 7u:
        size_t v8 = (unint64_t)[(Bytef *)v5 length] >> 1;
        compression_algorithm v9 = COMPRESSION_LZMA;
LABEL_10:
        id v10 = [MEMORY[0x1E4F1CA58] dataWithLength:v8];
        uint64_t v11 = (uint8_t *)[v10 mutableBytes];
        uint64_t v12 = v5;
        size_t v13 = compression_encode_buffer(v11, v8, (const uint8_t *)[(Bytef *)v12 bytes], [(Bytef *)v12 length], 0, v9);
        if (v13)
        {
          *(unsigned char *)uLongf destLen = byte_1EB29F959;
          [v10 setLength:v13];
          id v6 = v10;
        }
        else
        {
          id v6 = 0;
        }

        break;
      default:
        break;
    }
  }

  return (int)v6;
}

uint64_t __compress_block_invoke()
{
  uint64_t result = GEOConfigGetInteger(GeoServicesConfig_MapsRequestResponseLoggingCompression, (uint64_t)off_1E9113EC8);
  byte_1EB29F959 = result;
  return result;
}

uint64_t __nextIdentifier_block_invoke(uint64_t a1)
{
  uint64_t bytes = 0;
  uint64_t result = CCRandomGenerateBytes(&bytes, 8uLL);
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = bytes;
  return result;
}

id GEOGetRRMetadataFileManagerLog()
{
  if (qword_1EB29F9B0 != -1) {
    dispatch_once(&qword_1EB29F9B0, &__block_literal_global_46);
  }
  os_log_t v0 = (void *)qword_1EB29F9A8;

  return v0;
}

void sub_1898EAE1C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void __GEOGetRRMetadataFileManagerLog_block_invoke()
{
  os_log_t v0 = os_log_create("com.apple.GeoServices", "RRMetadataFileManager");
  id v1 = (void *)qword_1EB29F9A8;
  qword_1EB29F9A8 = (uint64_t)v0;
}

void sub_1898EC294(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13, id location, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,void *a35)
{
  _Unwind_Resume(a1);
}

void sub_1898EC558(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20)
{
  long long v23 = v22;

  _Unwind_Resume(a1);
}

void _migrateState(NSDictionary *a1, NSString *a2, NSString *a3)
{
  unint64_t v7 = a3;
  uint64_t v5 = [(NSDictionary *)a1 objectForKeyedSubscript:a2];
  id v6 = [v5 objectForKeyedSubscript:v7];
  [v6 unsignedIntValue];
}

void sub_1898EC614(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v12 = v11;

  _Unwind_Resume(a1);
}

void sub_1898EC710(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1898EC794(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1898EC96C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{
  _Unwind_Resume(a1);
}

void sub_1898ECA64(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, objc_super a9)
{
  id v10 = v9;

  a9.super_class = (Class)GEOOfflineStateManager;
  [(_Unwind_Exception *)&a9 dealloc];
  _Unwind_Resume(a1);
}

void sub_1898ECB14(_Unwind_Exception *a1)
{
}

void sub_1898ECCA0(_Unwind_Exception *a1)
{
  unint64_t v7 = v5;

  _Unwind_Resume(a1);
}

void sub_1898ED064(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1898ED398(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1898ED718(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,id a22)
{
  _Block_object_dispose(&a17, 8);
  _Unwind_Resume(a1);
}

void sub_1898ED944(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1898EDB58(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1898EE158(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,void *a24,void *a25,void *a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,id a35)
{
  objc_destroyWeak(v38);
  _Block_object_dispose(&a30, 8);

  _Block_object_dispose((const void *)(v39 - 176), 8);
  objc_destroyWeak((id *)(v39 - 184));

  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__102(uint64_t result, uint64_t a2)
{
  *(void *)(result + 48) = *(void *)(a2 + 48);
  return result;
}

void sub_1898EE308(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15)
{
  objc_destroyWeak(v15);
  _Unwind_Resume(a1);
}

void sub_1898EE404(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1898EE4D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_1898EEC0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  _Block_object_dispose(&a23, 8);
  _Block_object_dispose(&a27, 8);

  _Unwind_Resume(a1);
}

void sub_1898EEF9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_start(va1, a10);
  va_start(va, a10);
  uint64_t v14 = va_arg(va1, void);
  uint64_t v16 = va_arg(va1, void);
  uint64_t v17 = va_arg(va1, void);
  uint64_t v18 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  size_t v13 = *(void **)(v11 + 48);
  if (v13)
  {
    *(void *)(v11 + 56) = v13;
    operator delete(v13);
  }

  _Unwind_Resume(a1);
}

__n128 __Block_byref_object_copy__112(__n128 *a1, __n128 *a2)
{
  a1[3].n128_u64[0] = 0;
  a1[3].n128_u64[1] = 0;
  a1[4].n128_u64[0] = 0;
  __n128 result = a2[3];
  a1[3] = result;
  a1[4].n128_u64[0] = a2[4].n128_u64[0];
  a2[3].n128_u64[0] = 0;
  a2[3].n128_u64[1] = 0;
  a2[4].n128_u64[0] = 0;
  return result;
}

void __Block_byref_object_dispose__113(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 48);
  if (v2)
  {
    *(void *)(a1 + 56) = v2;
    operator delete(v2);
  }
}

void sub_1898EF5B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id a20)
{
  _Block_object_dispose(&a15, 8);
  _Unwind_Resume(a1);
}

void sub_1898EF6A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

id anonymous namespace'::Result::plistEncoded(_anonymous_namespace_::Result *this)
{
  v14[5] = *MEMORY[0x1E4F143B8];
  v13[0] = @"age";
  uint64_t v2 = NSNumber;
  GEOGetMonotonicTime();
  uint64_t v4 = [v2 numberWithDouble:v3 - *(double *)this];
  v14[0] = v4;
  v13[1] = @"timestamp";
  uint64_t v5 = [NSNumber numberWithDouble:*(double *)this];
  v14[1] = v5;
  v13[2] = @"request";
  id v6 = GEODataRequestKindAsString(*((void *)this + 1));
  v14[2] = v6;
  v13[3] = @"status";
  unint64_t v7 = *((void *)this + 2);
  if (v7 > 6) {
    size_t v8 = "invalid";
  }
  else {
    size_t v8 = off_1E53E1128[v7];
  }
  compression_algorithm v9 = [NSString stringWithUTF8String:v8];
  v14[3] = v9;
  v13[4] = @"interfaces";
  id v10 = GEORequestCounterInterfaceTypesToStrings(*((void *)this + 3));
  v14[4] = v10;
  uint64_t v11 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:v14 forKeys:v13 count:5];

  return v11;
}

void sub_1898EF848(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1898F0140(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1898F03E0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

__n128 __copy_helper_block_ea8_32c51_ZTSKZ38__GEOOfflineStateManager__updateState_E3__0(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)(a2 + 32);
  long long v3 = *(_OWORD *)(a2 + 48);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v3;
  *(_OWORD *)(a1 + 64) = v4;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

id defaultCohortState(void)
{
  v5[3] = *MEMORY[0x1E4F143B8];
  v4[0] = @"currentState";
  os_log_t v0 = [NSNumber numberWithUnsignedInt:257];
  v5[0] = v0;
  v4[1] = @"savedState";
  id v1 = [NSNumber numberWithUnsignedInt:257];
  v4[2] = @"suggestedState";
  v5[1] = v1;
  v5[2] = &unk_1ED73DC78;
  uint64_t v2 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:v5 forKeys:v4 count:3];

  return v2;
}

void sub_1898F08A4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1898F0AFC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, void *a16)
{
  _Unwind_Resume(a1);
}

void sub_1898F0BC8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1898F0EC8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1898F119C(_Unwind_Exception *a1)
{
  long long v4 = v3;

  _Unwind_Resume(a1);
}

void sub_1898F13A4(_Unwind_Exception *exception_object)
{
}

void sub_1898F17D0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1898F1AA0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOComposedWaypointReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 96));
  id v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 92);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 88)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  unsigned int v11 = (unsigned __int16)(vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int16 *)(a1 + 108)), (uint16x4_t)0xFFF7FFF8FFF5FFFALL), (int8x8_t)0x1000100010001))+ ((*(_WORD *)(a1 + 108) >> 10) & 1)+ ((*(_WORD *)(a1 + 108) >> 5) & 1)+ ((*(_WORD *)(a1 + 108) >> 7) & 1));
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v7])
    {
      case -3:
        char v8 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        BOOL v14 = v11 > 4;
        char v15 = v10 | v14;
        if (((v10 | v14) | v8)) {
          uint64_t v16 = 0;
        }
        else {
          uint64_t v16 = a3;
        }
        char v87 = (v16 == 0) | v15;
        uint64_t v17 = (int *)MEMORY[0x1E4F940E8];
        uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
        unint64_t v19 = (int *)MEMORY[0x1E4F940B8];
        char v86 = v10 | v14;
        break;
      default:
        ++v11;
LABEL_6:
        uint64_t v12 = v9;
        uint64_t v13 = v10;
LABEL_8:
        ++v7;
        uint64_t v9 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v17) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v18)) {
      goto LABEL_152;
    }
    char v20 = 0;
    unsigned int v21 = 0;
    unint64_t v22 = 0;
    while (1)
    {
      uint64_t v23 = *v17;
      uint64_t v24 = *(void *)(v3 + v23);
      unint64_t v25 = v24 + 1;
      if (v24 == -1 || v25 > *(void *)(v3 + *v6)) {
        break;
      }
      char v26 = *(unsigned char *)(*(void *)(v3 + *v19) + v24);
      *(void *)(v3 + v23) = v25;
      v22 |= (unint64_t)(v26 & 0x7F) << v20;
      if ((v26 & 0x80) == 0) {
        goto LABEL_23;
      }
      v20 += 7;
      BOOL v27 = v21++ >= 9;
      if (v27)
      {
        unint64_t v22 = 0;
        int v28 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_25;
      }
    }
    *(unsigned char *)(v3 + *v18) = 1;
LABEL_23:
    int v28 = *(unsigned __int8 *)(v3 + *v18);
    if (*(unsigned char *)(v3 + *v18)) {
      unint64_t v22 = 0;
    }
LABEL_25:
    if (v28 || (v22 & 7) == 4)
    {
LABEL_152:
      if (v15)
      {
        char v80 = 1;
        goto LABEL_166;
      }
      if (v16)
      {
        while (1)
        {
          int v81 = *v16++;
          __int16 v82 = 2048;
          switch(v81)
          {
            case 0:
              goto LABEL_167;
            case 1:
              goto LABEL_162;
            case 2:
              __int16 v82 = 256;
              goto LABEL_162;
            case 3:
              __int16 v82 = 64;
              goto LABEL_162;
            case 4:
              __int16 v82 = 512;
              goto LABEL_162;
            case 5:
              __int16 v82 = 1024;
              goto LABEL_162;
            case 6:
              __int16 v82 = 32;
              goto LABEL_162;
            case 9:
              __int16 v82 = 128;
LABEL_162:
              *(_WORD *)(a1 + 108) |= v82;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_167;
    }
    unint64_t v30 = v22 >> 3;
    BOOL v31 = v15;
    if ((v87 & 1) == 0)
    {
      char v32 = v16;
      do
      {
        int v34 = *v32++;
        int v33 = v34;
        BOOL v31 = v34 != 0;
        if (v34) {
          BOOL v35 = v33 == v30;
        }
        else {
          BOOL v35 = 1;
        }
      }
      while (!v35);
    }
    switch((int)v30)
    {
      case 1:
        if (!v31) {
          goto LABEL_111;
        }
        if ((*(_WORD *)(a1 + 108) & 0x800) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_165;
          }
          unint64_t v85 = objc_alloc_init(GEOWaypointTyped);
          if (GEOWaypointTypedReadAllFrom((uint64_t)v85, (void *)v3, v9 & 1))
          {
            PBReaderRecallMark();
            uint64_t v36 = 80;
            goto LABEL_85;
          }
          goto LABEL_164;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_165;
        }
        __int16 v79 = 16 * *(_WORD *)(a1 + 108);
        goto LABEL_149;
      case 2:
        if (!v31) {
          goto LABEL_111;
        }
        if ((*(_WORD *)(a1 + 108) & 0x100) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_165;
          }
          __int16 v79 = *(_WORD *)(a1 + 108) << 7;
          goto LABEL_149;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_165;
        }
        unint64_t v85 = objc_alloc_init(GEOMapItemStorage);
        if (!GEOMapItemStorageReadAllFrom((uint64_t)v85, (void *)v3, v9 & 1)) {
          goto LABEL_164;
        }
        PBReaderRecallMark();
        uint64_t v36 = 48;
        goto LABEL_85;
      case 3:
        if (!v31) {
          goto LABEL_111;
        }
        if ((*(_WORD *)(a1 + 108) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_165;
          }
          __int16 v79 = *(_WORD *)(a1 + 108) << 9;
          goto LABEL_149;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_165;
        }
        unint64_t v85 = objc_alloc_init(GEOLatLng);
        if (!GEOLatLngReadAllFrom((uint64_t)v85, (void *)v3)) {
          goto LABEL_164;
        }
        PBReaderRecallMark();
        uint64_t v36 = 32;
        goto LABEL_85;
      case 4:
        if (!v31) {
          goto LABEL_111;
        }
        if ((*(_WORD *)(a1 + 108) & 0x200) == 0)
        {
          uint64_t v38 = PBReaderReadData();
          uint64_t v39 = 64;
          goto LABEL_63;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_165;
        }
        __int16 v79 = *(_WORD *)(a1 + 108) << 6;
        goto LABEL_149;
      case 5:
        if (!v31) {
          goto LABEL_111;
        }
        if ((*(_WORD *)(a1 + 108) & 0x400) == 0)
        {
          uint64_t v38 = PBReaderReadData();
          uint64_t v39 = 72;
          goto LABEL_63;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_165;
        }
        __int16 v79 = 32 * *(_WORD *)(a1 + 108);
        goto LABEL_149;
      case 6:
        if (!v31) {
          goto LABEL_111;
        }
        if ((*(_WORD *)(a1 + 108) & 0x20) == 0)
        {
          uint64_t v38 = PBReaderReadString();
          uint64_t v39 = 24;
LABEL_63:
          char v40 = *(void **)(a1 + v39);
          *(void *)(a1 + v39) = v38;
          goto LABEL_86;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_165;
        }
        __int16 v79 = *(_WORD *)(a1 + 108) << 10;
        goto LABEL_149;
      case 7:
        if ((v8 & 1) == 0) {
          goto LABEL_111;
        }
        char v41 = 0;
        unsigned int v42 = 0;
        uint64_t v43 = 0;
        *(_WORD *)(a1 + 108) |= 0x10u;
        while (2)
        {
          uint64_t v44 = *v17;
          uint64_t v45 = *(void *)(v3 + v44);
          unint64_t v46 = v45 + 1;
          if (v45 == -1 || v46 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v47 = *(unsigned char *)(*(void *)(v3 + *v19) + v45);
            *(void *)(v3 + v44) = v46;
            v43 |= (unint64_t)(v47 & 0x7F) << v41;
            if (v47 < 0)
            {
              v41 += 7;
              BOOL v27 = v42++ >= 9;
              if (v27)
              {
                uint64_t v43 = 0;
                goto LABEL_116;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          uint64_t v43 = 0;
        }
LABEL_116:
        BOOL v76 = v43 != 0;
        uint64_t v77 = 105;
        goto LABEL_125;
      case 8:
        if ((v8 & 1) == 0) {
          goto LABEL_111;
        }
        char v48 = 0;
        unsigned int v49 = 0;
        uint64_t v50 = 0;
        *(_WORD *)(a1 + 108) |= 4u;
        while (2)
        {
          uint64_t v51 = *v17;
          uint64_t v52 = *(void *)(v3 + v51);
          unint64_t v53 = v52 + 1;
          if (v52 == -1 || v53 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v54 = *(unsigned char *)(*(void *)(v3 + *v19) + v52);
            *(void *)(v3 + v51) = v53;
            v50 |= (unint64_t)(v54 & 0x7F) << v48;
            if (v54 < 0)
            {
              v48 += 7;
              BOOL v27 = v49++ >= 9;
              if (v27)
              {
                LODWORD(v50) = 0;
                goto LABEL_120;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          LODWORD(v50) = 0;
        }
LABEL_120:
        *(_DWORD *)(a1 + 100) = v50;
        goto LABEL_151;
      case 9:
        if (!v31) {
          goto LABEL_111;
        }
        if ((*(_WORD *)(a1 + 108) & 0x80) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_165;
          }
          __int16 v79 = *(_WORD *)(a1 + 108) << 8;
LABEL_149:
          v7 += v79 >> 15;
LABEL_150:
          char v15 = v86;
          uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
LABEL_151:
          if (!(v15 & 1 | (v7 != 0))) {
            goto LABEL_152;
          }
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_165;
        }
        unint64_t v85 = objc_alloc_init(GEOLocation);
        if (GEOLocationReadAllFrom((uint64_t)v85, (void *)v3, v9 & 1))
        {
          PBReaderRecallMark();
          uint64_t v36 = 40;
LABEL_85:
          char v40 = *(void **)(a1 + v36);
          *(void *)(a1 + v36) = v85;
LABEL_86:

          --v7;
          goto LABEL_150;
        }
LABEL_164:

LABEL_165:
        char v80 = 0;
        char v15 = v86;
        uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
LABEL_166:
        *(_WORD *)(a1 + 108) |= 0x800u;
        *(_WORD *)(a1 + 108) |= 0x40u;
        *(_WORD *)(a1 + 108) |= 0x100u;
        *(_WORD *)(a1 + 108) |= 0x200u;
        *(_WORD *)(a1 + 108) |= 0x400u;
        *(_WORD *)(a1 + 108) |= 0x20u;
        *(_WORD *)(a1 + 108) |= 0x80u;
        if (v80)
        {
LABEL_167:
          unint64_t v3 = *(unsigned char *)(v3 + *v18) == 0;
          if (v15) {
            goto LABEL_168;
          }
        }
        else
        {
          unint64_t v3 = 0;
          if (v15)
          {
LABEL_168:
            uint64_t v83 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = 0;
          }
        }
        return v3;
      case 10:
        if ((v8 & 1) == 0) {
          goto LABEL_111;
        }
        char v55 = 0;
        unsigned int v56 = 0;
        uint64_t v57 = 0;
        *(_WORD *)(a1 + 108) |= 8u;
        while (2)
        {
          uint64_t v58 = *v17;
          uint64_t v59 = *(void *)(v3 + v58);
          unint64_t v60 = v59 + 1;
          if (v59 == -1 || v60 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v61 = *(unsigned char *)(*(void *)(v3 + *v19) + v59);
            *(void *)(v3 + v58) = v60;
            v57 |= (unint64_t)(v61 & 0x7F) << v55;
            if (v61 < 0)
            {
              v55 += 7;
              BOOL v27 = v56++ >= 9;
              if (v27)
              {
                uint64_t v57 = 0;
                goto LABEL_124;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          uint64_t v57 = 0;
        }
LABEL_124:
        BOOL v76 = v57 != 0;
        uint64_t v77 = 104;
LABEL_125:
        *(unsigned char *)(a1 + v77) = v76;
        goto LABEL_151;
      case 11:
        if ((v8 & 1) == 0) {
          goto LABEL_111;
        }
        char v62 = 0;
        unsigned int v63 = 0;
        uint64_t v64 = 0;
        *(_WORD *)(a1 + 108) |= 2u;
        while (2)
        {
          uint64_t v65 = *v17;
          uint64_t v66 = *(void *)(v3 + v65);
          unint64_t v67 = v66 + 1;
          if (v66 == -1 || v67 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v68 = *(unsigned char *)(*(void *)(v3 + *v19) + v66);
            *(void *)(v3 + v65) = v67;
            v64 |= (unint64_t)(v68 & 0x7F) << v62;
            if (v68 < 0)
            {
              v62 += 7;
              BOOL v27 = v63++ >= 9;
              if (v27)
              {
                uint64_t v64 = 0;
                goto LABEL_129;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          uint64_t v64 = 0;
        }
LABEL_129:
        uint64_t v78 = 56;
        goto LABEL_134;
      case 12:
        if (v8)
        {
          char v69 = 0;
          unsigned int v70 = 0;
          uint64_t v64 = 0;
          *(_WORD *)(a1 + 108) |= 1u;
          while (1)
          {
            uint64_t v71 = *v17;
            uint64_t v72 = *(void *)(v3 + v71);
            unint64_t v73 = v72 + 1;
            if (v72 == -1 || v73 > *(void *)(v3 + *v6)) {
              break;
            }
            char v74 = *(unsigned char *)(*(void *)(v3 + *v19) + v72);
            *(void *)(v3 + v71) = v73;
            v64 |= (unint64_t)(v74 & 0x7F) << v69;
            if ((v74 & 0x80) == 0) {
              goto LABEL_131;
            }
            v69 += 7;
            BOOL v27 = v70++ >= 9;
            if (v27)
            {
              uint64_t v64 = 0;
              goto LABEL_133;
            }
          }
          *(unsigned char *)(v3 + *v18) = 1;
LABEL_131:
          if (*(unsigned char *)(v3 + *v18)) {
            uint64_t v64 = 0;
          }
LABEL_133:
          uint64_t v78 = 16;
LABEL_134:
          *(void *)(a1 + v78) = v64;
        }
        else
        {
LABEL_111:
          char v75 = PBReaderSkipValueWithTag();
          uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
          char v15 = v86;
          if ((v75 & 1) == 0)
          {
LABEL_163:
            char v80 = 0;
            goto LABEL_166;
          }
        }
        goto LABEL_151;
      default:
        int v37 = PBReaderSkipValueWithTag();
        uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
        char v15 = v86;
        if (!v37) {
          goto LABEL_163;
        }
        goto LABEL_151;
    }
  }
}

void sub_1898F2810(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898F3690(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOComposedWaypointCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  [*(id *)(a1 + 80) readAll:1];
  [*(id *)(a1 + 32) readAll:1];
  [*(id *)(a1 + 48) readAll:1];
  uint64_t v2 = *(void **)(a1 + 40);

  return [v2 readAll:1];
}

unint64_t GEOComposedWaypointReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 92))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOComposedWaypointReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 96));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 88) = [v8 position];
  *(_DWORD *)(a1 + 92) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOComposedWaypointReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOComposedWaypointReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOComposedWaypointReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOComposedWaypointCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 96));
  return Specified;
}

void sub_1898F38A4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOComposedWaypointReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOComposedWaypointReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1898F3908(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOComposedWaypointIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  uint64_t v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  long long v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 == 2 && PBReaderPlaceMark() && GEOWaypointTypedIsValid(a1)) {
            goto LABEL_57;
          }
          goto LABEL_85;
        case 2u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOMapItemStorageIsValid(a1)) {
            goto LABEL_85;
          }
          goto LABEL_57;
        case 3u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOLatLngIsValid(a1)) {
            goto LABEL_85;
          }
          goto LABEL_57;
        case 4u:
          if (v15 == 2) {
            goto LABEL_36;
          }
          goto LABEL_85;
        case 5u:
          if (v15 == 2) {
            goto LABEL_36;
          }
          goto LABEL_85;
        case 6u:
          if (v15 == 2) {
            goto LABEL_36;
          }
          goto LABEL_85;
        case 7u:
          if ((v8 & 7) != 0) {
            goto LABEL_85;
          }
          unsigned int v17 = 0;
          while (1)
          {
            uint64_t v18 = *v2;
            uint64_t v19 = *(void *)&a1[v18];
            unint64_t v20 = v19 + 1;
            if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
              goto LABEL_82;
            }
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if (v21 < 0)
            {
              BOOL v22 = v17++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_83;
          }
        case 8u:
          if ((v8 & 7) != 0) {
            goto LABEL_85;
          }
          unsigned int v23 = 0;
          while (1)
          {
            uint64_t v24 = *v2;
            uint64_t v25 = *(void *)&a1[v24];
            unint64_t v26 = v25 + 1;
            if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
              goto LABEL_82;
            }
            int v27 = *(char *)(*(void *)&a1[*v5] + v25);
            *(void *)&a1[v24] = v26;
            if (v27 < 0)
            {
              BOOL v22 = v23++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_83;
          }
        case 9u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOLocationIsValid(a1)) {
            goto LABEL_85;
          }
LABEL_57:
          PBReaderRecallMark();
          continue;
        case 0xAu:
          if ((v8 & 7) != 0) {
            goto LABEL_85;
          }
          unsigned int v28 = 0;
          while (1)
          {
            uint64_t v29 = *v2;
            uint64_t v30 = *(void *)&a1[v29];
            unint64_t v31 = v30 + 1;
            if (v30 == -1 || v31 > *(void *)&a1[*v3]) {
              goto LABEL_82;
            }
            int v32 = *(char *)(*(void *)&a1[*v5] + v30);
            *(void *)&a1[v29] = v31;
            if (v32 < 0)
            {
              BOOL v22 = v28++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_83;
          }
        case 0xBu:
          if ((v8 & 7) != 0) {
            goto LABEL_85;
          }
          unsigned int v33 = 0;
          while (1)
          {
            uint64_t v34 = *v2;
            uint64_t v35 = *(void *)&a1[v34];
            unint64_t v36 = v35 + 1;
            if (v35 == -1 || v36 > *(void *)&a1[*v3]) {
              goto LABEL_82;
            }
            int v37 = *(char *)(*(void *)&a1[*v5] + v35);
            *(void *)&a1[v34] = v36;
            if (v37 < 0)
            {
              BOOL v22 = v33++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_83;
          }
        case 0xCu:
          if ((v8 & 7) != 0) {
            goto LABEL_85;
          }
          unsigned int v38 = 0;
          break;
        default:
LABEL_36:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_85:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        uint64_t v39 = *v2;
        uint64_t v40 = *(void *)&a1[v39];
        unint64_t v41 = v40 + 1;
        if (v40 == -1 || v41 > *(void *)&a1[*v3]) {
          break;
        }
        int v42 = *(char *)(*(void *)&a1[*v5] + v40);
        *(void *)&a1[v39] = v41;
        if (v42 < 0)
        {
          BOOL v22 = v38++ > 8;
          if (!v22) {
            continue;
          }
        }
        goto LABEL_83;
      }
LABEL_82:
      a1[*v4] = 1;
LABEL_83:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v43 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v43;
}

void sub_1898F4034(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL _GEOComposedWaypointIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 96));
  __int16 v2 = *(_WORD *)(a1 + 108);
  if ((v2 & 0x1000) != 0) {
    return 1;
  }
  if ((*(_WORD *)(a1 + 108) & 0x800) != 0)
  {
    if (GEOWaypointTypedIsDirty(*(os_unfair_lock_s **)(a1 + 80))) {
      return 1;
    }
    __int16 v2 = *(_WORD *)(a1 + 108);
  }
  if ((v2 & 0x40) != 0) {
    return 1;
  }
  if ((v2 & 0x100) == 0) {
    goto LABEL_9;
  }
  if (GEOMapItemStorageIsDirty(*(os_unfair_lock_s **)(a1 + 48))) {
    return 1;
  }
  __int16 v2 = *(_WORD *)(a1 + 108);
LABEL_9:
  if ((v2 & 0x620) != 0) {
    return 1;
  }
  if ((v2 & 0x80) == 0) {
    return 0;
  }
  long long v4 = *(os_unfair_lock_s **)(a1 + 40);

  return GEOLocationIsDirty(v4);
}

os_unfair_lock_s *GEOComposedWaypointIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    BOOL IsDirty = _GEOComposedWaypointIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 24);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void GEOComposedWaypointClearSensitiveFields(void *a1, uint64_t a2, int a3)
{
  if (!a3)
  {
    unint64_t v11 = [a1 waypoint];
    [v11 clearSensitiveFields:a2];

    goto LABEL_10;
  }
  if ([a1 hasWaypoint]
    && ([a1 waypoint],
        char v6 = objc_claimAutoreleasedReturnValue(),
        unsigned int v7 = GEOWaypointTypedHasSensitiveFields(v6),
        v6,
        v7))
  {
    unint64_t v8 = [a1 waypoint];
    uint64_t v9 = (void *)[v8 copy];

    uint64_t v10 = [v9 waypointLocation];
    [v10 clearSensitiveFields:a2];

    [a1 setWaypoint:v9];
  }
  else
  {
    uint64_t v9 = [a1 waypoint];
    [v9 clearSensitiveFields:a2];
  }

  if (![a1 hasMapItemStorage]
    || ([a1 mapItemStorage],
        char v12 = objc_claimAutoreleasedReturnValue(),
        int HasSensitiveFields = GEOMapItemStorageHasSensitiveFields((uint64_t)v12, a2),
        v12,
        !HasSensitiveFields))
  {
LABEL_10:
    uint64_t v16 = [a1 mapItemStorage];
    [v16 clearSensitiveFields:a2];

    if (!a3) {
      goto LABEL_14;
    }
    goto LABEL_11;
  }
  int v14 = [a1 mapItemStorage];
  int v15 = (id *)[v14 copy];

  GEOMapItemStorageClearSensitiveFields(v15, a2, 0);
  [a1 setMapItemStorage:v15];

LABEL_11:
  if ([a1 hasLocation])
  {
    unsigned int v17 = [a1 location];
    int v18 = GEOLocationHasSensitiveFields((uint64_t)v17);

    if (v18)
    {
      uint64_t v19 = [a1 location];
      unint64_t v20 = (_DWORD *)[v19 copy];

      GEOLocationClearSensitiveFields(v20);
      [a1 setLocation:v20];
      goto LABEL_15;
    }
  }
LABEL_14:
  unint64_t v20 = [a1 location];
  [v20 clearSensitiveFields:a2];
LABEL_15:
}

uint64_t GEOComposedWaypointHasSensitiveFields(void *a1, uint64_t a2)
{
  if (!a1) {
    return 0;
  }
  long long v4 = [a1 waypoint];
  if (GEOWaypointTypedHasSensitiveFields(v4))
  {
    uint64_t HasSensitiveFields = 1;
  }
  else
  {
    char v6 = [a1 mapItemStorage];
    if (GEOMapItemStorageHasSensitiveFields((uint64_t)v6, a2))
    {
      uint64_t HasSensitiveFields = 1;
    }
    else
    {
      unsigned int v7 = [a1 location];
      uint64_t HasSensitiveFields = GEOLocationHasSensitiveFields((uint64_t)v7);
    }
  }

  return HasSensitiveFields;
}

void sub_1898F49D0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEONavigationGuidanceStateReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    long long v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        switch((v10 >> 3))
        {
          case 1u:
            char v18 = 0;
            unsigned int v19 = 0;
            uint64_t v20 = 0;
            *(unsigned char *)(a1 + 32) |= 0x10u;
            while (1)
            {
              uint64_t v21 = *v4;
              uint64_t v22 = *(void *)&v3[v21];
              unint64_t v23 = v22 + 1;
              if (v22 == -1 || v23 > *(void *)&v3[*v5]) {
                break;
              }
              char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
              *(void *)&v3[v21] = v23;
              v20 |= (unint64_t)(v24 & 0x7F) << v18;
              if ((v24 & 0x80) == 0) {
                goto LABEL_65;
              }
              v18 += 7;
              BOOL v15 = v19++ >= 9;
              if (v15)
              {
                LODWORD(v20) = 0;
                goto LABEL_67;
              }
            }
            v3[*v6] = 1;
LABEL_65:
            if (v3[*v6]) {
              LODWORD(v20) = 0;
            }
LABEL_67:
            uint64_t v56 = 24;
            goto LABEL_88;
          case 2u:
            char v25 = 0;
            unsigned int v26 = 0;
            uint64_t v20 = 0;
            *(unsigned char *)(a1 + 32) |= 4u;
            while (2)
            {
              uint64_t v27 = *v4;
              uint64_t v28 = *(void *)&v3[v27];
              unint64_t v29 = v28 + 1;
              if (v28 == -1 || v29 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v30 = *(unsigned char *)(*(void *)&v3[*v7] + v28);
                *(void *)&v3[v27] = v29;
                v20 |= (unint64_t)(v30 & 0x7F) << v25;
                if (v30 < 0)
                {
                  v25 += 7;
                  BOOL v15 = v26++ >= 9;
                  if (v15)
                  {
                    LODWORD(v20) = 0;
                    goto LABEL_71;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              LODWORD(v20) = 0;
            }
LABEL_71:
            uint64_t v56 = 16;
            goto LABEL_88;
          case 3u:
            char v31 = 0;
            unsigned int v32 = 0;
            uint64_t v20 = 0;
            *(unsigned char *)(a1 + 32) |= 2u;
            while (2)
            {
              uint64_t v33 = *v4;
              uint64_t v34 = *(void *)&v3[v33];
              unint64_t v35 = v34 + 1;
              if (v34 == -1 || v35 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v36 = *(unsigned char *)(*(void *)&v3[*v7] + v34);
                *(void *)&v3[v33] = v35;
                v20 |= (unint64_t)(v36 & 0x7F) << v31;
                if (v36 < 0)
                {
                  v31 += 7;
                  BOOL v15 = v32++ >= 9;
                  if (v15)
                  {
                    LODWORD(v20) = 0;
                    goto LABEL_75;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              LODWORD(v20) = 0;
            }
LABEL_75:
            uint64_t v56 = 12;
            goto LABEL_88;
          case 4u:
            char v37 = 0;
            unsigned int v38 = 0;
            uint64_t v39 = 0;
            *(unsigned char *)(a1 + 32) |= 0x20u;
            while (2)
            {
              uint64_t v40 = *v4;
              uint64_t v41 = *(void *)&v3[v40];
              unint64_t v42 = v41 + 1;
              if (v41 == -1 || v42 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v43 = *(unsigned char *)(*(void *)&v3[*v7] + v41);
                *(void *)&v3[v40] = v42;
                v39 |= (unint64_t)(v43 & 0x7F) << v37;
                if (v43 < 0)
                {
                  v37 += 7;
                  BOOL v15 = v38++ >= 9;
                  if (v15)
                  {
                    uint64_t v39 = 0;
                    goto LABEL_79;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              uint64_t v39 = 0;
            }
LABEL_79:
            *(unsigned char *)(a1 + 28) = v39 != 0;
            continue;
          case 5u:
            char v44 = 0;
            unsigned int v45 = 0;
            uint64_t v20 = 0;
            *(unsigned char *)(a1 + 32) |= 1u;
            while (2)
            {
              uint64_t v46 = *v4;
              uint64_t v47 = *(void *)&v3[v46];
              unint64_t v48 = v47 + 1;
              if (v47 == -1 || v48 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v49 = *(unsigned char *)(*(void *)&v3[*v7] + v47);
                *(void *)&v3[v46] = v48;
                v20 |= (unint64_t)(v49 & 0x7F) << v44;
                if (v49 < 0)
                {
                  v44 += 7;
                  BOOL v15 = v45++ >= 9;
                  if (v15)
                  {
                    LODWORD(v20) = 0;
                    goto LABEL_83;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              LODWORD(v20) = 0;
            }
LABEL_83:
            uint64_t v56 = 8;
            goto LABEL_88;
          case 6u:
            char v50 = 0;
            unsigned int v51 = 0;
            uint64_t v20 = 0;
            *(unsigned char *)(a1 + 32) |= 8u;
            break;
          default:
            if (!PBReaderSkipValueWithTag()) {
              goto LABEL_91;
            }
            continue;
        }
        while (1)
        {
          uint64_t v52 = *v4;
          uint64_t v53 = *(void *)&v3[v52];
          unint64_t v54 = v53 + 1;
          if (v53 == -1 || v54 > *(void *)&v3[*v5]) {
            break;
          }
          char v55 = *(unsigned char *)(*(void *)&v3[*v7] + v53);
          *(void *)&v3[v52] = v54;
          v20 |= (unint64_t)(v55 & 0x7F) << v50;
          if ((v55 & 0x80) == 0) {
            goto LABEL_85;
          }
          v50 += 7;
          BOOL v15 = v51++ >= 9;
          if (v15)
          {
            LODWORD(v20) = 0;
            goto LABEL_87;
          }
        }
        v3[*v6] = 1;
LABEL_85:
        if (v3[*v6]) {
          LODWORD(v20) = 0;
        }
LABEL_87:
        uint64_t v56 = 20;
LABEL_88:
        *(_DWORD *)(a1 + v56) = v20;
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v57 = v3[*v6] == 0;
  }
  else
  {
LABEL_91:
    BOOL v57 = 0;
  }
  objc_sync_exit(v3);

  return v57;
}

void sub_1898F67C0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEONavigationGuidanceStateReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEONavigationGuidanceStateReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1898F683C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEONavigationGuidanceStateIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  __int16 v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  long long v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      if (v14 || (v8 & 7) == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_73;
          }
          unsigned int v16 = 0;
          while (1)
          {
            uint64_t v17 = *v2;
            uint64_t v18 = *(void *)&a1[v17];
            unint64_t v19 = v18 + 1;
            if (v18 == -1 || v19 > *(void *)&a1[*v3]) {
              goto LABEL_69;
            }
            int v20 = *(char *)(*(void *)&a1[*v5] + v18);
            *(void *)&a1[v17] = v19;
            if (v20 < 0)
            {
              BOOL v21 = v16++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_70;
          }
        case 2u:
          if ((v8 & 7) != 0) {
            goto LABEL_73;
          }
          unsigned int v22 = 0;
          while (1)
          {
            uint64_t v23 = *v2;
            uint64_t v24 = *(void *)&a1[v23];
            unint64_t v25 = v24 + 1;
            if (v24 == -1 || v25 > *(void *)&a1[*v3]) {
              goto LABEL_69;
            }
            int v26 = *(char *)(*(void *)&a1[*v5] + v24);
            *(void *)&a1[v23] = v25;
            if (v26 < 0)
            {
              BOOL v21 = v22++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_70;
          }
        case 3u:
          if ((v8 & 7) != 0) {
            goto LABEL_73;
          }
          unsigned int v27 = 0;
          while (1)
          {
            uint64_t v28 = *v2;
            uint64_t v29 = *(void *)&a1[v28];
            unint64_t v30 = v29 + 1;
            if (v29 == -1 || v30 > *(void *)&a1[*v3]) {
              goto LABEL_69;
            }
            int v31 = *(char *)(*(void *)&a1[*v5] + v29);
            *(void *)&a1[v28] = v30;
            if (v31 < 0)
            {
              BOOL v21 = v27++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_70;
          }
        case 4u:
          if ((v8 & 7) != 0) {
            goto LABEL_73;
          }
          unsigned int v32 = 0;
          while (1)
          {
            uint64_t v33 = *v2;
            uint64_t v34 = *(void *)&a1[v33];
            unint64_t v35 = v34 + 1;
            if (v34 == -1 || v35 > *(void *)&a1[*v3]) {
              goto LABEL_69;
            }
            int v36 = *(char *)(*(void *)&a1[*v5] + v34);
            *(void *)&a1[v33] = v35;
            if (v36 < 0)
            {
              BOOL v21 = v32++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_70;
          }
        case 5u:
          if ((v8 & 7) != 0) {
            goto LABEL_73;
          }
          unsigned int v37 = 0;
          while (1)
          {
            uint64_t v38 = *v2;
            uint64_t v39 = *(void *)&a1[v38];
            unint64_t v40 = v39 + 1;
            if (v39 == -1 || v40 > *(void *)&a1[*v3]) {
              goto LABEL_69;
            }
            int v41 = *(char *)(*(void *)&a1[*v5] + v39);
            *(void *)&a1[v38] = v40;
            if (v41 < 0)
            {
              BOOL v21 = v37++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_70;
          }
        case 6u:
          if ((v8 & 7) != 0) {
            goto LABEL_73;
          }
          unsigned int v42 = 0;
          break;
        default:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_73:
          BOOL v47 = 0;
          goto LABEL_72;
      }
      while (1)
      {
        uint64_t v43 = *v2;
        uint64_t v44 = *(void *)&a1[v43];
        unint64_t v45 = v44 + 1;
        if (v44 == -1 || v45 > *(void *)&a1[*v3]) {
          break;
        }
        int v46 = *(char *)(*(void *)&a1[*v5] + v44);
        *(void *)&a1[v43] = v45;
        if (v46 < 0)
        {
          BOOL v21 = v42++ > 8;
          if (!v21) {
            continue;
          }
        }
        goto LABEL_70;
      }
LABEL_69:
      a1[*v4] = 1;
LABEL_70:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v47 = a1[*v4] == 0;
LABEL_72:
  PBReaderRecallMark();
  return v47;
}

void sub_1898F7708(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEONavigationRouteSummaryReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 68);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 64)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  unsigned int v11 = (vaddv_s16((int16x4_t)(*(void *)&vshl_u16((uint16x4_t)(*(void *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 80)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFBFFFCFFFEFFFALL) & 0xFF01FF01FF01FF01))+ ((*(unsigned char *)(a1 + 80) & 8) != 0));
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v7])
    {
      case -3:
        char v8 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        BOOL v14 = v11 > 3;
        char v15 = v10 | v14;
        if (((v10 | v14) | v8)) {
          unsigned int v16 = 0;
        }
        else {
          unsigned int v16 = a3;
        }
        uint64_t v17 = (int *)MEMORY[0x1E4F940E8];
        uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
        char v60 = (v16 == 0) | v15;
        unint64_t v19 = (int *)MEMORY[0x1E4F940B8];
        char v59 = v10 | v14;
        break;
      default:
        ++v11;
LABEL_6:
        uint64_t v12 = v9;
        uint64_t v13 = v10;
LABEL_8:
        ++v7;
        uint64_t v9 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v17) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v18)) {
      goto LABEL_95;
    }
    char v20 = 0;
    unsigned int v21 = 0;
    unint64_t v22 = 0;
    while (1)
    {
      uint64_t v23 = *v17;
      uint64_t v24 = *(void *)(v3 + v23);
      unint64_t v25 = v24 + 1;
      if (v24 == -1 || v25 > *(void *)(v3 + *v6)) {
        break;
      }
      char v26 = *(unsigned char *)(*(void *)(v3 + *v19) + v24);
      *(void *)(v3 + v23) = v25;
      v22 |= (unint64_t)(v26 & 0x7F) << v20;
      if ((v26 & 0x80) == 0) {
        goto LABEL_23;
      }
      v20 += 7;
      BOOL v27 = v21++ >= 9;
      if (v27)
      {
        unint64_t v22 = 0;
        int v28 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_25;
      }
    }
    *(unsigned char *)(v3 + *v18) = 1;
LABEL_23:
    int v28 = *(unsigned __int8 *)(v3 + *v18);
    if (*(unsigned char *)(v3 + *v18)) {
      unint64_t v22 = 0;
    }
LABEL_25:
    if (v28 || (v22 & 7) == 4)
    {
LABEL_95:
      if (v15)
      {
        char v53 = 1;
        goto LABEL_107;
      }
      if (v16)
      {
        while (1)
        {
          int v54 = *v16++;
          char v55 = 4;
          switch(v54)
          {
            case 0:
              goto LABEL_108;
            case 2:
              goto LABEL_103;
            case 4:
              char v55 = 64;
              goto LABEL_103;
            case 5:
              char v55 = 16;
              goto LABEL_103;
            case 6:
              char v55 = 32;
              goto LABEL_103;
            case 7:
              char v55 = 8;
LABEL_103:
              *(unsigned char *)(a1 + 80) |= v55;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_108;
    }
    unint64_t v30 = v22 >> 3;
    BOOL v31 = v15;
    if ((v60 & 1) == 0)
    {
      unsigned int v32 = v16;
      do
      {
        int v34 = *v32++;
        int v33 = v34;
        BOOL v31 = v34 != 0;
        if (v34) {
          BOOL v35 = v33 == v30;
        }
        else {
          BOOL v35 = 1;
        }
      }
      while (!v35);
    }
    switch((int)v30)
    {
      case 1:
        if ((v8 & 1) == 0) {
          goto LABEL_75;
        }
        char v36 = 0;
        unsigned int v37 = 0;
        uint64_t v38 = 0;
        *(unsigned char *)(a1 + 80) |= 2u;
        while (1)
        {
          uint64_t v39 = *v17;
          uint64_t v40 = *(void *)(v3 + v39);
          unint64_t v41 = v40 + 1;
          if (v40 == -1 || v41 > *(void *)(v3 + *v6)) {
            break;
          }
          char v42 = *(unsigned char *)(*(void *)(v3 + *v19) + v40);
          *(void *)(v3 + v39) = v41;
          v38 |= (unint64_t)(v42 & 0x7F) << v36;
          if ((v42 & 0x80) == 0) {
            goto LABEL_78;
          }
          v36 += 7;
          BOOL v27 = v37++ >= 9;
          if (v27)
          {
            LODWORD(v38) = 0;
            goto LABEL_80;
          }
        }
        *(unsigned char *)(v3 + *v18) = 1;
LABEL_78:
        if (*(unsigned char *)(v3 + *v18)) {
          LODWORD(v38) = 0;
        }
LABEL_80:
        *(_DWORD *)(a1 + 76) = v38;
        goto LABEL_91;
      case 2:
        if (!v31) {
          goto LABEL_75;
        }
        if ((*(unsigned char *)(a1 + 80) & 4) == 0)
        {
          uint64_t v44 = PBReaderReadString();
          uint64_t v45 = 16;
          goto LABEL_62;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_106;
        }
        char v52 = 32 * *(unsigned char *)(a1 + 80);
        goto LABEL_89;
      case 3:
        if ((v8 & 1) == 0) {
          goto LABEL_75;
        }
        *(unsigned char *)(a1 + 80) |= 1u;
        uint64_t v46 = *v17;
        unint64_t v47 = *(void *)(v3 + v46);
        if (v47 <= 0xFFFFFFFFFFFFFFF7 && v47 + 8 <= *(void *)(v3 + *v6))
        {
          uint64_t v48 = *(void *)(*(void *)(v3 + *v19) + v47);
          *(void *)(v3 + v46) = v47 + 8;
        }
        else
        {
          *(unsigned char *)(v3 + *v18) = 1;
          uint64_t v48 = 0;
        }
        *(void *)(a1 + 48) = v48;
        goto LABEL_91;
      case 4:
        if (!v31 || (*(unsigned char *)(a1 + 80) & 0x40) != 0) {
          goto LABEL_75;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_106;
        }
        uint64_t v58 = objc_alloc_init(GEOComposedWaypoint);
        if (!GEOComposedWaypointReadAllFrom((uint64_t)v58, (void *)v3, v9 & 1)) {
          goto LABEL_105;
        }
        PBReaderRecallMark();
        -[GEONavigationRouteSummary _addNoFlagsWaypoints:](a1, v58);

        goto LABEL_90;
      case 5:
        if (!v31) {
          goto LABEL_75;
        }
        if ((*(unsigned char *)(a1 + 80) & 0x10) == 0)
        {
          uint64_t v44 = PBReaderReadString();
          uint64_t v45 = 32;
LABEL_62:
          char v49 = *(void **)(a1 + v45);
          *(void *)(a1 + v45) = v44;
          goto LABEL_74;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_106;
        }
        char v52 = 8 * *(unsigned char *)(a1 + 80);
        goto LABEL_89;
      case 6:
        if (!v31) {
          goto LABEL_75;
        }
        if ((*(unsigned char *)(a1 + 80) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_106;
          }
          char v52 = 4 * *(unsigned char *)(a1 + 80);
          goto LABEL_89;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_106;
        }
        uint64_t v58 = objc_alloc_init(GEOComposedWaypoint);
        if (!GEOComposedWaypointReadAllFrom((uint64_t)v58, (void *)v3, v9 & 1)) {
          goto LABEL_105;
        }
        PBReaderRecallMark();
        uint64_t v50 = 40;
        goto LABEL_73;
      case 7:
        if (!v31)
        {
LABEL_75:
          char v51 = PBReaderSkipValueWithTag();
          uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
          char v15 = v59;
          if ((v51 & 1) == 0)
          {
LABEL_104:
            char v53 = 0;
            goto LABEL_107;
          }
LABEL_91:
          if (!(v15 & 1 | (v7 != 0))) {
            goto LABEL_95;
          }
          continue;
        }
        if ((*(unsigned char *)(a1 + 80) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_106;
          }
          char v52 = 16 * *(unsigned char *)(a1 + 80);
LABEL_89:
          v7 += v52 >> 7;
LABEL_90:
          char v15 = v59;
          uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
          goto LABEL_91;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_106;
        }
        uint64_t v58 = objc_alloc_init(GEOComposedWaypoint);
        if (GEOComposedWaypointReadAllFrom((uint64_t)v58, (void *)v3, v9 & 1))
        {
          PBReaderRecallMark();
          uint64_t v50 = 24;
LABEL_73:
          char v49 = *(void **)(a1 + v50);
          *(void *)(a1 + v50) = v58;
LABEL_74:

          --v7;
          goto LABEL_90;
        }
LABEL_105:

LABEL_106:
        char v53 = 0;
        char v15 = v59;
        uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
LABEL_107:
        *(unsigned char *)(a1 + 80) |= 4u;
        *(unsigned char *)(a1 + 80) |= 0x40u;
        *(unsigned char *)(a1 + 80) |= 0x10u;
        *(unsigned char *)(a1 + 80) |= 0x20u;
        *(unsigned char *)(a1 + 80) |= 8u;
        if (v53)
        {
LABEL_108:
          unint64_t v3 = *(unsigned char *)(v3 + *v18) == 0;
          if (v15) {
            goto LABEL_109;
          }
        }
        else
        {
          unint64_t v3 = 0;
          if (v15)
          {
LABEL_109:
            uint64_t v56 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = 0;
          }
        }
        return v3;
      default:
        int v43 = PBReaderSkipValueWithTag();
        uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
        char v15 = v59;
        if (!v43) {
          goto LABEL_104;
        }
        goto LABEL_91;
    }
  }
}

void sub_1898F80A4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}