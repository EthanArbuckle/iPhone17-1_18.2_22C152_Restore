void sub_1898F8468(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898F85D8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898F8748(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898F918C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEONavigationRouteSummaryCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  uint64_t v13 = *MEMORY[0x1E4F143B8];
  long long v8 = 0u;
  long long v9 = 0u;
  long long v10 = 0u;
  long long v11 = 0u;
  id v2 = a1[7];
  uint64_t v3 = [v2 countByEnumeratingWithState:&v8 objects:v12 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v9;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v9 != v5) {
          objc_enumerationMutation(v2);
        }
        objc_msgSend(*(id *)(*((void *)&v8 + 1) + 8 * v6++), "readAll:", 1, (void)v8);
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v8 objects:v12 count:16];
    }
    while (v4);
  }

  [a1[5] readAll:1];
  return [a1[3] readAll:1];
}

unint64_t GEONavigationRouteSummaryReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 68))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEONavigationRouteSummaryReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)long long v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 72));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 64) = [v8 position];
  *(_DWORD *)(a1 + 68) = [v8 length];
  if (a3) {
    long long v9 = (int *)&GEONavigationRouteSummaryReadAllFrom_recursiveTag;
  }
  else {
    long long v9 = (int *)&GEONavigationRouteSummaryReadAllFrom_initialTag;
  }
  unint64_t Specified = GEONavigationRouteSummaryReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEONavigationRouteSummaryCallReadAllRecursiveWithoutSynchronized((id *)a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
  return Specified;
}

void sub_1898F944C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEONavigationRouteSummaryReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEONavigationRouteSummaryReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1898F94B0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEONavigationRouteSummaryIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (!a1[*v4])
    {
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          uint64_t v14 = *v4;
          int v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      uint64_t v14 = *v4;
      int v15 = a1[v14];
      if (a1[v14]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v16 = v8 & 7;
      if (v15 || v16 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_45;
          }
          unsigned int v18 = 0;
          do
          {
            uint64_t v19 = *v2;
            uint64_t v20 = *(void *)&a1[v19];
            unint64_t v21 = v20 + 1;
            if (v20 == -1 || v21 > *(void *)&a1[*v3])
            {
              uint64_t v14 = *v4;
              goto LABEL_41;
            }
            int v22 = *(char *)(*(void *)&a1[*v5] + v20);
            *(void *)&a1[v19] = v21;
            if ((v22 & 0x80000000) == 0) {
              break;
            }
          }
          while (v18++ <= 8);
          goto LABEL_42;
        case 2u:
          if (v16 == 2) {
            goto LABEL_38;
          }
          goto LABEL_45;
        case 3u:
          if (v16 != 1) {
            goto LABEL_45;
          }
          uint64_t v24 = *v2;
          unint64_t v25 = *(void *)&a1[v24];
          if (v25 > 0xFFFFFFFFFFFFFFF7 || (unint64_t v26 = v25 + 8, v26 > *(void *)&a1[*v3])) {
LABEL_41:
          }
            a1[v14] = 1;
          else {
            *(void *)&a1[v24] = v26;
          }
          goto LABEL_42;
        case 4u:
        case 6u:
        case 7u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOComposedWaypointIsValid(a1)) {
            goto LABEL_45;
          }
          PBReaderRecallMark();
          goto LABEL_42;
        case 5u:
          if (v16 == 2) {
            goto LABEL_38;
          }
          goto LABEL_45;
        default:
LABEL_38:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_45:
            PBReaderRecallMark();
            return 0;
          }
LABEL_42:
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_43;
          }
          break;
      }
    }
  }
LABEL_43:
  BOOL v27 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v27;
}

void sub_1898F9A30(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEONavigationRouteSummaryIsDirty(uint64_t a1)
{
  uint64_t v13 = *MEMORY[0x1E4F143B8];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  char v2 = *(unsigned char *)(a1 + 80);
  if ((v2 & 0xD4) != 0) {
    return 1;
  }
  if ((*(unsigned char *)(a1 + 80) & 0x20) != 0)
  {
    if (GEOComposedWaypointIsDirty(*(os_unfair_lock_s **)(a1 + 40))) {
      return 1;
    }
    char v2 = *(unsigned char *)(a1 + 80);
  }
  if ((v2 & 8) == 0) {
    goto LABEL_10;
  }
  if (GEOComposedWaypointIsDirty(*(os_unfair_lock_s **)(a1 + 24))) {
    return 1;
  }
  char v2 = *(unsigned char *)(a1 + 80);
LABEL_10:
  if ((v2 & 0x40) == 0) {
    return 0;
  }
  long long v10 = 0u;
  long long v11 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  id v5 = *(id *)(a1 + 56);
  uint64_t v3 = [v5 countByEnumeratingWithState:&v8 objects:v12 count:16];
  if (v3)
  {
    uint64_t v6 = *(void *)v9;
    while (2)
    {
      for (uint64_t i = 0; i != v3; ++i)
      {
        if (*(void *)v9 != v6) {
          objc_enumerationMutation(v5);
        }
        if (GEOComposedWaypointIsDirty(*(os_unfair_lock_s **)(*((void *)&v8 + 1) + 8 * i)))
        {
          uint64_t v3 = 1;
          goto LABEL_22;
        }
      }
      uint64_t v3 = [v5 countByEnumeratingWithState:&v8 objects:v12 count:16];
      if (v3) {
        continue;
      }
      break;
    }
  }
LABEL_22:

  return v3;
}

os_unfair_lock_s *GEONavigationRouteSummaryIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEONavigationRouteSummaryIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 18);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void GEONavigationRouteSummaryClearSensitiveFields(id *a1, uint64_t a2, int a3)
{
  -[GEONavigationRouteSummary _readWaypoints]((uint64_t)a1);
  if ([a1[7] count])
  {
    unint64_t v6 = 0;
    do
    {
      unsigned int v7 = [a1[7] objectAtIndexedSubscript:v6];
      long long v8 = v7;
      if (a3 && GEOComposedWaypointHasSensitiveFields(v7, a2))
      {
        long long v9 = (void *)[v8 copy];
        GEOComposedWaypointClearSensitiveFields(v9, a2, 0);
        [a1[7] replaceObjectAtIndex:v6 withObject:v9];
      }
      else
      {
        [v8 clearSensitiveFields:a2];
      }

      ++v6;
    }
    while (v6 < [a1[7] count]);
  }
  if (a3)
  {
    if ([a1 hasOrigin]
      && ([a1 origin],
          long long v10 = objc_claimAutoreleasedReturnValue(),
          int HasSensitiveFields = GEOComposedWaypointHasSensitiveFields(v10, a2),
          v10,
          HasSensitiveFields))
    {
      char v12 = [a1 origin];
      uint64_t v13 = (void *)[v12 copy];

      GEOComposedWaypointClearSensitiveFields(v13, a2, 0);
      [a1 setOrigin:v13];
    }
    else
    {
      uint64_t v13 = [a1 origin];
      [v13 clearSensitiveFields:a2];
    }

    if ([a1 hasDestination])
    {
      int v15 = [a1 destination];
      int v16 = GEOComposedWaypointHasSensitiveFields(v15, a2);

      if (v16)
      {
        v17 = [a1 destination];
        id v18 = (id)[v17 copy];

        GEOComposedWaypointClearSensitiveFields(v18, a2, 0);
        [a1 setDestination:v18];
        goto LABEL_18;
      }
    }
  }
  else
  {
    uint64_t v14 = [a1 origin];
    [v14 clearSensitiveFields:a2];
  }
  id v18 = [a1 destination];
  [v18 clearSensitiveFields:a2];
LABEL_18:
}

uint64_t GEONavigationRouteSummaryHasSensitiveFields(uint64_t result, uint64_t a2)
{
  uint64_t v17 = *MEMORY[0x1E4F143B8];
  if (result)
  {
    uint64_t v3 = (void *)result;
    uint64_t v4 = [(id)result origin];
    if (GEOComposedWaypointHasSensitiveFields(v4, a2))
    {

      return 1;
    }
    id v5 = [v3 destination];
    char HasSensitiveFields = GEOComposedWaypointHasSensitiveFields(v5, a2);

    if (HasSensitiveFields) {
      return 1;
    }
    long long v14 = 0u;
    long long v15 = 0u;
    long long v12 = 0u;
    long long v13 = 0u;
    unsigned int v7 = objc_msgSend(v3, "waypoints", 0);
    uint64_t v8 = [v7 countByEnumeratingWithState:&v12 objects:v16 count:16];
    if (v8)
    {
      uint64_t v9 = v8;
      uint64_t v10 = *(void *)v13;
      while (2)
      {
        uint64_t v11 = 0;
        do
        {
          if (*(void *)v13 != v10) {
            objc_enumerationMutation(v7);
          }
          if (GEOComposedWaypointHasSensitiveFields(*(void **)(*((void *)&v12 + 1) + 8 * v11), a2))
          {

            return 1;
          }
          ++v11;
        }
        while (v9 != v11);
        uint64_t v9 = [v7 countByEnumeratingWithState:&v12 objects:v16 count:16];
        if (v9) {
          continue;
        }
        break;
      }
    }

    return 0;
  }
  return result;
}

void sub_1898FA5BC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898FACAC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEONavigationRouteTransitSummaryReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  unint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 36);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 32)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  int v11 = ((*(unsigned __int8 *)(a1 + 44) >> 1) & 1) + (*(unsigned char *)(a1 + 44) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v7])
    {
      case -3:
        char v8 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        int v14 = v10 & 1 | v11;
        BOOL v15 = v7 != 0;
        BOOL v16 = v14 != 0;
        BOOL v17 = v16 | v8;
        if (v14) {
          BOOL v15 = 1;
        }
        if (v17) {
          id v18 = 0;
        }
        else {
          id v18 = a3;
        }
        BOOL v19 = v18 == 0;
        if (v14) {
          BOOL v19 = 1;
        }
        BOOL v48 = v15;
        BOOL v49 = v19;
        uint64_t v20 = (int *)MEMORY[0x1E4F940E8];
        unint64_t v21 = (int *)MEMORY[0x1E4F940C8];
        int v22 = &OBJC_IVAR___GEOSpokenGuidance__priority;
        v23 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v11;
LABEL_6:
        uint64_t v12 = v9;
        uint64_t v13 = v10;
LABEL_8:
        ++v7;
        uint64_t v9 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v21)) {
      goto LABEL_57;
    }
    char v24 = 0;
    unsigned int v25 = 0;
    unint64_t v26 = 0;
    while (1)
    {
      uint64_t v27 = *v20;
      uint64_t v28 = *(void *)(v3 + v27);
      unint64_t v29 = v28 + 1;
      if (v28 == -1 || v29 > *(void *)(v3 + *v6)) {
        break;
      }
      char v30 = *(unsigned char *)(*(void *)(v3 + *v23) + v28);
      *(void *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0) {
        goto LABEL_27;
      }
      v24 += 7;
      if (v25++ >= 9)
      {
        unint64_t v26 = 0;
        int v32 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_29;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_27:
    int v32 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v26 = 0;
    }
LABEL_29:
    if (v32 || (v26 & 7) == 4)
    {
LABEL_57:
      if (v16)
      {
        char v42 = 1;
        goto LABEL_68;
      }
      if (!v18) {
        goto LABEL_69;
      }
      while (1)
      {
        int v44 = *v18++;
        int v43 = v44;
        if (v44 == 1) {
          break;
        }
        if (v43 == 2)
        {
          char v45 = 1;
LABEL_66:
          *(unsigned char *)(a1 + v22[316]) |= v45;
        }
        else if (!v43)
        {
          goto LABEL_69;
        }
      }
      char v45 = 2;
      goto LABEL_66;
    }
    unint64_t v34 = v26 >> 3;
    BOOL v35 = v16;
    if (!v49)
    {
      v36 = v18;
      do
      {
        int v38 = *v36++;
        int v37 = v38;
        BOOL v35 = v38 != 0;
        if (v38) {
          BOOL v39 = v37 == v34;
        }
        else {
          BOOL v39 = 1;
        }
      }
      while (!v39);
    }
    if (v34 == 2) {
      break;
    }
    if (v34 != 1)
    {
      if (!PBReaderSkipValueWithTag()) {
        goto LABEL_67;
      }
      goto LABEL_56;
    }
    if (v35 && (*(unsigned char *)(a1 + v22[316]) & 2) == 0)
    {
      if ((PBReaderPlaceMark() & 1) == 0) {
        goto LABEL_67;
      }
      BOOL v40 = v16;
      BOOL v16 = (BOOL)v21;
      v41 = objc_alloc_init(GEONavigationScheduledTransitLinkSummary);
      if (!GEONavigationScheduledTransitLinkSummaryReadAllFrom((uint64_t)v41, (void *)v3, v9 & 1)) {
        goto LABEL_74;
      }
      PBReaderRecallMark();
      -[GEONavigationRouteTransitSummary _addNoFlagsScheduledLink:](a1, v41);
      goto LABEL_52;
    }
LABEL_55:
    if ((PBReaderSkipValueWithTag() & 1) == 0)
    {
LABEL_67:
      char v42 = 0;
      goto LABEL_68;
    }
LABEL_56:
    if (!v48) {
      goto LABEL_57;
    }
  }
  if (!v35 || (*(unsigned char *)(a1 + v22[316]) & 1) != 0) {
    goto LABEL_55;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_67;
  }
  BOOL v40 = v16;
  BOOL v16 = (BOOL)v21;
  v41 = objc_alloc_init(GEONavigationTransitStopSummary);
  if (GEONavigationTransitStopSummaryReadAllFrom((uint64_t)v41, (void *)v3))
  {
    PBReaderRecallMark();
    -[GEONavigationRouteTransitSummary _addNoFlagsPossibleStop:](a1, v41);
LABEL_52:

    unint64_t v21 = (int *)v16;
    BOOL v16 = v40;
    int v22 = &OBJC_IVAR___GEOSpokenGuidance__priority;
    goto LABEL_56;
  }
LABEL_74:

  char v42 = 0;
  unint64_t v21 = (int *)v16;
  LODWORD(v16) = v40;
  int v22 = &OBJC_IVAR___GEOSpokenGuidance__priority;
LABEL_68:
  *(unsigned char *)(a1 + v22[316]) |= 2u;
  *(unsigned char *)(a1 + v22[316]) |= 1u;
  if (v42)
  {
LABEL_69:
    unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
    if (v16) {
      goto LABEL_70;
    }
  }
  else
  {
    unint64_t v3 = 0;
    if (v16)
    {
LABEL_70:
      v46 = *(void **)(a1 + 8);
      *(void *)(a1 + 8) = 0;
    }
  }
  return v3;
}

void sub_1898FB4C0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898FBEDC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEONavigationRouteTransitSummaryCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v22 = *MEMORY[0x1E4F143B8];
  long long v16 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  id v2 = *(id *)(a1 + 24);
  uint64_t v3 = [v2 countByEnumeratingWithState:&v16 objects:v21 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v17;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v17 != v5) {
          objc_enumerationMutation(v2);
        }
        [*(id *)(*((void *)&v16 + 1) + 8 * v6++) readAll:1];
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v16 objects:v21 count:16];
    }
    while (v4);
  }

  long long v14 = 0u;
  long long v15 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  id v7 = *(id *)(a1 + 16);
  uint64_t v8 = [v7 countByEnumeratingWithState:&v12 objects:v20 count:16];
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)v13;
    do
    {
      uint64_t v11 = 0;
      do
      {
        if (*(void *)v13 != v10) {
          objc_enumerationMutation(v7);
        }
        objc_msgSend(*(id *)(*((void *)&v12 + 1) + 8 * v11++), "readAll:", 1, (void)v12);
      }
      while (v9 != v11);
      uint64_t v9 = [v7 countByEnumeratingWithState:&v12 objects:v20 count:16];
    }
    while (v9);
  }
}

unint64_t GEONavigationRouteTransitSummaryReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 36))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEONavigationRouteTransitSummaryReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 40));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 32) = [v8 position];
  *(_DWORD *)(a1 + 36) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEONavigationRouteTransitSummaryReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEONavigationRouteTransitSummaryReadAllFrom_initialTag;
  }
  unint64_t Specified = GEONavigationRouteTransitSummaryReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEONavigationRouteTransitSummaryCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return Specified;
}

void sub_1898FC20C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEONavigationRouteTransitSummaryReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEONavigationRouteTransitSummaryReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1898FC270(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEONavigationRouteTransitSummaryIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_30;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        goto LABEL_30;
      }
      if ((v8 >> 3) == 2) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEONavigationScheduledTransitLinkSummaryIsValid(a1)) {
          goto LABEL_31;
        }
LABEL_27:
        PBReaderRecallMark();
        goto LABEL_29;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        goto LABEL_31;
      }
LABEL_29:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_30;
      }
    }
    if (v15 != 2 || !PBReaderPlaceMark() || !GEONavigationTransitStopSummaryIsValid(a1))
    {
LABEL_31:
      PBReaderRecallMark();
      return 0;
    }
    goto LABEL_27;
  }
LABEL_30:
  BOOL v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

BOOL GEONavigationScheduledTransitLinkSummaryIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (!a1[*v4])
    {
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          uint64_t v14 = *v4;
          int v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      uint64_t v14 = *v4;
      int v15 = a1[v14];
      if (a1[v14]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v16 = v8 & 7;
      if (v15 || v16 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_42;
          }
          unsigned int v21 = 0;
          do
          {
            uint64_t v22 = *v2;
            uint64_t v23 = *(void *)&a1[v22];
            unint64_t v24 = v23 + 1;
            if (v23 == -1 || v24 > *(void *)&a1[*v3])
            {
              uint64_t v14 = *v4;
              goto LABEL_38;
            }
            int v25 = *(char *)(*(void *)&a1[*v5] + v23);
            *(void *)&a1[v22] = v24;
            if ((v25 & 0x80000000) == 0) {
              break;
            }
          }
          while (v21++ <= 8);
          goto LABEL_39;
        case 2u:
        case 3u:
          if (v16 != 1) {
            goto LABEL_42;
          }
          uint64_t v18 = *v2;
          unint64_t v19 = *(void *)&a1[v18];
          if (v19 > 0xFFFFFFFFFFFFFFF7 || (unint64_t v20 = v19 + 8, v20 > *(void *)&a1[*v3])) {
LABEL_38:
          }
            a1[v14] = 1;
          else {
            *(void *)&a1[v18] = v20;
          }
          goto LABEL_39;
        case 4u:
        case 5u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEONavigationTransitStopSummaryIsValid(a1)) {
            goto LABEL_42;
          }
          PBReaderRecallMark();
          goto LABEL_39;
        default:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_42:
            PBReaderRecallMark();
            return 0;
          }
LABEL_39:
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_40;
          }
          break;
      }
    }
  }
LABEL_40:
  BOOL v27 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v27;
}

BOOL GEONavigationTransitStopSummaryIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      if ((v8 >> 3) == 2)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOLatLngIsValid(a1))
        {
LABEL_38:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_38;
        }
        unsigned int v17 = 0;
        while (1)
        {
          uint64_t v18 = *v2;
          uint64_t v19 = *(void *)&a1[v18];
          unint64_t v20 = v19 + 1;
          if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
            break;
          }
          int v21 = *(char *)(*(void *)&a1[*v5] + v19);
          *(void *)&a1[v18] = v20;
          if (v21 < 0 && v17++ <= 8) {
            continue;
          }
          goto LABEL_35;
        }
        a1[*v4] = 1;
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_38;
      }
LABEL_35:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v23 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v23;
}

void sub_1898FCBDC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEONavigationRouteTransitSummaryIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  BOOL v2 = (*(unsigned char *)(a1 + 44) & 7) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return v2;
}

void sub_1898FD22C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898FD83C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEONavigationScheduledTransitLinkSummaryReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 60);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 56)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  int v11 = ((*(unsigned __int8 *)(a1 + 68) >> 3) & 1) + ((*(unsigned __int8 *)(a1 + 68) >> 4) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v7])
    {
      case -3:
        char v8 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        int v14 = v10 & 1 | v11;
        if ((v14 != 0) | v8 & 1) {
          int v15 = 0;
        }
        else {
          int v15 = a3;
        }
        BOOL v16 = v14 != 0;
        if (v14) {
          BOOL v17 = 1;
        }
        else {
          BOOL v17 = v15 == 0;
        }
        BOOL v64 = v17;
        uint64_t v18 = (int *)MEMORY[0x1E4F940E8];
        uint64_t v19 = (int *)MEMORY[0x1E4F940C8];
        unint64_t v20 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v11;
LABEL_6:
        uint64_t v12 = v9;
        uint64_t v13 = v10;
LABEL_8:
        ++v7;
        uint64_t v9 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v18) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v19)) {
      goto LABEL_90;
    }
    char v21 = 0;
    unsigned int v22 = 0;
    unint64_t v23 = 0;
    while (1)
    {
      uint64_t v24 = *v18;
      uint64_t v25 = *(void *)(v3 + v24);
      unint64_t v26 = v25 + 1;
      if (v25 == -1 || v26 > *(void *)(v3 + *v6)) {
        break;
      }
      char v27 = *(unsigned char *)(*(void *)(v3 + *v20) + v25);
      *(void *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0) {
        goto LABEL_26;
      }
      v21 += 7;
      BOOL v28 = v22++ >= 9;
      if (v28)
      {
        unint64_t v23 = 0;
        int v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_28;
      }
    }
    *(unsigned char *)(v3 + *v19) = 1;
LABEL_26:
    int v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(unsigned char *)(v3 + *v19)) {
      unint64_t v23 = 0;
    }
LABEL_28:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_90:
      if (v16)
      {
        char v57 = 1;
        goto LABEL_105;
      }
      if (!v15) {
        goto LABEL_106;
      }
      while (1)
      {
        int v60 = *v15++;
        int v59 = v60;
        if (v60 == 4) {
          break;
        }
        if (v59 == 5)
        {
          char v58 = 16;
LABEL_96:
          *(unsigned char *)(a1 + 68) |= v58;
        }
        else if (!v59)
        {
          goto LABEL_106;
        }
      }
      char v58 = 8;
      goto LABEL_96;
    }
    unint64_t v31 = v23 >> 3;
    BOOL v32 = v16;
    if (!v64)
    {
      v33 = v15;
      do
      {
        int v35 = *v33++;
        int v34 = v35;
        BOOL v32 = v35 != 0;
        if (v35) {
          BOOL v36 = v34 == v31;
        }
        else {
          BOOL v36 = 1;
        }
      }
      while (!v36);
    }
    switch((int)v31)
    {
      case 1:
        if ((v8 & 1) == 0) {
          goto LABEL_69;
        }
        char v37 = 0;
        unsigned int v38 = 0;
        uint64_t v39 = 0;
        *(unsigned char *)(a1 + 68) |= 1u;
        while (1)
        {
          uint64_t v40 = *v18;
          uint64_t v41 = *(void *)(v3 + v40);
          unint64_t v42 = v41 + 1;
          if (v41 == -1 || v42 > *(void *)(v3 + *v6)) {
            break;
          }
          char v43 = *(unsigned char *)(*(void *)(v3 + *v20) + v41);
          *(void *)(v3 + v40) = v42;
          v39 |= (unint64_t)(v43 & 0x7F) << v37;
          if ((v43 & 0x80) == 0) {
            goto LABEL_72;
          }
          v37 += 7;
          BOOL v28 = v38++ >= 9;
          if (v28)
          {
            uint64_t v39 = 0;
            goto LABEL_74;
          }
        }
        *(unsigned char *)(v3 + *v19) = 1;
LABEL_72:
        if (*(unsigned char *)(v3 + *v19)) {
          uint64_t v39 = 0;
        }
LABEL_74:
        *(void *)(a1 + 16) = v39;
        goto LABEL_86;
      case 2:
        if ((v8 & 1) == 0) {
          goto LABEL_69;
        }
        *(unsigned char *)(a1 + 68) |= 4u;
        uint64_t v45 = *v18;
        unint64_t v46 = *(void *)(v3 + v45);
        if (v46 <= 0xFFFFFFFFFFFFFFF7 && v46 + 8 <= *(void *)(v3 + *v6))
        {
          uint64_t v47 = *(void *)(*(void *)(v3 + *v20) + v46);
          *(void *)(v3 + v45) = v46 + 8;
        }
        else
        {
          *(unsigned char *)(v3 + *v19) = 1;
          uint64_t v47 = 0;
        }
        uint64_t v55 = 32;
        goto LABEL_85;
      case 3:
        if ((v8 & 1) == 0) {
          goto LABEL_69;
        }
        *(unsigned char *)(a1 + 68) |= 2u;
        uint64_t v48 = *v18;
        unint64_t v49 = *(void *)(v3 + v48);
        if (v49 <= 0xFFFFFFFFFFFFFFF7 && v49 + 8 <= *(void *)(v3 + *v6))
        {
          uint64_t v47 = *(void *)(*(void *)(v3 + *v20) + v49);
          *(void *)(v3 + v48) = v49 + 8;
        }
        else
        {
          *(unsigned char *)(v3 + *v19) = 1;
          uint64_t v47 = 0;
        }
        uint64_t v55 = 24;
LABEL_85:
        *(void *)(a1 + v55) = v47;
        goto LABEL_86;
      case 4:
        if (!v32) {
          goto LABEL_69;
        }
        if ((*(unsigned char *)(a1 + 68) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_102;
          }
          char v54 = 16 * *(unsigned char *)(a1 + 68);
          goto LABEL_79;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_102;
        }
        BOOL v63 = v16;
        v50 = objc_alloc_init(GEONavigationTransitStopSummary);
        if (!GEONavigationTransitStopSummaryReadAllFrom((uint64_t)v50, (void *)v3)) {
          goto LABEL_103;
        }
        PBReaderRecallMark();
        uint64_t v51 = 40;
        goto LABEL_68;
      case 5:
        if (!v32)
        {
LABEL_69:
          char v53 = PBReaderSkipValueWithTag();
          uint64_t v19 = (int *)MEMORY[0x1E4F940C8];
          if ((v53 & 1) == 0)
          {
LABEL_101:
            char v57 = 0;
            goto LABEL_105;
          }
LABEL_86:
          if (v7) {
            char v56 = 1;
          }
          else {
            char v56 = v16;
          }
          if ((v56 & 1) == 0) {
            goto LABEL_90;
          }
          continue;
        }
        if ((*(unsigned char *)(a1 + 68) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_102:
            char v57 = 0;
            goto LABEL_104;
          }
          char v54 = 8 * *(unsigned char *)(a1 + 68);
LABEL_79:
          v7 += v54 >> 7;
          goto LABEL_80;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_102;
        }
        BOOL v63 = v16;
        v50 = objc_alloc_init(GEONavigationTransitStopSummary);
        if (GEONavigationTransitStopSummaryReadAllFrom((uint64_t)v50, (void *)v3))
        {
          PBReaderRecallMark();
          uint64_t v51 = 48;
LABEL_68:
          v52 = *(void **)(a1 + v51);
          *(void *)(a1 + v51) = v50;

          --v7;
          BOOL v16 = v63;
LABEL_80:
          uint64_t v19 = (int *)MEMORY[0x1E4F940C8];
          goto LABEL_86;
        }
LABEL_103:

        char v57 = 0;
        BOOL v16 = v63;
LABEL_104:
        uint64_t v19 = (int *)MEMORY[0x1E4F940C8];
LABEL_105:
        *(unsigned char *)(a1 + 68) |= 8u;
        *(unsigned char *)(a1 + 68) |= 0x10u;
        if (v57)
        {
LABEL_106:
          unint64_t v3 = *(unsigned char *)(v3 + *v19) == 0;
          if (v16) {
            goto LABEL_107;
          }
        }
        else
        {
          unint64_t v3 = 0;
          if (v16)
          {
LABEL_107:
            v61 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = 0;
          }
        }
        return v3;
      default:
        int v44 = PBReaderSkipValueWithTag();
        uint64_t v19 = (int *)MEMORY[0x1E4F940C8];
        if (!v44) {
          goto LABEL_101;
        }
        goto LABEL_86;
    }
  }
}

void sub_1898FE044(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898FE690(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEONavigationScheduledTransitLinkSummaryReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 60))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEONavigationScheduledTransitLinkSummaryReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = [v8 position];
  *(_DWORD *)(a1 + 60) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEONavigationScheduledTransitLinkSummaryReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEONavigationScheduledTransitLinkSummaryReadAllFrom_initialTag;
  }
  unint64_t Specified = GEONavigationScheduledTransitLinkSummaryReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    [*(id *)(a1 + 40) readAll:1];
    [*(id *)(a1 + 48) readAll:1];
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_1898FE84C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEONavigationScheduledTransitLinkSummaryReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEONavigationScheduledTransitLinkSummaryReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1898FE8B0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1898FEAB0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEONavigationScheduledTransitLinkSummaryIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  BOOL v2 = (*(unsigned char *)(a1 + 68) & 0x38) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return v2;
}

void sub_1898FEEEC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEONavigationTransitStopSummaryReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 2)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_40;
          }
          uint64_t v25 = objc_alloc_init(GEOLatLng);
          if (!GEOLatLngReadAllFrom((uint64_t)v25, v3))
          {

            goto LABEL_40;
          }
          PBReaderRecallMark();
          unint64_t v26 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = v25;
        }
        else if ((v10 >> 3) == 1)
        {
          char v18 = 0;
          unsigned int v19 = 0;
          uint64_t v20 = 0;
          *(unsigned char *)(a1 + 24) |= 1u;
          while (1)
          {
            uint64_t v21 = *v4;
            uint64_t v22 = *(void *)&v3[v21];
            unint64_t v23 = v22 + 1;
            if (v22 == -1 || v23 > *(void *)&v3[*v5]) {
              break;
            }
            char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
            *(void *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0) {
              goto LABEL_34;
            }
            v18 += 7;
            BOOL v15 = v19++ >= 9;
            if (v15)
            {
              uint64_t v20 = 0;
              goto LABEL_36;
            }
          }
          v3[*v6] = 1;
LABEL_34:
          if (v3[*v6]) {
            uint64_t v20 = 0;
          }
LABEL_36:
          *(void *)(a1 + 16) = v20;
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_40;
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v27 = v3[*v6] == 0;
  }
  else
  {
LABEL_40:
    BOOL v27 = 0;
  }
  objc_sync_exit(v3);

  return v27;
}

void sub_1898FF964(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEONavigationTransitStopSummaryReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEONavigationTransitStopSummaryReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1898FF9C8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189901F90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1899048A0(_Unwind_Exception *a1)
{
}

void sub_189904928(_Unwind_Exception *a1)
{
}

id _geo_NSErrorDictionaryRepresentationCopy(void *a1)
{
  if (a1)
  {
    v1 = (objc_class *)MEMORY[0x1E4F1CA60];
    id v2 = a1;
    id v3 = objc_alloc_init(v1);
    uint64_t v4 = [v2 domain];
    [v3 setObject:v4 forKey:@"domain"];

    uint64_t v5 = objc_msgSend(NSNumber, "numberWithInteger:", objc_msgSend(v2, "code"));
    [v3 setObject:v5 forKey:@"code"];

    char v6 = [v2 userInfo];

    uint64_t v7 = (void *)_NSDictionarySafeEncodingCopy(v6, 0);
    [v3 setObject:v7 forKey:@"userInfo"];
  }
  else
  {
    id v3 = 0;
  }

  return v3;
}

id _geo_NSErrorXPCDictionaryRepresentationCopy(void *a1)
{
  v1 = _geo_NSErrorDictionaryRepresentationCopy(a1);
  id v2 = (void *)_CFXPCCreateXPCObjectFromCFObject();

  return v2;
}

id _geo_NSErrorFromDictionaryRepresentationCopy(void *a1)
{
  uint64_t v41 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  if (v1 && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0))
  {
    id v2 = [v1 objectForKey:@"domain"];
    id v3 = [v1 objectForKey:@"code"];
    uint64_t v4 = [v1 objectForKey:@"userInfo"];
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) != 0
      && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0)
      && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0))
    {
      id v5 = _NSDictionarySafeDecodingCopy(v4);
      uint64_t v6 = *MEMORY[0x1E4F289D0];
      uint64_t v7 = [v5 objectForKeyedSubscript:*MEMORY[0x1E4F289D0]];
      if (v7)
      {
        objc_opt_class();
        if ((objc_opt_isKindOfClass() & 1) == 0 && os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
        {
          *(_WORD *)buf = 0;
          _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Assertion failed: [urlErrorString isKindOfClass:NSString.class]", buf, 2u);
        }
        objc_opt_class();
        if (objc_opt_isKindOfClass())
        {
          char v8 = [MEMORY[0x1E4F1CB10] URLWithString:v7];
          if (v8)
          {
            unsigned int v9 = v5;
            id v5 = (id)[v5 mutableCopy];
            [v5 setObject:v8 forKeyedSubscript:v6];
          }
        }
      }
      id v10 = (id)objc_msgSend(objc_alloc(MEMORY[0x1E4F28C58]), "initWithDomain:code:userInfo:", v2, objc_msgSend(v3, "integerValue"), v5);
      if ([v10 code] == -3)
      {
        uint64_t v11 = [v10 domain];
        GEOErrorDomain();
        uint64_t v12 = v34 = v5;
        int v13 = [v11 isEqual:v12];

        id v5 = v34;
        if (v13)
        {
          char v14 = [v10 userInfo];
          BOOL v15 = [v14 objectForKeyedSubscript:@"requestKind"];

          unsigned int v16 = [v15 intValue];
          unsigned int v17 = (v16 >> 8) & 0x7F;
          if (v17 > 0xB || ((1 << v17) & 0xC05) == 0 || v16 != 1)
          {
            v33 = v15;
            char v18 = [v10 userInfo];
            unsigned int v19 = [v18 objectForKeyedSubscript:@"details"];
            uint64_t v20 = [v19 firstObject];

            if ([v20 count])
            {
              uint64_t v21 = [v20 objectForKeyedSubscript:@"maxRequests"];
              uint64_t v32 = [v21 unsignedIntValue];

              uint64_t v22 = [v20 objectForKeyedSubscript:@"windowSize"];
              uint64_t v31 = [v22 unsignedIntValue];

              unint64_t v23 = [v20 objectForKeyedSubscript:@"timeUntilReset"];
              uint64_t v24 = [v23 unsignedIntValue];

              uint64_t v25 = [NSString stringWithFormat:@"Tried to make more than %u requests in %u seconds, will reset in %u seconds", v32, v31, v24];
            }
            else
            {
              uint64_t v25 = @"No details found";
            }
            BOOL v28 = [v10 userInfo];
            int v29 = [v28 objectForKeyedSubscript:@"requestKindString"];

            char v30 = GEOFindOrCreateLog("com.apple.GeoServices", "GEOXPC");
            if (os_log_type_enabled(v30, OS_LOG_TYPE_FAULT))
            {
              *(_DWORD *)buf = 138412802;
              BOOL v36 = v29;
              __int16 v37 = 2112;
              unsigned int v38 = v25;
              __int16 v39 = 2112;
              id v40 = v10;
              _os_log_impl(&dword_188D96000, v30, OS_LOG_TYPE_FAULT, "Throttled \"%@\" request: %@ - %@", buf, 0x20u);
            }

            BOOL v15 = v33;
            id v5 = v34;
          }
        }
      }

      id v26 = v10;
    }
    else
    {
      id v26 = 0;
    }
  }
  else
  {
    id v26 = 0;
  }

  return v26;
}

id _geo_NSErrorFromXPCDictionaryRepresentationCopy()
{
  v0 = (void *)_CFXPCCreateCFObjectFromXPCObject();
  id v1 = _geo_NSErrorFromDictionaryRepresentationCopy(v0);

  return v1;
}

void GEOEncodeXPCValue(void *a1, const char *a2, void *a3, uint64_t a4)
{
  id v7 = a1;
  id v8 = a3;
  unsigned int v9 = v8;
  if (!v7)
  {
    if (!os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT)) {
      goto LABEL_5;
    }
    __int16 v16 = 0;
    uint64_t v11 = MEMORY[0x1E4F14500];
    uint64_t v12 = "Assertion failed: dict != ((void *)0)";
    int v13 = (uint8_t *)&v16;
LABEL_12:
    _os_log_fault_impl(&dword_188D96000, v11, OS_LOG_TYPE_FAULT, v12, v13, 2u);
    goto LABEL_5;
  }
  if (!a2)
  {
    if (!os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT)) {
      goto LABEL_5;
    }
    __int16 v15 = 0;
    uint64_t v11 = MEMORY[0x1E4F14500];
    uint64_t v12 = "Assertion failed: key != ((void *)0)";
    int v13 = (uint8_t *)&v15;
    goto LABEL_12;
  }
  if (!v8)
  {
    if (!os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT)) {
      goto LABEL_5;
    }
    __int16 v14 = 0;
    uint64_t v11 = MEMORY[0x1E4F14500];
    uint64_t v12 = "Assertion failed: value != ((void *)0)";
    int v13 = (uint8_t *)&v14;
    goto LABEL_12;
  }
  id v10 = [MEMORY[0x1E4F28DB0] archivedDataWithRootObject:v8 requiringSecureCoding:1 error:a4];
  xpc_dictionary_set_data(v7, a2, (const void *)[v10 bytes], objc_msgSend(v10, "length"));

LABEL_5:
}

id _NSArraySafeEncodingCopy(void *a1, unsigned int a2)
{
  uint64_t v30 = *MEMORY[0x1E4F143B8];
  id v2 = a1;
  id v3 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
  long long v25 = 0u;
  long long v26 = 0u;
  long long v27 = 0u;
  long long v28 = 0u;
  id v4 = v2;
  uint64_t v5 = [v4 countByEnumeratingWithState:&v25 objects:v29 count:16];
  if (v5)
  {
    uint64_t v6 = v5;
    uint64_t v7 = *(void *)v26;
    unint64_t v8 = 0x1E4F29000uLL;
    unint64_t v9 = 0x1E4F28000uLL;
    unint64_t v10 = 0x1E4F28000uLL;
    do
    {
      uint64_t v11 = 0;
      do
      {
        if (*(void *)v26 != v7) {
          objc_enumerationMutation(v4);
        }
        uint64_t v12 = *(void **)(*((void *)&v25 + 1) + 8 * v11);
        objc_opt_class();
        if (objc_opt_isKindOfClass())
        {
          uint64_t v13 = [v12 absoluteString];
LABEL_8:
          __int16 v14 = (void *)v13;
          [v3 addObject:v13];

          goto LABEL_12;
        }
        objc_opt_class();
        if (objc_opt_isKindOfClass() & 1) != 0 || (objc_opt_class(), (objc_opt_isKindOfClass()))
        {
          [v3 addObject:v12];
        }
        else
        {
          objc_opt_class();
          if (objc_opt_isKindOfClass())
          {
            uint64_t v24 = _geo_NSErrorDictionaryRepresentationCopy(v12);
            __int16 v15 = (void *)[objc_alloc(MEMORY[0x1E4F1CA60]) initWithDictionary:v24];
            [*(id *)(v9 + 3792) numberWithBool:1];
            unint64_t v16 = v10;
            id v17 = v4;
            unint64_t v18 = v8;
            v20 = unint64_t v19 = v9;
            [v15 setObject:v20 forKey:@"_geo_SerializedError"];

            unint64_t v9 = v19;
            unint64_t v8 = v18;
            id v4 = v17;
            unint64_t v10 = v16;
            [v3 addObject:v15];
          }
          else
          {
            objc_opt_class();
            if (objc_opt_isKindOfClass())
            {
              uint64_t v13 = _NSDictionarySafeEncodingCopy(v12, a2);
              goto LABEL_8;
            }
            objc_opt_class();
            if (objc_opt_isKindOfClass())
            {
              uint64_t v13 = _NSArraySafeEncodingCopy(v12, a2);
              goto LABEL_8;
            }
          }
        }
LABEL_12:
        ++v11;
      }
      while (v6 != v11);
      uint64_t v21 = [v4 countByEnumeratingWithState:&v25 objects:v29 count:16];
      uint64_t v6 = v21;
    }
    while (v21);
  }

  return v3;
}

id _NSArraySafeDecodingCopy(void *a1)
{
  uint64_t v27 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  id v2 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
  long long v22 = 0u;
  long long v23 = 0u;
  long long v24 = 0u;
  long long v25 = 0u;
  id v3 = v1;
  uint64_t v4 = [v3 countByEnumeratingWithState:&v22 objects:v26 count:16];
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = *(void *)v23;
    unint64_t v7 = 0x1E4F29000uLL;
    unint64_t v8 = 0x1E4F28000uLL;
    id v21 = v2;
    do
    {
      uint64_t v9 = 0;
      do
      {
        if (*(void *)v23 != v6) {
          objc_enumerationMutation(v3);
        }
        unint64_t v10 = *(void **)(*((void *)&v22 + 1) + 8 * v9);
        objc_opt_class();
        if (objc_opt_isKindOfClass() & 1) != 0 || (objc_opt_class(), (objc_opt_isKindOfClass()))
        {
          [v2 addObject:v10];
          goto LABEL_9;
        }
        objc_opt_class();
        if (objc_opt_isKindOfClass())
        {
          id v11 = v10;
          uint64_t v12 = [v11 objectForKey:@"_geo_SerializedError"];
          objc_opt_class();
          if (objc_opt_isKindOfClass())
          {
            [v11 objectForKey:@"_geo_SerializedError"];
            unint64_t v13 = v7;
            id v14 = v3;
            v16 = unint64_t v15 = v8;
            int v17 = [v16 BOOLValue];

            unint64_t v8 = v15;
            id v3 = v14;
            unint64_t v7 = v13;
            id v2 = v21;

            if (v17)
            {
              unint64_t v18 = _geo_NSErrorFromDictionaryRepresentationCopy(v11);
              if (!v18) {
                goto LABEL_21;
              }
              goto LABEL_20;
            }
          }
          else
          {
          }
          unint64_t v18 = (void *)_NSDictionarySafeDecodingCopy(v11);
LABEL_20:
          [v2 addObject:v18];
LABEL_21:

          goto LABEL_22;
        }
        objc_opt_class();
        if ((objc_opt_isKindOfClass() & 1) == 0) {
          goto LABEL_9;
        }
        id v11 = (id)_NSArraySafeDecodingCopy(v10);
        [v2 addObject:v11];
LABEL_22:

LABEL_9:
        ++v9;
      }
      while (v5 != v9);
      uint64_t v19 = [v3 countByEnumeratingWithState:&v22 objects:v26 count:16];
      uint64_t v5 = v19;
    }
    while (v19);
  }

  return v2;
}

void sub_18990A114(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,id location)
{
  objc_destroyWeak(v23);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_18990D880(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_18990D938(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_18990DA14(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_18990DD1C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void *a22)
{
  _Unwind_Resume(a1);
}

void sub_18990DFE4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_18990E0C8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t GEOSynchronizeDefaults()
{
  return 0;
}

void GEOSetDefault(void *a1, void *a2)
{
  id v3 = a2;
  id v4 = a1;
  uint64_t v5 = _GEOConfigProxy();
  id v6 = [v5 configStoreForOptions:983040];

  [v6 setConfigValue:v3 forKey:v4 options:983040 synchronous:0];
}

void GEOSetDefaultSynchronous(void *a1, void *a2)
{
  id v3 = a2;
  id v4 = a1;
  uint64_t v5 = _GEOConfigProxy();
  id v6 = [v5 configStoreForOptions:983040];

  [v6 setConfigValue:v3 forKey:v4 options:983040 synchronous:1];
}

id GEOGetDefaultNumber(void *a1)
{
  id v1 = GEOGetDecodedDefaultWithSource(a1, 0, 0, 0);
  objc_opt_class();
  id v2 = 0;
  if (objc_opt_isKindOfClass()) {
    id v2 = v1;
  }

  return v2;
}

id GEOGetDefault(void *a1, void *a2)
{
  return GEOGetDecodedDefaultWithSource(a1, a2, 0, 0);
}

uint64_t GEOGetDefaultInteger(void *a1, uint64_t a2)
{
  id v3 = GEOGetDefaultNumber(a1);
  id v4 = v3;
  if (v3) {
    a2 = [v3 integerValue];
  }

  return a2;
}

uint64_t GEOGetDefaultUInt32(void *a1, uint64_t a2)
{
  id v3 = GEOGetDecodedDefaultWithSource(a1, 0, 0, 0);
  if (v3)
  {
    objc_opt_class();
    if (objc_opt_isKindOfClass()) {
      a2 = [v3 unsignedIntValue];
    }
  }

  return a2;
}

uint64_t GEOGetDefaultUint64(void *a1, uint64_t a2)
{
  id v3 = GEOGetDefaultNumber(a1);
  id v4 = v3;
  if (v3) {
    a2 = [v3 unsignedLongLongValue];
  }

  return a2;
}

uint64_t GEOGetDefaultBOOL(void *a1, uint64_t a2)
{
  id v3 = GEOGetDefaultNumber(a1);
  id v4 = v3;
  if (v3) {
    a2 = [v3 BOOLValue];
  }

  return a2;
}

double GEOGetDefaultDouble(void *a1, double a2)
{
  id v3 = GEOGetDefaultNumber(a1);
  id v4 = v3;
  if (v3)
  {
    [v3 doubleValue];
    a2 = v5;
  }

  return a2;
}

id GEOGetDefaultWithSource(void *a1, void *a2, void *a3)
{
  return GEOGetDecodedDefaultWithSource(a1, a2, a3, 0);
}

void GEOSetUserTransportTypePreference()
{
}

uint64_t GEOGetUserPreferredTransportType()
{
  unint64_t v0 = GEOGetUserTransportTypePreference();
  if (v0 < 5) {
    return (v0 + 1);
  }
  else {
    return 0;
  }
}

id GEOGetFormatStyleParserLog()
{
  if (qword_1EB29FA28 != -1) {
    dispatch_once(&qword_1EB29FA28, &__block_literal_global_55_0);
  }
  unint64_t v0 = (void *)qword_1EB29FA20;

  return v0;
}

void __GEOGetFormatStyleParserLog_block_invoke()
{
  os_log_t v0 = os_log_create("com.apple.GeoServices", "FormatStyleParser");
  id v1 = (void *)qword_1EB29FA20;
  qword_1EB29FA20 = (uint64_t)v0;
}

void sub_18990FA48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18990FBB4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18990FDD8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18990FF44(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1899100B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18991021C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_189910388(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1899107C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1899109C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_189910B34(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1899112BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_189911604(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_189911808(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18991199C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_189911AEC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_189911C14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_189911D30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_189911E9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_189912F5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1899139BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1899140FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1899144B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1899145D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18991473C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18991486C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_189914B64(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_189914D80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_189914F48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18991590C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_189915D38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_189915EB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_189916054(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1899161DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_189916348(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_189916C10(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1899175B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_189917808(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_189917BD8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_189917D58(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_189917ED8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_189918058(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1899181D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18991836C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1899184D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_189918858(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void ___registerSupportSourcesIfNecessary_block_invoke_2()
{
  id v0 = [MEMORY[0x1E4F28EB8] defaultCenter];
  [v0 postNotificationName:@"GEOSupportsOfflineMapsDidChangeNotificationName" object:0];
}

void ___registerSupportSourcesIfNecessary_block_invoke_3()
{
  id v0 = [MEMORY[0x1E4F28EB8] defaultCenter];
  [v0 postNotificationName:@"GEOSupportsOfflineMapsDidChangeNotificationName" object:0];
}

void sub_189919BAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{
  _Unwind_Resume(a1);
}

void sub_189919CB8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, std::__shared_weak_count *a11)
{
  if (a11) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a11);
  }
  if (v11) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v11);
  }
  _Unwind_Resume(exception_object);
}

void sub_18991A18C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

int64x2_t std::deque<geo::TransitEdgePiece>::push_front(int64x2_t *a1, uint64_t a2)
{
  unint64_t v4 = a1[2].u64[0];
  if (!v4)
  {
    uint64_t v5 = a1->i64[1];
    uint64_t v6 = a1[1].i64[0];
    uint64_t v7 = 16 * (v6 - v5) - 1;
    unint64_t v8 = v6 - v5;
    if (v6 == v5) {
      uint64_t v7 = 0;
    }
    if ((unint64_t)(v7 - a1[2].i64[1]) < 0x80)
    {
      uint64_t v9 = (uint64_t)&a1[1].i64[1];
      uint64_t v10 = a1[1].i64[1];
      uint64_t v11 = a1->i64[0];
      uint64_t v12 = v10 - a1->i64[0];
      if (v8 >= v12)
      {
        if (v10 == v11) {
          unint64_t v13 = 1;
        }
        else {
          unint64_t v13 = v12 >> 2;
        }
        char v54 = &a1[1].i64[1];
        __p = std::__allocate_at_least[abi:ne180100]<std::allocator<zilch::StringList::Entry>>(v9, v13);
        uint64_t v51 = (char *)__p;
        v52 = (char *)__p;
        char v53 = (char *)__p + 8 * v14;
        unint64_t v49 = operator new(0x1000uLL);
        std::__split_buffer<geo::TransitEdgePiece *>::push_back(&__p, &v49);
        unint64_t v15 = (char *)a1->i64[1];
        unint64_t v16 = v52;
        if (v15 == (char *)a1[1].i64[0])
        {
          int v35 = (char *)a1->i64[1];
        }
        else
        {
          do
          {
            if (v16 == v53)
            {
              int64_t v17 = v51 - (unsigned char *)__p;
              if (v51 <= __p)
              {
                if (v16 == __p) {
                  unint64_t v25 = 1;
                }
                else {
                  unint64_t v25 = (v16 - (unsigned char *)__p) >> 2;
                }
                long long v26 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<zilch::StringList::Entry>>((uint64_t)v54, v25);
                long long v28 = v51;
                unint64_t v16 = &v26[8 * (v25 >> 2)];
                uint64_t v29 = v52 - v51;
                if (v52 != v51)
                {
                  unint64_t v16 = &v26[8 * (v25 >> 2) + (v29 & 0xFFFFFFFFFFFFFFF8)];
                  uint64_t v30 = 8 * (v29 >> 3);
                  uint64_t v31 = &v26[8 * (v25 >> 2)];
                  do
                  {
                    uint64_t v32 = *(void *)v28;
                    v28 += 8;
                    *(void *)uint64_t v31 = v32;
                    v31 += 8;
                    v30 -= 8;
                  }
                  while (v30);
                }
                v33 = __p;
                __p = v26;
                uint64_t v51 = &v26[8 * (v25 >> 2)];
                v52 = v16;
                char v53 = &v26[8 * v27];
                if (v33)
                {
                  operator delete(v33);
                  unint64_t v16 = v52;
                }
              }
              else
              {
                uint64_t v18 = v17 >> 3;
                BOOL v19 = v17 >> 3 < -1;
                uint64_t v20 = (v17 >> 3) + 2;
                if (v19) {
                  uint64_t v21 = v20;
                }
                else {
                  uint64_t v21 = v18 + 1;
                }
                long long v22 = &v51[-8 * (v21 >> 1)];
                int64_t v23 = v16 - v51;
                if (v16 != v51)
                {
                  memmove(&v51[-8 * (v21 >> 1)], v51, v16 - v51);
                  unint64_t v16 = v51;
                }
                long long v24 = &v16[-8 * (v21 >> 1)];
                unint64_t v16 = &v22[v23];
                uint64_t v51 = v24;
                v52 = &v22[v23];
              }
            }
            uint64_t v34 = *(void *)v15;
            v15 += 8;
            *(void *)unint64_t v16 = v34;
            unint64_t v16 = v52 + 8;
            v52 += 8;
          }
          while (v15 != (char *)a1[1].i64[0]);
          int v35 = (char *)a1->i64[1];
        }
        unsigned int v38 = (void *)a1->i64[0];
        __int16 v39 = v51;
        a1->i64[0] = (uint64_t)__p;
        a1->i64[1] = (uint64_t)v39;
        __p = v38;
        uint64_t v51 = v35;
        id v40 = (char *)a1[1].i64[1];
        uint64_t v41 = v53;
        a1[1].i64[0] = (uint64_t)v16;
        a1[1].i64[1] = (uint64_t)v41;
        v52 = v15;
        char v53 = v40;
        if (v16 - v39 == 8) {
          uint64_t v42 = 64;
        }
        else {
          uint64_t v42 = a1[2].i64[0] + 128;
        }
        a1[2].i64[0] = v42;
        if (v15 != v35) {
          v52 = &v15[(v35 - v15 + 7) & 0xFFFFFFFFFFFFFFF8];
        }
        if (v38) {
          operator delete(v38);
        }
      }
      else
      {
        if (v5 == v11)
        {
          __p = operator new(0x1000uLL);
          std::__split_buffer<geo::TransitEdgePiece *>::push_back(a1, &__p);
          uint64_t v36 = a1[1].i64[0];
          __p = *(void **)(v36 - 8);
          a1[1].i64[0] = v36 - 8;
        }
        else
        {
          __p = operator new(0x1000uLL);
        }
        std::__split_buffer<geo::TransitEdgePiece *>::push_front((uint64_t)a1, &__p);
        if (a1[1].i64[0] - a1->i64[1] == 8) {
          uint64_t v37 = 64;
        }
        else {
          uint64_t v37 = a1[2].i64[0] + 128;
        }
        a1[2].i64[0] = v37;
      }
    }
    else
    {
      a1[2].i64[0] = 128;
      __p = *(void **)(v6 - 8);
      a1[1].i64[0] = v6 - 8;
      std::__split_buffer<geo::TransitEdgePiece *>::push_front((uint64_t)a1, &__p);
    }
    unint64_t v4 = a1[2].u64[0];
  }
  uint64_t v43 = a1->i64[1];
  int v44 = (void *)(v43 + 8 * (v4 >> 7));
  uint64_t v45 = *v44 + 32 * (v4 & 0x7F);
  if (a1[1].i64[0] == v43) {
    uint64_t v46 = 0;
  }
  else {
    uint64_t v46 = v45;
  }
  if (v46 == *v44) {
    uint64_t v46 = *(v44 - 1) + 4096;
  }
  *(void *)(v46 - 32) = *(id *)a2;
  *(void *)(v46 - 24) = *(void *)(a2 + 8);
  *(void *)(v46 - 16) = *(id *)(a2 + 16);
  char v47 = *(unsigned char *)(a2 + 28);
  *(_DWORD *)(v46 - 8) = *(_DWORD *)(a2 + 24);
  *(unsigned char *)(v46 - 4) = v47;
  int64x2_t result = vaddq_s64(a1[2], (int64x2_t)xmmword_18A62C080);
  a1[2] = result;
  return result;
}

void sub_18991A5C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, uint64_t a12)
{
  operator delete(v12);
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_18991AAC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_18991ACA0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_18991AD98(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_18991AE54(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_18991AF10(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void *std::__hash_table<_GEOTileKey,std::hash<_GEOTileKey>,std::equal_to<_GEOTileKey>,std::allocator<_GEOTileKey>>::__emplace_unique_key_args<_GEOTileKey,_GEOTileKey>(uint64_t a1, void *a2, _OWORD *a3)
{
  unint64_t v7 = GEOTileKeyHash(a2);
  unint64_t v8 = v7;
  unint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    uint8x8_t v10 = (uint8x8_t)vcnt_s8((int8x8_t)v9);
    v10.i16[0] = vaddlv_u8(v10);
    if (v10.u32[0] > 1uLL)
    {
      unint64_t v3 = v7;
      if (v7 >= v9) {
        unint64_t v3 = v7 % v9;
      }
    }
    else
    {
      unint64_t v3 = (v9 - 1) & v7;
    }
    uint64_t v11 = *(void ***)(*(void *)a1 + 8 * v3);
    if (v11)
    {
      for (uint64_t i = *v11; i; uint64_t i = (void *)*i)
      {
        unint64_t v13 = i[1];
        if (v13 == v7)
        {
          if (i[2] == *a2 && i[3] == a2[1]) {
            return i;
          }
        }
        else
        {
          if (v10.u32[0] > 1uLL)
          {
            if (v13 >= v9) {
              v13 %= v9;
            }
          }
          else
          {
            v13 &= v9 - 1;
          }
          if (v13 != v3) {
            break;
          }
        }
      }
    }
  }
  uint64_t i = operator new(0x20uLL);
  *uint64_t i = 0;
  i[1] = v8;
  *((_OWORD *)i + 1) = *a3;
  float v15 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v16 = *(float *)(a1 + 32);
  if (!v9 || (float)(v16 * (float)v9) < v15)
  {
    BOOL v17 = 1;
    if (v9 >= 3) {
      BOOL v17 = (v9 & (v9 - 1)) != 0;
    }
    unint64_t v18 = v17 | (2 * v9);
    unint64_t v19 = vcvtps_u32_f32(v15 / v16);
    if (v18 <= v19) {
      size_t v20 = v19;
    }
    else {
      size_t v20 = v18;
    }
    std::__hash_table<std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,zilch::HuffmanCode::KeyInfo>>>::__rehash<true>(a1, v20);
    unint64_t v9 = *(void *)(a1 + 8);
    if ((v9 & (v9 - 1)) != 0)
    {
      if (v8 >= v9) {
        unint64_t v3 = v8 % v9;
      }
      else {
        unint64_t v3 = v8;
      }
    }
    else
    {
      unint64_t v3 = (v9 - 1) & v8;
    }
  }
  uint64_t v21 = *(void *)a1;
  long long v22 = *(void **)(*(void *)a1 + 8 * v3);
  if (v22)
  {
    *uint64_t i = *v22;
LABEL_42:
    *long long v22 = i;
    goto LABEL_43;
  }
  *uint64_t i = *(void *)(a1 + 16);
  *(void *)(a1 + 16) = i;
  *(void *)(v21 + 8 * v3) = a1 + 16;
  if (*i)
  {
    unint64_t v23 = *(void *)(*i + 8);
    if ((v9 & (v9 - 1)) != 0)
    {
      if (v23 >= v9) {
        v23 %= v9;
      }
    }
    else
    {
      v23 &= v9 - 1;
    }
    long long v22 = (void *)(*(void *)a1 + 8 * v23);
    goto LABEL_42;
  }
LABEL_43:
  ++*(void *)(a1 + 24);
  return i;
}

void sub_18991B20C(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

id GEOGetGEOComposedStringLog()
{
  if (qword_1E9117F28 != -1) {
    dispatch_once(&qword_1E9117F28, &__block_literal_global_90);
  }
  id v0 = (void *)_MergedGlobals_2;

  return v0;
}

void __GEOGetGEOComposedStringLog_block_invoke_0()
{
  os_log_t v0 = os_log_create("com.apple.GeoServices", "GEOComposedString");
  id v1 = (void *)_MergedGlobals_2;
  _MergedGlobals_2 = (uint64_t)v0;
}

void sub_18991CD9C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_18991D5AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_18991DA78(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

uint64_t GEOPDPlaceDataLayoutConfigurationFromGEOModuleType(int a1)
{
  if ((a1 - 1) > 0x2C) {
    return 0;
  }
  else {
    return dword_18A635E00[a1 - 1];
  }
}

void sub_18992235C(_Unwind_Exception *a1)
{
}

void sub_189922428(_Unwind_Exception *a1)
{
}

void sub_18992278C(_Unwind_Exception *a1)
{
}

void sub_189922924(_Unwind_Exception *a1)
{
}

void sub_189922A30(_Unwind_Exception *a1)
{
}

void sub_189922AC8(_Unwind_Exception *a1)
{
}

void sub_189922BC4(_Unwind_Exception *a1)
{
}

void sub_189922D04(_Unwind_Exception *a1)
{
}

void sub_189922FB8(_Unwind_Exception *a1)
{
}

id GEOGetGEOComposedRouteAnchorPointListLog()
{
  if (qword_1EB29FA50 != -1) {
    dispatch_once(&qword_1EB29FA50, &__block_literal_global_133_1);
  }
  os_log_t v0 = (void *)_MergedGlobals_232;

  return v0;
}

void sub_18992312C(_Unwind_Exception *a1)
{
}

void sub_1899235A4(_Unwind_Exception *a1)
{
}

void sub_189923C8C(_Unwind_Exception *a1)
{
}

void sub_189923D24(_Unwind_Exception *a1)
{
}

void sub_189924194(_Unwind_Exception *a1)
{
}

void __GEOGetGEOComposedRouteAnchorPointListLog_block_invoke()
{
  os_log_t v0 = os_log_create("com.apple.GeoServices", "GEOComposedRouteAnchorPointList");
  id v1 = (void *)_MergedGlobals_232;
  _MergedGlobals_232 = (uint64_t)v0;
}

uint64_t GEOSelectionTileKeyGetXYZId(uint64_t result, int *a2, _DWORD *a3, int *a4, void *a5)
{
  if (result)
  {
    int v5 = *(unsigned char *)result & 0x7F;
    if (v5 == 10 || v5 == 11 || v5 == 19)
    {
      if (a2) {
        *a2 = (*(_DWORD *)(result + 1) >> 6) & 0x1FFFFFF;
      }
      if (a3) {
        *a3 = (*(void *)(result + 1) >> 31) & 0x1FFFFFF;
      }
      if (a4) {
        *a4 = *(_DWORD *)(result + 1) & 0x3F;
      }
      if (a5) {
        *a5 = *(void *)(result + 8);
      }
      return 1;
    }
    else
    {
      return 0;
    }
  }
  return result;
}

uint64_t GEORoadSelectionTileKeyMake(int a1, int a2, char a3, uint64_t a4)
{
  LOBYTE(v5) = 19;
  *(void *)((char *)&v5 + 1) = a3 & 0x3F | ((a1 & 0x1FFFFFF) << 6) & 0x7FFFFFFFu | ((unint64_t)(a2 & 0x1FFFFFF) << 31) | (a4 << 56);
  return v5;
}

uint64_t GEOPolygonSelectionTileKeyMake(int a1, int a2, char a3, uint64_t a4)
{
  LOBYTE(v5) = 11;
  *(void *)((char *)&v5 + 1) = a3 & 0x3F | ((a1 & 0x1FFFFFF) << 6) & 0x7FFFFFFFu | ((unint64_t)(a2 & 0x1FFFFFF) << 31) | (a4 << 56);
  return v5;
}

uint64_t GEOTransitLineSelectionTileKeyMake(int a1, int a2, char a3, uint64_t a4)
{
  LOBYTE(v5) = 10;
  *(void *)((char *)&v5 + 1) = a3 & 0x3F | ((a1 & 0x1FFFFFF) << 6) & 0x7FFFFFFFu | ((unint64_t)(a2 & 0x1FFFFFF) << 31) | (a4 << 56);
  return v5;
}

double GEOTransitLineSelectionAdditionalInfoMake(void *a1)
{
  [a1 coordinate];
  return result;
}

double GEOTransitLineSelectionAdditionalInfoGetLocationHint(uint64_t a1)
{
  return *(double *)&a1;
}

uint64_t GEOContourLinesTileKeyGetXYZSizeUnits(uint64_t result, _DWORD *a2, int *a3, int *a4, _DWORD *a5, unsigned char *a6)
{
  if (result)
  {
    if ((*(unsigned char *)result & 0x7F) == 0x14)
    {
      if (a2) {
        *a2 = *(_DWORD *)(result + 1) >> 6;
      }
      if (a3) {
        *a3 = *(_DWORD *)(result + 5) & 0x3FFFFFF;
      }
      if (a4) {
        *a4 = *(_DWORD *)(result + 1) & 0x3F;
      }
      if (a5) {
        *a5 = (*(void *)(result + 1) >> 58) & 0xF;
      }
      if (a6) {
        *a6 = (*(void *)(result + 1) >> 62) | (4 * *(unsigned char *)(result + 9));
      }
      return 1;
    }
    else
    {
      return 0;
    }
  }
  return result;
}

uint64_t GEOContourLinesTileKeyMake(int a1, int a2, char a3, char a4, unsigned int a5)
{
  __int16 v6 = *(_WORD *)(((unint64_t)&v8 | 9) + 4);
  unint64_t v5 = ((unint64_t)&v8 | 9) + 4;
  *(unsigned char *)(v5 + 2) = *(unsigned char *)(((unint64_t)&v8 | 9) + 6);
  *(_WORD *)unint64_t v5 = v6;
  *(void *)((char *)&v8 + 1) = a3 & 0x3F | (a1 << 6) | ((unint64_t)(a2 & 0x3FFFFFF) << 32) | ((unint64_t)(a4 & 0xF) << 58) | ((unint64_t)a5 << 62);
  return v8;
}

void sub_189925354(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOWiFiBSSReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 88));
  __int16 v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 84);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 80)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  unsigned int v11 = (vaddv_s16((int16x4_t)(*(void *)&vshl_u16((uint16x4_t)(*(void *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 92)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFBFFFFFFFEFFFCLL) & 0xFF01FF01FF01FF01))+ ((*(unsigned char *)(a1 + 92) & 8) != 0));
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v7])
    {
      case -3:
        char v8 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        BOOL v14 = v11 > 3;
        char v15 = v10 | v14;
        if (((v10 | v14) | v8)) {
          float v16 = 0;
        }
        else {
          float v16 = a3;
        }
        BOOL v17 = (int *)MEMORY[0x1E4F940E8];
        unint64_t v18 = (int *)MEMORY[0x1E4F940C8];
        if (*(void *)(v3 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(v3 + *v6)) {
          goto LABEL_112;
        }
        char v69 = (v16 == 0) | v15;
        unint64_t v19 = (int *)MEMORY[0x1E4F940B8];
        char v68 = v10 | v14;
        break;
      default:
        ++v11;
LABEL_6:
        uint64_t v12 = v9;
        uint64_t v13 = v10;
LABEL_8:
        ++v7;
        uint64_t v9 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(unsigned char *)(v3 + *v18)) {
      goto LABEL_112;
    }
    char v20 = 0;
    unsigned int v21 = 0;
    unint64_t v22 = 0;
    while (1)
    {
      uint64_t v23 = *v17;
      unint64_t v24 = *(void *)(v3 + v23);
      if (v24 == -1 || v24 >= *(void *)(v3 + *v6)) {
        break;
      }
      char v25 = *(unsigned char *)(*(void *)(v3 + *v19) + v24);
      *(void *)(v3 + v23) = v24 + 1;
      v22 |= (unint64_t)(v25 & 0x7F) << v20;
      if ((v25 & 0x80) == 0) {
        goto LABEL_23;
      }
      v20 += 7;
      BOOL v26 = v21++ >= 9;
      if (v26)
      {
        unint64_t v22 = 0;
        int v27 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_25;
      }
    }
    *(unsigned char *)(v3 + *v18) = 1;
LABEL_23:
    int v27 = *(unsigned __int8 *)(v3 + *v18);
    if (*(unsigned char *)(v3 + *v18)) {
      unint64_t v22 = 0;
    }
LABEL_25:
    int v28 = v22 & 7;
    if (v27 || v28 == 4)
    {
LABEL_112:
      if (v15)
      {
        char v62 = 1;
        goto LABEL_114;
      }
      if (v16)
      {
        while (1)
        {
          int v63 = *v16++;
          char v64 = 4;
          switch(v63)
          {
            case 0:
              goto LABEL_124;
            case 1:
              goto LABEL_123;
            case 2:
              char v64 = 16;
              goto LABEL_123;
            case 3:
              char v64 = 2;
              goto LABEL_123;
            case 4:
              char v64 = 32;
              goto LABEL_123;
            case 6:
              char v64 = 8;
LABEL_123:
              *(unsigned char *)(a1 + 92) |= v64;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_124;
    }
    unint64_t v30 = v22 >> 3;
    BOOL v31 = v15;
    if ((v69 & 1) == 0)
    {
      uint64_t v32 = v16;
      do
      {
        int v34 = *v32++;
        int v33 = v34;
        BOOL v31 = v34 != 0;
        if (v34) {
          BOOL v35 = v33 == v30;
        }
        else {
          BOOL v35 = 1;
        }
      }
      while (!v35);
    }
    switch((int)v30)
    {
      case 1:
        if (!v31) {
          goto LABEL_85;
        }
        if ((*(unsigned char *)(a1 + 92) & 4) == 0)
        {
          uint64_t v36 = PBReaderReadString();
          uint64_t v37 = *(void **)(a1 + 40);
          *(void *)(a1 + 40) = v36;
          goto LABEL_81;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_129;
        }
        char v55 = 32 * *(unsigned char *)(a1 + 92);
        goto LABEL_97;
      case 2:
        if (!v31) {
          goto LABEL_85;
        }
        if ((*(unsigned char *)(a1 + 92) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_129;
          }
          char v55 = 8 * *(unsigned char *)(a1 + 92);
          goto LABEL_97;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_129;
        }
        v67 = objc_alloc_init(GEOLatLng);
        if (!GEOLatLngReadAllFrom((uint64_t)v67, (void *)v3)) {
          goto LABEL_128;
        }
        PBReaderRecallMark();
        uint64_t v39 = 56;
        goto LABEL_80;
      case 3:
        if (!v31 || (*(unsigned char *)(a1 + 92) & 2) != 0) {
          goto LABEL_85;
        }
        if (v28 != 2)
        {
          char v56 = 0;
          unsigned int v57 = 0;
          uint64_t v58 = 0;
          while (1)
          {
            uint64_t v59 = *v17;
            unint64_t v60 = *(void *)(v3 + v59);
            if (v60 == -1 || v60 >= *(void *)(v3 + *v6)) {
              break;
            }
            char v61 = *(unsigned char *)(*(void *)(v3 + *v19) + v60);
            *(void *)(v3 + v59) = v60 + 1;
            v58 |= (unint64_t)(v61 & 0x7F) << v56;
            if (v61 < 0)
            {
              v56 += 7;
              BOOL v26 = v57++ >= 9;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_111;
          }
          *(unsigned char *)(v3 + *v18) = 1;
LABEL_111:
          PBRepeatedInt32Add();
          goto LABEL_98;
        }
        if (!PBReaderPlaceMark()) {
          goto LABEL_129;
        }
        while (1)
        {
          id v40 = (int *)MEMORY[0x1E4F940C8];
          if (*(void *)(v3 + *v17) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + (int)*MEMORY[0x1E4F940C8])) {
            break;
          }
          char v41 = 0;
          unsigned int v42 = 0;
          uint64_t v43 = 0;
          while (1)
          {
            uint64_t v44 = *v17;
            unint64_t v45 = *(void *)(v3 + v44);
            if (v45 == -1 || v45 >= *(void *)(v3 + *v6)) {
              break;
            }
            char v46 = *(unsigned char *)(*(void *)(v3 + *v19) + v45);
            *(void *)(v3 + v44) = v45 + 1;
            v43 |= (unint64_t)(v46 & 0x7F) << v41;
            if (v46 < 0)
            {
              v41 += 7;
              BOOL v26 = v42++ >= 9;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_61;
          }
          *(unsigned char *)(v3 + *v40) = 1;
LABEL_61:
          PBRepeatedInt32Add();
        }
        PBReaderRecallMark();
        unint64_t v18 = (int *)MEMORY[0x1E4F940C8];
        char v15 = v68;
        goto LABEL_99;
      case 4:
        if (!v31 || (*(unsigned char *)(a1 + 92) & 0x20) != 0)
        {
          char v53 = PBReaderSkipValueWithTag();
          char v15 = v68;
          unint64_t v18 = (int *)MEMORY[0x1E4F940C8];
          if ((v53 & 1) == 0) {
            goto LABEL_127;
          }
          goto LABEL_99;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_129;
        }
        v67 = objc_alloc_init(GEOWiFiQualityProfile);
        if (!GEOWiFiQualityProfileReadAllFrom((uint64_t)v67, (void *)v3, v9 & 1)) {
          goto LABEL_128;
        }
        PBReaderRecallMark();
        -[GEOWiFiBSS _addNoFlagsQualities:](a1, v67);

        goto LABEL_98;
      case 5:
        if ((v8 & 1) == 0) {
          goto LABEL_85;
        }
        char v47 = 0;
        unsigned int v48 = 0;
        uint64_t v49 = 0;
        *(unsigned char *)(a1 + 92) |= 1u;
        while (2)
        {
          uint64_t v50 = *v17;
          unint64_t v51 = *(void *)(v3 + v50);
          if (v51 == -1 || v51 >= *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v52 = *(unsigned char *)(*(void *)(v3 + *v19) + v51);
            *(void *)(v3 + v50) = v51 + 1;
            v49 |= (unint64_t)(v52 & 0x7F) << v47;
            if (v52 < 0)
            {
              v47 += 7;
              BOOL v26 = v48++ >= 9;
              if (v26)
              {
                uint64_t v49 = 0;
                goto LABEL_90;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          uint64_t v49 = 0;
        }
LABEL_90:
        *(void *)(a1 + 72) = v49;
        goto LABEL_99;
      case 6:
        if (!v31)
        {
LABEL_85:
          char v54 = PBReaderSkipValueWithTag();
          unint64_t v18 = (int *)MEMORY[0x1E4F940C8];
          char v15 = v68;
          if ((v54 & 1) == 0)
          {
LABEL_127:
            char v62 = 0;
            goto LABEL_114;
          }
LABEL_99:
          if (!(v15 & 1 | (v7 != 0)) || *(void *)(v3 + *v17) >= *(void *)(v3 + *v6)) {
            goto LABEL_112;
          }
          continue;
        }
        if ((*(unsigned char *)(a1 + 92) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_129;
          }
          char v55 = 16 * *(unsigned char *)(a1 + 92);
LABEL_97:
          v7 += v55 >> 7;
LABEL_98:
          char v15 = v68;
          unint64_t v18 = (int *)MEMORY[0x1E4F940C8];
          goto LABEL_99;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_129;
        }
        v67 = objc_alloc_init(GEOLatLngE7);
        if (GEOLatLngE7ReadAllFrom((uint64_t)v67, (void *)v3))
        {
          PBReaderRecallMark();
          uint64_t v39 = 48;
LABEL_80:
          uint64_t v37 = *(void **)(a1 + v39);
          *(void *)(a1 + v39) = v67;
LABEL_81:

          --v7;
          goto LABEL_98;
        }
LABEL_128:

LABEL_129:
        char v62 = 0;
        char v15 = v68;
        unint64_t v18 = (int *)MEMORY[0x1E4F940C8];
LABEL_114:
        *(unsigned char *)(a1 + 92) |= 4u;
        *(unsigned char *)(a1 + 92) |= 0x10u;
        *(unsigned char *)(a1 + 92) |= 2u;
        *(unsigned char *)(a1 + 92) |= 0x20u;
        *(unsigned char *)(a1 + 92) |= 8u;
        if (v62)
        {
LABEL_124:
          unint64_t v3 = *(unsigned char *)(v3 + *v18) == 0;
          if (v15) {
            goto LABEL_125;
          }
          return v3;
        }
        unint64_t v3 = 0;
        if ((v15 & 1) == 0) {
          return v3;
        }
LABEL_125:
        v65 = *(void **)(a1 + 8);
        *(void *)(a1 + 8) = 0;

        return v3;
      default:
        int v38 = PBReaderSkipValueWithTag();
        unint64_t v18 = (int *)MEMORY[0x1E4F940C8];
        char v15 = v68;
        if (!v38) {
          goto LABEL_127;
        }
        goto LABEL_99;
    }
  }
}

void sub_189925D9C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189925F0C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189926398(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1899267C8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189927268(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOWiFiBSSCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  uint64_t v13 = *MEMORY[0x1E4F143B8];
  [a1[7] readAll:1];
  long long v10 = 0u;
  long long v11 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  id v2 = a1[8];
  uint64_t v3 = [v2 countByEnumeratingWithState:&v8 objects:v12 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v9;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v9 != v5) {
          objc_enumerationMutation(v2);
        }
        objc_msgSend(*(id *)(*((void *)&v8 + 1) + 8 * v6++), "readAll:", 1, (void)v8);
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v8 objects:v12 count:16];
    }
    while (v4);
  }

  return [a1[6] readAll:1];
}

unint64_t GEOWiFiBSSReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 84))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOWiFiBSSReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)long long v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 88));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 80) = [v8 position];
  *(_DWORD *)(a1 + 84) = [v8 length];
  if (a3) {
    long long v9 = (int *)&GEOWiFiBSSReadAllFrom_recursiveTag;
  }
  else {
    long long v9 = (int *)&GEOWiFiBSSReadAllFrom_initialTag;
  }
  unint64_t v6 = GEOWiFiBSSReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOWiFiBSSCallReadAllRecursiveWithoutSynchronized((id *)a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 88));
  return v6;
}

void sub_189927528(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOWiFiBSSReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t v4 = GEOWiFiBSSReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return v4;
}

void sub_18992758C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOWiFiBSSIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  unint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (!a1[*v4])
    {
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        unint64_t v10 = *(void *)&a1[v9];
        if (v10 == -1 || v10 >= *(void *)&a1[*v3]) {
          break;
        }
        char v11 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        BOOL v12 = v7++ >= 9;
        if (v12)
        {
          unint64_t v8 = 0;
          int v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v13 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v14 = v8 & 7;
      if (v13 || v14 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v14 != 2) {
            goto LABEL_63;
          }
          goto LABEL_20;
        case 2u:
          if (v14 != 2 || !PBReaderPlaceMark() || !GEOLatLngIsValid(a1)) {
            goto LABEL_63;
          }
          goto LABEL_48;
        case 3u:
          if (v14 == 2)
          {
            if (!PBReaderPlaceMark())
            {
LABEL_63:
              PBReaderRecallMark();
              return 0;
            }
LABEL_53:
            while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
            {
              unsigned int v27 = a1[*v4];
              if (a1[*v4]) {
                break;
              }
              while (1)
              {
                uint64_t v28 = *v2;
                unint64_t v29 = *(void *)&a1[v28];
                if (v29 == -1 || v29 >= *(void *)&a1[*v3]) {
                  break;
                }
                unint64_t v30 = v29 + 1;
                int v31 = *(char *)(*(void *)&a1[*v5] + v29);
                *(void *)&a1[v28] = v30;
                if (v31 < 0)
                {
                  BOOL v12 = v27++ >= 9;
                  if (!v12) {
                    continue;
                  }
                }
                goto LABEL_53;
              }
              a1[*v4] = 1;
            }
LABEL_48:
            PBReaderRecallMark();
          }
          else
          {
            if ((v8 & 7) != 0) {
              goto LABEL_63;
            }
            while (1)
            {
              uint64_t v16 = *v2;
              unint64_t v17 = *(void *)&a1[v16];
              if (v17 == -1 || v17 >= *(void *)&a1[*v3]) {
                break;
              }
              unint64_t v18 = v17 + 1;
              int v19 = *(char *)(*(void *)&a1[*v5] + v17);
              *(void *)&a1[v16] = v18;
              if (v19 < 0)
              {
                unsigned int v20 = v14++;
                if (v20 <= 8) {
                  continue;
                }
              }
              goto LABEL_50;
            }
LABEL_49:
            a1[*v4] = 1;
          }
LABEL_50:
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_62;
          }
          break;
        case 4u:
          if (v14 != 2 || !PBReaderPlaceMark() || !GEOWiFiQualityProfileIsValid(a1)) {
            goto LABEL_63;
          }
          goto LABEL_48;
        case 5u:
          if ((v8 & 7) != 0) {
            goto LABEL_63;
          }
          unsigned int v21 = 0;
          while (1)
          {
            uint64_t v22 = *v2;
            unint64_t v23 = *(void *)&a1[v22];
            if (v23 == -1 || v23 >= *(void *)&a1[*v3]) {
              goto LABEL_49;
            }
            unint64_t v24 = v23 + 1;
            int v25 = *(char *)(*(void *)&a1[*v5] + v23);
            *(void *)&a1[v22] = v24;
            if (v25 < 0 && v21++ <= 8) {
              continue;
            }
            goto LABEL_50;
          }
        case 6u:
          if (v14 == 2 && PBReaderPlaceMark() && GEOLatLngE7IsValid(a1)) {
            goto LABEL_48;
          }
          goto LABEL_63;
        default:
LABEL_20:
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_63;
          }
          goto LABEL_50;
      }
    }
  }
LABEL_62:
  BOOL v32 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v32;
}

BOOL GEOWiFiQualityProfileIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  unint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_30;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        unint64_t v10 = *(void *)&a1[v9];
        if (v10 == -1 || v10 >= *(void *)&a1[*v3]) {
          break;
        }
        char v11 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v13 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v14 = v8 & 7;
      if (v13 || v14 == 4) {
        goto LABEL_30;
      }
      if ((v8 >> 3) == 2) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if (v14 != 2 || !PBReaderPlaceMark() || !GEOWiFiQualityHoursIsValid(a1)) {
          goto LABEL_31;
        }
LABEL_27:
        PBReaderRecallMark();
        goto LABEL_29;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        goto LABEL_31;
      }
LABEL_29:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_30;
      }
    }
    if (v14 != 2 || !PBReaderPlaceMark() || !GEOWiFiQualityIndexIsValid(a1))
    {
LABEL_31:
      PBReaderRecallMark();
      return 0;
    }
    goto LABEL_27;
  }
LABEL_30:
  BOOL v16 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v16;
}

void sub_189927E18(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOWiFiBSSIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 88));
  BOOL v2 = (*(unsigned char *)(a1 + 92) & 0x7E) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 88));
  return v2;
}

void sub_189928350(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1899289CC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOWiFiESSReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 120));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 116);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 112)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  unsigned int v11 = (unsigned __int16)(vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int16 *)(a1 + 136)), (uint16x4_t)0xFFFBFFF8FFF9FFFALL), (int8x8_t)0x1000100010001))+ ((*(_WORD *)(a1 + 136) >> 10) & 1)+ ((*(_WORD *)(a1 + 136) >> 4) & 1)+ ((*(_WORD *)(a1 + 136) >> 9) & 1));
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v7])
    {
      case -3:
        char v8 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        BOOL v14 = v11 > 4;
        char v15 = v10 | v14;
        if (((v10 | v14) | v8)) {
          BOOL v16 = 0;
        }
        else {
          BOOL v16 = a3;
        }
        unint64_t v17 = (int *)MEMORY[0x1E4F940E8];
        unint64_t v18 = (int *)MEMORY[0x1E4F940C8];
        if (*(void *)(v3 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(v3 + *v6)) {
          goto LABEL_168;
        }
        char v99 = (v16 == 0) | v15;
        int v19 = (int *)MEMORY[0x1E4F940B8];
        char v98 = v10 | v14;
        break;
      default:
        ++v11;
LABEL_6:
        uint64_t v12 = v9;
        uint64_t v13 = v10;
LABEL_8:
        ++v7;
        uint64_t v9 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(unsigned char *)(v3 + *v18)) {
      goto LABEL_168;
    }
    char v20 = 0;
    unsigned int v21 = 0;
    unint64_t v22 = 0;
    while (1)
    {
      uint64_t v23 = *v17;
      unint64_t v24 = *(void *)(v3 + v23);
      if (v24 == -1 || v24 >= *(void *)(v3 + *v6)) {
        break;
      }
      char v25 = *(unsigned char *)(*(void *)(v3 + *v19) + v24);
      *(void *)(v3 + v23) = v24 + 1;
      v22 |= (unint64_t)(v25 & 0x7F) << v20;
      if ((v25 & 0x80) == 0) {
        goto LABEL_23;
      }
      v20 += 7;
      BOOL v26 = v21++ >= 9;
      if (v26)
      {
        unint64_t v22 = 0;
        int v27 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_25;
      }
    }
    *(unsigned char *)(v3 + *v18) = 1;
LABEL_23:
    int v27 = *(unsigned __int8 *)(v3 + *v18);
    if (*(unsigned char *)(v3 + *v18)) {
      unint64_t v22 = 0;
    }
LABEL_25:
    int v28 = v22 & 7;
    if (v27 || v28 == 4)
    {
LABEL_168:
      if (v15)
      {
        char v92 = 1;
        goto LABEL_170;
      }
      if (v16)
      {
        while (1)
        {
          int v93 = *v16++;
          __int16 v94 = 128;
          switch(v93)
          {
            case 0:
              goto LABEL_182;
            case 1:
              goto LABEL_181;
            case 2:
              __int16 v94 = 64;
              goto LABEL_181;
            case 3:
              __int16 v94 = 256;
              goto LABEL_181;
            case 4:
              __int16 v94 = 32;
              goto LABEL_181;
            case 5:
              __int16 v94 = 1024;
              goto LABEL_181;
            case 6:
              __int16 v94 = 16;
              goto LABEL_181;
            case 8:
              __int16 v94 = 512;
LABEL_181:
              *(_WORD *)(a1 + 136) |= v94;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_182;
    }
    unint64_t v30 = v22 >> 3;
    BOOL v31 = v15;
    if ((v99 & 1) == 0)
    {
      BOOL v32 = v16;
      do
      {
        int v34 = *v32++;
        int v33 = v34;
        BOOL v31 = v34 != 0;
        if (v34) {
          BOOL v35 = v33 == v30;
        }
        else {
          BOOL v35 = 1;
        }
      }
      while (!v35);
    }
    switch((int)v30)
    {
      case 1:
        if (!v31) {
          goto LABEL_124;
        }
        if ((*(_WORD *)(a1 + 136) & 0x80) == 0)
        {
          uint64_t v36 = PBReaderReadString();
          uint64_t v37 = 72;
          goto LABEL_50;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_187;
        }
        __int16 v79 = *(_WORD *)(a1 + 136) << 8;
        goto LABEL_149;
      case 2:
        if (!v31 || (*(_WORD *)(a1 + 136) & 0x40) != 0) {
          goto LABEL_124;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_187;
        }
        v97 = objc_alloc_init(GEOWiFiBSS);
        if (!GEOWiFiBSSReadAllFrom((uint64_t)v97, (void *)v3, v9 & 1)) {
          goto LABEL_186;
        }
        PBReaderRecallMark();
        -[GEOWiFiESS _addNoFlagsBss:](a1, v97);
        goto LABEL_98;
      case 3:
        if (!v31) {
          goto LABEL_124;
        }
        if ((*(_WORD *)(a1 + 136) & 0x100) == 0)
        {
          uint64_t v36 = PBReaderReadString();
          uint64_t v37 = 80;
LABEL_50:
          uint64_t v39 = *(void **)(a1 + v37);
          *(void *)(a1 + v37) = v36;

          unint64_t v18 = (int *)MEMORY[0x1E4F940C8];
          char v15 = v98;
          --v7;
          goto LABEL_125;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_187;
        }
        __int16 v79 = *(_WORD *)(a1 + 136) << 7;
LABEL_149:
        v7 += v79 >> 15;
        goto LABEL_167;
      case 4:
        if (!v31 || (*(_WORD *)(a1 + 136) & 0x20) != 0) {
          goto LABEL_124;
        }
        if (v28 != 2)
        {
          char v80 = 0;
          unsigned int v81 = 0;
          uint64_t v82 = 0;
          while (1)
          {
            uint64_t v83 = *v17;
            unint64_t v84 = *(void *)(v3 + v83);
            if (v84 == -1 || v84 >= *(void *)(v3 + *v6)) {
              goto LABEL_165;
            }
            char v85 = *(unsigned char *)(*(void *)(v3 + *v19) + v84);
            *(void *)(v3 + v83) = v84 + 1;
            v82 |= (unint64_t)(v85 & 0x7F) << v80;
            if (v85 < 0)
            {
              v80 += 7;
              BOOL v26 = v81++ >= 9;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_166;
          }
        }
        if (!PBReaderPlaceMark()) {
          goto LABEL_187;
        }
        while (1)
        {
          id v40 = (int *)MEMORY[0x1E4F940C8];
          if (*(void *)(v3 + *v17) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + (int)*MEMORY[0x1E4F940C8])) {
            goto LABEL_150;
          }
          char v41 = 0;
          unsigned int v42 = 0;
          uint64_t v43 = 0;
          while (1)
          {
            uint64_t v44 = *v17;
            unint64_t v45 = *(void *)(v3 + v44);
            if (v45 == -1 || v45 >= *(void *)(v3 + *v6)) {
              break;
            }
            char v46 = *(unsigned char *)(*(void *)(v3 + *v19) + v45);
            *(void *)(v3 + v44) = v45 + 1;
            v43 |= (unint64_t)(v46 & 0x7F) << v41;
            if (v46 < 0)
            {
              v41 += 7;
              BOOL v26 = v42++ >= 9;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_65;
          }
          *(unsigned char *)(v3 + *v40) = 1;
LABEL_65:
          PBRepeatedInt32Add();
        }
      case 5:
        if (!v31 || (*(_WORD *)(a1 + 136) & 0x400) != 0) {
          goto LABEL_124;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_187;
        }
        v97 = objc_alloc_init(GEOWiFiQualityProfile);
        if (GEOWiFiQualityProfileReadAllFrom((uint64_t)v97, (void *)v3, v9 & 1))
        {
          PBReaderRecallMark();
          -[GEOWiFiESS _addNoFlagsQualities:](a1, v97);
LABEL_98:
          unint64_t v60 = v97;
LABEL_99:

LABEL_167:
          char v15 = v98;
          unint64_t v18 = (int *)MEMORY[0x1E4F940C8];
LABEL_125:
          if (!(v15 & 1 | (v7 != 0)) || *(void *)(v3 + *v17) >= *(void *)(v3 + *v6)) {
            goto LABEL_168;
          }
          continue;
        }
LABEL_186:

LABEL_187:
        char v92 = 0;
        char v15 = v98;
        unint64_t v18 = (int *)MEMORY[0x1E4F940C8];
LABEL_170:
        *(_WORD *)(a1 + 136) |= 0x80u;
        *(_WORD *)(a1 + 136) |= 0x40u;
        *(_WORD *)(a1 + 136) |= 0x100u;
        *(_WORD *)(a1 + 136) |= 0x20u;
        *(_WORD *)(a1 + 136) |= 0x400u;
        *(_WORD *)(a1 + 136) |= 0x10u;
        *(_WORD *)(a1 + 136) |= 0x200u;
        if (v92)
        {
LABEL_182:
          unint64_t v3 = *(unsigned char *)(v3 + *v18) == 0;
          if (v15) {
            goto LABEL_183;
          }
          return v3;
        }
        unint64_t v3 = 0;
        if ((v15 & 1) == 0) {
          return v3;
        }
LABEL_183:
        v95 = *(void **)(a1 + 8);
        *(void *)(a1 + 8) = 0;

        return v3;
      case 6:
        if (!v31 || (*(_WORD *)(a1 + 136) & 0x10) != 0) {
          goto LABEL_124;
        }
        if (v28 != 2)
        {
          char v86 = 0;
          unsigned int v87 = 0;
          uint64_t v88 = 0;
          while (1)
          {
            uint64_t v89 = *v17;
            unint64_t v90 = *(void *)(v3 + v89);
            if (v90 == -1 || v90 >= *(void *)(v3 + *v6)) {
              break;
            }
            char v91 = *(unsigned char *)(*(void *)(v3 + *v19) + v90);
            *(void *)(v3 + v89) = v90 + 1;
            v88 |= (unint64_t)(v91 & 0x7F) << v86;
            if (v91 < 0)
            {
              v86 += 7;
              BOOL v26 = v87++ >= 9;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_166;
          }
LABEL_165:
          *(unsigned char *)(v3 + *v18) = 1;
LABEL_166:
          PBRepeatedInt32Add();
          goto LABEL_167;
        }
        if (!PBReaderPlaceMark()) {
          goto LABEL_187;
        }
        while (1)
        {
          char v47 = (int *)MEMORY[0x1E4F940C8];
          if (*(void *)(v3 + *v17) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + (int)*MEMORY[0x1E4F940C8])) {
            break;
          }
          char v48 = 0;
          unsigned int v49 = 0;
          uint64_t v50 = 0;
          while (1)
          {
            uint64_t v51 = *v17;
            unint64_t v52 = *(void *)(v3 + v51);
            if (v52 == -1 || v52 >= *(void *)(v3 + *v6)) {
              break;
            }
            char v53 = *(unsigned char *)(*(void *)(v3 + *v19) + v52);
            *(void *)(v3 + v51) = v52 + 1;
            v50 |= (unint64_t)(v53 & 0x7F) << v48;
            if (v53 < 0)
            {
              v48 += 7;
              BOOL v26 = v49++ >= 9;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_85;
          }
          *(unsigned char *)(v3 + *v47) = 1;
LABEL_85:
          PBRepeatedInt32Add();
        }
LABEL_150:
        PBReaderRecallMark();
        unint64_t v18 = (int *)MEMORY[0x1E4F940C8];
        char v15 = v98;
        goto LABEL_125;
      case 7:
        if ((v8 & 1) == 0) {
          goto LABEL_124;
        }
        char v54 = 0;
        unsigned int v55 = 0;
        uint64_t v56 = 0;
        *(_WORD *)(a1 + 136) |= 1u;
        while (2)
        {
          uint64_t v57 = *v17;
          unint64_t v58 = *(void *)(v3 + v57);
          if (v58 == -1 || v58 >= *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v59 = *(unsigned char *)(*(void *)(v3 + *v19) + v58);
            *(void *)(v3 + v57) = v58 + 1;
            v56 |= (unint64_t)(v59 & 0x7F) << v54;
            if (v59 < 0)
            {
              v54 += 7;
              BOOL v26 = v55++ >= 9;
              if (v26)
              {
                uint64_t v56 = 0;
                goto LABEL_131;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          uint64_t v56 = 0;
        }
LABEL_131:
        *(void *)(a1 + 104) = v56;
        goto LABEL_125;
      case 8:
        if (!v31 || (*(_WORD *)(a1 + 136) & 0x200) != 0) {
          goto LABEL_124;
        }
        PBReaderReadString();
        unint64_t v60 = (GEOWiFiBSS *)objc_claimAutoreleasedReturnValue();
        if (!v60) {
          goto LABEL_99;
        }
        v97 = v60;
        -[GEOWiFiESS _addNoFlagsOwnerIdentifier:](a1, v60);
        goto LABEL_98;
      case 9:
        if ((v8 & 1) == 0) {
          goto LABEL_124;
        }
        char v61 = 0;
        unsigned int v62 = 0;
        uint64_t v63 = 0;
        *(_WORD *)(a1 + 136) |= 2u;
        while (2)
        {
          uint64_t v64 = *v17;
          unint64_t v65 = *(void *)(v3 + v64);
          if (v65 == -1 || v65 >= *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v66 = *(unsigned char *)(*(void *)(v3 + *v19) + v65);
            *(void *)(v3 + v64) = v65 + 1;
            v63 |= (unint64_t)(v66 & 0x7F) << v61;
            if (v66 < 0)
            {
              v61 += 7;
              BOOL v26 = v62++ >= 9;
              if (v26)
              {
                LODWORD(v63) = 0;
                goto LABEL_135;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          LODWORD(v63) = 0;
        }
LABEL_135:
        uint64_t v78 = 124;
        goto LABEL_144;
      case 10:
        if ((v8 & 1) == 0) {
          goto LABEL_124;
        }
        char v67 = 0;
        unsigned int v68 = 0;
        uint64_t v63 = 0;
        *(_WORD *)(a1 + 136) |= 4u;
        while (2)
        {
          uint64_t v69 = *v17;
          unint64_t v70 = *(void *)(v3 + v69);
          if (v70 == -1 || v70 >= *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v71 = *(unsigned char *)(*(void *)(v3 + *v19) + v70);
            *(void *)(v3 + v69) = v70 + 1;
            v63 |= (unint64_t)(v71 & 0x7F) << v67;
            if (v71 < 0)
            {
              v67 += 7;
              BOOL v26 = v68++ >= 9;
              if (v26)
              {
                LODWORD(v63) = 0;
                goto LABEL_139;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          LODWORD(v63) = 0;
        }
LABEL_139:
        uint64_t v78 = 128;
        goto LABEL_144;
      case 11:
        if (v8)
        {
          char v72 = 0;
          unsigned int v73 = 0;
          uint64_t v63 = 0;
          *(_WORD *)(a1 + 136) |= 8u;
          while (1)
          {
            uint64_t v74 = *v17;
            unint64_t v75 = *(void *)(v3 + v74);
            if (v75 == -1 || v75 >= *(void *)(v3 + *v6)) {
              break;
            }
            char v76 = *(unsigned char *)(*(void *)(v3 + *v19) + v75);
            *(void *)(v3 + v74) = v75 + 1;
            v63 |= (unint64_t)(v76 & 0x7F) << v72;
            if ((v76 & 0x80) == 0) {
              goto LABEL_141;
            }
            v72 += 7;
            BOOL v26 = v73++ >= 9;
            if (v26)
            {
              LODWORD(v63) = 0;
              goto LABEL_143;
            }
          }
          *(unsigned char *)(v3 + *v18) = 1;
LABEL_141:
          if (*(unsigned char *)(v3 + *v18)) {
            LODWORD(v63) = 0;
          }
LABEL_143:
          uint64_t v78 = 132;
LABEL_144:
          *(_DWORD *)(a1 + v78) = v63;
        }
        else
        {
LABEL_124:
          char v77 = PBReaderSkipValueWithTag();
          unint64_t v18 = (int *)MEMORY[0x1E4F940C8];
          char v15 = v98;
          if ((v77 & 1) == 0)
          {
LABEL_185:
            char v92 = 0;
            goto LABEL_170;
          }
        }
        goto LABEL_125;
      default:
        int v38 = PBReaderSkipValueWithTag();
        unint64_t v18 = (int *)MEMORY[0x1E4F940C8];
        char v15 = v98;
        if (!v38) {
          goto LABEL_185;
        }
        goto LABEL_125;
    }
  }
}

void sub_1899297E8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189929BAC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189929D1C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18992A1C4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18992A588(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18992AAB8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18992C878(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOWiFiESSCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v22 = *MEMORY[0x1E4F143B8];
  long long v16 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  id v2 = *(id *)(a1 + 64);
  uint64_t v3 = [v2 countByEnumeratingWithState:&v16 objects:v21 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v17;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v17 != v5) {
          objc_enumerationMutation(v2);
        }
        [*(id *)(*((void *)&v16 + 1) + 8 * v6++) readAll:1];
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v16 objects:v21 count:16];
    }
    while (v4);
  }

  long long v14 = 0u;
  long long v15 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  id v7 = *(id *)(a1 + 96);
  uint64_t v8 = [v7 countByEnumeratingWithState:&v12 objects:v20 count:16];
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)v13;
    do
    {
      uint64_t v11 = 0;
      do
      {
        if (*(void *)v13 != v10) {
          objc_enumerationMutation(v7);
        }
        objc_msgSend(*(id *)(*((void *)&v12 + 1) + 8 * v11++), "readAll:", 1, (void)v12);
      }
      while (v9 != v11);
      uint64_t v9 = [v7 countByEnumeratingWithState:&v12 objects:v20 count:16];
    }
    while (v9);
  }
}

unint64_t GEOWiFiESSReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 116))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOWiFiESSReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 120));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 112) = [v8 position];
  *(_DWORD *)(a1 + 116) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOWiFiESSReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOWiFiESSReadAllFrom_initialTag;
  }
  unint64_t v6 = GEOWiFiESSReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOWiFiESSCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 120));
  return v6;
}

void sub_18992CBA8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOWiFiESSReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t v4 = GEOWiFiESSReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return v4;
}

void sub_18992CC0C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOWiFiESSIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  unint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (!a1[*v4])
    {
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        unint64_t v10 = *(void *)&a1[v9];
        if (v10 == -1 || v10 >= *(void *)&a1[*v3]) {
          break;
        }
        char v11 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        BOOL v12 = v7++ >= 9;
        if (v12)
        {
          unint64_t v8 = 0;
          int v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v13 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v14 = v8 & 7;
      if (v13 || v14 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v14 != 2) {
            goto LABEL_105;
          }
          goto LABEL_54;
        case 2u:
          if (v14 != 2 || !PBReaderPlaceMark() || !GEOWiFiBSSIsValid(a1)) {
            goto LABEL_105;
          }
          goto LABEL_37;
        case 3u:
          if (v14 == 2) {
            goto LABEL_54;
          }
          goto LABEL_105;
        case 4u:
          if (v14 != 2)
          {
            if ((v8 & 7) != 0) {
              goto LABEL_105;
            }
            while (1)
            {
              uint64_t v16 = *v2;
              unint64_t v17 = *(void *)&a1[v16];
              if (v17 == -1 || v17 >= *(void *)&a1[*v3]) {
                goto LABEL_80;
              }
              unint64_t v18 = v17 + 1;
              int v19 = *(char *)(*(void *)&a1[*v5] + v17);
              *(void *)&a1[v16] = v18;
              if (v19 < 0)
              {
                unsigned int v20 = v14++;
                if (v20 <= 8) {
                  continue;
                }
              }
              goto LABEL_81;
            }
          }
          if (!PBReaderPlaceMark()) {
            goto LABEL_105;
          }
LABEL_84:
          while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
          {
            unsigned int v47 = a1[*v4];
            if (a1[*v4]) {
              break;
            }
            while (1)
            {
              uint64_t v48 = *v2;
              unint64_t v49 = *(void *)&a1[v48];
              if (v49 == -1 || v49 >= *(void *)&a1[*v3]) {
                break;
              }
              unint64_t v50 = v49 + 1;
              int v51 = *(char *)(*(void *)&a1[*v5] + v49);
              *(void *)&a1[v48] = v50;
              if (v51 < 0)
              {
                BOOL v12 = v47++ >= 9;
                if (!v12) {
                  continue;
                }
              }
              goto LABEL_84;
            }
            a1[*v4] = 1;
          }
          goto LABEL_37;
        case 5u:
          if (v14 == 2 && PBReaderPlaceMark() && GEOWiFiQualityProfileIsValid(a1)) {
            goto LABEL_37;
          }
          goto LABEL_105;
        case 6u:
          if (v14 == 2)
          {
            if (!PBReaderPlaceMark())
            {
LABEL_105:
              PBReaderRecallMark();
              return 0;
            }
LABEL_94:
            while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
            {
              unsigned int v52 = a1[*v4];
              if (a1[*v4]) {
                break;
              }
              while (1)
              {
                uint64_t v53 = *v2;
                unint64_t v54 = *(void *)&a1[v53];
                if (v54 == -1 || v54 >= *(void *)&a1[*v3]) {
                  break;
                }
                unint64_t v55 = v54 + 1;
                int v56 = *(char *)(*(void *)&a1[*v5] + v54);
                *(void *)&a1[v53] = v55;
                if (v56 < 0)
                {
                  BOOL v12 = v52++ >= 9;
                  if (!v12) {
                    continue;
                  }
                }
                goto LABEL_94;
              }
              a1[*v4] = 1;
            }
LABEL_37:
            PBReaderRecallMark();
          }
          else
          {
            if ((v8 & 7) != 0) {
              goto LABEL_105;
            }
            while (1)
            {
              uint64_t v21 = *v2;
              unint64_t v22 = *(void *)&a1[v21];
              if (v22 == -1 || v22 >= *(void *)&a1[*v3]) {
                break;
              }
              unint64_t v23 = v22 + 1;
              int v24 = *(char *)(*(void *)&a1[*v5] + v22);
              *(void *)&a1[v21] = v23;
              if (v24 < 0)
              {
                unsigned int v25 = v14++;
                if (v25 <= 8) {
                  continue;
                }
              }
              goto LABEL_81;
            }
LABEL_80:
            a1[*v4] = 1;
          }
LABEL_81:
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_103;
          }
          break;
        case 7u:
          if ((v8 & 7) != 0) {
            goto LABEL_105;
          }
          unsigned int v26 = 0;
          while (1)
          {
            uint64_t v27 = *v2;
            unint64_t v28 = *(void *)&a1[v27];
            if (v28 == -1 || v28 >= *(void *)&a1[*v3]) {
              goto LABEL_80;
            }
            unint64_t v29 = v28 + 1;
            int v30 = *(char *)(*(void *)&a1[*v5] + v28);
            *(void *)&a1[v27] = v29;
            if (v30 < 0)
            {
              BOOL v31 = v26++ > 8;
              if (!v31) {
                continue;
              }
            }
            goto LABEL_81;
          }
        case 8u:
          if (v14 == 2) {
            goto LABEL_54;
          }
          goto LABEL_105;
        case 9u:
          if ((v8 & 7) != 0) {
            goto LABEL_105;
          }
          unsigned int v32 = 0;
          while (1)
          {
            uint64_t v33 = *v2;
            unint64_t v34 = *(void *)&a1[v33];
            if (v34 == -1 || v34 >= *(void *)&a1[*v3]) {
              goto LABEL_80;
            }
            unint64_t v35 = v34 + 1;
            int v36 = *(char *)(*(void *)&a1[*v5] + v34);
            *(void *)&a1[v33] = v35;
            if (v36 < 0)
            {
              BOOL v31 = v32++ > 8;
              if (!v31) {
                continue;
              }
            }
            goto LABEL_81;
          }
        case 0xAu:
          if ((v8 & 7) != 0) {
            goto LABEL_105;
          }
          unsigned int v37 = 0;
          while (1)
          {
            uint64_t v38 = *v2;
            unint64_t v39 = *(void *)&a1[v38];
            if (v39 == -1 || v39 >= *(void *)&a1[*v3]) {
              goto LABEL_80;
            }
            unint64_t v40 = v39 + 1;
            int v41 = *(char *)(*(void *)&a1[*v5] + v39);
            *(void *)&a1[v38] = v40;
            if (v41 < 0)
            {
              BOOL v31 = v37++ > 8;
              if (!v31) {
                continue;
              }
            }
            goto LABEL_81;
          }
        case 0xBu:
          if ((v8 & 7) != 0) {
            goto LABEL_105;
          }
          unsigned int v42 = 0;
          while (1)
          {
            uint64_t v43 = *v2;
            unint64_t v44 = *(void *)&a1[v43];
            if (v44 == -1 || v44 >= *(void *)&a1[*v3]) {
              goto LABEL_80;
            }
            unint64_t v45 = v44 + 1;
            int v46 = *(char *)(*(void *)&a1[*v5] + v44);
            *(void *)&a1[v43] = v45;
            if (v46 < 0)
            {
              BOOL v31 = v42++ > 8;
              if (!v31) {
                continue;
              }
            }
            goto LABEL_81;
          }
        default:
LABEL_54:
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_105;
          }
          goto LABEL_81;
      }
    }
  }
LABEL_103:
  BOOL v57 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v57;
}

void sub_18992D638(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOWiFiESSIsDirty(uint64_t a1)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 120));
  if ((*(_WORD *)(a1 + 136) & 0xFF0) != 0) {
    return 1;
  }
  if ((*(_WORD *)(a1 + 136) & 0x400) == 0) {
    return 0;
  }
  long long v9 = 0u;
  long long v10 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  id v3 = *(id *)(a1 + 96);
  uint64_t v2 = [v3 countByEnumeratingWithState:&v7 objects:v11 count:16];
  if (v2)
  {
    uint64_t v4 = *(void *)v8;
    while (2)
    {
      for (uint64_t i = 0; i != v2; ++i)
      {
        if (*(void *)v8 != v4) {
          objc_enumerationMutation(v3);
        }
        if (GEOWiFiQualityProfileIsDirty(*(os_unfair_lock_s **)(*((void *)&v7 + 1) + 8 * i)))
        {
          uint64_t v2 = 1;
          goto LABEL_15;
        }
      }
      uint64_t v2 = [v3 countByEnumeratingWithState:&v7 objects:v11 count:16];
      if (v2) {
        continue;
      }
      break;
    }
  }
LABEL_15:

  return v2;
}

os_unfair_lock_s *GEOWiFiESSIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t v2 = _GEOWiFiESSIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 30);
    return (os_unfair_lock_s *)v2;
  }
  return result;
}

void sub_18992E09C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOWiFiESSMatchReadAllFrom(uint64_t a1, void *a2, int a3)
{
  uint64_t v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    char v6 = (int *)MEMORY[0x1E4F940E8];
    long long v7 = (int *)MEMORY[0x1E4F940E0];
    long long v8 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v5[*MEMORY[0x1E4F940E8]] < *(void *)&v5[*MEMORY[0x1E4F940E0]])
    {
      long long v9 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v5[*v8]) {
          break;
        }
        char v10 = 0;
        unsigned int v11 = 0;
        unint64_t v12 = 0;
        while (1)
        {
          uint64_t v13 = *v6;
          unint64_t v14 = *(void *)&v5[v13];
          if (v14 == -1 || v14 >= *(void *)&v5[*v7]) {
            break;
          }
          char v15 = *(unsigned char *)(*(void *)&v5[*v9] + v14);
          *(void *)&v5[v13] = v14 + 1;
          v12 |= (unint64_t)(v15 & 0x7F) << v10;
          if ((v15 & 0x80) == 0) {
            goto LABEL_13;
          }
          v10 += 7;
          BOOL v16 = v11++ >= 9;
          if (v16)
          {
            unint64_t v12 = 0;
            int v17 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        int v17 = v5[*v8];
        if (v5[*v8]) {
          unint64_t v12 = 0;
        }
LABEL_15:
        if (v17 || (v12 & 7) == 4) {
          break;
        }
        if ((v12 >> 3) == 2)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_40;
          }
          unsigned int v25 = objc_alloc_init(GEOWiFiESS);
          if (!GEOWiFiESSReadAllFrom((uint64_t)v25, v5, a3))
          {

            goto LABEL_40;
          }
          PBReaderRecallMark();
          unsigned int v26 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = v25;
        }
        else if ((v12 >> 3) == 1)
        {
          char v19 = 0;
          unsigned int v20 = 0;
          uint64_t v21 = 0;
          *(unsigned char *)(a1 + 20) |= 1u;
          while (1)
          {
            uint64_t v22 = *v6;
            unint64_t v23 = *(void *)&v5[v22];
            if (v23 == -1 || v23 >= *(void *)&v5[*v7]) {
              break;
            }
            char v24 = *(unsigned char *)(*(void *)&v5[*v9] + v23);
            *(void *)&v5[v22] = v23 + 1;
            v21 |= (unint64_t)(v24 & 0x7F) << v19;
            if ((v24 & 0x80) == 0) {
              goto LABEL_34;
            }
            v19 += 7;
            BOOL v16 = v20++ >= 9;
            if (v16)
            {
              LODWORD(v21) = 0;
              goto LABEL_36;
            }
          }
          v5[*v8] = 1;
LABEL_34:
          if (v5[*v8]) {
            LODWORD(v21) = 0;
          }
LABEL_36:
          *(_DWORD *)(a1 + 16) = v21;
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_40;
        }
      }
      while (*(void *)&v5[*v6] < *(void *)&v5[*v7]);
    }
    BOOL v27 = v5[*v8] == 0;
  }
  else
  {
LABEL_40:
    BOOL v27 = 0;
  }
  objc_sync_exit(v5);

  return v27;
}

void sub_18992F014(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOWiFiESSMatchReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOWiFiESSMatchReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18992F078(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOWiFiESSMatchIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  uint64_t v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        unint64_t v10 = *(void *)&a1[v9];
        if (v10 == -1 || v10 >= *(void *)&a1[*v3]) {
          break;
        }
        char v11 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v13 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v14 = v8 & 7;
      if (v13 || v14 == 4) {
        break;
      }
      if ((v8 >> 3) == 2)
      {
        if (v14 != 2 || !PBReaderPlaceMark() || !GEOWiFiESSIsValid(a1))
        {
LABEL_38:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_38;
        }
        unsigned int v16 = 0;
        while (1)
        {
          uint64_t v17 = *v2;
          unint64_t v18 = *(void *)&a1[v17];
          if (v18 == -1 || v18 >= *(void *)&a1[*v3]) {
            break;
          }
          unint64_t v19 = v18 + 1;
          int v20 = *(char *)(*(void *)&a1[*v5] + v18);
          *(void *)&a1[v17] = v19;
          if (v20 < 0 && v16++ <= 8) {
            continue;
          }
          goto LABEL_35;
        }
        a1[*v4] = 1;
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_38;
      }
LABEL_35:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v22 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v22;
}

void sub_18992F864(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t GEOWiFiQualityHoursReadSpecified(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 68);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 64)];
  char v7 = 0;
  uint64_t v8 = 0;
  char v9 = 0;
  int v10 = ((*(unsigned __int8 *)(a1 + 76) >> 1) & 1) + (*(unsigned char *)(a1 + 76) & 1);
  while (1)
  {
    unsigned int v11 = a3[v8];
    if (v11 >= 0xFFFFFFFE)
    {
      char v9 = 1;
      goto LABEL_9;
    }
    if (v11 != -3) {
      break;
    }
    char v7 = 1;
LABEL_9:
    ++v8;
  }
  if (v11)
  {
    ++v10;
    goto LABEL_9;
  }
  BOOL v12 = (v9 & 1 | v10) != 0;
  if (((v9 & 1 | v10) != 0) | v7 & 1) {
    int v13 = 0;
  }
  else {
    int v13 = a3;
  }
  int v14 = (int *)MEMORY[0x1E4F940E8];
  char v15 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(v3 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(v3 + *v6))
  {
    if (v13) {
      BOOL v16 = (v9 & 1 | v10) != 0;
    }
    else {
      BOOL v16 = 1;
    }
    if (v8) {
      BOOL v17 = 1;
    }
    else {
      BOOL v17 = (v9 & 1 | v10) != 0;
    }
    BOOL v52 = v17;
    unint64_t v18 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(v3 + *v15)) {
        goto LABEL_82;
      }
      char v19 = 0;
      unsigned int v20 = 0;
      unint64_t v21 = 0;
      while (1)
      {
        uint64_t v22 = *v14;
        unint64_t v23 = *(void *)(v3 + v22);
        if (v23 == -1 || v23 >= *(void *)(v3 + *v6)) {
          break;
        }
        char v24 = *(unsigned char *)(*(void *)(v3 + *v18) + v23);
        *(void *)(v3 + v22) = v23 + 1;
        v21 |= (unint64_t)(v24 & 0x7F) << v19;
        if ((v24 & 0x80) == 0) {
          goto LABEL_30;
        }
        v19 += 7;
        BOOL v25 = v20++ >= 9;
        if (v25)
        {
          unint64_t v21 = 0;
          int v26 = *(unsigned __int8 *)(v3 + *v15);
          goto LABEL_32;
        }
      }
      *(unsigned char *)(v3 + *v15) = 1;
LABEL_30:
      int v26 = *(unsigned __int8 *)(v3 + *v15);
      if (*(unsigned char *)(v3 + *v15)) {
        unint64_t v21 = 0;
      }
LABEL_32:
      int v27 = v21 & 7;
      if (v26 || v27 == 4) {
        goto LABEL_82;
      }
      unint64_t v29 = v21 >> 3;
      BOOL v30 = v12;
      if (!v16)
      {
        BOOL v31 = v13;
        do
        {
          int v33 = *v31++;
          int v32 = v33;
          BOOL v30 = v33 != 0;
          if (v33) {
            BOOL v34 = v32 == v29;
          }
          else {
            BOOL v34 = 1;
          }
        }
        while (!v34);
      }
      if (v29 == 2) {
        break;
      }
      if (v29 != 1)
      {
        if (!PBReaderSkipValueWithTag()) {
          goto LABEL_96;
        }
        goto LABEL_68;
      }
      if (!v30 || (*(unsigned char *)(a1 + 76) & 1) != 0) {
        goto LABEL_67;
      }
      if (v27 != 2)
      {
        char v41 = 0;
        unsigned int v42 = 0;
        uint64_t v43 = 0;
        while (1)
        {
          uint64_t v44 = *v14;
          unint64_t v45 = *(void *)(v3 + v44);
          if (v45 == -1 || v45 >= *(void *)(v3 + *v6)) {
            break;
          }
          char v46 = *(unsigned char *)(*(void *)(v3 + *v18) + v45);
          *(void *)(v3 + v44) = v45 + 1;
          v43 |= (unint64_t)(v46 & 0x7F) << v41;
          if (v46 < 0)
          {
            v41 += 7;
            BOOL v25 = v42++ >= 9;
            if (!v25) {
              continue;
            }
          }
          goto LABEL_81;
        }
        *(unsigned char *)(v3 + *v15) = 1;
LABEL_81:
        PBRepeatedInt32Add();
        goto LABEL_68;
      }
      if (!PBReaderPlaceMark()) {
        goto LABEL_96;
      }
      while (*(void *)(v3 + *v14) < *(void *)(v3 + *v6) && !*(unsigned char *)(v3 + *v15))
      {
        char v35 = 0;
        unsigned int v36 = 0;
        uint64_t v37 = 0;
        while (1)
        {
          uint64_t v38 = *v14;
          unint64_t v39 = *(void *)(v3 + v38);
          if (v39 == -1 || v39 >= *(void *)(v3 + *v6)) {
            break;
          }
          char v40 = *(unsigned char *)(*(void *)(v3 + *v18) + v39);
          *(void *)(v3 + v38) = v39 + 1;
          v37 |= (unint64_t)(v40 & 0x7F) << v35;
          if (v40 < 0)
          {
            v35 += 7;
            BOOL v25 = v36++ >= 9;
            if (!v25) {
              continue;
            }
          }
          goto LABEL_59;
        }
        *(unsigned char *)(v3 + *v15) = 1;
LABEL_59:
        PBRepeatedInt32Add();
      }
      PBReaderRecallMark();
      if (!v52) {
        goto LABEL_82;
      }
LABEL_69:
      if (*(void *)(v3 + *v14) >= *(void *)(v3 + *v6)) {
        goto LABEL_82;
      }
    }
    if (!v30 || (*(unsigned char *)(a1 + 76) & 2) != 0)
    {
LABEL_67:
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        goto LABEL_96;
      }
    }
    else
    {
      if (!PBReaderPlaceMark()
        || (-[GEOWiFiQualityHours _reserveTimeRanges:](a1, 1uLL),
            !GEOWiFiQualityTimeRangeReadAllFrom(*(void *)(a1 + 40) + 12 * *(void *)(a1 + 48), v3)))
      {
LABEL_96:
        char v47 = 0;
        goto LABEL_84;
      }
      PBReaderRecallMark();
      ++*(void *)(a1 + 48);
    }
LABEL_68:
    if (!v52) {
      goto LABEL_82;
    }
    goto LABEL_69;
  }
LABEL_82:
  if (!v12)
  {
    if (v13)
    {
      do
      {
        while (1)
        {
          int v49 = *v13++;
          int v48 = v49;
          if (v49 != 1 && v48 != 2) {
            break;
          }
          *(unsigned char *)(a1 + 76) |= v48;
        }
      }
      while (v48);
    }
    goto LABEL_93;
  }
  char v47 = 1;
LABEL_84:
  *(unsigned char *)(a1 + 76) |= 1u;
  *(unsigned char *)(a1 + 76) |= 2u;
  if (v47)
  {
LABEL_93:
    uint64_t v3 = *(unsigned char *)(v3 + *v15) == 0;
    if (v12) {
      goto LABEL_94;
    }
    return v3;
  }
  uint64_t v3 = 0;
  if (!v12) {
    return v3;
  }
LABEL_94:
  unint64_t v50 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = 0;

  return v3;
}

void sub_189930298(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189930E24(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t GEOWiFiQualityHoursReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 68))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOWiFiQualityHoursReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)int v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 72));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 64) = [v8 position];
  *(_DWORD *)(a1 + 68) = [v8 length];
  if (a3) {
    char v9 = (int *)&GEOWiFiQualityHoursReadAllFrom_recursiveTag;
  }
  else {
    char v9 = (int *)&GEOWiFiQualityHoursReadAllFrom_initialTag;
  }
  uint64_t Specified = GEOWiFiQualityHoursReadSpecified(a1, (uint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
  return Specified;
}

void sub_189930FB4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t GEOWiFiQualityHoursReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  uint64_t AllFrom = GEOWiFiQualityHoursReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189931018(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOWiFiQualityHoursIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  uint64_t v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_45;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        unint64_t v10 = *(void *)&a1[v9];
        if (v10 == -1 || v10 >= *(void *)&a1[*v3]) {
          break;
        }
        char v11 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        BOOL v12 = v7++ >= 9;
        if (v12)
        {
          unint64_t v8 = 0;
          int v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v13 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v14 = v8 & 7;
      if (v13 || v14 == 4) {
        goto LABEL_45;
      }
      if ((v8 >> 3) == 2) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if (v14 == 2)
        {
          if (!PBReaderPlaceMark()) {
            goto LABEL_47;
          }
LABEL_34:
          while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
          {
            unsigned int v21 = a1[*v4];
            if (a1[*v4]) {
              break;
            }
            while (1)
            {
              uint64_t v22 = *v2;
              unint64_t v23 = *(void *)&a1[v22];
              if (v23 == -1 || v23 >= *(void *)&a1[*v3]) {
                break;
              }
              unint64_t v24 = v23 + 1;
              int v25 = *(char *)(*(void *)&a1[*v5] + v23);
              *(void *)&a1[v22] = v24;
              if (v25 < 0)
              {
                BOOL v12 = v21++ >= 9;
                if (!v12) {
                  continue;
                }
              }
              goto LABEL_34;
            }
            a1[*v4] = 1;
          }
LABEL_30:
          PBReaderRecallMark();
          goto LABEL_44;
        }
        if ((v8 & 7) != 0) {
          goto LABEL_47;
        }
        while (1)
        {
          uint64_t v16 = *v2;
          unint64_t v17 = *(void *)&a1[v16];
          if (v17 == -1 || v17 >= *(void *)&a1[*v3]) {
            break;
          }
          unint64_t v18 = v17 + 1;
          int v19 = *(char *)(*(void *)&a1[*v5] + v17);
          *(void *)&a1[v16] = v18;
          if (v19 < 0)
          {
            unsigned int v20 = v14++;
            if (v20 <= 8) {
              continue;
            }
          }
          goto LABEL_44;
        }
        a1[*v4] = 1;
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_47;
      }
LABEL_44:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_45;
      }
    }
    if (v14 != 2 || !PBReaderPlaceMark() || !GEOWiFiQualityTimeRangeIsValid(a1))
    {
LABEL_47:
      PBReaderRecallMark();
      return 0;
    }
    goto LABEL_30;
  }
LABEL_45:
  BOOL v26 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v26;
}

BOOL GEOWiFiQualityTimeRangeIsValid(void *a1)
{
  uint64_t v6 = [a1 position];
  uint64_t v7 = [a1 length];
  int v5 = 0;
  uint64_t v4 = 0;
  BOOL AllFrom = GEOWiFiQualityTimeRangeReadAllFrom((uint64_t)&v4, (uint64_t)a1);
  PBReaderRecallMark();
  return AllFrom;
}

void sub_189931538(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t GEOWiFiQualityTimeRangeWriteTo(uint64_t result)
{
  uint64_t v1 = result;
  char v2 = *(unsigned char *)(result + 8);
  if (v2)
  {
    double result = PBDataWriterWriteUint32Field();
    char v2 = *(unsigned char *)(v1 + 8);
  }
  if ((v2 & 2) != 0)
  {
    return PBDataWriterWriteUint32Field();
  }
  return result;
}

BOOL GEOWiFiQualityHoursIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  BOOL v2 = (*(unsigned char *)(a1 + 76) & 7) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
  return v2;
}

void sub_1899318D8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOWiFiQualityIndexReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    int v5 = (int *)MEMORY[0x1E4F940E0];
    uint64_t v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          unint64_t v12 = *(void *)&v3[v11];
          if (v12 == -1 || v12 >= *(void *)&v3[*v5]) {
            break;
          }
          char v13 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v12 + 1;
          v10 |= (unint64_t)(v13 & 0x7F) << v8;
          if ((v13 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v15 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v15 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v15 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 2)
        {
          char v25 = 0;
          unsigned int v26 = 0;
          uint64_t v19 = 0;
          *(unsigned char *)(a1 + 16) |= 2u;
          while (1)
          {
            uint64_t v27 = *v4;
            unint64_t v28 = *(void *)&v3[v27];
            if (v28 == -1 || v28 >= *(void *)&v3[*v5]) {
              break;
            }
            char v29 = *(unsigned char *)(*(void *)&v3[*v7] + v28);
            *(void *)&v3[v27] = v28 + 1;
            v19 |= (unint64_t)(v29 & 0x7F) << v25;
            if ((v29 & 0x80) == 0)
            {
              unint64_t v24 = &OBJC_IVAR___GEOWiFiQualityIndex__value;
              goto LABEL_40;
            }
            v25 += 7;
            BOOL v23 = v26++ > 8;
            if (v23)
            {
              LODWORD(v19) = 0;
              unint64_t v24 = &OBJC_IVAR___GEOWiFiQualityIndex__value;
              goto LABEL_42;
            }
          }
          unint64_t v24 = &OBJC_IVAR___GEOWiFiQualityIndex__value;
LABEL_39:
          v3[*v6] = 1;
        }
        else
        {
          if ((v10 >> 3) != 1)
          {
            if ((PBReaderSkipValueWithTag() & 1) == 0) {
              goto LABEL_48;
            }
            continue;
          }
          char v17 = 0;
          unsigned int v18 = 0;
          uint64_t v19 = 0;
          *(unsigned char *)(a1 + 16) |= 1u;
          while (1)
          {
            uint64_t v20 = *v4;
            unint64_t v21 = *(void *)&v3[v20];
            if (v21 == -1 || v21 >= *(void *)&v3[*v5])
            {
              unint64_t v24 = &OBJC_IVAR___GEOWiFiQualityIndex__type;
              goto LABEL_39;
            }
            char v22 = *(unsigned char *)(*(void *)&v3[*v7] + v21);
            *(void *)&v3[v20] = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0) {
              break;
            }
            v17 += 7;
            BOOL v23 = v18++ > 8;
            if (v23)
            {
              LODWORD(v19) = 0;
              unint64_t v24 = &OBJC_IVAR___GEOWiFiQualityIndex__type;
              goto LABEL_42;
            }
          }
          unint64_t v24 = &OBJC_IVAR___GEOWiFiQualityIndex__type;
        }
LABEL_40:
        if (v3[*v6]) {
          LODWORD(v19) = 0;
        }
LABEL_42:
        *(_DWORD *)(a1 + *v24) = v19;
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v30 = v3[*v6] == 0;
  }
  else
  {
LABEL_48:
    BOOL v30 = 0;
  }
  objc_sync_exit(v3);

  return v30;
}

void sub_189932328(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOWiFiQualityIndexReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOWiFiQualityIndexReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18993238C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOWiFiQualityIndexIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    int v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_39;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        unint64_t v10 = *(void *)&a1[v9];
        if (v10 == -1 || v10 >= *(void *)&a1[*v3]) {
          break;
        }
        char v11 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v13 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      if (v13 || (v8 & 7) == 4) {
        goto LABEL_39;
      }
      if ((v8 >> 3) == 2) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_41;
        }
        unsigned int v15 = 0;
        while (1)
        {
          uint64_t v16 = *v2;
          unint64_t v17 = *(void *)&a1[v16];
          if (v17 == -1 || v17 >= *(void *)&a1[*v3]) {
            break;
          }
          unint64_t v18 = v17 + 1;
          int v19 = *(char *)(*(void *)&a1[*v5] + v17);
          *(void *)&a1[v16] = v18;
          if (v19 < 0)
          {
            BOOL v20 = v15++ > 8;
            if (!v20) {
              continue;
            }
          }
          goto LABEL_38;
        }
LABEL_36:
        a1[*v4] = 1;
        goto LABEL_38;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_41:
        BOOL v26 = 0;
        goto LABEL_40;
      }
LABEL_38:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_39;
      }
    }
    if ((v8 & 7) != 0) {
      goto LABEL_41;
    }
    unsigned int v21 = 0;
    while (1)
    {
      uint64_t v22 = *v2;
      unint64_t v23 = *(void *)&a1[v22];
      if (v23 == -1 || v23 >= *(void *)&a1[*v3]) {
        goto LABEL_36;
      }
      unint64_t v24 = v23 + 1;
      int v25 = *(char *)(*(void *)&a1[*v5] + v23);
      *(void *)&a1[v22] = v24;
      if (v25 < 0)
      {
        BOOL v20 = v21++ > 8;
        if (!v20) {
          continue;
        }
      }
      goto LABEL_38;
    }
  }
LABEL_39:
  BOOL v26 = a1[*v4] == 0;
LABEL_40:
  PBReaderRecallMark();
  return v26;
}

void sub_189932B14(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOWiFiQualityLocationSearchReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  int v11 = ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1) + ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v7])
    {
      case -3:
        char v8 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        int v14 = v10 & 1 | v11;
        if ((v14 != 0) | v8 & 1) {
          unsigned int v15 = 0;
        }
        else {
          unsigned int v15 = a3;
        }
        BOOL v16 = v14 != 0;
        if (v14) {
          BOOL v17 = 1;
        }
        else {
          BOOL v17 = v15 == 0;
        }
        BOOL v54 = v17;
        unint64_t v18 = (int *)MEMORY[0x1E4F940E8];
        int v19 = (int *)MEMORY[0x1E4F940C8];
        BOOL v20 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v11;
LABEL_6:
        uint64_t v12 = v9;
        uint64_t v13 = v10;
LABEL_8:
        ++v7;
        uint64_t v9 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v18) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v19)) {
      goto LABEL_76;
    }
    char v21 = 0;
    unsigned int v22 = 0;
    unint64_t v23 = 0;
    while (1)
    {
      uint64_t v24 = *v18;
      unint64_t v25 = *(void *)(v3 + v24);
      if (v25 == -1 || v25 >= *(void *)(v3 + *v6)) {
        break;
      }
      char v26 = *(unsigned char *)(*(void *)(v3 + *v20) + v25);
      *(void *)(v3 + v24) = v25 + 1;
      v23 |= (unint64_t)(v26 & 0x7F) << v21;
      if ((v26 & 0x80) == 0) {
        goto LABEL_26;
      }
      v21 += 7;
      BOOL v27 = v22++ >= 9;
      if (v27)
      {
        unint64_t v23 = 0;
        int v28 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_28;
      }
    }
    *(unsigned char *)(v3 + *v19) = 1;
LABEL_26:
    int v28 = *(unsigned __int8 *)(v3 + *v19);
    if (*(unsigned char *)(v3 + *v19)) {
      unint64_t v23 = 0;
    }
LABEL_28:
    if (v28 || (v23 & 7) == 4)
    {
LABEL_76:
      if (v16)
      {
        char v47 = 1;
        goto LABEL_91;
      }
      if (!v15) {
        goto LABEL_92;
      }
      while (1)
      {
        int v50 = *v15++;
        int v49 = v50;
        if (v50 == 1) {
          break;
        }
        if (v49 == 2)
        {
          char v48 = 4;
LABEL_82:
          *(unsigned char *)(a1 + 52) |= v48;
        }
        else if (!v49)
        {
          goto LABEL_92;
        }
      }
      char v48 = 2;
      goto LABEL_82;
    }
    unint64_t v30 = v23 >> 3;
    BOOL v31 = v16;
    if (!v54)
    {
      int v32 = v15;
      do
      {
        int v34 = *v32++;
        int v33 = v34;
        BOOL v31 = v34 != 0;
        if (v34) {
          BOOL v35 = v33 == v30;
        }
        else {
          BOOL v35 = 1;
        }
      }
      while (!v35);
    }
    if (v30 == 3)
    {
      if (v8)
      {
        char v38 = 0;
        unsigned int v39 = 0;
        uint64_t v40 = 0;
        *(unsigned char *)(a1 + 52) |= 1u;
        while (1)
        {
          uint64_t v41 = *v18;
          unint64_t v42 = *(void *)(v3 + v41);
          if (v42 == -1 || v42 >= *(void *)(v3 + *v6)) {
            break;
          }
          char v43 = *(unsigned char *)(*(void *)(v3 + *v20) + v42);
          *(void *)(v3 + v41) = v42 + 1;
          v40 |= (unint64_t)(v43 & 0x7F) << v38;
          if ((v43 & 0x80) == 0) {
            goto LABEL_66;
          }
          v38 += 7;
          BOOL v27 = v39++ >= 9;
          if (v27)
          {
            uint64_t v40 = 0;
            goto LABEL_68;
          }
        }
        *(unsigned char *)(v3 + *v19) = 1;
LABEL_66:
        if (*(unsigned char *)(v3 + *v19)) {
          uint64_t v40 = 0;
        }
LABEL_68:
        *(void *)(a1 + 24) = v40;
        goto LABEL_72;
      }
      goto LABEL_63;
    }
    if (v30 == 2) {
      break;
    }
    if (v30 != 1)
    {
      int v44 = PBReaderSkipValueWithTag();
      int v19 = (int *)MEMORY[0x1E4F940C8];
      if (!v44) {
        goto LABEL_87;
      }
      goto LABEL_72;
    }
    if (v31)
    {
      if ((*(unsigned char *)(a1 + 52) & 2) != 0)
      {
        if ((PBReaderSkipValueWithTag() & 1) == 0)
        {
LABEL_88:
          char v47 = 0;
          goto LABEL_90;
        }
        v7 += *(unsigned __int8 *)(a1 + 52) << 30 >> 31;
      }
      else
      {
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_88;
        }
        BOOL v53 = v16;
        unsigned int v36 = objc_alloc_init(GEOLocation);
        if (!GEOLocationReadAllFrom((uint64_t)v36, (void *)v3, v9 & 1)) {
          goto LABEL_89;
        }
        PBReaderRecallMark();
        uint64_t v37 = *(void **)(a1 + 16);
        *(void *)(a1 + 16) = v36;

        --v7;
LABEL_60:
        BOOL v16 = v53;
      }
      int v19 = (int *)MEMORY[0x1E4F940C8];
      goto LABEL_72;
    }
LABEL_63:
    char v45 = PBReaderSkipValueWithTag();
    int v19 = (int *)MEMORY[0x1E4F940C8];
    if ((v45 & 1) == 0)
    {
LABEL_87:
      char v47 = 0;
      goto LABEL_91;
    }
LABEL_72:
    if (v7) {
      char v46 = 1;
    }
    else {
      char v46 = v16;
    }
    if ((v46 & 1) == 0) {
      goto LABEL_76;
    }
  }
  if (!v31 || (*(unsigned char *)(a1 + 52) & 4) != 0) {
    goto LABEL_63;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_88;
  }
  BOOL v53 = v16;
  unsigned int v36 = objc_alloc_init(GEOWiFiQualitySearchTile);
  if (GEOWiFiQualitySearchTileReadAllFrom((uint64_t)v36, (void *)v3))
  {
    PBReaderRecallMark();
    -[GEOWiFiQualityLocationSearch _addNoFlagsTiles:](a1, v36);

    goto LABEL_60;
  }
LABEL_89:

  char v47 = 0;
  BOOL v16 = v53;
LABEL_90:
  int v19 = (int *)MEMORY[0x1E4F940C8];
LABEL_91:
  *(unsigned char *)(a1 + 52) |= 2u;
  *(unsigned char *)(a1 + 52) |= 4u;
  if (v47)
  {
LABEL_92:
    unint64_t v3 = *(unsigned char *)(v3 + *v19) == 0;
    if (v16) {
      goto LABEL_93;
    }
  }
  else
  {
    unint64_t v3 = 0;
    if (v16)
    {
LABEL_93:
      int v51 = *(void **)(a1 + 8);
      *(void *)(a1 + 8) = 0;
    }
  }
  return v3;
}

void sub_1899331EC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189933BA4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOWiFiQualityLocationSearchCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  [*(id *)(a1 + 16) readAll:1];
  long long v9 = 0u;
  long long v10 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  id v2 = *(id *)(a1 + 32);
  uint64_t v3 = [v2 countByEnumeratingWithState:&v7 objects:v11 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v8;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v8 != v5) {
          objc_enumerationMutation(v2);
        }
        objc_msgSend(*(id *)(*((void *)&v7 + 1) + 8 * v6++), "readAll:", 1, (void)v7);
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v7 objects:v11 count:16];
    }
    while (v4);
  }
}

unint64_t GEOWiFiQualityLocationSearchReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOWiFiQualityLocationSearchReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)long long v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    long long v9 = (int *)&GEOWiFiQualityLocationSearchReadAllFrom_recursiveTag;
  }
  else {
    long long v9 = (int *)&GEOWiFiQualityLocationSearchReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOWiFiQualityLocationSearchReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOWiFiQualityLocationSearchCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_189933E50(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOWiFiQualityLocationSearchReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOWiFiQualityLocationSearchReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189933EB4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOWiFiQualityLocationSearchIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        unint64_t v10 = *(void *)&a1[v9];
        if (v10 == -1 || v10 >= *(void *)&a1[*v3]) {
          break;
        }
        char v11 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v13 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v14 = v8 & 7;
      if (v13 || v14 == 4) {
        break;
      }
      unint64_t v16 = v8 >> 3;
      if ((v8 >> 3) == 3)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_43;
        }
        unsigned int v17 = 0;
        while (1)
        {
          uint64_t v18 = *v2;
          unint64_t v19 = *(void *)&a1[v18];
          if (v19 == -1 || v19 >= *(void *)&a1[*v3]) {
            break;
          }
          unint64_t v20 = v19 + 1;
          int v21 = *(char *)(*(void *)&a1[*v5] + v19);
          *(void *)&a1[v18] = v20;
          if (v21 < 0 && v17++ <= 8) {
            continue;
          }
          goto LABEL_40;
        }
        a1[*v4] = 1;
      }
      else
      {
        if (v16 == 2)
        {
          if (v14 != 2 || !PBReaderPlaceMark() || !GEOWiFiQualitySearchTileIsValid(a1))
          {
LABEL_43:
            PBReaderRecallMark();
            return 0;
          }
          goto LABEL_36;
        }
        if (v16 == 1)
        {
          if (v14 != 2 || !PBReaderPlaceMark() || !GEOLocationIsValid(a1)) {
            goto LABEL_43;
          }
LABEL_36:
          PBReaderRecallMark();
          continue;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_43;
        }
      }
LABEL_40:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v23 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v23;
}

BOOL GEOWiFiQualitySearchTileIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_39;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        unint64_t v10 = *(void *)&a1[v9];
        if (v10 == -1 || v10 >= *(void *)&a1[*v3]) {
          break;
        }
        char v11 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v13 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      if (v13 || (v8 & 7) == 4) {
        goto LABEL_39;
      }
      if ((v8 >> 3) == 2) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_41;
        }
        unsigned int v15 = 0;
        while (1)
        {
          uint64_t v16 = *v2;
          unint64_t v17 = *(void *)&a1[v16];
          if (v17 == -1 || v17 >= *(void *)&a1[*v3]) {
            break;
          }
          unint64_t v18 = v17 + 1;
          int v19 = *(char *)(*(void *)&a1[*v5] + v17);
          *(void *)&a1[v16] = v18;
          if (v19 < 0)
          {
            BOOL v20 = v15++ > 8;
            if (!v20) {
              continue;
            }
          }
          goto LABEL_38;
        }
LABEL_36:
        a1[*v4] = 1;
        goto LABEL_38;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_41:
        BOOL v26 = 0;
        goto LABEL_40;
      }
LABEL_38:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_39;
      }
    }
    if ((v8 & 7) != 0) {
      goto LABEL_41;
    }
    unsigned int v21 = 0;
    while (1)
    {
      uint64_t v22 = *v2;
      unint64_t v23 = *(void *)&a1[v22];
      if (v23 == -1 || v23 >= *(void *)&a1[*v3]) {
        goto LABEL_36;
      }
      unint64_t v24 = v23 + 1;
      int v25 = *(char *)(*(void *)&a1[*v5] + v23);
      *(void *)&a1[v22] = v24;
      if (v25 < 0)
      {
        BOOL v20 = v21++ > 8;
        if (!v20) {
          continue;
        }
      }
      goto LABEL_38;
    }
  }
LABEL_39:
  BOOL v26 = a1[*v4] == 0;
LABEL_40:
  PBReaderRecallMark();
  return v26;
}

void sub_1899345AC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOWiFiQualityLocationSearchIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  unsigned int v2 = *(unsigned __int8 *)(a1 + 52);
  if ((v2 & 8) != 0) {
    return 1;
  }
  if ((v2 & 2) != 0)
  {
    if (GEOLocationIsDirty(*(os_unfair_lock_s **)(a1 + 16))) {
      return 1;
    }
    unsigned int v2 = *(unsigned __int8 *)(a1 + 52);
  }
  return (v2 >> 2) & 1;
}

os_unfair_lock_s *GEOWiFiQualityLocationSearchIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    uint64_t v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOWiFiQualityLocationSearchIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 12);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void GEOWiFiQualityLocationSearchClearSensitiveFields(void *a1, uint64_t a2, int a3)
{
  if (a3
    && [a1 hasLocation]
    && ([a1 location],
        uint64_t v5 = objc_claimAutoreleasedReturnValue(),
        int HasSensitiveFields = GEOLocationHasSensitiveFields((uint64_t)v5),
        v5,
        HasSensitiveFields))
  {
    unsigned int v7 = [a1 location];
    unint64_t v8 = (_DWORD *)[v7 copy];

    GEOLocationClearSensitiveFields(v8);
    [a1 setLocation:v8];
  }
  else
  {
    unint64_t v8 = [a1 location];
    [v8 clearSensitiveFields:a2];
  }
}

void *GEOWiFiQualityLocationSearchHasSensitiveFields(void *result)
{
  if (result)
  {
    uint64_t v1 = [result location];
    uint64_t HasSensitiveFields = GEOLocationHasSensitiveFields((uint64_t)v1);

    return (void *)HasSensitiveFields;
  }
  return result;
}

void sub_189934B98(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18993507C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOWiFiQualityLocationSearchResultReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 52);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 48)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  unsigned int v11 = ((*(unsigned __int8 *)(a1 + 64) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 64) >> 2) & 1)
      + ((*(unsigned __int8 *)(a1 + 64) >> 4) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v7])
    {
      case -3:
        char v8 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        int v14 = v10 | (v11 > 1);
        if ((v14 | v8)) {
          unsigned int v15 = 0;
        }
        else {
          unsigned int v15 = a3;
        }
        LODWORD(v16) = v14;
        char v56 = (v15 == 0) | v14;
        unint64_t v17 = (int *)MEMORY[0x1E4F940E8];
        unint64_t v18 = (int *)MEMORY[0x1E4F940C8];
        int v19 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v11;
LABEL_6:
        uint64_t v12 = v9;
        uint64_t v13 = v10;
LABEL_8:
        ++v7;
        uint64_t v9 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v17) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v18)) {
      goto LABEL_86;
    }
    char v20 = 0;
    unsigned int v21 = 0;
    unint64_t v22 = 0;
    while (1)
    {
      uint64_t v23 = *v17;
      unint64_t v24 = *(void *)(v3 + v23);
      if (v24 == -1 || v24 >= *(void *)(v3 + *v6)) {
        break;
      }
      char v25 = *(unsigned char *)(*(void *)(v3 + *v19) + v24);
      *(void *)(v3 + v23) = v24 + 1;
      v22 |= (unint64_t)(v25 & 0x7F) << v20;
      if ((v25 & 0x80) == 0) {
        goto LABEL_23;
      }
      v20 += 7;
      BOOL v26 = v21++ >= 9;
      if (v26)
      {
        unint64_t v22 = 0;
        int v27 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_25;
      }
    }
    *(unsigned char *)(v3 + *v18) = 1;
LABEL_23:
    int v27 = *(unsigned __int8 *)(v3 + *v18);
    if (*(unsigned char *)(v3 + *v18)) {
      unint64_t v22 = 0;
    }
LABEL_25:
    if (v27 || (v22 & 7) == 4)
    {
LABEL_86:
      if (v16)
      {
        char v50 = 1;
        goto LABEL_98;
      }
      if (v15)
      {
        while (1)
        {
          int v52 = *v15++;
          char v51 = 8;
          switch(v52)
          {
            case 0:
              goto LABEL_99;
            case 1:
              goto LABEL_92;
            case 4:
              char v51 = 4;
              goto LABEL_92;
            case 5:
              char v51 = 16;
LABEL_92:
              *(unsigned char *)(a1 + 64) |= v51;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_99;
    }
    unint64_t v29 = v22 >> 3;
    BOOL v30 = (char)v16;
    if ((v56 & 1) == 0)
    {
      BOOL v31 = v15;
      do
      {
        int v33 = *v31++;
        int v32 = v33;
        BOOL v30 = v33 != 0;
        if (v33) {
          BOOL v34 = v32 == v29;
        }
        else {
          BOOL v34 = 1;
        }
      }
      while (!v34);
    }
    switch((int)v29)
    {
      case 1:
        if (!v30) {
          goto LABEL_72;
        }
        if ((*(unsigned char *)(a1 + 64) & 8) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_95;
          }
          int v55 = (int)v16;
          uint64_t v16 = objc_alloc_init(GEOLocation);
          if (GEOLocationReadAllFrom((uint64_t)v16, (void *)v3, v9 & 1))
          {
            PBReaderRecallMark();
            BOOL v35 = *(void **)(a1 + 24);
            *(void *)(a1 + 24) = v16;

            --v7;
            goto LABEL_71;
          }
          goto LABEL_96;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_95;
        }
        v7 += *(unsigned __int8 *)(a1 + 64) << 28 >> 31;
        goto LABEL_84;
      case 2:
        if ((v8 & 1) == 0) {
          goto LABEL_72;
        }
        char v37 = 0;
        unsigned int v38 = 0;
        uint64_t v39 = 0;
        *(unsigned char *)(a1 + 64) |= 1u;
        while (2)
        {
          uint64_t v40 = *v17;
          unint64_t v41 = *(void *)(v3 + v40);
          if (v41 == -1 || v41 >= *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v42 = *(unsigned char *)(*(void *)(v3 + *v19) + v41);
            *(void *)(v3 + v40) = v41 + 1;
            v39 |= (unint64_t)(v42 & 0x7F) << v37;
            if (v42 < 0)
            {
              v37 += 7;
              BOOL v26 = v38++ >= 9;
              if (v26)
              {
                uint64_t v39 = 0;
                goto LABEL_77;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          uint64_t v39 = 0;
        }
LABEL_77:
        *(void *)(a1 + 32) = v39;
        goto LABEL_85;
      case 3:
        if ((v8 & 1) == 0) {
          goto LABEL_72;
        }
        char v43 = 0;
        unsigned int v44 = 0;
        uint64_t v45 = 0;
        *(unsigned char *)(a1 + 64) |= 2u;
        while (2)
        {
          uint64_t v46 = *v17;
          unint64_t v47 = *(void *)(v3 + v46);
          if (v47 == -1 || v47 >= *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v48 = *(unsigned char *)(*(void *)(v3 + *v19) + v47);
            *(void *)(v3 + v46) = v47 + 1;
            v45 |= (unint64_t)(v48 & 0x7F) << v43;
            if (v48 < 0)
            {
              v43 += 7;
              BOOL v26 = v44++ >= 9;
              if (v26)
              {
                LODWORD(v45) = 0;
                goto LABEL_81;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          LODWORD(v45) = 0;
        }
LABEL_81:
        *(_DWORD *)(a1 + 60) = v45;
        goto LABEL_85;
      case 4:
        if (!v30 || (*(unsigned char *)(a1 + 64) & 4) != 0) {
          goto LABEL_72;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_95;
        }
        int v55 = (int)v16;
        uint64_t v16 = objc_alloc_init(GEOWiFiESS);
        if (!GEOWiFiESSReadAllFrom((uint64_t)v16, (void *)v3, v9 & 1)) {
          goto LABEL_96;
        }
        PBReaderRecallMark();
        -[GEOWiFiQualityLocationSearchResult _addNoFlagsEss:](a1, v16);
        goto LABEL_70;
      case 5:
        if (!v30 || (*(unsigned char *)(a1 + 64) & 0x10) != 0)
        {
LABEL_72:
          char v49 = PBReaderSkipValueWithTag();
          unint64_t v18 = (int *)MEMORY[0x1E4F940C8];
          if ((v49 & 1) == 0)
          {
LABEL_94:
            char v50 = 0;
            goto LABEL_98;
          }
          goto LABEL_85;
        }
        if (PBReaderPlaceMark())
        {
          int v55 = (int)v16;
          uint64_t v16 = objc_alloc_init(GEOWiFiQualitySearchResultTile);
          if (!GEOWiFiQualitySearchResultTileReadAllFrom((uint64_t)v16, (void *)v3, v9 & 1))
          {
LABEL_96:

            char v50 = 0;
            LOBYTE(v16) = v55;
            goto LABEL_97;
          }
          PBReaderRecallMark();
          -[GEOWiFiQualityLocationSearchResult _addNoFlagsTile:](a1, v16);
LABEL_70:

LABEL_71:
          LODWORD(v16) = v55;
LABEL_84:
          unint64_t v18 = (int *)MEMORY[0x1E4F940C8];
LABEL_85:
          if (!(v16 & 1 | (v7 != 0))) {
            goto LABEL_86;
          }
          continue;
        }
LABEL_95:
        char v50 = 0;
LABEL_97:
        unint64_t v18 = (int *)MEMORY[0x1E4F940C8];
LABEL_98:
        *(unsigned char *)(a1 + 64) |= 8u;
        *(unsigned char *)(a1 + 64) |= 4u;
        *(unsigned char *)(a1 + 64) |= 0x10u;
        if (v50)
        {
LABEL_99:
          unint64_t v3 = *(unsigned char *)(v3 + *v18) == 0;
          if (v16) {
            goto LABEL_100;
          }
        }
        else
        {
          unint64_t v3 = 0;
          if (v16)
          {
LABEL_100:
            BOOL v53 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = 0;
          }
        }
        return v3;
      default:
        int v36 = PBReaderSkipValueWithTag();
        unint64_t v18 = (int *)MEMORY[0x1E4F940C8];
        if (!v36) {
          goto LABEL_94;
        }
        goto LABEL_85;
    }
  }
}

void sub_189935B0C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189935ED0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189936B68(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOWiFiQualityLocationSearchResultCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  uint64_t v22 = *MEMORY[0x1E4F143B8];
  [a1[3] readAll:1];
  long long v18 = 0u;
  long long v19 = 0u;
  long long v16 = 0u;
  long long v17 = 0u;
  id v2 = a1[2];
  uint64_t v3 = [v2 countByEnumeratingWithState:&v16 objects:v21 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v17;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v17 != v5) {
          objc_enumerationMutation(v2);
        }
        [*(id *)(*((void *)&v16 + 1) + 8 * v6++) readAll:1];
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v16 objects:v21 count:16];
    }
    while (v4);
  }

  long long v14 = 0u;
  long long v15 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  id v7 = a1[5];
  uint64_t v8 = [v7 countByEnumeratingWithState:&v12 objects:v20 count:16];
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)v13;
    do
    {
      uint64_t v11 = 0;
      do
      {
        if (*(void *)v13 != v10) {
          objc_enumerationMutation(v7);
        }
        objc_msgSend(*(id *)(*((void *)&v12 + 1) + 8 * v11++), "readAll:", 1, (void)v12);
      }
      while (v9 != v11);
      uint64_t v9 = [v7 countByEnumeratingWithState:&v12 objects:v20 count:16];
    }
    while (v9);
  }
}

unint64_t GEOWiFiQualityLocationSearchResultReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 52))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOWiFiQualityLocationSearchResultReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = [v8 position];
  *(_DWORD *)(a1 + 52) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOWiFiQualityLocationSearchResultReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOWiFiQualityLocationSearchResultReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOWiFiQualityLocationSearchResultReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOWiFiQualityLocationSearchResultCallReadAllRecursiveWithoutSynchronized((id *)a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_189936EAC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOWiFiQualityLocationSearchResultReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOWiFiQualityLocationSearchResultReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189936F10(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOWiFiQualityLocationSearchResultIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        unint64_t v10 = *(void *)&a1[v9];
        if (v10 == -1 || v10 >= *(void *)&a1[*v3]) {
          break;
        }
        char v11 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v13 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v14 = v8 & 7;
      if (v13 || v14 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v14 == 2 && PBReaderPlaceMark() && GEOLocationIsValid(a1)) {
            goto LABEL_49;
          }
          goto LABEL_53;
        case 2u:
          if ((v8 & 7) != 0) {
            goto LABEL_53;
          }
          unsigned int v16 = 0;
          while (1)
          {
            uint64_t v17 = *v2;
            unint64_t v18 = *(void *)&a1[v17];
            if (v18 == -1 || v18 >= *(void *)&a1[*v3]) {
              goto LABEL_41;
            }
            unint64_t v19 = v18 + 1;
            int v20 = *(char *)(*(void *)&a1[*v5] + v18);
            *(void *)&a1[v17] = v19;
            if (v20 < 0)
            {
              BOOL v21 = v16++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_50;
          }
        case 3u:
          if ((v8 & 7) != 0) {
            goto LABEL_53;
          }
          unsigned int v22 = 0;
          break;
        case 4u:
          if (v14 != 2 || !PBReaderPlaceMark() || !GEOWiFiESSIsValid(a1)) {
            goto LABEL_53;
          }
          goto LABEL_49;
        case 5u:
          if (v14 != 2 || !PBReaderPlaceMark() || !GEOWiFiQualitySearchResultTileIsValid(a1)) {
            goto LABEL_53;
          }
LABEL_49:
          PBReaderRecallMark();
          continue;
        default:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_53:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        uint64_t v23 = *v2;
        unint64_t v24 = *(void *)&a1[v23];
        if (v24 == -1 || v24 >= *(void *)&a1[*v3]) {
          break;
        }
        unint64_t v25 = v24 + 1;
        int v26 = *(char *)(*(void *)&a1[*v5] + v24);
        *(void *)&a1[v23] = v25;
        if (v26 < 0)
        {
          BOOL v21 = v22++ > 8;
          if (!v21) {
            continue;
          }
        }
        goto LABEL_50;
      }
LABEL_41:
      a1[*v4] = 1;
LABEL_50:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v27 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v27;
}

BOOL GEOWiFiQualitySearchResultTileIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        unint64_t v10 = *(void *)&a1[v9];
        if (v10 == -1 || v10 >= *(void *)&a1[*v3]) {
          break;
        }
        char v11 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v13 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v14 = v8 & 7;
      if (v13 || v14 == 4) {
        break;
      }
      unint64_t v16 = v8 >> 3;
      if ((v8 >> 3) == 3)
      {
        if (v14 != 2 || !PBReaderPlaceMark() || !GEOWiFiESSIsValid(a1))
        {
LABEL_40:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else
      {
        if (v16 == 2)
        {
          if (v14 != 2) {
            goto LABEL_40;
          }
        }
        else if (v16 == 1)
        {
          if ((v8 & 7) != 0) {
            goto LABEL_40;
          }
          unsigned int v17 = 0;
          while (1)
          {
            uint64_t v18 = *v2;
            unint64_t v19 = *(void *)&a1[v18];
            if (v19 == -1 || v19 >= *(void *)&a1[*v3]) {
              break;
            }
            unint64_t v20 = v19 + 1;
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if (v21 < 0 && v17++ <= 8) {
              continue;
            }
            goto LABEL_37;
          }
          a1[*v4] = 1;
          continue;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_40;
        }
      }
LABEL_37:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v23 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v23;
}

void sub_189937778(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOWiFiQualityLocationSearchResultIsDirty(uint64_t a1)
{
  uint64_t v22 = *MEMORY[0x1E4F143B8];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  char v2 = *(unsigned char *)(a1 + 64);
  if ((v2 & 0x20) != 0) {
    return 1;
  }
  if ((*(unsigned char *)(a1 + 64) & 8) == 0)
  {
LABEL_5:
    if ((v2 & 0x14) != 0) {
      return 1;
    }
    if ((v2 & 4) != 0)
    {
      long long v18 = 0u;
      long long v19 = 0u;
      long long v16 = 0u;
      long long v17 = 0u;
      id v5 = *(id *)(a1 + 16);
      uint64_t v6 = [v5 countByEnumeratingWithState:&v16 objects:v21 count:16];
      if (v6)
      {
        uint64_t v7 = v6;
        uint64_t v8 = *(void *)v17;
LABEL_11:
        uint64_t v9 = 0;
        while (1)
        {
          if (*(void *)v17 != v8) {
            objc_enumerationMutation(v5);
          }
          if (GEOWiFiESSIsDirty(*(os_unfair_lock_s **)(*((void *)&v16 + 1) + 8 * v9))) {
            goto LABEL_29;
          }
          if (v7 == ++v9)
          {
            uint64_t v7 = [v5 countByEnumeratingWithState:&v16 objects:v21 count:16];
            if (v7) {
              goto LABEL_11;
            }
            break;
          }
        }
      }

      char v2 = *(unsigned char *)(a1 + 64);
    }
    if ((v2 & 0x10) == 0) {
      return 0;
    }
    long long v14 = 0u;
    long long v15 = 0u;
    long long v12 = 0u;
    long long v13 = 0u;
    id v5 = *(id *)(a1 + 40);
    uint64_t v3 = [v5 countByEnumeratingWithState:&v12 objects:v20 count:16];
    if (!v3)
    {
LABEL_30:

      return v3;
    }
    uint64_t v10 = *(void *)v13;
LABEL_22:
    uint64_t v11 = 0;
    while (1)
    {
      if (*(void *)v13 != v10) {
        objc_enumerationMutation(v5);
      }
      if (GEOWiFiQualitySearchResultTileIsDirty(*(os_unfair_lock_s **)(*((void *)&v12 + 1) + 8 * v11))) {
        break;
      }
      if (v3 == ++v11)
      {
        uint64_t v3 = [v5 countByEnumeratingWithState:&v12 objects:v20 count:16];
        if (v3) {
          goto LABEL_22;
        }
        goto LABEL_30;
      }
    }
LABEL_29:
    uint64_t v3 = 1;
    goto LABEL_30;
  }
  if (!GEOLocationIsDirty(*(os_unfair_lock_s **)(a1 + 24)))
  {
    char v2 = *(unsigned char *)(a1 + 64);
    goto LABEL_5;
  }
  return 1;
}

os_unfair_lock_s *GEOWiFiQualityLocationSearchResultIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    uint64_t v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOWiFiQualityLocationSearchResultIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 14);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void GEOWiFiQualityLocationSearchResultClearSensitiveFields(void *a1, uint64_t a2, int a3)
{
  if (a3
    && [a1 hasLocation]
    && ([a1 location],
        id v5 = objc_claimAutoreleasedReturnValue(),
        int HasSensitiveFields = GEOLocationHasSensitiveFields((uint64_t)v5),
        v5,
        HasSensitiveFields))
  {
    uint64_t v7 = [a1 location];
    uint64_t v8 = (_DWORD *)[v7 copy];

    GEOLocationClearSensitiveFields(v8);
    [a1 setLocation:v8];
  }
  else
  {
    uint64_t v8 = [a1 location];
    [v8 clearSensitiveFields:a2];
  }
}

void *GEOWiFiQualityLocationSearchResultHasSensitiveFields(void *result)
{
  if (result)
  {
    uint64_t v1 = [result location];
    uint64_t HasSensitiveFields = GEOLocationHasSensitiveFields((uint64_t)v1);

    return (void *)HasSensitiveFields;
  }
  return result;
}

void sub_1899381FC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189938824(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOWiFiQualityNetworkSearchReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  int v11 = ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1) + ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v7])
    {
      case -3:
        char v8 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        int v14 = v10 & 1 | v11;
        if ((v14 != 0) | v8 & 1) {
          long long v15 = 0;
        }
        else {
          long long v15 = a3;
        }
        BOOL v16 = v14 != 0;
        if (v14) {
          BOOL v17 = 1;
        }
        else {
          BOOL v17 = v15 == 0;
        }
        BOOL v54 = v17;
        long long v18 = (int *)MEMORY[0x1E4F940E8];
        long long v19 = (int *)MEMORY[0x1E4F940C8];
        unint64_t v20 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v11;
LABEL_6:
        uint64_t v12 = v9;
        uint64_t v13 = v10;
LABEL_8:
        ++v7;
        uint64_t v9 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v18) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v19)) {
      goto LABEL_76;
    }
    char v21 = 0;
    unsigned int v22 = 0;
    unint64_t v23 = 0;
    while (1)
    {
      uint64_t v24 = *v18;
      unint64_t v25 = *(void *)(v3 + v24);
      if (v25 == -1 || v25 >= *(void *)(v3 + *v6)) {
        break;
      }
      char v26 = *(unsigned char *)(*(void *)(v3 + *v20) + v25);
      *(void *)(v3 + v24) = v25 + 1;
      v23 |= (unint64_t)(v26 & 0x7F) << v21;
      if ((v26 & 0x80) == 0) {
        goto LABEL_26;
      }
      v21 += 7;
      BOOL v27 = v22++ >= 9;
      if (v27)
      {
        unint64_t v23 = 0;
        int v28 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_28;
      }
    }
    *(unsigned char *)(v3 + *v19) = 1;
LABEL_26:
    int v28 = *(unsigned __int8 *)(v3 + *v19);
    if (*(unsigned char *)(v3 + *v19)) {
      unint64_t v23 = 0;
    }
LABEL_28:
    if (v28 || (v23 & 7) == 4)
    {
LABEL_76:
      if (v16)
      {
        char v47 = 1;
        goto LABEL_91;
      }
      if (!v15) {
        goto LABEL_92;
      }
      while (1)
      {
        int v50 = *v15++;
        int v49 = v50;
        if (v50 == 1) {
          break;
        }
        if (v49 == 2)
        {
          char v48 = 4;
LABEL_82:
          *(unsigned char *)(a1 + 52) |= v48;
        }
        else if (!v49)
        {
          goto LABEL_92;
        }
      }
      char v48 = 2;
      goto LABEL_82;
    }
    unint64_t v30 = v23 >> 3;
    BOOL v31 = v16;
    if (!v54)
    {
      int v32 = v15;
      do
      {
        int v34 = *v32++;
        int v33 = v34;
        BOOL v31 = v34 != 0;
        if (v34) {
          BOOL v35 = v33 == v30;
        }
        else {
          BOOL v35 = 1;
        }
      }
      while (!v35);
    }
    if (v30 == 3)
    {
      if (v8)
      {
        char v37 = 0;
        unsigned int v38 = 0;
        uint64_t v39 = 0;
        *(unsigned char *)(a1 + 52) |= 1u;
        while (1)
        {
          uint64_t v40 = *v18;
          unint64_t v41 = *(void *)(v3 + v40);
          if (v41 == -1 || v41 >= *(void *)(v3 + *v6)) {
            break;
          }
          char v42 = *(unsigned char *)(*(void *)(v3 + *v20) + v41);
          *(void *)(v3 + v40) = v41 + 1;
          v39 |= (unint64_t)(v42 & 0x7F) << v37;
          if ((v42 & 0x80) == 0) {
            goto LABEL_66;
          }
          v37 += 7;
          BOOL v27 = v38++ >= 9;
          if (v27)
          {
            uint64_t v39 = 0;
            goto LABEL_68;
          }
        }
        *(unsigned char *)(v3 + *v19) = 1;
LABEL_66:
        if (*(unsigned char *)(v3 + *v19)) {
          uint64_t v39 = 0;
        }
LABEL_68:
        *(void *)(a1 + 32) = v39;
        goto LABEL_72;
      }
      goto LABEL_63;
    }
    if (v30 == 2) {
      break;
    }
    if (v30 != 1)
    {
      int v44 = PBReaderSkipValueWithTag();
      long long v19 = (int *)MEMORY[0x1E4F940C8];
      if (!v44) {
        goto LABEL_87;
      }
      goto LABEL_72;
    }
    if (v31 && (*(unsigned char *)(a1 + 52) & 2) == 0)
    {
      if ((PBReaderPlaceMark() & 1) == 0) {
        goto LABEL_88;
      }
      BOOL v53 = v16;
      int v36 = objc_alloc_init(GEOWiFiESS);
      if (!GEOWiFiESSReadAllFrom((uint64_t)v36, (void *)v3, v9 & 1)) {
        goto LABEL_89;
      }
      PBReaderRecallMark();
      -[GEOWiFiQualityNetworkSearch _addNoFlagsEss:](a1, v36);

LABEL_60:
      BOOL v16 = v53;
LABEL_71:
      long long v19 = (int *)MEMORY[0x1E4F940C8];
      goto LABEL_72;
    }
LABEL_63:
    char v45 = PBReaderSkipValueWithTag();
    long long v19 = (int *)MEMORY[0x1E4F940C8];
    if ((v45 & 1) == 0)
    {
LABEL_87:
      char v47 = 0;
      goto LABEL_91;
    }
LABEL_72:
    if (v7) {
      char v46 = 1;
    }
    else {
      char v46 = v16;
    }
    if ((v46 & 1) == 0) {
      goto LABEL_76;
    }
  }
  if (!v31) {
    goto LABEL_63;
  }
  if ((*(unsigned char *)(a1 + 52) & 4) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0)
    {
LABEL_88:
      char v47 = 0;
      goto LABEL_90;
    }
    v7 += *(unsigned __int8 *)(a1 + 52) << 29 >> 31;
    goto LABEL_71;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_88;
  }
  BOOL v53 = v16;
  int v36 = objc_alloc_init(GEOLocation);
  if (GEOLocationReadAllFrom((uint64_t)v36, (void *)v3, v9 & 1))
  {
    PBReaderRecallMark();
    char v43 = *(void **)(a1 + 24);
    *(void *)(a1 + 24) = v36;

    --v7;
    goto LABEL_60;
  }
LABEL_89:

  char v47 = 0;
  BOOL v16 = v53;
LABEL_90:
  long long v19 = (int *)MEMORY[0x1E4F940C8];
LABEL_91:
  *(unsigned char *)(a1 + 52) |= 2u;
  *(unsigned char *)(a1 + 52) |= 4u;
  if (v47)
  {
LABEL_92:
    unint64_t v3 = *(unsigned char *)(v3 + *v19) == 0;
    if (v16) {
      goto LABEL_93;
    }
  }
  else
  {
    unint64_t v3 = 0;
    if (v16)
    {
LABEL_93:
      char v51 = *(void **)(a1 + 8);
      *(void *)(a1 + 8) = 0;
    }
  }
  return v3;
}

void sub_189939150(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1899398B0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOWiFiQualityNetworkSearchCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v13 = *MEMORY[0x1E4F143B8];
  long long v8 = 0u;
  long long v9 = 0u;
  long long v10 = 0u;
  long long v11 = 0u;
  id v2 = *(id *)(a1 + 16);
  uint64_t v3 = [v2 countByEnumeratingWithState:&v8 objects:v12 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v9;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v9 != v5) {
          objc_enumerationMutation(v2);
        }
        objc_msgSend(*(id *)(*((void *)&v8 + 1) + 8 * v6++), "readAll:", 1, (void)v8);
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v8 objects:v12 count:16];
    }
    while (v4);
  }

  return [*(id *)(a1 + 24) readAll:1];
}

unint64_t GEOWiFiQualityNetworkSearchReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOWiFiQualityNetworkSearchReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)long long v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    long long v9 = (int *)&GEOWiFiQualityNetworkSearchReadAllFrom_recursiveTag;
  }
  else {
    long long v9 = (int *)&GEOWiFiQualityNetworkSearchReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOWiFiQualityNetworkSearchReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOWiFiQualityNetworkSearchCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_189939B5C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOWiFiQualityNetworkSearchReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOWiFiQualityNetworkSearchReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189939BC0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOWiFiQualityNetworkSearchIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        unint64_t v10 = *(void *)&a1[v9];
        if (v10 == -1 || v10 >= *(void *)&a1[*v3]) {
          break;
        }
        char v11 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v13 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v14 = v8 & 7;
      if (v13 || v14 == 4) {
        break;
      }
      unint64_t v16 = v8 >> 3;
      if ((v8 >> 3) == 3)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_43;
        }
        unsigned int v17 = 0;
        while (1)
        {
          uint64_t v18 = *v2;
          unint64_t v19 = *(void *)&a1[v18];
          if (v19 == -1 || v19 >= *(void *)&a1[*v3]) {
            break;
          }
          unint64_t v20 = v19 + 1;
          int v21 = *(char *)(*(void *)&a1[*v5] + v19);
          *(void *)&a1[v18] = v20;
          if (v21 < 0 && v17++ <= 8) {
            continue;
          }
          goto LABEL_40;
        }
        a1[*v4] = 1;
      }
      else
      {
        if (v16 == 2)
        {
          if (v14 != 2 || !PBReaderPlaceMark() || !GEOLocationIsValid(a1))
          {
LABEL_43:
            PBReaderRecallMark();
            return 0;
          }
          goto LABEL_36;
        }
        if (v16 == 1)
        {
          if (v14 != 2 || !PBReaderPlaceMark() || !GEOWiFiESSIsValid(a1)) {
            goto LABEL_43;
          }
LABEL_36:
          PBReaderRecallMark();
          continue;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_43;
        }
      }
LABEL_40:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v23 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v23;
}

void sub_18993A074(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOWiFiQualityNetworkSearchIsDirty(uint64_t a1)
{
  uint64_t v13 = *MEMORY[0x1E4F143B8];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  char v2 = *(unsigned char *)(a1 + 52);
  if ((v2 & 0xA) != 0) {
    return 1;
  }
  if ((*(unsigned char *)(a1 + 52) & 4) != 0)
  {
    if (GEOLocationIsDirty(*(os_unfair_lock_s **)(a1 + 24))) {
      return 1;
    }
    char v2 = *(unsigned char *)(a1 + 52);
  }
  if ((v2 & 2) == 0) {
    return 0;
  }
  long long v10 = 0u;
  long long v11 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  id v5 = *(id *)(a1 + 16);
  uint64_t v3 = [v5 countByEnumeratingWithState:&v8 objects:v12 count:16];
  if (v3)
  {
    uint64_t v6 = *(void *)v9;
    while (2)
    {
      for (uint64_t i = 0; i != v3; ++i)
      {
        if (*(void *)v9 != v6) {
          objc_enumerationMutation(v5);
        }
        if (GEOWiFiESSIsDirty(*(os_unfair_lock_s **)(*((void *)&v8 + 1) + 8 * i)))
        {
          uint64_t v3 = 1;
          goto LABEL_19;
        }
      }
      uint64_t v3 = [v5 countByEnumeratingWithState:&v8 objects:v12 count:16];
      if (v3) {
        continue;
      }
      break;
    }
  }
LABEL_19:

  return v3;
}

os_unfair_lock_s *GEOWiFiQualityNetworkSearchIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    uint64_t v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOWiFiQualityNetworkSearchIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 12);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void GEOWiFiQualityNetworkSearchClearSensitiveFields(void *a1, uint64_t a2, int a3)
{
  if (a3
    && [a1 hasLocation]
    && ([a1 location],
        id v5 = objc_claimAutoreleasedReturnValue(),
        int HasSensitiveFields = GEOLocationHasSensitiveFields((uint64_t)v5),
        v5,
        HasSensitiveFields))
  {
    unsigned int v7 = [a1 location];
    long long v8 = (_DWORD *)[v7 copy];

    GEOLocationClearSensitiveFields(v8);
    [a1 setLocation:v8];
  }
  else
  {
    long long v8 = [a1 location];
    [v8 clearSensitiveFields:a2];
  }
}

void *GEOWiFiQualityNetworkSearchHasSensitiveFields(void *result)
{
  if (result)
  {
    uint64_t v1 = [result location];
    uint64_t HasSensitiveFields = GEOLocationHasSensitiveFields((uint64_t)v1);

    return (void *)HasSensitiveFields;
  }
  return result;
}

void sub_18993A84C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOWiFiQualityNetworkSearchResultReadAllFrom(void *a1, void *a2, int a3)
{
  id v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    uint64_t v6 = (int *)MEMORY[0x1E4F940E8];
    unsigned int v7 = (int *)MEMORY[0x1E4F940E0];
    long long v8 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v5[*MEMORY[0x1E4F940E8]] < *(void *)&v5[*MEMORY[0x1E4F940E0]])
    {
      long long v9 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v5[*v8]) {
          break;
        }
        char v10 = 0;
        unsigned int v11 = 0;
        unint64_t v12 = 0;
        while (1)
        {
          uint64_t v13 = *v6;
          unint64_t v14 = *(void *)&v5[v13];
          if (v14 == -1 || v14 >= *(void *)&v5[*v7]) {
            break;
          }
          char v15 = *(unsigned char *)(*(void *)&v5[*v9] + v14);
          *(void *)&v5[v13] = v14 + 1;
          v12 |= (unint64_t)(v15 & 0x7F) << v10;
          if ((v15 & 0x80) == 0) {
            goto LABEL_13;
          }
          v10 += 7;
          if (v11++ >= 9)
          {
            unint64_t v12 = 0;
            int v17 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        int v17 = v5[*v8];
        if (v5[*v8]) {
          unint64_t v12 = 0;
        }
LABEL_15:
        if (v17 || (v12 & 7) == 4) {
          break;
        }
        if ((v12 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_27;
          }
          unint64_t v19 = objc_alloc_init(GEOWiFiESSMatch);
          if (!GEOWiFiESSMatchReadAllFrom((uint64_t)v19, v5, a3))
          {

            goto LABEL_27;
          }
          PBReaderRecallMark();
          objc_msgSend(a1, "addMatches:", v19, 0, 0);
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_27;
        }
      }
      while (*(void *)&v5[*v6] < *(void *)&v5[*v7]);
    }
    BOOL v20 = v5[*v8] == 0;
  }
  else
  {
LABEL_27:
    BOOL v20 = 0;
  }
  objc_sync_exit(v5);

  return v20;
}

void sub_18993B2CC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOWiFiQualityNetworkSearchResultReadFrom(void *a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOWiFiQualityNetworkSearchResultReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18993B330(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOWiFiQualityNetworkSearchResultIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  char v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    id v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        unint64_t v10 = *(void *)&a1[v9];
        if (v10 == -1 || v10 >= *(void *)&a1[*v3]) {
          break;
        }
        char v11 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v13 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v14 = v8 & 7;
      if (v13 || v14 == 4) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if (v14 != 2 || !PBReaderPlaceMark() || !GEOWiFiESSMatchIsValid(a1))
        {
LABEL_27:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_27;
      }
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v16 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v16;
}

void sub_18993BCA8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOWiFiQualityProfileReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 36);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 32)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  int v11 = ((*(unsigned __int8 *)(a1 + 44) >> 1) & 1) + (*(unsigned char *)(a1 + 44) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v7])
    {
      case -3:
        char v8 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        int v14 = v10 & 1 | v11;
        BOOL v15 = v14 != 0;
        if ((v14 != 0) | v8 & 1) {
          BOOL v16 = 0;
        }
        else {
          BOOL v16 = a3;
        }
        BOOL v17 = v16 == 0;
        if (v14) {
          BOOL v17 = 1;
        }
        BOOL v44 = v17;
        uint64_t v18 = (int *)MEMORY[0x1E4F940E8];
        unint64_t v19 = (int *)MEMORY[0x1E4F940C8];
        BOOL v20 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v11;
LABEL_6:
        uint64_t v12 = v9;
        uint64_t v13 = v10;
LABEL_8:
        ++v7;
        uint64_t v9 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v18) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v19)) {
      goto LABEL_61;
    }
    char v21 = 0;
    unsigned int v22 = 0;
    unint64_t v23 = 0;
    while (1)
    {
      uint64_t v24 = *v18;
      unint64_t v25 = *(void *)(v3 + v24);
      if (v25 == -1 || v25 >= *(void *)(v3 + *v6)) {
        break;
      }
      char v26 = *(unsigned char *)(*(void *)(v3 + *v20) + v25);
      *(void *)(v3 + v24) = v25 + 1;
      v23 |= (unint64_t)(v26 & 0x7F) << v21;
      if ((v26 & 0x80) == 0) {
        goto LABEL_25;
      }
      v21 += 7;
      if (v22++ >= 9)
      {
        unint64_t v23 = 0;
        int v28 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v19) = 1;
LABEL_25:
    int v28 = *(unsigned __int8 *)(v3 + *v19);
    if (*(unsigned char *)(v3 + *v19)) {
      unint64_t v23 = 0;
    }
LABEL_27:
    if (v28 || (v23 & 7) == 4)
    {
LABEL_61:
      if (v15)
      {
        char v39 = 1;
        goto LABEL_70;
      }
      if (v16)
      {
        do
        {
          while (1)
          {
            int v41 = *v16++;
            int v40 = v41;
            if (v41 != 1 && v40 != 2) {
              break;
            }
            *(unsigned char *)(a1 + 44) |= v40;
          }
        }
        while (v40);
      }
      goto LABEL_71;
    }
    unint64_t v30 = v23 >> 3;
    BOOL v31 = v15;
    if (!v44)
    {
      int v32 = v16;
      do
      {
        int v34 = *v32++;
        int v33 = v34;
        BOOL v31 = v34 != 0;
        if (v34) {
          BOOL v35 = v33 == v30;
        }
        else {
          BOOL v35 = 1;
        }
      }
      while (!v35);
    }
    if (v30 == 2) {
      break;
    }
    if (v30 != 1)
    {
      if (!PBReaderSkipValueWithTag()) {
        goto LABEL_69;
      }
      goto LABEL_54;
    }
    if (!v31) {
      goto LABEL_53;
    }
    if ((*(unsigned char *)(a1 + 44) & 1) == 0)
    {
      if ((PBReaderPlaceMark() & 1) == 0) {
        goto LABEL_69;
      }
      int v36 = objc_alloc_init(GEOWiFiQualityHours);
      if (!GEOWiFiQualityHoursReadAllFrom((uint64_t)v36, (void *)v3, v9 & 1)) {
        goto LABEL_76;
      }
      PBReaderRecallMark();
      char v37 = *(void **)(a1 + 16);
      *(void *)(a1 + 16) = v36;

      --v7;
      goto LABEL_50;
    }
    if ((PBReaderSkipValueWithTag() & 1) == 0)
    {
LABEL_69:
      char v39 = 0;
      goto LABEL_70;
    }
    v7 -= *(unsigned char *)(a1 + 44) & 1;
LABEL_54:
    if (v7) {
      char v38 = 1;
    }
    else {
      char v38 = v15;
    }
    if ((v38 & 1) == 0) {
      goto LABEL_61;
    }
  }
  if (!v31 || (*(unsigned char *)(a1 + 44) & 2) != 0)
  {
LABEL_53:
    if ((PBReaderSkipValueWithTag() & 1) == 0) {
      goto LABEL_69;
    }
    goto LABEL_54;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_69;
  }
  int v36 = objc_alloc_init(GEOWiFiQualityIndex);
  if (GEOWiFiQualityIndexReadAllFrom((uint64_t)v36, (void *)v3))
  {
    PBReaderRecallMark();
    -[GEOWiFiQualityProfile _addNoFlagsQualities:](a1, v36);

LABEL_50:
    unint64_t v19 = (int *)MEMORY[0x1E4F940C8];
    goto LABEL_54;
  }
LABEL_76:

  char v39 = 0;
  unint64_t v19 = (int *)MEMORY[0x1E4F940C8];
LABEL_70:
  *(unsigned char *)(a1 + 44) |= 1u;
  *(unsigned char *)(a1 + 44) |= 2u;
  if (v39)
  {
LABEL_71:
    unint64_t v3 = *(unsigned char *)(v3 + *v19) == 0;
    if (!v15) {
      return v3;
    }
    goto LABEL_72;
  }
  unint64_t v3 = 0;
  if (v15)
  {
LABEL_72:
    char v42 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_18993C284(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18993CB3C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOWiFiQualityProfileCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  [*(id *)(a1 + 16) readAll:1];
  long long v9 = 0u;
  long long v10 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  id v2 = *(id *)(a1 + 24);
  uint64_t v3 = [v2 countByEnumeratingWithState:&v7 objects:v11 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v8;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v8 != v5) {
          objc_enumerationMutation(v2);
        }
        objc_msgSend(*(id *)(*((void *)&v7 + 1) + 8 * v6++), "readAll:", 1, (void)v7);
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v7 objects:v11 count:16];
    }
    while (v4);
  }
}

unint64_t GEOWiFiQualityProfileReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 36))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOWiFiQualityProfileReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)long long v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 40));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 32) = [v8 position];
  *(_DWORD *)(a1 + 36) = [v8 length];
  if (a3) {
    long long v9 = (int *)&GEOWiFiQualityProfileReadAllFrom_recursiveTag;
  }
  else {
    long long v9 = (int *)&GEOWiFiQualityProfileReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOWiFiQualityProfileReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOWiFiQualityProfileCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return Specified;
}

void sub_18993CDE8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOWiFiQualityProfileReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOWiFiQualityProfileReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18993CE4C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18993D070(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOWiFiQualityProfileIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  unsigned int v2 = *(unsigned __int8 *)(a1 + 44);
  if ((v2 & 4) != 0) {
    return 1;
  }
  if (v2)
  {
    if (GEOWiFiQualityHoursIsDirty(*(void *)(a1 + 16))) {
      return 1;
    }
    unsigned int v2 = *(unsigned __int8 *)(a1 + 44);
  }
  return (v2 >> 1) & 1;
}

os_unfair_lock_s *GEOWiFiQualityProfileIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    uint64_t v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOWiFiQualityProfileIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 10);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_18993D488(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18993D940(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOWiFiQualitySearchResultTileReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  int v11 = ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1) + ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v9])
    {
      case -3:
        char v8 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v12 = v7;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        int v14 = v10 & 1 | v11;
        if ((v14 != 0) | v8 & 1) {
          BOOL v15 = 0;
        }
        else {
          BOOL v15 = a3;
        }
        BOOL v16 = v14 != 0;
        if (v14) {
          BOOL v17 = 1;
        }
        else {
          BOOL v17 = v15 == 0;
        }
        BOOL v55 = v17;
        uint64_t v18 = (int *)MEMORY[0x1E4F940E8];
        unint64_t v19 = (int *)MEMORY[0x1E4F940C8];
        BOOL v20 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v11;
LABEL_6:
        uint64_t v12 = v7;
        uint64_t v13 = v10;
LABEL_8:
        ++v9;
        uint64_t v7 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v18) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v19)) {
      goto LABEL_73;
    }
    char v21 = 0;
    unsigned int v22 = 0;
    unint64_t v23 = 0;
    while (1)
    {
      uint64_t v24 = *v18;
      unint64_t v25 = *(void *)(v3 + v24);
      if (v25 == -1 || v25 >= *(void *)(v3 + *v6)) {
        break;
      }
      char v26 = *(unsigned char *)(*(void *)(v3 + *v20) + v25);
      *(void *)(v3 + v24) = v25 + 1;
      v23 |= (unint64_t)(v26 & 0x7F) << v21;
      if ((v26 & 0x80) == 0) {
        goto LABEL_26;
      }
      v21 += 7;
      BOOL v27 = v22++ >= 9;
      if (v27)
      {
        unint64_t v23 = 0;
        int v28 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_28;
      }
    }
    *(unsigned char *)(v3 + *v19) = 1;
LABEL_26:
    int v28 = *(unsigned __int8 *)(v3 + *v19);
    if (*(unsigned char *)(v3 + *v19)) {
      unint64_t v23 = 0;
    }
LABEL_28:
    if (v28 || (v23 & 7) == 4)
    {
LABEL_73:
      if (v16)
      {
        char v48 = 1;
        goto LABEL_88;
      }
      if (!v15) {
        goto LABEL_89;
      }
      while (1)
      {
        int v51 = *v15++;
        int v50 = v51;
        if (v51 == 2) {
          break;
        }
        if (v50 == 3)
        {
          char v49 = 2;
LABEL_79:
          *(unsigned char *)(a1 + 52) |= v49;
        }
        else if (!v50)
        {
          goto LABEL_89;
        }
      }
      char v49 = 4;
      goto LABEL_79;
    }
    unint64_t v30 = v23 >> 3;
    BOOL v31 = v16;
    if (!v55)
    {
      int v32 = v15;
      do
      {
        int v34 = *v32++;
        int v33 = v34;
        BOOL v31 = v34 != 0;
        if (v34) {
          BOOL v35 = v33 == v30;
        }
        else {
          BOOL v35 = 1;
        }
      }
      while (!v35);
    }
    if (v30 == 3) {
      break;
    }
    if (v30 == 2)
    {
      if (v31)
      {
        if ((*(unsigned char *)(a1 + 52) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_85:
            char v48 = 0;
            goto LABEL_87;
          }
          v9 += *(unsigned __int8 *)(a1 + 52) << 29 >> 31;
        }
        else
        {
          uint64_t v43 = PBReaderReadString();
          BOOL v44 = *(void **)(a1 + 24);
          *(void *)(a1 + 24) = v43;

          --v9;
        }
        goto LABEL_68;
      }
    }
    else
    {
      if (v30 != 1)
      {
        int v45 = PBReaderSkipValueWithTag();
        unint64_t v19 = (int *)MEMORY[0x1E4F940C8];
        if (!v45) {
          goto LABEL_84;
        }
        goto LABEL_69;
      }
      if (v8)
      {
        char v36 = 0;
        unsigned int v37 = 0;
        uint64_t v38 = 0;
        *(unsigned char *)(a1 + 52) |= 1u;
        while (1)
        {
          uint64_t v39 = *v18;
          unint64_t v40 = *(void *)(v3 + v39);
          if (v40 == -1 || v40 >= *(void *)(v3 + *v6)) {
            break;
          }
          char v41 = *(unsigned char *)(*(void *)(v3 + *v20) + v40);
          *(void *)(v3 + v39) = v40 + 1;
          v38 |= (unint64_t)(v41 & 0x7F) << v36;
          if ((v41 & 0x80) == 0) {
            goto LABEL_63;
          }
          v36 += 7;
          BOOL v27 = v37++ >= 9;
          if (v27)
          {
            uint64_t v38 = 0;
            goto LABEL_65;
          }
        }
        *(unsigned char *)(v3 + *v19) = 1;
LABEL_63:
        if (*(unsigned char *)(v3 + *v19)) {
          uint64_t v38 = 0;
        }
LABEL_65:
        *(void *)(a1 + 32) = v38;
        goto LABEL_69;
      }
    }
LABEL_60:
    char v46 = PBReaderSkipValueWithTag();
    unint64_t v19 = (int *)MEMORY[0x1E4F940C8];
    if ((v46 & 1) == 0)
    {
LABEL_84:
      char v48 = 0;
      goto LABEL_88;
    }
LABEL_69:
    if (v9) {
      char v47 = 1;
    }
    else {
      char v47 = v16;
    }
    if ((v47 & 1) == 0) {
      goto LABEL_73;
    }
  }
  if (!v31 || (*(unsigned char *)(a1 + 52) & 2) != 0) {
    goto LABEL_60;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_85;
  }
  BOOL v54 = v16;
  char v42 = objc_alloc_init(GEOWiFiESS);
  if (GEOWiFiESSReadAllFrom((uint64_t)v42, (void *)v3, v7 & 1))
  {
    PBReaderRecallMark();
    -[GEOWiFiQualitySearchResultTile _addNoFlagsEss:](a1, v42);

    BOOL v16 = v54;
LABEL_68:
    unint64_t v19 = (int *)MEMORY[0x1E4F940C8];
    goto LABEL_69;
  }

  char v48 = 0;
  BOOL v16 = v54;
LABEL_87:
  unint64_t v19 = (int *)MEMORY[0x1E4F940C8];
LABEL_88:
  *(unsigned char *)(a1 + 52) |= 4u;
  *(unsigned char *)(a1 + 52) |= 2u;
  if (v48)
  {
LABEL_89:
    unint64_t v3 = *(unsigned char *)(v3 + *v19) == 0;
    if (v16) {
      goto LABEL_90;
    }
  }
  else
  {
    unint64_t v3 = 0;
    if (v16)
    {
LABEL_90:
      int v52 = *(void **)(a1 + 8);
      *(void *)(a1 + 8) = 0;
    }
  }
  return v3;
}

void sub_18993DFDC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18993E8F0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOWiFiQualitySearchResultTileCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v11 = *MEMORY[0x1E4F143B8];
  long long v6 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  id v1 = *(id *)(a1 + 16);
  uint64_t v2 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t v4 = *(void *)v7;
    do
    {
      uint64_t v5 = 0;
      do
      {
        if (*(void *)v7 != v4) {
          objc_enumerationMutation(v1);
        }
        objc_msgSend(*(id *)(*((void *)&v6 + 1) + 8 * v5++), "readAll:", 1, (void)v6);
      }
      while (v3 != v5);
      uint64_t v3 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
    }
    while (v3);
  }
}

unint64_t GEOWiFiQualitySearchResultTileReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOWiFiQualitySearchResultTileReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    long long v9 = (int *)&GEOWiFiQualitySearchResultTileReadAllFrom_recursiveTag;
  }
  else {
    long long v9 = (int *)&GEOWiFiQualitySearchResultTileReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOWiFiQualitySearchResultTileReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOWiFiQualitySearchResultTileCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_18993EB84(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOWiFiQualitySearchResultTileReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOWiFiQualitySearchResultTileReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18993EBE8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18993EE34(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOWiFiQualitySearchResultTileIsDirty(uint64_t a1)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  if ((*(unsigned char *)(a1 + 52) & 0xE) != 0) {
    return 1;
  }
  if ((*(unsigned char *)(a1 + 52) & 2) == 0) {
    return 0;
  }
  long long v9 = 0u;
  long long v10 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  id v3 = *(id *)(a1 + 16);
  uint64_t v2 = [v3 countByEnumeratingWithState:&v7 objects:v11 count:16];
  if (v2)
  {
    uint64_t v4 = *(void *)v8;
    while (2)
    {
      for (uint64_t i = 0; i != v2; ++i)
      {
        if (*(void *)v8 != v4) {
          objc_enumerationMutation(v3);
        }
        if (GEOWiFiESSIsDirty(*(os_unfair_lock_s **)(*((void *)&v7 + 1) + 8 * i)))
        {
          uint64_t v2 = 1;
          goto LABEL_15;
        }
      }
      uint64_t v2 = [v3 countByEnumeratingWithState:&v7 objects:v11 count:16];
      if (v2) {
        continue;
      }
      break;
    }
  }
LABEL_15:

  return v2;
}

os_unfair_lock_s *GEOWiFiQualitySearchResultTileIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOWiFiQualitySearchResultTileIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 12);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_18993F494(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOWiFiQualitySearchTileReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    long long v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      long long v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          unint64_t v12 = *(void *)&v3[v11];
          if (v12 == -1 || v12 >= *(void *)&v3[*v5]) {
            break;
          }
          char v13 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v12 + 1;
          v10 |= (unint64_t)(v13 & 0x7F) << v8;
          if ((v13 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v14 = v9++ >= 9;
          if (v14)
          {
            unint64_t v10 = 0;
            int v15 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v15 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v15 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 2)
        {
          char v23 = 0;
          unsigned int v24 = 0;
          uint64_t v25 = 0;
          *(unsigned char *)(a1 + 20) |= 2u;
          while (1)
          {
            uint64_t v26 = *v4;
            unint64_t v27 = *(void *)&v3[v26];
            if (v27 == -1 || v27 >= *(void *)&v3[*v5]) {
              break;
            }
            char v28 = *(unsigned char *)(*(void *)&v3[*v7] + v27);
            *(void *)&v3[v26] = v27 + 1;
            v25 |= (unint64_t)(v28 & 0x7F) << v23;
            if ((v28 & 0x80) == 0) {
              goto LABEL_42;
            }
            v23 += 7;
            BOOL v14 = v24++ >= 9;
            if (v14)
            {
              LODWORD(v25) = 0;
              goto LABEL_44;
            }
          }
          v3[*v6] = 1;
LABEL_42:
          if (v3[*v6]) {
            LODWORD(v25) = 0;
          }
LABEL_44:
          *(_DWORD *)(a1 + 16) = v25;
        }
        else if ((v10 >> 3) == 1)
        {
          char v17 = 0;
          unsigned int v18 = 0;
          uint64_t v19 = 0;
          *(unsigned char *)(a1 + 20) |= 1u;
          while (1)
          {
            uint64_t v20 = *v4;
            unint64_t v21 = *(void *)&v3[v20];
            if (v21 == -1 || v21 >= *(void *)&v3[*v5]) {
              break;
            }
            char v22 = *(unsigned char *)(*(void *)&v3[*v7] + v21);
            *(void *)&v3[v20] = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0) {
              goto LABEL_38;
            }
            v17 += 7;
            BOOL v14 = v18++ >= 9;
            if (v14)
            {
              uint64_t v19 = 0;
              goto LABEL_40;
            }
          }
          v3[*v6] = 1;
LABEL_38:
          if (v3[*v6]) {
            uint64_t v19 = 0;
          }
LABEL_40:
          *(void *)(a1 + 8) = v19;
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_47;
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v29 = v3[*v6] == 0;
  }
  else
  {
LABEL_47:
    BOOL v29 = 0;
  }
  objc_sync_exit(v3);

  return v29;
}

void sub_18993FFE0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOWiFiQualitySearchTileReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOWiFiQualitySearchTileReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189940044(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189940588(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOWiFiQualityServiceRequestReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  long long v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  unsigned int v11 = ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1)
      + (*(unsigned char *)(a1 + 52) & 1)
      + ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v7])
    {
      case -3:
        char v8 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        char v14 = v10 | (v11 > 1);
        if (v10 & 1 | (v11 > 1) | v8 & 1) {
          int v15 = 0;
        }
        else {
          int v15 = a3;
        }
        BOOL v16 = (int *)MEMORY[0x1E4F940E8];
        char v17 = (int *)MEMORY[0x1E4F940C8];
        unsigned int v18 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v11;
LABEL_6:
        uint64_t v12 = v9;
        uint64_t v13 = v10;
LABEL_8:
        ++v7;
        uint64_t v9 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v16) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v17)) {
      goto LABEL_63;
    }
    char v19 = 0;
    unsigned int v20 = 0;
    unint64_t v21 = 0;
    while (1)
    {
      uint64_t v22 = *v16;
      unint64_t v23 = *(void *)(v3 + v22);
      if (v23 == -1 || v23 >= *(void *)(v3 + *v6)) {
        break;
      }
      char v24 = *(unsigned char *)(*(void *)(v3 + *v18) + v23);
      *(void *)(v3 + v22) = v23 + 1;
      v21 |= (unint64_t)(v24 & 0x7F) << v19;
      if ((v24 & 0x80) == 0) {
        goto LABEL_23;
      }
      v19 += 7;
      if (v20++ >= 9)
      {
        unint64_t v21 = 0;
        int v26 = *(unsigned __int8 *)(v3 + *v17);
        goto LABEL_25;
      }
    }
    *(unsigned char *)(v3 + *v17) = 1;
LABEL_23:
    int v26 = *(unsigned __int8 *)(v3 + *v17);
    if (*(unsigned char *)(v3 + *v17)) {
      unint64_t v21 = 0;
    }
LABEL_25:
    if (v26 || (v21 & 7) == 4)
    {
LABEL_63:
      if (v14)
      {
        char v36 = 1;
        goto LABEL_72;
      }
      if (v15)
      {
        while (1)
        {
          int v38 = *v15++;
          char v37 = 1;
          switch(v38)
          {
            case 0:
              goto LABEL_73;
            case 1:
              goto LABEL_69;
            case 3:
              char v37 = 2;
              goto LABEL_69;
            case 4:
              char v37 = 4;
LABEL_69:
              *(unsigned char *)(a1 + 52) |= v37;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_73;
    }
    unint64_t v28 = v21 >> 3;
    BOOL v29 = v14;
    if (!((v15 == 0) | v14 & 1))
    {
      unint64_t v30 = v15;
      do
      {
        int v32 = *v30++;
        int v31 = v32;
        BOOL v29 = v32 != 0;
        if (v32) {
          BOOL v33 = v31 == v28;
        }
        else {
          BOOL v33 = 1;
        }
      }
      while (!v33);
    }
    if (v28 == 4)
    {
      if (!v29 || (*(unsigned char *)(a1 + 52) & 4) != 0)
      {
LABEL_58:
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_71;
        }
        goto LABEL_59;
      }
      if ((PBReaderPlaceMark() & 1) == 0) {
        goto LABEL_71;
      }
      int v34 = objc_alloc_init(GEOWiFiQualityNetworkSearch);
      if (!GEOWiFiQualityNetworkSearchReadAllFrom((uint64_t)v34, (void *)v3, v9 & 1)) {
        goto LABEL_78;
      }
      PBReaderRecallMark();
      -[GEOWiFiQualityServiceRequest _addNoFlagsNetworkSearches:](a1, v34);
      goto LABEL_54;
    }
    if (v28 == 3) {
      break;
    }
    if (v28 != 1)
    {
      if (!PBReaderSkipValueWithTag()) {
        goto LABEL_71;
      }
      goto LABEL_59;
    }
    if (!v29) {
      goto LABEL_58;
    }
    if ((*(unsigned char *)(a1 + 52) & 1) == 0)
    {
      if ((PBReaderPlaceMark() & 1) == 0) {
        goto LABEL_71;
      }
      int v34 = objc_alloc_init(GEOPDClientMetadata);
      if (!GEOPDClientMetadataReadAllFrom((uint64_t)v34, (void *)v3, v9 & 1)) {
        goto LABEL_78;
      }
      PBReaderRecallMark();
      BOOL v35 = *(void **)(a1 + 16);
      *(void *)(a1 + 16) = v34;

      --v7;
      goto LABEL_55;
    }
    if ((PBReaderSkipValueWithTag() & 1) == 0)
    {
LABEL_71:
      char v36 = 0;
      goto LABEL_72;
    }
    v7 -= *(unsigned char *)(a1 + 52) & 1;
LABEL_59:
    if (!(v14 & 1 | (v7 != 0))) {
      goto LABEL_63;
    }
  }
  if (!v29 || (*(unsigned char *)(a1 + 52) & 2) != 0) {
    goto LABEL_58;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_71;
  }
  int v34 = objc_alloc_init(GEOWiFiQualityLocationSearch);
  if (GEOWiFiQualityLocationSearchReadAllFrom((uint64_t)v34, (void *)v3, v9 & 1))
  {
    PBReaderRecallMark();
    -[GEOWiFiQualityServiceRequest _addNoFlagsLocationSearches:](a1, v34);
LABEL_54:

LABEL_55:
    char v17 = (int *)MEMORY[0x1E4F940C8];
    goto LABEL_59;
  }
LABEL_78:

  char v36 = 0;
  char v17 = (int *)MEMORY[0x1E4F940C8];
LABEL_72:
  *(unsigned char *)(a1 + 52) |= 1u;
  *(unsigned char *)(a1 + 52) |= 2u;
  *(unsigned char *)(a1 + 52) |= 4u;
  if (v36)
  {
LABEL_73:
    unint64_t v3 = *(unsigned char *)(v3 + *v17) == 0;
    if ((v14 & 1) == 0) {
      return v3;
    }
    goto LABEL_74;
  }
  unint64_t v3 = 0;
  if (v14)
  {
LABEL_74:
    uint64_t v39 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_189940C24(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189940FE8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189941AD4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOWiFiQualityServiceRequestCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  uint64_t v22 = *MEMORY[0x1E4F143B8];
  [a1[2] readAll:1];
  long long v18 = 0u;
  long long v19 = 0u;
  long long v16 = 0u;
  long long v17 = 0u;
  id v2 = a1[3];
  uint64_t v3 = [v2 countByEnumeratingWithState:&v16 objects:v21 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v17;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v17 != v5) {
          objc_enumerationMutation(v2);
        }
        [*(id *)(*((void *)&v16 + 1) + 8 * v6++) readAll:1];
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v16 objects:v21 count:16];
    }
    while (v4);
  }

  long long v14 = 0u;
  long long v15 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  id v7 = a1[4];
  uint64_t v8 = [v7 countByEnumeratingWithState:&v12 objects:v20 count:16];
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)v13;
    do
    {
      uint64_t v11 = 0;
      do
      {
        if (*(void *)v13 != v10) {
          objc_enumerationMutation(v7);
        }
        objc_msgSend(*(id *)(*((void *)&v12 + 1) + 8 * v11++), "readAll:", 1, (void)v12);
      }
      while (v9 != v11);
      uint64_t v9 = [v7 countByEnumeratingWithState:&v12 objects:v20 count:16];
    }
    while (v9);
  }
}

unint64_t GEOWiFiQualityServiceRequestReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOWiFiQualityServiceRequestReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOWiFiQualityServiceRequestReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOWiFiQualityServiceRequestReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOWiFiQualityServiceRequestReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOWiFiQualityServiceRequestCallReadAllRecursiveWithoutSynchronized((id *)a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_189941E18(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOWiFiQualityServiceRequestReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOWiFiQualityServiceRequestReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189941E7C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOWiFiQualityServiceRequestIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_35;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        unint64_t v10 = *(void *)&a1[v9];
        if (v10 == -1 || v10 >= *(void *)&a1[*v3]) {
          break;
        }
        char v11 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v13 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v14 = v8 & 7;
      if (v13 || v14 == 4) {
        goto LABEL_35;
      }
      unint64_t v16 = v8 >> 3;
      if ((v8 >> 3) == 4)
      {
        if (v14 != 2 || !PBReaderPlaceMark() || !GEOWiFiQualityNetworkSearchIsValid(a1))
        {
LABEL_36:
          PBReaderRecallMark();
          return 0;
        }
        goto LABEL_32;
      }
      if (v16 == 3) {
        break;
      }
      if (v16 == 1)
      {
        if (v14 != 2 || !PBReaderPlaceMark() || !GEOPDClientMetadataIsValid(a1)) {
          goto LABEL_36;
        }
LABEL_32:
        PBReaderRecallMark();
        goto LABEL_34;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        goto LABEL_36;
      }
LABEL_34:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_35;
      }
    }
    if (v14 != 2 || !PBReaderPlaceMark() || !GEOWiFiQualityLocationSearchIsValid(a1)) {
      goto LABEL_36;
    }
    goto LABEL_32;
  }
LABEL_35:
  BOOL v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

void sub_189942370(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOWiFiQualityServiceRequestIsDirty(uint64_t a1)
{
  uint64_t v22 = *MEMORY[0x1E4F143B8];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  char v2 = *(unsigned char *)(a1 + 52);
  if ((v2 & 8) != 0) {
    return 1;
  }
  if ((*(unsigned char *)(a1 + 52) & 1) == 0)
  {
LABEL_5:
    if ((v2 & 6) != 0) {
      return 1;
    }
    if ((v2 & 2) != 0)
    {
      long long v18 = 0u;
      long long v19 = 0u;
      long long v16 = 0u;
      long long v17 = 0u;
      id v5 = *(id *)(a1 + 24);
      uint64_t v6 = [v5 countByEnumeratingWithState:&v16 objects:v21 count:16];
      if (v6)
      {
        uint64_t v7 = v6;
        uint64_t v8 = *(void *)v17;
LABEL_11:
        uint64_t v9 = 0;
        while (1)
        {
          if (*(void *)v17 != v8) {
            objc_enumerationMutation(v5);
          }
          if ((GEOWiFiQualityLocationSearchIsDirty(*(os_unfair_lock_s **)(*((void *)&v16 + 1)
                                                                                          + 8 * v9)) & 1) != 0)
            goto LABEL_29;
          if (v7 == ++v9)
          {
            uint64_t v7 = [v5 countByEnumeratingWithState:&v16 objects:v21 count:16];
            if (v7) {
              goto LABEL_11;
            }
            break;
          }
        }
      }

      char v2 = *(unsigned char *)(a1 + 52);
    }
    if ((v2 & 4) == 0) {
      return 0;
    }
    long long v14 = 0u;
    long long v15 = 0u;
    long long v12 = 0u;
    long long v13 = 0u;
    id v5 = *(id *)(a1 + 32);
    uint64_t v3 = [v5 countByEnumeratingWithState:&v12 objects:v20 count:16];
    if (!v3)
    {
LABEL_30:

      return v3;
    }
    uint64_t v10 = *(void *)v13;
LABEL_22:
    uint64_t v11 = 0;
    while (1)
    {
      if (*(void *)v13 != v10) {
        objc_enumerationMutation(v5);
      }
      if (GEOWiFiQualityNetworkSearchIsDirty(*(os_unfair_lock_s **)(*((void *)&v12 + 1) + 8 * v11))) {
        break;
      }
      if (v3 == ++v11)
      {
        uint64_t v3 = [v5 countByEnumeratingWithState:&v12 objects:v20 count:16];
        if (v3) {
          goto LABEL_22;
        }
        goto LABEL_30;
      }
    }
LABEL_29:
    uint64_t v3 = 1;
    goto LABEL_30;
  }
  if ((GEOPDClientMetadataIsDirty(*(os_unfair_lock_s **)(a1 + 16)) & 1) == 0)
  {
    char v2 = *(unsigned char *)(a1 + 52);
    goto LABEL_5;
  }
  return 1;
}

os_unfair_lock_s *GEOWiFiQualityServiceRequestIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOWiFiQualityServiceRequestIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 12);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

unint64_t GEOWiFiQualityServiceRequestClearSensitiveFields(id *a1, uint64_t a2, int a3)
{
  if (a3
    && [a1 hasClientMetadata]
    && ([a1 clientMetadata],
        uint64_t v6 = objc_claimAutoreleasedReturnValue(),
        int HasSensitiveFields = GEOPDClientMetadataHasSensitiveFields(v6),
        v6,
        HasSensitiveFields))
  {
    uint64_t v8 = [a1 clientMetadata];
    uint64_t v9 = (id *)[v8 copy];

    GEOPDClientMetadataClearSensitiveFields(v9, a2, 0);
    [a1 setClientMetadata:v9];
  }
  else
  {
    uint64_t v9 = [a1 clientMetadata];
    [v9 clearSensitiveFields:a2];
  }

  -[GEOWiFiQualityServiceRequest _readLocationSearches]((uint64_t)a1);
  if ([a1[3] count])
  {
    unint64_t v10 = 0;
    do
    {
      uint64_t v11 = [a1[3] objectAtIndexedSubscript:v10];
      long long v12 = v11;
      if (a3 && GEOWiFiQualityLocationSearchHasSensitiveFields(v11))
      {
        long long v13 = (void *)[v12 copy];
        long long v14 = [v13 location];
        [v14 clearSensitiveFields:a2];

        [a1[3] replaceObjectAtIndex:v10 withObject:v13];
      }
      else
      {
        [v12 clearSensitiveFields:a2];
      }

      ++v10;
    }
    while (v10 < [a1[3] count]);
  }
  -[GEOWiFiQualityServiceRequest _readNetworkSearches]((uint64_t)a1);
  unint64_t result = [a1[4] count];
  if (result)
  {
    for (unint64_t i = 0; i < result; ++i)
    {
      long long v17 = [a1[4] objectAtIndexedSubscript:i];
      long long v18 = v17;
      if (a3 && GEOWiFiQualityNetworkSearchHasSensitiveFields(v17))
      {
        long long v19 = (void *)[v18 copy];
        unsigned int v20 = [v19 location];
        [v20 clearSensitiveFields:a2];

        [a1[4] replaceObjectAtIndex:i withObject:v19];
      }
      else
      {
        [v18 clearSensitiveFields:a2];
      }

      unint64_t result = [a1[4] count];
    }
  }
  return result;
}

uint64_t GEOWiFiQualityServiceRequestHasSensitiveFields(void *a1)
{
  uint64_t v25 = *MEMORY[0x1E4F143B8];
  if (!a1) {
    return 0;
  }
  char v2 = [a1 clientMetadata];
  char HasSensitiveFields = GEOPDClientMetadataHasSensitiveFields(v2);

  if ((HasSensitiveFields & 1) == 0)
  {
    long long v21 = 0u;
    long long v22 = 0u;
    long long v19 = 0u;
    long long v20 = 0u;
    id v5 = [a1 locationSearches];
    uint64_t v6 = [v5 countByEnumeratingWithState:&v19 objects:v24 count:16];
    if (v6)
    {
      uint64_t v7 = v6;
      uint64_t v8 = *(void *)v20;
LABEL_7:
      uint64_t v9 = 0;
      while (1)
      {
        if (*(void *)v20 != v8) {
          objc_enumerationMutation(v5);
        }
        if (GEOWiFiQualityLocationSearchHasSensitiveFields(*(void **)(*((void *)&v19 + 1) + 8 * v9))) {
          break;
        }
        if (v7 == ++v9)
        {
          uint64_t v7 = [v5 countByEnumeratingWithState:&v19 objects:v24 count:16];
          if (v7) {
            goto LABEL_7;
          }
          goto LABEL_13;
        }
      }
    }
    else
    {
LABEL_13:

      long long v17 = 0u;
      long long v18 = 0u;
      long long v15 = 0u;
      long long v16 = 0u;
      id v5 = objc_msgSend(a1, "networkSearches", 0);
      uint64_t v10 = [v5 countByEnumeratingWithState:&v15 objects:v23 count:16];
      if (!v10)
      {
LABEL_21:
        uint64_t v4 = 0;
LABEL_23:

        return v4;
      }
      uint64_t v11 = v10;
      uint64_t v12 = *(void *)v16;
LABEL_15:
      uint64_t v13 = 0;
      while (1)
      {
        if (*(void *)v16 != v12) {
          objc_enumerationMutation(v5);
        }
        if (GEOWiFiQualityNetworkSearchHasSensitiveFields(*(void **)(*((void *)&v15 + 1) + 8 * v13))) {
          break;
        }
        if (v11 == ++v13)
        {
          uint64_t v11 = [v5 countByEnumeratingWithState:&v15 objects:v23 count:16];
          if (v11) {
            goto LABEL_15;
          }
          goto LABEL_21;
        }
      }
    }
    uint64_t v4 = 1;
    goto LABEL_23;
  }
  return 1;
}

void sub_189943058(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1899438FC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOWiFiQualityServiceResponseReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 36);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 32)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  int v11 = ((*(unsigned __int8 *)(a1 + 48) >> 1) & 1) + ((*(unsigned __int8 *)(a1 + 48) >> 2) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v7])
    {
      case -3:
        char v8 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        int v14 = v10 & 1 | v11;
        BOOL v15 = v7 != 0;
        if (v14) {
          BOOL v15 = 1;
        }
        BOOL v49 = v15;
        if ((v14 != 0) | v8 & 1) {
          long long v16 = 0;
        }
        else {
          long long v16 = a3;
        }
        long long v17 = (GEOWiFiQualityNetworkSearchResult *)(v14 != 0);
        BOOL v18 = v16 == 0;
        if (v14) {
          BOOL v18 = 1;
        }
        BOOL v50 = v18;
        long long v19 = (int *)MEMORY[0x1E4F940E8];
        long long v20 = (int *)MEMORY[0x1E4F940C8];
        long long v21 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v11;
LABEL_6:
        uint64_t v12 = v9;
        uint64_t v13 = v10;
LABEL_8:
        ++v7;
        uint64_t v9 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v19) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v20)) {
      goto LABEL_71;
    }
    char v22 = 0;
    unsigned int v23 = 0;
    unint64_t v24 = 0;
    while (1)
    {
      uint64_t v25 = *v19;
      unint64_t v26 = *(void *)(v3 + v25);
      if (v26 == -1 || v26 >= *(void *)(v3 + *v6)) {
        break;
      }
      char v27 = *(unsigned char *)(*(void *)(v3 + *v21) + v26);
      *(void *)(v3 + v25) = v26 + 1;
      v24 |= (unint64_t)(v27 & 0x7F) << v22;
      if ((v27 & 0x80) == 0) {
        goto LABEL_27;
      }
      v22 += 7;
      BOOL v28 = v23++ >= 9;
      if (v28)
      {
        unint64_t v24 = 0;
        int v29 = *(unsigned __int8 *)(v3 + *v20);
        goto LABEL_29;
      }
    }
    *(unsigned char *)(v3 + *v20) = 1;
LABEL_27:
    int v29 = *(unsigned __int8 *)(v3 + *v20);
    if (*(unsigned char *)(v3 + *v20)) {
      unint64_t v24 = 0;
    }
LABEL_29:
    if (v29 || (v24 & 7) == 4)
    {
LABEL_71:
      if (v17)
      {
        char v44 = 1;
        goto LABEL_82;
      }
      if (!v16) {
        goto LABEL_83;
      }
      while (1)
      {
        while (1)
        {
          int v46 = *v16++;
          int v45 = v46;
          if (v46 != 2) {
            break;
          }
LABEL_76:
          *(unsigned char *)(a1 + 48) |= v45;
        }
        if (v45 == 3)
        {
          LOBYTE(v45) = 4;
          goto LABEL_76;
        }
        if (!v45) {
          goto LABEL_83;
        }
      }
    }
    unint64_t v31 = v24 >> 3;
    BOOL v32 = (int)v17;
    if (!v50)
    {
      BOOL v33 = v16;
      do
      {
        int v35 = *v33++;
        int v34 = v35;
        BOOL v32 = v35 != 0;
        if (v35) {
          BOOL v36 = v34 == v31;
        }
        else {
          BOOL v36 = 1;
        }
      }
      while (!v36);
    }
    if (v31 == 3)
    {
      if (v32 && (*(unsigned char *)(a1 + 48) & 4) == 0)
      {
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_81;
        }
        uint64_t v43 = v17;
        long long v17 = objc_alloc_init(GEOWiFiQualityNetworkSearchResult);
        if (!GEOWiFiQualityNetworkSearchResultReadAllFrom(v17, (void *)v3, v9 & 1)) {
          goto LABEL_88;
        }
        PBReaderRecallMark();
        -[GEOWiFiQualityServiceResponse _addNoFlagsNetworkResults:](a1, v17);
        goto LABEL_61;
      }
      goto LABEL_64;
    }
    if (v31 != 2)
    {
      if (v31 != 1)
      {
        if (!PBReaderSkipValueWithTag()) {
          goto LABEL_81;
        }
        goto LABEL_70;
      }
      if (v8)
      {
        char v37 = 0;
        unsigned int v38 = 0;
        uint64_t v39 = 0;
        *(unsigned char *)(a1 + 48) |= 1u;
        while (1)
        {
          uint64_t v40 = *v19;
          unint64_t v41 = *(void *)(v3 + v40);
          if (v41 == -1 || v41 >= *(void *)(v3 + *v6)) {
            break;
          }
          char v42 = *(unsigned char *)(*(void *)(v3 + *v21) + v41);
          *(void *)(v3 + v40) = v41 + 1;
          v39 |= (unint64_t)(v42 & 0x7F) << v37;
          if ((v42 & 0x80) == 0) {
            goto LABEL_67;
          }
          v37 += 7;
          BOOL v28 = v38++ >= 9;
          if (v28)
          {
            LODWORD(v39) = 0;
            goto LABEL_69;
          }
        }
        *(unsigned char *)(v3 + *v20) = 1;
LABEL_67:
        if (*(unsigned char *)(v3 + *v20)) {
          LODWORD(v39) = 0;
        }
LABEL_69:
        *(_DWORD *)(a1 + 44) = v39;
        goto LABEL_70;
      }
      goto LABEL_64;
    }
    if (v32 && (*(unsigned char *)(a1 + 48) & 2) == 0) {
      break;
    }
LABEL_64:
    if ((PBReaderSkipValueWithTag() & 1) == 0)
    {
LABEL_81:
      char v44 = 0;
      goto LABEL_82;
    }
LABEL_70:
    if (!v49) {
      goto LABEL_71;
    }
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_81;
  }
  uint64_t v43 = v17;
  long long v17 = objc_alloc_init(GEOWiFiQualityLocationSearchResult);
  if (GEOWiFiQualityLocationSearchResultReadAllFrom((uint64_t)v17, (void *)v3, v9 & 1))
  {
    PBReaderRecallMark();
    -[GEOWiFiQualityServiceResponse _addNoFlagsLocationResults:](a1, v17);
LABEL_61:

    long long v17 = v43;
    long long v20 = (int *)MEMORY[0x1E4F940C8];
    goto LABEL_70;
  }
LABEL_88:

  char v44 = 0;
  LODWORD(v17) = v43;
  long long v20 = (int *)MEMORY[0x1E4F940C8];
LABEL_82:
  *(unsigned char *)(a1 + 48) |= 2u;
  *(unsigned char *)(a1 + 48) |= 4u;
  if (v44)
  {
LABEL_83:
    unint64_t v3 = *(unsigned char *)(v3 + *v20) == 0;
    if (v17) {
      goto LABEL_84;
    }
  }
  else
  {
    unint64_t v3 = 0;
    if (v17)
    {
LABEL_84:
      char v47 = *(void **)(a1 + 8);
      *(void *)(a1 + 8) = 0;
    }
  }
  return v3;
}

void sub_1899441DC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189944EC4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOWiFiQualityServiceResponseCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v22 = *MEMORY[0x1E4F143B8];
  long long v16 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  id v2 = *(id *)(a1 + 16);
  uint64_t v3 = [v2 countByEnumeratingWithState:&v16 objects:v21 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v17;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v17 != v5) {
          objc_enumerationMutation(v2);
        }
        [*(id *)(*((void *)&v16 + 1) + 8 * v6++) readAll:1];
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v16 objects:v21 count:16];
    }
    while (v4);
  }

  long long v14 = 0u;
  long long v15 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  id v7 = *(id *)(a1 + 24);
  uint64_t v8 = [v7 countByEnumeratingWithState:&v12 objects:v20 count:16];
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)v13;
    do
    {
      uint64_t v11 = 0;
      do
      {
        if (*(void *)v13 != v10) {
          objc_enumerationMutation(v7);
        }
        objc_msgSend(*(id *)(*((void *)&v12 + 1) + 8 * v11++), "readAll:", 1, (void)v12);
      }
      while (v9 != v11);
      uint64_t v9 = [v7 countByEnumeratingWithState:&v12 objects:v20 count:16];
    }
    while (v9);
  }
}

unint64_t GEOWiFiQualityServiceResponseReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 36))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOWiFiQualityServiceResponseReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 40));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 32) = [v8 position];
  *(_DWORD *)(a1 + 36) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOWiFiQualityServiceResponseReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOWiFiQualityServiceResponseReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOWiFiQualityServiceResponseReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOWiFiQualityServiceResponseCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return Specified;
}

void sub_1899451F4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOWiFiQualityServiceResponseReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOWiFiQualityServiceResponseReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189945258(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOWiFiQualityServiceResponseIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_41;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        unint64_t v10 = *(void *)&a1[v9];
        if (v10 == -1 || v10 >= *(void *)&a1[*v3]) {
          break;
        }
        char v11 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v10 + 1;
        v8 |= (unint64_t)(v11 & 0x7F) << v6;
        if ((v11 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v13 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v13 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v14 = v8 & 7;
      if (v13 || v14 == 4) {
        goto LABEL_41;
      }
      unint64_t v16 = v8 >> 3;
      if ((v8 >> 3) == 3) {
        break;
      }
      if (v16 == 2)
      {
        if (v14 != 2 || !PBReaderPlaceMark() || !GEOWiFiQualityLocationSearchResultIsValid(a1)) {
          goto LABEL_43;
        }
LABEL_36:
        PBReaderRecallMark();
        goto LABEL_40;
      }
      if (v16 == 1)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_43;
        }
        unsigned int v17 = 0;
        while (1)
        {
          uint64_t v18 = *v2;
          unint64_t v19 = *(void *)&a1[v18];
          if (v19 == -1 || v19 >= *(void *)&a1[*v3]) {
            break;
          }
          unint64_t v20 = v19 + 1;
          int v21 = *(char *)(*(void *)&a1[*v5] + v19);
          *(void *)&a1[v18] = v20;
          if (v21 < 0 && v17++ <= 8) {
            continue;
          }
          goto LABEL_40;
        }
        a1[*v4] = 1;
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_43;
      }
LABEL_40:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_41;
      }
    }
    if (v14 != 2 || !PBReaderPlaceMark() || !GEOWiFiQualityNetworkSearchResultIsValid(a1))
    {
LABEL_43:
      PBReaderRecallMark();
      return 0;
    }
    goto LABEL_36;
  }
LABEL_41:
  BOOL v23 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v23;
}

void sub_189945798(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOWiFiQualityServiceResponseIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  BOOL v2 = (*(unsigned char *)(a1 + 48) & 0xE) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return v2;
}

unint64_t GEOWiFiQualityServiceResponseClearSensitiveFields(uint64_t a1, uint64_t a2, int a3)
{
  -[GEOWiFiQualityServiceResponse _readLocationResults](a1);
  unint64_t result = [*(id *)(a1 + 16) count];
  if (result)
  {
    for (unint64_t i = 0; i < result; ++i)
    {
      unint64_t v8 = [*(id *)(a1 + 16) objectAtIndexedSubscript:i];
      uint64_t v9 = v8;
      if (a3 && GEOWiFiQualityLocationSearchResultHasSensitiveFields(v8))
      {
        unint64_t v10 = (void *)[v9 copy];
        char v11 = [v10 location];
        [v11 clearSensitiveFields:a2];

        [*(id *)(a1 + 16) replaceObjectAtIndex:i withObject:v10];
      }
      else
      {
        [v9 clearSensitiveFields:a2];
      }

      unint64_t result = [*(id *)(a1 + 16) count];
    }
  }
  return result;
}

uint64_t GEOWiFiQualityServiceResponseHasSensitiveFields(void *a1)
{
  uint64_t v13 = *MEMORY[0x1E4F143B8];
  if (!a1) {
    return 0;
  }
  long long v10 = 0u;
  long long v11 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  id v1 = objc_msgSend(a1, "locationResults", 0);
  uint64_t v2 = [v1 countByEnumeratingWithState:&v8 objects:v12 count:16];
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t v4 = *(void *)v9;
    while (2)
    {
      uint64_t v5 = 0;
      do
      {
        if (*(void *)v9 != v4) {
          objc_enumerationMutation(v1);
        }
        if ((GEOWiFiQualityLocationSearchResultHasSensitiveFields(*(void **)(*((void *)&v8 + 1)
                                                                                             + 8 * v5)) & 1) != 0)
        {
          uint64_t v6 = 1;
          goto LABEL_12;
        }
        ++v5;
      }
      while (v3 != v5);
      uint64_t v3 = [v1 countByEnumeratingWithState:&v8 objects:v12 count:16];
      if (v3) {
        continue;
      }
      break;
    }
  }
  uint64_t v6 = 0;
LABEL_12:

  return v6;
}

void sub_189946054(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id GEOWiFiQualityTimeRangeDescription(unsigned int *a1)
{
  uint64_t v2 = NSString;
  uint64_t v3 = _GEOWiFiQualityTimeRangeDictionaryRepresentation(a1);
  uint64_t v4 = [v2 stringWithFormat:@"GEOWiFiQualityTimeRange<%p> %@", a1, v3];

  return v4;
}

id _GEOWiFiQualityTimeRangeDictionaryRepresentation(unsigned int *a1)
{
  uint64_t v2 = [MEMORY[0x1E4F1CA60] dictionary];
  char v3 = *((unsigned char *)a1 + 8);
  if (v3)
  {
    uint64_t v4 = [NSNumber numberWithUnsignedInt:*a1];
    [v2 setObject:v4 forKey:@"from"];

    char v3 = *((unsigned char *)a1 + 8);
  }
  if ((v3 & 2) != 0)
  {
    uint64_t v5 = [NSNumber numberWithUnsignedInt:a1[1]];
    [v2 setObject:v5 forKey:@"to"];
  }

  return v2;
}

void _GEOWiFiQualityTimeRangeFromDictionaryRepresentation(void *a1, uint64_t a2)
{
  id v3 = a1;
  uint64_t v4 = [v3 objectForKeyedSubscript:@"from"];
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    *(unsigned char *)(a2 + 8) |= 1u;
    *(_DWORD *)a2 = [v4 unsignedIntValue];
  }

  id v5 = [v3 objectForKeyedSubscript:@"to"];

  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    *(unsigned char *)(a2 + 8) |= 2u;
    *(_DWORD *)(a2 + 4) = [v5 unsignedIntValue];
  }
}

BOOL GEOWiFiQualityTimeRangeReadFrom(uint64_t a1, uint64_t a2)
{
  return GEOWiFiQualityTimeRangeReadAllFrom(a1, a2);
}

BOOL GEOWiFiQualityTimeRangeReadAllFrom(uint64_t a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  id v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    unsigned int v7 = (_DWORD *)(a1 + 4);
    long long v8 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        uint64_t v12 = *v3;
        unint64_t v13 = *(void *)(a2 + v12);
        if (v13 == -1 || v13 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v8) + v13);
        *(void *)(a2 + v12) = v13 + 1;
        v11 |= (unint64_t)(v14 & 0x7F) << v9;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v9 += 7;
        if (v10++ >= 9)
        {
          unint64_t v11 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v11 = 0;
      }
LABEL_14:
      if (v16 || (v11 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      if ((v11 >> 3) == 2) {
        break;
      }
      if ((v11 >> 3) == 1)
      {
        char v18 = 0;
        unsigned int v19 = 0;
        uint64_t v20 = 0;
        *(unsigned char *)(a1 + 8) |= 1u;
        while (1)
        {
          uint64_t v21 = *v3;
          unint64_t v22 = *(void *)(a2 + v21);
          if (v22 == -1 || v22 >= *(void *)(a2 + *v4))
          {
            uint64_t v25 = (_DWORD *)a1;
            goto LABEL_38;
          }
          char v23 = *(unsigned char *)(*(void *)(a2 + *v8) + v22);
          *(void *)(a2 + v21) = v22 + 1;
          v20 |= (unint64_t)(v23 & 0x7F) << v18;
          if ((v23 & 0x80) == 0) {
            break;
          }
          v18 += 7;
          BOOL v24 = v19++ > 8;
          if (v24)
          {
            LODWORD(v20) = 0;
            uint64_t v25 = (_DWORD *)a1;
            goto LABEL_41;
          }
        }
        uint64_t v25 = (_DWORD *)a1;
LABEL_39:
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v20) = 0;
        }
LABEL_41:
        *uint64_t v25 = v20;
        goto LABEL_42;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_42:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    char v26 = 0;
    unsigned int v27 = 0;
    uint64_t v20 = 0;
    *(unsigned char *)(a1 + 8) |= 2u;
    while (1)
    {
      uint64_t v28 = *v3;
      unint64_t v29 = *(void *)(a2 + v28);
      if (v29 == -1 || v29 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v30 = *(unsigned char *)(*(void *)(a2 + *v8) + v29);
      *(void *)(a2 + v28) = v29 + 1;
      v20 |= (unint64_t)(v30 & 0x7F) << v26;
      if ((v30 & 0x80) == 0)
      {
        uint64_t v25 = v7;
        goto LABEL_39;
      }
      v26 += 7;
      BOOL v24 = v27++ > 8;
      if (v24)
      {
        LODWORD(v20) = 0;
        uint64_t v25 = v7;
        goto LABEL_41;
      }
    }
    uint64_t v25 = v7;
LABEL_38:
    *(unsigned char *)(a2 + *v5) = 1;
    goto LABEL_39;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL GEOWiFiQualityTimeRangeEquals(uint64_t a1, uint64_t a2)
{
  return *(void *)a1 == *(void *)a2 && *(_DWORD *)(a1 + 8) == (unint64_t)*(unsigned int *)(a2 + 8);
}

uint64_t GEOWiFiQualityTimeRangeHash()
{
  return PBHashBytes();
}

void sub_189946A90(void *a1)
{
  __cxa_begin_catch(a1);
  do
  {
    uint64_t v2 = (void *)*v1;
    operator delete(v1);
    id v1 = v2;
  }
  while (v2);
  __cxa_rethrow();
}

void sub_189946AB0(_Unwind_Exception *a1)
{
}

void std::__hash_table<std::__hash_value_type<_GEOTileKey,void const*>,std::__unordered_map_hasher<_GEOTileKey,std::__hash_value_type<_GEOTileKey,void const*>,hashkey,eqkey,true>,std::__unordered_map_equal<_GEOTileKey,std::__hash_value_type<_GEOTileKey,void const*>,eqkey,hashkey,true>,std::allocator<std::__hash_value_type<_GEOTileKey,void const*>>>::__node_insert_multi(uint64_t a1, void *a2)
{
  uint64_t v4 = a2 + 2;
  unint64_t v5 = GEOTileKeyHash(a2 + 2);
  a2[1] = v5;
  unint64_t v6 = *(void *)(a1 + 8);
  float v7 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v8 = *(float *)(a1 + 32);
  if (!v6 || (float)(v8 * (float)v6) < v7)
  {
    BOOL v9 = 1;
    if (v6 >= 3) {
      BOOL v9 = (v6 & (v6 - 1)) != 0;
    }
    unint64_t v10 = v9 | (2 * v6);
    unint64_t v11 = vcvtps_u32_f32(v7 / v8);
    if (v10 <= v11) {
      int8x8_t prime = (int8x8_t)v11;
    }
    else {
      int8x8_t prime = (int8x8_t)v10;
    }
    if (*(void *)&prime == 1)
    {
      int8x8_t prime = (int8x8_t)2;
    }
    else if ((*(void *)&prime & (*(void *)&prime - 1)) != 0)
    {
      int8x8_t prime = (int8x8_t)std::__next_prime(*(void *)&prime);
      unint64_t v6 = *(void *)(a1 + 8);
    }
    if (*(void *)&prime > v6) {
      goto LABEL_107;
    }
    if (*(void *)&prime >= v6) {
      goto LABEL_54;
    }
    unint64_t v19 = vcvtps_u32_f32((float)*(unint64_t *)(a1 + 24) / *(float *)(a1 + 32));
    if (v6 < 3 || (uint8x8_t v20 = (uint8x8_t)vcnt_s8((int8x8_t)v6), v20.i16[0] = vaddlv_u8(v20), v20.u32[0] > 1uLL))
    {
      unint64_t v19 = std::__next_prime(v19);
    }
    else
    {
      uint64_t v21 = 1 << -(char)__clz(v19 - 1);
      if (v19 >= 2) {
        unint64_t v19 = v21;
      }
    }
    if (*(void *)&prime <= v19) {
      int8x8_t prime = (int8x8_t)v19;
    }
    if (*(void *)&prime >= v6)
    {
      unint64_t v6 = *(void *)(a1 + 8);
      goto LABEL_54;
    }
    if (prime)
    {
LABEL_107:
      if (*(void *)&prime >> 61) {
        std::__throw_bad_array_new_length[abi:ne180100]();
      }
      unint64_t v13 = operator new(8 * *(void *)&prime);
      char v14 = *(void **)a1;
      *(void *)a1 = v13;
      if (v14) {
        operator delete(v14);
      }
      uint64_t v15 = 0;
      *(int8x8_t *)(a1 + 8) = prime;
      do
        *(void *)(*(void *)a1 + 8 * v15++) = 0;
      while (*(void *)&prime != v15);
      int v16 = *(void **)(a1 + 16);
      if (v16)
      {
        unint64_t v17 = v16[1];
        uint8x8_t v18 = (uint8x8_t)vcnt_s8(prime);
        v18.i16[0] = vaddlv_u8(v18);
        if (v18.u32[0] > 1uLL)
        {
          if (v17 >= *(void *)&prime) {
            v17 %= *(void *)&prime;
          }
        }
        else
        {
          v17 &= *(void *)&prime - 1;
        }
        *(void *)(*(void *)a1 + 8 * v17) = a1 + 16;
        for (unint64_t i = (void *)*v16; *v16; unint64_t i = (void *)*v16)
        {
          unint64_t v23 = i[1];
          if (v18.u32[0] > 1uLL)
          {
            if (v23 >= *(void *)&prime) {
              v23 %= *(void *)&prime;
            }
          }
          else
          {
            v23 &= *(void *)&prime - 1;
          }
          if (v23 == v17)
          {
            int v16 = i;
          }
          else if (*(void *)(*(void *)a1 + 8 * v23))
          {
            BOOL v24 = (void *)*i;
            if (*i)
            {
              BOOL v25 = i[2] == v24[2] && i[3] == v24[3];
              char v26 = i;
              if (v25)
              {
                do
                {
                  char v26 = v24;
                  BOOL v24 = (void *)*v24;
                  if (!v24) {
                    break;
                  }
                }
                while (i[2] == v24[2] && i[3] == v24[3]);
              }
            }
            else
            {
              char v26 = i;
            }
            *int v16 = v24;
            *char v26 = **(void **)(*(void *)a1 + 8 * v23);
            **(void **)(*(void *)a1 + 8 * v23) = i;
          }
          else
          {
            *(void *)(*(void *)a1 + 8 * v23) = v16;
            int v16 = i;
            unint64_t v17 = v23;
          }
        }
      }
      unint64_t v6 = (unint64_t)prime;
    }
    else
    {
      uint64_t v40 = *(void **)a1;
      *(void *)a1 = 0;
      if (v40) {
        operator delete(v40);
      }
      unint64_t v6 = 0;
      *(void *)(a1 + 8) = 0;
    }
  }
LABEL_54:
  uint8x8_t v28 = (uint8x8_t)vcnt_s8((int8x8_t)v6);
  v28.i16[0] = vaddlv_u8(v28);
  if (v28.u32[0] > 1uLL)
  {
    unint64_t v29 = v5;
    if (v6 <= v5) {
      unint64_t v29 = v5 % v6;
    }
  }
  else
  {
    unint64_t v29 = (v6 - 1) & v5;
  }
  char v30 = *(void **)(*(void *)a1 + 8 * v29);
  if (v30)
  {
    unint64_t v31 = (void *)*v30;
    if (*v30)
    {
      int v32 = 0;
      do
      {
        BOOL v33 = v31;
        unint64_t v34 = v31[1];
        if (v28.u32[0] > 1uLL)
        {
          unint64_t v35 = v34;
          if (v34 >= v6) {
            unint64_t v35 = v34 % v6;
          }
        }
        else
        {
          unint64_t v35 = v34 & (v6 - 1);
        }
        if (v35 != v29) {
          break;
        }
        if (v34 == v5)
        {
          BOOL v36 = v33[2] == *v4 && v33[3] == v4[1];
          BOOL v37 = v36;
        }
        else
        {
          BOOL v37 = 0;
        }
        if (v32 & !v37) {
          break;
        }
        v32 |= v37;
        unint64_t v31 = (void *)*v33;
        char v30 = v33;
      }
      while (*v33);
    }
  }
  unint64_t v38 = a2[1];
  if (v28.u32[0] > 1uLL)
  {
    if (v38 >= v6) {
      v38 %= v6;
    }
  }
  else
  {
    v38 &= v6 - 1;
  }
  if (!v30)
  {
    *a2 = *(void *)(a1 + 16);
    *(void *)(a1 + 16) = a2;
    *(void *)(*(void *)a1 + 8 * v38) = a1 + 16;
    if (!*a2) {
      goto LABEL_94;
    }
    unint64_t v39 = *(void *)(*a2 + 8);
    if (v28.u32[0] > 1uLL)
    {
      if (v39 >= v6) {
        v39 %= v6;
      }
    }
    else
    {
      v39 &= v6 - 1;
    }
LABEL_93:
    *(void *)(*(void *)a1 + 8 * v39) = a2;
    goto LABEL_94;
  }
  *a2 = *v30;
  *char v30 = a2;
  if (*a2)
  {
    unint64_t v39 = *(void *)(*a2 + 8);
    if (v28.u32[0] > 1uLL)
    {
      if (v39 >= v6) {
        v39 %= v6;
      }
    }
    else
    {
      v39 &= v6 - 1;
    }
    if (v39 != v38) {
      goto LABEL_93;
    }
  }
LABEL_94:
  ++*(void *)(a1 + 24);
}

void sub_1899476D8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t GEODefaultsGetUseTestDefaults()
{
  return 0;
}

uint64_t GEOCanUserMakeLagunaBeachContributions()
{
  return GEOConfigGetBOOL(GeoServicesConfig_LagunaBeachAllowMakingContributionsToMaps, (uint64_t)off_1E91138C8);
}

uint64_t GEOIsBAASupported()
{
  return 1;
}

void GEOSetCanUserMakeLagunaBeachContributions()
{
}

uint64_t GEOAreLagunaBeachSiriSuggestionsEnabled()
{
  return GEOConfigGetBOOL(GeoServicesConfig_LagunaBeachEnableSiriSuggestions, (uint64_t)off_1E91138B8);
}

void GEOSetAreLagunaBeachSiriSuggestionsEnabled()
{
}

id GEOGetGEOComposedStringLog_0()
{
  if (qword_1EB29FA88 != -1) {
    dispatch_once(&qword_1EB29FA88, &__block_literal_global_242);
  }
  os_log_t v0 = (void *)_MergedGlobals_234;

  return v0;
}

void __GEOGetGEOComposedStringLog_block_invoke_1()
{
  os_log_t v0 = os_log_create("com.apple.GeoServices", "GEOComposedString");
  id v1 = (void *)_MergedGlobals_234;
  _MergedGlobals_234 = (uint64_t)v0;
}

id GEOSpatialLookupAllCategories()
{
  os_log_t v0 = [MEMORY[0x1E4F1CA48] arrayWithCapacity:22];
  for (uint64_t i = 0; i != 22; ++i)
  {
    uint64_t v2 = [NSNumber numberWithInteger:i];
    [v0 addObject:v2];
  }

  return v0;
}

void sub_189953974(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189953DAC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *__p, uint64_t a17)
{
  if (__p) {
    operator delete(__p);
  }

  _Unwind_Resume(a1);
}

void sub_18995401C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1899542DC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_189954498(_Unwind_Exception *a1)
{
  if (v3) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v3);
  }

  _Unwind_Resume(a1);
}

uint64_t geo::MapEdgeRoad::MapEdgeRoad(uint64_t a1, uint64_t *a2)
{
  uint64_t v107 = *MEMORY[0x1E4F143B8];
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 8) = 0u;
  *(void *)a1 = &unk_1ED513558;
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = 0;
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  *(void *)&long long v103 = a1 + 40;
  BYTE8(v103) = 0;
  uint64_t v5 = v4 - v3;
  if (v4 == v3)
  {
    uint64_t v9 = 0;
    uint64_t v8 = 0;
  }
  else
  {
    std::vector<unsigned long long>::__vallocate[abi:ne180100]((void *)(a1 + 40), v5 >> 3);
    uint64_t v6 = 0;
    uint64_t v7 = *(void *)(a1 + 48);
    do
    {
      *(void *)(v7 + v6) = *(id *)(v3 + v6);
      v6 += 8;
    }
    while (v3 + v6 != v4);
    uint64_t v5 = v7 + v6;
    *(void *)(a1 + 48) = v7 + v6;
    uint64_t v8 = *(void *)(a1 + 56);
    uint64_t v9 = *(void *)(a1 + 40);
  }
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = 0;
  *(void *)(a1 + 88) = 0xBFF0000000000000;
  char v99 = (uint64_t *)(a1 + 64);
  *(void *)(a1 + 96) = 0;
  unint64_t v10 = (v5 - v9) >> 3;
  if (v10 < (v8 - v9) >> 3)
  {
    uint64_t v106 = a1 + 56;
    if (v5 == v9)
    {
      uint64_t v15 = 0;
      uint64_t v13 = 8 * v10;
    }
    else
    {
      unint64_t v11 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<zilch::StringList::Entry>>(a1 + 56, (v5 - v9) >> 3);
      uint64_t v12 = *(void *)(a1 + 40);
      uint64_t v5 = *(void *)(a1 + 48);
      uint64_t v13 = (uint64_t)&v11[8 * v10];
      uint64_t v15 = &v11[8 * v14];
      if (v5 != v12)
      {
        int v16 = &v11[8 * v10];
        do
        {
          uint64_t v17 = *(void *)(v5 - 8);
          v5 -= 8;
          *(void *)uint64_t v5 = 0;
          *((void *)v16 - 1) = v17;
          v16 -= 8;
        }
        while (v5 != v12);
        uint64_t v18 = *(void *)(a1 + 40);
        uint64_t v5 = *(void *)(a1 + 48);
        goto LABEL_14;
      }
    }
    uint64_t v18 = v5;
    int v16 = (char *)v13;
LABEL_14:
    *(void *)(a1 + 40) = v16;
    *(void *)(a1 + 48) = v13;
    unint64_t v19 = *(void *)(a1 + 56);
    *(void *)(a1 + 56) = v15;
    v104 = (void *)v5;
    unint64_t v105 = v19;
    *(void *)&long long v103 = v18;
    *((void *)&v103 + 1) = v18;
    std::__split_buffer<GEORoadEdge * {__strong}>::~__split_buffer((uint64_t)&v103);
  }
  uint8x8_t v20 = *(id **)(a1 + 40);
  uint64_t v21 = *(id **)(a1 + 48);
  if (v20 == v21)
  {
    unsigned int v27 = *(id **)(a1 + 40);
  }
  else
  {
    BOOL v22 = 0;
    do
    {
      id v23 = *v20;
      int v24 = [v23 vertexIndexA];
      int v25 = v24 - [v23 vertexIndexB];
      if (v25 < 0) {
        int v25 = -v25;
      }
      uint64_t v26 = *(void *)(a1 + 96) + v25 + v22;
      *(void *)(a1 + 96) = v26;
      BOOL v22 = v26 != 0;

      ++v20;
    }
    while (v20 != v21);
    unsigned int v27 = *(id **)(a1 + 40);
    uint8x8_t v20 = *(id **)(a1 + 48);
  }
  uint64_t v28 = (char *)v20 - (char *)v27;
  uint64_t v29 = *(void *)(a1 + 64);
  if (0xAAAAAAAAAAAAAAABLL * ((*(void *)(a1 + 80) - v29) >> 3) < v20 - v27)
  {
    if ((unint64_t)v28 >= 0x5555555555555551) {
      std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
    }
    uint64_t v30 = *(void *)(a1 + 72);
    uint64_t v106 = a1 + 80;
    *(void *)&long long v103 = std::__allocate_at_least[abi:ne180100]<std::allocator<std::vector<char>>>(v28 >> 3);
    *((void *)&v103 + 1) = v103 + v30 - v29;
    v104 = (void *)*((void *)&v103 + 1);
    unint64_t v105 = v103 + 24 * v31;
    std::vector<geo::_retain_ptr<GEOVectorTile * {__strong},geo::_retain_objc_arc,geo::_release_objc_arc,geo::_hash_objc,geo::_equal_objc>>::__swap_out_circular_buffer(v99, &v103);
    std::__split_buffer<geo::_retain_ptr<GEOVectorTile * {__strong},geo::_retain_objc_arc,geo::_release_objc_arc,geo::_hash_objc,geo::_equal_objc>>::~__split_buffer((uint64_t)&v103);
    unsigned int v27 = *(id **)(a1 + 40);
    uint8x8_t v20 = *(id **)(a1 + 48);
  }
  if (v27 != v20)
  {
    do
    {
      id v32 = *v27;
      BOOL v33 = [v32 road];
      unint64_t v34 = [v33 feature];
      unint64_t v35 = [v34 containingTile];
      BOOL v36 = *(void **)(a1 + 72);
      unint64_t v37 = *(void *)(a1 + 80);
      if ((unint64_t)v36 >= v37)
      {
        unint64_t v39 = 0xAAAAAAAAAAAAAAABLL * (((uint64_t)v36 - *v99) >> 3);
        unint64_t v40 = v39 + 1;
        if (v39 + 1 > 0xAAAAAAAAAAAAAAALL) {
          std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
        }
        unint64_t v41 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v37 - *v99) >> 3);
        if (2 * v41 > v40) {
          unint64_t v40 = 2 * v41;
        }
        if (v41 >= 0x555555555555555) {
          unint64_t v42 = 0xAAAAAAAAAAAAAAALL;
        }
        else {
          unint64_t v42 = v40;
        }
        uint64_t v106 = a1 + 80;
        if (v42) {
          unint64_t v42 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<std::vector<char>>>(v42);
        }
        else {
          uint64_t v43 = 0;
        }
        char v44 = (void *)(v42 + 24 * v39);
        *(void *)&long long v103 = v42;
        *((void *)&v103 + 1) = v44;
        unint64_t v105 = v42 + 24 * v43;
        geo::_retain_ptr<GEOVectorTile * {__strong},geo::_retain_objc_arc,geo::_release_objc_arc,geo::_hash_objc,geo::_equal_objc>::_retain_ptr(v44, v35);
        v104 = v44 + 3;
        std::vector<geo::_retain_ptr<GEOVectorTile * {__strong},geo::_retain_objc_arc,geo::_release_objc_arc,geo::_hash_objc,geo::_equal_objc>>::__swap_out_circular_buffer(v99, &v103);
        unint64_t v38 = *(void **)(a1 + 72);
        std::__split_buffer<geo::_retain_ptr<GEOVectorTile * {__strong},geo::_retain_objc_arc,geo::_release_objc_arc,geo::_hash_objc,geo::_equal_objc>>::~__split_buffer((uint64_t)&v103);
      }
      else
      {
        unint64_t v38 = geo::_retain_ptr<GEOVectorTile * {__strong},geo::_retain_objc_arc,geo::_release_objc_arc,geo::_hash_objc,geo::_equal_objc>::_retain_ptr(v36, v35)+ 3;
      }
      *(void *)(a1 + 72) = v38;

      ++v27;
    }
    while (v27 != v20);
    int v45 = *(id **)(a1 + 40);
    if (v45 != *(id **)(a1 + 48))
    {
      id v46 = *v45;
      id v47 = *(id *)(*(void *)(a1 + 48) - 8);
      char v48 = [v46 road];
      uint64_t v49 = [v46 vertexIndexA];
      id v50 = v48;
      uint64_t v101 = 0;
      uint64_t v102 = 0;
      int v51 = [v50 feature];
      int v52 = [v51 containingTile];
      uint64_t v53 = [v52 tileKey];
      uint64_t v54 = *(void *)v53;
      uint64_t v55 = *(void *)v53 << 32;
      unint64_t v56 = BYTE4(*(void *)v53) | ((((*(void *)v53 >> 40) | (*(unsigned __int16 *)(v53 + 8) << 24)) & 0x3FFFFFF) << 8) & 0xFF0FFFFFFFFFFFFFLL | ((unint64_t)(*(unsigned __int16 *)(v53 + 8) >> 2) << 34) & 0xFF0FFFFFFFFFFFFFLL | ((unint64_t)(*(unsigned char *)(v53 + 10) & 0xF) << 48) & 0xFF0FFFFFFFFFFFFFLL | ((unint64_t)(*(unsigned char *)(v53 + 10) >> 4) << 52);
      *(void *)((char *)&v103 + 1) = v55 & 0xFFFFC00000000000 | ((unint64_t)((*(void *)v53 >> 8) & 0x3F) << 40);
      LOBYTE(v103) = v54;
      *((void *)&v57 + 1) = v56;
      *(void *)&long long v57 = v55;
      uint64_t v101 = v103;
      uint64_t v102 = v57 >> 56;

      double v58 = GEOMapRectForGEOTileKey((uint64_t)&v101);
      double v60 = v59;
      double v62 = v61;
      double v64 = v63;
      unint64_t v65 = (float *)&geo::codec::multiSectionFeaturePoints((void *)[v50 get], 0, &v103)[v49];
      float v66 = *v65;
      long double v67 = exp(((v60 + (float)(1.0 - v65[1]) * v64) * 0.0078125 + -1048576.0) / 333772.107);
      double v68 = atan(v67);

      uint64_t v69 = [v46 road];
      unint64_t v70 = [v69 feature];
      char v71 = [v70 containingTile];
      std::allocate_shared[abi:ne180100]<geo::MapNodeRoad,std::allocator<geo::MapNodeRoad>,GEOLocationCoordinate2D,GEOVectorTile * {__strong},GeoCodecsConnectivityJunction *,void>((uint64_t *)&v100, v71, [v46 junctionA], (v68 * -2.0 + 1.57079633) * 57.2957795, (v58 + v66 * v62) * 0.0078125 * 0.000171661377 + -180.0);
      char v72 = *(std::__shared_weak_count **)(a1 + 16);
      *(_OWORD *)(a1 + 8) = v100;
      if (v72) {
        std::__shared_weak_count::__release_shared[abi:ne180100](v72);
      }

      unsigned int v73 = [v47 road];
      uint64_t v74 = [v47 vertexIndexB];
      id v75 = v73;
      char v76 = [v75 feature];
      char v77 = [v76 containingTile];
      uint64_t v78 = [v77 tileKey];
      uint64_t v79 = *(void *)v78;
      uint64_t v80 = *(void *)v78 << 32;
      unint64_t v81 = BYTE4(*(void *)v78) | ((((*(void *)v78 >> 40) | (*(unsigned __int16 *)(v78 + 8) << 24)) & 0x3FFFFFF) << 8) & 0xFF0FFFFFFFFFFFFFLL | ((unint64_t)(*(unsigned __int16 *)(v78 + 8) >> 2) << 34) & 0xFF0FFFFFFFFFFFFFLL | ((unint64_t)(*(unsigned char *)(v78 + 10) & 0xF) << 48) & 0xFF0FFFFFFFFFFFFFLL | ((unint64_t)(*(unsigned char *)(v78 + 10) >> 4) << 52);
      *(void *)((char *)&v103 + 1) = v80 & 0xFFFFC00000000000 | ((unint64_t)((*(void *)v78 >> 8) & 0x3F) << 40);
      LOBYTE(v103) = v79;
      *((void *)&v82 + 1) = v81;
      *(void *)&long long v82 = v80;
      uint64_t v101 = v103;
      uint64_t v102 = v82 >> 56;

      double v83 = GEOMapRectForGEOTileKey((uint64_t)&v101);
      double v85 = v84;
      double v87 = v86;
      double v89 = v88;
      unint64_t v90 = (float *)&geo::codec::multiSectionFeaturePoints((void *)[v75 get], 0, &v103)[v74];
      float v91 = *v90;
      long double v92 = exp(((v85 + (float)(1.0 - v90[1]) * v89) * 0.0078125 + -1048576.0) / 333772.107);
      double v93 = atan(v92);

      __int16 v94 = [v47 road];
      v95 = [v94 feature];
      v96 = [v95 containingTile];
      std::allocate_shared[abi:ne180100]<geo::MapNodeRoad,std::allocator<geo::MapNodeRoad>,GEOLocationCoordinate2D,GEOVectorTile * {__strong},GeoCodecsConnectivityJunction *,void>((uint64_t *)&v100, v96, [v47 junctionB], (v93 * -2.0 + 1.57079633) * 57.2957795, (v83 + v91 * v87) * 0.0078125 * 0.000171661377 + -180.0);
      v97 = *(std::__shared_weak_count **)(a1 + 32);
      *(_OWORD *)(a1 + 24) = v100;
      if (v97) {
        std::__shared_weak_count::__release_shared[abi:ne180100](v97);
      }
    }
  }
  return a1;
}

void sub_189954C54(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, _Unwind_Exception *exception_object, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18)
{
  if (a2)
  {
    __cxa_begin_catch(a1);
    __cxa_end_catch();
    JUMPOUT(0x189954660);
  }
  _Unwind_Resume(a1);
}

void geo::MapEdgeRoad::~MapEdgeRoad(geo::MapEdgeRoad *this)
{
  *(void *)this = &unk_1ED513558;
  uint64_t v2 = (void **)((char *)this + 40);
  uint64_t v3 = (void **)((char *)this + 64);
  std::vector<geo::_retain_ptr<GEOVectorTile * {__strong},geo::_retain_objc_arc,geo::_release_objc_arc,geo::_hash_objc,geo::_equal_objc>>::__destroy_vector::operator()[abi:ne180100](&v3);
  uint64_t v3 = v2;
  std::vector<GEORoadEdge * {__strong}>::__destroy_vector::operator()[abi:ne180100](&v3);
  geo::MapEdge::~MapEdge(this);
}

{
  uint64_t vars8;

  geo::MapEdgeRoad::~MapEdgeRoad(this);

  JUMPOUT(0x18C11F580);
}

BOOL geo::MapEdgeRoad::operator==(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned int (**)(uint64_t))(*(void *)a2 + 24))(a2)) {
    return 0;
  }
  uint64_t v5 = *(id **)(a1 + 40);
  uint64_t v6 = *(id **)(a1 + 48);
  uint64_t v7 = *(void *)(a2 + 40);
  uint64_t v8 = *(void *)(a2 + 48);
  BOOL v4 = v7 == v8 && v5 == v6;
  if (v5 != v6 && v7 != v8)
  {
    id v10 = *v5;
    id v11 = **(id **)(a2 + 40);
    uint64_t v12 = [v10 road];
    uint64_t v13 = [v12 feature];
    uint64_t v14 = [v13 containingTile];
    uint64_t v15 = [v14 tileKey];
    *(void *)int v25 = *(void *)v15;
    *(_DWORD *)&v25[7] = *(_DWORD *)(v15 + 7);

    int v16 = [v11 road];
    uint64_t v17 = [v16 feature];
    uint64_t v18 = [v17 containingTile];
    uint64_t v19 = [v18 tileKey];
    *(void *)int v24 = *(void *)v19;
    *(_DWORD *)&v24[7] = *(_DWORD *)(v19 + 7);

    BOOL v20 = *(void *)v25 == *(void *)v24 && *(void *)&v25[3] == *(void *)&v24[3];
    if (v20 && (uint64_t v21 = [v10 vertexIndexA], v21 == objc_msgSend(v11, "vertexIndexA")))
    {
      uint64_t v22 = [v10 vertexIndexB];
      BOOL v4 = v22 == [v11 vertexIndexB];
    }
    else
    {
      BOOL v4 = 0;
    }
  }
  return v4;
}

void sub_18995503C(_Unwind_Exception *a1)
{
  uint64_t v6 = v4;

  _Unwind_Resume(a1);
}

void geo::MapEdgeRoad::flip(geo::MapEdgeRoad *this@<X0>, _OWORD *a2@<X8>)
{
  int64x2_t v30 = 0uLL;
  uint64_t v31 = 0;
  unint64_t v2 = *((void *)this + 6);
  while (*((void *)this + 5) < v2)
  {
    BOOL v4 = *(void **)(v2 - 8);
    v2 -= 8;
    id v5 = v4;
    *((void *)&v24 + 1) = [v5 vertexIndexB];
    uint64_t v25 = [v5 vertexIndexA];
    uint64_t v26 = [v5 junctionIndexB];
    uint64_t v27 = [v5 junctionIndexA];
    uint64_t v28 = [v5 junctionB];
    uint64_t v29 = [v5 junctionA];
    uint64_t v6 = [GEORoadEdge alloc];
    uint64_t v7 = [v5 road];
    uint64_t v8 = [(GEORoadEdge *)v6 init:&v24 withMultiSectionFeatureInterface:v7];
    uint64_t v9 = v8;
    uint64_t v10 = v30.i64[1];
    if (v30.i64[1] >= (unint64_t)v31)
    {
      uint64_t v12 = (v30.i64[1] - v30.i64[0]) >> 3;
      if ((unint64_t)(v12 + 1) >> 61) {
        std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
      }
      unint64_t v13 = (uint64_t)&v31[-v30.i64[0]] >> 2;
      if (v13 <= v12 + 1) {
        unint64_t v13 = v12 + 1;
      }
      if ((unint64_t)&v31[-v30.i64[0]] >= 0x7FFFFFFFFFFFFFF8) {
        unint64_t v14 = 0x1FFFFFFFFFFFFFFFLL;
      }
      else {
        unint64_t v14 = v13;
      }
      unint64_t v35 = &v31;
      if (v14) {
        uint64_t v15 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<zilch::StringList::Entry>>((uint64_t)&v31, v14);
      }
      else {
        uint64_t v15 = 0;
      }
      int v16 = (uint64_t *)&v15[8 * v12];
      uint64_t v17 = &v15[8 * v14];
      unint64_t v34 = v17;
      *int v16 = v9;
      id v11 = v16 + 1;
      v33.i64[1] = (uint64_t)(v16 + 1);
      uint64_t v18 = (void *)v30.i64[1];
      uint64_t v19 = (void *)v30.i64[0];
      if (v30.i64[1] == v30.i64[0])
      {
        int64x2_t v21 = vdupq_n_s64(v30.u64[1]);
      }
      else
      {
        do
        {
          uint64_t v20 = *--v18;
          *uint64_t v18 = 0;
          *--int v16 = v20;
        }
        while (v18 != v19);
        int64x2_t v21 = v30;
        id v11 = (void *)v33.i64[1];
        uint64_t v17 = v34;
      }
      v30.i64[0] = (uint64_t)v16;
      v30.i64[1] = (uint64_t)v11;
      int64x2_t v33 = v21;
      uint64_t v22 = v31;
      uint64_t v31 = v17;
      unint64_t v34 = v22;
      uint64_t v32 = v21.i64[0];
      std::__split_buffer<GEORoadEdge * {__strong}>::~__split_buffer((uint64_t)&v32);
    }
    else
    {
      *(void *)v30.i64[1] = v8;
      id v11 = (void *)(v10 + 8);
    }
    v30.i64[1] = (uint64_t)v11;
  }
  std::allocate_shared[abi:ne180100]<geo::MapEdgeRoad,std::allocator<geo::MapEdgeRoad>,std::vector<GEORoadEdge * {__strong}> &,void>(v30.i64, &v24);
  *a2 = v24;
  *(void *)&long long v24 = &v30;
  std::vector<GEORoadEdge * {__strong}>::__destroy_vector::operator()[abi:ne180100]((void ***)&v24);
}

void sub_189955290(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void **a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19)
{
  a11 = (void **)&a19;
  std::vector<GEORoadEdge * {__strong}>::__destroy_vector::operator()[abi:ne180100](&a11);
  _Unwind_Resume(a1);
}

void geo::MapEdgeRoad::coordinates(geo::MapEdgeRoad *this@<X0>, uint64_t a2@<X8>)
{
  v54[2] = *MEMORY[0x1E4F143B8];
  *(void *)a2 = 0;
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  uint64_t v3 = *((void *)this + 5);
  if (*((void *)this + 6) != v3)
  {
    char v4 = 0;
    uint64_t v5 = 0;
    uint64_t v6 = (void *)(a2 + 16);
    do
    {
      id v7 = *(id *)(v3 + 8 * v5);
      uint64_t v52 = 0;
      uint64_t v53 = 0;
      id v51 = v7;
      uint64_t v8 = [v7 road];
      uint64_t v9 = [v8 feature];
      uint64_t v10 = [v9 containingTile];
      uint64_t v11 = [v10 tileKey];
      uint64_t v12 = *(void *)v11;
      uint64_t v13 = *(void *)v11 << 32;
      unint64_t v14 = BYTE4(*(void *)v11) | ((((*(void *)v11 >> 40) | (*(unsigned __int16 *)(v11 + 8) << 24)) & 0x3FFFFFF) << 8) & 0xFF0FFFFFFFFFFFFFLL | ((unint64_t)(*(unsigned __int16 *)(v11 + 8) >> 2) << 34) & 0xFF0FFFFFFFFFFFFFLL | ((unint64_t)(*(unsigned char *)(v11 + 10) & 0xF) << 48) & 0xFF0FFFFFFFFFFFFFLL | ((unint64_t)(*(unsigned char *)(v11 + 10) >> 4) << 52);
      *(void *)((char *)v54 + 1) = v13 & 0xFFFFC00000000000 | ((unint64_t)((*(void *)v11 >> 8) & 0x3F) << 40);
      LOBYTE(v54[0]) = v12;
      *((void *)&v15 + 1) = v14;
      *(void *)&long long v15 = v13;
      uint64_t v52 = v54[0];
      uint64_t v53 = v15 >> 56;

      double v16 = GEOMapRectForGEOTileKey((uint64_t)&v52);
      double v18 = v17;
      double v20 = v19;
      double v22 = v21;
      v54[0] = 0;
      id v23 = [v51 road];
      long long v24 = geo::codec::multiSectionFeaturePoints((void *)[v23 get], 0, v54);

      int v25 = [v51 vertexIndexA];
      int v26 = [v51 vertexIndexB];
      int v27 = v26;
      uint64_t v50 = v5;
      if (v25 > v26) {
        int v28 = -1;
      }
      else {
        int v28 = 1;
      }
      if (v4) {
        int v29 = v28;
      }
      else {
        int v29 = 0;
      }
      int v30 = v29 + v25;
      int v31 = v30 - v26;
      if (v30 - v26 < 0) {
        int v31 = v26 - v30;
      }
      std::vector<GEOLocationCoordinate2D>::reserve((void **)a2, (v31 + 1) + ((uint64_t)(*(void *)(a2 + 8) - *(void *)a2) >> 4));
      uint64_t v32 = v30;
      uint64_t v33 = v28;
      unint64_t v34 = *(double **)(a2 + 8);
      do
      {
        unint64_t v35 = (float *)&v24[v32];
        double v36 = v16 + *v35 * v20;
        long double v37 = exp(((v18 + (float)(1.0 - v35[1]) * v22) * 0.0078125 + -1048576.0) / 333772.107);
        double v38 = (atan(v37) * -2.0 + 1.57079633) * 57.2957795;
        double v39 = v36 * 0.0078125 * 0.000171661377 + -180.0;
        if ((unint64_t)v34 >= *v6)
        {
          unint64_t v40 = *(double **)a2;
          uint64_t v41 = ((uint64_t)v34 - *(void *)a2) >> 4;
          unint64_t v42 = v41 + 1;
          if ((unint64_t)(v41 + 1) >> 60) {
            std::vector<zilch::GeoCoordinates>::__throw_length_error[abi:ne180100]();
          }
          uint64_t v43 = *v6 - (void)v40;
          if (v43 >> 3 > v42) {
            unint64_t v42 = v43 >> 3;
          }
          if ((unint64_t)v43 >= 0x7FFFFFFFFFFFFFF0) {
            unint64_t v44 = 0xFFFFFFFFFFFFFFFLL;
          }
          else {
            unint64_t v44 = v42;
          }
          if (v44)
          {
            int v45 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::shared_ptr<zilch::TrafficDynamicTile::Incident>>>(a2 + 16, v44);
            unint64_t v40 = *(double **)a2;
            unint64_t v34 = *(double **)(a2 + 8);
          }
          else
          {
            int v45 = 0;
          }
          id v46 = (double *)&v45[16 * v41];
          double *v46 = v38;
          v46[1] = v39;
          id v47 = v46;
          if (v34 != v40)
          {
            do
            {
              *((_OWORD *)v47 - 1) = *((_OWORD *)v34 - 1);
              v47 -= 2;
              v34 -= 2;
            }
            while (v34 != v40);
            unint64_t v40 = *(double **)a2;
          }
          unint64_t v34 = v46 + 2;
          *(void *)a2 = v47;
          *(void *)(a2 + 8) = v46 + 2;
          *(void *)(a2 + 16) = &v45[16 * v44];
          if (v40) {
            operator delete(v40);
          }
        }
        else
        {
          *unint64_t v34 = v38;
          v34[1] = v39;
          v34 += 2;
        }
        *(void *)(a2 + 8) = v34;
        BOOL v48 = v32 == v27;
        v32 += v33;
      }
      while (!v48);

      uint64_t v5 = v50 + 1;
      uint64_t v3 = *((void *)this + 5);
      char v4 = 1;
    }
    while (v50 + 1 < (unint64_t)((*((void *)this + 6) - v3) >> 3));
  }
}

void sub_189955670(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12)
{
  unint64_t v14 = *(void **)v12;
  if (*(void *)v12)
  {
    *(void *)(v12 + 8) = v14;
    operator delete(v14);
  }
  _Unwind_Resume(a1);
}

void geo::MapEdgeRoad::coordinateIn(geo::MapEdgeRoad *this)
{
  v20[2] = *MEMORY[0x1E4F143B8];
  id v1 = (id *)*((void *)this + 5);
  if (v1 != *((id **)this + 6))
  {
    id v2 = *v1;
    uint64_t v3 = [v2 road];
    uint64_t v4 = [v2 vertexIndexA];
    id v5 = v3;
    uint64_t v6 = [v5 feature];
    id v7 = [v6 containingTile];
    uint64_t v8 = [v7 tileKey];
    uint64_t v9 = *(void *)v8;
    uint64_t v10 = *(void *)v8 << 32;
    unint64_t v11 = BYTE4(*(void *)v8) | ((((*(void *)v8 >> 40) | (*(unsigned __int16 *)(v8 + 8) << 24)) & 0x3FFFFFF) << 8) & 0xFF0FFFFFFFFFFFFFLL | ((unint64_t)(*(unsigned __int16 *)(v8 + 8) >> 2) << 34) & 0xFF0FFFFFFFFFFFFFLL | ((unint64_t)(*(unsigned char *)(v8 + 10) & 0xF) << 48) & 0xFF0FFFFFFFFFFFFFLL | ((unint64_t)(*(unsigned char *)(v8 + 10) >> 4) << 52);
    *(void *)((char *)v20 + 1) = v10 & 0xFFFFC00000000000 | ((unint64_t)((*(void *)v8 >> 8) & 0x3F) << 40);
    LOBYTE(v20[0]) = v9;
    *((void *)&v12 + 1) = v11;
    *(void *)&long long v12 = v10;
    v19[0] = v20[0];
    v19[1] = v12 >> 56;

    GEOMapRectForGEOTileKey((uint64_t)v19);
    double v14 = v13;
    double v16 = v15;
    double v17 = (float *)&geo::codec::multiSectionFeaturePoints((void *)[v5 get], 0, v20)[v4];
    long double v18 = exp(((v14 + (float)(1.0 - v17[1]) * v16) * 0.0078125 + -1048576.0) / 333772.107);
    atan(v18);
  }
}

void sub_1899558E4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void geo::MapEdgeRoad::coordinateOut(geo::MapEdgeRoad *this)
{
  v20[2] = *MEMORY[0x1E4F143B8];
  uint64_t v1 = *((void *)this + 6);
  if (*((void *)this + 5) != v1)
  {
    id v2 = *(id *)(v1 - 8);
    uint64_t v3 = [v2 road];
    uint64_t v4 = [v2 vertexIndexB];
    id v5 = v3;
    uint64_t v6 = [v5 feature];
    id v7 = [v6 containingTile];
    uint64_t v8 = [v7 tileKey];
    uint64_t v9 = *(void *)v8;
    uint64_t v10 = *(void *)v8 << 32;
    unint64_t v11 = BYTE4(*(void *)v8) | ((((*(void *)v8 >> 40) | (*(unsigned __int16 *)(v8 + 8) << 24)) & 0x3FFFFFF) << 8) & 0xFF0FFFFFFFFFFFFFLL | ((unint64_t)(*(unsigned __int16 *)(v8 + 8) >> 2) << 34) & 0xFF0FFFFFFFFFFFFFLL | ((unint64_t)(*(unsigned char *)(v8 + 10) & 0xF) << 48) & 0xFF0FFFFFFFFFFFFFLL | ((unint64_t)(*(unsigned char *)(v8 + 10) >> 4) << 52);
    *(void *)((char *)v20 + 1) = v10 & 0xFFFFC00000000000 | ((unint64_t)((*(void *)v8 >> 8) & 0x3F) << 40);
    LOBYTE(v20[0]) = v9;
    *((void *)&v12 + 1) = v11;
    *(void *)&long long v12 = v10;
    v19[0] = v20[0];
    v19[1] = v12 >> 56;

    GEOMapRectForGEOTileKey((uint64_t)v19);
    double v14 = v13;
    double v16 = v15;
    double v17 = (float *)&geo::codec::multiSectionFeaturePoints((void *)[v5 get], 0, v20)[v4];
    long double v18 = exp(((v14 + (float)(1.0 - v17[1]) * v16) * 0.0078125 + -1048576.0) / 333772.107);
    atan(v18);
  }
}

void sub_189955B30(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void geo::MapEdgeRoad::length(geo::MapEdgeRoad *this)
{
  v38[2] = *MEMORY[0x1E4F143B8];
  if (*((double *)this + 11) < 0.0)
  {
    *((void *)this + 11) = 0;
    uint64_t v2 = *((void *)this + 5);
    if (*((void *)this + 6) != v2)
    {
      char v3 = 0;
      unint64_t v4 = 0;
      double v5 = -180.0;
      double v6 = -180.0;
      do
      {
        id v7 = *(id *)(v2 + 8 * v4);
        uint64_t v36 = 0;
        uint64_t v37 = 0;
        uint64_t v8 = [v7 road];
        uint64_t v9 = [v8 feature];
        uint64_t v10 = [v9 containingTile];
        uint64_t v11 = [v10 tileKey];
        uint64_t v12 = *(void *)v11;
        uint64_t v13 = *(void *)v11 << 32;
        unint64_t v14 = BYTE4(*(void *)v11) | ((((*(void *)v11 >> 40) | (*(unsigned __int16 *)(v11 + 8) << 24)) & 0x3FFFFFF) << 8) & 0xFF0FFFFFFFFFFFFFLL | ((unint64_t)(*(unsigned __int16 *)(v11 + 8) >> 2) << 34) & 0xFF0FFFFFFFFFFFFFLL | ((unint64_t)(*(unsigned char *)(v11 + 10) & 0xF) << 48) & 0xFF0FFFFFFFFFFFFFLL | ((unint64_t)(*(unsigned char *)(v11 + 10) >> 4) << 52);
        *(void *)((char *)v38 + 1) = v13 & 0xFFFFC00000000000 | ((unint64_t)((*(void *)v11 >> 8) & 0x3F) << 40);
        LOBYTE(v38[0]) = v12;
        *((void *)&v15 + 1) = v14;
        *(void *)&long long v15 = v13;
        uint64_t v36 = v38[0];
        uint64_t v37 = v15 >> 56;

        double v35 = GEOMapRectForGEOTileKey((uint64_t)&v36);
        double v17 = v16;
        double v19 = v18;
        double v21 = v20;
        double v22 = [v7 road];
        id v23 = geo::codec::multiSectionFeaturePoints((void *)[v22 get], 0, v38);

        int v24 = [v7 vertexIndexA];
        int v25 = [v7 vertexIndexB];
        if (v24 > v25) {
          int v26 = -1;
        }
        else {
          int v26 = 1;
        }
        if (v24 > v25) {
          uint64_t v27 = -1;
        }
        else {
          uint64_t v27 = 1;
        }
        if ((v3 & 1) == 0) {
          int v26 = 0;
        }
        int v28 = v26 + v24;
        uint64_t v29 = v27 + v25 - v28;
        int v30 = (float *)&v23[v28] + 1;
        double v31 = v5;
        double v32 = v6;
        do
        {
          double v33 = v35 + *(v30 - 1) * v19;
          long double v34 = exp(((v17 + (float)(1.0 - *v30) * v21) * 0.0078125 + -1048576.0) / 333772.107);
          double v5 = (atan(v34) * -2.0 + 1.57079633) * 57.2957795;
          double v6 = v33 * 0.0078125 * 0.000171661377 + -180.0;
          if (v3) {
            *((long double *)this + 11) = GEOCalculateDistanceRadius(v5, v6, v31, v32, 6367000.0)
          }
                                        + *((double *)this + 11);
          v30 += 2 * v27;
          char v3 = 1;
          double v31 = v5;
          double v32 = v6;
          v29 -= v27;
        }
        while (v29);

        ++v4;
        uint64_t v2 = *((void *)this + 5);
      }
      while (v4 < (*((void *)this + 6) - v2) >> 3);
    }
  }
}

void sub_189955E80(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t geo::MapEdgeRoad::travelDirection(id **this)
{
  id v1 = *this[5];
  uint64_t v2 = [v1 road];
  LODWORD(v3) = [v2 travelDirection];

  unint64_t v4 = [v1 vertexIndexB];
  unint64_t v5 = [v1 vertexIndexA];
  if (v3 == 2) {
    int v6 = 1;
  }
  else {
    int v6 = v3;
  }
  if (v3 == 1) {
    unsigned int v7 = 2;
  }
  else {
    unsigned int v7 = v6;
  }
  if (v4 < v5) {
    uint64_t v3 = v7;
  }
  else {
    uint64_t v3 = v3;
  }

  return v3;
}

void sub_189955F60(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id geo::MapEdgeRoad::roadFeature(geo::MapEdgeRoad *this)
{
  id v1 = (id *)*((void *)this + 5);
  if (v1 == *((id **)this + 6))
  {
    uint64_t v2 = 0;
  }
  else
  {
    uint64_t v2 = [*v1 road];
  }

  return v2;
}

uint64_t geo::MapEdgeRoad::toString(id **this)
{
  uint64_t v38 = *MEMORY[0x1E4F143B8];
  std::ostringstream::basic_ostringstream[abi:ne180100]((uint64_t)v32);
  uint64_t v2 = geo::MapEdge::debugName((geo::MapEdge *)this);
  if (v2) {
    uint64_t v3 = (const char *)v2;
  }
  else {
    uint64_t v3 = "unnamed";
  }
  size_t v4 = strlen(v3);
  unint64_t v5 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v32, (uint64_t)v3, v4);
  std::ios_base::getloc((const std::ios_base *)((char *)v5 + *(void *)(*v5 - 24)));
  int v6 = std::locale::use_facet((const std::locale *)&v37, MEMORY[0x1E4FBA258]);
  ((void (*)(const std::locale::facet *, uint64_t))v6->__vftable[2].~facet_0)(v6, 10);
  std::locale::~locale((std::locale *)&v37);
  std::ostream::put();
  std::ostream::flush();
  *(void *)((char *)&v32[2] + *(void *)(v32[0] - 24)) = 10;
  ((void (*)(long long *__return_ptr, id **))(*this)[6])(&v37, this);
  uint64_t v8 = (char *)*((void *)&v37 + 1);
  unsigned int v7 = (char *)v37;
  if ((void)v37 != *((void *)&v37 + 1))
  {
    uint64_t v9 = (std::locale::id *)MEMORY[0x1E4FBA258];
    do
    {
      uint64_t v10 = (void *)std::ostream::operator<<();
      std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v10, (uint64_t)",", 1);
      uint64_t v11 = (void *)std::ostream::operator<<();
      std::ios_base::getloc((const std::ios_base *)((char *)v11 + *(void *)(*v11 - 24)));
      uint64_t v12 = std::locale::use_facet(&v35, v9);
      ((void (*)(const std::locale::facet *, uint64_t))v12->__vftable[2].~facet_0)(v12, 10);
      std::locale::~locale(&v35);
      std::ostream::put();
      std::ostream::flush();
      v7 += 16;
    }
    while (v7 != v8);
    unsigned int v7 = (char *)v37;
  }
  if (v7)
  {
    *((void *)&v37 + 1) = v7;
    operator delete(v7);
  }
  uint64_t v13 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v32, (uint64_t)"tiles:", 6);
  std::ios_base::getloc((const std::ios_base *)((char *)v13 + *(void *)(*v13 - 24)));
  unint64_t v14 = std::locale::use_facet((const std::locale *)&v37, MEMORY[0x1E4FBA258]);
  ((void (*)(const std::locale::facet *, uint64_t))v14->__vftable[2].~facet_0)(v14, 10);
  std::locale::~locale((std::locale *)&v37);
  std::ostream::put();
  std::ostream::flush();
  long long v15 = this[5];
  double v16 = this[6];
  if (v15 != v16)
  {
    double v17 = (std::locale::id *)MEMORY[0x1E4FBA258];
    do
    {
      id v18 = *v15;
      v35.__locale_ = 0;
      uint64_t v36 = 0;
      double v19 = [v18 road];
      double v20 = [v19 feature];
      double v21 = [v20 containingTile];
      uint64_t v22 = [v21 tileKey];
      uint64_t v23 = *(void *)v22;
      uint64_t v24 = *(void *)v22 << 32;
      unint64_t v25 = BYTE4(*(void *)v22) | ((((*(void *)v22 >> 40) | (*(unsigned __int16 *)(v22 + 8) << 24)) & 0x3FFFFFF) << 8) & 0xFF0FFFFFFFFFFFFFLL | ((unint64_t)(*(unsigned __int16 *)(v22 + 8) >> 2) << 34) & 0xFF0FFFFFFFFFFFFFLL | ((unint64_t)(*(unsigned char *)(v22 + 10) & 0xF) << 48) & 0xFF0FFFFFFFFFFFFFLL | ((unint64_t)(*(unsigned char *)(v22 + 10) >> 4) << 52);
      *(void *)((char *)&v37 + 1) = v24 & 0xFFFFC00000000000 | ((unint64_t)((*(void *)v22 >> 8) & 0x3F) << 40);
      LOBYTE(v37) = v23;
      *((void *)&v26 + 1) = v25;
      *(void *)&long long v26 = v24;
      v35.__locale_ = (std::locale::__imp *)v37;
      uint64_t v36 = v26 >> 56;

      GEOTileKeyAssertIsStandard((uint64_t)&v35);
      uint64_t v27 = (void *)std::ostream::operator<<();
      std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v27, (uint64_t)",", 1);
      int v28 = (void *)std::ostream::operator<<();
      std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v28, (uint64_t)",", 1);
      uint64_t v29 = (void *)std::ostream::operator<<();
      std::ios_base::getloc((const std::ios_base *)((char *)v29 + *(void *)(*v29 - 24)));
      int v30 = std::locale::use_facet((const std::locale *)&v37, v17);
      ((void (*)(const std::locale::facet *, uint64_t))v30->__vftable[2].~facet_0)(v30, 10);
      std::locale::~locale((std::locale *)&v37);
      std::ostream::put();
      std::ostream::flush();

      ++v15;
    }
    while (v15 != v16);
  }
  std::stringbuf::str();
  v32[0] = *MEMORY[0x1E4FBA418];
  *(void *)((char *)v32 + *(void *)(v32[0] - 24)) = *(void *)(MEMORY[0x1E4FBA418] + 24);
  v32[1] = MEMORY[0x1E4FBA470] + 16;
  if (v33 < 0) {
    operator delete((void *)v32[9]);
  }
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  return MEMORY[0x18C11F4F0](&v34);
}

void sub_189956528(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t geo::MapEdgeRoad::zAtPoint(geo::MapEdgeRoad *this, uint64_t a2)
{
  uint64_t v2 = (id *)*((void *)this + 5);
  uint64_t v3 = (id *)*((void *)this + 6);
  if (v2 == v3)
  {
LABEL_10:
    LOBYTE(v14) = 0;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v7 = 0;
    while (1)
    {
      id v8 = *v2;
      unint64_t v9 = [v8 vertexIndexA];
      if (v9 >= [v8 vertexIndexB])
      {
        uint64_t v10 = [v8 vertexIndexA];
        uint64_t v11 = [v8 vertexIndexB];
      }
      else
      {
        uint64_t v10 = [v8 vertexIndexB];
        uint64_t v11 = [v8 vertexIndexA];
      }
      unint64_t v12 = v10 - v11;
      if (v7 == ((uint64_t)(*((void *)this + 6) - *((void *)this + 5)) >> 3) - 1) {
        ++v12;
      }
      uint64_t v13 = a2 - v6;
      if (a2 - v6 < v12) {
        break;
      }
      ++v7;
      v6 += v12;

      if (++v2 == v3) {
        goto LABEL_10;
      }
    }
    uint64_t v26 = 0;
    long long v15 = [v8 road];
    double v16 = (std::__shared_weak_count **)[v15 getRoad];
    id v18 = geo::codec::multiSectionFeatureCharacteristicPoints(v16, (GeoCodecsRoadFeature *)&v26, v17);

    if (v26
      && ((unint64_t v19 = [v8 vertexIndexA], v19 >= objc_msgSend(v8, "vertexIndexB"))
       && (uint64_t v20 = [v8 vertexIndexA],
           uint64_t v13 = ~v13,
           v20 + v13 <= (unint64_t)[v8 vertexIndexB])
        ? (unint64_t v21 = [v8 vertexIndexB])
        : (unint64_t v21 = [v8 vertexIndexA] + v13),
          (uint64_t v22 = v26) != 0 && v21 >= *((unsigned int *)v18 + 3)))
    {
      uint64_t v24 = (unsigned int *)((char *)v18 + 112);
      do
      {
        unint64_t v25 = v24;
        if (!--v22) {
          break;
        }
        v24 += 25;
      }
      while (v21 >= *v25);
      int v14 = *(v25 - 23);
    }
    else
    {
      LOBYTE(v14) = 0;
    }
  }
  return v14;
}

void sub_189956790(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id geo::MapEdgeRoad::findEdgesOut(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7 = a2;
  id v8 = a3;
  id v9 = a4;
  if (*(void *)(a1 + 24))
  {
    v16[0] = 0;
    v16[1] = v16;
    v16[2] = 0x3032000000;
    v16[3] = __Block_byref_object_copy__40;
    v16[4] = __Block_byref_object_dispose__40;
    id v17 = *(id *)(*(void *)(a1 + 48) - 8);
    uint64_t v10 = *(void *)(a1 + 24);
    v13[0] = MEMORY[0x1E4F143A8];
    v13[1] = 3221225472;
    v13[2] = ___ZNK3geo11MapEdgeRoad12findEdgesOutEP12GEOMapAccessU13block_pointerFvNSt3__110shared_ptrINS_7MapEdgeEEEEU13block_pointerFvP13GEOMapRequestE_block_invoke;
    v13[3] = &unk_1E53D87C0;
    long long v15 = v16;
    id v14 = v8;
    uint64_t v11 = (*(void (**)(uint64_t, id, void *, id))(*(void *)v10 + 48))(v10, v7, v13, v9);

    _Block_object_dispose(v16, 8);
  }
  else
  {
    uint64_t v11 = 0;
  }

  return v11;
}

void sub_189956938(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id a20)
{
  _Block_object_dispose(&a15, 8);
  _Unwind_Resume(a1);
}

void ___ZNK3geo11MapEdgeRoad12findEdgesOutEP12GEOMapAccessU13block_pointerFvNSt3__110shared_ptrINS_7MapEdgeEEEEU13block_pointerFvP13GEOMapRequestE_block_invoke(uint64_t a1, void *a2)
{
  id v4 = **(id **)(*a2 + 40);
  uint64_t v5 = [v4 vertexIndexB];
  if (v5 != [*(id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) vertexIndexA]
    || ([v4 road],
        uint64_t v6 = objc_claimAutoreleasedReturnValue(),
        [*(id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) road],
        id v7 = objc_claimAutoreleasedReturnValue(),
        v7,
        v6,
        v6 != v7))
  {
    uint64_t v8 = *(void *)(a1 + 32);
    id v9 = (std::__shared_weak_count *)a2[1];
    uint64_t v10 = *a2;
    uint64_t v11 = v9;
    if (v9) {
      atomic_fetch_add_explicit(&v9->__shared_owners_, 1uLL, memory_order_relaxed);
    }
    (*(void (**)(uint64_t, uint64_t *))(v8 + 16))(v8, &v10);
    if (v11) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v11);
    }
  }
}

void sub_189956A50(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id geo::MapEdgeRoad::findEdgesFromStartNode(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7 = a2;
  id v8 = a3;
  id v9 = a4;
  uint64_t v10 = *(std::__shared_weak_count **)(a1 + 16);
  uint64_t v13 = *(uint64_t **)(a1 + 8);
  id v14 = v10;
  if (v10) {
    atomic_fetch_add_explicit(&v10->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  uint64_t v11 = geo::MapEdgeRoad::findEdgesForNode(a1, v7, &v13, 0, v8, v9);
  if (v14) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v14);
  }

  return v11;
}

void sub_189956B38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a10);
  }

  _Unwind_Resume(a1);
}

id geo::MapEdgeRoad::findEdgesForNode(uint64_t a1, void *a2, uint64_t **a3, int a4, void *a5, void *a6)
{
  id v11 = a2;
  id v12 = a5;
  id v13 = a6;
  if (*a3)
  {
    v19[0] = MEMORY[0x1E4F143A8];
    v19[1] = 3221225472;
    void v19[2] = ___ZNK3geo11MapEdgeRoad16findEdgesForNodeEP12GEOMapAccessNSt3__110shared_ptrINS_7MapNodeEEEbU13block_pointerFvNS4_INS_7MapEdgeEEEEU13block_pointerFvP13GEOMapRequestE_block_invoke;
    v19[3] = &unk_1E53E2370;
    uint64_t v21 = a1;
    id v20 = v12;
    id v14 = (void *)MEMORY[0x18C120660](v19);
    uint64_t v15 = **a3;
    if (a4) {
      double v16 = (void (**)(uint64_t *, id, void *, id))(v15 + 40);
    }
    else {
      double v16 = (void (**)(uint64_t *, id, void *, id))(v15 + 48);
    }
    id v17 = (*v16)(*a3, v11, v14, v13);
  }
  else
  {
    id v17 = 0;
  }

  return v17;
}

void sub_189956CC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{
  _Unwind_Resume(a1);
}

id geo::MapEdgeRoad::findEdgesToStartNode(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7 = a2;
  id v8 = a3;
  id v9 = a4;
  uint64_t v10 = *(std::__shared_weak_count **)(a1 + 16);
  id v13 = *(uint64_t **)(a1 + 8);
  id v14 = v10;
  if (v10) {
    atomic_fetch_add_explicit(&v10->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  id v11 = geo::MapEdgeRoad::findEdgesForNode(a1, v7, &v13, 1, v8, v9);
  if (v14) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v14);
  }

  return v11;
}

void sub_189956D9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a10);
  }

  _Unwind_Resume(a1);
}

id geo::MapEdgeRoad::findEdgesFromEndNode(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7 = a2;
  id v8 = a3;
  id v9 = a4;
  uint64_t v10 = *(std::__shared_weak_count **)(a1 + 32);
  id v13 = *(uint64_t **)(a1 + 24);
  id v14 = v10;
  if (v10) {
    atomic_fetch_add_explicit(&v10->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  id v11 = geo::MapEdgeRoad::findEdgesForNode(a1, v7, &v13, 0, v8, v9);
  if (v14) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v14);
  }

  return v11;
}

void sub_189956E78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a10);
  }

  _Unwind_Resume(a1);
}

id geo::MapEdgeRoad::findEdgesToEndNode(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7 = a2;
  id v8 = a3;
  id v9 = a4;
  uint64_t v10 = *(std::__shared_weak_count **)(a1 + 32);
  id v13 = *(uint64_t **)(a1 + 24);
  id v14 = v10;
  if (v10) {
    atomic_fetch_add_explicit(&v10->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  id v11 = geo::MapEdgeRoad::findEdgesForNode(a1, v7, &v13, 1, v8, v9);
  if (v14) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v14);
  }

  return v11;
}

void sub_189956F54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a10);
  }

  _Unwind_Resume(a1);
}

void ___ZNK3geo11MapEdgeRoad16findEdgesForNodeEP12GEOMapAccessNSt3__110shared_ptrINS_7MapNodeEEEbU13block_pointerFvNS4_INS_7MapEdgeEEEEU13block_pointerFvP13GEOMapRequestE_block_invoke(uint64_t a1, void *a2)
{
  id v4 = [**(id **)(*(void *)(a1 + 40) + 40) road];
  uint64_t v5 = [*(id *)(*(void *)(*a2 + 48) - 8) road];
  if (v4 != v5)
  {
    uint64_t v6 = *(void *)(a1 + 32);
    id v7 = (std::__shared_weak_count *)a2[1];
    uint64_t v8 = *a2;
    id v9 = v7;
    if (v7) {
      atomic_fetch_add_explicit(&v7->__shared_owners_, 1uLL, memory_order_relaxed);
    }
    (*(void (**)(uint64_t, uint64_t *))(v6 + 16))(v6, &v8);
    if (v9) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v9);
    }
  }
}

void sub_189957024(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a10);
  }

  _Unwind_Resume(a1);
}

uint64_t geo::MapEdgeRoad::type(geo::MapEdgeRoad *this)
{
  return 0;
}

uint64_t geo::MapEdgeRoad::coordinateCount(geo::MapEdgeRoad *this)
{
  return *((void *)this + 12);
}

id geo::MapEdgeRoad::feature(geo::MapEdgeRoad *this)
{
  id v1 = geo::MapEdgeRoad::roadFeature(this);
  uint64_t v2 = [v1 feature];

  return v2;
}

void sub_1899570A8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t geo::MapEdgeRoad::roadClass(geo::MapEdgeRoad *this)
{
  id v1 = geo::MapEdgeRoad::roadFeature(this);
  uint64_t v2 = [v1 roadClass];

  return v2;
}

void sub_1899570F0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t geo::MapEdgeRoad::formOfWay(geo::MapEdgeRoad *this)
{
  id v1 = geo::MapEdgeRoad::roadFeature(this);
  uint64_t v2 = [v1 formOfWay];

  return v2;
}

void sub_189957138(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void std::vector<geo::_retain_ptr<GEOVectorTile * {__strong},geo::_retain_objc_arc,geo::_release_objc_arc,geo::_hash_objc,geo::_equal_objc>>::__destroy_vector::operator()[abi:ne180100](void ***a1)
{
  id v1 = *a1;
  uint64_t v2 = (char *)**a1;
  if (v2)
  {
    id v4 = (char *)v1[1];
    uint64_t v5 = **a1;
    if (v4 != v2)
    {
      uint64_t v6 = v4 - 24;
      id v7 = v4 - 24;
      uint64_t v8 = v4 - 24;
      do
      {
        id v9 = *(void (***)(char *))v8;
        v8 -= 24;
        (*v9)(v7);
        v6 -= 24;
        BOOL v10 = v7 == v2;
        id v7 = v8;
      }
      while (!v10);
      uint64_t v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

void std::vector<geo::_retain_ptr<GEOVectorTile * {__strong},geo::_retain_objc_arc,geo::_release_objc_arc,geo::_hash_objc,geo::_equal_objc>>::__swap_out_circular_buffer(uint64_t *a1, void *a2)
{
  uint64_t v5 = *a1;
  uint64_t v4 = a1[1];
  uint64_t v6 = a2[1];
  if (v4 != *a1)
  {
    uint64_t v7 = v6 - 24;
    do
    {
      *(void *)(v6 - 24) = &unk_1ED513670;
      *(void *)(v6 - 16) = 0;
      v6 -= 24;
      uint64_t v8 = v4 - 24;
      id v9 = *(id *)(v4 - 16);
      BOOL v10 = *(void **)(v6 + 8);
      *(void *)(v6 + 8) = v9;

      v7 -= 24;
      uint64_t v4 = v8;
    }
    while (v8 != v5);
  }
  a2[1] = v6;
  uint64_t v11 = *a1;
  *a1 = v6;
  a2[1] = v11;
  uint64_t v12 = a1[1];
  a1[1] = a2[2];
  a2[2] = v12;
  uint64_t v13 = a1[2];
  a1[2] = a2[3];
  a2[3] = v13;
  *a2 = a2[1];
}

uint64_t geo::_retain_ptr<GEOVectorTile * {__strong},geo::_retain_objc_arc,geo::_release_objc_arc,geo::_hash_objc,geo::_equal_objc>::~_retain_ptr(uint64_t a1)
{
  *(void *)a1 = &unk_1ED513670;

  return a1;
}

void geo::_retain_ptr<GEOVectorTile * {__strong},geo::_retain_objc_arc,geo::_release_objc_arc,geo::_hash_objc,geo::_equal_objc>::~_retain_ptr(uint64_t a1)
{
  *(void *)a1 = &unk_1ED513670;

  JUMPOUT(0x18C11F580);
}

uint64_t std::__split_buffer<geo::_retain_ptr<GEOVectorTile * {__strong},geo::_retain_objc_arc,geo::_release_objc_arc,geo::_hash_objc,geo::_equal_objc>>::~__split_buffer(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 8);
  for (uint64_t i = *(void *)(a1 + 16); i != v3; uint64_t i = *(void *)(a1 + 16))
  {
    uint64_t v4 = *(void (***)(void))(i - 24);
    *(void *)(a1 + 16) = i - 24;
    (*v4)();
  }
  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

void *geo::_retain_ptr<GEOVectorTile * {__strong},geo::_retain_objc_arc,geo::_release_objc_arc,geo::_hash_objc,geo::_equal_objc>::_retain_ptr(void *a1, void *a2)
{
  id v3 = a2;
  *a1 = &unk_1ED513670;
  a1[1] = v3;
  return a1;
}

uint64_t std::allocate_shared[abi:ne180100]<geo::MapNodeRoad,std::allocator<geo::MapNodeRoad>,GEOLocationCoordinate2D,GEOVectorTile * {__strong},GeoCodecsConnectivityJunction *,void>(uint64_t *a1, void *a2, uint64_t a3, double a4, double a5)
{
  BOOL v10 = operator new(0x40uLL);
  v10[1] = 0;
  v10[2] = 0;
  *BOOL v10 = &unk_1ED518630;
  *(double *)&long long v12 = a4;
  *((double *)&v12 + 1) = a5;
  uint64_t result = geo::MapNode::MapNode((uint64_t)(v10 + 3), &v12, a2, a3);
  v10[3] = &unk_1ED5135E8;
  *a1 = result;
  a1[1] = (uint64_t)v10;
  return result;
}

void sub_1899574D4(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v1);
  operator delete(v3);
  _Unwind_Resume(a1);
}

void std::__shared_ptr_emplace<geo::MapNodeRoad>::~__shared_ptr_emplace(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_1ED518630;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void std::__shared_ptr_emplace<geo::MapNodeRoad>::~__shared_ptr_emplace(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_1ED518630;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x18C11F580);
}

uint64_t std::__shared_ptr_emplace<geo::MapNodeRoad>::__on_zero_shared(uint64_t a1)
{
  return (**(uint64_t (***)(void))(a1 + 24))();
}

void *std::allocate_shared[abi:ne180100]<geo::MapEdgeRoad,std::allocator<geo::MapEdgeRoad>,std::vector<GEORoadEdge * {__strong}> &,void>@<X0>(uint64_t *a1@<X1>, void *a2@<X8>)
{
  uint64_t v4 = operator new(0x80uLL);
  uint64_t result = std::__shared_ptr_emplace<geo::MapEdgeRoad>::__shared_ptr_emplace[abi:ne180100]<std::vector<GEORoadEdge * {__strong}> &,std::allocator<geo::MapEdgeRoad>,0>(v4, a1);
  *a2 = v4 + 3;
  a2[1] = v4;
  return result;
}

void sub_1899575D0(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void *std::__shared_ptr_emplace<geo::MapEdgeRoad>::__shared_ptr_emplace[abi:ne180100]<std::vector<GEORoadEdge * {__strong}> &,std::allocator<geo::MapEdgeRoad>,0>(void *a1, uint64_t *a2)
{
  a1[1] = 0;
  a1[2] = 0;
  *a1 = &unk_1ED5185F8;
  geo::MapEdgeRoad::MapEdgeRoad((uint64_t)(a1 + 3), a2);
  return a1;
}

void sub_18995762C(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void std::__shared_ptr_emplace<geo::MapEdgeRoad>::~__shared_ptr_emplace(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_1ED5185F8;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void std::__shared_ptr_emplace<geo::MapEdgeRoad>::~__shared_ptr_emplace(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_1ED5185F8;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x18C11F580);
}

uint64_t std::__shared_ptr_emplace<geo::MapEdgeRoad>::__on_zero_shared(uint64_t a1)
{
  return (**(uint64_t (***)(void))(a1 + 24))();
}

void sub_189957CC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t GEOMapItemIdentifierArrayToData(uint64_t a1)
{
  return [MEMORY[0x1E4F28DB0] archivedDataWithRootObject:a1 requiringSecureCoding:1 error:0];
}

id GEOMapItemIdentifierDataToArray(void *a1)
{
  v8[2] = *MEMORY[0x1E4F143B8];
  id v1 = (void *)MEMORY[0x1E4F28DC0];
  uint64_t v2 = (void *)MEMORY[0x1E4F1CAD0];
  id v3 = a1;
  v8[0] = objc_opt_class();
  v8[1] = objc_opt_class();
  uint64_t v4 = [MEMORY[0x1E4F1C978] arrayWithObjects:v8 count:2];
  uint64_t v5 = [v2 setWithArray:v4];
  uint64_t v6 = [v1 unarchivedObjectOfClasses:v5 fromData:v3 error:0];

  return v6;
}

uint64_t _GEOPDSpatialPlaceLookupCategoryForCategory(__CFString *a1)
{
  if (a1 == @"GEOSpatialPlaceLookupCategoryEntertainment") {
    return 1;
  }
  if (a1 == @"GEOSpatialPlaceLookupCategoryAmusementPark") {
    return 2;
  }
  if (a1 == @"GEOSpatialPlaceLookupCategoryAquarium") {
    return 3;
  }
  if (a1 == @"GEOSpatialPlaceLookupCategoryZoo") {
    return 4;
  }
  if (a1 == @"GEOSpatialPlaceLookupCategoryStadium") {
    return 5;
  }
  if (a1 == @"GEOSpatialPlaceLookupCategorySkatePark") {
    return 6;
  }
  if (a1 == @"GEOSpatialPlaceLookupCategoryCulture") {
    return 7;
  }
  if (a1 == @"GEOSpatialPlaceLookupCategoryLandmark") {
    return 8;
  }
  if (a1 == @"GEOSpatialPlaceLookupCategoryMuseum") {
    return 9;
  }
  if (a1 == @"GEOSpatialPlaceLookupCategoryRestaurant") {
    return 10;
  }
  if (a1 == @"GEOSpatialPlaceLookupCategoryNightlife") {
    return 11;
  }
  if (a1 == @"GEOSpatialPlaceLookupCategoryPark") {
    return 12;
  }
  if (a1 == @"GEOSpatialPlaceLookupCategoryAirport") {
    return 13;
  }
  if (a1 == @"GEOSpatialPlaceLookupCategoryShopping") {
    return 14;
  }
  if (a1 == @"GEOSpatialPlaceLookupCategoryBeach") {
    return 15;
  }
  if (a1 == @"GEOSpatialPlaceLookupCategoryMountain") {
    return 16;
  }
  if (a1 == @"GEOSpatialPlaceLookupCategoryFitness") {
    return 17;
  }
  if (a1 == @"GEOSpatialPlaceLookupCategoryActivity") {
    return 18;
  }
  if (a1 == @"GEOSpatialPlaceLookupCategoryDiving") {
    return 19;
  }
  if (a1 == @"GEOSpatialPlaceLookupCategoryHiking") {
    return 20;
  }
  if (a1 == @"GEOSpatialPlaceLookupCategoryPerformance") {
    return 21;
  }
  if (a1 == @"GEOSpatialPlaceLookupCategoryHospital") {
    return 22;
  }
  if (a1 == @"GEOSpatialPlaceLookupCategoryAmusementParkRide") {
    return 23;
  }
  return 0;
}

uint64_t _GEOPDSpatialEventLookupCategoryForCategory(__CFString *a1)
{
  if (a1 == @"GEOSpatialEventLookupCategoryArtsAndMuseums") {
    return 1;
  }
  if (a1 == @"GEOSpatialEventLookupCategoryBusinessAndTechnology") {
    return 2;
  }
  if (a1 == @"GEOSpatialEventLookupCategoryCommunity") {
    return 3;
  }
  if (a1 == @"GEOSpatialEventLookupCategoryDance") {
    return 4;
  }
  if (a1 == @"GEOSpatialEventLookupCategoryEducational") {
    return 5;
  }
  if (a1 == @"GEOSpatialEventLookupCategoryFamilyEvents") {
    return 6;
  }
  if (a1 == @"GEOSpatialEventLookupCategoryFestivalsAndFairs") {
    return 7;
  }
  if (a1 == @"GEOSpatialEventLookupCategoryMusicConcerts") {
    return 8;
  }
  if (a1 == @"GEOSpatialEventLookupCategoryNightLife") {
    return 9;
  }
  if (a1 == @"GEOSpatialEventLookupCategorySports") {
    return 10;
  }
  if (a1 == @"GEOSpatialEventLookupCategoryTheater") {
    return 11;
  }
  if (a1 == @"GEOSpatialEventLookupCategoryTours") {
    return 12;
  }
  if (a1 == @"GEOSpatialEventLookupCategoryAppleEvent") {
    return 13;
  }
  return 0;
}

__CFString *_GEOSpatialEventLookupCategoryForPDCategory(unsigned int a1)
{
  if (a1 > 0xD) {
    return @"GEOSpatialEventLookupCategoryUnknown";
  }
  else {
    return off_1E53E24E8[a1];
  }
}

void sub_189959CCC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, std::__shared_weak_count *a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *__p,uint64_t a21)
{
  if (v22) {
    operator delete(v22);
  }
  if (__p) {
    operator delete(__p);
  }
  if (a9) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a9);
  }

  _Unwind_Resume(a1);
}

float gm::Matrix<float,2,1>::distanceSquaredToPolyline<int,void>(float *a1, unint64_t a2, uint64_t a3, void *a4, float *a5)
{
  *a4 = 0;
  *a5 = 0.0;
  if (a2 < 2) {
    return 3.4028e38;
  }
  uint64_t v8 = 0;
  unint64_t v9 = a2 - 1;
  BOOL v10 = (float *)(a3 + 8);
  float v11 = 3.4028e38;
  do
  {
    float v12 = gm::Matrix<float,2,1>::nearestPointOffsetAlongLineSegment<int,void>(a1, v10 - 2, v10);
    float v13 = *a1 - (float)(*(v10 - 2) + (float)((float)(*v10 - *(v10 - 2)) * v12));
    float v14 = a1[1] - (float)(*(v10 - 1) + (float)((float)(v10[1] - *(v10 - 1)) * v12));
    float v15 = (float)((float)(v13 * v13) + 0.0) + (float)(v14 * v14);
    if (v15 < v11)
    {
      *a4 = v8;
      *a5 = v12;
      float v11 = v15;
    }
    ++v8;
    v10 += 2;
  }
  while (v9 != v8);
  return v11;
}

void sub_18995A2B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, id a12)
{
  if (v12) {
    operator delete(v12);
  }

  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchACHintMetadataReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 52);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 48)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  unsigned int v11 = ((*(unsigned __int8 *)(a1 + 60) >> 1) & 1)
      + (*(unsigned char *)(a1 + 60) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 2) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v7])
    {
      case -3:
        char v8 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        char v14 = v10 | (v11 > 2);
        if (v10 & 1 | (v11 > 2) | v8 & 1) {
          float v15 = 0;
        }
        else {
          float v15 = a3;
        }
        char v41 = (v7 != 0) | v14;
        double v16 = (int *)MEMORY[0x1E4F940E8];
        id v17 = (int *)MEMORY[0x1E4F940C8];
        id v18 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v11;
LABEL_6:
        uint64_t v12 = v9;
        uint64_t v13 = v10;
LABEL_8:
        ++v7;
        uint64_t v9 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v16) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v17)) {
      goto LABEL_62;
    }
    char v19 = 0;
    unsigned int v20 = 0;
    unint64_t v21 = 0;
    while (1)
    {
      uint64_t v22 = *v16;
      uint64_t v23 = *(void *)(v3 + v22);
      unint64_t v24 = v23 + 1;
      if (v23 == -1 || v24 > *(void *)(v3 + *v6)) {
        break;
      }
      char v25 = *(unsigned char *)(*(void *)(v3 + *v18) + v23);
      *(void *)(v3 + v22) = v24;
      v21 |= (unint64_t)(v25 & 0x7F) << v19;
      if ((v25 & 0x80) == 0) {
        goto LABEL_23;
      }
      v19 += 7;
      if (v20++ >= 9)
      {
        unint64_t v21 = 0;
        int v27 = *(unsigned __int8 *)(v3 + *v17);
        goto LABEL_25;
      }
    }
    *(unsigned char *)(v3 + *v17) = 1;
LABEL_23:
    int v27 = *(unsigned __int8 *)(v3 + *v17);
    if (*(unsigned char *)(v3 + *v17)) {
      unint64_t v21 = 0;
    }
LABEL_25:
    if (v27 || (v21 & 7) == 4)
    {
LABEL_62:
      if (v14)
      {
        char v36 = 1;
        goto LABEL_71;
      }
      if (v15)
      {
        while (1)
        {
          int v37 = *v15++;
          char v38 = 8;
          switch(v37)
          {
            case 0:
              goto LABEL_72;
            case 1:
              goto LABEL_69;
            case 2:
              char v38 = 2;
              goto LABEL_69;
            case 3:
              char v38 = 1;
              goto LABEL_69;
            case 4:
              char v38 = 4;
LABEL_69:
              *(unsigned char *)(a1 + 60) |= v38;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_72;
    }
    unint64_t v29 = v21 >> 3;
    BOOL v30 = v14;
    if (!((v15 == 0) | v14 & 1))
    {
      double v31 = v15;
      do
      {
        int v33 = *v31++;
        int v32 = v33;
        BOOL v30 = v33 != 0;
        if (v33) {
          BOOL v34 = v32 == v29;
        }
        else {
          BOOL v34 = 1;
        }
      }
      while (!v34);
    }
    switch((int)v29)
    {
      case 1:
        if (!v30 || (*(unsigned char *)(a1 + 60) & 8) != 0) {
          goto LABEL_60;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_70;
        }
        std::locale v35 = objc_alloc_init(GEOPDSearchKeyValueFloatPair);
        if (!GEOPDSearchKeyValueFloatPairReadAllFrom((uint64_t)v35, (void *)v3)) {
          goto LABEL_77;
        }
        PBReaderRecallMark();
        -[GEOPDSearchACHintMetadata _addNoFlagsFeature:](a1, v35);
        goto LABEL_59;
      case 2:
        if (!v30 || (*(unsigned char *)(a1 + 60) & 2) != 0) {
          goto LABEL_60;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_70;
        }
        std::locale v35 = objc_alloc_init(GEOPDAutocompleteEntry);
        if (!GEOPDAutocompleteEntryReadAllFrom((uint64_t)v35, (void *)v3, v9 & 1)) {
          goto LABEL_77;
        }
        PBReaderRecallMark();
        -[GEOPDSearchACHintMetadata _addNoFlagsBrooklynEntry:](a1, v35);
        goto LABEL_59;
      case 3:
        if (!v30 || (*(unsigned char *)(a1 + 60) & 1) != 0) {
          goto LABEL_60;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_70;
        }
        std::locale v35 = objc_alloc_init(GEOPDSearchAddressEntry);
        if (!GEOPDSearchAddressEntryReadAllFrom((uint64_t)v35, (void *)v3, v9 & 1)) {
          goto LABEL_77;
        }
        PBReaderRecallMark();
        -[GEOPDSearchACHintMetadata _addNoFlagsAddressEntry:](a1, v35);
        goto LABEL_59;
      case 4:
        if (!v30 || (*(unsigned char *)(a1 + 60) & 4) != 0)
        {
LABEL_60:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_70:
            char v36 = 0;
            goto LABEL_71;
          }
LABEL_61:
          if ((v41 & 1) == 0) {
            goto LABEL_62;
          }
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_70;
        }
        std::locale v35 = objc_alloc_init(GEOPDSearchBusinessEntry);
        if (GEOPDSearchBusinessEntryReadAllFrom((uint64_t)v35, (void *)v3))
        {
          PBReaderRecallMark();
          -[GEOPDSearchACHintMetadata _addNoFlagsBusinessEntry:](a1, v35);
LABEL_59:

          id v17 = (int *)MEMORY[0x1E4F940C8];
          goto LABEL_61;
        }
LABEL_77:

        char v36 = 0;
        id v17 = (int *)MEMORY[0x1E4F940C8];
LABEL_71:
        *(unsigned char *)(a1 + 60) |= 8u;
        *(unsigned char *)(a1 + 60) |= 2u;
        *(unsigned char *)(a1 + 60) |= 1u;
        *(unsigned char *)(a1 + 60) |= 4u;
        if (v36)
        {
LABEL_72:
          unint64_t v3 = *(unsigned char *)(v3 + *v17) == 0;
          if (v14) {
            goto LABEL_73;
          }
        }
        else
        {
          unint64_t v3 = 0;
          if (v14)
          {
LABEL_73:
            double v39 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = 0;
          }
        }
        return v3;
      default:
        if (!PBReaderSkipValueWithTag()) {
          goto LABEL_70;
        }
        goto LABEL_61;
    }
  }
}

void sub_18995ABCC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18995AD20(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18995AF34(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18995B150(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18995B884(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDSearchACHintMetadataCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  uint64_t v40 = *MEMORY[0x1E4F143B8];
  long long v32 = 0u;
  long long v33 = 0u;
  long long v34 = 0u;
  long long v35 = 0u;
  id v2 = a1[5];
  uint64_t v3 = [v2 countByEnumeratingWithState:&v32 objects:v39 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v33;
    while (1)
    {
      if (*(void *)v33 != v5) {
        objc_enumerationMutation(v2);
      }
      if (!--v4)
      {
        uint64_t v4 = [v2 countByEnumeratingWithState:&v32 objects:v39 count:16];
        if (!v4) {
          break;
        }
      }
    }
  }

  long long v30 = 0u;
  long long v31 = 0u;
  long long v28 = 0u;
  long long v29 = 0u;
  id v6 = a1[3];
  uint64_t v7 = [v6 countByEnumeratingWithState:&v28 objects:v38 count:16];
  if (v7)
  {
    uint64_t v8 = v7;
    uint64_t v9 = *(void *)v29;
    do
    {
      uint64_t v10 = 0;
      do
      {
        if (*(void *)v29 != v9) {
          objc_enumerationMutation(v6);
        }
        [*(id *)(*((void *)&v28 + 1) + 8 * v10++) readAll:1];
      }
      while (v8 != v10);
      uint64_t v8 = [v6 countByEnumeratingWithState:&v28 objects:v38 count:16];
    }
    while (v8);
  }

  long long v26 = 0u;
  long long v27 = 0u;
  long long v24 = 0u;
  long long v25 = 0u;
  id v11 = a1[2];
  uint64_t v12 = [v11 countByEnumeratingWithState:&v24 objects:v37 count:16];
  if (v12)
  {
    uint64_t v13 = v12;
    uint64_t v14 = *(void *)v25;
    do
    {
      uint64_t v15 = 0;
      do
      {
        if (*(void *)v25 != v14) {
          objc_enumerationMutation(v11);
        }
        -[GEOPDSearchAddressEntry readAll:](*(void *)(*((void *)&v24 + 1) + 8 * v15++), 1);
      }
      while (v13 != v15);
      uint64_t v13 = [v11 countByEnumeratingWithState:&v24 objects:v37 count:16];
    }
    while (v13);
  }

  long long v22 = 0u;
  long long v23 = 0u;
  long long v20 = 0u;
  long long v21 = 0u;
  id v16 = a1[4];
  uint64_t v17 = [v16 countByEnumeratingWithState:&v20 objects:v36 count:16];
  if (v17)
  {
    uint64_t v18 = v17;
    uint64_t v19 = *(void *)v21;
    while (1)
    {
      if (*(void *)v21 != v19) {
        objc_enumerationMutation(v16);
      }
      if (!--v18)
      {
        uint64_t v18 = [v16 countByEnumeratingWithState:&v20 objects:v36 count:16];
        if (!v18) {
          break;
        }
      }
    }
  }
}

unint64_t GEOPDSearchACHintMetadataReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 52))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDSearchACHintMetadataReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = [v8 position];
  *(_DWORD *)(a1 + 52) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOPDSearchACHintMetadataReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOPDSearchACHintMetadataReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDSearchACHintMetadataReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOPDSearchACHintMetadataCallReadAllRecursiveWithoutSynchronized((id *)a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_18995BCB4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18995C088(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDSearchACHintMetadataIsDirty(uint64_t a1)
{
  uint64_t v14 = *MEMORY[0x1E4F143B8];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  if ((*(unsigned char *)(a1 + 60) & 0x1F) != 0) {
    return 1;
  }
  if ((*(unsigned char *)(a1 + 60) & 1) == 0) {
    return 0;
  }
  long long v11 = 0u;
  long long v12 = 0u;
  long long v9 = 0u;
  long long v10 = 0u;
  id v3 = *(id *)(a1 + 16);
  uint64_t v2 = [v3 countByEnumeratingWithState:&v9 objects:v13 count:16];
  if (v2)
  {
    uint64_t v4 = *(void *)v10;
    while (2)
    {
      for (uint64_t i = 0; i != v2; ++i)
      {
        if (*(void *)v10 != v4) {
          objc_enumerationMutation(v3);
        }
        uint64_t v6 = *(void *)(*((void *)&v9 + 1) + 8 * i);
        if (v6)
        {
          os_unfair_lock_lock_with_options();
          os_unfair_lock_assert_owner((const os_unfair_lock *)(v6 + 40));
          int v7 = *(unsigned char *)(v6 + 44) & 7;
          os_unfair_lock_unlock((os_unfair_lock_t)(v6 + 40));
          if (v7)
          {
            uint64_t v2 = 1;
            goto LABEL_16;
          }
        }
      }
      uint64_t v2 = [v3 countByEnumeratingWithState:&v9 objects:v13 count:16];
      if (v2) {
        continue;
      }
      break;
    }
  }
LABEL_16:

  return v2;
}

os_unfair_lock_s *GEOPDSearchACHintMetadataIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOPDSearchACHintMetadataIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 14);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

unint64_t GEOPDSearchACHintMetadataClearSensitiveFields(uint64_t a1, uint64_t a2, int a3)
{
  -[GEOPDSearchACHintMetadata _readBrooklynEntrys](a1);
  unint64_t result = [*(id *)(a1 + 24) count];
  if (result)
  {
    for (unint64_t i = 0; i < result; ++i)
    {
      id v8 = [*(id *)(a1 + 24) objectAtIndexedSubscript:i];
      long long v9 = v8;
      if (a3 && GEOPDAutocompleteEntryHasSensitiveFields(v8, a2))
      {
        long long v10 = (void *)[v9 copy];
        long long v11 = [v10 business];
        [v11 clearSensitiveFields:a2];

        [*(id *)(a1 + 24) replaceObjectAtIndex:i withObject:v10];
      }
      else
      {
        [v9 clearSensitiveFields:a2];
      }

      unint64_t result = [*(id *)(a1 + 24) count];
    }
  }
  return result;
}

uint64_t GEOPDSearchACHintMetadataHasSensitiveFields(id *a1, uint64_t a2)
{
  uint64_t v15 = *MEMORY[0x1E4F143B8];
  if (!a1) {
    return 0;
  }
  long long v12 = 0u;
  long long v13 = 0u;
  long long v10 = 0u;
  long long v11 = 0u;
  id v3 = -[GEOPDSearchACHintMetadata brooklynEntrys](a1);
  uint64_t v4 = [v3 countByEnumeratingWithState:&v10 objects:v14 count:16];
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = *(void *)v11;
    while (2)
    {
      uint64_t v7 = 0;
      do
      {
        if (*(void *)v11 != v6) {
          objc_enumerationMutation(v3);
        }
        if (GEOPDAutocompleteEntryHasSensitiveFields(*(void **)(*((void *)&v10 + 1) + 8 * v7), a2))
        {
          uint64_t v8 = 1;
          goto LABEL_12;
        }
        ++v7;
      }
      while (v5 != v7);
      uint64_t v5 = [v3 countByEnumeratingWithState:&v10 objects:v14 count:16];
      if (v5) {
        continue;
      }
      break;
    }
  }
  uint64_t v8 = 0;
LABEL_12:

  return v8;
}

void sub_18995CB44(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18995CEC4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchAddressEntryReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 36);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 32)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  int v11 = ((*(unsigned __int8 *)(a1 + 44) >> 1) & 1) + (*(unsigned char *)(a1 + 44) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v7])
    {
      case -3:
        char v8 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        int v14 = v10 & 1 | v11;
        BOOL v15 = v14 != 0;
        if ((v14 != 0) | v8 & 1) {
          id v16 = 0;
        }
        else {
          id v16 = a3;
        }
        BOOL v17 = v16 == 0;
        if (v14) {
          BOOL v17 = 1;
        }
        BOOL v46 = v17;
        uint64_t v18 = (int *)MEMORY[0x1E4F940E8];
        uint64_t v19 = (int *)MEMORY[0x1E4F940C8];
        long long v20 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v11;
LABEL_6:
        uint64_t v12 = v9;
        uint64_t v13 = v10;
LABEL_8:
        ++v7;
        uint64_t v9 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v18) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v19)) {
      goto LABEL_61;
    }
    char v21 = 0;
    unsigned int v22 = 0;
    unint64_t v23 = 0;
    while (1)
    {
      uint64_t v24 = *v18;
      uint64_t v25 = *(void *)(v3 + v24);
      unint64_t v26 = v25 + 1;
      if (v25 == -1 || v26 > *(void *)(v3 + *v6)) {
        break;
      }
      char v27 = *(unsigned char *)(*(void *)(v3 + *v20) + v25);
      *(void *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0) {
        goto LABEL_25;
      }
      v21 += 7;
      if (v22++ >= 9)
      {
        unint64_t v23 = 0;
        int v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v19) = 1;
LABEL_25:
    int v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(unsigned char *)(v3 + *v19)) {
      unint64_t v23 = 0;
    }
LABEL_27:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_61:
      if (v15)
      {
        char v40 = 1;
        goto LABEL_72;
      }
      if (!v16) {
        goto LABEL_73;
      }
      while (1)
      {
        int v42 = *v16++;
        int v41 = v42;
        if (v42 == 1) {
          break;
        }
        if (v41 == 2)
        {
          char v43 = 1;
LABEL_70:
          *(unsigned char *)(a1 + 44) |= v43;
        }
        else if (!v41)
        {
          goto LABEL_73;
        }
      }
      char v43 = 2;
      goto LABEL_70;
    }
    unint64_t v31 = v23 >> 3;
    BOOL v32 = v15;
    if (!v46)
    {
      long long v33 = v16;
      do
      {
        int v35 = *v33++;
        int v34 = v35;
        BOOL v32 = v35 != 0;
        if (v35) {
          BOOL v36 = v34 == v31;
        }
        else {
          BOOL v36 = 1;
        }
      }
      while (!v36);
    }
    if (v31 == 2) {
      break;
    }
    if (v31 != 1)
    {
      if (!PBReaderSkipValueWithTag()) {
        goto LABEL_71;
      }
      goto LABEL_54;
    }
    if (!v32) {
      goto LABEL_53;
    }
    if ((*(unsigned char *)(a1 + 44) & 2) == 0)
    {
      if ((PBReaderPlaceMark() & 1) == 0) {
        goto LABEL_71;
      }
      int v37 = objc_alloc_init(GEOPDSearchEntry);
      if (!GEOPDSearchEntryReadAllFrom((uint64_t)v37, (void *)v3)) {
        goto LABEL_78;
      }
      PBReaderRecallMark();
      char v38 = *(void **)(a1 + 24);
      *(void *)(a1 + 24) = v37;

      --v7;
      goto LABEL_50;
    }
    if ((PBReaderSkipValueWithTag() & 1) == 0)
    {
LABEL_71:
      char v40 = 0;
      goto LABEL_72;
    }
    v7 += *(unsigned __int8 *)(a1 + 44) << 30 >> 31;
LABEL_54:
    if (v7) {
      char v39 = 1;
    }
    else {
      char v39 = v15;
    }
    if ((v39 & 1) == 0) {
      goto LABEL_61;
    }
  }
  if (!v32 || (*(unsigned char *)(a1 + 44) & 1) != 0)
  {
LABEL_53:
    if ((PBReaderSkipValueWithTag() & 1) == 0) {
      goto LABEL_71;
    }
    goto LABEL_54;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_71;
  }
  int v37 = objc_alloc_init(GEOPDSearchEntry);
  if (GEOPDSearchEntryReadAllFrom((uint64_t)v37, (void *)v3))
  {
    PBReaderRecallMark();
    -[GEOPDSearchAddressEntry _addNoFlagsCandidates:](a1, v37);

LABEL_50:
    uint64_t v19 = (int *)MEMORY[0x1E4F940C8];
    goto LABEL_54;
  }
LABEL_78:

  char v40 = 0;
  uint64_t v19 = (int *)MEMORY[0x1E4F940C8];
LABEL_72:
  *(unsigned char *)(a1 + 44) |= 2u;
  *(unsigned char *)(a1 + 44) |= 1u;
  if (v40)
  {
LABEL_73:
    unint64_t v3 = *(unsigned char *)(v3 + *v19) == 0;
    if (v15) {
      goto LABEL_74;
    }
  }
  else
  {
    unint64_t v3 = 0;
    if (v15)
    {
LABEL_74:
      unint64_t v44 = *(void **)(a1 + 8);
      *(void *)(a1 + 8) = 0;
    }
  }
  return v3;
}

void sub_18995D3F4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18995D8C8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDSearchAddressEntryCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v10 = *MEMORY[0x1E4F143B8];
  long long v5 = 0u;
  long long v6 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  id v1 = *(id *)(a1 + 16);
  uint64_t v2 = [v1 countByEnumeratingWithState:&v5 objects:v9 count:16];
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t v4 = *(void *)v6;
    while (1)
    {
      if (*(void *)v6 != v4) {
        objc_enumerationMutation(v1);
      }
      if (!--v3)
      {
        uint64_t v3 = [v1 countByEnumeratingWithState:&v5 objects:v9 count:16];
        if (!v3) {
          break;
        }
      }
    }
  }
}

unint64_t GEOPDSearchAddressEntryReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 36))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDSearchAddressEntryReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 40));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 32) = [v8 position];
  *(_DWORD *)(a1 + 36) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOPDSearchAddressEntryReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOPDSearchAddressEntryReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDSearchAddressEntryReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOPDSearchAddressEntryCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return Specified;
}

void sub_18995DB3C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSearchEntryIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  uint64_t v2 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    long long v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      unint64_t v17 = v8 >> 3;
      if ((v8 >> 3) == 3)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOLatLngIsValid(a1))
        {
LABEL_46:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else
      {
        if (v17 == 2)
        {
          if ((v8 & 7) != 0) {
            goto LABEL_46;
          }
          unsigned int v24 = 0;
          while (1)
          {
            uint64_t v25 = *v2;
            uint64_t v26 = *(void *)&a1[v25];
            unint64_t v27 = v26 + 1;
            if (v26 == -1 || v27 > *(void *)&a1[*v3]) {
              goto LABEL_41;
            }
            int v28 = *(char *)(*(void *)&a1[*v5] + v26);
            *(void *)&a1[v25] = v27;
            if (v28 < 0)
            {
              BOOL v23 = v24++ > 8;
              if (!v23) {
                continue;
              }
            }
            goto LABEL_43;
          }
        }
        if (v17 == 1)
        {
          if ((v8 & 7) != 0) {
            goto LABEL_46;
          }
          unsigned int v18 = 0;
          while (1)
          {
            uint64_t v19 = *v2;
            uint64_t v20 = *(void *)&a1[v19];
            unint64_t v21 = v20 + 1;
            if (v20 == -1 || v21 > *(void *)&a1[*v3]) {
              break;
            }
            int v22 = *(char *)(*(void *)&a1[*v5] + v20);
            *(void *)&a1[v19] = v21;
            if (v22 < 0)
            {
              BOOL v23 = v18++ > 8;
              if (!v23) {
                continue;
              }
            }
            goto LABEL_43;
          }
LABEL_41:
          a1[*v4] = 1;
          continue;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_46;
        }
      }
LABEL_43:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v29 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v29;
}

void sub_18995DFEC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18995E21C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchAddressLabeledTokenReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 68);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 64)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  unsigned int v11 = (vaddv_s16((int16x4_t)(*(void *)&vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int8 *)(a1 + 80)), (uint16x4_t)0xFFFBFFFEFFFFFFFCLL) & 0xFF01FF01FF01FF01))+ (*(unsigned char *)(a1 + 80) & 1)+ ((*(unsigned char *)(a1 + 80) & 8) != 0));
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v7])
    {
      case -3:
        char v8 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        BOOL v14 = v11 > 3;
        char v15 = v10 | v14;
        if (((v10 | v14) | v8)) {
          id v16 = 0;
        }
        else {
          id v16 = a3;
        }
        unint64_t v17 = (int *)MEMORY[0x1E4F940E8];
        unsigned int v18 = (int *)MEMORY[0x1E4F940C8];
        char v58 = (v16 == 0) | v15;
        uint64_t v19 = (int *)MEMORY[0x1E4F940B8];
        char v57 = v10 | v14;
        break;
      default:
        ++v11;
LABEL_6:
        uint64_t v12 = v9;
        uint64_t v13 = v10;
LABEL_8:
        ++v7;
        uint64_t v9 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v17) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v18)) {
      goto LABEL_94;
    }
    char v20 = 0;
    unsigned int v21 = 0;
    unint64_t v22 = 0;
    while (1)
    {
      uint64_t v23 = *v17;
      uint64_t v24 = *(void *)(v3 + v23);
      unint64_t v25 = v24 + 1;
      if (v24 == -1 || v25 > *(void *)(v3 + *v6)) {
        break;
      }
      char v26 = *(unsigned char *)(*(void *)(v3 + *v19) + v24);
      *(void *)(v3 + v23) = v25;
      v22 |= (unint64_t)(v26 & 0x7F) << v20;
      if ((v26 & 0x80) == 0) {
        goto LABEL_23;
      }
      v20 += 7;
      BOOL v27 = v21++ >= 9;
      if (v27)
      {
        unint64_t v22 = 0;
        int v28 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_25;
      }
    }
    *(unsigned char *)(v3 + *v18) = 1;
LABEL_23:
    int v28 = *(unsigned __int8 *)(v3 + *v18);
    if (*(unsigned char *)(v3 + *v18)) {
      unint64_t v22 = 0;
    }
LABEL_25:
    if (v28 || (v22 & 7) == 4)
    {
LABEL_94:
      if (v15)
      {
        char v51 = 1;
        goto LABEL_107;
      }
      if (v16)
      {
        while (1)
        {
          int v52 = *v16++;
          char v53 = 2;
          switch(v52)
          {
            case 0:
              goto LABEL_108;
            case 2:
              goto LABEL_103;
            case 3:
              char v53 = 16;
              goto LABEL_103;
            case 4:
              char v53 = 4;
              goto LABEL_103;
            case 5:
              char v53 = 32;
              goto LABEL_103;
            case 6:
              char v53 = 1;
              goto LABEL_103;
            case 7:
              char v53 = 8;
LABEL_103:
              *(unsigned char *)(a1 + 80) |= v53;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_108;
    }
    unint64_t v30 = v22 >> 3;
    BOOL v31 = v15;
    if ((v58 & 1) == 0)
    {
      BOOL v32 = v16;
      do
      {
        int v34 = *v32++;
        int v33 = v34;
        BOOL v31 = v34 != 0;
        if (v34) {
          BOOL v35 = v33 == v30;
        }
        else {
          BOOL v35 = 1;
        }
      }
      while (!v35);
    }
    switch((int)v30)
    {
      case 1:
        if ((v8 & 1) == 0) {
          goto LABEL_77;
        }
        char v36 = 0;
        unsigned int v37 = 0;
        uint64_t v38 = 0;
        while (1)
        {
          uint64_t v39 = *v17;
          uint64_t v40 = *(void *)(v3 + v39);
          unint64_t v41 = v40 + 1;
          if (v40 == -1 || v41 > *(void *)(v3 + *v6)) {
            break;
          }
          char v42 = *(unsigned char *)(*(void *)(v3 + *v19) + v40);
          *(void *)(v3 + v39) = v41;
          v38 |= (unint64_t)(v42 & 0x7F) << v36;
          if ((v42 & 0x80) == 0) {
            goto LABEL_80;
          }
          v36 += 7;
          BOOL v27 = v37++ >= 9;
          if (v27)
          {
            LODWORD(v38) = 0;
            goto LABEL_82;
          }
        }
        *(unsigned char *)(v3 + *v18) = 1;
LABEL_80:
        if (*(unsigned char *)(v3 + *v18)) {
          LODWORD(v38) = 0;
        }
LABEL_82:
        *(_DWORD *)(a1 + 76) = v38;
        goto LABEL_93;
      case 2:
        if (!v31 || (*(unsigned char *)(a1 + 80) & 2) != 0) {
          goto LABEL_77;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_106;
        }
        unint64_t v56 = objc_alloc_init(GEOPDSearchStringStringPair);
        if (!GEOPDSearchStringStringPairReadAllFrom((uint64_t)v56, (void *)v3, v9 & 1)) {
          goto LABEL_105;
        }
        PBReaderRecallMark();
        -[GEOPDSearchAddressLabeledToken _addNoFlagsGeoDecoration:](a1, v56);
LABEL_63:
        id v47 = v56;
LABEL_64:

        goto LABEL_92;
      case 3:
        if (!v31) {
          goto LABEL_77;
        }
        if ((*(unsigned char *)(a1 + 80) & 0x10) == 0)
        {
          uint64_t v44 = PBReaderReadString();
          uint64_t v45 = 48;
          goto LABEL_58;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_106;
        }
        char v50 = 8 * *(unsigned char *)(a1 + 80);
        goto LABEL_91;
      case 4:
        if (!v31) {
          goto LABEL_77;
        }
        if ((*(unsigned char *)(a1 + 80) & 4) == 0)
        {
          uint64_t v44 = PBReaderReadString();
          uint64_t v45 = 32;
LABEL_58:
          BOOL v46 = *(void **)(a1 + v45);
          *(void *)(a1 + v45) = v44;
          goto LABEL_76;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_106;
        }
        char v50 = 32 * *(unsigned char *)(a1 + 80);
        goto LABEL_91;
      case 5:
        if (!v31 || (*(unsigned char *)(a1 + 80) & 0x20) != 0) {
          goto LABEL_77;
        }
        PBReaderReadString();
        id v47 = (GEOPDSearchStringStringPair *)objc_claimAutoreleasedReturnValue();
        if (!v47) {
          goto LABEL_64;
        }
        unint64_t v56 = v47;
        -[GEOPDSearchAddressLabeledToken _addNoFlagsUnPaddedDoorNumbers:](a1, v47);
        goto LABEL_63;
      case 6:
        if (!v31) {
          goto LABEL_77;
        }
        if (*(unsigned char *)(a1 + 80))
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_106;
          }
          v7 -= *(unsigned char *)(a1 + 80) & 1;
          goto LABEL_92;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_106;
        }
        unint64_t v56 = objc_alloc_init(GEOPDSearchGeoDecoration);
        if (!GEOPDSearchGeoDecorationReadAllFrom((uint64_t)v56, (void *)v3, v9 & 1)) {
          goto LABEL_105;
        }
        PBReaderRecallMark();
        uint64_t v48 = 16;
        goto LABEL_75;
      case 7:
        if (!v31)
        {
LABEL_77:
          char v49 = PBReaderSkipValueWithTag();
          unsigned int v18 = (int *)MEMORY[0x1E4F940C8];
          char v15 = v57;
          if ((v49 & 1) == 0)
          {
LABEL_104:
            char v51 = 0;
            goto LABEL_107;
          }
LABEL_93:
          if (!(v15 & 1 | (v7 != 0))) {
            goto LABEL_94;
          }
          continue;
        }
        if ((*(unsigned char *)(a1 + 80) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_106;
          }
          char v50 = 16 * *(unsigned char *)(a1 + 80);
LABEL_91:
          v7 += v50 >> 7;
LABEL_92:
          char v15 = v57;
          unsigned int v18 = (int *)MEMORY[0x1E4F940C8];
          goto LABEL_93;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_106;
        }
        unint64_t v56 = objc_alloc_init(GEOPDSearchGeoDecoration);
        if (GEOPDSearchGeoDecorationReadAllFrom((uint64_t)v56, (void *)v3, v9 & 1))
        {
          PBReaderRecallMark();
          uint64_t v48 = 40;
LABEL_75:
          BOOL v46 = *(void **)(a1 + v48);
          *(void *)(a1 + v48) = v56;
LABEL_76:

          --v7;
          goto LABEL_92;
        }
LABEL_105:

LABEL_106:
        char v51 = 0;
        char v15 = v57;
        unsigned int v18 = (int *)MEMORY[0x1E4F940C8];
LABEL_107:
        *(unsigned char *)(a1 + 80) |= 2u;
        *(unsigned char *)(a1 + 80) |= 0x10u;
        *(unsigned char *)(a1 + 80) |= 4u;
        *(unsigned char *)(a1 + 80) |= 0x20u;
        *(unsigned char *)(a1 + 80) |= 1u;
        *(unsigned char *)(a1 + 80) |= 8u;
        if (v51)
        {
LABEL_108:
          unint64_t v3 = *(unsigned char *)(v3 + *v18) == 0;
          if (v15) {
            goto LABEL_109;
          }
        }
        else
        {
          unint64_t v3 = 0;
          if (v15)
          {
LABEL_109:
            uint64_t v54 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = 0;
          }
        }
        return v3;
      default:
        int v43 = PBReaderSkipValueWithTag();
        unsigned int v18 = (int *)MEMORY[0x1E4F940C8];
        char v15 = v57;
        if (!v43) {
          goto LABEL_104;
        }
        goto LABEL_93;
    }
  }
}

void sub_18995ECFC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18995EE3C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18995F52C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18995F628(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDSearchAddressLabeledTokenCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  long long v7 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  long long v10 = 0u;
  id v2 = *(id *)(a1 + 24);
  uint64_t v3 = [v2 countByEnumeratingWithState:&v7 objects:v11 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v8;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v8 != v5) {
          objc_enumerationMutation(v2);
        }
        -[GEOPDSearchStringStringPair readAll:](*(void *)(*((void *)&v7 + 1) + 8 * v6++), 1);
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v7 objects:v11 count:16];
    }
    while (v4);
  }

  -[GEOPDSearchGeoDecoration readAll:](*(void *)(a1 + 16), 1);
  -[GEOPDSearchGeoDecoration readAll:](*(void *)(a1 + 40), 1);
}

unint64_t GEOPDSearchAddressLabeledTokenReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 68))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDSearchAddressLabeledTokenReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)long long v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 72));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 64) = [v8 position];
  *(_DWORD *)(a1 + 68) = [v8 length];
  if (a3) {
    long long v9 = (int *)&GEOPDSearchAddressLabeledTokenReadAllFrom_recursiveTag;
  }
  else {
    long long v9 = (int *)&GEOPDSearchAddressLabeledTokenReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDSearchAddressLabeledTokenReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOPDSearchAddressLabeledTokenCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
  return Specified;
}

void sub_18995FE8C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSearchAddressLabeledTokenIsValid(char *a1)
{
  uint64_t v31 = *MEMORY[0x1E4F143B8];
  [a1 position];
  [a1 length];
  BOOL v2 = 0;
  int v30 = 0;
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v29 = 0;
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v6 = (int *)MEMORY[0x1E4F940B8];
    while (!a1[*v5])
    {
      char v7 = 0;
      unsigned int v8 = 0;
      unint64_t v9 = 0;
      while (1)
      {
        uint64_t v10 = *v3;
        uint64_t v11 = *(void *)&a1[v10];
        unint64_t v12 = v11 + 1;
        if (v11 == -1 || v12 > *(void *)&a1[*v4]) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)&a1[*v6] + v11);
        *(void *)&a1[v10] = v12;
        v9 |= (unint64_t)(v13 & 0x7F) << v7;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v7 += 7;
        if (v8++ >= 9)
        {
          unint64_t v9 = 0;
          int v15 = a1[*v5];
          goto LABEL_14;
        }
      }
      a1[*v5] = 1;
LABEL_12:
      int v15 = a1[*v5];
      if (a1[*v5]) {
        unint64_t v9 = 0;
      }
LABEL_14:
      int v16 = v9 & 7;
      if (v15 || v16 == 4) {
        break;
      }
      switch((v9 >> 3))
      {
        case 1u:
          uint64_t v18 = v29;
          if (v29)
          {
            if (v29 == 1) {
              goto LABEL_69;
            }
            if (HIDWORD(v29))
            {
              if (HIDWORD(v29) == 1 || v30) {
                goto LABEL_69;
              }
              uint64_t v18 = 2;
            }
            else
            {
              uint64_t v18 = 1;
            }
          }
          *((_DWORD *)&v29 + v18) = 1;
          if (v16) {
            goto LABEL_69;
          }
          unsigned int v21 = 0;
          do
          {
            uint64_t v22 = *v3;
            uint64_t v23 = *(void *)&a1[v22];
            unint64_t v24 = v23 + 1;
            if (v23 == -1 || v24 > *(void *)&a1[*v4])
            {
              a1[*v5] = 1;
              goto LABEL_63;
            }
            int v25 = *(char *)(*(void *)&a1[*v6] + v23);
            *(void *)&a1[v22] = v24;
            if ((v25 & 0x80000000) == 0) {
              break;
            }
          }
          while (v21++ <= 8);
          goto LABEL_63;
        case 2u:
          if (v16 == 2 && PBReaderPlaceMark() && GEOPDSearchStringStringPairIsValid(a1)) {
            goto LABEL_32;
          }
          goto LABEL_69;
        case 3u:
          uint64_t v19 = v29;
          if (!v29) {
            goto LABEL_58;
          }
          if (v29 == 3) {
            goto LABEL_69;
          }
          if (HIDWORD(v29))
          {
            if (HIDWORD(v29) == 3 || v30) {
              goto LABEL_69;
            }
            uint64_t v19 = 2;
          }
          else
          {
            uint64_t v19 = 1;
          }
LABEL_58:
          *((_DWORD *)&v29 + v19) = 3;
          if (v16 != 2) {
            goto LABEL_69;
          }
          goto LABEL_62;
        case 4u:
          uint64_t v20 = v29;
          if (!v29) {
            goto LABEL_61;
          }
          if (v29 == 4) {
            goto LABEL_69;
          }
          if (HIDWORD(v29))
          {
            if (HIDWORD(v29) == 4 || v30)
            {
LABEL_69:
              PBReaderRecallMark();
              return 0;
            }
            uint64_t v20 = 2;
          }
          else
          {
            uint64_t v20 = 1;
          }
LABEL_61:
          *((_DWORD *)&v29 + v20) = 4;
          if (v16 != 2) {
            goto LABEL_69;
          }
LABEL_62:
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_69;
          }
LABEL_63:
          if (*(void *)&a1[*v3] >= *(void *)&a1[*v4]) {
            goto LABEL_64;
          }
          break;
        case 5u:
          if (v16 == 2) {
            goto LABEL_62;
          }
          goto LABEL_69;
        case 6u:
        case 7u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOPDSearchGeoDecorationIsValid(a1)) {
            goto LABEL_69;
          }
LABEL_32:
          PBReaderRecallMark();
          goto LABEL_63;
        default:
          goto LABEL_62;
      }
    }
LABEL_64:
    BOOL v2 = v30 != 0;
  }
  if (a1[*v5]) {
    BOOL v27 = 0;
  }
  else {
    BOOL v27 = v2;
  }
  PBReaderRecallMark();
  return v27;
}

BOOL GEOPDSearchStringStringPairIsValid(char *a1)
{
  v28[1] = *MEMORY[0x1E4F143B8];
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  v28[0] = 0;
  uint64_t v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_36;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4)
      {
LABEL_36:
        BOOL v25 = HIDWORD(v28[0]) != 0;
        goto LABEL_38;
      }
      if ((v8 >> 3) == 1)
      {
        uint64_t v21 = 0;
        char v22 = 1;
        while (1)
        {
          char v23 = v22;
          int v24 = *((_DWORD *)v28 + v21);
          if (!v24) {
            break;
          }
          if (v24 != 1)
          {
            char v22 = 0;
            uint64_t v21 = 1;
            if (v23) {
              continue;
            }
          }
          goto LABEL_42;
        }
        *((_DWORD *)v28 + v21) = 1;
        if (v15 != 2)
        {
LABEL_42:
          PBReaderRecallMark();
          return 0;
        }
      }
      else if ((v8 >> 3) == 2)
      {
        uint64_t v17 = 0;
        char v18 = 1;
        while (1)
        {
          char v19 = v18;
          int v20 = *((_DWORD *)v28 + v17);
          if (!v20) {
            break;
          }
          if (v20 != 2)
          {
            char v18 = 0;
            uint64_t v17 = 1;
            if (v19) {
              continue;
            }
          }
          goto LABEL_42;
        }
        *((_DWORD *)v28 + v17) = 2;
        if (v15 != 2) {
          goto LABEL_42;
        }
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        goto LABEL_42;
      }
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_36;
      }
    }
  }
  BOOL v25 = 0;
LABEL_38:
  if (a1[*v4]) {
    BOOL v26 = 0;
  }
  else {
    BOOL v26 = v25;
  }
  PBReaderRecallMark();
  return v26;
}

BOOL GEOPDSearchGeoDecorationIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 != 2) {
            goto LABEL_127;
          }
          goto LABEL_123;
        case 2u:
          if ((v8 & 7) != 0) {
            goto LABEL_127;
          }
          unsigned int v17 = 0;
          while (1)
          {
            uint64_t v18 = *v2;
            uint64_t v19 = *(void *)&a1[v18];
            unint64_t v20 = v19 + 1;
            if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
              goto LABEL_121;
            }
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if (v21 < 0)
            {
              BOOL v22 = v17++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_124;
          }
        case 3u:
          if ((v8 & 7) != 0) {
            goto LABEL_127;
          }
          unsigned int v23 = 0;
          while (1)
          {
            uint64_t v24 = *v2;
            uint64_t v25 = *(void *)&a1[v24];
            unint64_t v26 = v25 + 1;
            if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
              goto LABEL_121;
            }
            int v27 = *(char *)(*(void *)&a1[*v5] + v25);
            *(void *)&a1[v24] = v26;
            if (v27 < 0)
            {
              BOOL v22 = v23++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_124;
          }
        case 4u:
          if ((v8 & 7) != 0) {
            goto LABEL_127;
          }
          unsigned int v28 = 0;
          while (1)
          {
            uint64_t v29 = *v2;
            uint64_t v30 = *(void *)&a1[v29];
            unint64_t v31 = v30 + 1;
            if (v30 == -1 || v31 > *(void *)&a1[*v3]) {
              goto LABEL_121;
            }
            int v32 = *(char *)(*(void *)&a1[*v5] + v30);
            *(void *)&a1[v29] = v31;
            if (v32 < 0)
            {
              BOOL v22 = v28++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_124;
          }
        case 5u:
          if ((v8 & 7) != 0) {
            goto LABEL_127;
          }
          unsigned int v33 = 0;
          while (1)
          {
            uint64_t v34 = *v2;
            uint64_t v35 = *(void *)&a1[v34];
            unint64_t v36 = v35 + 1;
            if (v35 == -1 || v36 > *(void *)&a1[*v3]) {
              goto LABEL_121;
            }
            int v37 = *(char *)(*(void *)&a1[*v5] + v35);
            *(void *)&a1[v34] = v36;
            if (v37 < 0)
            {
              BOOL v22 = v33++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_124;
          }
        case 6u:
          if ((v8 & 7) != 0) {
            goto LABEL_127;
          }
          unsigned int v38 = 0;
          while (1)
          {
            uint64_t v39 = *v2;
            uint64_t v40 = *(void *)&a1[v39];
            unint64_t v41 = v40 + 1;
            if (v40 == -1 || v41 > *(void *)&a1[*v3]) {
              goto LABEL_121;
            }
            int v42 = *(char *)(*(void *)&a1[*v5] + v40);
            *(void *)&a1[v39] = v41;
            if (v42 < 0)
            {
              BOOL v22 = v38++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_124;
          }
        case 7u:
          if ((v8 & 7) != 0) {
            goto LABEL_127;
          }
          unsigned int v43 = 0;
          while (1)
          {
            uint64_t v44 = *v2;
            uint64_t v45 = *(void *)&a1[v44];
            unint64_t v46 = v45 + 1;
            if (v45 == -1 || v46 > *(void *)&a1[*v3]) {
              goto LABEL_121;
            }
            int v47 = *(char *)(*(void *)&a1[*v5] + v45);
            *(void *)&a1[v44] = v46;
            if (v47 < 0)
            {
              BOOL v22 = v43++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_124;
          }
        case 8u:
          if ((v8 & 7) != 0) {
            goto LABEL_127;
          }
          unsigned int v48 = 0;
          while (1)
          {
            uint64_t v49 = *v2;
            uint64_t v50 = *(void *)&a1[v49];
            unint64_t v51 = v50 + 1;
            if (v50 == -1 || v51 > *(void *)&a1[*v3]) {
              goto LABEL_121;
            }
            int v52 = *(char *)(*(void *)&a1[*v5] + v50);
            *(void *)&a1[v49] = v51;
            if (v52 < 0)
            {
              BOOL v22 = v48++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_124;
          }
        case 9u:
          if (v15 == 2) {
            goto LABEL_123;
          }
          goto LABEL_127;
        case 0xAu:
          if ((v8 & 7) != 0) {
            goto LABEL_127;
          }
          unsigned int v53 = 0;
          while (1)
          {
            uint64_t v54 = *v2;
            uint64_t v55 = *(void *)&a1[v54];
            unint64_t v56 = v55 + 1;
            if (v55 == -1 || v56 > *(void *)&a1[*v3]) {
              goto LABEL_121;
            }
            int v57 = *(char *)(*(void *)&a1[*v5] + v55);
            *(void *)&a1[v54] = v56;
            if (v57 < 0)
            {
              BOOL v22 = v53++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_124;
          }
        case 0xBu:
          if (v15 == 2) {
            goto LABEL_123;
          }
          goto LABEL_127;
        case 0xCu:
          if ((v8 & 7) != 0) {
            goto LABEL_127;
          }
          unsigned int v58 = 0;
          while (1)
          {
            uint64_t v59 = *v2;
            uint64_t v60 = *(void *)&a1[v59];
            unint64_t v61 = v60 + 1;
            if (v60 == -1 || v61 > *(void *)&a1[*v3]) {
              goto LABEL_121;
            }
            int v62 = *(char *)(*(void *)&a1[*v5] + v60);
            *(void *)&a1[v59] = v61;
            if (v62 < 0)
            {
              BOOL v22 = v58++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_124;
          }
        case 0xDu:
          if ((v8 & 7) != 0) {
            goto LABEL_127;
          }
          unsigned int v63 = 0;
          while (1)
          {
            uint64_t v64 = *v2;
            uint64_t v65 = *(void *)&a1[v64];
            unint64_t v66 = v65 + 1;
            if (v65 == -1 || v66 > *(void *)&a1[*v3]) {
              goto LABEL_121;
            }
            int v67 = *(char *)(*(void *)&a1[*v5] + v65);
            *(void *)&a1[v64] = v66;
            if (v67 < 0)
            {
              BOOL v22 = v63++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_124;
          }
        case 0xEu:
          if ((v8 & 7) != 0) {
            goto LABEL_127;
          }
          unsigned int v68 = 0;
          while (1)
          {
            uint64_t v69 = *v2;
            uint64_t v70 = *(void *)&a1[v69];
            unint64_t v71 = v70 + 1;
            if (v70 == -1 || v71 > *(void *)&a1[*v3]) {
              goto LABEL_121;
            }
            int v72 = *(char *)(*(void *)&a1[*v5] + v70);
            *(void *)&a1[v69] = v71;
            if (v72 < 0)
            {
              BOOL v22 = v68++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_124;
          }
        case 0xFu:
          if ((v8 & 7) != 0) {
            goto LABEL_127;
          }
          unsigned int v73 = 0;
          break;
        case 0x10u:
          if (v15 == 2) {
            goto LABEL_123;
          }
          goto LABEL_127;
        default:
LABEL_123:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_127:
          BOOL v78 = 0;
          goto LABEL_126;
      }
      while (1)
      {
        uint64_t v74 = *v2;
        uint64_t v75 = *(void *)&a1[v74];
        unint64_t v76 = v75 + 1;
        if (v75 == -1 || v76 > *(void *)&a1[*v3]) {
          break;
        }
        int v77 = *(char *)(*(void *)&a1[*v5] + v75);
        *(void *)&a1[v74] = v76;
        if (v77 < 0)
        {
          BOOL v22 = v73++ > 8;
          if (!v22) {
            continue;
          }
        }
        goto LABEL_124;
      }
LABEL_121:
      a1[*v4] = 1;
LABEL_124:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v78 = a1[*v4] == 0;
LABEL_126:
  PBReaderRecallMark();
  return v78;
}

void sub_189960DF4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDSearchAddressLabeledTokenIsDirty(uint64_t a1)
{
  uint64_t v13 = *MEMORY[0x1E4F143B8];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  char v2 = *(unsigned char *)(a1 + 80);
  if ((v2 & 0x76) != 0) {
    return 1;
  }
  if (*(unsigned char *)(a1 + 80))
  {
    if (GEOPDSearchGeoDecorationIsDirty(*(os_unfair_lock_s **)(a1 + 16))) {
      return 1;
    }
    char v2 = *(unsigned char *)(a1 + 80);
  }
  if ((v2 & 8) == 0) {
    goto LABEL_10;
  }
  if (GEOPDSearchGeoDecorationIsDirty(*(os_unfair_lock_s **)(a1 + 40))) {
    return 1;
  }
  char v2 = *(unsigned char *)(a1 + 80);
LABEL_10:
  if ((v2 & 2) == 0) {
    return 0;
  }
  long long v10 = 0u;
  long long v11 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  id v5 = *(id *)(a1 + 24);
  uint64_t v3 = [v5 countByEnumeratingWithState:&v8 objects:v12 count:16];
  if (v3)
  {
    uint64_t v6 = *(void *)v9;
    while (2)
    {
      for (uint64_t i = 0; i != v3; ++i)
      {
        if (*(void *)v9 != v6) {
          objc_enumerationMutation(v5);
        }
        if (GEOPDSearchStringStringPairIsDirty(*(void *)(*((void *)&v8 + 1) + 8 * i)))
        {
          uint64_t v3 = 1;
          goto LABEL_22;
        }
      }
      uint64_t v3 = [v5 countByEnumeratingWithState:&v8 objects:v12 count:16];
      if (v3) {
        continue;
      }
      break;
    }
  }
LABEL_22:

  return v3;
}

void sub_1899612D4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchAttributeReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 52);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 48)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  long long v11 = (const __int16 *)(a1 + 68);
  uint16x4_t v12 = (uint16x4_t)vld1_dup_s16(v11);
  int16x4_t v13 = (int16x4_t)vand_s8((int8x8_t)vshl_u16(v12, (uint16x4_t)0xFFFBFFF9FFFAFFFCLL), (int8x8_t)0x1000100010001);
  v13.i16[0] = vaddv_s16(v13);
  unsigned int v14 = v13.i32[0];
  while (2)
  {
    uint64_t v15 = 1;
    uint64_t v16 = 1;
    switch(a3[v7])
    {
      case -3:
        char v8 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v15 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        BOOL v17 = v14 > 2;
        char v18 = v10 | v17;
        if (((v10 | v17) | v8)) {
          uint64_t v19 = 0;
        }
        else {
          uint64_t v19 = a3;
        }
        char v82 = (v19 == 0) | v18;
        unint64_t v20 = (int *)MEMORY[0x1E4F940E8];
        int v21 = (int *)MEMORY[0x1E4F940C8];
        BOOL v22 = (int *)MEMORY[0x1E4F940B8];
        char v81 = v10 | v17;
        break;
      default:
        ++v14;
LABEL_6:
        uint64_t v15 = v9;
        uint64_t v16 = v10;
LABEL_8:
        ++v7;
        uint64_t v9 = v15;
        uint64_t v10 = v16;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v21)) {
      goto LABEL_117;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_23;
      }
      v23 += 7;
      BOOL v30 = v24++ >= 9;
      if (v30)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_25;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_23:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_25:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_117:
      if (v18)
      {
        char v75 = 1;
        goto LABEL_128;
      }
      if (v19)
      {
        while (1)
        {
          int v76 = *v19++;
          __int16 v77 = 64;
          switch(v76)
          {
            case 0:
              goto LABEL_129;
            case 1:
              goto LABEL_124;
            case 2:
              __int16 v77 = 16;
              goto LABEL_124;
            case 3:
              __int16 v77 = 128;
              goto LABEL_124;
            case 4:
              __int16 v77 = 32;
LABEL_124:
              *(_WORD *)(a1 + 68) |= v77;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_129;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v18;
    if ((v82 & 1) == 0)
    {
      uint64_t v35 = v19;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    switch((int)v33)
    {
      case 1:
        if (!v34) {
          goto LABEL_87;
        }
        if ((*(_WORD *)(a1 + 68) & 0x40) == 0)
        {
          uint64_t v39 = PBReaderReadString();
          uint64_t v40 = 32;
          goto LABEL_53;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_127;
        }
        __int16 v74 = *(_WORD *)(a1 + 68) << 9;
        goto LABEL_114;
      case 2:
        if (!v34) {
          goto LABEL_87;
        }
        if ((*(_WORD *)(a1 + 68) & 0x10) == 0)
        {
          uint64_t v39 = PBReaderReadString();
          uint64_t v40 = 16;
          goto LABEL_53;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_127;
        }
        __int16 v74 = *(_WORD *)(a1 + 68) << 11;
        goto LABEL_114;
      case 3:
        if (!v34) {
          goto LABEL_87;
        }
        if ((*(_WORD *)(a1 + 68) & 0x80) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_127;
          }
          __int16 v74 = *(_WORD *)(a1 + 68) << 8;
LABEL_114:
          v7 += v74 >> 15;
          goto LABEL_115;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_127;
        }
        uint64_t v80 = objc_alloc_init(GEOPDSearchTokenSet);
        if (GEOPDSearchTokenSetReadAllFrom((uint64_t)v80, (void *)v3, v9 & 1))
        {
          PBReaderRecallMark();
          int v42 = *(void **)(a1 + 40);
          *(void *)(a1 + 40) = v80;
LABEL_54:

          --v7;
LABEL_115:
          char v18 = v81;
          int v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_116:
          if (!(v18 & 1 | (v7 != 0))) {
            goto LABEL_117;
          }
          continue;
        }

LABEL_127:
        char v75 = 0;
        char v18 = v81;
        int v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_128:
        *(_WORD *)(a1 + 68) |= 0x40u;
        *(_WORD *)(a1 + 68) |= 0x10u;
        *(_WORD *)(a1 + 68) |= 0x80u;
        *(_WORD *)(a1 + 68) |= 0x20u;
        if (v75)
        {
LABEL_129:
          unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
          if (v18) {
            goto LABEL_130;
          }
        }
        else
        {
          unint64_t v3 = 0;
          if (v18)
          {
LABEL_130:
            BOOL v78 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = 0;
          }
        }
        return v3;
      case 4:
        if (!v34) {
          goto LABEL_87;
        }
        if ((*(_WORD *)(a1 + 68) & 0x20) == 0)
        {
          uint64_t v39 = PBReaderReadString();
          uint64_t v40 = 24;
LABEL_53:
          int v42 = *(void **)(a1 + v40);
          *(void *)(a1 + v40) = v39;
          goto LABEL_54;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_127;
        }
        __int16 v74 = *(_WORD *)(a1 + 68) << 10;
        goto LABEL_114;
      case 5:
        if ((v8 & 1) == 0) {
          goto LABEL_87;
        }
        char v43 = 0;
        unsigned int v44 = 0;
        uint64_t v45 = 0;
        *(_WORD *)(a1 + 68) |= 2u;
        while (2)
        {
          uint64_t v46 = *v20;
          uint64_t v47 = *(void *)(v3 + v46);
          unint64_t v48 = v47 + 1;
          if (v47 == -1 || v48 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v49 = *(unsigned char *)(*(void *)(v3 + *v22) + v47);
            *(void *)(v3 + v46) = v48;
            v45 |= (unint64_t)(v49 & 0x7F) << v43;
            if (v49 < 0)
            {
              v43 += 7;
              BOOL v30 = v44++ >= 9;
              if (v30)
              {
                uint64_t v45 = 0;
                goto LABEL_92;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          uint64_t v45 = 0;
        }
LABEL_92:
        BOOL v72 = v45 != 0;
        uint64_t v73 = 64;
        goto LABEL_105;
      case 6:
        if ((v8 & 1) == 0) {
          goto LABEL_87;
        }
        char v50 = 0;
        unsigned int v51 = 0;
        uint64_t v52 = 0;
        *(_WORD *)(a1 + 68) |= 8u;
        while (2)
        {
          uint64_t v53 = *v20;
          uint64_t v54 = *(void *)(v3 + v53);
          unint64_t v55 = v54 + 1;
          if (v54 == -1 || v55 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v56 = *(unsigned char *)(*(void *)(v3 + *v22) + v54);
            *(void *)(v3 + v53) = v55;
            v52 |= (unint64_t)(v56 & 0x7F) << v50;
            if (v56 < 0)
            {
              v50 += 7;
              BOOL v30 = v51++ >= 9;
              if (v30)
              {
                uint64_t v52 = 0;
                goto LABEL_96;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          uint64_t v52 = 0;
        }
LABEL_96:
        BOOL v72 = v52 != 0;
        uint64_t v73 = 66;
        goto LABEL_105;
      case 7:
        if ((v8 & 1) == 0) {
          goto LABEL_87;
        }
        char v57 = 0;
        unsigned int v58 = 0;
        uint64_t v59 = 0;
        *(_WORD *)(a1 + 68) |= 1u;
        while (2)
        {
          uint64_t v60 = *v20;
          uint64_t v61 = *(void *)(v3 + v60);
          unint64_t v62 = v61 + 1;
          if (v61 == -1 || v62 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v63 = *(unsigned char *)(*(void *)(v3 + *v22) + v61);
            *(void *)(v3 + v60) = v62;
            v59 |= (unint64_t)(v63 & 0x7F) << v57;
            if (v63 < 0)
            {
              v57 += 7;
              BOOL v30 = v58++ >= 9;
              if (v30)
              {
                LODWORD(v59) = 0;
                goto LABEL_100;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          LODWORD(v59) = 0;
        }
LABEL_100:
        *(_DWORD *)(a1 + 60) = v59;
        goto LABEL_116;
      case 8:
        if (v8)
        {
          char v64 = 0;
          unsigned int v65 = 0;
          uint64_t v66 = 0;
          *(_WORD *)(a1 + 68) |= 4u;
          while (1)
          {
            uint64_t v67 = *v20;
            uint64_t v68 = *(void *)(v3 + v67);
            unint64_t v69 = v68 + 1;
            if (v68 == -1 || v69 > *(void *)(v3 + *v6)) {
              break;
            }
            char v70 = *(unsigned char *)(*(void *)(v3 + *v22) + v68);
            *(void *)(v3 + v67) = v69;
            v66 |= (unint64_t)(v70 & 0x7F) << v64;
            if ((v70 & 0x80) == 0) {
              goto LABEL_102;
            }
            v64 += 7;
            BOOL v30 = v65++ >= 9;
            if (v30)
            {
              uint64_t v66 = 0;
              goto LABEL_104;
            }
          }
          *(unsigned char *)(v3 + *v21) = 1;
LABEL_102:
          if (*(unsigned char *)(v3 + *v21)) {
            uint64_t v66 = 0;
          }
LABEL_104:
          BOOL v72 = v66 != 0;
          uint64_t v73 = 65;
LABEL_105:
          *(unsigned char *)(a1 + v73) = v72;
        }
        else
        {
LABEL_87:
          char v71 = PBReaderSkipValueWithTag();
          int v21 = (int *)MEMORY[0x1E4F940C8];
          char v18 = v81;
          if ((v71 & 1) == 0)
          {
LABEL_125:
            char v75 = 0;
            goto LABEL_128;
          }
        }
        goto LABEL_116;
      default:
        int v41 = PBReaderSkipValueWithTag();
        int v21 = (int *)MEMORY[0x1E4F940C8];
        char v18 = v81;
        if (!v41) {
          goto LABEL_125;
        }
        goto LABEL_116;
    }
  }
}

void sub_189962440(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189962540(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchAttributeReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 52))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDSearchAttributeReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = [v8 position];
  *(_DWORD *)(a1 + 52) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOPDSearchAttributeReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOPDSearchAttributeReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDSearchAttributeReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    -[GEOPDSearchTokenSet readAll:](*(void *)(a1 + 40), 1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_1899626E8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189962930(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDSearchAttributeIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  unsigned int v2 = *(unsigned __int16 *)(a1 + 68);
  if ((v2 & 0x150) != 0) {
    return 1;
  }
  if ((v2 & 0x80) != 0)
  {
    if (GEOPDSearchTokenSetIsDirty(*(void *)(a1 + 40))) {
      return 1;
    }
    unsigned int v2 = *(unsigned __int16 *)(a1 + 68);
  }
  return (v2 >> 5) & 1;
}

void sub_189962BF0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchAttributeIntentReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 60);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 56)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  unsigned int v11 = (vaddv_s16((int16x4_t)(*(void *)&vshl_u16((uint16x4_t)(*(void *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 72)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFEFFFBFFFDFFFFLL) & 0xFF01FF01FF01FF01))+ ((*(unsigned char *)(a1 + 72) & 0x10) != 0));
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v7])
    {
      case -3:
        char v8 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        BOOL v14 = v11 > 3;
        char v15 = v10 | v14;
        if (((v10 | v14) | v8)) {
          uint64_t v16 = 0;
        }
        else {
          uint64_t v16 = a3;
        }
        char v57 = (v16 == 0) | v15;
        BOOL v17 = (int *)MEMORY[0x1E4F940E8];
        char v18 = (int *)MEMORY[0x1E4F940C8];
        uint64_t v19 = (int *)MEMORY[0x1E4F940B8];
        char v56 = v10 | v14;
        break;
      default:
        ++v11;
LABEL_6:
        uint64_t v12 = v9;
        uint64_t v13 = v10;
LABEL_8:
        ++v7;
        uint64_t v9 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v17) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v18)) {
      goto LABEL_88;
    }
    char v20 = 0;
    unsigned int v21 = 0;
    unint64_t v22 = 0;
    while (1)
    {
      uint64_t v23 = *v17;
      uint64_t v24 = *(void *)(v3 + v23);
      unint64_t v25 = v24 + 1;
      if (v24 == -1 || v25 > *(void *)(v3 + *v6)) {
        break;
      }
      char v26 = *(unsigned char *)(*(void *)(v3 + *v19) + v24);
      *(void *)(v3 + v23) = v25;
      v22 |= (unint64_t)(v26 & 0x7F) << v20;
      if ((v26 & 0x80) == 0) {
        goto LABEL_23;
      }
      v20 += 7;
      BOOL v27 = v21++ >= 9;
      if (v27)
      {
        unint64_t v22 = 0;
        int v28 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_25;
      }
    }
    *(unsigned char *)(v3 + *v18) = 1;
LABEL_23:
    int v28 = *(unsigned __int8 *)(v3 + *v18);
    if (*(unsigned char *)(v3 + *v18)) {
      unint64_t v22 = 0;
    }
LABEL_25:
    if (v28 || (v22 & 7) == 4)
    {
LABEL_88:
      if (v15)
      {
        char v50 = 1;
        goto LABEL_100;
      }
      if (v16)
      {
        while (1)
        {
          int v51 = *v16++;
          char v52 = 8;
          switch(v51)
          {
            case 0:
              goto LABEL_101;
            case 1:
              goto LABEL_96;
            case 2:
              char v52 = 2;
              goto LABEL_96;
            case 3:
              char v52 = 32;
              goto LABEL_96;
            case 4:
              char v52 = 4;
              goto LABEL_96;
            case 6:
              char v52 = 16;
LABEL_96:
              *(unsigned char *)(a1 + 72) |= v52;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_101;
    }
    unint64_t v30 = v22 >> 3;
    BOOL v31 = v15;
    if ((v57 & 1) == 0)
    {
      int v32 = v16;
      do
      {
        int v34 = *v32++;
        int v33 = v34;
        BOOL v31 = v34 != 0;
        if (v34) {
          BOOL v35 = v33 == v30;
        }
        else {
          BOOL v35 = 1;
        }
      }
      while (!v35);
    }
    switch((int)v30)
    {
      case 1:
        if (!v31) {
          goto LABEL_69;
        }
        if ((*(unsigned char *)(a1 + 72) & 8) == 0)
        {
          uint64_t v36 = PBReaderReadString();
          uint64_t v37 = 32;
          goto LABEL_53;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_99;
        }
        char v49 = 16 * *(unsigned char *)(a1 + 72);
        goto LABEL_85;
      case 2:
        if (!v31) {
          goto LABEL_69;
        }
        if ((*(unsigned char *)(a1 + 72) & 2) == 0)
        {
          uint64_t v36 = PBReaderReadString();
          uint64_t v37 = 16;
          goto LABEL_53;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_99;
        }
        char v49 = *(unsigned char *)(a1 + 72) << 6;
        goto LABEL_85;
      case 3:
        if (!v31) {
          goto LABEL_69;
        }
        if ((*(unsigned char *)(a1 + 72) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_99;
          }
          char v49 = 4 * *(unsigned char *)(a1 + 72);
          goto LABEL_85;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_99;
        }
        unint64_t v55 = objc_alloc_init(GEOPDSearchTokenSet);
        if (!GEOPDSearchTokenSetReadAllFrom((uint64_t)v55, (void *)v3, v9 & 1)) {
          goto LABEL_98;
        }
        PBReaderRecallMark();
        uint64_t v39 = 48;
        goto LABEL_67;
      case 4:
        if (!v31) {
          goto LABEL_69;
        }
        if ((*(unsigned char *)(a1 + 72) & 4) == 0)
        {
          uint64_t v36 = PBReaderReadString();
          uint64_t v37 = 24;
LABEL_53:
          uint64_t v40 = *(void **)(a1 + v37);
          *(void *)(a1 + v37) = v36;
          goto LABEL_68;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_99;
        }
        char v49 = 32 * *(unsigned char *)(a1 + 72);
        goto LABEL_85;
      case 5:
        if ((v8 & 1) == 0) {
          goto LABEL_69;
        }
        char v41 = 0;
        unsigned int v42 = 0;
        uint64_t v43 = 0;
        *(unsigned char *)(a1 + 72) |= 1u;
        while (2)
        {
          uint64_t v44 = *v17;
          uint64_t v45 = *(void *)(v3 + v44);
          unint64_t v46 = v45 + 1;
          if (v45 == -1 || v46 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v47 = *(unsigned char *)(*(void *)(v3 + *v19) + v45);
            *(void *)(v3 + v44) = v46;
            v43 |= (unint64_t)(v47 & 0x7F) << v41;
            if (v47 < 0)
            {
              v41 += 7;
              BOOL v27 = v42++ >= 9;
              if (v27)
              {
                uint64_t v43 = 0;
                goto LABEL_74;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          uint64_t v43 = 0;
        }
LABEL_74:
        *(unsigned char *)(a1 + 68) = v43 != 0;
        goto LABEL_87;
      case 6:
        if (!v31)
        {
LABEL_69:
          char v48 = PBReaderSkipValueWithTag();
          char v18 = (int *)MEMORY[0x1E4F940C8];
          char v15 = v56;
          if ((v48 & 1) == 0)
          {
LABEL_97:
            char v50 = 0;
            goto LABEL_100;
          }
LABEL_87:
          if (!(v15 & 1 | (v7 != 0))) {
            goto LABEL_88;
          }
          continue;
        }
        if ((*(unsigned char *)(a1 + 72) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_99;
          }
          char v49 = 8 * *(unsigned char *)(a1 + 72);
LABEL_85:
          v7 += v49 >> 7;
LABEL_86:
          char v15 = v56;
          char v18 = (int *)MEMORY[0x1E4F940C8];
          goto LABEL_87;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_99;
        }
        unint64_t v55 = objc_alloc_init(GEOPDSearchStructuredAttribute);
        if (GEOPDSearchStructuredAttributeReadAllFrom((uint64_t)v55, (void *)v3, v9 & 1))
        {
          PBReaderRecallMark();
          uint64_t v39 = 40;
LABEL_67:
          uint64_t v40 = *(void **)(a1 + v39);
          *(void *)(a1 + v39) = v55;
LABEL_68:

          --v7;
          goto LABEL_86;
        }
LABEL_98:

LABEL_99:
        char v50 = 0;
        char v15 = v56;
        char v18 = (int *)MEMORY[0x1E4F940C8];
LABEL_100:
        *(unsigned char *)(a1 + 72) |= 8u;
        *(unsigned char *)(a1 + 72) |= 2u;
        *(unsigned char *)(a1 + 72) |= 0x20u;
        *(unsigned char *)(a1 + 72) |= 4u;
        *(unsigned char *)(a1 + 72) |= 0x10u;
        if (v50)
        {
LABEL_101:
          unint64_t v3 = *(unsigned char *)(v3 + *v18) == 0;
          if (v15) {
            goto LABEL_102;
          }
        }
        else
        {
          unint64_t v3 = 0;
          if (v15)
          {
LABEL_102:
            uint64_t v53 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = 0;
          }
        }
        return v3;
      default:
        int v38 = PBReaderSkipValueWithTag();
        char v18 = (int *)MEMORY[0x1E4F940C8];
        char v15 = v56;
        if (!v38) {
          goto LABEL_97;
        }
        goto LABEL_87;
    }
  }
}

void sub_189963C18(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189963D30(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchAttributeIntentReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 60))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDSearchAttributeIntentReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = [v8 position];
  *(_DWORD *)(a1 + 60) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOPDSearchAttributeIntentReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOPDSearchAttributeIntentReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDSearchAttributeIntentReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    -[GEOPDSearchTokenSet readAll:](*(void *)(a1 + 48), 1);
    -[GEOPDSearchStructuredAttribute readAll:](*(void *)(a1 + 40), 1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_189963EEC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSearchStructuredAttributeIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  unsigned int v2 = (int *)MEMORY[0x1E4F940E8];
  unint64_t v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    id v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_103;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        BOOL v13 = v7++ >= 9;
        if (v13)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        goto LABEL_103;
      }
      unint64_t v17 = v8 >> 3;
      if ((v8 >> 3) == 3) {
        break;
      }
      if (v17 == 2)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_105;
        }
        unsigned int v49 = 0;
        while (1)
        {
          uint64_t v50 = *v2;
          uint64_t v51 = *(void *)&a1[v50];
          unint64_t v52 = v51 + 1;
          if (v51 == -1 || v52 > *(void *)&a1[*v3]) {
            break;
          }
          int v53 = *(char *)(*(void *)&a1[*v5] + v51);
          *(void *)&a1[v50] = v52;
          if (v53 < 0)
          {
            BOOL v33 = v49++ > 8;
            if (!v33) {
              continue;
            }
          }
          goto LABEL_102;
        }
        a1[*v4] = 1;
      }
      else
      {
        if (v17 == 1)
        {
          if (v15 != 2 || !PBReaderPlaceMark()) {
            goto LABEL_105;
          }
          objc_msgSend(a1, "position", 0, 0);
          [a1 length];
LABEL_24:
          while (*(void *)&a1[*v2] < *(void *)&a1[*v3] && !a1[*v4])
          {
            char v18 = 0;
            unsigned int v19 = 0;
            unint64_t v20 = 0;
            while (1)
            {
              uint64_t v21 = *v2;
              uint64_t v22 = *(void *)&a1[v21];
              unint64_t v23 = v22 + 1;
              if (v22 == -1 || v23 > *(void *)&a1[*v3]) {
                break;
              }
              char v24 = *(unsigned char *)(*(void *)&a1[*v5] + v22);
              *(void *)&a1[v21] = v23;
              v20 |= (unint64_t)(v24 & 0x7F) << v18;
              if ((v24 & 0x80) == 0) {
                goto LABEL_34;
              }
              v18 += 7;
              BOOL v13 = v19++ >= 9;
              if (v13)
              {
                unint64_t v20 = 0;
                int v25 = a1[*v4];
                goto LABEL_36;
              }
            }
            a1[*v4] = 1;
LABEL_34:
            int v25 = a1[*v4];
            if (a1[*v4]) {
              unint64_t v20 = 0;
            }
LABEL_36:
            int v26 = v20 & 7;
            if (v25 || v26 == 4) {
              break;
            }
            switch((v20 >> 3))
            {
              case 1u:
                if (v26 != 2) {
                  goto LABEL_104;
                }
                goto LABEL_50;
              case 2u:
                if (v26 == 2) {
                  goto LABEL_50;
                }
                goto LABEL_104;
              case 3u:
                if (v26 != 2 || !PBReaderPlaceMark() || !GEOPDSearchTokenSetIsValid(a1)) {
                  goto LABEL_104;
                }
                PBReaderRecallMark();
                continue;
              case 4u:
                if (v26 == 2) {
                  goto LABEL_50;
                }
                goto LABEL_104;
              case 5u:
                if ((v20 & 7) != 0) {
                  goto LABEL_104;
                }
                unsigned int v28 = 0;
                while (1)
                {
                  uint64_t v29 = *v2;
                  uint64_t v30 = *(void *)&a1[v29];
                  unint64_t v31 = v30 + 1;
                  if (v30 == -1 || v31 > *(void *)&a1[*v3]) {
                    goto LABEL_84;
                  }
                  int v32 = *(char *)(*(void *)&a1[*v5] + v30);
                  *(void *)&a1[v29] = v31;
                  if (v32 < 0)
                  {
                    BOOL v33 = v28++ > 8;
                    if (!v33) {
                      continue;
                    }
                  }
                  goto LABEL_24;
                }
              case 6u:
                if ((v20 & 7) != 0) {
                  goto LABEL_104;
                }
                unsigned int v34 = 0;
                while (1)
                {
                  uint64_t v35 = *v2;
                  uint64_t v36 = *(void *)&a1[v35];
                  unint64_t v37 = v36 + 1;
                  if (v36 == -1 || v37 > *(void *)&a1[*v3]) {
                    goto LABEL_84;
                  }
                  int v38 = *(char *)(*(void *)&a1[*v5] + v36);
                  *(void *)&a1[v35] = v37;
                  if (v38 < 0)
                  {
                    BOOL v33 = v34++ > 8;
                    if (!v33) {
                      continue;
                    }
                  }
                  goto LABEL_24;
                }
              case 7u:
                if ((v20 & 7) != 0) {
                  goto LABEL_104;
                }
                unsigned int v39 = 0;
                while (1)
                {
                  uint64_t v40 = *v2;
                  uint64_t v41 = *(void *)&a1[v40];
                  unint64_t v42 = v41 + 1;
                  if (v41 == -1 || v42 > *(void *)&a1[*v3]) {
                    goto LABEL_84;
                  }
                  int v43 = *(char *)(*(void *)&a1[*v5] + v41);
                  *(void *)&a1[v40] = v42;
                  if (v43 < 0)
                  {
                    BOOL v33 = v39++ > 8;
                    if (!v33) {
                      continue;
                    }
                  }
                  goto LABEL_24;
                }
              case 8u:
                if ((v20 & 7) != 0) {
                  goto LABEL_104;
                }
                unsigned int v44 = 0;
                break;
              default:
LABEL_50:
                if (PBReaderSkipValueWithTag()) {
                  continue;
                }
LABEL_104:
                PBReaderRecallMark();
                goto LABEL_105;
            }
            while (1)
            {
              uint64_t v45 = *v2;
              uint64_t v46 = *(void *)&a1[v45];
              unint64_t v47 = v46 + 1;
              if (v46 == -1 || v47 > *(void *)&a1[*v3]) {
                break;
              }
              int v48 = *(char *)(*(void *)&a1[*v5] + v46);
              *(void *)&a1[v45] = v47;
              if (v48 < 0)
              {
                BOOL v33 = v44++ > 8;
                if (!v33) {
                  continue;
                }
              }
              goto LABEL_24;
            }
LABEL_84:
            a1[*v4] = 1;
          }
          int v54 = a1[*v4];
          PBReaderRecallMark();
          if (v54)
          {
LABEL_105:
            PBReaderRecallMark();
            return 0;
          }
          goto LABEL_100;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_105;
        }
      }
LABEL_102:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_103;
      }
    }
    if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDSearchStructuredAttributeIsValid(a1)) {
      goto LABEL_105;
    }
LABEL_100:
    PBReaderRecallMark();
    goto LABEL_102;
  }
LABEL_103:
  BOOL v55 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v55;
}

void sub_189964658(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDSearchAttributeIntentIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  char v2 = *(unsigned char *)(a1 + 72);
  if ((v2 & 0x4A) != 0) {
    return 1;
  }
  if ((*(unsigned char *)(a1 + 72) & 0x20) != 0)
  {
    if (GEOPDSearchTokenSetIsDirty(*(void *)(a1 + 48))) {
      return 1;
    }
    char v2 = *(unsigned char *)(a1 + 72);
  }
  if ((v2 & 4) != 0) {
    return 1;
  }
  if ((v2 & 0x10) == 0) {
    return 0;
  }
  uint64_t v4 = *(os_unfair_lock_s **)(a1 + 40);
  if (!v4) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  uint64_t IsDirty = _GEOPDSearchStructuredAttributeIsDirty((uint64_t)v4);
  os_unfair_lock_unlock(v4 + 10);
  return IsDirty;
}

void sub_18996490C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSearchBrandDensityReadAllFrom(uint64_t a1, void *a2)
{
  unint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    id v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        unint64_t v18 = v10 >> 3;
        if ((v10 >> 3) == 3)
        {
          uint64_t v26 = PBReaderReadString();
          BOOL v27 = *(void **)(a1 + 16);
          *(void *)(a1 + 16) = v26;
        }
        else if (v18 == 2)
        {
          *(unsigned char *)(a1 + 28) |= 2u;
          uint64_t v28 = *v4;
          unint64_t v29 = *(void *)&v3[v28];
          if (v29 <= 0xFFFFFFFFFFFFFFFBLL && v29 + 4 <= *(void *)&v3[*v5])
          {
            int v30 = *(_DWORD *)(*(void *)&v3[*v7] + v29);
            *(void *)&v3[v28] = v29 + 4;
          }
          else
          {
            v3[*v6] = 1;
            int v30 = 0;
          }
          *(_DWORD *)(a1 + 24) = v30;
        }
        else if (v18 == 1)
        {
          char v19 = 0;
          unsigned int v20 = 0;
          uint64_t v21 = 0;
          *(unsigned char *)(a1 + 28) |= 1u;
          while (1)
          {
            uint64_t v22 = *v4;
            uint64_t v23 = *(void *)&v3[v22];
            unint64_t v24 = v23 + 1;
            if (v23 == -1 || v24 > *(void *)&v3[*v5]) {
              break;
            }
            char v25 = *(unsigned char *)(*(void *)&v3[*v7] + v23);
            *(void *)&v3[v22] = v24;
            v21 |= (unint64_t)(v25 & 0x7F) << v19;
            if ((v25 & 0x80) == 0) {
              goto LABEL_36;
            }
            v19 += 7;
            BOOL v15 = v20++ >= 9;
            if (v15)
            {
              uint64_t v21 = 0;
              goto LABEL_38;
            }
          }
          v3[*v6] = 1;
LABEL_36:
          if (v3[*v6]) {
            uint64_t v21 = 0;
          }
LABEL_38:
          *(void *)(a1 + 8) = v21;
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_43;
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v31 = v3[*v6] == 0;
  }
  else
  {
LABEL_43:
    BOOL v31 = 0;
  }
  objc_sync_exit(v3);

  return v31;
}

void sub_1899651D0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSearchBrandDensityIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  char v2 = (int *)MEMORY[0x1E4F940E8];
  unint64_t v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    id v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          uint64_t v14 = *v4;
          int v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      uint64_t v14 = *v4;
      int v15 = a1[v14];
      if (a1[v14]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v16 = v8 & 7;
      if (v15 || v16 == 4) {
        break;
      }
      unint64_t v18 = v8 >> 3;
      if ((v8 >> 3) == 3)
      {
        if (v16 != 2 || (PBReaderSkipValueWithTag() & 1) == 0)
        {
LABEL_43:
          BOOL v28 = 0;
          goto LABEL_42;
        }
      }
      else if (v18 == 2)
      {
        if (v16 != 5) {
          goto LABEL_43;
        }
        uint64_t v25 = *v2;
        unint64_t v26 = *(void *)&a1[v25];
        if (v26 > 0xFFFFFFFFFFFFFFFBLL) {
          goto LABEL_39;
        }
        unint64_t v27 = v26 + 4;
        if (v27 > *(void *)&a1[*v3]) {
          goto LABEL_39;
        }
        *(void *)&a1[v25] = v27;
      }
      else
      {
        if (v18 == 1)
        {
          if ((v8 & 7) != 0) {
            goto LABEL_43;
          }
          unsigned int v19 = 0;
          while (1)
          {
            uint64_t v20 = *v2;
            uint64_t v21 = *(void *)&a1[v20];
            unint64_t v22 = v21 + 1;
            if (v21 == -1 || v22 > *(void *)&a1[*v3]) {
              break;
            }
            int v23 = *(char *)(*(void *)&a1[*v5] + v21);
            *(void *)&a1[v20] = v22;
            if (v23 < 0 && v19++ <= 8) {
              continue;
            }
            goto LABEL_40;
          }
          uint64_t v14 = *v4;
LABEL_39:
          a1[v14] = 1;
          continue;
        }
        if (!PBReaderSkipValueWithTag()) {
          goto LABEL_43;
        }
      }
LABEL_40:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v28 = a1[*v4] == 0;
LABEL_42:
  PBReaderRecallMark();
  return v28;
}

BOOL GEOPDSearchBusinessEntryReadAllFrom(uint64_t a1, void *a2)
{
  unint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    id v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          char v18 = 0;
          unsigned int v19 = 0;
          uint64_t v20 = 0;
          *(unsigned char *)(a1 + 16) |= 1u;
          while (1)
          {
            uint64_t v21 = *v4;
            uint64_t v22 = *(void *)&v3[v21];
            unint64_t v23 = v22 + 1;
            if (v22 == -1 || v23 > *(void *)&v3[*v5]) {
              break;
            }
            char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
            *(void *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0) {
              goto LABEL_30;
            }
            v18 += 7;
            BOOL v15 = v19++ >= 9;
            if (v15)
            {
              uint64_t v20 = 0;
              goto LABEL_32;
            }
          }
          v3[*v6] = 1;
LABEL_30:
          if (v3[*v6]) {
            uint64_t v20 = 0;
          }
LABEL_32:
          *(void *)(a1 + 8) = v20;
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_35;
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v25 = v3[*v6] == 0;
  }
  else
  {
LABEL_35:
    BOOL v25 = 0;
  }
  objc_sync_exit(v3);

  return v25;
}

void sub_189965B08(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchBusinessIntentReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 88));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 84);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 80)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  unsigned int v11 = (vaddv_s16((int16x4_t)(*(void *)&vshl_u16((uint16x4_t)(*(void *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 96)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFEFFFDFFFBFFFALL) & 0xFF01FF01FF01FF01))+ ((*(unsigned char *)(a1 + 96) & 0x10) != 0));
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v7])
    {
      case -3:
        char v8 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        BOOL v14 = v11 > 3;
        char v15 = v10 | v14;
        if (((v10 | v14) | v8)) {
          int v16 = 0;
        }
        else {
          int v16 = a3;
        }
        unint64_t v17 = (int *)MEMORY[0x1E4F940E8];
        char v18 = (int *)MEMORY[0x1E4F940C8];
        if (*(void *)(v3 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(v3 + *v6)) {
          goto LABEL_124;
        }
        char v80 = (v16 == 0) | v15;
        unsigned int v19 = (int *)MEMORY[0x1E4F940B8];
        char v79 = v10 | v14;
        break;
      default:
        ++v11;
LABEL_6:
        uint64_t v12 = v9;
        uint64_t v13 = v10;
LABEL_8:
        ++v7;
        uint64_t v9 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(unsigned char *)(v3 + *v18)) {
      goto LABEL_124;
    }
    char v20 = 0;
    unsigned int v21 = 0;
    unint64_t v22 = 0;
    while (1)
    {
      uint64_t v23 = *v17;
      uint64_t v24 = *(void *)(v3 + v23);
      unint64_t v25 = v24 + 1;
      if (v24 == -1 || v25 > *(void *)(v3 + *v6)) {
        break;
      }
      char v26 = *(unsigned char *)(*(void *)(v3 + *v19) + v24);
      *(void *)(v3 + v23) = v25;
      v22 |= (unint64_t)(v26 & 0x7F) << v20;
      if ((v26 & 0x80) == 0) {
        goto LABEL_23;
      }
      v20 += 7;
      BOOL v27 = v21++ >= 9;
      if (v27)
      {
        unint64_t v22 = 0;
        int v28 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_25;
      }
    }
    *(unsigned char *)(v3 + *v18) = 1;
LABEL_23:
    int v28 = *(unsigned __int8 *)(v3 + *v18);
    if (*(unsigned char *)(v3 + *v18)) {
      unint64_t v22 = 0;
    }
LABEL_25:
    int v29 = v22 & 7;
    if (v28 || v29 == 4)
    {
LABEL_124:
      if (v15)
      {
        char v73 = 1;
        goto LABEL_126;
      }
      if (v16)
      {
        while (1)
        {
          int v75 = *v16++;
          char v74 = 32;
          switch(v75)
          {
            case 0:
              goto LABEL_137;
            case 1:
              goto LABEL_135;
            case 2:
              char v74 = 64;
              goto LABEL_135;
            case 4:
              char v74 = 8;
              goto LABEL_135;
            case 6:
              char v74 = 4;
              goto LABEL_135;
            case 7:
              char v74 = 16;
LABEL_135:
              *(unsigned char *)(a1 + 96) |= v74;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_137;
    }
    unint64_t v31 = v22 >> 3;
    BOOL v32 = v15;
    if ((v80 & 1) == 0)
    {
      BOOL v33 = v16;
      do
      {
        int v35 = *v33++;
        int v34 = v35;
        BOOL v32 = v35 != 0;
        if (v35) {
          BOOL v36 = v34 == v31;
        }
        else {
          BOOL v36 = 1;
        }
      }
      while (!v36);
    }
    switch((int)v31)
    {
      case 1:
        if (!v32) {
          goto LABEL_93;
        }
        if ((*(unsigned char *)(a1 + 96) & 0x20) == 0)
        {
          uint64_t v37 = PBReaderReadString();
          int v38 = *(void **)(a1 + 64);
          *(void *)(a1 + 64) = v37;
          goto LABEL_61;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_142;
        }
        char v65 = 4 * *(unsigned char *)(a1 + 96);
        goto LABEL_109;
      case 2:
        if (!v32) {
          goto LABEL_93;
        }
        if ((*(unsigned char *)(a1 + 96) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_142;
          }
          char v65 = 2 * *(unsigned char *)(a1 + 96);
          goto LABEL_109;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_142;
        }
        BOOL v78 = objc_alloc_init(GEOPDSearchTokenSet);
        if (!GEOPDSearchTokenSetReadAllFrom((uint64_t)v78, (void *)v3, v9 & 1)) {
          goto LABEL_141;
        }
        PBReaderRecallMark();
        uint64_t v40 = 72;
        goto LABEL_60;
      case 3:
        if ((v8 & 1) == 0) {
          goto LABEL_93;
        }
        char v41 = 0;
        unsigned int v42 = 0;
        uint64_t v43 = 0;
        *(unsigned char *)(a1 + 96) |= 1u;
        while (2)
        {
          uint64_t v44 = *v17;
          uint64_t v45 = *(void *)(v3 + v44);
          unint64_t v46 = v45 + 1;
          if (v45 == -1 || v46 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v47 = *(unsigned char *)(*(void *)(v3 + *v19) + v45);
            *(void *)(v3 + v44) = v46;
            v43 |= (unint64_t)(v47 & 0x7F) << v41;
            if (v47 < 0)
            {
              v41 += 7;
              BOOL v27 = v42++ >= 9;
              if (v27)
              {
                uint64_t v43 = 0;
                goto LABEL_98;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          uint64_t v43 = 0;
        }
LABEL_98:
        *(void *)(a1 + 40) = v43;
        goto LABEL_111;
      case 4:
        if (!v32) {
          goto LABEL_93;
        }
        if ((*(unsigned char *)(a1 + 96) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_142;
          }
          char v65 = 16 * *(unsigned char *)(a1 + 96);
LABEL_109:
          v7 += v65 >> 7;
        }
        else
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_142;
          }
          BOOL v78 = objc_alloc_init(GEOLatLng);
          if (!GEOLatLngReadAllFrom((uint64_t)v78, (void *)v3)) {
            goto LABEL_141;
          }
          PBReaderRecallMark();
          uint64_t v40 = 48;
LABEL_60:
          int v38 = *(void **)(a1 + v40);
          *(void *)(a1 + v40) = v78;
LABEL_61:

          --v7;
        }
        goto LABEL_110;
      case 5:
        if ((v8 & 1) == 0) {
          goto LABEL_93;
        }
        char v48 = 0;
        unsigned int v49 = 0;
        uint64_t v50 = 0;
        *(unsigned char *)(a1 + 96) |= 2u;
        while (2)
        {
          uint64_t v51 = *v17;
          uint64_t v52 = *(void *)(v3 + v51);
          unint64_t v53 = v52 + 1;
          if (v52 == -1 || v53 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v54 = *(unsigned char *)(*(void *)(v3 + *v19) + v52);
            *(void *)(v3 + v51) = v53;
            v50 |= (unint64_t)(v54 & 0x7F) << v48;
            if (v54 < 0)
            {
              v48 += 7;
              BOOL v27 = v49++ >= 9;
              if (v27)
              {
                LODWORD(v50) = 0;
                goto LABEL_102;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          LODWORD(v50) = 0;
        }
LABEL_102:
        *(_DWORD *)(a1 + 92) = v50;
        goto LABEL_111;
      case 6:
        if (!v32 || (*(unsigned char *)(a1 + 96) & 4) != 0)
        {
LABEL_93:
          char v64 = PBReaderSkipValueWithTag();
          char v18 = (int *)MEMORY[0x1E4F940C8];
          char v15 = v79;
          if ((v64 & 1) == 0)
          {
LABEL_140:
            char v73 = 0;
            goto LABEL_126;
          }
        }
        else
        {
          if (v29 != 2)
          {
            char v66 = 0;
            unsigned int v67 = 0;
            uint64_t v68 = 0;
            while (1)
            {
              uint64_t v69 = *v17;
              uint64_t v70 = *(void *)(v3 + v69);
              unint64_t v71 = v70 + 1;
              if (v70 == -1 || v71 > *(void *)(v3 + *v6)) {
                break;
              }
              char v72 = *(unsigned char *)(*(void *)(v3 + *v19) + v70);
              *(void *)(v3 + v69) = v71;
              v68 |= (unint64_t)(v72 & 0x7F) << v66;
              if (v72 < 0)
              {
                v66 += 7;
                BOOL v27 = v67++ >= 9;
                if (!v27) {
                  continue;
                }
              }
              goto LABEL_123;
            }
            *(unsigned char *)(v3 + *v18) = 1;
LABEL_123:
            PBRepeatedUInt64Add();
            goto LABEL_110;
          }
          if (!PBReaderPlaceMark()) {
            goto LABEL_142;
          }
          while (1)
          {
            BOOL v55 = (int *)MEMORY[0x1E4F940C8];
            if (*(void *)(v3 + *v17) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + (int)*MEMORY[0x1E4F940C8])) {
              break;
            }
            char v56 = 0;
            unsigned int v57 = 0;
            uint64_t v58 = 0;
            while (1)
            {
              uint64_t v59 = *v17;
              uint64_t v60 = *(void *)(v3 + v59);
              unint64_t v61 = v60 + 1;
              if (v60 == -1 || v61 > *(void *)(v3 + *v6)) {
                break;
              }
              char v62 = *(unsigned char *)(*(void *)(v3 + *v19) + v60);
              *(void *)(v3 + v59) = v61;
              v58 |= (unint64_t)(v62 & 0x7F) << v56;
              if (v62 < 0)
              {
                v56 += 7;
                BOOL v27 = v57++ >= 9;
                if (!v27) {
                  continue;
                }
              }
              goto LABEL_84;
            }
            *(unsigned char *)(v3 + *v55) = 1;
LABEL_84:
            PBRepeatedUInt64Add();
          }
          PBReaderRecallMark();
          char v18 = (int *)MEMORY[0x1E4F940C8];
          char v15 = v79;
        }
        goto LABEL_111;
      case 7:
        if (!v32 || (*(unsigned char *)(a1 + 96) & 0x10) != 0)
        {
          char v63 = PBReaderSkipValueWithTag();
          char v15 = v79;
          char v18 = (int *)MEMORY[0x1E4F940C8];
          if ((v63 & 1) == 0) {
            goto LABEL_140;
          }
          goto LABEL_111;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_142;
        }
        BOOL v78 = objc_alloc_init(GEOPDSearchKeywordMapping);
        if (GEOPDSearchKeywordMappingReadAllFrom((uint64_t)v78, (void *)v3, v9 & 1))
        {
          PBReaderRecallMark();
          -[GEOPDSearchBusinessIntent _addNoFlagsKeywordMapping:](a1, v78);

LABEL_110:
          char v15 = v79;
          char v18 = (int *)MEMORY[0x1E4F940C8];
LABEL_111:
          if (!(v15 & 1 | (v7 != 0)) || *(void *)(v3 + *v17) >= *(void *)(v3 + *v6)) {
            goto LABEL_124;
          }
          continue;
        }
LABEL_141:

LABEL_142:
        char v73 = 0;
        char v15 = v79;
        char v18 = (int *)MEMORY[0x1E4F940C8];
LABEL_126:
        *(unsigned char *)(a1 + 96) |= 0x20u;
        *(unsigned char *)(a1 + 96) |= 0x40u;
        *(unsigned char *)(a1 + 96) |= 8u;
        *(unsigned char *)(a1 + 96) |= 4u;
        *(unsigned char *)(a1 + 96) |= 0x10u;
        if (v73)
        {
LABEL_137:
          unint64_t v3 = *(unsigned char *)(v3 + *v18) == 0;
          if (v15) {
            goto LABEL_138;
          }
          return v3;
        }
        unint64_t v3 = 0;
        if ((v15 & 1) == 0) {
          return v3;
        }
LABEL_138:
        int v76 = *(void **)(a1 + 8);
        *(void *)(a1 + 8) = 0;

        return v3;
      default:
        int v39 = PBReaderSkipValueWithTag();
        char v18 = (int *)MEMORY[0x1E4F940C8];
        char v15 = v79;
        if (!v39) {
          goto LABEL_140;
        }
        goto LABEL_111;
    }
  }
}

void sub_1899667D4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1899668DC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189966EC0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189966FB8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDSearchBusinessIntentCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v11 = *MEMORY[0x1E4F143B8];
  -[GEOPDSearchTokenSet readAll:](*(void *)(a1 + 72), 1);
  [*(id *)(a1 + 48) readAll:1];
  long long v8 = 0u;
  long long v9 = 0u;
  long long v6 = 0u;
  long long v7 = 0u;
  id v2 = *(id *)(a1 + 56);
  uint64_t v3 = [v2 countByEnumeratingWithState:&v6 objects:v10 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v7;
    while (1)
    {
      if (*(void *)v7 != v5) {
        objc_enumerationMutation(v2);
      }
      if (!--v4)
      {
        uint64_t v4 = [v2 countByEnumeratingWithState:&v6 objects:v10 count:16];
        if (!v4) {
          break;
        }
      }
    }
  }
}

unint64_t GEOPDSearchBusinessIntentReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 84))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDSearchBusinessIntentReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 88));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 80) = [v8 position];
  *(_DWORD *)(a1 + 84) = [v8 length];
  if (a3) {
    long long v9 = (int *)&GEOPDSearchBusinessIntentReadAllFrom_recursiveTag;
  }
  else {
    long long v9 = (int *)&GEOPDSearchBusinessIntentReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDSearchBusinessIntentReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOPDSearchBusinessIntentCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 88));
  return Specified;
}

void sub_189967254(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSearchKeywordMappingIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      if ((v8 >> 3) == 2)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOLocalizedStringIsValid(a1))
        {
LABEL_38:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_38;
        }
        unsigned int v17 = 0;
        while (1)
        {
          uint64_t v18 = *v2;
          uint64_t v19 = *(void *)&a1[v18];
          unint64_t v20 = v19 + 1;
          if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
            break;
          }
          int v21 = *(char *)(*(void *)&a1[*v5] + v19);
          *(void *)&a1[v18] = v20;
          if (v21 < 0 && v17++ <= 8) {
            continue;
          }
          goto LABEL_35;
        }
        a1[*v4] = 1;
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_38;
      }
LABEL_35:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v23 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v23;
}

void sub_189967758(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDSearchBusinessIntentIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 88));
  unsigned int v2 = *(unsigned __int8 *)(a1 + 96);
  if ((v2 & 0xA0) != 0) {
    return 1;
  }
  if ((v2 & 0x40) != 0)
  {
    if (GEOPDSearchTokenSetIsDirty(*(void *)(a1 + 72))) {
      return 1;
    }
    unsigned int v2 = *(unsigned __int8 *)(a1 + 96);
  }
  if ((v2 & 0xC) != 0) {
    return 1;
  }
  return (v2 >> 4) & 1;
}

void sub_189967AAC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchCTRStoreKeyValuePairReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 36);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 32)];
  char v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  int v10 = ((*(unsigned __int8 *)(a1 + 68) >> 6) & 1) + ((*(unsigned __int8 *)(a1 + 68) >> 5) & 1);
  while (1)
  {
    unsigned int v11 = a3[v9];
    if (v11 >= 0xFFFFFFFE)
    {
      char v7 = 1;
      goto LABEL_9;
    }
    if (v11 != -3) {
      break;
    }
    char v8 = 1;
LABEL_9:
    ++v9;
  }
  if (v11)
  {
    ++v10;
    goto LABEL_9;
  }
  int v12 = v7 & 1 | v10;
  BOOL v13 = v12 != 0;
  if ((v12 != 0) | v8 & 1) {
    int v14 = 0;
  }
  else {
    int v14 = a3;
  }
  if (v12) {
    BOOL v15 = 1;
  }
  else {
    BOOL v15 = v14 == 0;
  }
  BOOL v86 = v15;
  int v16 = (int *)MEMORY[0x1E4F940E8];
  unsigned int v17 = (int *)MEMORY[0x1E4F940C8];
  uint64_t v18 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(void *)(v3 + *v16) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v17)) {
      goto LABEL_135;
    }
    char v19 = 0;
    unsigned int v20 = 0;
    unint64_t v21 = 0;
    while (1)
    {
      uint64_t v22 = *v16;
      uint64_t v23 = *(void *)(v3 + v22);
      unint64_t v24 = v23 + 1;
      if (v23 == -1 || v24 > *(void *)(v3 + *v6)) {
        break;
      }
      char v25 = *(unsigned char *)(*(void *)(v3 + *v18) + v23);
      *(void *)(v3 + v22) = v24;
      v21 |= (unint64_t)(v25 & 0x7F) << v19;
      if ((v25 & 0x80) == 0) {
        goto LABEL_27;
      }
      v19 += 7;
      BOOL v26 = v20++ >= 9;
      if (v26)
      {
        unint64_t v21 = 0;
        int v27 = *(unsigned __int8 *)(v3 + *v17);
        goto LABEL_29;
      }
    }
    *(unsigned char *)(v3 + *v17) = 1;
LABEL_27:
    int v27 = *(unsigned __int8 *)(v3 + *v17);
    if (*(unsigned char *)(v3 + *v17)) {
      unint64_t v21 = 0;
    }
LABEL_29:
    if (v27 || (v21 & 7) == 4)
    {
LABEL_135:
      if (v13)
      {
        char v80 = 1;
        goto LABEL_147;
      }
      if (!v14) {
        goto LABEL_148;
      }
      while (1)
      {
        int v83 = *v14++;
        int v82 = v83;
        if (v83 == 6) {
          break;
        }
        if (v82 == 7)
        {
          char v81 = 32;
LABEL_141:
          *(unsigned char *)(a1 + 68) |= v81;
        }
        else if (!v82)
        {
          goto LABEL_148;
        }
      }
      char v81 = 64;
      goto LABEL_141;
    }
    unint64_t v29 = v21 >> 3;
    BOOL v30 = v13;
    if (!v86)
    {
      unint64_t v31 = v14;
      do
      {
        int v33 = *v31++;
        int v32 = v33;
        BOOL v30 = v33 != 0;
        if (v33) {
          BOOL v34 = v32 == v29;
        }
        else {
          BOOL v34 = 1;
        }
      }
      while (!v34);
    }
    switch((int)v29)
    {
      case 1:
        if ((v8 & 1) == 0) {
          goto LABEL_98;
        }
        char v35 = 0;
        unsigned int v36 = 0;
        uint64_t v37 = 0;
        *(unsigned char *)(a1 + 68) |= 0x10u;
        while (1)
        {
          uint64_t v38 = *v16;
          uint64_t v39 = *(void *)(v3 + v38);
          unint64_t v40 = v39 + 1;
          if (v39 == -1 || v40 > *(void *)(v3 + *v6)) {
            break;
          }
          char v41 = *(unsigned char *)(*(void *)(v3 + *v18) + v39);
          *(void *)(v3 + v38) = v40;
          v37 |= (unint64_t)(v41 & 0x7F) << v35;
          if ((v41 & 0x80) == 0) {
            goto LABEL_101;
          }
          v35 += 7;
          BOOL v26 = v36++ >= 9;
          if (v26)
          {
            LODWORD(v37) = 0;
            goto LABEL_103;
          }
        }
        *(unsigned char *)(v3 + *v17) = 1;
LABEL_101:
        if (*(unsigned char *)(v3 + *v17)) {
          LODWORD(v37) = 0;
        }
LABEL_103:
        uint64_t v77 = 60;
        goto LABEL_124;
      case 2:
        if ((v8 & 1) == 0) {
          goto LABEL_98;
        }
        char v43 = 0;
        unsigned int v44 = 0;
        uint64_t v37 = 0;
        *(unsigned char *)(a1 + 68) |= 4u;
        while (2)
        {
          uint64_t v45 = *v16;
          uint64_t v46 = *(void *)(v3 + v45);
          unint64_t v47 = v46 + 1;
          if (v46 == -1 || v47 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v17) = 1;
          }
          else
          {
            char v48 = *(unsigned char *)(*(void *)(v3 + *v18) + v46);
            *(void *)(v3 + v45) = v47;
            v37 |= (unint64_t)(v48 & 0x7F) << v43;
            if (v48 < 0)
            {
              v43 += 7;
              BOOL v26 = v44++ >= 9;
              if (v26)
              {
                LODWORD(v37) = 0;
                goto LABEL_107;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v17)) {
          LODWORD(v37) = 0;
        }
LABEL_107:
        uint64_t v77 = 52;
        goto LABEL_124;
      case 3:
        if ((v8 & 1) == 0) {
          goto LABEL_98;
        }
        char v49 = 0;
        unsigned int v50 = 0;
        uint64_t v37 = 0;
        *(unsigned char *)(a1 + 68) |= 8u;
        while (2)
        {
          uint64_t v51 = *v16;
          uint64_t v52 = *(void *)(v3 + v51);
          unint64_t v53 = v52 + 1;
          if (v52 == -1 || v53 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v17) = 1;
          }
          else
          {
            char v54 = *(unsigned char *)(*(void *)(v3 + *v18) + v52);
            *(void *)(v3 + v51) = v53;
            v37 |= (unint64_t)(v54 & 0x7F) << v49;
            if (v54 < 0)
            {
              v49 += 7;
              BOOL v26 = v50++ >= 9;
              if (v26)
              {
                LODWORD(v37) = 0;
                goto LABEL_111;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v17)) {
          LODWORD(v37) = 0;
        }
LABEL_111:
        uint64_t v77 = 56;
        goto LABEL_124;
      case 4:
        if ((v8 & 1) == 0) {
          goto LABEL_98;
        }
        char v55 = 0;
        unsigned int v56 = 0;
        uint64_t v37 = 0;
        *(unsigned char *)(a1 + 68) |= 2u;
        while (2)
        {
          uint64_t v57 = *v16;
          uint64_t v58 = *(void *)(v3 + v57);
          unint64_t v59 = v58 + 1;
          if (v58 == -1 || v59 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v17) = 1;
          }
          else
          {
            char v60 = *(unsigned char *)(*(void *)(v3 + *v18) + v58);
            *(void *)(v3 + v57) = v59;
            v37 |= (unint64_t)(v60 & 0x7F) << v55;
            if (v60 < 0)
            {
              v55 += 7;
              BOOL v26 = v56++ >= 9;
              if (v26)
              {
                LODWORD(v37) = 0;
                goto LABEL_115;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v17)) {
          LODWORD(v37) = 0;
        }
LABEL_115:
        uint64_t v77 = 48;
        goto LABEL_124;
      case 5:
        if ((v8 & 1) == 0) {
          goto LABEL_98;
        }
        char v61 = 0;
        unsigned int v62 = 0;
        uint64_t v37 = 0;
        *(unsigned char *)(a1 + 68) |= 1u;
        while (2)
        {
          uint64_t v63 = *v16;
          uint64_t v64 = *(void *)(v3 + v63);
          unint64_t v65 = v64 + 1;
          if (v64 == -1 || v65 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v17) = 1;
          }
          else
          {
            char v66 = *(unsigned char *)(*(void *)(v3 + *v18) + v64);
            *(void *)(v3 + v63) = v65;
            v37 |= (unint64_t)(v66 & 0x7F) << v61;
            if (v66 < 0)
            {
              v61 += 7;
              BOOL v26 = v62++ >= 9;
              if (v26)
              {
                LODWORD(v37) = 0;
                goto LABEL_119;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v17)) {
          LODWORD(v37) = 0;
        }
LABEL_119:
        uint64_t v77 = 44;
        goto LABEL_124;
      case 6:
        if (!v30) {
          goto LABEL_98;
        }
        if ((*(unsigned char *)(a1 + 68) & 0x40) == 0)
        {
          uint64_t v67 = PBReaderReadString();
          uint64_t v68 = 24;
          goto LABEL_89;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_153;
        }
        char v79 = 2 * *(unsigned char *)(a1 + 68);
        goto LABEL_134;
      case 7:
        if (!v30) {
          goto LABEL_98;
        }
        if ((*(unsigned char *)(a1 + 68) & 0x20) == 0)
        {
          uint64_t v67 = PBReaderReadString();
          uint64_t v68 = 16;
LABEL_89:
          uint64_t v69 = *(void **)(a1 + v68);
          *(void *)(a1 + v68) = v67;

          unsigned int v17 = (int *)MEMORY[0x1E4F940C8];
          --v9;
          goto LABEL_125;
        }
        if (PBReaderSkipValueWithTag())
        {
          char v79 = 4 * *(unsigned char *)(a1 + 68);
LABEL_134:
          v9 += v79 >> 7;
          unsigned int v17 = (int *)MEMORY[0x1E4F940C8];
LABEL_125:
          if (v9) {
            char v78 = 1;
          }
          else {
            char v78 = v13;
          }
          if ((v78 & 1) == 0) {
            goto LABEL_135;
          }
          continue;
        }
LABEL_153:
        char v80 = 0;
        unsigned int v17 = (int *)MEMORY[0x1E4F940C8];
LABEL_147:
        *(unsigned char *)(a1 + 68) |= 0x40u;
        *(unsigned char *)(a1 + 68) |= 0x20u;
        if (v80)
        {
LABEL_148:
          unint64_t v3 = *(unsigned char *)(v3 + *v17) == 0;
          if (v13) {
            goto LABEL_149;
          }
        }
        else
        {
          unint64_t v3 = 0;
          if (v13)
          {
LABEL_149:
            double v84 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = 0;
          }
        }
        return v3;
      case 8:
        if (v8)
        {
          char v70 = 0;
          unsigned int v71 = 0;
          uint64_t v37 = 0;
          while (1)
          {
            uint64_t v72 = *v16;
            uint64_t v73 = *(void *)(v3 + v72);
            unint64_t v74 = v73 + 1;
            if (v73 == -1 || v74 > *(void *)(v3 + *v6)) {
              break;
            }
            char v75 = *(unsigned char *)(*(void *)(v3 + *v18) + v73);
            *(void *)(v3 + v72) = v74;
            v37 |= (unint64_t)(v75 & 0x7F) << v70;
            if ((v75 & 0x80) == 0) {
              goto LABEL_121;
            }
            v70 += 7;
            BOOL v26 = v71++ >= 9;
            if (v26)
            {
              LODWORD(v37) = 0;
              goto LABEL_123;
            }
          }
          *(unsigned char *)(v3 + *v17) = 1;
LABEL_121:
          if (*(unsigned char *)(v3 + *v17)) {
            LODWORD(v37) = 0;
          }
LABEL_123:
          uint64_t v77 = 64;
LABEL_124:
          *(_DWORD *)(a1 + v77) = v37;
        }
        else
        {
LABEL_98:
          char v76 = PBReaderSkipValueWithTag();
          unsigned int v17 = (int *)MEMORY[0x1E4F940C8];
          if ((v76 & 1) == 0)
          {
LABEL_146:
            char v80 = 0;
            goto LABEL_147;
          }
        }
        goto LABEL_125;
      default:
        int v42 = PBReaderSkipValueWithTag();
        unsigned int v17 = (int *)MEMORY[0x1E4F940C8];
        if (!v42) {
          goto LABEL_146;
        }
        goto LABEL_125;
    }
  }
}

void sub_189968B44(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189968C24(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchCTRStoreKeyValuePairReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 36))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDSearchCTRStoreKeyValuePairReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)int v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 40));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 32) = [v8 position];
  *(_DWORD *)(a1 + 36) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOPDSearchCTRStoreKeyValuePairReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOPDSearchCTRStoreKeyValuePairReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDSearchCTRStoreKeyValuePairReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return Specified;
}

void sub_189968DB4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189969014(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189969260(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchCategoryIntentReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 136));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 132);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 128)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint16x4_t v11 = (uint16x4_t)vdup_n_s16(*(unsigned __int16 *)(a1 + 140));
  unsigned int v12 = (unsigned __int16)(vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16(v11, (uint16x4_t)0xFFFFFFF6FFF5FFFELL), (int8x8_t)0x1000100010001))+ ((*(_WORD *)(a1 + 140) >> 5) & 1)+ ((*(_WORD *)(a1 + 140) >> 4) & 1)+ ((*(_WORD *)(a1 + 140) >> 9) & 1))+ (unsigned __int16)(vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16(v11, (uint16x4_t)0xFFFAFFFDFFF9FFF8), (int8x8_t)0x1000100010001))+ (*(_WORD *)(a1 + 140) & 1));
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    switch(a3[v7])
    {
      case -3:
        char v8 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v13 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        unsigned __int8 v15 = v10 | (v12 > 8);
        if ((v15 | v8)) {
          int v16 = 0;
        }
        else {
          int v16 = a3;
        }
        BOOL v17 = v15;
        uint64_t v18 = (int *)MEMORY[0x1E4F940E8];
        char v19 = (int *)MEMORY[0x1E4F940C8];
        if (*(void *)(v3 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(v3 + *v6)) {
          goto LABEL_124;
        }
        char v66 = (v16 == 0) | v15;
        unsigned int v20 = (int *)MEMORY[0x1E4F940B8];
        BOOL v65 = v15;
        break;
      default:
        ++v12;
LABEL_6:
        uint64_t v13 = v9;
        uint64_t v14 = v10;
LABEL_8:
        ++v7;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(unsigned char *)(v3 + *v19)) {
      goto LABEL_124;
    }
    char v21 = 0;
    unsigned int v22 = 0;
    unint64_t v23 = 0;
    while (1)
    {
      uint64_t v24 = *v18;
      uint64_t v25 = *(void *)(v3 + v24);
      unint64_t v26 = v25 + 1;
      if (v25 == -1 || v26 > *(void *)(v3 + *v6)) {
        break;
      }
      char v27 = *(unsigned char *)(*(void *)(v3 + *v20) + v25);
      *(void *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0) {
        goto LABEL_23;
      }
      v21 += 7;
      BOOL v28 = v22++ >= 9;
      if (v28)
      {
        unint64_t v23 = 0;
        int v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_25;
      }
    }
    *(unsigned char *)(v3 + *v19) = 1;
LABEL_23:
    int v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(unsigned char *)(v3 + *v19)) {
      unint64_t v23 = 0;
    }
LABEL_25:
    int v30 = v23 & 7;
    if (v29 || v30 == 4)
    {
LABEL_124:
      if (v17)
      {
        char v60 = 1;
        goto LABEL_126;
      }
      if (v16)
      {
        while (1)
        {
          int v61 = *v16++;
          __int16 v62 = 2048;
          switch(v61)
          {
            case 0:
              goto LABEL_143;
            case 1:
              goto LABEL_142;
            case 2:
              __int16 v62 = 4;
              goto LABEL_142;
            case 3:
              __int16 v62 = 1024;
              goto LABEL_142;
            case 4:
              __int16 v62 = 2;
              goto LABEL_142;
            case 5:
              __int16 v62 = 32;
              goto LABEL_142;
            case 6:
              __int16 v62 = 16;
              goto LABEL_142;
            case 7:
              __int16 v62 = 512;
              goto LABEL_142;
            case 8:
              __int16 v62 = 256;
              goto LABEL_142;
            case 9:
              __int16 v62 = 1;
              goto LABEL_142;
            case 10:
              __int16 v62 = 128;
              goto LABEL_142;
            case 11:
              __int16 v62 = 8;
              goto LABEL_142;
            case 12:
              __int16 v62 = 64;
LABEL_142:
              *(_WORD *)(a1 + 140) |= v62;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_143;
    }
    unint64_t v32 = v23 >> 3;
    BOOL v33 = v17;
    if ((v66 & 1) == 0)
    {
      BOOL v34 = v16;
      do
      {
        int v36 = *v34++;
        int v35 = v36;
        BOOL v33 = v36 != 0;
        if (v36) {
          BOOL v37 = v35 == v32;
        }
        else {
          BOOL v37 = 1;
        }
      }
      while (!v37);
    }
    switch((int)v32)
    {
      case 1:
        if (!v33) {
          goto LABEL_105;
        }
        if ((*(_WORD *)(a1 + 140) & 0x800) == 0)
        {
          uint64_t v38 = PBReaderReadString();
          uint64_t v39 = *(void **)(a1 + 120);
          *(void *)(a1 + 120) = v38;

          --v7;
          goto LABEL_104;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_147;
        }
        __int16 v52 = 16 * *(_WORD *)(a1 + 140);
        goto LABEL_113;
      case 2:
        if (!v33 || (*(_WORD *)(a1 + 140) & 4) != 0) {
          goto LABEL_105;
        }
        PBReaderReadString();
        char v41 = (GEOPDSearchTokenSet *)objc_claimAutoreleasedReturnValue();
        if (v41) {
          -[GEOPDSearchCategoryIntent _addNoFlagsCategoryId:](a1, v41);
        }
        goto LABEL_102;
      case 3:
        if (!v33) {
          goto LABEL_105;
        }
        if ((*(_WORD *)(a1 + 140) & 0x400) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_147;
          }
          char v41 = objc_alloc_init(GEOPDSearchTokenSet);
          if (!GEOPDSearchTokenSetReadAllFrom((uint64_t)v41, (void *)v3, v9 & 1)) {
            goto LABEL_148;
          }
          PBReaderRecallMark();
          int v42 = *(void **)(a1 + 112);
          *(void *)(a1 + 112) = v41;

          --v7;
          goto LABEL_103;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
        {
LABEL_147:
          char v60 = 0;
          goto LABEL_149;
        }
        __int16 v52 = 32 * *(_WORD *)(a1 + 140);
LABEL_113:
        v7 += v52 >> 15;
        goto LABEL_104;
      case 4:
        if (!v33 || (*(_WORD *)(a1 + 140) & 2) != 0) {
          goto LABEL_105;
        }
        PBReaderReadString();
        char v41 = (GEOPDSearchTokenSet *)objc_claimAutoreleasedReturnValue();
        if (v41) {
          -[GEOPDSearchCategoryIntent _addNoFlagsCanonicalName:](a1, v41);
        }
        goto LABEL_102;
      case 5:
        if (!v33 || (*(_WORD *)(a1 + 140) & 0x20) != 0) {
          goto LABEL_105;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_147;
        }
        char v41 = objc_alloc_init(GEOPDSearchKeyValueDoublePair);
        if (!GEOPDSearchKeyValueDoublePairReadAllFrom((uint64_t)v41, (void *)v3)) {
          goto LABEL_148;
        }
        PBReaderRecallMark();
        -[GEOPDSearchCategoryIntent _addNoFlagsFeatureMap:](a1, v41);
        goto LABEL_102;
      case 6:
        if (!v33 || (*(_WORD *)(a1 + 140) & 0x10) != 0) {
          goto LABEL_105;
        }
        PBReaderReadString();
        char v41 = (GEOPDSearchTokenSet *)objc_claimAutoreleasedReturnValue();
        if (v41) {
          -[GEOPDSearchCategoryIntent _addNoFlagsExpandedCategoryId:](a1, v41);
        }
        goto LABEL_102;
      case 7:
        if (!v33 || (*(_WORD *)(a1 + 140) & 0x200) != 0) {
          goto LABEL_105;
        }
        PBReaderReadString();
        char v41 = (GEOPDSearchTokenSet *)objc_claimAutoreleasedReturnValue();
        if (v41) {
          -[GEOPDSearchCategoryIntent _addNoFlagsNegativeCategory:](a1, v41);
        }
        goto LABEL_102;
      case 8:
        if (!v33 || (*(_WORD *)(a1 + 140) & 0x100) != 0) {
          goto LABEL_105;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_147;
        }
        char v41 = objc_alloc_init(GEOPDSearchKeyValuePair);
        if (!GEOPDSearchKeyValuePairReadAllFrom((uint64_t)v41, (void *)v3, v9 & 1)) {
          goto LABEL_148;
        }
        PBReaderRecallMark();
        -[GEOPDSearchCategoryIntent _addNoFlagsModernToLegacyIdMapping:](a1, v41);
        goto LABEL_102;
      case 9:
        if (!v33 || (*(_WORD *)(a1 + 140) & 1) != 0) {
          goto LABEL_105;
        }
        if (v30 == 2)
        {
          if (!PBReaderPlaceMark()) {
            goto LABEL_147;
          }
          while (1)
          {
            char v43 = (int *)MEMORY[0x1E4F940C8];
            if (*(void *)(v3 + *v18) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + (int)*MEMORY[0x1E4F940C8])) {
              break;
            }
            char v44 = 0;
            unsigned int v45 = 0;
            uint64_t v46 = 0;
            while (1)
            {
              uint64_t v47 = *v18;
              uint64_t v48 = *(void *)(v3 + v47);
              unint64_t v49 = v48 + 1;
              if (v48 == -1 || v49 > *(void *)(v3 + *v6)) {
                break;
              }
              char v50 = *(unsigned char *)(*(void *)(v3 + *v20) + v48);
              *(void *)(v3 + v47) = v49;
              v46 |= (unint64_t)(v50 & 0x7F) << v44;
              if (v50 < 0)
              {
                v44 += 7;
                BOOL v28 = v45++ >= 9;
                if (!v28) {
                  continue;
                }
              }
              goto LABEL_87;
            }
            *(unsigned char *)(v3 + *v43) = 1;
LABEL_87:
            PBRepeatedUInt64Add();
          }
          PBReaderRecallMark();
        }
        else
        {
          char v53 = 0;
          unsigned int v54 = 0;
          uint64_t v55 = 0;
          while (1)
          {
            uint64_t v56 = *v18;
            uint64_t v57 = *(void *)(v3 + v56);
            unint64_t v58 = v57 + 1;
            if (v57 == -1 || v58 > *(void *)(v3 + *v6)) {
              break;
            }
            char v59 = *(unsigned char *)(*(void *)(v3 + *v20) + v57);
            *(void *)(v3 + v56) = v58;
            v55 |= (unint64_t)(v59 & 0x7F) << v53;
            if (v59 < 0)
            {
              v53 += 7;
              BOOL v28 = v54++ >= 9;
              if (!v28) {
                continue;
              }
            }
            goto LABEL_123;
          }
          *(unsigned char *)(v3 + *v19) = 1;
LABEL_123:
          PBRepeatedUInt64Add();
        }
        goto LABEL_104;
      case 10:
        if (!v33 || (*(_WORD *)(a1 + 140) & 0x80) != 0) {
          goto LABEL_105;
        }
        PBReaderReadString();
        char v41 = (GEOPDSearchTokenSet *)objc_claimAutoreleasedReturnValue();
        if (v41) {
          -[GEOPDSearchCategoryIntent _addNoFlagsLegacyCategoryId:](a1, v41);
        }
        goto LABEL_102;
      case 11:
        if (!v33 || (*(_WORD *)(a1 + 140) & 8) != 0) {
          goto LABEL_105;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_147;
        }
        char v41 = objc_alloc_init(GEOPDSearchCategoryMapping);
        if (!GEOPDSearchCategoryMappingReadAllFrom((uint64_t)v41, (void *)v3, v9 & 1)) {
          goto LABEL_148;
        }
        PBReaderRecallMark();
        -[GEOPDSearchCategoryIntent _addNoFlagsCategoryMappings:](a1, v41);
        goto LABEL_102;
      case 12:
        if (!v33 || (*(_WORD *)(a1 + 140) & 0x40) != 0)
        {
LABEL_105:
          char v51 = PBReaderSkipValueWithTag();
          char v19 = (int *)MEMORY[0x1E4F940C8];
          if ((v51 & 1) == 0)
          {
LABEL_146:
            char v60 = 0;
            goto LABEL_126;
          }
LABEL_106:
          if (!v17 && v7 == 0 || *(void *)(v3 + *v18) >= *(void *)(v3 + *v6)) {
            goto LABEL_124;
          }
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_147;
        }
        char v41 = objc_alloc_init(GEOPDSearchKeywordMapping);
        if (GEOPDSearchKeywordMappingReadAllFrom((uint64_t)v41, (void *)v3, v9 & 1))
        {
          PBReaderRecallMark();
          -[GEOPDSearchCategoryIntent _addNoFlagsKeywordMapping:](a1, v41);
LABEL_102:

LABEL_103:
          BOOL v17 = v65;
LABEL_104:
          char v19 = (int *)MEMORY[0x1E4F940C8];
          goto LABEL_106;
        }
LABEL_148:

        char v60 = 0;
        BOOL v17 = v65;
LABEL_149:
        char v19 = (int *)MEMORY[0x1E4F940C8];
LABEL_126:
        *(_WORD *)(a1 + 140) |= 0x800u;
        *(_WORD *)(a1 + 140) |= 4u;
        *(_WORD *)(a1 + 140) |= 0x400u;
        *(_WORD *)(a1 + 140) |= 2u;
        *(_WORD *)(a1 + 140) |= 0x20u;
        *(_WORD *)(a1 + 140) |= 0x10u;
        *(_WORD *)(a1 + 140) |= 0x200u;
        *(_WORD *)(a1 + 140) |= 0x100u;
        *(_WORD *)(a1 + 140) |= 1u;
        *(_WORD *)(a1 + 140) |= 0x80u;
        *(_WORD *)(a1 + 140) |= 8u;
        *(_WORD *)(a1 + 140) |= 0x40u;
        if (v60)
        {
LABEL_143:
          unint64_t v3 = *(unsigned char *)(v3 + *v19) == 0;
          if (v17) {
            goto LABEL_144;
          }
          return v3;
        }
        unint64_t v3 = 0;
        if (!v17) {
          return v3;
        }
LABEL_144:
        uint64_t v63 = *(void **)(a1 + 8);
        *(void *)(a1 + 8) = 0;

        return v3;
      default:
        int v40 = PBReaderSkipValueWithTag();
        char v19 = (int *)MEMORY[0x1E4F940C8];
        if (!v40) {
          goto LABEL_146;
        }
        goto LABEL_106;
    }
  }
}

void sub_18996A248(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18996A414(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18996A630(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18996A770(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18996A93C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18996AB58(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18996AC98(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18996AEB4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18996B044(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18996B9E8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18996BADC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDSearchCategoryIntentCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v40 = *MEMORY[0x1E4F143B8];
  -[GEOPDSearchTokenSet readAll:](*(void *)(a1 + 112), 1);
  long long v34 = 0u;
  long long v35 = 0u;
  long long v32 = 0u;
  long long v33 = 0u;
  id v2 = *(id *)(a1 + 72);
  uint64_t v3 = [v2 countByEnumeratingWithState:&v32 objects:v39 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v33;
    while (1)
    {
      if (*(void *)v33 != v5) {
        objc_enumerationMutation(v2);
      }
      if (!--v4)
      {
        uint64_t v4 = [v2 countByEnumeratingWithState:&v32 objects:v39 count:16];
        if (!v4) {
          break;
        }
      }
    }
  }

  long long v30 = 0u;
  long long v31 = 0u;
  long long v28 = 0u;
  long long v29 = 0u;
  id v6 = *(id *)(a1 + 96);
  uint64_t v7 = [v6 countByEnumeratingWithState:&v28 objects:v38 count:16];
  if (v7)
  {
    uint64_t v8 = v7;
    uint64_t v9 = *(void *)v29;
    do
    {
      uint64_t v10 = 0;
      do
      {
        if (*(void *)v29 != v9) {
          objc_enumerationMutation(v6);
        }
        -[GEOPDSearchKeyValuePair readAll:](*(void *)(*((void *)&v28 + 1) + 8 * v10++), 1);
      }
      while (v8 != v10);
      uint64_t v8 = [v6 countByEnumeratingWithState:&v28 objects:v38 count:16];
    }
    while (v8);
  }

  long long v26 = 0u;
  long long v27 = 0u;
  long long v24 = 0u;
  long long v25 = 0u;
  id v11 = *(id *)(a1 + 56);
  uint64_t v12 = [v11 countByEnumeratingWithState:&v24 objects:v37 count:16];
  if (v12)
  {
    uint64_t v13 = v12;
    uint64_t v14 = *(void *)v25;
    do
    {
      uint64_t v15 = 0;
      do
      {
        if (*(void *)v25 != v14) {
          objc_enumerationMutation(v11);
        }
        -[GEOPDSearchCategoryMapping readAll:](*(void *)(*((void *)&v24 + 1) + 8 * v15++), 1);
      }
      while (v13 != v15);
      uint64_t v13 = [v11 countByEnumeratingWithState:&v24 objects:v37 count:16];
    }
    while (v13);
  }

  long long v22 = 0u;
  long long v23 = 0u;
  long long v20 = 0u;
  long long v21 = 0u;
  id v16 = *(id *)(a1 + 80);
  uint64_t v17 = [v16 countByEnumeratingWithState:&v20 objects:v36 count:16];
  if (v17)
  {
    uint64_t v18 = v17;
    uint64_t v19 = *(void *)v21;
    while (1)
    {
      if (*(void *)v21 != v19) {
        objc_enumerationMutation(v16);
      }
      if (!--v18)
      {
        uint64_t v18 = [v16 countByEnumeratingWithState:&v20 objects:v36 count:16];
        if (!v18) {
          break;
        }
      }
    }
  }
}

unint64_t GEOPDSearchCategoryIntentReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 132))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDSearchCategoryIntentReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 136));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 128) = [v8 position];
  *(_DWORD *)(a1 + 132) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOPDSearchCategoryIntentReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOPDSearchCategoryIntentReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDSearchCategoryIntentReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOPDSearchCategoryIntentCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 136));
  return Specified;
}

void sub_18996BF20(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18996C674(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDSearchCategoryIntentIsDirty(uint64_t a1)
{
  uint64_t v24 = *MEMORY[0x1E4F143B8];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 136));
  __int16 v2 = *(_WORD *)(a1 + 140);
  if ((v2 & 0x1804) != 0) {
    return 1;
  }
  if ((*(_WORD *)(a1 + 140) & 0x400) == 0)
  {
LABEL_5:
    if ((v2 & 0x3FB) != 0) {
      return 1;
    }
    if ((v2 & 0x100) != 0)
    {
      long long v20 = 0u;
      long long v21 = 0u;
      long long v18 = 0u;
      long long v19 = 0u;
      id v5 = *(id *)(a1 + 96);
      uint64_t v6 = [v5 countByEnumeratingWithState:&v18 objects:v23 count:16];
      if (v6)
      {
        uint64_t v7 = v6;
        uint64_t v8 = *(void *)v19;
LABEL_11:
        uint64_t v9 = 0;
        while (1)
        {
          if (*(void *)v19 != v8) {
            objc_enumerationMutation(v5);
          }
          if (GEOPDSearchKeyValuePairIsDirty(*(void *)(*((void *)&v18 + 1) + 8 * v9))) {
            goto LABEL_30;
          }
          if (v7 == ++v9)
          {
            uint64_t v7 = [v5 countByEnumeratingWithState:&v18 objects:v23 count:16];
            if (v7) {
              goto LABEL_11;
            }
            break;
          }
        }
      }

      __int16 v2 = *(_WORD *)(a1 + 140);
    }
    if ((v2 & 8) == 0) {
      return 0;
    }
    long long v16 = 0u;
    long long v17 = 0u;
    long long v14 = 0u;
    long long v15 = 0u;
    id v5 = *(id *)(a1 + 56);
    uint64_t v3 = [v5 countByEnumeratingWithState:&v14 objects:v22 count:16];
    if (!v3)
    {
LABEL_31:

      return v3;
    }
    uint64_t v10 = *(void *)v15;
LABEL_22:
    uint64_t v11 = 0;
    while (1)
    {
      if (*(void *)v15 != v10) {
        objc_enumerationMutation(v5);
      }
      uint64_t v12 = *(void *)(*((void *)&v14 + 1) + 8 * v11);
      if (v12)
      {
        os_unfair_lock_lock_with_options();
        os_unfair_lock_assert_owner((const os_unfair_lock *)(v12 + 48));
        int v13 = *(unsigned char *)(v12 + 52) & 0xE;
        os_unfair_lock_unlock((os_unfair_lock_t)(v12 + 48));
        if (v13) {
          break;
        }
      }
      if (v3 == ++v11)
      {
        uint64_t v3 = [v5 countByEnumeratingWithState:&v14 objects:v22 count:16];
        if (v3) {
          goto LABEL_22;
        }
        goto LABEL_31;
      }
    }
LABEL_30:
    uint64_t v3 = 1;
    goto LABEL_31;
  }
  if (!GEOPDSearchTokenSetIsDirty(*(void *)(a1 + 112)))
  {
    __int16 v2 = *(_WORD *)(a1 + 140);
    goto LABEL_5;
  }
  return 1;
}

void sub_18996D09C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchCategoryMappingReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  char v7 = 0;
  uint64_t v8 = 0;
  char v9 = 0;
  int v10 = ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1) + ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1);
  while (1)
  {
    unsigned int v11 = a3[v8];
    if (v11 >= 0xFFFFFFFE)
    {
      char v9 = 1;
      goto LABEL_9;
    }
    if (v11 != -3) {
      break;
    }
    char v7 = 1;
LABEL_9:
    ++v8;
  }
  if (v11)
  {
    ++v10;
    goto LABEL_9;
  }
  int v12 = v9 & 1 | v10;
  BOOL v13 = v12 != 0;
  if ((v12 != 0) | v7 & 1) {
    long long v14 = 0;
  }
  else {
    long long v14 = a3;
  }
  if (v12) {
    BOOL v15 = 1;
  }
  else {
    BOOL v15 = v14 == 0;
  }
  BOOL v52 = v15;
  long long v16 = (int *)MEMORY[0x1E4F940E8];
  long long v17 = (int *)MEMORY[0x1E4F940C8];
  long long v18 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(void *)(v3 + *v16) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v17)) {
      goto LABEL_73;
    }
    char v19 = 0;
    unsigned int v20 = 0;
    unint64_t v21 = 0;
    while (1)
    {
      uint64_t v22 = *v16;
      uint64_t v23 = *(void *)(v3 + v22);
      unint64_t v24 = v23 + 1;
      if (v23 == -1 || v24 > *(void *)(v3 + *v6)) {
        break;
      }
      char v25 = *(unsigned char *)(*(void *)(v3 + *v18) + v23);
      *(void *)(v3 + v22) = v24;
      v21 |= (unint64_t)(v25 & 0x7F) << v19;
      if ((v25 & 0x80) == 0) {
        goto LABEL_27;
      }
      v19 += 7;
      BOOL v26 = v20++ >= 9;
      if (v26)
      {
        unint64_t v21 = 0;
        int v27 = *(unsigned __int8 *)(v3 + *v17);
        goto LABEL_29;
      }
    }
    *(unsigned char *)(v3 + *v17) = 1;
LABEL_27:
    int v27 = *(unsigned __int8 *)(v3 + *v17);
    if (*(unsigned char *)(v3 + *v17)) {
      unint64_t v21 = 0;
    }
LABEL_29:
    if (v27 || (v21 & 7) == 4)
    {
LABEL_73:
      if (v13)
      {
        char v46 = 1;
        goto LABEL_85;
      }
      if (!v14) {
        goto LABEL_86;
      }
      while (1)
      {
        int v49 = *v14++;
        int v48 = v49;
        if (v49 == 1) {
          break;
        }
        if (v48 == 3)
        {
          char v47 = 4;
LABEL_79:
          *(unsigned char *)(a1 + 52) |= v47;
        }
        else if (!v48)
        {
          goto LABEL_86;
        }
      }
      char v47 = 2;
      goto LABEL_79;
    }
    unint64_t v29 = v21 >> 3;
    BOOL v30 = v13;
    if (!v52)
    {
      long long v31 = v14;
      do
      {
        int v33 = *v31++;
        int v32 = v33;
        BOOL v30 = v33 != 0;
        if (v33) {
          BOOL v34 = v32 == v29;
        }
        else {
          BOOL v34 = 1;
        }
      }
      while (!v34);
    }
    if (v29 != 3)
    {
      if (v29 == 2)
      {
        if ((v7 & 1) == 0) {
          goto LABEL_61;
        }
        char v38 = 0;
        unsigned int v39 = 0;
        uint64_t v40 = 0;
        *(unsigned char *)(a1 + 52) |= 1u;
        while (1)
        {
          uint64_t v41 = *v16;
          uint64_t v42 = *(void *)(v3 + v41);
          unint64_t v43 = v42 + 1;
          if (v42 == -1 || v43 > *(void *)(v3 + *v6)) {
            break;
          }
          char v44 = *(unsigned char *)(*(void *)(v3 + *v18) + v42);
          *(void *)(v3 + v41) = v43;
          v40 |= (unint64_t)(v44 & 0x7F) << v38;
          if ((v44 & 0x80) == 0) {
            goto LABEL_64;
          }
          v38 += 7;
          BOOL v26 = v39++ >= 9;
          if (v26)
          {
            uint64_t v40 = 0;
            goto LABEL_66;
          }
        }
        *(unsigned char *)(v3 + *v17) = 1;
LABEL_64:
        if (*(unsigned char *)(v3 + *v17)) {
          uint64_t v40 = 0;
        }
LABEL_66:
        *(void *)(a1 + 24) = v40;
      }
      else if (v29 == 1)
      {
        if (v30)
        {
          if ((*(unsigned char *)(a1 + 52) & 2) != 0)
          {
            if ((PBReaderSkipValueWithTag() & 1) == 0)
            {
LABEL_84:
              char v46 = 0;
              goto LABEL_85;
            }
            v8 += *(unsigned __int8 *)(a1 + 52) << 30 >> 31;
          }
          else
          {
            uint64_t v35 = PBReaderReadString();
            int v36 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v35;

            --v8;
          }
          goto LABEL_69;
        }
LABEL_61:
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_84;
        }
      }
      else if (!PBReaderSkipValueWithTag())
      {
        goto LABEL_84;
      }
LABEL_69:
      if (v8) {
        char v45 = 1;
      }
      else {
        char v45 = v13;
      }
      if ((v45 & 1) == 0) {
        goto LABEL_73;
      }
      continue;
    }
    break;
  }
  if (!v30 || (*(unsigned char *)(a1 + 52) & 4) != 0) {
    goto LABEL_61;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_84;
  }
  BOOL v37 = objc_alloc_init(GEOPDSearchRelatedCategory);
  if (GEOPDSearchRelatedCategoryReadAllFrom((uint64_t)v37, (void *)v3))
  {
    PBReaderRecallMark();
    -[GEOPDSearchCategoryMapping _addNoFlagsRelatedCategories:](a1, v37);

    long long v17 = (int *)MEMORY[0x1E4F940C8];
    goto LABEL_69;
  }

  char v46 = 0;
  long long v17 = (int *)MEMORY[0x1E4F940C8];
LABEL_85:
  *(unsigned char *)(a1 + 52) |= 2u;
  *(unsigned char *)(a1 + 52) |= 4u;
  if (v46)
  {
LABEL_86:
    unint64_t v3 = *(unsigned char *)(v3 + *v17) == 0;
    if (v13) {
      goto LABEL_87;
    }
  }
  else
  {
    unint64_t v3 = 0;
    if (v13)
    {
LABEL_87:
      char v50 = *(void **)(a1 + 8);
      *(void *)(a1 + 8) = 0;
    }
  }
  return v3;
}

void sub_18996DB10(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18996DF2C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18996E01C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDSearchCategoryMappingCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v10 = *MEMORY[0x1E4F143B8];
  long long v5 = 0u;
  long long v6 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  id v1 = *(id *)(a1 + 32);
  uint64_t v2 = [v1 countByEnumeratingWithState:&v5 objects:v9 count:16];
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t v4 = *(void *)v6;
    while (1)
    {
      if (*(void *)v6 != v4) {
        objc_enumerationMutation(v1);
      }
      if (!--v3)
      {
        uint64_t v3 = [v1 countByEnumeratingWithState:&v5 objects:v9 count:16];
        if (!v3) {
          break;
        }
      }
    }
  }
}

unint64_t GEOPDSearchCategoryMappingReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDSearchCategoryMappingReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    char v9 = (int *)&GEOPDSearchCategoryMappingReadAllFrom_recursiveTag;
  }
  else {
    char v9 = (int *)&GEOPDSearchCategoryMappingReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDSearchCategoryMappingReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOPDSearchCategoryMappingCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_18996E290(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSearchRelatedCategoryIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  uint64_t v2 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    long long v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_42;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        goto LABEL_42;
      }
      unint64_t v17 = v8 >> 3;
      if ((v8 >> 3) == 3) {
        break;
      }
      if (v17 == 2)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_44;
        }
        unsigned int v24 = 0;
        while (1)
        {
          uint64_t v25 = *v2;
          uint64_t v26 = *(void *)&a1[v25];
          unint64_t v27 = v26 + 1;
          if (v26 == -1 || v27 > *(void *)&a1[*v3]) {
            goto LABEL_39;
          }
          int v28 = *(char *)(*(void *)&a1[*v5] + v26);
          *(void *)&a1[v25] = v27;
          if (v28 < 0)
          {
            BOOL v23 = v24++ > 8;
            if (!v23) {
              continue;
            }
          }
          goto LABEL_41;
        }
      }
      if (v17 == 1 && v15 != 2 || (PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_44:
        BOOL v29 = 0;
        goto LABEL_43;
      }
LABEL_41:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_42;
      }
    }
    if ((v8 & 7) != 0) {
      goto LABEL_44;
    }
    unsigned int v18 = 0;
    while (1)
    {
      uint64_t v19 = *v2;
      uint64_t v20 = *(void *)&a1[v19];
      unint64_t v21 = v20 + 1;
      if (v20 == -1 || v21 > *(void *)&a1[*v3]) {
        break;
      }
      int v22 = *(char *)(*(void *)&a1[*v5] + v20);
      *(void *)&a1[v19] = v21;
      if (v22 < 0)
      {
        BOOL v23 = v18++ > 8;
        if (!v23) {
          continue;
        }
      }
      goto LABEL_41;
    }
LABEL_39:
    a1[*v4] = 1;
    goto LABEL_41;
  }
LABEL_42:
  BOOL v29 = a1[*v4] == 0;
LABEL_43:
  PBReaderRecallMark();
  return v29;
}

void sub_18996E734(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18996E998(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchChainInfoReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 68);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 64)];
  uint64_t v7 = 0;
  char v8 = 0;
  int v9 = 0;
  unsigned int v10 = ((*(unsigned __int8 *)(a1 + 76) >> 2) & 1)
      + (*(unsigned char *)(a1 + 76) & 1)
      + ((*(unsigned __int8 *)(a1 + 76) >> 1) & 1);
  while (1)
  {
    unsigned int v11 = a3[v7];
    if (v11 >= 0xFFFFFFFE)
    {
      int v9 = 1;
      goto LABEL_9;
    }
    if (v11 != -3) {
      break;
    }
    char v8 = 1;
LABEL_9:
    ++v7;
  }
  if (v11)
  {
    ++v10;
    goto LABEL_9;
  }
  int v12 = v9 | (v10 > 1);
  if ((v12 | v8)) {
    BOOL v13 = 0;
  }
  else {
    BOOL v13 = a3;
  }
  LODWORD(v14) = v12;
  int v15 = (int *)MEMORY[0x1E4F940E8];
  long long v16 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(v3 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(v3 + *v6))
  {
LABEL_95:
    if (v14)
    {
      char v63 = 1;
      goto LABEL_97;
    }
    if (v13)
    {
      while (1)
      {
        int v64 = *v13++;
        char v65 = 1;
        switch(v64)
        {
          case 0:
            goto LABEL_105;
          case 2:
            goto LABEL_104;
          case 3:
            char v65 = 4;
            goto LABEL_104;
          case 4:
            char v65 = 2;
LABEL_104:
            *(unsigned char *)(a1 + 76) |= v65;
            break;
          default:
            continue;
        }
      }
    }
    goto LABEL_105;
  }
  char v69 = (v13 == 0) | v12;
  unint64_t v17 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(v3 + *v16)) {
      goto LABEL_95;
    }
    char v18 = 0;
    unsigned int v19 = 0;
    unint64_t v20 = 0;
    while (1)
    {
      uint64_t v21 = *v15;
      uint64_t v22 = *(void *)(v3 + v21);
      unint64_t v23 = v22 + 1;
      if (v22 == -1 || v23 > *(void *)(v3 + *v6)) {
        break;
      }
      char v24 = *(unsigned char *)(*(void *)(v3 + *v17) + v22);
      *(void *)(v3 + v21) = v23;
      v20 |= (unint64_t)(v24 & 0x7F) << v18;
      if ((v24 & 0x80) == 0) {
        goto LABEL_24;
      }
      v18 += 7;
      BOOL v25 = v19++ >= 9;
      if (v25)
      {
        unint64_t v20 = 0;
        int v26 = *(unsigned __int8 *)(v3 + *v16);
        goto LABEL_26;
      }
    }
    *(unsigned char *)(v3 + *v16) = 1;
LABEL_24:
    int v26 = *(unsigned __int8 *)(v3 + *v16);
    if (*(unsigned char *)(v3 + *v16)) {
      unint64_t v20 = 0;
    }
LABEL_26:
    int v27 = v20 & 7;
    if (v26 || v27 == 4) {
      goto LABEL_95;
    }
    unint64_t v29 = v20 >> 3;
    BOOL v30 = (char)v14;
    if ((v69 & 1) == 0)
    {
      long long v31 = v13;
      do
      {
        int v33 = *v31++;
        int v32 = v33;
        BOOL v30 = v33 != 0;
        if (v33) {
          BOOL v34 = v32 == v29;
        }
        else {
          BOOL v34 = 1;
        }
      }
      while (!v34);
    }
    switch((int)v29)
    {
      case 1:
        if ((v8 & 1) == 0) {
          goto LABEL_71;
        }
        char v35 = 0;
        unsigned int v36 = 0;
        uint64_t v37 = 0;
        while (1)
        {
          uint64_t v38 = *v15;
          uint64_t v39 = *(void *)(v3 + v38);
          unint64_t v40 = v39 + 1;
          if (v39 == -1 || v40 > *(void *)(v3 + *v6)) {
            break;
          }
          char v41 = *(unsigned char *)(*(void *)(v3 + *v17) + v39);
          *(void *)(v3 + v38) = v40;
          v37 |= (unint64_t)(v41 & 0x7F) << v35;
          if ((v41 & 0x80) == 0) {
            goto LABEL_74;
          }
          v35 += 7;
          BOOL v25 = v36++ >= 9;
          if (v25)
          {
            uint64_t v37 = 0;
            goto LABEL_76;
          }
        }
        *(unsigned char *)(v3 + *v16) = 1;
LABEL_74:
        if (*(unsigned char *)(v3 + *v16)) {
          uint64_t v37 = 0;
        }
LABEL_76:
        *(void *)(a1 + 56) = v37;
        goto LABEL_93;
      case 2:
        if (!v30 || (*(unsigned char *)(a1 + 76) & 1) != 0) {
          goto LABEL_71;
        }
        if (v27 == 2)
        {
          if (!PBReaderPlaceMark()) {
            goto LABEL_109;
          }
          while (1)
          {
            unint64_t v43 = (int *)MEMORY[0x1E4F940C8];
            if (*(void *)(v3 + *v15) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + (int)*MEMORY[0x1E4F940C8])) {
              break;
            }
            char v44 = 0;
            unsigned int v45 = 0;
            uint64_t v46 = 0;
            while (1)
            {
              uint64_t v47 = *v15;
              uint64_t v48 = *(void *)(v3 + v47);
              unint64_t v49 = v48 + 1;
              if (v48 == -1 || v49 > *(void *)(v3 + *v6)) {
                break;
              }
              char v50 = *(unsigned char *)(*(void *)(v3 + *v17) + v48);
              *(void *)(v3 + v47) = v49;
              v46 |= (unint64_t)(v50 & 0x7F) << v44;
              if (v50 < 0)
              {
                v44 += 7;
                BOOL v25 = v45++ >= 9;
                if (!v25) {
                  continue;
                }
              }
              goto LABEL_62;
            }
            *(unsigned char *)(v3 + *v43) = 1;
LABEL_62:
            PBRepeatedInt32Add();
          }
          PBReaderRecallMark();
        }
        else
        {
          char v56 = 0;
          unsigned int v57 = 0;
          uint64_t v58 = 0;
          while (1)
          {
            uint64_t v59 = *v15;
            uint64_t v60 = *(void *)(v3 + v59);
            unint64_t v61 = v60 + 1;
            if (v60 == -1 || v61 > *(void *)(v3 + *v6)) {
              break;
            }
            char v62 = *(unsigned char *)(*(void *)(v3 + *v17) + v60);
            *(void *)(v3 + v59) = v61;
            v58 |= (unint64_t)(v62 & 0x7F) << v56;
            if (v62 < 0)
            {
              v56 += 7;
              BOOL v25 = v57++ >= 9;
              if (!v25) {
                continue;
              }
            }
            goto LABEL_91;
          }
          *(unsigned char *)(v3 + *v16) = 1;
LABEL_91:
          PBRepeatedInt32Add();
        }
        goto LABEL_92;
      case 3:
        if (!v30) {
          goto LABEL_71;
        }
        if ((*(unsigned char *)(a1 + 76) & 4) == 0)
        {
          uint64_t v51 = PBReaderReadString();
          BOOL v52 = *(void **)(a1 + 48);
          *(void *)(a1 + 48) = v51;

          long long v16 = (int *)MEMORY[0x1E4F940C8];
          --v7;
          goto LABEL_93;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_109;
        }
        char v55 = 32 * *(unsigned char *)(a1 + 76);
        goto LABEL_81;
      case 4:
        if (!v30)
        {
LABEL_71:
          char v54 = PBReaderSkipValueWithTag();
          long long v16 = (int *)MEMORY[0x1E4F940C8];
          if ((v54 & 1) == 0)
          {
LABEL_108:
            char v63 = 0;
            goto LABEL_97;
          }
LABEL_93:
          if (!(v14 & 1 | (v7 != 0)) || *(void *)(v3 + *v15) >= *(void *)(v3 + *v6)) {
            goto LABEL_95;
          }
          continue;
        }
        if ((*(unsigned char *)(a1 + 76) & 2) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_109:
            char v63 = 0;
            goto LABEL_111;
          }
          char v55 = *(unsigned char *)(a1 + 76) << 6;
LABEL_81:
          v7 += v55 >> 7;
          goto LABEL_92;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_109;
        }
        int v68 = (int)v14;
        int v14 = objc_alloc_init(GEOPDSearchBrandDensity);
        if (GEOPDSearchBrandDensityReadAllFrom((uint64_t)v14, (void *)v3))
        {
          PBReaderRecallMark();
          char v53 = *(void **)(a1 + 40);
          *(void *)(a1 + 40) = v14;

          --v7;
          LODWORD(v14) = v68;
LABEL_92:
          long long v16 = (int *)MEMORY[0x1E4F940C8];
          goto LABEL_93;
        }

        char v63 = 0;
        LOBYTE(v14) = v68;
LABEL_111:
        long long v16 = (int *)MEMORY[0x1E4F940C8];
LABEL_97:
        *(unsigned char *)(a1 + 76) |= 1u;
        *(unsigned char *)(a1 + 76) |= 4u;
        *(unsigned char *)(a1 + 76) |= 2u;
        if (v63)
        {
LABEL_105:
          unint64_t v3 = *(unsigned char *)(v3 + *v16) == 0;
          if (v14) {
            goto LABEL_106;
          }
          return v3;
        }
        unint64_t v3 = 0;
        if ((v14 & 1) == 0) {
          return v3;
        }
LABEL_106:
        char v66 = *(void **)(a1 + 8);
        *(void *)(a1 + 8) = 0;

        return v3;
      default:
        int v42 = PBReaderSkipValueWithTag();
        long long v16 = (int *)MEMORY[0x1E4F940C8];
        if (!v42) {
          goto LABEL_108;
        }
        goto LABEL_93;
    }
  }
}

void sub_18996F760(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18996F840(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18996FD88(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchChainInfoReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 68))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDSearchChainInfoReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)unsigned int v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 72));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 64) = [v8 position];
  *(_DWORD *)(a1 + 68) = [v8 length];
  if (a3) {
    int v9 = (int *)&GEOPDSearchChainInfoReadAllFrom_recursiveTag;
  }
  else {
    int v9 = (int *)&GEOPDSearchChainInfoReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDSearchChainInfoReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
  return Specified;
}

void sub_18996FF20(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t GEOPDSearchChainInfoIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  uint64_t v2 = (int *)MEMORY[0x1E4F940E8];
  unint64_t v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    int v5 = 0;
    char v6 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_57;
      }
      char v7 = 0;
      unsigned int v8 = 0;
      unint64_t v9 = 0;
      while (1)
      {
        uint64_t v10 = *v2;
        uint64_t v11 = *(void *)&a1[v10];
        unint64_t v12 = v11 + 1;
        if (v11 == -1 || v12 > *(void *)&a1[*v3]) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)&a1[*v6] + v11);
        *(void *)&a1[v10] = v12;
        v9 |= (unint64_t)(v13 & 0x7F) << v7;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v7 += 7;
        BOOL v14 = v8++ >= 9;
        if (v14)
        {
          unint64_t v9 = 0;
          int v15 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v15 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v9 = 0;
      }
LABEL_14:
      int v16 = v9 & 7;
      if (v15 || v16 == 4) {
        goto LABEL_57;
      }
      switch((v9 >> 3))
      {
        case 1u:
          if (v5 || (v9 & 7) != 0) {
            goto LABEL_65;
          }
          unsigned int v18 = 0;
          do
          {
            uint64_t v19 = *v2;
            uint64_t v20 = *(void *)&a1[v19];
            unint64_t v21 = v20 + 1;
            if (v20 == -1 || v21 > *(void *)&a1[*v3])
            {
              int v5 = 1;
              a1[*v4] = 1;
              goto LABEL_54;
            }
            int v22 = *(char *)(*(void *)&a1[*v6] + v20);
            *(void *)&a1[v19] = v21;
            int v5 = 1;
            if ((v22 & 0x80000000) == 0) {
              break;
            }
          }
          while (v18++ <= 8);
          goto LABEL_54;
        case 2u:
          if (v16 == 2)
          {
            if (!PBReaderPlaceMark())
            {
LABEL_65:
              PBReaderRecallMark();
              return 0;
            }
LABEL_44:
            while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
            {
              unsigned int v29 = a1[*v4];
              if (a1[*v4]) {
                break;
              }
              while (1)
              {
                uint64_t v30 = *v2;
                uint64_t v31 = *(void *)&a1[v30];
                unint64_t v32 = v31 + 1;
                if (v31 == -1 || v32 > *(void *)&a1[*v3]) {
                  break;
                }
                int v33 = *(char *)(*(void *)&a1[*v6] + v31);
                *(void *)&a1[v30] = v32;
                if (v33 < 0)
                {
                  BOOL v14 = v29++ >= 9;
                  if (!v14) {
                    continue;
                  }
                }
                goto LABEL_44;
              }
              a1[*v4] = 1;
            }
LABEL_41:
            PBReaderRecallMark();
          }
          else
          {
            if ((v9 & 7) != 0) {
              goto LABEL_65;
            }
            while (1)
            {
              uint64_t v24 = *v2;
              uint64_t v25 = *(void *)&a1[v24];
              unint64_t v26 = v25 + 1;
              if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
                break;
              }
              int v27 = *(char *)(*(void *)&a1[*v6] + v25);
              *(void *)&a1[v24] = v26;
              if (v27 < 0)
              {
                unsigned int v28 = v16++;
                if (v28 <= 8) {
                  continue;
                }
              }
              goto LABEL_54;
            }
            a1[*v4] = 1;
          }
LABEL_54:
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_57;
          }
          break;
        case 3u:
          if (v16 == 2) {
            goto LABEL_36;
          }
          goto LABEL_65;
        case 4u:
          if (v16 == 2 && PBReaderPlaceMark() && GEOPDSearchBrandDensityIsValid(a1)) {
            goto LABEL_41;
          }
          goto LABEL_65;
        default:
LABEL_36:
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_65;
          }
          goto LABEL_54;
      }
    }
  }
  int v5 = 0;
LABEL_57:
  if (a1[*v4]) {
    BOOL v34 = 1;
  }
  else {
    BOOL v34 = v5 == 0;
  }
  uint64_t v35 = !v34;
  PBReaderRecallMark();
  return v35;
}

void sub_18997047C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1899705F4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchChainIntentReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 128));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 124);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 120)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  unsigned int v11 = *(unsigned __int16 *)(a1 + 136);
  unsigned int v12 = ((v11 >> 5) & 1)
      + ((v11 >> 11) & 1)
      + ((v11 >> 10) & 1)
      + (unsigned __int16)(vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16((uint16x4_t)vdup_n_s16(v11), (uint16x4_t)0xFFF4FFF7FFF3FFF9), (int8x8_t)0x1000100010001))+ ((v11 >> 6) & 1)+ ((v11 >> 8) & 1)+ ((v11 >> 4) & 1));
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    switch(a3[v7])
    {
      case -3:
        char v8 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v13 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        BOOL v15 = v12 > 7;
        char v16 = v10 | v15;
        if (((v10 | v15) | v8)) {
          unint64_t v17 = 0;
        }
        else {
          unint64_t v17 = a3;
        }
        unsigned int v18 = (int *)MEMORY[0x1E4F940E8];
        uint64_t v19 = (int *)MEMORY[0x1E4F940C8];
        if (*(void *)(v3 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(v3 + *v6)) {
          goto LABEL_174;
        }
        char v98 = (v17 == 0) | v16;
        uint64_t v20 = (int *)MEMORY[0x1E4F940B8];
        char v97 = v10 | v15;
        break;
      default:
        ++v12;
LABEL_6:
        uint64_t v13 = v9;
        uint64_t v14 = v10;
LABEL_8:
        ++v7;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(unsigned char *)(v3 + *v19)) {
      goto LABEL_174;
    }
    char v21 = 0;
    unsigned int v22 = 0;
    unint64_t v23 = 0;
    while (1)
    {
      uint64_t v24 = *v18;
      uint64_t v25 = *(void *)(v3 + v24);
      unint64_t v26 = v25 + 1;
      if (v25 == -1 || v26 > *(void *)(v3 + *v6)) {
        break;
      }
      char v27 = *(unsigned char *)(*(void *)(v3 + *v20) + v25);
      *(void *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0) {
        goto LABEL_23;
      }
      v21 += 7;
      BOOL v28 = v22++ >= 9;
      if (v28)
      {
        unint64_t v23 = 0;
        int v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_25;
      }
    }
    *(unsigned char *)(v3 + *v19) = 1;
LABEL_23:
    int v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(unsigned char *)(v3 + *v19)) {
      unint64_t v23 = 0;
    }
LABEL_25:
    int v30 = v23 & 7;
    if (v29 || v30 == 4)
    {
LABEL_174:
      if (v16)
      {
        char v91 = 1;
        goto LABEL_176;
      }
      if (v17)
      {
        while (1)
        {
          int v92 = *v17++;
          __int16 v93 = 0x2000;
          switch(v92)
          {
            case 0:
              goto LABEL_191;
            case 1:
              goto LABEL_190;
            case 2:
              __int16 v93 = 128;
              goto LABEL_190;
            case 3:
              __int16 v93 = 512;
              goto LABEL_190;
            case 4:
              __int16 v93 = 4096;
              goto LABEL_190;
            case 9:
              __int16 v93 = 64;
              goto LABEL_190;
            case 10:
              __int16 v93 = 256;
              goto LABEL_190;
            case 11:
              __int16 v93 = 16;
              goto LABEL_190;
            case 12:
              __int16 v93 = 2048;
              goto LABEL_190;
            case 13:
              __int16 v93 = 32;
              goto LABEL_190;
            case 14:
              __int16 v93 = 1024;
LABEL_190:
              *(_WORD *)(a1 + 136) |= v93;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_191;
    }
    unint64_t v32 = v23 >> 3;
    BOOL v33 = v16;
    if ((v98 & 1) == 0)
    {
      BOOL v34 = v17;
      do
      {
        int v36 = *v34++;
        int v35 = v36;
        BOOL v33 = v36 != 0;
        if (v36) {
          BOOL v37 = v35 == v32;
        }
        else {
          BOOL v37 = 1;
        }
      }
      while (!v37);
    }
    switch((int)v32)
    {
      case 1:
        if (!v33) {
          goto LABEL_132;
        }
        if ((*(_WORD *)(a1 + 136) & 0x2000) == 0)
        {
          uint64_t v38 = PBReaderReadString();
          uint64_t v39 = 112;
          goto LABEL_48;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_196;
        }
        __int16 v83 = 4 * *(_WORD *)(a1 + 136);
        goto LABEL_159;
      case 2:
        if (!v33) {
          goto LABEL_132;
        }
        if ((*(_WORD *)(a1 + 136) & 0x80) == 0)
        {
          uint64_t v38 = PBReaderReadString();
          uint64_t v39 = 64;
          goto LABEL_48;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_196;
        }
        __int16 v83 = *(_WORD *)(a1 + 136) << 8;
        goto LABEL_159;
      case 3:
        if (!v33) {
          goto LABEL_132;
        }
        if ((*(_WORD *)(a1 + 136) & 0x200) == 0)
        {
          uint64_t v38 = PBReaderReadString();
          uint64_t v39 = 80;
LABEL_48:
          char v41 = *(void **)(a1 + v39);
          *(void *)(a1 + v39) = v38;
          goto LABEL_54;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_196;
        }
        __int16 v83 = *(_WORD *)(a1 + 136) << 6;
        goto LABEL_159;
      case 4:
        if (!v33) {
          goto LABEL_132;
        }
        if ((*(_WORD *)(a1 + 136) & 0x1000) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_196;
          }
          __int16 v83 = 8 * *(_WORD *)(a1 + 136);
LABEL_159:
          v7 += v83 >> 15;
          goto LABEL_160;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_196;
        }
        v96 = objc_alloc_init(GEOPDSearchTokenSet);
        if (GEOPDSearchTokenSetReadAllFrom((uint64_t)v96, (void *)v3, v9 & 1))
        {
          PBReaderRecallMark();
          char v41 = *(void **)(a1 + 104);
          *(void *)(a1 + 104) = v96;
LABEL_54:

          --v7;
LABEL_160:
          char v16 = v97;
          uint64_t v19 = (int *)MEMORY[0x1E4F940C8];
LABEL_161:
          if (!(v16 & 1 | (v7 != 0)) || *(void *)(v3 + *v18) >= *(void *)(v3 + *v6)) {
            goto LABEL_174;
          }
          continue;
        }
LABEL_195:

LABEL_196:
        char v91 = 0;
        char v16 = v97;
        uint64_t v19 = (int *)MEMORY[0x1E4F940C8];
LABEL_176:
        *(_WORD *)(a1 + 136) |= 0x2000u;
        *(_WORD *)(a1 + 136) |= 0x80u;
        *(_WORD *)(a1 + 136) |= 0x200u;
        *(_WORD *)(a1 + 136) |= 0x1000u;
        *(_WORD *)(a1 + 136) |= 0x40u;
        *(_WORD *)(a1 + 136) |= 0x100u;
        *(_WORD *)(a1 + 136) |= 0x10u;
        *(_WORD *)(a1 + 136) |= 0x800u;
        *(_WORD *)(a1 + 136) |= 0x20u;
        *(_WORD *)(a1 + 136) |= 0x400u;
        if (v91)
        {
LABEL_191:
          unint64_t v3 = *(unsigned char *)(v3 + *v19) == 0;
          if (v16) {
            goto LABEL_192;
          }
          return v3;
        }
        unint64_t v3 = 0;
        if ((v16 & 1) == 0) {
          return v3;
        }
LABEL_192:
        __int16 v94 = *(void **)(a1 + 8);
        *(void *)(a1 + 8) = 0;

        return v3;
      case 5:
        if ((v8 & 1) == 0) {
          goto LABEL_132;
        }
        char v42 = 0;
        unsigned int v43 = 0;
        uint64_t v44 = 0;
        *(_WORD *)(a1 + 136) |= 4u;
        while (2)
        {
          uint64_t v45 = *v18;
          uint64_t v46 = *(void *)(v3 + v45);
          unint64_t v47 = v46 + 1;
          if (v46 == -1 || v47 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v19) = 1;
          }
          else
          {
            char v48 = *(unsigned char *)(*(void *)(v3 + *v20) + v46);
            *(void *)(v3 + v45) = v47;
            v44 |= (unint64_t)(v48 & 0x7F) << v42;
            if (v48 < 0)
            {
              v42 += 7;
              BOOL v28 = v43++ >= 9;
              if (v28)
              {
                uint64_t v44 = 0;
                goto LABEL_137;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v19)) {
          uint64_t v44 = 0;
        }
LABEL_137:
        BOOL v81 = v44 != 0;
        uint64_t v82 = 133;
        goto LABEL_150;
      case 6:
        if ((v8 & 1) == 0) {
          goto LABEL_132;
        }
        char v49 = 0;
        unsigned int v50 = 0;
        uint64_t v51 = 0;
        *(_WORD *)(a1 + 136) |= 2u;
        while (2)
        {
          uint64_t v52 = *v18;
          uint64_t v53 = *(void *)(v3 + v52);
          unint64_t v54 = v53 + 1;
          if (v53 == -1 || v54 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v19) = 1;
          }
          else
          {
            char v55 = *(unsigned char *)(*(void *)(v3 + *v20) + v53);
            *(void *)(v3 + v52) = v54;
            v51 |= (unint64_t)(v55 & 0x7F) << v49;
            if (v55 < 0)
            {
              v49 += 7;
              BOOL v28 = v50++ >= 9;
              if (v28)
              {
                uint64_t v51 = 0;
                goto LABEL_141;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v19)) {
          uint64_t v51 = 0;
        }
LABEL_141:
        BOOL v81 = v51 != 0;
        uint64_t v82 = 132;
        goto LABEL_150;
      case 7:
        if ((v8 & 1) == 0) {
          goto LABEL_132;
        }
        char v56 = 0;
        unsigned int v57 = 0;
        uint64_t v58 = 0;
        *(_WORD *)(a1 + 136) |= 1u;
        while (2)
        {
          uint64_t v59 = *v18;
          uint64_t v60 = *(void *)(v3 + v59);
          unint64_t v61 = v60 + 1;
          if (v60 == -1 || v61 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v19) = 1;
          }
          else
          {
            char v62 = *(unsigned char *)(*(void *)(v3 + *v20) + v60);
            *(void *)(v3 + v59) = v61;
            v58 |= (unint64_t)(v62 & 0x7F) << v56;
            if (v62 < 0)
            {
              v56 += 7;
              BOOL v28 = v57++ >= 9;
              if (v28)
              {
                uint64_t v58 = 0;
                goto LABEL_145;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v19)) {
          uint64_t v58 = 0;
        }
LABEL_145:
        *(void *)(a1 + 40) = v58;
        goto LABEL_161;
      case 8:
        if ((v8 & 1) == 0) {
          goto LABEL_132;
        }
        char v63 = 0;
        unsigned int v64 = 0;
        uint64_t v65 = 0;
        *(_WORD *)(a1 + 136) |= 8u;
        while (2)
        {
          uint64_t v66 = *v18;
          uint64_t v67 = *(void *)(v3 + v66);
          unint64_t v68 = v67 + 1;
          if (v67 == -1 || v68 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v19) = 1;
          }
          else
          {
            char v69 = *(unsigned char *)(*(void *)(v3 + *v20) + v67);
            *(void *)(v3 + v66) = v68;
            v65 |= (unint64_t)(v69 & 0x7F) << v63;
            if (v69 < 0)
            {
              v63 += 7;
              BOOL v28 = v64++ >= 9;
              if (v28)
              {
                uint64_t v65 = 0;
                goto LABEL_149;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v19)) {
          uint64_t v65 = 0;
        }
LABEL_149:
        BOOL v81 = v65 != 0;
        uint64_t v82 = 134;
LABEL_150:
        *(unsigned char *)(a1 + v82) = v81;
        goto LABEL_161;
      case 9:
        if (!v33 || (*(_WORD *)(a1 + 136) & 0x40) != 0) {
          goto LABEL_130;
        }
        PBReaderReadString();
        char v70 = (GEOPDSearchTokenSet *)objc_claimAutoreleasedReturnValue();
        if (!v70) {
          goto LABEL_126;
        }
        v96 = v70;
        -[GEOPDSearchChainIntent _addNoFlagsCategoryId:](a1, v70);
        goto LABEL_125;
      case 10:
        if (!v33 || (*(_WORD *)(a1 + 136) & 0x100) != 0) {
          goto LABEL_130;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_196;
        }
        v96 = objc_alloc_init(GEOPDSearchKeyValueDoublePair);
        if (!GEOPDSearchKeyValueDoublePairReadAllFrom((uint64_t)v96, (void *)v3)) {
          goto LABEL_195;
        }
        PBReaderRecallMark();
        -[GEOPDSearchChainIntent _addNoFlagsFeatureMap:](a1, v96);
        goto LABEL_125;
      case 11:
        if (!v33 || (*(_WORD *)(a1 + 136) & 0x10) != 0)
        {
LABEL_132:
          char v80 = PBReaderSkipValueWithTag();
          uint64_t v19 = (int *)MEMORY[0x1E4F940C8];
          char v16 = v97;
          if ((v80 & 1) == 0)
          {
LABEL_194:
            char v91 = 0;
            goto LABEL_176;
          }
        }
        else
        {
          if (v30 != 2)
          {
            char v84 = 0;
            unsigned int v85 = 0;
            uint64_t v86 = 0;
            while (1)
            {
              uint64_t v87 = *v18;
              uint64_t v88 = *(void *)(v3 + v87);
              unint64_t v89 = v88 + 1;
              if (v88 == -1 || v89 > *(void *)(v3 + *v6)) {
                break;
              }
              char v90 = *(unsigned char *)(*(void *)(v3 + *v20) + v88);
              *(void *)(v3 + v87) = v89;
              v86 |= (unint64_t)(v90 & 0x7F) << v84;
              if (v90 < 0)
              {
                v84 += 7;
                BOOL v28 = v85++ >= 9;
                if (!v28) {
                  continue;
                }
              }
              goto LABEL_173;
            }
            *(unsigned char *)(v3 + *v19) = 1;
LABEL_173:
            PBRepeatedUInt64Add();
            goto LABEL_160;
          }
          if (!PBReaderPlaceMark()) {
            goto LABEL_196;
          }
          while (1)
          {
            unsigned int v71 = (int *)MEMORY[0x1E4F940C8];
            if (*(void *)(v3 + *v18) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + (int)*MEMORY[0x1E4F940C8])) {
              break;
            }
            char v72 = 0;
            unsigned int v73 = 0;
            uint64_t v74 = 0;
            while (1)
            {
              uint64_t v75 = *v18;
              uint64_t v76 = *(void *)(v3 + v75);
              unint64_t v77 = v76 + 1;
              if (v76 == -1 || v77 > *(void *)(v3 + *v6)) {
                break;
              }
              char v78 = *(unsigned char *)(*(void *)(v3 + *v20) + v76);
              *(void *)(v3 + v75) = v77;
              v74 |= (unint64_t)(v78 & 0x7F) << v72;
              if (v78 < 0)
              {
                v72 += 7;
                BOOL v28 = v73++ >= 9;
                if (!v28) {
                  continue;
                }
              }
              goto LABEL_110;
            }
            *(unsigned char *)(v3 + *v71) = 1;
LABEL_110:
            PBRepeatedUInt64Add();
          }
          PBReaderRecallMark();
          uint64_t v19 = (int *)MEMORY[0x1E4F940C8];
          char v16 = v97;
        }
        goto LABEL_161;
      case 12:
        if (!v33 || (*(_WORD *)(a1 + 136) & 0x800) != 0) {
          goto LABEL_130;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_196;
        }
        v96 = objc_alloc_init(GEOPDSearchBrandRelationship);
        if (!GEOPDSearchBrandRelationshipReadAllFrom((uint64_t)v96, (void *)v3)) {
          goto LABEL_195;
        }
        PBReaderRecallMark();
        -[GEOPDSearchChainIntent _addNoFlagsRelatedBrand:](a1, v96);
        goto LABEL_125;
      case 13:
        if (!v33 || (*(_WORD *)(a1 + 136) & 0x20) != 0) {
          goto LABEL_130;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_196;
        }
        v96 = objc_alloc_init(GEOPDSearchChainInfo);
        if (!GEOPDSearchChainInfoReadAllFrom((uint64_t)v96, (void *)v3, v9 & 1)) {
          goto LABEL_195;
        }
        PBReaderRecallMark();
        -[GEOPDSearchChainIntent _addNoFlagsBrandRelationshipInfo:](a1, v96);
        goto LABEL_125;
      case 14:
        if (v33 && (*(_WORD *)(a1 + 136) & 0x400) == 0)
        {
          PBReaderReadString();
          char v70 = (GEOPDSearchTokenSet *)objc_claimAutoreleasedReturnValue();
          if (v70)
          {
            v96 = v70;
            -[GEOPDSearchChainIntent _addNoFlagsPrefCategoryId:](a1, v70);
LABEL_125:
            char v70 = v96;
          }
LABEL_126:

          goto LABEL_160;
        }
LABEL_130:
        char v79 = PBReaderSkipValueWithTag();
        char v16 = v97;
        uint64_t v19 = (int *)MEMORY[0x1E4F940C8];
        if ((v79 & 1) == 0) {
          goto LABEL_194;
        }
        goto LABEL_161;
      default:
        int v40 = PBReaderSkipValueWithTag();
        uint64_t v19 = (int *)MEMORY[0x1E4F940C8];
        char v16 = v97;
        if (!v40) {
          goto LABEL_194;
        }
        goto LABEL_161;
    }
  }
}

void sub_1899716DC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1899718F8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189971A88(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189971C18(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189971D58(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1899727F0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1899728EC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDSearchChainIntentCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v30 = *MEMORY[0x1E4F143B8];
  -[GEOPDSearchTokenSet readAll:](*(void *)(a1 + 104), 1);
  long long v25 = 0u;
  long long v26 = 0u;
  long long v23 = 0u;
  long long v24 = 0u;
  id v2 = *(id *)(a1 + 72);
  uint64_t v3 = [v2 countByEnumeratingWithState:&v23 objects:v29 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v24;
    while (1)
    {
      if (*(void *)v24 != v5) {
        objc_enumerationMutation(v2);
      }
      if (!--v4)
      {
        uint64_t v4 = [v2 countByEnumeratingWithState:&v23 objects:v29 count:16];
        if (!v4) {
          break;
        }
      }
    }
  }

  long long v21 = 0u;
  long long v22 = 0u;
  long long v19 = 0u;
  long long v20 = 0u;
  id v6 = *(id *)(a1 + 96);
  uint64_t v7 = [v6 countByEnumeratingWithState:&v19 objects:v28 count:16];
  if (v7)
  {
    uint64_t v8 = v7;
    uint64_t v9 = *(void *)v20;
    while (1)
    {
      if (*(void *)v20 != v9) {
        objc_enumerationMutation(v6);
      }
      if (!--v8)
      {
        uint64_t v8 = [v6 countByEnumeratingWithState:&v19 objects:v28 count:16];
        if (!v8) {
          break;
        }
      }
    }
  }

  long long v17 = 0u;
  long long v18 = 0u;
  long long v15 = 0u;
  long long v16 = 0u;
  id v10 = *(id *)(a1 + 48);
  uint64_t v11 = [v10 countByEnumeratingWithState:&v15 objects:v27 count:16];
  if (v11)
  {
    uint64_t v12 = v11;
    uint64_t v13 = *(void *)v16;
    do
    {
      uint64_t v14 = 0;
      do
      {
        if (*(void *)v16 != v13) {
          objc_enumerationMutation(v10);
        }
        -[GEOPDSearchChainInfo readAll:](*(void *)(*((void *)&v15 + 1) + 8 * v14++), 1);
      }
      while (v12 != v14);
      uint64_t v12 = [v10 countByEnumeratingWithState:&v15 objects:v27 count:16];
    }
    while (v12);
  }
}

unint64_t GEOPDSearchChainIntentReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 124))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDSearchChainIntentReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)id v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 128));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 120) = [v8 position];
  *(_DWORD *)(a1 + 124) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOPDSearchChainIntentReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOPDSearchChainIntentReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDSearchChainIntentReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOPDSearchChainIntentCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 128));
  return Specified;
}

void sub_189972C98(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18997324C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDSearchChainIntentIsDirty(uint64_t a1)
{
  uint64_t v15 = *MEMORY[0x1E4F143B8];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 128));
  __int16 v2 = *(_WORD *)(a1 + 136);
  if ((v2 & 0x6280) != 0) {
    return 1;
  }
  if ((*(_WORD *)(a1 + 136) & 0x1000) != 0)
  {
    if (GEOPDSearchTokenSetIsDirty(*(void *)(a1 + 104))) {
      return 1;
    }
    __int16 v2 = *(_WORD *)(a1 + 136);
  }
  if ((v2 & 0xD70) != 0) {
    return 1;
  }
  if ((v2 & 0x20) == 0) {
    return 0;
  }
  long long v12 = 0u;
  long long v13 = 0u;
  long long v10 = 0u;
  long long v11 = 0u;
  id v5 = *(id *)(a1 + 48);
  uint64_t v3 = [v5 countByEnumeratingWithState:&v10 objects:v14 count:16];
  if (v3)
  {
    uint64_t v6 = *(void *)v11;
    while (2)
    {
      for (uint64_t i = 0; i != v3; ++i)
      {
        if (*(void *)v11 != v6) {
          objc_enumerationMutation(v5);
        }
        uint64_t v8 = *(void *)(*((void *)&v10 + 1) + 8 * i);
        if (v8)
        {
          os_unfair_lock_lock_with_options();
          os_unfair_lock_assert_owner((const os_unfair_lock *)(v8 + 72));
          int v9 = *(unsigned char *)(v8 + 76) & 0xF;
          os_unfair_lock_unlock((os_unfair_lock_t)(v8 + 72));
          if (v9)
          {
            uint64_t v3 = 1;
            goto LABEL_21;
          }
        }
      }
      uint64_t v3 = [v5 countByEnumeratingWithState:&v10 objects:v14 count:16];
      if (v3) {
        continue;
      }
      break;
    }
  }
LABEL_21:

  return v3;
}

void sub_189973A04(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSearchClientResolvedIntentReadAllFrom(uint64_t a1, void *a2)
{
  uint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    id v5 = (int *)MEMORY[0x1E4F940E0];
    uint64_t v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 2)
        {
          char v20 = 0;
          unsigned int v21 = 0;
          uint64_t v22 = 0;
          *(unsigned char *)(a1 + 20) |= 1u;
          while (1)
          {
            uint64_t v23 = *v4;
            uint64_t v24 = *(void *)&v3[v23];
            unint64_t v25 = v24 + 1;
            if (v24 == -1 || v25 > *(void *)&v3[*v5]) {
              break;
            }
            char v26 = *(unsigned char *)(*(void *)&v3[*v7] + v24);
            *(void *)&v3[v23] = v25;
            v22 |= (unint64_t)(v26 & 0x7F) << v20;
            if ((v26 & 0x80) == 0) {
              goto LABEL_32;
            }
            v20 += 7;
            BOOL v15 = v21++ >= 9;
            if (v15)
            {
              LODWORD(v22) = 0;
              goto LABEL_34;
            }
          }
          v3[*v6] = 1;
LABEL_32:
          if (v3[*v6]) {
            LODWORD(v22) = 0;
          }
LABEL_34:
          *(_DWORD *)(a1 + 16) = v22;
        }
        else if ((v10 >> 3) == 1)
        {
          uint64_t v18 = PBReaderReadString();
          long long v19 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = v18;
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_37;
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v27 = v3[*v6] == 0;
  }
  else
  {
LABEL_37:
    BOOL v27 = 0;
  }
  objc_sync_exit(v3);

  return v27;
}

void sub_189974300(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSearchDirectionIntentReadAllFrom(uint64_t a1, void *a2, int a3)
{
  id v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    uint64_t v6 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v7 = (int *)MEMORY[0x1E4F940E0];
    char v8 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v5[*MEMORY[0x1E4F940E8]] < *(void *)&v5[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v9 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v5[*v8]) {
          break;
        }
        char v10 = 0;
        unsigned int v11 = 0;
        unint64_t v12 = 0;
        while (1)
        {
          uint64_t v13 = *v6;
          uint64_t v14 = *(void *)&v5[v13];
          unint64_t v15 = v14 + 1;
          if (v14 == -1 || v15 > *(void *)&v5[*v7]) {
            break;
          }
          char v16 = *(unsigned char *)(*(void *)&v5[*v9] + v14);
          *(void *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0) {
            goto LABEL_13;
          }
          v10 += 7;
          if (v11++ >= 9)
          {
            unint64_t v12 = 0;
            int v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        int v18 = v5[*v8];
        if (v5[*v8]) {
          unint64_t v12 = 0;
        }
LABEL_15:
        if (v18 || (v12 & 7) == 4) {
          break;
        }
        if ((v12 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_27;
          }
          char v20 = objc_alloc_init(GEOPDDirectionIntent);
          if (!GEOPDDirectionIntentReadAllFrom((uint64_t)v20, v5, a3))
          {

            goto LABEL_27;
          }
          PBReaderRecallMark();
          unsigned int v21 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = v20;
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_27;
        }
      }
      while (*(void *)&v5[*v6] < *(void *)&v5[*v7]);
    }
    BOOL v22 = v5[*v8] == 0;
  }
  else
  {
LABEL_27:
    BOOL v22 = 0;
  }
  objc_sync_exit(v5);

  return v22;
}

void sub_1899748D8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSearchEntryReadAllFrom(uint64_t a1, void *a2)
{
  uint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    id v5 = (int *)MEMORY[0x1E4F940E0];
    uint64_t v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        unint64_t v18 = v10 >> 3;
        if ((v10 >> 3) == 3)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_52;
          }
          char v26 = objc_alloc_init(GEOLatLng);
          if (!GEOLatLngReadAllFrom((uint64_t)v26, v3))
          {

            goto LABEL_52;
          }
          PBReaderRecallMark();
          BOOL v27 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = v26;
        }
        else if (v18 == 2)
        {
          char v28 = 0;
          unsigned int v29 = 0;
          uint64_t v30 = 0;
          *(unsigned char *)(a1 + 28) |= 2u;
          while (1)
          {
            uint64_t v31 = *v4;
            uint64_t v32 = *(void *)&v3[v31];
            unint64_t v33 = v32 + 1;
            if (v32 == -1 || v33 > *(void *)&v3[*v5]) {
              break;
            }
            char v34 = *(unsigned char *)(*(void *)&v3[*v7] + v32);
            *(void *)&v3[v31] = v33;
            v30 |= (unint64_t)(v34 & 0x7F) << v28;
            if ((v34 & 0x80) == 0) {
              goto LABEL_46;
            }
            v28 += 7;
            BOOL v15 = v29++ >= 9;
            if (v15)
            {
              LODWORD(v30) = 0;
              goto LABEL_48;
            }
          }
          v3[*v6] = 1;
LABEL_46:
          if (v3[*v6]) {
            LODWORD(v30) = 0;
          }
LABEL_48:
          *(_DWORD *)(a1 + 24) = v30;
        }
        else if (v18 == 1)
        {
          char v19 = 0;
          unsigned int v20 = 0;
          uint64_t v21 = 0;
          *(unsigned char *)(a1 + 28) |= 1u;
          while (1)
          {
            uint64_t v22 = *v4;
            uint64_t v23 = *(void *)&v3[v22];
            unint64_t v24 = v23 + 1;
            if (v23 == -1 || v24 > *(void *)&v3[*v5]) {
              break;
            }
            char v25 = *(unsigned char *)(*(void *)&v3[*v7] + v23);
            *(void *)&v3[v22] = v24;
            v21 |= (unint64_t)(v25 & 0x7F) << v19;
            if ((v25 & 0x80) == 0) {
              goto LABEL_42;
            }
            v19 += 7;
            BOOL v15 = v20++ >= 9;
            if (v15)
            {
              uint64_t v21 = 0;
              goto LABEL_44;
            }
          }
          v3[*v6] = 1;
LABEL_42:
          if (v3[*v6]) {
            uint64_t v21 = 0;
          }
LABEL_44:
          *(void *)(a1 + 16) = v21;
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_52;
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v35 = v3[*v6] == 0;
  }
  else
  {
LABEL_52:
    BOOL v35 = 0;
  }
  objc_sync_exit(v3);

  return v35;
}

void sub_189975134(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchGeoDecorationReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 52);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 48)];
  char v7 = 0;
  uint64_t v8 = 0;
  char v9 = 0;
  unint64_t v10 = (const float *)(a1 + 72);
  uint32x4_t v11 = (uint32x4_t)vld1q_dup_f32(v10);
  v12.i64[0] = 0x100000001;
  v12.i64[1] = 0x100000001;
  unsigned int v13 = vaddvq_s32((int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v11, (uint32x4_t)xmmword_18A636450), v12));
  while (1)
  {
    unsigned int v14 = a3[v8];
    if (v14 >= 0xFFFFFFFE)
    {
      char v9 = 1;
      goto LABEL_9;
    }
    if (v14 != -3) {
      break;
    }
    char v7 = 1;
LABEL_9:
    ++v8;
  }
  if (v14)
  {
    ++v13;
    goto LABEL_9;
  }
  char v15 = v9 | (v13 > 2);
  if (v9 & 1 | (v13 > 2) | v7 & 1) {
    int v16 = 0;
  }
  else {
    int v16 = a3;
  }
  long long v17 = (int *)MEMORY[0x1E4F940E8];
  unint64_t v18 = (int *)MEMORY[0x1E4F940C8];
  char v19 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(void *)(v3 + *v17) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v18)) {
      goto LABEL_211;
    }
    char v20 = 0;
    unsigned int v21 = 0;
    unint64_t v22 = 0;
    while (1)
    {
      uint64_t v23 = *v17;
      uint64_t v24 = *(void *)(v3 + v23);
      unint64_t v25 = v24 + 1;
      if (v24 == -1 || v25 > *(void *)(v3 + *v6)) {
        break;
      }
      char v26 = *(unsigned char *)(*(void *)(v3 + *v19) + v24);
      *(void *)(v3 + v23) = v25;
      v22 |= (unint64_t)(v26 & 0x7F) << v20;
      if ((v26 & 0x80) == 0) {
        goto LABEL_24;
      }
      v20 += 7;
      BOOL v27 = v21++ >= 9;
      if (v27)
      {
        unint64_t v22 = 0;
        int v28 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_26;
      }
    }
    *(unsigned char *)(v3 + *v18) = 1;
LABEL_24:
    int v28 = *(unsigned __int8 *)(v3 + *v18);
    if (*(unsigned char *)(v3 + *v18)) {
      unint64_t v22 = 0;
    }
LABEL_26:
    if (v28 || (v22 & 7) == 4)
    {
LABEL_211:
      if (v15)
      {
        char v129 = 1;
        goto LABEL_227;
      }
      if (!v16) {
        goto LABEL_228;
      }
      while (1)
      {
        while (1)
        {
          int v131 = *v16++;
          int v130 = v131;
          if (v131 <= 10) {
            break;
          }
          if (v130 == 11)
          {
            int v132 = 0x8000;
LABEL_223:
            *(_DWORD *)(a1 + 72) |= v132;
          }
          else if (v130 == 16)
          {
            int v132 = 4096;
            goto LABEL_223;
          }
        }
        switch(v130)
        {
          case 1:
            int v132 = 0x2000;
            goto LABEL_223;
          case 9:
            int v132 = 0x4000;
            goto LABEL_223;
          case 0:
            goto LABEL_228;
        }
      }
    }
    unint64_t v30 = v22 >> 3;
    BOOL v31 = v15;
    if (!((v16 == 0) | v15 & 1))
    {
      uint64_t v32 = v16;
      do
      {
        int v34 = *v32++;
        int v33 = v34;
        BOOL v31 = v34 != 0;
        if (v34) {
          BOOL v35 = v33 == v30;
        }
        else {
          BOOL v35 = 1;
        }
      }
      while (!v35);
    }
    switch((int)v30)
    {
      case 1:
        if (!v31) {
          goto LABEL_151;
        }
        if ((*(unsigned char *)(a1 + 73) & 0x20) == 0)
        {
          uint64_t v36 = PBReaderReadString();
          uint64_t v37 = 24;
          goto LABEL_113;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_233;
        }
        int v128 = (int)(*(_DWORD *)(a1 + 72) << 18) >> 31;
        goto LABEL_208;
      case 2:
        if ((v7 & 1) == 0) {
          goto LABEL_151;
        }
        char v39 = 0;
        unsigned int v40 = 0;
        uint64_t v41 = 0;
        *(_DWORD *)(a1 + 72) |= 0x200u;
        while (2)
        {
          uint64_t v42 = *v17;
          uint64_t v43 = *(void *)(v3 + v42);
          unint64_t v44 = v43 + 1;
          if (v43 == -1 || v44 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v45 = *(unsigned char *)(*(void *)(v3 + *v19) + v43);
            *(void *)(v3 + v42) = v44;
            v41 |= (unint64_t)(v45 & 0x7F) << v39;
            if (v45 < 0)
            {
              v39 += 7;
              BOOL v27 = v40++ >= 9;
              if (v27)
              {
                uint64_t v41 = 0;
                goto LABEL_156;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          uint64_t v41 = 0;
        }
LABEL_156:
        BOOL v126 = v41 != 0;
        uint64_t v127 = 69;
        goto LABEL_201;
      case 3:
        if ((v7 & 1) == 0) {
          goto LABEL_151;
        }
        char v46 = 0;
        unsigned int v47 = 0;
        uint64_t v48 = 0;
        *(_DWORD *)(a1 + 72) |= 1u;
        while (2)
        {
          uint64_t v49 = *v17;
          uint64_t v50 = *(void *)(v3 + v49);
          unint64_t v51 = v50 + 1;
          if (v50 == -1 || v51 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v52 = *(unsigned char *)(*(void *)(v3 + *v19) + v50);
            *(void *)(v3 + v49) = v51;
            v48 |= (unint64_t)(v52 & 0x7F) << v46;
            if (v52 < 0)
            {
              v46 += 7;
              BOOL v27 = v47++ >= 9;
              if (v27)
              {
                uint64_t v48 = 0;
                goto LABEL_160;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          uint64_t v48 = 0;
        }
LABEL_160:
        BOOL v126 = v48 != 0;
        uint64_t v127 = 60;
        goto LABEL_201;
      case 4:
        if ((v7 & 1) == 0) {
          goto LABEL_151;
        }
        char v53 = 0;
        unsigned int v54 = 0;
        uint64_t v55 = 0;
        *(_DWORD *)(a1 + 72) |= 4u;
        while (2)
        {
          uint64_t v56 = *v17;
          uint64_t v57 = *(void *)(v3 + v56);
          unint64_t v58 = v57 + 1;
          if (v57 == -1 || v58 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v59 = *(unsigned char *)(*(void *)(v3 + *v19) + v57);
            *(void *)(v3 + v56) = v58;
            v55 |= (unint64_t)(v59 & 0x7F) << v53;
            if (v59 < 0)
            {
              v53 += 7;
              BOOL v27 = v54++ >= 9;
              if (v27)
              {
                uint64_t v55 = 0;
                goto LABEL_164;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          uint64_t v55 = 0;
        }
LABEL_164:
        BOOL v126 = v55 != 0;
        uint64_t v127 = 62;
        goto LABEL_201;
      case 5:
        if ((v7 & 1) == 0) {
          goto LABEL_151;
        }
        char v60 = 0;
        unsigned int v61 = 0;
        uint64_t v62 = 0;
        *(_DWORD *)(a1 + 72) |= 0x800u;
        while (2)
        {
          uint64_t v63 = *v17;
          uint64_t v64 = *(void *)(v3 + v63);
          unint64_t v65 = v64 + 1;
          if (v64 == -1 || v65 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v66 = *(unsigned char *)(*(void *)(v3 + *v19) + v64);
            *(void *)(v3 + v63) = v65;
            v62 |= (unint64_t)(v66 & 0x7F) << v60;
            if (v66 < 0)
            {
              v60 += 7;
              BOOL v27 = v61++ >= 9;
              if (v27)
              {
                uint64_t v62 = 0;
                goto LABEL_168;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          uint64_t v62 = 0;
        }
LABEL_168:
        BOOL v126 = v62 != 0;
        uint64_t v127 = 71;
        goto LABEL_201;
      case 6:
        if ((v7 & 1) == 0) {
          goto LABEL_151;
        }
        char v67 = 0;
        unsigned int v68 = 0;
        uint64_t v69 = 0;
        *(_DWORD *)(a1 + 72) |= 0x400u;
        while (2)
        {
          uint64_t v70 = *v17;
          uint64_t v71 = *(void *)(v3 + v70);
          unint64_t v72 = v71 + 1;
          if (v71 == -1 || v72 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v73 = *(unsigned char *)(*(void *)(v3 + *v19) + v71);
            *(void *)(v3 + v70) = v72;
            v69 |= (unint64_t)(v73 & 0x7F) << v67;
            if (v73 < 0)
            {
              v67 += 7;
              BOOL v27 = v68++ >= 9;
              if (v27)
              {
                uint64_t v69 = 0;
                goto LABEL_172;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          uint64_t v69 = 0;
        }
LABEL_172:
        BOOL v126 = v69 != 0;
        uint64_t v127 = 70;
        goto LABEL_201;
      case 7:
        if ((v7 & 1) == 0) {
          goto LABEL_151;
        }
        char v74 = 0;
        unsigned int v75 = 0;
        uint64_t v76 = 0;
        *(_DWORD *)(a1 + 72) |= 8u;
        while (2)
        {
          uint64_t v77 = *v17;
          uint64_t v78 = *(void *)(v3 + v77);
          unint64_t v79 = v78 + 1;
          if (v78 == -1 || v79 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v80 = *(unsigned char *)(*(void *)(v3 + *v19) + v78);
            *(void *)(v3 + v77) = v79;
            v76 |= (unint64_t)(v80 & 0x7F) << v74;
            if (v80 < 0)
            {
              v74 += 7;
              BOOL v27 = v75++ >= 9;
              if (v27)
              {
                uint64_t v76 = 0;
                goto LABEL_176;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          uint64_t v76 = 0;
        }
LABEL_176:
        BOOL v126 = v76 != 0;
        uint64_t v127 = 63;
        goto LABEL_201;
      case 8:
        if ((v7 & 1) == 0) {
          goto LABEL_151;
        }
        char v81 = 0;
        unsigned int v82 = 0;
        uint64_t v83 = 0;
        *(_DWORD *)(a1 + 72) |= 2u;
        while (2)
        {
          uint64_t v84 = *v17;
          uint64_t v85 = *(void *)(v3 + v84);
          unint64_t v86 = v85 + 1;
          if (v85 == -1 || v86 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v87 = *(unsigned char *)(*(void *)(v3 + *v19) + v85);
            *(void *)(v3 + v84) = v86;
            v83 |= (unint64_t)(v87 & 0x7F) << v81;
            if (v87 < 0)
            {
              v81 += 7;
              BOOL v27 = v82++ >= 9;
              if (v27)
              {
                uint64_t v83 = 0;
                goto LABEL_180;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          uint64_t v83 = 0;
        }
LABEL_180:
        BOOL v126 = v83 != 0;
        uint64_t v127 = 61;
        goto LABEL_201;
      case 9:
        if (!v31) {
          goto LABEL_151;
        }
        if ((*(unsigned char *)(a1 + 73) & 0x40) == 0)
        {
          uint64_t v36 = PBReaderReadString();
          uint64_t v37 = 32;
          goto LABEL_113;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_233;
        }
        int v128 = (int)(*(_DWORD *)(a1 + 72) << 17) >> 31;
        goto LABEL_208;
      case 10:
        if ((v7 & 1) == 0) {
          goto LABEL_151;
        }
        char v88 = 0;
        unsigned int v89 = 0;
        uint64_t v90 = 0;
        *(_DWORD *)(a1 + 72) |= 0x80u;
        while (2)
        {
          uint64_t v91 = *v17;
          uint64_t v92 = *(void *)(v3 + v91);
          unint64_t v93 = v92 + 1;
          if (v92 == -1 || v93 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v94 = *(unsigned char *)(*(void *)(v3 + *v19) + v92);
            *(void *)(v3 + v91) = v93;
            v90 |= (unint64_t)(v94 & 0x7F) << v88;
            if (v94 < 0)
            {
              v88 += 7;
              BOOL v27 = v89++ >= 9;
              if (v27)
              {
                uint64_t v90 = 0;
                goto LABEL_184;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          uint64_t v90 = 0;
        }
LABEL_184:
        BOOL v126 = v90 != 0;
        uint64_t v127 = 67;
        goto LABEL_201;
      case 11:
        if (!v31) {
          goto LABEL_151;
        }
        if ((*(unsigned char *)(a1 + 73) & 0x80) == 0)
        {
          uint64_t v36 = PBReaderReadString();
          uint64_t v37 = 40;
LABEL_113:
          v95 = *(void **)(a1 + v37);
          *(void *)(a1 + v37) = v36;

          --v8;
          goto LABEL_209;
        }
        if (PBReaderSkipValueWithTag())
        {
          int v128 = (int)(*(_DWORD *)(a1 + 72) << 16) >> 31;
LABEL_208:
          v8 += v128;
LABEL_209:
          unint64_t v18 = (int *)MEMORY[0x1E4F940C8];
LABEL_210:
          if (!(v15 & 1 | (v8 != 0))) {
            goto LABEL_211;
          }
          continue;
        }
LABEL_233:
        char v129 = 0;
        unint64_t v18 = (int *)MEMORY[0x1E4F940C8];
LABEL_227:
        *(_DWORD *)(a1 + 72) |= 0x2000u;
        *(_DWORD *)(a1 + 72) |= 0x4000u;
        *(_DWORD *)(a1 + 72) |= 0x8000u;
        *(_DWORD *)(a1 + 72) |= 0x1000u;
        if (v129)
        {
LABEL_228:
          unint64_t v3 = *(unsigned char *)(v3 + *v18) == 0;
          if (v15) {
            goto LABEL_229;
          }
        }
        else
        {
          unint64_t v3 = 0;
          if (v15)
          {
LABEL_229:
            v133 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = 0;
          }
        }
        return v3;
      case 12:
        if ((v7 & 1) == 0) {
          goto LABEL_151;
        }
        char v96 = 0;
        unsigned int v97 = 0;
        uint64_t v98 = 0;
        *(_DWORD *)(a1 + 72) |= 0x40u;
        while (2)
        {
          uint64_t v99 = *v17;
          uint64_t v100 = *(void *)(v3 + v99);
          unint64_t v101 = v100 + 1;
          if (v100 == -1 || v101 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v102 = *(unsigned char *)(*(void *)(v3 + *v19) + v100);
            *(void *)(v3 + v99) = v101;
            v98 |= (unint64_t)(v102 & 0x7F) << v96;
            if (v102 < 0)
            {
              v96 += 7;
              BOOL v27 = v97++ >= 9;
              if (v27)
              {
                uint64_t v98 = 0;
                goto LABEL_188;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          uint64_t v98 = 0;
        }
LABEL_188:
        BOOL v126 = v98 != 0;
        uint64_t v127 = 66;
        goto LABEL_201;
      case 13:
        if ((v7 & 1) == 0) {
          goto LABEL_151;
        }
        char v103 = 0;
        unsigned int v104 = 0;
        uint64_t v105 = 0;
        *(_DWORD *)(a1 + 72) |= 0x10u;
        while (2)
        {
          uint64_t v106 = *v17;
          uint64_t v107 = *(void *)(v3 + v106);
          unint64_t v108 = v107 + 1;
          if (v107 == -1 || v108 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v109 = *(unsigned char *)(*(void *)(v3 + *v19) + v107);
            *(void *)(v3 + v106) = v108;
            v105 |= (unint64_t)(v109 & 0x7F) << v103;
            if (v109 < 0)
            {
              v103 += 7;
              BOOL v27 = v104++ >= 9;
              if (v27)
              {
                uint64_t v105 = 0;
                goto LABEL_192;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          uint64_t v105 = 0;
        }
LABEL_192:
        BOOL v126 = v105 != 0;
        uint64_t v127 = 64;
        goto LABEL_201;
      case 14:
        if ((v7 & 1) == 0) {
          goto LABEL_151;
        }
        char v110 = 0;
        unsigned int v111 = 0;
        uint64_t v112 = 0;
        *(_DWORD *)(a1 + 72) |= 0x20u;
        while (2)
        {
          uint64_t v113 = *v17;
          uint64_t v114 = *(void *)(v3 + v113);
          unint64_t v115 = v114 + 1;
          if (v114 == -1 || v115 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v116 = *(unsigned char *)(*(void *)(v3 + *v19) + v114);
            *(void *)(v3 + v113) = v115;
            v112 |= (unint64_t)(v116 & 0x7F) << v110;
            if (v116 < 0)
            {
              v110 += 7;
              BOOL v27 = v111++ >= 9;
              if (v27)
              {
                uint64_t v112 = 0;
                goto LABEL_196;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          uint64_t v112 = 0;
        }
LABEL_196:
        BOOL v126 = v112 != 0;
        uint64_t v127 = 65;
        goto LABEL_201;
      case 15:
        if ((v7 & 1) == 0) {
          goto LABEL_151;
        }
        char v117 = 0;
        unsigned int v118 = 0;
        uint64_t v119 = 0;
        *(_DWORD *)(a1 + 72) |= 0x100u;
        while (2)
        {
          uint64_t v120 = *v17;
          uint64_t v121 = *(void *)(v3 + v120);
          unint64_t v122 = v121 + 1;
          if (v121 == -1 || v122 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v123 = *(unsigned char *)(*(void *)(v3 + *v19) + v121);
            *(void *)(v3 + v120) = v122;
            v119 |= (unint64_t)(v123 & 0x7F) << v117;
            if (v123 < 0)
            {
              v117 += 7;
              BOOL v27 = v118++ >= 9;
              if (v27)
              {
                uint64_t v119 = 0;
                goto LABEL_200;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          uint64_t v119 = 0;
        }
LABEL_200:
        BOOL v126 = v119 != 0;
        uint64_t v127 = 68;
LABEL_201:
        *(unsigned char *)(a1 + v127) = v126;
        goto LABEL_210;
      case 16:
        if (v31 && (*(unsigned char *)(a1 + 73) & 0x10) == 0)
        {
          v124 = PBReaderReadString();
          if (v124)
          {
            v135 = v124;
            -[GEOPDSearchGeoDecoration _addNoFlagsAlternative:](a1, v124);
            v124 = v135;
          }

          goto LABEL_209;
        }
LABEL_151:
        char v125 = PBReaderSkipValueWithTag();
        unint64_t v18 = (int *)MEMORY[0x1E4F940C8];
        if ((v125 & 1) == 0)
        {
LABEL_226:
          char v129 = 0;
          goto LABEL_227;
        }
        goto LABEL_210;
      default:
        int v38 = PBReaderSkipValueWithTag();
        unint64_t v18 = (int *)MEMORY[0x1E4F940C8];
        if (!v38) {
          goto LABEL_226;
        }
        goto LABEL_210;
    }
  }
}

void sub_189976378(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189976C3C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189976D20(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchGeoDecorationReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 52))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDSearchGeoDecorationReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)unint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = [v8 position];
  *(_DWORD *)(a1 + 52) = [v8 length];
  if (a3) {
    char v9 = (int *)&GEOPDSearchGeoDecorationReadAllFrom_recursiveTag;
  }
  else {
    char v9 = (int *)&GEOPDSearchGeoDecorationReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDSearchGeoDecorationReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_189977774(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189977B88(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSearchGeoDecorationIsDirty(os_unfair_lock_s *a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner(a1 + 14);
  BOOL v2 = (a1[18]._os_unfair_lock_opaque & 0x1F000) != 0;
  os_unfair_lock_unlock(a1 + 14);
  return v2;
}

void sub_189978054(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchGeoIntentReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 104));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 100);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 96)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  unsigned int v11 = *(unsigned __int16 *)(a1 + 112);
  unsigned int v12 = ((v11 >> 2) & 1)
      + ((v11 >> 5) & 1)
      + (unsigned __int16)(vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16((uint16x4_t)vdup_n_s16(v11), (uint16x4_t)0xFFFDFFFCFFF7FFF6), (int8x8_t)0x1000100010001))+ ((v11 >> 8) & 1)+ ((v11 >> 7) & 1)+ ((v11 >> 6) & 1));
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    switch(a3[v7])
    {
      case -3:
        char v8 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v13 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        BOOL v15 = v12 > 6;
        char v16 = v10 | v15;
        if (((v10 | v15) | v8)) {
          long long v17 = 0;
        }
        else {
          long long v17 = a3;
        }
        char v65 = (v17 == 0) | v16;
        unint64_t v18 = (int *)MEMORY[0x1E4F940E8];
        char v19 = (int *)MEMORY[0x1E4F940C8];
        char v20 = (int *)MEMORY[0x1E4F940B8];
        char v64 = v10 | v15;
        break;
      default:
        ++v12;
LABEL_6:
        uint64_t v13 = v9;
        uint64_t v14 = v10;
LABEL_8:
        ++v7;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v18) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v19)) {
      goto LABEL_126;
    }
    char v21 = 0;
    unsigned int v22 = 0;
    unint64_t v23 = 0;
    while (1)
    {
      uint64_t v24 = *v18;
      uint64_t v25 = *(void *)(v3 + v24);
      unint64_t v26 = v25 + 1;
      if (v25 == -1 || v26 > *(void *)(v3 + *v6)) {
        break;
      }
      char v27 = *(unsigned char *)(*(void *)(v3 + *v20) + v25);
      *(void *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0) {
        goto LABEL_23;
      }
      v21 += 7;
      BOOL v28 = v22++ >= 9;
      if (v28)
      {
        unint64_t v23 = 0;
        int v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_25;
      }
    }
    *(unsigned char *)(v3 + *v19) = 1;
LABEL_23:
    int v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(unsigned char *)(v3 + *v19)) {
      unint64_t v23 = 0;
    }
LABEL_25:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_126:
      if (v16)
      {
        char v58 = 1;
        goto LABEL_128;
      }
      if (v17)
      {
        while (1)
        {
          int v59 = *v17++;
          __int16 v60 = 512;
          switch(v59)
          {
            case 0:
              goto LABEL_142;
            case 1:
              goto LABEL_141;
            case 2:
              __int16 v60 = 1024;
              goto LABEL_141;
            case 5:
              __int16 v60 = 16;
              goto LABEL_141;
            case 6:
              __int16 v60 = 8;
              goto LABEL_141;
            case 7:
              __int16 v60 = 256;
              goto LABEL_141;
            case 8:
              __int16 v60 = 128;
              goto LABEL_141;
            case 9:
              __int16 v60 = 64;
              goto LABEL_141;
            case 10:
              __int16 v60 = 32;
              goto LABEL_141;
            case 11:
              __int16 v60 = 4;
LABEL_141:
              *(_WORD *)(a1 + 112) |= v60;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_142;
    }
    unint64_t v31 = v23 >> 3;
    BOOL v32 = v16;
    if ((v65 & 1) == 0)
    {
      int v33 = v17;
      do
      {
        int v35 = *v33++;
        int v34 = v35;
        BOOL v32 = v35 != 0;
        if (v35) {
          BOOL v36 = v34 == v31;
        }
        else {
          BOOL v36 = 1;
        }
      }
      while (!v36);
    }
    switch((int)v31)
    {
      case 1:
        if (!v32) {
          goto LABEL_95;
        }
        if ((*(_WORD *)(a1 + 112) & 0x200) == 0)
        {
          uint64_t v37 = PBReaderReadString();
          uint64_t v38 = 80;
          goto LABEL_82;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_147;
        }
        __int16 v57 = *(_WORD *)(a1 + 112) << 6;
        goto LABEL_123;
      case 2:
        if (!v32) {
          goto LABEL_95;
        }
        if ((*(_WORD *)(a1 + 112) & 0x400) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_147;
          }
          __int16 v57 = 32 * *(_WORD *)(a1 + 112);
          goto LABEL_123;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_147;
        }
        uint64_t v63 = objc_alloc_init(GEOPDSearchTokenSet);
        if (!GEOPDSearchTokenSetReadAllFrom((uint64_t)v63, (void *)v3, v9 & 1)) {
          goto LABEL_146;
        }
        PBReaderRecallMark();
        uint64_t v40 = 88;
        goto LABEL_93;
      case 3:
        if ((v8 & 1) == 0) {
          goto LABEL_95;
        }
        char v41 = 0;
        unsigned int v42 = 0;
        uint64_t v43 = 0;
        *(_WORD *)(a1 + 112) |= 1u;
        while (2)
        {
          uint64_t v44 = *v18;
          uint64_t v45 = *(void *)(v3 + v44);
          unint64_t v46 = v45 + 1;
          if (v45 == -1 || v46 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v19) = 1;
          }
          else
          {
            char v47 = *(unsigned char *)(*(void *)(v3 + *v20) + v45);
            *(void *)(v3 + v44) = v46;
            v43 |= (unint64_t)(v47 & 0x7F) << v41;
            if (v47 < 0)
            {
              v41 += 7;
              BOOL v28 = v42++ >= 9;
              if (v28)
              {
                uint64_t v43 = 0;
                goto LABEL_100;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v19)) {
          uint64_t v43 = 0;
        }
LABEL_100:
        *(void *)(a1 + 64) = v43;
        goto LABEL_125;
      case 4:
        if ((v8 & 1) == 0) {
          goto LABEL_95;
        }
        char v48 = 0;
        unsigned int v49 = 0;
        uint64_t v50 = 0;
        *(_WORD *)(a1 + 112) |= 2u;
        while (2)
        {
          uint64_t v51 = *v18;
          uint64_t v52 = *(void *)(v3 + v51);
          unint64_t v53 = v52 + 1;
          if (v52 == -1 || v53 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v19) = 1;
          }
          else
          {
            char v54 = *(unsigned char *)(*(void *)(v3 + *v20) + v52);
            *(void *)(v3 + v51) = v53;
            v50 |= (unint64_t)(v54 & 0x7F) << v48;
            if (v54 < 0)
            {
              v48 += 7;
              BOOL v28 = v49++ >= 9;
              if (v28)
              {
                LODWORD(v50) = 0;
                goto LABEL_104;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v19)) {
          LODWORD(v50) = 0;
        }
LABEL_104:
        *(_DWORD *)(a1 + 108) = v50;
        goto LABEL_125;
      case 5:
        if (!v32) {
          goto LABEL_95;
        }
        if ((*(_WORD *)(a1 + 112) & 0x10) == 0)
        {
          uint64_t v37 = PBReaderReadString();
          uint64_t v38 = 32;
          goto LABEL_82;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_147;
        }
        __int16 v57 = *(_WORD *)(a1 + 112) << 11;
        goto LABEL_123;
      case 6:
        if (!v32) {
          goto LABEL_95;
        }
        if ((*(_WORD *)(a1 + 112) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_147;
          }
          __int16 v57 = *(_WORD *)(a1 + 112) << 12;
          goto LABEL_123;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_147;
        }
        uint64_t v63 = objc_alloc_init(GEOLatLng);
        if (!GEOLatLngReadAllFrom((uint64_t)v63, (void *)v3)) {
          goto LABEL_146;
        }
        PBReaderRecallMark();
        uint64_t v40 = 24;
        goto LABEL_93;
      case 7:
        if (!v32) {
          goto LABEL_95;
        }
        if ((*(_WORD *)(a1 + 112) & 0x100) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_147;
          }
          __int16 v57 = *(_WORD *)(a1 + 112) << 7;
          goto LABEL_123;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_147;
        }
        uint64_t v63 = objc_alloc_init(GEOMapRegion);
        if (!GEOMapRegionReadAllFrom((uint64_t)v63, (void *)v3)) {
          goto LABEL_146;
        }
        PBReaderRecallMark();
        uint64_t v40 = 72;
        goto LABEL_93;
      case 8:
        if (!v32) {
          goto LABEL_95;
        }
        if ((*(_WORD *)(a1 + 112) & 0x80) == 0)
        {
          uint64_t v37 = PBReaderReadString();
          uint64_t v38 = 56;
          goto LABEL_82;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_147;
        }
        __int16 v57 = *(_WORD *)(a1 + 112) << 8;
        goto LABEL_123;
      case 9:
        if (!v32) {
          goto LABEL_95;
        }
        if ((*(_WORD *)(a1 + 112) & 0x40) == 0)
        {
          uint64_t v37 = PBReaderReadString();
          uint64_t v38 = 48;
LABEL_82:
          uint64_t v55 = *(void **)(a1 + v38);
          *(void *)(a1 + v38) = v37;
          goto LABEL_94;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_147;
        }
        __int16 v57 = *(_WORD *)(a1 + 112) << 9;
        goto LABEL_123;
      case 10:
        if (!v32) {
          goto LABEL_95;
        }
        if ((*(_WORD *)(a1 + 112) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_147;
          }
          __int16 v57 = *(_WORD *)(a1 + 112) << 10;
          goto LABEL_123;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_147;
        }
        uint64_t v63 = objc_alloc_init(GEOMapRegion);
        if (!GEOMapRegionReadAllFrom((uint64_t)v63, (void *)v3)) {
          goto LABEL_146;
        }
        PBReaderRecallMark();
        uint64_t v40 = 40;
        goto LABEL_93;
      case 11:
        if (!v32)
        {
LABEL_95:
          char v56 = PBReaderSkipValueWithTag();
          char v19 = (int *)MEMORY[0x1E4F940C8];
          char v16 = v64;
          if ((v56 & 1) == 0)
          {
LABEL_145:
            char v58 = 0;
            goto LABEL_128;
          }
LABEL_125:
          if (!(v16 & 1 | (v7 != 0))) {
            goto LABEL_126;
          }
          continue;
        }
        if ((*(_WORD *)(a1 + 112) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_147;
          }
          __int16 v57 = *(_WORD *)(a1 + 112) << 13;
LABEL_123:
          v7 += v57 >> 15;
LABEL_124:
          char v16 = v64;
          char v19 = (int *)MEMORY[0x1E4F940C8];
          goto LABEL_125;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_147;
        }
        uint64_t v63 = objc_alloc_init(GEOStructuredAddress);
        if (GEOStructuredAddressReadAllFrom(v63, (void *)v3))
        {
          PBReaderRecallMark();
          uint64_t v40 = 16;
LABEL_93:
          uint64_t v55 = *(void **)(a1 + v40);
          *(void *)(a1 + v40) = v63;
LABEL_94:

          --v7;
          goto LABEL_124;
        }
LABEL_146:

LABEL_147:
        char v58 = 0;
        char v16 = v64;
        char v19 = (int *)MEMORY[0x1E4F940C8];
LABEL_128:
        *(_WORD *)(a1 + 112) |= 0x200u;
        *(_WORD *)(a1 + 112) |= 0x400u;
        *(_WORD *)(a1 + 112) |= 0x10u;
        *(_WORD *)(a1 + 112) |= 8u;
        *(_WORD *)(a1 + 112) |= 0x100u;
        *(_WORD *)(a1 + 112) |= 0x80u;
        *(_WORD *)(a1 + 112) |= 0x40u;
        *(_WORD *)(a1 + 112) |= 0x20u;
        *(_WORD *)(a1 + 112) |= 4u;
        if (v58)
        {
LABEL_142:
          unint64_t v3 = *(unsigned char *)(v3 + *v19) == 0;
          if (v16) {
            goto LABEL_143;
          }
          return v3;
        }
        unint64_t v3 = 0;
        if ((v16 & 1) == 0) {
          return v3;
        }
LABEL_143:
        unsigned int v61 = *(void **)(a1 + 8);
        *(void *)(a1 + 8) = 0;

        return v3;
      default:
        int v39 = PBReaderSkipValueWithTag();
        char v19 = (int *)MEMORY[0x1E4F940C8];
        char v16 = v64;
        if (!v39) {
          goto LABEL_145;
        }
        goto LABEL_125;
    }
  }
}

void sub_189979280(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18997934C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189979418(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189979B10(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189979C0C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDSearchGeoIntentCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  -[GEOPDSearchTokenSet readAll:](*(void *)(a1 + 88), 1);
  [*(id *)(a1 + 24) readAll:1];
  [*(id *)(a1 + 72) readAll:1];
  BOOL v2 = *(void **)(a1 + 40);

  return [v2 readAll:1];
}

unint64_t GEOPDSearchGeoIntentReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 100))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDSearchGeoIntentReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 104));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 96) = [v8 position];
  *(_DWORD *)(a1 + 100) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOPDSearchGeoIntentReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOPDSearchGeoIntentReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDSearchGeoIntentReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOPDSearchGeoIntentCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 104));
  return Specified;
}

void sub_189979E24(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18997A0A8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDSearchGeoIntentIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 104));
  unsigned int v2 = *(unsigned __int16 *)(a1 + 112);
  if ((v2 & 0xA00) != 0) {
    return 1;
  }
  if ((v2 & 0x400) != 0)
  {
    if (GEOPDSearchTokenSetIsDirty(*(void *)(a1 + 88))) {
      return 1;
    }
    unsigned int v2 = *(unsigned __int16 *)(a1 + 112);
  }
  if ((v2 & 0x1F8) != 0) {
    return 1;
  }
  return (v2 >> 2) & 1;
}

void sub_18997A450(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchGeoParsingResultReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 52);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 48)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  unsigned int v11 = ((*(unsigned __int8 *)(a1 + 64) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 64) >> 2) & 1)
      + ((*(unsigned __int8 *)(a1 + 64) >> 4) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v7])
    {
      case -3:
        char v8 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        int v14 = v10 | (v11 > 1);
        if ((v14 | v8)) {
          BOOL v15 = 0;
        }
        else {
          BOOL v15 = a3;
        }
        LODWORD(v16) = v14;
        char v56 = (v15 == 0) | v14;
        long long v17 = (int *)MEMORY[0x1E4F940E8];
        unint64_t v18 = (int *)MEMORY[0x1E4F940C8];
        char v19 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v11;
LABEL_6:
        uint64_t v12 = v9;
        uint64_t v13 = v10;
LABEL_8:
        ++v7;
        uint64_t v9 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v17) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v18)) {
      goto LABEL_77;
    }
    char v20 = 0;
    unsigned int v21 = 0;
    unint64_t v22 = 0;
    while (1)
    {
      uint64_t v23 = *v17;
      uint64_t v24 = *(void *)(v3 + v23);
      unint64_t v25 = v24 + 1;
      if (v24 == -1 || v25 > *(void *)(v3 + *v6)) {
        break;
      }
      char v26 = *(unsigned char *)(*(void *)(v3 + *v19) + v24);
      *(void *)(v3 + v23) = v25;
      v22 |= (unint64_t)(v26 & 0x7F) << v20;
      if ((v26 & 0x80) == 0) {
        goto LABEL_23;
      }
      v20 += 7;
      BOOL v27 = v21++ >= 9;
      if (v27)
      {
        unint64_t v22 = 0;
        int v28 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_25;
      }
    }
    *(unsigned char *)(v3 + *v18) = 1;
LABEL_23:
    int v28 = *(unsigned __int8 *)(v3 + *v18);
    if (*(unsigned char *)(v3 + *v18)) {
      unint64_t v22 = 0;
    }
LABEL_25:
    if (v28 || (v22 & 7) == 4)
    {
LABEL_77:
      if (v16)
      {
        char v50 = 1;
        goto LABEL_89;
      }
      if (v15)
      {
        while (1)
        {
          int v52 = *v15++;
          char v51 = 8;
          switch(v52)
          {
            case 0:
              goto LABEL_90;
            case 1:
              goto LABEL_83;
            case 4:
              char v51 = 4;
              goto LABEL_83;
            case 5:
              char v51 = 16;
LABEL_83:
              *(unsigned char *)(a1 + 64) |= v51;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_90;
    }
    unint64_t v30 = v22 >> 3;
    BOOL v31 = (char)v16;
    if ((v56 & 1) == 0)
    {
      BOOL v32 = v15;
      do
      {
        int v34 = *v32++;
        int v33 = v34;
        BOOL v31 = v34 != 0;
        if (v34) {
          BOOL v35 = v33 == v30;
        }
        else {
          BOOL v35 = 1;
        }
      }
      while (!v35);
    }
    switch((int)v30)
    {
      case 1:
        if (!v31 || (*(unsigned char *)(a1 + 64) & 8) != 0) {
          goto LABEL_65;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_86;
        }
        int v55 = (int)v16;
        char v16 = objc_alloc_init(GEOPDSearchAddressLabeledToken);
        if (!GEOPDSearchAddressLabeledTokenReadAllFrom((uint64_t)v16, (void *)v3, v9 & 1)) {
          goto LABEL_87;
        }
        PBReaderRecallMark();
        -[GEOPDSearchGeoParsingResult _addNoFlagsLabeling:](a1, v16);
        goto LABEL_61;
      case 2:
        if ((v8 & 1) == 0) {
          goto LABEL_65;
        }
        *(unsigned char *)(a1 + 64) |= 1u;
        uint64_t v37 = *v17;
        unint64_t v38 = *(void *)(v3 + v37);
        if (v38 <= 0xFFFFFFFFFFFFFFF7 && v38 + 8 <= *(void *)(v3 + *v6))
        {
          uint64_t v39 = *(void *)(*(void *)(v3 + *v19) + v38);
          *(void *)(v3 + v37) = v38 + 8;
        }
        else
        {
          *(unsigned char *)(v3 + *v18) = 1;
          uint64_t v39 = 0;
        }
        *(void *)(a1 + 24) = v39;
        goto LABEL_76;
      case 3:
        if ((v8 & 1) == 0) {
          goto LABEL_65;
        }
        char v40 = 0;
        unsigned int v41 = 0;
        uint64_t v42 = 0;
        *(unsigned char *)(a1 + 64) |= 2u;
        while (2)
        {
          uint64_t v43 = *v17;
          uint64_t v44 = *(void *)(v3 + v43);
          unint64_t v45 = v44 + 1;
          if (v44 == -1 || v45 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v46 = *(unsigned char *)(*(void *)(v3 + *v19) + v44);
            *(void *)(v3 + v43) = v45;
            v42 |= (unint64_t)(v46 & 0x7F) << v40;
            if (v46 < 0)
            {
              v40 += 7;
              BOOL v27 = v41++ >= 9;
              if (v27)
              {
                LODWORD(v42) = 0;
                goto LABEL_70;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          LODWORD(v42) = 0;
        }
LABEL_70:
        *(_DWORD *)(a1 + 60) = v42;
        goto LABEL_76;
      case 4:
        if (!v31 || (*(unsigned char *)(a1 + 64) & 4) != 0) {
          goto LABEL_65;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_86;
        }
        int v55 = (int)v16;
        char v16 = objc_alloc_init(GEOPDSearchAddressLabeledToken);
        if (GEOPDSearchAddressLabeledTokenReadAllFrom((uint64_t)v16, (void *)v3, v9 & 1))
        {
          PBReaderRecallMark();
          -[GEOPDSearchGeoParsingResult _addNoFlagsDroppedTokens:](a1, v16);
LABEL_61:

          LODWORD(v16) = v55;
LABEL_73:
          unint64_t v18 = (int *)MEMORY[0x1E4F940C8];
LABEL_76:
          if (!(v16 & 1 | (v7 != 0))) {
            goto LABEL_77;
          }
          continue;
        }
LABEL_87:

        char v50 = 0;
        LOBYTE(v16) = v55;
LABEL_88:
        unint64_t v18 = (int *)MEMORY[0x1E4F940C8];
LABEL_89:
        *(unsigned char *)(a1 + 64) |= 8u;
        *(unsigned char *)(a1 + 64) |= 4u;
        *(unsigned char *)(a1 + 64) |= 0x10u;
        if (v50)
        {
LABEL_90:
          unint64_t v3 = *(unsigned char *)(v3 + *v18) == 0;
          if (v16) {
            goto LABEL_91;
          }
        }
        else
        {
          unint64_t v3 = 0;
          if (v16)
          {
LABEL_91:
            unint64_t v53 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = 0;
          }
        }
        return v3;
      case 5:
        if (v31)
        {
          if ((*(unsigned char *)(a1 + 64) & 0x10) != 0)
          {
            if ((PBReaderSkipValueWithTag() & 1) == 0)
            {
LABEL_86:
              char v50 = 0;
              goto LABEL_88;
            }
            v7 += *(unsigned __int8 *)(a1 + 64) << 27 >> 31;
          }
          else
          {
            uint64_t v47 = PBReaderReadString();
            char v48 = *(void **)(a1 + 40);
            *(void *)(a1 + 40) = v47;

            --v7;
          }
          goto LABEL_73;
        }
LABEL_65:
        char v49 = PBReaderSkipValueWithTag();
        unint64_t v18 = (int *)MEMORY[0x1E4F940C8];
        if ((v49 & 1) == 0)
        {
LABEL_85:
          char v50 = 0;
          goto LABEL_89;
        }
        goto LABEL_76;
      default:
        int v36 = PBReaderSkipValueWithTag();
        unint64_t v18 = (int *)MEMORY[0x1E4F940C8];
        if (!v36) {
          goto LABEL_85;
        }
        goto LABEL_76;
    }
  }
}

void sub_18997B0A4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18997B234(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18997B7D8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18997B8C8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDSearchGeoParsingResultCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v22 = *MEMORY[0x1E4F143B8];
  long long v16 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  id v2 = *(id *)(a1 + 32);
  uint64_t v3 = [v2 countByEnumeratingWithState:&v16 objects:v21 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v17;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v17 != v5) {
          objc_enumerationMutation(v2);
        }
        -[GEOPDSearchAddressLabeledToken readAll:](*(void *)(*((void *)&v16 + 1) + 8 * v6++), 1);
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v16 objects:v21 count:16];
    }
    while (v4);
  }

  long long v14 = 0u;
  long long v15 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  id v7 = *(id *)(a1 + 16);
  uint64_t v8 = [v7 countByEnumeratingWithState:&v12 objects:v20 count:16];
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)v13;
    do
    {
      uint64_t v11 = 0;
      do
      {
        if (*(void *)v13 != v10) {
          objc_enumerationMutation(v7);
        }
        -[GEOPDSearchAddressLabeledToken readAll:](*(void *)(*((void *)&v12 + 1) + 8 * v11++), 1);
      }
      while (v9 != v11);
      uint64_t v9 = [v7 countByEnumeratingWithState:&v12 objects:v20 count:16];
    }
    while (v9);
  }
}

unint64_t GEOPDSearchGeoParsingResultReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 52))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDSearchGeoParsingResultReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = [v8 position];
  *(_DWORD *)(a1 + 52) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOPDSearchGeoParsingResultReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOPDSearchGeoParsingResultReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDSearchGeoParsingResultReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOPDSearchGeoParsingResultCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_18997BBF8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18997BEF8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDSearchGeoParsingResultIsDirty(uint64_t a1)
{
  uint64_t v14 = *MEMORY[0x1E4F143B8];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  if ((*(unsigned char *)(a1 + 64) & 0x3C) != 0) {
    return 1;
  }
  if ((*(unsigned char *)(a1 + 64) & 4) == 0) {
    return 0;
  }
  long long v11 = 0u;
  long long v12 = 0u;
  long long v9 = 0u;
  long long v10 = 0u;
  id v3 = *(id *)(a1 + 16);
  uint64_t v2 = [v3 countByEnumeratingWithState:&v9 objects:v13 count:16];
  if (v2)
  {
    uint64_t v4 = *(void *)v10;
    while (2)
    {
      for (uint64_t i = 0; i != v2; ++i)
      {
        if (*(void *)v10 != v4) {
          objc_enumerationMutation(v3);
        }
        uint64_t v6 = *(os_unfair_lock_s **)(*((void *)&v9 + 1) + 8 * i);
        if (v6)
        {
          os_unfair_lock_lock_with_options();
          char IsDirty = _GEOPDSearchAddressLabeledTokenIsDirty((uint64_t)v6);
          os_unfair_lock_unlock(v6 + 18);
          if (IsDirty)
          {
            uint64_t v2 = 1;
            goto LABEL_16;
          }
        }
      }
      uint64_t v2 = [v3 countByEnumeratingWithState:&v9 objects:v13 count:16];
      if (v2) {
        continue;
      }
      break;
    }
  }
LABEL_16:

  return v2;
}

void sub_18997C3A4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchIntentReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 136));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 132);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 128)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  unsigned int v11 = *(_DWORD *)(a1 + 148);
  uint32x4_t v12 = (uint32x4_t)vdupq_n_s32(v11);
  v13.i64[0] = 0x100000001;
  v13.i64[1] = 0x100000001;
  unsigned int v14 = vaddvq_s32(vaddq_s32(vaddq_s32((int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v12, (uint32x4_t)xmmword_18A636460), v13), (int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v12, (uint32x4_t)xmmword_18A636470), v13)), (int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v12, (uint32x4_t)xmmword_18A636480), v13)))+ ((v11 >> 9) & 1)+ ((v11 >> 10) & 1);
  while (2)
  {
    uint64_t v15 = 1;
    uint64_t v16 = 1;
    switch(a3[v7])
    {
      case -3:
        char v8 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v15 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        unsigned __int8 v17 = v10 | (v14 > 0xA);
        if ((v17 | v8)) {
          long long v18 = 0;
        }
        else {
          long long v18 = a3;
        }
        BOOL v19 = v17;
        char v66 = (v18 == 0) | v17;
        char v20 = (int *)MEMORY[0x1E4F940E8];
        unsigned int v21 = (int *)MEMORY[0x1E4F940C8];
        uint64_t v22 = (int *)MEMORY[0x1E4F940B8];
        BOOL v65 = v17;
        break;
      default:
        ++v14;
LABEL_6:
        uint64_t v15 = v9;
        uint64_t v16 = v10;
LABEL_8:
        ++v7;
        uint64_t v9 = v15;
        uint64_t v10 = v16;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v21)) {
      goto LABEL_167;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_23;
      }
      v23 += 7;
      BOOL v30 = v24++ >= 9;
      if (v30)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_25;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_23:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_25:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_167:
      if (v19)
      {
        char v60 = 1;
        goto LABEL_190;
      }
      if (v18)
      {
        while (1)
        {
          int v62 = *v18++;
          int v61 = 16;
          switch(v62)
          {
            case 0:
              goto LABEL_191;
            case 2:
              goto LABEL_184;
            case 3:
              int v61 = 32;
              goto LABEL_184;
            case 4:
              int v61 = 8;
              goto LABEL_184;
            case 5:
              int v61 = 256;
              goto LABEL_184;
            case 6:
              int v61 = 0x2000;
              goto LABEL_184;
            case 7:
              int v61 = 2048;
              goto LABEL_184;
            case 8:
              int v61 = 4;
              goto LABEL_184;
            case 9:
              int v61 = 64;
              goto LABEL_184;
            case 10:
              int v61 = 0x4000;
              goto LABEL_184;
            case 11:
              int v61 = 128;
              goto LABEL_184;
            case 12:
              int v61 = 0x8000;
              goto LABEL_184;
            case 13:
              int v61 = 4096;
              goto LABEL_184;
            case 15:
              int v61 = 512;
              goto LABEL_184;
            case 16:
              int v61 = 1024;
LABEL_184:
              *(_DWORD *)(a1 + 148) |= v61;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_191;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v19;
    if ((v66 & 1) == 0)
    {
      BOOL v35 = v18;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    switch((int)v33)
    {
      case 1:
        if ((v8 & 1) == 0) {
          goto LABEL_127;
        }
        char v39 = 0;
        unsigned int v40 = 0;
        uint64_t v41 = 0;
        *(_DWORD *)(a1 + 148) |= 2u;
        while (1)
        {
          uint64_t v42 = *v20;
          uint64_t v43 = *(void *)(v3 + v42);
          unint64_t v44 = v43 + 1;
          if (v43 == -1 || v44 > *(void *)(v3 + *v6)) {
            break;
          }
          char v45 = *(unsigned char *)(*(void *)(v3 + *v22) + v43);
          *(void *)(v3 + v42) = v44;
          v41 |= (unint64_t)(v45 & 0x7F) << v39;
          if ((v45 & 0x80) == 0) {
            goto LABEL_130;
          }
          v39 += 7;
          BOOL v30 = v40++ >= 9;
          if (v30)
          {
            LODWORD(v41) = 0;
            goto LABEL_132;
          }
        }
        *(unsigned char *)(v3 + *v21) = 1;
LABEL_130:
        if (*(unsigned char *)(v3 + *v21)) {
          LODWORD(v41) = 0;
        }
LABEL_132:
        uint64_t v58 = 144;
        goto LABEL_161;
      case 2:
        if (!v34) {
          goto LABEL_127;
        }
        if ((*(unsigned char *)(a1 + 148) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_187;
          }
          int v59 = (int)(*(_DWORD *)(a1 + 148) << 27) >> 31;
          goto LABEL_164;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_187;
        }
        uint64_t v47 = objc_alloc_init(GEOPDSearchCategoryIntent);
        if (!GEOPDSearchCategoryIntentReadAllFrom((uint64_t)v47, (void *)v3, v9 & 1)) {
          goto LABEL_188;
        }
        PBReaderRecallMark();
        uint64_t v48 = 32;
        goto LABEL_120;
      case 3:
        if (!v34) {
          goto LABEL_127;
        }
        if ((*(unsigned char *)(a1 + 148) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_187;
          }
          int v59 = (int)(*(_DWORD *)(a1 + 148) << 26) >> 31;
          goto LABEL_164;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_187;
        }
        uint64_t v47 = objc_alloc_init(GEOPDSearchChainIntent);
        if (!GEOPDSearchChainIntentReadAllFrom((uint64_t)v47, (void *)v3, v9 & 1)) {
          goto LABEL_188;
        }
        PBReaderRecallMark();
        uint64_t v48 = 40;
        goto LABEL_120;
      case 4:
        if (!v34) {
          goto LABEL_127;
        }
        if ((*(unsigned char *)(a1 + 148) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_187;
          }
          int v59 = (int)(*(_DWORD *)(a1 + 148) << 28) >> 31;
          goto LABEL_164;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_187;
        }
        uint64_t v47 = objc_alloc_init(GEOPDSearchBusinessIntent);
        if (!GEOPDSearchBusinessIntentReadAllFrom((uint64_t)v47, (void *)v3, v9 & 1)) {
          goto LABEL_188;
        }
        PBReaderRecallMark();
        uint64_t v48 = 24;
        goto LABEL_120;
      case 5:
        if (!v34) {
          goto LABEL_127;
        }
        if (*(unsigned char *)(a1 + 149))
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_187;
          }
          int v59 = (int)(*(_DWORD *)(a1 + 148) << 23) >> 31;
          goto LABEL_164;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_187;
        }
        uint64_t v47 = objc_alloc_init(GEOPDSearchGeoIntent);
        if (!GEOPDSearchGeoIntentReadAllFrom((uint64_t)v47, (void *)v3, v9 & 1)) {
          goto LABEL_188;
        }
        PBReaderRecallMark();
        uint64_t v48 = 64;
        goto LABEL_120;
      case 6:
        if (!v34) {
          goto LABEL_127;
        }
        if ((*(unsigned char *)(a1 + 149) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_187;
          }
          int v59 = (int)(*(_DWORD *)(a1 + 148) << 18) >> 31;
          goto LABEL_164;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_187;
        }
        uint64_t v47 = objc_alloc_init(GEOPDSearchProximityIntent);
        if (!GEOPDSearchProximityIntentReadAllFrom((uint64_t)v47, (void *)v3, v9 & 1)) {
          goto LABEL_188;
        }
        PBReaderRecallMark();
        uint64_t v48 = 104;
        goto LABEL_120;
      case 7:
        if (!v34) {
          goto LABEL_127;
        }
        if ((*(unsigned char *)(a1 + 149) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_187;
          }
          int v59 = (int)(*(_DWORD *)(a1 + 148) << 20) >> 31;
          goto LABEL_164;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_187;
        }
        uint64_t v47 = objc_alloc_init(GEOPDSearchLocationIntent);
        if (!GEOPDSearchLocationIntentReadAllFrom((uint64_t)v47, (void *)v3, v9 & 1)) {
          goto LABEL_188;
        }
        PBReaderRecallMark();
        uint64_t v48 = 88;
        goto LABEL_120;
      case 8:
        if (!v34) {
          goto LABEL_127;
        }
        if ((*(unsigned char *)(a1 + 148) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_187;
          }
          int v59 = (int)(*(_DWORD *)(a1 + 148) << 29) >> 31;
          goto LABEL_164;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_187;
        }
        uint64_t v47 = objc_alloc_init(GEOPDSearchAttributeIntent);
        if (!GEOPDSearchAttributeIntentReadAllFrom((uint64_t)v47, (void *)v3, v9 & 1)) {
          goto LABEL_188;
        }
        PBReaderRecallMark();
        uint64_t v48 = 16;
        goto LABEL_120;
      case 9:
        if (!v34) {
          goto LABEL_127;
        }
        if ((*(unsigned char *)(a1 + 148) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_187;
          }
          int v59 = (int)(*(_DWORD *)(a1 + 148) << 25) >> 31;
          goto LABEL_164;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_187;
        }
        uint64_t v47 = objc_alloc_init(GEOPDSearchClientResolvedIntent);
        if (!GEOPDSearchClientResolvedIntentReadAllFrom((uint64_t)v47, (void *)v3)) {
          goto LABEL_188;
        }
        PBReaderRecallMark();
        uint64_t v48 = 48;
        goto LABEL_120;
      case 10:
        if (!v34) {
          goto LABEL_127;
        }
        if ((*(unsigned char *)(a1 + 149) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_187;
          }
          int v59 = (int)(*(_DWORD *)(a1 + 148) << 17) >> 31;
          goto LABEL_164;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_187;
        }
        uint64_t v47 = objc_alloc_init(GEOPDSearchSearchFilterIntent);
        if (!GEOPDSearchSearchFilterIntentReadAllFrom((uint64_t)v47, (void *)v3, v9 & 1)) {
          goto LABEL_188;
        }
        PBReaderRecallMark();
        uint64_t v48 = 112;
        goto LABEL_120;
      case 11:
        if (!v34) {
          goto LABEL_127;
        }
        if ((*(unsigned char *)(a1 + 148) & 0x80) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_187;
          }
          int v59 = (int)(*(_DWORD *)(a1 + 148) << 24) >> 31;
          goto LABEL_164;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_187;
        }
        uint64_t v47 = objc_alloc_init(GEOPDSearchDirectionIntent);
        if (!GEOPDSearchDirectionIntentReadAllFrom((uint64_t)v47, (void *)v3, v9 & 1)) {
          goto LABEL_188;
        }
        PBReaderRecallMark();
        uint64_t v48 = 56;
        goto LABEL_120;
      case 12:
        if (!v34) {
          goto LABEL_127;
        }
        if ((*(unsigned char *)(a1 + 149) & 0x80) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_187;
          }
          int v59 = (int)(*(_DWORD *)(a1 + 148) << 16) >> 31;
          goto LABEL_164;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_187;
        }
        uint64_t v47 = objc_alloc_init(GEOPDSearchTransitIntent);
        if (!GEOPDSearchTransitIntentReadAllFrom((uint64_t)v47, (void *)v3, v9 & 1)) {
          goto LABEL_188;
        }
        PBReaderRecallMark();
        uint64_t v48 = 120;
        goto LABEL_120;
      case 13:
        if (!v34) {
          goto LABEL_127;
        }
        if ((*(unsigned char *)(a1 + 149) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_187;
          }
          int v59 = (int)(*(_DWORD *)(a1 + 148) << 19) >> 31;
          goto LABEL_164;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_187;
        }
        uint64_t v47 = objc_alloc_init(GEOPDSearchPhoneNumberIntent);
        if (!GEOPDSearchPhoneNumberIntentReadAllFrom((uint64_t)v47, (void *)v3, v9 & 1)) {
          goto LABEL_188;
        }
        PBReaderRecallMark();
        uint64_t v48 = 96;
        goto LABEL_120;
      case 14:
        if ((v8 & 1) == 0) {
          goto LABEL_127;
        }
        char v49 = 0;
        unsigned int v50 = 0;
        uint64_t v41 = 0;
        *(_DWORD *)(a1 + 148) |= 1u;
        while (2)
        {
          uint64_t v51 = *v20;
          uint64_t v52 = *(void *)(v3 + v51);
          unint64_t v53 = v52 + 1;
          if (v52 == -1 || v53 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v54 = *(unsigned char *)(*(void *)(v3 + *v22) + v52);
            *(void *)(v3 + v51) = v53;
            v41 |= (unint64_t)(v54 & 0x7F) << v49;
            if (v54 < 0)
            {
              v49 += 7;
              BOOL v30 = v50++ >= 9;
              if (v30)
              {
                LODWORD(v41) = 0;
                goto LABEL_160;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          LODWORD(v41) = 0;
        }
LABEL_160:
        uint64_t v58 = 140;
LABEL_161:
        *(_DWORD *)(a1 + v58) = v41;
        goto LABEL_166;
      case 15:
        if (!v34) {
          goto LABEL_127;
        }
        if ((*(unsigned char *)(a1 + 149) & 2) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_187:
            char v60 = 0;
            goto LABEL_189;
          }
          int v59 = (int)(*(_DWORD *)(a1 + 148) << 22) >> 31;
LABEL_164:
          v7 += v59;
LABEL_165:
          unsigned int v21 = (int *)MEMORY[0x1E4F940C8];
          uint64_t v22 = (int *)MEMORY[0x1E4F940B8];
LABEL_166:
          if (!v19 && v7 == 0) {
            goto LABEL_167;
          }
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_187;
        }
        uint64_t v47 = objc_alloc_init(GEOPDSearchKeywordIntent);
        if (GEOPDSearchKeywordIntentReadAllFrom((uint64_t)v47, (void *)v3, v9 & 1))
        {
          PBReaderRecallMark();
          uint64_t v48 = 72;
LABEL_120:
          int v55 = *(void **)(a1 + v48);
          *(void *)(a1 + v48) = v47;

          --v7;
LABEL_121:
          BOOL v19 = v65;
          goto LABEL_165;
        }
LABEL_188:

        char v60 = 0;
        BOOL v19 = v65;
LABEL_189:
        unsigned int v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_190:
        *(_DWORD *)(a1 + 148) |= 0x10u;
        *(_DWORD *)(a1 + 148) |= 0x20u;
        *(_DWORD *)(a1 + 148) |= 8u;
        *(_DWORD *)(a1 + 148) |= 0x100u;
        *(_DWORD *)(a1 + 148) |= 0x2000u;
        *(_DWORD *)(a1 + 148) |= 0x800u;
        *(_DWORD *)(a1 + 148) |= 4u;
        *(_DWORD *)(a1 + 148) |= 0x40u;
        *(_DWORD *)(a1 + 148) |= 0x4000u;
        *(_DWORD *)(a1 + 148) |= 0x80u;
        *(_DWORD *)(a1 + 148) |= 0x8000u;
        *(_DWORD *)(a1 + 148) |= 0x1000u;
        *(_DWORD *)(a1 + 148) |= 0x200u;
        *(_DWORD *)(a1 + 148) |= 0x400u;
        if (v60)
        {
LABEL_191:
          unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
          if (v19) {
            goto LABEL_192;
          }
        }
        else
        {
          unint64_t v3 = 0;
          if (v19)
          {
LABEL_192:
            uint64_t v63 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = 0;
          }
        }
        return v3;
      case 16:
        if (v34 && (*(unsigned char *)(a1 + 149) & 4) == 0)
        {
          char v56 = PBReaderReadString();
          if (v56) {
            -[GEOPDSearchIntent _addNoFlagsLanguageCode:](a1, v56);
          }

          goto LABEL_121;
        }
LABEL_127:
        char v57 = PBReaderSkipValueWithTag();
        uint64_t v22 = (int *)MEMORY[0x1E4F940B8];
        unsigned int v21 = (int *)MEMORY[0x1E4F940C8];
        if ((v57 & 1) == 0)
        {
LABEL_186:
          char v60 = 0;
          goto LABEL_190;
        }
        goto LABEL_166;
      default:
        int v46 = PBReaderSkipValueWithTag();
        uint64_t v22 = (int *)MEMORY[0x1E4F940B8];
        unsigned int v21 = (int *)MEMORY[0x1E4F940C8];
        if (!v46) {
          goto LABEL_186;
        }
        goto LABEL_166;
    }
  }
}

void sub_18997D668(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18997D734(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18997D800(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18997D8CC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18997D984(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18997E598(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18997E6A4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1899831B8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDSearchIntentCallReadAllRecursiveWithoutSynchronized(uint64_t *a1)
{
  -[GEOPDSearchCategoryIntent readAll:](a1[4], 1);
  -[GEOPDSearchChainIntent readAll:](a1[5], 1);
  -[GEOPDSearchBusinessIntent readAll:](a1[3], 1);
  -[GEOPDSearchGeoIntent readAll:](a1[8], 1);
  -[GEOPDSearchProximityIntent readAll:](a1[13], 1);
  -[GEOPDSearchLocationIntent readAll:](a1[11], 1);
  -[GEOPDSearchAttributeIntent readAll:](a1[2], 1);
  -[GEOPDSearchTransitIntent readAll:](a1[15], 1);
  -[GEOPDSearchPhoneNumberIntent readAll:](a1[12], 1);
  uint64_t v2 = a1[9];

  -[GEOPDSearchKeywordIntent readAll:](v2, 1);
}

unint64_t GEOPDSearchIntentReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 132))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDSearchIntentReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 136));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 128) = [v8 position];
  *(_DWORD *)(a1 + 132) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOPDSearchIntentReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOPDSearchIntentReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDSearchIntentReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOPDSearchIntentCallReadAllRecursiveWithoutSynchronized((uint64_t *)a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 136));
  return Specified;
}

void sub_189983440(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSearchIntentIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  uint64_t v2 = (int *)MEMORY[0x1E4F940E8];
  unint64_t v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] >= *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
LABEL_730:
    BOOL v300 = a1[*v4] == 0;
    PBReaderRecallMark();
    return v300;
  }
  uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (a1[*v4]) {
      goto LABEL_730;
    }
    char v6 = 0;
    unsigned int v7 = 0;
    unint64_t v8 = 0;
    while (1)
    {
      uint64_t v9 = *v2;
      uint64_t v10 = *(void *)&a1[v9];
      unint64_t v11 = v10 + 1;
      if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
        break;
      }
      char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
      *(void *)&a1[v9] = v11;
      v8 |= (unint64_t)(v12 & 0x7F) << v6;
      if ((v12 & 0x80) == 0) {
        goto LABEL_12;
      }
      v6 += 7;
      BOOL v13 = v7++ >= 9;
      if (v13)
      {
        unint64_t v8 = 0;
        int v14 = a1[*v4];
        goto LABEL_14;
      }
    }
    a1[*v4] = 1;
LABEL_12:
    int v14 = a1[*v4];
    if (a1[*v4]) {
      unint64_t v8 = 0;
    }
LABEL_14:
    int v15 = v8 & 7;
    if (v14 || v15 == 4) {
      goto LABEL_730;
    }
    switch((v8 >> 3))
    {
      case 1u:
        if ((v8 & 7) != 0) {
          goto LABEL_732;
        }
        unsigned int v17 = 0;
        while (1)
        {
          uint64_t v18 = *v2;
          uint64_t v19 = *(void *)&a1[v18];
          unint64_t v20 = v19 + 1;
          if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
            goto LABEL_679;
          }
          int v21 = *(char *)(*(void *)&a1[*v5] + v19);
          *(void *)&a1[v18] = v20;
          if (v21 < 0)
          {
            BOOL v22 = v17++ > 8;
            if (!v22) {
              continue;
            }
          }
          goto LABEL_721;
        }
      case 2u:
        if (v15 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_732;
        }
        objc_msgSend(a1, "position", 0, 0);
        [a1 length];
LABEL_30:
        if (*(void *)&a1[*v2] >= *(void *)&a1[*v3] || a1[*v4]) {
          goto LABEL_728;
        }
        char v23 = 0;
        unsigned int v24 = 0;
        unint64_t v25 = 0;
        while (2)
        {
          uint64_t v26 = *v2;
          uint64_t v27 = *(void *)&a1[v26];
          unint64_t v28 = v27 + 1;
          if (v27 == -1 || v28 > *(void *)&a1[*v3])
          {
            a1[*v4] = 1;
          }
          else
          {
            char v29 = *(unsigned char *)(*(void *)&a1[*v5] + v27);
            *(void *)&a1[v26] = v28;
            v25 |= (unint64_t)(v29 & 0x7F) << v23;
            if (v29 < 0)
            {
              v23 += 7;
              BOOL v13 = v24++ >= 9;
              if (v13)
              {
                unint64_t v25 = 0;
                int v30 = a1[*v4];
                goto LABEL_42;
              }
              continue;
            }
          }
          break;
        }
        int v30 = a1[*v4];
        if (a1[*v4]) {
          unint64_t v25 = 0;
        }
LABEL_42:
        int v31 = v25 & 7;
        if (v30) {
          BOOL v32 = 1;
        }
        else {
          BOOL v32 = v31 == 4;
        }
        if (v32)
        {
LABEL_728:
          int v299 = a1[*v4];
          PBReaderRecallMark();
          if (v299) {
            goto LABEL_732;
          }
LABEL_720:
          PBReaderRecallMark();
LABEL_721:
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_730;
          }
          continue;
        }
        switch((v25 >> 3))
        {
          case 1u:
            if (v31 != 2) {
              break;
            }
            goto LABEL_77;
          case 2u:
            if (v31 != 2) {
              break;
            }
            goto LABEL_77;
          case 3u:
            if (v31 != 2 || !PBReaderPlaceMark() || !GEOPDSearchTokenSetIsValid(a1)) {
              break;
            }
            goto LABEL_124;
          case 4u:
            if (v31 != 2) {
              break;
            }
            goto LABEL_77;
          case 5u:
            if (v31 != 2 || !PBReaderPlaceMark() || !GEOPDSearchKeyValueDoublePairIsValid(a1)) {
              break;
            }
            goto LABEL_124;
          case 6u:
            if (v31 != 2) {
              break;
            }
            goto LABEL_77;
          case 7u:
            if (v31 != 2) {
              break;
            }
            goto LABEL_77;
          case 8u:
            if (v31 != 2 || !PBReaderPlaceMark() || !GEOPDSearchKeyValuePairIsValid(a1)) {
              break;
            }
            goto LABEL_124;
          case 9u:
            if (v31 == 2)
            {
              if (!PBReaderPlaceMark()) {
                break;
              }
LABEL_126:
              while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
              {
                unsigned int v55 = a1[*v4];
                if (a1[*v4]) {
                  break;
                }
                while (1)
                {
                  uint64_t v56 = *v2;
                  uint64_t v57 = *(void *)&a1[v56];
                  unint64_t v58 = v57 + 1;
                  if (v57 == -1 || v58 > *(void *)&a1[*v3]) {
                    break;
                  }
                  int v59 = *(char *)(*(void *)&a1[*v5] + v57);
                  *(void *)&a1[v56] = v58;
                  if (v59 < 0)
                  {
                    BOOL v13 = v55++ >= 9;
                    if (!v13) {
                      continue;
                    }
                  }
                  goto LABEL_126;
                }
                a1[*v4] = 1;
              }
LABEL_124:
              PBReaderRecallMark();
              goto LABEL_30;
            }
            if ((v25 & 7) == 0)
            {
              do
              {
                uint64_t v33 = *v2;
                uint64_t v34 = *(void *)&a1[v33];
                unint64_t v35 = v34 + 1;
                if (v34 == -1 || v35 > *(void *)&a1[*v3])
                {
                  a1[*v4] = 1;
                  goto LABEL_30;
                }
                int v36 = *(char *)(*(void *)&a1[*v5] + v34);
                *(void *)&a1[v33] = v35;
                if ((v36 & 0x80000000) == 0) {
                  break;
                }
                unsigned int v37 = v31++;
              }
              while (v37 <= 8);
              goto LABEL_30;
            }
            break;
          case 0xAu:
            if (v31 != 2) {
              break;
            }
            goto LABEL_77;
          case 0xBu:
            if (v31 != 2 || !PBReaderPlaceMark()) {
              break;
            }
            [a1 position];
            [a1 length];
            if (*(void *)&a1[*v2] < *(void *)&a1[*v3])
            {
              int v38 = 0;
              while (1)
              {
                if (a1[*v4]) {
                  goto LABEL_136;
                }
                char v39 = 0;
                unsigned int v40 = 0;
                unint64_t v41 = 0;
                while (1)
                {
                  uint64_t v42 = *v2;
                  uint64_t v43 = *(void *)&a1[v42];
                  unint64_t v44 = v43 + 1;
                  if (v43 == -1 || v44 > *(void *)&a1[*v3]) {
                    break;
                  }
                  char v45 = *(unsigned char *)(*(void *)&a1[*v5] + v43);
                  *(void *)&a1[v42] = v44;
                  v41 |= (unint64_t)(v45 & 0x7F) << v39;
                  if ((v45 & 0x80) == 0) {
                    goto LABEL_92;
                  }
                  v39 += 7;
                  BOOL v13 = v40++ >= 9;
                  if (v13)
                  {
                    unint64_t v41 = 0;
                    int v46 = a1[*v4];
                    goto LABEL_94;
                  }
                }
                a1[*v4] = 1;
LABEL_92:
                int v46 = a1[*v4];
                if (a1[*v4]) {
                  unint64_t v41 = 0;
                }
LABEL_94:
                int v47 = v41 & 7;
                if (v46 || v47 == 4) {
                  goto LABEL_136;
                }
                unint64_t v49 = v41 >> 3;
                if ((v41 >> 3) == 3)
                {
                  if (v47 != 2 || !PBReaderPlaceMark() || !GEOPDSearchRelatedCategoryIsValid(a1))
                  {
LABEL_734:
                    PBReaderRecallMark();
                    goto LABEL_731;
                  }
                  PBReaderRecallMark();
                }
                else if (v49 == 2)
                {
                  if ((v41 & 7) != 0) {
                    goto LABEL_734;
                  }
                  unsigned int v50 = 0;
                  while (1)
                  {
                    uint64_t v51 = *v2;
                    uint64_t v52 = *(void *)&a1[v51];
                    unint64_t v53 = v52 + 1;
                    if (v52 == -1 || v53 > *(void *)&a1[*v3]) {
                      break;
                    }
                    int v54 = *(char *)(*(void *)&a1[*v5] + v52);
                    *(void *)&a1[v51] = v53;
                    if (v54 < 0)
                    {
                      BOOL v22 = v50++ > 8;
                      if (!v22) {
                        continue;
                      }
                    }
                    goto LABEL_119;
                  }
                  a1[*v4] = 1;
                }
                else
                {
                  if (v49 == 1)
                  {
                    if (v38 || v47 != 2) {
                      goto LABEL_734;
                    }
                    int v38 = 1;
                  }
                  if ((PBReaderSkipValueWithTag() & 1) == 0) {
                    goto LABEL_734;
                  }
                }
LABEL_119:
                if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
                  goto LABEL_136;
                }
              }
            }
            int v38 = 0;
LABEL_136:
            int v60 = a1[*v4];
            PBReaderRecallMark();
            if (v60) {
              BOOL v61 = 1;
            }
            else {
              BOOL v61 = v38 == 0;
            }
            if (!v61) {
              goto LABEL_124;
            }
            break;
          case 0xCu:
            if (v31 != 2 || !PBReaderPlaceMark() || !GEOPDSearchKeywordMappingIsValid(a1)) {
              break;
            }
            goto LABEL_124;
          default:
LABEL_77:
            if ((PBReaderSkipValueWithTag() & 1) == 0) {
              break;
            }
            goto LABEL_30;
        }
LABEL_731:
        PBReaderRecallMark();
LABEL_732:
        PBReaderRecallMark();
        return 0;
      case 3u:
        if (v15 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_732;
        }
        [a1 position];
        [a1 length];
LABEL_145:
        while (2)
        {
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3] || a1[*v4]) {
            goto LABEL_719;
          }
          char v62 = 0;
          unsigned int v63 = 0;
          unint64_t v64 = 0;
          while (2)
          {
            uint64_t v65 = *v2;
            uint64_t v66 = *(void *)&a1[v65];
            unint64_t v67 = v66 + 1;
            if (v66 == -1 || v67 > *(void *)&a1[*v3])
            {
              a1[*v4] = 1;
            }
            else
            {
              char v68 = *(unsigned char *)(*(void *)&a1[*v5] + v66);
              *(void *)&a1[v65] = v67;
              v64 |= (unint64_t)(v68 & 0x7F) << v62;
              if (v68 < 0)
              {
                v62 += 7;
                BOOL v13 = v63++ >= 9;
                if (v13)
                {
                  unint64_t v64 = 0;
                  int v69 = a1[*v4];
                  goto LABEL_157;
                }
                continue;
              }
            }
            break;
          }
          int v69 = a1[*v4];
          if (a1[*v4]) {
            unint64_t v64 = 0;
          }
LABEL_157:
          int v70 = v64 & 7;
          if (v69) {
            BOOL v71 = 1;
          }
          else {
            BOOL v71 = v70 == 4;
          }
          if (!v71)
          {
            switch((v64 >> 3))
            {
              case 1u:
                if (v70 == 2) {
                  goto LABEL_227;
                }
                goto LABEL_731;
              case 2u:
                if (v70 == 2) {
                  goto LABEL_227;
                }
                goto LABEL_731;
              case 3u:
                if (v70 == 2) {
                  goto LABEL_227;
                }
                goto LABEL_731;
              case 4u:
                if (v70 != 2 || !PBReaderPlaceMark() || !GEOPDSearchTokenSetIsValid(a1)) {
                  goto LABEL_731;
                }
                goto LABEL_225;
              case 5u:
                if ((v64 & 7) != 0) {
                  goto LABEL_731;
                }
                unsigned int v72 = 0;
                while (1)
                {
                  uint64_t v73 = *v2;
                  uint64_t v74 = *(void *)&a1[v73];
                  unint64_t v75 = v74 + 1;
                  if (v74 == -1 || v75 > *(void *)&a1[*v3]) {
                    goto LABEL_217;
                  }
                  int v76 = *(char *)(*(void *)&a1[*v5] + v74);
                  *(void *)&a1[v73] = v75;
                  if (v76 < 0)
                  {
                    BOOL v22 = v72++ > 8;
                    if (!v22) {
                      continue;
                    }
                  }
                  goto LABEL_145;
                }
              case 6u:
                if ((v64 & 7) != 0) {
                  goto LABEL_731;
                }
                unsigned int v77 = 0;
                while (1)
                {
                  uint64_t v78 = *v2;
                  uint64_t v79 = *(void *)&a1[v78];
                  unint64_t v80 = v79 + 1;
                  if (v79 == -1 || v80 > *(void *)&a1[*v3]) {
                    goto LABEL_217;
                  }
                  int v81 = *(char *)(*(void *)&a1[*v5] + v79);
                  *(void *)&a1[v78] = v80;
                  if (v81 < 0)
                  {
                    BOOL v22 = v77++ > 8;
                    if (!v22) {
                      continue;
                    }
                  }
                  goto LABEL_145;
                }
              case 7u:
                if ((v64 & 7) != 0) {
                  goto LABEL_731;
                }
                unsigned int v82 = 0;
                while (1)
                {
                  uint64_t v83 = *v2;
                  uint64_t v84 = *(void *)&a1[v83];
                  unint64_t v85 = v84 + 1;
                  if (v84 == -1 || v85 > *(void *)&a1[*v3]) {
                    goto LABEL_217;
                  }
                  int v86 = *(char *)(*(void *)&a1[*v5] + v84);
                  *(void *)&a1[v83] = v85;
                  if (v86 < 0)
                  {
                    BOOL v22 = v82++ > 8;
                    if (!v22) {
                      continue;
                    }
                  }
                  goto LABEL_145;
                }
              case 8u:
                if ((v64 & 7) != 0) {
                  goto LABEL_731;
                }
                unsigned int v87 = 0;
                while (1)
                {
                  uint64_t v88 = *v2;
                  uint64_t v89 = *(void *)&a1[v88];
                  unint64_t v90 = v89 + 1;
                  if (v89 == -1 || v90 > *(void *)&a1[*v3]) {
                    goto LABEL_217;
                  }
                  int v91 = *(char *)(*(void *)&a1[*v5] + v89);
                  *(void *)&a1[v88] = v90;
                  if (v91 < 0)
                  {
                    BOOL v22 = v87++ > 8;
                    if (!v22) {
                      continue;
                    }
                  }
                  goto LABEL_145;
                }
              case 9u:
                if (v70 == 2) {
                  goto LABEL_227;
                }
                goto LABEL_731;
              case 0xAu:
                if (v70 != 2 || !PBReaderPlaceMark() || !GEOPDSearchKeyValueDoublePairIsValid(a1)) {
                  goto LABEL_731;
                }
                goto LABEL_225;
              case 0xBu:
                if (v70 != 2)
                {
                  if ((v64 & 7) != 0) {
                    goto LABEL_731;
                  }
                  do
                  {
                    uint64_t v92 = *v2;
                    uint64_t v93 = *(void *)&a1[v92];
                    unint64_t v94 = v93 + 1;
                    if (v93 == -1 || v94 > *(void *)&a1[*v3])
                    {
LABEL_217:
                      a1[*v4] = 1;
                      goto LABEL_145;
                    }
                    int v95 = *(char *)(*(void *)&a1[*v5] + v93);
                    *(void *)&a1[v92] = v94;
                    if ((v95 & 0x80000000) == 0) {
                      break;
                    }
                    unsigned int v96 = v70++;
                  }
                  while (v96 <= 8);
                  continue;
                }
                if (!PBReaderPlaceMark()) {
                  goto LABEL_731;
                }
                break;
              case 0xCu:
                if (v70 != 2 || !PBReaderPlaceMark() || !GEOPDSearchBrandRelationshipIsValid(a1)) {
                  goto LABEL_731;
                }
                goto LABEL_225;
              case 0xDu:
                if (v70 == 2 && PBReaderPlaceMark() && GEOPDSearchChainInfoIsValid(a1)) {
                  goto LABEL_225;
                }
                goto LABEL_731;
              case 0xEu:
                if (v70 == 2) {
                  goto LABEL_227;
                }
                goto LABEL_731;
              default:
LABEL_227:
                if ((PBReaderSkipValueWithTag() & 1) == 0) {
                  goto LABEL_731;
                }
                continue;
            }
            while (1)
            {
LABEL_230:
              if (*(void *)&a1[*v2] >= *(void *)&a1[*v3] || (unsigned int v97 = a1[*v4], a1[*v4]))
              {
LABEL_225:
                PBReaderRecallMark();
                goto LABEL_145;
              }
              while (1)
              {
                uint64_t v98 = *v2;
                uint64_t v99 = *(void *)&a1[v98];
                unint64_t v100 = v99 + 1;
                if (v99 == -1 || v100 > *(void *)&a1[*v3]) {
                  break;
                }
                int v101 = *(char *)(*(void *)&a1[*v5] + v99);
                *(void *)&a1[v98] = v100;
                if (v101 < 0)
                {
                  BOOL v13 = v97++ >= 9;
                  if (!v13) {
                    continue;
                  }
                }
                goto LABEL_230;
              }
              a1[*v4] = 1;
            }
          }
          goto LABEL_719;
        }
      case 4u:
        if (v15 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_732;
        }
        [a1 position];
        [a1 length];
LABEL_242:
        while (2)
        {
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3] || a1[*v4]) {
            goto LABEL_719;
          }
          char v102 = 0;
          unsigned int v103 = 0;
          unint64_t v104 = 0;
          while (2)
          {
            uint64_t v105 = *v2;
            uint64_t v106 = *(void *)&a1[v105];
            unint64_t v107 = v106 + 1;
            if (v106 == -1 || v107 > *(void *)&a1[*v3])
            {
              a1[*v4] = 1;
            }
            else
            {
              char v108 = *(unsigned char *)(*(void *)&a1[*v5] + v106);
              *(void *)&a1[v105] = v107;
              v104 |= (unint64_t)(v108 & 0x7F) << v102;
              if (v108 < 0)
              {
                v102 += 7;
                BOOL v13 = v103++ >= 9;
                if (v13)
                {
                  unint64_t v104 = 0;
                  int v109 = a1[*v4];
                  goto LABEL_254;
                }
                continue;
              }
            }
            break;
          }
          int v109 = a1[*v4];
          if (a1[*v4]) {
            unint64_t v104 = 0;
          }
LABEL_254:
          int v110 = v104 & 7;
          if (v109) {
            BOOL v111 = 1;
          }
          else {
            BOOL v111 = v110 == 4;
          }
          if (!v111)
          {
            switch((v104 >> 3))
            {
              case 1u:
                if (v110 == 2) {
                  goto LABEL_260;
                }
                goto LABEL_731;
              case 2u:
                if (v110 != 2 || !PBReaderPlaceMark() || !GEOPDSearchTokenSetIsValid(a1)) {
                  goto LABEL_731;
                }
                goto LABEL_297;
              case 3u:
                if ((v104 & 7) != 0) {
                  goto LABEL_731;
                }
                unsigned int v112 = 0;
                while (1)
                {
                  uint64_t v113 = *v2;
                  uint64_t v114 = *(void *)&a1[v113];
                  unint64_t v115 = v114 + 1;
                  if (v114 == -1 || v115 > *(void *)&a1[*v3]) {
                    goto LABEL_293;
                  }
                  int v116 = *(char *)(*(void *)&a1[*v5] + v114);
                  *(void *)&a1[v113] = v115;
                  if (v116 < 0)
                  {
                    BOOL v22 = v112++ > 8;
                    if (!v22) {
                      continue;
                    }
                  }
                  goto LABEL_242;
                }
              case 4u:
                if (v110 != 2 || !PBReaderPlaceMark() || !GEOLatLngIsValid(a1)) {
                  goto LABEL_731;
                }
                goto LABEL_297;
              case 5u:
                if ((v104 & 7) != 0) {
                  goto LABEL_731;
                }
                unsigned int v117 = 0;
                while (1)
                {
                  uint64_t v118 = *v2;
                  uint64_t v119 = *(void *)&a1[v118];
                  unint64_t v120 = v119 + 1;
                  if (v119 == -1 || v120 > *(void *)&a1[*v3]) {
                    goto LABEL_293;
                  }
                  int v121 = *(char *)(*(void *)&a1[*v5] + v119);
                  *(void *)&a1[v118] = v120;
                  if (v121 < 0)
                  {
                    BOOL v22 = v117++ > 8;
                    if (!v22) {
                      continue;
                    }
                  }
                  goto LABEL_242;
                }
              case 6u:
                if (v110 != 2)
                {
                  if ((v104 & 7) != 0) {
                    goto LABEL_731;
                  }
                  do
                  {
                    uint64_t v122 = *v2;
                    uint64_t v123 = *(void *)&a1[v122];
                    unint64_t v124 = v123 + 1;
                    if (v123 == -1 || v124 > *(void *)&a1[*v3])
                    {
LABEL_293:
                      a1[*v4] = 1;
                      goto LABEL_242;
                    }
                    int v125 = *(char *)(*(void *)&a1[*v5] + v123);
                    *(void *)&a1[v122] = v124;
                    if ((v125 & 0x80000000) == 0) {
                      break;
                    }
                    unsigned int v126 = v110++;
                  }
                  while (v126 <= 8);
                  continue;
                }
                if (!PBReaderPlaceMark()) {
                  goto LABEL_731;
                }
                break;
              case 7u:
                if (v110 == 2 && PBReaderPlaceMark() && GEOPDSearchKeywordMappingIsValid(a1)) {
                  goto LABEL_297;
                }
                goto LABEL_731;
              default:
LABEL_260:
                if ((PBReaderSkipValueWithTag() & 1) == 0) {
                  goto LABEL_731;
                }
                continue;
            }
            while (1)
            {
LABEL_299:
              if (*(void *)&a1[*v2] >= *(void *)&a1[*v3] || (unsigned int v127 = a1[*v4], a1[*v4]))
              {
LABEL_297:
                PBReaderRecallMark();
                goto LABEL_242;
              }
              while (1)
              {
                uint64_t v128 = *v2;
                uint64_t v129 = *(void *)&a1[v128];
                unint64_t v130 = v129 + 1;
                if (v129 == -1 || v130 > *(void *)&a1[*v3]) {
                  break;
                }
                int v131 = *(char *)(*(void *)&a1[*v5] + v129);
                *(void *)&a1[v128] = v130;
                if (v131 < 0)
                {
                  BOOL v13 = v127++ >= 9;
                  if (!v13) {
                    continue;
                  }
                }
                goto LABEL_299;
              }
              a1[*v4] = 1;
            }
          }
          goto LABEL_719;
        }
      case 5u:
        if (v15 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_732;
        }
        [a1 position];
        [a1 length];
LABEL_311:
        while (2)
        {
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3] || a1[*v4]) {
            goto LABEL_719;
          }
          char v132 = 0;
          unsigned int v133 = 0;
          unint64_t v134 = 0;
          while (2)
          {
            uint64_t v135 = *v2;
            uint64_t v136 = *(void *)&a1[v135];
            unint64_t v137 = v136 + 1;
            if (v136 == -1 || v137 > *(void *)&a1[*v3])
            {
              a1[*v4] = 1;
            }
            else
            {
              char v138 = *(unsigned char *)(*(void *)&a1[*v5] + v136);
              *(void *)&a1[v135] = v137;
              v134 |= (unint64_t)(v138 & 0x7F) << v132;
              if (v138 < 0)
              {
                v132 += 7;
                BOOL v13 = v133++ >= 9;
                if (v13)
                {
                  unint64_t v134 = 0;
                  int v139 = a1[*v4];
                  goto LABEL_323;
                }
                continue;
              }
            }
            break;
          }
          int v139 = a1[*v4];
          if (a1[*v4]) {
            unint64_t v134 = 0;
          }
LABEL_323:
          int v140 = v134 & 7;
          if (v139) {
            BOOL v141 = 1;
          }
          else {
            BOOL v141 = v140 == 4;
          }
          if (!v141)
          {
            switch((v134 >> 3))
            {
              case 1u:
                if (v140 == 2) {
                  goto LABEL_364;
                }
                goto LABEL_731;
              case 2u:
                if (v140 != 2 || !PBReaderPlaceMark() || !GEOPDSearchTokenSetIsValid(a1)) {
                  goto LABEL_731;
                }
                goto LABEL_369;
              case 3u:
                if ((v134 & 7) != 0) {
                  goto LABEL_731;
                }
                unsigned int v142 = 0;
                while (1)
                {
                  uint64_t v143 = *v2;
                  uint64_t v144 = *(void *)&a1[v143];
                  unint64_t v145 = v144 + 1;
                  if (v144 == -1 || v145 > *(void *)&a1[*v3]) {
                    goto LABEL_354;
                  }
                  int v146 = *(char *)(*(void *)&a1[*v5] + v144);
                  *(void *)&a1[v143] = v145;
                  if (v146 < 0)
                  {
                    BOOL v22 = v142++ > 8;
                    if (!v22) {
                      continue;
                    }
                  }
                  goto LABEL_311;
                }
              case 4u:
                if ((v134 & 7) != 0) {
                  goto LABEL_731;
                }
                unsigned int v147 = 0;
                do
                {
                  uint64_t v148 = *v2;
                  uint64_t v149 = *(void *)&a1[v148];
                  unint64_t v150 = v149 + 1;
                  if (v149 == -1 || v150 > *(void *)&a1[*v3])
                  {
LABEL_354:
                    a1[*v4] = 1;
                    goto LABEL_311;
                  }
                  int v151 = *(char *)(*(void *)&a1[*v5] + v149);
                  *(void *)&a1[v148] = v150;
                  if ((v151 & 0x80000000) == 0) {
                    break;
                  }
                  BOOL v22 = v147++ > 8;
                }
                while (!v22);
                break;
              case 5u:
                if (v140 == 2) {
                  goto LABEL_364;
                }
                goto LABEL_731;
              case 6u:
                if (v140 != 2 || !PBReaderPlaceMark() || !GEOLatLngIsValid(a1)) {
                  goto LABEL_731;
                }
                goto LABEL_369;
              case 7u:
              case 0xAu:
                if (v140 != 2 || !PBReaderPlaceMark() || !GEOMapRegionIsValid(a1)) {
                  goto LABEL_731;
                }
                goto LABEL_369;
              case 8u:
                if (v140 == 2) {
                  goto LABEL_364;
                }
                goto LABEL_731;
              case 9u:
                if (v140 == 2) {
                  goto LABEL_364;
                }
                goto LABEL_731;
              case 0xBu:
                if (v140 != 2 || !PBReaderPlaceMark() || !GEOStructuredAddressIsValid(a1)) {
                  goto LABEL_731;
                }
LABEL_369:
                PBReaderRecallMark();
                continue;
              default:
LABEL_364:
                if ((PBReaderSkipValueWithTag() & 1) == 0) {
                  goto LABEL_731;
                }
                continue;
            }
            continue;
          }
          goto LABEL_719;
        }
      case 6u:
        if (v15 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_732;
        }
        [a1 position];
        [a1 length];
        while (2)
        {
          while (2)
          {
            if (*(void *)&a1[*v2] >= *(void *)&a1[*v3] || a1[*v4]) {
              goto LABEL_719;
            }
            char v152 = 0;
            unsigned int v153 = 0;
            unint64_t v154 = 0;
            while (1)
            {
              uint64_t v155 = *v2;
              uint64_t v156 = *(void *)&a1[v155];
              unint64_t v157 = v156 + 1;
              if (v156 == -1 || v157 > *(void *)&a1[*v3]) {
                break;
              }
              char v158 = *(unsigned char *)(*(void *)&a1[*v5] + v156);
              *(void *)&a1[v155] = v157;
              v154 |= (unint64_t)(v158 & 0x7F) << v152;
              if ((v158 & 0x80) == 0) {
                goto LABEL_383;
              }
              v152 += 7;
              BOOL v13 = v153++ >= 9;
              if (v13)
              {
                unint64_t v154 = 0;
                int v159 = a1[*v4];
                goto LABEL_385;
              }
            }
            a1[*v4] = 1;
LABEL_383:
            int v159 = a1[*v4];
            if (a1[*v4]) {
              unint64_t v154 = 0;
            }
LABEL_385:
            int v160 = v154 & 7;
            if (v159 || v160 == 4) {
              goto LABEL_719;
            }
            if ((v154 >> 3) != 2)
            {
              if ((v154 >> 3) == 1 && v160 != 2 || (PBReaderSkipValueWithTag() & 1) == 0) {
                goto LABEL_731;
              }
              continue;
            }
            break;
          }
          if (v160 == 2 && PBReaderPlaceMark() && GEOPDSearchTokenSetIsValid(a1))
          {
            PBReaderRecallMark();
            continue;
          }
          goto LABEL_731;
        }
      case 7u:
        if (v15 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_732;
        }
        [a1 position];
        [a1 length];
LABEL_402:
        while (2)
        {
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3] || a1[*v4]) {
            goto LABEL_719;
          }
          char v162 = 0;
          unsigned int v163 = 0;
          unint64_t v164 = 0;
          while (2)
          {
            uint64_t v165 = *v2;
            uint64_t v166 = *(void *)&a1[v165];
            unint64_t v167 = v166 + 1;
            if (v166 == -1 || v167 > *(void *)&a1[*v3])
            {
              a1[*v4] = 1;
            }
            else
            {
              char v168 = *(unsigned char *)(*(void *)&a1[*v5] + v166);
              *(void *)&a1[v165] = v167;
              v164 |= (unint64_t)(v168 & 0x7F) << v162;
              if (v168 < 0)
              {
                v162 += 7;
                BOOL v13 = v163++ >= 9;
                if (v13)
                {
                  unint64_t v164 = 0;
                  uint64_t v169 = *v4;
                  int v170 = a1[v169];
                  goto LABEL_414;
                }
                continue;
              }
            }
            break;
          }
          uint64_t v169 = *v4;
          int v170 = a1[v169];
          if (a1[v169]) {
            unint64_t v164 = 0;
          }
LABEL_414:
          int v171 = v164 & 7;
          if (v170) {
            BOOL v172 = 1;
          }
          else {
            BOOL v172 = v171 == 4;
          }
          if (!v172)
          {
            switch((v164 >> 3))
            {
              case 1u:
              case 9u:
                if (v171 != 2 || !PBReaderPlaceMark() || !GEOMapRegionIsValid(a1)) {
                  goto LABEL_731;
                }
                goto LABEL_426;
              case 2u:
                if (v171 != 2 || !PBReaderPlaceMark() || !GEOLatLngIsValid(a1)) {
                  goto LABEL_731;
                }
LABEL_426:
                PBReaderRecallMark();
                continue;
              case 3u:
                if ((v164 & 7) != 0) {
                  goto LABEL_731;
                }
                unsigned int v173 = 0;
                while (1)
                {
                  uint64_t v174 = *v2;
                  uint64_t v175 = *(void *)&a1[v174];
                  unint64_t v176 = v175 + 1;
                  if (v175 == -1 || v176 > *(void *)&a1[*v3]) {
                    goto LABEL_465;
                  }
                  int v177 = *(char *)(*(void *)&a1[*v5] + v175);
                  *(void *)&a1[v174] = v176;
                  if (v177 < 0)
                  {
                    BOOL v22 = v173++ > 8;
                    if (!v22) {
                      continue;
                    }
                  }
                  goto LABEL_402;
                }
              case 5u:
                if (v171 != 1) {
                  goto LABEL_731;
                }
                uint64_t v178 = *v2;
                unint64_t v179 = *(void *)&a1[v178];
                if (v179 > 0xFFFFFFFFFFFFFFF7) {
                  goto LABEL_466;
                }
                unint64_t v180 = v179 + 8;
                if (v180 > *(void *)&a1[*v3]) {
                  goto LABEL_466;
                }
                *(void *)&a1[v178] = v180;
                continue;
              case 6u:
                if ((v164 & 7) != 0) {
                  goto LABEL_731;
                }
                unsigned int v181 = 0;
                while (1)
                {
                  uint64_t v182 = *v2;
                  uint64_t v183 = *(void *)&a1[v182];
                  unint64_t v184 = v183 + 1;
                  if (v183 == -1 || v184 > *(void *)&a1[*v3]) {
                    goto LABEL_465;
                  }
                  int v185 = *(char *)(*(void *)&a1[*v5] + v183);
                  *(void *)&a1[v182] = v184;
                  if (v185 < 0)
                  {
                    BOOL v22 = v181++ > 8;
                    if (!v22) {
                      continue;
                    }
                  }
                  goto LABEL_402;
                }
              case 7u:
                if ((v164 & 7) != 0) {
                  goto LABEL_731;
                }
                unsigned int v186 = 0;
                while (1)
                {
                  uint64_t v187 = *v2;
                  uint64_t v188 = *(void *)&a1[v187];
                  unint64_t v189 = v188 + 1;
                  if (v188 == -1 || v189 > *(void *)&a1[*v3]) {
                    goto LABEL_465;
                  }
                  int v190 = *(char *)(*(void *)&a1[*v5] + v188);
                  *(void *)&a1[v187] = v189;
                  if (v190 < 0)
                  {
                    BOOL v22 = v186++ > 8;
                    if (!v22) {
                      continue;
                    }
                  }
                  goto LABEL_402;
                }
              case 8u:
                if ((v164 & 7) != 0) {
                  goto LABEL_731;
                }
                unsigned int v191 = 0;
                break;
              default:
                if ((PBReaderSkipValueWithTag() & 1) == 0) {
                  goto LABEL_731;
                }
                continue;
            }
            while (1)
            {
              uint64_t v192 = *v2;
              uint64_t v193 = *(void *)&a1[v192];
              unint64_t v194 = v193 + 1;
              if (v193 == -1 || v194 > *(void *)&a1[*v3]) {
                break;
              }
              int v195 = *(char *)(*(void *)&a1[*v5] + v193);
              *(void *)&a1[v192] = v194;
              if (v195 < 0)
              {
                BOOL v22 = v191++ > 8;
                if (!v22) {
                  continue;
                }
              }
              goto LABEL_402;
            }
LABEL_465:
            uint64_t v169 = *v4;
LABEL_466:
            a1[v169] = 1;
            continue;
          }
          goto LABEL_719;
        }
      case 8u:
        if (v15 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_732;
        }
        [a1 position];
        [a1 length];
LABEL_470:
        while (2)
        {
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3] || a1[*v4]) {
            goto LABEL_719;
          }
          char v196 = 0;
          unsigned int v197 = 0;
          unint64_t v198 = 0;
          while (2)
          {
            uint64_t v199 = *v2;
            uint64_t v200 = *(void *)&a1[v199];
            unint64_t v201 = v200 + 1;
            if (v200 == -1 || v201 > *(void *)&a1[*v3])
            {
              a1[*v4] = 1;
            }
            else
            {
              char v202 = *(unsigned char *)(*(void *)&a1[*v5] + v200);
              *(void *)&a1[v199] = v201;
              v198 |= (unint64_t)(v202 & 0x7F) << v196;
              if (v202 < 0)
              {
                v196 += 7;
                BOOL v13 = v197++ >= 9;
                if (v13)
                {
                  unint64_t v198 = 0;
                  int v203 = a1[*v4];
                  goto LABEL_482;
                }
                continue;
              }
            }
            break;
          }
          int v203 = a1[*v4];
          if (a1[*v4]) {
            unint64_t v198 = 0;
          }
LABEL_482:
          int v204 = v198 & 7;
          if (v203) {
            BOOL v205 = 1;
          }
          else {
            BOOL v205 = v204 == 4;
          }
          if (!v205)
          {
            switch((v198 >> 3))
            {
              case 1u:
                if (v204 == 2) {
                  goto LABEL_496;
                }
                goto LABEL_731;
              case 2u:
                if (v204 == 2) {
                  goto LABEL_496;
                }
                goto LABEL_731;
              case 3u:
                if (v204 != 2 || !PBReaderPlaceMark() || !GEOPDSearchTokenSetIsValid(a1)) {
                  goto LABEL_731;
                }
                goto LABEL_509;
              case 4u:
                if (v204 == 2) {
                  goto LABEL_496;
                }
                goto LABEL_731;
              case 5u:
                if ((v198 & 7) != 0) {
                  goto LABEL_731;
                }
                unsigned int v206 = 0;
                break;
              case 6u:
                if (v204 != 2 || !PBReaderPlaceMark() || !GEOPDSearchStructuredAttributeIsValid(a1)) {
                  goto LABEL_731;
                }
LABEL_509:
                PBReaderRecallMark();
                continue;
              default:
LABEL_496:
                if ((PBReaderSkipValueWithTag() & 1) == 0) {
                  goto LABEL_731;
                }
                continue;
            }
            do
            {
              uint64_t v207 = *v2;
              uint64_t v208 = *(void *)&a1[v207];
              unint64_t v209 = v208 + 1;
              if (v208 == -1 || v209 > *(void *)&a1[*v3])
              {
                a1[*v4] = 1;
                goto LABEL_470;
              }
              int v210 = *(char *)(*(void *)&a1[*v5] + v208);
              *(void *)&a1[v207] = v209;
              if ((v210 & 0x80000000) == 0) {
                break;
              }
              BOOL v22 = v206++ > 8;
            }
            while (!v22);
            continue;
          }
          goto LABEL_719;
        }
      case 9u:
        if (v15 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_732;
        }
        [a1 position];
        [a1 length];
LABEL_514:
        while (2)
        {
          if (*(void *)&a1[*v2] < *(void *)&a1[*v3] && !a1[*v4])
          {
            char v211 = 0;
            unsigned int v212 = 0;
            unint64_t v213 = 0;
            while (1)
            {
              uint64_t v214 = *v2;
              uint64_t v215 = *(void *)&a1[v214];
              unint64_t v216 = v215 + 1;
              if (v215 == -1 || v216 > *(void *)&a1[*v3]) {
                break;
              }
              char v217 = *(unsigned char *)(*(void *)&a1[*v5] + v215);
              *(void *)&a1[v214] = v216;
              v213 |= (unint64_t)(v217 & 0x7F) << v211;
              if ((v217 & 0x80) == 0) {
                goto LABEL_524;
              }
              v211 += 7;
              BOOL v13 = v212++ >= 9;
              if (v13)
              {
                unint64_t v213 = 0;
                int v218 = a1[*v4];
                goto LABEL_526;
              }
            }
            a1[*v4] = 1;
LABEL_524:
            int v218 = a1[*v4];
            if (a1[*v4]) {
              unint64_t v213 = 0;
            }
LABEL_526:
            int v219 = v213 & 7;
            if (!v218 && v219 != 4)
            {
              if ((v213 >> 3) != 2)
              {
                if ((v213 >> 3) != 1)
                {
                  if (!PBReaderSkipValueWithTag()) {
                    goto LABEL_731;
                  }
                  continue;
                }
                if (v219 != 2 || (PBReaderSkipValueWithTag() & 1) == 0) {
                  goto LABEL_731;
                }
                continue;
              }
              if ((v213 & 7) == 0)
              {
                unsigned int v221 = 0;
                do
                {
                  uint64_t v222 = *v2;
                  uint64_t v223 = *(void *)&a1[v222];
                  unint64_t v224 = v223 + 1;
                  if (v223 == -1 || v224 > *(void *)&a1[*v3])
                  {
                    a1[*v4] = 1;
                    goto LABEL_514;
                  }
                  int v225 = *(char *)(*(void *)&a1[*v5] + v223);
                  *(void *)&a1[v222] = v224;
                  if ((v225 & 0x80000000) == 0) {
                    break;
                  }
                  BOOL v22 = v221++ > 8;
                }
                while (!v22);
                continue;
              }
              goto LABEL_731;
            }
          }
          break;
        }
        int v298 = a1[*v4];
        PBReaderRecallMark();
        if (v298) {
          goto LABEL_732;
        }
        goto LABEL_720;
      case 0xAu:
        if (v15 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_732;
        }
        [a1 position];
        [a1 length];
        while (2)
        {
          while (2)
          {
            if (*(void *)&a1[*v2] >= *(void *)&a1[*v3] || a1[*v4]) {
              goto LABEL_719;
            }
            char v226 = 0;
            unsigned int v227 = 0;
            unint64_t v228 = 0;
            while (2)
            {
              uint64_t v229 = *v2;
              uint64_t v230 = *(void *)&a1[v229];
              unint64_t v231 = v230 + 1;
              if (v230 == -1 || v231 > *(void *)&a1[*v3])
              {
                a1[*v4] = 1;
              }
              else
              {
                char v232 = *(unsigned char *)(*(void *)&a1[*v5] + v230);
                *(void *)&a1[v229] = v231;
                v228 |= (unint64_t)(v232 & 0x7F) << v226;
                if (v232 < 0)
                {
                  v226 += 7;
                  BOOL v13 = v227++ >= 9;
                  if (v13)
                  {
                    unint64_t v228 = 0;
                    int v233 = a1[*v4];
                    goto LABEL_561;
                  }
                  continue;
                }
              }
              break;
            }
            int v233 = a1[*v4];
            if (a1[*v4]) {
              unint64_t v228 = 0;
            }
LABEL_561:
            int v234 = v228 & 7;
            if (v233) {
              BOOL v235 = 1;
            }
            else {
              BOOL v235 = v234 == 4;
            }
            if (v235) {
              goto LABEL_719;
            }
            if ((v228 >> 3) != 1)
            {
              if ((PBReaderSkipValueWithTag() & 1) == 0) {
                goto LABEL_731;
              }
              continue;
            }
            break;
          }
          if (v234 == 2 && PBReaderPlaceMark() && GEOPDSSearchFilterIsValid(a1))
          {
            PBReaderRecallMark();
            continue;
          }
          goto LABEL_731;
        }
      case 0xBu:
        if (v15 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_732;
        }
        [a1 position];
        [a1 length];
        while (2)
        {
          while (2)
          {
            if (*(void *)&a1[*v2] >= *(void *)&a1[*v3] || a1[*v4]) {
              goto LABEL_719;
            }
            char v236 = 0;
            unsigned int v237 = 0;
            unint64_t v238 = 0;
            while (2)
            {
              uint64_t v239 = *v2;
              uint64_t v240 = *(void *)&a1[v239];
              unint64_t v241 = v240 + 1;
              if (v240 == -1 || v241 > *(void *)&a1[*v3])
              {
                a1[*v4] = 1;
              }
              else
              {
                char v242 = *(unsigned char *)(*(void *)&a1[*v5] + v240);
                *(void *)&a1[v239] = v241;
                v238 |= (unint64_t)(v242 & 0x7F) << v236;
                if (v242 < 0)
                {
                  v236 += 7;
                  BOOL v13 = v237++ >= 9;
                  if (v13)
                  {
                    unint64_t v238 = 0;
                    int v243 = a1[*v4];
                    goto LABEL_587;
                  }
                  continue;
                }
              }
              break;
            }
            int v243 = a1[*v4];
            if (a1[*v4]) {
              unint64_t v238 = 0;
            }
LABEL_587:
            int v244 = v238 & 7;
            if (v243) {
              BOOL v245 = 1;
            }
            else {
              BOOL v245 = v244 == 4;
            }
            if (v245) {
              goto LABEL_719;
            }
            if ((v238 >> 3) != 1)
            {
              if ((PBReaderSkipValueWithTag() & 1) == 0) {
                goto LABEL_731;
              }
              continue;
            }
            break;
          }
          if (v244 == 2 && PBReaderPlaceMark() && GEOPDDirectionIntentIsValid(a1))
          {
            PBReaderRecallMark();
            continue;
          }
          goto LABEL_731;
        }
      case 0xCu:
        if (v15 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_732;
        }
        [a1 position];
        [a1 length];
LABEL_601:
        while (2)
        {
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3] || a1[*v4]) {
            goto LABEL_719;
          }
          char v246 = 0;
          unsigned int v247 = 0;
          unint64_t v248 = 0;
          while (2)
          {
            uint64_t v249 = *v2;
            uint64_t v250 = *(void *)&a1[v249];
            unint64_t v251 = v250 + 1;
            if (v250 == -1 || v251 > *(void *)&a1[*v3])
            {
              a1[*v4] = 1;
            }
            else
            {
              char v252 = *(unsigned char *)(*(void *)&a1[*v5] + v250);
              *(void *)&a1[v249] = v251;
              v248 |= (unint64_t)(v252 & 0x7F) << v246;
              if (v252 < 0)
              {
                v246 += 7;
                BOOL v13 = v247++ >= 9;
                if (v13)
                {
                  unint64_t v248 = 0;
                  int v253 = a1[*v4];
                  goto LABEL_613;
                }
                continue;
              }
            }
            break;
          }
          int v253 = a1[*v4];
          if (a1[*v4]) {
            unint64_t v248 = 0;
          }
LABEL_613:
          int v254 = v248 & 7;
          if (v253) {
            BOOL v255 = 1;
          }
          else {
            BOOL v255 = v254 == 4;
          }
          if (!v255)
          {
            switch((v248 >> 3))
            {
              case 1u:
                if (v254 == 2) {
                  goto LABEL_619;
                }
                goto LABEL_731;
              case 2u:
                if (v254 != 2 || !PBReaderPlaceMark() || !GEOPDSearchTokenSetIsValid(a1)) {
                  goto LABEL_731;
                }
                PBReaderRecallMark();
                continue;
              case 3u:
                if ((v248 & 7) != 0) {
                  goto LABEL_731;
                }
                unsigned int v256 = 0;
                while (1)
                {
                  uint64_t v257 = *v2;
                  uint64_t v258 = *(void *)&a1[v257];
                  unint64_t v259 = v258 + 1;
                  if (v258 == -1 || v259 > *(void *)&a1[*v3]) {
                    goto LABEL_641;
                  }
                  int v260 = *(char *)(*(void *)&a1[*v5] + v258);
                  *(void *)&a1[v257] = v259;
                  if (v260 < 0)
                  {
                    BOOL v22 = v256++ > 8;
                    if (!v22) {
                      continue;
                    }
                  }
                  goto LABEL_601;
                }
              case 4u:
                if ((v248 & 7) != 0) {
                  goto LABEL_731;
                }
                unsigned int v261 = 0;
                do
                {
                  uint64_t v262 = *v2;
                  uint64_t v263 = *(void *)&a1[v262];
                  unint64_t v264 = v263 + 1;
                  if (v263 == -1 || v264 > *(void *)&a1[*v3])
                  {
LABEL_641:
                    a1[*v4] = 1;
                    goto LABEL_601;
                  }
                  int v265 = *(char *)(*(void *)&a1[*v5] + v263);
                  *(void *)&a1[v262] = v264;
                  if ((v265 & 0x80000000) == 0) {
                    break;
                  }
                  BOOL v22 = v261++ > 8;
                }
                while (!v22);
                break;
              default:
LABEL_619:
                if ((PBReaderSkipValueWithTag() & 1) == 0) {
                  goto LABEL_731;
                }
                continue;
            }
            continue;
          }
          goto LABEL_719;
        }
      case 0xDu:
        if (v15 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_732;
        }
        [a1 position];
        [a1 length];
        while (2)
        {
          while (2)
          {
            if (*(void *)&a1[*v2] >= *(void *)&a1[*v3] || a1[*v4]) {
              goto LABEL_719;
            }
            char v266 = 0;
            unsigned int v267 = 0;
            unint64_t v268 = 0;
            while (1)
            {
              uint64_t v269 = *v2;
              uint64_t v270 = *(void *)&a1[v269];
              unint64_t v271 = v270 + 1;
              if (v270 == -1 || v271 > *(void *)&a1[*v3]) {
                break;
              }
              char v272 = *(unsigned char *)(*(void *)&a1[*v5] + v270);
              *(void *)&a1[v269] = v271;
              v268 |= (unint64_t)(v272 & 0x7F) << v266;
              if ((v272 & 0x80) == 0) {
                goto LABEL_655;
              }
              v266 += 7;
              BOOL v13 = v267++ >= 9;
              if (v13)
              {
                unint64_t v268 = 0;
                int v273 = a1[*v4];
                goto LABEL_657;
              }
            }
            a1[*v4] = 1;
LABEL_655:
            int v273 = a1[*v4];
            if (a1[*v4]) {
              unint64_t v268 = 0;
            }
LABEL_657:
            int v274 = v268 & 7;
            if (v273 || v274 == 4) {
              goto LABEL_719;
            }
            if ((v268 >> 3) != 2)
            {
              if ((v268 >> 3) == 1 && v274 != 2 || (PBReaderSkipValueWithTag() & 1) == 0) {
                goto LABEL_731;
              }
              continue;
            }
            break;
          }
          if (v274 == 2 && PBReaderPlaceMark() && GEOPDSearchTokenSetIsValid(a1))
          {
            PBReaderRecallMark();
            continue;
          }
          goto LABEL_731;
        }
      case 0xEu:
        if ((v8 & 7) != 0) {
          goto LABEL_732;
        }
        unsigned int v276 = 0;
        while (1)
        {
          uint64_t v277 = *v2;
          uint64_t v278 = *(void *)&a1[v277];
          unint64_t v279 = v278 + 1;
          if (v278 == -1 || v279 > *(void *)&a1[*v3]) {
            break;
          }
          int v280 = *(char *)(*(void *)&a1[*v5] + v278);
          *(void *)&a1[v277] = v279;
          if (v280 < 0)
          {
            BOOL v22 = v276++ > 8;
            if (!v22) {
              continue;
            }
          }
          goto LABEL_721;
        }
LABEL_679:
        a1[*v4] = 1;
        goto LABEL_721;
      case 0xFu:
        if (v15 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_732;
        }
        [a1 position];
        [a1 length];
LABEL_683:
        while (2)
        {
          if (*(void *)&a1[*v2] < *(void *)&a1[*v3] && !a1[*v4])
          {
            char v281 = 0;
            unsigned int v282 = 0;
            unint64_t v283 = 0;
            while (1)
            {
              uint64_t v284 = *v2;
              uint64_t v285 = *(void *)&a1[v284];
              unint64_t v286 = v285 + 1;
              if (v285 == -1 || v286 > *(void *)&a1[*v3]) {
                break;
              }
              char v287 = *(unsigned char *)(*(void *)&a1[*v5] + v285);
              *(void *)&a1[v284] = v286;
              v283 |= (unint64_t)(v287 & 0x7F) << v281;
              if ((v287 & 0x80) == 0) {
                goto LABEL_693;
              }
              v281 += 7;
              BOOL v13 = v282++ >= 9;
              if (v13)
              {
                unint64_t v283 = 0;
                int v288 = a1[*v4];
                goto LABEL_695;
              }
            }
            a1[*v4] = 1;
LABEL_693:
            int v288 = a1[*v4];
            if (a1[*v4]) {
              unint64_t v283 = 0;
            }
LABEL_695:
            int v289 = v283 & 7;
            if (!v288 && v289 != 4)
            {
              unint64_t v291 = v283 >> 3;
              if ((v283 >> 3) == 3)
              {
                if ((v283 & 7) == 0)
                {
                  unsigned int v292 = 0;
                  do
                  {
                    uint64_t v293 = *v2;
                    uint64_t v294 = *(void *)&a1[v293];
                    unint64_t v295 = v294 + 1;
                    if (v294 == -1 || v295 > *(void *)&a1[*v3])
                    {
                      a1[*v4] = 1;
                      goto LABEL_683;
                    }
                    int v296 = *(char *)(*(void *)&a1[*v5] + v294);
                    *(void *)&a1[v293] = v295;
                    if ((v296 & 0x80000000) == 0) {
                      break;
                    }
                    BOOL v22 = v292++ > 8;
                  }
                  while (!v22);
                  continue;
                }
              }
              else
              {
                if (v291 != 2)
                {
                  if (v291 == 1 && v289 != 2 || (PBReaderSkipValueWithTag() & 1) == 0) {
                    goto LABEL_731;
                  }
                  continue;
                }
                if (v289 == 2 && PBReaderPlaceMark() && GEOPDSearchTokenSetIsValid(a1))
                {
                  PBReaderRecallMark();
                  continue;
                }
              }
              goto LABEL_731;
            }
          }
          break;
        }
LABEL_719:
        int v297 = a1[*v4];
        PBReaderRecallMark();
        if (v297) {
          goto LABEL_732;
        }
        goto LABEL_720;
      case 0x10u:
        if (v15 == 2) {
          goto LABEL_724;
        }
        goto LABEL_732;
      default:
LABEL_724:
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_732;
        }
        goto LABEL_721;
    }
  }
}

void sub_189985C60(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDSearchIntentIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 136));
  unsigned int v2 = *(_DWORD *)(a1 + 148);
  if ((v2 & 0x10000) != 0) {
    return 1;
  }
  if ((v2 & 0x10) != 0)
  {
    unint64_t v3 = *(os_unfair_lock_s **)(a1 + 32);
    if (v3)
    {
      os_unfair_lock_lock_with_options();
      char IsDirty = _GEOPDSearchCategoryIntentIsDirty((uint64_t)v3);
      os_unfair_lock_unlock(v3 + 34);
      if (IsDirty) {
        return 1;
      }
      unsigned int v2 = *(_DWORD *)(a1 + 148);
    }
  }
  if ((v2 & 0x20) != 0)
  {
    uint64_t v5 = *(os_unfair_lock_s **)(a1 + 40);
    if (v5)
    {
      os_unfair_lock_lock_with_options();
      char v6 = _GEOPDSearchChainIntentIsDirty((uint64_t)v5);
      os_unfair_lock_unlock(v5 + 32);
      if (v6) {
        return 1;
      }
    }
    unsigned int v2 = *(_DWORD *)(a1 + 148);
  }
  if ((v2 & 8) != 0)
  {
    unsigned int v7 = *(os_unfair_lock_s **)(a1 + 24);
    if (v7)
    {
      os_unfair_lock_lock_with_options();
      char v8 = _GEOPDSearchBusinessIntentIsDirty((uint64_t)v7);
      os_unfair_lock_unlock(v7 + 22);
      if (v8) {
        return 1;
      }
    }
    unsigned int v2 = *(_DWORD *)(a1 + 148);
  }
  if ((v2 & 0x100) != 0)
  {
    uint64_t v9 = *(os_unfair_lock_s **)(a1 + 64);
    if (v9)
    {
      os_unfair_lock_lock_with_options();
      char v10 = _GEOPDSearchGeoIntentIsDirty((uint64_t)v9);
      os_unfair_lock_unlock(v9 + 26);
      if (v10) {
        return 1;
      }
    }
    unsigned int v2 = *(_DWORD *)(a1 + 148);
  }
  if ((v2 & 0x2000) != 0)
  {
    unint64_t v11 = *(os_unfair_lock_s **)(a1 + 104);
    if (v11)
    {
      os_unfair_lock_lock_with_options();
      BOOL v12 = _GEOPDSearchProximityIntentIsDirty((uint64_t)v11);
      os_unfair_lock_unlock(v11 + 10);
      if (v12) {
        return 1;
      }
    }
    unsigned int v2 = *(_DWORD *)(a1 + 148);
  }
  if ((v2 & 0x800) != 0)
  {
    uint64_t v13 = *(void *)(a1 + 88);
    if (v13)
    {
      os_unfair_lock_lock_with_options();
      os_unfair_lock_assert_owner((const os_unfair_lock *)(v13 + 64));
      int v14 = *(_WORD *)(v13 + 76) & 0x1E0;
      os_unfair_lock_unlock((os_unfair_lock_t)(v13 + 64));
      if (v14) {
        return 1;
      }
    }
    unsigned int v2 = *(_DWORD *)(a1 + 148);
  }
  if ((v2 & 4) != 0)
  {
    int v15 = *(os_unfair_lock_s **)(a1 + 16);
    if (v15)
    {
      os_unfair_lock_lock_with_options();
      char v16 = _GEOPDSearchAttributeIntentIsDirty((uint64_t)v15);
      os_unfair_lock_unlock(v15 + 16);
      if (v16) {
        return 1;
      }
    }
    unsigned int v2 = *(_DWORD *)(a1 + 148);
  }
  if ((v2 & 0x40C0) != 0) {
    return 1;
  }
  if ((v2 & 0x8000) != 0)
  {
    if (GEOPDSearchTransitIntentIsDirty(*(os_unfair_lock_s **)(a1 + 120))) {
      return 1;
    }
    unsigned int v2 = *(_DWORD *)(a1 + 148);
  }
  if ((v2 & 0x1000) != 0)
  {
    if (GEOPDSearchPhoneNumberIntentIsDirty(*(os_unfair_lock_s **)(a1 + 96))) {
      return 1;
    }
    unsigned int v2 = *(_DWORD *)(a1 + 148);
  }
  if ((v2 & 0x200) != 0)
  {
    if (GEOPDSearchKeywordIntentIsDirty(*(os_unfair_lock_s **)(a1 + 72))) {
      return 1;
    }
    unsigned int v2 = *(_DWORD *)(a1 + 148);
  }
  return (v2 >> 10) & 1;
}

os_unfair_lock_s *GEOPDSearchIntentIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOPDSearchIntentIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 34);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_189986518(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchKeywordIntentReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 36);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 32)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  int v11 = ((*(unsigned __int8 *)(a1 + 48) >> 1) & 1) + ((*(unsigned __int8 *)(a1 + 48) >> 2) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v9])
    {
      case -3:
        char v8 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v12 = v7;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        int v14 = v10 & 1 | v11;
        if ((v14 != 0) | v8 & 1) {
          int v15 = 0;
        }
        else {
          int v15 = a3;
        }
        BOOL v16 = v14 != 0;
        if (v14) {
          BOOL v17 = 1;
        }
        else {
          BOOL v17 = v15 == 0;
        }
        BOOL v59 = v17;
        uint64_t v18 = (int *)MEMORY[0x1E4F940E8];
        uint64_t v19 = (int *)MEMORY[0x1E4F940C8];
        unint64_t v20 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v11;
LABEL_6:
        uint64_t v12 = v7;
        uint64_t v13 = v10;
LABEL_8:
        ++v9;
        uint64_t v7 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v18) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v19)) {
      goto LABEL_76;
    }
    char v21 = 0;
    unsigned int v22 = 0;
    unint64_t v23 = 0;
    while (1)
    {
      uint64_t v24 = *v18;
      uint64_t v25 = *(void *)(v3 + v24);
      unint64_t v26 = v25 + 1;
      if (v25 == -1 || v26 > *(void *)(v3 + *v6)) {
        break;
      }
      char v27 = *(unsigned char *)(*(void *)(v3 + *v20) + v25);
      *(void *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0) {
        goto LABEL_26;
      }
      v21 += 7;
      BOOL v28 = v22++ >= 9;
      if (v28)
      {
        unint64_t v23 = 0;
        int v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_28;
      }
    }
    *(unsigned char *)(v3 + *v19) = 1;
LABEL_26:
    int v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(unsigned char *)(v3 + *v19)) {
      unint64_t v23 = 0;
    }
LABEL_28:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_76:
      if (v16)
      {
        char v52 = 1;
        goto LABEL_91;
      }
      if (!v15) {
        goto LABEL_92;
      }
      while (1)
      {
        int v55 = *v15++;
        int v54 = v55;
        if (v55 == 1) {
          break;
        }
        if (v54 == 2)
        {
          char v53 = 4;
LABEL_82:
          *(unsigned char *)(a1 + 48) |= v53;
        }
        else if (!v54)
        {
          goto LABEL_92;
        }
      }
      char v53 = 2;
      goto LABEL_82;
    }
    unint64_t v31 = v23 >> 3;
    BOOL v32 = v16;
    if (!v59)
    {
      uint64_t v33 = v15;
      do
      {
        int v35 = *v33++;
        int v34 = v35;
        BOOL v32 = v35 != 0;
        if (v35) {
          BOOL v36 = v34 == v31;
        }
        else {
          BOOL v36 = 1;
        }
      }
      while (!v36);
    }
    if (v31 == 3)
    {
      if (v8)
      {
        char v39 = 0;
        unsigned int v40 = 0;
        uint64_t v41 = 0;
        *(unsigned char *)(a1 + 48) |= 1u;
        while (1)
        {
          uint64_t v42 = *v18;
          uint64_t v43 = *(void *)(v3 + v42);
          unint64_t v44 = v43 + 1;
          if (v43 == -1 || v44 > *(void *)(v3 + *v6)) {
            break;
          }
          char v45 = *(unsigned char *)(*(void *)(v3 + *v20) + v43);
          *(void *)(v3 + v42) = v44;
          v41 |= (unint64_t)(v45 & 0x7F) << v39;
          if ((v45 & 0x80) == 0) {
            goto LABEL_63;
          }
          v39 += 7;
          BOOL v28 = v40++ >= 9;
          if (v28)
          {
            uint64_t v41 = 0;
            goto LABEL_65;
          }
        }
        *(unsigned char *)(v3 + *v19) = 1;
LABEL_63:
        if (*(unsigned char *)(v3 + *v19)) {
          uint64_t v41 = 0;
        }
LABEL_65:
        *(unsigned char *)(a1 + 44) = v41 != 0;
        goto LABEL_72;
      }
      goto LABEL_60;
    }
    if (v31 == 2) {
      break;
    }
    if (v31 != 1)
    {
      int v48 = PBReaderSkipValueWithTag();
      uint64_t v19 = (int *)MEMORY[0x1E4F940C8];
      if (!v48) {
        goto LABEL_87;
      }
      goto LABEL_72;
    }
    if (v32)
    {
      if ((*(unsigned char *)(a1 + 48) & 2) == 0)
      {
        uint64_t v37 = PBReaderReadString();
        int v38 = *(void **)(a1 + 16);
        *(void *)(a1 + 16) = v37;

        --v9;
LABEL_71:
        uint64_t v19 = (int *)MEMORY[0x1E4F940C8];
        goto LABEL_72;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        goto LABEL_88;
      }
      char v50 = *(unsigned char *)(a1 + 48) << 6;
LABEL_70:
      v9 += v50 >> 7;
      goto LABEL_71;
    }
LABEL_60:
    char v49 = PBReaderSkipValueWithTag();
    uint64_t v19 = (int *)MEMORY[0x1E4F940C8];
    if ((v49 & 1) == 0)
    {
LABEL_87:
      char v52 = 0;
      goto LABEL_91;
    }
LABEL_72:
    if (v9) {
      char v51 = 1;
    }
    else {
      char v51 = v16;
    }
    if ((v51 & 1) == 0) {
      goto LABEL_76;
    }
  }
  if (!v32) {
    goto LABEL_60;
  }
  if ((*(unsigned char *)(a1 + 48) & 4) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0)
    {
LABEL_88:
      char v52 = 0;
      goto LABEL_90;
    }
    char v50 = 32 * *(unsigned char *)(a1 + 48);
    goto LABEL_70;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_88;
  }
  BOOL v58 = v16;
  int v46 = objc_alloc_init(GEOPDSearchTokenSet);
  if (GEOPDSearchTokenSetReadAllFrom((uint64_t)v46, (void *)v3, v7 & 1))
  {
    PBReaderRecallMark();
    int v47 = *(void **)(a1 + 24);
    *(void *)(a1 + 24) = v46;

    --v9;
    BOOL v16 = v58;
    goto LABEL_71;
  }

  char v52 = 0;
  BOOL v16 = v58;
LABEL_90:
  uint64_t v19 = (int *)MEMORY[0x1E4F940C8];
LABEL_91:
  *(unsigned char *)(a1 + 48) |= 2u;
  *(unsigned char *)(a1 + 48) |= 4u;
  if (v52)
  {
LABEL_92:
    unint64_t v3 = *(unsigned char *)(v3 + *v19) == 0;
    if (v16) {
      goto LABEL_93;
    }
  }
  else
  {
    unint64_t v3 = 0;
    if (v16)
    {
LABEL_93:
      uint64_t v56 = *(void **)(a1 + 8);
      *(void *)(a1 + 8) = 0;
    }
  }
  return v3;
}

void sub_1899873E4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1899874DC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchKeywordIntentReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 36))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDSearchKeywordIntentReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 40));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 32) = [v8 position];
  *(_DWORD *)(a1 + 36) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOPDSearchKeywordIntentReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOPDSearchKeywordIntentReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDSearchKeywordIntentReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    -[GEOPDSearchTokenSet readAll:](*(void *)(a1 + 24), 1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return Specified;
}

void sub_189987684(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189987824(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL _GEOPDSearchKeywordIntentIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  if ((*(unsigned char *)(a1 + 48) & 0xA) != 0) {
    return 1;
  }
  if ((*(unsigned char *)(a1 + 48) & 4) == 0) {
    return 0;
  }
  uint64_t v3 = *(void *)(a1 + 24);

  return GEOPDSearchTokenSetIsDirty(v3);
}

os_unfair_lock_s *GEOPDSearchKeywordIntentIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    BOOL IsDirty = _GEOPDSearchKeywordIntentIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 10);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_189987A98(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSearchKeywordMappingReadAllFrom(uint64_t a1, void *a2, int a3)
{
  uint64_t v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    char v6 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v7 = (int *)MEMORY[0x1E4F940E0];
    id v8 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v5[*MEMORY[0x1E4F940E8]] < *(void *)&v5[*MEMORY[0x1E4F940E0]])
    {
      uint64_t v9 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v5[*v8]) {
          break;
        }
        char v10 = 0;
        unsigned int v11 = 0;
        unint64_t v12 = 0;
        while (1)
        {
          uint64_t v13 = *v6;
          uint64_t v14 = *(void *)&v5[v13];
          unint64_t v15 = v14 + 1;
          if (v14 == -1 || v15 > *(void *)&v5[*v7]) {
            break;
          }
          char v16 = *(unsigned char *)(*(void *)&v5[*v9] + v14);
          *(void *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0) {
            goto LABEL_13;
          }
          v10 += 7;
          BOOL v17 = v11++ >= 9;
          if (v17)
          {
            unint64_t v12 = 0;
            int v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        int v18 = v5[*v8];
        if (v5[*v8]) {
          unint64_t v12 = 0;
        }
LABEL_15:
        if (v18 || (v12 & 7) == 4) {
          break;
        }
        if ((v12 >> 3) == 2)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_40;
          }
          char v27 = objc_alloc_init(GEOLocalizedString);
          if (!GEOLocalizedStringReadAllFrom((uint64_t)v27, v5, a3))
          {

            goto LABEL_40;
          }
          PBReaderRecallMark();
          -[GEOPDSearchKeywordMapping addLocalizedName:](a1, v27);
        }
        else if ((v12 >> 3) == 1)
        {
          char v20 = 0;
          unsigned int v21 = 0;
          uint64_t v22 = 0;
          *(unsigned char *)(a1 + 24) |= 1u;
          while (1)
          {
            uint64_t v23 = *v6;
            uint64_t v24 = *(void *)&v5[v23];
            unint64_t v25 = v24 + 1;
            if (v24 == -1 || v25 > *(void *)&v5[*v7]) {
              break;
            }
            char v26 = *(unsigned char *)(*(void *)&v5[*v9] + v24);
            *(void *)&v5[v23] = v25;
            v22 |= (unint64_t)(v26 & 0x7F) << v20;
            if ((v26 & 0x80) == 0) {
              goto LABEL_34;
            }
            v20 += 7;
            BOOL v17 = v21++ >= 9;
            if (v17)
            {
              uint64_t v22 = 0;
              goto LABEL_36;
            }
          }
          v5[*v8] = 1;
LABEL_34:
          if (v5[*v8]) {
            uint64_t v22 = 0;
          }
LABEL_36:
          *(void *)(a1 + 16) = v22;
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_40;
        }
      }
      while (*(void *)&v5[*v6] < *(void *)&v5[*v7]);
    }
    BOOL v28 = v5[*v8] == 0;
  }
  else
  {
LABEL_40:
    BOOL v28 = 0;
  }
  objc_sync_exit(v5);

  return v28;
}

void sub_189988498(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1899889F0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchLocationIntentReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 60);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 56)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  unsigned int v11 = ((*(unsigned __int16 *)(a1 + 76) >> 7) & 1)
      + ((*(unsigned __int16 *)(a1 + 76) >> 5) & 1)
      + ((*(unsigned __int16 *)(a1 + 76) >> 6) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v7])
    {
      case -3:
        char v8 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        int v14 = v10 | (v11 > 1);
        if ((v14 | v8)) {
          unint64_t v15 = 0;
        }
        else {
          unint64_t v15 = a3;
        }
        LODWORD(v16) = v14;
        char v80 = (v15 == 0) | v14;
        BOOL v17 = (int *)MEMORY[0x1E4F940E8];
        int v18 = (int *)MEMORY[0x1E4F940C8];
        uint64_t v19 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v11;
LABEL_6:
        uint64_t v12 = v9;
        uint64_t v13 = v10;
LABEL_8:
        ++v7;
        uint64_t v9 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v17) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v18)) {
      goto LABEL_121;
    }
    char v20 = 0;
    unsigned int v21 = 0;
    unint64_t v22 = 0;
    while (1)
    {
      uint64_t v23 = *v17;
      uint64_t v24 = *(void *)(v3 + v23);
      unint64_t v25 = v24 + 1;
      if (v24 == -1 || v25 > *(void *)(v3 + *v6)) {
        break;
      }
      char v26 = *(unsigned char *)(*(void *)(v3 + *v19) + v24);
      *(void *)(v3 + v23) = v25;
      v22 |= (unint64_t)(v26 & 0x7F) << v20;
      if ((v26 & 0x80) == 0) {
        goto LABEL_23;
      }
      v20 += 7;
      BOOL v27 = v21++ >= 9;
      if (v27)
      {
        unint64_t v22 = 0;
        int v28 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_25;
      }
    }
    *(unsigned char *)(v3 + *v18) = 1;
LABEL_23:
    int v28 = *(unsigned __int8 *)(v3 + *v18);
    if (*(unsigned char *)(v3 + *v18)) {
      unint64_t v22 = 0;
    }
LABEL_25:
    if (v28 || (v22 & 7) == 4)
    {
LABEL_121:
      if (v16)
      {
        char v74 = 1;
        goto LABEL_133;
      }
      if (v15)
      {
        while (1)
        {
          int v76 = *v15++;
          __int16 v75 = 128;
          switch(v76)
          {
            case 0:
              goto LABEL_134;
            case 1:
              goto LABEL_127;
            case 2:
              __int16 v75 = 32;
              goto LABEL_127;
            case 9:
              __int16 v75 = 64;
LABEL_127:
              *(_WORD *)(a1 + 76) |= v75;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_134;
    }
    unint64_t v30 = v22 >> 3;
    BOOL v31 = (char)v16;
    if ((v80 & 1) == 0)
    {
      BOOL v32 = v15;
      do
      {
        int v34 = *v32++;
        int v33 = v34;
        BOOL v31 = v34 != 0;
        if (v34) {
          BOOL v35 = v33 == v30;
        }
        else {
          BOOL v35 = 1;
        }
      }
      while (!v35);
    }
    switch((int)v30)
    {
      case 1:
        if (!v31) {
          goto LABEL_91;
        }
        if ((*(_WORD *)(a1 + 76) & 0x80) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_130;
          }
          int v79 = (int)v16;
          char v16 = objc_alloc_init(GEOMapRegion);
          if (GEOMapRegionReadAllFrom((uint64_t)v16, (void *)v3))
          {
            PBReaderRecallMark();
            uint64_t v36 = 40;
            goto LABEL_90;
          }
          goto LABEL_131;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_130;
        }
        __int16 v73 = *(_WORD *)(a1 + 76) << 8;
        goto LABEL_116;
      case 2:
        if (!v31) {
          goto LABEL_91;
        }
        if ((*(_WORD *)(a1 + 76) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_130;
          }
          __int16 v73 = *(_WORD *)(a1 + 76) << 10;
          goto LABEL_116;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_130;
        }
        int v79 = (int)v16;
        char v16 = objc_alloc_init(GEOLatLng);
        if (!GEOLatLngReadAllFrom((uint64_t)v16, (void *)v3)) {
          goto LABEL_131;
        }
        PBReaderRecallMark();
        uint64_t v36 = 16;
        goto LABEL_90;
      case 3:
        if ((v8 & 1) == 0) {
          goto LABEL_91;
        }
        char v37 = 0;
        unsigned int v38 = 0;
        uint64_t v39 = 0;
        *(_WORD *)(a1 + 76) |= 4u;
        while (2)
        {
          uint64_t v40 = *v17;
          uint64_t v41 = *(void *)(v3 + v40);
          unint64_t v42 = v41 + 1;
          if (v41 == -1 || v42 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v43 = *(unsigned char *)(*(void *)(v3 + *v19) + v41);
            *(void *)(v3 + v40) = v42;
            v39 |= (unint64_t)(v43 & 0x7F) << v37;
            if (v43 < 0)
            {
              v37 += 7;
              BOOL v27 = v38++ >= 9;
              if (v27)
              {
                LODWORD(v39) = 0;
                goto LABEL_96;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          LODWORD(v39) = 0;
        }
LABEL_96:
        *(_DWORD *)(a1 + 68) = v39;
        goto LABEL_120;
      case 5:
        if ((v8 & 1) == 0) {
          goto LABEL_91;
        }
        *(_WORD *)(a1 + 76) |= 1u;
        uint64_t v45 = *v17;
        unint64_t v46 = *(void *)(v3 + v45);
        if (v46 <= 0xFFFFFFFFFFFFFFF7 && v46 + 8 <= *(void *)(v3 + *v6))
        {
          uint64_t v47 = *(void *)(*(void *)(v3 + *v19) + v46);
          *(void *)(v3 + v45) = v46 + 8;
        }
        else
        {
          *(unsigned char *)(v3 + *v18) = 1;
          uint64_t v47 = 0;
        }
        *(void *)(a1 + 32) = v47;
        goto LABEL_120;
      case 6:
        if ((v8 & 1) == 0) {
          goto LABEL_91;
        }
        char v48 = 0;
        unsigned int v49 = 0;
        uint64_t v50 = 0;
        *(_WORD *)(a1 + 76) |= 8u;
        while (2)
        {
          uint64_t v51 = *v17;
          uint64_t v52 = *(void *)(v3 + v51);
          unint64_t v53 = v52 + 1;
          if (v52 == -1 || v53 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v54 = *(unsigned char *)(*(void *)(v3 + *v19) + v52);
            *(void *)(v3 + v51) = v53;
            v50 |= (unint64_t)(v54 & 0x7F) << v48;
            if (v54 < 0)
            {
              v48 += 7;
              BOOL v27 = v49++ >= 9;
              if (v27)
              {
                uint64_t v50 = 0;
                goto LABEL_100;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          uint64_t v50 = 0;
        }
LABEL_100:
        BOOL v71 = v50 != 0;
        uint64_t v72 = 72;
        goto LABEL_109;
      case 7:
        if ((v8 & 1) == 0) {
          goto LABEL_91;
        }
        char v55 = 0;
        unsigned int v56 = 0;
        uint64_t v57 = 0;
        *(_WORD *)(a1 + 76) |= 2u;
        while (2)
        {
          uint64_t v58 = *v17;
          uint64_t v59 = *(void *)(v3 + v58);
          unint64_t v60 = v59 + 1;
          if (v59 == -1 || v60 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v61 = *(unsigned char *)(*(void *)(v3 + *v19) + v59);
            *(void *)(v3 + v58) = v60;
            v57 |= (unint64_t)(v61 & 0x7F) << v55;
            if (v61 < 0)
            {
              v55 += 7;
              BOOL v27 = v56++ >= 9;
              if (v27)
              {
                uint64_t v57 = 0;
                goto LABEL_104;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          uint64_t v57 = 0;
        }
LABEL_104:
        *(void *)(a1 + 48) = v57;
        goto LABEL_120;
      case 8:
        if ((v8 & 1) == 0) {
          goto LABEL_91;
        }
        char v62 = 0;
        unsigned int v63 = 0;
        uint64_t v64 = 0;
        *(_WORD *)(a1 + 76) |= 0x10u;
        while (2)
        {
          uint64_t v65 = *v17;
          uint64_t v66 = *(void *)(v3 + v65);
          unint64_t v67 = v66 + 1;
          if (v66 == -1 || v67 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v68 = *(unsigned char *)(*(void *)(v3 + *v19) + v66);
            *(void *)(v3 + v65) = v67;
            v64 |= (unint64_t)(v68 & 0x7F) << v62;
            if (v68 < 0)
            {
              v62 += 7;
              BOOL v27 = v63++ >= 9;
              if (v27)
              {
                uint64_t v64 = 0;
                goto LABEL_108;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          uint64_t v64 = 0;
        }
LABEL_108:
        BOOL v71 = v64 != 0;
        uint64_t v72 = 73;
LABEL_109:
        *(unsigned char *)(a1 + v72) = v71;
        goto LABEL_120;
      case 9:
        if (!v31)
        {
LABEL_91:
          char v70 = PBReaderSkipValueWithTag();
          int v18 = (int *)MEMORY[0x1E4F940C8];
          if ((v70 & 1) == 0)
          {
LABEL_129:
            char v74 = 0;
            goto LABEL_133;
          }
LABEL_120:
          if (!(v16 & 1 | (v7 != 0))) {
            goto LABEL_121;
          }
          continue;
        }
        if ((*(_WORD *)(a1 + 76) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_130:
            char v74 = 0;
            goto LABEL_132;
          }
          __int16 v73 = *(_WORD *)(a1 + 76) << 9;
LABEL_116:
          v7 += v73 >> 15;
          goto LABEL_117;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_130;
        }
        int v79 = (int)v16;
        char v16 = objc_alloc_init(GEOMapRegion);
        if (GEOMapRegionReadAllFrom((uint64_t)v16, (void *)v3))
        {
          PBReaderRecallMark();
          uint64_t v36 = 24;
LABEL_90:
          int v69 = *(void **)(a1 + v36);
          *(void *)(a1 + v36) = v16;

          --v7;
          LODWORD(v16) = v79;
LABEL_117:
          int v18 = (int *)MEMORY[0x1E4F940C8];
          goto LABEL_120;
        }
LABEL_131:

        char v74 = 0;
        LOBYTE(v16) = v79;
LABEL_132:
        int v18 = (int *)MEMORY[0x1E4F940C8];
LABEL_133:
        *(_WORD *)(a1 + 76) |= 0x80u;
        *(_WORD *)(a1 + 76) |= 0x20u;
        *(_WORD *)(a1 + 76) |= 0x40u;
        if (v74)
        {
LABEL_134:
          unint64_t v3 = *(unsigned char *)(v3 + *v18) == 0;
          if (v16) {
            goto LABEL_135;
          }
        }
        else
        {
          unint64_t v3 = 0;
          if (v16)
          {
LABEL_135:
            unsigned int v77 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = 0;
          }
        }
        return v3;
      default:
        int v44 = PBReaderSkipValueWithTag();
        int v18 = (int *)MEMORY[0x1E4F940C8];
        if (!v44) {
          goto LABEL_129;
        }
        goto LABEL_120;
    }
  }
}

void sub_189989404(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1899894D0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189989A08(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchLocationIntentReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 60))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDSearchLocationIntentReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = [v8 position];
  *(_DWORD *)(a1 + 60) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOPDSearchLocationIntentReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOPDSearchLocationIntentReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDSearchLocationIntentReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    [*(id *)(a1 + 40) readAll:1];
    [*(id *)(a1 + 16) readAll:1];
    [*(id *)(a1 + 24) readAll:1];
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_189989BD8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189989E34(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18998A090(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSearchPairReadAllFrom(uint64_t a1, void *a2)
{
  unint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            uint64_t v16 = *v6;
            int v17 = v3[v16];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        uint64_t v16 = *v6;
        int v17 = v3[v16];
        if (v3[v16]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v17 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 2)
        {
          uint64_t v26 = *v4;
          unint64_t v27 = *(void *)&v3[v26];
          if (v27 <= 0xFFFFFFFFFFFFFFFBLL && v27 + 4 <= *(void *)&v3[*v5])
          {
            int v28 = *(_DWORD *)(*(void *)&v3[*v7] + v27);
            *(void *)&v3[v26] = v27 + 4;
          }
          else
          {
            v3[v16] = 1;
            int v28 = 0;
          }
          *(_DWORD *)(a1 + 12) = v28;
        }
        else if ((v10 >> 3) == 1)
        {
          char v19 = 0;
          unsigned int v20 = 0;
          uint64_t v21 = 0;
          while (1)
          {
            uint64_t v22 = *v4;
            uint64_t v23 = *(void *)&v3[v22];
            unint64_t v24 = v23 + 1;
            if (v23 == -1 || v24 > *(void *)&v3[*v5]) {
              break;
            }
            char v25 = *(unsigned char *)(*(void *)&v3[*v7] + v23);
            *(void *)&v3[v22] = v24;
            v21 |= (unint64_t)(v25 & 0x7F) << v19;
            if ((v25 & 0x80) == 0) {
              goto LABEL_34;
            }
            v19 += 7;
            BOOL v15 = v20++ >= 9;
            if (v15)
            {
              LODWORD(v21) = 0;
              goto LABEL_36;
            }
          }
          v3[*v6] = 1;
LABEL_34:
          if (v3[*v6]) {
            LODWORD(v21) = 0;
          }
LABEL_36:
          *(_DWORD *)(a1 + 8) = v21;
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_41;
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v29 = v3[*v6] == 0;
  }
  else
  {
LABEL_41:
    BOOL v29 = 0;
  }
  objc_sync_exit(v3);

  return v29;
}

void sub_18998A930(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSearchPairIsValid(char *a1)
{
  v38[1] = *MEMORY[0x1E4F143B8];
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  unsigned int v2 = (int *)MEMORY[0x1E4F940E8];
  v38[0] = 0;
  unint64_t v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_47;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          uint64_t v14 = *v4;
          int v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      uint64_t v14 = *v4;
      int v15 = a1[v14];
      if (a1[v14]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v16 = v8 & 7;
      if (v15 || v16 == 4)
      {
LABEL_47:
        BOOL v35 = HIDWORD(v38[0]) != 0;
        goto LABEL_49;
      }
      if ((v8 >> 3) == 1) {
        break;
      }
      if ((v8 >> 3) != 2)
      {
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_53;
        }
        goto LABEL_46;
      }
      uint64_t v18 = 0;
      char v19 = 1;
      while (1)
      {
        char v20 = v19;
        int v21 = *((_DWORD *)v38 + v18);
        if (!v21) {
          break;
        }
        if (v21 != 2)
        {
          char v19 = 0;
          uint64_t v18 = 1;
          if (v20) {
            continue;
          }
        }
        goto LABEL_53;
      }
      *((_DWORD *)v38 + v18) = 2;
      if (v16 != 5) {
        goto LABEL_53;
      }
      uint64_t v26 = *v2;
      unint64_t v27 = *(void *)&a1[v26];
      if (v27 > 0xFFFFFFFFFFFFFFFBLL) {
        goto LABEL_45;
      }
      unint64_t v28 = v27 + 4;
      if (v28 > *(void *)&a1[*v3]) {
        goto LABEL_45;
      }
      *(void *)&a1[v26] = v28;
LABEL_46:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_47;
      }
    }
    uint64_t v22 = 0;
    char v23 = 1;
    while (1)
    {
      char v24 = v23;
      int v25 = *((_DWORD *)v38 + v22);
      if (!v25) {
        break;
      }
      if (v25 != 1)
      {
        char v23 = 0;
        uint64_t v22 = 1;
        if (v24) {
          continue;
        }
      }
      goto LABEL_53;
    }
    *((_DWORD *)v38 + v22) = 1;
    if (v16)
    {
LABEL_53:
      PBReaderRecallMark();
      return 0;
    }
    unsigned int v29 = 0;
    while (1)
    {
      uint64_t v30 = *v2;
      uint64_t v31 = *(void *)&a1[v30];
      unint64_t v32 = v31 + 1;
      if (v31 == -1 || v32 > *(void *)&a1[*v3]) {
        break;
      }
      int v33 = *(char *)(*(void *)&a1[*v5] + v31);
      *(void *)&a1[v30] = v32;
      if (v33 < 0 && v29++ <= 8) {
        continue;
      }
      goto LABEL_46;
    }
    uint64_t v14 = *v4;
LABEL_45:
    a1[v14] = 1;
    goto LABEL_46;
  }
  BOOL v35 = 0;
LABEL_49:
  if (a1[*v4]) {
    BOOL v36 = 0;
  }
  else {
    BOOL v36 = v35;
  }
  PBReaderRecallMark();
  return v36;
}

unint64_t GEOPDSearchPhoneNumberIntentReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 36);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 32)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  int v11 = ((*(unsigned __int8 *)(a1 + 44) >> 1) & 1) + (*(unsigned char *)(a1 + 44) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v9])
    {
      case -3:
        char v8 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v12 = v7;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        int v14 = v10 & 1 | v11;
        BOOL v15 = v14 != 0;
        if ((v14 != 0) | v8 & 1) {
          int v16 = 0;
        }
        else {
          int v16 = a3;
        }
        BOOL v17 = v16 == 0;
        if (v14) {
          BOOL v17 = 1;
        }
        BOOL v47 = v17;
        uint64_t v18 = (int *)MEMORY[0x1E4F940E8];
        char v19 = (int *)MEMORY[0x1E4F940C8];
        char v20 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v11;
LABEL_6:
        uint64_t v12 = v7;
        uint64_t v13 = v10;
LABEL_8:
        ++v9;
        uint64_t v7 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v18) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v19)) {
      goto LABEL_60;
    }
    char v21 = 0;
    unsigned int v22 = 0;
    unint64_t v23 = 0;
    while (1)
    {
      uint64_t v24 = *v18;
      uint64_t v25 = *(void *)(v3 + v24);
      unint64_t v26 = v25 + 1;
      if (v25 == -1 || v26 > *(void *)(v3 + *v6)) {
        break;
      }
      char v27 = *(unsigned char *)(*(void *)(v3 + *v20) + v25);
      *(void *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0) {
        goto LABEL_25;
      }
      v21 += 7;
      if (v22++ >= 9)
      {
        unint64_t v23 = 0;
        int v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v19) = 1;
LABEL_25:
    int v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(unsigned char *)(v3 + *v19)) {
      unint64_t v23 = 0;
    }
LABEL_27:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_60:
      if (v15)
      {
        char v42 = 1;
        goto LABEL_70;
      }
      if (v16)
      {
        do
        {
          while (1)
          {
            int v44 = *v16++;
            int v43 = v44;
            if (v44 != 1 && v43 != 2) {
              break;
            }
            *(unsigned char *)(a1 + 44) |= v43;
          }
        }
        while (v43);
      }
      goto LABEL_71;
    }
    unint64_t v31 = v23 >> 3;
    BOOL v32 = v15;
    if (!v47)
    {
      int v33 = v16;
      do
      {
        int v35 = *v33++;
        int v34 = v35;
        BOOL v32 = v35 != 0;
        if (v35) {
          BOOL v36 = v34 == v31;
        }
        else {
          BOOL v36 = 1;
        }
      }
      while (!v36);
    }
    if (v31 == 2) {
      break;
    }
    if (v31 == 1)
    {
      if (v32)
      {
        if (*(unsigned char *)(a1 + 44))
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_69;
          }
          v9 -= *(unsigned char *)(a1 + 44) & 1;
        }
        else
        {
          uint64_t v37 = PBReaderReadString();
          unsigned int v38 = *(void **)(a1 + 16);
          *(void *)(a1 + 16) = v37;

          --v9;
        }
        goto LABEL_56;
      }
LABEL_50:
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        goto LABEL_69;
      }
      goto LABEL_56;
    }
    if (!PBReaderSkipValueWithTag()) {
      goto LABEL_69;
    }
LABEL_56:
    if (v9) {
      char v41 = 1;
    }
    else {
      char v41 = v15;
    }
    if ((v41 & 1) == 0) {
      goto LABEL_60;
    }
  }
  if (!v32) {
    goto LABEL_50;
  }
  if ((*(unsigned char *)(a1 + 44) & 2) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0)
    {
LABEL_69:
      char v42 = 0;
      goto LABEL_70;
    }
    v9 += *(unsigned __int8 *)(a1 + 44) << 30 >> 31;
    goto LABEL_56;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_69;
  }
  uint64_t v39 = objc_alloc_init(GEOPDSearchTokenSet);
  if (GEOPDSearchTokenSetReadAllFrom((uint64_t)v39, (void *)v3, v7 & 1))
  {
    PBReaderRecallMark();
    uint64_t v40 = *(void **)(a1 + 24);
    *(void *)(a1 + 24) = v39;

    --v9;
    char v19 = (int *)MEMORY[0x1E4F940C8];
    goto LABEL_56;
  }

  char v42 = 0;
  char v19 = (int *)MEMORY[0x1E4F940C8];
LABEL_70:
  *(unsigned char *)(a1 + 44) |= 1u;
  *(unsigned char *)(a1 + 44) |= 2u;
  if (v42)
  {
LABEL_71:
    unint64_t v3 = *(unsigned char *)(v3 + *v19) == 0;
    if (!v15) {
      return v3;
    }
    goto LABEL_72;
  }
  unint64_t v3 = 0;
  if (v15)
  {
LABEL_72:
    uint64_t v45 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_18998B5CC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18998B6C4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchPhoneNumberIntentReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 36))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDSearchPhoneNumberIntentReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 40));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 32) = [v8 position];
  *(_DWORD *)(a1 + 36) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOPDSearchPhoneNumberIntentReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOPDSearchPhoneNumberIntentReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDSearchPhoneNumberIntentReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    -[GEOPDSearchTokenSet readAll:](*(void *)(a1 + 24), 1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return Specified;
}

void sub_18998B86C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18998B9E4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL _GEOPDSearchPhoneNumberIntentIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  if ((*(unsigned char *)(a1 + 44) & 5) != 0) {
    return 1;
  }
  if ((*(unsigned char *)(a1 + 44) & 2) == 0) {
    return 0;
  }
  uint64_t v3 = *(void *)(a1 + 24);

  return GEOPDSearchTokenSetIsDirty(v3);
}

os_unfair_lock_s *GEOPDSearchPhoneNumberIntentIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    BOOL IsDirty = _GEOPDSearchPhoneNumberIntentIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 10);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_18998BC20(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSearchPreferredCategoryReadAllFrom(uint64_t a1, void *a2)
{
  uint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 2)
        {
          *(unsigned char *)(a1 + 20) |= 1u;
          uint64_t v20 = *v4;
          unint64_t v21 = *(void *)&v3[v20];
          if (v21 <= 0xFFFFFFFFFFFFFFFBLL && v21 + 4 <= *(void *)&v3[*v5])
          {
            int v22 = *(_DWORD *)(*(void *)&v3[*v7] + v21);
            *(void *)&v3[v20] = v21 + 4;
          }
          else
          {
            v3[*v6] = 1;
            int v22 = 0;
          }
          *(_DWORD *)(a1 + 16) = v22;
        }
        else if ((v10 >> 3) == 1)
        {
          uint64_t v18 = PBReaderReadString();
          char v19 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = v18;
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_31;
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v23 = v3[*v6] == 0;
  }
  else
  {
LABEL_31:
    BOOL v23 = 0;
  }
  objc_sync_exit(v3);

  return v23;
}

void sub_18998C150(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchProximityIntentReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 36);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 32)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  int v11 = ((*(unsigned __int8 *)(a1 + 44) >> 1) & 1) + (*(unsigned char *)(a1 + 44) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v9])
    {
      case -3:
        char v8 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v12 = v7;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        int v14 = v10 & 1 | v11;
        BOOL v15 = v14 != 0;
        if ((v14 != 0) | v8 & 1) {
          int v16 = 0;
        }
        else {
          int v16 = a3;
        }
        BOOL v17 = v16 == 0;
        if (v14) {
          BOOL v17 = 1;
        }
        BOOL v47 = v17;
        uint64_t v18 = (int *)MEMORY[0x1E4F940E8];
        char v19 = (int *)MEMORY[0x1E4F940C8];
        uint64_t v20 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v11;
LABEL_6:
        uint64_t v12 = v7;
        uint64_t v13 = v10;
LABEL_8:
        ++v9;
        uint64_t v7 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v18) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v19)) {
      goto LABEL_60;
    }
    char v21 = 0;
    unsigned int v22 = 0;
    unint64_t v23 = 0;
    while (1)
    {
      uint64_t v24 = *v18;
      uint64_t v25 = *(void *)(v3 + v24);
      unint64_t v26 = v25 + 1;
      if (v25 == -1 || v26 > *(void *)(v3 + *v6)) {
        break;
      }
      char v27 = *(unsigned char *)(*(void *)(v3 + *v20) + v25);
      *(void *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0) {
        goto LABEL_25;
      }
      v21 += 7;
      if (v22++ >= 9)
      {
        unint64_t v23 = 0;
        int v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v19) = 1;
LABEL_25:
    int v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(unsigned char *)(v3 + *v19)) {
      unint64_t v23 = 0;
    }
LABEL_27:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_60:
      if (v15)
      {
        char v42 = 1;
        goto LABEL_70;
      }
      if (v16)
      {
        do
        {
          while (1)
          {
            int v44 = *v16++;
            int v43 = v44;
            if (v44 != 1 && v43 != 2) {
              break;
            }
            *(unsigned char *)(a1 + 44) |= v43;
          }
        }
        while (v43);
      }
      goto LABEL_71;
    }
    unint64_t v31 = v23 >> 3;
    BOOL v32 = v15;
    if (!v47)
    {
      int v33 = v16;
      do
      {
        int v35 = *v33++;
        int v34 = v35;
        BOOL v32 = v35 != 0;
        if (v35) {
          BOOL v36 = v34 == v31;
        }
        else {
          BOOL v36 = 1;
        }
      }
      while (!v36);
    }
    if (v31 == 2) {
      break;
    }
    if (v31 == 1)
    {
      if (v32)
      {
        if (*(unsigned char *)(a1 + 44))
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_69;
          }
          v9 -= *(unsigned char *)(a1 + 44) & 1;
        }
        else
        {
          uint64_t v37 = PBReaderReadString();
          unsigned int v38 = *(void **)(a1 + 16);
          *(void *)(a1 + 16) = v37;

          --v9;
        }
        goto LABEL_56;
      }
LABEL_50:
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        goto LABEL_69;
      }
      goto LABEL_56;
    }
    if (!PBReaderSkipValueWithTag()) {
      goto LABEL_69;
    }
LABEL_56:
    if (v9) {
      char v41 = 1;
    }
    else {
      char v41 = v15;
    }
    if ((v41 & 1) == 0) {
      goto LABEL_60;
    }
  }
  if (!v32) {
    goto LABEL_50;
  }
  if ((*(unsigned char *)(a1 + 44) & 2) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0)
    {
LABEL_69:
      char v42 = 0;
      goto LABEL_70;
    }
    v9 += *(unsigned __int8 *)(a1 + 44) << 30 >> 31;
    goto LABEL_56;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_69;
  }
  uint64_t v39 = objc_alloc_init(GEOPDSearchTokenSet);
  if (GEOPDSearchTokenSetReadAllFrom((uint64_t)v39, (void *)v3, v7 & 1))
  {
    PBReaderRecallMark();
    uint64_t v40 = *(void **)(a1 + 24);
    *(void *)(a1 + 24) = v39;

    --v9;
    char v19 = (int *)MEMORY[0x1E4F940C8];
    goto LABEL_56;
  }

  char v42 = 0;
  char v19 = (int *)MEMORY[0x1E4F940C8];
LABEL_70:
  *(unsigned char *)(a1 + 44) |= 1u;
  *(unsigned char *)(a1 + 44) |= 2u;
  if (v42)
  {
LABEL_71:
    unint64_t v3 = *(unsigned char *)(v3 + *v19) == 0;
    if (!v15) {
      return v3;
    }
    goto LABEL_72;
  }
  unint64_t v3 = 0;
  if (v15)
  {
LABEL_72:
    uint64_t v45 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_18998CBC8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18998CCC0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchProximityIntentReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 36))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDSearchProximityIntentReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 40));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 32) = [v8 position];
  *(_DWORD *)(a1 + 36) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOPDSearchProximityIntentReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOPDSearchProximityIntentReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDSearchProximityIntentReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    -[GEOPDSearchTokenSet readAll:](*(void *)(a1 + 24), 1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return Specified;
}

void sub_18998CE68(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18998CFE0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL _GEOPDSearchProximityIntentIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  if ((*(unsigned char *)(a1 + 44) & 5) != 0) {
    return 1;
  }
  if ((*(unsigned char *)(a1 + 44) & 2) == 0) {
    return 0;
  }
  uint64_t v3 = *(void *)(a1 + 24);

  return GEOPDSearchTokenSetIsDirty(v3);
}

void sub_18998D1BC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchQueryClassificationMetadataReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  unsigned int v11 = ((*(unsigned __int8 *)(a1 + 60) >> 2) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 4) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 3) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v7])
    {
      case -3:
        char v8 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        int v14 = v10 | (v11 > 1);
        if ((v14 | v8)) {
          BOOL v15 = 0;
        }
        else {
          BOOL v15 = a3;
        }
        LODWORD(v16) = v14;
        BOOL v17 = (int *)MEMORY[0x1E4F940E8];
        char v52 = (v15 == 0) | v14;
        uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
        char v19 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v11;
LABEL_6:
        uint64_t v12 = v9;
        uint64_t v13 = v10;
LABEL_8:
        ++v7;
        uint64_t v9 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v17) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v18)) {
      goto LABEL_72;
    }
    char v20 = 0;
    unsigned int v21 = 0;
    unint64_t v22 = 0;
    while (1)
    {
      uint64_t v23 = *v17;
      uint64_t v24 = *(void *)(v3 + v23);
      unint64_t v25 = v24 + 1;
      if (v24 == -1 || v25 > *(void *)(v3 + *v6)) {
        break;
      }
      char v26 = *(unsigned char *)(*(void *)(v3 + *v19) + v24);
      *(void *)(v3 + v23) = v25;
      v22 |= (unint64_t)(v26 & 0x7F) << v20;
      if ((v26 & 0x80) == 0) {
        goto LABEL_23;
      }
      v20 += 7;
      if (v21++ >= 9)
      {
        unint64_t v22 = 0;
        int v28 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_25;
      }
    }
    *(unsigned char *)(v3 + *v18) = 1;
LABEL_23:
    int v28 = *(unsigned __int8 *)(v3 + *v18);
    if (*(unsigned char *)(v3 + *v18)) {
      unint64_t v22 = 0;
    }
LABEL_25:
    if (v28 || (v22 & 7) == 4)
    {
LABEL_72:
      if (v16)
      {
        char v46 = 1;
        goto LABEL_84;
      }
      if (v15)
      {
        while (1)
        {
          int v48 = *v15++;
          char v47 = 4;
          switch(v48)
          {
            case 0:
              goto LABEL_85;
            case 1:
              goto LABEL_78;
            case 2:
              char v47 = 16;
              goto LABEL_78;
            case 5:
              char v47 = 8;
LABEL_78:
              *(unsigned char *)(a1 + 60) |= v47;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_85;
    }
    unint64_t v30 = v22 >> 3;
    BOOL v31 = (char)v16;
    if ((v52 & 1) == 0)
    {
      BOOL v32 = v15;
      do
      {
        int v34 = *v32++;
        int v33 = v34;
        BOOL v31 = v34 != 0;
        if (v34) {
          BOOL v35 = v33 == v30;
        }
        else {
          BOOL v35 = 1;
        }
      }
      while (!v35);
    }
    switch((int)v30)
    {
      case 1:
        if (!v31) {
          goto LABEL_61;
        }
        if ((*(unsigned char *)(a1 + 60) & 4) == 0)
        {
          uint64_t v36 = PBReaderReadString();
          uint64_t v37 = *(void **)(a1 + 16);
          *(void *)(a1 + 16) = v36;

          --v7;
          goto LABEL_65;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_81;
        }
        v7 += *(unsigned __int8 *)(a1 + 60) << 29 >> 31;
        goto LABEL_65;
      case 2:
        if (!v31 || (*(unsigned char *)(a1 + 60) & 0x10) != 0) {
          goto LABEL_61;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_81;
        }
        int v51 = (int)v16;
        int v16 = objc_alloc_init(GEOPDSearchKeyValueFloatPair);
        if (!GEOPDSearchKeyValueFloatPairReadAllFrom((uint64_t)v16, (void *)v3)) {
          goto LABEL_82;
        }
        PBReaderRecallMark();
        -[GEOPDSearchQueryClassificationMetadata _addNoFlagsPrediction:](a1, v16);
        goto LABEL_60;
      case 3:
        if ((v8 & 1) == 0) {
          goto LABEL_61;
        }
        *(unsigned char *)(a1 + 60) |= 2u;
        uint64_t v39 = *v17;
        unint64_t v40 = *(void *)(v3 + v39);
        if (v40 <= 0xFFFFFFFFFFFFFFFBLL && v40 + 4 <= *(void *)(v3 + *v6))
        {
          int v41 = *(_DWORD *)(*(void *)(v3 + *v19) + v40);
          *(void *)(v3 + v39) = v40 + 4;
        }
        else
        {
          *(unsigned char *)(v3 + *v18) = 1;
          int v41 = 0;
        }
        uint64_t v45 = 56;
        goto LABEL_70;
      case 4:
        if ((v8 & 1) == 0) {
          goto LABEL_61;
        }
        *(unsigned char *)(a1 + 60) |= 1u;
        uint64_t v42 = *v17;
        unint64_t v43 = *(void *)(v3 + v42);
        if (v43 <= 0xFFFFFFFFFFFFFFFBLL && v43 + 4 <= *(void *)(v3 + *v6))
        {
          int v41 = *(_DWORD *)(*(void *)(v3 + *v19) + v43);
          *(void *)(v3 + v42) = v43 + 4;
        }
        else
        {
          *(unsigned char *)(v3 + *v18) = 1;
          int v41 = 0;
        }
        uint64_t v45 = 52;
LABEL_70:
        *(_DWORD *)(a1 + v45) = v41;
        goto LABEL_71;
      case 5:
        if (!v31 || (*(unsigned char *)(a1 + 60) & 8) != 0)
        {
LABEL_61:
          char v44 = PBReaderSkipValueWithTag();
          uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
          if ((v44 & 1) == 0)
          {
LABEL_80:
            char v46 = 0;
            goto LABEL_84;
          }
          goto LABEL_71;
        }
        if (PBReaderPlaceMark())
        {
          int v51 = (int)v16;
          int v16 = objc_alloc_init(GEOPDSearchStringStringPair);
          if (!GEOPDSearchStringStringPairReadAllFrom((uint64_t)v16, (void *)v3, v9 & 1))
          {
LABEL_82:

            char v46 = 0;
            LOBYTE(v16) = v51;
            goto LABEL_83;
          }
          PBReaderRecallMark();
          -[GEOPDSearchQueryClassificationMetadata _addNoFlagsModelVersion:](a1, v16);
LABEL_60:

          LODWORD(v16) = v51;
LABEL_65:
          uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
LABEL_71:
          if (!(v16 & 1 | (v7 != 0))) {
            goto LABEL_72;
          }
          continue;
        }
LABEL_81:
        char v46 = 0;
LABEL_83:
        uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
LABEL_84:
        *(unsigned char *)(a1 + 60) |= 4u;
        *(unsigned char *)(a1 + 60) |= 0x10u;
        *(unsigned char *)(a1 + 60) |= 8u;
        if (v46)
        {
LABEL_85:
          unint64_t v3 = *(unsigned char *)(v3 + *v18) == 0;
          if (v16) {
            goto LABEL_86;
          }
        }
        else
        {
          unint64_t v3 = 0;
          if (v16)
          {
LABEL_86:
            unsigned int v49 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = 0;
          }
        }
        return v3;
      default:
        int v38 = PBReaderSkipValueWithTag();
        uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
        if (!v38) {
          goto LABEL_80;
        }
        goto LABEL_71;
    }
  }
}

void sub_18998DB38(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18998DCC8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18998E224(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18998E314(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDSearchQueryClassificationMetadataCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v21 = *MEMORY[0x1E4F143B8];
  long long v15 = 0u;
  long long v16 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  id v2 = *(id *)(a1 + 32);
  uint64_t v3 = [v2 countByEnumeratingWithState:&v15 objects:v20 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v16;
    while (1)
    {
      if (*(void *)v16 != v5) {
        objc_enumerationMutation(v2);
      }
      if (!--v4)
      {
        uint64_t v4 = [v2 countByEnumeratingWithState:&v15 objects:v20 count:16];
        if (!v4) {
          break;
        }
      }
    }
  }

  long long v13 = 0u;
  long long v14 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  id v6 = *(id *)(a1 + 24);
  uint64_t v7 = [v6 countByEnumeratingWithState:&v11 objects:v19 count:16];
  if (v7)
  {
    uint64_t v8 = v7;
    uint64_t v9 = *(void *)v12;
    do
    {
      uint64_t v10 = 0;
      do
      {
        if (*(void *)v12 != v9) {
          objc_enumerationMutation(v6);
        }
        -[GEOPDSearchStringStringPair readAll:](*(void *)(*((void *)&v11 + 1) + 8 * v10++), 1);
      }
      while (v8 != v10);
      uint64_t v8 = [v6 countByEnumeratingWithState:&v11 objects:v19 count:16];
    }
    while (v8);
  }
}

unint64_t GEOPDSearchQueryClassificationMetadataReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDSearchQueryClassificationMetadataReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOPDSearchQueryClassificationMetadataReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOPDSearchQueryClassificationMetadataReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDSearchQueryClassificationMetadataReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOPDSearchQueryClassificationMetadataCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_18998E62C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18998E92C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDSearchQueryClassificationMetadataIsDirty(uint64_t a1)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  if ((*(unsigned char *)(a1 + 60) & 0x3C) != 0) {
    return 1;
  }
  if ((*(unsigned char *)(a1 + 60) & 8) == 0) {
    return 0;
  }
  long long v9 = 0u;
  long long v10 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  id v3 = *(id *)(a1 + 24);
  uint64_t v2 = [v3 countByEnumeratingWithState:&v7 objects:v11 count:16];
  if (v2)
  {
    uint64_t v4 = *(void *)v8;
    while (2)
    {
      for (uint64_t i = 0; i != v2; ++i)
      {
        if (*(void *)v8 != v4) {
          objc_enumerationMutation(v3);
        }
        if (GEOPDSearchStringStringPairIsDirty(*(void *)(*((void *)&v7 + 1) + 8 * i)))
        {
          uint64_t v2 = 1;
          goto LABEL_15;
        }
      }
      uint64_t v2 = [v3 countByEnumeratingWithState:&v7 objects:v11 count:16];
      if (v2) {
        continue;
      }
      break;
    }
  }
LABEL_15:

  return v2;
}

os_unfair_lock_s *GEOPDSearchQueryClassificationMetadataIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOPDSearchQueryClassificationMetadataIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 12);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_18998EE04(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchQueryCompletionMetadataReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 96));
  id v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 92);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 88)];
  uint64_t v7 = 0;
  char v8 = 0;
  char v9 = 0;
  long long v10 = (const __int16 *)(a1 + 112);
  uint16x4_t v11 = (uint16x4_t)vld1_dup_s16(v10);
  int16x4_t v12 = (int16x4_t)vand_s8((int8x8_t)vshl_u16(v11, (uint16x4_t)0xFFFCFFF9FFFAFFFBLL), (int8x8_t)0x1000100010001);
  v12.i16[0] = vaddv_s16(v12);
  unsigned int v13 = v12.i32[0];
  while (1)
  {
    unsigned int v14 = a3[v7];
    if (v14 >= 0xFFFFFFFE)
    {
      char v9 = 1;
      goto LABEL_9;
    }
    if (v14 != -3) {
      break;
    }
    char v8 = 1;
LABEL_9:
    ++v7;
  }
  if (v14)
  {
    ++v13;
    goto LABEL_9;
  }
  char v15 = v9 | (v13 > 2);
  if (v9 & 1 | (v13 > 2) | v8 & 1) {
    long long v16 = 0;
  }
  else {
    long long v16 = a3;
  }
  long long v17 = (int *)MEMORY[0x1E4F940E8];
  long long v18 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(v3 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(v3 + *v6))
  {
LABEL_139:
    if (v15)
    {
      char v92 = 1;
      goto LABEL_141;
    }
    if (v16)
    {
      while (1)
      {
        int v93 = *v16++;
        __int16 v94 = 64;
        switch(v93)
        {
          case 0:
            goto LABEL_150;
          case 1:
            goto LABEL_149;
          case 4:
            __int16 v94 = 32;
            goto LABEL_149;
          case 7:
            __int16 v94 = 128;
            goto LABEL_149;
          case 8:
            __int16 v94 = 16;
LABEL_149:
            *(_WORD *)(a1 + 112) |= v94;
            break;
          default:
            continue;
        }
      }
    }
    goto LABEL_150;
  }
  char v19 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(v3 + *v18)) {
      goto LABEL_139;
    }
    char v20 = 0;
    unsigned int v21 = 0;
    unint64_t v22 = 0;
    while (1)
    {
      uint64_t v23 = *v17;
      uint64_t v24 = *(void *)(v3 + v23);
      unint64_t v25 = v24 + 1;
      if (v24 == -1 || v25 > *(void *)(v3 + *v6)) {
        break;
      }
      char v26 = *(unsigned char *)(*(void *)(v3 + *v19) + v24);
      *(void *)(v3 + v23) = v25;
      v22 |= (unint64_t)(v26 & 0x7F) << v20;
      if ((v26 & 0x80) == 0) {
        goto LABEL_24;
      }
      v20 += 7;
      BOOL v27 = v21++ >= 9;
      if (v27)
      {
        unint64_t v22 = 0;
        int v28 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_26;
      }
    }
    *(unsigned char *)(v3 + *v18) = 1;
LABEL_24:
    int v28 = *(unsigned __int8 *)(v3 + *v18);
    if (*(unsigned char *)(v3 + *v18)) {
      unint64_t v22 = 0;
    }
LABEL_26:
    int v29 = v22 & 7;
    if (v28 || v29 == 4) {
      goto LABEL_139;
    }
    unint64_t v31 = v22 >> 3;
    BOOL v32 = v15;
    if (!((v16 == 0) | v15 & 1))
    {
      int v33 = v16;
      do
      {
        int v35 = *v33++;
        int v34 = v35;
        BOOL v32 = v35 != 0;
        if (v35) {
          BOOL v36 = v34 == v31;
        }
        else {
          BOOL v36 = 1;
        }
      }
      while (!v36);
    }
    switch((int)v31)
    {
      case 1:
        if (!v32) {
          goto LABEL_102;
        }
        if ((*(_WORD *)(a1 + 112) & 0x40) == 0)
        {
          uint64_t v37 = PBReaderReadString();
          int v38 = *(void **)(a1 + 64);
          *(void *)(a1 + 64) = v37;

          --v7;
          goto LABEL_136;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_154;
        }
        v7 += *(unsigned __int16 *)(a1 + 112) << 25 >> 31;
        goto LABEL_136;
      case 2:
        if ((v8 & 1) == 0) {
          goto LABEL_102;
        }
        *(_WORD *)(a1 + 112) |= 2u;
        uint64_t v40 = *v17;
        unint64_t v41 = *(void *)(v3 + v40);
        if (v41 <= 0xFFFFFFFFFFFFFFFBLL && v41 + 4 <= *(void *)(v3 + *v6))
        {
          int v42 = *(_DWORD *)(*(void *)(v3 + *v19) + v41);
          *(void *)(v3 + v40) = v41 + 4;
        }
        else
        {
          *(unsigned char *)(v3 + *v18) = 1;
          int v42 = 0;
        }
        uint64_t v77 = 100;
        goto LABEL_126;
      case 3:
        if ((v8 & 1) == 0) {
          goto LABEL_102;
        }
        char v43 = 0;
        unsigned int v44 = 0;
        uint64_t v45 = 0;
        *(_WORD *)(a1 + 112) |= 1u;
        while (2)
        {
          uint64_t v46 = *v17;
          uint64_t v47 = *(void *)(v3 + v46);
          unint64_t v48 = v47 + 1;
          if (v47 == -1 || v48 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v49 = *(unsigned char *)(*(void *)(v3 + *v19) + v47);
            *(void *)(v3 + v46) = v48;
            v45 |= (unint64_t)(v49 & 0x7F) << v43;
            if (v49 < 0)
            {
              v43 += 7;
              BOOL v27 = v44++ >= 9;
              if (v27)
              {
                uint64_t v45 = 0;
                goto LABEL_107;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          uint64_t v45 = 0;
        }
LABEL_107:
        *(void *)(a1 + 72) = v45;
        goto LABEL_137;
      case 4:
        if (!v32 || (*(_WORD *)(a1 + 112) & 0x20) != 0) {
          goto LABEL_102;
        }
        if (v29 != 2)
        {
          char v78 = 0;
          unsigned int v79 = 0;
          uint64_t v80 = 0;
          while (1)
          {
            uint64_t v81 = *v17;
            uint64_t v82 = *(void *)(v3 + v81);
            unint64_t v83 = v82 + 1;
            if (v82 == -1 || v83 > *(void *)(v3 + *v6)) {
              goto LABEL_134;
            }
            char v84 = *(unsigned char *)(*(void *)(v3 + *v19) + v82);
            *(void *)(v3 + v81) = v83;
            v80 |= (unint64_t)(v84 & 0x7F) << v78;
            if (v84 < 0)
            {
              v78 += 7;
              BOOL v27 = v79++ >= 9;
              if (!v27) {
                continue;
              }
            }
            goto LABEL_135;
          }
        }
        if (!PBReaderPlaceMark()) {
          goto LABEL_154;
        }
        while (1)
        {
          uint64_t v50 = (int *)MEMORY[0x1E4F940C8];
          if (*(void *)(v3 + *v17) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + (int)*MEMORY[0x1E4F940C8])) {
            goto LABEL_114;
          }
          char v51 = 0;
          unsigned int v52 = 0;
          uint64_t v53 = 0;
          while (1)
          {
            uint64_t v54 = *v17;
            uint64_t v55 = *(void *)(v3 + v54);
            unint64_t v56 = v55 + 1;
            if (v55 == -1 || v56 > *(void *)(v3 + *v6)) {
              break;
            }
            char v57 = *(unsigned char *)(*(void *)(v3 + *v19) + v55);
            *(void *)(v3 + v54) = v56;
            v53 |= (unint64_t)(v57 & 0x7F) << v51;
            if (v57 < 0)
            {
              v51 += 7;
              BOOL v27 = v52++ >= 9;
              if (!v27) {
                continue;
              }
            }
            goto LABEL_69;
          }
          *(unsigned char *)(v3 + *v50) = 1;
LABEL_69:
          PBRepeatedInt32Add();
        }
      case 5:
        if ((v8 & 1) == 0) {
          goto LABEL_102;
        }
        *(_WORD *)(a1 + 112) |= 4u;
        uint64_t v58 = *v17;
        unint64_t v59 = *(void *)(v3 + v58);
        if (v59 <= 0xFFFFFFFFFFFFFFFBLL && v59 + 4 <= *(void *)(v3 + *v6))
        {
          int v42 = *(_DWORD *)(*(void *)(v3 + *v19) + v59);
          *(void *)(v3 + v58) = v59 + 4;
        }
        else
        {
          *(unsigned char *)(v3 + *v18) = 1;
          int v42 = 0;
        }
        uint64_t v77 = 104;
LABEL_126:
        *(_DWORD *)(a1 + v77) = v42;
        goto LABEL_137;
      case 6:
        if ((v8 & 1) == 0) {
          goto LABEL_102;
        }
        char v60 = 0;
        unsigned int v61 = 0;
        uint64_t v62 = 0;
        *(_WORD *)(a1 + 112) |= 8u;
        while (2)
        {
          uint64_t v63 = *v17;
          uint64_t v64 = *(void *)(v3 + v63);
          unint64_t v65 = v64 + 1;
          if (v64 == -1 || v65 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v66 = *(unsigned char *)(*(void *)(v3 + *v19) + v64);
            *(void *)(v3 + v63) = v65;
            v62 |= (unint64_t)(v66 & 0x7F) << v60;
            if (v66 < 0)
            {
              v60 += 7;
              BOOL v27 = v61++ >= 9;
              if (v27)
              {
                uint64_t v62 = 0;
                goto LABEL_111;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          uint64_t v62 = 0;
        }
LABEL_111:
        *(unsigned char *)(a1 + 108) = v62 != 0;
        goto LABEL_137;
      case 7:
        if (!v32 || (*(_WORD *)(a1 + 112) & 0x80) != 0) {
          goto LABEL_102;
        }
        unint64_t v67 = PBReaderReadString();
        if (v67)
        {
          unsigned int v97 = v67;
          -[GEOPDSearchQueryCompletionMetadata _addNoFlagsTokens:](a1, v67);
          unint64_t v67 = v97;
        }

        goto LABEL_136;
      case 8:
        if (!v32 || (*(_WORD *)(a1 + 112) & 0x10) != 0)
        {
LABEL_102:
          char v76 = PBReaderSkipValueWithTag();
          long long v18 = (int *)MEMORY[0x1E4F940C8];
          if ((v76 & 1) == 0)
          {
LABEL_153:
            char v92 = 0;
            goto LABEL_141;
          }
LABEL_137:
          if (!(v15 & 1 | (v7 != 0)) || *(void *)(v3 + *v17) >= *(void *)(v3 + *v6)) {
            goto LABEL_139;
          }
          continue;
        }
        if (v29 != 2)
        {
          char v85 = 0;
          unsigned int v86 = 0;
          uint64_t v87 = 0;
          while (1)
          {
            uint64_t v88 = *v17;
            uint64_t v89 = *(void *)(v3 + v88);
            unint64_t v90 = v89 + 1;
            if (v89 == -1 || v90 > *(void *)(v3 + *v6)) {
              break;
            }
            char v91 = *(unsigned char *)(*(void *)(v3 + *v19) + v89);
            *(void *)(v3 + v88) = v90;
            v87 |= (unint64_t)(v91 & 0x7F) << v85;
            if (v91 < 0)
            {
              v85 += 7;
              BOOL v27 = v86++ >= 9;
              if (!v27) {
                continue;
              }
            }
            goto LABEL_135;
          }
LABEL_134:
          *(unsigned char *)(v3 + *v18) = 1;
LABEL_135:
          PBRepeatedInt32Add();
LABEL_136:
          long long v18 = (int *)MEMORY[0x1E4F940C8];
          goto LABEL_137;
        }
        if (PBReaderPlaceMark())
        {
          while (1)
          {
            char v68 = (int *)MEMORY[0x1E4F940C8];
            if (*(void *)(v3 + *v17) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + (int)*MEMORY[0x1E4F940C8])) {
              break;
            }
            char v69 = 0;
            unsigned int v70 = 0;
            uint64_t v71 = 0;
            while (1)
            {
              uint64_t v72 = *v17;
              uint64_t v73 = *(void *)(v3 + v72);
              unint64_t v74 = v73 + 1;
              if (v73 == -1 || v74 > *(void *)(v3 + *v6)) {
                break;
              }
              char v75 = *(unsigned char *)(*(void *)(v3 + *v19) + v73);
              *(void *)(v3 + v72) = v74;
              v71 |= (unint64_t)(v75 & 0x7F) << v69;
              if (v75 < 0)
              {
                v69 += 7;
                BOOL v27 = v70++ >= 9;
                if (!v27) {
                  continue;
                }
              }
              goto LABEL_101;
            }
            *(unsigned char *)(v3 + *v68) = 1;
LABEL_101:
            PBRepeatedInt32Add();
          }
LABEL_114:
          PBReaderRecallMark();
          goto LABEL_136;
        }
LABEL_154:
        char v92 = 0;
        long long v18 = (int *)MEMORY[0x1E4F940C8];
LABEL_141:
        *(_WORD *)(a1 + 112) |= 0x40u;
        *(_WORD *)(a1 + 112) |= 0x20u;
        *(_WORD *)(a1 + 112) |= 0x80u;
        *(_WORD *)(a1 + 112) |= 0x10u;
        if (v92)
        {
LABEL_150:
          unint64_t v3 = *(unsigned char *)(v3 + *v18) == 0;
          if (v15) {
            goto LABEL_151;
          }
          return v3;
        }
        unint64_t v3 = 0;
        if ((v15 & 1) == 0) {
          return v3;
        }
LABEL_151:
        int v95 = *(void **)(a1 + 8);
        *(void *)(a1 + 8) = 0;

        return v3;
      default:
        int v39 = PBReaderSkipValueWithTag();
        long long v18 = (int *)MEMORY[0x1E4F940C8];
        if (!v39) {
          goto LABEL_153;
        }
        goto LABEL_137;
    }
  }
}

void sub_18998FD1C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189990294(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189990370(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchQueryCompletionMetadataReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 92))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDSearchQueryCompletionMetadataReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)long long v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 96));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 88) = [v8 position];
  *(_DWORD *)(a1 + 92) = [v8 length];
  if (a3) {
    char v9 = (int *)&GEOPDSearchQueryCompletionMetadataReadAllFrom_recursiveTag;
  }
  else {
    char v9 = (int *)&GEOPDSearchQueryCompletionMetadataReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDSearchQueryCompletionMetadataReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 96));
  return Specified;
}

void sub_189990500(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189990828(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSearchQueryCompletionMetadataIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 96));
  BOOL v2 = (*(_WORD *)(a1 + 112) & 0x1F0) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 96));
  return v2;
}

void sub_189990BA4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSearchQueryCtrMetadataReadAllFrom(uint64_t a1, void *a2, int a3)
{
  uint64_t v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    id v6 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v7 = (int *)MEMORY[0x1E4F940E0];
    id v8 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v5[*MEMORY[0x1E4F940E8]] < *(void *)&v5[*MEMORY[0x1E4F940E0]])
    {
      char v9 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v5[*v8]) {
          break;
        }
        char v10 = 0;
        unsigned int v11 = 0;
        unint64_t v12 = 0;
        while (1)
        {
          uint64_t v13 = *v6;
          uint64_t v14 = *(void *)&v5[v13];
          unint64_t v15 = v14 + 1;
          if (v14 == -1 || v15 > *(void *)&v5[*v7]) {
            break;
          }
          char v16 = *(unsigned char *)(*(void *)&v5[*v9] + v14);
          *(void *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0) {
            goto LABEL_13;
          }
          v10 += 7;
          if (v11++ >= 9)
          {
            unint64_t v12 = 0;
            int v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        int v18 = v5[*v8];
        if (v5[*v8]) {
          unint64_t v12 = 0;
        }
LABEL_15:
        if (v18 || (v12 & 7) == 4) {
          break;
        }
        if ((v12 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_27;
          }
          char v20 = objc_alloc_init(GEOPDSearchCTRStoreKeyValuePair);
          if (!GEOPDSearchCTRStoreKeyValuePairReadAllFrom((uint64_t)v20, v5, a3))
          {

            goto LABEL_27;
          }
          PBReaderRecallMark();
          -[GEOPDSearchQueryCtrMetadata addQueryCtrKeyValuePair:](a1, v20);
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_27;
        }
      }
      while (*(void *)&v5[*v6] < *(void *)&v5[*v7]);
    }
    BOOL v21 = v5[*v8] == 0;
  }
  else
  {
LABEL_27:
    BOOL v21 = 0;
  }
  objc_sync_exit(v5);

  return v21;
}

void sub_189991494(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchQueryDirectionsIntentMetadataReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  id v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  char v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  unsigned int v10 = ((*(unsigned __int8 *)(a1 + 68) >> 4) & 1)
      + ((*(unsigned __int8 *)(a1 + 68) >> 5) & 1)
      + ((*(unsigned __int8 *)(a1 + 68) >> 6) & 1);
  while (1)
  {
    unsigned int v11 = a3[v9];
    if (v11 >= 0xFFFFFFFE)
    {
      char v7 = 1;
      goto LABEL_9;
    }
    if (v11 != -3) {
      break;
    }
    char v8 = 1;
LABEL_9:
    ++v9;
  }
  if (v11)
  {
    ++v10;
    goto LABEL_9;
  }
  char v12 = v7 | (v10 > 1);
  if (v7 & 1 | (v10 > 1) | v8 & 1) {
    uint64_t v13 = 0;
  }
  else {
    uint64_t v13 = a3;
  }
  uint64_t v14 = (int *)MEMORY[0x1E4F940E8];
  unint64_t v15 = (int *)MEMORY[0x1E4F940C8];
  char v16 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(void *)(v3 + *v14) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v15)) {
      goto LABEL_110;
    }
    char v17 = 0;
    unsigned int v18 = 0;
    unint64_t v19 = 0;
    while (1)
    {
      uint64_t v20 = *v14;
      uint64_t v21 = *(void *)(v3 + v20);
      unint64_t v22 = v21 + 1;
      if (v21 == -1 || v22 > *(void *)(v3 + *v6)) {
        break;
      }
      char v23 = *(unsigned char *)(*(void *)(v3 + *v16) + v21);
      *(void *)(v3 + v20) = v22;
      v19 |= (unint64_t)(v23 & 0x7F) << v17;
      if ((v23 & 0x80) == 0) {
        goto LABEL_24;
      }
      v17 += 7;
      BOOL v24 = v18++ >= 9;
      if (v24)
      {
        unint64_t v19 = 0;
        int v25 = *(unsigned __int8 *)(v3 + *v15);
        goto LABEL_26;
      }
    }
    *(unsigned char *)(v3 + *v15) = 1;
LABEL_24:
    int v25 = *(unsigned __int8 *)(v3 + *v15);
    if (*(unsigned char *)(v3 + *v15)) {
      unint64_t v19 = 0;
    }
LABEL_26:
    if (v25 || (v19 & 7) == 4)
    {
LABEL_110:
      if (v12)
      {
        char v65 = 1;
        goto LABEL_118;
      }
      if (v13)
      {
        while (1)
        {
          int v66 = *v13++;
          char v67 = 16;
          switch(v66)
          {
            case 0:
              goto LABEL_119;
            case 2:
              goto LABEL_116;
            case 5:
              char v67 = 32;
              goto LABEL_116;
            case 7:
              char v67 = 64;
LABEL_116:
              *(unsigned char *)(a1 + 68) |= v67;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_119;
    }
    unint64_t v27 = v19 >> 3;
    BOOL v28 = v12;
    if (!((v13 == 0) | v12 & 1))
    {
      int v29 = v13;
      do
      {
        int v31 = *v29++;
        int v30 = v31;
        BOOL v28 = v31 != 0;
        if (v31) {
          BOOL v32 = v30 == v27;
        }
        else {
          BOOL v32 = 1;
        }
      }
      while (!v32);
    }
    switch((int)v27)
    {
      case 1:
        if ((v8 & 1) == 0) {
          goto LABEL_82;
        }
        char v33 = 0;
        unsigned int v34 = 0;
        uint64_t v35 = 0;
        *(unsigned char *)(a1 + 68) |= 1u;
        while (1)
        {
          uint64_t v36 = *v14;
          uint64_t v37 = *(void *)(v3 + v36);
          unint64_t v38 = v37 + 1;
          if (v37 == -1 || v38 > *(void *)(v3 + *v6)) {
            break;
          }
          char v39 = *(unsigned char *)(*(void *)(v3 + *v16) + v37);
          *(void *)(v3 + v36) = v38;
          v35 |= (unint64_t)(v39 & 0x7F) << v33;
          if ((v39 & 0x80) == 0) {
            goto LABEL_85;
          }
          v33 += 7;
          BOOL v24 = v34++ >= 9;
          if (v24)
          {
            LODWORD(v35) = 0;
            goto LABEL_87;
          }
        }
        *(unsigned char *)(v3 + *v15) = 1;
LABEL_85:
        if (*(unsigned char *)(v3 + *v15)) {
          LODWORD(v35) = 0;
        }
LABEL_87:
        uint64_t v63 = 52;
        goto LABEL_100;
      case 2:
        if (!v28) {
          goto LABEL_82;
        }
        if ((*(unsigned char *)(a1 + 68) & 0x10) == 0)
        {
          uint64_t v41 = PBReaderReadString();
          uint64_t v42 = 16;
          goto LABEL_81;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_124;
        }
        char v64 = 8 * *(unsigned char *)(a1 + 68);
        goto LABEL_107;
      case 3:
        if ((v8 & 1) == 0) {
          goto LABEL_82;
        }
        char v43 = 0;
        unsigned int v44 = 0;
        uint64_t v35 = 0;
        *(unsigned char *)(a1 + 68) |= 8u;
        while (2)
        {
          uint64_t v45 = *v14;
          uint64_t v46 = *(void *)(v3 + v45);
          unint64_t v47 = v46 + 1;
          if (v46 == -1 || v47 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v15) = 1;
          }
          else
          {
            char v48 = *(unsigned char *)(*(void *)(v3 + *v16) + v46);
            *(void *)(v3 + v45) = v47;
            v35 |= (unint64_t)(v48 & 0x7F) << v43;
            if (v48 < 0)
            {
              v43 += 7;
              BOOL v24 = v44++ >= 9;
              if (v24)
              {
                LODWORD(v35) = 0;
                goto LABEL_91;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v15)) {
          LODWORD(v35) = 0;
        }
LABEL_91:
        uint64_t v63 = 64;
        goto LABEL_100;
      case 4:
        if ((v8 & 1) == 0) {
          goto LABEL_82;
        }
        char v49 = 0;
        unsigned int v50 = 0;
        uint64_t v35 = 0;
        *(unsigned char *)(a1 + 68) |= 2u;
        while (2)
        {
          uint64_t v51 = *v14;
          uint64_t v52 = *(void *)(v3 + v51);
          unint64_t v53 = v52 + 1;
          if (v52 == -1 || v53 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v15) = 1;
          }
          else
          {
            char v54 = *(unsigned char *)(*(void *)(v3 + *v16) + v52);
            *(void *)(v3 + v51) = v53;
            v35 |= (unint64_t)(v54 & 0x7F) << v49;
            if (v54 < 0)
            {
              v49 += 7;
              BOOL v24 = v50++ >= 9;
              if (v24)
              {
                LODWORD(v35) = 0;
                goto LABEL_95;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v15)) {
          LODWORD(v35) = 0;
        }
LABEL_95:
        uint64_t v63 = 56;
        goto LABEL_100;
      case 5:
        if (!v28) {
          goto LABEL_82;
        }
        if ((*(unsigned char *)(a1 + 68) & 0x20) == 0)
        {
          uint64_t v41 = PBReaderReadString();
          uint64_t v42 = 24;
          goto LABEL_81;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_124;
        }
        char v64 = 4 * *(unsigned char *)(a1 + 68);
        goto LABEL_107;
      case 6:
        if ((v8 & 1) == 0) {
          goto LABEL_82;
        }
        char v55 = 0;
        unsigned int v56 = 0;
        uint64_t v35 = 0;
        *(unsigned char *)(a1 + 68) |= 4u;
        while (2)
        {
          uint64_t v57 = *v14;
          uint64_t v58 = *(void *)(v3 + v57);
          unint64_t v59 = v58 + 1;
          if (v58 == -1 || v59 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v15) = 1;
          }
          else
          {
            char v60 = *(unsigned char *)(*(void *)(v3 + *v16) + v58);
            *(void *)(v3 + v57) = v59;
            v35 |= (unint64_t)(v60 & 0x7F) << v55;
            if (v60 < 0)
            {
              v55 += 7;
              BOOL v24 = v56++ >= 9;
              if (v24)
              {
                LODWORD(v35) = 0;
                goto LABEL_99;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v15)) {
          LODWORD(v35) = 0;
        }
LABEL_99:
        uint64_t v63 = 60;
LABEL_100:
        *(_DWORD *)(a1 + v63) = v35;
        goto LABEL_109;
      case 7:
        if (!v28)
        {
LABEL_82:
          char v62 = PBReaderSkipValueWithTag();
          unint64_t v15 = (int *)MEMORY[0x1E4F940C8];
          if ((v62 & 1) == 0)
          {
LABEL_117:
            char v65 = 0;
            goto LABEL_118;
          }
          goto LABEL_109;
        }
        if ((*(unsigned char *)(a1 + 68) & 0x40) == 0)
        {
          uint64_t v41 = PBReaderReadString();
          uint64_t v42 = 32;
LABEL_81:
          unsigned int v61 = *(void **)(a1 + v42);
          *(void *)(a1 + v42) = v41;

          --v9;
LABEL_108:
          unint64_t v15 = (int *)MEMORY[0x1E4F940C8];
LABEL_109:
          if (!(v12 & 1 | (v9 != 0))) {
            goto LABEL_110;
          }
          continue;
        }
        if (PBReaderSkipValueWithTag())
        {
          char v64 = 2 * *(unsigned char *)(a1 + 68);
LABEL_107:
          v9 += v64 >> 7;
          goto LABEL_108;
        }
LABEL_124:
        char v65 = 0;
        unint64_t v15 = (int *)MEMORY[0x1E4F940C8];
LABEL_118:
        *(unsigned char *)(a1 + 68) |= 0x10u;
        *(unsigned char *)(a1 + 68) |= 0x20u;
        *(unsigned char *)(a1 + 68) |= 0x40u;
        if (v65)
        {
LABEL_119:
          unint64_t v3 = *(unsigned char *)(v3 + *v15) == 0;
          if (v12) {
            goto LABEL_120;
          }
        }
        else
        {
          unint64_t v3 = 0;
          if (v12)
          {
LABEL_120:
            char v68 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = 0;
          }
        }
        return v3;
      default:
        int v40 = PBReaderSkipValueWithTag();
        unint64_t v15 = (int *)MEMORY[0x1E4F940C8];
        if (!v40) {
          goto LABEL_117;
        }
        goto LABEL_109;
    }
  }
}

void sub_189992478(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18999255C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchQueryDirectionsIntentMetadataReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDSearchQueryDirectionsIntentMetadataReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)unsigned int v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOPDSearchQueryDirectionsIntentMetadataReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOPDSearchQueryDirectionsIntentMetadataReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDSearchQueryDirectionsIntentMetadataReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_1899926EC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189992914(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSearchQueryDirectionsIntentMetadataIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  BOOL v2 = *(unsigned __int8 *)(a1 + 68) > 0xFu;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return v2;
}

void sub_189992BA4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchQueryDymMetadataReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  id v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 36);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 32)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  int v11 = ((*(unsigned __int8 *)(a1 + 48) >> 1) & 1) + ((*(unsigned __int8 *)(a1 + 48) >> 2) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v9])
    {
      case -3:
        char v8 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v12 = v7;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        int v14 = v10 & 1 | v11;
        if ((v14 != 0) | v8 & 1) {
          unint64_t v15 = 0;
        }
        else {
          unint64_t v15 = a3;
        }
        BOOL v16 = v14 != 0;
        if (v14) {
          BOOL v17 = 1;
        }
        else {
          BOOL v17 = v15 == 0;
        }
        BOOL v58 = v17;
        unsigned int v18 = (int *)MEMORY[0x1E4F940E8];
        unint64_t v19 = (int *)MEMORY[0x1E4F940C8];
        uint64_t v20 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v11;
LABEL_6:
        uint64_t v12 = v7;
        uint64_t v13 = v10;
LABEL_8:
        ++v9;
        uint64_t v7 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v18) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v19)) {
      goto LABEL_76;
    }
    char v21 = 0;
    unsigned int v22 = 0;
    unint64_t v23 = 0;
    while (1)
    {
      uint64_t v24 = *v18;
      uint64_t v25 = *(void *)(v3 + v24);
      unint64_t v26 = v25 + 1;
      if (v25 == -1 || v26 > *(void *)(v3 + *v6)) {
        break;
      }
      char v27 = *(unsigned char *)(*(void *)(v3 + *v20) + v25);
      *(void *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0) {
        goto LABEL_26;
      }
      v21 += 7;
      BOOL v28 = v22++ >= 9;
      if (v28)
      {
        unint64_t v23 = 0;
        int v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_28;
      }
    }
    *(unsigned char *)(v3 + *v19) = 1;
LABEL_26:
    int v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(unsigned char *)(v3 + *v19)) {
      unint64_t v23 = 0;
    }
LABEL_28:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_76:
      if (v16)
      {
        char v52 = 1;
        goto LABEL_90;
      }
      if (!v15) {
        goto LABEL_91;
      }
      while (1)
      {
        while (1)
        {
          int v54 = *v15++;
          int v53 = v54;
          if (v54 != 2) {
            break;
          }
LABEL_81:
          *(unsigned char *)(a1 + 48) |= v53;
        }
        if (v53 == 3)
        {
          LOBYTE(v53) = 4;
          goto LABEL_81;
        }
        if (!v53) {
          goto LABEL_91;
        }
      }
    }
    unint64_t v31 = v23 >> 3;
    BOOL v32 = v16;
    if (!v58)
    {
      char v33 = v15;
      do
      {
        int v35 = *v33++;
        int v34 = v35;
        BOOL v32 = v35 != 0;
        if (v35) {
          BOOL v36 = v34 == v31;
        }
        else {
          BOOL v36 = 1;
        }
      }
      while (!v36);
    }
    if (v31 == 3) {
      break;
    }
    if (v31 == 2)
    {
      if (v32)
      {
        if ((*(unsigned char *)(a1 + 48) & 2) == 0)
        {
          uint64_t v46 = PBReaderReadString();
          unint64_t v47 = *(void **)(a1 + 16);
          *(void *)(a1 + 16) = v46;

          --v9;
          goto LABEL_71;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
        {
LABEL_87:
          char v52 = 0;
          goto LABEL_89;
        }
        char v50 = *(unsigned char *)(a1 + 48) << 6;
LABEL_70:
        v9 += v50 >> 7;
        goto LABEL_71;
      }
    }
    else
    {
      if (v31 != 1)
      {
        int v48 = PBReaderSkipValueWithTag();
        unint64_t v19 = (int *)MEMORY[0x1E4F940C8];
        if (!v48) {
          goto LABEL_86;
        }
        goto LABEL_72;
      }
      if (v8)
      {
        char v37 = 0;
        unsigned int v38 = 0;
        uint64_t v39 = 0;
        *(unsigned char *)(a1 + 48) |= 1u;
        while (1)
        {
          uint64_t v40 = *v18;
          uint64_t v41 = *(void *)(v3 + v40);
          unint64_t v42 = v41 + 1;
          if (v41 == -1 || v42 > *(void *)(v3 + *v6)) {
            break;
          }
          char v43 = *(unsigned char *)(*(void *)(v3 + *v20) + v41);
          *(void *)(v3 + v40) = v42;
          v39 |= (unint64_t)(v43 & 0x7F) << v37;
          if ((v43 & 0x80) == 0) {
            goto LABEL_63;
          }
          v37 += 7;
          BOOL v28 = v38++ >= 9;
          if (v28)
          {
            LODWORD(v39) = 0;
            goto LABEL_65;
          }
        }
        *(unsigned char *)(v3 + *v19) = 1;
LABEL_63:
        if (*(unsigned char *)(v3 + *v19)) {
          LODWORD(v39) = 0;
        }
LABEL_65:
        *(_DWORD *)(a1 + 44) = v39;
        goto LABEL_72;
      }
    }
LABEL_60:
    char v49 = PBReaderSkipValueWithTag();
    unint64_t v19 = (int *)MEMORY[0x1E4F940C8];
    if ((v49 & 1) == 0)
    {
LABEL_86:
      char v52 = 0;
      goto LABEL_90;
    }
LABEL_72:
    if (v9) {
      char v51 = 1;
    }
    else {
      char v51 = v16;
    }
    if ((v51 & 1) == 0) {
      goto LABEL_76;
    }
  }
  if (!v32) {
    goto LABEL_60;
  }
  if ((*(unsigned char *)(a1 + 48) & 4) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0) {
      goto LABEL_87;
    }
    char v50 = 32 * *(unsigned char *)(a1 + 48);
    goto LABEL_70;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_87;
  }
  BOOL v57 = v16;
  unsigned int v44 = objc_alloc_init(GEOPDSearchQuerySynonymMetadata);
  if (GEOPDSearchQuerySynonymMetadataReadAllFrom((uint64_t)v44, (void *)v3, v7 & 1))
  {
    PBReaderRecallMark();
    uint64_t v45 = *(void **)(a1 + 24);
    *(void *)(a1 + 24) = v44;

    --v9;
    BOOL v16 = v57;
LABEL_71:
    unint64_t v19 = (int *)MEMORY[0x1E4F940C8];
    goto LABEL_72;
  }

  char v52 = 0;
  BOOL v16 = v57;
LABEL_89:
  unint64_t v19 = (int *)MEMORY[0x1E4F940C8];
LABEL_90:
  *(unsigned char *)(a1 + 48) |= 2u;
  *(unsigned char *)(a1 + 48) |= 4u;
  if (v52)
  {
LABEL_91:
    unint64_t v3 = *(unsigned char *)(v3 + *v19) == 0;
    if (v16) {
      goto LABEL_92;
    }
  }
  else
  {
    unint64_t v3 = 0;
    if (v16)
    {
LABEL_92:
      char v55 = *(void **)(a1 + 8);
      *(void *)(a1 + 8) = 0;
    }
  }
  return v3;
}

void sub_1899937E8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1899938E0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchQueryDymMetadataReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 36))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDSearchQueryDymMetadataReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 40));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 32) = [v8 position];
  *(_DWORD *)(a1 + 36) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOPDSearchQueryDymMetadataReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOPDSearchQueryDymMetadataReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDSearchQueryDymMetadataReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    -[GEOPDSearchQuerySynonymMetadata readAll:](*(void *)(a1 + 24), 1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return Specified;
}

void sub_189993A88(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSearchQuerySynonymMetadataIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  unint64_t v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          uint64_t v14 = *v4;
          int v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      uint64_t v14 = *v4;
      int v15 = a1[v14];
      if (a1[v14]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v16 = v8 & 7;
      if (v15 || v16 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_103;
          }
          unsigned int v18 = 0;
          while (1)
          {
            uint64_t v19 = *v2;
            uint64_t v20 = *(void *)&a1[v19];
            unint64_t v21 = v20 + 1;
            if (v20 == -1 || v21 > *(void *)&a1[*v3]) {
              goto LABEL_89;
            }
            int v22 = *(char *)(*(void *)&a1[*v5] + v20);
            *(void *)&a1[v19] = v21;
            if (v22 < 0)
            {
              BOOL v23 = v18++ > 8;
              if (!v23) {
                continue;
              }
            }
            goto LABEL_95;
          }
        case 2u:
          if (v16 == 2) {
            goto LABEL_94;
          }
          goto LABEL_103;
        case 3u:
          if (v16 == 2) {
            goto LABEL_94;
          }
          goto LABEL_103;
        case 4u:
          if (v16 == 2) {
            goto LABEL_94;
          }
          goto LABEL_103;
        case 5u:
          if (v16 == 2) {
            goto LABEL_94;
          }
          goto LABEL_103;
        case 6u:
          if (v16 == 2) {
            goto LABEL_94;
          }
          goto LABEL_103;
        case 7u:
          if (v16 != 5) {
            goto LABEL_103;
          }
          uint64_t v24 = *v2;
          unint64_t v25 = *(void *)&a1[v24];
          if (v25 > 0xFFFFFFFFFFFFFFFBLL) {
            goto LABEL_90;
          }
          unint64_t v26 = v25 + 4;
          if (v26 > *(void *)&a1[*v3]) {
            goto LABEL_90;
          }
          *(void *)&a1[v24] = v26;
          continue;
        case 8u:
          if ((v8 & 7) != 0) {
            goto LABEL_103;
          }
          unsigned int v27 = 0;
          while (1)
          {
            uint64_t v28 = *v2;
            uint64_t v29 = *(void *)&a1[v28];
            unint64_t v30 = v29 + 1;
            if (v29 == -1 || v30 > *(void *)&a1[*v3]) {
              goto LABEL_89;
            }
            int v31 = *(char *)(*(void *)&a1[*v5] + v29);
            *(void *)&a1[v28] = v30;
            if (v31 < 0)
            {
              BOOL v23 = v27++ > 8;
              if (!v23) {
                continue;
              }
            }
            goto LABEL_95;
          }
        case 9u:
          if ((v8 & 7) != 0) {
            goto LABEL_103;
          }
          unsigned int v32 = 0;
          while (1)
          {
            uint64_t v33 = *v2;
            uint64_t v34 = *(void *)&a1[v33];
            unint64_t v35 = v34 + 1;
            if (v34 == -1 || v35 > *(void *)&a1[*v3]) {
              goto LABEL_89;
            }
            int v36 = *(char *)(*(void *)&a1[*v5] + v34);
            *(void *)&a1[v33] = v35;
            if (v36 < 0)
            {
              BOOL v23 = v32++ > 8;
              if (!v23) {
                continue;
              }
            }
            goto LABEL_95;
          }
        case 0xAu:
          if ((v8 & 7) != 0) {
            goto LABEL_103;
          }
          unsigned int v37 = 0;
          while (1)
          {
            uint64_t v38 = *v2;
            uint64_t v39 = *(void *)&a1[v38];
            unint64_t v40 = v39 + 1;
            if (v39 == -1 || v40 > *(void *)&a1[*v3]) {
              goto LABEL_89;
            }
            int v41 = *(char *)(*(void *)&a1[*v5] + v39);
            *(void *)&a1[v38] = v40;
            if (v41 < 0)
            {
              BOOL v23 = v37++ > 8;
              if (!v23) {
                continue;
              }
            }
            goto LABEL_95;
          }
        case 0xBu:
          if ((v8 & 7) != 0) {
            goto LABEL_103;
          }
          unsigned int v42 = 0;
          while (1)
          {
            uint64_t v43 = *v2;
            uint64_t v44 = *(void *)&a1[v43];
            unint64_t v45 = v44 + 1;
            if (v44 == -1 || v45 > *(void *)&a1[*v3]) {
              goto LABEL_89;
            }
            int v46 = *(char *)(*(void *)&a1[*v5] + v44);
            *(void *)&a1[v43] = v45;
            if (v46 < 0)
            {
              BOOL v23 = v42++ > 8;
              if (!v23) {
                continue;
              }
            }
            goto LABEL_95;
          }
        case 0xCu:
          if ((v8 & 7) != 0) {
            goto LABEL_103;
          }
          unsigned int v47 = 0;
          while (1)
          {
            uint64_t v48 = *v2;
            uint64_t v49 = *(void *)&a1[v48];
            unint64_t v50 = v49 + 1;
            if (v49 == -1 || v50 > *(void *)&a1[*v3]) {
              goto LABEL_89;
            }
            int v51 = *(char *)(*(void *)&a1[*v5] + v49);
            *(void *)&a1[v48] = v50;
            if (v51 < 0)
            {
              BOOL v23 = v47++ > 8;
              if (!v23) {
                continue;
              }
            }
            goto LABEL_95;
          }
        case 0xDu:
          if ((v8 & 7) != 0) {
            goto LABEL_103;
          }
          unsigned int v52 = 0;
          break;
        case 0xEu:
          if (v16 == 2) {
            goto LABEL_94;
          }
          goto LABEL_103;
        case 0xFu:
          if (v16 == 2) {
            goto LABEL_94;
          }
          goto LABEL_103;
        case 0x10u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOPDSearchPairIsValid(a1)) {
            goto LABEL_103;
          }
          PBReaderRecallMark();
          continue;
        default:
LABEL_94:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_103:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        uint64_t v53 = *v2;
        uint64_t v54 = *(void *)&a1[v53];
        unint64_t v55 = v54 + 1;
        if (v54 == -1 || v55 > *(void *)&a1[*v3]) {
          break;
        }
        int v56 = *(char *)(*(void *)&a1[*v5] + v54);
        *(void *)&a1[v53] = v55;
        if (v56 < 0)
        {
          BOOL v23 = v52++ > 8;
          if (!v23) {
            continue;
          }
        }
        goto LABEL_95;
      }
LABEL_89:
      uint64_t v14 = *v4;
LABEL_90:
      a1[v14] = 1;
LABEL_95:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v57 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v57;
}

void sub_189994154(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL _GEOPDSearchQueryDymMetadataIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  if ((*(unsigned char *)(a1 + 48) & 0xA) != 0) {
    return 1;
  }
  if ((*(unsigned char *)(a1 + 48) & 4) == 0) {
    return 0;
  }
  unint64_t v3 = *(os_unfair_lock_s **)(a1 + 24);

  return GEOPDSearchQuerySynonymMetadataIsDirty(v3);
}

os_unfair_lock_s *GEOPDSearchQueryDymMetadataIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    BOOL IsDirty = _GEOPDSearchQueryDymMetadataIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 10);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_1899943CC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchQueryEmbeddingMetadataReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 60);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 56)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  unsigned int v11 = ((*(unsigned __int8 *)(a1 + 68) >> 1) & 1)
      + (*(unsigned char *)(a1 + 68) & 1)
      + ((*(unsigned __int8 *)(a1 + 68) >> 2) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v7])
    {
      case -3:
        char v8 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        int v14 = v10 | (v11 > 1);
        if ((v14 | v8)) {
          int v15 = 0;
        }
        else {
          int v15 = a3;
        }
        LODWORD(v16) = v14;
        BOOL v17 = (int *)MEMORY[0x1E4F940E8];
        unsigned int v18 = (int *)MEMORY[0x1E4F940C8];
        if (*(void *)(v3 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(v3 + *v6)) {
          goto LABEL_73;
        }
        char v54 = (v15 == 0) | v14;
        uint64_t v19 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v11;
LABEL_6:
        uint64_t v12 = v9;
        uint64_t v13 = v10;
LABEL_8:
        ++v7;
        uint64_t v9 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  do
  {
    if (*(unsigned char *)(v3 + *v18)) {
      break;
    }
    char v20 = 0;
    unsigned int v21 = 0;
    unint64_t v22 = 0;
    while (1)
    {
      uint64_t v23 = *v17;
      uint64_t v24 = *(void *)(v3 + v23);
      unint64_t v25 = v24 + 1;
      if (v24 == -1 || v25 > *(void *)(v3 + *v6)) {
        break;
      }
      char v26 = *(unsigned char *)(*(void *)(v3 + *v19) + v24);
      *(void *)(v3 + v23) = v25;
      v22 |= (unint64_t)(v26 & 0x7F) << v20;
      if ((v26 & 0x80) == 0) {
        goto LABEL_23;
      }
      v20 += 7;
      if (v21++ >= 9)
      {
        unint64_t v22 = 0;
        uint64_t v28 = *v18;
        int v29 = *(unsigned __int8 *)(v3 + v28);
        goto LABEL_25;
      }
    }
    *(unsigned char *)(v3 + *v18) = 1;
LABEL_23:
    uint64_t v28 = *v18;
    int v29 = *(unsigned __int8 *)(v3 + v28);
    if (*(unsigned char *)(v3 + v28)) {
      unint64_t v22 = 0;
    }
LABEL_25:
    int v30 = v22 & 7;
    if (v29 || v30 == 4) {
      break;
    }
    unint64_t v32 = v22 >> 3;
    BOOL v33 = (char)v16;
    if ((v54 & 1) == 0)
    {
      uint64_t v34 = v15;
      do
      {
        int v36 = *v34++;
        int v35 = v36;
        BOOL v33 = v36 != 0;
        if (v36) {
          BOOL v37 = v35 == v32;
        }
        else {
          BOOL v37 = 1;
        }
      }
      while (!v37);
    }
    switch(v32)
    {
      case 3:
        if (!v33 || (*(unsigned char *)(a1 + 68) & 4) != 0)
        {
LABEL_60:
          char v45 = PBReaderSkipValueWithTag();
          unsigned int v18 = (int *)MEMORY[0x1E4F940C8];
          if ((v45 & 1) == 0)
          {
LABEL_86:
            char v48 = 0;
            goto LABEL_75;
          }
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_87;
        }
        int v53 = (int)v16;
        int v16 = objc_alloc_init(GEOPDSearchStringStringPair);
        if (!GEOPDSearchStringStringPairReadAllFrom((uint64_t)v16, (void *)v3, v9 & 1))
        {

          char v48 = 0;
          LOBYTE(v16) = v53;
          goto LABEL_89;
        }
        PBReaderRecallMark();
        -[GEOPDSearchQueryEmbeddingMetadata _addNoFlagsModelVersion:](a1, v16);

        LODWORD(v16) = v53;
        break;
      case 2:
        if (!v33 || (*(unsigned char *)(a1 + 68) & 1) != 0) {
          goto LABEL_60;
        }
        if (v30 == 2)
        {
          if (!PBReaderPlaceMark()) {
            goto LABEL_87;
          }
          while (1)
          {
            unint64_t v40 = (unint64_t *)(v3 + *v17);
            unint64_t v41 = *v40;
            unint64_t v42 = *(void *)(v3 + *v6);
            if (*v40 >= v42) {
              break;
            }
            uint64_t v43 = (int)*MEMORY[0x1E4F940C8];
            if (*(unsigned char *)(v3 + v43)) {
              break;
            }
            if (v41 > 0xFFFFFFFFFFFFFFFBLL || v41 + 4 > v42) {
              *(unsigned char *)(v3 + v43) = 1;
            }
            else {
              *unint64_t v40 = v41 + 4;
            }
            PBRepeatedFloatAdd();
          }
          PBReaderRecallMark();
        }
        else
        {
          uint64_t v46 = *v17;
          unint64_t v47 = *(void *)(v3 + v46);
          if (v47 <= 0xFFFFFFFFFFFFFFFBLL && v47 + 4 <= *(void *)(v3 + *v6)) {
            *(void *)(v3 + v46) = v47 + 4;
          }
          else {
            *(unsigned char *)(v3 + v28) = 1;
          }
          PBRepeatedFloatAdd();
        }
        break;
      case 1:
        if (!v33) {
          goto LABEL_60;
        }
        if ((*(unsigned char *)(a1 + 68) & 2) == 0)
        {
          uint64_t v38 = PBReaderReadString();
          uint64_t v39 = *(void **)(a1 + 40);
          *(void *)(a1 + 40) = v38;

          unsigned int v18 = (int *)MEMORY[0x1E4F940C8];
          --v7;
          continue;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
        {
LABEL_87:
          char v48 = 0;
LABEL_89:
          unsigned int v18 = (int *)MEMORY[0x1E4F940C8];
          goto LABEL_75;
        }
        v7 += *(unsigned __int8 *)(a1 + 68) << 30 >> 31;
        break;
      default:
        int v44 = PBReaderSkipValueWithTag();
        unsigned int v18 = (int *)MEMORY[0x1E4F940C8];
        if (!v44) {
          goto LABEL_86;
        }
        continue;
    }
    unsigned int v18 = (int *)MEMORY[0x1E4F940C8];
  }
  while (v16 & 1 | (v7 != 0) && *(void *)(v3 + *v17) < *(void *)(v3 + *v6));
LABEL_73:
  if ((v16 & 1) == 0)
  {
    if (v15)
    {
      while (1)
      {
        int v49 = *v15++;
        char v50 = 2;
        switch(v49)
        {
          case 0:
            goto LABEL_83;
          case 1:
            goto LABEL_82;
          case 2:
            char v50 = 1;
            goto LABEL_82;
          case 3:
            char v50 = 4;
LABEL_82:
            *(unsigned char *)(a1 + 68) |= v50;
            break;
          default:
            continue;
        }
      }
    }
    goto LABEL_83;
  }
  char v48 = 1;
LABEL_75:
  *(unsigned char *)(a1 + 68) |= 2u;
  *(unsigned char *)(a1 + 68) |= 1u;
  *(unsigned char *)(a1 + 68) |= 4u;
  if ((v48 & 1) == 0)
  {
    unint64_t v3 = 0;
    if ((v16 & 1) == 0) {
      return v3;
    }
    goto LABEL_84;
  }
LABEL_83:
  unint64_t v3 = *(unsigned char *)(v3 + *v18) == 0;
  if ((v16 & 1) == 0) {
    return v3;
  }
LABEL_84:
  int v51 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = 0;

  return v3;
}

void sub_189994D94(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189995190(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189995280(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDSearchQueryEmbeddingMetadataCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v11 = *MEMORY[0x1E4F143B8];
  long long v6 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  id v1 = *(id *)(a1 + 48);
  uint64_t v2 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t v4 = *(void *)v7;
    do
    {
      uint64_t v5 = 0;
      do
      {
        if (*(void *)v7 != v4) {
          objc_enumerationMutation(v1);
        }
        -[GEOPDSearchStringStringPair readAll:](*(void *)(*((void *)&v6 + 1) + 8 * v5++), 1);
      }
      while (v3 != v5);
      uint64_t v3 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
    }
    while (v3);
  }
}

unint64_t GEOPDSearchQueryEmbeddingMetadataReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 60))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDSearchQueryEmbeddingMetadataReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = [v8 position];
  *(_DWORD *)(a1 + 60) = [v8 length];
  if (a3) {
    long long v9 = (int *)&GEOPDSearchQueryEmbeddingMetadataReadAllFrom_recursiveTag;
  }
  else {
    long long v9 = (int *)&GEOPDSearchQueryEmbeddingMetadataReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDSearchQueryEmbeddingMetadataReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOPDSearchQueryEmbeddingMetadataCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_189995514(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18999576C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDSearchQueryEmbeddingMetadataIsDirty(uint64_t a1)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  if ((*(unsigned char *)(a1 + 68) & 0xF) != 0) {
    return 1;
  }
  if ((*(unsigned char *)(a1 + 68) & 4) == 0) {
    return 0;
  }
  long long v9 = 0u;
  long long v10 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  id v3 = *(id *)(a1 + 48);
  uint64_t v2 = [v3 countByEnumeratingWithState:&v7 objects:v11 count:16];
  if (v2)
  {
    uint64_t v4 = *(void *)v8;
    while (2)
    {
      for (uint64_t i = 0; i != v2; ++i)
      {
        if (*(void *)v8 != v4) {
          objc_enumerationMutation(v3);
        }
        if (GEOPDSearchStringStringPairIsDirty(*(void *)(*((void *)&v7 + 1) + 8 * i)))
        {
          uint64_t v2 = 1;
          goto LABEL_15;
        }
      }
      uint64_t v2 = [v3 countByEnumeratingWithState:&v7 objects:v11 count:16];
      if (v2) {
        continue;
      }
      break;
    }
  }
LABEL_15:

  return v2;
}

os_unfair_lock_s *GEOPDSearchQueryEmbeddingMetadataIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOPDSearchQueryEmbeddingMetadataIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 16);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_189995B4C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189995ECC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchQueryFuzzyMatchV2MetadataReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 88));
  long long v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 84);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 80)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  unsigned int v11 = vaddv_s16((int16x4_t)(*(void *)&vshl_u16((uint16x4_t)(*(void *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 96)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFBFFFDFFFCFFFELL) & 0xFF01FF01FF01FF01));
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v7])
    {
      case -3:
        char v8 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        int v14 = v10 | (v11 > 2);
        if ((v14 | v8)) {
          int v15 = 0;
        }
        else {
          int v15 = a3;
        }
        LODWORD(v16) = v14;
        BOOL v17 = (int *)MEMORY[0x1E4F940E8];
        unsigned int v18 = (int *)MEMORY[0x1E4F940C8];
        if (*(void *)(v3 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(v3 + *v6)) {
          goto LABEL_120;
        }
        char v83 = (v7 != 0) | v14;
        char v84 = (v15 == 0) | v14;
        uint64_t v19 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v11;
LABEL_6:
        uint64_t v12 = v9;
        uint64_t v13 = v10;
LABEL_8:
        ++v7;
        uint64_t v9 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(unsigned char *)(v3 + *v18)) {
      goto LABEL_120;
    }
    char v20 = 0;
    unsigned int v21 = 0;
    unint64_t v22 = 0;
    while (1)
    {
      uint64_t v23 = *v17;
      uint64_t v24 = *(void *)(v3 + v23);
      unint64_t v25 = v24 + 1;
      if (v24 == -1 || v25 > *(void *)(v3 + *v6)) {
        break;
      }
      char v26 = *(unsigned char *)(*(void *)(v3 + *v19) + v24);
      *(void *)(v3 + v23) = v25;
      v22 |= (unint64_t)(v26 & 0x7F) << v20;
      if ((v26 & 0x80) == 0) {
        goto LABEL_23;
      }
      v20 += 7;
      BOOL v27 = v21++ >= 9;
      if (v27)
      {
        unint64_t v22 = 0;
        uint64_t v28 = *v18;
        int v29 = *(unsigned __int8 *)(v3 + v28);
        goto LABEL_25;
      }
    }
    *(unsigned char *)(v3 + *v18) = 1;
LABEL_23:
    uint64_t v28 = *v18;
    int v29 = *(unsigned __int8 *)(v3 + v28);
    if (*(unsigned char *)(v3 + v28)) {
      unint64_t v22 = 0;
    }
LABEL_25:
    int v30 = v22 & 7;
    if (v29 || v30 == 4)
    {
LABEL_120:
      if (v16)
      {
        char v77 = 1;
        goto LABEL_122;
      }
      if (v15)
      {
        while (1)
        {
          int v79 = *v15++;
          char v78 = 16;
          switch(v79)
          {
            case 0:
              goto LABEL_132;
            case 1:
              goto LABEL_130;
            case 4:
              char v78 = 4;
              goto LABEL_130;
            case 5:
              char v78 = 8;
              goto LABEL_130;
            case 6:
              char v78 = 32;
LABEL_130:
              *(unsigned char *)(a1 + 96) |= v78;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_132;
    }
    unint64_t v32 = v22 >> 3;
    BOOL v33 = (char)v16;
    if ((v84 & 1) == 0)
    {
      uint64_t v34 = v15;
      do
      {
        int v36 = *v34++;
        int v35 = v36;
        BOOL v33 = v36 != 0;
        if (v36) {
          BOOL v37 = v35 == v32;
        }
        else {
          BOOL v37 = 1;
        }
      }
      while (!v37);
    }
    switch((int)v32)
    {
      case 1:
        if (!v33 || (*(unsigned char *)(a1 + 96) & 0x10) != 0) {
          goto LABEL_91;
        }
        int v82 = (int)v16;
        PBReaderReadString();
        int v16 = (GEOPDSearchTokenSet *)objc_claimAutoreleasedReturnValue();
        if (v16) {
          -[GEOPDSearchQueryFuzzyMatchV2Metadata _addNoFlagsRewrittenQueries:](a1, v16);
        }
        goto LABEL_90;
      case 2:
        if ((v8 & 1) == 0) {
          goto LABEL_91;
        }
        char v39 = 0;
        unsigned int v40 = 0;
        uint64_t v41 = 0;
        *(unsigned char *)(a1 + 96) |= 2u;
        while (2)
        {
          uint64_t v42 = *v17;
          uint64_t v43 = *(void *)(v3 + v42);
          unint64_t v44 = v43 + 1;
          if (v43 == -1 || v44 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v45 = *(unsigned char *)(*(void *)(v3 + *v19) + v43);
            *(void *)(v3 + v42) = v44;
            v41 |= (unint64_t)(v45 & 0x7F) << v39;
            if (v45 < 0)
            {
              v39 += 7;
              BOOL v27 = v40++ >= 9;
              if (v27)
              {
                uint64_t v41 = 0;
                goto LABEL_96;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          uint64_t v41 = 0;
        }
LABEL_96:
        BOOL v66 = v41 != 0;
        uint64_t v67 = 93;
        goto LABEL_101;
      case 3:
        if ((v8 & 1) == 0) {
          goto LABEL_91;
        }
        char v46 = 0;
        unsigned int v47 = 0;
        uint64_t v48 = 0;
        *(unsigned char *)(a1 + 96) |= 1u;
        while (2)
        {
          uint64_t v49 = *v17;
          uint64_t v50 = *(void *)(v3 + v49);
          unint64_t v51 = v50 + 1;
          if (v50 == -1 || v51 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v52 = *(unsigned char *)(*(void *)(v3 + *v19) + v50);
            *(void *)(v3 + v49) = v51;
            v48 |= (unint64_t)(v52 & 0x7F) << v46;
            if (v52 < 0)
            {
              v46 += 7;
              BOOL v27 = v47++ >= 9;
              if (v27)
              {
                uint64_t v48 = 0;
                goto LABEL_100;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          uint64_t v48 = 0;
        }
LABEL_100:
        BOOL v66 = v48 != 0;
        uint64_t v67 = 92;
LABEL_101:
        *(unsigned char *)(a1 + v67) = v66;
        goto LABEL_118;
      case 4:
        if (!v33 || (*(unsigned char *)(a1 + 96) & 4) != 0) {
          goto LABEL_91;
        }
        if (v30 != 2)
        {
          uint64_t v68 = *v17;
          unint64_t v69 = *(void *)(v3 + v68);
          if (v69 <= 0xFFFFFFFFFFFFFFF7 && v69 + 8 <= *(void *)(v3 + *v6)) {
            *(void *)(v3 + v68) = v69 + 8;
          }
          else {
            *(unsigned char *)(v3 + v28) = 1;
          }
          PBRepeatedDoubleAdd();
          goto LABEL_117;
        }
        if (!PBReaderPlaceMark()) {
          goto LABEL_136;
        }
        while (1)
        {
          int v53 = (unint64_t *)(v3 + *v17);
          unint64_t v54 = *v53;
          unint64_t v55 = *(void *)(v3 + *v6);
          if (*v53 >= v55) {
            break;
          }
          uint64_t v56 = (int)*MEMORY[0x1E4F940C8];
          if (*(unsigned char *)(v3 + v56)) {
            break;
          }
          if (v54 > 0xFFFFFFFFFFFFFFF7 || v54 + 8 > v55) {
            *(unsigned char *)(v3 + v56) = 1;
          }
          else {
            *int v53 = v54 + 8;
          }
          PBRepeatedDoubleAdd();
        }
        goto LABEL_102;
      case 5:
        if (!v33 || (*(unsigned char *)(a1 + 96) & 8) != 0) {
          goto LABEL_91;
        }
        if (v30 == 2)
        {
          if (!PBReaderPlaceMark()) {
            goto LABEL_136;
          }
          while (1)
          {
            BOOL v57 = (int *)MEMORY[0x1E4F940C8];
            if (*(void *)(v3 + *v17) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + (int)*MEMORY[0x1E4F940C8])) {
              break;
            }
            char v58 = 0;
            unsigned int v59 = 0;
            uint64_t v60 = 0;
            while (1)
            {
              uint64_t v61 = *v17;
              uint64_t v62 = *(void *)(v3 + v61);
              unint64_t v63 = v62 + 1;
              if (v62 == -1 || v63 > *(void *)(v3 + *v6)) {
                break;
              }
              char v64 = *(unsigned char *)(*(void *)(v3 + *v19) + v62);
              *(void *)(v3 + v61) = v63;
              v60 |= (unint64_t)(v64 & 0x7F) << v58;
              if (v64 < 0)
              {
                v58 += 7;
                BOOL v27 = v59++ >= 9;
                if (!v27) {
                  continue;
                }
              }
              goto LABEL_84;
            }
            *(unsigned char *)(v3 + *v57) = 1;
LABEL_84:
            PBRepeatedInt32Add();
          }
LABEL_102:
          PBReaderRecallMark();
        }
        else
        {
          char v70 = 0;
          unsigned int v71 = 0;
          uint64_t v72 = 0;
          while (1)
          {
            uint64_t v73 = *v17;
            uint64_t v74 = *(void *)(v3 + v73);
            unint64_t v75 = v74 + 1;
            if (v74 == -1 || v75 > *(void *)(v3 + *v6)) {
              break;
            }
            char v76 = *(unsigned char *)(*(void *)(v3 + *v19) + v74);
            *(void *)(v3 + v73) = v75;
            v72 |= (unint64_t)(v76 & 0x7F) << v70;
            if (v76 < 0)
            {
              v70 += 7;
              BOOL v27 = v71++ >= 9;
              if (!v27) {
                continue;
              }
            }
            goto LABEL_114;
          }
          *(unsigned char *)(v3 + *v18) = 1;
LABEL_114:
          PBRepeatedInt32Add();
        }
        goto LABEL_117;
      case 6:
        if (!v33 || (*(unsigned char *)(a1 + 96) & 0x20) != 0)
        {
LABEL_91:
          char v65 = PBReaderSkipValueWithTag();
          unsigned int v18 = (int *)MEMORY[0x1E4F940C8];
          if ((v65 & 1) == 0)
          {
LABEL_135:
            char v77 = 0;
            goto LABEL_122;
          }
          goto LABEL_118;
        }
        if (PBReaderPlaceMark())
        {
          int v82 = (int)v16;
          int v16 = objc_alloc_init(GEOPDSearchTokenSet);
          if (!GEOPDSearchTokenSetReadAllFrom((uint64_t)v16, (void *)v3, v9 & 1))
          {

            char v77 = 0;
            LOBYTE(v16) = v82;
            goto LABEL_138;
          }
          PBReaderRecallMark();
          -[GEOPDSearchQueryFuzzyMatchV2Metadata _addNoFlagsRewrittenQueryTokens:](a1, v16);
LABEL_90:

          LODWORD(v16) = v82;
LABEL_117:
          unsigned int v18 = (int *)MEMORY[0x1E4F940C8];
LABEL_118:
          if ((v83 & 1) == 0 || *(void *)(v3 + *v17) >= *(void *)(v3 + *v6)) {
            goto LABEL_120;
          }
          continue;
        }
LABEL_136:
        char v77 = 0;
LABEL_138:
        unsigned int v18 = (int *)MEMORY[0x1E4F940C8];
LABEL_122:
        *(unsigned char *)(a1 + 96) |= 0x10u;
        *(unsigned char *)(a1 + 96) |= 4u;
        *(unsigned char *)(a1 + 96) |= 8u;
        *(unsigned char *)(a1 + 96) |= 0x20u;
        if (v77)
        {
LABEL_132:
          unint64_t v3 = *(unsigned char *)(v3 + *v18) == 0;
          if (v16) {
            goto LABEL_133;
          }
          return v3;
        }
        unint64_t v3 = 0;
        if ((v16 & 1) == 0) {
          return v3;
        }
LABEL_133:
        uint64_t v80 = *(void **)(a1 + 8);
        *(void *)(a1 + 8) = 0;

        return v3;
      default:
        int v38 = PBReaderSkipValueWithTag();
        unsigned int v18 = (int *)MEMORY[0x1E4F940C8];
        if (!v38) {
          goto LABEL_135;
        }
        goto LABEL_118;
    }
  }
}

void sub_1899969F4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189996FA8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDSearchQueryFuzzyMatchV2MetadataCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v11 = *MEMORY[0x1E4F143B8];
  long long v6 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  id v1 = *(id *)(a1 + 72);
  uint64_t v2 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t v4 = *(void *)v7;
    do
    {
      uint64_t v5 = 0;
      do
      {
        if (*(void *)v7 != v4) {
          objc_enumerationMutation(v1);
        }
        -[GEOPDSearchTokenSet readAll:](*(void *)(*((void *)&v6 + 1) + 8 * v5++), 1);
      }
      while (v3 != v5);
      uint64_t v3 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
    }
    while (v3);
  }
}

unint64_t GEOPDSearchQueryFuzzyMatchV2MetadataReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 84))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDSearchQueryFuzzyMatchV2MetadataReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 88));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 80) = [v8 position];
  *(_DWORD *)(a1 + 84) = [v8 length];
  if (a3) {
    long long v9 = (int *)&GEOPDSearchQueryFuzzyMatchV2MetadataReadAllFrom_recursiveTag;
  }
  else {
    long long v9 = (int *)&GEOPDSearchQueryFuzzyMatchV2MetadataReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDSearchQueryFuzzyMatchV2MetadataReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOPDSearchQueryFuzzyMatchV2MetadataCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 88));
  return Specified;
}

void sub_18999723C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189997598(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDSearchQueryFuzzyMatchV2MetadataIsDirty(uint64_t a1)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 88));
  if ((*(unsigned char *)(a1 + 96) & 0x7C) != 0) {
    return 1;
  }
  if ((*(unsigned char *)(a1 + 96) & 0x20) == 0) {
    return 0;
  }
  long long v9 = 0u;
  long long v10 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  id v3 = *(id *)(a1 + 72);
  uint64_t v2 = [v3 countByEnumeratingWithState:&v7 objects:v11 count:16];
  if (v2)
  {
    uint64_t v4 = *(void *)v8;
    while (2)
    {
      for (uint64_t i = 0; i != v2; ++i)
      {
        if (*(void *)v8 != v4) {
          objc_enumerationMutation(v3);
        }
        if (GEOPDSearchTokenSetIsDirty(*(void *)(*((void *)&v7 + 1) + 8 * i)))
        {
          uint64_t v2 = 1;
          goto LABEL_15;
        }
      }
      uint64_t v2 = [v3 countByEnumeratingWithState:&v7 objects:v11 count:16];
      if (v2) {
        continue;
      }
      break;
    }
  }
LABEL_15:

  return v2;
}

os_unfair_lock_s *GEOPDSearchQueryFuzzyMatchV2MetadataIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOPDSearchQueryFuzzyMatchV2MetadataIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 22);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_189997A78(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSearchQueryGeoMetadataReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    long long v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      long long v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_27;
          }
          unsigned int v18 = objc_alloc_init(GEONamedFeature);
          if (!GEONamedFeatureReadAllFrom(v18, v3))
          {

            goto LABEL_27;
          }
          PBReaderRecallMark();
          -[GEOPDSearchQueryGeoMetadata addNamedFeature:](a1, v18);
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_27;
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v19 = v3[*v6] == 0;
  }
  else
  {
LABEL_27:
    BOOL v19 = 0;
  }
  objc_sync_exit(v3);

  return v19;
}

void sub_189998210(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchQueryGeoNormalizerMetadataReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 88));
  long long v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 84);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 80)];
  uint64_t v7 = 0;
  char v8 = 0;
  char v9 = 0;
  unsigned int v10 = (vaddv_s16((int16x4_t)(*(void *)&vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int8 *)(a1 + 92)), (uint16x4_t)0xFFFEFFFDFFFCFFFFLL) & 0xFF01FF01FF01FF01))+ (*(unsigned char *)(a1 + 92) & 1)+ ((*(unsigned char *)(a1 + 92) & 0x20) != 0));
  while (1)
  {
    unsigned int v11 = a3[v7];
    if (v11 >= 0xFFFFFFFE)
    {
      char v9 = 1;
      goto LABEL_9;
    }
    if (v11 != -3) {
      break;
    }
    char v8 = 1;
LABEL_9:
    ++v7;
  }
  if (v11)
  {
    ++v10;
    goto LABEL_9;
  }
  char v12 = v9 | (v10 > 3);
  if (v9 & 1 | (v10 > 3) | v8 & 1) {
    unint64_t v13 = 0;
  }
  else {
    unint64_t v13 = a3;
  }
  char v14 = (int *)MEMORY[0x1E4F940E8];
  int v15 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(v3 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(v3 + *v6))
  {
LABEL_97:
    if (v12)
    {
      char v52 = 1;
      goto LABEL_99;
    }
    if (v13)
    {
      while (1)
      {
        int v54 = *v13++;
        char v53 = 16;
        switch(v54)
        {
          case 0:
            goto LABEL_111;
          case 1:
            goto LABEL_109;
          case 2:
            char v53 = 2;
            goto LABEL_109;
          case 3:
            char v53 = 8;
            goto LABEL_109;
          case 4:
            char v53 = 4;
            goto LABEL_109;
          case 5:
            char v53 = 32;
            goto LABEL_109;
          case 6:
            char v53 = 1;
LABEL_109:
            *(unsigned char *)(a1 + 92) |= v53;
            break;
          default:
            continue;
        }
      }
    }
    goto LABEL_111;
  }
  int v16 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(v3 + *v15)) {
      goto LABEL_97;
    }
    char v17 = 0;
    unsigned int v18 = 0;
    unint64_t v19 = 0;
    while (1)
    {
      uint64_t v20 = *v14;
      uint64_t v21 = *(void *)(v3 + v20);
      unint64_t v22 = v21 + 1;
      if (v21 == -1 || v22 > *(void *)(v3 + *v6)) {
        break;
      }
      char v23 = *(unsigned char *)(*(void *)(v3 + *v16) + v21);
      *(void *)(v3 + v20) = v22;
      v19 |= (unint64_t)(v23 & 0x7F) << v17;
      if ((v23 & 0x80) == 0) {
        goto LABEL_24;
      }
      v17 += 7;
      BOOL v24 = v18++ >= 9;
      if (v24)
      {
        unint64_t v19 = 0;
        int v25 = *(unsigned __int8 *)(v3 + *v15);
        goto LABEL_26;
      }
    }
    *(unsigned char *)(v3 + *v15) = 1;
LABEL_24:
    int v25 = *(unsigned __int8 *)(v3 + *v15);
    if (*(unsigned char *)(v3 + *v15)) {
      unint64_t v19 = 0;
    }
LABEL_26:
    int v26 = v19 & 7;
    if (v25 || v26 == 4) {
      goto LABEL_97;
    }
    unint64_t v28 = v19 >> 3;
    BOOL v29 = v12;
    if (!((v13 == 0) | v12 & 1))
    {
      int v30 = v13;
      do
      {
        int v32 = *v30++;
        int v31 = v32;
        BOOL v29 = v32 != 0;
        if (v32) {
          BOOL v33 = v31 == v28;
        }
        else {
          BOOL v33 = 1;
        }
      }
      while (!v33);
    }
    switch((int)v28)
    {
      case 1:
        if (!v29) {
          goto LABEL_71;
        }
        if ((*(unsigned char *)(a1 + 92) & 0x10) == 0)
        {
          uint64_t v34 = PBReaderReadString();
          uint64_t v35 = 64;
          goto LABEL_55;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_114;
        }
        char v44 = 8 * *(unsigned char *)(a1 + 92);
        goto LABEL_83;
      case 2:
        if (!v29) {
          goto LABEL_71;
        }
        if ((*(unsigned char *)(a1 + 92) & 2) == 0)
        {
          uint64_t v34 = PBReaderReadString();
          uint64_t v35 = 40;
          goto LABEL_55;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_114;
        }
        char v44 = *(unsigned char *)(a1 + 92) << 6;
        goto LABEL_83;
      case 3:
        if (!v29) {
          goto LABEL_71;
        }
        if ((*(unsigned char *)(a1 + 92) & 8) == 0)
        {
          uint64_t v34 = PBReaderReadString();
          uint64_t v35 = 56;
          goto LABEL_55;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_114;
        }
        char v44 = 16 * *(unsigned char *)(a1 + 92);
        goto LABEL_83;
      case 4:
        if (!v29) {
          goto LABEL_71;
        }
        if ((*(unsigned char *)(a1 + 92) & 4) == 0)
        {
          uint64_t v34 = PBReaderReadString();
          uint64_t v35 = 48;
          goto LABEL_55;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_114;
        }
        char v44 = 32 * *(unsigned char *)(a1 + 92);
        goto LABEL_83;
      case 5:
        if (!v29) {
          goto LABEL_71;
        }
        if ((*(unsigned char *)(a1 + 92) & 0x20) == 0)
        {
          uint64_t v34 = PBReaderReadString();
          uint64_t v35 = 72;
LABEL_55:
          int v36 = *(void **)(a1 + v35);
          *(void *)(a1 + v35) = v34;

          --v7;
LABEL_84:
          if (!(v12 & 1 | (v7 != 0)) || *(void *)(v3 + *v14) >= *(void *)(v3 + *v6)) {
            goto LABEL_97;
          }
          continue;
        }
        if (PBReaderSkipValueWithTag())
        {
          char v44 = 4 * *(unsigned char *)(a1 + 92);
LABEL_83:
          v7 += v44 >> 7;
          goto LABEL_84;
        }
LABEL_114:
        char v52 = 0;
LABEL_99:
        *(unsigned char *)(a1 + 92) |= 0x10u;
        *(unsigned char *)(a1 + 92) |= 2u;
        *(unsigned char *)(a1 + 92) |= 8u;
        *(unsigned char *)(a1 + 92) |= 4u;
        *(unsigned char *)(a1 + 92) |= 0x20u;
        *(unsigned char *)(a1 + 92) |= 1u;
        if (v52)
        {
LABEL_111:
          unint64_t v3 = *(unsigned char *)(v3 + *v15) == 0;
          if (v12) {
            goto LABEL_112;
          }
          return v3;
        }
        unint64_t v3 = 0;
        if ((v12 & 1) == 0) {
          return v3;
        }
LABEL_112:
        unint64_t v55 = *(void **)(a1 + 8);
        *(void *)(a1 + 8) = 0;

        return v3;
      case 6:
        if (!v29 || (*(unsigned char *)(a1 + 92) & 1) != 0)
        {
LABEL_71:
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_114;
          }
        }
        else if (v26 == 2)
        {
          if (!PBReaderPlaceMark()) {
            goto LABEL_114;
          }
          while (*(void *)(v3 + *v14) < *(void *)(v3 + *v6) && !*(unsigned char *)(v3 + *v15))
          {
            char v37 = 0;
            unsigned int v38 = 0;
            uint64_t v39 = 0;
            while (1)
            {
              uint64_t v40 = *v14;
              uint64_t v41 = *(void *)(v3 + v40);
              unint64_t v42 = v41 + 1;
              if (v41 == -1 || v42 > *(void *)(v3 + *v6)) {
                break;
              }
              char v43 = *(unsigned char *)(*(void *)(v3 + *v16) + v41);
              *(void *)(v3 + v40) = v42;
              v39 |= (unint64_t)(v43 & 0x7F) << v37;
              if (v43 < 0)
              {
                v37 += 7;
                BOOL v24 = v38++ >= 9;
                if (!v24) {
                  continue;
                }
              }
              goto LABEL_70;
            }
            *(unsigned char *)(v3 + *v15) = 1;
LABEL_70:
            PBRepeatedInt32Add();
          }
          PBReaderRecallMark();
        }
        else
        {
          char v45 = 0;
          unsigned int v46 = 0;
          uint64_t v47 = 0;
          while (1)
          {
            uint64_t v48 = *v14;
            uint64_t v49 = *(void *)(v3 + v48);
            unint64_t v50 = v49 + 1;
            if (v49 == -1 || v50 > *(void *)(v3 + *v6)) {
              break;
            }
            char v51 = *(unsigned char *)(*(void *)(v3 + *v16) + v49);
            *(void *)(v3 + v48) = v50;
            v47 |= (unint64_t)(v51 & 0x7F) << v45;
            if (v51 < 0)
            {
              v45 += 7;
              BOOL v24 = v46++ >= 9;
              if (!v24) {
                continue;
              }
            }
            goto LABEL_96;
          }
          *(unsigned char *)(v3 + *v15) = 1;
LABEL_96:
          PBRepeatedInt32Add();
        }
        goto LABEL_84;
      default:
        if (!PBReaderSkipValueWithTag()) {
          goto LABEL_114;
        }
        goto LABEL_84;
    }
  }
}

void sub_189999280(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18999936C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchQueryGeoNormalizerMetadataReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 84))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDSearchQueryGeoNormalizerMetadataReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)unsigned int v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 88));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 80) = [v8 position];
  *(_DWORD *)(a1 + 84) = [v8 length];
  if (a3) {
    char v9 = (int *)&GEOPDSearchQueryGeoNormalizerMetadataReadAllFrom_recursiveTag;
  }
  else {
    char v9 = (int *)&GEOPDSearchQueryGeoNormalizerMetadataReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDSearchQueryGeoNormalizerMetadataReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 88));
  return Specified;
}

void sub_1899994FC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18999972C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSearchQueryGeoNormalizerMetadataIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 88));
  BOOL v2 = (*(unsigned char *)(a1 + 92) & 0x7F) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 88));
  return v2;
}

void sub_189999968(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchQueryGeoTagMetadataReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 88));
  long long v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 84);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 80)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  unsigned int v11 = ((*(unsigned __int8 *)(a1 + 92) >> 2) & 1)
      + (*(unsigned char *)(a1 + 92) & 1)
      + ((*(unsigned __int8 *)(a1 + 92) >> 1) & 1)
      + ((*(unsigned __int8 *)(a1 + 92) >> 3) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v7])
    {
      case -3:
        char v8 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        int v14 = v10 | (v11 > 2);
        if ((v14 | v8)) {
          int v15 = 0;
        }
        else {
          int v15 = a3;
        }
        LODWORD(v16) = v14;
        char v17 = (int *)MEMORY[0x1E4F940E8];
        unsigned int v18 = (int *)MEMORY[0x1E4F940C8];
        if (*(void *)(v3 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(v3 + *v6)) {
          goto LABEL_104;
        }
        char v76 = (v15 == 0) | v14;
        unint64_t v19 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v11;
LABEL_6:
        uint64_t v12 = v9;
        uint64_t v13 = v10;
LABEL_8:
        ++v7;
        uint64_t v9 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(unsigned char *)(v3 + *v18)) {
      goto LABEL_104;
    }
    char v20 = 0;
    unsigned int v21 = 0;
    unint64_t v22 = 0;
    while (1)
    {
      uint64_t v23 = *v17;
      uint64_t v24 = *(void *)(v3 + v23);
      unint64_t v25 = v24 + 1;
      if (v24 == -1 || v25 > *(void *)(v3 + *v6)) {
        break;
      }
      char v26 = *(unsigned char *)(*(void *)(v3 + *v19) + v24);
      *(void *)(v3 + v23) = v25;
      v22 |= (unint64_t)(v26 & 0x7F) << v20;
      if ((v26 & 0x80) == 0) {
        goto LABEL_23;
      }
      v20 += 7;
      BOOL v27 = v21++ >= 9;
      if (v27)
      {
        unint64_t v22 = 0;
        int v28 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_25;
      }
    }
    *(unsigned char *)(v3 + *v18) = 1;
LABEL_23:
    int v28 = *(unsigned __int8 *)(v3 + *v18);
    if (*(unsigned char *)(v3 + *v18)) {
      unint64_t v22 = 0;
    }
LABEL_25:
    int v29 = v22 & 7;
    if (v28 || v29 == 4)
    {
LABEL_104:
      if (v16)
      {
        char v70 = 1;
        goto LABEL_106;
      }
      if (v15)
      {
        while (1)
        {
          int v71 = *v15++;
          char v72 = 2;
          switch(v71)
          {
            case 0:
              goto LABEL_115;
            case 1:
              goto LABEL_114;
            case 2:
              char v72 = 4;
              goto LABEL_114;
            case 3:
              char v72 = 8;
              goto LABEL_114;
            case 4:
              char v72 = 1;
LABEL_114:
              *(unsigned char *)(a1 + 92) |= v72;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_115;
    }
    unint64_t v31 = v22 >> 3;
    BOOL v32 = (char)v16;
    if ((v76 & 1) == 0)
    {
      BOOL v33 = v15;
      do
      {
        int v35 = *v33++;
        int v34 = v35;
        BOOL v32 = v35 != 0;
        if (v35) {
          BOOL v36 = v34 == v31;
        }
        else {
          BOOL v36 = 1;
        }
      }
      while (!v36);
    }
    switch((int)v31)
    {
      case 1:
        if (!v32 || (*(unsigned char *)(a1 + 92) & 2) != 0) {
          goto LABEL_80;
        }
        if (v29 == 2)
        {
          if (!PBReaderPlaceMark()) {
            goto LABEL_119;
          }
          while (1)
          {
            char v37 = (int *)MEMORY[0x1E4F940C8];
            if (*(void *)(v3 + *v17) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + (int)*MEMORY[0x1E4F940C8])) {
              goto LABEL_84;
            }
            char v38 = 0;
            unsigned int v39 = 0;
            uint64_t v40 = 0;
            while (1)
            {
              uint64_t v41 = *v17;
              uint64_t v42 = *(void *)(v3 + v41);
              unint64_t v43 = v42 + 1;
              if (v42 == -1 || v43 > *(void *)(v3 + *v6)) {
                break;
              }
              char v44 = *(unsigned char *)(*(void *)(v3 + *v19) + v42);
              *(void *)(v3 + v41) = v43;
              v40 |= (unint64_t)(v44 & 0x7F) << v38;
              if (v44 < 0)
              {
                v38 += 7;
                BOOL v27 = v39++ >= 9;
                if (!v27) {
                  continue;
                }
              }
              goto LABEL_51;
            }
            *(unsigned char *)(v3 + *v37) = 1;
LABEL_51:
            PBRepeatedInt32Add();
          }
        }
        char v56 = 0;
        unsigned int v57 = 0;
        uint64_t v58 = 0;
        while (1)
        {
          uint64_t v59 = *v17;
          uint64_t v60 = *(void *)(v3 + v59);
          unint64_t v61 = v60 + 1;
          if (v60 == -1 || v61 > *(void *)(v3 + *v6)) {
            goto LABEL_99;
          }
          char v62 = *(unsigned char *)(*(void *)(v3 + *v19) + v60);
          *(void *)(v3 + v59) = v61;
          v58 |= (unint64_t)(v62 & 0x7F) << v56;
          if (v62 < 0)
          {
            v56 += 7;
            BOOL v27 = v57++ >= 9;
            if (!v27) {
              continue;
            }
          }
          goto LABEL_100;
        }
      case 2:
        if (!v32) {
          goto LABEL_80;
        }
        if ((*(unsigned char *)(a1 + 92) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_119:
            char v70 = 0;
            goto LABEL_121;
          }
          v7 += *(unsigned __int8 *)(a1 + 92) << 29 >> 31;
          goto LABEL_101;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_119;
        }
        int v75 = (int)v16;
        int v16 = objc_alloc_init(GEOPDSearchGeoParsingResult);
        if (GEOPDSearchGeoParsingResultReadAllFrom((uint64_t)v16, (void *)v3, v9 & 1))
        {
          PBReaderRecallMark();
          unsigned int v46 = *(void **)(a1 + 64);
          *(void *)(a1 + 64) = v16;

          --v7;
LABEL_64:
          LODWORD(v16) = v75;
LABEL_101:
          unsigned int v18 = (int *)MEMORY[0x1E4F940C8];
LABEL_102:
          if (!(v16 & 1 | (v7 != 0)) || *(void *)(v3 + *v17) >= *(void *)(v3 + *v6)) {
            goto LABEL_104;
          }
          continue;
        }
LABEL_120:

        char v70 = 0;
        LOBYTE(v16) = v75;
LABEL_121:
        unsigned int v18 = (int *)MEMORY[0x1E4F940C8];
LABEL_106:
        *(unsigned char *)(a1 + 92) |= 2u;
        *(unsigned char *)(a1 + 92) |= 4u;
        *(unsigned char *)(a1 + 92) |= 8u;
        *(unsigned char *)(a1 + 92) |= 1u;
        if (v70)
        {
LABEL_115:
          unint64_t v3 = *(unsigned char *)(v3 + *v18) == 0;
          if (v16) {
            goto LABEL_116;
          }
          return v3;
        }
        unint64_t v3 = 0;
        if ((v16 & 1) == 0) {
          return v3;
        }
LABEL_116:
        uint64_t v73 = *(void **)(a1 + 8);
        *(void *)(a1 + 8) = 0;

        return v3;
      case 3:
        if (!v32 || (*(unsigned char *)(a1 + 92) & 8) != 0) {
          goto LABEL_80;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_119;
        }
        int v75 = (int)v16;
        int v16 = objc_alloc_init(GEOPDSearchStringGeoTypesPair);
        if (!GEOPDSearchStringGeoTypesPairReadAllFrom((uint64_t)v16, (void *)v3, v9 & 1)) {
          goto LABEL_120;
        }
        PBReaderRecallMark();
        -[GEOPDSearchQueryGeoTagMetadata _addNoFlagsGeoTypeMap:](a1, v16);

        goto LABEL_64;
      case 4:
        if (v32 && (*(unsigned char *)(a1 + 92) & 1) == 0)
        {
          if (v29 == 2)
          {
            if (!PBReaderPlaceMark()) {
              goto LABEL_119;
            }
            while (1)
            {
              uint64_t v47 = (int *)MEMORY[0x1E4F940C8];
              if (*(void *)(v3 + *v17) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + (int)*MEMORY[0x1E4F940C8])) {
                break;
              }
              char v48 = 0;
              unsigned int v49 = 0;
              uint64_t v50 = 0;
              while (1)
              {
                uint64_t v51 = *v17;
                uint64_t v52 = *(void *)(v3 + v51);
                unint64_t v53 = v52 + 1;
                if (v52 == -1 || v53 > *(void *)(v3 + *v6)) {
                  break;
                }
                char v54 = *(unsigned char *)(*(void *)(v3 + *v19) + v52);
                *(void *)(v3 + v51) = v53;
                v50 |= (unint64_t)(v54 & 0x7F) << v48;
                if (v54 < 0)
                {
                  v48 += 7;
                  BOOL v27 = v49++ >= 9;
                  if (!v27) {
                    continue;
                  }
                }
                goto LABEL_79;
              }
              *(unsigned char *)(v3 + *v47) = 1;
LABEL_79:
              PBRepeatedInt32Add();
            }
LABEL_84:
            PBReaderRecallMark();
          }
          else
          {
            char v63 = 0;
            unsigned int v64 = 0;
            uint64_t v65 = 0;
            while (1)
            {
              uint64_t v66 = *v17;
              uint64_t v67 = *(void *)(v3 + v66);
              unint64_t v68 = v67 + 1;
              if (v67 == -1 || v68 > *(void *)(v3 + *v6)) {
                break;
              }
              char v69 = *(unsigned char *)(*(void *)(v3 + *v19) + v67);
              *(void *)(v3 + v66) = v68;
              v65 |= (unint64_t)(v69 & 0x7F) << v63;
              if (v69 < 0)
              {
                v63 += 7;
                BOOL v27 = v64++ >= 9;
                if (!v27) {
                  continue;
                }
              }
              goto LABEL_100;
            }
LABEL_99:
            *(unsigned char *)(v3 + *v18) = 1;
LABEL_100:
            PBRepeatedInt32Add();
          }
          goto LABEL_101;
        }
LABEL_80:
        char v55 = PBReaderSkipValueWithTag();
        unsigned int v18 = (int *)MEMORY[0x1E4F940C8];
        if ((v55 & 1) == 0)
        {
LABEL_118:
          char v70 = 0;
          goto LABEL_106;
        }
        goto LABEL_102;
      default:
        int v45 = PBReaderSkipValueWithTag();
        unsigned int v18 = (int *)MEMORY[0x1E4F940C8];
        if (!v45) {
          goto LABEL_118;
        }
        goto LABEL_102;
    }
  }
}

void sub_18999A630(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18999ABC0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18999ACB0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDSearchQueryGeoTagMetadataCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  -[GEOPDSearchGeoParsingResult readAll:](*(void *)(a1 + 64), 1);
  long long v9 = 0u;
  long long v10 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  id v2 = *(id *)(a1 + 72);
  uint64_t v3 = [v2 countByEnumeratingWithState:&v7 objects:v11 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v8;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v8 != v5) {
          objc_enumerationMutation(v2);
        }
        -[GEOPDSearchStringGeoTypesPair readAll:](*(void *)(*((void *)&v7 + 1) + 8 * v6++), 1);
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v7 objects:v11 count:16];
    }
    while (v4);
  }
}

unint64_t GEOPDSearchQueryGeoTagMetadataReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 84))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDSearchQueryGeoTagMetadataReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)long long v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 88));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 80) = [v8 position];
  *(_DWORD *)(a1 + 84) = [v8 length];
  if (a3) {
    long long v9 = (int *)&GEOPDSearchQueryGeoTagMetadataReadAllFrom_recursiveTag;
  }
  else {
    long long v9 = (int *)&GEOPDSearchQueryGeoTagMetadataReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDSearchQueryGeoTagMetadataReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOPDSearchQueryGeoTagMetadataCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 88));
  return Specified;
}

void sub_18999AF5C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18999B1F0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDSearchQueryGeoTagMetadataIsDirty(uint64_t a1)
{
  uint64_t v17 = *MEMORY[0x1E4F143B8];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 88));
  char v2 = *(unsigned char *)(a1 + 92);
  if ((v2 & 0x12) != 0) {
    return 1;
  }
  if ((*(unsigned char *)(a1 + 92) & 4) != 0)
  {
    uint64_t v3 = *(os_unfair_lock_s **)(a1 + 64);
    if (v3)
    {
      os_unfair_lock_lock_with_options();
      char IsDirty = _GEOPDSearchGeoParsingResultIsDirty((uint64_t)v3);
      os_unfair_lock_unlock(v3 + 14);
      if (IsDirty) {
        return 1;
      }
      char v2 = *(unsigned char *)(a1 + 92);
    }
  }
  if ((v2 & 9) != 0) {
    return 1;
  }
  if ((v2 & 8) == 0) {
    return 0;
  }
  long long v14 = 0u;
  long long v15 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  id v7 = *(id *)(a1 + 72);
  uint64_t v5 = [v7 countByEnumeratingWithState:&v12 objects:v16 count:16];
  if (v5)
  {
    uint64_t v8 = *(void *)v13;
    while (2)
    {
      for (uint64_t i = 0; i != v5; ++i)
      {
        if (*(void *)v13 != v8) {
          objc_enumerationMutation(v7);
        }
        uint64_t v10 = *(void *)(*((void *)&v12 + 1) + 8 * i);
        if (v10)
        {
          os_unfair_lock_lock_with_options();
          os_unfair_lock_assert_owner((const os_unfair_lock *)(v10 + 56));
          int v11 = *(unsigned char *)(v10 + 60) & 7;
          os_unfair_lock_unlock((os_unfair_lock_t)(v10 + 56));
          if (v11)
          {
            uint64_t v5 = 1;
            goto LABEL_22;
          }
        }
      }
      uint64_t v5 = [v7 countByEnumeratingWithState:&v12 objects:v16 count:16];
      if (v5) {
        continue;
      }
      break;
    }
  }
LABEL_22:

  return v5;
}

os_unfair_lock_s *GEOPDSearchQueryGeoTagMetadataIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOPDSearchQueryGeoTagMetadataIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 22);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_18999B690(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18999B9E0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchQueryIntentReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 68);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 64)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  unsigned int v11 = (vaddv_s16((int16x4_t)(*(void *)&vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int8 *)(a1 + 76)), (uint16x4_t)0xFFFDFFFEFFFCFFFBLL) & 0xFF01FF01FF01FF01))+ (*(unsigned char *)(a1 + 76) & 1)+ ((*(unsigned char *)(a1 + 76) & 2) != 0));
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v7])
    {
      case -3:
        char v8 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        unsigned __int8 v14 = v10 | (v11 > 3);
        if ((v14 | v8)) {
          long long v15 = 0;
        }
        else {
          long long v15 = a3;
        }
        BOOL v16 = v14;
        char v48 = (v15 == 0) | v14;
        uint64_t v17 = (int *)MEMORY[0x1E4F940E8];
        unsigned int v18 = (int *)MEMORY[0x1E4F940C8];
        unint64_t v19 = (int *)MEMORY[0x1E4F940B8];
        BOOL v47 = v14;
        break;
      default:
        ++v11;
LABEL_6:
        uint64_t v12 = v9;
        uint64_t v13 = v10;
LABEL_8:
        ++v7;
        uint64_t v9 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v17) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v18)) {
      goto LABEL_81;
    }
    char v20 = 0;
    unsigned int v21 = 0;
    unint64_t v22 = 0;
    while (1)
    {
      uint64_t v23 = *v17;
      uint64_t v24 = *(void *)(v3 + v23);
      unint64_t v25 = v24 + 1;
      if (v24 == -1 || v25 > *(void *)(v3 + *v6)) {
        break;
      }
      char v26 = *(unsigned char *)(*(void *)(v3 + *v19) + v24);
      *(void *)(v3 + v23) = v25;
      v22 |= (unint64_t)(v26 & 0x7F) << v20;
      if ((v26 & 0x80) == 0) {
        goto LABEL_23;
      }
      v20 += 7;
      if (v21++ >= 9)
      {
        unint64_t v22 = 0;
        int v28 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_25;
      }
    }
    *(unsigned char *)(v3 + *v18) = 1;
LABEL_23:
    int v28 = *(unsigned __int8 *)(v3 + *v18);
    if (*(unsigned char *)(v3 + *v18)) {
      unint64_t v22 = 0;
    }
LABEL_25:
    if (v28 || (v22 & 7) == 4)
    {
LABEL_81:
      if (v16)
      {
        char v42 = 1;
        goto LABEL_95;
      }
      if (v15)
      {
        while (1)
        {
          int v43 = *v15++;
          char v44 = 16;
          switch(v43)
          {
            case 0:
              goto LABEL_96;
            case 1:
              goto LABEL_90;
            case 2:
              char v44 = 32;
              goto LABEL_90;
            case 3:
              char v44 = 4;
              goto LABEL_90;
            case 4:
              char v44 = 8;
              goto LABEL_90;
            case 5:
              char v44 = 1;
              goto LABEL_90;
            case 6:
              char v44 = 2;
LABEL_90:
              *(unsigned char *)(a1 + 76) |= v44;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_96;
    }
    unint64_t v30 = v22 >> 3;
    BOOL v31 = v16;
    if ((v48 & 1) == 0)
    {
      BOOL v32 = v15;
      do
      {
        int v34 = *v32++;
        int v33 = v34;
        BOOL v31 = v34 != 0;
        if (v34) {
          BOOL v35 = v33 == v30;
        }
        else {
          BOOL v35 = 1;
        }
      }
      while (!v35);
    }
    switch((int)v30)
    {
      case 1:
        if (!v31 || (*(unsigned char *)(a1 + 76) & 0x10) != 0) {
          goto LABEL_72;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_92;
        }
        BOOL v36 = objc_alloc_init(GEOPDSearchIntent);
        if (!GEOPDSearchIntentReadAllFrom((uint64_t)v36, (void *)v3, v9 & 1)) {
          goto LABEL_93;
        }
        PBReaderRecallMark();
        -[GEOPDSearchQueryIntent _addNoFlagsWhatIntent:](a1, v36);
        goto LABEL_70;
      case 2:
        if (!v31 || (*(unsigned char *)(a1 + 76) & 0x20) != 0) {
          goto LABEL_72;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_92;
        }
        BOOL v36 = objc_alloc_init(GEOPDSearchIntent);
        if (!GEOPDSearchIntentReadAllFrom((uint64_t)v36, (void *)v3, v9 & 1)) {
          goto LABEL_93;
        }
        PBReaderRecallMark();
        -[GEOPDSearchQueryIntent _addNoFlagsWhereIntent:](a1, v36);
        goto LABEL_70;
      case 3:
        if (!v31) {
          goto LABEL_72;
        }
        if ((*(unsigned char *)(a1 + 76) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_92;
          }
          char v41 = 32 * *(unsigned char *)(a1 + 76);
          goto LABEL_78;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_92;
        }
        BOOL v36 = objc_alloc_init(GEOPDSearchQueryIntentMetadata);
        if (!GEOPDSearchQueryIntentMetadataReadAllFrom((uint64_t)v36, (void *)v3, v9 & 1)) {
          goto LABEL_93;
        }
        PBReaderRecallMark();
        uint64_t v38 = 32;
        goto LABEL_59;
      case 4:
        if (!v31) {
          goto LABEL_72;
        }
        if ((*(unsigned char *)(a1 + 76) & 8) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_92;
          }
          BOOL v36 = objc_alloc_init(GEOPDSearchRewrittenQueryNonPayloadField);
          if (!GEOPDSearchRewrittenQueryNonPayloadFieldReadAllFrom((uint64_t)v36, (void *)v3)) {
            goto LABEL_93;
          }
          PBReaderRecallMark();
          uint64_t v38 = 40;
LABEL_59:
          unsigned int v39 = *(void **)(a1 + v38);
          *(void *)(a1 + v38) = v36;

          --v7;
          goto LABEL_71;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
        {
LABEL_92:
          char v42 = 0;
          goto LABEL_94;
        }
        char v41 = 16 * *(unsigned char *)(a1 + 76);
LABEL_78:
        v7 += v41 >> 7;
        goto LABEL_79;
      case 5:
        if (!v31 || (*(unsigned char *)(a1 + 76) & 1) != 0) {
          goto LABEL_72;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_92;
        }
        BOOL v36 = objc_alloc_init(GEOPDSearchPair);
        if (!GEOPDSearchPairReadAllFrom((uint64_t)v36, (void *)v3)) {
          goto LABEL_93;
        }
        PBReaderRecallMark();
        -[GEOPDSearchQueryIntent _addNoFlagsGlobalFeatureMap:](a1, v36);
        goto LABEL_70;
      case 6:
        if (!v31 || (*(unsigned char *)(a1 + 76) & 2) != 0)
        {
LABEL_72:
          char v40 = PBReaderSkipValueWithTag();
          unsigned int v18 = (int *)MEMORY[0x1E4F940C8];
          if ((v40 & 1) == 0)
          {
LABEL_91:
            char v42 = 0;
            goto LABEL_95;
          }
LABEL_80:
          if (!v16 && v7 == 0) {
            goto LABEL_81;
          }
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_92;
        }
        BOOL v36 = objc_alloc_init(GEOPDSearchStringStringPair);
        if (GEOPDSearchStringStringPairReadAllFrom((uint64_t)v36, (void *)v3, v9 & 1))
        {
          PBReaderRecallMark();
          -[GEOPDSearchQueryIntent _addNoFlagsGlobalStringFeatureMap:](a1, v36);
LABEL_70:

LABEL_71:
          BOOL v16 = v47;
LABEL_79:
          unsigned int v18 = (int *)MEMORY[0x1E4F940C8];
          goto LABEL_80;
        }
LABEL_93:

        char v42 = 0;
        BOOL v16 = v47;
LABEL_94:
        unsigned int v18 = (int *)MEMORY[0x1E4F940C8];
LABEL_95:
        *(unsigned char *)(a1 + 76) |= 0x10u;
        *(unsigned char *)(a1 + 76) |= 0x20u;
        *(unsigned char *)(a1 + 76) |= 4u;
        *(unsigned char *)(a1 + 76) |= 8u;
        *(unsigned char *)(a1 + 76) |= 1u;
        *(unsigned char *)(a1 + 76) |= 2u;
        if (v42)
        {
LABEL_96:
          unint64_t v3 = *(unsigned char *)(v3 + *v18) == 0;
          if (v16) {
            goto LABEL_97;
          }
        }
        else
        {
          unint64_t v3 = 0;
          if (v16)
          {
LABEL_97:
            int v45 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = 0;
          }
        }
        return v3;
      default:
        int v37 = PBReaderSkipValueWithTag();
        unsigned int v18 = (int *)MEMORY[0x1E4F940C8];
        if (!v37) {
          goto LABEL_91;
        }
        goto LABEL_80;
    }
  }
}

void sub_18999C2F4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18999C4D8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18999C6AC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18999C83C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18999CFDC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18999D0D0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDSearchQueryIntentCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v41 = *MEMORY[0x1E4F143B8];
  long long v33 = 0u;
  long long v34 = 0u;
  long long v35 = 0u;
  long long v36 = 0u;
  id v2 = *(id *)(a1 + 48);
  uint64_t v3 = [v2 countByEnumeratingWithState:&v33 objects:v40 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v34;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v34 != v5) {
          objc_enumerationMutation(v2);
        }
        -[GEOPDSearchIntent readAll:](*(void *)(*((void *)&v33 + 1) + 8 * v6++), 1);
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v33 objects:v40 count:16];
    }
    while (v4);
  }

  long long v31 = 0u;
  long long v32 = 0u;
  long long v29 = 0u;
  long long v30 = 0u;
  id v7 = *(id *)(a1 + 56);
  uint64_t v8 = [v7 countByEnumeratingWithState:&v29 objects:v39 count:16];
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)v30;
    do
    {
      uint64_t v11 = 0;
      do
      {
        if (*(void *)v30 != v10) {
          objc_enumerationMutation(v7);
        }
        -[GEOPDSearchIntent readAll:](*(void *)(*((void *)&v29 + 1) + 8 * v11++), 1);
      }
      while (v9 != v11);
      uint64_t v9 = [v7 countByEnumeratingWithState:&v29 objects:v39 count:16];
    }
    while (v9);
  }

  -[GEOPDSearchQueryIntentMetadata readAll:](*(void *)(a1 + 32), 1);
  long long v27 = 0u;
  long long v28 = 0u;
  long long v25 = 0u;
  long long v26 = 0u;
  id v12 = *(id *)(a1 + 16);
  uint64_t v13 = [v12 countByEnumeratingWithState:&v25 objects:v38 count:16];
  if (v13)
  {
    uint64_t v14 = v13;
    uint64_t v15 = *(void *)v26;
    while (1)
    {
      if (*(void *)v26 != v15) {
        objc_enumerationMutation(v12);
      }
      if (!--v14)
      {
        uint64_t v14 = [v12 countByEnumeratingWithState:&v25 objects:v38 count:16];
        if (!v14) {
          break;
        }
      }
    }
  }

  long long v23 = 0u;
  long long v24 = 0u;
  long long v21 = 0u;
  long long v22 = 0u;
  id v16 = *(id *)(a1 + 24);
  uint64_t v17 = [v16 countByEnumeratingWithState:&v21 objects:v37 count:16];
  if (v17)
  {
    uint64_t v18 = v17;
    uint64_t v19 = *(void *)v22;
    do
    {
      uint64_t v20 = 0;
      do
      {
        if (*(void *)v22 != v19) {
          objc_enumerationMutation(v16);
        }
        -[GEOPDSearchStringStringPair readAll:](*(void *)(*((void *)&v21 + 1) + 8 * v20++), 1);
      }
      while (v18 != v20);
      uint64_t v18 = [v16 countByEnumeratingWithState:&v21 objects:v37 count:16];
    }
    while (v18);
  }
}

unint64_t GEOPDSearchQueryIntentReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 68))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDSearchQueryIntentReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 72));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 64) = [v8 position];
  *(_DWORD *)(a1 + 68) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOPDSearchQueryIntentReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOPDSearchQueryIntentReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDSearchQueryIntentReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOPDSearchQueryIntentCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
  return Specified;
}

void sub_18999E264(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSearchQueryIntentIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        BOOL v13 = v7++ >= 9;
        if (v13)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
        case 2u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDSearchIntentIsValid(a1)) {
            goto LABEL_123;
          }
          goto LABEL_116;
        case 3u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDSearchQueryIntentMetadataIsValid(a1)) {
            goto LABEL_123;
          }
          goto LABEL_116;
        case 4u:
          if (v15 != 2 || !PBReaderPlaceMark()) {
            goto LABEL_123;
          }
          objc_msgSend(a1, "position", 0, 0);
          [a1 length];
          break;
        case 5u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDSearchPairIsValid(a1)) {
            goto LABEL_123;
          }
          goto LABEL_116;
        case 6u:
          if (v15 == 2 && PBReaderPlaceMark() && GEOPDSearchStringStringPairIsValid(a1)) {
            goto LABEL_116;
          }
          goto LABEL_123;
        default:
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_123;
          }
          continue;
      }
LABEL_32:
      while (*(void *)&a1[*v2] < *(void *)&a1[*v3] && !a1[*v4])
      {
        char v17 = 0;
        unsigned int v18 = 0;
        unint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v2;
          uint64_t v21 = *(void *)&a1[v20];
          unint64_t v22 = v21 + 1;
          if (v21 == -1 || v22 > *(void *)&a1[*v3]) {
            break;
          }
          char v23 = *(unsigned char *)(*(void *)&a1[*v5] + v21);
          *(void *)&a1[v20] = v22;
          v19 |= (unint64_t)(v23 & 0x7F) << v17;
          if ((v23 & 0x80) == 0) {
            goto LABEL_42;
          }
          v17 += 7;
          BOOL v13 = v18++ >= 9;
          if (v13)
          {
            unint64_t v19 = 0;
            int v24 = a1[*v4];
            goto LABEL_44;
          }
        }
        a1[*v4] = 1;
LABEL_42:
        int v24 = a1[*v4];
        if (a1[*v4]) {
          unint64_t v19 = 0;
        }
LABEL_44:
        int v25 = v19 & 7;
        if (v24 || v25 == 4) {
          break;
        }
        switch((v19 >> 3))
        {
          case 1u:
            if ((v19 & 7) != 0) {
              goto LABEL_122;
            }
            unsigned int v27 = 0;
            while (1)
            {
              uint64_t v28 = *v2;
              uint64_t v29 = *(void *)&a1[v28];
              unint64_t v30 = v29 + 1;
              if (v29 == -1 || v30 > *(void *)&a1[*v3]) {
                goto LABEL_108;
              }
              int v31 = *(char *)(*(void *)&a1[*v5] + v29);
              *(void *)&a1[v28] = v30;
              if (v31 < 0)
              {
                BOOL v32 = v27++ > 8;
                if (!v32) {
                  continue;
                }
              }
              goto LABEL_32;
            }
          case 2u:
            if ((v19 & 7) != 0) {
              goto LABEL_122;
            }
            unsigned int v33 = 0;
            while (1)
            {
              uint64_t v34 = *v2;
              uint64_t v35 = *(void *)&a1[v34];
              unint64_t v36 = v35 + 1;
              if (v35 == -1 || v36 > *(void *)&a1[*v3]) {
                goto LABEL_108;
              }
              int v37 = *(char *)(*(void *)&a1[*v5] + v35);
              *(void *)&a1[v34] = v36;
              if (v37 < 0)
              {
                BOOL v32 = v33++ > 8;
                if (!v32) {
                  continue;
                }
              }
              goto LABEL_32;
            }
          case 3u:
            if ((v19 & 7) != 0) {
              goto LABEL_122;
            }
            unsigned int v38 = 0;
            while (1)
            {
              uint64_t v39 = *v2;
              uint64_t v40 = *(void *)&a1[v39];
              unint64_t v41 = v40 + 1;
              if (v40 == -1 || v41 > *(void *)&a1[*v3]) {
                goto LABEL_108;
              }
              int v42 = *(char *)(*(void *)&a1[*v5] + v40);
              *(void *)&a1[v39] = v41;
              if (v42 < 0)
              {
                BOOL v32 = v38++ > 8;
                if (!v32) {
                  continue;
                }
              }
              goto LABEL_32;
            }
          case 4u:
            if ((v19 & 7) != 0) {
              goto LABEL_122;
            }
            unsigned int v43 = 0;
            while (1)
            {
              uint64_t v44 = *v2;
              uint64_t v45 = *(void *)&a1[v44];
              unint64_t v46 = v45 + 1;
              if (v45 == -1 || v46 > *(void *)&a1[*v3]) {
                goto LABEL_108;
              }
              int v47 = *(char *)(*(void *)&a1[*v5] + v45);
              *(void *)&a1[v44] = v46;
              if (v47 < 0)
              {
                BOOL v32 = v43++ > 8;
                if (!v32) {
                  continue;
                }
              }
              goto LABEL_32;
            }
          case 5u:
            if ((v19 & 7) != 0) {
              goto LABEL_122;
            }
            unsigned int v48 = 0;
            while (1)
            {
              uint64_t v49 = *v2;
              uint64_t v50 = *(void *)&a1[v49];
              unint64_t v51 = v50 + 1;
              if (v50 == -1 || v51 > *(void *)&a1[*v3]) {
                goto LABEL_108;
              }
              int v52 = *(char *)(*(void *)&a1[*v5] + v50);
              *(void *)&a1[v49] = v51;
              if (v52 < 0)
              {
                BOOL v32 = v48++ > 8;
                if (!v32) {
                  continue;
                }
              }
              goto LABEL_32;
            }
          case 6u:
            if (v25 == 2) {
              goto LABEL_90;
            }
            goto LABEL_122;
          case 7u:
            if ((v19 & 7) != 0) {
              goto LABEL_122;
            }
            unsigned int v53 = 0;
            while (1)
            {
              uint64_t v54 = *v2;
              uint64_t v55 = *(void *)&a1[v54];
              unint64_t v56 = v55 + 1;
              if (v55 == -1 || v56 > *(void *)&a1[*v3]) {
                goto LABEL_108;
              }
              int v57 = *(char *)(*(void *)&a1[*v5] + v55);
              *(void *)&a1[v54] = v56;
              if (v57 < 0)
              {
                BOOL v32 = v53++ > 8;
                if (!v32) {
                  continue;
                }
              }
              goto LABEL_32;
            }
          case 8u:
            if ((v19 & 7) != 0) {
              goto LABEL_122;
            }
            unsigned int v58 = 0;
            break;
          default:
LABEL_90:
            if (PBReaderSkipValueWithTag()) {
              continue;
            }
LABEL_122:
            PBReaderRecallMark();
            goto LABEL_123;
        }
        while (1)
        {
          uint64_t v59 = *v2;
          uint64_t v60 = *(void *)&a1[v59];
          unint64_t v61 = v60 + 1;
          if (v60 == -1 || v61 > *(void *)&a1[*v3]) {
            break;
          }
          int v62 = *(char *)(*(void *)&a1[*v5] + v60);
          *(void *)&a1[v59] = v61;
          if (v62 < 0)
          {
            BOOL v32 = v58++ > 8;
            if (!v32) {
              continue;
            }
          }
          goto LABEL_32;
        }
LABEL_108:
        a1[*v4] = 1;
      }
      int v63 = a1[*v4];
      PBReaderRecallMark();
      if (v63)
      {
LABEL_123:
        PBReaderRecallMark();
        return 0;
      }
LABEL_116:
      PBReaderRecallMark();
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v64 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v64;
}

BOOL GEOPDSearchQueryIntentMetadataIsValid(char *a1)
{
  uint64_t v727 = *MEMORY[0x1E4F143B8];
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] >= *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
LABEL_1518:
    BOOL v723 = a1[*v4] == 0;
    PBReaderRecallMark();
    return v723;
  }
  uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (a1[*v4]) {
      goto LABEL_1518;
    }
    char v6 = 0;
    unsigned int v7 = 0;
    unint64_t v8 = 0;
    while (1)
    {
      uint64_t v9 = *v2;
      uint64_t v10 = *(void *)&a1[v9];
      unint64_t v11 = v10 + 1;
      if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
        break;
      }
      char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
      *(void *)&a1[v9] = v11;
      v8 |= (unint64_t)(v12 & 0x7F) << v6;
      if ((v12 & 0x80) == 0) {
        goto LABEL_12;
      }
      v6 += 7;
      BOOL v13 = v7++ >= 9;
      if (v13)
      {
        unint64_t v8 = 0;
        uint64_t v14 = *v4;
        int v15 = a1[v14];
        goto LABEL_14;
      }
    }
    a1[*v4] = 1;
LABEL_12:
    uint64_t v14 = *v4;
    int v15 = a1[v14];
    if (a1[v14]) {
      unint64_t v8 = 0;
    }
LABEL_14:
    int v16 = v8 & 7;
    if (v15 || v16 == 4) {
      goto LABEL_1518;
    }
    switch((v8 >> 3))
    {
      case 1u:
        if (v16 == 2) {
          goto LABEL_30;
        }
        goto LABEL_1524;
      case 2u:
        if (v16 == 2) {
          goto LABEL_30;
        }
        goto LABEL_1524;
      case 3u:
        if ((v8 & 7) != 0) {
          goto LABEL_1524;
        }
        unsigned int v18 = 0;
        while (1)
        {
          uint64_t v19 = *v2;
          uint64_t v20 = *(void *)&a1[v19];
          unint64_t v21 = v20 + 1;
          if (v20 == -1 || v21 > *(void *)&a1[*v3]) {
            goto LABEL_883;
          }
          int v22 = *(char *)(*(void *)&a1[*v5] + v20);
          *(void *)&a1[v19] = v21;
          if (v22 < 0)
          {
            BOOL v23 = v18++ > 8;
            if (!v23) {
              continue;
            }
          }
          goto LABEL_1496;
        }
      case 4u:
        if (v16 != 1) {
          goto LABEL_1524;
        }
        uint64_t v24 = *v2;
        unint64_t v25 = *(void *)&a1[v24];
        if (v25 > 0xFFFFFFFFFFFFFFF7) {
          goto LABEL_884;
        }
        unint64_t v26 = v25 + 8;
        if (v26 > *(void *)&a1[*v3]) {
          goto LABEL_884;
        }
        *(void *)&a1[v24] = v26;
        goto LABEL_1496;
      case 5u:
        if ((v8 & 7) != 0) {
          goto LABEL_1524;
        }
        unsigned int v27 = 0;
        while (1)
        {
          uint64_t v28 = *v2;
          uint64_t v29 = *(void *)&a1[v28];
          unint64_t v30 = v29 + 1;
          if (v29 == -1 || v30 > *(void *)&a1[*v3]) {
            goto LABEL_883;
          }
          int v31 = *(char *)(*(void *)&a1[*v5] + v29);
          *(void *)&a1[v28] = v30;
          if (v31 < 0)
          {
            BOOL v23 = v27++ > 8;
            if (!v23) {
              continue;
            }
          }
          goto LABEL_1496;
        }
      case 6u:
        if ((v8 & 7) != 0) {
          goto LABEL_1524;
        }
        unsigned int v32 = 0;
        while (1)
        {
          uint64_t v33 = *v2;
          uint64_t v34 = *(void *)&a1[v33];
          unint64_t v35 = v34 + 1;
          if (v34 == -1 || v35 > *(void *)&a1[*v3]) {
            goto LABEL_883;
          }
          int v36 = *(char *)(*(void *)&a1[*v5] + v34);
          *(void *)&a1[v33] = v35;
          if (v36 < 0)
          {
            BOOL v23 = v32++ > 8;
            if (!v23) {
              continue;
            }
          }
          goto LABEL_1496;
        }
      case 7u:
        if (v16 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_1524;
        }
        [a1 position];
        [a1 length];
LABEL_63:
        while (2)
        {
          while (2)
          {
            if (*(void *)&a1[*v2] >= *(void *)&a1[*v3] || a1[*v4]) {
              goto LABEL_1494;
            }
            char v37 = 0;
            unsigned int v38 = 0;
            unint64_t v39 = 0;
            while (2)
            {
              uint64_t v40 = *v2;
              uint64_t v41 = *(void *)&a1[v40];
              unint64_t v42 = v41 + 1;
              if (v41 == -1 || v42 > *(void *)&a1[*v3])
              {
                a1[*v4] = 1;
              }
              else
              {
                char v43 = *(unsigned char *)(*(void *)&a1[*v5] + v41);
                *(void *)&a1[v40] = v42;
                v39 |= (unint64_t)(v43 & 0x7F) << v37;
                if (v43 < 0)
                {
                  v37 += 7;
                  BOOL v13 = v38++ >= 9;
                  if (v13)
                  {
                    unint64_t v39 = 0;
                    uint64_t v44 = *v4;
                    int v45 = a1[v44];
                    goto LABEL_75;
                  }
                  continue;
                }
              }
              break;
            }
            uint64_t v44 = *v4;
            int v45 = a1[v44];
            if (a1[v44]) {
              unint64_t v39 = 0;
            }
LABEL_75:
            int v46 = v39 & 7;
            if (v45) {
              BOOL v47 = 1;
            }
            else {
              BOOL v47 = v46 == 4;
            }
            if (v47) {
              goto LABEL_1494;
            }
            switch((v39 >> 3))
            {
              case 1u:
                if ((v39 & 7) != 0) {
                  goto LABEL_1523;
                }
                unsigned int v51 = 0;
                while (1)
                {
                  uint64_t v52 = *v2;
                  uint64_t v53 = *(void *)&a1[v52];
                  unint64_t v54 = v53 + 1;
                  if (v53 == -1 || v54 > *(void *)&a1[*v3]) {
                    break;
                  }
                  int v55 = *(char *)(*(void *)&a1[*v5] + v53);
                  *(void *)&a1[v52] = v54;
                  if (v55 < 0)
                  {
                    BOOL v23 = v51++ > 8;
                    if (!v23) {
                      continue;
                    }
                  }
                  goto LABEL_63;
                }
                uint64_t v44 = *v4;
LABEL_138:
                a1[v44] = 1;
                continue;
              case 2u:
              case 3u:
              case 4u:
                if (v46 != 1) {
                  goto LABEL_1523;
                }
                uint64_t v48 = *v2;
                unint64_t v49 = *(void *)&a1[v48];
                if (v49 > 0xFFFFFFFFFFFFFFF7) {
                  goto LABEL_138;
                }
                unint64_t v50 = v49 + 8;
                if (v50 > *(void *)&a1[*v3]) {
                  goto LABEL_138;
                }
                *(void *)&a1[v48] = v50;
                continue;
              case 5u:
                if (v46 != 2 || !PBReaderPlaceMark()) {
                  goto LABEL_1523;
                }
                [a1 position];
                [a1 length];
                break;
              case 6u:
                if (v46 != 2 || !PBReaderPlaceMark() || !GEOPDSearchStringStringPairIsValid(a1)) {
                  goto LABEL_1523;
                }
                goto LABEL_136;
              default:
                if ((PBReaderSkipValueWithTag() & 1) == 0) {
                  goto LABEL_1523;
                }
                continue;
            }
            break;
          }
LABEL_97:
          while (*(void *)&a1[*v2] < *(void *)&a1[*v3] && !a1[*v4])
          {
            char v56 = 0;
            unsigned int v57 = 0;
            unint64_t v58 = 0;
            while (1)
            {
              uint64_t v59 = *v2;
              uint64_t v60 = *(void *)&a1[v59];
              unint64_t v61 = v60 + 1;
              if (v60 == -1 || v61 > *(void *)&a1[*v3]) {
                break;
              }
              char v62 = *(unsigned char *)(*(void *)&a1[*v5] + v60);
              *(void *)&a1[v59] = v61;
              v58 |= (unint64_t)(v62 & 0x7F) << v56;
              if ((v62 & 0x80) == 0) {
                goto LABEL_107;
              }
              v56 += 7;
              BOOL v13 = v57++ >= 9;
              if (v13)
              {
                unint64_t v58 = 0;
                uint64_t v63 = *v4;
                int v64 = a1[v63];
                goto LABEL_109;
              }
            }
            a1[*v4] = 1;
LABEL_107:
            uint64_t v63 = *v4;
            int v64 = a1[v63];
            if (a1[v63]) {
              unint64_t v58 = 0;
            }
LABEL_109:
            int v65 = v58 & 7;
            if (v64 || v65 == 4) {
              break;
            }
            if ((v58 >> 3) == 2)
            {
              if (v65 == 1)
              {
                uint64_t v72 = *v2;
                unint64_t v73 = *(void *)&a1[v72];
                if (v73 <= 0xFFFFFFFFFFFFFFF7 && (unint64_t v74 = v73 + 8, v74 <= *(void *)&a1[*v3])) {
                  *(void *)&a1[v72] = v74;
                }
                else {
                  a1[v63] = 1;
                }
                continue;
              }
              goto LABEL_1522;
            }
            if ((v58 >> 3) == 1)
            {
              if ((v58 & 7) == 0)
              {
                unsigned int v67 = 0;
                do
                {
                  uint64_t v68 = *v2;
                  uint64_t v69 = *(void *)&a1[v68];
                  unint64_t v70 = v69 + 1;
                  if (v69 == -1 || v70 > *(void *)&a1[*v3])
                  {
                    a1[*v4] = 1;
                    goto LABEL_97;
                  }
                  int v71 = *(char *)(*(void *)&a1[*v5] + v69);
                  *(void *)&a1[v68] = v70;
                  if ((v71 & 0x80000000) == 0) {
                    break;
                  }
                  BOOL v23 = v67++ > 8;
                }
                while (!v23);
                continue;
              }
              goto LABEL_1522;
            }
            if (!PBReaderSkipValueWithTag()) {
              goto LABEL_1522;
            }
          }
          int v75 = a1[*v4];
          PBReaderRecallMark();
          if (!v75)
          {
LABEL_136:
            PBReaderRecallMark();
            continue;
          }
          goto LABEL_1523;
        }
      case 8u:
        if (v16 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_1524;
        }
        [a1 position];
        [a1 length];
        while (2)
        {
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3] || a1[*v4]) {
            goto LABEL_1272;
          }
          char v76 = 0;
          unsigned int v77 = 0;
          unint64_t v78 = 0;
          while (2)
          {
            uint64_t v79 = *v2;
            uint64_t v80 = *(void *)&a1[v79];
            unint64_t v81 = v80 + 1;
            if (v80 == -1 || v81 > *(void *)&a1[*v3])
            {
              a1[*v4] = 1;
            }
            else
            {
              char v82 = *(unsigned char *)(*(void *)&a1[*v5] + v80);
              *(void *)&a1[v79] = v81;
              v78 |= (unint64_t)(v82 & 0x7F) << v76;
              if (v82 < 0)
              {
                v76 += 7;
                BOOL v13 = v77++ >= 9;
                if (v13)
                {
                  unint64_t v78 = 0;
                  uint64_t v83 = *v4;
                  int v84 = a1[v83];
                  goto LABEL_154;
                }
                continue;
              }
            }
            break;
          }
          uint64_t v83 = *v4;
          int v84 = a1[v83];
          if (a1[v83]) {
            unint64_t v78 = 0;
          }
LABEL_154:
          int v85 = v78 & 7;
          if (v84) {
            BOOL v86 = 1;
          }
          else {
            BOOL v86 = v85 == 4;
          }
          if (!v86)
          {
            switch((v78 >> 3))
            {
              case 1u:
                if (v85 == 2) {
                  goto LABEL_164;
                }
                goto LABEL_1523;
              case 2u:
                if (v85 != 2 || !PBReaderPlaceMark() || !GEOPDSearchKeyValueFloatPairIsValid(a1)) {
                  goto LABEL_1523;
                }
                goto LABEL_173;
              case 3u:
              case 4u:
                if (v85 != 5) {
                  goto LABEL_1523;
                }
                uint64_t v87 = *v2;
                unint64_t v88 = *(void *)&a1[v87];
                if (v88 <= 0xFFFFFFFFFFFFFFFBLL && (unint64_t v89 = v88 + 4, v89 <= *(void *)&a1[*v3])) {
                  *(void *)&a1[v87] = v89;
                }
                else {
                  a1[v83] = 1;
                }
                continue;
              case 5u:
                if (v85 != 2 || !PBReaderPlaceMark() || !GEOPDSearchStringStringPairIsValid(a1)) {
                  goto LABEL_1523;
                }
LABEL_173:
                PBReaderRecallMark();
                break;
              default:
LABEL_164:
                if ((PBReaderSkipValueWithTag() & 1) == 0) {
                  goto LABEL_1523;
                }
                continue;
            }
            continue;
          }
          goto LABEL_1272;
        }
      case 9u:
        if (v16 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_1524;
        }
        [a1 position];
        [a1 length];
LABEL_178:
        while (2)
        {
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3] || a1[*v4]) {
            goto LABEL_1272;
          }
          char v90 = 0;
          unsigned int v91 = 0;
          unint64_t v92 = 0;
          while (2)
          {
            uint64_t v93 = *v2;
            uint64_t v94 = *(void *)&a1[v93];
            unint64_t v95 = v94 + 1;
            if (v94 == -1 || v95 > *(void *)&a1[*v3])
            {
              a1[*v4] = 1;
            }
            else
            {
              char v96 = *(unsigned char *)(*(void *)&a1[*v5] + v94);
              *(void *)&a1[v93] = v95;
              v92 |= (unint64_t)(v96 & 0x7F) << v90;
              if (v96 < 0)
              {
                v90 += 7;
                BOOL v13 = v91++ >= 9;
                if (v13)
                {
                  unint64_t v92 = 0;
                  uint64_t v97 = *v4;
                  int v98 = a1[v97];
                  goto LABEL_190;
                }
                continue;
              }
            }
            break;
          }
          uint64_t v97 = *v4;
          int v98 = a1[v97];
          if (a1[v97]) {
            unint64_t v92 = 0;
          }
LABEL_190:
          int v99 = v92 & 7;
          if (v98) {
            BOOL v100 = 1;
          }
          else {
            BOOL v100 = v99 == 4;
          }
          if (!v100)
          {
            switch((v92 >> 3))
            {
              case 1u:
              case 0xAu:
                if (v99 != 2 || !PBReaderPlaceMark() || !GEOPDSearchSpellSuggestionIsValid(a1)) {
                  goto LABEL_1523;
                }
                goto LABEL_202;
              case 2u:
                if ((v92 & 7) != 0) {
                  goto LABEL_1523;
                }
                unsigned int v101 = 0;
                while (1)
                {
                  uint64_t v102 = *v2;
                  uint64_t v103 = *(void *)&a1[v102];
                  unint64_t v104 = v103 + 1;
                  if (v103 == -1 || v104 > *(void *)&a1[*v3]) {
                    goto LABEL_289;
                  }
                  int v105 = *(char *)(*(void *)&a1[*v5] + v103);
                  *(void *)&a1[v102] = v104;
                  if (v105 < 0)
                  {
                    BOOL v23 = v101++ > 8;
                    if (!v23) {
                      continue;
                    }
                  }
                  goto LABEL_178;
                }
              case 3u:
                if ((v92 & 7) != 0) {
                  goto LABEL_1523;
                }
                unsigned int v106 = 0;
                while (1)
                {
                  uint64_t v107 = *v2;
                  uint64_t v108 = *(void *)&a1[v107];
                  unint64_t v109 = v108 + 1;
                  if (v108 == -1 || v109 > *(void *)&a1[*v3]) {
                    goto LABEL_289;
                  }
                  int v110 = *(char *)(*(void *)&a1[*v5] + v108);
                  *(void *)&a1[v107] = v109;
                  if (v110 < 0)
                  {
                    BOOL v23 = v106++ > 8;
                    if (!v23) {
                      continue;
                    }
                  }
                  goto LABEL_178;
                }
              case 4u:
                if ((v92 & 7) != 0) {
                  goto LABEL_1523;
                }
                unsigned int v111 = 0;
                while (1)
                {
                  uint64_t v112 = *v2;
                  uint64_t v113 = *(void *)&a1[v112];
                  unint64_t v114 = v113 + 1;
                  if (v113 == -1 || v114 > *(void *)&a1[*v3]) {
                    goto LABEL_289;
                  }
                  int v115 = *(char *)(*(void *)&a1[*v5] + v113);
                  *(void *)&a1[v112] = v114;
                  if (v115 < 0)
                  {
                    BOOL v23 = v111++ > 8;
                    if (!v23) {
                      continue;
                    }
                  }
                  goto LABEL_178;
                }
              case 5u:
                if ((v92 & 7) != 0) {
                  goto LABEL_1523;
                }
                unsigned int v116 = 0;
                while (1)
                {
                  uint64_t v117 = *v2;
                  uint64_t v118 = *(void *)&a1[v117];
                  unint64_t v119 = v118 + 1;
                  if (v118 == -1 || v119 > *(void *)&a1[*v3]) {
                    goto LABEL_289;
                  }
                  int v120 = *(char *)(*(void *)&a1[*v5] + v118);
                  *(void *)&a1[v117] = v119;
                  if (v120 < 0)
                  {
                    BOOL v23 = v116++ > 8;
                    if (!v23) {
                      continue;
                    }
                  }
                  goto LABEL_178;
                }
              case 6u:
              case 9u:
                if (v99 != 2 || !PBReaderPlaceMark() || !GEOPDSearchTokenCandidatesIsValid(a1)) {
                  goto LABEL_1523;
                }
LABEL_202:
                PBReaderRecallMark();
                continue;
              case 7u:
                if (v99 != 1) {
                  goto LABEL_1523;
                }
                uint64_t v121 = *v2;
                unint64_t v122 = *(void *)&a1[v121];
                if (v122 > 0xFFFFFFFFFFFFFFF7) {
                  goto LABEL_290;
                }
                unint64_t v123 = v122 + 8;
                if (v123 > *(void *)&a1[*v3]) {
                  goto LABEL_290;
                }
                *(void *)&a1[v121] = v123;
                continue;
              case 8u:
                if ((v92 & 7) != 0) {
                  goto LABEL_1523;
                }
                unsigned int v124 = 0;
                while (1)
                {
                  uint64_t v125 = *v2;
                  uint64_t v126 = *(void *)&a1[v125];
                  unint64_t v127 = v126 + 1;
                  if (v126 == -1 || v127 > *(void *)&a1[*v3]) {
                    goto LABEL_289;
                  }
                  int v128 = *(char *)(*(void *)&a1[*v5] + v126);
                  *(void *)&a1[v125] = v127;
                  if (v128 < 0)
                  {
                    BOOL v23 = v124++ > 8;
                    if (!v23) {
                      continue;
                    }
                  }
                  goto LABEL_178;
                }
              case 0xBu:
                if ((v92 & 7) != 0) {
                  goto LABEL_1523;
                }
                unsigned int v129 = 0;
                while (1)
                {
                  uint64_t v130 = *v2;
                  uint64_t v131 = *(void *)&a1[v130];
                  unint64_t v132 = v131 + 1;
                  if (v131 == -1 || v132 > *(void *)&a1[*v3]) {
                    goto LABEL_289;
                  }
                  int v133 = *(char *)(*(void *)&a1[*v5] + v131);
                  *(void *)&a1[v130] = v132;
                  if (v133 < 0)
                  {
                    BOOL v23 = v129++ > 8;
                    if (!v23) {
                      continue;
                    }
                  }
                  goto LABEL_178;
                }
              case 0xCu:
                if ((v92 & 7) != 0) {
                  goto LABEL_1523;
                }
                unsigned int v134 = 0;
                while (1)
                {
                  uint64_t v135 = *v2;
                  uint64_t v136 = *(void *)&a1[v135];
                  unint64_t v137 = v136 + 1;
                  if (v136 == -1 || v137 > *(void *)&a1[*v3]) {
                    goto LABEL_289;
                  }
                  int v138 = *(char *)(*(void *)&a1[*v5] + v136);
                  *(void *)&a1[v135] = v137;
                  if (v138 < 0)
                  {
                    BOOL v23 = v134++ > 8;
                    if (!v23) {
                      continue;
                    }
                  }
                  goto LABEL_178;
                }
              case 0xDu:
                if ((v92 & 7) != 0) {
                  goto LABEL_1523;
                }
                unsigned int v139 = 0;
                while (1)
                {
                  uint64_t v140 = *v2;
                  uint64_t v141 = *(void *)&a1[v140];
                  unint64_t v142 = v141 + 1;
                  if (v141 == -1 || v142 > *(void *)&a1[*v3]) {
                    goto LABEL_289;
                  }
                  int v143 = *(char *)(*(void *)&a1[*v5] + v141);
                  *(void *)&a1[v140] = v142;
                  if (v143 < 0)
                  {
                    BOOL v23 = v139++ > 8;
                    if (!v23) {
                      continue;
                    }
                  }
                  goto LABEL_178;
                }
              case 0xEu:
                if ((v92 & 7) != 0) {
                  goto LABEL_1523;
                }
                unsigned int v144 = 0;
                while (1)
                {
                  uint64_t v145 = *v2;
                  uint64_t v146 = *(void *)&a1[v145];
                  unint64_t v147 = v146 + 1;
                  if (v146 == -1 || v147 > *(void *)&a1[*v3]) {
                    goto LABEL_289;
                  }
                  int v148 = *(char *)(*(void *)&a1[*v5] + v146);
                  *(void *)&a1[v145] = v147;
                  if (v148 < 0)
                  {
                    BOOL v23 = v144++ > 8;
                    if (!v23) {
                      continue;
                    }
                  }
                  goto LABEL_178;
                }
              case 0xFu:
                if ((v92 & 7) != 0) {
                  goto LABEL_1523;
                }
                unsigned int v149 = 0;
                break;
              default:
                if ((PBReaderSkipValueWithTag() & 1) == 0) {
                  goto LABEL_1523;
                }
                continue;
            }
            while (1)
            {
              uint64_t v150 = *v2;
              uint64_t v151 = *(void *)&a1[v150];
              unint64_t v152 = v151 + 1;
              if (v151 == -1 || v152 > *(void *)&a1[*v3]) {
                break;
              }
              int v153 = *(char *)(*(void *)&a1[*v5] + v151);
              *(void *)&a1[v150] = v152;
              if (v153 < 0)
              {
                BOOL v23 = v149++ > 8;
                if (!v23) {
                  continue;
                }
              }
              goto LABEL_178;
            }
LABEL_289:
            uint64_t v97 = *v4;
LABEL_290:
            a1[v97] = 1;
            continue;
          }
          goto LABEL_1272;
        }
      case 0xAu:
        if ((v8 & 7) != 0) {
          goto LABEL_1524;
        }
        unsigned int v154 = 0;
        while (1)
        {
          uint64_t v155 = *v2;
          uint64_t v156 = *(void *)&a1[v155];
          unint64_t v157 = v156 + 1;
          if (v156 == -1 || v157 > *(void *)&a1[*v3]) {
            goto LABEL_883;
          }
          int v158 = *(char *)(*(void *)&a1[*v5] + v156);
          *(void *)&a1[v155] = v157;
          if (v158 < 0)
          {
            BOOL v23 = v154++ > 8;
            if (!v23) {
              continue;
            }
          }
          goto LABEL_1496;
        }
      case 0xBu:
        if (v16 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_1524;
        }
        [a1 position];
        [a1 length];
        while (2)
        {
          while (2)
          {
            if (*(void *)&a1[*v2] >= *(void *)&a1[*v3] || a1[*v4]) {
              goto LABEL_1272;
            }
            char v159 = 0;
            unsigned int v160 = 0;
            unint64_t v161 = 0;
            while (1)
            {
              uint64_t v162 = *v2;
              uint64_t v163 = *(void *)&a1[v162];
              unint64_t v164 = v163 + 1;
              if (v163 == -1 || v164 > *(void *)&a1[*v3]) {
                break;
              }
              char v165 = *(unsigned char *)(*(void *)&a1[*v5] + v163);
              *(void *)&a1[v162] = v164;
              v161 |= (unint64_t)(v165 & 0x7F) << v159;
              if ((v165 & 0x80) == 0) {
                goto LABEL_312;
              }
              v159 += 7;
              BOOL v13 = v160++ >= 9;
              if (v13)
              {
                unint64_t v161 = 0;
                int v166 = a1[*v4];
                goto LABEL_314;
              }
            }
            a1[*v4] = 1;
LABEL_312:
            int v166 = a1[*v4];
            if (a1[*v4]) {
              unint64_t v161 = 0;
            }
LABEL_314:
            int v167 = v161 & 7;
            if (v166 || v167 == 4) {
              goto LABEL_1272;
            }
            if ((v161 >> 3) != 1)
            {
              if ((PBReaderSkipValueWithTag() & 1) == 0) {
                goto LABEL_1523;
              }
              continue;
            }
            break;
          }
          if (v167 == 2 && PBReaderPlaceMark() && GEONamedFeatureIsValid(a1))
          {
            PBReaderRecallMark();
            continue;
          }
          goto LABEL_1523;
        }
      case 0xCu:
        if (v16 != 2)
        {
          if ((v8 & 7) != 0) {
            goto LABEL_1524;
          }
          while (1)
          {
            uint64_t v169 = *v2;
            uint64_t v170 = *(void *)&a1[v169];
            unint64_t v171 = v170 + 1;
            if (v170 == -1 || v171 > *(void *)&a1[*v3]) {
              goto LABEL_883;
            }
            int v172 = *(char *)(*(void *)&a1[*v5] + v170);
            *(void *)&a1[v169] = v171;
            if (v172 < 0)
            {
              unsigned int v173 = v16++;
              if (v173 <= 8) {
                continue;
              }
            }
            goto LABEL_1496;
          }
        }
        if (!PBReaderPlaceMark()) {
          goto LABEL_1524;
        }
LABEL_1499:
        while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
        {
          unsigned int v713 = a1[*v4];
          if (a1[*v4]) {
            break;
          }
          while (1)
          {
            uint64_t v714 = *v2;
            uint64_t v715 = *(void *)&a1[v714];
            unint64_t v716 = v715 + 1;
            if (v715 == -1 || v716 > *(void *)&a1[*v3]) {
              break;
            }
            int v717 = *(char *)(*(void *)&a1[*v5] + v715);
            *(void *)&a1[v714] = v716;
            if (v717 < 0)
            {
              BOOL v13 = v713++ >= 9;
              if (!v13) {
                continue;
              }
            }
            goto LABEL_1499;
          }
          a1[*v4] = 1;
        }
        goto LABEL_1495;
      case 0xDu:
        if (v16 == 2 && PBReaderPlaceMark() && GEOPDSearchQuerySynonymMetadataIsValid(a1)) {
          goto LABEL_1495;
        }
        goto LABEL_1524;
      case 0xEu:
        if (v16 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_1524;
        }
        [a1 position];
        [a1 length];
LABEL_339:
        while (2)
        {
          while (2)
          {
            if (*(void *)&a1[*v2] >= *(void *)&a1[*v3] || a1[*v4]) {
              goto LABEL_1272;
            }
            char v174 = 0;
            unsigned int v175 = 0;
            unint64_t v176 = 0;
            while (1)
            {
              uint64_t v177 = *v2;
              uint64_t v178 = *(void *)&a1[v177];
              unint64_t v179 = v178 + 1;
              if (v178 == -1 || v179 > *(void *)&a1[*v3]) {
                break;
              }
              char v180 = *(unsigned char *)(*(void *)&a1[*v5] + v178);
              *(void *)&a1[v177] = v179;
              v176 |= (unint64_t)(v180 & 0x7F) << v174;
              if ((v180 & 0x80) == 0) {
                goto LABEL_349;
              }
              v174 += 7;
              BOOL v13 = v175++ >= 9;
              if (v13)
              {
                unint64_t v176 = 0;
                int v181 = a1[*v4];
                goto LABEL_351;
              }
            }
            a1[*v4] = 1;
LABEL_349:
            int v181 = a1[*v4];
            if (a1[*v4]) {
              unint64_t v176 = 0;
            }
LABEL_351:
            int v182 = v176 & 7;
            if (v181 || v182 == 4) {
              goto LABEL_1272;
            }
            unint64_t v184 = v176 >> 3;
            if ((v176 >> 3) != 3)
            {
              if (v184 == 2)
              {
                if (v182 != 2) {
                  goto LABEL_1523;
                }
              }
              else if (v184 == 1)
              {
                if ((v176 & 7) == 0)
                {
                  unsigned int v185 = 0;
                  do
                  {
                    uint64_t v186 = *v2;
                    uint64_t v187 = *(void *)&a1[v186];
                    unint64_t v188 = v187 + 1;
                    if (v187 == -1 || v188 > *(void *)&a1[*v3])
                    {
                      a1[*v4] = 1;
                      goto LABEL_339;
                    }
                    int v189 = *(char *)(*(void *)&a1[*v5] + v187);
                    *(void *)&a1[v186] = v188;
                    if ((v189 & 0x80000000) == 0) {
                      break;
                    }
                    BOOL v23 = v185++ > 8;
                  }
                  while (!v23);
                  continue;
                }
                goto LABEL_1523;
              }
              if ((PBReaderSkipValueWithTag() & 1) == 0) {
                goto LABEL_1523;
              }
              continue;
            }
            break;
          }
          if (v182 == 2 && PBReaderPlaceMark() && GEOPDSearchQuerySynonymMetadataIsValid(a1))
          {
            PBReaderRecallMark();
            continue;
          }
          goto LABEL_1523;
        }
      case 0xFu:
        if (v16 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_1524;
        }
        [a1 position];
        [a1 length];
LABEL_377:
        while (2)
        {
          while (2)
          {
            if (*(void *)&a1[*v2] >= *(void *)&a1[*v3] || a1[*v4]) {
              goto LABEL_1272;
            }
            char v190 = 0;
            unsigned int v191 = 0;
            unint64_t v192 = 0;
            while (2)
            {
              uint64_t v193 = *v2;
              uint64_t v194 = *(void *)&a1[v193];
              unint64_t v195 = v194 + 1;
              if (v194 == -1 || v195 > *(void *)&a1[*v3])
              {
                a1[*v4] = 1;
              }
              else
              {
                char v196 = *(unsigned char *)(*(void *)&a1[*v5] + v194);
                *(void *)&a1[v193] = v195;
                v192 |= (unint64_t)(v196 & 0x7F) << v190;
                if (v196 < 0)
                {
                  v190 += 7;
                  BOOL v13 = v191++ >= 9;
                  if (v13)
                  {
                    unint64_t v192 = 0;
                    uint64_t v197 = *v4;
                    int v198 = a1[v197];
                    goto LABEL_389;
                  }
                  continue;
                }
              }
              break;
            }
            uint64_t v197 = *v4;
            int v198 = a1[v197];
            if (a1[v197]) {
              unint64_t v192 = 0;
            }
LABEL_389:
            int v199 = v192 & 7;
            if (v198) {
              BOOL v200 = 1;
            }
            else {
              BOOL v200 = v199 == 4;
            }
            if (v200) {
              goto LABEL_1272;
            }
            switch((v192 >> 3))
            {
              case 1u:
                if (v199 == 2) {
                  goto LABEL_424;
                }
                goto LABEL_1523;
              case 2u:
              case 5u:
                if (v199 != 5) {
                  goto LABEL_1523;
                }
                uint64_t v201 = *v2;
                unint64_t v202 = *(void *)&a1[v201];
                if (v202 > 0xFFFFFFFFFFFFFFFBLL) {
                  goto LABEL_434;
                }
                unint64_t v203 = v202 + 4;
                if (v203 > *(void *)&a1[*v3]) {
                  goto LABEL_434;
                }
                *(void *)&a1[v201] = v203;
                continue;
              case 3u:
                if ((v192 & 7) != 0) {
                  goto LABEL_1523;
                }
                unsigned int v204 = 0;
                while (1)
                {
                  uint64_t v205 = *v2;
                  uint64_t v206 = *(void *)&a1[v205];
                  unint64_t v207 = v206 + 1;
                  if (v206 == -1 || v207 > *(void *)&a1[*v3]) {
                    goto LABEL_433;
                  }
                  int v208 = *(char *)(*(void *)&a1[*v5] + v206);
                  *(void *)&a1[v205] = v207;
                  if (v208 < 0)
                  {
                    BOOL v23 = v204++ > 8;
                    if (!v23) {
                      continue;
                    }
                  }
                  goto LABEL_377;
                }
              case 4u:
                if (v199 != 2)
                {
                  if ((v192 & 7) != 0) {
                    goto LABEL_1523;
                  }
                  while (1)
                  {
                    uint64_t v209 = *v2;
                    uint64_t v210 = *(void *)&a1[v209];
                    unint64_t v211 = v210 + 1;
                    if (v210 == -1 || v211 > *(void *)&a1[*v3]) {
                      break;
                    }
                    int v212 = *(char *)(*(void *)&a1[*v5] + v210);
                    *(void *)&a1[v209] = v211;
                    if (v212 < 0)
                    {
                      unsigned int v213 = v199++;
                      if (v213 <= 8) {
                        continue;
                      }
                    }
                    goto LABEL_377;
                  }
LABEL_433:
                  uint64_t v197 = *v4;
LABEL_434:
                  a1[v197] = 1;
                  continue;
                }
                if (!PBReaderPlaceMark()) {
                  goto LABEL_1523;
                }
LABEL_436:
                while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
                {
                  unsigned int v224 = a1[*v4];
                  if (a1[*v4]) {
                    break;
                  }
                  while (1)
                  {
                    uint64_t v225 = *v2;
                    uint64_t v226 = *(void *)&a1[v225];
                    unint64_t v227 = v226 + 1;
                    if (v226 == -1 || v227 > *(void *)&a1[*v3]) {
                      break;
                    }
                    int v228 = *(char *)(*(void *)&a1[*v5] + v226);
                    *(void *)&a1[v225] = v227;
                    if (v228 < 0)
                    {
                      BOOL v13 = v224++ >= 9;
                      if (!v13) {
                        continue;
                      }
                    }
                    goto LABEL_436;
                  }
                  a1[*v4] = 1;
                }
                break;
              case 6u:
                if ((v192 & 7) != 0) {
                  goto LABEL_1523;
                }
                unsigned int v214 = 0;
                while (1)
                {
                  uint64_t v215 = *v2;
                  uint64_t v216 = *(void *)&a1[v215];
                  unint64_t v217 = v216 + 1;
                  if (v216 == -1 || v217 > *(void *)&a1[*v3]) {
                    goto LABEL_433;
                  }
                  int v218 = *(char *)(*(void *)&a1[*v5] + v216);
                  *(void *)&a1[v215] = v217;
                  if (v218 < 0)
                  {
                    BOOL v23 = v214++ > 8;
                    if (!v23) {
                      continue;
                    }
                  }
                  goto LABEL_377;
                }
              case 7u:
                if (v199 == 2) {
                  goto LABEL_424;
                }
                goto LABEL_1523;
              case 8u:
                if (v199 != 2)
                {
                  if ((v192 & 7) != 0) {
                    goto LABEL_1523;
                  }
                  while (1)
                  {
                    uint64_t v219 = *v2;
                    uint64_t v220 = *(void *)&a1[v219];
                    unint64_t v221 = v220 + 1;
                    if (v220 == -1 || v221 > *(void *)&a1[*v3]) {
                      goto LABEL_433;
                    }
                    int v222 = *(char *)(*(void *)&a1[*v5] + v220);
                    *(void *)&a1[v219] = v221;
                    if (v222 < 0)
                    {
                      unsigned int v223 = v199++;
                      if (v223 <= 8) {
                        continue;
                      }
                    }
                    goto LABEL_377;
                  }
                }
                if (!PBReaderPlaceMark()) {
                  goto LABEL_1523;
                }
LABEL_446:
                while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
                {
                  unsigned int v229 = a1[*v4];
                  if (a1[*v4]) {
                    break;
                  }
                  while (1)
                  {
                    uint64_t v230 = *v2;
                    uint64_t v231 = *(void *)&a1[v230];
                    unint64_t v232 = v231 + 1;
                    if (v231 == -1 || v232 > *(void *)&a1[*v3]) {
                      break;
                    }
                    int v233 = *(char *)(*(void *)&a1[*v5] + v231);
                    *(void *)&a1[v230] = v232;
                    if (v233 < 0)
                    {
                      BOOL v13 = v229++ >= 9;
                      if (!v13) {
                        continue;
                      }
                    }
                    goto LABEL_446;
                  }
                  a1[*v4] = 1;
                }
                break;
              default:
LABEL_424:
                if ((PBReaderSkipValueWithTag() & 1) == 0) {
                  goto LABEL_1523;
                }
                continue;
            }
            break;
          }
          PBReaderRecallMark();
          continue;
        }
      case 0x10u:
        if (v16 != 2) {
          goto LABEL_1524;
        }
        uint64_t v725 = 0;
        uint64_t v726 = 0;
        if (!PBReaderPlaceMark()) {
          goto LABEL_1524;
        }
        [a1 position];
        [a1 length];
LABEL_459:
        while (2)
        {
          while (2)
          {
            if (*(void *)&a1[*v2] >= *(void *)&a1[*v3] || a1[*v4]) {
              goto LABEL_1343;
            }
            char v234 = 0;
            unsigned int v235 = 0;
            unint64_t v236 = 0;
            while (2)
            {
              uint64_t v237 = *v2;
              uint64_t v238 = *(void *)&a1[v237];
              unint64_t v239 = v238 + 1;
              if (v238 == -1 || v239 > *(void *)&a1[*v3])
              {
                a1[*v4] = 1;
              }
              else
              {
                char v240 = *(unsigned char *)(*(void *)&a1[*v5] + v238);
                *(void *)&a1[v237] = v239;
                v236 |= (unint64_t)(v240 & 0x7F) << v234;
                if (v240 < 0)
                {
                  v234 += 7;
                  BOOL v13 = v235++ >= 9;
                  if (v13)
                  {
                    unint64_t v236 = 0;
                    uint64_t v241 = *v4;
                    int v242 = a1[v241];
                    goto LABEL_471;
                  }
                  continue;
                }
              }
              break;
            }
            uint64_t v241 = *v4;
            int v242 = a1[v241];
            if (a1[v241]) {
              unint64_t v236 = 0;
            }
LABEL_471:
            int v243 = v236 & 7;
            if (v242) {
              BOOL v244 = 1;
            }
            else {
              BOOL v244 = v243 == 4;
            }
            if (v244) {
              goto LABEL_1343;
            }
            switch((v236 >> 3))
            {
              case 1u:
                if (v243 != 5) {
                  goto LABEL_1523;
                }
                uint64_t v245 = *v2;
                unint64_t v246 = *(void *)&a1[v245];
                if (v246 > 0xFFFFFFFFFFFFFFFBLL) {
                  goto LABEL_622;
                }
                unint64_t v247 = v246 + 4;
                if (v247 > *(void *)&a1[*v3]) {
                  goto LABEL_622;
                }
                *(void *)&a1[v245] = v247;
                continue;
              case 2u:
                if (v243 == 2 && PBReaderPlaceMark() && GEOPDSearchPairIsValid(a1)) {
                  goto LABEL_620;
                }
                goto LABEL_1523;
              case 3u:
                if (v243 != 2 || !PBReaderPlaceMark()) {
                  goto LABEL_1523;
                }
                [a1 position];
                [a1 length];
LABEL_487:
                if (*(void *)&a1[*v2] >= *(void *)&a1[*v3] || a1[*v4]) {
                  goto LABEL_619;
                }
                char v248 = 0;
                unsigned int v249 = 0;
                unint64_t v250 = 0;
                break;
              case 4u:
                if ((v236 & 7) != 0) {
                  goto LABEL_1523;
                }
                unsigned int v308 = 0;
                while (1)
                {
                  uint64_t v309 = *v2;
                  uint64_t v310 = *(void *)&a1[v309];
                  unint64_t v311 = v310 + 1;
                  if (v310 == -1 || v311 > *(void *)&a1[*v3]) {
                    break;
                  }
                  int v312 = *(char *)(*(void *)&a1[*v5] + v310);
                  *(void *)&a1[v309] = v311;
                  if (v312 < 0)
                  {
                    BOOL v23 = v308++ > 8;
                    if (!v23) {
                      continue;
                    }
                  }
                  goto LABEL_459;
                }
                uint64_t v241 = *v4;
LABEL_622:
                a1[v241] = 1;
                continue;
              case 5u:
                if (v243 == 2) {
                  goto LABEL_617;
                }
                goto LABEL_1523;
              case 6u:
                if (v243 == 2) {
                  goto LABEL_617;
                }
                goto LABEL_1523;
              default:
LABEL_617:
                if ((PBReaderSkipValueWithTag() & 1) == 0) {
                  goto LABEL_1523;
                }
                continue;
            }
            break;
          }
          while (1)
          {
            uint64_t v251 = *v2;
            uint64_t v252 = *(void *)&a1[v251];
            unint64_t v253 = v252 + 1;
            if (v252 == -1 || v253 > *(void *)&a1[*v3]) {
              break;
            }
            char v254 = *(unsigned char *)(*(void *)&a1[*v5] + v252);
            *(void *)&a1[v251] = v253;
            v250 |= (unint64_t)(v254 & 0x7F) << v248;
            if ((v254 & 0x80) == 0) {
              goto LABEL_497;
            }
            v248 += 7;
            BOOL v13 = v249++ >= 9;
            if (v13)
            {
              unint64_t v250 = 0;
              uint64_t v255 = *v4;
              int v256 = a1[v255];
              goto LABEL_499;
            }
          }
          a1[*v4] = 1;
LABEL_497:
          uint64_t v255 = *v4;
          int v256 = a1[v255];
          if (a1[v255]) {
            unint64_t v250 = 0;
          }
LABEL_499:
          int v257 = v250 & 7;
          if (v256) {
            BOOL v258 = 1;
          }
          else {
            BOOL v258 = v257 == 4;
          }
          if (v258)
          {
LABEL_619:
            int v313 = a1[*v4];
            PBReaderRecallMark();
            if (!v313)
            {
LABEL_620:
              PBReaderRecallMark();
              continue;
            }
            goto LABEL_1523;
          }
          break;
        }
        switch((v250 >> 3))
        {
          case 1u:
            if (v257 == 2) {
              goto LABEL_576;
            }
            goto LABEL_1520;
          case 2u:
            if (v257 == 2) {
              goto LABEL_576;
            }
            goto LABEL_1520;
          case 3u:
            if ((v250 & 7) != 0) {
              goto LABEL_1520;
            }
            unsigned int v263 = 0;
            while (1)
            {
              uint64_t v264 = *v2;
              uint64_t v265 = *(void *)&a1[v264];
              unint64_t v266 = v265 + 1;
              if (v265 == -1 || v266 > *(void *)&a1[*v3]) {
                goto LABEL_594;
              }
              int v267 = *(char *)(*(void *)&a1[*v5] + v265);
              *(void *)&a1[v264] = v266;
              if (v267 < 0)
              {
                BOOL v23 = v263++ > 8;
                if (!v23) {
                  continue;
                }
              }
              goto LABEL_487;
            }
          case 4u:
            if (v257 == 2) {
              goto LABEL_576;
            }
            goto LABEL_1520;
          case 5u:
            if ((v250 & 7) != 0) {
              goto LABEL_1520;
            }
            unsigned int v268 = 0;
            while (1)
            {
              uint64_t v269 = *v2;
              uint64_t v270 = *(void *)&a1[v269];
              unint64_t v271 = v270 + 1;
              if (v270 == -1 || v271 > *(void *)&a1[*v3]) {
                goto LABEL_594;
              }
              int v272 = *(char *)(*(void *)&a1[*v5] + v270);
              *(void *)&a1[v269] = v271;
              if (v272 < 0)
              {
                BOOL v23 = v268++ > 8;
                if (!v23) {
                  continue;
                }
              }
              goto LABEL_487;
            }
          case 6u:
          case 7u:
            if (v257 != 5) {
              goto LABEL_1520;
            }
            uint64_t v259 = *v2;
            unint64_t v262 = *(void *)&a1[v259];
            if (v262 > 0xFFFFFFFFFFFFFFFBLL) {
              goto LABEL_595;
            }
            unint64_t v261 = v262 + 4;
            goto LABEL_510;
          case 8u:
          case 9u:
          case 0xEu:
          case 0xFu:
            if (v257 != 1) {
              goto LABEL_1520;
            }
            uint64_t v259 = *v2;
            unint64_t v260 = *(void *)&a1[v259];
            if (v260 > 0xFFFFFFFFFFFFFFF7) {
              goto LABEL_595;
            }
            unint64_t v261 = v260 + 8;
LABEL_510:
            if (v261 > *(void *)&a1[*v3]) {
              goto LABEL_595;
            }
            *(void *)&a1[v259] = v261;
            goto LABEL_487;
          case 0xAu:
            if (v257 == 2) {
              goto LABEL_576;
            }
            goto LABEL_1520;
          case 0xBu:
            if ((v250 & 7) != 0) {
              goto LABEL_1520;
            }
            unsigned int v273 = 0;
            while (1)
            {
              uint64_t v274 = *v2;
              uint64_t v275 = *(void *)&a1[v274];
              unint64_t v276 = v275 + 1;
              if (v275 == -1 || v276 > *(void *)&a1[*v3]) {
                goto LABEL_594;
              }
              int v277 = *(char *)(*(void *)&a1[*v5] + v275);
              *(void *)&a1[v274] = v276;
              if (v277 < 0)
              {
                BOOL v23 = v273++ > 8;
                if (!v23) {
                  continue;
                }
              }
              goto LABEL_487;
            }
          case 0xCu:
            if (v257 == 2)
            {
              if (PBReaderPlaceMark())
              {
                while (1)
                {
LABEL_597:
                  if (*(void *)&a1[*v2] >= *(void *)&a1[*v3] || (unsigned int v303 = a1[*v4], a1[*v4]))
                  {
LABEL_585:
                    PBReaderRecallMark();
                    goto LABEL_487;
                  }
                  while (1)
                  {
                    uint64_t v304 = *v2;
                    uint64_t v305 = *(void *)&a1[v304];
                    unint64_t v306 = v305 + 1;
                    if (v305 == -1 || v306 > *(void *)&a1[*v3]) {
                      break;
                    }
                    int v307 = *(char *)(*(void *)&a1[*v5] + v305);
                    *(void *)&a1[v304] = v306;
                    if (v307 < 0)
                    {
                      BOOL v13 = v303++ >= 9;
                      if (!v13) {
                        continue;
                      }
                    }
                    goto LABEL_597;
                  }
                  a1[*v4] = 1;
                }
              }
            }
            else if ((v250 & 7) == 0)
            {
              while (1)
              {
                uint64_t v278 = *v2;
                uint64_t v279 = *(void *)&a1[v278];
                unint64_t v280 = v279 + 1;
                if (v279 == -1 || v280 > *(void *)&a1[*v3]) {
                  break;
                }
                int v281 = *(char *)(*(void *)&a1[*v5] + v279);
                *(void *)&a1[v278] = v280;
                if (v281 < 0)
                {
                  unsigned int v282 = v257++;
                  if (v282 <= 8) {
                    continue;
                  }
                }
                goto LABEL_487;
              }
LABEL_594:
              uint64_t v255 = *v4;
LABEL_595:
              a1[v255] = 1;
              goto LABEL_487;
            }
            break;
          case 0xDu:
            if ((v250 & 7) != 0) {
              goto LABEL_1520;
            }
            unsigned int v283 = 0;
            while (1)
            {
              uint64_t v284 = *v2;
              uint64_t v285 = *(void *)&a1[v284];
              unint64_t v286 = v285 + 1;
              if (v285 == -1 || v286 > *(void *)&a1[*v3]) {
                goto LABEL_594;
              }
              int v287 = *(char *)(*(void *)&a1[*v5] + v285);
              *(void *)&a1[v284] = v286;
              if (v287 < 0)
              {
                BOOL v23 = v283++ > 8;
                if (!v23) {
                  continue;
                }
              }
              goto LABEL_487;
            }
          case 0x10u:
            if ((v250 & 7) != 0) {
              goto LABEL_1520;
            }
            unsigned int v288 = 0;
            while (1)
            {
              uint64_t v289 = *v2;
              uint64_t v290 = *(void *)&a1[v289];
              unint64_t v291 = v290 + 1;
              if (v290 == -1 || v291 > *(void *)&a1[*v3]) {
                goto LABEL_594;
              }
              int v292 = *(char *)(*(void *)&a1[*v5] + v290);
              *(void *)&a1[v289] = v291;
              if (v292 < 0)
              {
                BOOL v23 = v288++ > 8;
                if (!v23) {
                  continue;
                }
              }
              goto LABEL_487;
            }
          case 0x11u:
            if ((v250 & 7) != 0) {
              goto LABEL_1520;
            }
            unsigned int v293 = 0;
            while (1)
            {
              uint64_t v294 = *v2;
              uint64_t v295 = *(void *)&a1[v294];
              unint64_t v296 = v295 + 1;
              if (v295 == -1 || v296 > *(void *)&a1[*v3]) {
                goto LABEL_594;
              }
              int v297 = *(char *)(*(void *)&a1[*v5] + v295);
              *(void *)&a1[v294] = v296;
              if (v297 < 0)
              {
                BOOL v23 = v293++ > 8;
                if (!v23) {
                  continue;
                }
              }
              goto LABEL_487;
            }
          case 0x12u:
            if (v257 == 2) {
              goto LABEL_576;
            }
            goto LABEL_1520;
          case 0x13u:
            if (v257 != 2 || !PBReaderPlaceMark() || !GEOPDSearchKeyValuePairIsValid(a1)) {
              goto LABEL_1520;
            }
            goto LABEL_585;
          case 0x14u:
            if (v257 == 2 && PBReaderPlaceMark() && GEOPDSearchRelatedCategoryIsValid(a1)) {
              goto LABEL_585;
            }
            goto LABEL_1520;
          case 0x15u:
            if ((v250 & 7) != 0) {
              goto LABEL_1520;
            }
            unsigned int v298 = 0;
            while (1)
            {
              uint64_t v299 = *v2;
              uint64_t v300 = *(void *)&a1[v299];
              unint64_t v301 = v300 + 1;
              if (v300 == -1 || v301 > *(void *)&a1[*v3]) {
                goto LABEL_594;
              }
              int v302 = *(char *)(*(void *)&a1[*v5] + v300);
              *(void *)&a1[v299] = v301;
              if (v302 < 0)
              {
                BOOL v23 = v298++ > 8;
                if (!v23) {
                  continue;
                }
              }
              goto LABEL_487;
            }
          default:
LABEL_576:
            if ((PBReaderSkipValueWithTag() & 1) == 0) {
              goto LABEL_1520;
            }
            goto LABEL_487;
        }
        goto LABEL_1520;
      case 0x11u:
        if (v16 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_1524;
        }
        [a1 position];
        [a1 length];
LABEL_626:
        while (2)
        {
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3] || a1[*v4]) {
            goto LABEL_1379;
          }
          char v314 = 0;
          unsigned int v315 = 0;
          unint64_t v316 = 0;
          while (2)
          {
            uint64_t v317 = *v2;
            uint64_t v318 = *(void *)&a1[v317];
            unint64_t v319 = v318 + 1;
            if (v318 == -1 || v319 > *(void *)&a1[*v3])
            {
              a1[*v4] = 1;
            }
            else
            {
              char v320 = *(unsigned char *)(*(void *)&a1[*v5] + v318);
              *(void *)&a1[v317] = v319;
              v316 |= (unint64_t)(v320 & 0x7F) << v314;
              if (v320 < 0)
              {
                v314 += 7;
                BOOL v13 = v315++ >= 9;
                if (v13)
                {
                  unint64_t v316 = 0;
                  int v321 = a1[*v4];
                  goto LABEL_638;
                }
                continue;
              }
            }
            break;
          }
          int v321 = a1[*v4];
          if (a1[*v4]) {
            unint64_t v316 = 0;
          }
LABEL_638:
          int v322 = v316 & 7;
          if (v321) {
            BOOL v323 = 1;
          }
          else {
            BOOL v323 = v322 == 4;
          }
          if (!v323)
          {
            switch((v316 >> 3))
            {
              case 1u:
                if ((v316 & 7) != 0) {
                  goto LABEL_1523;
                }
                unsigned int v324 = 0;
                while (1)
                {
                  uint64_t v325 = *v2;
                  uint64_t v326 = *(void *)&a1[v325];
                  unint64_t v327 = v326 + 1;
                  if (v326 == -1 || v327 > *(void *)&a1[*v3]) {
                    goto LABEL_679;
                  }
                  int v328 = *(char *)(*(void *)&a1[*v5] + v326);
                  *(void *)&a1[v325] = v327;
                  if (v328 < 0)
                  {
                    BOOL v23 = v324++ > 8;
                    if (!v23) {
                      continue;
                    }
                  }
                  goto LABEL_626;
                }
              case 2u:
                if (v322 == 2) {
                  goto LABEL_681;
                }
                goto LABEL_1523;
              case 3u:
                if ((v316 & 7) != 0) {
                  goto LABEL_1523;
                }
                unsigned int v329 = 0;
                while (1)
                {
                  uint64_t v330 = *v2;
                  uint64_t v331 = *(void *)&a1[v330];
                  unint64_t v332 = v331 + 1;
                  if (v331 == -1 || v332 > *(void *)&a1[*v3]) {
                    goto LABEL_679;
                  }
                  int v333 = *(char *)(*(void *)&a1[*v5] + v331);
                  *(void *)&a1[v330] = v332;
                  if (v333 < 0)
                  {
                    BOOL v23 = v329++ > 8;
                    if (!v23) {
                      continue;
                    }
                  }
                  goto LABEL_626;
                }
              case 4u:
                if ((v316 & 7) != 0) {
                  goto LABEL_1523;
                }
                unsigned int v334 = 0;
                while (1)
                {
                  uint64_t v335 = *v2;
                  uint64_t v336 = *(void *)&a1[v335];
                  unint64_t v337 = v336 + 1;
                  if (v336 == -1 || v337 > *(void *)&a1[*v3]) {
                    goto LABEL_679;
                  }
                  int v338 = *(char *)(*(void *)&a1[*v5] + v336);
                  *(void *)&a1[v335] = v337;
                  if (v338 < 0)
                  {
                    BOOL v23 = v334++ > 8;
                    if (!v23) {
                      continue;
                    }
                  }
                  goto LABEL_626;
                }
              case 5u:
                if (v322 == 2) {
                  goto LABEL_681;
                }
                goto LABEL_1523;
              case 6u:
                if ((v316 & 7) != 0) {
                  goto LABEL_1523;
                }
                unsigned int v339 = 0;
                do
                {
                  uint64_t v340 = *v2;
                  uint64_t v341 = *(void *)&a1[v340];
                  unint64_t v342 = v341 + 1;
                  if (v341 == -1 || v342 > *(void *)&a1[*v3])
                  {
LABEL_679:
                    a1[*v4] = 1;
                    goto LABEL_626;
                  }
                  int v343 = *(char *)(*(void *)&a1[*v5] + v341);
                  *(void *)&a1[v340] = v342;
                  if ((v343 & 0x80000000) == 0) {
                    break;
                  }
                  BOOL v23 = v339++ > 8;
                }
                while (!v23);
                break;
              case 7u:
                if (v322 == 2) {
                  goto LABEL_681;
                }
                goto LABEL_1523;
              default:
LABEL_681:
                if ((PBReaderSkipValueWithTag() & 1) == 0) {
                  goto LABEL_1523;
                }
                continue;
            }
            continue;
          }
          goto LABEL_1379;
        }
      case 0x12u:
        if (v16 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_1524;
        }
        [a1 position];
        [a1 length];
        while (2)
        {
          if (*(void *)&a1[*v2] < *(void *)&a1[*v3] && !a1[*v4])
          {
            char v344 = 0;
            unsigned int v345 = 0;
            unint64_t v346 = 0;
            while (1)
            {
              uint64_t v347 = *v2;
              uint64_t v348 = *(void *)&a1[v347];
              unint64_t v349 = v348 + 1;
              if (v348 == -1 || v349 > *(void *)&a1[*v3]) {
                break;
              }
              char v350 = *(unsigned char *)(*(void *)&a1[*v5] + v348);
              *(void *)&a1[v347] = v349;
              v346 |= (unint64_t)(v350 & 0x7F) << v344;
              if ((v350 & 0x80) == 0) {
                goto LABEL_696;
              }
              v344 += 7;
              BOOL v13 = v345++ >= 9;
              if (v13)
              {
                unint64_t v346 = 0;
                int v351 = a1[*v4];
                goto LABEL_698;
              }
            }
            a1[*v4] = 1;
LABEL_696:
            int v351 = a1[*v4];
            if (a1[*v4]) {
              unint64_t v346 = 0;
            }
LABEL_698:
            int v352 = v346 & 7;
            if (!v351 && v352 != 4)
            {
              unint64_t v354 = v346 >> 3;
              if ((v346 >> 3) == 3)
              {
                if (v352 != 2) {
                  goto LABEL_1523;
                }
              }
              else if (v354 == 2)
              {
                if (v352 != 2) {
                  goto LABEL_1523;
                }
              }
              else
              {
                if (v354 != 1)
                {
                  if (!PBReaderSkipValueWithTag()) {
                    goto LABEL_1523;
                  }
                  continue;
                }
                if (v352 != 2) {
                  goto LABEL_1523;
                }
              }
              if ((PBReaderSkipValueWithTag() & 1) == 0) {
                goto LABEL_1523;
              }
              continue;
            }
          }
          goto LABEL_1379;
        }
      case 0x13u:
        if (v16 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_1524;
        }
        [a1 position];
        [a1 length];
LABEL_717:
        while (2)
        {
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3] || a1[*v4]) {
            goto LABEL_1272;
          }
          char v355 = 0;
          unsigned int v356 = 0;
          unint64_t v357 = 0;
          while (2)
          {
            uint64_t v358 = *v2;
            uint64_t v359 = *(void *)&a1[v358];
            unint64_t v360 = v359 + 1;
            if (v359 == -1 || v360 > *(void *)&a1[*v3])
            {
              a1[*v4] = 1;
            }
            else
            {
              char v361 = *(unsigned char *)(*(void *)&a1[*v5] + v359);
              *(void *)&a1[v358] = v360;
              v357 |= (unint64_t)(v361 & 0x7F) << v355;
              if (v361 < 0)
              {
                v355 += 7;
                BOOL v13 = v356++ >= 9;
                if (v13)
                {
                  unint64_t v357 = 0;
                  int v362 = a1[*v4];
                  goto LABEL_729;
                }
                continue;
              }
            }
            break;
          }
          int v362 = a1[*v4];
          if (a1[*v4]) {
            unint64_t v357 = 0;
          }
LABEL_729:
          int v363 = v357 & 7;
          if (v362) {
            BOOL v364 = 1;
          }
          else {
            BOOL v364 = v363 == 4;
          }
          if (v364) {
            goto LABEL_1272;
          }
          switch((v357 >> 3))
          {
            case 1u:
              if (v363 == 2) {
                goto LABEL_743;
              }
              goto LABEL_1523;
            case 2u:
              if (v363 == 2) {
                goto LABEL_743;
              }
              goto LABEL_1523;
            case 3u:
              if (v363 == 2) {
                goto LABEL_743;
              }
              goto LABEL_1523;
            case 4u:
              if (v363 == 2) {
                goto LABEL_743;
              }
              goto LABEL_1523;
            case 5u:
              if (v363 == 2) {
                goto LABEL_743;
              }
              goto LABEL_1523;
            case 6u:
              if (v363 == 2)
              {
                if (PBReaderPlaceMark())
                {
                  while (1)
                  {
LABEL_753:
                    if (*(void *)&a1[*v2] >= *(void *)&a1[*v3] || (unsigned int v370 = a1[*v4], a1[*v4]))
                    {
                      PBReaderRecallMark();
                      goto LABEL_717;
                    }
                    while (1)
                    {
                      uint64_t v371 = *v2;
                      uint64_t v372 = *(void *)&a1[v371];
                      unint64_t v373 = v372 + 1;
                      if (v372 == -1 || v373 > *(void *)&a1[*v3]) {
                        break;
                      }
                      int v374 = *(char *)(*(void *)&a1[*v5] + v372);
                      *(void *)&a1[v371] = v373;
                      if (v374 < 0)
                      {
                        BOOL v13 = v370++ >= 9;
                        if (!v13) {
                          continue;
                        }
                      }
                      goto LABEL_753;
                    }
                    a1[*v4] = 1;
                  }
                }
              }
              else if ((v357 & 7) == 0)
              {
                do
                {
                  uint64_t v365 = *v2;
                  uint64_t v366 = *(void *)&a1[v365];
                  unint64_t v367 = v366 + 1;
                  if (v366 == -1 || v367 > *(void *)&a1[*v3])
                  {
                    a1[*v4] = 1;
                    goto LABEL_717;
                  }
                  int v368 = *(char *)(*(void *)&a1[*v5] + v366);
                  *(void *)&a1[v365] = v367;
                  if ((v368 & 0x80000000) == 0) {
                    break;
                  }
                  unsigned int v369 = v363++;
                }
                while (v369 <= 8);
                continue;
              }
              break;
            default:
LABEL_743:
              if ((PBReaderSkipValueWithTag() & 1) == 0) {
                goto LABEL_1523;
              }
              continue;
          }
          goto LABEL_1523;
        }
      case 0x14u:
      case 0x1Bu:
        if (v16 != 2 || !PBReaderPlaceMark() || !GEOPDSearchQueryTokenizerMetadataIsValid(a1)) {
          goto LABEL_1524;
        }
        goto LABEL_1495;
      case 0x15u:
        if (v16 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_1524;
        }
        [a1 position];
        [a1 length];
LABEL_767:
        while (2)
        {
          while (2)
          {
            if (*(void *)&a1[*v2] >= *(void *)&a1[*v3] || a1[*v4]) {
              goto LABEL_1379;
            }
            char v375 = 0;
            unsigned int v376 = 0;
            unint64_t v377 = 0;
            while (1)
            {
              uint64_t v378 = *v2;
              uint64_t v379 = *(void *)&a1[v378];
              unint64_t v380 = v379 + 1;
              if (v379 == -1 || v380 > *(void *)&a1[*v3]) {
                break;
              }
              char v381 = *(unsigned char *)(*(void *)&a1[*v5] + v379);
              *(void *)&a1[v378] = v380;
              v377 |= (unint64_t)(v381 & 0x7F) << v375;
              if ((v381 & 0x80) == 0) {
                goto LABEL_777;
              }
              v375 += 7;
              BOOL v13 = v376++ >= 9;
              if (v13)
              {
                unint64_t v377 = 0;
                int v382 = a1[*v4];
                goto LABEL_779;
              }
            }
            a1[*v4] = 1;
LABEL_777:
            int v382 = a1[*v4];
            if (a1[*v4]) {
              unint64_t v377 = 0;
            }
LABEL_779:
            int v383 = v377 & 7;
            if (v382 || v383 == 4) {
              goto LABEL_1379;
            }
            unint64_t v385 = v377 >> 3;
            if ((v377 >> 3) != 3)
            {
              if (v385 == 2)
              {
                if (v383 != 2) {
                  goto LABEL_1523;
                }
              }
              else
              {
                if (v385 != 1)
                {
                  if (!PBReaderSkipValueWithTag()) {
                    goto LABEL_1523;
                  }
                  continue;
                }
                if (v383 != 2) {
                  goto LABEL_1523;
                }
              }
              if ((PBReaderSkipValueWithTag() & 1) == 0) {
                goto LABEL_1523;
              }
              continue;
            }
            break;
          }
          if ((v377 & 7) == 0)
          {
            unsigned int v386 = 0;
            do
            {
              uint64_t v387 = *v2;
              uint64_t v388 = *(void *)&a1[v387];
              unint64_t v389 = v388 + 1;
              if (v388 == -1 || v389 > *(void *)&a1[*v3])
              {
                a1[*v4] = 1;
                goto LABEL_767;
              }
              int v390 = *(char *)(*(void *)&a1[*v5] + v388);
              *(void *)&a1[v387] = v389;
              if ((v390 & 0x80000000) == 0) {
                break;
              }
              BOOL v23 = v386++ > 8;
            }
            while (!v23);
            continue;
          }
          goto LABEL_1523;
        }
      case 0x16u:
        if (v16 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_1524;
        }
        [a1 position];
        [a1 length];
LABEL_805:
        while (2)
        {
          while (2)
          {
            if (*(void *)&a1[*v2] >= *(void *)&a1[*v3] || a1[*v4]) {
              goto LABEL_1272;
            }
            char v391 = 0;
            unsigned int v392 = 0;
            unint64_t v393 = 0;
            while (2)
            {
              uint64_t v394 = *v2;
              uint64_t v395 = *(void *)&a1[v394];
              unint64_t v396 = v395 + 1;
              if (v395 == -1 || v396 > *(void *)&a1[*v3])
              {
                a1[*v4] = 1;
              }
              else
              {
                char v397 = *(unsigned char *)(*(void *)&a1[*v5] + v395);
                *(void *)&a1[v394] = v396;
                v393 |= (unint64_t)(v397 & 0x7F) << v391;
                if (v397 < 0)
                {
                  v391 += 7;
                  BOOL v13 = v392++ >= 9;
                  if (v13)
                  {
                    unint64_t v393 = 0;
                    uint64_t v398 = *v4;
                    int v399 = a1[v398];
                    goto LABEL_817;
                  }
                  continue;
                }
              }
              break;
            }
            uint64_t v398 = *v4;
            int v399 = a1[v398];
            if (a1[v398]) {
              unint64_t v393 = 0;
            }
LABEL_817:
            int v400 = v393 & 7;
            if (v399) {
              BOOL v401 = 1;
            }
            else {
              BOOL v401 = v400 == 4;
            }
            if (v401) {
              goto LABEL_1272;
            }
            switch((v393 >> 3))
            {
              case 1u:
                if (v400 == 2) {
                  goto LABEL_823;
                }
                goto LABEL_1523;
              case 2u:
                if ((v393 & 7) != 0) {
                  goto LABEL_1523;
                }
                unsigned int v402 = 0;
                while (1)
                {
                  uint64_t v403 = *v2;
                  uint64_t v404 = *(void *)&a1[v403];
                  unint64_t v405 = v404 + 1;
                  if (v404 == -1 || v405 > *(void *)&a1[*v3]) {
                    goto LABEL_857;
                  }
                  int v406 = *(char *)(*(void *)&a1[*v5] + v404);
                  *(void *)&a1[v403] = v405;
                  if (v406 < 0)
                  {
                    BOOL v23 = v402++ > 8;
                    if (!v23) {
                      continue;
                    }
                  }
                  goto LABEL_805;
                }
              case 3u:
                if ((v393 & 7) != 0) {
                  goto LABEL_1523;
                }
                unsigned int v407 = 0;
                while (1)
                {
                  uint64_t v408 = *v2;
                  uint64_t v409 = *(void *)&a1[v408];
                  unint64_t v410 = v409 + 1;
                  if (v409 == -1 || v410 > *(void *)&a1[*v3]) {
                    goto LABEL_857;
                  }
                  int v411 = *(char *)(*(void *)&a1[*v5] + v409);
                  *(void *)&a1[v408] = v410;
                  if (v411 < 0)
                  {
                    BOOL v23 = v407++ > 8;
                    if (!v23) {
                      continue;
                    }
                  }
                  goto LABEL_805;
                }
              case 4u:
                if (v400 != 1)
                {
                  if (v400 != 2 || !PBReaderPlaceMark()) {
                    goto LABEL_1523;
                  }
                  while (1)
                  {
                    v412 = (unint64_t *)&a1[*v2];
                    unint64_t v413 = *v412;
                    unint64_t v414 = *(void *)&a1[*v3];
                    if (*v412 >= v414) {
                      break;
                    }
                    uint64_t v415 = *v4;
                    if (a1[v415]) {
                      break;
                    }
                    if (v413 > 0xFFFFFFFFFFFFFFF7 || (unint64_t v416 = v413 + 8, v416 > v414)) {
                      a1[v415] = 1;
                    }
                    else {
                      unint64_t *v412 = v416;
                    }
                  }
                  goto LABEL_862;
                }
                uint64_t v422 = *v2;
                unint64_t v423 = *(void *)&a1[v422];
                if (v423 <= 0xFFFFFFFFFFFFFFF7)
                {
                  unint64_t v424 = v423 + 8;
                  if (v424 <= *(void *)&a1[*v3])
                  {
                    *(void *)&a1[v422] = v424;
                    continue;
                  }
                }
                break;
              case 5u:
                if (v400 == 2)
                {
                  if (!PBReaderPlaceMark()) {
                    goto LABEL_1523;
                  }
LABEL_867:
                  while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
                  {
                    unsigned int v425 = a1[*v4];
                    if (a1[*v4]) {
                      break;
                    }
                    while (1)
                    {
                      uint64_t v426 = *v2;
                      uint64_t v427 = *(void *)&a1[v426];
                      unint64_t v428 = v427 + 1;
                      if (v427 == -1 || v428 > *(void *)&a1[*v3]) {
                        break;
                      }
                      int v429 = *(char *)(*(void *)&a1[*v5] + v427);
                      *(void *)&a1[v426] = v428;
                      if (v429 < 0)
                      {
                        BOOL v13 = v425++ >= 9;
                        if (!v13) {
                          continue;
                        }
                      }
                      goto LABEL_867;
                    }
                    a1[*v4] = 1;
                  }
LABEL_862:
                  PBReaderRecallMark();
                  continue;
                }
                if ((v393 & 7) != 0) {
                  goto LABEL_1523;
                }
                while (1)
                {
                  uint64_t v417 = *v2;
                  uint64_t v418 = *(void *)&a1[v417];
                  unint64_t v419 = v418 + 1;
                  if (v418 == -1 || v419 > *(void *)&a1[*v3]) {
                    break;
                  }
                  int v420 = *(char *)(*(void *)&a1[*v5] + v418);
                  *(void *)&a1[v417] = v419;
                  if (v420 < 0)
                  {
                    unsigned int v421 = v400++;
                    if (v421 <= 8) {
                      continue;
                    }
                  }
                  goto LABEL_805;
                }
LABEL_857:
                uint64_t v398 = *v4;
                break;
              case 6u:
                if (v400 == 2 && PBReaderPlaceMark() && GEOPDSearchTokenSetIsValid(a1)) {
                  goto LABEL_862;
                }
                goto LABEL_1523;
              default:
LABEL_823:
                if ((PBReaderSkipValueWithTag() & 1) == 0) {
                  goto LABEL_1523;
                }
                continue;
            }
            break;
          }
          a1[v398] = 1;
          continue;
        }
      case 0x17u:
        if (v16 != 2)
        {
          if ((v8 & 7) != 0) {
            goto LABEL_1524;
          }
          while (1)
          {
            uint64_t v430 = *v2;
            uint64_t v431 = *(void *)&a1[v430];
            unint64_t v432 = v431 + 1;
            if (v431 == -1 || v432 > *(void *)&a1[*v3]) {
              break;
            }
            int v433 = *(char *)(*(void *)&a1[*v5] + v431);
            *(void *)&a1[v430] = v432;
            if (v433 < 0)
            {
              unsigned int v434 = v16++;
              if (v434 <= 8) {
                continue;
              }
            }
            goto LABEL_1496;
          }
LABEL_883:
          uint64_t v14 = *v4;
LABEL_884:
          a1[v14] = 1;
          goto LABEL_1496;
        }
        if (!PBReaderPlaceMark()) {
          goto LABEL_1524;
        }
LABEL_1509:
        while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
        {
          unsigned int v718 = a1[*v4];
          if (a1[*v4]) {
            break;
          }
          while (1)
          {
            uint64_t v719 = *v2;
            uint64_t v720 = *(void *)&a1[v719];
            unint64_t v721 = v720 + 1;
            if (v720 == -1 || v721 > *(void *)&a1[*v3]) {
              break;
            }
            int v722 = *(char *)(*(void *)&a1[*v5] + v720);
            *(void *)&a1[v719] = v721;
            if (v722 < 0)
            {
              BOOL v13 = v718++ >= 9;
              if (!v13) {
                continue;
              }
            }
            goto LABEL_1509;
          }
          a1[*v4] = 1;
        }
        goto LABEL_1495;
      case 0x18u:
        if (v16 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_1524;
        }
        [a1 position];
        [a1 length];
        while (2)
        {
          while (2)
          {
            if (*(void *)&a1[*v2] >= *(void *)&a1[*v3] || a1[*v4]) {
              goto LABEL_1272;
            }
            char v435 = 0;
            unsigned int v436 = 0;
            unint64_t v437 = 0;
            while (1)
            {
              uint64_t v438 = *v2;
              uint64_t v439 = *(void *)&a1[v438];
              unint64_t v440 = v439 + 1;
              if (v439 == -1 || v440 > *(void *)&a1[*v3]) {
                break;
              }
              char v441 = *(unsigned char *)(*(void *)&a1[*v5] + v439);
              *(void *)&a1[v438] = v440;
              v437 |= (unint64_t)(v441 & 0x7F) << v435;
              if ((v441 & 0x80) == 0) {
                goto LABEL_898;
              }
              v435 += 7;
              BOOL v13 = v436++ >= 9;
              if (v13)
              {
                unint64_t v437 = 0;
                int v442 = a1[*v4];
                goto LABEL_900;
              }
            }
            a1[*v4] = 1;
LABEL_898:
            int v442 = a1[*v4];
            if (a1[*v4]) {
              unint64_t v437 = 0;
            }
LABEL_900:
            int v443 = v437 & 7;
            if (v442 || v443 == 4) {
              goto LABEL_1272;
            }
            if ((v437 >> 3) != 1)
            {
              if ((PBReaderSkipValueWithTag() & 1) == 0) {
                goto LABEL_1523;
              }
              continue;
            }
            break;
          }
          if (v443 == 2 && PBReaderPlaceMark() && GEONamedFeatureIsValid(a1))
          {
            PBReaderRecallMark();
            continue;
          }
          goto LABEL_1523;
        }
      case 0x19u:
        if (v16 != 2) {
          goto LABEL_1524;
        }
        uint64_t v725 = 0;
        uint64_t v726 = 0;
        if (!PBReaderPlaceMark()) {
          goto LABEL_1524;
        }
        [a1 position];
        [a1 length];
        while (2)
        {
          while (2)
          {
            if (*(void *)&a1[*v2] >= *(void *)&a1[*v3] || a1[*v4]) {
              goto LABEL_1343;
            }
            char v445 = 0;
            unsigned int v446 = 0;
            unint64_t v447 = 0;
            while (2)
            {
              uint64_t v448 = *v2;
              uint64_t v449 = *(void *)&a1[v448];
              unint64_t v450 = v449 + 1;
              if (v449 == -1 || v450 > *(void *)&a1[*v3])
              {
                a1[*v4] = 1;
              }
              else
              {
                char v451 = *(unsigned char *)(*(void *)&a1[*v5] + v449);
                *(void *)&a1[v448] = v450;
                v447 |= (unint64_t)(v451 & 0x7F) << v445;
                if (v451 < 0)
                {
                  v445 += 7;
                  BOOL v13 = v446++ >= 9;
                  if (v13)
                  {
                    unint64_t v447 = 0;
                    int v452 = a1[*v4];
                    goto LABEL_926;
                  }
                  continue;
                }
              }
              break;
            }
            int v452 = a1[*v4];
            if (a1[*v4]) {
              unint64_t v447 = 0;
            }
LABEL_926:
            int v453 = v447 & 7;
            if (v452) {
              BOOL v454 = 1;
            }
            else {
              BOOL v454 = v453 == 4;
            }
            if (v454) {
              goto LABEL_1343;
            }
            switch((v447 >> 3))
            {
              case 1u:
                if (v453 != 2 || !PBReaderPlaceMark() || !GEOPDSearchKeyValueFloatPairIsValid(a1)) {
                  goto LABEL_1523;
                }
                break;
              case 2u:
                if (v453 == 2 && PBReaderPlaceMark() && GEOPDAutocompleteEntryIsValid(a1)) {
                  break;
                }
                goto LABEL_1523;
              case 3u:
                if (v453 != 2 || !PBReaderPlaceMark()) {
                  goto LABEL_1523;
                }
                [a1 position];
                [a1 length];
                while (2)
                {
                  if (*(void *)&a1[*v2] < *(void *)&a1[*v3] && !a1[*v4])
                  {
                    char v455 = 0;
                    unsigned int v456 = 0;
                    unint64_t v457 = 0;
                    while (1)
                    {
                      uint64_t v458 = *v2;
                      uint64_t v459 = *(void *)&a1[v458];
                      unint64_t v460 = v459 + 1;
                      if (v459 == -1 || v460 > *(void *)&a1[*v3]) {
                        break;
                      }
                      char v461 = *(unsigned char *)(*(void *)&a1[*v5] + v459);
                      *(void *)&a1[v458] = v460;
                      v457 |= (unint64_t)(v461 & 0x7F) << v455;
                      if ((v461 & 0x80) == 0) {
                        goto LABEL_954;
                      }
                      v455 += 7;
                      BOOL v13 = v456++ >= 9;
                      if (v13)
                      {
                        unint64_t v457 = 0;
                        int v462 = a1[*v4];
                        goto LABEL_956;
                      }
                    }
                    a1[*v4] = 1;
LABEL_954:
                    int v462 = a1[*v4];
                    if (a1[*v4]) {
                      unint64_t v457 = 0;
                    }
LABEL_956:
                    int v463 = v457 & 7;
                    if (!v462 && v463 != 4)
                    {
                      if ((v457 >> 3) != 2 && (v457 >> 3) != 1)
                      {
                        if ((PBReaderSkipValueWithTag() & 1) == 0) {
                          goto LABEL_1520;
                        }
                        continue;
                      }
                      if (v463 == 2 && PBReaderPlaceMark() && GEOPDSearchEntryIsValid(a1))
                      {
                        PBReaderRecallMark();
                        continue;
                      }
LABEL_1520:
                      PBReaderRecallMark();
                      goto LABEL_1523;
                    }
                  }
                  break;
                }
                int v480 = a1[*v4];
                PBReaderRecallMark();
                if (v480) {
                  goto LABEL_1523;
                }
                break;
              case 4u:
                if (v453 != 2 || !PBReaderPlaceMark()) {
                  goto LABEL_1523;
                }
                [a1 position];
                [a1 length];
LABEL_971:
                while (2)
                {
                  if (*(void *)&a1[*v2] < *(void *)&a1[*v3] && !a1[*v4])
                  {
                    char v465 = 0;
                    unsigned int v466 = 0;
                    unint64_t v467 = 0;
                    while (1)
                    {
                      uint64_t v468 = *v2;
                      uint64_t v469 = *(void *)&a1[v468];
                      unint64_t v470 = v469 + 1;
                      if (v469 == -1 || v470 > *(void *)&a1[*v3]) {
                        break;
                      }
                      char v471 = *(unsigned char *)(*(void *)&a1[*v5] + v469);
                      *(void *)&a1[v468] = v470;
                      v467 |= (unint64_t)(v471 & 0x7F) << v465;
                      if ((v471 & 0x80) == 0) {
                        goto LABEL_981;
                      }
                      v465 += 7;
                      BOOL v13 = v466++ >= 9;
                      if (v13)
                      {
                        unint64_t v467 = 0;
                        int v472 = a1[*v4];
                        goto LABEL_983;
                      }
                    }
                    a1[*v4] = 1;
LABEL_981:
                    int v472 = a1[*v4];
                    if (a1[*v4]) {
                      unint64_t v467 = 0;
                    }
LABEL_983:
                    if (!v472 && (v467 & 7) != 4)
                    {
                      if ((v467 >> 3) != 1)
                      {
                        if (!PBReaderSkipValueWithTag()) {
                          goto LABEL_1520;
                        }
                        continue;
                      }
                      if ((v467 & 7) == 0)
                      {
                        unsigned int v474 = 0;
                        do
                        {
                          uint64_t v475 = *v2;
                          uint64_t v476 = *(void *)&a1[v475];
                          unint64_t v477 = v476 + 1;
                          if (v476 == -1 || v477 > *(void *)&a1[*v3])
                          {
                            a1[*v4] = 1;
                            goto LABEL_971;
                          }
                          int v478 = *(char *)(*(void *)&a1[*v5] + v476);
                          *(void *)&a1[v475] = v477;
                          if ((v478 & 0x80000000) == 0) {
                            break;
                          }
                          BOOL v23 = v474++ > 8;
                        }
                        while (!v23);
                        continue;
                      }
                      goto LABEL_1520;
                    }
                  }
                  break;
                }
                int v479 = a1[*v4];
                PBReaderRecallMark();
                if (v479) {
                  goto LABEL_1523;
                }
                break;
              default:
                if ((PBReaderSkipValueWithTag() & 1) == 0) {
                  goto LABEL_1523;
                }
                continue;
            }
            break;
          }
          PBReaderRecallMark();
          continue;
        }
      case 0x1Au:
        if (v16 != 2) {
          goto LABEL_1524;
        }
        uint64_t v725 = 0;
        uint64_t v726 = 0;
        if (!PBReaderPlaceMark()) {
          goto LABEL_1524;
        }
        [a1 position];
        [a1 length];
LABEL_1006:
        while (2)
        {
          while (2)
          {
            if (*(void *)&a1[*v2] >= *(void *)&a1[*v3] || a1[*v4]) {
              goto LABEL_1343;
            }
            char v481 = 0;
            unsigned int v482 = 0;
            unint64_t v483 = 0;
            while (2)
            {
              uint64_t v484 = *v2;
              uint64_t v485 = *(void *)&a1[v484];
              unint64_t v486 = v485 + 1;
              if (v485 == -1 || v486 > *(void *)&a1[*v3])
              {
                a1[*v4] = 1;
              }
              else
              {
                char v487 = *(unsigned char *)(*(void *)&a1[*v5] + v485);
                *(void *)&a1[v484] = v486;
                v483 |= (unint64_t)(v487 & 0x7F) << v481;
                if (v487 < 0)
                {
                  v481 += 7;
                  BOOL v13 = v482++ >= 9;
                  if (v13)
                  {
                    unint64_t v483 = 0;
                    int v488 = a1[*v4];
                    goto LABEL_1018;
                  }
                  continue;
                }
              }
              break;
            }
            int v488 = a1[*v4];
            if (a1[*v4]) {
              unint64_t v483 = 0;
            }
LABEL_1018:
            int v489 = v483 & 7;
            if (v488) {
              BOOL v490 = 1;
            }
            else {
              BOOL v490 = v489 == 4;
            }
            if (v490) {
              goto LABEL_1343;
            }
            switch((v483 >> 3))
            {
              case 1u:
                if (v489 != 2)
                {
                  if ((v483 & 7) != 0) {
                    goto LABEL_1523;
                  }
                  while (1)
                  {
                    uint64_t v491 = *v2;
                    uint64_t v492 = *(void *)&a1[v491];
                    unint64_t v493 = v492 + 1;
                    if (v492 == -1 || v493 > *(void *)&a1[*v3]) {
                      break;
                    }
                    int v494 = *(char *)(*(void *)&a1[*v5] + v492);
                    *(void *)&a1[v491] = v493;
                    if (v494 < 0)
                    {
                      unsigned int v495 = v489++;
                      if (v495 <= 8) {
                        continue;
                      }
                    }
                    goto LABEL_1006;
                  }
LABEL_1129:
                  a1[*v4] = 1;
                  continue;
                }
                if (!PBReaderPlaceMark()) {
                  goto LABEL_1523;
                }
LABEL_1131:
                while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
                {
                  unsigned int v542 = a1[*v4];
                  if (a1[*v4]) {
                    break;
                  }
                  while (1)
                  {
                    uint64_t v543 = *v2;
                    uint64_t v544 = *(void *)&a1[v543];
                    unint64_t v545 = v544 + 1;
                    if (v544 == -1 || v545 > *(void *)&a1[*v3]) {
                      break;
                    }
                    int v546 = *(char *)(*(void *)&a1[*v5] + v544);
                    *(void *)&a1[v543] = v545;
                    if (v546 < 0)
                    {
                      BOOL v13 = v542++ >= 9;
                      if (!v13) {
                        continue;
                      }
                    }
                    goto LABEL_1131;
                  }
                  a1[*v4] = 1;
                }
                break;
              case 2u:
                if (v489 != 2 || !PBReaderPlaceMark()) {
                  goto LABEL_1523;
                }
                [a1 position];
                [a1 length];
LABEL_1035:
                while (*(void *)&a1[*v2] < *(void *)&a1[*v3] && !a1[*v4])
                {
                  char v496 = 0;
                  unsigned int v497 = 0;
                  unint64_t v498 = 0;
                  while (2)
                  {
                    uint64_t v499 = *v2;
                    uint64_t v500 = *(void *)&a1[v499];
                    unint64_t v501 = v500 + 1;
                    if (v500 == -1 || v501 > *(void *)&a1[*v3])
                    {
                      a1[*v4] = 1;
                    }
                    else
                    {
                      char v502 = *(unsigned char *)(*(void *)&a1[*v5] + v500);
                      *(void *)&a1[v499] = v501;
                      v498 |= (unint64_t)(v502 & 0x7F) << v496;
                      if (v502 < 0)
                      {
                        v496 += 7;
                        BOOL v13 = v497++ >= 9;
                        if (v13)
                        {
                          unint64_t v498 = 0;
                          uint64_t v503 = *v4;
                          int v504 = a1[v503];
                          goto LABEL_1047;
                        }
                        continue;
                      }
                    }
                    break;
                  }
                  uint64_t v503 = *v4;
                  int v504 = a1[v503];
                  if (a1[v503]) {
                    unint64_t v498 = 0;
                  }
LABEL_1047:
                  int v505 = v498 & 7;
                  if (v504) {
                    BOOL v506 = 1;
                  }
                  else {
                    BOOL v506 = v505 == 4;
                  }
                  if (!v506)
                  {
                    switch((v498 >> 3))
                    {
                      case 1u:
                      case 4u:
                        if (v505 != 2
                          || !PBReaderPlaceMark()
                          || !GEOPDSearchAddressLabeledTokenIsValid(a1))
                        {
                          goto LABEL_1520;
                        }
                        PBReaderRecallMark();
                        continue;
                      case 2u:
                        if (v505 != 1) {
                          goto LABEL_1520;
                        }
                        uint64_t v507 = *v2;
                        unint64_t v508 = *(void *)&a1[v507];
                        if (v508 > 0xFFFFFFFFFFFFFFF7) {
                          goto LABEL_1072;
                        }
                        unint64_t v509 = v508 + 8;
                        if (v509 > *(void *)&a1[*v3]) {
                          goto LABEL_1072;
                        }
                        *(void *)&a1[v507] = v509;
                        continue;
                      case 3u:
                        if ((v498 & 7) != 0) {
                          goto LABEL_1520;
                        }
                        unsigned int v510 = 0;
                        break;
                      case 5u:
                        if (v505 == 2) {
                          goto LABEL_1069;
                        }
                        goto LABEL_1520;
                      default:
LABEL_1069:
                        if ((PBReaderSkipValueWithTag() & 1) == 0) {
                          goto LABEL_1520;
                        }
                        continue;
                    }
                    while (1)
                    {
                      uint64_t v511 = *v2;
                      uint64_t v512 = *(void *)&a1[v511];
                      unint64_t v513 = v512 + 1;
                      if (v512 == -1 || v513 > *(void *)&a1[*v3]) {
                        break;
                      }
                      int v514 = *(char *)(*(void *)&a1[*v5] + v512);
                      *(void *)&a1[v511] = v513;
                      if (v514 < 0)
                      {
                        BOOL v23 = v510++ > 8;
                        if (!v23) {
                          continue;
                        }
                      }
                      goto LABEL_1035;
                    }
                    uint64_t v503 = *v4;
LABEL_1072:
                    a1[v503] = 1;
                    continue;
                  }
                  break;
                }
                int v541 = a1[*v4];
                PBReaderRecallMark();
                if (v541) {
                  goto LABEL_1523;
                }
                goto LABEL_1156;
              case 3u:
                if (v489 != 2 || !PBReaderPlaceMark()) {
                  goto LABEL_1523;
                }
                [a1 position];
                [a1 length];
                if (*(void *)&a1[*v2] >= *(void *)&a1[*v3])
                {
                  int v515 = 0;
                }
                else
                {
                  int v515 = 0;
                  do
                  {
                    if (a1[*v4]) {
                      break;
                    }
                    char v516 = 0;
                    unsigned int v517 = 0;
                    unint64_t v518 = 0;
                    while (1)
                    {
                      uint64_t v519 = *v2;
                      uint64_t v520 = *(void *)&a1[v519];
                      unint64_t v521 = v520 + 1;
                      if (v520 == -1 || v521 > *(void *)&a1[*v3]) {
                        break;
                      }
                      char v522 = *(unsigned char *)(*(void *)&a1[*v5] + v520);
                      *(void *)&a1[v519] = v521;
                      v518 |= (unint64_t)(v522 & 0x7F) << v516;
                      if ((v522 & 0x80) == 0) {
                        goto LABEL_1086;
                      }
                      v516 += 7;
                      BOOL v13 = v517++ >= 9;
                      if (v13)
                      {
                        unint64_t v518 = 0;
                        int v523 = a1[*v4];
                        goto LABEL_1088;
                      }
                    }
                    a1[*v4] = 1;
LABEL_1086:
                    int v523 = a1[*v4];
                    if (a1[*v4]) {
                      unint64_t v518 = 0;
                    }
LABEL_1088:
                    int v524 = v518 & 7;
                    if (v523 || v524 == 4) {
                      break;
                    }
                    if ((v518 >> 3) == 2)
                    {
                      if (v524 == 2)
                      {
                        if (!PBReaderPlaceMark()) {
                          goto LABEL_1520;
                        }
LABEL_1107:
                        while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
                        {
                          unsigned int v531 = a1[*v4];
                          if (a1[*v4]) {
                            break;
                          }
                          while (1)
                          {
                            uint64_t v532 = *v2;
                            uint64_t v533 = *(void *)&a1[v532];
                            unint64_t v534 = v533 + 1;
                            if (v533 == -1 || v534 > *(void *)&a1[*v3]) {
                              break;
                            }
                            int v535 = *(char *)(*(void *)&a1[*v5] + v533);
                            *(void *)&a1[v532] = v534;
                            if (v535 < 0)
                            {
                              BOOL v13 = v531++ >= 9;
                              if (!v13) {
                                continue;
                              }
                            }
                            goto LABEL_1107;
                          }
                          a1[*v4] = 1;
                        }
                        PBReaderRecallMark();
                      }
                      else
                      {
                        if ((v518 & 7) != 0) {
                          goto LABEL_1520;
                        }
                        while (1)
                        {
                          uint64_t v526 = *v2;
                          uint64_t v527 = *(void *)&a1[v526];
                          unint64_t v528 = v527 + 1;
                          if (v527 == -1 || v528 > *(void *)&a1[*v3]) {
                            break;
                          }
                          int v529 = *(char *)(*(void *)&a1[*v5] + v527);
                          *(void *)&a1[v526] = v528;
                          if (v529 < 0)
                          {
                            unsigned int v530 = v524++;
                            if (v530 <= 8) {
                              continue;
                            }
                          }
                          goto LABEL_1118;
                        }
                        a1[*v4] = 1;
                      }
                    }
                    else
                    {
                      if ((v518 >> 3) == 1)
                      {
                        if (v515 || v524 != 2) {
                          goto LABEL_1520;
                        }
                        int v515 = 1;
                      }
                      if ((PBReaderSkipValueWithTag() & 1) == 0) {
                        goto LABEL_1520;
                      }
                    }
LABEL_1118:
                    ;
                  }
                  while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
                }
                int v552 = a1[*v4];
                PBReaderRecallMark();
                if (v552) {
                  BOOL v553 = 1;
                }
                else {
                  BOOL v553 = v515 == 0;
                }
                if (!v553) {
                  goto LABEL_1156;
                }
                goto LABEL_1523;
              case 4u:
                if (v489 != 2)
                {
                  if ((v483 & 7) != 0) {
                    goto LABEL_1523;
                  }
                  while (1)
                  {
                    uint64_t v536 = *v2;
                    uint64_t v537 = *(void *)&a1[v536];
                    unint64_t v538 = v537 + 1;
                    if (v537 == -1 || v538 > *(void *)&a1[*v3]) {
                      goto LABEL_1129;
                    }
                    int v539 = *(char *)(*(void *)&a1[*v5] + v537);
                    *(void *)&a1[v536] = v538;
                    if (v539 < 0)
                    {
                      unsigned int v540 = v489++;
                      if (v540 <= 8) {
                        continue;
                      }
                    }
                    goto LABEL_1006;
                  }
                }
                if (!PBReaderPlaceMark()) {
                  goto LABEL_1523;
                }
LABEL_1141:
                while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
                {
                  unsigned int v547 = a1[*v4];
                  if (a1[*v4]) {
                    break;
                  }
                  while (1)
                  {
                    uint64_t v548 = *v2;
                    uint64_t v549 = *(void *)&a1[v548];
                    unint64_t v550 = v549 + 1;
                    if (v549 == -1 || v550 > *(void *)&a1[*v3]) {
                      break;
                    }
                    int v551 = *(char *)(*(void *)&a1[*v5] + v549);
                    *(void *)&a1[v548] = v550;
                    if (v551 < 0)
                    {
                      BOOL v13 = v547++ >= 9;
                      if (!v13) {
                        continue;
                      }
                    }
                    goto LABEL_1141;
                  }
                  a1[*v4] = 1;
                }
                break;
              default:
                if ((PBReaderSkipValueWithTag() & 1) == 0) {
                  goto LABEL_1523;
                }
                continue;
            }
            break;
          }
LABEL_1156:
          PBReaderRecallMark();
          continue;
        }
      case 0x1Cu:
      case 0x1Du:
        if (v16 != 2 || !PBReaderPlaceMark() || !GEOPDSearchQueryTokenImportanceMetadataIsValid(a1)) {
          goto LABEL_1524;
        }
        goto LABEL_1495;
      case 0x1Eu:
        if (v16 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_1524;
        }
        [a1 position];
        [a1 length];
LABEL_1160:
        while (2)
        {
          while (2)
          {
            if (*(void *)&a1[*v2] >= *(void *)&a1[*v3] || a1[*v4]) {
              goto LABEL_1494;
            }
            char v554 = 0;
            unsigned int v555 = 0;
            unint64_t v556 = 0;
            while (2)
            {
              uint64_t v557 = *v2;
              uint64_t v558 = *(void *)&a1[v557];
              unint64_t v559 = v558 + 1;
              if (v558 == -1 || v559 > *(void *)&a1[*v3])
              {
                a1[*v4] = 1;
              }
              else
              {
                char v560 = *(unsigned char *)(*(void *)&a1[*v5] + v558);
                *(void *)&a1[v557] = v559;
                v556 |= (unint64_t)(v560 & 0x7F) << v554;
                if (v560 < 0)
                {
                  v554 += 7;
                  BOOL v13 = v555++ >= 9;
                  if (v13)
                  {
                    unint64_t v556 = 0;
                    int v561 = a1[*v4];
                    goto LABEL_1172;
                  }
                  continue;
                }
              }
              break;
            }
            int v561 = a1[*v4];
            if (a1[*v4]) {
              unint64_t v556 = 0;
            }
LABEL_1172:
            int v562 = v556 & 7;
            if (v561) {
              BOOL v563 = 1;
            }
            else {
              BOOL v563 = v562 == 4;
            }
            if (v563) {
              goto LABEL_1494;
            }
            switch((v556 >> 3))
            {
              case 1u:
                if ((v556 & 7) != 0) {
                  goto LABEL_1523;
                }
                unsigned int v564 = 0;
                do
                {
                  uint64_t v565 = *v2;
                  uint64_t v566 = *(void *)&a1[v565];
                  unint64_t v567 = v566 + 1;
                  if (v566 == -1 || v567 > *(void *)&a1[*v3])
                  {
                    a1[*v4] = 1;
                    goto LABEL_1160;
                  }
                  int v568 = *(char *)(*(void *)&a1[*v5] + v566);
                  *(void *)&a1[v565] = v567;
                  if ((v568 & 0x80000000) == 0) {
                    break;
                  }
                  BOOL v23 = v564++ > 8;
                }
                while (!v23);
                continue;
              case 2u:
                if (v562 != 2 || !PBReaderPlaceMark() || !GEOPDSearchChainInfoIsValid(a1)) {
                  goto LABEL_1523;
                }
                goto LABEL_1227;
              case 3u:
                if (v562 == 2 && PBReaderPlaceMark() && GEOPDSearchBrandDensityIsValid(a1)) {
                  goto LABEL_1227;
                }
                goto LABEL_1523;
              case 4u:
                if (v562 != 2 || !PBReaderPlaceMark()) {
                  goto LABEL_1523;
                }
                [a1 position];
                [a1 length];
                break;
              default:
                if ((PBReaderSkipValueWithTag() & 1) == 0) {
                  goto LABEL_1523;
                }
                continue;
            }
            break;
          }
          while (*(void *)&a1[*v2] < *(void *)&a1[*v3] && !a1[*v4])
          {
            char v569 = 0;
            unsigned int v570 = 0;
            unint64_t v571 = 0;
            while (1)
            {
              uint64_t v572 = *v2;
              uint64_t v573 = *(void *)&a1[v572];
              unint64_t v574 = v573 + 1;
              if (v573 == -1 || v574 > *(void *)&a1[*v3]) {
                break;
              }
              char v575 = *(unsigned char *)(*(void *)&a1[*v5] + v573);
              *(void *)&a1[v572] = v574;
              v571 |= (unint64_t)(v575 & 0x7F) << v569;
              if ((v575 & 0x80) == 0) {
                goto LABEL_1208;
              }
              v569 += 7;
              BOOL v13 = v570++ >= 9;
              if (v13)
              {
                unint64_t v571 = 0;
                uint64_t v576 = *v4;
                int v577 = a1[v576];
                goto LABEL_1210;
              }
            }
            a1[*v4] = 1;
LABEL_1208:
            uint64_t v576 = *v4;
            int v577 = a1[v576];
            if (a1[v576]) {
              unint64_t v571 = 0;
            }
LABEL_1210:
            int v578 = v571 & 7;
            if (v577 || v578 == 4) {
              break;
            }
            if ((v571 >> 3) == 2)
            {
              if (v578 == 5)
              {
                uint64_t v580 = *v2;
                unint64_t v581 = *(void *)&a1[v580];
                if (v581 <= 0xFFFFFFFFFFFFFFFBLL && (unint64_t v582 = v581 + 4, v582 <= *(void *)&a1[*v3])) {
                  *(void *)&a1[v580] = v582;
                }
                else {
                  a1[v576] = 1;
                }
                continue;
              }
              goto LABEL_1522;
            }
            if ((v571 >> 3) == 1)
            {
              if (v578 != 2 || (PBReaderSkipValueWithTag() & 1) == 0) {
                goto LABEL_1522;
              }
            }
            else if (!PBReaderSkipValueWithTag())
            {
              goto LABEL_1522;
            }
          }
          int v583 = a1[*v4];
          PBReaderRecallMark();
          if (!v583)
          {
LABEL_1227:
            PBReaderRecallMark();
            continue;
          }
          goto LABEL_1523;
        }
      case 0x1Fu:
        if (v16 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_1524;
        }
        [a1 position];
        [a1 length];
LABEL_1232:
        if (*(void *)&a1[*v2] >= *(void *)&a1[*v3] || a1[*v4]) {
          goto LABEL_1272;
        }
        char v584 = 0;
        unsigned int v585 = 0;
        unint64_t v586 = 0;
        while (1)
        {
          uint64_t v587 = *v2;
          uint64_t v588 = *(void *)&a1[v587];
          unint64_t v589 = v588 + 1;
          if (v588 == -1 || v589 > *(void *)&a1[*v3]) {
            break;
          }
          char v590 = *(unsigned char *)(*(void *)&a1[*v5] + v588);
          *(void *)&a1[v587] = v589;
          v586 |= (unint64_t)(v590 & 0x7F) << v584;
          if ((v590 & 0x80) == 0) {
            goto LABEL_1242;
          }
          v584 += 7;
          BOOL v13 = v585++ >= 9;
          if (v13)
          {
            unint64_t v586 = 0;
            uint64_t v591 = *v4;
            int v592 = a1[v591];
            goto LABEL_1244;
          }
        }
        a1[*v4] = 1;
LABEL_1242:
        uint64_t v591 = *v4;
        int v592 = a1[v591];
        if (a1[v591]) {
          unint64_t v586 = 0;
        }
LABEL_1244:
        int v593 = v586 & 7;
        if (v592 || v593 == 4)
        {
LABEL_1272:
          int v604 = a1[*v4];
          PBReaderRecallMark();
          if (v604) {
            goto LABEL_1524;
          }
LABEL_1495:
          PBReaderRecallMark();
LABEL_1496:
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_1518;
          }
          continue;
        }
        unint64_t v595 = v586 >> 3;
        if ((v586 >> 3) == 3)
        {
          if (v593 == 2 && PBReaderPlaceMark() && GEOPDSearchStringStringPairIsValid(a1))
          {
LABEL_1256:
            PBReaderRecallMark();
            goto LABEL_1232;
          }
        }
        else
        {
          if (v595 != 2)
          {
            if (v595 == 1 && v593 != 2 || (PBReaderSkipValueWithTag() & 1) == 0) {
              goto LABEL_1523;
            }
            goto LABEL_1232;
          }
          if (v593 == 5)
          {
            uint64_t v601 = *v2;
            unint64_t v602 = *(void *)&a1[v601];
            if (v602 <= 0xFFFFFFFFFFFFFFFBLL && (unint64_t v603 = v602 + 4, v603 <= *(void *)&a1[*v3])) {
              *(void *)&a1[v601] = v603;
            }
            else {
              a1[v591] = 1;
            }
            goto LABEL_1232;
          }
          if (v593 == 2 && PBReaderPlaceMark())
          {
            while (1)
            {
              v596 = (unint64_t *)&a1[*v2];
              unint64_t v597 = *v596;
              unint64_t v598 = *(void *)&a1[*v3];
              if (*v596 >= v598) {
                break;
              }
              uint64_t v599 = *v4;
              if (a1[v599]) {
                break;
              }
              if (v597 > 0xFFFFFFFFFFFFFFFBLL || (unint64_t v600 = v597 + 4, v600 > v598)) {
                a1[v599] = 1;
              }
              else {
                unint64_t *v596 = v600;
              }
            }
            goto LABEL_1256;
          }
        }
LABEL_1523:
        PBReaderRecallMark();
LABEL_1524:
        PBReaderRecallMark();
        return 0;
      case 0x20u:
        if (v16 != 2) {
          goto LABEL_1524;
        }
        uint64_t v725 = 0;
        uint64_t v726 = 0;
        if (!PBReaderPlaceMark()) {
          goto LABEL_1524;
        }
        [a1 position];
        [a1 length];
        while (2)
        {
          if (*(void *)&a1[*v2] < *(void *)&a1[*v3] && !a1[*v4])
          {
            char v605 = 0;
            unsigned int v606 = 0;
            unint64_t v607 = 0;
            while (1)
            {
              uint64_t v608 = *v2;
              uint64_t v609 = *(void *)&a1[v608];
              unint64_t v610 = v609 + 1;
              if (v609 == -1 || v610 > *(void *)&a1[*v3]) {
                break;
              }
              char v611 = *(unsigned char *)(*(void *)&a1[*v5] + v609);
              *(void *)&a1[v608] = v610;
              v607 |= (unint64_t)(v611 & 0x7F) << v605;
              if ((v611 & 0x80) == 0) {
                goto LABEL_1287;
              }
              v605 += 7;
              BOOL v13 = v606++ >= 9;
              if (v13)
              {
                unint64_t v607 = 0;
                int v612 = a1[*v4];
                goto LABEL_1289;
              }
            }
            a1[*v4] = 1;
LABEL_1287:
            int v612 = a1[*v4];
            if (a1[*v4]) {
              unint64_t v607 = 0;
            }
LABEL_1289:
            int v613 = v607 & 7;
            if (!v612 && v613 != 4)
            {
              if ((v607 >> 3) != 1)
              {
                if ((PBReaderSkipValueWithTag() & 1) == 0) {
                  goto LABEL_1523;
                }
                continue;
              }
              if (v613 == 2 && PBReaderPlaceMark())
              {
                [a1 position];
                [a1 length];
LABEL_1297:
                while (*(void *)&a1[*v2] < *(void *)&a1[*v3] && !a1[*v4])
                {
                  char v615 = 0;
                  unsigned int v616 = 0;
                  unint64_t v617 = 0;
                  while (1)
                  {
                    uint64_t v618 = *v2;
                    uint64_t v619 = *(void *)&a1[v618];
                    unint64_t v620 = v619 + 1;
                    if (v619 == -1 || v620 > *(void *)&a1[*v3]) {
                      break;
                    }
                    char v621 = *(unsigned char *)(*(void *)&a1[*v5] + v619);
                    *(void *)&a1[v618] = v620;
                    v617 |= (unint64_t)(v621 & 0x7F) << v615;
                    if ((v621 & 0x80) == 0) {
                      goto LABEL_1307;
                    }
                    v615 += 7;
                    BOOL v13 = v616++ >= 9;
                    if (v13)
                    {
                      unint64_t v617 = 0;
                      uint64_t v622 = *v4;
                      int v623 = a1[v622];
                      goto LABEL_1309;
                    }
                  }
                  a1[*v4] = 1;
LABEL_1307:
                  uint64_t v622 = *v4;
                  int v623 = a1[v622];
                  if (a1[v622]) {
                    unint64_t v617 = 0;
                  }
LABEL_1309:
                  int v624 = v617 & 7;
                  if (v623 || v624 == 4) {
                    break;
                  }
                  switch((v617 >> 3))
                  {
                    case 1u:
                      if (v624 != 5) {
                        goto LABEL_1520;
                      }
                      uint64_t v626 = *v2;
                      unint64_t v627 = *(void *)&a1[v626];
                      if (v627 > 0xFFFFFFFFFFFFFFFBLL) {
                        goto LABEL_1338;
                      }
                      unint64_t v628 = v627 + 4;
                      if (v628 > *(void *)&a1[*v3]) {
                        goto LABEL_1338;
                      }
                      *(void *)&a1[v626] = v628;
                      continue;
                    case 2u:
                      if (v624 != 2 || !PBReaderPlaceMark() || !GEOPDSearchPairIsValid(a1)) {
                        goto LABEL_1520;
                      }
                      goto LABEL_1333;
                    case 3u:
                      if ((v617 & 7) != 0) {
                        goto LABEL_1520;
                      }
                      unsigned int v629 = 0;
                      break;
                    case 4u:
                      if (v624 != 2 || !PBReaderPlaceMark() || !GEOPDSearchStringStringPairIsValid(a1)) {
                        goto LABEL_1520;
                      }
LABEL_1333:
                      PBReaderRecallMark();
                      continue;
                    case 5u:
                      if (v624 == 2) {
                        goto LABEL_1335;
                      }
                      goto LABEL_1520;
                    default:
LABEL_1335:
                      if ((PBReaderSkipValueWithTag() & 1) == 0) {
                        goto LABEL_1520;
                      }
                      continue;
                  }
                  while (1)
                  {
                    uint64_t v630 = *v2;
                    uint64_t v631 = *(void *)&a1[v630];
                    unint64_t v632 = v631 + 1;
                    if (v631 == -1 || v632 > *(void *)&a1[*v3]) {
                      break;
                    }
                    int v633 = *(char *)(*(void *)&a1[*v5] + v631);
                    *(void *)&a1[v630] = v632;
                    if (v633 < 0)
                    {
                      BOOL v23 = v629++ > 8;
                      if (!v23) {
                        continue;
                      }
                    }
                    goto LABEL_1297;
                  }
                  uint64_t v622 = *v4;
LABEL_1338:
                  a1[v622] = 1;
                }
                int v634 = a1[*v4];
                PBReaderRecallMark();
                if (!v634)
                {
                  PBReaderRecallMark();
                  continue;
                }
              }
              goto LABEL_1523;
            }
          }
          break;
        }
LABEL_1343:
        int v635 = a1[*v4];
        PBReaderRecallMark();
        if (v635) {
          goto LABEL_1524;
        }
        goto LABEL_1495;
      case 0x21u:
        if (v16 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_1524;
        }
        [a1 position];
        [a1 length];
        while (*(void *)&a1[*v2] < *(void *)&a1[*v3] && !a1[*v4])
        {
          char v636 = 0;
          unsigned int v637 = 0;
          unint64_t v638 = 0;
          while (2)
          {
            uint64_t v639 = *v2;
            uint64_t v640 = *(void *)&a1[v639];
            unint64_t v641 = v640 + 1;
            if (v640 == -1 || v641 > *(void *)&a1[*v3])
            {
              a1[*v4] = 1;
            }
            else
            {
              char v642 = *(unsigned char *)(*(void *)&a1[*v5] + v640);
              *(void *)&a1[v639] = v641;
              v638 |= (unint64_t)(v642 & 0x7F) << v636;
              if (v642 < 0)
              {
                v636 += 7;
                BOOL v13 = v637++ >= 9;
                if (v13)
                {
                  unint64_t v638 = 0;
                  uint64_t v643 = *v4;
                  int v644 = a1[v643];
                  goto LABEL_1360;
                }
                continue;
              }
            }
            break;
          }
          uint64_t v643 = *v4;
          int v644 = a1[v643];
          if (a1[v643]) {
            unint64_t v638 = 0;
          }
LABEL_1360:
          int v645 = v638 & 7;
          if (v644) {
            BOOL v646 = 1;
          }
          else {
            BOOL v646 = v645 == 4;
          }
          if (!v646)
          {
            switch((v638 >> 3))
            {
              case 1u:
                if (v645 == 2) {
                  goto LABEL_1376;
                }
                goto LABEL_1523;
              case 2u:
                if (v645 != 5) {
                  goto LABEL_1523;
                }
                uint64_t v647 = *v2;
                unint64_t v648 = *(void *)&a1[v647];
                if (v648 <= 0xFFFFFFFFFFFFFFFBLL && (unint64_t v649 = v648 + 4, v649 <= *(void *)&a1[*v3])) {
                  *(void *)&a1[v647] = v649;
                }
                else {
                  a1[v643] = 1;
                }
                continue;
              case 3u:
                if (v645 == 2) {
                  goto LABEL_1376;
                }
                goto LABEL_1523;
              case 4u:
                if (v645 != 2) {
                  goto LABEL_1523;
                }
LABEL_1376:
                if ((PBReaderSkipValueWithTag() & 1) == 0) {
                  goto LABEL_1523;
                }
                continue;
              default:
                if (!PBReaderSkipValueWithTag()) {
                  goto LABEL_1523;
                }
                continue;
            }
          }
          break;
        }
LABEL_1379:
        int v650 = a1[*v4];
        PBReaderRecallMark();
        if (!v650) {
          goto LABEL_1495;
        }
        goto LABEL_1524;
      case 0x22u:
        if (v16 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_1524;
        }
        [a1 position];
        [a1 length];
        while (2)
        {
          if (*(void *)&a1[*v2] < *(void *)&a1[*v3] && !a1[*v4])
          {
            char v651 = 0;
            unsigned int v652 = 0;
            unint64_t v653 = 0;
            while (1)
            {
              uint64_t v654 = *v2;
              uint64_t v655 = *(void *)&a1[v654];
              unint64_t v656 = v655 + 1;
              if (v655 == -1 || v656 > *(void *)&a1[*v3]) {
                break;
              }
              char v657 = *(unsigned char *)(*(void *)&a1[*v5] + v655);
              *(void *)&a1[v654] = v656;
              v653 |= (unint64_t)(v657 & 0x7F) << v651;
              if ((v657 & 0x80) == 0) {
                goto LABEL_1394;
              }
              v651 += 7;
              BOOL v13 = v652++ >= 9;
              if (v13)
              {
                unint64_t v653 = 0;
                int v658 = a1[*v4];
                goto LABEL_1396;
              }
            }
            a1[*v4] = 1;
LABEL_1394:
            int v658 = a1[*v4];
            if (a1[*v4]) {
              unint64_t v653 = 0;
            }
LABEL_1396:
            int v659 = v653 & 7;
            if (!v658 && v659 != 4)
            {
              if ((v653 >> 3) != 1)
              {
                if ((PBReaderSkipValueWithTag() & 1) == 0) {
                  goto LABEL_1523;
                }
                continue;
              }
              if (v659 == 2 && PBReaderPlaceMark())
              {
                [a1 position];
                [a1 length];
                uint64_t v725 = 0;
                if (*(void *)&a1[*v2] >= *(void *)&a1[*v3])
                {
                  BOOL v709 = 0;
                }
                else
                {
                  do
                  {
                    if (a1[*v4]) {
                      break;
                    }
                    char v661 = 0;
                    unsigned int v662 = 0;
                    unint64_t v663 = 0;
                    while (1)
                    {
                      uint64_t v664 = *v2;
                      uint64_t v665 = *(void *)&a1[v664];
                      unint64_t v666 = v665 + 1;
                      if (v665 == -1 || v666 > *(void *)&a1[*v3]) {
                        break;
                      }
                      char v667 = *(unsigned char *)(*(void *)&a1[*v5] + v665);
                      *(void *)&a1[v664] = v666;
                      v663 |= (unint64_t)(v667 & 0x7F) << v661;
                      if ((v667 & 0x80) == 0) {
                        goto LABEL_1413;
                      }
                      v661 += 7;
                      BOOL v13 = v662++ >= 9;
                      if (v13)
                      {
                        unint64_t v663 = 0;
                        int v668 = a1[*v4];
                        goto LABEL_1415;
                      }
                    }
                    a1[*v4] = 1;
LABEL_1413:
                    int v668 = a1[*v4];
                    if (a1[*v4]) {
                      unint64_t v663 = 0;
                    }
LABEL_1415:
                    int v669 = v663 & 7;
                    if (v668 || v669 == 4) {
                      break;
                    }
                    switch((v663 >> 3))
                    {
                      case 1u:
                        if ((v663 & 7) != 0) {
                          goto LABEL_1522;
                        }
                        unsigned int v671 = 0;
                        while (1)
                        {
                          uint64_t v672 = *v2;
                          uint64_t v673 = *(void *)&a1[v672];
                          unint64_t v674 = v673 + 1;
                          if (v673 == -1 || v674 > *(void *)&a1[*v3]) {
                            goto LABEL_1483;
                          }
                          int v675 = *(char *)(*(void *)&a1[*v5] + v673);
                          *(void *)&a1[v672] = v674;
                          if (v675 < 0)
                          {
                            BOOL v23 = v671++ > 8;
                            if (!v23) {
                              continue;
                            }
                          }
                          goto LABEL_1484;
                        }
                      case 2u:
                        if ((v663 & 7) != 0) {
                          goto LABEL_1522;
                        }
                        unsigned int v676 = 0;
                        while (1)
                        {
                          uint64_t v677 = *v2;
                          uint64_t v678 = *(void *)&a1[v677];
                          unint64_t v679 = v678 + 1;
                          if (v678 == -1 || v679 > *(void *)&a1[*v3]) {
                            goto LABEL_1483;
                          }
                          int v680 = *(char *)(*(void *)&a1[*v5] + v678);
                          *(void *)&a1[v677] = v679;
                          if (v680 < 0)
                          {
                            BOOL v23 = v676++ > 8;
                            if (!v23) {
                              continue;
                            }
                          }
                          goto LABEL_1484;
                        }
                      case 3u:
                        if ((v663 & 7) != 0) {
                          goto LABEL_1522;
                        }
                        unsigned int v681 = 0;
                        while (1)
                        {
                          uint64_t v682 = *v2;
                          uint64_t v683 = *(void *)&a1[v682];
                          unint64_t v684 = v683 + 1;
                          if (v683 == -1 || v684 > *(void *)&a1[*v3]) {
                            goto LABEL_1483;
                          }
                          int v685 = *(char *)(*(void *)&a1[*v5] + v683);
                          *(void *)&a1[v682] = v684;
                          if (v685 < 0)
                          {
                            BOOL v23 = v681++ > 8;
                            if (!v23) {
                              continue;
                            }
                          }
                          goto LABEL_1484;
                        }
                      case 4u:
                        if ((v663 & 7) != 0) {
                          goto LABEL_1522;
                        }
                        unsigned int v686 = 0;
                        while (1)
                        {
                          uint64_t v687 = *v2;
                          uint64_t v688 = *(void *)&a1[v687];
                          unint64_t v689 = v688 + 1;
                          if (v688 == -1 || v689 > *(void *)&a1[*v3]) {
                            goto LABEL_1483;
                          }
                          int v690 = *(char *)(*(void *)&a1[*v5] + v688);
                          *(void *)&a1[v687] = v689;
                          if (v690 < 0)
                          {
                            BOOL v23 = v686++ > 8;
                            if (!v23) {
                              continue;
                            }
                          }
                          goto LABEL_1484;
                        }
                      case 5u:
                        if ((v663 & 7) != 0) {
                          goto LABEL_1522;
                        }
                        unsigned int v691 = 0;
                        while (1)
                        {
                          uint64_t v692 = *v2;
                          uint64_t v693 = *(void *)&a1[v692];
                          unint64_t v694 = v693 + 1;
                          if (v693 == -1 || v694 > *(void *)&a1[*v3]) {
                            goto LABEL_1483;
                          }
                          int v695 = *(char *)(*(void *)&a1[*v5] + v693);
                          *(void *)&a1[v692] = v694;
                          if (v695 < 0)
                          {
                            BOOL v23 = v691++ > 8;
                            if (!v23) {
                              continue;
                            }
                          }
                          goto LABEL_1484;
                        }
                      case 6u:
                        uint64_t v696 = 0;
                        char v697 = 1;
                        while (1)
                        {
                          char v698 = v697;
                          int v699 = *((_DWORD *)&v725 + v696);
                          if (!v699) {
                            break;
                          }
                          if (v699 != 6)
                          {
                            char v697 = 0;
                            uint64_t v696 = 1;
                            if (v698) {
                              continue;
                            }
                          }
                          goto LABEL_1522;
                        }
                        *((_DWORD *)&v725 + v696) = 6;
                        if (v669 != 2) {
                          goto LABEL_1522;
                        }
LABEL_1473:
                        if ((PBReaderSkipValueWithTag() & 1) == 0) {
                          goto LABEL_1522;
                        }
                        continue;
                      case 7u:
                        if (v669 == 2) {
                          goto LABEL_1473;
                        }
                        goto LABEL_1522;
                      case 8u:
                        uint64_t v700 = 0;
                        char v701 = 1;
                        break;
                      default:
                        goto LABEL_1473;
                    }
                    while (1)
                    {
                      char v702 = v701;
                      int v703 = *((_DWORD *)&v725 + v700);
                      if (!v703) {
                        break;
                      }
                      if (v703 != 8)
                      {
                        char v701 = 0;
                        uint64_t v700 = 1;
                        if (v702) {
                          continue;
                        }
                      }
                      goto LABEL_1522;
                    }
                    *((_DWORD *)&v725 + v700) = 8;
                    if (v669)
                    {
LABEL_1522:
                      PBReaderRecallMark();
                      goto LABEL_1523;
                    }
                    unsigned int v704 = 0;
                    while (1)
                    {
                      uint64_t v705 = *v2;
                      uint64_t v706 = *(void *)&a1[v705];
                      unint64_t v707 = v706 + 1;
                      if (v706 == -1 || v707 > *(void *)&a1[*v3]) {
                        break;
                      }
                      int v708 = *(char *)(*(void *)&a1[*v5] + v706);
                      *(void *)&a1[v705] = v707;
                      if (v708 < 0)
                      {
                        BOOL v23 = v704++ > 8;
                        if (!v23) {
                          continue;
                        }
                      }
                      goto LABEL_1484;
                    }
LABEL_1483:
                    a1[*v4] = 1;
LABEL_1484:
                    ;
                  }
                  while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
                  BOOL v709 = HIDWORD(v725) != 0;
                }
                int v710 = a1[*v4];
                PBReaderRecallMark();
                if (v710) {
                  BOOL v711 = 1;
                }
                else {
                  BOOL v711 = !v709;
                }
                if (!v711)
                {
                  PBReaderRecallMark();
                  continue;
                }
              }
              goto LABEL_1523;
            }
          }
          break;
        }
LABEL_1494:
        int v712 = a1[*v4];
        PBReaderRecallMark();
        if (v712) {
          goto LABEL_1524;
        }
        goto LABEL_1495;
      default:
LABEL_30:
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_1524;
        }
        goto LABEL_1496;
    }
  }
}

void sub_1899A3B88(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void GEOPDSearchQueryIntentClearSensitiveFields(uint64_t a1, uint64_t a2, int a3)
{
  if (a1
    && a3
    && (-[GEOPDSearchQueryIntent _readQueryIntentMetadata](a1), *(void *)(a1 + 32))
    && (-[GEOPDSearchQueryIntent queryIntentMetadata]((id *)a1),
        uint64_t v5 = (id *)objc_claimAutoreleasedReturnValue(),
        IntentMetadatachar HasSensitiveFields = GEOPDSearchQueryIntentMetadataHasSensitiveFields(v5, a2),
        v5,
        IntentMetadataHasSensitiveFields))
  {
    unsigned int v7 = -[GEOPDSearchQueryIntent queryIntentMetadata]((id *)a1);
    id v9 = (id)[v7 copy];

    GEOPDSearchQueryIntentMetadataClearSensitiveFields((uint64_t)v9, a2, 0);
    -[GEOPDSearchQueryIntent setQueryIntentMetadata:](a1, v9);
  }
  else
  {
    uint64_t v8 = -[GEOPDSearchQueryIntent queryIntentMetadata]((id *)a1);
    if (v8)
    {
      id v9 = (id)v8;
      GEOPDSearchQueryIntentMetadataClearSensitiveFields(v8, a2, 1);
    }
    else
    {
      id v9 = 0;
    }
  }
}

id *GEOPDSearchQueryIntentHasSensitiveFields(id *result, uint64_t a2)
{
  if (result)
  {
    -[GEOPDSearchQueryIntent queryIntentMetadata](result);
    uint64_t v3 = (id *)objc_claimAutoreleasedReturnValue();
    IntentMetadatachar HasSensitiveFields = GEOPDSearchQueryIntentMetadataHasSensitiveFields(v3, a2);

    return IntentMetadataHasSensitiveFields;
  }
  return result;
}

id *GEOPDSearchQueryIntentMetadataHasSensitiveFields(id *result, uint64_t a2)
{
  if (result)
  {
    -[GEOPDSearchQueryIntentMetadata acHintMetadata](result);
    uint64_t v3 = (id *)objc_claimAutoreleasedReturnValue();
    uint64_t HasSensitiveFields = GEOPDSearchACHintMetadataHasSensitiveFields(v3, a2);

    return (id *)HasSensitiveFields;
  }
  return result;
}

void GEOPDSearchQueryIntentMetadataClearSensitiveFields(uint64_t a1, uint64_t a2, int a3)
{
  if (a1
    && a3
    && (-[GEOPDSearchQueryIntentMetadata _readAcHintMetadata](a1), *(void *)(a1 + 64))
    && (-[GEOPDSearchQueryIntentMetadata acHintMetadata]((id *)a1),
        uint64_t v5 = (id *)objc_claimAutoreleasedReturnValue(),
        int HasSensitiveFields = GEOPDSearchACHintMetadataHasSensitiveFields(v5, a2),
        v5,
        HasSensitiveFields))
  {
    unsigned int v7 = -[GEOPDSearchQueryIntentMetadata acHintMetadata]((id *)a1);
    id v9 = (id)[v7 copy];

    GEOPDSearchACHintMetadataClearSensitiveFields((uint64_t)v9, a2, 0);
    -[GEOPDSearchQueryIntentMetadata setAcHintMetadata:](a1, v9);
  }
  else
  {
    uint64_t v8 = -[GEOPDSearchQueryIntentMetadata acHintMetadata]((id *)a1);
    if (v8)
    {
      id v9 = (id)v8;
      GEOPDSearchACHintMetadataClearSensitiveFields(v8, a2, 1);
    }
    else
    {
      id v9 = 0;
    }
  }
}

void sub_1899A449C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchQueryIntentMetadataReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 296));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 292);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 288)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  unint64_t v11 = *(void *)(a1 + 308);
  uint32x4_t v12 = (uint32x4_t)vdupq_n_s32(v11);
  v13.i64[0] = 0x100000001;
  v13.i64[1] = 0x100000001;
  unsigned int v14 = vaddvq_s32(vaddq_s32(vaddq_s32(vaddq_s32((int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v12, (uint32x4_t)xmmword_18A6364B0), v13), (int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v12, (uint32x4_t)xmmword_18A6364C0), v13)), vaddq_s32((int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v12, (uint32x4_t)xmmword_18A636490), v13), (int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v12, (uint32x4_t)xmmword_18A6364A0), v13))), (int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v12, (uint32x4_t)xmmword_18A6364D0), v13)))+ ((v11 >> 30) & 1)+ ((v11 >> 27) & 1)+ ((v11 >> 8) & 1)+ (BYTE4(v11) & 1)+ ((v11 >> 15) & 1)+ ((v11 >> 33) & 1)+ ((v11 >> 21) & 1)+ ((v11 >> 12) & 1)+ (v11 >> 31);
  while (2)
  {
    uint64_t v15 = 1;
    uint64_t v16 = 1;
    switch(a3[v7])
    {
      case -3:
        char v8 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v15 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        unsigned __int8 v17 = v10 | (v14 > 0x16);
        if ((v17 | v8)) {
          unsigned int v18 = 0;
        }
        else {
          unsigned int v18 = a3;
        }
        BOOL v19 = v17;
        uint64_t v20 = (int *)MEMORY[0x1E4F940E8];
        unint64_t v21 = (int *)MEMORY[0x1E4F940C8];
        if (*(void *)(v3 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(v3 + *v6)) {
          goto LABEL_336;
        }
        char v147 = (v18 == 0) | v17;
        int v22 = (int *)MEMORY[0x1E4F940B8];
        BOOL v146 = v17;
        break;
      default:
        ++v14;
LABEL_6:
        uint64_t v15 = v9;
        uint64_t v16 = v10;
LABEL_8:
        ++v7;
        uint64_t v9 = v15;
        uint64_t v10 = v16;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(unsigned char *)(v3 + *v21)) {
      goto LABEL_336;
    }
    uint64_t v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_23;
      }
      v23 += 7;
      BOOL v30 = v24++ >= 9;
      if (v30)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_25;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_23:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_25:
    int v32 = v25 & 7;
    if (v31 || v32 == 4)
    {
LABEL_336:
      if (v19)
      {
        *(void *)(a1 + 308) |= 0x3FFFFFFE0uLL;
      }
      else if (v18)
      {
        while (1)
        {
          int v142 = *v18++;
          uint64_t v143 = 512;
          switch(v142)
          {
            case 0:
              goto LABEL_369;
            case 1:
              goto LABEL_368;
            case 2:
              uint64_t v143 = 0x80000000;
              goto LABEL_368;
            case 7:
              uint64_t v143 = 0x4000000;
              goto LABEL_368;
            case 8:
              uint64_t v143 = 1024;
              goto LABEL_368;
            case 9:
              uint64_t v143 = 0x1000000;
              goto LABEL_368;
            case 11:
              uint64_t v143 = 0x20000;
              goto LABEL_368;
            case 12:
              uint64_t v143 = 32;
              goto LABEL_368;
            case 13:
              uint64_t v143 = 0x2000000;
              goto LABEL_368;
            case 14:
              uint64_t v143 = 0x4000;
              goto LABEL_368;
            case 15:
              uint64_t v143 = 2048;
              goto LABEL_368;
            case 16:
              uint64_t v143 = 0x100000;
              goto LABEL_368;
            case 17:
              uint64_t v143 = 0x2000;
              goto LABEL_368;
            case 18:
              uint64_t v143 = 0x400000;
              goto LABEL_368;
            case 19:
              uint64_t v143 = 0x40000;
              goto LABEL_368;
            case 20:
              uint64_t v143 = 0x10000000;
              goto LABEL_368;
            case 21:
              uint64_t v143 = 0x20000000;
              goto LABEL_368;
            case 22:
              uint64_t v143 = 0x10000;
              goto LABEL_368;
            case 23:
              uint64_t v143 = 64;
              goto LABEL_368;
            case 24:
              uint64_t v143 = 0x800000;
              goto LABEL_368;
            case 25:
              uint64_t v143 = 128;
              goto LABEL_368;
            case 26:
              uint64_t v143 = 0x80000;
              goto LABEL_368;
            case 27:
              uint64_t v143 = 0x40000000;
              goto LABEL_368;
            case 28:
              uint64_t v143 = 0x8000000;
              goto LABEL_368;
            case 29:
              uint64_t v143 = 256;
              goto LABEL_368;
            case 30:
              uint64_t v143 = 0x100000000;
              goto LABEL_368;
            case 31:
              uint64_t v143 = 0x8000;
              goto LABEL_368;
            case 32:
              uint64_t v143 = 0x200000000;
              goto LABEL_368;
            case 33:
              uint64_t v143 = 0x200000;
              goto LABEL_368;
            case 34:
              uint64_t v143 = 4096;
LABEL_368:
              *(void *)(a1 + 308) |= v143;
              break;
            default:
              continue;
          }
        }
      }
LABEL_369:
      unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
      if (!v19) {
        return v3;
      }
LABEL_370:
      unsigned int v144 = *(void **)(a1 + 8);
      *(void *)(a1 + 8) = 0;

      return v3;
    }
    unint64_t v34 = v25 >> 3;
    BOOL v35 = v19;
    if ((v147 & 1) == 0)
    {
      int v36 = v18;
      do
      {
        int v38 = *v36++;
        int v37 = v38;
        BOOL v35 = v38 != 0;
        if (v38) {
          BOOL v39 = v37 == v34;
        }
        else {
          BOOL v39 = 1;
        }
      }
      while (!v39);
    }
    switch((int)v34)
    {
      case 1:
        if (!v35) {
          goto LABEL_244;
        }
        if ((*(unsigned char *)(a1 + 309) & 2) == 0)
        {
          uint64_t v40 = PBReaderReadString();
          uint64_t v41 = 80;
          goto LABEL_45;
        }
        char v100 = PBReaderSkipValueWithTag();
        unint64_t v21 = (int *)MEMORY[0x1E4F940C8];
        int v22 = (int *)MEMORY[0x1E4F940B8];
        if ((v100 & 1) == 0) {
          goto LABEL_374;
        }
        uint64_t v101 = *(void *)(a1 + 308) << 54;
        goto LABEL_313;
      case 2:
        if (!v35) {
          goto LABEL_244;
        }
        if ((*(unsigned char *)(a1 + 311) & 0x80) == 0)
        {
          uint64_t v40 = PBReaderReadString();
          uint64_t v41 = 264;
LABEL_45:
          char v43 = *(void **)(a1 + v41);
          *(void *)(a1 + v41) = v40;

          --v7;
          goto LABEL_240;
        }
        char v102 = PBReaderSkipValueWithTag();
        unint64_t v21 = (int *)MEMORY[0x1E4F940C8];
        int v22 = (int *)MEMORY[0x1E4F940B8];
        if ((v102 & 1) == 0) {
          goto LABEL_374;
        }
        uint64_t v101 = *(void *)(a1 + 308) << 32;
        goto LABEL_313;
      case 3:
        if ((v8 & 1) == 0) {
          goto LABEL_244;
        }
        uint64_t v44 = 0;
        unsigned int v45 = 0;
        uint64_t v46 = 0;
        *(void *)(a1 + 308) |= 2uLL;
        while (2)
        {
          uint64_t v47 = *v20;
          uint64_t v48 = *(void *)(v3 + v47);
          unint64_t v49 = v48 + 1;
          if (v48 == -1 || v49 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v50 = *(unsigned char *)(*(void *)(v3 + *v22) + v48);
            *(void *)(v3 + v47) = v49;
            v46 |= (unint64_t)(v50 & 0x7F) << v44;
            if (v50 < 0)
            {
              v44 += 7;
              BOOL v30 = v45++ >= 9;
              if (v30)
              {
                LODWORD(v46) = 0;
                goto LABEL_249;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          LODWORD(v46) = 0;
        }
LABEL_249:
        *(_DWORD *)(a1 + 300) = v46;
        goto LABEL_314;
      case 4:
        if ((v8 & 1) == 0) {
          goto LABEL_244;
        }
        *(void *)(a1 + 308) |= 1uLL;
        uint64_t v51 = *v20;
        unint64_t v52 = *(void *)(v3 + v51);
        if (v52 <= 0xFFFFFFFFFFFFFFF7 && v52 + 8 <= *(void *)(v3 + *v6))
        {
          uint64_t v53 = *(void *)(*(void *)(v3 + *v22) + v52);
          *(void *)(v3 + v51) = v52 + 8;
        }
        else
        {
          *(unsigned char *)(v3 + *v21) = 1;
          uint64_t v53 = 0;
        }
        *(void *)(a1 + 168) = v53;
        goto LABEL_314;
      case 5:
        if ((v8 & 1) == 0) {
          goto LABEL_244;
        }
        uint64_t v54 = 0;
        unsigned int v55 = 0;
        uint64_t v56 = 0;
        *(void *)(a1 + 308) |= 8uLL;
        while (2)
        {
          uint64_t v57 = *v20;
          uint64_t v58 = *(void *)(v3 + v57);
          unint64_t v59 = v58 + 1;
          if (v58 == -1 || v59 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v60 = *(unsigned char *)(*(void *)(v3 + *v22) + v58);
            *(void *)(v3 + v57) = v59;
            v56 |= (unint64_t)(v60 & 0x7F) << v54;
            if (v60 < 0)
            {
              v54 += 7;
              BOOL v30 = v55++ >= 9;
              if (v30)
              {
                uint64_t v56 = 0;
                goto LABEL_253;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          uint64_t v56 = 0;
        }
LABEL_253:
        BOOL v98 = v56 != 0;
        uint64_t v99 = 305;
        goto LABEL_262;
      case 6:
        if ((v8 & 1) == 0) {
          goto LABEL_244;
        }
        uint64_t v61 = 0;
        unsigned int v62 = 0;
        uint64_t v63 = 0;
        *(void *)(a1 + 308) |= 0x10uLL;
        while (2)
        {
          uint64_t v64 = *v20;
          uint64_t v65 = *(void *)(v3 + v64);
          unint64_t v66 = v65 + 1;
          if (v65 == -1 || v66 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v67 = *(unsigned char *)(*(void *)(v3 + *v22) + v65);
            *(void *)(v3 + v64) = v66;
            v63 |= (unint64_t)(v67 & 0x7F) << v61;
            if (v67 < 0)
            {
              v61 += 7;
              BOOL v30 = v62++ >= 9;
              if (v30)
              {
                uint64_t v63 = 0;
                goto LABEL_257;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          uint64_t v63 = 0;
        }
LABEL_257:
        BOOL v98 = v63 != 0;
        uint64_t v99 = 306;
        goto LABEL_262;
      case 7:
        if (!v35) {
          goto LABEL_244;
        }
        if ((*(unsigned char *)(a1 + 311) & 4) != 0)
        {
          char v103 = PBReaderSkipValueWithTag();
          unint64_t v21 = (int *)MEMORY[0x1E4F940C8];
          int v22 = (int *)MEMORY[0x1E4F940B8];
          if ((v103 & 1) == 0) {
            goto LABEL_374;
          }
          uint64_t v101 = *(void *)(a1 + 308) << 37;
          goto LABEL_313;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_374;
        }
        uint64_t v68 = objc_alloc_init(GEOPDSearchQueryTagMetadata);
        if (!GEOPDSearchQueryTagMetadataReadAllFrom((uint64_t)v68, (void *)v3, v9 & 1)) {
          goto LABEL_372;
        }
        PBReaderRecallMark();
        uint64_t v69 = 224;
        goto LABEL_238;
      case 8:
        if (!v35 || (*(unsigned char *)(a1 + 309) & 4) != 0) {
          goto LABEL_242;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_374;
        }
        uint64_t v68 = objc_alloc_init(GEOPDSearchQueryClassificationMetadata);
        if (!GEOPDSearchQueryClassificationMetadataReadAllFrom((uint64_t)v68, (void *)v3, v9 & 1)) {
          goto LABEL_372;
        }
        PBReaderRecallMark();
        -[GEOPDSearchQueryIntentMetadata _addNoFlagsQueryClassificationMetadata:](a1, v68);
        goto LABEL_222;
      case 9:
        if (!v35) {
          goto LABEL_244;
        }
        if (*(unsigned char *)(a1 + 311))
        {
          char v104 = PBReaderSkipValueWithTag();
          unint64_t v21 = (int *)MEMORY[0x1E4F940C8];
          int v22 = (int *)MEMORY[0x1E4F940B8];
          if ((v104 & 1) == 0) {
            goto LABEL_374;
          }
          uint64_t v101 = *(void *)(a1 + 308) << 39;
          goto LABEL_313;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_374;
        }
        uint64_t v68 = objc_alloc_init(GEOPDSearchQuerySpellCorrectionMetadata);
        if (!GEOPDSearchQuerySpellCorrectionMetadataReadAllFrom((uint64_t)v68, (void *)v3, v9 & 1)) {
          goto LABEL_372;
        }
        PBReaderRecallMark();
        uint64_t v69 = 208;
        goto LABEL_238;
      case 10:
        if ((v8 & 1) == 0) {
          goto LABEL_244;
        }
        uint64_t v70 = 0;
        unsigned int v71 = 0;
        uint64_t v72 = 0;
        *(void *)(a1 + 308) |= 4uLL;
        while (2)
        {
          uint64_t v73 = *v20;
          uint64_t v74 = *(void *)(v3 + v73);
          unint64_t v75 = v74 + 1;
          if (v74 == -1 || v75 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v76 = *(unsigned char *)(*(void *)(v3 + *v22) + v74);
            *(void *)(v3 + v73) = v75;
            v72 |= (unint64_t)(v76 & 0x7F) << v70;
            if (v76 < 0)
            {
              v70 += 7;
              BOOL v30 = v71++ >= 9;
              if (v30)
              {
                uint64_t v72 = 0;
                goto LABEL_261;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          uint64_t v72 = 0;
        }
LABEL_261:
        BOOL v98 = v72 != 0;
        uint64_t v99 = 304;
LABEL_262:
        *(unsigned char *)(a1 + v99) = v98;
        goto LABEL_314;
      case 11:
        if (!v35) {
          goto LABEL_244;
        }
        if ((*(unsigned char *)(a1 + 310) & 2) != 0)
        {
          char v105 = PBReaderSkipValueWithTag();
          unint64_t v21 = (int *)MEMORY[0x1E4F940C8];
          int v22 = (int *)MEMORY[0x1E4F940B8];
          if ((v105 & 1) == 0) {
            goto LABEL_374;
          }
          uint64_t v101 = *(void *)(a1 + 308) << 46;
          goto LABEL_313;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_374;
        }
        uint64_t v68 = objc_alloc_init(GEOPDSearchQueryGeoMetadata);
        if (!GEOPDSearchQueryGeoMetadataReadAllFrom((uint64_t)v68, (void *)v3)) {
          goto LABEL_372;
        }
        PBReaderRecallMark();
        uint64_t v69 = 144;
        goto LABEL_238;
      case 12:
        if (!v35 || (*(unsigned char *)(a1 + 308) & 0x20) != 0) {
          goto LABEL_242;
        }
        if (v32 != 2)
        {
          uint64_t v126 = 0;
          unsigned int v127 = 0;
          uint64_t v128 = 0;
          BOOL v19 = v146;
          unsigned int v129 = (int *)MEMORY[0x1E4F940B8];
          while (1)
          {
            uint64_t v130 = *v20;
            uint64_t v131 = *(void *)(v3 + v130);
            unint64_t v132 = v131 + 1;
            if (v131 == -1 || v132 > *(void *)(v3 + *v6)) {
              goto LABEL_334;
            }
            char v133 = *(unsigned char *)(*(void *)(v3 + *v129) + v131);
            *(void *)(v3 + v130) = v132;
            v128 |= (unint64_t)(v133 & 0x7F) << v126;
            if (v133 < 0)
            {
              v126 += 7;
              BOOL v30 = v127++ >= 9;
              if (!v30) {
                continue;
              }
            }
            goto LABEL_335;
          }
        }
        if (!PBReaderPlaceMark()) {
          goto LABEL_373;
        }
        while (1)
        {
          unsigned int v77 = (int *)MEMORY[0x1E4F940C8];
          if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + (int)*MEMORY[0x1E4F940C8])) {
            goto LABEL_317;
          }
          uint64_t v78 = 0;
          unsigned int v79 = 0;
          uint64_t v80 = 0;
          unint64_t v81 = (int *)MEMORY[0x1E4F940B8];
          while (1)
          {
            uint64_t v82 = *v20;
            uint64_t v83 = *(void *)(v3 + v82);
            unint64_t v84 = v83 + 1;
            if (v83 == -1 || v84 > *(void *)(v3 + *v6)) {
              break;
            }
            char v85 = *(unsigned char *)(*(void *)(v3 + *v81) + v83);
            *(void *)(v3 + v82) = v84;
            v80 |= (unint64_t)(v85 & 0x7F) << v78;
            if (v85 < 0)
            {
              v78 += 7;
              BOOL v30 = v79++ >= 9;
              if (!v30) {
                continue;
              }
            }
            goto LABEL_116;
          }
          *(unsigned char *)(v3 + *v77) = 1;
LABEL_116:
          PBRepeatedInt32Add();
        }
      case 13:
        if (!v35) {
          goto LABEL_244;
        }
        if ((*(unsigned char *)(a1 + 311) & 2) != 0)
        {
          char v106 = PBReaderSkipValueWithTag();
          unint64_t v21 = (int *)MEMORY[0x1E4F940C8];
          int v22 = (int *)MEMORY[0x1E4F940B8];
          if ((v106 & 1) == 0) {
            goto LABEL_374;
          }
          uint64_t v101 = *(void *)(a1 + 308) << 38;
          goto LABEL_313;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_374;
        }
        uint64_t v68 = objc_alloc_init(GEOPDSearchQuerySynonymMetadata);
        if (!GEOPDSearchQuerySynonymMetadataReadAllFrom((uint64_t)v68, (void *)v3, v9 & 1)) {
          goto LABEL_372;
        }
        PBReaderRecallMark();
        uint64_t v69 = 216;
        goto LABEL_238;
      case 14:
        if (!v35) {
          goto LABEL_244;
        }
        if ((*(unsigned char *)(a1 + 309) & 0x40) != 0)
        {
          char v107 = PBReaderSkipValueWithTag();
          unint64_t v21 = (int *)MEMORY[0x1E4F940C8];
          int v22 = (int *)MEMORY[0x1E4F940B8];
          if ((v107 & 1) == 0) {
            goto LABEL_374;
          }
          uint64_t v101 = *(void *)(a1 + 308) << 49;
          goto LABEL_313;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_374;
        }
        uint64_t v68 = objc_alloc_init(GEOPDSearchQueryDymMetadata);
        if (!GEOPDSearchQueryDymMetadataReadAllFrom((uint64_t)v68, (void *)v3, v9 & 1)) {
          goto LABEL_372;
        }
        PBReaderRecallMark();
        uint64_t v69 = 120;
        goto LABEL_238;
      case 15:
        if (!v35) {
          goto LABEL_244;
        }
        if ((*(unsigned char *)(a1 + 309) & 8) != 0)
        {
          char v108 = PBReaderSkipValueWithTag();
          unint64_t v21 = (int *)MEMORY[0x1E4F940C8];
          int v22 = (int *)MEMORY[0x1E4F940B8];
          if ((v108 & 1) == 0) {
            goto LABEL_374;
          }
          uint64_t v101 = *(void *)(a1 + 308) << 52;
          goto LABEL_313;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_374;
        }
        uint64_t v68 = objc_alloc_init(GEOPDSearchQueryCompletionMetadata);
        if (!GEOPDSearchQueryCompletionMetadataReadAllFrom((uint64_t)v68, (void *)v3, v9 & 1)) {
          goto LABEL_372;
        }
        PBReaderRecallMark();
        uint64_t v69 = 96;
        goto LABEL_238;
      case 16:
        if (!v35) {
          goto LABEL_244;
        }
        if ((*(unsigned char *)(a1 + 310) & 0x10) != 0)
        {
          char v109 = PBReaderSkipValueWithTag();
          unint64_t v21 = (int *)MEMORY[0x1E4F940C8];
          int v22 = (int *)MEMORY[0x1E4F940B8];
          if ((v109 & 1) == 0) {
            goto LABEL_374;
          }
          uint64_t v101 = *(void *)(a1 + 308) << 43;
          goto LABEL_313;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_374;
        }
        uint64_t v68 = objc_alloc_init(GEOPDSearchQueryInterpretationMetadata);
        if (!GEOPDSearchQueryInterpretationMetadataReadAllFrom((uint64_t)v68, (void *)v3, v9 & 1)) {
          goto LABEL_372;
        }
        PBReaderRecallMark();
        uint64_t v69 = 176;
        goto LABEL_238;
      case 17:
        if (!v35) {
          goto LABEL_244;
        }
        if ((*(unsigned char *)(a1 + 309) & 0x20) != 0)
        {
          char v110 = PBReaderSkipValueWithTag();
          unint64_t v21 = (int *)MEMORY[0x1E4F940C8];
          int v22 = (int *)MEMORY[0x1E4F940B8];
          if ((v110 & 1) == 0) {
            goto LABEL_374;
          }
          uint64_t v101 = *(void *)(a1 + 308) << 50;
          goto LABEL_313;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_374;
        }
        uint64_t v68 = objc_alloc_init(GEOPDSearchQueryDirectionsIntentMetadata);
        if (!GEOPDSearchQueryDirectionsIntentMetadataReadAllFrom((uint64_t)v68, (void *)v3, v9 & 1)) {
          goto LABEL_372;
        }
        PBReaderRecallMark();
        uint64_t v69 = 112;
        goto LABEL_238;
      case 18:
        if (!v35) {
          goto LABEL_244;
        }
        if ((*(unsigned char *)(a1 + 310) & 0x40) != 0)
        {
          char v111 = PBReaderSkipValueWithTag();
          unint64_t v21 = (int *)MEMORY[0x1E4F940C8];
          int v22 = (int *)MEMORY[0x1E4F940B8];
          if ((v111 & 1) == 0) {
            goto LABEL_374;
          }
          uint64_t v101 = *(void *)(a1 + 308) << 41;
          goto LABEL_313;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_374;
        }
        uint64_t v68 = objc_alloc_init(GEOPDSearchQueryNormalizerMetadata);
        if (!GEOPDSearchQueryNormalizerMetadataReadAllFrom((uint64_t)v68, (void *)v3, v9 & 1)) {
          goto LABEL_372;
        }
        PBReaderRecallMark();
        uint64_t v69 = 192;
        goto LABEL_238;
      case 19:
        if (!v35) {
          goto LABEL_244;
        }
        if ((*(unsigned char *)(a1 + 310) & 4) != 0)
        {
          char v112 = PBReaderSkipValueWithTag();
          unint64_t v21 = (int *)MEMORY[0x1E4F940C8];
          int v22 = (int *)MEMORY[0x1E4F940B8];
          if ((v112 & 1) == 0) {
            goto LABEL_374;
          }
          uint64_t v101 = *(void *)(a1 + 308) << 45;
          goto LABEL_313;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_374;
        }
        uint64_t v68 = objc_alloc_init(GEOPDSearchQueryGeoNormalizerMetadata);
        if (!GEOPDSearchQueryGeoNormalizerMetadataReadAllFrom((uint64_t)v68, (void *)v3, v9 & 1)) {
          goto LABEL_372;
        }
        PBReaderRecallMark();
        uint64_t v69 = 152;
        goto LABEL_238;
      case 20:
        if (!v35) {
          goto LABEL_244;
        }
        if ((*(unsigned char *)(a1 + 311) & 0x10) != 0)
        {
          char v113 = PBReaderSkipValueWithTag();
          unint64_t v21 = (int *)MEMORY[0x1E4F940C8];
          int v22 = (int *)MEMORY[0x1E4F940B8];
          if ((v113 & 1) == 0) {
            goto LABEL_374;
          }
          uint64_t v101 = *(void *)(a1 + 308) << 35;
          goto LABEL_313;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_374;
        }
        uint64_t v68 = objc_alloc_init(GEOPDSearchQueryTokenizerMetadata);
        if (!GEOPDSearchQueryTokenizerMetadataReadAllFrom((uint64_t)v68, (void *)v3, v9 & 1)) {
          goto LABEL_372;
        }
        PBReaderRecallMark();
        uint64_t v69 = 240;
        goto LABEL_238;
      case 21:
        if (!v35) {
          goto LABEL_244;
        }
        if ((*(unsigned char *)(a1 + 311) & 0x20) != 0)
        {
          char v114 = PBReaderSkipValueWithTag();
          unint64_t v21 = (int *)MEMORY[0x1E4F940C8];
          int v22 = (int *)MEMORY[0x1E4F940B8];
          if ((v114 & 1) == 0) {
            goto LABEL_374;
          }
          uint64_t v101 = *(void *)(a1 + 308) << 34;
          goto LABEL_313;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_374;
        }
        uint64_t v68 = objc_alloc_init(GEOPDSearchQueryTransliteratorMetadata);
        if (!GEOPDSearchQueryTransliteratorMetadataReadAllFrom((uint64_t)v68, (void *)v3, v9 & 1)) {
          goto LABEL_372;
        }
        PBReaderRecallMark();
        uint64_t v69 = 248;
        goto LABEL_238;
      case 22:
        if (!v35) {
          goto LABEL_244;
        }
        if (*(unsigned char *)(a1 + 310))
        {
          char v115 = PBReaderSkipValueWithTag();
          unint64_t v21 = (int *)MEMORY[0x1E4F940C8];
          int v22 = (int *)MEMORY[0x1E4F940B8];
          if ((v115 & 1) == 0) {
            goto LABEL_374;
          }
          uint64_t v101 = *(void *)(a1 + 308) << 47;
          goto LABEL_313;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_374;
        }
        uint64_t v68 = objc_alloc_init(GEOPDSearchQueryFuzzyMatchV2Metadata);
        if (!GEOPDSearchQueryFuzzyMatchV2MetadataReadAllFrom((uint64_t)v68, (void *)v3, v9 & 1)) {
          goto LABEL_372;
        }
        PBReaderRecallMark();
        uint64_t v69 = 136;
        goto LABEL_238;
      case 23:
        if (!v35 || (*(unsigned char *)(a1 + 308) & 0x40) != 0) {
          goto LABEL_242;
        }
        if (v32 != 2)
        {
          uint64_t v134 = 0;
          unsigned int v135 = 0;
          uint64_t v136 = 0;
          BOOL v19 = v146;
          unint64_t v137 = (int *)MEMORY[0x1E4F940B8];
          while (1)
          {
            uint64_t v138 = *v20;
            uint64_t v139 = *(void *)(v3 + v138);
            unint64_t v140 = v139 + 1;
            if (v139 == -1 || v140 > *(void *)(v3 + *v6)) {
              break;
            }
            char v141 = *(unsigned char *)(*(void *)(v3 + *v137) + v139);
            *(void *)(v3 + v138) = v140;
            v136 |= (unint64_t)(v141 & 0x7F) << v134;
            if (v141 < 0)
            {
              v134 += 7;
              BOOL v30 = v135++ >= 9;
              if (!v30) {
                continue;
              }
            }
            goto LABEL_335;
          }
LABEL_334:
          *(unsigned char *)(v3 + *v21) = 1;
LABEL_335:
          PBRepeatedInt32Add();
          goto LABEL_240;
        }
        if (!PBReaderPlaceMark()) {
          goto LABEL_373;
        }
        while (1)
        {
          BOOL v86 = (int *)MEMORY[0x1E4F940C8];
          if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + (int)*MEMORY[0x1E4F940C8])) {
            break;
          }
          uint64_t v87 = 0;
          unsigned int v88 = 0;
          uint64_t v89 = 0;
          char v90 = (int *)MEMORY[0x1E4F940B8];
          while (1)
          {
            uint64_t v91 = *v20;
            uint64_t v92 = *(void *)(v3 + v91);
            unint64_t v93 = v92 + 1;
            if (v92 == -1 || v93 > *(void *)(v3 + *v6)) {
              break;
            }
            char v94 = *(unsigned char *)(*(void *)(v3 + *v90) + v92);
            *(void *)(v3 + v91) = v93;
            v89 |= (unint64_t)(v94 & 0x7F) << v87;
            if (v94 < 0)
            {
              v87 += 7;
              BOOL v30 = v88++ >= 9;
              if (!v30) {
                continue;
              }
            }
            goto LABEL_181;
          }
          *(unsigned char *)(v3 + *v86) = 1;
LABEL_181:
          PBRepeatedInt32Add();
        }
LABEL_317:
        PBReaderRecallMark();
        unint64_t v21 = (int *)MEMORY[0x1E4F940C8];
        BOOL v19 = v146;
        goto LABEL_241;
      case 24:
        if (!v35) {
          goto LABEL_244;
        }
        if ((*(unsigned char *)(a1 + 310) & 0x80) != 0)
        {
          char v116 = PBReaderSkipValueWithTag();
          unint64_t v21 = (int *)MEMORY[0x1E4F940C8];
          int v22 = (int *)MEMORY[0x1E4F940B8];
          if ((v116 & 1) == 0) {
            goto LABEL_374;
          }
          uint64_t v101 = *(void *)(a1 + 308) << 40;
          goto LABEL_313;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_374;
        }
        uint64_t v68 = objc_alloc_init(GEOPDSearchQueryPoiMetadata);
        if (!GEOPDSearchQueryPoiMetadataReadAllFrom((uint64_t)v68, (void *)v3)) {
          goto LABEL_372;
        }
        PBReaderRecallMark();
        uint64_t v69 = 200;
        goto LABEL_238;
      case 25:
        if (!v35) {
          goto LABEL_244;
        }
        if ((*(unsigned char *)(a1 + 308) & 0x80) != 0)
        {
          char v117 = PBReaderSkipValueWithTag();
          unint64_t v21 = (int *)MEMORY[0x1E4F940C8];
          int v22 = (int *)MEMORY[0x1E4F940B8];
          if ((v117 & 1) == 0) {
            goto LABEL_374;
          }
          uint64_t v101 = *(void *)(a1 + 308) << 56;
          goto LABEL_313;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_374;
        }
        uint64_t v68 = objc_alloc_init(GEOPDSearchACHintMetadata);
        if (!GEOPDSearchACHintMetadataReadAllFrom((uint64_t)v68, (void *)v3, v9 & 1)) {
          goto LABEL_372;
        }
        PBReaderRecallMark();
        uint64_t v69 = 64;
        goto LABEL_238;
      case 26:
        if (!v35) {
          goto LABEL_244;
        }
        if ((*(unsigned char *)(a1 + 310) & 8) != 0)
        {
          char v118 = PBReaderSkipValueWithTag();
          unint64_t v21 = (int *)MEMORY[0x1E4F940C8];
          int v22 = (int *)MEMORY[0x1E4F940B8];
          if ((v118 & 1) == 0) {
            goto LABEL_374;
          }
          uint64_t v101 = *(void *)(a1 + 308) << 44;
          goto LABEL_313;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_374;
        }
        uint64_t v68 = objc_alloc_init(GEOPDSearchQueryGeoTagMetadata);
        if (!GEOPDSearchQueryGeoTagMetadataReadAllFrom((uint64_t)v68, (void *)v3, v9 & 1)) {
          goto LABEL_372;
        }
        PBReaderRecallMark();
        uint64_t v69 = 160;
        goto LABEL_238;
      case 27:
        if (!v35) {
          goto LABEL_244;
        }
        if ((*(unsigned char *)(a1 + 311) & 0x40) != 0)
        {
          char v119 = PBReaderSkipValueWithTag();
          unint64_t v21 = (int *)MEMORY[0x1E4F940C8];
          int v22 = (int *)MEMORY[0x1E4F940B8];
          if ((v119 & 1) == 0) {
            goto LABEL_374;
          }
          uint64_t v101 = *(void *)(a1 + 308) << 33;
          goto LABEL_313;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_374;
        }
        uint64_t v68 = objc_alloc_init(GEOPDSearchQueryTokenizerMetadata);
        if (!GEOPDSearchQueryTokenizerMetadataReadAllFrom((uint64_t)v68, (void *)v3, v9 & 1)) {
          goto LABEL_372;
        }
        PBReaderRecallMark();
        uint64_t v69 = 256;
        goto LABEL_238;
      case 28:
        if (!v35) {
          goto LABEL_244;
        }
        if ((*(unsigned char *)(a1 + 311) & 8) != 0)
        {
          char v120 = PBReaderSkipValueWithTag();
          unint64_t v21 = (int *)MEMORY[0x1E4F940C8];
          int v22 = (int *)MEMORY[0x1E4F940B8];
          if ((v120 & 1) == 0) {
            goto LABEL_374;
          }
          uint64_t v101 = *(void *)(a1 + 308) << 36;
          goto LABEL_313;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_374;
        }
        uint64_t v68 = objc_alloc_init(GEOPDSearchQueryTokenImportanceMetadata);
        if (!GEOPDSearchQueryTokenImportanceMetadataReadAllFrom((uint64_t)v68, (void *)v3)) {
          goto LABEL_372;
        }
        PBReaderRecallMark();
        uint64_t v69 = 232;
        goto LABEL_238;
      case 29:
        if (!v35) {
          goto LABEL_244;
        }
        if (*(unsigned char *)(a1 + 309))
        {
          char v121 = PBReaderSkipValueWithTag();
          unint64_t v21 = (int *)MEMORY[0x1E4F940C8];
          int v22 = (int *)MEMORY[0x1E4F940B8];
          if ((v121 & 1) == 0) {
            goto LABEL_374;
          }
          uint64_t v101 = *(void *)(a1 + 308) << 55;
          goto LABEL_313;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_374;
        }
        uint64_t v68 = objc_alloc_init(GEOPDSearchQueryTokenImportanceMetadata);
        if (!GEOPDSearchQueryTokenImportanceMetadataReadAllFrom((uint64_t)v68, (void *)v3)) {
          goto LABEL_372;
        }
        PBReaderRecallMark();
        uint64_t v69 = 72;
        goto LABEL_238;
      case 30:
        if (!v35) {
          goto LABEL_244;
        }
        if (*(unsigned char *)(a1 + 312))
        {
          char v122 = PBReaderSkipValueWithTag();
          unint64_t v21 = (int *)MEMORY[0x1E4F940C8];
          int v22 = (int *)MEMORY[0x1E4F940B8];
          if ((v122 & 1) == 0) {
            goto LABEL_374;
          }
          uint64_t v101 = *(void *)(a1 + 308) << 31;
          goto LABEL_313;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_374;
        }
        uint64_t v68 = objc_alloc_init(GEOPDSearchRichBrandMetadata);
        if (!GEOPDSearchRichBrandMetadataReadAllFrom((uint64_t)v68, (void *)v3, v9 & 1)) {
          goto LABEL_372;
        }
        PBReaderRecallMark();
        uint64_t v69 = 272;
        goto LABEL_238;
      case 31:
        if (!v35 || (*(unsigned char *)(a1 + 309) & 0x80) != 0)
        {
LABEL_242:
          char v96 = PBReaderSkipValueWithTag();
          unint64_t v21 = (int *)MEMORY[0x1E4F940C8];
          int v22 = (int *)MEMORY[0x1E4F940B8];
          if ((v96 & 1) == 0) {
            goto LABEL_374;
          }
          goto LABEL_314;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_374;
        }
        uint64_t v68 = objc_alloc_init(GEOPDSearchQueryEmbeddingMetadata);
        if (!GEOPDSearchQueryEmbeddingMetadataReadAllFrom((uint64_t)v68, (void *)v3, v9 & 1)) {
          goto LABEL_372;
        }
        PBReaderRecallMark();
        -[GEOPDSearchQueryIntentMetadata _addNoFlagsQueryEmbeddingMetadata:](a1, v68);
LABEL_222:

        goto LABEL_239;
      case 32:
        if (!v35) {
          goto LABEL_244;
        }
        if ((*(unsigned char *)(a1 + 312) & 2) != 0)
        {
          char v123 = PBReaderSkipValueWithTag();
          unint64_t v21 = (int *)MEMORY[0x1E4F940C8];
          int v22 = (int *)MEMORY[0x1E4F940B8];
          if ((v123 & 1) == 0) {
            goto LABEL_374;
          }
          uint64_t v101 = *(void *)(a1 + 308) << 30;
          goto LABEL_313;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_374;
        }
        uint64_t v68 = objc_alloc_init(GEOPDSearchTokenSynonymMetadata);
        if (!GEOPDSearchTokenSynonymMetadataReadAllFrom((uint64_t)v68, (void *)v3, v9 & 1)) {
          goto LABEL_372;
        }
        PBReaderRecallMark();
        uint64_t v69 = 280;
        goto LABEL_238;
      case 33:
        if (!v35) {
          goto LABEL_244;
        }
        if ((*(unsigned char *)(a1 + 310) & 0x20) != 0)
        {
          char v124 = PBReaderSkipValueWithTag();
          unint64_t v21 = (int *)MEMORY[0x1E4F940C8];
          int v22 = (int *)MEMORY[0x1E4F940B8];
          if ((v124 & 1) == 0) {
            goto LABEL_374;
          }
          uint64_t v101 = *(void *)(a1 + 308) << 42;
          goto LABEL_313;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_374;
        }
        uint64_t v68 = objc_alloc_init(GEOPDSearchQueryNeuralRewriteMetadata);
        if (!GEOPDSearchQueryNeuralRewriteMetadataReadAllFrom((uint64_t)v68, (void *)v3, v9 & 1)) {
          goto LABEL_372;
        }
        PBReaderRecallMark();
        uint64_t v69 = 184;
        goto LABEL_238;
      case 34:
        if (!v35)
        {
LABEL_244:
          char v97 = PBReaderSkipValueWithTag();
          int v22 = (int *)MEMORY[0x1E4F940B8];
          unint64_t v21 = (int *)MEMORY[0x1E4F940C8];
          if ((v97 & 1) == 0) {
            goto LABEL_374;
          }
          goto LABEL_314;
        }
        if ((*(unsigned char *)(a1 + 309) & 0x10) != 0)
        {
          char v125 = PBReaderSkipValueWithTag();
          unint64_t v21 = (int *)MEMORY[0x1E4F940C8];
          int v22 = (int *)MEMORY[0x1E4F940B8];
          if ((v125 & 1) == 0) {
            goto LABEL_374;
          }
          uint64_t v101 = *(void *)(a1 + 308) << 51;
LABEL_313:
          v7 += v101 >> 63;
          goto LABEL_314;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_374;
        }
        uint64_t v68 = objc_alloc_init(GEOPDSearchQueryCtrMetadata);
        if (GEOPDSearchQueryCtrMetadataReadAllFrom((uint64_t)v68, (void *)v3, v9 & 1))
        {
          PBReaderRecallMark();
          uint64_t v69 = 104;
LABEL_238:
          unint64_t v95 = *(void **)(a1 + v69);
          *(void *)(a1 + v69) = v68;

          --v7;
LABEL_239:
          BOOL v19 = v146;
LABEL_240:
          unint64_t v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_241:
          int v22 = (int *)MEMORY[0x1E4F940B8];
LABEL_314:
          if (!v19 && v7 == 0 || *(void *)(v3 + *v20) >= *(void *)(v3 + *v6)) {
            goto LABEL_336;
          }
          continue;
        }
LABEL_372:

LABEL_373:
        BOOL v19 = v146;
LABEL_374:
        unint64_t v3 = 0;
        *(void *)(a1 + 308) |= 0x3FFFFFFE0uLL;
        if (v19) {
          goto LABEL_370;
        }
        return v3;
      default:
        int v42 = PBReaderSkipValueWithTag();
        int v22 = (int *)MEMORY[0x1E4F940B8];
        unint64_t v21 = (int *)MEMORY[0x1E4F940C8];
        if (!v42) {
          goto LABEL_374;
        }
        goto LABEL_314;
    }
  }
}

void sub_1899A662C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1899A677C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1899A694C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1899A8554(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1899A86A4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1899B265C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDSearchQueryIntentMetadataCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v22 = *MEMORY[0x1E4F143B8];
  -[GEOPDSearchQueryTagMetadata readAll:](*(void *)(a1 + 224), 1);
  long long v18 = 0u;
  long long v19 = 0u;
  long long v16 = 0u;
  long long v17 = 0u;
  id v2 = *(id *)(a1 + 88);
  uint64_t v3 = [v2 countByEnumeratingWithState:&v16 objects:v21 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v17;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v17 != v5) {
          objc_enumerationMutation(v2);
        }
        -[GEOPDSearchQueryClassificationMetadata readAll:](*(void *)(*((void *)&v16 + 1) + 8 * v6++), 1);
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v16 objects:v21 count:16];
    }
    while (v4);
  }

  -[GEOPDSearchQuerySpellCorrectionMetadata readAll:](*(void *)(a1 + 208), 1);
  -[GEOPDSearchQuerySynonymMetadata readAll:](*(void *)(a1 + 216), 1);
  -[GEOPDSearchQueryDymMetadata readAll:](*(void *)(a1 + 120), 1);
  -[GEOPDSearchQueryCompletionMetadata readAll:](*(void *)(a1 + 96), 1);
  -[GEOPDSearchQueryInterpretationMetadata readAll:](*(void *)(a1 + 176), 1);
  -[GEOPDSearchQueryDirectionsIntentMetadata readAll:](*(void *)(a1 + 112), 1);
  -[GEOPDSearchQueryNormalizerMetadata readAll:](*(void *)(a1 + 192), 1);
  -[GEOPDSearchQueryGeoNormalizerMetadata readAll:](*(void *)(a1 + 152), 1);
  -[GEOPDSearchQueryTokenizerMetadata readAll:](*(void *)(a1 + 240), 1);
  -[GEOPDSearchQueryTransliteratorMetadata readAll:](*(void *)(a1 + 248), 1);
  -[GEOPDSearchQueryFuzzyMatchV2Metadata readAll:](*(void *)(a1 + 136), 1);
  -[GEOPDSearchACHintMetadata readAll:](*(void *)(a1 + 64), 1);
  -[GEOPDSearchQueryGeoTagMetadata readAll:](*(void *)(a1 + 160), 1);
  -[GEOPDSearchQueryTokenizerMetadata readAll:](*(void *)(a1 + 256), 1);
  -[GEOPDSearchRichBrandMetadata readAll:](*(void *)(a1 + 272), 1);
  long long v14 = 0u;
  long long v15 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  id v7 = *(id *)(a1 + 128);
  uint64_t v8 = [v7 countByEnumeratingWithState:&v12 objects:v20 count:16];
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)v13;
    do
    {
      uint64_t v11 = 0;
      do
      {
        if (*(void *)v13 != v10) {
          objc_enumerationMutation(v7);
        }
        -[GEOPDSearchQueryEmbeddingMetadata readAll:](*(void *)(*((void *)&v12 + 1) + 8 * v11++), 1);
      }
      while (v9 != v11);
      uint64_t v9 = [v7 countByEnumeratingWithState:&v12 objects:v20 count:16];
    }
    while (v9);
  }

  -[GEOPDSearchQueryNeuralRewriteMetadata readAll:](*(void *)(a1 + 184), 1);
}

unint64_t GEOPDSearchQueryIntentMetadataReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 292))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDSearchQueryIntentMetadataReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 296));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 288) = [v8 position];
  *(_DWORD *)(a1 + 292) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOPDSearchQueryIntentMetadataReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOPDSearchQueryIntentMetadataReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDSearchQueryIntentMetadataReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOPDSearchQueryIntentMetadataCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 296));
  return Specified;
}

void sub_1899B2ADC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSearchQueryTokenizerMetadataIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_39;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        goto LABEL_39;
      }
      unint64_t v17 = v8 >> 3;
      if ((v8 >> 3) == 3) {
        break;
      }
      if (v17 == 2)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_41;
        }
        unsigned int v18 = 0;
        while (1)
        {
          uint64_t v19 = *v2;
          uint64_t v20 = *(void *)&a1[v19];
          unint64_t v21 = v20 + 1;
          if (v20 == -1 || v21 > *(void *)&a1[*v3]) {
            break;
          }
          int v22 = *(char *)(*(void *)&a1[*v5] + v20);
          *(void *)&a1[v19] = v21;
          if (v22 < 0 && v18++ <= 8) {
            continue;
          }
          goto LABEL_38;
        }
        a1[*v4] = 1;
        goto LABEL_38;
      }
      if (v17 != 1) {
        goto LABEL_35;
      }
      if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDSearchTokenSetIsValid(a1))
      {
LABEL_41:
        PBReaderRecallMark();
        return 0;
      }
      PBReaderRecallMark();
LABEL_38:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_39;
      }
    }
    if (v15 != 2) {
      goto LABEL_41;
    }
LABEL_35:
    if ((PBReaderSkipValueWithTag() & 1) == 0) {
      goto LABEL_41;
    }
    goto LABEL_38;
  }
LABEL_39:
  BOOL v24 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v24;
}

BOOL GEOPDSearchQueryTokenImportanceMetadataIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        BOOL v13 = v7++ >= 9;
        if (v13)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark())
        {
LABEL_57:
          PBReaderRecallMark();
          return 0;
        }
        objc_msgSend(a1, "position", 0, 0);
        [a1 length];
        while (*(void *)&a1[*v2] < *(void *)&a1[*v3] && !a1[*v4])
        {
          char v17 = 0;
          unsigned int v18 = 0;
          unint64_t v19 = 0;
          while (1)
          {
            uint64_t v20 = *v2;
            uint64_t v21 = *(void *)&a1[v20];
            unint64_t v22 = v21 + 1;
            if (v21 == -1 || v22 > *(void *)&a1[*v3]) {
              break;
            }
            char v23 = *(unsigned char *)(*(void *)&a1[*v5] + v21);
            *(void *)&a1[v20] = v22;
            v19 |= (unint64_t)(v23 & 0x7F) << v17;
            if ((v23 & 0x80) == 0) {
              goto LABEL_32;
            }
            v17 += 7;
            BOOL v13 = v18++ >= 9;
            if (v13)
            {
              unint64_t v19 = 0;
              uint64_t v24 = *v4;
              int v25 = a1[v24];
              goto LABEL_34;
            }
          }
          a1[*v4] = 1;
LABEL_32:
          uint64_t v24 = *v4;
          int v25 = a1[v24];
          if (a1[v24]) {
            unint64_t v19 = 0;
          }
LABEL_34:
          int v26 = v19 & 7;
          if (v25 || v26 == 4) {
            break;
          }
          if ((v19 >> 3) == 2)
          {
            if (v26 != 5) {
              goto LABEL_56;
            }
            uint64_t v28 = *v2;
            unint64_t v29 = *(void *)&a1[v28];
            if (v29 <= 0xFFFFFFFFFFFFFFFBLL && (unint64_t v30 = v29 + 4, v30 <= *(void *)&a1[*v3])) {
              *(void *)&a1[v28] = v30;
            }
            else {
              a1[v24] = 1;
            }
          }
          else if ((v19 >> 3) == 1)
          {
            if (v26 != 2 || (PBReaderSkipValueWithTag() & 1) == 0)
            {
LABEL_56:
              PBReaderRecallMark();
              goto LABEL_57;
            }
          }
          else if (!PBReaderSkipValueWithTag())
          {
            goto LABEL_56;
          }
        }
        int v31 = a1[*v4];
        PBReaderRecallMark();
        if (v31) {
          goto LABEL_57;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_57;
      }
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v32 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v32;
}

void sub_1899B36E4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDSearchQueryIntentMetadataIsDirty(uint64_t a1)
{
  uint64_t v26 = *MEMORY[0x1E4F143B8];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 296));
  uint64_t v2 = *(void *)(a1 + 308);
  if ((v2 & 0x480000200) != 0) {
    return 1;
  }
  if ((v2 & 0x4000000) != 0)
  {
    uint64_t v3 = *(os_unfair_lock_s **)(a1 + 224);
    if (v3)
    {
      os_unfair_lock_lock_with_options();
      char IsDirty = _GEOPDSearchQueryTagMetadataIsDirty((uint64_t)v3);
      os_unfair_lock_unlock(v3 + 16);
      if (IsDirty) {
        return 1;
      }
      uint64_t v2 = *(void *)(a1 + 308);
    }
  }
  if ((v2 & 0x400) == 0)
  {
    if ((v2 & 0x1000000) != 0)
    {
      uint64_t v5 = *(void *)(a1 + 208);
      if (v5)
      {
        os_unfair_lock_lock_with_options();
        os_unfair_lock_assert_owner((const os_unfair_lock *)(v5 + 72));
        unsigned int v6 = *(unsigned __int16 *)(v5 + 100);
        os_unfair_lock_unlock((os_unfair_lock_t)(v5 + 72));
        if (v6 > 0x7FF) {
          return 1;
        }
      }
      uint64_t v2 = *(void *)(a1 + 308);
    }
    if ((v2 & 0x20020) == 0)
    {
      if ((v2 & 0x2000000) != 0)
      {
        if (GEOPDSearchQuerySynonymMetadataIsDirty(*(os_unfair_lock_s **)(a1 + 216))) {
          return 1;
        }
        uint64_t v2 = *(void *)(a1 + 308);
      }
      if ((v2 & 0x4000) != 0)
      {
        if (GEOPDSearchQueryDymMetadataIsDirty(*(os_unfair_lock_s **)(a1 + 120))) {
          return 1;
        }
        uint64_t v2 = *(void *)(a1 + 308);
      }
      if ((v2 & 0x800) != 0)
      {
        if (GEOPDSearchQueryCompletionMetadataIsDirty(*(void *)(a1 + 96))) {
          return 1;
        }
        uint64_t v2 = *(void *)(a1 + 308);
      }
      if ((v2 & 0x100000) != 0)
      {
        if (GEOPDSearchQueryInterpretationMetadataIsDirty(*(void *)(a1 + 176))) {
          return 1;
        }
        uint64_t v2 = *(void *)(a1 + 308);
      }
      if ((v2 & 0x2000) != 0)
      {
        if (GEOPDSearchQueryDirectionsIntentMetadataIsDirty(*(void *)(a1 + 112))) {
          return 1;
        }
        uint64_t v2 = *(void *)(a1 + 308);
      }
      if ((v2 & 0x400000) != 0)
      {
        if (GEOPDSearchQueryNormalizerMetadataIsDirty(*(void *)(a1 + 192))) {
          return 1;
        }
        uint64_t v2 = *(void *)(a1 + 308);
      }
      if ((v2 & 0x40000) != 0)
      {
        if (GEOPDSearchQueryGeoNormalizerMetadataIsDirty(*(void *)(a1 + 152))) {
          return 1;
        }
        uint64_t v2 = *(void *)(a1 + 308);
      }
      if ((v2 & 0x10000000) != 0)
      {
        if (GEOPDSearchQueryTokenizerMetadataIsDirty(*(os_unfair_lock_s **)(a1 + 240))) {
          return 1;
        }
        uint64_t v2 = *(void *)(a1 + 308);
      }
      if ((v2 & 0x20000000) != 0)
      {
        if (GEOPDSearchQueryTransliteratorMetadataIsDirty(*(void *)(a1 + 248))) {
          return 1;
        }
        uint64_t v2 = *(void *)(a1 + 308);
      }
      if ((v2 & 0x10000) != 0)
      {
        if (GEOPDSearchQueryFuzzyMatchV2MetadataIsDirty(*(os_unfair_lock_s **)(a1 + 136))) {
          return 1;
        }
        uint64_t v2 = *(void *)(a1 + 308);
      }
      if ((v2 & 0x800040) != 0) {
        return 1;
      }
      if ((v2 & 0x80) != 0)
      {
        if (GEOPDSearchACHintMetadataIsDirty(*(os_unfair_lock_s **)(a1 + 64))) {
          return 1;
        }
        uint64_t v2 = *(void *)(a1 + 308);
      }
      if ((v2 & 0x80000) != 0)
      {
        if (GEOPDSearchQueryGeoTagMetadataIsDirty(*(os_unfair_lock_s **)(a1 + 160))) {
          return 1;
        }
        uint64_t v2 = *(void *)(a1 + 308);
      }
      if ((v2 & 0x40000000) != 0)
      {
        if (GEOPDSearchQueryTokenizerMetadataIsDirty(*(os_unfair_lock_s **)(a1 + 256))) {
          return 1;
        }
        uint64_t v2 = *(void *)(a1 + 308);
      }
      if ((v2 & 0x8000100) != 0) {
        return 1;
      }
      if ((v2 & 0x100000000) != 0)
      {
        if (GEOPDSearchRichBrandMetadataIsDirty(*(void *)(a1 + 272))) {
          return 1;
        }
        uint64_t v2 = *(void *)(a1 + 308);
      }
      if ((v2 & 0x200008000) != 0) {
        return 1;
      }
      if ((v2 & 0x200000) != 0)
      {
        if (GEOPDSearchQueryNeuralRewriteMetadataIsDirty(*(void *)(a1 + 184))) {
          return 1;
        }
        uint64_t v2 = *(void *)(a1 + 308);
      }
      if ((v2 & 0x1000) != 0) {
        return 1;
      }
      if ((v2 & 0x400) != 0)
      {
        long long v22 = 0u;
        long long v23 = 0u;
        long long v20 = 0u;
        long long v21 = 0u;
        id v9 = *(id *)(a1 + 88);
        uint64_t v10 = [v9 countByEnumeratingWithState:&v20 objects:v25 count:16];
        if (v10)
        {
          uint64_t v11 = v10;
          uint64_t v12 = *(void *)v21;
LABEL_66:
          uint64_t v13 = 0;
          while (1)
          {
            if (*(void *)v21 != v12) {
              objc_enumerationMutation(v9);
            }
            if (GEOPDSearchQueryClassificationMetadataIsDirty(*(os_unfair_lock_s **)(*((void *)&v20 + 1) + 8 * v13))) {
              goto LABEL_84;
            }
            if (v11 == ++v13)
            {
              uint64_t v11 = [v9 countByEnumeratingWithState:&v20 objects:v25 count:16];
              if (v11) {
                goto LABEL_66;
              }
              break;
            }
          }
        }

        uint64_t v2 = *(void *)(a1 + 308);
      }
      if ((v2 & 0x8000) == 0) {
        return 0;
      }
      long long v18 = 0u;
      long long v19 = 0u;
      long long v16 = 0u;
      long long v17 = 0u;
      id v9 = *(id *)(a1 + 128);
      uint64_t v7 = [v9 countByEnumeratingWithState:&v16 objects:v24 count:16];
      if (!v7)
      {
LABEL_85:

        return v7;
      }
      uint64_t v14 = *(void *)v17;
LABEL_77:
      uint64_t v15 = 0;
      while (1)
      {
        if (*(void *)v17 != v14) {
          objc_enumerationMutation(v9);
        }
        if ((GEOPDSearchQueryEmbeddingMetadataIsDirty(*(os_unfair_lock_s **)(*((void *)&v16 + 1)
                                                                                             + 8 * v15)) & 1) != 0)
          break;
        if (v7 == ++v15)
        {
          uint64_t v7 = [v9 countByEnumeratingWithState:&v16 objects:v24 count:16];
          if (v7) {
            goto LABEL_77;
          }
          goto LABEL_85;
        }
      }
LABEL_84:
      uint64_t v7 = 1;
      goto LABEL_85;
    }
  }
  return 1;
}

void sub_1899B4288(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchQueryInterpretationMetadataReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  unsigned int v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 52);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 48)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  unsigned int v11 = vaddv_s16((int16x4_t)(*(void *)&vshl_u16((uint16x4_t)(*(void *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 68)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFEFFFDFFFCFFFBLL) & 0xFF01FF01FF01FF01));
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v7])
    {
      case -3:
        char v8 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        BOOL v14 = v11 > 2;
        char v15 = v10 | v14;
        if (((v10 | v14) | v8)) {
          long long v16 = 0;
        }
        else {
          long long v16 = a3;
        }
        char v59 = (v16 == 0) | v15;
        long long v17 = (int *)MEMORY[0x1E4F940E8];
        long long v18 = (int *)MEMORY[0x1E4F940C8];
        long long v19 = (int *)MEMORY[0x1E4F940B8];
        char v58 = v10 | v14;
        break;
      default:
        ++v11;
LABEL_6:
        uint64_t v12 = v9;
        uint64_t v13 = v10;
LABEL_8:
        ++v7;
        uint64_t v9 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v17) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v18)) {
      goto LABEL_84;
    }
    char v20 = 0;
    unsigned int v21 = 0;
    unint64_t v22 = 0;
    while (1)
    {
      uint64_t v23 = *v17;
      uint64_t v24 = *(void *)(v3 + v23);
      unint64_t v25 = v24 + 1;
      if (v24 == -1 || v25 > *(void *)(v3 + *v6)) {
        break;
      }
      char v26 = *(unsigned char *)(*(void *)(v3 + *v19) + v24);
      *(void *)(v3 + v23) = v25;
      v22 |= (unint64_t)(v26 & 0x7F) << v20;
      if ((v26 & 0x80) == 0) {
        goto LABEL_23;
      }
      v20 += 7;
      BOOL v27 = v21++ >= 9;
      if (v27)
      {
        unint64_t v22 = 0;
        int v28 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_25;
      }
    }
    *(unsigned char *)(v3 + *v18) = 1;
LABEL_23:
    int v28 = *(unsigned __int8 *)(v3 + *v18);
    if (*(unsigned char *)(v3 + *v18)) {
      unint64_t v22 = 0;
    }
LABEL_25:
    if (v28 || (v22 & 7) == 4)
    {
LABEL_84:
      if (v15)
      {
        char v52 = 1;
        goto LABEL_95;
      }
      if (v16)
      {
        while (1)
        {
          int v53 = *v16++;
          char v54 = 16;
          switch(v53)
          {
            case 0:
              goto LABEL_96;
            case 2:
              goto LABEL_91;
            case 3:
              char v54 = 32;
              goto LABEL_91;
            case 5:
              char v54 = 8;
              goto LABEL_91;
            case 6:
              char v54 = 4;
LABEL_91:
              *(unsigned char *)(a1 + 68) |= v54;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_96;
    }
    unint64_t v30 = v22 >> 3;
    BOOL v31 = v15;
    if ((v59 & 1) == 0)
    {
      BOOL v32 = v16;
      do
      {
        int v34 = *v32++;
        int v33 = v34;
        BOOL v31 = v34 != 0;
        if (v34) {
          BOOL v35 = v33 == v30;
        }
        else {
          BOOL v35 = 1;
        }
      }
      while (!v35);
    }
    switch((int)v30)
    {
      case 1:
        if ((v8 & 1) == 0) {
          goto LABEL_69;
        }
        *(unsigned char *)(a1 + 68) |= 1u;
        uint64_t v36 = *v17;
        unint64_t v37 = *(void *)(v3 + v36);
        if (v37 <= 0xFFFFFFFFFFFFFFFBLL && v37 + 4 <= *(void *)(v3 + *v6))
        {
          int v38 = *(_DWORD *)(*(void *)(v3 + *v19) + v37);
          *(void *)(v3 + v36) = v37 + 4;
        }
        else
        {
          *(unsigned char *)(v3 + *v18) = 1;
          int v38 = 0;
        }
        *(_DWORD *)(a1 + 60) = v38;
        goto LABEL_83;
      case 2:
        if (!v31 || (*(unsigned char *)(a1 + 68) & 0x10) != 0) {
          goto LABEL_69;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_94;
        }
        uint64_t v57 = objc_alloc_init(GEOPDSearchPair);
        if (!GEOPDSearchPairReadAllFrom((uint64_t)v57, (void *)v3)) {
          goto LABEL_93;
        }
        PBReaderRecallMark();
        -[GEOPDSearchQueryInterpretationMetadata _addNoFlagsFeatureMap:](a1, v57);
        goto LABEL_53;
      case 3:
        if (!v31 || (*(unsigned char *)(a1 + 68) & 0x20) != 0) {
          goto LABEL_69;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_94;
        }
        uint64_t v57 = objc_alloc_init(GEOPDSearchTriggerFeature);
        if (GEOPDSearchTriggerFeatureReadAllFrom((uint64_t)v57, (void *)v3, v9 & 1))
        {
          PBReaderRecallMark();
          -[GEOPDSearchQueryInterpretationMetadata _addNoFlagsTriggerFeatures:](a1, v57);
LABEL_53:

LABEL_80:
          char v15 = v58;
          long long v18 = (int *)MEMORY[0x1E4F940C8];
LABEL_83:
          if (!(v15 & 1 | (v7 != 0))) {
            goto LABEL_84;
          }
          continue;
        }
LABEL_93:

LABEL_94:
        char v52 = 0;
        char v15 = v58;
        long long v18 = (int *)MEMORY[0x1E4F940C8];
LABEL_95:
        *(unsigned char *)(a1 + 68) |= 0x10u;
        *(unsigned char *)(a1 + 68) |= 0x20u;
        *(unsigned char *)(a1 + 68) |= 8u;
        *(unsigned char *)(a1 + 68) |= 4u;
        if (v52)
        {
LABEL_96:
          unint64_t v3 = *(unsigned char *)(v3 + *v18) == 0;
          if (v15) {
            goto LABEL_97;
          }
        }
        else
        {
          unint64_t v3 = 0;
          if (v15)
          {
LABEL_97:
            unsigned int v55 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = 0;
          }
        }
        return v3;
      case 4:
        if ((v8 & 1) == 0) {
          goto LABEL_69;
        }
        char v40 = 0;
        unsigned int v41 = 0;
        uint64_t v42 = 0;
        *(unsigned char *)(a1 + 68) |= 2u;
        while (2)
        {
          uint64_t v43 = *v17;
          uint64_t v44 = *(void *)(v3 + v43);
          unint64_t v45 = v44 + 1;
          if (v44 == -1 || v45 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v46 = *(unsigned char *)(*(void *)(v3 + *v19) + v44);
            *(void *)(v3 + v43) = v45;
            v42 |= (unint64_t)(v46 & 0x7F) << v40;
            if (v46 < 0)
            {
              v40 += 7;
              BOOL v27 = v41++ >= 9;
              if (v27)
              {
                uint64_t v42 = 0;
                goto LABEL_74;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          uint64_t v42 = 0;
        }
LABEL_74:
        *(unsigned char *)(a1 + 64) = v42 != 0;
        goto LABEL_83;
      case 5:
        if (!v31) {
          goto LABEL_69;
        }
        if ((*(unsigned char *)(a1 + 68) & 8) == 0)
        {
          uint64_t v47 = PBReaderReadString();
          uint64_t v48 = 24;
          goto LABEL_68;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_94;
        }
        char v51 = 16 * *(unsigned char *)(a1 + 68);
        goto LABEL_79;
      case 6:
        if (v31)
        {
          if ((*(unsigned char *)(a1 + 68) & 4) != 0)
          {
            if ((PBReaderSkipValueWithTag() & 1) == 0) {
              goto LABEL_94;
            }
            char v51 = 32 * *(unsigned char *)(a1 + 68);
LABEL_79:
            v7 += v51 >> 7;
          }
          else
          {
            uint64_t v47 = PBReaderReadString();
            uint64_t v48 = 16;
LABEL_68:
            unint64_t v49 = *(void **)(a1 + v48);
            *(void *)(a1 + v48) = v47;

            --v7;
          }
          goto LABEL_80;
        }
LABEL_69:
        char v50 = PBReaderSkipValueWithTag();
        long long v18 = (int *)MEMORY[0x1E4F940C8];
        char v15 = v58;
        if ((v50 & 1) == 0)
        {
LABEL_92:
          char v52 = 0;
          goto LABEL_95;
        }
        goto LABEL_83;
      default:
        int v39 = PBReaderSkipValueWithTag();
        long long v18 = (int *)MEMORY[0x1E4F940C8];
        char v15 = v58;
        if (!v39) {
          goto LABEL_92;
        }
        goto LABEL_83;
    }
  }
}

void sub_1899B55D0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1899B5760(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1899B5D70(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1899B5E64(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDSearchQueryInterpretationMetadataCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v21 = *MEMORY[0x1E4F143B8];
  long long v15 = 0u;
  long long v16 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  id v2 = *(id *)(a1 + 32);
  uint64_t v3 = [v2 countByEnumeratingWithState:&v15 objects:v20 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v16;
    while (1)
    {
      if (*(void *)v16 != v5) {
        objc_enumerationMutation(v2);
      }
      if (!--v4)
      {
        uint64_t v4 = [v2 countByEnumeratingWithState:&v15 objects:v20 count:16];
        if (!v4) {
          break;
        }
      }
    }
  }

  long long v13 = 0u;
  long long v14 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  id v6 = *(id *)(a1 + 40);
  uint64_t v7 = [v6 countByEnumeratingWithState:&v11 objects:v19 count:16];
  if (v7)
  {
    uint64_t v8 = v7;
    uint64_t v9 = *(void *)v12;
    do
    {
      uint64_t v10 = 0;
      do
      {
        if (*(void *)v12 != v9) {
          objc_enumerationMutation(v6);
        }
        -[GEOPDSearchTriggerFeature readAll:](*(void *)(*((void *)&v11 + 1) + 8 * v10++), 1);
      }
      while (v8 != v10);
      uint64_t v8 = [v6 countByEnumeratingWithState:&v11 objects:v19 count:16];
    }
    while (v8);
  }
}

unint64_t GEOPDSearchQueryInterpretationMetadataReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 52))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDSearchQueryInterpretationMetadataReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = [v8 position];
  *(_DWORD *)(a1 + 52) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOPDSearchQueryInterpretationMetadataReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOPDSearchQueryInterpretationMetadataReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDSearchQueryInterpretationMetadataReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOPDSearchQueryInterpretationMetadataCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_1899B617C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1899B64A4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSearchQueryInterpretationMetadataIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  BOOL v2 = (*(unsigned char *)(a1 + 68) & 0x7C) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return v2;
}

void sub_1899B6874(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchQueryNeuralRewriteMetadataReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  id v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  char v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  unsigned int v10 = ((*(unsigned __int8 *)(a1 + 56) >> 2) & 1)
      + ((*(unsigned __int8 *)(a1 + 56) >> 1) & 1)
      + ((*(unsigned __int8 *)(a1 + 56) >> 3) & 1);
  while (1)
  {
    unsigned int v11 = a3[v9];
    if (v11 >= 0xFFFFFFFE)
    {
      char v7 = 1;
      goto LABEL_9;
    }
    if (v11 != -3) {
      break;
    }
    char v8 = 1;
LABEL_9:
    ++v9;
  }
  if (v11)
  {
    ++v10;
    goto LABEL_9;
  }
  char v12 = v7 | (v10 > 1);
  if (v7 & 1 | (v10 > 1) | v8 & 1) {
    long long v13 = 0;
  }
  else {
    long long v13 = a3;
  }
  long long v14 = (int *)MEMORY[0x1E4F940E8];
  long long v15 = (int *)MEMORY[0x1E4F940C8];
  long long v16 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(void *)(v3 + *v14) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v15)) {
      goto LABEL_66;
    }
    char v17 = 0;
    unsigned int v18 = 0;
    unint64_t v19 = 0;
    while (1)
    {
      uint64_t v20 = *v14;
      uint64_t v21 = *(void *)(v3 + v20);
      unint64_t v22 = v21 + 1;
      if (v21 == -1 || v22 > *(void *)(v3 + *v6)) {
        break;
      }
      char v23 = *(unsigned char *)(*(void *)(v3 + *v16) + v21);
      *(void *)(v3 + v20) = v22;
      v19 |= (unint64_t)(v23 & 0x7F) << v17;
      if ((v23 & 0x80) == 0) {
        goto LABEL_24;
      }
      v17 += 7;
      if (v18++ >= 9)
      {
        unint64_t v19 = 0;
        int v25 = *(unsigned __int8 *)(v3 + *v15);
        goto LABEL_26;
      }
    }
    *(unsigned char *)(v3 + *v15) = 1;
LABEL_24:
    int v25 = *(unsigned __int8 *)(v3 + *v15);
    if (*(unsigned char *)(v3 + *v15)) {
      unint64_t v19 = 0;
    }
LABEL_26:
    if (v25 || (v19 & 7) == 4)
    {
LABEL_66:
      if (v12)
      {
        char v42 = 1;
        goto LABEL_75;
      }
      if (v13)
      {
        while (1)
        {
          int v43 = *v13++;
          char v44 = 4;
          switch(v43)
          {
            case 0:
              goto LABEL_76;
            case 1:
              goto LABEL_72;
            case 3:
              char v44 = 2;
              goto LABEL_72;
            case 4:
              char v44 = 8;
LABEL_72:
              *(unsigned char *)(a1 + 56) |= v44;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_76;
    }
    unint64_t v27 = v19 >> 3;
    BOOL v28 = v12;
    if (!((v13 == 0) | v12 & 1))
    {
      unint64_t v29 = v13;
      do
      {
        int v31 = *v29++;
        int v30 = v31;
        BOOL v28 = v31 != 0;
        if (v31) {
          BOOL v32 = v30 == v27;
        }
        else {
          BOOL v32 = 1;
        }
      }
      while (!v32);
    }
    switch((int)v27)
    {
      case 1:
        if (!v28) {
          goto LABEL_54;
        }
        if ((*(unsigned char *)(a1 + 56) & 4) == 0)
        {
          uint64_t v33 = PBReaderReadString();
          uint64_t v34 = 24;
          goto LABEL_53;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_74;
        }
        char v41 = 32 * *(unsigned char *)(a1 + 56);
        goto LABEL_62;
      case 2:
        if ((v8 & 1) == 0) {
          goto LABEL_54;
        }
        *(unsigned char *)(a1 + 56) |= 1u;
        uint64_t v36 = *v14;
        unint64_t v37 = *(void *)(v3 + v36);
        if (v37 <= 0xFFFFFFFFFFFFFFFBLL && v37 + 4 <= *(void *)(v3 + *v6))
        {
          int v38 = *(_DWORD *)(*(void *)(v3 + *v16) + v37);
          *(void *)(v3 + v36) = v37 + 4;
        }
        else
        {
          *(unsigned char *)(v3 + *v15) = 1;
          int v38 = 0;
        }
        *(_DWORD *)(a1 + 52) = v38;
        goto LABEL_65;
      case 3:
        if (!v28) {
          goto LABEL_54;
        }
        if ((*(unsigned char *)(a1 + 56) & 2) == 0)
        {
          uint64_t v33 = PBReaderReadString();
          uint64_t v34 = 16;
          goto LABEL_53;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_74;
        }
        char v41 = *(unsigned char *)(a1 + 56) << 6;
        goto LABEL_62;
      case 4:
        if (!v28)
        {
LABEL_54:
          char v40 = PBReaderSkipValueWithTag();
          long long v15 = (int *)MEMORY[0x1E4F940C8];
          if ((v40 & 1) == 0)
          {
LABEL_73:
            char v42 = 0;
            goto LABEL_75;
          }
          goto LABEL_65;
        }
        if ((*(unsigned char *)(a1 + 56) & 8) == 0)
        {
          uint64_t v33 = PBReaderReadString();
          uint64_t v34 = 32;
LABEL_53:
          int v39 = *(void **)(a1 + v34);
          *(void *)(a1 + v34) = v33;

          long long v15 = (int *)MEMORY[0x1E4F940C8];
          --v9;
          goto LABEL_65;
        }
        if (PBReaderSkipValueWithTag())
        {
          char v41 = 16 * *(unsigned char *)(a1 + 56);
LABEL_62:
          v9 += v41 >> 7;
          long long v15 = (int *)MEMORY[0x1E4F940C8];
LABEL_65:
          if (!(v12 & 1 | (v9 != 0))) {
            goto LABEL_66;
          }
          continue;
        }
LABEL_74:
        char v42 = 0;
        long long v15 = (int *)MEMORY[0x1E4F940C8];
LABEL_75:
        *(unsigned char *)(a1 + 56) |= 4u;
        *(unsigned char *)(a1 + 56) |= 2u;
        *(unsigned char *)(a1 + 56) |= 8u;
        if (v42)
        {
LABEL_76:
          unint64_t v3 = *(unsigned char *)(v3 + *v15) == 0;
          if (v12) {
            goto LABEL_77;
          }
        }
        else
        {
          unint64_t v3 = 0;
          if (v12)
          {
LABEL_77:
            unint64_t v45 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = 0;
          }
        }
        return v3;
      default:
        int v35 = PBReaderSkipValueWithTag();
        long long v15 = (int *)MEMORY[0x1E4F940C8];
        if (!v35) {
          goto LABEL_73;
        }
        goto LABEL_65;
    }
  }
}

void sub_1899B7500(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1899B75E4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchQueryNeuralRewriteMetadataReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDSearchQueryNeuralRewriteMetadataReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)unsigned int v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOPDSearchQueryNeuralRewriteMetadataReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOPDSearchQueryNeuralRewriteMetadataReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDSearchQueryNeuralRewriteMetadataReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_1899B7774(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1899B793C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSearchQueryNeuralRewriteMetadataIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  BOOL v2 = (*(unsigned char *)(a1 + 56) & 0x1E) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return v2;
}

void sub_1899B7B5C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchQueryNormalizerMetadataReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  id v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  char v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  unsigned int v10 = ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1)
      + (*(unsigned char *)(a1 + 52) & 1)
      + ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1);
  while (1)
  {
    unsigned int v11 = a3[v9];
    if (v11 >= 0xFFFFFFFE)
    {
      char v7 = 1;
      goto LABEL_9;
    }
    if (v11 != -3) {
      break;
    }
    char v8 = 1;
LABEL_9:
    ++v9;
  }
  if (v11)
  {
    ++v10;
    goto LABEL_9;
  }
  char v12 = v7 | (v10 > 1);
  if (v7 & 1 | (v10 > 1) | v8 & 1) {
    long long v13 = 0;
  }
  else {
    long long v13 = a3;
  }
  long long v14 = (int *)MEMORY[0x1E4F940E8];
  long long v15 = (int *)MEMORY[0x1E4F940C8];
  long long v16 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(void *)(v3 + *v14) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v15)) {
      goto LABEL_63;
    }
    char v17 = 0;
    unsigned int v18 = 0;
    unint64_t v19 = 0;
    while (1)
    {
      uint64_t v20 = *v14;
      uint64_t v21 = *(void *)(v3 + v20);
      unint64_t v22 = v21 + 1;
      if (v21 == -1 || v22 > *(void *)(v3 + *v6)) {
        break;
      }
      char v23 = *(unsigned char *)(*(void *)(v3 + *v16) + v21);
      *(void *)(v3 + v20) = v22;
      v19 |= (unint64_t)(v23 & 0x7F) << v17;
      if ((v23 & 0x80) == 0) {
        goto LABEL_24;
      }
      v17 += 7;
      if (v18++ >= 9)
      {
        unint64_t v19 = 0;
        int v25 = *(unsigned __int8 *)(v3 + *v15);
        goto LABEL_26;
      }
    }
    *(unsigned char *)(v3 + *v15) = 1;
LABEL_24:
    int v25 = *(unsigned __int8 *)(v3 + *v15);
    if (*(unsigned char *)(v3 + *v15)) {
      unint64_t v19 = 0;
    }
LABEL_26:
    if (v25 || (v19 & 7) == 4)
    {
LABEL_63:
      if (v12)
      {
        char v39 = 1;
        goto LABEL_72;
      }
      if (v13)
      {
        while (1)
        {
          int v40 = *v13++;
          char v41 = 4;
          switch(v40)
          {
            case 0:
              goto LABEL_73;
            case 1:
              goto LABEL_69;
            case 2:
              char v41 = 1;
              goto LABEL_69;
            case 3:
              char v41 = 2;
LABEL_69:
              *(unsigned char *)(a1 + 52) |= v41;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_73;
    }
    unint64_t v27 = v19 >> 3;
    BOOL v28 = v12;
    if (!((v13 == 0) | v12 & 1))
    {
      unint64_t v29 = v13;
      do
      {
        int v31 = *v29++;
        int v30 = v31;
        BOOL v28 = v31 != 0;
        if (v31) {
          BOOL v32 = v30 == v27;
        }
        else {
          BOOL v32 = 1;
        }
      }
      while (!v32);
    }
    if (v27 == 3)
    {
      if (!v28) {
        goto LABEL_52;
      }
      if ((*(unsigned char *)(a1 + 52) & 2) != 0)
      {
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_71;
        }
        char v38 = *(unsigned char *)(a1 + 52) << 6;
        goto LABEL_58;
      }
      uint64_t v33 = PBReaderReadString();
      uint64_t v34 = 24;
LABEL_49:
      int v35 = *(void **)(a1 + v34);
      *(void *)(a1 + v34) = v33;

      --v9;
      goto LABEL_61;
    }
    if (v27 != 2)
    {
      if (v27 != 1)
      {
        int v36 = PBReaderSkipValueWithTag();
        long long v15 = (int *)MEMORY[0x1E4F940C8];
        if (!v36) {
          goto LABEL_70;
        }
        goto LABEL_62;
      }
      if (v28)
      {
        if ((*(unsigned char *)(a1 + 52) & 4) == 0)
        {
          uint64_t v33 = PBReaderReadString();
          uint64_t v34 = 32;
          goto LABEL_49;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_71;
        }
        char v38 = 32 * *(unsigned char *)(a1 + 52);
LABEL_58:
        v9 += v38 >> 7;
LABEL_61:
        long long v15 = (int *)MEMORY[0x1E4F940C8];
LABEL_62:
        if (!(v12 & 1 | (v9 != 0))) {
          goto LABEL_63;
        }
        continue;
      }
LABEL_52:
      char v37 = PBReaderSkipValueWithTag();
      long long v15 = (int *)MEMORY[0x1E4F940C8];
      if ((v37 & 1) == 0)
      {
LABEL_70:
        char v39 = 0;
        goto LABEL_72;
      }
      goto LABEL_62;
    }
    break;
  }
  if (!v28) {
    goto LABEL_52;
  }
  if ((*(unsigned char *)(a1 + 52) & 1) == 0)
  {
    uint64_t v33 = PBReaderReadString();
    uint64_t v34 = 16;
    goto LABEL_49;
  }
  if (PBReaderSkipValueWithTag())
  {
    v9 -= *(unsigned char *)(a1 + 52) & 1;
    goto LABEL_61;
  }
LABEL_71:
  char v39 = 0;
  long long v15 = (int *)MEMORY[0x1E4F940C8];
LABEL_72:
  *(unsigned char *)(a1 + 52) |= 4u;
  *(unsigned char *)(a1 + 52) |= 1u;
  *(unsigned char *)(a1 + 52) |= 2u;
  if (v39)
  {
LABEL_73:
    unint64_t v3 = *(unsigned char *)(v3 + *v15) == 0;
    if ((v12 & 1) == 0) {
      return v3;
    }
    goto LABEL_74;
  }
  unint64_t v3 = 0;
  if (v12)
  {
LABEL_74:
    char v42 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_1899B8624(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1899B8708(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchQueryNormalizerMetadataReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDSearchQueryNormalizerMetadataReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)unsigned int v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOPDSearchQueryNormalizerMetadataReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOPDSearchQueryNormalizerMetadataReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDSearchQueryNormalizerMetadataReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_1899B8898(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1899B8A3C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSearchQueryNormalizerMetadataIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  BOOL v2 = (*(unsigned char *)(a1 + 52) & 0xF) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return v2;
}

void sub_1899B8C20(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSearchQueryPoiMetadataReadAllFrom(uint64_t a1, void *a2)
{
  unint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    id v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      char v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_27;
          }
          unsigned int v18 = objc_alloc_init(GEONamedFeature);
          if (!GEONamedFeatureReadAllFrom(v18, v3))
          {

            goto LABEL_27;
          }
          PBReaderRecallMark();
          -[GEOPDSearchQueryPoiMetadata addNamedFeature:](a1, v18);
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_27;
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v19 = v3[*v6] == 0;
  }
  else
  {
LABEL_27:
    BOOL v19 = 0;
  }
  objc_sync_exit(v3);

  return v19;
}

void sub_1899B92DC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchQuerySpellCorrectionMetadataReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  id v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 68);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 64)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = (const __int16 *)(a1 + 100);
  uint16x4_t v12 = (uint16x4_t)vld1_dup_s16(v11);
  unint64_t v13 = *(void *)&vshl_u16(v12, (uint16x4_t)0xFFF5FFF4FFF3FFF2) & 0xFFE1FFE1FFE1FFE1;
  LOWORD(v13) = vaddv_s16((int16x4_t)v13);
  unsigned int v14 = v13;
  while (2)
  {
    uint64_t v15 = 1;
    uint64_t v16 = 1;
    switch(a3[v7])
    {
      case -3:
        char v8 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v15 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        BOOL v17 = v14 > 2;
        char v18 = v10 | v17;
        if (((v10 | v17) | v8)) {
          BOOL v19 = 0;
        }
        else {
          BOOL v19 = a3;
        }
        char v122 = (v19 == 0) | v18;
        uint64_t v20 = (int *)MEMORY[0x1E4F940E8];
        uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
        unint64_t v22 = (int *)MEMORY[0x1E4F940B8];
        char v121 = v10 | v17;
        break;
      default:
        ++v14;
LABEL_6:
        uint64_t v15 = v9;
        uint64_t v16 = v10;
LABEL_8:
        ++v7;
        uint64_t v9 = v15;
        uint64_t v10 = v16;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v21)) {
      goto LABEL_194;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_23;
      }
      v23 += 7;
      BOOL v30 = v24++ >= 9;
      if (v30)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_25;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_23:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_25:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_194:
      if (v18)
      {
        char v115 = 1;
        goto LABEL_206;
      }
      if (v19)
      {
        while (1)
        {
          int v117 = *v19++;
          __int16 v116 = 0x2000;
          switch(v117)
          {
            case 0:
              goto LABEL_207;
            case 1:
              goto LABEL_201;
            case 6:
              __int16 v116 = 0x4000;
              goto LABEL_201;
            case 9:
              __int16 v116 = 4096;
              goto LABEL_201;
            case 10:
              __int16 v116 = 2048;
LABEL_201:
              *(_WORD *)(a1 + 100) |= v116;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_207;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v18;
    if ((v122 & 1) == 0)
    {
      int v35 = v19;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    switch((int)v33)
    {
      case 1:
        if (!v34) {
          goto LABEL_144;
        }
        if ((*(_WORD *)(a1 + 100) & 0x2000) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_205;
          }
          char v120 = objc_alloc_init(GEOPDSearchSpellSuggestion);
          if (GEOPDSearchSpellSuggestionReadAllFrom((uint64_t)v120, (void *)v3, v9 & 1))
          {
            PBReaderRecallMark();
            char v39 = *(void **)(a1 + 48);
            *(void *)(a1 + 48) = v120;

            --v7;
            goto LABEL_190;
          }
          goto LABEL_204;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_205;
        }
        v7 += *(unsigned __int16 *)(a1 + 100) << 18 >> 31;
        goto LABEL_190;
      case 2:
        if ((v8 & 1) == 0) {
          goto LABEL_144;
        }
        char v41 = 0;
        unsigned int v42 = 0;
        uint64_t v43 = 0;
        *(_WORD *)(a1 + 100) |= 0x200u;
        while (2)
        {
          uint64_t v44 = *v20;
          uint64_t v45 = *(void *)(v3 + v44);
          unint64_t v46 = v45 + 1;
          if (v45 == -1 || v46 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v47 = *(unsigned char *)(*(void *)(v3 + *v22) + v45);
            *(void *)(v3 + v44) = v46;
            v43 |= (unint64_t)(v47 & 0x7F) << v41;
            if (v47 < 0)
            {
              v41 += 7;
              BOOL v30 = v42++ >= 9;
              if (v30)
              {
                uint64_t v43 = 0;
                goto LABEL_149;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          uint64_t v43 = 0;
        }
LABEL_149:
        BOOL v112 = v43 != 0;
        uint64_t v113 = 95;
        goto LABEL_178;
      case 3:
        if ((v8 & 1) == 0) {
          goto LABEL_144;
        }
        char v48 = 0;
        unsigned int v49 = 0;
        uint64_t v50 = 0;
        *(_WORD *)(a1 + 100) |= 0x10u;
        while (2)
        {
          uint64_t v51 = *v20;
          uint64_t v52 = *(void *)(v3 + v51);
          unint64_t v53 = v52 + 1;
          if (v52 == -1 || v53 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v54 = *(unsigned char *)(*(void *)(v3 + *v22) + v52);
            *(void *)(v3 + v51) = v53;
            v50 |= (unint64_t)(v54 & 0x7F) << v48;
            if (v54 < 0)
            {
              v48 += 7;
              BOOL v30 = v49++ >= 9;
              if (v30)
              {
                LODWORD(v50) = 0;
                goto LABEL_153;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          LODWORD(v50) = 0;
        }
LABEL_153:
        uint64_t v114 = 84;
        goto LABEL_187;
      case 4:
        if ((v8 & 1) == 0) {
          goto LABEL_144;
        }
        char v55 = 0;
        unsigned int v56 = 0;
        uint64_t v57 = 0;
        *(_WORD *)(a1 + 100) |= 1u;
        while (2)
        {
          uint64_t v58 = *v20;
          uint64_t v59 = *(void *)(v3 + v58);
          unint64_t v60 = v59 + 1;
          if (v59 == -1 || v60 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v61 = *(unsigned char *)(*(void *)(v3 + *v22) + v59);
            *(void *)(v3 + v58) = v60;
            v57 |= (unint64_t)(v61 & 0x7F) << v55;
            if (v61 < 0)
            {
              v55 += 7;
              BOOL v30 = v56++ >= 9;
              if (v30)
              {
                uint64_t v57 = 0;
                goto LABEL_157;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          uint64_t v57 = 0;
        }
LABEL_157:
        *(void *)(a1 + 32) = v57;
        goto LABEL_193;
      case 5:
        if ((v8 & 1) == 0) {
          goto LABEL_144;
        }
        char v62 = 0;
        unsigned int v63 = 0;
        uint64_t v64 = 0;
        *(_WORD *)(a1 + 100) |= 0x400u;
        while (2)
        {
          uint64_t v65 = *v20;
          uint64_t v66 = *(void *)(v3 + v65);
          unint64_t v67 = v66 + 1;
          if (v66 == -1 || v67 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v68 = *(unsigned char *)(*(void *)(v3 + *v22) + v66);
            *(void *)(v3 + v65) = v67;
            v64 |= (unint64_t)(v68 & 0x7F) << v62;
            if (v68 < 0)
            {
              v62 += 7;
              BOOL v30 = v63++ >= 9;
              if (v30)
              {
                uint64_t v64 = 0;
                goto LABEL_161;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          uint64_t v64 = 0;
        }
LABEL_161:
        BOOL v112 = v64 != 0;
        uint64_t v113 = 96;
        goto LABEL_178;
      case 6:
        if (!v34 || (*(_WORD *)(a1 + 100) & 0x4000) != 0) {
          goto LABEL_144;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_205;
        }
        char v120 = objc_alloc_init(GEOPDSearchTokenCandidates);
        if (!GEOPDSearchTokenCandidatesReadAllFrom((uint64_t)v120, (void *)v3, v9 & 1)) {
          goto LABEL_204;
        }
        PBReaderRecallMark();
        -[GEOPDSearchQuerySpellCorrectionMetadata _addNoFlagsTokenCandidate:](a1, v120);
        goto LABEL_103;
      case 7:
        if ((v8 & 1) == 0) {
          goto LABEL_144;
        }
        *(_WORD *)(a1 + 100) |= 2u;
        uint64_t v69 = *v20;
        unint64_t v70 = *(void *)(v3 + v69);
        if (v70 <= 0xFFFFFFFFFFFFFFF7 && v70 + 8 <= *(void *)(v3 + *v6))
        {
          uint64_t v71 = *(void *)(*(void *)(v3 + *v22) + v70);
          *(void *)(v3 + v69) = v70 + 8;
        }
        else
        {
          *(unsigned char *)(v3 + *v21) = 1;
          uint64_t v71 = 0;
        }
        *(void *)(a1 + 40) = v71;
        goto LABEL_193;
      case 8:
        if ((v8 & 1) == 0) {
          goto LABEL_144;
        }
        char v72 = 0;
        unsigned int v73 = 0;
        uint64_t v74 = 0;
        *(_WORD *)(a1 + 100) |= 0x100u;
        while (2)
        {
          uint64_t v75 = *v20;
          uint64_t v76 = *(void *)(v3 + v75);
          unint64_t v77 = v76 + 1;
          if (v76 == -1 || v77 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v78 = *(unsigned char *)(*(void *)(v3 + *v22) + v76);
            *(void *)(v3 + v75) = v77;
            v74 |= (unint64_t)(v78 & 0x7F) << v72;
            if (v78 < 0)
            {
              v72 += 7;
              BOOL v30 = v73++ >= 9;
              if (v30)
              {
                uint64_t v74 = 0;
                goto LABEL_165;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          uint64_t v74 = 0;
        }
LABEL_165:
        BOOL v112 = v74 != 0;
        uint64_t v113 = 94;
        goto LABEL_178;
      case 9:
        if (!v34 || (*(_WORD *)(a1 + 100) & 0x1000) != 0) {
          goto LABEL_144;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_205;
        }
        char v120 = objc_alloc_init(GEOPDSearchTokenCandidates);
        if (!GEOPDSearchTokenCandidatesReadAllFrom((uint64_t)v120, (void *)v3, v9 & 1)) {
          goto LABEL_204;
        }
        PBReaderRecallMark();
        -[GEOPDSearchQuerySpellCorrectionMetadata _addNoFlagsAllTokenCandidates:](a1, v120);
        goto LABEL_103;
      case 10:
        if (!v34 || (*(_WORD *)(a1 + 100) & 0x800) != 0) {
          goto LABEL_144;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_205;
        }
        char v120 = objc_alloc_init(GEOPDSearchSpellSuggestion);
        if (GEOPDSearchSpellSuggestionReadAllFrom((uint64_t)v120, (void *)v3, v9 & 1))
        {
          PBReaderRecallMark();
          -[GEOPDSearchQuerySpellCorrectionMetadata _addNoFlagsAllSpellSuggestions:](a1, v120);
LABEL_103:

LABEL_190:
          char v18 = v121;
          uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_193:
          if (!(v18 & 1 | (v7 != 0))) {
            goto LABEL_194;
          }
          continue;
        }
LABEL_204:

LABEL_205:
        char v115 = 0;
        char v18 = v121;
        uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_206:
        *(_WORD *)(a1 + 100) |= 0x2000u;
        *(_WORD *)(a1 + 100) |= 0x4000u;
        *(_WORD *)(a1 + 100) |= 0x1000u;
        *(_WORD *)(a1 + 100) |= 0x800u;
        if (v115)
        {
LABEL_207:
          unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
          if (v18) {
            goto LABEL_208;
          }
        }
        else
        {
          unint64_t v3 = 0;
          if (v18)
          {
LABEL_208:
            char v118 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = 0;
          }
        }
        return v3;
      case 11:
        if ((v8 & 1) == 0) {
          goto LABEL_144;
        }
        char v79 = 0;
        unsigned int v80 = 0;
        uint64_t v50 = 0;
        *(_WORD *)(a1 + 100) |= 0x20u;
        while (2)
        {
          uint64_t v81 = *v20;
          uint64_t v82 = *(void *)(v3 + v81);
          unint64_t v83 = v82 + 1;
          if (v82 == -1 || v83 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v84 = *(unsigned char *)(*(void *)(v3 + *v22) + v82);
            *(void *)(v3 + v81) = v83;
            v50 |= (unint64_t)(v84 & 0x7F) << v79;
            if (v84 < 0)
            {
              v79 += 7;
              BOOL v30 = v80++ >= 9;
              if (v30)
              {
                LODWORD(v50) = 0;
                goto LABEL_169;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          LODWORD(v50) = 0;
        }
LABEL_169:
        uint64_t v114 = 88;
        goto LABEL_187;
      case 12:
        if ((v8 & 1) == 0) {
          goto LABEL_144;
        }
        char v85 = 0;
        unsigned int v86 = 0;
        uint64_t v87 = 0;
        *(_WORD *)(a1 + 100) |= 0x40u;
        while (2)
        {
          uint64_t v88 = *v20;
          uint64_t v89 = *(void *)(v3 + v88);
          unint64_t v90 = v89 + 1;
          if (v89 == -1 || v90 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v91 = *(unsigned char *)(*(void *)(v3 + *v22) + v89);
            *(void *)(v3 + v88) = v90;
            v87 |= (unint64_t)(v91 & 0x7F) << v85;
            if (v91 < 0)
            {
              v85 += 7;
              BOOL v30 = v86++ >= 9;
              if (v30)
              {
                uint64_t v87 = 0;
                goto LABEL_173;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          uint64_t v87 = 0;
        }
LABEL_173:
        BOOL v112 = v87 != 0;
        uint64_t v113 = 92;
        goto LABEL_178;
      case 13:
        if ((v8 & 1) == 0) {
          goto LABEL_144;
        }
        char v92 = 0;
        unsigned int v93 = 0;
        uint64_t v94 = 0;
        *(_WORD *)(a1 + 100) |= 0x80u;
        while (2)
        {
          uint64_t v95 = *v20;
          uint64_t v96 = *(void *)(v3 + v95);
          unint64_t v97 = v96 + 1;
          if (v96 == -1 || v97 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v98 = *(unsigned char *)(*(void *)(v3 + *v22) + v96);
            *(void *)(v3 + v95) = v97;
            v94 |= (unint64_t)(v98 & 0x7F) << v92;
            if (v98 < 0)
            {
              v92 += 7;
              BOOL v30 = v93++ >= 9;
              if (v30)
              {
                uint64_t v94 = 0;
                goto LABEL_177;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          uint64_t v94 = 0;
        }
LABEL_177:
        BOOL v112 = v94 != 0;
        uint64_t v113 = 93;
LABEL_178:
        *(unsigned char *)(a1 + v113) = v112;
        goto LABEL_193;
      case 14:
        if ((v8 & 1) == 0) {
          goto LABEL_144;
        }
        char v99 = 0;
        unsigned int v100 = 0;
        uint64_t v50 = 0;
        *(_WORD *)(a1 + 100) |= 4u;
        while (2)
        {
          uint64_t v101 = *v20;
          uint64_t v102 = *(void *)(v3 + v101);
          unint64_t v103 = v102 + 1;
          if (v102 == -1 || v103 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v104 = *(unsigned char *)(*(void *)(v3 + *v22) + v102);
            *(void *)(v3 + v101) = v103;
            v50 |= (unint64_t)(v104 & 0x7F) << v99;
            if (v104 < 0)
            {
              v99 += 7;
              BOOL v30 = v100++ >= 9;
              if (v30)
              {
                LODWORD(v50) = 0;
                goto LABEL_182;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          LODWORD(v50) = 0;
        }
LABEL_182:
        uint64_t v114 = 76;
        goto LABEL_187;
      case 15:
        if (v8)
        {
          char v105 = 0;
          unsigned int v106 = 0;
          uint64_t v50 = 0;
          *(_WORD *)(a1 + 100) |= 8u;
          while (1)
          {
            uint64_t v107 = *v20;
            uint64_t v108 = *(void *)(v3 + v107);
            unint64_t v109 = v108 + 1;
            if (v108 == -1 || v109 > *(void *)(v3 + *v6)) {
              break;
            }
            char v110 = *(unsigned char *)(*(void *)(v3 + *v22) + v108);
            *(void *)(v3 + v107) = v109;
            v50 |= (unint64_t)(v110 & 0x7F) << v105;
            if ((v110 & 0x80) == 0) {
              goto LABEL_184;
            }
            v105 += 7;
            BOOL v30 = v106++ >= 9;
            if (v30)
            {
              LODWORD(v50) = 0;
              goto LABEL_186;
            }
          }
          *(unsigned char *)(v3 + *v21) = 1;
LABEL_184:
          if (*(unsigned char *)(v3 + *v21)) {
            LODWORD(v50) = 0;
          }
LABEL_186:
          uint64_t v114 = 80;
LABEL_187:
          *(_DWORD *)(a1 + v114) = v50;
        }
        else
        {
LABEL_144:
          char v111 = PBReaderSkipValueWithTag();
          uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
          char v18 = v121;
          if ((v111 & 1) == 0)
          {
LABEL_203:
            char v115 = 0;
            goto LABEL_206;
          }
        }
        goto LABEL_193;
      default:
        int v40 = PBReaderSkipValueWithTag();
        uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
        char v18 = v121;
        if (!v40) {
          goto LABEL_203;
        }
        goto LABEL_193;
    }
  }
}

void sub_1899BA558(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1899BA6E8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1899BA878(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1899BB24C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1899BB33C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDSearchQuerySpellCorrectionMetadataCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  uint64_t v31 = *MEMORY[0x1E4F143B8];
  long long v24 = 0u;
  long long v25 = 0u;
  long long v26 = 0u;
  long long v27 = 0u;
  id v2 = a1[7];
  uint64_t v3 = [v2 countByEnumeratingWithState:&v24 objects:v30 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v25;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v25 != v5) {
          objc_enumerationMutation(v2);
        }
        -[GEOPDSearchTokenCandidates readAll:](*(void *)(*((void *)&v24 + 1) + 8 * v6++), 1);
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v24 objects:v30 count:16];
    }
    while (v4);
  }

  long long v22 = 0u;
  long long v23 = 0u;
  long long v20 = 0u;
  long long v21 = 0u;
  id v7 = a1[3];
  uint64_t v8 = [v7 countByEnumeratingWithState:&v20 objects:v29 count:16];
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)v21;
    do
    {
      uint64_t v11 = 0;
      do
      {
        if (*(void *)v21 != v10) {
          objc_enumerationMutation(v7);
        }
        -[GEOPDSearchTokenCandidates readAll:](*(void *)(*((void *)&v20 + 1) + 8 * v11++), 1);
      }
      while (v9 != v11);
      uint64_t v9 = [v7 countByEnumeratingWithState:&v20 objects:v29 count:16];
    }
    while (v9);
  }

  long long v18 = 0u;
  long long v19 = 0u;
  long long v16 = 0u;
  long long v17 = 0u;
  id v12 = a1[2];
  uint64_t v13 = [v12 countByEnumeratingWithState:&v16 objects:v28 count:16];
  if (v13)
  {
    uint64_t v14 = v13;
    uint64_t v15 = *(void *)v17;
    while (1)
    {
      if (*(void *)v17 != v15) {
        objc_enumerationMutation(v12);
      }
      if (!--v14)
      {
        uint64_t v14 = [v12 countByEnumeratingWithState:&v16 objects:v28 count:16];
        if (!v14) {
          break;
        }
      }
    }
  }
}

unint64_t GEOPDSearchQuerySpellCorrectionMetadataReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 68))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDSearchQuerySpellCorrectionMetadataReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 72));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 64) = [v8 position];
  *(_DWORD *)(a1 + 68) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOPDSearchQuerySpellCorrectionMetadataReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOPDSearchQuerySpellCorrectionMetadataReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDSearchQuerySpellCorrectionMetadataReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOPDSearchQuerySpellCorrectionMetadataCallReadAllRecursiveWithoutSynchronized((id *)a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
  return Specified;
}

void sub_1899BB6EC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1899BBBC4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1899BC118(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchQuerySynonymMetadataReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 96));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 92);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 88)];
  uint64_t v7 = 0;
  char v8 = 0;
  char v9 = 0;
  uint64_t v10 = (const float *)(a1 + 116);
  uint32x4_t v11 = (uint32x4_t)vld1q_dup_f32(v10);
  v12.i64[0] = 0x100000001;
  v12.i64[1] = 0x100000001;
  unsigned int v13 = vaddvq_s32(vaddq_s32((int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v11, (uint32x4_t)xmmword_18A6364E0), v12), (int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v11, (uint32x4_t)xmmword_18A6364F0), v12)));
  while (1)
  {
    unsigned int v14 = a3[v7];
    if (v14 >= 0xFFFFFFFE)
    {
      char v9 = 1;
      goto LABEL_9;
    }
    if (v14 != -3) {
      break;
    }
    char v8 = 1;
LABEL_9:
    ++v7;
  }
  if (v14)
  {
    ++v13;
    goto LABEL_9;
  }
  char v15 = v9 | (v13 > 5);
  if (v9 & 1 | (v13 > 5) | v8 & 1) {
    long long v16 = 0;
  }
  else {
    long long v16 = a3;
  }
  long long v17 = (int *)MEMORY[0x1E4F940E8];
  long long v18 = (int *)MEMORY[0x1E4F940C8];
  long long v19 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(void *)(v3 + *v17) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v18)) {
      goto LABEL_179;
    }
    char v20 = 0;
    unsigned int v21 = 0;
    unint64_t v22 = 0;
    while (1)
    {
      uint64_t v23 = *v17;
      uint64_t v24 = *(void *)(v3 + v23);
      unint64_t v25 = v24 + 1;
      if (v24 == -1 || v25 > *(void *)(v3 + *v6)) {
        break;
      }
      char v26 = *(unsigned char *)(*(void *)(v3 + *v19) + v24);
      *(void *)(v3 + v23) = v25;
      v22 |= (unint64_t)(v26 & 0x7F) << v20;
      if ((v26 & 0x80) == 0) {
        goto LABEL_24;
      }
      v20 += 7;
      BOOL v27 = v21++ >= 9;
      if (v27)
      {
        unint64_t v22 = 0;
        int v28 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_26;
      }
    }
    *(unsigned char *)(v3 + *v18) = 1;
LABEL_24:
    int v28 = *(unsigned __int8 *)(v3 + *v18);
    if (*(unsigned char *)(v3 + *v18)) {
      unint64_t v22 = 0;
    }
LABEL_26:
    if (v28 || (v22 & 7) == 4)
    {
LABEL_179:
      if (v15)
      {
        char v97 = 1;
        goto LABEL_193;
      }
      if (v16)
      {
        while (1)
        {
          int v99 = *v16++;
          int v98 = 2048;
          switch(v99)
          {
            case 0:
              goto LABEL_194;
            case 2:
              goto LABEL_190;
            case 3:
              int v98 = 0x4000;
              goto LABEL_190;
            case 4:
              int v98 = 4096;
              goto LABEL_190;
            case 5:
              int v98 = 256;
              goto LABEL_190;
            case 6:
              int v98 = 1024;
              goto LABEL_190;
            case 14:
              int v98 = 0x2000;
              goto LABEL_190;
            case 15:
              int v98 = 0x8000;
              goto LABEL_190;
            case 16:
              int v98 = 512;
LABEL_190:
              *(_DWORD *)(a1 + 116) |= v98;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_194;
    }
    unint64_t v30 = v22 >> 3;
    BOOL v31 = v15;
    if (!((v16 == 0) | v15 & 1))
    {
      BOOL v32 = v16;
      do
      {
        int v34 = *v32++;
        int v33 = v34;
        BOOL v31 = v34 != 0;
        if (v34) {
          BOOL v35 = v33 == v30;
        }
        else {
          BOOL v35 = 1;
        }
      }
      while (!v35);
    }
    switch((int)v30)
    {
      case 1:
        if ((v8 & 1) == 0) {
          goto LABEL_131;
        }
        char v36 = 0;
        unsigned int v37 = 0;
        uint64_t v38 = 0;
        *(_DWORD *)(a1 + 116) |= 1u;
        while (1)
        {
          uint64_t v39 = *v17;
          uint64_t v40 = *(void *)(v3 + v39);
          unint64_t v41 = v40 + 1;
          if (v40 == -1 || v41 > *(void *)(v3 + *v6)) {
            break;
          }
          char v42 = *(unsigned char *)(*(void *)(v3 + *v19) + v40);
          *(void *)(v3 + v39) = v41;
          v38 |= (unint64_t)(v42 & 0x7F) << v36;
          if ((v42 & 0x80) == 0) {
            goto LABEL_134;
          }
          v36 += 7;
          BOOL v27 = v37++ >= 9;
          if (v27)
          {
            uint64_t v38 = 0;
            goto LABEL_136;
          }
        }
        *(unsigned char *)(v3 + *v18) = 1;
LABEL_134:
        if (*(unsigned char *)(v3 + *v18)) {
          uint64_t v38 = 0;
        }
LABEL_136:
        *(void *)(a1 + 40) = v38;
        goto LABEL_175;
      case 2:
        if (!v31) {
          goto LABEL_131;
        }
        if ((*(unsigned char *)(a1 + 117) & 8) == 0)
        {
          uint64_t v44 = PBReaderReadString();
          uint64_t v45 = 48;
          goto LABEL_123;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_200;
        }
        int v96 = (int)(*(_DWORD *)(a1 + 116) << 20) >> 31;
        goto LABEL_173;
      case 3:
        if (!v31 || (*(unsigned char *)(a1 + 117) & 0x40) != 0) {
          goto LABEL_131;
        }
        PBReaderReadString();
        unint64_t v46 = (GEOPDSearchPair *)objc_claimAutoreleasedReturnValue();
        if (!v46) {
          goto LABEL_130;
        }
        uint64_t v102 = v46;
        -[GEOPDSearchQuerySynonymMetadata _addNoFlagsRefinementQueries:](a1, v46);
        goto LABEL_129;
      case 4:
        if (!v31) {
          goto LABEL_131;
        }
        if ((*(unsigned char *)(a1 + 117) & 0x10) == 0)
        {
          uint64_t v44 = PBReaderReadString();
          uint64_t v45 = 56;
          goto LABEL_123;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_200;
        }
        int v96 = (int)(*(_DWORD *)(a1 + 116) << 19) >> 31;
        goto LABEL_173;
      case 5:
        if (!v31) {
          goto LABEL_131;
        }
        if ((*(unsigned char *)(a1 + 117) & 1) == 0)
        {
          uint64_t v44 = PBReaderReadString();
          uint64_t v45 = 16;
          goto LABEL_123;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_200;
        }
        int v96 = (int)(*(_DWORD *)(a1 + 116) << 23) >> 31;
        goto LABEL_173;
      case 6:
        if (!v31 || (*(unsigned char *)(a1 + 117) & 4) != 0) {
          goto LABEL_131;
        }
        PBReaderReadString();
        unint64_t v46 = (GEOPDSearchPair *)objc_claimAutoreleasedReturnValue();
        if (!v46) {
          goto LABEL_130;
        }
        uint64_t v102 = v46;
        -[GEOPDSearchQuerySynonymMetadata _addNoFlagsGeoHashes:](a1, v46);
        goto LABEL_129;
      case 7:
        if ((v8 & 1) == 0) {
          goto LABEL_131;
        }
        *(_DWORD *)(a1 + 116) |= 2u;
        uint64_t v47 = *v17;
        unint64_t v48 = *(void *)(v3 + v47);
        if (v48 <= 0xFFFFFFFFFFFFFFFBLL && v48 + 4 <= *(void *)(v3 + *v6))
        {
          int v49 = *(_DWORD *)(*(void *)(v3 + *v19) + v48);
          *(void *)(v3 + v47) = v48 + 4;
        }
        else
        {
          *(unsigned char *)(v3 + *v18) = 1;
          int v49 = 0;
        }
        *(_DWORD *)(a1 + 100) = v49;
        goto LABEL_175;
      case 8:
        if ((v8 & 1) == 0) {
          goto LABEL_131;
        }
        char v50 = 0;
        unsigned int v51 = 0;
        uint64_t v52 = 0;
        *(_DWORD *)(a1 + 116) |= 8u;
        while (2)
        {
          uint64_t v53 = *v17;
          uint64_t v54 = *(void *)(v3 + v53);
          unint64_t v55 = v54 + 1;
          if (v54 == -1 || v55 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v56 = *(unsigned char *)(*(void *)(v3 + *v19) + v54);
            *(void *)(v3 + v53) = v55;
            v52 |= (unint64_t)(v56 & 0x7F) << v50;
            if (v56 < 0)
            {
              v50 += 7;
              BOOL v27 = v51++ >= 9;
              if (v27)
              {
                LODWORD(v52) = 0;
                goto LABEL_140;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          LODWORD(v52) = 0;
        }
LABEL_140:
        uint64_t v93 = 108;
        goto LABEL_153;
      case 9:
        if ((v8 & 1) == 0) {
          goto LABEL_131;
        }
        char v57 = 0;
        unsigned int v58 = 0;
        uint64_t v59 = 0;
        *(_DWORD *)(a1 + 116) |= 0x80u;
        while (2)
        {
          uint64_t v60 = *v17;
          uint64_t v61 = *(void *)(v3 + v60);
          unint64_t v62 = v61 + 1;
          if (v61 == -1 || v62 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v63 = *(unsigned char *)(*(void *)(v3 + *v19) + v61);
            *(void *)(v3 + v60) = v62;
            v59 |= (unint64_t)(v63 & 0x7F) << v57;
            if (v63 < 0)
            {
              v57 += 7;
              BOOL v27 = v58++ >= 9;
              if (v27)
              {
                uint64_t v59 = 0;
                goto LABEL_144;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          uint64_t v59 = 0;
        }
LABEL_144:
        BOOL v94 = v59 != 0;
        uint64_t v95 = 115;
        goto LABEL_162;
      case 10:
        if ((v8 & 1) == 0) {
          goto LABEL_131;
        }
        char v64 = 0;
        unsigned int v65 = 0;
        uint64_t v66 = 0;
        *(_DWORD *)(a1 + 116) |= 0x10u;
        while (2)
        {
          uint64_t v67 = *v17;
          uint64_t v68 = *(void *)(v3 + v67);
          unint64_t v69 = v68 + 1;
          if (v68 == -1 || v69 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v70 = *(unsigned char *)(*(void *)(v3 + *v19) + v68);
            *(void *)(v3 + v67) = v69;
            v66 |= (unint64_t)(v70 & 0x7F) << v64;
            if (v70 < 0)
            {
              v64 += 7;
              BOOL v27 = v65++ >= 9;
              if (v27)
              {
                uint64_t v66 = 0;
                goto LABEL_148;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          uint64_t v66 = 0;
        }
LABEL_148:
        BOOL v94 = v66 != 0;
        uint64_t v95 = 112;
        goto LABEL_162;
      case 11:
        if ((v8 & 1) == 0) {
          goto LABEL_131;
        }
        char v71 = 0;
        unsigned int v72 = 0;
        uint64_t v52 = 0;
        *(_DWORD *)(a1 + 116) |= 4u;
        while (2)
        {
          uint64_t v73 = *v17;
          uint64_t v74 = *(void *)(v3 + v73);
          unint64_t v75 = v74 + 1;
          if (v74 == -1 || v75 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v76 = *(unsigned char *)(*(void *)(v3 + *v19) + v74);
            *(void *)(v3 + v73) = v75;
            v52 |= (unint64_t)(v76 & 0x7F) << v71;
            if (v76 < 0)
            {
              v71 += 7;
              BOOL v27 = v72++ >= 9;
              if (v27)
              {
                LODWORD(v52) = 0;
                goto LABEL_152;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          LODWORD(v52) = 0;
        }
LABEL_152:
        uint64_t v93 = 104;
LABEL_153:
        *(_DWORD *)(a1 + v93) = v52;
        goto LABEL_175;
      case 12:
        if ((v8 & 1) == 0) {
          goto LABEL_131;
        }
        char v77 = 0;
        unsigned int v78 = 0;
        uint64_t v79 = 0;
        *(_DWORD *)(a1 + 116) |= 0x40u;
        while (2)
        {
          uint64_t v80 = *v17;
          uint64_t v81 = *(void *)(v3 + v80);
          unint64_t v82 = v81 + 1;
          if (v81 == -1 || v82 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v83 = *(unsigned char *)(*(void *)(v3 + *v19) + v81);
            *(void *)(v3 + v80) = v82;
            v79 |= (unint64_t)(v83 & 0x7F) << v77;
            if (v83 < 0)
            {
              v77 += 7;
              BOOL v27 = v78++ >= 9;
              if (v27)
              {
                uint64_t v79 = 0;
                goto LABEL_157;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          uint64_t v79 = 0;
        }
LABEL_157:
        BOOL v94 = v79 != 0;
        uint64_t v95 = 114;
        goto LABEL_162;
      case 13:
        if ((v8 & 1) == 0) {
          goto LABEL_131;
        }
        char v84 = 0;
        unsigned int v85 = 0;
        uint64_t v86 = 0;
        *(_DWORD *)(a1 + 116) |= 0x20u;
        while (2)
        {
          uint64_t v87 = *v17;
          uint64_t v88 = *(void *)(v3 + v87);
          unint64_t v89 = v88 + 1;
          if (v88 == -1 || v89 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v90 = *(unsigned char *)(*(void *)(v3 + *v19) + v88);
            *(void *)(v3 + v87) = v89;
            v86 |= (unint64_t)(v90 & 0x7F) << v84;
            if (v90 < 0)
            {
              v84 += 7;
              BOOL v27 = v85++ >= 9;
              if (v27)
              {
                uint64_t v86 = 0;
                goto LABEL_161;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          uint64_t v86 = 0;
        }
LABEL_161:
        BOOL v94 = v86 != 0;
        uint64_t v95 = 113;
LABEL_162:
        *(unsigned char *)(a1 + v95) = v94;
        goto LABEL_175;
      case 14:
        if (!v31) {
          goto LABEL_131;
        }
        if ((*(unsigned char *)(a1 + 117) & 0x20) == 0)
        {
          uint64_t v44 = PBReaderReadString();
          uint64_t v45 = 64;
          goto LABEL_123;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_200;
        }
        int v96 = (int)(*(_DWORD *)(a1 + 116) << 18) >> 31;
        goto LABEL_173;
      case 15:
        if (!v31) {
          goto LABEL_131;
        }
        if ((*(unsigned char *)(a1 + 117) & 0x80) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_200;
          }
          int v96 = (int)(*(_DWORD *)(a1 + 116) << 16) >> 31;
LABEL_173:
          v7 += v96;
        }
        else
        {
          uint64_t v44 = PBReaderReadString();
          uint64_t v45 = 80;
LABEL_123:
          char v91 = *(void **)(a1 + v45);
          *(void *)(a1 + v45) = v44;

          --v7;
        }
        goto LABEL_174;
      case 16:
        if (!v31 || (*(unsigned char *)(a1 + 117) & 2) != 0)
        {
LABEL_131:
          char v92 = PBReaderSkipValueWithTag();
          long long v18 = (int *)MEMORY[0x1E4F940C8];
          if ((v92 & 1) == 0)
          {
LABEL_192:
            char v97 = 0;
            goto LABEL_193;
          }
          goto LABEL_175;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_200;
        }
        uint64_t v102 = objc_alloc_init(GEOPDSearchPair);
        if (GEOPDSearchPairReadAllFrom((uint64_t)v102, (void *)v3))
        {
          PBReaderRecallMark();
          -[GEOPDSearchQuerySynonymMetadata _addNoFlagsFeatureMap:](a1, v102);
LABEL_129:
          unint64_t v46 = v102;
LABEL_130:

LABEL_174:
          long long v18 = (int *)MEMORY[0x1E4F940C8];
LABEL_175:
          if (!(v15 & 1 | (v7 != 0))) {
            goto LABEL_179;
          }
          continue;
        }

LABEL_200:
        char v97 = 0;
        long long v18 = (int *)MEMORY[0x1E4F940C8];
LABEL_193:
        *(_DWORD *)(a1 + 116) |= 0x800u;
        *(_DWORD *)(a1 + 116) |= 0x4000u;
        *(_DWORD *)(a1 + 116) |= 0x1000u;
        *(_DWORD *)(a1 + 116) |= 0x100u;
        *(_DWORD *)(a1 + 116) |= 0x400u;
        *(_DWORD *)(a1 + 116) |= 0x2000u;
        *(_DWORD *)(a1 + 116) |= 0x8000u;
        *(_DWORD *)(a1 + 116) |= 0x200u;
        if (v97)
        {
LABEL_194:
          unint64_t v3 = *(unsigned char *)(v3 + *v18) == 0;
          if (v15) {
            goto LABEL_195;
          }
        }
        else
        {
          unint64_t v3 = 0;
          if (v15)
          {
LABEL_195:
            unsigned int v100 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = 0;
          }
        }
        return v3;
      default:
        int v43 = PBReaderSkipValueWithTag();
        long long v18 = (int *)MEMORY[0x1E4F940C8];
        if (!v43) {
          goto LABEL_192;
        }
        goto LABEL_175;
    }
  }
}

void sub_1899BD584(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1899BD754(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1899BD974(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1899BE318(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1899BE418(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDSearchQuerySynonymMetadataCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v10 = *MEMORY[0x1E4F143B8];
  long long v5 = 0u;
  long long v6 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  id v1 = *(id *)(a1 + 24);
  uint64_t v2 = [v1 countByEnumeratingWithState:&v5 objects:v9 count:16];
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t v4 = *(void *)v6;
    while (1)
    {
      if (*(void *)v6 != v4) {
        objc_enumerationMutation(v1);
      }
      if (!--v3)
      {
        uint64_t v3 = [v1 countByEnumeratingWithState:&v5 objects:v9 count:16];
        if (!v3) {
          break;
        }
      }
    }
  }
}

unint64_t GEOPDSearchQuerySynonymMetadataReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 92))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDSearchQuerySynonymMetadataReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 96));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 88) = [v8 position];
  *(_DWORD *)(a1 + 92) = [v8 length];
  if (a3) {
    char v9 = (int *)&GEOPDSearchQuerySynonymMetadataReadAllFrom_recursiveTag;
  }
  else {
    char v9 = (int *)&GEOPDSearchQuerySynonymMetadataReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDSearchQuerySynonymMetadataReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOPDSearchQuerySynonymMetadataCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 96));
  return Specified;
}

void sub_1899BF1E8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1899BF6C0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSearchQuerySynonymMetadataIsDirty(os_unfair_lock_s *a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner(a1 + 24);
  BOOL v2 = (a1[29]._os_unfair_lock_opaque & 0x1FF00) != 0;
  os_unfair_lock_unlock(a1 + 24);
  return v2;
}

void sub_1899BFC94(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchQueryTagMetadataReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  long long v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 60);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 56)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  int v11 = ((*(unsigned __int8 *)(a1 + 72) >> 5) & 1) + ((*(unsigned __int8 *)(a1 + 72) >> 4) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v7])
    {
      case -3:
        char v8 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        int v14 = v10 & 1 | v11;
        BOOL v15 = v7 != 0;
        if (v14) {
          BOOL v15 = 1;
        }
        BOOL v63 = v15;
        if ((v14 != 0) | v8 & 1) {
          long long v16 = 0;
        }
        else {
          long long v16 = a3;
        }
        BOOL v17 = v14 != 0;
        BOOL v18 = v16 == 0;
        if (v14) {
          BOOL v18 = 1;
        }
        BOOL v64 = v18;
        long long v19 = (int *)MEMORY[0x1E4F940E8];
        char v20 = (int *)MEMORY[0x1E4F940C8];
        unsigned int v21 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v11;
LABEL_6:
        uint64_t v12 = v9;
        uint64_t v13 = v10;
LABEL_8:
        ++v7;
        uint64_t v9 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v19) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v20)) {
      goto LABEL_88;
    }
    char v22 = 0;
    unsigned int v23 = 0;
    unint64_t v24 = 0;
    while (1)
    {
      uint64_t v25 = *v19;
      uint64_t v26 = *(void *)(v3 + v25);
      unint64_t v27 = v26 + 1;
      if (v26 == -1 || v27 > *(void *)(v3 + *v6)) {
        break;
      }
      char v28 = *(unsigned char *)(*(void *)(v3 + *v21) + v26);
      *(void *)(v3 + v25) = v27;
      v24 |= (unint64_t)(v28 & 0x7F) << v22;
      if ((v28 & 0x80) == 0) {
        goto LABEL_27;
      }
      v22 += 7;
      BOOL v29 = v23++ >= 9;
      if (v29)
      {
        unint64_t v24 = 0;
        int v30 = *(unsigned __int8 *)(v3 + *v20);
        goto LABEL_29;
      }
    }
    *(unsigned char *)(v3 + *v20) = 1;
LABEL_27:
    int v30 = *(unsigned __int8 *)(v3 + *v20);
    if (*(unsigned char *)(v3 + *v20)) {
      unint64_t v24 = 0;
    }
LABEL_29:
    if (v30 || (v24 & 7) == 4)
    {
LABEL_88:
      if (v17)
      {
        char v56 = 1;
        goto LABEL_99;
      }
      if (!v16) {
        goto LABEL_100;
      }
      while (1)
      {
        int v58 = *v16++;
        int v57 = v58;
        if (v58 == 5) {
          break;
        }
        if (v57 == 6)
        {
          char v59 = 16;
LABEL_97:
          *(unsigned char *)(a1 + 72) |= v59;
        }
        else if (!v57)
        {
          goto LABEL_100;
        }
      }
      char v59 = 32;
      goto LABEL_97;
    }
    unint64_t v32 = v24 >> 3;
    BOOL v33 = v17;
    if (!v64)
    {
      int v34 = v16;
      do
      {
        int v36 = *v34++;
        int v35 = v36;
        BOOL v33 = v36 != 0;
        if (v36) {
          BOOL v37 = v35 == v32;
        }
        else {
          BOOL v37 = 1;
        }
      }
      while (!v37);
    }
    switch((int)v32)
    {
      case 1:
        if ((v8 & 1) == 0) {
          goto LABEL_74;
        }
        char v38 = 0;
        unsigned int v39 = 0;
        uint64_t v40 = 0;
        *(unsigned char *)(a1 + 72) |= 8u;
        while (1)
        {
          uint64_t v41 = *v19;
          uint64_t v42 = *(void *)(v3 + v41);
          unint64_t v43 = v42 + 1;
          if (v42 == -1 || v43 > *(void *)(v3 + *v6)) {
            break;
          }
          char v44 = *(unsigned char *)(*(void *)(v3 + *v21) + v42);
          *(void *)(v3 + v41) = v43;
          v40 |= (unint64_t)(v44 & 0x7F) << v38;
          if ((v44 & 0x80) == 0) {
            goto LABEL_77;
          }
          v38 += 7;
          BOOL v29 = v39++ >= 9;
          if (v29)
          {
            LODWORD(v40) = 0;
            goto LABEL_79;
          }
        }
        *(unsigned char *)(v3 + *v20) = 1;
LABEL_77:
        if (*(unsigned char *)(v3 + *v20)) {
          LODWORD(v40) = 0;
        }
LABEL_79:
        *(_DWORD *)(a1 + 68) = v40;
        goto LABEL_87;
      case 2:
        if ((v8 & 1) == 0) {
          goto LABEL_74;
        }
        *(unsigned char *)(a1 + 72) |= 2u;
        uint64_t v46 = *v19;
        unint64_t v47 = *(void *)(v3 + v46);
        if (v47 <= 0xFFFFFFFFFFFFFFF7 && v47 + 8 <= *(void *)(v3 + *v6))
        {
          uint64_t v48 = *(void *)(*(void *)(v3 + *v21) + v47);
          *(void *)(v3 + v46) = v47 + 8;
        }
        else
        {
          *(unsigned char *)(v3 + *v20) = 1;
          uint64_t v48 = 0;
        }
        uint64_t v55 = 32;
        goto LABEL_86;
      case 3:
        if ((v8 & 1) == 0) {
          goto LABEL_74;
        }
        *(unsigned char *)(a1 + 72) |= 1u;
        uint64_t v49 = *v19;
        unint64_t v50 = *(void *)(v3 + v49);
        if (v50 <= 0xFFFFFFFFFFFFFFF7 && v50 + 8 <= *(void *)(v3 + *v6))
        {
          uint64_t v48 = *(void *)(*(void *)(v3 + *v21) + v50);
          *(void *)(v3 + v49) = v50 + 8;
        }
        else
        {
          *(unsigned char *)(v3 + *v20) = 1;
          uint64_t v48 = 0;
        }
        uint64_t v55 = 24;
        goto LABEL_86;
      case 4:
        if ((v8 & 1) == 0) {
          goto LABEL_74;
        }
        *(unsigned char *)(a1 + 72) |= 4u;
        uint64_t v51 = *v19;
        unint64_t v52 = *(void *)(v3 + v51);
        if (v52 <= 0xFFFFFFFFFFFFFFF7 && v52 + 8 <= *(void *)(v3 + *v6))
        {
          uint64_t v48 = *(void *)(*(void *)(v3 + *v21) + v52);
          *(void *)(v3 + v51) = v52 + 8;
        }
        else
        {
          *(unsigned char *)(v3 + *v20) = 1;
          uint64_t v48 = 0;
        }
        uint64_t v55 = 40;
LABEL_86:
        *(void *)(a1 + v55) = v48;
        goto LABEL_87;
      case 5:
        if (!v33 || (*(unsigned char *)(a1 + 72) & 0x20) != 0) {
          goto LABEL_74;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_105;
        }
        BOOL v62 = v17;
        uint64_t v53 = objc_alloc_init(GEOPDSearchSpanScore);
        if (!GEOPDSearchSpanScoreReadAllFrom((uint64_t)v53, (void *)v3)) {
          goto LABEL_106;
        }
        PBReaderRecallMark();
        -[GEOPDSearchQueryTagMetadata _addNoFlagsSpanScore:](a1, v53);
        goto LABEL_73;
      case 6:
        if (!v33 || (*(unsigned char *)(a1 + 72) & 0x10) != 0)
        {
LABEL_74:
          char v54 = PBReaderSkipValueWithTag();
          char v20 = (int *)MEMORY[0x1E4F940C8];
          if ((v54 & 1) == 0)
          {
LABEL_98:
            char v56 = 0;
            goto LABEL_99;
          }
          goto LABEL_87;
        }
        if (PBReaderPlaceMark())
        {
          BOOL v62 = v17;
          uint64_t v53 = objc_alloc_init(GEOPDSearchStringStringPair);
          if (!GEOPDSearchStringStringPairReadAllFrom((uint64_t)v53, (void *)v3, v9 & 1))
          {
LABEL_106:

            char v56 = 0;
            BOOL v17 = v62;
            goto LABEL_107;
          }
          PBReaderRecallMark();
          -[GEOPDSearchQueryTagMetadata _addNoFlagsModelVersion:](a1, v53);
LABEL_73:

          BOOL v17 = v62;
          char v20 = (int *)MEMORY[0x1E4F940C8];
LABEL_87:
          if (!v63) {
            goto LABEL_88;
          }
          continue;
        }
LABEL_105:
        char v56 = 0;
LABEL_107:
        char v20 = (int *)MEMORY[0x1E4F940C8];
LABEL_99:
        *(unsigned char *)(a1 + 72) |= 0x20u;
        *(unsigned char *)(a1 + 72) |= 0x10u;
        if (v56)
        {
LABEL_100:
          unint64_t v3 = *(unsigned char *)(v3 + *v20) == 0;
          if (v17) {
            goto LABEL_101;
          }
        }
        else
        {
          unint64_t v3 = 0;
          if (v17)
          {
LABEL_101:
            uint64_t v60 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = 0;
          }
        }
        return v3;
      default:
        int v45 = PBReaderSkipValueWithTag();
        char v20 = (int *)MEMORY[0x1E4F940C8];
        if (!v45) {
          goto LABEL_98;
        }
        goto LABEL_87;
    }
  }
}

void sub_1899C0B2C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1899C0CBC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1899C1300(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDSearchQueryTagMetadataCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v21 = *MEMORY[0x1E4F143B8];
  long long v15 = 0u;
  long long v16 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  id v2 = *(id *)(a1 + 48);
  uint64_t v3 = [v2 countByEnumeratingWithState:&v15 objects:v20 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v16;
    while (1)
    {
      if (*(void *)v16 != v5) {
        objc_enumerationMutation(v2);
      }
      if (!--v4)
      {
        uint64_t v4 = [v2 countByEnumeratingWithState:&v15 objects:v20 count:16];
        if (!v4) {
          break;
        }
      }
    }
  }

  long long v13 = 0u;
  long long v14 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  id v6 = *(id *)(a1 + 16);
  uint64_t v7 = [v6 countByEnumeratingWithState:&v11 objects:v19 count:16];
  if (v7)
  {
    uint64_t v8 = v7;
    uint64_t v9 = *(void *)v12;
    do
    {
      uint64_t v10 = 0;
      do
      {
        if (*(void *)v12 != v9) {
          objc_enumerationMutation(v6);
        }
        -[GEOPDSearchStringStringPair readAll:](*(void *)(*((void *)&v11 + 1) + 8 * v10++), 1);
      }
      while (v8 != v10);
      uint64_t v8 = [v6 countByEnumeratingWithState:&v11 objects:v19 count:16];
    }
    while (v8);
  }
}

unint64_t GEOPDSearchQueryTagMetadataReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 60))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDSearchQueryTagMetadataReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = [v8 position];
  *(_DWORD *)(a1 + 60) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOPDSearchQueryTagMetadataReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOPDSearchQueryTagMetadataReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDSearchQueryTagMetadataReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOPDSearchQueryTagMetadataCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_1899C1618(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1899C194C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDSearchQueryTagMetadataIsDirty(uint64_t a1)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  if ((*(unsigned char *)(a1 + 72) & 0x70) != 0) {
    return 1;
  }
  if ((*(unsigned char *)(a1 + 72) & 0x10) == 0) {
    return 0;
  }
  long long v9 = 0u;
  long long v10 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  id v3 = *(id *)(a1 + 16);
  uint64_t v2 = [v3 countByEnumeratingWithState:&v7 objects:v11 count:16];
  if (v2)
  {
    uint64_t v4 = *(void *)v8;
    while (2)
    {
      for (uint64_t i = 0; i != v2; ++i)
      {
        if (*(void *)v8 != v4) {
          objc_enumerationMutation(v3);
        }
        if (GEOPDSearchStringStringPairIsDirty(*(void *)(*((void *)&v7 + 1) + 8 * i)))
        {
          uint64_t v2 = 1;
          goto LABEL_15;
        }
      }
      uint64_t v2 = [v3 countByEnumeratingWithState:&v7 objects:v11 count:16];
      if (v2) {
        continue;
      }
      break;
    }
  }
LABEL_15:

  return v2;
}

void sub_1899C1DFC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSearchQueryTokenImportanceMetadataReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    id v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      long long v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_27;
          }
          long long v18 = objc_alloc_init(GEOPDSearchTokenImportance);
          if (!GEOPDSearchTokenImportanceReadAllFrom((uint64_t)v18, v3))
          {

            goto LABEL_27;
          }
          PBReaderRecallMark();
          -[GEOPDSearchQueryTokenImportanceMetadata addTokenImportance:](a1, v18);
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_27;
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v19 = v3[*v6] == 0;
  }
  else
  {
LABEL_27:
    BOOL v19 = 0;
  }
  objc_sync_exit(v3);

  return v19;
}

void sub_1899C2990(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchQueryTokenizerMetadataReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  id v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 36);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 32)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  int v11 = ((*(unsigned __int8 *)(a1 + 48) >> 1) & 1) + ((*(unsigned __int8 *)(a1 + 48) >> 2) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v9])
    {
      case -3:
        char v8 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v12 = v7;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        int v14 = v10 & 1 | v11;
        if ((v14 != 0) | v8 & 1) {
          long long v15 = 0;
        }
        else {
          long long v15 = a3;
        }
        BOOL v16 = v14 != 0;
        if (v14) {
          BOOL v17 = 1;
        }
        else {
          BOOL v17 = v15 == 0;
        }
        BOOL v59 = v17;
        long long v18 = (int *)MEMORY[0x1E4F940E8];
        BOOL v19 = (int *)MEMORY[0x1E4F940C8];
        char v20 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v11;
LABEL_6:
        uint64_t v12 = v7;
        uint64_t v13 = v10;
LABEL_8:
        ++v9;
        uint64_t v7 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v18) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v19)) {
      goto LABEL_76;
    }
    char v21 = 0;
    unsigned int v22 = 0;
    unint64_t v23 = 0;
    while (1)
    {
      uint64_t v24 = *v18;
      uint64_t v25 = *(void *)(v3 + v24);
      unint64_t v26 = v25 + 1;
      if (v25 == -1 || v26 > *(void *)(v3 + *v6)) {
        break;
      }
      char v27 = *(unsigned char *)(*(void *)(v3 + *v20) + v25);
      *(void *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0) {
        goto LABEL_26;
      }
      v21 += 7;
      BOOL v28 = v22++ >= 9;
      if (v28)
      {
        unint64_t v23 = 0;
        int v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_28;
      }
    }
    *(unsigned char *)(v3 + *v19) = 1;
LABEL_26:
    int v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(unsigned char *)(v3 + *v19)) {
      unint64_t v23 = 0;
    }
LABEL_28:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_76:
      if (v16)
      {
        char v52 = 1;
        goto LABEL_91;
      }
      if (!v15) {
        goto LABEL_92;
      }
      while (1)
      {
        int v55 = *v15++;
        int v54 = v55;
        if (v55 == 1) {
          break;
        }
        if (v54 == 3)
        {
          char v53 = 4;
LABEL_82:
          *(unsigned char *)(a1 + 48) |= v53;
        }
        else if (!v54)
        {
          goto LABEL_92;
        }
      }
      char v53 = 2;
      goto LABEL_82;
    }
    unint64_t v31 = v23 >> 3;
    BOOL v32 = v16;
    if (!v59)
    {
      BOOL v33 = v15;
      do
      {
        int v35 = *v33++;
        int v34 = v35;
        BOOL v32 = v35 != 0;
        if (v35) {
          BOOL v36 = v34 == v31;
        }
        else {
          BOOL v36 = 1;
        }
      }
      while (!v36);
    }
    if (v31 == 3)
    {
      if (v32)
      {
        if ((*(unsigned char *)(a1 + 48) & 4) == 0)
        {
          uint64_t v39 = PBReaderReadString();
          uint64_t v40 = *(void **)(a1 + 24);
          *(void *)(a1 + 24) = v39;

          --v9;
          goto LABEL_71;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
        {
LABEL_88:
          char v52 = 0;
          goto LABEL_90;
        }
        char v50 = 32 * *(unsigned char *)(a1 + 48);
LABEL_70:
        v9 += v50 >> 7;
        goto LABEL_71;
      }
      goto LABEL_60;
    }
    if (v31 == 2)
    {
      if (v8)
      {
        char v41 = 0;
        unsigned int v42 = 0;
        uint64_t v43 = 0;
        *(unsigned char *)(a1 + 48) |= 1u;
        while (1)
        {
          uint64_t v44 = *v18;
          uint64_t v45 = *(void *)(v3 + v44);
          unint64_t v46 = v45 + 1;
          if (v45 == -1 || v46 > *(void *)(v3 + *v6)) {
            break;
          }
          char v47 = *(unsigned char *)(*(void *)(v3 + *v20) + v45);
          *(void *)(v3 + v44) = v46;
          v43 |= (unint64_t)(v47 & 0x7F) << v41;
          if ((v47 & 0x80) == 0) {
            goto LABEL_63;
          }
          v41 += 7;
          BOOL v28 = v42++ >= 9;
          if (v28)
          {
            LODWORD(v43) = 0;
            goto LABEL_65;
          }
        }
        *(unsigned char *)(v3 + *v19) = 1;
LABEL_63:
        if (*(unsigned char *)(v3 + *v19)) {
          LODWORD(v43) = 0;
        }
LABEL_65:
        *(_DWORD *)(a1 + 44) = v43;
        goto LABEL_72;
      }
      goto LABEL_60;
    }
    if (v31 != 1)
    {
      int v48 = PBReaderSkipValueWithTag();
      BOOL v19 = (int *)MEMORY[0x1E4F940C8];
      if (!v48) {
        goto LABEL_87;
      }
      goto LABEL_72;
    }
    if (v32) {
      break;
    }
LABEL_60:
    char v49 = PBReaderSkipValueWithTag();
    BOOL v19 = (int *)MEMORY[0x1E4F940C8];
    if ((v49 & 1) == 0)
    {
LABEL_87:
      char v52 = 0;
      goto LABEL_91;
    }
LABEL_72:
    if (v9) {
      char v51 = 1;
    }
    else {
      char v51 = v16;
    }
    if ((v51 & 1) == 0) {
      goto LABEL_76;
    }
  }
  if ((*(unsigned char *)(a1 + 48) & 2) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0) {
      goto LABEL_88;
    }
    char v50 = *(unsigned char *)(a1 + 48) << 6;
    goto LABEL_70;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_88;
  }
  BOOL v58 = v16;
  BOOL v37 = objc_alloc_init(GEOPDSearchTokenSet);
  if (GEOPDSearchTokenSetReadAllFrom((uint64_t)v37, (void *)v3, v7 & 1))
  {
    PBReaderRecallMark();
    char v38 = *(void **)(a1 + 16);
    *(void *)(a1 + 16) = v37;

    --v9;
    BOOL v16 = v58;
LABEL_71:
    BOOL v19 = (int *)MEMORY[0x1E4F940C8];
    goto LABEL_72;
  }

  char v52 = 0;
  BOOL v16 = v58;
LABEL_90:
  BOOL v19 = (int *)MEMORY[0x1E4F940C8];
LABEL_91:
  *(unsigned char *)(a1 + 48) |= 2u;
  *(unsigned char *)(a1 + 48) |= 4u;
  if (v52)
  {
LABEL_92:
    unint64_t v3 = *(unsigned char *)(v3 + *v19) == 0;
    if (v16) {
      goto LABEL_93;
    }
  }
  else
  {
    unint64_t v3 = 0;
    if (v16)
    {
LABEL_93:
      char v56 = *(void **)(a1 + 8);
      *(void *)(a1 + 8) = 0;
    }
  }
  return v3;
}

void sub_1899C35AC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1899C36A4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchQueryTokenizerMetadataReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 36))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDSearchQueryTokenizerMetadataReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 40));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 32) = [v8 position];
  *(_DWORD *)(a1 + 36) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOPDSearchQueryTokenizerMetadataReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOPDSearchQueryTokenizerMetadataReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDSearchQueryTokenizerMetadataReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    -[GEOPDSearchTokenSet readAll:](*(void *)(a1 + 16), 1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return Specified;
}

void sub_1899C3B78(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1899C3D18(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDSearchQueryTokenizerMetadataIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  unsigned int v2 = *(unsigned __int8 *)(a1 + 48);
  if ((v2 & 8) != 0) {
    return 1;
  }
  if ((v2 & 2) != 0)
  {
    if (GEOPDSearchTokenSetIsDirty(*(void *)(a1 + 16))) {
      return 1;
    }
    unsigned int v2 = *(unsigned __int8 *)(a1 + 48);
  }
  return (v2 >> 2) & 1;
}

os_unfair_lock_s *GEOPDSearchQueryTokenizerMetadataIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOPDSearchQueryTokenizerMetadataIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 10);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_1899C3F7C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchQueryTransliteratorMetadataReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  id v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 36);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 32)];
  char v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  int v10 = ((*(unsigned __int8 *)(a1 + 48) >> 2) & 1) + ((*(unsigned __int8 *)(a1 + 48) >> 1) & 1);
  while (1)
  {
    unsigned int v11 = a3[v9];
    if (v11 >= 0xFFFFFFFE)
    {
      char v7 = 1;
      goto LABEL_9;
    }
    if (v11 != -3) {
      break;
    }
    char v8 = 1;
LABEL_9:
    ++v9;
  }
  if (v11)
  {
    ++v10;
    goto LABEL_9;
  }
  int v12 = v7 & 1 | v10;
  BOOL v13 = v12 != 0;
  if ((v12 != 0) | v8 & 1) {
    int v14 = 0;
  }
  else {
    int v14 = a3;
  }
  if (v12) {
    BOOL v15 = 1;
  }
  else {
    BOOL v15 = v14 == 0;
  }
  BOOL v55 = v15;
  BOOL v16 = (int *)MEMORY[0x1E4F940E8];
  BOOL v17 = (int *)MEMORY[0x1E4F940C8];
  long long v18 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(void *)(v3 + *v16) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v17)) {
      goto LABEL_75;
    }
    char v19 = 0;
    unsigned int v20 = 0;
    unint64_t v21 = 0;
    while (1)
    {
      uint64_t v22 = *v16;
      uint64_t v23 = *(void *)(v3 + v22);
      unint64_t v24 = v23 + 1;
      if (v23 == -1 || v24 > *(void *)(v3 + *v6)) {
        break;
      }
      char v25 = *(unsigned char *)(*(void *)(v3 + *v18) + v23);
      *(void *)(v3 + v22) = v24;
      v21 |= (unint64_t)(v25 & 0x7F) << v19;
      if ((v25 & 0x80) == 0) {
        goto LABEL_27;
      }
      v19 += 7;
      BOOL v26 = v20++ >= 9;
      if (v26)
      {
        unint64_t v21 = 0;
        int v27 = *(unsigned __int8 *)(v3 + *v17);
        goto LABEL_29;
      }
    }
    *(unsigned char *)(v3 + *v17) = 1;
LABEL_27:
    int v27 = *(unsigned __int8 *)(v3 + *v17);
    if (*(unsigned char *)(v3 + *v17)) {
      unint64_t v21 = 0;
    }
LABEL_29:
    if (v27 || (v21 & 7) == 4)
    {
LABEL_75:
      if (v13)
      {
        char v50 = 1;
        goto LABEL_85;
      }
      if (!v14) {
        goto LABEL_86;
      }
      while (1)
      {
        while (1)
        {
          int v52 = *v14++;
          int v51 = v52;
          if (v52 != 1) {
            break;
          }
          LOBYTE(v51) = 4;
LABEL_83:
          *(unsigned char *)(a1 + 48) |= v51;
        }
        if (v51 == 2) {
          goto LABEL_83;
        }
        if (!v51) {
          goto LABEL_86;
        }
      }
    }
    unint64_t v29 = v21 >> 3;
    BOOL v30 = v13;
    if (!v55)
    {
      unint64_t v31 = v14;
      do
      {
        int v33 = *v31++;
        int v32 = v33;
        BOOL v30 = v33 != 0;
        if (v33) {
          BOOL v34 = v32 == v29;
        }
        else {
          BOOL v34 = 1;
        }
      }
      while (!v34);
    }
    if (v29 == 3)
    {
      if (v8)
      {
        char v37 = 0;
        unsigned int v38 = 0;
        uint64_t v39 = 0;
        *(unsigned char *)(a1 + 48) |= 1u;
        while (1)
        {
          uint64_t v40 = *v16;
          uint64_t v41 = *(void *)(v3 + v40);
          unint64_t v42 = v41 + 1;
          if (v41 == -1 || v42 > *(void *)(v3 + *v6)) {
            break;
          }
          char v43 = *(unsigned char *)(*(void *)(v3 + *v18) + v41);
          *(void *)(v3 + v40) = v42;
          v39 |= (unint64_t)(v43 & 0x7F) << v37;
          if ((v43 & 0x80) == 0) {
            goto LABEL_62;
          }
          v37 += 7;
          BOOL v26 = v38++ >= 9;
          if (v26)
          {
            LODWORD(v39) = 0;
            goto LABEL_64;
          }
        }
        *(unsigned char *)(v3 + *v17) = 1;
LABEL_62:
        if (*(unsigned char *)(v3 + *v17)) {
          LODWORD(v39) = 0;
        }
LABEL_64:
        *(_DWORD *)(a1 + 44) = v39;
        goto LABEL_71;
      }
      goto LABEL_59;
    }
    if (v29 != 2)
    {
      if (v29 != 1)
      {
        int v46 = PBReaderSkipValueWithTag();
        BOOL v17 = (int *)MEMORY[0x1E4F940C8];
        if (!v46) {
          goto LABEL_84;
        }
        goto LABEL_71;
      }
      if (v30)
      {
        if ((*(unsigned char *)(a1 + 48) & 4) == 0)
        {
          uint64_t v35 = PBReaderReadString();
          BOOL v36 = *(void **)(a1 + 24);
          *(void *)(a1 + 24) = v35;

          BOOL v17 = (int *)MEMORY[0x1E4F940C8];
          --v9;
          goto LABEL_71;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_91;
        }
        char v48 = 32 * *(unsigned char *)(a1 + 48);
LABEL_69:
        v9 += v48 >> 7;
LABEL_70:
        BOOL v17 = (int *)MEMORY[0x1E4F940C8];
LABEL_71:
        if (v9) {
          char v49 = 1;
        }
        else {
          char v49 = v13;
        }
        if ((v49 & 1) == 0) {
          goto LABEL_75;
        }
        continue;
      }
LABEL_59:
      char v47 = PBReaderSkipValueWithTag();
      BOOL v17 = (int *)MEMORY[0x1E4F940C8];
      if ((v47 & 1) == 0)
      {
LABEL_84:
        char v50 = 0;
        goto LABEL_85;
      }
      goto LABEL_71;
    }
    break;
  }
  if (!v30) {
    goto LABEL_59;
  }
  if ((*(unsigned char *)(a1 + 48) & 2) == 0)
  {
    uint64_t v44 = PBReaderReadString();
    uint64_t v45 = *(void **)(a1 + 16);
    *(void *)(a1 + 16) = v44;

    --v9;
    goto LABEL_70;
  }
  if (PBReaderSkipValueWithTag())
  {
    char v48 = *(unsigned char *)(a1 + 48) << 6;
    goto LABEL_69;
  }
LABEL_91:
  char v50 = 0;
  BOOL v17 = (int *)MEMORY[0x1E4F940C8];
LABEL_85:
  *(unsigned char *)(a1 + 48) |= 4u;
  *(unsigned char *)(a1 + 48) |= 2u;
  if (v50)
  {
LABEL_86:
    unint64_t v3 = *(unsigned char *)(v3 + *v17) == 0;
    if (v13) {
      goto LABEL_87;
    }
  }
  else
  {
    unint64_t v3 = 0;
    if (v13)
    {
LABEL_87:
      char v53 = *(void **)(a1 + 8);
      *(void *)(a1 + 8) = 0;
    }
  }
  return v3;
}

void sub_1899C49B4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1899C4A94(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchQueryTransliteratorMetadataReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 36))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDSearchQueryTransliteratorMetadataReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)int v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 40));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 32) = [v8 position];
  *(_DWORD *)(a1 + 36) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOPDSearchQueryTransliteratorMetadataReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOPDSearchQueryTransliteratorMetadataReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDSearchQueryTransliteratorMetadataReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return Specified;
}

void sub_1899C4C24(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1899C4DD0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSearchQueryTransliteratorMetadataIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  BOOL v2 = (*(unsigned char *)(a1 + 48) & 0xE) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return v2;
}

void sub_1899C4FD0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSearchRelatedCategoryReadAllFrom(uint64_t a1, void *a2)
{
  unint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    id v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      char v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        unint64_t v18 = v10 >> 3;
        if ((v10 >> 3) == 3)
        {
          char v21 = 0;
          unsigned int v22 = 0;
          uint64_t v23 = 0;
          *(unsigned char *)(a1 + 28) |= 1u;
          while (1)
          {
            uint64_t v24 = *v4;
            uint64_t v25 = *(void *)&v3[v24];
            unint64_t v26 = v25 + 1;
            if (v25 == -1 || v26 > *(void *)&v3[*v5]) {
              break;
            }
            char v27 = *(unsigned char *)(*(void *)&v3[*v7] + v25);
            *(void *)&v3[v24] = v26;
            v23 |= (unint64_t)(v27 & 0x7F) << v21;
            if ((v27 & 0x80) == 0) {
              goto LABEL_40;
            }
            v21 += 7;
            BOOL v15 = v22++ >= 9;
            if (v15)
            {
              uint64_t v23 = 0;
              goto LABEL_42;
            }
          }
          v3[*v6] = 1;
LABEL_40:
          if (v3[*v6]) {
            uint64_t v23 = 0;
          }
LABEL_42:
          *(void *)(a1 + 8) = v23;
        }
        else if (v18 == 2)
        {
          char v28 = 0;
          unsigned int v29 = 0;
          uint64_t v30 = 0;
          *(unsigned char *)(a1 + 28) |= 2u;
          while (1)
          {
            uint64_t v31 = *v4;
            uint64_t v32 = *(void *)&v3[v31];
            unint64_t v33 = v32 + 1;
            if (v32 == -1 || v33 > *(void *)&v3[*v5]) {
              break;
            }
            char v34 = *(unsigned char *)(*(void *)&v3[*v7] + v32);
            *(void *)&v3[v31] = v33;
            v30 |= (unint64_t)(v34 & 0x7F) << v28;
            if ((v34 & 0x80) == 0) {
              goto LABEL_44;
            }
            v28 += 7;
            BOOL v15 = v29++ >= 9;
            if (v15)
            {
              LODWORD(v30) = 0;
              goto LABEL_46;
            }
          }
          v3[*v6] = 1;
LABEL_44:
          if (v3[*v6]) {
            LODWORD(v30) = 0;
          }
LABEL_46:
          *(_DWORD *)(a1 + 24) = v30;
        }
        else if (v18 == 1)
        {
          uint64_t v19 = PBReaderReadString();
          unsigned int v20 = *(void **)(a1 + 16);
          *(void *)(a1 + 16) = v19;
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_49;
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v35 = v3[*v6] == 0;
  }
  else
  {
LABEL_49:
    BOOL v35 = 0;
  }
  objc_sync_exit(v3);

  return v35;
}

void sub_1899C58F0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSearchRewrittenQueryNonPayloadFieldReadAllFrom(uint64_t a1, void *a2)
{
  unint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    id v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      char v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        switch((v10 >> 3))
        {
          case 1u:
            char v18 = 0;
            unsigned int v19 = 0;
            uint64_t v20 = 0;
            *(unsigned char *)(a1 + 32) |= 0x20u;
            while (1)
            {
              uint64_t v21 = *v4;
              uint64_t v22 = *(void *)&v3[v21];
              unint64_t v23 = v22 + 1;
              if (v22 == -1 || v23 > *(void *)&v3[*v5]) {
                break;
              }
              char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
              *(void *)&v3[v21] = v23;
              v20 |= (unint64_t)(v24 & 0x7F) << v18;
              if ((v24 & 0x80) == 0) {
                goto LABEL_73;
              }
              v18 += 7;
              BOOL v15 = v19++ >= 9;
              if (v15)
              {
                uint64_t v20 = 0;
                goto LABEL_75;
              }
            }
            v3[*v6] = 1;
LABEL_73:
            if (v3[*v6]) {
              uint64_t v20 = 0;
            }
LABEL_75:
            BOOL v68 = v20 != 0;
            uint64_t v69 = 27;
            goto LABEL_92;
          case 2u:
            char v25 = 0;
            unsigned int v26 = 0;
            uint64_t v27 = 0;
            *(unsigned char *)(a1 + 32) |= 4u;
            while (2)
            {
              uint64_t v28 = *v4;
              uint64_t v29 = *(void *)&v3[v28];
              unint64_t v30 = v29 + 1;
              if (v29 == -1 || v30 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v31 = *(unsigned char *)(*(void *)&v3[*v7] + v29);
                *(void *)&v3[v28] = v30;
                v27 |= (unint64_t)(v31 & 0x7F) << v25;
                if (v31 < 0)
                {
                  v25 += 7;
                  BOOL v15 = v26++ >= 9;
                  if (v15)
                  {
                    uint64_t v27 = 0;
                    goto LABEL_79;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              uint64_t v27 = 0;
            }
LABEL_79:
            BOOL v68 = v27 != 0;
            uint64_t v69 = 24;
            goto LABEL_92;
          case 3u:
            char v32 = 0;
            unsigned int v33 = 0;
            uint64_t v34 = 0;
            *(unsigned char *)(a1 + 32) |= 8u;
            while (2)
            {
              uint64_t v35 = *v4;
              uint64_t v36 = *(void *)&v3[v35];
              unint64_t v37 = v36 + 1;
              if (v36 == -1 || v37 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v38 = *(unsigned char *)(*(void *)&v3[*v7] + v36);
                *(void *)&v3[v35] = v37;
                v34 |= (unint64_t)(v38 & 0x7F) << v32;
                if (v38 < 0)
                {
                  v32 += 7;
                  BOOL v15 = v33++ >= 9;
                  if (v15)
                  {
                    uint64_t v34 = 0;
                    goto LABEL_83;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              uint64_t v34 = 0;
            }
LABEL_83:
            BOOL v68 = v34 != 0;
            uint64_t v69 = 25;
            goto LABEL_92;
          case 4u:
            char v39 = 0;
            unsigned int v40 = 0;
            uint64_t v41 = 0;
            *(unsigned char *)(a1 + 32) |= 0x40u;
            while (2)
            {
              uint64_t v42 = *v4;
              uint64_t v43 = *(void *)&v3[v42];
              unint64_t v44 = v43 + 1;
              if (v43 == -1 || v44 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v45 = *(unsigned char *)(*(void *)&v3[*v7] + v43);
                *(void *)&v3[v42] = v44;
                v41 |= (unint64_t)(v45 & 0x7F) << v39;
                if (v45 < 0)
                {
                  v39 += 7;
                  BOOL v15 = v40++ >= 9;
                  if (v15)
                  {
                    uint64_t v41 = 0;
                    goto LABEL_87;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              uint64_t v41 = 0;
            }
LABEL_87:
            BOOL v68 = v41 != 0;
            uint64_t v69 = 28;
            goto LABEL_92;
          case 5u:
            char v46 = 0;
            unsigned int v47 = 0;
            uint64_t v48 = 0;
            *(unsigned char *)(a1 + 32) |= 0x10u;
            while (2)
            {
              uint64_t v49 = *v4;
              uint64_t v50 = *(void *)&v3[v49];
              unint64_t v51 = v50 + 1;
              if (v50 == -1 || v51 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v52 = *(unsigned char *)(*(void *)&v3[*v7] + v50);
                *(void *)&v3[v49] = v51;
                v48 |= (unint64_t)(v52 & 0x7F) << v46;
                if (v52 < 0)
                {
                  v46 += 7;
                  BOOL v15 = v47++ >= 9;
                  if (v15)
                  {
                    uint64_t v48 = 0;
                    goto LABEL_91;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              uint64_t v48 = 0;
            }
LABEL_91:
            BOOL v68 = v48 != 0;
            uint64_t v69 = 26;
LABEL_92:
            *(unsigned char *)(a1 + v69) = v68;
            continue;
          case 6u:
            uint64_t v53 = PBReaderReadString();
            int v54 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v53;

            continue;
          case 7u:
            char v55 = 0;
            unsigned int v56 = 0;
            uint64_t v57 = 0;
            *(unsigned char *)(a1 + 32) |= 1u;
            while (2)
            {
              uint64_t v58 = *v4;
              uint64_t v59 = *(void *)&v3[v58];
              unint64_t v60 = v59 + 1;
              if (v59 == -1 || v60 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v61 = *(unsigned char *)(*(void *)&v3[*v7] + v59);
                *(void *)&v3[v58] = v60;
                v57 |= (unint64_t)(v61 & 0x7F) << v55;
                if (v61 < 0)
                {
                  v55 += 7;
                  BOOL v15 = v56++ >= 9;
                  if (v15)
                  {
                    LODWORD(v57) = 0;
                    goto LABEL_96;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              LODWORD(v57) = 0;
            }
LABEL_96:
            uint64_t v70 = 16;
            goto LABEL_101;
          case 8u:
            char v62 = 0;
            unsigned int v63 = 0;
            uint64_t v57 = 0;
            *(unsigned char *)(a1 + 32) |= 2u;
            break;
          default:
            if (!PBReaderSkipValueWithTag()) {
              goto LABEL_104;
            }
            continue;
        }
        while (1)
        {
          uint64_t v64 = *v4;
          uint64_t v65 = *(void *)&v3[v64];
          unint64_t v66 = v65 + 1;
          if (v65 == -1 || v66 > *(void *)&v3[*v5]) {
            break;
          }
          char v67 = *(unsigned char *)(*(void *)&v3[*v7] + v65);
          *(void *)&v3[v64] = v66;
          v57 |= (unint64_t)(v67 & 0x7F) << v62;
          if ((v67 & 0x80) == 0) {
            goto LABEL_98;
          }
          v62 += 7;
          BOOL v15 = v63++ >= 9;
          if (v15)
          {
            LODWORD(v57) = 0;
            goto LABEL_100;
          }
        }
        v3[*v6] = 1;
LABEL_98:
        if (v3[*v6]) {
          LODWORD(v57) = 0;
        }
LABEL_100:
        uint64_t v70 = 20;
LABEL_101:
        *(_DWORD *)(a1 + v70) = v57;
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v71 = v3[*v6] == 0;
  }
  else
  {
LABEL_104:
    BOOL v71 = 0;
  }
  objc_sync_exit(v3);

  return v71;
}

void sub_1899C6638(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchRichBrandMetadataReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  id v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 52);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 48)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  unsigned int v11 = ((*(unsigned __int8 *)(a1 + 60) >> 2) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 1) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 3) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v7])
    {
      case -3:
        char v8 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        int v14 = v10 | (v11 > 1);
        if ((v14 | v8)) {
          BOOL v15 = 0;
        }
        else {
          BOOL v15 = a3;
        }
        LODWORD(v16) = v14;
        BOOL v17 = (int *)MEMORY[0x1E4F940E8];
        char v52 = (v15 == 0) | v14;
        char v18 = (int *)MEMORY[0x1E4F940C8];
        unsigned int v19 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v11;
LABEL_6:
        uint64_t v12 = v9;
        uint64_t v13 = v10;
LABEL_8:
        ++v7;
        uint64_t v9 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v17) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v18)) {
      goto LABEL_74;
    }
    char v20 = 0;
    unsigned int v21 = 0;
    unint64_t v22 = 0;
    while (1)
    {
      uint64_t v23 = *v17;
      uint64_t v24 = *(void *)(v3 + v23);
      unint64_t v25 = v24 + 1;
      if (v24 == -1 || v25 > *(void *)(v3 + *v6)) {
        break;
      }
      char v26 = *(unsigned char *)(*(void *)(v3 + *v19) + v24);
      *(void *)(v3 + v23) = v25;
      v22 |= (unint64_t)(v26 & 0x7F) << v20;
      if ((v26 & 0x80) == 0) {
        goto LABEL_23;
      }
      v20 += 7;
      BOOL v27 = v21++ >= 9;
      if (v27)
      {
        unint64_t v22 = 0;
        int v28 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_25;
      }
    }
    *(unsigned char *)(v3 + *v18) = 1;
LABEL_23:
    int v28 = *(unsigned __int8 *)(v3 + *v18);
    if (*(unsigned char *)(v3 + *v18)) {
      unint64_t v22 = 0;
    }
LABEL_25:
    if (v28 || (v22 & 7) == 4)
    {
LABEL_74:
      if (v16)
      {
        char v46 = 1;
        goto LABEL_85;
      }
      if (v15)
      {
        while (1)
        {
          int v47 = *v15++;
          char v48 = 4;
          switch(v47)
          {
            case 0:
              goto LABEL_86;
            case 2:
              goto LABEL_80;
            case 3:
              char v48 = 2;
              goto LABEL_80;
            case 4:
              char v48 = 8;
LABEL_80:
              *(unsigned char *)(a1 + 60) |= v48;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_86;
    }
    unint64_t v30 = v22 >> 3;
    BOOL v31 = (char)v16;
    if ((v52 & 1) == 0)
    {
      char v32 = v15;
      do
      {
        int v34 = *v32++;
        int v33 = v34;
        BOOL v31 = v34 != 0;
        if (v34) {
          BOOL v35 = v33 == v30;
        }
        else {
          BOOL v35 = 1;
        }
      }
      while (!v35);
    }
    switch((int)v30)
    {
      case 1:
        if ((v8 & 1) == 0) {
          goto LABEL_64;
        }
        char v36 = 0;
        unsigned int v37 = 0;
        uint64_t v38 = 0;
        *(unsigned char *)(a1 + 60) |= 1u;
        while (1)
        {
          uint64_t v39 = *v17;
          uint64_t v40 = *(void *)(v3 + v39);
          unint64_t v41 = v40 + 1;
          if (v40 == -1 || v41 > *(void *)(v3 + *v6)) {
            break;
          }
          char v42 = *(unsigned char *)(*(void *)(v3 + *v19) + v40);
          *(void *)(v3 + v39) = v41;
          v38 |= (unint64_t)(v42 & 0x7F) << v36;
          if ((v42 & 0x80) == 0) {
            goto LABEL_67;
          }
          v36 += 7;
          BOOL v27 = v37++ >= 9;
          if (v27)
          {
            uint64_t v38 = 0;
            goto LABEL_69;
          }
        }
        *(unsigned char *)(v3 + *v18) = 1;
LABEL_67:
        if (*(unsigned char *)(v3 + *v18)) {
          uint64_t v38 = 0;
        }
LABEL_69:
        *(void *)(a1 + 32) = v38;
        goto LABEL_73;
      case 2:
        if (!v31 || (*(unsigned char *)(a1 + 60) & 4) != 0) {
          goto LABEL_64;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_82;
        }
        int v51 = (int)v16;
        int v16 = objc_alloc_init(GEOPDSearchChainInfo);
        if (!GEOPDSearchChainInfoReadAllFrom((uint64_t)v16, (void *)v3, v9 & 1)) {
          goto LABEL_83;
        }
        PBReaderRecallMark();
        -[GEOPDSearchRichBrandMetadata _addNoFlagsBrandRelationshipInfo:](a1, v16);
        goto LABEL_62;
      case 3:
        if (!v31) {
          goto LABEL_64;
        }
        if ((*(unsigned char *)(a1 + 60) & 2) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_82;
          }
          int v51 = (int)v16;
          int v16 = objc_alloc_init(GEOPDSearchBrandDensity);
          if (!GEOPDSearchBrandDensityReadAllFrom((uint64_t)v16, (void *)v3)) {
            goto LABEL_83;
          }
          PBReaderRecallMark();
          unint64_t v44 = *(void **)(a1 + 16);
          *(void *)(a1 + 16) = v16;

          --v7;
          goto LABEL_63;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
        {
LABEL_82:
          char v46 = 0;
          goto LABEL_84;
        }
        v7 += *(unsigned __int8 *)(a1 + 60) << 30 >> 31;
        goto LABEL_72;
      case 4:
        if (!v31 || (*(unsigned char *)(a1 + 60) & 8) != 0)
        {
LABEL_64:
          char v45 = PBReaderSkipValueWithTag();
          char v18 = (int *)MEMORY[0x1E4F940C8];
          if ((v45 & 1) == 0)
          {
LABEL_81:
            char v46 = 0;
            goto LABEL_85;
          }
LABEL_73:
          if (!(v16 & 1 | (v7 != 0))) {
            goto LABEL_74;
          }
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_82;
        }
        int v51 = (int)v16;
        int v16 = objc_alloc_init(GEOPDSearchPreferredCategory);
        if (GEOPDSearchPreferredCategoryReadAllFrom((uint64_t)v16, (void *)v3))
        {
          PBReaderRecallMark();
          -[GEOPDSearchRichBrandMetadata _addNoFlagsPreferredCategory:](a1, v16);
LABEL_62:

LABEL_63:
          LODWORD(v16) = v51;
LABEL_72:
          char v18 = (int *)MEMORY[0x1E4F940C8];
          goto LABEL_73;
        }
LABEL_83:

        char v46 = 0;
        LOBYTE(v16) = v51;
LABEL_84:
        char v18 = (int *)MEMORY[0x1E4F940C8];
LABEL_85:
        *(unsigned char *)(a1 + 60) |= 4u;
        *(unsigned char *)(a1 + 60) |= 2u;
        *(unsigned char *)(a1 + 60) |= 8u;
        if (v46)
        {
LABEL_86:
          unint64_t v3 = *(unsigned char *)(v3 + *v18) == 0;
          if (v16) {
            goto LABEL_87;
          }
        }
        else
        {
          unint64_t v3 = 0;
          if (v16)
          {
LABEL_87:
            uint64_t v49 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = 0;
          }
        }
        return v3;
      default:
        int v43 = PBReaderSkipValueWithTag();
        char v18 = (int *)MEMORY[0x1E4F940C8];
        if (!v43) {
          goto LABEL_81;
        }
        goto LABEL_73;
    }
  }
}

void sub_1899C7464(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1899C75F4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1899C7B40(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1899C7C30(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDSearchRichBrandMetadataCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v21 = *MEMORY[0x1E4F143B8];
  long long v15 = 0u;
  long long v16 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  id v2 = *(id *)(a1 + 24);
  uint64_t v3 = [v2 countByEnumeratingWithState:&v15 objects:v20 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v16;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v16 != v5) {
          objc_enumerationMutation(v2);
        }
        -[GEOPDSearchChainInfo readAll:](*(void *)(*((void *)&v15 + 1) + 8 * v6++), 1);
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v15 objects:v20 count:16];
    }
    while (v4);
  }

  long long v13 = 0u;
  long long v14 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  id v7 = *(id *)(a1 + 40);
  uint64_t v8 = [v7 countByEnumeratingWithState:&v11 objects:v19 count:16];
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)v12;
    while (1)
    {
      if (*(void *)v12 != v10) {
        objc_enumerationMutation(v7);
      }
      if (!--v9)
      {
        uint64_t v9 = [v7 countByEnumeratingWithState:&v11 objects:v19 count:16];
        if (!v9) {
          break;
        }
      }
    }
  }
}

unint64_t GEOPDSearchRichBrandMetadataReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 52))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDSearchRichBrandMetadataReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = [v8 position];
  *(_DWORD *)(a1 + 52) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOPDSearchRichBrandMetadataReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOPDSearchRichBrandMetadataReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDSearchRichBrandMetadataReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOPDSearchRichBrandMetadataCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_1899C7F48(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1899C8234(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSearchRichBrandMetadataIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  BOOL v2 = (*(unsigned char *)(a1 + 60) & 0x1E) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return v2;
}

void sub_1899C85C0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSearchSearchFilterIntentReadAllFrom(uint64_t a1, void *a2, int a3)
{
  uint64_t v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    uint64_t v6 = (int *)MEMORY[0x1E4F940E8];
    id v7 = (int *)MEMORY[0x1E4F940E0];
    id v8 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v5[*MEMORY[0x1E4F940E8]] < *(void *)&v5[*MEMORY[0x1E4F940E0]])
    {
      uint64_t v9 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v5[*v8]) {
          break;
        }
        char v10 = 0;
        unsigned int v11 = 0;
        unint64_t v12 = 0;
        while (1)
        {
          uint64_t v13 = *v6;
          uint64_t v14 = *(void *)&v5[v13];
          unint64_t v15 = v14 + 1;
          if (v14 == -1 || v15 > *(void *)&v5[*v7]) {
            break;
          }
          char v16 = *(unsigned char *)(*(void *)&v5[*v9] + v14);
          *(void *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0) {
            goto LABEL_13;
          }
          v10 += 7;
          if (v11++ >= 9)
          {
            unint64_t v12 = 0;
            int v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        int v18 = v5[*v8];
        if (v5[*v8]) {
          unint64_t v12 = 0;
        }
LABEL_15:
        if (v18 || (v12 & 7) == 4) {
          break;
        }
        if ((v12 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_27;
          }
          char v20 = objc_alloc_init(GEOPDSSearchFilter);
          if (!GEOPDSSearchFilterReadAllFrom((uint64_t)v20, v5, a3))
          {

            goto LABEL_27;
          }
          PBReaderRecallMark();
          uint64_t v21 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = v20;
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_27;
        }
      }
      while (*(void *)&v5[*v6] < *(void *)&v5[*v7]);
    }
    BOOL v22 = v5[*v8] == 0;
  }
  else
  {
LABEL_27:
    BOOL v22 = 0;
  }
  objc_sync_exit(v5);

  return v22;
}

void sub_1899C8B60(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSearchSpanScoreReadAllFrom(uint64_t a1, void *a2)
{
  uint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    uint64_t v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      id v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 2)
        {
          *(unsigned char *)(a1 + 20) |= 1u;
          uint64_t v25 = *v4;
          unint64_t v26 = *(void *)&v3[v25];
          if (v26 <= 0xFFFFFFFFFFFFFFF7 && v26 + 8 <= *(void *)&v3[*v5])
          {
            uint64_t v27 = *(void *)(*(void *)&v3[*v7] + v26);
            *(void *)&v3[v25] = v26 + 8;
          }
          else
          {
            v3[*v6] = 1;
            uint64_t v27 = 0;
          }
          *(void *)(a1 + 8) = v27;
        }
        else if ((v10 >> 3) == 1)
        {
          char v18 = 0;
          unsigned int v19 = 0;
          uint64_t v20 = 0;
          *(unsigned char *)(a1 + 20) |= 2u;
          while (1)
          {
            uint64_t v21 = *v4;
            uint64_t v22 = *(void *)&v3[v21];
            unint64_t v23 = v22 + 1;
            if (v22 == -1 || v23 > *(void *)&v3[*v5]) {
              break;
            }
            char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
            *(void *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0) {
              goto LABEL_34;
            }
            v18 += 7;
            BOOL v15 = v19++ >= 9;
            if (v15)
            {
              LODWORD(v20) = 0;
              goto LABEL_36;
            }
          }
          v3[*v6] = 1;
LABEL_34:
          if (v3[*v6]) {
            LODWORD(v20) = 0;
          }
LABEL_36:
          *(_DWORD *)(a1 + 16) = v20;
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_41;
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v28 = v3[*v6] == 0;
  }
  else
  {
LABEL_41:
    BOOL v28 = 0;
  }
  objc_sync_exit(v3);

  return v28;
}

void sub_1899C9124(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchStringGeoTypesPairReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 52);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 48)];
  char v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  int v10 = ((*(unsigned __int8 *)(a1 + 60) >> 1) & 1) + (*(unsigned char *)(a1 + 60) & 1);
  while (1)
  {
    unsigned int v11 = a3[v9];
    if (v11 >= 0xFFFFFFFE)
    {
      char v7 = 1;
      goto LABEL_9;
    }
    if (v11 != -3) {
      break;
    }
    char v8 = 1;
LABEL_9:
    ++v9;
  }
  if (v11)
  {
    ++v10;
    goto LABEL_9;
  }
  BOOL v12 = (v7 & 1 | v10) != 0;
  if (((v7 & 1 | v10) != 0) | v8 & 1) {
    unint64_t v13 = 0;
  }
  else {
    unint64_t v13 = a3;
  }
  char v14 = (int *)MEMORY[0x1E4F940E8];
  BOOL v15 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(v3 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(v3 + *v6))
  {
LABEL_81:
    if (v12)
    {
      char v52 = 1;
      goto LABEL_83;
    }
    if (!v13) {
      goto LABEL_94;
    }
    while (1)
    {
      int v54 = *v13++;
      int v53 = v54;
      if (v54 == 1) {
        break;
      }
      if (v53 == 2)
      {
        char v55 = 1;
LABEL_93:
        *(unsigned char *)(a1 + 60) |= v55;
      }
      else if (!v53)
      {
        goto LABEL_94;
      }
    }
    char v55 = 2;
    goto LABEL_93;
  }
  if (v13) {
    BOOL v16 = (v7 & 1 | v10) != 0;
  }
  else {
    BOOL v16 = 1;
  }
  BOOL v58 = v16;
  long long v17 = (int *)MEMORY[0x1E4F940B8];
  while (1)
  {
    if (*(unsigned char *)(v3 + *v15)) {
      goto LABEL_81;
    }
    char v18 = 0;
    unsigned int v19 = 0;
    unint64_t v20 = 0;
    while (1)
    {
      uint64_t v21 = *v14;
      uint64_t v22 = *(void *)(v3 + v21);
      unint64_t v23 = v22 + 1;
      if (v22 == -1 || v23 > *(void *)(v3 + *v6)) {
        break;
      }
      char v24 = *(unsigned char *)(*(void *)(v3 + *v17) + v22);
      *(void *)(v3 + v21) = v23;
      v20 |= (unint64_t)(v24 & 0x7F) << v18;
      if ((v24 & 0x80) == 0) {
        goto LABEL_27;
      }
      v18 += 7;
      BOOL v25 = v19++ >= 9;
      if (v25)
      {
        unint64_t v20 = 0;
        int v26 = *(unsigned __int8 *)(v3 + *v15);
        goto LABEL_29;
      }
    }
    *(unsigned char *)(v3 + *v15) = 1;
LABEL_27:
    int v26 = *(unsigned __int8 *)(v3 + *v15);
    if (*(unsigned char *)(v3 + *v15)) {
      unint64_t v20 = 0;
    }
LABEL_29:
    int v27 = v20 & 7;
    if (v26 || v27 == 4) {
      goto LABEL_81;
    }
    unint64_t v29 = v20 >> 3;
    BOOL v30 = v12;
    if (!v58)
    {
      BOOL v31 = v13;
      do
      {
        int v33 = *v31++;
        int v32 = v33;
        BOOL v30 = v33 != 0;
        if (v33) {
          BOOL v34 = v32 == v29;
        }
        else {
          BOOL v34 = 1;
        }
      }
      while (!v34);
    }
    if (v29 != 2) {
      break;
    }
    if (!v30 || (*(unsigned char *)(a1 + 60) & 1) != 0)
    {
LABEL_62:
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        goto LABEL_97;
      }
      goto LABEL_63;
    }
    if (v27 == 2)
    {
      if (!PBReaderPlaceMark()) {
        goto LABEL_97;
      }
      while (*(void *)(v3 + *v14) < *(void *)(v3 + *v6) && !*(unsigned char *)(v3 + *v15))
      {
        char v37 = 0;
        unsigned int v38 = 0;
        uint64_t v39 = 0;
        while (1)
        {
          uint64_t v40 = *v14;
          uint64_t v41 = *(void *)(v3 + v40);
          unint64_t v42 = v41 + 1;
          if (v41 == -1 || v42 > *(void *)(v3 + *v6)) {
            break;
          }
          char v43 = *(unsigned char *)(*(void *)(v3 + *v17) + v41);
          *(void *)(v3 + v40) = v42;
          v39 |= (unint64_t)(v43 & 0x7F) << v37;
          if (v43 < 0)
          {
            v37 += 7;
            BOOL v25 = v38++ >= 9;
            if (!v25) {
              continue;
            }
          }
          goto LABEL_59;
        }
        *(unsigned char *)(v3 + *v15) = 1;
LABEL_59:
        PBRepeatedInt32Add();
      }
      PBReaderRecallMark();
    }
    else
    {
      char v45 = 0;
      unsigned int v46 = 0;
      uint64_t v47 = 0;
      while (1)
      {
        uint64_t v48 = *v14;
        uint64_t v49 = *(void *)(v3 + v48);
        unint64_t v50 = v49 + 1;
        if (v49 == -1 || v50 > *(void *)(v3 + *v6)) {
          break;
        }
        char v51 = *(unsigned char *)(*(void *)(v3 + *v17) + v49);
        *(void *)(v3 + v48) = v50;
        v47 |= (unint64_t)(v51 & 0x7F) << v45;
        if (v51 < 0)
        {
          v45 += 7;
          BOOL v25 = v46++ >= 9;
          if (!v25) {
            continue;
          }
        }
        goto LABEL_80;
      }
      *(unsigned char *)(v3 + *v15) = 1;
LABEL_80:
      PBRepeatedInt32Add();
    }
LABEL_63:
    if (v9) {
      int v44 = 1;
    }
    else {
      int v44 = v12;
    }
    if (v44 != 1 || *(void *)(v3 + *v14) >= *(void *)(v3 + *v6)) {
      goto LABEL_81;
    }
  }
  if (v29 != 1)
  {
    if (!PBReaderSkipValueWithTag()) {
      goto LABEL_97;
    }
    goto LABEL_63;
  }
  if (!v30) {
    goto LABEL_62;
  }
  if ((*(unsigned char *)(a1 + 60) & 2) == 0)
  {
    uint64_t v35 = PBReaderReadString();
    char v36 = *(void **)(a1 + 40);
    *(void *)(a1 + 40) = v35;

    --v9;
    goto LABEL_63;
  }
  if (PBReaderSkipValueWithTag())
  {
    v9 += *(unsigned __int8 *)(a1 + 60) << 30 >> 31;
    goto LABEL_63;
  }
LABEL_97:
  char v52 = 0;
LABEL_83:
  *(unsigned char *)(a1 + 60) |= 2u;
  *(unsigned char *)(a1 + 60) |= 1u;
  if (v52)
  {
LABEL_94:
    unint64_t v3 = *(unsigned char *)(v3 + *v15) == 0;
    if (v12) {
      goto LABEL_95;
    }
    return v3;
  }
  unint64_t v3 = 0;
  if (!v12) {
    return v3;
  }
LABEL_95:
  unsigned int v56 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = 0;

  return v3;
}

void sub_1899C9C08(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1899C9CE4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchStringGeoTypesPairReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 52))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDSearchStringGeoTypesPairReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)int v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = [v8 position];
  *(_DWORD *)(a1 + 52) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOPDSearchStringGeoTypesPairReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOPDSearchStringGeoTypesPairReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDSearchStringGeoTypesPairReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_1899C9E74(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1899CA020(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1899CA174(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchStringStringPairReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 36);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 32)];
  char v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  int v10 = ((*(unsigned __int8 *)(a1 + 44) >> 1) & 1) + (*(unsigned char *)(a1 + 44) & 1);
  while (1)
  {
    unsigned int v11 = a3[v9];
    if (v11 >= 0xFFFFFFFE)
    {
      char v7 = 1;
      goto LABEL_9;
    }
    if (v11 != -3) {
      break;
    }
    char v8 = 1;
LABEL_9:
    ++v9;
  }
  if (v11)
  {
    ++v10;
    goto LABEL_9;
  }
  int v12 = v7 & 1 | v10;
  BOOL v13 = v12 != 0;
  if ((v12 != 0) | v8 & 1) {
    char v14 = 0;
  }
  else {
    char v14 = a3;
  }
  if (v12) {
    BOOL v15 = 1;
  }
  else {
    BOOL v15 = v14 == 0;
  }
  BOOL v16 = (int *)MEMORY[0x1E4F940E8];
  long long v17 = (int *)MEMORY[0x1E4F940C8];
  char v18 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(void *)(v3 + *v16) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v17)) {
      goto LABEL_62;
    }
    char v19 = 0;
    unsigned int v20 = 0;
    unint64_t v21 = 0;
    while (1)
    {
      uint64_t v22 = *v16;
      uint64_t v23 = *(void *)(v3 + v22);
      unint64_t v24 = v23 + 1;
      if (v23 == -1 || v24 > *(void *)(v3 + *v6)) {
        break;
      }
      char v25 = *(unsigned char *)(*(void *)(v3 + *v18) + v23);
      *(void *)(v3 + v22) = v24;
      v21 |= (unint64_t)(v25 & 0x7F) << v19;
      if ((v25 & 0x80) == 0) {
        goto LABEL_27;
      }
      v19 += 7;
      if (v20++ >= 9)
      {
        unint64_t v21 = 0;
        int v27 = *(unsigned __int8 *)(v3 + *v17);
        goto LABEL_29;
      }
    }
    *(unsigned char *)(v3 + *v17) = 1;
LABEL_27:
    int v27 = *(unsigned __int8 *)(v3 + *v17);
    if (*(unsigned char *)(v3 + *v17)) {
      unint64_t v21 = 0;
    }
LABEL_29:
    if (v27 || (v21 & 7) == 4)
    {
LABEL_62:
      if (v13)
      {
        char v41 = 1;
        goto LABEL_72;
      }
      if (v14)
      {
        do
        {
          while (1)
          {
            int v43 = *v14++;
            int v42 = v43;
            if (v43 != 1 && v42 != 2) {
              break;
            }
            *(unsigned char *)(a1 + 44) |= v42;
          }
        }
        while (v42);
      }
      goto LABEL_73;
    }
    unint64_t v29 = v21 >> 3;
    BOOL v30 = v13;
    if (!v15)
    {
      BOOL v31 = v14;
      do
      {
        int v33 = *v31++;
        int v32 = v33;
        BOOL v30 = v33 != 0;
        if (v33) {
          BOOL v34 = v32 == v29;
        }
        else {
          BOOL v34 = 1;
        }
      }
      while (!v34);
    }
    if (v29 != 2)
    {
      if (v29 != 1)
      {
        int v38 = PBReaderSkipValueWithTag();
        long long v17 = (int *)MEMORY[0x1E4F940C8];
        if (!v38) {
          goto LABEL_70;
        }
        goto LABEL_58;
      }
      if (v30)
      {
        if ((*(unsigned char *)(a1 + 44) & 1) == 0)
        {
          uint64_t v35 = PBReaderReadString();
          uint64_t v36 = 16;
          goto LABEL_48;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_71;
        }
        v9 -= *(unsigned char *)(a1 + 44) & 1;
LABEL_57:
        long long v17 = (int *)MEMORY[0x1E4F940C8];
LABEL_58:
        if (v9) {
          char v40 = 1;
        }
        else {
          char v40 = v13;
        }
        if ((v40 & 1) == 0) {
          goto LABEL_62;
        }
        continue;
      }
LABEL_51:
      char v39 = PBReaderSkipValueWithTag();
      long long v17 = (int *)MEMORY[0x1E4F940C8];
      if ((v39 & 1) == 0)
      {
LABEL_70:
        char v41 = 0;
        goto LABEL_72;
      }
      goto LABEL_58;
    }
    break;
  }
  if (!v30) {
    goto LABEL_51;
  }
  if ((*(unsigned char *)(a1 + 44) & 2) == 0)
  {
    uint64_t v35 = PBReaderReadString();
    uint64_t v36 = 24;
LABEL_48:
    char v37 = *(void **)(a1 + v36);
    *(void *)(a1 + v36) = v35;

    long long v17 = (int *)MEMORY[0x1E4F940C8];
    --v9;
    goto LABEL_58;
  }
  if (PBReaderSkipValueWithTag())
  {
    v9 += *(unsigned __int8 *)(a1 + 44) << 30 >> 31;
    goto LABEL_57;
  }
LABEL_71:
  char v41 = 0;
  long long v17 = (int *)MEMORY[0x1E4F940C8];
LABEL_72:
  *(unsigned char *)(a1 + 44) |= 1u;
  *(unsigned char *)(a1 + 44) |= 2u;
  if (v41)
  {
LABEL_73:
    unint64_t v3 = *(unsigned char *)(v3 + *v17) == 0;
    if (!v13) {
      return v3;
    }
    goto LABEL_74;
  }
  unint64_t v3 = 0;
  if (v13)
  {
LABEL_74:
    int v44 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_1899CA9A8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1899CAA84(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchStringStringPairReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 36))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDSearchStringStringPairReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)int v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 40));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 32) = [v8 position];
  *(_DWORD *)(a1 + 36) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOPDSearchStringStringPairReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOPDSearchStringStringPairReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDSearchStringStringPairReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return Specified;
}

void sub_1899CAD80(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1899CAF00(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSearchStringStringPairIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  BOOL v2 = (*(unsigned char *)(a1 + 44) & 7) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return v2;
}

void sub_1899CB0C8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchStructuredAttributeReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 36);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 32)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  int v11 = ((*(unsigned __int8 *)(a1 + 48) >> 1) & 1) + ((*(unsigned __int8 *)(a1 + 48) >> 2) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v7])
    {
      case -3:
        char v8 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        int v14 = v10 & 1 | v11;
        if ((v14 != 0) | v8 & 1) {
          BOOL v15 = 0;
        }
        else {
          BOOL v15 = a3;
        }
        BOOL v16 = v14 != 0;
        if (v14) {
          BOOL v17 = 1;
        }
        else {
          BOOL v17 = v15 == 0;
        }
        BOOL v56 = v17;
        char v18 = (int *)MEMORY[0x1E4F940E8];
        char v19 = (int *)MEMORY[0x1E4F940C8];
        unsigned int v20 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v11;
LABEL_6:
        uint64_t v12 = v9;
        uint64_t v13 = v10;
LABEL_8:
        ++v7;
        uint64_t v9 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v18) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v19)) {
      goto LABEL_76;
    }
    char v21 = 0;
    unsigned int v22 = 0;
    unint64_t v23 = 0;
    while (1)
    {
      uint64_t v24 = *v18;
      uint64_t v25 = *(void *)(v3 + v24);
      unint64_t v26 = v25 + 1;
      if (v25 == -1 || v26 > *(void *)(v3 + *v6)) {
        break;
      }
      char v27 = *(unsigned char *)(*(void *)(v3 + *v20) + v25);
      *(void *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0) {
        goto LABEL_26;
      }
      v21 += 7;
      BOOL v28 = v22++ >= 9;
      if (v28)
      {
        unint64_t v23 = 0;
        int v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_28;
      }
    }
    *(unsigned char *)(v3 + *v19) = 1;
LABEL_26:
    int v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(unsigned char *)(v3 + *v19)) {
      unint64_t v23 = 0;
    }
LABEL_28:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_76:
      if (v16)
      {
        char v49 = 1;
        goto LABEL_91;
      }
      if (!v15) {
        goto LABEL_92;
      }
      while (1)
      {
        int v52 = *v15++;
        int v51 = v52;
        if (v52 == 1) {
          break;
        }
        if (v51 == 3)
        {
          char v50 = 4;
LABEL_82:
          *(unsigned char *)(a1 + 48) |= v50;
        }
        else if (!v51)
        {
          goto LABEL_92;
        }
      }
      char v50 = 2;
      goto LABEL_82;
    }
    unint64_t v31 = v23 >> 3;
    BOOL v32 = v16;
    if (!v56)
    {
      int v33 = v15;
      do
      {
        int v35 = *v33++;
        int v34 = v35;
        BOOL v32 = v35 != 0;
        if (v35) {
          BOOL v36 = v34 == v31;
        }
        else {
          BOOL v36 = 1;
        }
      }
      while (!v36);
    }
    if (v31 == 3) {
      break;
    }
    if (v31 == 2)
    {
      if (v8)
      {
        char v39 = 0;
        unsigned int v40 = 0;
        uint64_t v41 = 0;
        *(unsigned char *)(a1 + 48) |= 1u;
        while (1)
        {
          uint64_t v42 = *v18;
          uint64_t v43 = *(void *)(v3 + v42);
          unint64_t v44 = v43 + 1;
          if (v43 == -1 || v44 > *(void *)(v3 + *v6)) {
            break;
          }
          char v45 = *(unsigned char *)(*(void *)(v3 + *v20) + v43);
          *(void *)(v3 + v42) = v44;
          v41 |= (unint64_t)(v45 & 0x7F) << v39;
          if ((v45 & 0x80) == 0) {
            goto LABEL_66;
          }
          v39 += 7;
          BOOL v28 = v40++ >= 9;
          if (v28)
          {
            LODWORD(v41) = 0;
            goto LABEL_68;
          }
        }
        *(unsigned char *)(v3 + *v19) = 1;
LABEL_66:
        if (*(unsigned char *)(v3 + *v19)) {
          LODWORD(v41) = 0;
        }
LABEL_68:
        *(_DWORD *)(a1 + 44) = v41;
        goto LABEL_72;
      }
    }
    else
    {
      if (v31 != 1)
      {
        int v46 = PBReaderSkipValueWithTag();
        char v19 = (int *)MEMORY[0x1E4F940C8];
        if (!v46) {
          goto LABEL_87;
        }
        goto LABEL_72;
      }
      if (v32)
      {
        if ((*(unsigned char *)(a1 + 48) & 2) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_88:
            char v49 = 0;
            goto LABEL_90;
          }
          v7 += *(unsigned __int8 *)(a1 + 48) << 30 >> 31;
        }
        else
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_88;
          }
          BOOL v55 = v16;
          char v37 = objc_alloc_init(GEOPDSearchAttribute);
          if (!GEOPDSearchAttributeReadAllFrom((uint64_t)v37, (void *)v3, v9 & 1)) {
            goto LABEL_89;
          }
          PBReaderRecallMark();
          int v38 = *(void **)(a1 + 16);
          *(void *)(a1 + 16) = v37;

          --v7;
LABEL_52:
          BOOL v16 = v55;
        }
        char v19 = (int *)MEMORY[0x1E4F940C8];
        goto LABEL_72;
      }
    }
LABEL_63:
    char v47 = PBReaderSkipValueWithTag();
    char v19 = (int *)MEMORY[0x1E4F940C8];
    if ((v47 & 1) == 0)
    {
LABEL_87:
      char v49 = 0;
      goto LABEL_91;
    }
LABEL_72:
    if (v7) {
      char v48 = 1;
    }
    else {
      char v48 = v16;
    }
    if ((v48 & 1) == 0) {
      goto LABEL_76;
    }
  }
  if (!v32 || (*(unsigned char *)(a1 + 48) & 4) != 0) {
    goto LABEL_63;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_88;
  }
  BOOL v55 = v16;
  char v37 = objc_alloc_init(GEOPDSearchStructuredAttribute);
  if (GEOPDSearchStructuredAttributeReadAllFrom())
  {
    PBReaderRecallMark();
    -[GEOPDSearchStructuredAttribute _addNoFlagsNestedAttribute:](a1, v37);

    goto LABEL_52;
  }
LABEL_89:

  char v49 = 0;
  BOOL v16 = v55;
LABEL_90:
  char v19 = (int *)MEMORY[0x1E4F940C8];
LABEL_91:
  *(unsigned char *)(a1 + 48) |= 2u;
  *(unsigned char *)(a1 + 48) |= 4u;
  if (v49)
  {
LABEL_92:
    unint64_t v3 = *(unsigned char *)(v3 + *v19) == 0;
    if (v16) {
      goto LABEL_93;
    }
  }
  else
  {
    unint64_t v3 = 0;
    if (v16)
    {
LABEL_93:
      int v53 = *(void **)(a1 + 8);
      *(void *)(a1 + 8) = 0;
    }
  }
  return v3;
}

void sub_1899CB964(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1899CBDAC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1899CBE9C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDSearchStructuredAttributeCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  -[GEOPDSearchAttribute readAll:](*(void *)(a1 + 16), 1);
  long long v9 = 0u;
  long long v10 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  id v2 = *(id *)(a1 + 24);
  uint64_t v3 = [v2 countByEnumeratingWithState:&v7 objects:v11 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v8;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v8 != v5) {
          objc_enumerationMutation(v2);
        }
        -[GEOPDSearchStructuredAttribute readAll:](*(void *)(*((void *)&v7 + 1) + 8 * v6++), 1);
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v7 objects:v11 count:16];
    }
    while (v4);
  }
}

unint64_t GEOPDSearchStructuredAttributeReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 36))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDSearchStructuredAttributeReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)long long v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 40));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 32) = [v8 position];
  *(_DWORD *)(a1 + 36) = [v8 length];
  if (a3) {
    long long v9 = (int *)&GEOPDSearchStructuredAttributeReadAllFrom_recursiveTag;
  }
  else {
    long long v9 = (int *)&GEOPDSearchStructuredAttributeReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDSearchStructuredAttributeReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOPDSearchStructuredAttributeCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return Specified;
}

void sub_1899CCA34(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1899CCC78(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDSearchStructuredAttributeIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  unsigned int v2 = *(unsigned __int8 *)(a1 + 48);
  if ((v2 & 8) != 0) {
    return 1;
  }
  if ((v2 & 2) != 0)
  {
    uint64_t v3 = *(os_unfair_lock_s **)(a1 + 16);
    if (v3)
    {
      os_unfair_lock_lock_with_options();
      char IsDirty = _GEOPDSearchAttributeIsDirty((uint64_t)v3);
      os_unfair_lock_unlock(v3 + 14);
      if (IsDirty) {
        return 1;
      }
      unsigned int v2 = *(unsigned __int8 *)(a1 + 48);
    }
  }
  return (v2 >> 2) & 1;
}

void sub_1899CCF80(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchSynonymReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  unsigned int v11 = ((*(unsigned __int8 *)(a1 + 60) >> 2) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 4) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 3) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v7])
    {
      case -3:
        char v8 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        int v14 = v10 | (v11 > 1);
        if ((v14 | v8)) {
          BOOL v15 = 0;
        }
        else {
          BOOL v15 = a3;
        }
        LODWORD(v16) = v14;
        BOOL v17 = (int *)MEMORY[0x1E4F940E8];
        char v56 = (v15 == 0) | v14;
        char v18 = (int *)MEMORY[0x1E4F940C8];
        char v19 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v11;
LABEL_6:
        uint64_t v12 = v9;
        uint64_t v13 = v10;
LABEL_8:
        ++v7;
        uint64_t v9 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v17) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v18)) {
      goto LABEL_77;
    }
    char v20 = 0;
    unsigned int v21 = 0;
    unint64_t v22 = 0;
    while (1)
    {
      uint64_t v23 = *v17;
      uint64_t v24 = *(void *)(v3 + v23);
      unint64_t v25 = v24 + 1;
      if (v24 == -1 || v25 > *(void *)(v3 + *v6)) {
        break;
      }
      char v26 = *(unsigned char *)(*(void *)(v3 + *v19) + v24);
      *(void *)(v3 + v23) = v25;
      v22 |= (unint64_t)(v26 & 0x7F) << v20;
      if ((v26 & 0x80) == 0) {
        goto LABEL_23;
      }
      v20 += 7;
      BOOL v27 = v21++ >= 9;
      if (v27)
      {
        unint64_t v22 = 0;
        int v28 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_25;
      }
    }
    *(unsigned char *)(v3 + *v18) = 1;
LABEL_23:
    int v28 = *(unsigned __int8 *)(v3 + *v18);
    if (*(unsigned char *)(v3 + *v18)) {
      unint64_t v22 = 0;
    }
LABEL_25:
    if (v28 || (v22 & 7) == 4)
    {
LABEL_77:
      if (v16)
      {
        char v50 = 1;
        goto LABEL_89;
      }
      if (v15)
      {
        while (1)
        {
          int v52 = *v15++;
          char v51 = 4;
          switch(v52)
          {
            case 0:
              goto LABEL_90;
            case 2:
              goto LABEL_83;
            case 4:
              char v51 = 16;
              goto LABEL_83;
            case 5:
              char v51 = 8;
LABEL_83:
              *(unsigned char *)(a1 + 60) |= v51;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_90;
    }
    unint64_t v30 = v22 >> 3;
    BOOL v31 = (char)v16;
    if ((v56 & 1) == 0)
    {
      BOOL v32 = v15;
      do
      {
        int v34 = *v32++;
        int v33 = v34;
        BOOL v31 = v34 != 0;
        if (v34) {
          BOOL v35 = v33 == v30;
        }
        else {
          BOOL v35 = 1;
        }
      }
      while (!v35);
    }
    switch((int)v30)
    {
      case 1:
        if ((v8 & 1) == 0) {
          goto LABEL_65;
        }
        *(unsigned char *)(a1 + 60) |= 1u;
        uint64_t v36 = *v17;
        unint64_t v37 = *(void *)(v3 + v36);
        if (v37 <= 0xFFFFFFFFFFFFFFFBLL && v37 + 4 <= *(void *)(v3 + *v6))
        {
          int v38 = *(_DWORD *)(*(void *)(v3 + *v19) + v37);
          *(void *)(v3 + v36) = v37 + 4;
        }
        else
        {
          *(unsigned char *)(v3 + *v18) = 1;
          int v38 = 0;
        }
        *(_DWORD *)(a1 + 52) = v38;
        goto LABEL_76;
      case 2:
        if (!v31 || (*(unsigned char *)(a1 + 60) & 4) != 0) {
          goto LABEL_65;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_86;
        }
        int v55 = (int)v16;
        BOOL v16 = objc_alloc_init(GEOPDSearchPair);
        if (!GEOPDSearchPairReadAllFrom((uint64_t)v16, (void *)v3)) {
          goto LABEL_87;
        }
        PBReaderRecallMark();
        -[GEOPDSearchSynonym _addNoFlagsSynFeatureMap:](a1, v16);
        goto LABEL_61;
      case 3:
        if ((v8 & 1) == 0) {
          goto LABEL_65;
        }
        char v40 = 0;
        unsigned int v41 = 0;
        uint64_t v42 = 0;
        *(unsigned char *)(a1 + 60) |= 2u;
        while (2)
        {
          uint64_t v43 = *v17;
          uint64_t v44 = *(void *)(v3 + v43);
          unint64_t v45 = v44 + 1;
          if (v44 == -1 || v45 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v46 = *(unsigned char *)(*(void *)(v3 + *v19) + v44);
            *(void *)(v3 + v43) = v45;
            v42 |= (unint64_t)(v46 & 0x7F) << v40;
            if (v46 < 0)
            {
              v40 += 7;
              BOOL v27 = v41++ >= 9;
              if (v27)
              {
                LODWORD(v42) = 0;
                goto LABEL_70;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          LODWORD(v42) = 0;
        }
LABEL_70:
        *(_DWORD *)(a1 + 56) = v42;
        goto LABEL_76;
      case 4:
        if (!v31 || (*(unsigned char *)(a1 + 60) & 0x10) != 0) {
          goto LABEL_65;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_86;
        }
        int v55 = (int)v16;
        BOOL v16 = objc_alloc_init(GEOPDSearchStringStringPair);
        if (GEOPDSearchStringStringPairReadAllFrom((uint64_t)v16, (void *)v3, v9 & 1))
        {
          PBReaderRecallMark();
          -[GEOPDSearchSynonym _addNoFlagsTokenList:](a1, v16);
LABEL_61:

          LODWORD(v16) = v55;
LABEL_73:
          char v18 = (int *)MEMORY[0x1E4F940C8];
LABEL_76:
          if (!(v16 & 1 | (v7 != 0))) {
            goto LABEL_77;
          }
          continue;
        }
LABEL_87:

        char v50 = 0;
        LOBYTE(v16) = v55;
LABEL_88:
        char v18 = (int *)MEMORY[0x1E4F940C8];
LABEL_89:
        *(unsigned char *)(a1 + 60) |= 4u;
        *(unsigned char *)(a1 + 60) |= 0x10u;
        *(unsigned char *)(a1 + 60) |= 8u;
        if (v50)
        {
LABEL_90:
          unint64_t v3 = *(unsigned char *)(v3 + *v18) == 0;
          if (v16) {
            goto LABEL_91;
          }
        }
        else
        {
          unint64_t v3 = 0;
          if (v16)
          {
LABEL_91:
            int v53 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = 0;
          }
        }
        return v3;
      case 5:
        if (v31)
        {
          if ((*(unsigned char *)(a1 + 60) & 8) != 0)
          {
            if ((PBReaderSkipValueWithTag() & 1) == 0)
            {
LABEL_86:
              char v50 = 0;
              goto LABEL_88;
            }
            v7 += *(unsigned __int8 *)(a1 + 60) << 28 >> 31;
          }
          else
          {
            uint64_t v47 = PBReaderReadString();
            char v48 = *(void **)(a1 + 24);
            *(void *)(a1 + 24) = v47;

            --v7;
          }
          goto LABEL_73;
        }
LABEL_65:
        char v49 = PBReaderSkipValueWithTag();
        char v18 = (int *)MEMORY[0x1E4F940C8];
        if ((v49 & 1) == 0)
        {
LABEL_85:
          char v50 = 0;
          goto LABEL_89;
        }
        goto LABEL_76;
      default:
        int v39 = PBReaderSkipValueWithTag();
        char v18 = (int *)MEMORY[0x1E4F940C8];
        if (!v39) {
          goto LABEL_85;
        }
        goto LABEL_76;
    }
  }
}

void sub_1899CD9AC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1899CDB3C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1899CE0E0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1899CE1D0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDSearchSynonymCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v21 = *MEMORY[0x1E4F143B8];
  long long v15 = 0u;
  long long v16 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  id v2 = *(id *)(a1 + 16);
  uint64_t v3 = [v2 countByEnumeratingWithState:&v15 objects:v20 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v16;
    while (1)
    {
      if (*(void *)v16 != v5) {
        objc_enumerationMutation(v2);
      }
      if (!--v4)
      {
        uint64_t v4 = [v2 countByEnumeratingWithState:&v15 objects:v20 count:16];
        if (!v4) {
          break;
        }
      }
    }
  }

  long long v13 = 0u;
  long long v14 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  id v6 = *(id *)(a1 + 32);
  uint64_t v7 = [v6 countByEnumeratingWithState:&v11 objects:v19 count:16];
  if (v7)
  {
    uint64_t v8 = v7;
    uint64_t v9 = *(void *)v12;
    do
    {
      uint64_t v10 = 0;
      do
      {
        if (*(void *)v12 != v9) {
          objc_enumerationMutation(v6);
        }
        -[GEOPDSearchStringStringPair readAll:](*(void *)(*((void *)&v11 + 1) + 8 * v10++), 1);
      }
      while (v8 != v10);
      uint64_t v8 = [v6 countByEnumeratingWithState:&v11 objects:v19 count:16];
    }
    while (v8);
  }
}

unint64_t GEOPDSearchSynonymReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDSearchSynonymReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOPDSearchSynonymReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOPDSearchSynonymReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDSearchSynonymReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOPDSearchSynonymCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_1899CE4E8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1899CE7F4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1899CEB2C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSearchTokenImportanceReadAllFrom(uint64_t a1, void *a2)
{
  uint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    id v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 2)
        {
          *(unsigned char *)(a1 + 20) |= 1u;
          uint64_t v20 = *v4;
          unint64_t v21 = *(void *)&v3[v20];
          if (v21 <= 0xFFFFFFFFFFFFFFFBLL && v21 + 4 <= *(void *)&v3[*v5])
          {
            int v22 = *(_DWORD *)(*(void *)&v3[*v7] + v21);
            *(void *)&v3[v20] = v21 + 4;
          }
          else
          {
            v3[*v6] = 1;
            int v22 = 0;
          }
          *(_DWORD *)(a1 + 16) = v22;
        }
        else if ((v10 >> 3) == 1)
        {
          uint64_t v18 = PBReaderReadString();
          char v19 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = v18;
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_31;
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v23 = v3[*v6] == 0;
  }
  else
  {
LABEL_31:
    BOOL v23 = 0;
  }
  objc_sync_exit(v3);

  return v23;
}

void sub_1899CF1AC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDSearchTokenSynonymMetadataReadAllFrom(uint64_t a1, void *a2, int a3)
{
  uint64_t v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    id v6 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v7 = (int *)MEMORY[0x1E4F940E0];
    char v8 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v5[*MEMORY[0x1E4F940E8]] < *(void *)&v5[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v9 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v5[*v8]) {
          break;
        }
        char v10 = 0;
        unsigned int v11 = 0;
        unint64_t v12 = 0;
        while (1)
        {
          uint64_t v13 = *v6;
          uint64_t v14 = *(void *)&v5[v13];
          unint64_t v15 = v14 + 1;
          if (v14 == -1 || v15 > *(void *)&v5[*v7]) {
            break;
          }
          char v16 = *(unsigned char *)(*(void *)&v5[*v9] + v14);
          *(void *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0) {
            goto LABEL_13;
          }
          v10 += 7;
          if (v11++ >= 9)
          {
            unint64_t v12 = 0;
            int v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        int v18 = v5[*v8];
        if (v5[*v8]) {
          unint64_t v12 = 0;
        }
LABEL_15:
        if (v18 || (v12 & 7) == 4) {
          break;
        }
        if ((v12 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_27;
          }
          uint64_t v20 = objc_alloc_init(GEOPDSearchSynonym);
          if (!GEOPDSearchSynonymReadAllFrom((uint64_t)v20, v5, a3))
          {

            goto LABEL_27;
          }
          PBReaderRecallMark();
          -[GEOPDSearchTokenSynonymMetadata addSynonymList:](a1, v20);
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_27;
        }
      }
      while (*(void *)&v5[*v6] < *(void *)&v5[*v7]);
    }
    BOOL v21 = v5[*v8] == 0;
  }
  else
  {
LABEL_27:
    BOOL v21 = 0;
  }
  objc_sync_exit(v5);

  return v21;
}

void sub_1899CF970(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchTransitIntentReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  id v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  int v11 = ((*(unsigned __int8 *)(a1 + 56) >> 2) & 1) + ((*(unsigned __int8 *)(a1 + 56) >> 3) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v9])
    {
      case -3:
        char v8 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v12 = v7;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        int v14 = v10 & 1 | v11;
        if ((v14 != 0) | v8 & 1) {
          unint64_t v15 = 0;
        }
        else {
          unint64_t v15 = a3;
        }
        BOOL v16 = v14 != 0;
        long long v17 = (int *)MEMORY[0x1E4F940E8];
        if (v14) {
          BOOL v18 = 1;
        }
        else {
          BOOL v18 = v15 == 0;
        }
        BOOL v66 = v18;
        char v19 = (int *)MEMORY[0x1E4F940C8];
        uint64_t v20 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v11;
LABEL_6:
        uint64_t v12 = v7;
        uint64_t v13 = v10;
LABEL_8:
        ++v9;
        uint64_t v7 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v17) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v19)) {
      goto LABEL_86;
    }
    char v21 = 0;
    unsigned int v22 = 0;
    unint64_t v23 = 0;
    while (1)
    {
      uint64_t v24 = *v17;
      uint64_t v25 = *(void *)(v3 + v24);
      unint64_t v26 = v25 + 1;
      if (v25 == -1 || v26 > *(void *)(v3 + *v6)) {
        break;
      }
      char v27 = *(unsigned char *)(*(void *)(v3 + *v20) + v25);
      *(void *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0) {
        goto LABEL_26;
      }
      v21 += 7;
      BOOL v28 = v22++ >= 9;
      if (v28)
      {
        unint64_t v23 = 0;
        int v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_28;
      }
    }
    *(unsigned char *)(v3 + *v19) = 1;
LABEL_26:
    int v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(unsigned char *)(v3 + *v19)) {
      unint64_t v23 = 0;
    }
LABEL_28:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_86:
      if (v16)
      {
        char v59 = 1;
        goto LABEL_100;
      }
      if (!v15) {
        goto LABEL_101;
      }
      while (1)
      {
        int v61 = *v15++;
        int v60 = v61;
        if (v61 == 1) {
          break;
        }
        if (v60 == 2)
        {
          char v62 = 8;
LABEL_95:
          *(unsigned char *)(a1 + 56) |= v62;
        }
        else if (!v60)
        {
          goto LABEL_101;
        }
      }
      char v62 = 4;
      goto LABEL_95;
    }
    unint64_t v31 = v23 >> 3;
    BOOL v32 = v16;
    if (!v66)
    {
      int v33 = v15;
      do
      {
        int v35 = *v33++;
        int v34 = v35;
        BOOL v32 = v35 != 0;
        if (v35) {
          BOOL v36 = v34 == v31;
        }
        else {
          BOOL v36 = 1;
        }
      }
      while (!v36);
    }
    switch((int)v31)
    {
      case 1:
        if (!v32) {
          goto LABEL_66;
        }
        if ((*(unsigned char *)(a1 + 56) & 4) == 0)
        {
          uint64_t v37 = PBReaderReadString();
          int v38 = *(void **)(a1 + 16);
          *(void *)(a1 + 16) = v37;

          --v9;
          goto LABEL_81;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_97;
        }
        char v57 = 32 * *(unsigned char *)(a1 + 56);
        goto LABEL_80;
      case 2:
        if (!v32) {
          goto LABEL_66;
        }
        if ((*(unsigned char *)(a1 + 56) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_97:
            char v59 = 0;
            goto LABEL_99;
          }
          char v57 = 16 * *(unsigned char *)(a1 + 56);
LABEL_80:
          v9 += v57 >> 7;
          goto LABEL_81;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_97;
        }
        BOOL v65 = v16;
        char v40 = objc_alloc_init(GEOPDSearchTokenSet);
        if (GEOPDSearchTokenSetReadAllFrom((uint64_t)v40, (void *)v3, v7 & 1))
        {
          PBReaderRecallMark();
          unsigned int v41 = *(void **)(a1 + 24);
          *(void *)(a1 + 24) = v40;

          --v9;
          BOOL v16 = v65;
LABEL_81:
          char v19 = (int *)MEMORY[0x1E4F940C8];
LABEL_82:
          if (v9) {
            char v58 = 1;
          }
          else {
            char v58 = v16;
          }
          if ((v58 & 1) == 0) {
            goto LABEL_86;
          }
          continue;
        }

        char v59 = 0;
        BOOL v16 = v65;
LABEL_99:
        char v19 = (int *)MEMORY[0x1E4F940C8];
LABEL_100:
        *(unsigned char *)(a1 + 56) |= 4u;
        *(unsigned char *)(a1 + 56) |= 8u;
        if (v59)
        {
LABEL_101:
          unint64_t v3 = *(unsigned char *)(v3 + *v19) == 0;
          if (v16) {
            goto LABEL_102;
          }
        }
        else
        {
          unint64_t v3 = 0;
          if (v16)
          {
LABEL_102:
            unsigned int v63 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = 0;
          }
        }
        return v3;
      case 3:
        if ((v8 & 1) == 0) {
          goto LABEL_66;
        }
        char v42 = 0;
        unsigned int v43 = 0;
        uint64_t v44 = 0;
        *(unsigned char *)(a1 + 56) |= 1u;
        while (2)
        {
          uint64_t v45 = *v17;
          uint64_t v46 = *(void *)(v3 + v45);
          unint64_t v47 = v46 + 1;
          if (v46 == -1 || v47 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v19) = 1;
          }
          else
          {
            char v48 = *(unsigned char *)(*(void *)(v3 + *v20) + v46);
            *(void *)(v3 + v45) = v47;
            v44 |= (unint64_t)(v48 & 0x7F) << v42;
            if (v48 < 0)
            {
              v42 += 7;
              BOOL v28 = v43++ >= 9;
              if (v28)
              {
                uint64_t v44 = 0;
                goto LABEL_71;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v19)) {
          uint64_t v44 = 0;
        }
LABEL_71:
        *(void *)(a1 + 32) = v44;
        goto LABEL_82;
      case 4:
        if (v8)
        {
          char v49 = 0;
          unsigned int v50 = 0;
          uint64_t v51 = 0;
          *(unsigned char *)(a1 + 56) |= 2u;
          while (1)
          {
            uint64_t v52 = *v17;
            uint64_t v53 = *(void *)(v3 + v52);
            unint64_t v54 = v53 + 1;
            if (v53 == -1 || v54 > *(void *)(v3 + *v6)) {
              break;
            }
            char v55 = *(unsigned char *)(*(void *)(v3 + *v20) + v53);
            *(void *)(v3 + v52) = v54;
            v51 |= (unint64_t)(v55 & 0x7F) << v49;
            if ((v55 & 0x80) == 0) {
              goto LABEL_73;
            }
            v49 += 7;
            BOOL v28 = v50++ >= 9;
            if (v28)
            {
              LODWORD(v51) = 0;
              goto LABEL_75;
            }
          }
          *(unsigned char *)(v3 + *v19) = 1;
LABEL_73:
          if (*(unsigned char *)(v3 + *v19)) {
            LODWORD(v51) = 0;
          }
LABEL_75:
          *(_DWORD *)(a1 + 52) = v51;
        }
        else
        {
LABEL_66:
          char v56 = PBReaderSkipValueWithTag();
          char v19 = (int *)MEMORY[0x1E4F940C8];
          if ((v56 & 1) == 0)
          {
LABEL_96:
            char v59 = 0;
            goto LABEL_100;
          }
        }
        goto LABEL_82;
      default:
        int v39 = PBReaderSkipValueWithTag();
        char v19 = (int *)MEMORY[0x1E4F940C8];
        if (!v39) {
          goto LABEL_96;
        }
        goto LABEL_82;
    }
  }
}

void sub_1899D06B4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1899D07AC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchTransitIntentReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDSearchTransitIntentReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOPDSearchTransitIntentReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOPDSearchTransitIntentReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDSearchTransitIntentReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    -[GEOPDSearchTokenSet readAll:](*(void *)(a1 + 24), 1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_1899D0954(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1899D0B14(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL _GEOPDSearchTransitIntentIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  if ((*(unsigned char *)(a1 + 56) & 0x14) != 0) {
    return 1;
  }
  if ((*(unsigned char *)(a1 + 56) & 8) == 0) {
    return 0;
  }
  uint64_t v3 = *(void *)(a1 + 24);

  return GEOPDSearchTokenSetIsDirty(v3);
}

os_unfair_lock_s *GEOPDSearchTransitIntentIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    BOOL IsDirty = _GEOPDSearchTransitIntentIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 12);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_1899D0DAC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDSearchTriggerFeatureReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 176));
  id v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 172);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 168)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  int v11 = (const float *)(a1 + 196);
  uint32x4_t v12 = (uint32x4_t)vld1q_dup_f32(v11);
  v13.i64[0] = 0x100000001;
  v13.i64[1] = 0x100000001;
  unsigned int v14 = vaddvq_s32(vaddq_s32((int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v12, (uint32x4_t)xmmword_18A636500), v13), (int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v12, (uint32x4_t)xmmword_18A636510), v13)));
  while (2)
  {
    uint64_t v15 = 1;
    uint64_t v16 = 1;
    switch(a3[v7])
    {
      case -3:
        char v8 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v15 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        BOOL v17 = v14 > 5;
        char v18 = v10 | v17;
        if (((v10 | v17) | v8)) {
          char v19 = 0;
        }
        else {
          char v19 = a3;
        }
        uint64_t v20 = (int *)MEMORY[0x1E4F940E8];
        char v21 = (int *)MEMORY[0x1E4F940C8];
        if (*(void *)(v3 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(v3 + *v6)) {
          goto LABEL_234;
        }
        char v132 = (v19 == 0) | v18;
        unsigned int v22 = (int *)MEMORY[0x1E4F940B8];
        char v131 = v10 | v17;
        break;
      default:
        ++v14;
LABEL_6:
        uint64_t v15 = v9;
        uint64_t v16 = v10;
LABEL_8:
        ++v7;
        uint64_t v9 = v15;
        uint64_t v10 = v16;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(unsigned char *)(v3 + *v21)) {
      goto LABEL_234;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_23;
      }
      v23 += 7;
      BOOL v30 = v24++ >= 9;
      if (v30)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_25;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_23:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_25:
    int v32 = v25 & 7;
    if (v31 || v32 == 4)
    {
LABEL_234:
      if (v18)
      {
        char v125 = 1;
        goto LABEL_236;
      }
      if (v19)
      {
        while (1)
        {
          int v126 = *v19++;
          int v127 = 0x100000;
          switch(v126)
          {
            case 0:
              goto LABEL_249;
            case 1:
              goto LABEL_248;
            case 2:
              int v127 = 0x4000;
              goto LABEL_248;
            case 4:
              int v127 = 0x10000;
              goto LABEL_248;
            case 10:
              int v127 = 0x8000;
              goto LABEL_248;
            case 12:
              int v127 = 0x2000;
              goto LABEL_248;
            case 18:
              int v127 = 0x40000;
              goto LABEL_248;
            case 19:
              int v127 = 0x20000;
              goto LABEL_248;
            case 20:
              int v127 = 0x80000;
LABEL_248:
              *(_DWORD *)(a1 + 196) |= v127;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_249;
    }
    unint64_t v34 = v25 >> 3;
    BOOL v35 = v18;
    if ((v132 & 1) == 0)
    {
      BOOL v36 = v19;
      do
      {
        int v38 = *v36++;
        int v37 = v38;
        BOOL v35 = v38 != 0;
        if (v38) {
          BOOL v39 = v37 == v34;
        }
        else {
          BOOL v39 = 1;
        }
      }
      while (!v39);
    }
    switch((int)v34)
    {
      case 1:
        if (!v35) {
          goto LABEL_166;
        }
        if ((*(unsigned char *)(a1 + 198) & 0x10) == 0)
        {
          uint64_t v40 = PBReaderReadString();
          uint64_t v41 = 152;
          goto LABEL_83;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_254;
        }
        int v115 = (int)(*(_DWORD *)(a1 + 196) << 11) >> 31;
        goto LABEL_205;
      case 2:
        if (!v35) {
          goto LABEL_166;
        }
        if ((*(unsigned char *)(a1 + 197) & 0x40) == 0)
        {
          uint64_t v40 = PBReaderReadString();
          uint64_t v41 = 40;
          goto LABEL_83;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_254;
        }
        int v115 = (int)(*(_DWORD *)(a1 + 196) << 17) >> 31;
        goto LABEL_205;
      case 3:
        if ((v8 & 1) == 0) {
          goto LABEL_166;
        }
        char v43 = 0;
        unsigned int v44 = 0;
        uint64_t v45 = 0;
        *(_DWORD *)(a1 + 196) |= 0x800u;
        while (2)
        {
          uint64_t v46 = *v20;
          uint64_t v47 = *(void *)(v3 + v46);
          unint64_t v48 = v47 + 1;
          if (v47 == -1 || v48 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v49 = *(unsigned char *)(*(void *)(v3 + *v22) + v47);
            *(void *)(v3 + v46) = v48;
            v45 |= (unint64_t)(v49 & 0x7F) << v43;
            if (v49 < 0)
            {
              v43 += 7;
              BOOL v30 = v44++ >= 9;
              if (v30)
              {
                LODWORD(v45) = 0;
                goto LABEL_171;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          LODWORD(v45) = 0;
        }
LABEL_171:
        *(_DWORD *)(a1 + 188) = v45;
        goto LABEL_228;
      case 4:
        if (!v35) {
          goto LABEL_166;
        }
        if ((*(unsigned char *)(a1 + 198) & 1) == 0)
        {
          uint64_t v40 = PBReaderReadString();
          uint64_t v41 = 64;
          goto LABEL_83;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_254;
        }
        int v115 = (int)(*(_DWORD *)(a1 + 196) << 15) >> 31;
        goto LABEL_205;
      case 5:
        if ((v8 & 1) == 0) {
          goto LABEL_166;
        }
        char v50 = 0;
        unsigned int v51 = 0;
        uint64_t v52 = 0;
        *(_DWORD *)(a1 + 196) |= 4u;
        while (2)
        {
          uint64_t v53 = *v20;
          uint64_t v54 = *(void *)(v3 + v53);
          unint64_t v55 = v54 + 1;
          if (v54 == -1 || v55 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v56 = *(unsigned char *)(*(void *)(v3 + *v22) + v54);
            *(void *)(v3 + v53) = v55;
            v52 |= (unint64_t)(v56 & 0x7F) << v50;
            if (v56 < 0)
            {
              v50 += 7;
              BOOL v30 = v51++ >= 9;
              if (v30)
              {
                uint64_t v52 = 0;
                goto LABEL_175;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          uint64_t v52 = 0;
        }
LABEL_175:
        uint64_t v114 = 80;
        goto LABEL_196;
      case 6:
        if ((v8 & 1) == 0) {
          goto LABEL_166;
        }
        *(_DWORD *)(a1 + 196) |= 0x400u;
        uint64_t v57 = *v20;
        unint64_t v58 = *(void *)(v3 + v57);
        if (v58 <= 0xFFFFFFFFFFFFFFFBLL && v58 + 4 <= *(void *)(v3 + *v6))
        {
          int v59 = *(_DWORD *)(*(void *)(v3 + *v22) + v58);
          *(void *)(v3 + v57) = v58 + 4;
        }
        else
        {
          *(unsigned char *)(v3 + *v21) = 1;
          int v59 = 0;
        }
        uint64_t v116 = 184;
        goto LABEL_211;
      case 7:
        if ((v8 & 1) == 0) {
          goto LABEL_166;
        }
        *(_DWORD *)(a1 + 196) |= 0x200u;
        uint64_t v60 = *v20;
        unint64_t v61 = *(void *)(v3 + v60);
        if (v61 <= 0xFFFFFFFFFFFFFFFBLL && v61 + 4 <= *(void *)(v3 + *v6))
        {
          int v59 = *(_DWORD *)(*(void *)(v3 + *v22) + v61);
          *(void *)(v3 + v60) = v61 + 4;
        }
        else
        {
          *(unsigned char *)(v3 + *v21) = 1;
          int v59 = 0;
        }
        uint64_t v116 = 180;
LABEL_211:
        *(_DWORD *)(a1 + v116) = v59;
        goto LABEL_228;
      case 8:
        if ((v8 & 1) == 0) {
          goto LABEL_166;
        }
        *(_DWORD *)(a1 + 196) |= 8u;
        uint64_t v62 = *v20;
        unint64_t v63 = *(void *)(v3 + v62);
        if (v63 <= 0xFFFFFFFFFFFFFFF7 && v63 + 8 <= *(void *)(v3 + *v6))
        {
          uint64_t v64 = *(void *)(*(void *)(v3 + *v22) + v63);
          *(void *)(v3 + v62) = v63 + 8;
        }
        else
        {
          *(unsigned char *)(v3 + *v21) = 1;
          uint64_t v64 = 0;
        }
        uint64_t v117 = 88;
        goto LABEL_227;
      case 9:
        if ((v8 & 1) == 0) {
          goto LABEL_166;
        }
        *(_DWORD *)(a1 + 196) |= 0x10u;
        uint64_t v65 = *v20;
        unint64_t v66 = *(void *)(v3 + v65);
        if (v66 <= 0xFFFFFFFFFFFFFFF7 && v66 + 8 <= *(void *)(v3 + *v6))
        {
          uint64_t v64 = *(void *)(*(void *)(v3 + *v22) + v66);
          *(void *)(v3 + v65) = v66 + 8;
        }
        else
        {
          *(unsigned char *)(v3 + *v21) = 1;
          uint64_t v64 = 0;
        }
        uint64_t v117 = 96;
        goto LABEL_227;
      case 10:
        if (!v35) {
          goto LABEL_166;
        }
        if ((*(unsigned char *)(a1 + 197) & 0x80) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_254;
          }
          int v115 = (int)(*(_DWORD *)(a1 + 196) << 16) >> 31;
LABEL_205:
          v7 += v115;
        }
        else
        {
          uint64_t v40 = PBReaderReadString();
          uint64_t v41 = 56;
LABEL_83:
          char v67 = *(void **)(a1 + v41);
          *(void *)(a1 + v41) = v40;

          --v7;
        }
        goto LABEL_206;
      case 11:
        if ((v8 & 1) == 0) {
          goto LABEL_166;
        }
        char v68 = 0;
        unsigned int v69 = 0;
        uint64_t v52 = 0;
        *(_DWORD *)(a1 + 196) |= 0x20u;
        while (2)
        {
          uint64_t v70 = *v20;
          uint64_t v71 = *(void *)(v3 + v70);
          unint64_t v72 = v71 + 1;
          if (v71 == -1 || v72 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v73 = *(unsigned char *)(*(void *)(v3 + *v22) + v71);
            *(void *)(v3 + v70) = v72;
            v52 |= (unint64_t)(v73 & 0x7F) << v68;
            if (v73 < 0)
            {
              v68 += 7;
              BOOL v30 = v69++ >= 9;
              if (v30)
              {
                uint64_t v52 = 0;
                goto LABEL_179;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          uint64_t v52 = 0;
        }
LABEL_179:
        uint64_t v114 = 104;
        goto LABEL_196;
      case 12:
        if (!v35 || (*(unsigned char *)(a1 + 197) & 0x20) != 0) {
          goto LABEL_166;
        }
        if (v32 != 2)
        {
          char v118 = 0;
          unsigned int v119 = 0;
          uint64_t v120 = 0;
          while (1)
          {
            uint64_t v121 = *v20;
            uint64_t v122 = *(void *)(v3 + v121);
            unint64_t v123 = v122 + 1;
            if (v122 == -1 || v123 > *(void *)(v3 + *v6)) {
              break;
            }
            char v124 = *(unsigned char *)(*(void *)(v3 + *v22) + v122);
            *(void *)(v3 + v121) = v123;
            v120 |= (unint64_t)(v124 & 0x7F) << v118;
            if (v124 < 0)
            {
              v118 += 7;
              BOOL v30 = v119++ >= 9;
              if (!v30) {
                continue;
              }
            }
            goto LABEL_233;
          }
          *(unsigned char *)(v3 + *v21) = 1;
LABEL_233:
          PBRepeatedInt32Add();
          goto LABEL_206;
        }
        if (!PBReaderPlaceMark()) {
          goto LABEL_254;
        }
        while (1)
        {
          uint64_t v74 = (int *)MEMORY[0x1E4F940C8];
          if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + (int)*MEMORY[0x1E4F940C8])) {
            break;
          }
          char v75 = 0;
          unsigned int v76 = 0;
          uint64_t v77 = 0;
          while (1)
          {
            uint64_t v78 = *v20;
            uint64_t v79 = *(void *)(v3 + v78);
            unint64_t v80 = v79 + 1;
            if (v79 == -1 || v80 > *(void *)(v3 + *v6)) {
              break;
            }
            char v81 = *(unsigned char *)(*(void *)(v3 + *v22) + v79);
            *(void *)(v3 + v78) = v80;
            v77 |= (unint64_t)(v81 & 0x7F) << v75;
            if (v81 < 0)
            {
              v75 += 7;
              BOOL v30 = v76++ >= 9;
              if (!v30) {
                continue;
              }
            }
            goto LABEL_106;
          }
          *(unsigned char *)(v3 + *v74) = 1;
LABEL_106:
          PBRepeatedInt32Add();
        }
        PBReaderRecallMark();
        char v21 = (int *)MEMORY[0x1E4F940C8];
        char v18 = v131;
        goto LABEL_228;
      case 13:
        if ((v8 & 1) == 0) {
          goto LABEL_166;
        }
        char v82 = 0;
        unsigned int v83 = 0;
        uint64_t v84 = 0;
        *(_DWORD *)(a1 + 196) |= 0x1000u;
        while (2)
        {
          uint64_t v85 = *v20;
          uint64_t v86 = *(void *)(v3 + v85);
          unint64_t v87 = v86 + 1;
          if (v86 == -1 || v87 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v88 = *(unsigned char *)(*(void *)(v3 + *v22) + v86);
            *(void *)(v3 + v85) = v87;
            v84 |= (unint64_t)(v88 & 0x7F) << v82;
            if (v88 < 0)
            {
              v82 += 7;
              BOOL v30 = v83++ >= 9;
              if (v30)
              {
                uint64_t v84 = 0;
                goto LABEL_183;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          uint64_t v84 = 0;
        }
LABEL_183:
        *(unsigned char *)(a1 + 192) = v84 != 0;
        goto LABEL_228;
      case 14:
        if ((v8 & 1) == 0) {
          goto LABEL_166;
        }
        *(_DWORD *)(a1 + 196) |= 0x80u;
        uint64_t v89 = *v20;
        unint64_t v90 = *(void *)(v3 + v89);
        if (v90 <= 0xFFFFFFFFFFFFFFF7 && v90 + 8 <= *(void *)(v3 + *v6))
        {
          uint64_t v64 = *(void *)(*(void *)(v3 + *v22) + v90);
          *(void *)(v3 + v89) = v90 + 8;
        }
        else
        {
          *(unsigned char *)(v3 + *v21) = 1;
          uint64_t v64 = 0;
        }
        uint64_t v117 = 144;
        goto LABEL_227;
      case 15:
        if ((v8 & 1) == 0) {
          goto LABEL_166;
        }
        *(_DWORD *)(a1 + 196) |= 0x100u;
        uint64_t v91 = *v20;
        unint64_t v92 = *(void *)(v3 + v91);
        if (v92 <= 0xFFFFFFFFFFFFFFF7 && v92 + 8 <= *(void *)(v3 + *v6))
        {
          uint64_t v64 = *(void *)(*(void *)(v3 + *v22) + v92);
          *(void *)(v3 + v91) = v92 + 8;
        }
        else
        {
          *(unsigned char *)(v3 + *v21) = 1;
          uint64_t v64 = 0;
        }
        uint64_t v117 = 160;
LABEL_227:
        *(void *)(a1 + v117) = v64;
        goto LABEL_228;
      case 16:
        if ((v8 & 1) == 0) {
          goto LABEL_166;
        }
        char v93 = 0;
        unsigned int v94 = 0;
        uint64_t v52 = 0;
        *(_DWORD *)(a1 + 196) |= 2u;
        while (2)
        {
          uint64_t v95 = *v20;
          uint64_t v96 = *(void *)(v3 + v95);
          unint64_t v97 = v96 + 1;
          if (v96 == -1 || v97 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v98 = *(unsigned char *)(*(void *)(v3 + *v22) + v96);
            *(void *)(v3 + v95) = v97;
            v52 |= (unint64_t)(v98 & 0x7F) << v93;
            if (v98 < 0)
            {
              v93 += 7;
              BOOL v30 = v94++ >= 9;
              if (v30)
              {
                uint64_t v52 = 0;
                goto LABEL_187;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          uint64_t v52 = 0;
        }
LABEL_187:
        uint64_t v114 = 72;
        goto LABEL_196;
      case 17:
        if ((v8 & 1) == 0) {
          goto LABEL_166;
        }
        char v99 = 0;
        unsigned int v100 = 0;
        uint64_t v52 = 0;
        *(_DWORD *)(a1 + 196) |= 0x40u;
        while (2)
        {
          uint64_t v101 = *v20;
          uint64_t v102 = *(void *)(v3 + v101);
          unint64_t v103 = v102 + 1;
          if (v102 == -1 || v103 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v104 = *(unsigned char *)(*(void *)(v3 + *v22) + v102);
            *(void *)(v3 + v101) = v103;
            v52 |= (unint64_t)(v104 & 0x7F) << v99;
            if (v104 < 0)
            {
              v99 += 7;
              BOOL v30 = v100++ >= 9;
              if (v30)
              {
                uint64_t v52 = 0;
                goto LABEL_191;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          uint64_t v52 = 0;
        }
LABEL_191:
        uint64_t v114 = 112;
        goto LABEL_196;
      case 18:
        if (!v35 || (*(unsigned char *)(a1 + 198) & 4) != 0) {
          goto LABEL_164;
        }
        PBReaderReadString();
        char v105 = (GEOPDSearchKeyValuePair *)objc_claimAutoreleasedReturnValue();
        if (!v105) {
          goto LABEL_154;
        }
        uint64_t v130 = v105;
        -[GEOPDSearchTriggerFeature _addNoFlagsPrefCategory:](a1, v105);
        goto LABEL_153;
      case 19:
        if (!v35 || (*(unsigned char *)(a1 + 198) & 2) != 0) {
          goto LABEL_164;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_254;
        }
        uint64_t v130 = objc_alloc_init(GEOPDSearchKeyValuePair);
        if (!GEOPDSearchKeyValuePairReadAllFrom((uint64_t)v130, (void *)v3, v9 & 1)) {
          goto LABEL_253;
        }
        PBReaderRecallMark();
        -[GEOPDSearchTriggerFeature _addNoFlagsModernToLegacyIdMapping:](a1, v130);
        goto LABEL_153;
      case 20:
        if (!v35 || (*(unsigned char *)(a1 + 198) & 8) != 0)
        {
LABEL_164:
          char v112 = PBReaderSkipValueWithTag();
          char v18 = v131;
          char v21 = (int *)MEMORY[0x1E4F940C8];
          if ((v112 & 1) == 0) {
            goto LABEL_252;
          }
LABEL_228:
          if (!(v18 & 1 | (v7 != 0)) || *(void *)(v3 + *v20) >= *(void *)(v3 + *v6)) {
            goto LABEL_234;
          }
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_254;
        }
        uint64_t v130 = objc_alloc_init(GEOPDSearchRelatedCategory);
        if (GEOPDSearchRelatedCategoryReadAllFrom((uint64_t)v130, (void *)v3))
        {
          PBReaderRecallMark();
          -[GEOPDSearchTriggerFeature _addNoFlagsRelatedCategories:](a1, v130);
LABEL_153:
          char v105 = v130;
LABEL_154:

LABEL_206:
          char v18 = v131;
          char v21 = (int *)MEMORY[0x1E4F940C8];
          goto LABEL_228;
        }
LABEL_253:

LABEL_254:
        char v125 = 0;
        char v18 = v131;
        char v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_236:
        *(_DWORD *)(a1 + 196) |= 0x100000u;
        *(_DWORD *)(a1 + 196) |= 0x4000u;
        *(_DWORD *)(a1 + 196) |= 0x10000u;
        *(_DWORD *)(a1 + 196) |= 0x8000u;
        *(_DWORD *)(a1 + 196) |= 0x2000u;
        *(_DWORD *)(a1 + 196) |= 0x40000u;
        *(_DWORD *)(a1 + 196) |= 0x20000u;
        *(_DWORD *)(a1 + 196) |= 0x80000u;
        if (v125)
        {
LABEL_249:
          unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
          if (v18) {
            goto LABEL_250;
          }
          return v3;
        }
        unint64_t v3 = 0;
        if ((v18 & 1) == 0) {
          return v3;
        }
LABEL_250:
        uint64_t v128 = *(void **)(a1 + 8);
        *(void *)(a1 + 8) = 0;

        return v3;
      case 21:
        if (v8)
        {
          char v106 = 0;
          unsigned int v107 = 0;
          uint64_t v52 = 0;
          *(_DWORD *)(a1 + 196) |= 1u;
          while (1)
          {
            uint64_t v108 = *v20;
            uint64_t v109 = *(void *)(v3 + v108);
            unint64_t v110 = v109 + 1;
            if (v109 == -1 || v110 > *(void *)(v3 + *v6)) {
              break;
            }
            char v111 = *(unsigned char *)(*(void *)(v3 + *v22) + v109);
            *(void *)(v3 + v108) = v110;
            v52 |= (unint64_t)(v111 & 0x7F) << v106;
            if ((v111 & 0x80) == 0) {
              goto LABEL_193;
            }
            v106 += 7;
            BOOL v30 = v107++ >= 9;
            if (v30)
            {
              uint64_t v52 = 0;
              goto LABEL_195;
            }
          }
          *(unsigned char *)(v3 + *v21) = 1;
LABEL_193:
          if (*(unsigned char *)(v3 + *v21)) {
            uint64_t v52 = 0;
          }
LABEL_195:
          uint64_t v114 = 48;
LABEL_196:
          *(void *)(a1 + v114) = v52;
        }
        else
        {
LABEL_166:
          char v113 = PBReaderSkipValueWithTag();
          char v21 = (int *)MEMORY[0x1E4F940C8];
          char v18 = v131;
          if ((v113 & 1) == 0)
          {
LABEL_252:
            char v125 = 0;
            goto LABEL_236;
          }
        }
        goto LABEL_228;
      default:
        int v42 = PBReaderSkipValueWithTag();
        char v21 = (int *)MEMORY[0x1E4F940C8];
        char v18 = v131;
        if (!v42) {
          goto LABEL_252;
        }
        goto LABEL_228;
    }
  }
}

void sub_1899D22CC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1899D24EC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1899D2680(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1899D32A0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1899D339C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDSearchTriggerFeatureCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v21 = *MEMORY[0x1E4F143B8];
  long long v15 = 0u;
  long long v16 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  id v2 = *(id *)(a1 + 120);
  uint64_t v3 = [v2 countByEnumeratingWithState:&v15 objects:v20 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v16;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v16 != v5) {
          objc_enumerationMutation(v2);
        }
        -[GEOPDSearchKeyValuePair readAll:](*(void *)(*((void *)&v15 + 1) + 8 * v6++), 1);
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v15 objects:v20 count:16];
    }
    while (v4);
  }

  long long v13 = 0u;
  long long v14 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  id v7 = *(id *)(a1 + 136);
  uint64_t v8 = [v7 countByEnumeratingWithState:&v11 objects:v19 count:16];
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)v12;
    while (1)
    {
      if (*(void *)v12 != v10) {
        objc_enumerationMutation(v7);
      }
      if (!--v9)
      {
        uint64_t v9 = [v7 countByEnumeratingWithState:&v11 objects:v19 count:16];
        if (!v9) {
          break;
        }
      }
    }
  }
}

unint64_t GEOPDSearchTriggerFeatureReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 172))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDSearchTriggerFeatureReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 176));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 168) = [v8 position];
  *(_DWORD *)(a1 + 172) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOPDSearchTriggerFeatureReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOPDSearchTriggerFeatureReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDSearchTriggerFeatureReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOPDSearchTriggerFeatureCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 176));
  return Specified;
}

void sub_1899D36B4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1899D3C78(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1899D4290(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id GEOResourcesPairedDevicesCachesDirectory()
{
  return +[GEOFilePaths pathFor:13];
}

id GEOReleaseInfoForManifestData(void *a1)
{
  id v1 = a1;
  id v2 = [[GEOResources alloc] initWithData:v1];

  uint64_t v3 = [(GEOResources *)v2 releaseInfo];

  return v3;
}

id GEOCanonicalResourceNameForVersionedName(void *a1)
{
  uint64_t v40 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  if (v1)
  {
    if (qword_1EB29FB28 != -1) {
      dispatch_once(&qword_1EB29FB28, &__block_literal_global_107);
    }
    id v2 = [MEMORY[0x1E4F28E78] stringWithString:v1];
    id v34 = v1;
    if ([(id)qword_1EB29FB18 count])
    {
      unint64_t v3 = 0;
      do
      {
        uint64_t v4 = [(id)qword_1EB29FB18 objectAtIndex:v3];
        uint64_t v5 = [(id)qword_1EB29FB20 objectAtIndex:v3];
        uint64_t v6 = objc_msgSend(v2, "replaceOccurrencesOfString:withString:options:range:", v4, v5, 2, 0, objc_msgSend(v2, "length"));

        ++v3;
      }
      while (v3 < [(id)qword_1EB29FB18 count]);
      id v1 = v34;
    }
    else
    {
      uint64_t v6 = 0;
    }
    int v33 = [v2 pathExtension];
    id v7 = [v2 stringByDeletingPathExtension];
    id v8 = [v7 pathExtension];
    uint64_t v9 = [v8 length];

    if (v9)
    {
      uint64_t v10 = [v7 stringByDeletingPathExtension];

      id v7 = (void *)v10;
    }
    long long v11 = [MEMORY[0x1E4F28E78] stringWithString:v7];
    if (v6 && [(id)qword_1EB29FB18 count])
    {
      unint64_t v12 = 0;
      do
      {
        long long v13 = [(id)qword_1EB29FB18 objectAtIndex:v12];
        long long v14 = [(id)qword_1EB29FB20 objectAtIndex:v12];
        objc_msgSend(v11, "replaceOccurrencesOfString:withString:options:range:", v14, v13, 2, 0, objc_msgSend(v11, "length"));

        ++v12;
      }
      while (v12 < [(id)qword_1EB29FB18 count]);
    }
    long long v37 = 0u;
    long long v38 = 0u;
    long long v35 = 0u;
    long long v36 = 0u;
    id v15 = (id)qword_1EB29FB10;
    id v16 = (id)[v15 countByEnumeratingWithState:&v35 objects:v39 count:16];
    if (v16)
    {
      uint64_t v17 = *(void *)v36;
      while (2)
      {
        for (uint64_t i = 0; i != v16; uint64_t i = (char *)i + 1)
        {
          if (*(void *)v36 != v17) {
            objc_enumerationMutation(v15);
          }
          char v19 = *(void **)(*((void *)&v35 + 1) + 8 * i);
          if ([v11 hasSuffix:v19])
          {
            id v16 = v19;
            objc_msgSend(v11, "deleteCharactersInRange:", objc_msgSend(v11, "length") - objc_msgSend(v16, "length"), objc_msgSend(v16, "length"));
            goto LABEL_25;
          }
        }
        id v16 = (id)[v15 countByEnumeratingWithState:&v35 objects:v39 count:16];
        if (v16) {
          continue;
        }
        break;
      }
LABEL_25:
      id v1 = v34;
    }

    int v20 = [v11 hasSuffix:@"-163r"];
    if (v20)
    {
      uint64_t v21 = @"-163r";
      [v11 deleteCharactersInRange:objc_msgSend(v11, "length") - objc_msgSend(@"-163r", "length"), objc_msgSend(@"-163r", "length")];
    }
    else
    {
      uint64_t v21 = 0;
    }
    if (qword_1EB29FB40 != -1) {
      dispatch_once(&qword_1EB29FB40, &__block_literal_global_126);
    }
    uint64_t v22 = [v11 rangeOfCharacterFromSet:qword_1EB29FB30 options:4];
    char v23 = v1;
    if (v22 != 0x7FFFFFFFFFFFFFFFLL)
    {
      uint64_t v24 = v22;
      uint64_t v25 = qword_1EB29FB38;
      uint64_t v26 = v22 + 1;
      uint64_t v27 = [v11 length];
      uint64_t v28 = v26;
      id v1 = v34;
      uint64_t v29 = objc_msgSend(v11, "rangeOfCharacterFromSet:options:range:", v25, 0, v28, v27 + ~v24);
      char v23 = v34;
      if (v29 == 0x7FFFFFFFFFFFFFFFLL)
      {
        objc_msgSend(v11, "deleteCharactersInRange:", v24, objc_msgSend(v11, "length") - v24);
        if (v20) {
          [v11 appendString:v21];
        }
        if (v16) {
          [v11 appendString:v16];
        }
        uint64_t v30 = [v33 length];
        char v23 = v11;
        if (v30)
        {
          [v11 appendString:@"."];
          [v11 appendString:v33];
          char v23 = v11;
        }
      }
    }
    id v31 = v23;
  }
  else
  {
    id v31 = 0;
  }

  return v31;
}

void __GEOCanonicalResourceNameForVersionedName_block_invoke()
{
  uint64_t v22 = *MEMORY[0x1E4F143B8];
  id v0 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
  id v1 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
  id v2 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
  for (uint64_t i = 2; i != 4; ++i)
  {
    uint64_t v4 = objc_msgSend(NSString, "stringWithFormat:", @"@%lux", i);
    [v0 addObject:v4];
  }
  uint64_t v5 = objc_msgSend(NSString, "stringWithFormat:", @"@%.1fx", 0x4004CCCCC0000000);
  [v0 addObject:v5];
  [v1 addObject:v5];
  long long v19 = 0u;
  long long v20 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  id v6 = v1;
  uint64_t v7 = [v6 countByEnumeratingWithState:&v17 objects:v21 count:16];
  if (v7)
  {
    uint64_t v8 = v7;
    uint64_t v9 = *(void *)v18;
    do
    {
      uint64_t v10 = 0;
      do
      {
        if (*(void *)v18 != v9) {
          objc_enumerationMutation(v6);
        }
        long long v11 = [*(id *)(*((void *)&v17 + 1) + 8 * v10) stringByReplacingOccurrencesOfString:@"." withString:@"_"];
        [v2 addObject:v11];

        ++v10;
      }
      while (v8 != v10);
      uint64_t v8 = [v6 countByEnumeratingWithState:&v17 objects:v21 count:16];
    }
    while (v8);
  }

  unint64_t v12 = (void *)qword_1EB29FB10;
  qword_1EB29FB10 = (uint64_t)v0;
  id v13 = v0;

  long long v14 = (void *)qword_1EB29FB18;
  qword_1EB29FB18 = (uint64_t)v6;
  id v15 = v6;

  id v16 = (void *)qword_1EB29FB20;
  qword_1EB29FB20 = (uint64_t)v2;
}

void __GEOCanonicalResourceNameForVersionedName_block_invoke_2()
{
  uint64_t v0 = [MEMORY[0x1E4F28B88] characterSetWithCharactersInString:@"-"];
  id v1 = (void *)qword_1EB29FB30;
  qword_1EB29FB30 = v0;

  id v4 = [MEMORY[0x1E4F28B88] decimalDigitCharacterSet];
  uint64_t v2 = [v4 invertedSet];
  unint64_t v3 = (void *)qword_1EB29FB38;
  qword_1EB29FB38 = v2;
}

void sub_1899D6E00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,char a37,uint64_t a38,uint64_t a39,uint64_t a40,char a41)
{
}

void sub_1899D7470(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36,uint64_t a37,uint64_t a38,uint64_t a39,char a40)
{
}

void _stopObservingFolder()
{
  if (_devResourcesStream)
  {
    FSEventStreamStop((FSEventStreamRef)_devResourcesStream);
    FSEventStreamInvalidate((FSEventStreamRef)_devResourcesStream);
    FSEventStreamRelease((FSEventStreamRef)_devResourcesStream);
    _devResourcesStream = 0;
  }
}

BOOL GEOTileSetRegionContainsTileKey(unsigned int *a1, uint64_t a2)
{
  if (!a2) {
    return 0;
  }
  GEOTileKeyAssertIsStandard(a2);
  unint64_t v4 = *(void *)(a2 + 1);
  uint64_t v5 = (v4 >> 40) & 0x3F;
  if (a1[2] >= v5
    && (unsigned int v6 = a1[5], v6 <= v5)
    && (unint64_t v7 = *(unsigned int *)(a2 + 9) | ((unint64_t)(*(unsigned __int16 *)(a2 + 13) | (*(unsigned __int8 *)(a2 + 15) << 16)) << 32),
        double v8 = ldexp(1.0, v6 - v5),
        unsigned int v9 = (v8 * (double)(((v4 >> 46) | (v7 << 18)) & 0x3FFFFFF)),
        a1[3] <= v9)
    && *a1 >= v9
    && (unsigned int v10 = (v8 * (double)((v7 >> 8) & 0x3FFFFFF)), a1[4] <= v10))
  {
    return a1[1] >= v10;
  }
  else
  {
    return 0;
  }
}

void sub_1899D9CA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30,uint64_t a31,uint64_t a32,uint64_t a33,char a34)
{
}

BOOL RegionContainsPoint(unsigned int *a1, double a2, double a3)
{
  uint64_t v36 = *MEMORY[0x1E4F143B8];
  char v31 = 0;
  unint64_t v6 = a1[3];
  unint64_t v7 = a1[4];
  unsigned __int16 v34 = (v7 >> 24) & 3;
  unint64_t v8 = ((unint64_t)(a1[5] & 0x3F) << 40) | (v6 << 46);
  unsigned __int8 v35 = 0;
  int v33 = (v6 >> 18) | (v7 << 8);
  unint64_t v32 = v8;
  double v9 = GEOMapRectForGEOTileKey((uint64_t)&v31);
  double v11 = v10;
  double v13 = v12;
  double v15 = v14;
  unint64_t v16 = *a1;
  unsigned int v17 = a1[1];
  unint64_t v32 = v32 & 0x3FFFFFFFFFFFLL | ((unint64_t)v16 << 46);
  int v33 = (v16 >> 18) | (v17 << 8);
  unsigned __int16 v34 = (((unint64_t)(v34 | (v35 << 16)) << 32) & 0xFFFFFC00000000 | (v16 >> 18) | ((unint64_t)(v17 & 0x3FFFFFF) << 8)) >> 32;
  double v18 = GEOMapRectForGEOTileKey((uint64_t)&v31);
  double v20 = GEOMapRectUnion(v9, v11, v13, v15, v18, v19);
  BOOL result = 0;
  double v24 = fabs(v21);
  double v26 = v20 + v25;
  if (fabs(v20) != INFINITY && v24 != INFINITY && a2 >= v20 && a2 < v26 && a3 >= v21) {
    return a3 < v21 + v22;
  }
  return result;
}

void _eventStreamCallback(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = (void (**)(void))MEMORY[0x18C120660](a2);
  v2[2]();
}

void sub_1899DD02C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1899DD2E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
}

void sub_1899DDE58(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

BOOL GEOResourceManifestDataIsValid(void *a1)
{
  id v1 = a1;
  uint64_t v2 = [[GEOResources alloc] initWithData:v1];

  return v2 != 0;
}

void sub_1899E2218(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
}

void __GEOGetDataSessionURLLog_block_invoke()
{
  os_log_t v0 = os_log_create("com.apple.GeoServices", "DataSessionURL");
  id v1 = (void *)_MergedGlobals_237;
  _MergedGlobals_237 = (uint64_t)v0;
}

void sub_1899E3250(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 72));
  _Unwind_Resume(a1);
}

void sub_1899E35F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  va_start(va, a17);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v17 - 112), 8);
  _Unwind_Resume(a1);
}

void sub_1899E4134(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, os_activity_scope_state_s state)
{
}

void sub_1899E4648(_Unwind_Exception *exception_object)
{
}

uint64_t __checkSystemClockAgainstHTTPResponse_block_invoke()
{
  id v0 = objc_alloc_init(MEMORY[0x1E4F28C10]);
  id v1 = (void *)qword_1EB29FBB0;
  qword_1EB29FBB0 = (uint64_t)v0;

  uint64_t v2 = [MEMORY[0x1E4F1CA20] localeWithLocaleIdentifier:@"en_US_POSIX"];
  [(id)qword_1EB29FBB0 setLocale:v2];

  unint64_t v3 = (void *)qword_1EB29FBB0;

  return [v3 setDateFormat:@"EEE',' dd' 'MMM' 'yyyy HH':'mm':'ss zzz"];
}

void sub_1899E5210(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  objc_destroyWeak(v20);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1899E6268(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  va_start(va, a17);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v17 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_1899E64D8(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 80), 8);
  _Unwind_Resume(a1);
}

void sub_1899E662C(_Unwind_Exception *a1)
{
}

void sub_1899E67B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1899E6B70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  _Block_object_dispose(&a26, 8);
  _Block_object_dispose(&a30, 8);
  _Block_object_dispose((const void *)(v30 - 112), 8);
  _Unwind_Resume(a1);
}

void sub_1899E6C6C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1899E6D60(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__138(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__139(uint64_t a1)
{
}

void _GEOMurmurHash3_128_realign(const void *a1, size_t size, unsigned int a3, unint64_t *a4)
{
  uint64_t v13 = *MEMORY[0x1E4F143B8];
  if ((int)size >= 1)
  {
    int v6 = size;
    size_t v8 = size;
    double v9 = malloc_type_malloc(size, 0x61E7D965uLL);
    if (v9)
    {
      double v10 = v9;
      memcpy(v9, a1, v8);
      MurmurHash3_x64_128((uint64_t)v10, v6, a3, a4);
      free(v10);
    }
    else
    {
      Log = GEOFindOrCreateLog("com.apple.GeoServices", "GEOMurmurHash3");
      if (os_log_type_enabled(Log, OS_LOG_TYPE_FAULT))
      {
        v12[0] = 67109120;
        v12[1] = v6;
        _os_log_impl(&dword_188D96000, Log, OS_LOG_TYPE_FAULT, "allocation of %d bytes failed", (uint8_t *)v12, 8u);
      }
    }
  }
}

void sub_1899E9438(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void __GEOGetGEOComposedStringLog_block_invoke_2()
{
  os_log_t v0 = os_log_create("com.apple.GeoServices", "GEOComposedString");
  uint64_t v1 = (void *)_MergedGlobals_3_0;
  _MergedGlobals_3_0 = (uint64_t)v0;
}

void sub_1899ED598(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1899EDE70(_Unwind_Exception *a1)
{
}

BOOL GEOPDAboutReadAllFrom(uint64_t a1, void *a2, int a3)
{
  uint64_t v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    int v6 = (int *)MEMORY[0x1E4F940E8];
    unint64_t v7 = (int *)MEMORY[0x1E4F940E0];
    size_t v8 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v5[*MEMORY[0x1E4F940E8]] < *(void *)&v5[*MEMORY[0x1E4F940E0]])
    {
      double v9 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v5[*v8]) {
          break;
        }
        char v10 = 0;
        unsigned int v11 = 0;
        unint64_t v12 = 0;
        while (1)
        {
          uint64_t v13 = *v6;
          uint64_t v14 = *(void *)&v5[v13];
          unint64_t v15 = v14 + 1;
          if (v14 == -1 || v15 > *(void *)&v5[*v7]) {
            break;
          }
          char v16 = *(unsigned char *)(*(void *)&v5[*v9] + v14);
          *(void *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0) {
            goto LABEL_13;
          }
          v10 += 7;
          if (v11++ >= 9)
          {
            unint64_t v12 = 0;
            int v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        int v18 = v5[*v8];
        if (v5[*v8]) {
          unint64_t v12 = 0;
        }
LABEL_15:
        if (v18 || (v12 & 7) == 4) {
          break;
        }
        if ((v12 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_29;
          }
          double v20 = objc_alloc_init(GEOLocalizedString);
          if (!GEOLocalizedStringReadAllFrom((uint64_t)v20, v5, a3))
          {

            goto LABEL_29;
          }
          PBReaderRecallMark();
          -[GEOPDAbout addText:](a1, v20);
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v21 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            double v22 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v21;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_29;
          }
        }
      }
      while (*(void *)&v5[*v6] < *(void *)&v5[*v7]);
    }
    BOOL v23 = v5[*v8] == 0;
  }
  else
  {
LABEL_29:
    BOOL v23 = 0;
  }
  objc_sync_exit(v5);

  return v23;
}

void sub_1899EEAE8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDAboutFilterReadAllFrom(uint64_t a1, void *a2)
{
  unint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    unint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    int v6 = (int *)MEMORY[0x1E4F940C8];
    unint64_t v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      int v8 = v3[*v6];
      if (*(void *)&v3[*v4] >= *(void *)&v3[*v5]) {
        break;
      }
      if (v3[*v6])
      {
        int v8 = 1;
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      uint64_t v11 = 0;
      while (1)
      {
        uint64_t v12 = *v4;
        uint64_t v13 = *(void *)&v3[v12];
        unint64_t v14 = v13 + 1;
        if (v13 == -1 || v14 > *(void *)&v3[*v5]) {
          break;
        }
        char v15 = *(unsigned char *)(*(void *)&v3[*v7] + v13);
        *(void *)&v3[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0) {
          goto LABEL_13;
        }
        v9 += 7;
        if (v10++ >= 9)
        {
          char v17 = 0;
          int v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      int v8 = v3[*v6];
      if (v3[*v6]) {
        char v17 = 0;
      }
      else {
        char v17 = v11;
      }
LABEL_16:
      if (v8) {
        BOOL v18 = 1;
      }
      else {
        BOOL v18 = (v17 & 7) == 4;
      }
      if (v18) {
        break;
      }
      if (!*(void *)(a1 + 8))
      {
        id v19 = objc_alloc_init(MEMORY[0x1E4F940B0]);
        double v20 = *(void **)(a1 + 8);
        *(void *)(a1 + 8) = v19;
      }
      if ((PBUnknownFieldAdd() & 1) == 0) {
        goto LABEL_23;
      }
    }
    BOOL v21 = v8 == 0;
  }
  else
  {
LABEL_23:
    BOOL v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_1899EF2C4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1899EF518(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDActionDataReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 80));
  int v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 76);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 72)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  unsigned int v12 = (vaddv_s16((int16x4_t)(*(void *)&vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int8 *)(a1 + 84)), (uint16x4_t)0xFFFAFFFFFFFDFFFELL) & 0xFF01FF01FF01FF01))+ (*(unsigned char *)(a1 + 84) & 1)+ ((*(unsigned char *)(a1 + 84) & 0x10) != 0)+ ((*(unsigned char *)(a1 + 84) & 0x20) != 0));
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 > 3;
        char v17 = v16 & ~(_BYTE)v11 | v9;
        unsigned __int8 v18 = v16 | v11;
        char v54 = v17;
        char v55 = v18 | v17;
        if ((v18 | v8)) {
          id v19 = 0;
        }
        else {
          id v19 = a3;
        }
        double v20 = (int *)MEMORY[0x1E4F940E8];
        BOOL v21 = (int *)MEMORY[0x1E4F940C8];
        char v56 = (v19 == 0) | v18;
        BOOL v57 = v18;
        double v22 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v9;
LABEL_8:
        uint64_t v14 = v10;
        uint64_t v15 = v11;
LABEL_10:
        ++v7;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (*(void *)(v3 + *v20) < *(void *)(v3 + *v6) && !*(unsigned char *)(v3 + *v21))
  {
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      if (v24++ >= 9)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_25:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    if (v31 || (v25 & 7) == 4) {
      break;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v57;
    if ((v56 & 1) == 0)
    {
      unsigned __int8 v35 = v19;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    switch((int)v33)
    {
      case 1:
        if (!v34 || (*(unsigned char *)(a1 + 84) & 8) != 0) {
          goto LABEL_69;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_103;
        }
        BOOL v39 = objc_alloc_init(GEOLocalizedString);
        if (!GEOLocalizedStringReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1)) {
          goto LABEL_102;
        }
        PBReaderRecallMark();
        -[GEOPDActionData _addNoFlagsActionTitle:](a1, v39);
        goto LABEL_58;
      case 2:
        if (!v34) {
          goto LABEL_69;
        }
        if ((*(unsigned char *)(a1 + 84) & 4) == 0)
        {
          uint64_t v43 = PBReaderReadString();
          uint64_t v44 = 32;
          goto LABEL_68;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_103;
        }
        char v47 = 32 * *(unsigned char *)(a1 + 84);
        goto LABEL_79;
      case 3:
        if (!v34 || (*(unsigned char *)(a1 + 84) & 2) != 0) {
          goto LABEL_69;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_103;
        }
        BOOL v39 = objc_alloc_init(GEOPDActionLink);
        if (GEOPDActionLinkReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1))
        {
          PBReaderRecallMark();
          -[GEOPDActionData _addNoFlagsActionLink:](a1, v39);
LABEL_58:

LABEL_80:
          BOOL v21 = (int *)MEMORY[0x1E4F940C8];
          goto LABEL_81;
        }
LABEL_102:

LABEL_103:
        int v52 = 0;
        uint64_t v53 = &OBJC_IVAR___GEOXPCReply__error;
        BOOL v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_84:
        if (v54) {
LABEL_85:
        }
          *(unsigned char *)(a1 + v53[559]) |= 1u;
        if (v57 || (v52 & 1) == 0)
        {
          *(unsigned char *)(a1 + v53[559]) |= 8u;
          *(unsigned char *)(a1 + v53[559]) |= 4u;
          *(unsigned char *)(a1 + v53[559]) |= 2u;
          *(unsigned char *)(a1 + v53[559]) |= 0x40u;
          *(unsigned char *)(a1 + v53[559]) |= 0x10u;
          *(unsigned char *)(a1 + v53[559]) |= 0x20u;
        }
        else if (v19)
        {
          while (1)
          {
            int v48 = *v19++;
            char v49 = 8;
            switch(v48)
            {
              case 0:
                goto LABEL_96;
              case 1:
                goto LABEL_95;
              case 2:
                char v49 = 4;
                goto LABEL_95;
              case 3:
                char v49 = 2;
                goto LABEL_95;
              case 4:
                char v49 = 64;
                goto LABEL_95;
              case 5:
                char v49 = 16;
                goto LABEL_95;
              case 6:
                char v49 = 32;
LABEL_95:
                *(unsigned char *)(a1 + v53[559]) |= v49;
                break;
              default:
                continue;
            }
          }
        }
LABEL_96:
        if (v52) {
          unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
        }
        else {
          unint64_t v3 = 0;
        }
        if (v57)
        {
          char v50 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      case 4:
        if (!v34) {
          goto LABEL_69;
        }
        if ((*(unsigned char *)(a1 + 84) & 0x40) == 0)
        {
          uint64_t v43 = PBReaderReadString();
          uint64_t v44 = 64;
          goto LABEL_68;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_103;
        }
        char v47 = 2 * *(unsigned char *)(a1 + 84);
        goto LABEL_79;
      case 5:
        if (!v34) {
          goto LABEL_69;
        }
        if ((*(unsigned char *)(a1 + 84) & 0x10) == 0)
        {
          uint64_t v43 = PBReaderReadString();
          uint64_t v44 = 48;
          goto LABEL_68;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_103;
        }
        char v47 = 8 * *(unsigned char *)(a1 + 84);
        goto LABEL_79;
      case 6:
        if (!v34) {
          goto LABEL_69;
        }
        if ((*(unsigned char *)(a1 + 84) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_103;
          }
          char v47 = 4 * *(unsigned char *)(a1 + 84);
LABEL_79:
          v7 += v47 >> 7;
        }
        else
        {
          uint64_t v43 = PBReaderReadString();
          uint64_t v44 = 56;
LABEL_68:
          uint64_t v45 = *(void **)(a1 + v44);
          *(void *)(a1 + v44) = v43;

          --v7;
        }
        goto LABEL_80;
      default:
        if (v54 & 1) == 0 || (*(unsigned char *)(a1 + 84))
        {
LABEL_69:
          char v46 = PBReaderSkipValueWithTag();
          BOOL v21 = (int *)MEMORY[0x1E4F940C8];
          if ((v46 & 1) == 0)
          {
            int v52 = 0;
LABEL_83:
            uint64_t v53 = &OBJC_IVAR___GEOXPCReply__error;
            goto LABEL_84;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v40 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            uint64_t v41 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v40;
          }
          int v42 = PBUnknownFieldAdd();
          BOOL v21 = (int *)MEMORY[0x1E4F940C8];
          if (!v42)
          {
            int v52 = 0;
            uint64_t v53 = &OBJC_IVAR___GEOXPCReply__error;
            goto LABEL_85;
          }
        }
LABEL_81:
        if (!(v55 & 1 | (v7 != 0))) {
          goto LABEL_82;
        }
        break;
    }
  }
LABEL_82:
  int v52 = 1;
  goto LABEL_83;
}

void sub_1899EFEDC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1899EFFEC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1899F0218(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1899F0328(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1899F095C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1899F0A50(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1899F2360(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDActionDataCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v22 = *MEMORY[0x1E4F143B8];
  long long v16 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  id v2 = *(id *)(a1 + 40);
  uint64_t v3 = [v2 countByEnumeratingWithState:&v16 objects:v21 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v17;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v17 != v5) {
          objc_enumerationMutation(v2);
        }
        [*(id *)(*((void *)&v16 + 1) + 8 * v6++) readAll:1];
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v16 objects:v21 count:16];
    }
    while (v4);
  }

  long long v14 = 0u;
  long long v15 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  id v7 = *(id *)(a1 + 24);
  uint64_t v8 = [v7 countByEnumeratingWithState:&v12 objects:v20 count:16];
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)v13;
    do
    {
      uint64_t v11 = 0;
      do
      {
        if (*(void *)v13 != v10) {
          objc_enumerationMutation(v7);
        }
        -[GEOPDActionLink readAll:](*(void *)(*((void *)&v12 + 1) + 8 * v11++), 1);
      }
      while (v9 != v11);
      uint64_t v9 = [v7 countByEnumeratingWithState:&v12 objects:v20 count:16];
    }
    while (v9);
  }
}

unint64_t GEOPDActionDataReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 76))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDActionDataReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 80));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 72) = [v8 position];
  *(_DWORD *)(a1 + 76) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOPDActionDataReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOPDActionDataReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDActionDataReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOPDActionDataCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 80));
  return Specified;
}

void sub_1899F2694(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1899F29C4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1899F2D1C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDActionDataFilterReadAllFrom(uint64_t a1, void *a2)
{
  uint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    uint64_t v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      id v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        int v17 = v10 & 7;
        if (v16 || v17 == 4) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          if (v17 == 2)
          {
            if (!PBReaderPlaceMark()) {
              goto LABEL_49;
            }
            while (*(void *)&v3[*v4] < *(void *)&v3[*v5] && !v3[*v6])
            {
              char v19 = 0;
              unsigned int v20 = 0;
              uint64_t v21 = 0;
              while (1)
              {
                uint64_t v22 = *v4;
                uint64_t v23 = *(void *)&v3[v22];
                unint64_t v24 = v23 + 1;
                if (v23 == -1 || v24 > *(void *)&v3[*v5]) {
                  break;
                }
                char v25 = *(unsigned char *)(*(void *)&v3[*v7] + v23);
                *(void *)&v3[v22] = v24;
                v21 |= (unint64_t)(v25 & 0x7F) << v19;
                if (v25 < 0)
                {
                  v19 += 7;
                  BOOL v15 = v20++ >= 9;
                  if (!v15) {
                    continue;
                  }
                }
                goto LABEL_32;
              }
              v3[*v6] = 1;
LABEL_32:
              PBRepeatedInt32Add();
            }
            PBReaderRecallMark();
          }
          else
          {
            char v28 = 0;
            unsigned int v29 = 0;
            uint64_t v30 = 0;
            while (1)
            {
              uint64_t v31 = *v4;
              uint64_t v32 = *(void *)&v3[v31];
              unint64_t v33 = v32 + 1;
              if (v32 == -1 || v33 > *(void *)&v3[*v5]) {
                break;
              }
              char v34 = *(unsigned char *)(*(void *)&v3[*v7] + v32);
              *(void *)&v3[v31] = v33;
              v30 |= (unint64_t)(v34 & 0x7F) << v28;
              if (v34 < 0)
              {
                v28 += 7;
                BOOL v15 = v29++ >= 9;
                if (!v15) {
                  continue;
                }
              }
              goto LABEL_46;
            }
            v3[*v6] = 1;
LABEL_46:
            PBRepeatedInt32Add();
          }
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v26 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            uint64_t v27 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v26;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_49;
          }
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v35 = v3[*v6] == 0;
  }
  else
  {
LABEL_49:
    BOOL v35 = 0;
  }
  objc_sync_exit(v3);

  return v35;
}

void sub_1899F3738(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1899F3A64(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDActionLinkReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  uint64_t v7 = 0;
  uint64_t v8 = 0;
  char v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  int v12 = ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1)
      + (*(unsigned char *)(a1 + 52) & 1)
      + ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1);
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v10])
    {
      case -4:
        ++v12;
        uint64_t v13 = v7;
        goto LABEL_8;
      case -3:
        char v9 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v13 = v7;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 != 0;
        char v17 = v16 & ~(_BYTE)v11 | v8;
        unsigned __int8 v18 = v16 | v11;
        char v53 = v17;
        char v54 = v18 | v17;
        if ((v18 | v9)) {
          char v19 = 0;
        }
        else {
          char v19 = a3;
        }
        char v55 = (v19 == 0) | v18;
        BOOL v56 = v18;
        unsigned int v20 = (int *)MEMORY[0x1E4F940E8];
        uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
        uint64_t v22 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v7;
        uint64_t v14 = v8;
LABEL_8:
        uint64_t v15 = v11;
LABEL_10:
        ++v10;
        uint64_t v7 = v13;
        uint64_t v8 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v21)) {
      goto LABEL_60;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      if (v24++ >= 9)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_25:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_60:
      int v51 = 1;
      goto LABEL_61;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v56;
    if ((v55 & 1) == 0)
    {
      BOOL v35 = v19;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    if (v33 == 2) {
      break;
    }
    if (v33 == 1)
    {
      if (v34)
      {
        if ((*(unsigned char *)(a1 + 52) & 2) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_81;
          }
          v10 += *(unsigned __int8 *)(a1 + 52) << 30 >> 31;
        }
        else
        {
          uint64_t v39 = PBReaderReadString();
          id v40 = *(void **)(a1 + 24);
          *(void *)(a1 + 24) = v39;

          --v10;
        }
        goto LABEL_58;
      }
    }
    else if ((v53 & 1) != 0 && (*(unsigned char *)(a1 + 52) & 1) == 0)
    {
      if (!*(void *)(a1 + 16))
      {
        id v42 = objc_alloc_init(MEMORY[0x1E4F940B0]);
        uint64_t v43 = *(void **)(a1 + 16);
        *(void *)(a1 + 16) = v42;
      }
      int v44 = PBUnknownFieldAdd();
      uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
      if (!v44)
      {
        int v51 = 0;
        int v52 = &OBJC_IVAR___GEOXPCReply__error;
        goto LABEL_63;
      }
      goto LABEL_59;
    }
LABEL_54:
    char v45 = PBReaderSkipValueWithTag();
    uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
    if ((v45 & 1) == 0)
    {
      int v51 = 0;
LABEL_61:
      int v52 = &OBJC_IVAR___GEOXPCReply__error;
      goto LABEL_62;
    }
LABEL_59:
    if (!(v54 & 1 | (v10 != 0))) {
      goto LABEL_60;
    }
  }
  if (!v34 || (*(unsigned char *)(a1 + 52) & 4) != 0) {
    goto LABEL_54;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_81;
  }
  uint64_t v41 = objc_alloc_init(GEOPDLink);
  if (GEOPDLinkReadAllFrom((uint64_t)v41, (void *)v3, v7 & 1))
  {
    PBReaderRecallMark();
    -[GEOPDActionLink _addNoFlagsLink:](a1, v41);

LABEL_58:
    uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
    goto LABEL_59;
  }

LABEL_81:
  int v51 = 0;
  int v52 = &OBJC_IVAR___GEOXPCReply__error;
  uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_62:
  if ((v53 & 1) == 0) {
    goto LABEL_64;
  }
LABEL_63:
  *(unsigned char *)(a1 + v52[567]) |= 1u;
LABEL_64:
  if (v56 || (v51 & 1) == 0)
  {
    *(unsigned char *)(a1 + v52[567]) |= 2u;
    *(unsigned char *)(a1 + v52[567]) |= 4u;
    goto LABEL_74;
  }
  if (v19)
  {
    while (1)
    {
      int v48 = *v19++;
      int v47 = v48;
      if (v48 == 1) {
        break;
      }
      if (v47 == 2)
      {
        char v46 = 4;
LABEL_70:
        *(unsigned char *)(a1 + v52[567]) |= v46;
      }
      else if (!v47)
      {
        goto LABEL_74;
      }
    }
    char v46 = 2;
    goto LABEL_70;
  }
LABEL_74:
  if (v51) {
    unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
  }
  else {
    unint64_t v3 = 0;
  }
  if (v56)
  {
    char v49 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_1899F409C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1899F4664(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDActionLinkCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v11 = *MEMORY[0x1E4F143B8];
  long long v6 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  id v1 = *(id *)(a1 + 32);
  uint64_t v2 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t v4 = *(void *)v7;
    do
    {
      uint64_t v5 = 0;
      do
      {
        if (*(void *)v7 != v4) {
          objc_enumerationMutation(v1);
        }
        -[GEOPDLink readAll:](*(void *)(*((void *)&v6 + 1) + 8 * v5++), 1);
      }
      while (v3 != v5);
      uint64_t v3 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
    }
    while (v3);
  }
}

unint64_t GEOPDActionLinkReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDActionLinkReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    long long v9 = (int *)&GEOPDActionLinkReadAllFrom_recursiveTag;
  }
  else {
    long long v9 = (int *)&GEOPDActionLinkReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDActionLinkReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOPDActionLinkCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_1899F49D0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1899F4D04(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1899F4F50(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDAddressReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (a2)
  {
    os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
    long long v6 = (int *)MEMORY[0x1E4F940E0];
    *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 52);
    [(id)v3 seekToOffset:*(unsigned int *)(a1 + 48)];
    uint64_t v7 = 0;
    char v8 = 0;
    uint64_t v9 = 0;
    uint64_t v10 = 0;
    uint64_t v11 = 0;
    int v12 = &OBJC_IVAR___GEOXPCReply__error;
    unsigned int v13 = vaddv_s16((int16x4_t)(*(void *)&vshl_u16((uint16x4_t)(*(void *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 64)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFFFFFCFFFEFFFDLL) & 0xFF01FF01FF01FF01));
    while (2)
    {
      uint64_t v14 = 1;
      uint64_t v15 = 1;
      uint64_t v16 = 1;
      switch(a3[v7])
      {
        case -4:
          ++v13;
          goto LABEL_8;
        case -3:
          char v8 = 1;
          goto LABEL_7;
        case -2:
          uint64_t v15 = v10;
          goto LABEL_10;
        case -1:
          goto LABEL_10;
        case 0:
          BOOL v17 = v13 > 1;
          int v18 = v17 & ~v11 | v9;
          int v19 = v17 | v11;
          if (((v17 | v11) | v8)) {
            unsigned int v20 = 0;
          }
          else {
            unsigned int v20 = a3;
          }
          BOOL v21 = v7 != 0;
          uint64_t v22 = (int *)MEMORY[0x1E4F940E8];
          int v23 = 1;
          unsigned int v24 = (int *)MEMORY[0x1E4F940C8];
          if (*(void *)(v3 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(v3 + *v6)) {
            goto LABEL_80;
          }
          char v56 = v17 & ~(_BYTE)v11 | v9;
          int v58 = v21 | v19 | v18;
          char v59 = (v20 == 0) | v19;
          unint64_t v25 = (int *)MEMORY[0x1E4F940B8];
          char v57 = v17 | v11;
          break;
        default:
          ++v13;
LABEL_7:
          uint64_t v14 = v9;
LABEL_8:
          uint64_t v15 = v10;
          uint64_t v16 = v11;
LABEL_10:
          ++v7;
          uint64_t v9 = v14;
          uint64_t v10 = v15;
          uint64_t v11 = v16;
          continue;
      }
      break;
    }
    while (!*(unsigned char *)(v3 + *v24))
    {
      char v26 = 0;
      unsigned int v27 = 0;
      unint64_t v28 = 0;
      while (1)
      {
        uint64_t v29 = *v22;
        uint64_t v30 = *(void *)(v3 + v29);
        unint64_t v31 = v30 + 1;
        if (v30 == -1 || v31 > *(void *)(v3 + *v6)) {
          break;
        }
        char v32 = *(unsigned char *)(*(void *)(v3 + *v25) + v30);
        *(void *)(v3 + v29) = v31;
        v28 |= (unint64_t)(v32 & 0x7F) << v26;
        if ((v32 & 0x80) == 0) {
          goto LABEL_25;
        }
        v26 += 7;
        BOOL v33 = v27++ >= 9;
        if (v33)
        {
          unint64_t v28 = 0;
          int v34 = *(unsigned __int8 *)(v3 + *v24);
          goto LABEL_27;
        }
      }
      *(unsigned char *)(v3 + *v24) = 1;
LABEL_25:
      int v34 = *(unsigned __int8 *)(v3 + *v24);
      if (*(unsigned char *)(v3 + *v24)) {
        unint64_t v28 = 0;
      }
LABEL_27:
      if (v34 || (v28 & 7) == 4) {
        break;
      }
      unint64_t v36 = v28 >> 3;
      BOOL v37 = v19;
      if ((v59 & 1) == 0)
      {
        BOOL v38 = v20;
        do
        {
          int v40 = *v38++;
          int v39 = v40;
          BOOL v37 = v40 != 0;
          if (v40) {
            BOOL v41 = v39 == v36;
          }
          else {
            BOOL v41 = 1;
          }
        }
        while (!v41);
      }
      switch((int)v36)
      {
        case 1:
          if (!v37 || (*(unsigned char *)(a1 + 64) & 4) != 0) {
            goto LABEL_69;
          }
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_97;
          }
          id v42 = objc_alloc_init(GEOPDLocalizedAddress);
          if (!GEOPDLocalizedAddressReadAllFrom((uint64_t)v42, (void *)v3, v10 & 1)) {
            goto LABEL_96;
          }
          PBReaderRecallMark();
          -[GEOPDAddress _addNoFlagsLocalizedAddress:](a1, v42);
          goto LABEL_60;
        case 2:
          if (!v37 || (*(unsigned char *)(a1 + 64) & 8) != 0) {
            goto LABEL_69;
          }
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_97;
          }
          id v42 = objc_alloc_init(GEOLocalizedString);
          if (!GEOLocalizedStringReadAllFrom((uint64_t)v42, (void *)v3, v10 & 1)) {
            goto LABEL_96;
          }
          PBReaderRecallMark();
          -[GEOPDAddress _addNoFlagsSpokenNavigationAddress:](a1, v42);
          goto LABEL_60;
        case 3:
          if (!v37 || (*(unsigned char *)(a1 + 64) & 0x10) != 0) {
            goto LABEL_69;
          }
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_97;
          }
          id v42 = objc_alloc_init(GEOPDLocalizedSpokenStructuredAddress);
          if (!GEOPDLocalizedSpokenStructuredAddressReadAllFrom((uint64_t)v42, (void *)v3, v10 & 1))
          {
LABEL_96:

LABEL_97:
            int v23 = 0;
            int v12 = &OBJC_IVAR___GEOXPCReply__error;
            LOBYTE(v19) = v57;
            unsigned int v24 = (int *)MEMORY[0x1E4F940C8];
            goto LABEL_79;
          }
          PBReaderRecallMark();
          -[GEOPDAddress _addNoFlagsSpokenStructuredAddress:](a1, v42);
LABEL_60:

          LOBYTE(v19) = v57;
          unsigned int v24 = (int *)MEMORY[0x1E4F940C8];
          goto LABEL_75;
        case 4:
          if ((v8 & 1) == 0) {
            goto LABEL_69;
          }
          char v45 = 0;
          unsigned int v46 = 0;
          uint64_t v47 = 0;
          *(unsigned char *)(a1 + 64) |= 1u;
          while (2)
          {
            uint64_t v48 = *v22;
            uint64_t v49 = *(void *)(v3 + v48);
            unint64_t v50 = v49 + 1;
            if (v49 == -1 || v50 > *(void *)(v3 + *v6))
            {
              *(unsigned char *)(v3 + *v24) = 1;
            }
            else
            {
              char v51 = *(unsigned char *)(*(void *)(v3 + *v25) + v49);
              *(void *)(v3 + v48) = v50;
              v47 |= (unint64_t)(v51 & 0x7F) << v45;
              if (v51 < 0)
              {
                v45 += 7;
                BOOL v33 = v46++ >= 9;
                if (v33)
                {
                  LODWORD(v47) = 0;
                  goto LABEL_74;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(v3 + *v24)) {
            LODWORD(v47) = 0;
          }
LABEL_74:
          *(_DWORD *)(a1 + 60) = v47;
          goto LABEL_75;
        default:
          if ((v56 & 1) == 0 || (*(unsigned char *)(a1 + 64) & 2) != 0)
          {
LABEL_69:
            int v23 = PBReaderSkipValueWithTag();
            unsigned int v24 = (int *)MEMORY[0x1E4F940C8];
            LOBYTE(v19) = v57;
            if ((v23 & v58 & 1) == 0) {
              goto LABEL_78;
            }
          }
          else
          {
            if (!*(void *)(a1 + 16))
            {
              id v43 = objc_alloc_init(MEMORY[0x1E4F940B0]);
              int v44 = *(void **)(a1 + 16);
              *(void *)(a1 + 16) = v43;
            }
            int v23 = PBUnknownFieldAdd();
            LOBYTE(v19) = v57;
            unsigned int v24 = (int *)MEMORY[0x1E4F940C8];
            if (!v23)
            {
              int v12 = &OBJC_IVAR___GEOXPCReply__error;
              goto LABEL_81;
            }
LABEL_75:
            if ((v58 & 1) == 0) {
              goto LABEL_77;
            }
          }
          if (*(void *)(v3 + *v22) >= *(void *)(v3 + *v6)) {
            goto LABEL_77;
          }
          break;
      }
    }
LABEL_77:
    int v23 = 1;
LABEL_78:
    int v12 = &OBJC_IVAR___GEOXPCReply__error;
LABEL_79:
    LOBYTE(v18) = v56;
LABEL_80:
    if (v18) {
LABEL_81:
    }
      *(unsigned char *)(a1 + v12[572]) |= 2u;
    if (v19 & 1 | ((v23 & 1) == 0))
    {
      *(unsigned char *)(a1 + v12[572]) |= 4u;
      *(unsigned char *)(a1 + v12[572]) |= 8u;
      *(unsigned char *)(a1 + v12[572]) |= 0x10u;
    }
    else if (v20)
    {
      while (1)
      {
        int v53 = *v20++;
        char v52 = 4;
        switch(v53)
        {
          case 0:
            goto LABEL_90;
          case 1:
            goto LABEL_88;
          case 2:
            char v52 = 8;
            goto LABEL_88;
          case 3:
            char v52 = 16;
LABEL_88:
            *(unsigned char *)(a1 + v12[572]) |= v52;
            break;
          default:
            continue;
        }
      }
    }
LABEL_90:
    if (v23)
    {
      unint64_t v3 = *(unsigned char *)(v3 + *v24) == 0;
      if ((v19 & 1) == 0) {
        return v3;
      }
      goto LABEL_94;
    }
    unint64_t v3 = 0;
    if (v19)
    {
LABEL_94:
      char v54 = *(void **)(a1 + 8);
      *(void *)(a1 + 8) = 0;
    }
  }
  return v3;
}

void sub_1899F626C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDAddressCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  uint64_t v32 = *MEMORY[0x1E4F143B8];
  long long v25 = 0u;
  long long v26 = 0u;
  long long v27 = 0u;
  long long v28 = 0u;
  id v2 = a1[3];
  uint64_t v3 = [v2 countByEnumeratingWithState:&v25 objects:v31 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v26;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v26 != v5) {
          objc_enumerationMutation(v2);
        }
        -[GEOPDLocalizedAddress readAll:](*(void *)(*((void *)&v25 + 1) + 8 * v6++), 1);
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v25 objects:v31 count:16];
    }
    while (v4);
  }

  long long v23 = 0u;
  long long v24 = 0u;
  long long v21 = 0u;
  long long v22 = 0u;
  id v7 = a1[4];
  uint64_t v8 = [v7 countByEnumeratingWithState:&v21 objects:v30 count:16];
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)v22;
    do
    {
      uint64_t v11 = 0;
      do
      {
        if (*(void *)v22 != v10) {
          objc_enumerationMutation(v7);
        }
        [*(id *)(*((void *)&v21 + 1) + 8 * v11++) readAll:1];
      }
      while (v9 != v11);
      uint64_t v9 = [v7 countByEnumeratingWithState:&v21 objects:v30 count:16];
    }
    while (v9);
  }

  long long v19 = 0u;
  long long v20 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  id v12 = a1[5];
  uint64_t v13 = [v12 countByEnumeratingWithState:&v17 objects:v29 count:16];
  if (v13)
  {
    uint64_t v14 = v13;
    uint64_t v15 = *(void *)v18;
    do
    {
      uint64_t v16 = 0;
      do
      {
        if (*(void *)v18 != v15) {
          objc_enumerationMutation(v12);
        }
        -[GEOPDLocalizedSpokenStructuredAddress readAll:](*(void *)(*((void *)&v17 + 1) + 8 * v16++), 1);
      }
      while (v14 != v16);
      uint64_t v14 = [v12 countByEnumeratingWithState:&v17 objects:v29 count:16];
    }
    while (v14);
  }
}

unint64_t GEOPDAddressReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 52))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDAddressReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = [v8 position];
  *(_DWORD *)(a1 + 52) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOPDAddressReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOPDAddressReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDAddressReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOPDAddressCallReadAllRecursiveWithoutSynchronized((id *)a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_1899F670C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDLocalizedAddressIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      if ((v8 >> 3) == 3)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOAddressIsValid(a1)) {
          goto LABEL_29;
        }
        PBReaderRecallMark();
      }
      else if ((v8 >> 3) == 1 && v15 != 2 || (PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_29:
        PBReaderRecallMark();
        return 0;
      }
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

void sub_1899F6E20(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1899F71DC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDAddressComponentReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  uint64_t v7 = 0;
  uint64_t v8 = 0;
  char v9 = 0;
  uint64_t v10 = 0;
  int v11 = ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1)
      + (*(unsigned char *)(a1 + 52) & 1)
      + ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v10])
    {
      case -4:
        ++v11;
        uint64_t v12 = v7;
        goto LABEL_8;
      case -3:
        char v9 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_8;
      case 0:
        BOOL v14 = v11 != 0;
        unsigned __int8 v15 = v14 | v7;
        unsigned __int8 v51 = v14 & ~(_BYTE)v7 | v8;
        if (((v14 | v7) | v9)) {
          uint64_t v16 = 0;
        }
        else {
          uint64_t v16 = a3;
        }
        BOOL v17 = (int *)MEMORY[0x1E4F940E8];
        long long v18 = (int *)MEMORY[0x1E4F940C8];
        long long v19 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v11;
LABEL_7:
        uint64_t v12 = v7;
        uint64_t v13 = v8;
LABEL_8:
        ++v10;
        uint64_t v7 = v12;
        uint64_t v8 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v17) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v18)) {
      goto LABEL_59;
    }
    char v20 = 0;
    unsigned int v21 = 0;
    unint64_t v22 = 0;
    while (1)
    {
      uint64_t v23 = *v17;
      uint64_t v24 = *(void *)(v3 + v23);
      unint64_t v25 = v24 + 1;
      if (v24 == -1 || v25 > *(void *)(v3 + *v6)) {
        break;
      }
      char v26 = *(unsigned char *)(*(void *)(v3 + *v19) + v24);
      *(void *)(v3 + v23) = v25;
      v22 |= (unint64_t)(v26 & 0x7F) << v20;
      if ((v26 & 0x80) == 0) {
        goto LABEL_23;
      }
      v20 += 7;
      if (v21++ >= 9)
      {
        unint64_t v22 = 0;
        int v28 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_25;
      }
    }
    *(unsigned char *)(v3 + *v18) = 1;
LABEL_23:
    int v28 = *(unsigned __int8 *)(v3 + *v18);
    if (*(unsigned char *)(v3 + *v18)) {
      unint64_t v22 = 0;
    }
LABEL_25:
    if (v28 || (v22 & 7) == 4)
    {
LABEL_59:
      int v49 = 1;
      goto LABEL_60;
    }
    unint64_t v30 = v22 >> 3;
    BOOL v31 = v15;
    if (!((v16 == 0) | v15 & 1))
    {
      uint64_t v32 = v16;
      do
      {
        int v34 = *v32++;
        int v33 = v34;
        BOOL v31 = v34 != 0;
        if (v34) {
          BOOL v35 = v33 == v30;
        }
        else {
          BOOL v35 = 1;
        }
      }
      while (!v35);
    }
    if (v30 == 2) {
      break;
    }
    if (v30 == 1)
    {
      if (v31)
      {
        if ((*(unsigned char *)(a1 + 52) & 2) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_79;
          }
          char v43 = *(unsigned char *)(a1 + 52) << 6;
          goto LABEL_57;
        }
        uint64_t v36 = PBReaderReadString();
        uint64_t v37 = 24;
        goto LABEL_44;
      }
    }
    else if ((v51 & 1) != 0 && (*(unsigned char *)(a1 + 52) & 1) == 0)
    {
      if (!*(void *)(a1 + 16))
      {
        id v39 = objc_alloc_init(MEMORY[0x1E4F940B0]);
        int v40 = *(void **)(a1 + 16);
        *(void *)(a1 + 16) = v39;
      }
      int v41 = PBUnknownFieldAdd();
      long long v18 = (int *)MEMORY[0x1E4F940C8];
      if (!v41)
      {
        int v49 = 0;
        unint64_t v50 = &OBJC_IVAR___GEOXPCReply__error;
        goto LABEL_62;
      }
      goto LABEL_58;
    }
LABEL_51:
    char v42 = PBReaderSkipValueWithTag();
    long long v18 = (int *)MEMORY[0x1E4F940C8];
    if ((v42 & 1) == 0)
    {
      int v49 = 0;
LABEL_60:
      unint64_t v50 = &OBJC_IVAR___GEOXPCReply__error;
      goto LABEL_61;
    }
LABEL_58:
    if (!((v15 | v51) & 1 | (v10 != 0))) {
      goto LABEL_59;
    }
  }
  if (!v31) {
    goto LABEL_51;
  }
  if ((*(unsigned char *)(a1 + 52) & 4) == 0)
  {
    uint64_t v36 = PBReaderReadString();
    uint64_t v37 = 32;
LABEL_44:
    BOOL v38 = *(void **)(a1 + v37);
    *(void *)(a1 + v37) = v36;

    long long v18 = (int *)MEMORY[0x1E4F940C8];
    --v10;
    goto LABEL_58;
  }
  if (PBReaderSkipValueWithTag())
  {
    char v43 = 32 * *(unsigned char *)(a1 + 52);
LABEL_57:
    v10 += v43 >> 7;
    long long v18 = (int *)MEMORY[0x1E4F940C8];
    goto LABEL_58;
  }
LABEL_79:
  int v49 = 0;
  unint64_t v50 = &OBJC_IVAR___GEOXPCReply__error;
  long long v18 = (int *)MEMORY[0x1E4F940C8];
LABEL_61:
  if ((v51 & 1) == 0) {
    goto LABEL_63;
  }
LABEL_62:
  *(unsigned char *)(a1 + v50[579]) |= 1u;
LABEL_63:
  if (v15 & 1 | ((v49 & 1) == 0))
  {
    *(unsigned char *)(a1 + v50[579]) |= 2u;
    *(unsigned char *)(a1 + v50[579]) |= 4u;
    goto LABEL_73;
  }
  if (v16)
  {
    while (1)
    {
      int v46 = *v16++;
      int v45 = v46;
      if (v46 == 1) {
        break;
      }
      if (v45 == 2)
      {
        char v44 = 4;
LABEL_69:
        *(unsigned char *)(a1 + v50[579]) |= v44;
      }
      else if (!v45)
      {
        goto LABEL_73;
      }
    }
    char v44 = 2;
    goto LABEL_69;
  }
LABEL_73:
  if (v49)
  {
    unint64_t v3 = *(unsigned char *)(v3 + *v18) == 0;
    if ((v15 & 1) == 0) {
      return v3;
    }
LABEL_77:
    uint64_t v47 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  else
  {
    unint64_t v3 = 0;
    if (v15) {
      goto LABEL_77;
    }
  }
  return v3;
}

void sub_1899F7C98(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1899F7D7C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDAddressComponentReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDAddressComponentReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    char v9 = (int *)&GEOPDAddressComponentReadAllFrom_recursiveTag;
  }
  else {
    char v9 = (int *)&GEOPDAddressComponentReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDAddressComponentReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_1899F8154(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1899F82F4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDAddressComponentIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  BOOL v2 = (*(unsigned char *)(a1 + 52) & 0xE) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return v2;
}

void sub_1899F84DC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDAddressFilterReadAllFrom(uint64_t a1, void *a2)
{
  unint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      int v8 = v3[*v6];
      if (*(void *)&v3[*v4] >= *(void *)&v3[*v5]) {
        break;
      }
      if (v3[*v6])
      {
        int v8 = 1;
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      uint64_t v11 = 0;
      while (1)
      {
        uint64_t v12 = *v4;
        uint64_t v13 = *(void *)&v3[v12];
        unint64_t v14 = v13 + 1;
        if (v13 == -1 || v14 > *(void *)&v3[*v5]) {
          break;
        }
        char v15 = *(unsigned char *)(*(void *)&v3[*v7] + v13);
        *(void *)&v3[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0) {
          goto LABEL_13;
        }
        v9 += 7;
        if (v10++ >= 9)
        {
          char v17 = 0;
          int v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      int v8 = v3[*v6];
      if (v3[*v6]) {
        char v17 = 0;
      }
      else {
        char v17 = v11;
      }
LABEL_16:
      if (v8) {
        BOOL v18 = 1;
      }
      else {
        BOOL v18 = (v17 & 7) == 4;
      }
      if (v18) {
        break;
      }
      if (!*(void *)(a1 + 8))
      {
        id v19 = objc_alloc_init(MEMORY[0x1E4F940B0]);
        char v20 = *(void **)(a1 + 8);
        *(void *)(a1 + 8) = v19;
      }
      if ((PBUnknownFieldAdd() & 1) == 0) {
        goto LABEL_23;
      }
    }
    BOOL v21 = v8 == 0;
  }
  else
  {
LABEL_23:
    BOOL v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_1899F8B6C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1899F97B8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDAddressWithComponentsReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 52);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 48)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  unsigned int v12 = ((*(unsigned __int8 *)(a1 + 60) >> 2) & 1)
      + (*(unsigned char *)(a1 + 60) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 1) & 1);
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 > 1;
        int v17 = v16 & ~v11 | v9;
        int v49 = v16 | v11;
        if (((v16 | v11) | v8)) {
          BOOL v18 = 0;
        }
        else {
          BOOL v18 = a3;
        }
        id v19 = (int *)MEMORY[0x1E4F940E8];
        BOOL v20 = v7 != 0;
        int v21 = 1;
        if (*(void *)(v3 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(v3 + *v6)) {
          goto LABEL_67;
        }
        unint64_t v22 = (int *)MEMORY[0x1E4F940C8];
        char v47 = v17;
        int v48 = v20 | v49 | v17;
        uint64_t v23 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v9;
LABEL_8:
        uint64_t v14 = v10;
        uint64_t v15 = v11;
LABEL_10:
        ++v7;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(unsigned char *)(v3 + *v22)) {
      goto LABEL_65;
    }
    char v24 = 0;
    unsigned int v25 = 0;
    unint64_t v26 = 0;
    while (1)
    {
      uint64_t v27 = *v19;
      uint64_t v28 = *(void *)(v3 + v27);
      unint64_t v29 = v28 + 1;
      if (v28 == -1 || v29 > *(void *)(v3 + *v6)) {
        break;
      }
      char v30 = *(unsigned char *)(*(void *)(v3 + *v23) + v28);
      *(void *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0) {
        goto LABEL_25;
      }
      v24 += 7;
      if (v25++ >= 9)
      {
        unint64_t v26 = 0;
        int v32 = *(unsigned __int8 *)(v3 + *v22);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v22) = 1;
LABEL_25:
    int v32 = *(unsigned __int8 *)(v3 + *v22);
    if (*(unsigned char *)(v3 + *v22)) {
      unint64_t v26 = 0;
    }
LABEL_27:
    if (v32 || (v26 & 7) == 4)
    {
LABEL_65:
      int v21 = 1;
      goto LABEL_66;
    }
    unint64_t v34 = v26 >> 3;
    BOOL v35 = v49;
    if (!((v18 == 0) | v49 & 1))
    {
      uint64_t v36 = v18;
      do
      {
        int v38 = *v36++;
        int v37 = v38;
        BOOL v35 = v38 != 0;
        if (v38) {
          BOOL v39 = v37 == v34;
        }
        else {
          BOOL v39 = 1;
        }
      }
      while (!v39);
    }
    if (v34 == 3)
    {
      if (!v35 || (*(unsigned char *)(a1 + 60) & 2) != 0)
      {
LABEL_63:
        int v21 = PBReaderSkipValueWithTag();
        if ((v21 & v48 & 1) == 0) {
          goto LABEL_66;
        }
        goto LABEL_64;
      }
      if ((PBReaderPlaceMark() & 1) == 0) {
        goto LABEL_83;
      }
      int v40 = objc_alloc_init(GEOPDAddressComponent);
      if (!GEOPDAddressComponentReadAllFrom((uint64_t)v40, (void *)v3, v10 & 1)) {
        goto LABEL_82;
      }
      PBReaderRecallMark();
      -[GEOPDAddressWithComponents _addNoFlagsAdditionalComponent:](a1, v40);
      goto LABEL_55;
    }
    if (v34 == 2) {
      break;
    }
    if (v34 == 1)
    {
      if (!v35 || (*(unsigned char *)(a1 + 60) & 8) != 0) {
        goto LABEL_63;
      }
      PBReaderReadString();
      int v40 = (GEOPDAddressComponent *)objc_claimAutoreleasedReturnValue();
      if (v40) {
        -[GEOPDAddressWithComponents _addNoFlagsFormattedAddressLine:](a1, v40);
      }
      goto LABEL_55;
    }
    if (v47 & 1) == 0 || (*(unsigned char *)(a1 + 60)) {
      goto LABEL_63;
    }
    if (!*(void *)(a1 + 16))
    {
      id v41 = objc_alloc_init(MEMORY[0x1E4F940B0]);
      char v42 = *(void **)(a1 + 16);
      *(void *)(a1 + 16) = v41;
    }
    int v21 = PBUnknownFieldAdd();
    if (!v21) {
      goto LABEL_68;
    }
LABEL_61:
    if ((v48 & 1) == 0) {
      goto LABEL_65;
    }
LABEL_64:
    unint64_t v22 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)(v3 + *v19) >= *(void *)(v3 + *v6)) {
      goto LABEL_65;
    }
  }
  if (!v35 || (*(unsigned char *)(a1 + 60) & 4) != 0) {
    goto LABEL_63;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_83;
  }
  int v40 = objc_alloc_init(GEOPDAddressComponent);
  if (GEOPDAddressComponentReadAllFrom((uint64_t)v40, (void *)v3, v10 & 1))
  {
    PBReaderRecallMark();
    -[GEOPDAddressWithComponents _addNoFlagsFormattedAddressComponent:](a1, v40);
LABEL_55:

    goto LABEL_61;
  }
LABEL_82:

LABEL_83:
  int v21 = 0;
LABEL_66:
  LOBYTE(v17) = v47;
LABEL_67:
  if (v17) {
LABEL_68:
  }
    *(unsigned char *)(a1 + 60) |= 1u;
  if (v49 & 1 | ((v21 & 1) == 0))
  {
    *(unsigned char *)(a1 + 60) |= 8u;
    *(unsigned char *)(a1 + 60) |= 4u;
    *(unsigned char *)(a1 + 60) |= 2u;
  }
  else if (v18)
  {
    while (1)
    {
      int v43 = *v18++;
      char v44 = 8;
      switch(v43)
      {
        case 0:
          goto LABEL_76;
        case 1:
          goto LABEL_75;
        case 2:
          char v44 = 4;
          goto LABEL_75;
        case 3:
          char v44 = 2;
LABEL_75:
          *(unsigned char *)(a1 + 60) |= v44;
          break;
        default:
          continue;
      }
    }
  }
LABEL_76:
  if (v21) {
    unint64_t v3 = *(unsigned char *)(v3 + (int)*MEMORY[0x1E4F940C8]) == 0;
  }
  else {
    unint64_t v3 = 0;
  }
  if (v49)
  {
    int v45 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_1899F9F74(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1899FA104(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1899FA738(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDAddressWithComponentsCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v22 = *MEMORY[0x1E4F143B8];
  long long v16 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  id v2 = *(id *)(a1 + 32);
  uint64_t v3 = [v2 countByEnumeratingWithState:&v16 objects:v21 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v17;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v17 != v5) {
          objc_enumerationMutation(v2);
        }
        -[GEOPDAddressComponent readAll:](*(void *)(*((void *)&v16 + 1) + 8 * v6++), 1);
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v16 objects:v21 count:16];
    }
    while (v4);
  }

  long long v14 = 0u;
  long long v15 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  id v7 = *(id *)(a1 + 24);
  uint64_t v8 = [v7 countByEnumeratingWithState:&v12 objects:v20 count:16];
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)v13;
    do
    {
      uint64_t v11 = 0;
      do
      {
        if (*(void *)v13 != v10) {
          objc_enumerationMutation(v7);
        }
        -[GEOPDAddressComponent readAll:](*(void *)(*((void *)&v12 + 1) + 8 * v11++), 1);
      }
      while (v9 != v11);
      uint64_t v9 = [v7 countByEnumeratingWithState:&v12 objects:v20 count:16];
    }
    while (v9);
  }
}

BOOL GEOPDAddressWithComponentsIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      unint64_t v17 = v8 >> 3;
      if ((v8 >> 3) == 3 || v17 == 2)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDSearchKeyValuePairIsValid(a1)) {
          goto LABEL_30;
        }
        PBReaderRecallMark();
      }
      else if (v17 == 1 && v15 != 2 || (PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_30:
        PBReaderRecallMark();
        return 0;
      }
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v18 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v18;
}

void sub_1899FB2C8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDAddressWithComponentsIsDirty(uint64_t a1)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  if ((*(unsigned char *)(a1 + 60) & 0x1E) != 0) {
    return 1;
  }
  if ((*(unsigned char *)(a1 + 60) & 2) == 0) {
    return 0;
  }
  long long v9 = 0u;
  long long v10 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  id v3 = *(id *)(a1 + 24);
  uint64_t v2 = [v3 countByEnumeratingWithState:&v7 objects:v11 count:16];
  if (v2)
  {
    uint64_t v4 = *(void *)v8;
    while (2)
    {
      for (uint64_t i = 0; i != v2; ++i)
      {
        if (*(void *)v8 != v4) {
          objc_enumerationMutation(v3);
        }
        if (GEOPDAddressComponentIsDirty(*(void *)(*((void *)&v7 + 1) + 8 * i)))
        {
          uint64_t v2 = 1;
          goto LABEL_15;
        }
      }
      uint64_t v2 = [v3 countByEnumeratingWithState:&v7 objects:v11 count:16];
      if (v2) {
        continue;
      }
      break;
    }
  }
LABEL_15:

  return v2;
}

os_unfair_lock_s *GEOPDAddressWithComponentsIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOPDAddressWithComponentsIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 14);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_1899FB7EC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDAddressWithComponentsFilterReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    long long v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      int v8 = v3[*v6];
      if (*(void *)&v3[*v4] >= *(void *)&v3[*v5]) {
        break;
      }
      if (v3[*v6])
      {
        int v8 = 1;
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      uint64_t v11 = 0;
      while (1)
      {
        uint64_t v12 = *v4;
        uint64_t v13 = *(void *)&v3[v12];
        unint64_t v14 = v13 + 1;
        if (v13 == -1 || v14 > *(void *)&v3[*v5]) {
          break;
        }
        char v15 = *(unsigned char *)(*(void *)&v3[*v7] + v13);
        *(void *)&v3[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0) {
          goto LABEL_13;
        }
        v9 += 7;
        if (v10++ >= 9)
        {
          char v17 = 0;
          int v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      int v8 = v3[*v6];
      if (v3[*v6]) {
        char v17 = 0;
      }
      else {
        char v17 = v11;
      }
LABEL_16:
      if (v8) {
        BOOL v18 = 1;
      }
      else {
        BOOL v18 = (v17 & 7) == 4;
      }
      if (v18) {
        break;
      }
      if (!*(void *)(a1 + 8))
      {
        id v19 = objc_alloc_init(MEMORY[0x1E4F940B0]);
        BOOL v20 = *(void **)(a1 + 8);
        *(void *)(a1 + 8) = v19;
      }
      if ((PBUnknownFieldAdd() & 1) == 0) {
        goto LABEL_23;
      }
    }
    BOOL v21 = v8 == 0;
  }
  else
  {
LABEL_23:
    BOOL v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_1899FC284(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1899FC47C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1899FC854(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1899FD440(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDAmenitiesCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v22 = *MEMORY[0x1E4F143B8];
  long long v16 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  id v2 = *(id *)(a1 + 32);
  uint64_t v3 = [v2 countByEnumeratingWithState:&v16 objects:v21 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v17;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v17 != v5) {
          objc_enumerationMutation(v2);
        }
        [*(id *)(*((void *)&v16 + 1) + 8 * v6++) readAll:1];
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v16 objects:v21 count:16];
    }
    while (v4);
  }

  long long v14 = 0u;
  long long v15 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  id v7 = *(id *)(a1 + 24);
  uint64_t v8 = [v7 countByEnumeratingWithState:&v12 objects:v20 count:16];
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)v13;
    do
    {
      uint64_t v11 = 0;
      do
      {
        if (*(void *)v13 != v10) {
          objc_enumerationMutation(v7);
        }
        objc_msgSend(*(id *)(*((void *)&v12 + 1) + 8 * v11++), "readAll:", 1, (void)v12);
      }
      while (v9 != v11);
      uint64_t v9 = [v7 countByEnumeratingWithState:&v12 objects:v20 count:16];
    }
    while (v9);
  }
}

unint64_t GEOPDAmenitiesReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOPDAmenitiesReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_1899FD638(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDAmenitiesIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      if ((v8 >> 3) == 2 || (v8 >> 3) == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDAmenityValueIsValid(a1))
        {
LABEL_27:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_27;
      }
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

BOOL GEOPDAmenityValueIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_49;
          }
          unsigned int v17 = 0;
          while (1)
          {
            uint64_t v18 = *v2;
            uint64_t v19 = *(void *)&a1[v18];
            unint64_t v20 = v19 + 1;
            if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
              goto LABEL_35;
            }
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if (v21 < 0)
            {
              BOOL v22 = v17++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_46;
          }
        case 2u:
          if ((v8 & 7) != 0) {
            goto LABEL_49;
          }
          unsigned int v23 = 0;
          break;
        case 3u:
          if (v15 == 2) {
            goto LABEL_45;
          }
          goto LABEL_49;
        case 4u:
          if (v15 == 2) {
            goto LABEL_45;
          }
          goto LABEL_49;
        case 5u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOLocalizedStringIsValid(a1)) {
            goto LABEL_49;
          }
          PBReaderRecallMark();
          continue;
        case 6u:
          if (v15 == 2) {
            goto LABEL_45;
          }
          goto LABEL_49;
        default:
LABEL_45:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_49:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        uint64_t v24 = *v2;
        uint64_t v25 = *(void *)&a1[v24];
        unint64_t v26 = v25 + 1;
        if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
          break;
        }
        int v27 = *(char *)(*(void *)&a1[*v5] + v25);
        *(void *)&a1[v24] = v26;
        if (v27 < 0)
        {
          BOOL v22 = v23++ > 8;
          if (!v22) {
            continue;
          }
        }
        goto LABEL_46;
      }
LABEL_35:
      a1[*v4] = 1;
LABEL_46:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v28 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v28;
}

void sub_1899FDDAC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDAmenitiesIsDirty(uint64_t a1)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  if ((*(unsigned char *)(a1 + 52) & 0xE) != 0) {
    return 1;
  }
  if ((*(unsigned char *)(a1 + 52) & 2) == 0) {
    return 0;
  }
  long long v9 = 0u;
  long long v10 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  id v3 = *(id *)(a1 + 24);
  uint64_t v2 = [v3 countByEnumeratingWithState:&v7 objects:v11 count:16];
  if (v2)
  {
    uint64_t v4 = *(void *)v8;
    while (2)
    {
      for (uint64_t i = 0; i != v2; ++i)
      {
        if (*(void *)v8 != v4) {
          objc_enumerationMutation(v3);
        }
        if (GEOPDAmenityValueIsDirty(*(void *)(*((void *)&v7 + 1) + 8 * i)))
        {
          uint64_t v2 = 1;
          goto LABEL_15;
        }
      }
      uint64_t v2 = [v3 countByEnumeratingWithState:&v7 objects:v11 count:16];
      if (v2) {
        continue;
      }
      break;
    }
  }
LABEL_15:

  return v2;
}

os_unfair_lock_s *GEOPDAmenitiesIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOPDAmenitiesIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 12);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_1899FE380(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1899FE708(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDAmenityRibbonItemReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      long long v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        int v17 = v10 & 7;
        if (v16 || v17 == 4) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          if (v17 == 2)
          {
            if (!PBReaderPlaceMark()) {
              goto LABEL_49;
            }
            while (*(void *)&v3[*v4] < *(void *)&v3[*v5] && !v3[*v6])
            {
              char v19 = 0;
              unsigned int v20 = 0;
              uint64_t v21 = 0;
              while (1)
              {
                uint64_t v22 = *v4;
                uint64_t v23 = *(void *)&v3[v22];
                unint64_t v24 = v23 + 1;
                if (v23 == -1 || v24 > *(void *)&v3[*v5]) {
                  break;
                }
                char v25 = *(unsigned char *)(*(void *)&v3[*v7] + v23);
                *(void *)&v3[v22] = v24;
                v21 |= (unint64_t)(v25 & 0x7F) << v19;
                if (v25 < 0)
                {
                  v19 += 7;
                  BOOL v15 = v20++ >= 9;
                  if (!v15) {
                    continue;
                  }
                }
                goto LABEL_32;
              }
              v3[*v6] = 1;
LABEL_32:
              PBRepeatedUInt32Add();
            }
            PBReaderRecallMark();
          }
          else
          {
            char v28 = 0;
            unsigned int v29 = 0;
            uint64_t v30 = 0;
            while (1)
            {
              uint64_t v31 = *v4;
              uint64_t v32 = *(void *)&v3[v31];
              unint64_t v33 = v32 + 1;
              if (v32 == -1 || v33 > *(void *)&v3[*v5]) {
                break;
              }
              char v34 = *(unsigned char *)(*(void *)&v3[*v7] + v32);
              *(void *)&v3[v31] = v33;
              v30 |= (unint64_t)(v34 & 0x7F) << v28;
              if (v34 < 0)
              {
                v28 += 7;
                BOOL v15 = v29++ >= 9;
                if (!v15) {
                  continue;
                }
              }
              goto LABEL_46;
            }
            v3[*v6] = 1;
LABEL_46:
            PBRepeatedUInt32Add();
          }
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v26 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            int v27 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v26;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_49;
          }
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v35 = v3[*v6] == 0;
  }
  else
  {
LABEL_49:
    BOOL v35 = 0;
  }
  objc_sync_exit(v3);

  return v35;
}

void sub_1899FF4CC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A000A4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDAmenityValueReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 60);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 56)];
  long long v7 = v6;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  uint64_t v12 = 0;
  unsigned int v13 = (vaddv_s16((int16x4_t)(*(void *)&vshl_u16((uint16x4_t)(*(void *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 76)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFBFFFCFFFAFFFDLL) & 0xFF01FF01FF01FF01))+ ((*(unsigned char *)(a1 + 76) & 4) != 0));
  while (2)
  {
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    uint64_t v16 = 1;
    switch(a3[v9])
    {
      case -4:
        ++v13;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v15 = v11;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v17 = v13 > 2;
        char v18 = v17 & ~(_BYTE)v12 | v10;
        unsigned __int8 v19 = v17 | v12;
        char v69 = v18;
        char v70 = v19 | v18;
        if ((v19 | v8)) {
          unsigned int v20 = 0;
        }
        else {
          unsigned int v20 = a3;
        }
        char v71 = (v20 == 0) | v19;
        BOOL v72 = v19;
        uint64_t v21 = (int *)MEMORY[0x1E4F940E8];
        uint64_t v22 = (int *)MEMORY[0x1E4F940C8];
        uint64_t v23 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v13;
LABEL_7:
        uint64_t v14 = v10;
LABEL_8:
        uint64_t v15 = v11;
        uint64_t v16 = v12;
LABEL_10:
        ++v9;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        uint64_t v12 = v16;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v21) >= *(void *)(v3 + *v7) || *(unsigned char *)(v3 + *v22)) {
      goto LABEL_95;
    }
    char v24 = 0;
    unsigned int v25 = 0;
    unint64_t v26 = 0;
    while (1)
    {
      uint64_t v27 = *v21;
      uint64_t v28 = *(void *)(v3 + v27);
      unint64_t v29 = v28 + 1;
      if (v28 == -1 || v29 > *(void *)(v3 + *v7)) {
        break;
      }
      char v30 = *(unsigned char *)(*(void *)(v3 + *v23) + v28);
      *(void *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0) {
        goto LABEL_25;
      }
      v24 += 7;
      BOOL v31 = v25++ >= 9;
      if (v31)
      {
        unint64_t v26 = 0;
        int v32 = *(unsigned __int8 *)(v3 + *v22);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v22) = 1;
LABEL_25:
    int v32 = *(unsigned __int8 *)(v3 + *v22);
    if (*(unsigned char *)(v3 + *v22)) {
      unint64_t v26 = 0;
    }
LABEL_27:
    if (v32 || (v26 & 7) == 4)
    {
LABEL_95:
      int v67 = 1;
      goto LABEL_96;
    }
    unint64_t v34 = v26 >> 3;
    BOOL v35 = v72;
    if ((v71 & 1) == 0)
    {
      uint64_t v36 = v20;
      do
      {
        int v38 = *v36++;
        int v37 = v38;
        BOOL v35 = v38 != 0;
        if (v38) {
          BOOL v39 = v37 == v34;
        }
        else {
          BOOL v39 = 1;
        }
      }
      while (!v39);
    }
    switch((int)v34)
    {
      case 1:
        if ((v8 & 1) == 0) {
          goto LABEL_76;
        }
        char v40 = 0;
        unsigned int v41 = 0;
        uint64_t v42 = 0;
        *(unsigned char *)(a1 + 76) |= 1u;
        while (1)
        {
          uint64_t v43 = *v21;
          uint64_t v44 = *(void *)(v3 + v43);
          unint64_t v45 = v44 + 1;
          if (v44 == -1 || v45 > *(void *)(v3 + *v7)) {
            break;
          }
          char v46 = *(unsigned char *)(*(void *)(v3 + *v23) + v44);
          *(void *)(v3 + v43) = v45;
          v42 |= (unint64_t)(v46 & 0x7F) << v40;
          if ((v46 & 0x80) == 0) {
            goto LABEL_79;
          }
          v40 += 7;
          BOOL v31 = v41++ >= 9;
          if (v31)
          {
            LODWORD(v42) = 0;
            goto LABEL_81;
          }
        }
        *(unsigned char *)(v3 + *v22) = 1;
LABEL_79:
        if (*(unsigned char *)(v3 + *v22)) {
          LODWORD(v42) = 0;
        }
LABEL_81:
        *(_DWORD *)(a1 + 68) = v42;
        goto LABEL_94;
      case 2:
        if ((v8 & 1) == 0) {
          goto LABEL_76;
        }
        char v50 = 0;
        unsigned int v51 = 0;
        uint64_t v52 = 0;
        *(unsigned char *)(a1 + 76) |= 2u;
        while (2)
        {
          uint64_t v53 = *v21;
          uint64_t v54 = *(void *)(v3 + v53);
          unint64_t v55 = v54 + 1;
          if (v54 == -1 || v55 > *(void *)(v3 + *v7))
          {
            *(unsigned char *)(v3 + *v22) = 1;
          }
          else
          {
            char v56 = *(unsigned char *)(*(void *)(v3 + *v23) + v54);
            *(void *)(v3 + v53) = v55;
            v52 |= (unint64_t)(v56 & 0x7F) << v50;
            if (v56 < 0)
            {
              v50 += 7;
              BOOL v31 = v51++ >= 9;
              if (v31)
              {
                uint64_t v52 = 0;
                goto LABEL_85;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v22)) {
          uint64_t v52 = 0;
        }
LABEL_85:
        *(unsigned char *)(a1 + 72) = v52 != 0;
        goto LABEL_94;
      case 3:
        if (!v35) {
          goto LABEL_76;
        }
        if ((*(unsigned char *)(a1 + 76) & 0x40) == 0)
        {
          uint64_t v57 = PBReaderReadString();
          uint64_t v58 = 48;
          goto LABEL_75;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_114;
        }
        char v62 = 2 * *(unsigned char *)(a1 + 76);
        goto LABEL_92;
      case 4:
        if (!v35) {
          goto LABEL_76;
        }
        if ((*(unsigned char *)(a1 + 76) & 8) == 0)
        {
          uint64_t v57 = PBReaderReadString();
          uint64_t v58 = 24;
          goto LABEL_75;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_114;
        }
        char v62 = 16 * *(unsigned char *)(a1 + 76);
        goto LABEL_92;
      case 5:
        if (!v35 || (*(unsigned char *)(a1 + 76) & 0x10) != 0) {
          goto LABEL_76;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_114;
        }
        char v59 = objc_alloc_init(GEOLocalizedString);
        if (GEOLocalizedStringReadAllFrom((uint64_t)v59, (void *)v3, v11 & 1))
        {
          PBReaderRecallMark();
          -[GEOPDAmenityValue _addNoFlagsName:](a1, v59);

LABEL_93:
          uint64_t v22 = (int *)MEMORY[0x1E4F940C8];
          long long v7 = (int *)MEMORY[0x1E4F940E0];
LABEL_94:
          if (!(v70 & 1 | (v9 != 0))) {
            goto LABEL_95;
          }
          continue;
        }

LABEL_114:
        int v67 = 0;
        uint64_t v22 = (int *)MEMORY[0x1E4F940C8];
LABEL_96:
        char v68 = &OBJC_IVAR___GEOPDAddressComponent__unknownFields;
        if (v69) {
LABEL_97:
        }
          *(unsigned char *)(a1 + v68[26]) |= 4u;
        if (v72 || (v67 & 1) == 0)
        {
          *(unsigned char *)(a1 + v68[26]) |= 0x40u;
          *(unsigned char *)(a1 + v68[26]) |= 8u;
          *(unsigned char *)(a1 + v68[26]) |= 0x10u;
          *(unsigned char *)(a1 + v68[26]) |= 0x20u;
        }
        else if (v20)
        {
          while (1)
          {
            int v64 = *v20++;
            char v63 = 64;
            switch(v64)
            {
              case 0:
                goto LABEL_107;
              case 3:
                goto LABEL_105;
              case 4:
                char v63 = 8;
                goto LABEL_105;
              case 5:
                char v63 = 16;
                goto LABEL_105;
              case 6:
                char v63 = 32;
LABEL_105:
                *(unsigned char *)(a1 + v68[26]) |= v63;
                break;
              default:
                continue;
            }
          }
        }
LABEL_107:
        if (v67) {
          unint64_t v3 = *(unsigned char *)(v3 + *v22) == 0;
        }
        else {
          unint64_t v3 = 0;
        }
        if (v72)
        {
          uint64_t v65 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      case 6:
        if (!v35) {
          goto LABEL_76;
        }
        if ((*(unsigned char *)(a1 + 76) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_114;
          }
          char v62 = 4 * *(unsigned char *)(a1 + 76);
LABEL_92:
          v9 += v62 >> 7;
        }
        else
        {
          uint64_t v57 = PBReaderReadString();
          uint64_t v58 = 40;
LABEL_75:
          uint64_t v60 = *(void **)(a1 + v58);
          *(void *)(a1 + v58) = v57;

          --v9;
        }
        goto LABEL_93;
      default:
        if ((v69 & 1) == 0 || (*(unsigned char *)(a1 + 76) & 4) != 0)
        {
LABEL_76:
          char v61 = PBReaderSkipValueWithTag();
          long long v7 = (int *)MEMORY[0x1E4F940E0];
          uint64_t v22 = (int *)MEMORY[0x1E4F940C8];
          if ((v61 & 1) == 0)
          {
            int v67 = 0;
            goto LABEL_96;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v47 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            int v48 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v47;
          }
          int v49 = PBUnknownFieldAdd();
          uint64_t v22 = (int *)MEMORY[0x1E4F940C8];
          long long v7 = (int *)MEMORY[0x1E4F940E0];
          if (!v49)
          {
            int v67 = 0;
            char v68 = &OBJC_IVAR___GEOPDAddressComponent__unknownFields;
            goto LABEL_97;
          }
        }
        goto LABEL_94;
    }
  }
}

void sub_189A00A24(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A00B90(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A00F54(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A02114(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDAmenityValueCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v11 = *MEMORY[0x1E4F143B8];
  long long v6 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  id v1 = *(id *)(a1 + 32);
  uint64_t v2 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t v4 = *(void *)v7;
    do
    {
      uint64_t v5 = 0;
      do
      {
        if (*(void *)v7 != v4) {
          objc_enumerationMutation(v1);
        }
        objc_msgSend(*(id *)(*((void *)&v6 + 1) + 8 * v5++), "readAll:", 1, (void)v6);
      }
      while (v3 != v5);
      uint64_t v3 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
    }
    while (v3);
  }
}

unint64_t GEOPDAmenityValueReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 60))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDAmenityValueReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = [v8 position];
  *(_DWORD *)(a1 + 60) = [v8 length];
  if (a3) {
    long long v9 = (int *)&GEOPDAmenityValueReadAllFrom_recursiveTag;
  }
  else {
    long long v9 = (int *)&GEOPDAmenityValueReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDAmenityValueReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOPDAmenityValueCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_189A023A8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDAmenityValueReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOPDAmenityValueReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189A0240C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A026D0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDAmenityValueIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  BOOL v2 = *(unsigned __int8 *)(a1 + 76) > 7u;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return v2;
}

void sub_189A02BBC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A03060(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A033D4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDAnnotatedItemListReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  long long v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 52);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 48)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  unsigned int v12 = vaddv_s16((int16x4_t)(*(void *)&vshl_u16((uint16x4_t)(*(void *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 64)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFFFFFDFFFCFFFELL) & 0xFF01FF01FF01FF01));
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 > 1;
        char v17 = v16 & ~(_BYTE)v11 | v9;
        unsigned __int8 v18 = v16 | v11;
        char v62 = v17;
        char v63 = v18 | v17;
        char v61 = v8;
        if ((v18 | v8)) {
          unsigned __int8 v19 = 0;
        }
        else {
          unsigned __int8 v19 = a3;
        }
        unsigned int v20 = (int *)MEMORY[0x1E4F940E8];
        uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
        char v64 = (v19 == 0) | v18;
        BOOL v65 = v18;
        uint64_t v22 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v9;
LABEL_8:
        uint64_t v14 = v10;
        uint64_t v15 = v11;
LABEL_10:
        ++v7;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v21)) {
      goto LABEL_83;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      BOOL v30 = v24++ >= 9;
      if (v30)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_25:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_83:
      int v59 = 1;
      goto LABEL_84;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v65;
    if ((v64 & 1) == 0)
    {
      BOOL v35 = v19;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    switch((int)v33)
    {
      case 1:
        if (!v34) {
          goto LABEL_68;
        }
        if ((*(unsigned char *)(a1 + 64) & 0x10) == 0)
        {
          uint64_t v39 = PBReaderReadString();
          char v40 = *(void **)(a1 + 40);
          *(void *)(a1 + 40) = v39;
          goto LABEL_59;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_101;
        }
        char v54 = 8 * *(unsigned char *)(a1 + 64);
        goto LABEL_80;
      case 2:
        if (!v34) {
          goto LABEL_68;
        }
        if ((*(unsigned char *)(a1 + 64) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_101;
          }
          char v54 = 32 * *(unsigned char *)(a1 + 64);
          goto LABEL_80;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_101;
        }
        uint64_t v44 = objc_alloc_init(GEOPDPictureItemContainer);
        if (!GEOPDPictureItemContainerReadAllFrom((uint64_t)v44, (void *)v3, v10 & 1)) {
          goto LABEL_100;
        }
        PBReaderRecallMark();
        uint64_t v45 = 24;
        goto LABEL_58;
      case 3:
        if (!v34) {
          goto LABEL_68;
        }
        if ((*(unsigned char *)(a1 + 64) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_101;
          }
          char v54 = 16 * *(unsigned char *)(a1 + 64);
LABEL_80:
          v7 += v54 >> 7;
LABEL_81:
          uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
          goto LABEL_82;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_101;
        }
        uint64_t v44 = objc_alloc_init(GEOPDTextItemContainer);
        if (GEOPDTextItemContainerReadAllFrom((uint64_t)v44, (void *)v3, v10 & 1))
        {
          PBReaderRecallMark();
          uint64_t v45 = 32;
LABEL_58:
          char v40 = *(void **)(a1 + v45);
          *(void *)(a1 + v45) = v44;
LABEL_59:

          --v7;
          goto LABEL_81;
        }
LABEL_100:

LABEL_101:
        int v59 = 0;
        uint64_t v60 = &OBJC_IVAR___GEOXPCReply__error;
        uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_85:
        if (v62) {
LABEL_86:
        }
          *(unsigned char *)(a1 + v60[589]) |= 2u;
        if (v65 || (v59 & 1) == 0)
        {
          *(unsigned char *)(a1 + v60[589]) |= 0x10u;
          *(unsigned char *)(a1 + v60[589]) |= 4u;
          *(unsigned char *)(a1 + v60[589]) |= 8u;
        }
        else if (v19)
        {
          while (1)
          {
            int v55 = *v19++;
            char v56 = 16;
            switch(v55)
            {
              case 0:
                goto LABEL_94;
              case 1:
                goto LABEL_93;
              case 2:
                char v56 = 4;
                goto LABEL_93;
              case 3:
                char v56 = 8;
LABEL_93:
                *(unsigned char *)(a1 + v60[589]) |= v56;
                break;
              default:
                continue;
            }
          }
        }
LABEL_94:
        if (v59) {
          unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
        }
        else {
          unint64_t v3 = 0;
        }
        if (v65)
        {
          uint64_t v57 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      case 4:
        if ((v61 & 1) == 0) {
          goto LABEL_68;
        }
        char v46 = 0;
        unsigned int v47 = 0;
        uint64_t v48 = 0;
        *(unsigned char *)(a1 + 64) |= 1u;
        while (2)
        {
          uint64_t v49 = *v20;
          uint64_t v50 = *(void *)(v3 + v49);
          unint64_t v51 = v50 + 1;
          if (v50 == -1 || v51 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v52 = *(unsigned char *)(*(void *)(v3 + *v22) + v50);
            *(void *)(v3 + v49) = v51;
            v48 |= (unint64_t)(v52 & 0x7F) << v46;
            if (v52 < 0)
            {
              v46 += 7;
              BOOL v30 = v47++ >= 9;
              if (v30)
              {
                LODWORD(v48) = 0;
                goto LABEL_73;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          LODWORD(v48) = 0;
        }
LABEL_73:
        *(_DWORD *)(a1 + 60) = v48;
        goto LABEL_82;
      default:
        if ((v62 & 1) == 0 || (*(unsigned char *)(a1 + 64) & 2) != 0)
        {
LABEL_68:
          char v53 = PBReaderSkipValueWithTag();
          uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
          if ((v53 & 1) == 0)
          {
            int v59 = 0;
LABEL_84:
            uint64_t v60 = &OBJC_IVAR___GEOXPCReply__error;
            goto LABEL_85;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v41 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            uint64_t v42 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v41;
          }
          int v43 = PBUnknownFieldAdd();
          uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
          if (!v43)
          {
            int v59 = 0;
            uint64_t v60 = &OBJC_IVAR___GEOXPCReply__error;
            goto LABEL_86;
          }
        }
LABEL_82:
        if (!(v63 & 1 | (v7 != 0))) {
          goto LABEL_83;
        }
        continue;
    }
  }
}

void sub_189A03BF8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A03D08(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A04218(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDAnnotatedItemListReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 52))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDAnnotatedItemListReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = [v8 position];
  *(_DWORD *)(a1 + 52) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOPDAnnotatedItemListReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOPDAnnotatedItemListReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDAnnotatedItemListReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    -[GEOPDTextItemContainer readAll:](*(void *)(a1 + 32), 1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_189A04498(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A046E0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A048B4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDPhotoSizeFilterValueIsValid(void *a1)
{
  uint64_t v6 = [a1 position];
  uint64_t v7 = [a1 length];
  int v5 = 0;
  uint64_t v4 = 0;
  BOOL AllFrom = GEOPDPhotoSizeFilterValueReadAllFrom((uint64_t)&v4, (uint64_t)a1);
  PBReaderRecallMark();
  return AllFrom;
}

unint64_t GEOPDAppClipParamsReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 68);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 64)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  unsigned int v11 = (vaddv_s16((int16x4_t)(*(void *)&vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int8 *)(a1 + 76)), (uint16x4_t)0xFFFDFFFEFFFCFFFBLL) & 0xFF01FF01FF01FF01))+ (*(unsigned char *)(a1 + 76) & 1)+ ((*(unsigned char *)(a1 + 76) & 2) != 0));
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v9])
    {
      case -4:
        ++v11;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_9;
      case 0:
        BOOL v14 = v11 > 3;
        char v15 = v14 & ~(_BYTE)v10 | v7;
        unsigned __int8 v16 = v14 | v10;
        char v50 = v15;
        char v51 = v16 | v15;
        if ((v16 | v8)) {
          char v17 = 0;
        }
        else {
          char v17 = a3;
        }
        char v52 = (v17 == 0) | v16;
        BOOL v53 = v16;
        unsigned __int8 v18 = (int *)MEMORY[0x1E4F940E8];
        unsigned __int8 v19 = (int *)MEMORY[0x1E4F940C8];
        unsigned int v20 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v11;
LABEL_7:
        uint64_t v12 = v7;
LABEL_8:
        uint64_t v13 = v10;
LABEL_9:
        ++v9;
        uint64_t v7 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v18) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v19)) {
      goto LABEL_75;
    }
    char v21 = 0;
    unsigned int v22 = 0;
    unint64_t v23 = 0;
    while (1)
    {
      uint64_t v24 = *v18;
      uint64_t v25 = *(void *)(v3 + v24);
      unint64_t v26 = v25 + 1;
      if (v25 == -1 || v26 > *(void *)(v3 + *v6)) {
        break;
      }
      char v27 = *(unsigned char *)(*(void *)(v3 + *v20) + v25);
      *(void *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0) {
        goto LABEL_24;
      }
      v21 += 7;
      if (v22++ >= 9)
      {
        unint64_t v23 = 0;
        int v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_26;
      }
    }
    *(unsigned char *)(v3 + *v19) = 1;
LABEL_24:
    int v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(unsigned char *)(v3 + *v19)) {
      unint64_t v23 = 0;
    }
LABEL_26:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_75:
      int v49 = 1;
      goto LABEL_76;
    }
    unint64_t v31 = v23 >> 3;
    BOOL v32 = v53;
    if ((v52 & 1) == 0)
    {
      unint64_t v33 = v17;
      do
      {
        int v35 = *v33++;
        int v34 = v35;
        BOOL v32 = v35 != 0;
        if (v35) {
          BOOL v36 = v34 == v31;
        }
        else {
          BOOL v36 = 1;
        }
      }
      while (!v36);
    }
    switch((int)v31)
    {
      case 1:
        if (!v32) {
          goto LABEL_60;
        }
        if ((*(unsigned char *)(a1 + 76) & 0x10) == 0)
        {
          uint64_t v37 = PBReaderReadString();
          uint64_t v38 = 48;
          goto LABEL_59;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_93;
        }
        char v44 = 8 * *(unsigned char *)(a1 + 76);
        goto LABEL_72;
      case 2:
        if (!v32) {
          goto LABEL_60;
        }
        if ((*(unsigned char *)(a1 + 76) & 0x20) == 0)
        {
          uint64_t v37 = PBReaderReadString();
          uint64_t v38 = 56;
          goto LABEL_59;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_93;
        }
        char v44 = 4 * *(unsigned char *)(a1 + 76);
        goto LABEL_72;
      case 3:
        if (!v32) {
          goto LABEL_60;
        }
        if ((*(unsigned char *)(a1 + 76) & 4) == 0)
        {
          uint64_t v37 = PBReaderReadString();
          uint64_t v38 = 32;
          goto LABEL_59;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_93;
        }
        char v44 = 32 * *(unsigned char *)(a1 + 76);
        goto LABEL_72;
      case 4:
        if (!v32) {
          goto LABEL_60;
        }
        if ((*(unsigned char *)(a1 + 76) & 8) == 0)
        {
          uint64_t v37 = PBReaderReadString();
          uint64_t v38 = 40;
          goto LABEL_59;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_93;
        }
        char v44 = 16 * *(unsigned char *)(a1 + 76);
        goto LABEL_72;
      case 5:
        if (!v32) {
          goto LABEL_60;
        }
        if ((*(unsigned char *)(a1 + 76) & 2) == 0)
        {
          uint64_t v37 = PBReaderReadString();
          uint64_t v38 = 24;
LABEL_59:
          uint64_t v42 = *(void **)(a1 + v38);
          *(void *)(a1 + v38) = v37;

          --v9;
LABEL_73:
          unsigned __int8 v19 = (int *)MEMORY[0x1E4F940C8];
LABEL_74:
          if (!(v51 & 1 | (v9 != 0))) {
            goto LABEL_75;
          }
          continue;
        }
        if (PBReaderSkipValueWithTag())
        {
          char v44 = *(unsigned char *)(a1 + 76) << 6;
LABEL_72:
          v9 += v44 >> 7;
          goto LABEL_73;
        }
LABEL_93:
        int v49 = 0;
        unsigned __int8 v19 = (int *)MEMORY[0x1E4F940C8];
LABEL_76:
        if (v50) {
LABEL_77:
        }
          *(unsigned char *)(a1 + 76) |= 1u;
        if (v53 || (v49 & 1) == 0)
        {
          *(unsigned char *)(a1 + 76) |= 0x10u;
          *(unsigned char *)(a1 + 76) |= 0x20u;
          *(unsigned char *)(a1 + 76) |= 4u;
          *(unsigned char *)(a1 + 76) |= 8u;
          *(unsigned char *)(a1 + 76) |= 2u;
        }
        else if (v17)
        {
          while (1)
          {
            int v45 = *v17++;
            char v46 = 16;
            switch(v45)
            {
              case 0:
                goto LABEL_87;
              case 1:
                goto LABEL_86;
              case 2:
                char v46 = 32;
                goto LABEL_86;
              case 3:
                char v46 = 4;
                goto LABEL_86;
              case 4:
                char v46 = 8;
                goto LABEL_86;
              case 5:
                char v46 = 2;
LABEL_86:
                *(unsigned char *)(a1 + 76) |= v46;
                break;
              default:
                continue;
            }
          }
        }
LABEL_87:
        if (v49) {
          unint64_t v3 = *(unsigned char *)(v3 + *v19) == 0;
        }
        else {
          unint64_t v3 = 0;
        }
        if (v53)
        {
          unsigned int v47 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      default:
        if (v50 & 1) == 0 || (*(unsigned char *)(a1 + 76))
        {
LABEL_60:
          char v43 = PBReaderSkipValueWithTag();
          unsigned __int8 v19 = (int *)MEMORY[0x1E4F940C8];
          if ((v43 & 1) == 0)
          {
            int v49 = 0;
            goto LABEL_76;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v39 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            char v40 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v39;
          }
          int v41 = PBUnknownFieldAdd();
          unsigned __int8 v19 = (int *)MEMORY[0x1E4F940C8];
          if (!v41)
          {
            int v49 = 0;
            goto LABEL_77;
          }
        }
        goto LABEL_74;
    }
  }
}

void sub_189A0583C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A0594C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A05DEC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A05ED4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDAppClipParamsReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 68))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDAppClipParamsReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 72));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 64) = [v8 position];
  *(_DWORD *)(a1 + 68) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOPDAppClipParamsReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOPDAppClipParamsReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDAppClipParamsReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
  return Specified;
}

void sub_189A0613C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A0633C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A06508(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A068F0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDAssociatedAppReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  uint64_t v7 = 0;
  uint64_t v8 = 0;
  char v9 = 0;
  uint64_t v10 = 0;
  int v11 = ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1)
      + (*(unsigned char *)(a1 + 52) & 1)
      + ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v10])
    {
      case -4:
        ++v11;
        uint64_t v12 = v7;
        goto LABEL_8;
      case -3:
        char v9 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_8;
      case 0:
        BOOL v14 = v11 != 0;
        unsigned __int8 v15 = v14 | v7;
        unsigned __int8 v49 = v14 & ~(_BYTE)v7 | v8;
        if (((v14 | v7) | v9)) {
          unsigned __int8 v16 = 0;
        }
        else {
          unsigned __int8 v16 = a3;
        }
        char v17 = (int *)MEMORY[0x1E4F940E8];
        unsigned __int8 v18 = (int *)MEMORY[0x1E4F940C8];
        unsigned __int8 v19 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v11;
LABEL_7:
        uint64_t v12 = v7;
        uint64_t v13 = v8;
LABEL_8:
        ++v10;
        uint64_t v7 = v12;
        uint64_t v8 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v17) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v18)) {
      goto LABEL_58;
    }
    char v20 = 0;
    unsigned int v21 = 0;
    unint64_t v22 = 0;
    while (1)
    {
      uint64_t v23 = *v17;
      uint64_t v24 = *(void *)(v3 + v23);
      unint64_t v25 = v24 + 1;
      if (v24 == -1 || v25 > *(void *)(v3 + *v6)) {
        break;
      }
      char v26 = *(unsigned char *)(*(void *)(v3 + *v19) + v24);
      *(void *)(v3 + v23) = v25;
      v22 |= (unint64_t)(v26 & 0x7F) << v20;
      if ((v26 & 0x80) == 0) {
        goto LABEL_23;
      }
      v20 += 7;
      if (v21++ >= 9)
      {
        unint64_t v22 = 0;
        int v28 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_25;
      }
    }
    *(unsigned char *)(v3 + *v18) = 1;
LABEL_23:
    int v28 = *(unsigned __int8 *)(v3 + *v18);
    if (*(unsigned char *)(v3 + *v18)) {
      unint64_t v22 = 0;
    }
LABEL_25:
    if (v28 || (v22 & 7) == 4)
    {
LABEL_58:
      int v47 = 1;
      goto LABEL_59;
    }
    unint64_t v30 = v22 >> 3;
    BOOL v31 = v15;
    if (!((v16 == 0) | v15 & 1))
    {
      BOOL v32 = v16;
      do
      {
        int v34 = *v32++;
        int v33 = v34;
        BOOL v31 = v34 != 0;
        if (v34) {
          BOOL v35 = v33 == v30;
        }
        else {
          BOOL v35 = 1;
        }
      }
      while (!v35);
    }
    if (v30 != 2) {
      break;
    }
    if (v31 && (*(unsigned char *)(a1 + 52) & 2) == 0)
    {
      uint64_t v38 = PBReaderReadString();
      if (v38) {
        -[GEOPDAssociatedApp _addNoFlagsAlternateAppAdamId:](a1, v38);
      }

      goto LABEL_56;
    }
LABEL_52:
    char v42 = PBReaderSkipValueWithTag();
    unsigned __int8 v18 = (int *)MEMORY[0x1E4F940C8];
    if ((v42 & 1) == 0)
    {
      int v47 = 0;
LABEL_59:
      uint64_t v48 = &OBJC_IVAR___GEOXPCReply__error;
      goto LABEL_60;
    }
LABEL_57:
    if (!((v15 | v49) & 1 | (v10 != 0))) {
      goto LABEL_58;
    }
  }
  if (v30 != 1)
  {
    if ((v49 & 1) != 0 && (*(unsigned char *)(a1 + 52) & 1) == 0)
    {
      if (!*(void *)(a1 + 16))
      {
        id v39 = objc_alloc_init(MEMORY[0x1E4F940B0]);
        char v40 = *(void **)(a1 + 16);
        *(void *)(a1 + 16) = v39;
      }
      int v41 = PBUnknownFieldAdd();
      unsigned __int8 v18 = (int *)MEMORY[0x1E4F940C8];
      if (!v41)
      {
        int v47 = 0;
        uint64_t v48 = &OBJC_IVAR___GEOXPCReply__error;
        goto LABEL_61;
      }
      goto LABEL_57;
    }
    goto LABEL_52;
  }
  if (!v31) {
    goto LABEL_52;
  }
  if ((*(unsigned char *)(a1 + 52) & 4) == 0)
  {
    uint64_t v36 = PBReaderReadString();
    uint64_t v37 = *(void **)(a1 + 32);
    *(void *)(a1 + 32) = v36;

    unsigned __int8 v18 = (int *)MEMORY[0x1E4F940C8];
    --v10;
    goto LABEL_57;
  }
  if (PBReaderSkipValueWithTag())
  {
    v10 += *(unsigned __int8 *)(a1 + 52) << 29 >> 31;
LABEL_56:
    unsigned __int8 v18 = (int *)MEMORY[0x1E4F940C8];
    goto LABEL_57;
  }
  int v47 = 0;
  uint64_t v48 = &OBJC_IVAR___GEOXPCReply__error;
  unsigned __int8 v18 = (int *)MEMORY[0x1E4F940C8];
LABEL_60:
  if ((v49 & 1) == 0) {
    goto LABEL_62;
  }
LABEL_61:
  *(unsigned char *)(a1 + v48[604]) |= 1u;
LABEL_62:
  if (v15 & 1 | ((v47 & 1) == 0))
  {
    *(unsigned char *)(a1 + v48[604]) |= 4u;
    *(unsigned char *)(a1 + v48[604]) |= 2u;
    goto LABEL_71;
  }
  if (v16)
  {
    while (1)
    {
      int v44 = *v16++;
      int v43 = v44;
      if (v44 == 1) {
        break;
      }
      if (v43 == 2)
      {
LABEL_67:
        *(unsigned char *)(a1 + v48[604]) |= v43;
      }
      else if (!v43)
      {
        goto LABEL_71;
      }
    }
    LOBYTE(v43) = 4;
    goto LABEL_67;
  }
LABEL_71:
  if (v47)
  {
    unint64_t v3 = *(unsigned char *)(v3 + *v18) == 0;
    if ((v15 & 1) == 0) {
      return v3;
    }
LABEL_75:
    int v45 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  else
  {
    unint64_t v3 = 0;
    if (v15) {
      goto LABEL_75;
    }
  }
  return v3;
}

void sub_189A06EE0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A07398(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDAssociatedAppReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDAssociatedAppReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    char v9 = (int *)&GEOPDAssociatedAppReadAllFrom_recursiveTag;
  }
  else {
    char v9 = (int *)&GEOPDAssociatedAppReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDAssociatedAppReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_189A07600(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A07840(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A07A8C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDAssociatedAppFilterReadAllFrom(uint64_t a1, void *a2)
{
  unint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    int v5 = (int *)MEMORY[0x1E4F940E0];
    uint64_t v6 = (int *)MEMORY[0x1E4F940C8];
    uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      int v8 = v3[*v6];
      if (*(void *)&v3[*v4] >= *(void *)&v3[*v5]) {
        break;
      }
      if (v3[*v6])
      {
        int v8 = 1;
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      uint64_t v11 = 0;
      while (1)
      {
        uint64_t v12 = *v4;
        uint64_t v13 = *(void *)&v3[v12];
        unint64_t v14 = v13 + 1;
        if (v13 == -1 || v14 > *(void *)&v3[*v5]) {
          break;
        }
        char v15 = *(unsigned char *)(*(void *)&v3[*v7] + v13);
        *(void *)&v3[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0) {
          goto LABEL_13;
        }
        v9 += 7;
        if (v10++ >= 9)
        {
          char v17 = 0;
          int v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      int v8 = v3[*v6];
      if (v3[*v6]) {
        char v17 = 0;
      }
      else {
        char v17 = v11;
      }
LABEL_16:
      if (v8) {
        BOOL v18 = 1;
      }
      else {
        BOOL v18 = (v17 & 7) == 4;
      }
      if (v18) {
        break;
      }
      if (!*(void *)(a1 + 8))
      {
        id v19 = objc_alloc_init(MEMORY[0x1E4F940B0]);
        char v20 = *(void **)(a1 + 8);
        *(void *)(a1 + 8) = v19;
      }
      if ((PBUnknownFieldAdd() & 1) == 0) {
        goto LABEL_23;
      }
    }
    BOOL v21 = v8 == 0;
  }
  else
  {
LABEL_23:
    BOOL v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_189A0808C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A088A8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A08F54(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDAttributionIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  BOOL v2 = (*(unsigned char *)(a1 + 76) & 0x7E) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
  return v2;
}

void sub_189A09278(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDAutocompletePlaceContextMetadataReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 88));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 84);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 80)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  uint64_t v12 = &OBJC_IVAR___GEOXPCReply__error;
  v13.i64[0] = 0x100000001;
  v13.i64[1] = 0x100000001;
  unsigned int v14 = vaddvq_s32((int32x4_t)vandq_s8((int8x16_t)vshlq_u32((uint32x4_t)vdupq_n_s32(*(_DWORD *)(a1 + 112)), (uint32x4_t)xmmword_18A637380), v13))+ ((*(_DWORD *)(a1 + 112) >> 14) & 1)+ ((*(_DWORD *)(a1 + 112) >> 11) & 1);
  while (2)
  {
    uint64_t v15 = 1;
    uint64_t v16 = 1;
    uint64_t v17 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v14;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v16 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v18 = v14 > 3;
        char v19 = v18 & ~(_BYTE)v11 | v9;
        char v20 = v18 | v11;
        if (((v18 | v11) | v8)) {
          BOOL v21 = 0;
        }
        else {
          BOOL v21 = a3;
        }
        unint64_t v22 = (int *)MEMORY[0x1E4F940E8];
        int v23 = 1;
        uint64_t v24 = (int *)MEMORY[0x1E4F940C8];
        char v25 = v19;
        if (*(void *)(v3 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(v3 + *v6)) {
          goto LABEL_240;
        }
        char v153 = v19;
        char v155 = v20 | v19;
        char v156 = (v21 == 0) | v20;
        char v26 = (int *)MEMORY[0x1E4F940B8];
        char v154 = v20;
        break;
      default:
        ++v14;
LABEL_7:
        uint64_t v15 = v9;
LABEL_8:
        uint64_t v16 = v10;
        uint64_t v17 = v11;
LABEL_10:
        ++v7;
        uint64_t v9 = v15;
        uint64_t v10 = v16;
        uint64_t v11 = v17;
        continue;
    }
    break;
  }
  while (!*(unsigned char *)(v3 + *v24))
  {
    char v27 = 0;
    unsigned int v28 = 0;
    unint64_t v29 = 0;
    while (1)
    {
      uint64_t v30 = *v22;
      uint64_t v31 = *(void *)(v3 + v30);
      unint64_t v32 = v31 + 1;
      if (v31 == -1 || v32 > *(void *)(v3 + *v6)) {
        break;
      }
      char v33 = *(unsigned char *)(*(void *)(v3 + *v26) + v31);
      *(void *)(v3 + v30) = v32;
      v29 |= (unint64_t)(v33 & 0x7F) << v27;
      if ((v33 & 0x80) == 0) {
        goto LABEL_25;
      }
      v27 += 7;
      BOOL v34 = v28++ >= 9;
      if (v34)
      {
        unint64_t v29 = 0;
        int v35 = *(unsigned __int8 *)(v3 + *v24);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v24) = 1;
LABEL_25:
    int v35 = *(unsigned __int8 *)(v3 + *v24);
    if (*(unsigned char *)(v3 + *v24)) {
      unint64_t v29 = 0;
    }
LABEL_27:
    int v36 = v29 & 7;
    if (v35 || v36 == 4) {
      break;
    }
    unint64_t v38 = v29 >> 3;
    BOOL v39 = v20;
    if ((v156 & 1) == 0)
    {
      char v40 = v21;
      do
      {
        int v42 = *v40++;
        int v41 = v42;
        BOOL v39 = v42 != 0;
        if (v42) {
          BOOL v43 = v41 == v38;
        }
        else {
          BOOL v43 = 1;
        }
      }
      while (!v43);
    }
    switch((int)v38)
    {
      case 1:
        if (!v39) {
          goto LABEL_169;
        }
        if ((*(unsigned char *)(a1 + v12[616] + 2) & 1) == 0)
        {
          uint64_t v44 = PBReaderReadString();
          uint64_t v45 = 72;
          goto LABEL_154;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_260;
        }
        uint64_t v12 = &OBJC_IVAR___GEOXPCReply__error;
        int v140 = (int)(*(_DWORD *)(a1 + 112) << 15) >> 31;
        goto LABEL_223;
      case 2:
        if ((v8 & 1) == 0) {
          goto LABEL_169;
        }
        char v49 = 0;
        unsigned int v50 = 0;
        uint64_t v51 = 0;
        *(_DWORD *)(a1 + v12[616]) |= 0x20u;
        while (2)
        {
          uint64_t v52 = *v22;
          uint64_t v53 = *(void *)(v3 + v52);
          unint64_t v54 = v53 + 1;
          if (v53 == -1 || v54 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v24) = 1;
          }
          else
          {
            char v55 = *(unsigned char *)(*(void *)(v3 + *v26) + v53);
            *(void *)(v3 + v52) = v54;
            v51 |= (unint64_t)(v55 & 0x7F) << v49;
            if (v55 < 0)
            {
              v49 += 7;
              BOOL v34 = v50++ >= 9;
              if (v34)
              {
                uint64_t v51 = 0;
                goto LABEL_174;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v24)) {
          uint64_t v51 = 0;
        }
LABEL_174:
        BOOL v137 = v51 != 0;
        uint64_t v138 = 106;
        goto LABEL_211;
      case 3:
        if ((v8 & 1) == 0) {
          goto LABEL_169;
        }
        char v56 = 0;
        unsigned int v57 = 0;
        uint64_t v58 = 0;
        *(_DWORD *)(a1 + v12[616]) |= 0x80u;
        while (2)
        {
          uint64_t v59 = *v22;
          uint64_t v60 = *(void *)(v3 + v59);
          unint64_t v61 = v60 + 1;
          if (v60 == -1 || v61 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v24) = 1;
          }
          else
          {
            char v62 = *(unsigned char *)(*(void *)(v3 + *v26) + v60);
            *(void *)(v3 + v59) = v61;
            v58 |= (unint64_t)(v62 & 0x7F) << v56;
            if (v62 < 0)
            {
              v56 += 7;
              BOOL v34 = v57++ >= 9;
              if (v34)
              {
                uint64_t v58 = 0;
                goto LABEL_178;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v24)) {
          uint64_t v58 = 0;
        }
LABEL_178:
        BOOL v137 = v58 != 0;
        uint64_t v138 = 108;
        goto LABEL_211;
      case 4:
        if (!v39 || (*(unsigned char *)(a1 + v12[616] + 1) & 0x10) != 0) {
          goto LABEL_169;
        }
        if (v36 != 2)
        {
          char v141 = 0;
          unsigned int v142 = 0;
          uint64_t v143 = 0;
          while (1)
          {
            uint64_t v144 = *v22;
            uint64_t v145 = *(void *)(v3 + v144);
            unint64_t v146 = v145 + 1;
            if (v145 == -1 || v146 > *(void *)(v3 + *v6)) {
              break;
            }
            char v147 = *(unsigned char *)(*(void *)(v3 + *v26) + v145);
            *(void *)(v3 + v144) = v146;
            v143 |= (unint64_t)(v147 & 0x7F) << v141;
            if (v147 < 0)
            {
              v141 += 7;
              BOOL v34 = v142++ >= 9;
              if (!v34) {
                continue;
              }
            }
            goto LABEL_237;
          }
          *(unsigned char *)(v3 + *v24) = 1;
LABEL_237:
          PBRepeatedInt32Add();
          goto LABEL_155;
        }
        if (!PBReaderPlaceMark()) {
          goto LABEL_260;
        }
        while (1)
        {
          char v63 = (int *)MEMORY[0x1E4F940C8];
          if (*(void *)(v3 + *v22) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + (int)*MEMORY[0x1E4F940C8])) {
            break;
          }
          char v64 = 0;
          unsigned int v65 = 0;
          uint64_t v66 = 0;
          int v67 = (int *)MEMORY[0x1E4F940B8];
          while (1)
          {
            uint64_t v68 = *v22;
            uint64_t v69 = *(void *)(v3 + v68);
            unint64_t v70 = v69 + 1;
            if (v69 == -1 || v70 > *(void *)(v3 + *v6)) {
              break;
            }
            char v71 = *(unsigned char *)(*(void *)(v3 + *v67) + v69);
            *(void *)(v3 + v68) = v70;
            v66 |= (unint64_t)(v71 & 0x7F) << v64;
            if (v71 < 0)
            {
              v64 += 7;
              BOOL v34 = v65++ >= 9;
              if (!v34) {
                continue;
              }
            }
            goto LABEL_78;
          }
          *(unsigned char *)(v3 + *v63) = 1;
LABEL_78:
          PBRepeatedInt32Add();
        }
        PBReaderRecallMark();
        uint64_t v24 = (int *)MEMORY[0x1E4F940C8];
        char v20 = v154;
        goto LABEL_156;
      case 5:
        if (!v39) {
          goto LABEL_169;
        }
        if ((*(unsigned char *)(a1 + v12[616] + 1) & 0x80) == 0)
        {
          uint64_t v44 = PBReaderReadString();
          uint64_t v45 = 64;
          goto LABEL_154;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_260;
        }
        uint64_t v12 = &OBJC_IVAR___GEOXPCReply__error;
        int v140 = (int)(*(_DWORD *)(a1 + 112) << 16) >> 31;
        goto LABEL_223;
      case 6:
        if ((v8 & 1) == 0) {
          goto LABEL_169;
        }
        char v72 = 0;
        unsigned int v73 = 0;
        uint64_t v74 = 0;
        *(_DWORD *)(a1 + v12[616]) |= 0x400u;
        while (2)
        {
          uint64_t v75 = *v22;
          uint64_t v76 = *(void *)(v3 + v75);
          unint64_t v77 = v76 + 1;
          if (v76 == -1 || v77 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v24) = 1;
          }
          else
          {
            char v78 = *(unsigned char *)(*(void *)(v3 + *v26) + v76);
            *(void *)(v3 + v75) = v77;
            v74 |= (unint64_t)(v78 & 0x7F) << v72;
            if (v78 < 0)
            {
              v72 += 7;
              BOOL v34 = v73++ >= 9;
              if (v34)
              {
                uint64_t v74 = 0;
                goto LABEL_182;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v24)) {
          uint64_t v74 = 0;
        }
LABEL_182:
        BOOL v137 = v74 != 0;
        uint64_t v138 = 111;
        goto LABEL_211;
      case 7:
        if ((v8 & 1) == 0) {
          goto LABEL_169;
        }
        char v79 = 0;
        unsigned int v80 = 0;
        uint64_t v81 = 0;
        *(_DWORD *)(a1 + v12[616]) |= 0x40u;
        while (2)
        {
          uint64_t v82 = *v22;
          uint64_t v83 = *(void *)(v3 + v82);
          unint64_t v84 = v83 + 1;
          if (v83 == -1 || v84 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v24) = 1;
          }
          else
          {
            char v85 = *(unsigned char *)(*(void *)(v3 + *v26) + v83);
            *(void *)(v3 + v82) = v84;
            v81 |= (unint64_t)(v85 & 0x7F) << v79;
            if (v85 < 0)
            {
              v79 += 7;
              BOOL v34 = v80++ >= 9;
              if (v34)
              {
                uint64_t v81 = 0;
                goto LABEL_186;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v24)) {
          uint64_t v81 = 0;
        }
LABEL_186:
        BOOL v137 = v81 != 0;
        uint64_t v138 = 107;
        goto LABEL_211;
      case 8:
        if (!v39 || (*(unsigned char *)(a1 + v12[616] + 1) & 0x20) != 0)
        {
          char v135 = PBReaderSkipValueWithTag();
          uint64_t v12 = &OBJC_IVAR___GEOXPCReply__error;
          char v20 = v154;
          uint64_t v24 = (int *)MEMORY[0x1E4F940C8];
          char v26 = (int *)MEMORY[0x1E4F940B8];
          if ((v135 & 1) == 0) {
            goto LABEL_258;
          }
          goto LABEL_225;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_260;
        }
        uint64_t v86 = objc_alloc_init(GEOLocalizedString);
        if (GEOLocalizedStringReadAllFrom((uint64_t)v86, (void *)v3, v10 & 1))
        {
          PBReaderRecallMark();
          -[GEOPDAutocompletePlaceContextMetadata _addNoFlagsAlternateSearchableName:](a1, v86);

LABEL_155:
          char v20 = v154;
          uint64_t v24 = (int *)MEMORY[0x1E4F940C8];
LABEL_156:
          uint64_t v12 = &OBJC_IVAR___GEOXPCReply__error;
LABEL_224:
          char v26 = (int *)MEMORY[0x1E4F940B8];
          goto LABEL_225;
        }

LABEL_260:
        int v23 = 0;
        char v20 = v154;
        uint64_t v24 = (int *)MEMORY[0x1E4F940C8];
        uint64_t v12 = &OBJC_IVAR___GEOXPCReply__error;
        if (v153) {
LABEL_241:
        }
          *(_DWORD *)(a1 + v12[616]) |= 0x800u;
LABEL_242:
        if (v20 & 1 | ((v23 & 1) == 0))
        {
          *(_DWORD *)(a1 + v12[616]) |= 0x10000u;
          *(_DWORD *)(a1 + v12[616]) |= 0x1000u;
          *(_DWORD *)(a1 + v12[616]) |= 0x8000u;
          *(_DWORD *)(a1 + v12[616]) |= 0x2000u;
          *(_DWORD *)(a1 + v12[616]) |= 0x4000u;
        }
        else if (v21)
        {
          while (1)
          {
            int v149 = *v21++;
            int v148 = v149;
            int v150 = 0x10000;
            switch(v149)
            {
              case 0:
                goto LABEL_252;
              case 1:
                goto LABEL_251;
              case 2:
              case 3:
              case 6:
              case 7:
                continue;
              case 4:
                int v150 = 4096;
                goto LABEL_251;
              case 5:
                int v150 = 0x8000;
                goto LABEL_251;
              case 8:
                int v150 = 0x2000;
                goto LABEL_251;
              default:
                if (v148 != 15) {
                  continue;
                }
                int v150 = 0x4000;
LABEL_251:
                *(_DWORD *)(a1 + v12[616]) |= v150;
                break;
            }
          }
        }
LABEL_252:
        if (v23)
        {
          unint64_t v3 = *(unsigned char *)(v3 + *v24) == 0;
          if ((v20 & 1) == 0) {
            return v3;
          }
LABEL_256:
          uint64_t v151 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        else
        {
          unint64_t v3 = 0;
          if (v20) {
            goto LABEL_256;
          }
        }
        return v3;
      case 9:
        if ((v8 & 1) == 0) {
          goto LABEL_169;
        }
        char v87 = 0;
        unsigned int v88 = 0;
        uint64_t v89 = 0;
        *(_DWORD *)(a1 + v12[616]) |= 1u;
        while (2)
        {
          uint64_t v90 = *v22;
          uint64_t v91 = *(void *)(v3 + v90);
          unint64_t v92 = v91 + 1;
          if (v91 == -1 || v92 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v24) = 1;
          }
          else
          {
            char v93 = *(unsigned char *)(*(void *)(v3 + *v26) + v91);
            *(void *)(v3 + v90) = v92;
            v89 |= (unint64_t)(v93 & 0x7F) << v87;
            if (v93 < 0)
            {
              v87 += 7;
              BOOL v34 = v88++ >= 9;
              if (v34)
              {
                LODWORD(v89) = 0;
                goto LABEL_190;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v24)) {
          LODWORD(v89) = 0;
        }
LABEL_190:
        uint64_t v139 = 92;
        goto LABEL_216;
      case 10:
        if ((v8 & 1) == 0) {
          goto LABEL_169;
        }
        char v94 = 0;
        unsigned int v95 = 0;
        uint64_t v96 = 0;
        *(_DWORD *)(a1 + v12[616]) |= 0x10u;
        while (2)
        {
          uint64_t v97 = *v22;
          uint64_t v98 = *(void *)(v3 + v97);
          unint64_t v99 = v98 + 1;
          if (v98 == -1 || v99 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v24) = 1;
          }
          else
          {
            char v100 = *(unsigned char *)(*(void *)(v3 + *v26) + v98);
            *(void *)(v3 + v97) = v99;
            v96 |= (unint64_t)(v100 & 0x7F) << v94;
            if (v100 < 0)
            {
              v94 += 7;
              BOOL v34 = v95++ >= 9;
              if (v34)
              {
                uint64_t v96 = 0;
                goto LABEL_194;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v24)) {
          uint64_t v96 = 0;
        }
LABEL_194:
        BOOL v137 = v96 != 0;
        uint64_t v138 = 105;
        goto LABEL_211;
      case 11:
        if ((v8 & 1) == 0) {
          goto LABEL_169;
        }
        char v101 = 0;
        unsigned int v102 = 0;
        uint64_t v103 = 0;
        *(_DWORD *)(a1 + v12[616]) |= 8u;
        while (2)
        {
          uint64_t v104 = *v22;
          uint64_t v105 = *(void *)(v3 + v104);
          unint64_t v106 = v105 + 1;
          if (v105 == -1 || v106 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v24) = 1;
          }
          else
          {
            char v107 = *(unsigned char *)(*(void *)(v3 + *v26) + v105);
            *(void *)(v3 + v104) = v106;
            v103 |= (unint64_t)(v107 & 0x7F) << v101;
            if (v107 < 0)
            {
              v101 += 7;
              BOOL v34 = v102++ >= 9;
              if (v34)
              {
                uint64_t v103 = 0;
                goto LABEL_198;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v24)) {
          uint64_t v103 = 0;
        }
LABEL_198:
        BOOL v137 = v103 != 0;
        uint64_t v138 = 104;
        goto LABEL_211;
      case 12:
        if ((v8 & 1) == 0) {
          goto LABEL_169;
        }
        char v108 = 0;
        unsigned int v109 = 0;
        uint64_t v89 = 0;
        *(_DWORD *)(a1 + v12[616]) |= 2u;
        while (2)
        {
          uint64_t v110 = *v22;
          uint64_t v111 = *(void *)(v3 + v110);
          unint64_t v112 = v111 + 1;
          if (v111 == -1 || v112 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v24) = 1;
          }
          else
          {
            char v113 = *(unsigned char *)(*(void *)(v3 + *v26) + v111);
            *(void *)(v3 + v110) = v112;
            v89 |= (unint64_t)(v113 & 0x7F) << v108;
            if (v113 < 0)
            {
              v108 += 7;
              BOOL v34 = v109++ >= 9;
              if (v34)
              {
                LODWORD(v89) = 0;
                goto LABEL_202;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v24)) {
          LODWORD(v89) = 0;
        }
LABEL_202:
        uint64_t v139 = 96;
        goto LABEL_216;
      case 13:
        if ((v8 & 1) == 0) {
          goto LABEL_169;
        }
        char v114 = 0;
        unsigned int v115 = 0;
        uint64_t v116 = 0;
        *(_DWORD *)(a1 + v12[616]) |= 0x100u;
        while (2)
        {
          uint64_t v117 = *v22;
          uint64_t v118 = *(void *)(v3 + v117);
          unint64_t v119 = v118 + 1;
          if (v118 == -1 || v119 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v24) = 1;
          }
          else
          {
            char v120 = *(unsigned char *)(*(void *)(v3 + *v26) + v118);
            *(void *)(v3 + v117) = v119;
            v116 |= (unint64_t)(v120 & 0x7F) << v114;
            if (v120 < 0)
            {
              v114 += 7;
              BOOL v34 = v115++ >= 9;
              if (v34)
              {
                uint64_t v116 = 0;
                goto LABEL_206;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v24)) {
          uint64_t v116 = 0;
        }
LABEL_206:
        BOOL v137 = v116 != 0;
        uint64_t v138 = 109;
        goto LABEL_211;
      case 14:
        if ((v8 & 1) == 0) {
          goto LABEL_169;
        }
        char v121 = 0;
        unsigned int v122 = 0;
        uint64_t v123 = 0;
        *(_DWORD *)(a1 + v12[616]) |= 0x200u;
        while (2)
        {
          uint64_t v124 = *v22;
          uint64_t v125 = *(void *)(v3 + v124);
          unint64_t v126 = v125 + 1;
          if (v125 == -1 || v126 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v24) = 1;
          }
          else
          {
            char v127 = *(unsigned char *)(*(void *)(v3 + *v26) + v125);
            *(void *)(v3 + v124) = v126;
            v123 |= (unint64_t)(v127 & 0x7F) << v121;
            if (v127 < 0)
            {
              v121 += 7;
              BOOL v34 = v122++ >= 9;
              if (v34)
              {
                uint64_t v123 = 0;
                goto LABEL_210;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v24)) {
          uint64_t v123 = 0;
        }
LABEL_210:
        BOOL v137 = v123 != 0;
        uint64_t v138 = 110;
LABEL_211:
        *(unsigned char *)(a1 + v138) = v137;
        goto LABEL_225;
      case 15:
        if (!v39) {
          goto LABEL_169;
        }
        if ((*(unsigned char *)(a1 + v12[616] + 1) & 0x40) == 0)
        {
          uint64_t v44 = PBReaderReadString();
          uint64_t v45 = 56;
LABEL_154:
          uint64_t v128 = *(void **)(a1 + v45);
          *(void *)(a1 + v45) = v44;

          --v7;
          goto LABEL_155;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_260;
        }
        uint64_t v12 = &OBJC_IVAR___GEOXPCReply__error;
        int v140 = (int)(*(_DWORD *)(a1 + 112) << 17) >> 31;
LABEL_223:
        v7 += v140;
        char v20 = v154;
        uint64_t v24 = (int *)MEMORY[0x1E4F940C8];
        goto LABEL_224;
      case 16:
        if ((v8 & 1) == 0) {
          goto LABEL_169;
        }
        char v129 = 0;
        unsigned int v130 = 0;
        uint64_t v89 = 0;
        *(_DWORD *)(a1 + v12[616]) |= 4u;
        while (2)
        {
          uint64_t v131 = *v22;
          uint64_t v132 = *(void *)(v3 + v131);
          unint64_t v133 = v132 + 1;
          if (v132 == -1 || v133 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v24) = 1;
          }
          else
          {
            char v134 = *(unsigned char *)(*(void *)(v3 + *v26) + v132);
            *(void *)(v3 + v131) = v133;
            v89 |= (unint64_t)(v134 & 0x7F) << v129;
            if (v134 < 0)
            {
              v129 += 7;
              BOOL v34 = v130++ >= 9;
              if (v34)
              {
                LODWORD(v89) = 0;
                goto LABEL_215;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v24)) {
          LODWORD(v89) = 0;
        }
LABEL_215:
        uint64_t v139 = 100;
LABEL_216:
        *(_DWORD *)(a1 + v139) = v89;
        goto LABEL_225;
      default:
        if ((v153 & 1) == 0 || (*(unsigned char *)(a1 + v12[616] + 1) & 8) != 0)
        {
LABEL_169:
          char v136 = PBReaderSkipValueWithTag();
          char v26 = (int *)MEMORY[0x1E4F940B8];
          uint64_t v12 = &OBJC_IVAR___GEOXPCReply__error;
          uint64_t v24 = (int *)MEMORY[0x1E4F940C8];
          char v20 = v154;
          if ((v136 & 1) == 0)
          {
LABEL_258:
            int v23 = 0;
            goto LABEL_239;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v46 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            int v47 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v46;
          }
          int v48 = PBUnknownFieldAdd();
          char v20 = v154;
          uint64_t v24 = (int *)MEMORY[0x1E4F940C8];
          uint64_t v12 = &OBJC_IVAR___GEOXPCReply__error;
          char v26 = (int *)MEMORY[0x1E4F940B8];
          if (!v48)
          {
            int v23 = 0;
            goto LABEL_241;
          }
        }
LABEL_225:
        if (!(v155 & 1 | (v7 != 0)) || *(void *)(v3 + *v22) >= *(void *)(v3 + *v6)) {
          goto LABEL_238;
        }
        break;
    }
  }
LABEL_238:
  int v23 = 1;
LABEL_239:
  char v25 = v153;
LABEL_240:
  if (v25) {
    goto LABEL_241;
  }
  goto LABEL_242;
}

void sub_189A0A960(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A0B45C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A0B558(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDAutocompletePlaceContextMetadataCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v11 = *MEMORY[0x1E4F143B8];
  long long v6 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  id v1 = *(id *)(a1 + 48);
  uint64_t v2 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t v4 = *(void *)v7;
    do
    {
      uint64_t v5 = 0;
      do
      {
        if (*(void *)v7 != v4) {
          objc_enumerationMutation(v1);
        }
        objc_msgSend(*(id *)(*((void *)&v6 + 1) + 8 * v5++), "readAll:", 1, (void)v6);
      }
      while (v3 != v5);
      uint64_t v3 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
    }
    while (v3);
  }
}

unint64_t GEOPDAutocompletePlaceContextMetadataReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 84))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDAutocompletePlaceContextMetadataReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 88));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 80) = [v8 position];
  *(_DWORD *)(a1 + 84) = [v8 length];
  if (a3) {
    long long v9 = (int *)&GEOPDAutocompletePlaceContextMetadataReadAllFrom_recursiveTag;
  }
  else {
    long long v9 = (int *)&GEOPDAutocompletePlaceContextMetadataReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDAutocompletePlaceContextMetadataReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOPDAutocompletePlaceContextMetadataCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 88));
  return Specified;
}

void sub_189A0B8C4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A0BCDC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A0C138(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDAvailabilityInfoReadAllFrom(uint64_t a1, void *a2)
{
  uint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    long long v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      long long v7 = (int *)MEMORY[0x1E4F940B8];
      while (1)
      {
        if (v3[*v6]) {
          goto LABEL_59;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          goto LABEL_59;
        }
        unint64_t v18 = v10 >> 3;
        if ((v10 >> 3) == 3)
        {
          char v28 = 0;
          unsigned int v29 = 0;
          uint64_t v21 = 0;
          *(unsigned char *)(a1 + 28) |= 2u;
          while (1)
          {
            uint64_t v30 = *v4;
            uint64_t v31 = *(void *)&v3[v30];
            unint64_t v32 = v31 + 1;
            if (v31 == -1 || v32 > *(void *)&v3[*v5]) {
              break;
            }
            char v33 = *(unsigned char *)(*(void *)&v3[*v7] + v31);
            *(void *)&v3[v30] = v32;
            v21 |= (unint64_t)(v33 & 0x7F) << v28;
            if ((v33 & 0x80) == 0)
            {
              char v27 = &OBJC_IVAR___GEOPDAvailabilityInfo__status;
              goto LABEL_51;
            }
            v28 += 7;
            BOOL v26 = v29++ > 8;
            if (v26)
            {
              LODWORD(v21) = 0;
              char v27 = &OBJC_IVAR___GEOPDAvailabilityInfo__status;
              goto LABEL_53;
            }
          }
          char v27 = &OBJC_IVAR___GEOPDAvailabilityInfo__status;
LABEL_50:
          v3[*v6] = 1;
          goto LABEL_51;
        }
        if (v18 == 2) {
          break;
        }
        if (v18 == 1)
        {
          char v19 = 0;
          unsigned int v20 = 0;
          uint64_t v21 = 0;
          *(unsigned char *)(a1 + 28) |= 1u;
          while (1)
          {
            uint64_t v22 = *v4;
            uint64_t v23 = *(void *)&v3[v22];
            unint64_t v24 = v23 + 1;
            if (v23 == -1 || v24 > *(void *)&v3[*v5])
            {
              char v27 = &OBJC_IVAR___GEOPDAvailabilityInfo__availableNum;
              goto LABEL_50;
            }
            char v25 = *(unsigned char *)(*(void *)&v3[*v7] + v23);
            *(void *)&v3[v22] = v24;
            v21 |= (unint64_t)(v25 & 0x7F) << v19;
            if ((v25 & 0x80) == 0) {
              break;
            }
            v19 += 7;
            BOOL v26 = v20++ > 8;
            if (v26)
            {
              LODWORD(v21) = 0;
              char v27 = &OBJC_IVAR___GEOPDAvailabilityInfo__availableNum;
              goto LABEL_53;
            }
          }
          char v27 = &OBJC_IVAR___GEOPDAvailabilityInfo__availableNum;
          goto LABEL_51;
        }
        if (!*(void *)(a1 + 8))
        {
          id v40 = objc_alloc_init(MEMORY[0x1E4F940B0]);
          int v41 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = v40;
        }
        if ((PBUnknownFieldAdd() & 1) == 0) {
          goto LABEL_60;
        }
LABEL_54:
        if (*(void *)&v3[*v4] >= *(void *)&v3[*v5]) {
          goto LABEL_59;
        }
      }
      char v34 = 0;
      unsigned int v35 = 0;
      uint64_t v21 = 0;
      *(unsigned char *)(a1 + 28) |= 4u;
      while (1)
      {
        uint64_t v36 = *v4;
        uint64_t v37 = *(void *)&v3[v36];
        unint64_t v38 = v37 + 1;
        if (v37 == -1 || v38 > *(void *)&v3[*v5])
        {
          char v27 = &OBJC_IVAR___GEOPDAvailabilityInfo__totalNum;
          goto LABEL_50;
        }
        char v39 = *(unsigned char *)(*(void *)&v3[*v7] + v37);
        *(void *)&v3[v36] = v38;
        v21 |= (unint64_t)(v39 & 0x7F) << v34;
        if ((v39 & 0x80) == 0) {
          break;
        }
        v34 += 7;
        BOOL v26 = v35++ > 8;
        if (v26)
        {
          LODWORD(v21) = 0;
          char v27 = &OBJC_IVAR___GEOPDAvailabilityInfo__totalNum;
          goto LABEL_53;
        }
      }
      char v27 = &OBJC_IVAR___GEOPDAvailabilityInfo__totalNum;
LABEL_51:
      if (v3[*v6]) {
        LODWORD(v21) = 0;
      }
LABEL_53:
      *(_DWORD *)(a1 + *v27) = v21;
      goto LABEL_54;
    }
LABEL_59:
    BOOL v42 = v3[*v6] == 0;
  }
  else
  {
LABEL_60:
    BOOL v42 = 0;
  }
  objc_sync_exit(v3);

  return v42;
}

void sub_189A0D2BC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A0DAE8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDBatchReverseGeocodeResultReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  long long v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  char v7 = 0;
  uint64_t v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  int v12 = ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1)
      + (*(unsigned char *)(a1 + 52) & 1)
      + ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1);
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v7 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 != 0;
        char v17 = v16 & ~(_BYTE)v11 | v9;
        unsigned __int8 v18 = v16 | v11;
        char v51 = v17;
        char v52 = v18 | v17;
        if ((v18 | v7)) {
          char v19 = 0;
        }
        else {
          char v19 = a3;
        }
        char v53 = (v19 == 0) | v18;
        BOOL v54 = v18;
        unsigned int v20 = (int *)MEMORY[0x1E4F940E8];
        uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
        uint64_t v22 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v9;
LABEL_8:
        uint64_t v14 = v10;
        uint64_t v15 = v11;
LABEL_10:
        ++v8;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v21)) {
      goto LABEL_62;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      if (v24++ >= 9)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_25:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_62:
      int v49 = 1;
      goto LABEL_63;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v54;
    if ((v53 & 1) == 0)
    {
      unsigned int v35 = v19;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    if (v33 == 2) {
      break;
    }
    if (v33 == 1)
    {
      if (v34)
      {
        if ((*(unsigned char *)(a1 + 52) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_82;
          }
          v8 += *(unsigned __int8 *)(a1 + 52) << 29 >> 31;
        }
        else
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_82;
          }
          char v39 = objc_alloc_init(GEOPDPlace);
          if (!GEOPDPlaceReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1)) {
            goto LABEL_81;
          }
          PBReaderRecallMark();
          id v40 = *(void **)(a1 + 32);
          *(void *)(a1 + 32) = v39;

          --v8;
        }
        goto LABEL_60;
      }
    }
    else if ((v51 & 1) != 0 && (*(unsigned char *)(a1 + 52) & 1) == 0)
    {
      if (!*(void *)(a1 + 16))
      {
        id v41 = objc_alloc_init(MEMORY[0x1E4F940B0]);
        BOOL v42 = *(void **)(a1 + 16);
        *(void *)(a1 + 16) = v41;
      }
      int v43 = PBUnknownFieldAdd();
      uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
      if (!v43)
      {
        int v49 = 0;
        unsigned int v50 = &OBJC_IVAR___GEOXPCReply__error;
        goto LABEL_65;
      }
      goto LABEL_61;
    }
LABEL_56:
    char v44 = PBReaderSkipValueWithTag();
    uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
    if ((v44 & 1) == 0)
    {
      int v49 = 0;
LABEL_63:
      unsigned int v50 = &OBJC_IVAR___GEOXPCReply__error;
      goto LABEL_64;
    }
LABEL_61:
    if (!(v52 & 1 | (v8 != 0))) {
      goto LABEL_62;
    }
  }
  if (!v34 || (*(unsigned char *)(a1 + 52) & 2) != 0) {
    goto LABEL_56;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_82;
  }
  char v39 = objc_alloc_init(GEOPDPlace);
  if (GEOPDPlaceReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1))
  {
    PBReaderRecallMark();
    -[GEOPDBatchReverseGeocodeResult _addNoFlagsAdditionalPlace:](a1, v39);

LABEL_60:
    uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
    goto LABEL_61;
  }
LABEL_81:

LABEL_82:
  int v49 = 0;
  unsigned int v50 = &OBJC_IVAR___GEOXPCReply__error;
  uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_64:
  if ((v51 & 1) == 0) {
    goto LABEL_66;
  }
LABEL_65:
  *(unsigned char *)(a1 + v50[625]) |= 1u;
LABEL_66:
  if (v54 || (v49 & 1) == 0)
  {
    *(unsigned char *)(a1 + v50[625]) |= 4u;
    *(unsigned char *)(a1 + v50[625]) |= 2u;
    goto LABEL_75;
  }
  if (v19)
  {
    while (1)
    {
      int v46 = *v19++;
      int v45 = v46;
      if (v46 == 1) {
        break;
      }
      if (v45 == 2)
      {
LABEL_71:
        *(unsigned char *)(a1 + v50[625]) |= v45;
      }
      else if (!v45)
      {
        goto LABEL_75;
      }
    }
    LOBYTE(v45) = 4;
    goto LABEL_71;
  }
LABEL_75:
  if (v49) {
    unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
  }
  else {
    unint64_t v3 = 0;
  }
  if (v54)
  {
    int v47 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_189A0E1C8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A0E7B4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDBatchReverseGeocodeResultCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  [*(id *)(a1 + 32) readAll:1];
  long long v9 = 0u;
  long long v10 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  id v2 = *(id *)(a1 + 24);
  uint64_t v3 = [v2 countByEnumeratingWithState:&v7 objects:v11 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v8;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v8 != v5) {
          objc_enumerationMutation(v2);
        }
        objc_msgSend(*(id *)(*((void *)&v7 + 1) + 8 * v6++), "readAll:", 1, (void)v7);
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v7 objects:v11 count:16];
    }
    while (v4);
  }
}

unint64_t GEOPDBatchReverseGeocodeResultReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDBatchReverseGeocodeResultReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)long long v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    long long v9 = (int *)&GEOPDBatchReverseGeocodeResultReadAllFrom_recursiveTag;
  }
  else {
    long long v9 = (int *)&GEOPDBatchReverseGeocodeResultReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDBatchReverseGeocodeResultReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOPDBatchReverseGeocodeResultCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_189A0EB38(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A0EDAC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDBatchReverseGeocodeResultIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  unsigned int v2 = *(unsigned __int8 *)(a1 + 52);
  if ((v2 & 8) != 0) {
    return 1;
  }
  if ((v2 & 4) != 0)
  {
    if (GEOPDPlaceIsDirty(*(os_unfair_lock_s **)(a1 + 32))) {
      return 1;
    }
    unsigned int v2 = *(unsigned __int8 *)(a1 + 52);
  }
  return (v2 >> 1) & 1;
}

unint64_t GEOPDBatchReverseGeocodeResultClearSensitiveFields(uint64_t a1, uint64_t a2, int a3)
{
  if (a1
    && a3
    && (-[GEOPDBatchReverseGeocodeResult _readPlace](a1), *(void *)(a1 + 32))
    && (-[GEOPDBatchReverseGeocodeResult place]((id *)a1),
        uint64_t v6 = objc_claimAutoreleasedReturnValue(),
        unsigned int v7 = GEOPDPlaceHasSensitiveFields(v6, a2),
        v6,
        v7))
  {
    id v8 = -[GEOPDBatchReverseGeocodeResult place]((id *)a1);
    long long v9 = (void *)[v8 copy];

    long long v10 = [v9 requestData];
    [v10 clearSensitiveFields:a2];

    -[GEOPDBatchReverseGeocodeResult setPlace:](a1, v9);
  }
  else
  {
    long long v9 = -[GEOPDBatchReverseGeocodeResult place]((id *)a1);
    [v9 clearSensitiveFields:a2];
  }

  -[GEOPDBatchReverseGeocodeResult _readAdditionalPlaces](a1);
  unint64_t result = [*(id *)(a1 + 24) count];
  if (result)
  {
    for (unint64_t i = 0; i < result; ++i)
    {
      uint64_t v13 = [*(id *)(a1 + 24) objectAtIndexedSubscript:i];
      uint64_t v14 = v13;
      if (a3 && GEOPDPlaceHasSensitiveFields(v13, a2))
      {
        uint64_t v15 = (void *)[v14 copy];
        BOOL v16 = [v15 requestData];
        [v16 clearSensitiveFields:a2];

        [*(id *)(a1 + 24) replaceObjectAtIndex:i withObject:v15];
      }
      else
      {
        [v14 clearSensitiveFields:a2];
      }

      unint64_t result = [*(id *)(a1 + 24) count];
    }
  }
  return result;
}

uint64_t GEOPDBatchReverseGeocodeResultHasSensitiveFields(id *a1, uint64_t a2)
{
  uint64_t v18 = *MEMORY[0x1E4F143B8];
  if (!a1) {
    return 0;
  }
  uint64_t v4 = -[GEOPDBatchReverseGeocodeResult place](a1);
  unsigned __int8 v5 = GEOPDPlaceHasSensitiveFields(v4, a2);

  if (v5) {
    return 1;
  }
  long long v15 = 0u;
  long long v16 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  unsigned int v7 = -[GEOPDBatchReverseGeocodeResult additionalPlaces](a1);
  uint64_t v8 = [v7 countByEnumeratingWithState:&v13 objects:v17 count:16];
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)v14;
    while (2)
    {
      uint64_t v11 = 0;
      do
      {
        if (*(void *)v14 != v10) {
          objc_enumerationMutation(v7);
        }
        if (GEOPDPlaceHasSensitiveFields(*(void **)(*((void *)&v13 + 1) + 8 * v11), a2))
        {
          uint64_t v6 = 1;
          goto LABEL_15;
        }
        ++v11;
      }
      while (v9 != v11);
      uint64_t v9 = [v7 countByEnumeratingWithState:&v13 objects:v17 count:16];
      if (v9) {
        continue;
      }
      break;
    }
  }
  uint64_t v6 = 0;
LABEL_15:

  return v6;
}

void *GEOPDPlaceHasSensitiveFields(void *result, uint64_t a2)
{
  if (result)
  {
    uint64_t v3 = [result requestData];
    uint64_t v4 = GEOMapItemInitialRequestDataHasSensitiveFields(v3, a2);

    return v4;
  }
  return result;
}

void GEOPDPlaceClearSensitiveFields(void *a1, uint64_t a2, int a3)
{
  if (a3
    && [a1 hasRequestData]
    && ([a1 requestData],
        unsigned __int8 v5 = objc_claimAutoreleasedReturnValue(),
        unsigned int v6 = GEOMapItemInitialRequestDataHasSensitiveFields(v5, a2),
        v5,
        v6))
  {
    unsigned int v7 = [a1 requestData];
    id v8 = (id)[v7 copy];

    GEOMapItemInitialRequestDataClearSensitiveFields(v8, a2, 0);
    [a1 setRequestData:v8];
  }
  else
  {
    id v8 = [a1 requestData];
    [v8 clearSensitiveFields:a2];
  }
}

void sub_189A0F45C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A0F770(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDBoundingCubeReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  unsigned int v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  char v7 = 0;
  uint64_t v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  int v12 = ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1)
      + (*(unsigned char *)(a1 + 52) & 1)
      + ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1);
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v7 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 != 0;
        char v17 = v16 & ~(_BYTE)v11 | v9;
        unsigned __int8 v18 = v16 | v11;
        char v53 = v17;
        char v54 = v18 | v17;
        if ((v18 | v7)) {
          char v19 = 0;
        }
        else {
          char v19 = a3;
        }
        char v55 = (v19 == 0) | v18;
        BOOL v56 = v18;
        unsigned int v20 = (int *)MEMORY[0x1E4F940E8];
        uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
        uint64_t v22 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v9;
LABEL_8:
        uint64_t v14 = v10;
        uint64_t v15 = v11;
LABEL_10:
        ++v8;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v21)) {
      goto LABEL_66;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      if (v24++ >= 9)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_25:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_66:
      int v51 = 1;
      goto LABEL_67;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v56;
    if ((v55 & 1) == 0)
    {
      unsigned int v35 = v19;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    if (v33 == 2) {
      break;
    }
    if (v33 == 1)
    {
      if (v34)
      {
        if ((*(unsigned char *)(a1 + 52) & 4) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_86;
          }
          char v39 = objc_alloc_init(GEOPDGeographicCoordinate);
          if (!GEOPDGeographicCoordinateReadAllFrom((uint64_t)v39, (void *)v3)) {
            goto LABEL_85;
          }
          PBReaderRecallMark();
          uint64_t v40 = 32;
LABEL_50:
          id v41 = *(void **)(a1 + v40);
          *(void *)(a1 + v40) = v39;

          --v8;
LABEL_64:
          uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
          goto LABEL_65;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_86;
        }
        char v46 = 32 * *(unsigned char *)(a1 + 52);
LABEL_63:
        v8 += v46 >> 7;
        goto LABEL_64;
      }
    }
    else if ((v53 & 1) != 0 && (*(unsigned char *)(a1 + 52) & 1) == 0)
    {
      if (!*(void *)(a1 + 16))
      {
        id v42 = objc_alloc_init(MEMORY[0x1E4F940B0]);
        int v43 = *(void **)(a1 + 16);
        *(void *)(a1 + 16) = v42;
      }
      int v44 = PBUnknownFieldAdd();
      uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
      if (!v44)
      {
        int v51 = 0;
        char v52 = &OBJC_IVAR___GEOXPCReply__error;
        goto LABEL_69;
      }
      goto LABEL_65;
    }
LABEL_57:
    char v45 = PBReaderSkipValueWithTag();
    uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
    if ((v45 & 1) == 0)
    {
      int v51 = 0;
LABEL_67:
      char v52 = &OBJC_IVAR___GEOXPCReply__error;
      goto LABEL_68;
    }
LABEL_65:
    if (!(v54 & 1 | (v8 != 0))) {
      goto LABEL_66;
    }
  }
  if (!v34) {
    goto LABEL_57;
  }
  if ((*(unsigned char *)(a1 + 52) & 2) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0) {
      goto LABEL_86;
    }
    char v46 = *(unsigned char *)(a1 + 52) << 6;
    goto LABEL_63;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_86;
  }
  char v39 = objc_alloc_init(GEOPDGeographicCoordinate);
  if (GEOPDGeographicCoordinateReadAllFrom((uint64_t)v39, (void *)v3))
  {
    PBReaderRecallMark();
    uint64_t v40 = 24;
    goto LABEL_50;
  }
LABEL_85:

LABEL_86:
  int v51 = 0;
  char v52 = &OBJC_IVAR___GEOXPCReply__error;
  uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_68:
  if ((v53 & 1) == 0) {
    goto LABEL_70;
  }
LABEL_69:
  *(unsigned char *)(a1 + v52[630]) |= 1u;
LABEL_70:
  if (v56 || (v51 & 1) == 0)
  {
    *(unsigned char *)(a1 + v52[630]) |= 4u;
    *(unsigned char *)(a1 + v52[630]) |= 2u;
    goto LABEL_79;
  }
  if (v19)
  {
    while (1)
    {
      int v48 = *v19++;
      int v47 = v48;
      if (v48 == 1) {
        break;
      }
      if (v47 == 2)
      {
LABEL_75:
        *(unsigned char *)(a1 + v52[630]) |= v47;
      }
      else if (!v47)
      {
        goto LABEL_79;
      }
    }
    LOBYTE(v47) = 4;
    goto LABEL_75;
  }
LABEL_79:
  if (v51) {
    unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
  }
  else {
    unint64_t v3 = 0;
  }
  if (v56)
  {
    int v49 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_189A0FE70(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A102D4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDBoundingCubeReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDBoundingCubeReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOPDBoundingCubeReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOPDBoundingCubeReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDBoundingCubeReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    [*(id *)(a1 + 32) readAll:1];
    [*(id *)(a1 + 24) readAll:1];
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_189A10568(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A10708(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A1087C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A10C68(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

os_unfair_lock_s *GEOPDBoundsIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOPDBoundsIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 14);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

BOOL GEOPDBoundsFilterReadAllFrom(uint64_t a1, void *a2)
{
  unint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    unsigned __int8 v5 = (int *)MEMORY[0x1E4F940E0];
    unsigned int v6 = (int *)MEMORY[0x1E4F940C8];
    char v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      int v8 = v3[*v6];
      if (*(void *)&v3[*v4] >= *(void *)&v3[*v5]) {
        break;
      }
      if (v3[*v6])
      {
        int v8 = 1;
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      uint64_t v11 = 0;
      while (1)
      {
        uint64_t v12 = *v4;
        uint64_t v13 = *(void *)&v3[v12];
        unint64_t v14 = v13 + 1;
        if (v13 == -1 || v14 > *(void *)&v3[*v5]) {
          break;
        }
        char v15 = *(unsigned char *)(*(void *)&v3[*v7] + v13);
        *(void *)&v3[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0) {
          goto LABEL_13;
        }
        v9 += 7;
        if (v10++ >= 9)
        {
          char v17 = 0;
          int v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      int v8 = v3[*v6];
      if (v3[*v6]) {
        char v17 = 0;
      }
      else {
        char v17 = v11;
      }
LABEL_16:
      if (v8) {
        BOOL v18 = 1;
      }
      else {
        BOOL v18 = (v17 & 7) == 4;
      }
      if (v18) {
        break;
      }
      if (!*(void *)(a1 + 8))
      {
        id v19 = objc_alloc_init(MEMORY[0x1E4F940B0]);
        unsigned int v20 = *(void **)(a1 + 8);
        *(void *)(a1 + 8) = v19;
      }
      if ((PBUnknownFieldAdd() & 1) == 0) {
        goto LABEL_23;
      }
    }
    BOOL v21 = v8 == 0;
  }
  else
  {
LABEL_23:
    BOOL v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_189A12070(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A122C4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDBusinessAssetsReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  unsigned int v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  char v7 = 0;
  uint64_t v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  int v12 = ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1)
      + (*(unsigned char *)(a1 + 52) & 1)
      + ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1);
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v7 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 != 0;
        int v17 = v16 & ~v11 | v9;
        int v50 = v16 | v11;
        if (((v16 | v11) | v7)) {
          BOOL v18 = 0;
        }
        else {
          BOOL v18 = a3;
        }
        BOOL v19 = v8 != 0;
        unsigned int v20 = (int *)MEMORY[0x1E4F940E8];
        int v21 = 1;
        uint64_t v22 = (int *)MEMORY[0x1E4F940C8];
        if (*(void *)(v3 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(v3 + *v6)) {
          goto LABEL_62;
        }
        char v48 = v17;
        int v49 = v19 | v50 | v17;
        char v23 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v9;
LABEL_8:
        uint64_t v14 = v10;
        uint64_t v15 = v11;
LABEL_10:
        ++v8;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(unsigned char *)(v3 + *v22)) {
      goto LABEL_60;
    }
    char v24 = 0;
    unsigned int v25 = 0;
    unint64_t v26 = 0;
    while (1)
    {
      uint64_t v27 = *v20;
      uint64_t v28 = *(void *)(v3 + v27);
      unint64_t v29 = v28 + 1;
      if (v28 == -1 || v29 > *(void *)(v3 + *v6)) {
        break;
      }
      char v30 = *(unsigned char *)(*(void *)(v3 + *v23) + v28);
      *(void *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0) {
        goto LABEL_25;
      }
      v24 += 7;
      if (v25++ >= 9)
      {
        unint64_t v26 = 0;
        int v32 = *(unsigned __int8 *)(v3 + *v22);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v22) = 1;
LABEL_25:
    int v32 = *(unsigned __int8 *)(v3 + *v22);
    if (*(unsigned char *)(v3 + *v22)) {
      unint64_t v26 = 0;
    }
LABEL_27:
    if (v32 || (v26 & 7) == 4)
    {
LABEL_60:
      int v21 = 1;
      goto LABEL_61;
    }
    unint64_t v34 = v26 >> 3;
    BOOL v35 = v50;
    if (!((v18 == 0) | v50 & 1))
    {
      int v36 = v18;
      do
      {
        int v38 = *v36++;
        int v37 = v38;
        BOOL v35 = v38 != 0;
        if (v38) {
          BOOL v39 = v37 == v34;
        }
        else {
          BOOL v39 = 1;
        }
      }
      while (!v39);
    }
    if (v34 == 2) {
      break;
    }
    if (v34 == 1)
    {
      if (!v35 || (*(unsigned char *)(a1 + 52) & 2) != 0) {
        goto LABEL_58;
      }
      if ((PBReaderPlaceMark() & 1) == 0) {
        goto LABEL_81;
      }
      uint64_t v40 = objc_alloc_init(GEOPDCaptionedPhoto);
      if (!GEOPDCaptionedPhotoReadAllFrom((uint64_t)v40, (void *)v3, v10 & 1)) {
        goto LABEL_80;
      }
      PBReaderRecallMark();
      -[GEOPDBusinessAssets _addNoFlagsCoverPhoto:](a1, v40);
      goto LABEL_50;
    }
    if (v48 & 1) == 0 || (*(unsigned char *)(a1 + 52)) {
      goto LABEL_58;
    }
    if (!*(void *)(a1 + 16))
    {
      id v41 = objc_alloc_init(MEMORY[0x1E4F940B0]);
      id v42 = *(void **)(a1 + 16);
      *(void *)(a1 + 16) = v41;
    }
    int v21 = PBUnknownFieldAdd();
    uint64_t v22 = (int *)MEMORY[0x1E4F940C8];
    if (!v21) {
      goto LABEL_63;
    }
LABEL_56:
    if ((v49 & 1) == 0) {
      goto LABEL_60;
    }
LABEL_59:
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6)) {
      goto LABEL_60;
    }
  }
  if (!v35 || (*(unsigned char *)(a1 + 52) & 4) != 0)
  {
LABEL_58:
    int v21 = PBReaderSkipValueWithTag();
    uint64_t v22 = (int *)MEMORY[0x1E4F940C8];
    if ((v21 & v49 & 1) == 0) {
      goto LABEL_61;
    }
    goto LABEL_59;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_81;
  }
  uint64_t v40 = objc_alloc_init(GEOPDCaptionedPhoto);
  if (GEOPDCaptionedPhotoReadAllFrom((uint64_t)v40, (void *)v3, v10 & 1))
  {
    PBReaderRecallMark();
    -[GEOPDBusinessAssets _addNoFlagsCroppedCoverPhoto:](a1, v40);
LABEL_50:

    uint64_t v22 = (int *)MEMORY[0x1E4F940C8];
    goto LABEL_56;
  }
LABEL_80:

LABEL_81:
  int v21 = 0;
  uint64_t v22 = (int *)MEMORY[0x1E4F940C8];
LABEL_61:
  LOBYTE(v17) = v48;
LABEL_62:
  if (v17) {
LABEL_63:
  }
    *(unsigned char *)(a1 + 52) |= 1u;
  if (v50 & 1 | ((v21 & 1) == 0))
  {
    *(unsigned char *)(a1 + 52) |= 2u;
    *(unsigned char *)(a1 + 52) |= 4u;
    goto LABEL_74;
  }
  if (v18)
  {
    while (1)
    {
      int v45 = *v18++;
      int v44 = v45;
      if (v45 == 1) {
        break;
      }
      if (v44 == 2)
      {
        char v43 = 4;
LABEL_70:
        *(unsigned char *)(a1 + 52) |= v43;
      }
      else if (!v44)
      {
        goto LABEL_74;
      }
    }
    char v43 = 2;
    goto LABEL_70;
  }
LABEL_74:
  if (v21) {
    unint64_t v3 = *(unsigned char *)(v3 + *v22) == 0;
  }
  else {
    unint64_t v3 = 0;
  }
  if (v50)
  {
    char v46 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_189A12A10(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A130D0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDBusinessAssetsCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v22 = *MEMORY[0x1E4F143B8];
  long long v16 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  id v2 = *(id *)(a1 + 24);
  uint64_t v3 = [v2 countByEnumeratingWithState:&v16 objects:v21 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v17;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v17 != v5) {
          objc_enumerationMutation(v2);
        }
        -[GEOPDCaptionedPhoto readAll:](*(void *)(*((void *)&v16 + 1) + 8 * v6++), 1);
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v16 objects:v21 count:16];
    }
    while (v4);
  }

  long long v14 = 0u;
  long long v15 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  id v7 = *(id *)(a1 + 32);
  uint64_t v8 = [v7 countByEnumeratingWithState:&v12 objects:v20 count:16];
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)v13;
    do
    {
      uint64_t v11 = 0;
      do
      {
        if (*(void *)v13 != v10) {
          objc_enumerationMutation(v7);
        }
        -[GEOPDCaptionedPhoto readAll:](*(void *)(*((void *)&v12 + 1) + 8 * v11++), 1);
      }
      while (v9 != v11);
      uint64_t v9 = [v7 countByEnumeratingWithState:&v12 objects:v20 count:16];
    }
    while (v9);
  }
}

unint64_t GEOPDBusinessAssetsReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDBusinessAssetsReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOPDBusinessAssetsReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOPDBusinessAssetsReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDBusinessAssetsReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOPDBusinessAssetsCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_189A134D8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A13894(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A13B6C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A142A4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A144F4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDBusinessClaimReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 52);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 48)];
  uint64_t v7 = 0;
  uint64_t v8 = 0;
  char v9 = 0;
  uint64_t v10 = 0;
  unsigned int v11 = vaddv_s16((int16x4_t)(*(void *)&vshl_u16((uint16x4_t)(*(void *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 64)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFFFFFDFFFEFFFCLL) & 0xFF01FF01FF01FF01));
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v10])
    {
      case -4:
        ++v11;
        uint64_t v12 = v7;
        goto LABEL_8;
      case -3:
        char v9 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_8;
      case 0:
        BOOL v14 = v11 > 1;
        char v15 = v14 & ~(_BYTE)v7;
        unsigned __int8 v16 = v14 | v7;
        char v58 = v15 | v8;
        char v59 = v16 | v15 | v8;
        if ((v16 | v9)) {
          long long v17 = 0;
        }
        else {
          long long v17 = a3;
        }
        char v60 = (v17 == 0) | v16;
        BOOL v61 = v16;
        long long v18 = (int *)MEMORY[0x1E4F940E8];
        long long v19 = (int *)MEMORY[0x1E4F940C8];
        unsigned int v20 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v11;
LABEL_7:
        uint64_t v12 = v7;
        uint64_t v13 = v8;
LABEL_8:
        ++v10;
        uint64_t v7 = v12;
        uint64_t v8 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v18) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v19)) {
      goto LABEL_75;
    }
    char v21 = 0;
    unsigned int v22 = 0;
    unint64_t v23 = 0;
    while (1)
    {
      uint64_t v24 = *v18;
      uint64_t v25 = *(void *)(v3 + v24);
      unint64_t v26 = v25 + 1;
      if (v25 == -1 || v26 > *(void *)(v3 + *v6)) {
        break;
      }
      char v27 = *(unsigned char *)(*(void *)(v3 + *v20) + v25);
      *(void *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0) {
        goto LABEL_23;
      }
      v21 += 7;
      BOOL v28 = v22++ >= 9;
      if (v28)
      {
        unint64_t v23 = 0;
        int v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_25;
      }
    }
    *(unsigned char *)(v3 + *v19) = 1;
LABEL_23:
    int v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(unsigned char *)(v3 + *v19)) {
      unint64_t v23 = 0;
    }
LABEL_25:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_75:
      int v56 = 1;
      goto LABEL_76;
    }
    unint64_t v31 = v23 >> 3;
    BOOL v32 = v61;
    if ((v60 & 1) == 0)
    {
      unint64_t v33 = v17;
      do
      {
        int v35 = *v33++;
        int v34 = v35;
        BOOL v32 = v35 != 0;
        if (v35) {
          BOOL v36 = v34 == v31;
        }
        else {
          BOOL v36 = 1;
        }
      }
      while (!v36);
    }
    switch((int)v31)
    {
      case 1:
        if (!v32) {
          goto LABEL_61;
        }
        if ((*(unsigned char *)(a1 + 64) & 4) == 0)
        {
          uint64_t v37 = PBReaderReadString();
          uint64_t v38 = 24;
          goto LABEL_60;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_91;
        }
        char v51 = 32 * *(unsigned char *)(a1 + 64);
        goto LABEL_73;
      case 2:
        if ((v9 & 1) == 0) {
          goto LABEL_61;
        }
        char v42 = 0;
        unsigned int v43 = 0;
        uint64_t v44 = 0;
        *(unsigned char *)(a1 + 64) |= 1u;
        while (2)
        {
          uint64_t v45 = *v18;
          uint64_t v46 = *(void *)(v3 + v45);
          unint64_t v47 = v46 + 1;
          if (v46 == -1 || v47 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v19) = 1;
          }
          else
          {
            char v48 = *(unsigned char *)(*(void *)(v3 + *v20) + v46);
            *(void *)(v3 + v45) = v47;
            v44 |= (unint64_t)(v48 & 0x7F) << v42;
            if (v48 < 0)
            {
              v42 += 7;
              BOOL v28 = v43++ >= 9;
              if (v28)
              {
                uint64_t v44 = 0;
                goto LABEL_66;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v19)) {
          uint64_t v44 = 0;
        }
LABEL_66:
        *(unsigned char *)(a1 + 60) = v44 != 0;
        goto LABEL_74;
      case 3:
        if (!v32) {
          goto LABEL_61;
        }
        if ((*(unsigned char *)(a1 + 64) & 0x10) == 0)
        {
          uint64_t v37 = PBReaderReadString();
          uint64_t v38 = 40;
          goto LABEL_60;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_91;
        }
        char v51 = 8 * *(unsigned char *)(a1 + 64);
        goto LABEL_73;
      case 4:
        if (!v32) {
          goto LABEL_61;
        }
        if ((*(unsigned char *)(a1 + 64) & 8) == 0)
        {
          uint64_t v37 = PBReaderReadString();
          uint64_t v38 = 32;
LABEL_60:
          int v49 = *(void **)(a1 + v38);
          *(void *)(a1 + v38) = v37;

          long long v19 = (int *)MEMORY[0x1E4F940C8];
          --v10;
LABEL_74:
          if (!(v59 & 1 | (v10 != 0))) {
            goto LABEL_75;
          }
          continue;
        }
        if (PBReaderSkipValueWithTag())
        {
          char v51 = 16 * *(unsigned char *)(a1 + 64);
LABEL_73:
          v10 += v51 >> 7;
          long long v19 = (int *)MEMORY[0x1E4F940C8];
          goto LABEL_74;
        }
LABEL_91:
        int v56 = 0;
        long long v19 = (int *)MEMORY[0x1E4F940C8];
LABEL_76:
        unsigned int v57 = &OBJC_IVAR___GEOPDAddressComponent__unknownFields;
        if (v58) {
LABEL_77:
        }
          *(unsigned char *)(a1 + v57[89]) |= 2u;
        if (v61 || (v56 & 1) == 0)
        {
          *(unsigned char *)(a1 + v57[89]) |= 4u;
          *(unsigned char *)(a1 + v57[89]) |= 0x10u;
          *(unsigned char *)(a1 + v57[89]) |= 8u;
        }
        else if (v17)
        {
          while (1)
          {
            int v52 = *v17++;
            char v53 = 4;
            switch(v52)
            {
              case 0:
                goto LABEL_85;
              case 1:
                goto LABEL_84;
              case 3:
                char v53 = 16;
                goto LABEL_84;
              case 4:
                char v53 = 8;
LABEL_84:
                *(unsigned char *)(a1 + v57[89]) |= v53;
                break;
              default:
                continue;
            }
          }
        }
LABEL_85:
        if (v56) {
          unint64_t v3 = *(unsigned char *)(v3 + *v19) == 0;
        }
        else {
          unint64_t v3 = 0;
        }
        if (v61)
        {
          char v54 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      default:
        if ((v58 & 1) == 0 || (*(unsigned char *)(a1 + 64) & 2) != 0)
        {
LABEL_61:
          char v50 = PBReaderSkipValueWithTag();
          long long v19 = (int *)MEMORY[0x1E4F940C8];
          if ((v50 & 1) == 0)
          {
            int v56 = 0;
            goto LABEL_76;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v39 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            uint64_t v40 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v39;
          }
          int v41 = PBUnknownFieldAdd();
          long long v19 = (int *)MEMORY[0x1E4F940C8];
          if (!v41)
          {
            int v56 = 0;
            unsigned int v57 = &OBJC_IVAR___GEOPDAddressComponent__unknownFields;
            goto LABEL_77;
          }
        }
        goto LABEL_74;
    }
  }
}

void sub_189A14D60(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A14ECC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A155FC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDBusinessClaimReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 52))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDBusinessClaimReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = [v8 position];
  *(_DWORD *)(a1 + 52) = [v8 length];
  if (a3) {
    char v9 = (int *)&GEOPDBusinessClaimReadAllFrom_recursiveTag;
  }
  else {
    char v9 = (int *)&GEOPDBusinessClaimReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDBusinessClaimReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_189A1578C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDBusinessClaimReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOPDBusinessClaimReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189A157F0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDBusinessClaimIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 != 2) {
            goto LABEL_40;
          }
          goto LABEL_34;
        case 2u:
          if ((v8 & 7) != 0) {
            goto LABEL_40;
          }
          unsigned int v17 = 0;
          break;
        case 3u:
          if (v15 == 2) {
            goto LABEL_34;
          }
          goto LABEL_40;
        case 4u:
          if (v15 != 2) {
            goto LABEL_40;
          }
LABEL_34:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_40:
          BOOL v23 = 0;
          goto LABEL_39;
        default:
          if (!PBReaderSkipValueWithTag()) {
            goto LABEL_40;
          }
          continue;
      }
      while (1)
      {
        uint64_t v18 = *v2;
        uint64_t v19 = *(void *)&a1[v18];
        unint64_t v20 = v19 + 1;
        if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
          break;
        }
        int v21 = *(char *)(*(void *)&a1[*v5] + v19);
        *(void *)&a1[v18] = v20;
        if (v21 < 0 && v17++ <= 8) {
          continue;
        }
        goto LABEL_35;
      }
      a1[*v4] = 1;
LABEL_35:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v23 = a1[*v4] == 0;
LABEL_39:
  PBReaderRecallMark();
  return v23;
}

void sub_189A15C3C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDBusinessClaimIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  BOOL v2 = (*(unsigned char *)(a1 + 64) & 0x3C) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return v2;
}

void sub_189A15F98(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A162DC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDBusinessClaimFilterReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      int v8 = v3[*v6];
      if (*(void *)&v3[*v4] >= *(void *)&v3[*v5]) {
        break;
      }
      if (v3[*v6])
      {
        int v8 = 1;
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      uint64_t v11 = 0;
      while (1)
      {
        uint64_t v12 = *v4;
        uint64_t v13 = *(void *)&v3[v12];
        unint64_t v14 = v13 + 1;
        if (v13 == -1 || v14 > *(void *)&v3[*v5]) {
          break;
        }
        char v15 = *(unsigned char *)(*(void *)&v3[*v7] + v13);
        *(void *)&v3[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0) {
          goto LABEL_13;
        }
        v9 += 7;
        if (v10++ >= 9)
        {
          char v17 = 0;
          int v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      int v8 = v3[*v6];
      if (v3[*v6]) {
        char v17 = 0;
      }
      else {
        char v17 = v11;
      }
LABEL_16:
      if (v8) {
        BOOL v18 = 1;
      }
      else {
        BOOL v18 = (v17 & 7) == 4;
      }
      if (v18) {
        break;
      }
      if (!*(void *)(a1 + 8))
      {
        id v19 = objc_alloc_init(MEMORY[0x1E4F940B0]);
        unint64_t v20 = *(void **)(a1 + 8);
        *(void *)(a1 + 8) = v19;
      }
      if ((PBUnknownFieldAdd() & 1) == 0) {
        goto LABEL_23;
      }
    }
    BOOL v21 = v8 == 0;
  }
  else
  {
LABEL_23:
    BOOL v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_189A16870(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A16A64(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A16D8C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A16F10(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A17544(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A17638(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDBusinessHoursCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  uint64_t v13 = *MEMORY[0x1E4F143B8];
  long long v8 = 0u;
  long long v9 = 0u;
  long long v10 = 0u;
  long long v11 = 0u;
  id v2 = a1[8];
  uint64_t v3 = [v2 countByEnumeratingWithState:&v8 objects:v12 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v9;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v9 != v5) {
          objc_enumerationMutation(v2);
        }
        objc_msgSend(*(id *)(*((void *)&v8 + 1) + 8 * v6++), "readAll:", 1, (void)v8);
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v8 objects:v12 count:16];
    }
    while (v4);
  }

  [a1[5] readAll:1];
  return [a1[6] readAll:1];
}

BOOL GEOPDBusinessHoursIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 == 2 && PBReaderPlaceMark() && GEOPDHoursIsValid(a1)) {
            goto LABEL_57;
          }
          goto LABEL_60;
        case 2u:
          if ((v8 & 7) != 0) {
            goto LABEL_60;
          }
          unsigned int v17 = 0;
          while (1)
          {
            uint64_t v18 = *v2;
            uint64_t v19 = *(void *)&a1[v18];
            unint64_t v20 = v19 + 1;
            if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
              goto LABEL_53;
            }
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if (v21 < 0)
            {
              BOOL v22 = v17++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_58;
          }
        case 3u:
          if ((v8 & 7) != 0) {
            goto LABEL_60;
          }
          unsigned int v23 = 0;
          while (1)
          {
            uint64_t v24 = *v2;
            uint64_t v25 = *(void *)&a1[v24];
            unint64_t v26 = v25 + 1;
            if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
              goto LABEL_53;
            }
            int v27 = *(char *)(*(void *)&a1[*v5] + v25);
            *(void *)&a1[v24] = v26;
            if (v27 < 0)
            {
              BOOL v22 = v23++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_58;
          }
        case 4u:
        case 5u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOLocalizedStringIsValid(a1)) {
            goto LABEL_60;
          }
          goto LABEL_57;
        case 6u:
          if ((v8 & 7) != 0) {
            goto LABEL_60;
          }
          unsigned int v28 = 0;
          break;
        case 7u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDSearchClientBehaviorIsValid(a1)) {
            goto LABEL_60;
          }
LABEL_57:
          PBReaderRecallMark();
          continue;
        default:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_60:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        uint64_t v29 = *v2;
        uint64_t v30 = *(void *)&a1[v29];
        unint64_t v31 = v30 + 1;
        if (v30 == -1 || v31 > *(void *)&a1[*v3]) {
          break;
        }
        int v32 = *(char *)(*(void *)&a1[*v5] + v30);
        *(void *)&a1[v29] = v31;
        if (v32 < 0)
        {
          BOOL v22 = v28++ > 8;
          if (!v22) {
            continue;
          }
        }
        goto LABEL_58;
      }
LABEL_53:
      a1[*v4] = 1;
LABEL_58:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v33 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v33;
}

BOOL GEOPDHoursIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_50;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        BOOL v13 = v7++ >= 9;
        if (v13)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        goto LABEL_50;
      }
      unint64_t v17 = v8 >> 3;
      if ((v8 >> 3) == 3)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDSearchClientBehaviorIsValid(a1))
        {
LABEL_52:
          PBReaderRecallMark();
          return 0;
        }
        goto LABEL_35;
      }
      if (v17 == 2) {
        break;
      }
      if (v17 == 1)
      {
        if (v15 == 2)
        {
          if (!PBReaderPlaceMark()) {
            goto LABEL_52;
          }
LABEL_39:
          while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
          {
            unsigned int v23 = a1[*v4];
            if (a1[*v4]) {
              break;
            }
            while (1)
            {
              uint64_t v24 = *v2;
              uint64_t v25 = *(void *)&a1[v24];
              unint64_t v26 = v25 + 1;
              if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
                break;
              }
              int v27 = *(char *)(*(void *)&a1[*v5] + v25);
              *(void *)&a1[v24] = v26;
              if (v27 < 0)
              {
                BOOL v13 = v23++ >= 9;
                if (!v13) {
                  continue;
                }
              }
              goto LABEL_39;
            }
            a1[*v4] = 1;
          }
LABEL_35:
          PBReaderRecallMark();
          goto LABEL_49;
        }
        if ((v8 & 7) != 0) {
          goto LABEL_52;
        }
        while (1)
        {
          uint64_t v18 = *v2;
          uint64_t v19 = *(void *)&a1[v18];
          unint64_t v20 = v19 + 1;
          if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
            break;
          }
          int v21 = *(char *)(*(void *)&a1[*v5] + v19);
          *(void *)&a1[v18] = v20;
          if (v21 < 0)
          {
            unsigned int v22 = v15++;
            if (v22 <= 8) {
              continue;
            }
          }
          goto LABEL_49;
        }
        a1[*v4] = 1;
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_52;
      }
LABEL_49:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_50;
      }
    }
    if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDLocalTimeRangeIsValid(a1)) {
      goto LABEL_52;
    }
    goto LABEL_35;
  }
LABEL_50:
  BOOL v28 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v28;
}

void sub_189A1870C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDBusinessHoursIsDirty(uint64_t a1)
{
  uint64_t v13 = *MEMORY[0x1E4F143B8];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 80));
  __int16 v2 = *(_WORD *)(a1 + 88);
  if ((v2 & 0x180) != 0) {
    return 1;
  }
  if ((v2 & 0x20) != 0)
  {
    if (GEOLocalizedStringIsDirty(*(void *)(a1 + 40))) {
      return 1;
    }
    __int16 v2 = *(_WORD *)(a1 + 88);
  }
  if ((v2 & 0x40) == 0) {
    goto LABEL_10;
  }
  if (GEOLocalizedStringIsDirty(*(void *)(a1 + 48))) {
    return 1;
  }
  __int16 v2 = *(_WORD *)(a1 + 88);
LABEL_10:
  if ((v2 & 0x10) != 0) {
    return 1;
  }
  if ((v2 & 0x80) == 0) {
    return 0;
  }
  long long v10 = 0u;
  long long v11 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  id v5 = *(id *)(a1 + 64);
  uint64_t v3 = [v5 countByEnumeratingWithState:&v8 objects:v12 count:16];
  if (v3)
  {
    uint64_t v6 = *(void *)v9;
    while (2)
    {
      for (uint64_t i = 0; i != v3; ++i)
      {
        if (*(void *)v9 != v6) {
          objc_enumerationMutation(v5);
        }
        if (GEOPDHoursIsDirty(*(void *)(*((void *)&v8 + 1) + 8 * i)))
        {
          uint64_t v3 = 1;
          goto LABEL_23;
        }
      }
      uint64_t v3 = [v5 countByEnumeratingWithState:&v8 objects:v12 count:16];
      if (v3) {
        continue;
      }
      break;
    }
  }
LABEL_23:

  return v3;
}

void sub_189A18B9C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDBusinessHoursDataReadAllFrom(uint64_t a1, void *a2, int a3)
{
  id v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    uint64_t v6 = (int *)MEMORY[0x1E4F940E8];
    unsigned int v7 = (int *)MEMORY[0x1E4F940E0];
    long long v8 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v5[*MEMORY[0x1E4F940E8]] < *(void *)&v5[*MEMORY[0x1E4F940E0]])
    {
      long long v9 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v5[*v8]) {
          break;
        }
        char v10 = 0;
        unsigned int v11 = 0;
        unint64_t v12 = 0;
        while (1)
        {
          uint64_t v13 = *v6;
          uint64_t v14 = *(void *)&v5[v13];
          unint64_t v15 = v14 + 1;
          if (v14 == -1 || v15 > *(void *)&v5[*v7]) {
            break;
          }
          char v16 = *(unsigned char *)(*(void *)&v5[*v9] + v14);
          *(void *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0) {
            goto LABEL_13;
          }
          v10 += 7;
          if (v11++ >= 9)
          {
            unint64_t v12 = 0;
            int v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        int v18 = v5[*v8];
        if (v5[*v8]) {
          unint64_t v12 = 0;
        }
LABEL_15:
        if (v18 || (v12 & 7) == 4) {
          break;
        }
        if ((v12 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_29;
          }
          unint64_t v20 = objc_alloc_init(GEOPDBusinessHours);
          if (!GEOPDBusinessHoursReadAllFrom((uint64_t)v20, v5, a3))
          {

            goto LABEL_29;
          }
          PBReaderRecallMark();
          int v21 = *(void **)(a1 + 16);
          *(void *)(a1 + 16) = v20;
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v22 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            unsigned int v23 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v22;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_29;
          }
        }
      }
      while (*(void *)&v5[*v6] < *(void *)&v5[*v7]);
    }
    BOOL v24 = v5[*v8] == 0;
  }
  else
  {
LABEL_29:
    BOOL v24 = 0;
  }
  objc_sync_exit(v5);

  return v24;
}

void sub_189A19594(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDBusinessHoursFilterReadAllFrom(uint64_t a1, void *a2)
{
  uint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    id v5 = (int *)MEMORY[0x1E4F940E0];
    uint64_t v6 = (int *)MEMORY[0x1E4F940C8];
    unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      int v8 = v3[*v6];
      if (*(void *)&v3[*v4] >= *(void *)&v3[*v5]) {
        break;
      }
      if (v3[*v6])
      {
        int v8 = 1;
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      uint64_t v11 = 0;
      while (1)
      {
        uint64_t v12 = *v4;
        uint64_t v13 = *(void *)&v3[v12];
        unint64_t v14 = v13 + 1;
        if (v13 == -1 || v14 > *(void *)&v3[*v5]) {
          break;
        }
        char v15 = *(unsigned char *)(*(void *)&v3[*v7] + v13);
        *(void *)&v3[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0) {
          goto LABEL_13;
        }
        v9 += 7;
        if (v10++ >= 9)
        {
          char v17 = 0;
          int v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      int v8 = v3[*v6];
      if (v3[*v6]) {
        char v17 = 0;
      }
      else {
        char v17 = v11;
      }
LABEL_16:
      if (v8) {
        BOOL v18 = 1;
      }
      else {
        BOOL v18 = (v17 & 7) == 4;
      }
      if (v18) {
        break;
      }
      if (!*(void *)(a1 + 8))
      {
        id v19 = objc_alloc_init(MEMORY[0x1E4F940B0]);
        unint64_t v20 = *(void **)(a1 + 8);
        *(void *)(a1 + 8) = v19;
      }
      if ((PBUnknownFieldAdd() & 1) == 0) {
        goto LABEL_23;
      }
    }
    BOOL v21 = v8 == 0;
  }
  else
  {
LABEL_23:
    BOOL v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_189A19BE8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDBusinessInfosModuleConfigurationReadAllFrom(uint64_t a1, void *a2)
{
  uint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    id v5 = (int *)MEMORY[0x1E4F940E0];
    uint64_t v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        int v17 = v10 & 7;
        if (v16 || v17 == 4) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          if (v17 == 2)
          {
            if (!PBReaderPlaceMark()) {
              goto LABEL_49;
            }
            while (*(void *)&v3[*v4] < *(void *)&v3[*v5] && !v3[*v6])
            {
              char v19 = 0;
              unsigned int v20 = 0;
              uint64_t v21 = 0;
              while (1)
              {
                uint64_t v22 = *v4;
                uint64_t v23 = *(void *)&v3[v22];
                unint64_t v24 = v23 + 1;
                if (v23 == -1 || v24 > *(void *)&v3[*v5]) {
                  break;
                }
                char v25 = *(unsigned char *)(*(void *)&v3[*v7] + v23);
                *(void *)&v3[v22] = v24;
                v21 |= (unint64_t)(v25 & 0x7F) << v19;
                if (v25 < 0)
                {
                  v19 += 7;
                  BOOL v15 = v20++ >= 9;
                  if (!v15) {
                    continue;
                  }
                }
                goto LABEL_32;
              }
              v3[*v6] = 1;
LABEL_32:
              PBRepeatedUInt32Add();
            }
            PBReaderRecallMark();
          }
          else
          {
            char v28 = 0;
            unsigned int v29 = 0;
            uint64_t v30 = 0;
            while (1)
            {
              uint64_t v31 = *v4;
              uint64_t v32 = *(void *)&v3[v31];
              unint64_t v33 = v32 + 1;
              if (v32 == -1 || v33 > *(void *)&v3[*v5]) {
                break;
              }
              char v34 = *(unsigned char *)(*(void *)&v3[*v7] + v32);
              *(void *)&v3[v31] = v33;
              v30 |= (unint64_t)(v34 & 0x7F) << v28;
              if (v34 < 0)
              {
                v28 += 7;
                BOOL v15 = v29++ >= 9;
                if (!v15) {
                  continue;
                }
              }
              goto LABEL_46;
            }
            v3[*v6] = 1;
LABEL_46:
            PBRepeatedUInt32Add();
          }
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v26 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            int v27 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v26;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_49;
          }
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v35 = v3[*v6] == 0;
  }
  else
  {
LABEL_49:
    BOOL v35 = 0;
  }
  objc_sync_exit(v3);

  return v35;
}

void sub_189A1A43C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A1AA78(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDButtonItemReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  char v6 = 0;
  uint64_t v7 = 0;
  uint64_t v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  int v11 = ((*(unsigned __int8 *)(a1 + 56) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 56) >> 2) & 1)
      + ((*(unsigned __int8 *)(a1 + 56) >> 1) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v11;
        goto LABEL_8;
      case -3:
        char v6 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v13 = v9;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v15 = v11 != 0;
        char v16 = v15 & ~(_BYTE)v10 | v8;
        unsigned __int8 v17 = v15 | v10;
        char v61 = v16;
        char v62 = v17 | v16;
        if ((v17 | v6)) {
          BOOL v18 = 0;
        }
        else {
          BOOL v18 = a3;
        }
        char v19 = (int *)MEMORY[0x1E4F940E8];
        unsigned int v20 = (int *)MEMORY[0x1E4F940C8];
        char v63 = (v18 == 0) | v17;
        BOOL v64 = v17;
        uint64_t v21 = (int *)MEMORY[0x1E4F940B8];
        uint64_t v22 = (int *)MEMORY[0x1E4F940E0];
        break;
      default:
        ++v11;
LABEL_7:
        uint64_t v12 = v8;
LABEL_8:
        uint64_t v13 = v9;
        uint64_t v14 = v10;
LABEL_10:
        ++v7;
        uint64_t v8 = v12;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v19) >= *(void *)(v3 + *v22) || *(unsigned char *)(v3 + *v20)) {
      goto LABEL_79;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v19;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v22)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v21) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      BOOL v30 = v24++ >= 9;
      if (v30)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v20);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v20) = 1;
LABEL_25:
    int v31 = *(unsigned __int8 *)(v3 + *v20);
    if (*(unsigned char *)(v3 + *v20)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_79:
      int v59 = 1;
      goto LABEL_80;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v64;
    if ((v63 & 1) == 0)
    {
      BOOL v35 = v18;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    if (v33 == 3)
    {
      if (!v34) {
        goto LABEL_66;
      }
      if ((*(unsigned char *)(a1 + 56) & 4) == 0)
      {
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_99;
        }
        uint64_t v46 = objc_alloc_init(GEOPDGroupParams);
        if (!GEOPDGroupParamsReadAllFrom((uint64_t)v46, (void *)v3, v9 & 1)) {
          goto LABEL_98;
        }
        PBReaderRecallMark();
        uint64_t v47 = 24;
LABEL_59:
        char v48 = *(void **)(a1 + v47);
        *(void *)(a1 + v47) = v46;

        --v7;
LABEL_77:
        unsigned int v20 = (int *)MEMORY[0x1E4F940C8];
        uint64_t v22 = (int *)MEMORY[0x1E4F940E0];
        goto LABEL_78;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        goto LABEL_99;
      }
      char v53 = 32 * *(unsigned char *)(a1 + 56);
LABEL_76:
      v7 += v53 >> 7;
      goto LABEL_77;
    }
    if (v33 == 2) {
      break;
    }
    if (v33 == 1)
    {
      if ((v6 & 1) == 0) {
        goto LABEL_66;
      }
      char v39 = 0;
      unsigned int v40 = 0;
      uint64_t v41 = 0;
      *(unsigned char *)(a1 + 56) |= 1u;
      while (1)
      {
        uint64_t v42 = *v19;
        uint64_t v43 = *(void *)(v3 + v42);
        unint64_t v44 = v43 + 1;
        if (v43 == -1 || v44 > *(void *)(v3 + *v22)) {
          break;
        }
        char v45 = *(unsigned char *)(*(void *)(v3 + *v21) + v43);
        *(void *)(v3 + v42) = v44;
        v41 |= (unint64_t)(v45 & 0x7F) << v39;
        if ((v45 & 0x80) == 0) {
          goto LABEL_69;
        }
        v39 += 7;
        BOOL v30 = v40++ >= 9;
        if (v30)
        {
          LODWORD(v41) = 0;
          goto LABEL_71;
        }
      }
      *(unsigned char *)(v3 + *v20) = 1;
LABEL_69:
      if (*(unsigned char *)(v3 + *v20)) {
        LODWORD(v41) = 0;
      }
LABEL_71:
      *(_DWORD *)(a1 + 52) = v41;
    }
    else
    {
      if ((v61 & 1) == 0 || (*(unsigned char *)(a1 + 56) & 2) != 0)
      {
LABEL_66:
        char v52 = PBReaderSkipValueWithTag();
        uint64_t v22 = (int *)MEMORY[0x1E4F940E0];
        unsigned int v20 = (int *)MEMORY[0x1E4F940C8];
        if ((v52 & 1) == 0)
        {
          int v59 = 0;
          goto LABEL_80;
        }
        goto LABEL_78;
      }
      if (!*(void *)(a1 + 16))
      {
        id v49 = objc_alloc_init(MEMORY[0x1E4F940B0]);
        char v50 = *(void **)(a1 + 16);
        *(void *)(a1 + 16) = v49;
      }
      int v51 = PBUnknownFieldAdd();
      unsigned int v20 = (int *)MEMORY[0x1E4F940C8];
      uint64_t v22 = (int *)MEMORY[0x1E4F940E0];
      if (!v51)
      {
        int v59 = 0;
        char v60 = &OBJC_IVAR___GEOPDAddressComponent__unknownFields;
        goto LABEL_81;
      }
    }
LABEL_78:
    if (!(v62 & 1 | (v7 != 0))) {
      goto LABEL_79;
    }
  }
  if (!v34) {
    goto LABEL_66;
  }
  if ((*(unsigned char *)(a1 + 56) & 8) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0) {
      goto LABEL_99;
    }
    char v53 = 16 * *(unsigned char *)(a1 + 56);
    goto LABEL_76;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_99;
  }
  uint64_t v46 = objc_alloc_init(GEOPDQuickLinkParams);
  if (GEOPDQuickLinkParamsReadAllFrom((uint64_t)v46, (void *)v3))
  {
    PBReaderRecallMark();
    uint64_t v47 = 32;
    goto LABEL_59;
  }
LABEL_98:

LABEL_99:
  int v59 = 0;
  unsigned int v20 = (int *)MEMORY[0x1E4F940C8];
LABEL_80:
  char v60 = &OBJC_IVAR___GEOPDAddressComponent__unknownFields;
  if ((v61 & 1) == 0) {
    goto LABEL_82;
  }
LABEL_81:
  *(unsigned char *)(a1 + v60[107]) |= 2u;
LABEL_82:
  if (v64 || (v59 & 1) == 0)
  {
    *(unsigned char *)(a1 + v60[107]) |= 8u;
    *(unsigned char *)(a1 + v60[107]) |= 4u;
    goto LABEL_92;
  }
  if (v18)
  {
    while (2)
    {
      while (1)
      {
        int v55 = *v18++;
        int v54 = v55;
        if (v55 == 2) {
          break;
        }
        if (v54 == 3)
        {
          char v56 = 4;
          goto LABEL_91;
        }
        if (!v54) {
          goto LABEL_92;
        }
      }
      char v56 = 8;
LABEL_91:
      *(unsigned char *)(a1 + v60[107]) |= v56;
      continue;
    }
  }
LABEL_92:
  if (v59) {
    unint64_t v3 = *(unsigned char *)(v3 + *v20) == 0;
  }
  else {
    unint64_t v3 = 0;
  }
  if (v64)
  {
    unsigned int v57 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_189A1B234(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A1BB74(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDButtonItemReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDButtonItemReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOPDButtonItemReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOPDButtonItemReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDButtonItemReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    [*(id *)(a1 + 32) readAll:1];
    [*(id *)(a1 + 24) readAll:1];
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_189A1BD30(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDButtonItemReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOPDButtonItemReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189A1BD94(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDButtonItemIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  __int16 v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    id v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_41;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        goto LABEL_41;
      }
      unint64_t v17 = v8 >> 3;
      if ((v8 >> 3) == 3) {
        break;
      }
      if (v17 == 2)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDQuickLinkParamsIsValid(a1)) {
          goto LABEL_43;
        }
LABEL_36:
        PBReaderRecallMark();
        goto LABEL_40;
      }
      if (v17 == 1)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_43;
        }
        unsigned int v18 = 0;
        while (1)
        {
          uint64_t v19 = *v2;
          uint64_t v20 = *(void *)&a1[v19];
          unint64_t v21 = v20 + 1;
          if (v20 == -1 || v21 > *(void *)&a1[*v3]) {
            break;
          }
          int v22 = *(char *)(*(void *)&a1[*v5] + v20);
          *(void *)&a1[v19] = v21;
          if (v22 < 0 && v18++ <= 8) {
            continue;
          }
          goto LABEL_40;
        }
        a1[*v4] = 1;
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_43;
      }
LABEL_40:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_41;
      }
    }
    if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDGroupParamsIsValid(a1))
    {
LABEL_43:
      PBReaderRecallMark();
      return 0;
    }
    goto LABEL_36;
  }
LABEL_41:
  BOOL v24 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v24;
}

BOOL GEOPDQuickLinkParamsIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  __int16 v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    id v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      if (v14 || (v8 & 7) == 4) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_33;
        }
        unsigned int v16 = 0;
        while (1)
        {
          uint64_t v17 = *v2;
          uint64_t v18 = *(void *)&a1[v17];
          unint64_t v19 = v18 + 1;
          if (v18 == -1 || v19 > *(void *)&a1[*v3]) {
            break;
          }
          int v20 = *(char *)(*(void *)&a1[*v5] + v18);
          *(void *)&a1[v17] = v19;
          if (v20 < 0 && v16++ <= 8) {
            continue;
          }
          goto LABEL_30;
        }
        a1[*v4] = 1;
      }
      else if (!PBReaderSkipValueWithTag())
      {
LABEL_33:
        BOOL v22 = 0;
        goto LABEL_32;
      }
LABEL_30:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v22 = a1[*v4] == 0;
LABEL_32:
  PBReaderRecallMark();
  return v22;
}

BOOL GEOPDGroupParamsIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  __int16 v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    id v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      unint64_t v17 = v8 >> 3;
      if ((v8 >> 3) == 3)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDGroupDataIsValid(a1))
        {
LABEL_46:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else
      {
        if (v17 == 2)
        {
          if ((v8 & 7) != 0) {
            goto LABEL_46;
          }
          unsigned int v24 = 0;
          while (1)
          {
            uint64_t v25 = *v2;
            uint64_t v26 = *(void *)&a1[v25];
            unint64_t v27 = v26 + 1;
            if (v26 == -1 || v27 > *(void *)&a1[*v3]) {
              goto LABEL_41;
            }
            int v28 = *(char *)(*(void *)&a1[*v5] + v26);
            *(void *)&a1[v25] = v27;
            if (v28 < 0)
            {
              BOOL v23 = v24++ > 8;
              if (!v23) {
                continue;
              }
            }
            goto LABEL_43;
          }
        }
        if (v17 == 1)
        {
          if ((v8 & 7) != 0) {
            goto LABEL_46;
          }
          unsigned int v18 = 0;
          while (1)
          {
            uint64_t v19 = *v2;
            uint64_t v20 = *(void *)&a1[v19];
            unint64_t v21 = v20 + 1;
            if (v20 == -1 || v21 > *(void *)&a1[*v3]) {
              break;
            }
            int v22 = *(char *)(*(void *)&a1[*v5] + v20);
            *(void *)&a1[v19] = v21;
            if (v22 < 0)
            {
              BOOL v23 = v18++ > 8;
              if (!v23) {
                continue;
              }
            }
            goto LABEL_43;
          }
LABEL_41:
          a1[*v4] = 1;
          continue;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_46;
        }
      }
LABEL_43:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v29 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v29;
}

void sub_189A1C628(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDButtonItemIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  BOOL v2 = (*(unsigned char *)(a1 + 56) & 0x1C) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return v2;
}

void sub_189A1C950(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A1CC60(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDButtonModuleConfigurationReadAllFrom(uint64_t a1, void *a2, int a3)
{
  id v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    char v6 = (int *)MEMORY[0x1E4F940E8];
    unsigned int v7 = (int *)MEMORY[0x1E4F940E0];
    unint64_t v8 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v5[*MEMORY[0x1E4F940E8]] < *(void *)&v5[*MEMORY[0x1E4F940E0]])
    {
      uint64_t v9 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v5[*v8]) {
          break;
        }
        char v10 = 0;
        unsigned int v11 = 0;
        unint64_t v12 = 0;
        while (1)
        {
          uint64_t v13 = *v6;
          uint64_t v14 = *(void *)&v5[v13];
          unint64_t v15 = v14 + 1;
          if (v14 == -1 || v15 > *(void *)&v5[*v7]) {
            break;
          }
          char v16 = *(unsigned char *)(*(void *)&v5[*v9] + v14);
          *(void *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0) {
            goto LABEL_13;
          }
          v10 += 7;
          if (v11++ >= 9)
          {
            unint64_t v12 = 0;
            int v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        int v18 = v5[*v8];
        if (v5[*v8]) {
          unint64_t v12 = 0;
        }
LABEL_15:
        if (v18 || (v12 & 7) == 4) {
          break;
        }
        if ((v12 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_29;
          }
          uint64_t v20 = objc_alloc_init(GEOPDButtonItem);
          if (!GEOPDButtonItemReadAllFrom((uint64_t)v20, v5, a3))
          {

            goto LABEL_29;
          }
          PBReaderRecallMark();
          -[GEOPDButtonModuleConfiguration addButtonItem:](a1, v20);
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v21 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            int v22 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v21;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_29;
          }
        }
      }
      while (*(void *)&v5[*v6] < *(void *)&v5[*v7]);
    }
    BOOL v23 = v5[*v8] == 0;
  }
  else
  {
LABEL_29:
    BOOL v23 = 0;
  }
  objc_sync_exit(v5);

  return v23;
}

void sub_189A1D4C0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A1D950(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A1DB60(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A1DCF0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A1DE80(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A1F40C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL _GEOPDCaptionedPhotoIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 96));
  __int16 v2 = *(_WORD *)(a1 + 108);
  if ((v2 & 0xB600) != 0) {
    return 1;
  }
  if ((*(_WORD *)(a1 + 108) & 0x4000) != 0)
  {
    if (GEOPDPhotoIsDirty(*(void *)(a1 + 80))) {
      return 1;
    }
    __int16 v2 = *(_WORD *)(a1 + 108);
  }
  if ((v2 & 0x800) == 0) {
    goto LABEL_10;
  }
  uint64_t v4 = *(void *)(a1 + 56);
  if (v4)
  {
    os_unfair_lock_lock_with_options();
    os_unfair_lock_assert_owner((const os_unfair_lock *)(v4 + 72));
    unsigned int v5 = *(unsigned __int8 *)(v4 + 80);
    os_unfair_lock_unlock((os_unfair_lock_t)(v4 + 72));
    if (v5 > 3) {
      return 1;
    }
  }
  __int16 v2 = *(_WORD *)(a1 + 108);
LABEL_10:
  if ((v2 & 0x100) == 0) {
    return 0;
  }
  uint64_t v6 = *(void *)(a1 + 24);

  return GEOPDAttributionIsDirty(v6);
}

os_unfair_lock_s *GEOPDCaptionedPhotoIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    BOOL IsDirty = _GEOPDCaptionedPhotoIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 24);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_189A1F8C0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A20810(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A20A90(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A20CE8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDCategorizedPhotosReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 52);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 48)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  unsigned int v12 = vaddv_s16((int16x4_t)(*(void *)&vshl_u16((uint16x4_t)(*(void *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 64)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFFFFFCFFFEFFFDLL) & 0xFF01FF01FF01FF01));
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 > 1;
        char v17 = v16 & ~(_BYTE)v11 | v9;
        unsigned __int8 v18 = v16 | v11;
        char v60 = v17;
        char v61 = v18 | v17;
        char v59 = v8;
        if ((v18 | v8)) {
          uint64_t v19 = 0;
        }
        else {
          uint64_t v19 = a3;
        }
        uint64_t v20 = (int *)MEMORY[0x1E4F940E8];
        char v62 = (v19 == 0) | v18;
        BOOL v63 = v18;
        id v21 = (int *)MEMORY[0x1E4F940C8];
        int v22 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v9;
LABEL_8:
        uint64_t v14 = v10;
        uint64_t v15 = v11;
LABEL_10:
        ++v7;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (*(void *)(v3 + *v20) < *(void *)(v3 + *v6) && !*(unsigned char *)(v3 + *v21))
  {
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      BOOL v30 = v24++ >= 9;
      if (v30)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_25:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    if (v31 || (v25 & 7) == 4) {
      break;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v63;
    if ((v62 & 1) == 0)
    {
      BOOL v35 = v19;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    switch((int)v33)
    {
      case 1:
        if (!v34) {
          goto LABEL_67;
        }
        if ((*(unsigned char *)(a1 + 64) & 4) == 0)
        {
          uint64_t v39 = PBReaderReadString();
          unsigned int v40 = *(void **)(a1 + 24);
          *(void *)(a1 + 24) = v39;

          --v7;
          goto LABEL_75;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_95;
        }
        v7 += *(unsigned __int8 *)(a1 + 64) << 29 >> 31;
        goto LABEL_75;
      case 2:
        if (!v34 || (*(unsigned char *)(a1 + 64) & 8) != 0) {
          goto LABEL_67;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_95;
        }
        unint64_t v44 = objc_alloc_init(GEOLocalizedString);
        if (!GEOLocalizedStringReadAllFrom((uint64_t)v44, (void *)v3, v10 & 1)) {
          goto LABEL_94;
        }
        PBReaderRecallMark();
        -[GEOPDCategorizedPhotos _addNoFlagsCategoryName:](a1, v44);
        goto LABEL_58;
      case 3:
        if (!v34 || (*(unsigned char *)(a1 + 64) & 0x10) != 0) {
          goto LABEL_67;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_95;
        }
        unint64_t v44 = objc_alloc_init(GEOPDCaptionedPhoto);
        if (GEOPDCaptionedPhotoReadAllFrom((uint64_t)v44, (void *)v3, v10 & 1))
        {
          PBReaderRecallMark();
          -[GEOPDCategorizedPhotos _addNoFlagsPhoto:](a1, v44);
LABEL_58:

LABEL_75:
          id v21 = (int *)MEMORY[0x1E4F940C8];
          goto LABEL_76;
        }
LABEL_94:

LABEL_95:
        int v57 = 0;
        char v58 = &OBJC_IVAR___GEOXPCReply__error;
        id v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_79:
        if (v60) {
LABEL_80:
        }
          *(unsigned char *)(a1 + v58[685]) |= 2u;
        if (v63 || (v57 & 1) == 0)
        {
          *(unsigned char *)(a1 + v58[685]) |= 4u;
          *(unsigned char *)(a1 + v58[685]) |= 8u;
          *(unsigned char *)(a1 + v58[685]) |= 0x10u;
        }
        else if (v19)
        {
          while (1)
          {
            int v53 = *v19++;
            char v54 = 4;
            switch(v53)
            {
              case 0:
                goto LABEL_88;
              case 1:
                goto LABEL_87;
              case 2:
                char v54 = 8;
                goto LABEL_87;
              case 3:
                char v54 = 16;
LABEL_87:
                *(unsigned char *)(a1 + v58[685]) |= v54;
                break;
              default:
                continue;
            }
          }
        }
LABEL_88:
        if (v57) {
          unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
        }
        else {
          unint64_t v3 = 0;
        }
        if (v63)
        {
          int v55 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      case 4:
        if ((v59 & 1) == 0) {
          goto LABEL_67;
        }
        char v45 = 0;
        unsigned int v46 = 0;
        uint64_t v47 = 0;
        *(unsigned char *)(a1 + 64) |= 1u;
        while (2)
        {
          uint64_t v48 = *v20;
          uint64_t v49 = *(void *)(v3 + v48);
          unint64_t v50 = v49 + 1;
          if (v49 == -1 || v50 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v51 = *(unsigned char *)(*(void *)(v3 + *v22) + v49);
            *(void *)(v3 + v48) = v50;
            v47 |= (unint64_t)(v51 & 0x7F) << v45;
            if (v51 < 0)
            {
              v45 += 7;
              BOOL v30 = v46++ >= 9;
              if (v30)
              {
                LODWORD(v47) = 0;
                goto LABEL_72;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          LODWORD(v47) = 0;
        }
LABEL_72:
        *(_DWORD *)(a1 + 60) = v47;
        goto LABEL_76;
      default:
        if ((v60 & 1) == 0 || (*(unsigned char *)(a1 + 64) & 2) != 0)
        {
LABEL_67:
          char v52 = PBReaderSkipValueWithTag();
          id v21 = (int *)MEMORY[0x1E4F940C8];
          if ((v52 & 1) == 0)
          {
            int v57 = 0;
LABEL_78:
            char v58 = &OBJC_IVAR___GEOXPCReply__error;
            goto LABEL_79;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v41 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            uint64_t v42 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v41;
          }
          int v43 = PBUnknownFieldAdd();
          id v21 = (int *)MEMORY[0x1E4F940C8];
          if (!v43)
          {
            int v57 = 0;
            char v58 = &OBJC_IVAR___GEOXPCReply__error;
            goto LABEL_80;
          }
        }
LABEL_76:
        if (!(v61 & 1 | (v7 != 0))) {
          goto LABEL_77;
        }
        break;
    }
  }
LABEL_77:
  int v57 = 1;
  goto LABEL_78;
}

void sub_189A214C0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A216EC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A21E30(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDCategorizedPhotosCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v22 = *MEMORY[0x1E4F143B8];
  long long v16 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  id v2 = *(id *)(a1 + 32);
  uint64_t v3 = [v2 countByEnumeratingWithState:&v16 objects:v21 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v17;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v17 != v5) {
          objc_enumerationMutation(v2);
        }
        [*(id *)(*((void *)&v16 + 1) + 8 * v6++) readAll:1];
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v16 objects:v21 count:16];
    }
    while (v4);
  }

  long long v14 = 0u;
  long long v15 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  id v7 = *(id *)(a1 + 40);
  uint64_t v8 = [v7 countByEnumeratingWithState:&v12 objects:v20 count:16];
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)v13;
    do
    {
      uint64_t v11 = 0;
      do
      {
        if (*(void *)v13 != v10) {
          objc_enumerationMutation(v7);
        }
        -[GEOPDCaptionedPhoto readAll:](*(void *)(*((void *)&v12 + 1) + 8 * v11++), 1);
      }
      while (v9 != v11);
      uint64_t v9 = [v7 countByEnumeratingWithState:&v12 objects:v20 count:16];
    }
    while (v9);
  }
}

unint64_t GEOPDCategorizedPhotosReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 52))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDCategorizedPhotosReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = [v8 position];
  *(_DWORD *)(a1 + 52) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOPDCategorizedPhotosReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOPDCategorizedPhotosReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDCategorizedPhotosReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOPDCategorizedPhotosCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_189A22238(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A225E4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A22914(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A2322C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDCategorizedPhotosFilterIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  BOOL v2 = *(unsigned __int8 *)(a1 + 80) > 0x1Fu;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return v2;
}

void sub_189A235E0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A23B28(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A243D0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDCategoryCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v11 = *MEMORY[0x1E4F143B8];
  long long v6 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  id v1 = *(id *)(a1 + 32);
  uint64_t v2 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t v4 = *(void *)v7;
    do
    {
      uint64_t v5 = 0;
      do
      {
        if (*(void *)v7 != v4) {
          objc_enumerationMutation(v1);
        }
        objc_msgSend(*(id *)(*((void *)&v6 + 1) + 8 * v5++), "readAll:", 1, (void)v6);
      }
      while (v3 != v5);
      uint64_t v3 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
    }
    while (v3);
  }
}

unint64_t GEOPDCategoryReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOPDCategoryReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189A2452C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDCategoryIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  uint64_t v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_39;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        goto LABEL_39;
      }
      unint64_t v17 = v8 >> 3;
      if ((v8 >> 3) == 5) {
        break;
      }
      if (v17 != 3)
      {
        if (v17 == 1)
        {
          if ((v8 & 7) != 0) {
            goto LABEL_41;
          }
          unsigned int v18 = 0;
          while (1)
          {
            uint64_t v19 = *v2;
            uint64_t v20 = *(void *)&a1[v19];
            unint64_t v21 = v20 + 1;
            if (v20 == -1 || v21 > *(void *)&a1[*v3]) {
              break;
            }
            int v22 = *(char *)(*(void *)&a1[*v5] + v20);
            *(void *)&a1[v19] = v21;
            if (v22 < 0 && v18++ <= 8) {
              continue;
            }
            goto LABEL_38;
          }
          a1[*v4] = 1;
          goto LABEL_38;
        }
        goto LABEL_35;
      }
      if (v15 != 2 || !PBReaderPlaceMark() || !GEOLocalizedStringIsValid(a1))
      {
LABEL_41:
        PBReaderRecallMark();
        return 0;
      }
      PBReaderRecallMark();
LABEL_38:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_39;
      }
    }
    if (v15 != 2) {
      goto LABEL_41;
    }
LABEL_35:
    if ((PBReaderSkipValueWithTag() & 1) == 0) {
      goto LABEL_41;
    }
    goto LABEL_38;
  }
LABEL_39:
  BOOL v24 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v24;
}

void sub_189A249E0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDCategoryIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  BOOL v2 = (*(unsigned char *)(a1 + 56) & 0x1C) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return v2;
}

void sub_189A24E24(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A251C0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDCategoryDataReadAllFrom(uint64_t a1, void *a2, int a3)
{
  uint64_t v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    char v6 = (int *)MEMORY[0x1E4F940E8];
    unsigned int v7 = (int *)MEMORY[0x1E4F940E0];
    unint64_t v8 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v5[*MEMORY[0x1E4F940E8]] < *(void *)&v5[*MEMORY[0x1E4F940E0]])
    {
      uint64_t v9 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v5[*v8]) {
          break;
        }
        char v10 = 0;
        unsigned int v11 = 0;
        unint64_t v12 = 0;
        while (1)
        {
          uint64_t v13 = *v6;
          uint64_t v14 = *(void *)&v5[v13];
          unint64_t v15 = v14 + 1;
          if (v14 == -1 || v15 > *(void *)&v5[*v7]) {
            break;
          }
          char v16 = *(unsigned char *)(*(void *)&v5[*v9] + v14);
          *(void *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0) {
            goto LABEL_13;
          }
          v10 += 7;
          if (v11++ >= 9)
          {
            unint64_t v12 = 0;
            int v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        int v18 = v5[*v8];
        if (v5[*v8]) {
          unint64_t v12 = 0;
        }
LABEL_15:
        if (v18 || (v12 & 7) == 4) {
          break;
        }
        if ((v12 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_29;
          }
          uint64_t v20 = objc_alloc_init(GEOLocalizedString);
          if (!GEOLocalizedStringReadAllFrom((uint64_t)v20, v5, a3))
          {

            goto LABEL_29;
          }
          PBReaderRecallMark();
          -[GEOPDCategoryData addCategoryName:](a1, v20);
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v21 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            int v22 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v21;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_29;
          }
        }
      }
      while (*(void *)&v5[*v6] < *(void *)&v5[*v7]);
    }
    BOOL v23 = v5[*v8] == 0;
  }
  else
  {
LABEL_29:
    BOOL v23 = 0;
  }
  objc_sync_exit(v5);

  return v23;
}

void sub_189A25AB0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A25FA0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDCategoryInformationReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 60);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 56)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  unsigned int v12 = (vaddv_s16((int16x4_t)(*(void *)&vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int8 *)(a1 + 68)), (uint16x4_t)0xFFFDFFFFFFFCFFFELL) & 0xFF01FF01FF01FF01))+ (*(unsigned char *)(a1 + 68) & 1));
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 > 2;
        char v17 = v16 & ~(_BYTE)v11 | v9;
        unsigned __int8 v18 = v16 | v11;
        char v55 = v17;
        char v56 = v18 | v17;
        if ((v18 | v8)) {
          uint64_t v19 = 0;
        }
        else {
          uint64_t v19 = a3;
        }
        uint64_t v20 = (int *)MEMORY[0x1E4F940E8];
        id v21 = (int *)MEMORY[0x1E4F940C8];
        char v57 = (v19 == 0) | v18;
        BOOL v58 = v18;
        int v22 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v9;
LABEL_8:
        uint64_t v14 = v10;
        uint64_t v15 = v11;
LABEL_10:
        ++v7;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v21)) {
      goto LABEL_77;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      if (v24++ >= 9)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_25:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_77:
      int v53 = 1;
      goto LABEL_78;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v58;
    if ((v57 & 1) == 0)
    {
      BOOL v35 = v19;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    switch((int)v33)
    {
      case 1:
        if (!v34) {
          goto LABEL_64;
        }
        if ((*(unsigned char *)(a1 + 68) & 0x10) == 0)
        {
          uint64_t v39 = PBReaderReadString();
          uint64_t v40 = 48;
          goto LABEL_51;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_97;
        }
        char v48 = 8 * *(unsigned char *)(a1 + 68);
        goto LABEL_74;
      case 2:
        if (!v34) {
          goto LABEL_64;
        }
        if ((*(unsigned char *)(a1 + 68) & 4) == 0)
        {
          uint64_t v39 = PBReaderReadString();
          uint64_t v40 = 32;
LABEL_51:
          unint64_t v44 = *(void **)(a1 + v40);
          *(void *)(a1 + v40) = v39;
          goto LABEL_63;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_97;
        }
        char v48 = 32 * *(unsigned char *)(a1 + 68);
        goto LABEL_74;
      case 3:
        if (!v34) {
          goto LABEL_64;
        }
        if ((*(unsigned char *)(a1 + 68) & 2) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_97;
          }
          char v48 = *(unsigned char *)(a1 + 68) << 6;
          goto LABEL_74;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_97;
        }
        char v45 = objc_alloc_init(GEOLocalizedString);
        if (!GEOLocalizedStringReadAllFrom((uint64_t)v45, (void *)v3, v10 & 1)) {
          goto LABEL_96;
        }
        PBReaderRecallMark();
        uint64_t v46 = 24;
        goto LABEL_62;
      case 4:
        if (!v34) {
          goto LABEL_64;
        }
        if ((*(unsigned char *)(a1 + 68) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_97;
          }
          char v48 = 16 * *(unsigned char *)(a1 + 68);
LABEL_74:
          v7 += v48 >> 7;
LABEL_75:
          id v21 = (int *)MEMORY[0x1E4F940C8];
          goto LABEL_76;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_97;
        }
        char v45 = objc_alloc_init(GEOStyleAttributes);
        if (GEOStyleAttributesReadAllFrom((uint64_t)v45, (void *)v3))
        {
          PBReaderRecallMark();
          uint64_t v46 = 40;
LABEL_62:
          unint64_t v44 = *(void **)(a1 + v46);
          *(void *)(a1 + v46) = v45;
LABEL_63:

          --v7;
          goto LABEL_75;
        }
LABEL_96:

LABEL_97:
        int v53 = 0;
        char v54 = &OBJC_IVAR___GEOXPCReply__error;
        id v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_79:
        if (v55) {
LABEL_80:
        }
          *(unsigned char *)(a1 + v54[697]) |= 1u;
        if (v58 || (v53 & 1) == 0)
        {
          *(unsigned char *)(a1 + v54[697]) |= 0x10u;
          *(unsigned char *)(a1 + v54[697]) |= 4u;
          *(unsigned char *)(a1 + v54[697]) |= 2u;
          *(unsigned char *)(a1 + v54[697]) |= 8u;
        }
        else if (v19)
        {
          while (1)
          {
            int v50 = *v19++;
            char v49 = 16;
            switch(v50)
            {
              case 0:
                goto LABEL_90;
              case 1:
                goto LABEL_88;
              case 2:
                char v49 = 4;
                goto LABEL_88;
              case 3:
                char v49 = 2;
                goto LABEL_88;
              case 4:
                char v49 = 8;
LABEL_88:
                *(unsigned char *)(a1 + v54[697]) |= v49;
                break;
              default:
                continue;
            }
          }
        }
LABEL_90:
        if (v53) {
          unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
        }
        else {
          unint64_t v3 = 0;
        }
        if (v58)
        {
          char v51 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      default:
        if (v55 & 1) == 0 || (*(unsigned char *)(a1 + 68))
        {
LABEL_64:
          char v47 = PBReaderSkipValueWithTag();
          id v21 = (int *)MEMORY[0x1E4F940C8];
          if ((v47 & 1) == 0)
          {
            int v53 = 0;
LABEL_78:
            char v54 = &OBJC_IVAR___GEOXPCReply__error;
            goto LABEL_79;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v41 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            uint64_t v42 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v41;
          }
          int v43 = PBUnknownFieldAdd();
          id v21 = (int *)MEMORY[0x1E4F940C8];
          if (!v43)
          {
            int v53 = 0;
            char v54 = &OBJC_IVAR___GEOXPCReply__error;
            goto LABEL_80;
          }
        }
LABEL_76:
        if (!(v56 & 1 | (v7 != 0))) {
          goto LABEL_77;
        }
        continue;
    }
  }
}

void sub_189A267DC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A26948(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A26AB0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A27268(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDCategoryInformationReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 60))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDCategoryInformationReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = [v8 position];
  *(_DWORD *)(a1 + 60) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOPDCategoryInformationReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOPDCategoryInformationReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDCategoryInformationReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    [*(id *)(a1 + 24) readAll:1];
    [*(id *)(a1 + 40) readAll:1];
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_189A27420(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDCategoryInformationReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOPDCategoryInformationReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_189A27484(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDCategoryInformationIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (!a1[*v4])
    {
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 != 2) {
            goto LABEL_34;
          }
          goto LABEL_22;
        case 2u:
          if (v15 == 2) {
            goto LABEL_22;
          }
          goto LABEL_34;
        case 3u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOLocalizedStringIsValid(a1)) {
            goto LABEL_34;
          }
          goto LABEL_31;
        case 4u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOStyleAttributesIsValid(a1)) {
            goto LABEL_34;
          }
LABEL_31:
          PBReaderRecallMark();
          goto LABEL_32;
        default:
LABEL_22:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_34:
            PBReaderRecallMark();
            return 0;
          }
LABEL_32:
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_33;
          }
          break;
      }
    }
  }
LABEL_33:
  BOOL v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

void sub_189A278AC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDCategoryInformationIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  unsigned int v2 = *(unsigned __int8 *)(a1 + 68);
  if ((v2 & 0x34) != 0) {
    return 1;
  }
  if ((v2 & 2) != 0)
  {
    if (GEOLocalizedStringIsDirty(*(void *)(a1 + 24))) {
      return 1;
    }
    unsigned int v2 = *(unsigned __int8 *)(a1 + 68);
  }
  return (v2 >> 3) & 1;
}

os_unfair_lock_s *GEOPDCategoryInformationIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOPDCategoryInformationIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 16);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_189A27C40(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A27F5C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDCategoryLookupParametersReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 52);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 48)];
  uint64_t v7 = 0;
  uint64_t v8 = 0;
  char v9 = 0;
  uint64_t v10 = 0;
  int v11 = ((*(unsigned __int8 *)(a1 + 60) >> 2) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 1) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v10])
    {
      case -4:
        ++v11;
        uint64_t v12 = v7;
        goto LABEL_8;
      case -3:
        char v9 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_8;
      case 0:
        BOOL v14 = v11 != 0;
        char v15 = v14 & ~(_BYTE)v7;
        unsigned __int8 v16 = v14 | v7;
        char v59 = v15 | v8;
        char v60 = v16 | v15 | v8;
        if ((v16 | v9)) {
          BOOL v17 = 0;
        }
        else {
          BOOL v17 = a3;
        }
        char v61 = (v17 == 0) | v16;
        BOOL v62 = v16;
        unsigned __int8 v18 = (int *)MEMORY[0x1E4F940E8];
        uint64_t v19 = (int *)MEMORY[0x1E4F940C8];
        uint64_t v20 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v11;
LABEL_7:
        uint64_t v12 = v7;
        uint64_t v13 = v8;
LABEL_8:
        ++v10;
        uint64_t v7 = v12;
        uint64_t v8 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v18) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v19)) {
      goto LABEL_73;
    }
    char v21 = 0;
    unsigned int v22 = 0;
    unint64_t v23 = 0;
    while (1)
    {
      uint64_t v24 = *v18;
      uint64_t v25 = *(void *)(v3 + v24);
      unint64_t v26 = v25 + 1;
      if (v25 == -1 || v26 > *(void *)(v3 + *v6)) {
        break;
      }
      char v27 = *(unsigned char *)(*(void *)(v3 + *v20) + v25);
      *(void *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0) {
        goto LABEL_23;
      }
      v21 += 7;
      BOOL v28 = v22++ >= 9;
      if (v28)
      {
        unint64_t v23 = 0;
        int v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_25;
      }
    }
    *(unsigned char *)(v3 + *v19) = 1;
LABEL_23:
    int v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(unsigned char *)(v3 + *v19)) {
      unint64_t v23 = 0;
    }
LABEL_25:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_73:
      int v57 = 1;
      goto LABEL_74;
    }
    unint64_t v31 = v23 >> 3;
    BOOL v32 = v62;
    if ((v61 & 1) == 0)
    {
      unint64_t v33 = v17;
      do
      {
        int v35 = *v33++;
        int v34 = v35;
        BOOL v32 = v35 != 0;
        if (v35) {
          BOOL v36 = v34 == v31;
        }
        else {
          BOOL v36 = 1;
        }
      }
      while (!v36);
    }
    if (v31 == 3)
    {
      if (v9)
      {
        char v39 = 0;
        unsigned int v40 = 0;
        uint64_t v41 = 0;
        *(unsigned char *)(a1 + 60) |= 1u;
        while (1)
        {
          uint64_t v42 = *v18;
          uint64_t v43 = *(void *)(v3 + v42);
          unint64_t v44 = v43 + 1;
          if (v43 == -1 || v44 > *(void *)(v3 + *v6)) {
            break;
          }
          char v45 = *(unsigned char *)(*(void *)(v3 + *v20) + v43);
          *(void *)(v3 + v42) = v44;
          v41 |= (unint64_t)(v45 & 0x7F) << v39;
          if ((v45 & 0x80) == 0) {
            goto LABEL_63;
          }
          v39 += 7;
          BOOL v28 = v40++ >= 9;
          if (v28)
          {
            uint64_t v41 = 0;
            goto LABEL_65;
          }
        }
        *(unsigned char *)(v3 + *v19) = 1;
LABEL_63:
        if (*(unsigned char *)(v3 + *v19)) {
          uint64_t v41 = 0;
        }
LABEL_65:
        *(void *)(a1 + 24) = -(v41 & 1) ^ (v41 >> 1);
        goto LABEL_72;
      }
      goto LABEL_60;
    }
    if (v31 == 2) {
      break;
    }
    if (v31 == 1)
    {
      if (v32)
      {
        if ((*(unsigned char *)(a1 + 60) & 4) == 0)
        {
          uint64_t v37 = PBReaderReadString();
          uint64_t v38 = 32;
          goto LABEL_53;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_93;
        }
        char v51 = 32 * *(unsigned char *)(a1 + 60);
        goto LABEL_70;
      }
    }
    else if ((v59 & 1) != 0 && (*(unsigned char *)(a1 + 60) & 2) == 0)
    {
      if (!*(void *)(a1 + 16))
      {
        id v47 = objc_alloc_init(MEMORY[0x1E4F940B0]);
        char v48 = *(void **)(a1 + 16);
        *(void *)(a1 + 16) = v47;
      }
      int v49 = PBUnknownFieldAdd();
      uint64_t v19 = (int *)MEMORY[0x1E4F940C8];
      if (!v49)
      {
        int v57 = 0;
        BOOL v58 = &OBJC_IVAR___GEOXPCReply__error;
        goto LABEL_76;
      }
      goto LABEL_72;
    }
LABEL_60:
    char v50 = PBReaderSkipValueWithTag();
    uint64_t v19 = (int *)MEMORY[0x1E4F940C8];
    if ((v50 & 1) == 0)
    {
      int v57 = 0;
LABEL_74:
      BOOL v58 = &OBJC_IVAR___GEOXPCReply__error;
      goto LABEL_75;
    }
LABEL_72:
    if (!(v60 & 1 | (v10 != 0))) {
      goto LABEL_73;
    }
  }
  if (!v32) {
    goto LABEL_60;
  }
  if ((*(unsigned char *)(a1 + 60) & 8) == 0)
  {
    uint64_t v37 = PBReaderReadString();
    uint64_t v38 = 40;
LABEL_53:
    uint64_t v46 = *(void **)(a1 + v38);
    *(void *)(a1 + v38) = v37;

    --v10;
LABEL_71:
    uint64_t v19 = (int *)MEMORY[0x1E4F940C8];
    goto LABEL_72;
  }
  if (PBReaderSkipValueWithTag())
  {
    char v51 = 16 * *(unsigned char *)(a1 + 60);
LABEL_70:
    v10 += v51 >> 7;
    goto LABEL_71;
  }
LABEL_93:
  int v57 = 0;
  BOOL v58 = &OBJC_IVAR___GEOXPCReply__error;
  uint64_t v19 = (int *)MEMORY[0x1E4F940C8];
LABEL_75:
  if ((v59 & 1) == 0) {
    goto LABEL_77;
  }
LABEL_76:
  *(unsigned char *)(a1 + v58[700]) |= 2u;
LABEL_77:
  if (v62 || (v57 & 1) == 0)
  {
    *(unsigned char *)(a1 + v58[700]) |= 4u;
    *(unsigned char *)(a1 + v58[700]) |= 8u;
    goto LABEL_87;
  }
  if (v17)
  {
    while (2)
    {
      while (1)
      {
        int v53 = *v17++;
        int v52 = v53;
        if (v53 == 1) {
          break;
        }
        if (v52 == 2)
        {
          char v54 = 8;
          goto LABEL_86;
        }
        if (!v52) {
          goto LABEL_87;
        }
      }
      char v54 = 4;
LABEL_86:
      *(unsigned char *)(a1 + v58[700]) |= v54;
      continue;
    }
  }
LABEL_87:
  if (v57) {
    unint64_t v3 = *(unsigned char *)(v3 + *v19) == 0;
  }
  else {
    unint64_t v3 = 0;
  }
  if (v62)
  {
    char v55 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_189A28BFC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A28CE0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDCategoryLookupParametersReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 52))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDCategoryLookupParametersReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = [v8 position];
  *(_DWORD *)(a1 + 52) = [v8 length];
  if (a3) {
    char v9 = (int *)&GEOPDCategoryLookupParametersReadAllFrom_recursiveTag;
  }
  else {
    char v9 = (int *)&GEOPDCategoryLookupParametersReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDCategoryLookupParametersReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_189A290E4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDCategoryLookupParametersIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  unsigned int v2 = (int *)MEMORY[0x1E4F940E8];
  unint64_t v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_38;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        goto LABEL_38;
      }
      unint64_t v17 = v8 >> 3;
      if ((v8 >> 3) == 3)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_40;
        }
        unsigned int v18 = 0;
        while (1)
        {
          uint64_t v19 = *v2;
          uint64_t v20 = *(void *)&a1[v19];
          unint64_t v21 = v20 + 1;
          if (v20 == -1 || v21 > *(void *)&a1[*v3]) {
            break;
          }
          int v22 = *(char *)(*(void *)&a1[*v5] + v20);
          *(void *)&a1[v19] = v21;
          if (v22 < 0 && v18++ <= 8) {
            continue;
          }
          goto LABEL_37;
        }
        a1[*v4] = 1;
        goto LABEL_37;
      }
      if (v17 == 2) {
        break;
      }
      if (v17 == 1)
      {
        if (v15 != 2) {
          goto LABEL_40;
        }
        goto LABEL_32;
      }
      if (!PBReaderSkipValueWithTag())
      {
LABEL_40:
        BOOL v24 = 0;
        goto LABEL_39;
      }
LABEL_37:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_38;
      }
    }
    if (v15 != 2) {
      goto LABEL_40;
    }
LABEL_32:
    if ((PBReaderSkipValueWithTag() & 1) == 0) {
      goto LABEL_40;
    }
    goto LABEL_37;
  }
LABEL_38:
  BOOL v24 = a1[*v4] == 0;
LABEL_39:
  PBReaderRecallMark();
  return v24;
}

void sub_189A294CC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDCategoryLookupParametersIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  BOOL v2 = (*(unsigned char *)(a1 + 60) & 0x1C) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return v2;
}

void sub_189A296F8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A29B30(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDChargerInfoReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  uint64_t v7 = 0;
  uint64_t v8 = 0;
  char v9 = 0;
  uint64_t v10 = 0;
  int v11 = ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1)
      + (*(unsigned char *)(a1 + 52) & 1)
      + ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v10])
    {
      case -4:
        ++v11;
        uint64_t v12 = v7;
        goto LABEL_8;
      case -3:
        char v9 = 1;
        goto LABEL_7;
      case -2:
      case -1:
        goto LABEL_8;
      case 0:
        BOOL v14 = v11 != 0;
        int v15 = v14 | v7;
        int v16 = v14 & ~v7 | v8;
        if (((v14 | v7) | v9)) {
          unint64_t v17 = 0;
        }
        else {
          unint64_t v17 = a3;
        }
        BOOL v18 = v10 != 0;
        uint64_t v19 = (int *)MEMORY[0x1E4F940E8];
        int v20 = 1;
        unint64_t v21 = (int *)MEMORY[0x1E4F940C8];
        if (*(void *)(v3 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(v3 + *v6)) {
          goto LABEL_58;
        }
        char v48 = v16;
        int v49 = v15 | v18 | v16;
        int v22 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v11;
LABEL_7:
        uint64_t v12 = v7;
        uint64_t v13 = v8;
LABEL_8:
        ++v10;
        uint64_t v7 = v12;
        uint64_t v8 = v13;
        continue;
    }
    break;
  }
  do
  {
    if (*(unsigned char *)(v3 + *v21)) {
      break;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v19;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_23;
      }
      v23 += 7;
      if (v24++ >= 9)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_25;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_23:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_25:
    if (v31 || (v25 & 7) == 4) {
      break;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v15;
    if (!((v17 == 0) | v15 & 1))
    {
      int v35 = v17;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    if (v33 == 2)
    {
      if (!v34 || (*(unsigned char *)(a1 + 52) & 4) != 0)
      {
LABEL_54:
        int v20 = PBReaderSkipValueWithTag();
        unint64_t v21 = (int *)MEMORY[0x1E4F940C8];
        if ((v20 & v49 & 1) == 0) {
          goto LABEL_57;
        }
        continue;
      }
      char v39 = PBReaderReadString();
      if (v39) {
        -[GEOPDChargerInfo _addNoFlagsTotalChargerId:](a1, v39);
      }
      goto LABEL_46;
    }
    if (v33 == 1)
    {
      if (!v34 || (*(unsigned char *)(a1 + 52) & 2) != 0) {
        goto LABEL_54;
      }
      char v39 = PBReaderReadString();
      if (v39) {
        -[GEOPDChargerInfo _addNoFlagsAvailableChargerId:](a1, v39);
      }
LABEL_46:

      unint64_t v21 = (int *)MEMORY[0x1E4F940C8];
      goto LABEL_52;
    }
    if (v48 & 1) == 0 || (*(unsigned char *)(a1 + 52)) {
      goto LABEL_54;
    }
    if (!*(void *)(a1 + 16))
    {
      id v40 = objc_alloc_init(MEMORY[0x1E4F940B0]);
      uint64_t v41 = *(void **)(a1 + 16);
      *(void *)(a1 + 16) = v40;
    }
    char v42 = PBUnknownFieldAdd();
    unint64_t v21 = (int *)MEMORY[0x1E4F940C8];
    if ((v42 & 1) == 0)
    {
      int v20 = 0;
      goto LABEL_59;
    }
LABEL_52:
    if ((v49 & 1) == 0) {
      break;
    }
  }
  while (*(void *)(v3 + *v19) < *(void *)(v3 + *v6));
  int v20 = 1;
LABEL_57:
  LOBYTE(v16) = v48;
LABEL_58:
  if (v16) {
LABEL_59:
  }
    *(unsigned char *)(a1 + 52) |= 1u;
  if (v15 & 1 | ((v20 & 1) == 0))
  {
    *(unsigned char *)(a1 + 52) |= 2u;
    *(unsigned char *)(a1 + 52) |= 4u;
    goto LABEL_70;
  }
  if (v17)
  {
    while (2)
    {
      while (1)
      {
        int v44 = *v17++;
        int v43 = v44;
        if (v44 == 1) {
          break;
        }
        if (v43 == 2)
        {
          char v45 = 4;
          goto LABEL_69;
        }
        if (!v43) {
          goto LABEL_70;
        }
      }
      char v45 = 2;
LABEL_69:
      *(unsigned char *)(a1 + 52) |= v45;
      continue;
    }
  }
LABEL_70:
  if (v20)
  {
    unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
    if ((v15 & 1) == 0) {
      return v3;
    }
LABEL_74:
    uint64_t v46 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  else
  {
    unint64_t v3 = 0;
    if (v15) {
      goto LABEL_74;
    }
  }
  return v3;
}

void sub_189A2A200(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A2A6C4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDChargerInfoReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDChargerInfoReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    char v9 = (int *)&GEOPDChargerInfoReadAllFrom_recursiveTag;
  }
  else {
    char v9 = (int *)&GEOPDChargerInfoReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDChargerInfoReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_189A2A92C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A2ABEC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A2AEC4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDChildActionReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 68);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 64)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  unsigned int v12 = (vaddv_s16((int16x4_t)(*(void *)&vshl_u16((uint16x4_t)(*(void *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 80)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFBFFFAFFFEFFFCLL) & 0xFF01FF01FF01FF01))+ ((*(unsigned char *)(a1 + 80) & 8) != 0)+ ((*(unsigned char *)(a1 + 80) & 2) != 0));
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 > 3;
        char v17 = v16 & ~(_BYTE)v11 | v9;
        unsigned __int8 v18 = v16 | v11;
        char v60 = v17;
        char v61 = v18 | v17;
        if ((v18 | v8)) {
          uint64_t v19 = 0;
        }
        else {
          uint64_t v19 = a3;
        }
        char v62 = (v19 == 0) | v18;
        BOOL v63 = v18;
        int v20 = (int *)MEMORY[0x1E4F940E8];
        unint64_t v21 = (int *)MEMORY[0x1E4F940C8];
        int v22 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v9;
LABEL_8:
        uint64_t v14 = v10;
        uint64_t v15 = v11;
LABEL_10:
        ++v7;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v21)) {
      goto LABEL_98;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      BOOL v30 = v24++ >= 9;
      if (v30)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_25:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_98:
      int v58 = 1;
      goto LABEL_99;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v63;
    if ((v62 & 1) == 0)
    {
      int v35 = v19;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    switch((int)v33)
    {
      case 1:
        if ((v8 & 1) == 0) {
          goto LABEL_79;
        }
        char v39 = 0;
        unsigned int v40 = 0;
        uint64_t v41 = 0;
        *(unsigned char *)(a1 + 80) |= 1u;
        while (1)
        {
          uint64_t v42 = *v20;
          uint64_t v43 = *(void *)(v3 + v42);
          unint64_t v44 = v43 + 1;
          if (v43 == -1 || v44 > *(void *)(v3 + *v6)) {
            break;
          }
          char v45 = *(unsigned char *)(*(void *)(v3 + *v22) + v43);
          *(void *)(v3 + v42) = v44;
          v41 |= (unint64_t)(v45 & 0x7F) << v39;
          if ((v45 & 0x80) == 0) {
            goto LABEL_82;
          }
          v39 += 7;
          BOOL v30 = v40++ >= 9;
          if (v30)
          {
            LODWORD(v41) = 0;
            goto LABEL_84;
          }
        }
        *(unsigned char *)(v3 + *v21) = 1;
LABEL_82:
        if (*(unsigned char *)(v3 + *v21)) {
          LODWORD(v41) = 0;
        }
LABEL_84:
        *(_DWORD *)(a1 + 76) = v41;
        goto LABEL_97;
      case 2:
        if (!v34) {
          goto LABEL_79;
        }
        if ((*(unsigned char *)(a1 + 80) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_118;
          }
          char v53 = 32 * *(unsigned char *)(a1 + 80);
          goto LABEL_95;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_118;
        }
        int v49 = objc_alloc_init(GEOPDChildActionDirections);
        if (!GEOPDChildActionDirectionsReadAllFrom((uint64_t)v49, (void *)v3)) {
          goto LABEL_117;
        }
        PBReaderRecallMark();
        uint64_t v50 = 24;
        goto LABEL_78;
      case 3:
        if (!v34) {
          goto LABEL_79;
        }
        if ((*(unsigned char *)(a1 + 80) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_118;
          }
          char v53 = 8 * *(unsigned char *)(a1 + 80);
          goto LABEL_95;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_118;
        }
        int v49 = objc_alloc_init(GEOPDChildActionFlyover);
        if (!GEOPDChildActionFlyoverReadAllFrom((uint64_t)v49, (void *)v3)) {
          goto LABEL_117;
        }
        PBReaderRecallMark();
        uint64_t v50 = 40;
        goto LABEL_78;
      case 4:
        if (!v34) {
          goto LABEL_79;
        }
        if ((*(unsigned char *)(a1 + 80) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_118;
          }
          char v53 = 2 * *(unsigned char *)(a1 + 80);
          goto LABEL_95;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_118;
        }
        int v49 = objc_alloc_init(GEOPDChildActionSearch);
        if (!GEOPDChildActionSearchReadAllFrom((uint64_t)v49, (void *)v3, v10 & 1)) {
          goto LABEL_117;
        }
        PBReaderRecallMark();
        uint64_t v50 = 56;
        goto LABEL_78;
      case 5:
        if (!v34) {
          goto LABEL_79;
        }
        if ((*(unsigned char *)(a1 + 80) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_118;
          }
          char v53 = 4 * *(unsigned char *)(a1 + 80);
          goto LABEL_95;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_118;
        }
        int v49 = objc_alloc_init(GEOPDChildActionGuides);
        if (!GEOPDChildActionGuidesReadAllFrom((uint64_t)v49, (void *)v3, v10 & 1)) {
          goto LABEL_117;
        }
        PBReaderRecallMark();
        uint64_t v50 = 48;
        goto LABEL_78;
      case 6:
        if (!v34) {
          goto LABEL_79;
        }
        if ((*(unsigned char *)(a1 + 80) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_118;
          }
          char v53 = 16 * *(unsigned char *)(a1 + 80);
LABEL_95:
          v7 += v53 >> 7;
LABEL_96:
          unint64_t v21 = (int *)MEMORY[0x1E4F940C8];
          int v22 = (int *)MEMORY[0x1E4F940B8];
          goto LABEL_97;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_118;
        }
        int v49 = objc_alloc_init(GEOPDChildActionDownloadOfflineMap);
        if (GEOPDChildActionDownloadOfflineMapReadAllFrom((uint64_t)v49, (void *)v3))
        {
          PBReaderRecallMark();
          uint64_t v50 = 32;
LABEL_78:
          char v51 = *(void **)(a1 + v50);
          *(void *)(a1 + v50) = v49;

          --v7;
          goto LABEL_96;
        }
LABEL_117:

LABEL_118:
        int v58 = 0;
        char v59 = &OBJC_IVAR___GEOXPCReply__error;
        unint64_t v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_100:
        if (v60) {
LABEL_101:
        }
          *(unsigned char *)(a1 + v59[709]) |= 2u;
        if (v63 || (v58 & 1) == 0)
        {
          *(unsigned char *)(a1 + v59[709]) |= 4u;
          *(unsigned char *)(a1 + v59[709]) |= 0x10u;
          *(unsigned char *)(a1 + v59[709]) |= 0x40u;
          *(unsigned char *)(a1 + v59[709]) |= 0x20u;
          *(unsigned char *)(a1 + v59[709]) |= 8u;
        }
        else if (v19)
        {
          while (1)
          {
            int v54 = *v19++;
            char v55 = 4;
            switch(v54)
            {
              case 0:
                goto LABEL_111;
              case 2:
                goto LABEL_110;
              case 3:
                char v55 = 16;
                goto LABEL_110;
              case 4:
                char v55 = 64;
                goto LABEL_110;
              case 5:
                char v55 = 32;
                goto LABEL_110;
              case 6:
                char v55 = 8;
LABEL_110:
                *(unsigned char *)(a1 + v59[709]) |= v55;
                break;
              default:
                continue;
            }
          }
        }
LABEL_111:
        if (v58) {
          unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
        }
        else {
          unint64_t v3 = 0;
        }
        if (v63)
        {
          char v56 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      default:
        if ((v60 & 1) == 0 || (*(unsigned char *)(a1 + 80) & 2) != 0)
        {
LABEL_79:
          char v52 = PBReaderSkipValueWithTag();
          int v22 = (int *)MEMORY[0x1E4F940B8];
          unint64_t v21 = (int *)MEMORY[0x1E4F940C8];
          if ((v52 & 1) == 0)
          {
            int v58 = 0;
LABEL_99:
            char v59 = &OBJC_IVAR___GEOXPCReply__error;
            goto LABEL_100;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v46 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            id v47 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v46;
          }
          int v48 = PBUnknownFieldAdd();
          unint64_t v21 = (int *)MEMORY[0x1E4F940C8];
          int v22 = (int *)MEMORY[0x1E4F940B8];
          if (!v48)
          {
            int v58 = 0;
            char v59 = &OBJC_IVAR___GEOXPCReply__error;
            goto LABEL_101;
          }
        }
LABEL_97:
        if (!(v61 & 1 | (v7 != 0))) {
          goto LABEL_98;
        }
        continue;
    }
  }
}

void sub_189A2BB0C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A2BC1C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A2C1F4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A2C2DC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDChildActionReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 68))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDChildActionReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 72));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 64) = [v8 position];
  *(_DWORD *)(a1 + 68) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOPDChildActionReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOPDChildActionReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDChildActionReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
  return Specified;
}

void sub_189A2C544(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A2C76C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A2C978(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDChildActionDirectionsReadAllFrom(uint64_t a1, void *a2)
{
  unint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      int v8 = v3[*v6];
      if (*(void *)&v3[*v4] >= *(void *)&v3[*v5]) {
        break;
      }
      if (v3[*v6])
      {
        int v8 = 1;
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      uint64_t v11 = 0;
      while (1)
      {
        uint64_t v12 = *v4;
        uint64_t v13 = *(void *)&v3[v12];
        unint64_t v14 = v13 + 1;
        if (v13 == -1 || v14 > *(void *)&v3[*v5]) {
          break;
        }
        char v15 = *(unsigned char *)(*(void *)&v3[*v7] + v13);
        *(void *)&v3[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0) {
          goto LABEL_13;
        }
        v9 += 7;
        if (v10++ >= 9)
        {
          char v17 = 0;
          int v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      int v8 = v3[*v6];
      if (v3[*v6]) {
        char v17 = 0;
      }
      else {
        char v17 = v11;
      }
LABEL_16:
      if (v8) {
        BOOL v18 = 1;
      }
      else {
        BOOL v18 = (v17 & 7) == 4;
      }
      if (v18) {
        break;
      }
      if (!*(void *)(a1 + 8))
      {
        id v19 = objc_alloc_init(MEMORY[0x1E4F940B0]);
        int v20 = *(void **)(a1 + 8);
        *(void *)(a1 + 8) = v19;
      }
      if ((PBUnknownFieldAdd() & 1) == 0) {
        goto LABEL_23;
      }
    }
    BOOL v21 = v8 == 0;
  }
  else
  {
LABEL_23:
    BOOL v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_189A2D0B4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDChildActionDownloadOfflineMapReadAllFrom(uint64_t a1, void *a2)
{
  unint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      int v8 = v3[*v6];
      if (*(void *)&v3[*v4] >= *(void *)&v3[*v5]) {
        break;
      }
      if (v3[*v6])
      {
        int v8 = 1;
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      uint64_t v11 = 0;
      while (1)
      {
        uint64_t v12 = *v4;
        uint64_t v13 = *(void *)&v3[v12];
        unint64_t v14 = v13 + 1;
        if (v13 == -1 || v14 > *(void *)&v3[*v5]) {
          break;
        }
        char v15 = *(unsigned char *)(*(void *)&v3[*v7] + v13);
        *(void *)&v3[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0) {
          goto LABEL_13;
        }
        v9 += 7;
        if (v10++ >= 9)
        {
          char v17 = 0;
          int v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      int v8 = v3[*v6];
      if (v3[*v6]) {
        char v17 = 0;
      }
      else {
        char v17 = v11;
      }
LABEL_16:
      if (v8) {
        BOOL v18 = 1;
      }
      else {
        BOOL v18 = (v17 & 7) == 4;
      }
      if (v18) {
        break;
      }
      if (!*(void *)(a1 + 8))
      {
        id v19 = objc_alloc_init(MEMORY[0x1E4F940B0]);
        int v20 = *(void **)(a1 + 8);
        *(void *)(a1 + 8) = v19;
      }
      if ((PBUnknownFieldAdd() & 1) == 0) {
        goto LABEL_23;
      }
    }
    BOOL v21 = v8 == 0;
  }
  else
  {
LABEL_23:
    BOOL v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_189A2D5F4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDChildActionFlyoverReadAllFrom(uint64_t a1, void *a2)
{
  unint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      int v8 = v3[*v6];
      if (*(void *)&v3[*v4] >= *(void *)&v3[*v5]) {
        break;
      }
      if (v3[*v6])
      {
        int v8 = 1;
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      uint64_t v11 = 0;
      while (1)
      {
        uint64_t v12 = *v4;
        uint64_t v13 = *(void *)&v3[v12];
        unint64_t v14 = v13 + 1;
        if (v13 == -1 || v14 > *(void *)&v3[*v5]) {
          break;
        }
        char v15 = *(unsigned char *)(*(void *)&v3[*v7] + v13);
        *(void *)&v3[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0) {
          goto LABEL_13;
        }
        v9 += 7;
        if (v10++ >= 9)
        {
          char v17 = 0;
          int v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      int v8 = v3[*v6];
      if (v3[*v6]) {
        char v17 = 0;
      }
      else {
        char v17 = v11;
      }
LABEL_16:
      if (v8) {
        BOOL v18 = 1;
      }
      else {
        BOOL v18 = (v17 & 7) == 4;
      }
      if (v18) {
        break;
      }
      if (!*(void *)(a1 + 8))
      {
        id v19 = objc_alloc_init(MEMORY[0x1E4F940B0]);
        int v20 = *(void **)(a1 + 8);
        *(void *)(a1 + 8) = v19;
      }
      if ((PBUnknownFieldAdd() & 1) == 0) {
        goto LABEL_23;
      }
    }
    BOOL v21 = v8 == 0;
  }
  else
  {
LABEL_23:
    BOOL v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_189A2DB34(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDChildActionGuidesReadAllFrom(uint64_t a1, void *a2, int a3)
{
  uint64_t v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    char v6 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v7 = (int *)MEMORY[0x1E4F940E0];
    int v8 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v5[*MEMORY[0x1E4F940E8]] < *(void *)&v5[*MEMORY[0x1E4F940E0]])
    {
      char v9 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v5[*v8]) {
          break;
        }
        char v10 = 0;
        unsigned int v11 = 0;
        unint64_t v12 = 0;
        while (1)
        {
          uint64_t v13 = *v6;
          uint64_t v14 = *(void *)&v5[v13];
          unint64_t v15 = v14 + 1;
          if (v14 == -1 || v15 > *(void *)&v5[*v7]) {
            break;
          }
          char v16 = *(unsigned char *)(*(void *)&v5[*v9] + v14);
          *(void *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0) {
            goto LABEL_13;
          }
          v10 += 7;
          if (v11++ >= 9)
          {
            unint64_t v12 = 0;
            int v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        int v18 = v5[*v8];
        if (v5[*v8]) {
          unint64_t v12 = 0;
        }
LABEL_15:
        if (v18 || (v12 & 7) == 4) {
          break;
        }
        if ((v12 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_29;
          }
          int v20 = objc_alloc_init(GEOPDGuidesLocationEntry);
          if (!GEOPDGuidesLocationEntryReadAllFrom((uint64_t)v20, v5, a3))
          {

            goto LABEL_29;
          }
          PBReaderRecallMark();
          BOOL v21 = *(void **)(a1 + 16);
          *(void *)(a1 + 16) = v20;
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v22 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            char v23 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v22;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_29;
          }
        }
      }
      while (*(void *)&v5[*v6] < *(void *)&v5[*v7]);
    }
    BOOL v24 = v5[*v8] == 0;
  }
  else
  {
LABEL_29:
    BOOL v24 = 0;
  }
  objc_sync_exit(v5);

  return v24;
}

void sub_189A2E1A4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDChildActionSearchReadAllFrom(uint64_t a1, void *a2, int a3)
{
  uint64_t v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    char v6 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v7 = (int *)MEMORY[0x1E4F940E0];
    int v8 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v5[*MEMORY[0x1E4F940E8]] < *(void *)&v5[*MEMORY[0x1E4F940E0]])
    {
      char v9 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v5[*v8]) {
          break;
        }
        char v10 = 0;
        unsigned int v11 = 0;
        unint64_t v12 = 0;
        while (1)
        {
          uint64_t v13 = *v6;
          uint64_t v14 = *(void *)&v5[v13];
          unint64_t v15 = v14 + 1;
          if (v14 == -1 || v15 > *(void *)&v5[*v7]) {
            break;
          }
          char v16 = *(unsigned char *)(*(void *)&v5[*v9] + v14);
          *(void *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0) {
            goto LABEL_13;
          }
          v10 += 7;
          if (v11++ >= 9)
          {
            unint64_t v12 = 0;
            int v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        int v18 = v5[*v8];
        if (v5[*v8]) {
          unint64_t v12 = 0;
        }
LABEL_15:
        if (v18 || (v12 & 7) == 4) {
          break;
        }
        if ((v12 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_29;
          }
          int v20 = objc_alloc_init(GEOPDRelatedSearchSuggestion);
          if (!GEOPDRelatedSearchSuggestionReadAllFrom((uint64_t)v20, v5, a3))
          {

            goto LABEL_29;
          }
          PBReaderRecallMark();
          BOOL v21 = *(void **)(a1 + 16);
          *(void *)(a1 + 16) = v20;
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v22 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            char v23 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v22;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_29;
          }
        }
      }
      while (*(void *)&v5[*v6] < *(void *)&v5[*v7]);
    }
    BOOL v24 = v5[*v8] == 0;
  }
  else
  {
LABEL_29:
    BOOL v24 = 0;
  }
  objc_sync_exit(v5);

  return v24;
}

void sub_189A2EE58(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A2F234(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDChildItemReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  char v7 = 0;
  uint64_t v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  int v12 = ((*(unsigned __int8 *)(a1 + 56) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 56) >> 2) & 1)
      + ((*(unsigned __int8 *)(a1 + 56) >> 1) & 1);
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v8])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v7 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 != 0;
        char v17 = v16 & ~(_BYTE)v11 | v9;
        unsigned __int8 v18 = v16 | v11;
        char v62 = v17;
        char v63 = v18 | v17;
        char v61 = v7;
        if ((v18 | v7)) {
          id v19 = 0;
        }
        else {
          id v19 = a3;
        }
        char v64 = (v19 == 0) | v18;
        BOOL v65 = v18;
        int v20 = (int *)MEMORY[0x1E4F940E8];
        BOOL v21 = (int *)MEMORY[0x1E4F940C8];
        id v22 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v9;
LABEL_8:
        uint64_t v14 = v10;
        uint64_t v15 = v11;
LABEL_10:
        ++v8;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v21)) {
      goto LABEL_79;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      BOOL v30 = v24++ >= 9;
      if (v30)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_25:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_79:
      int v59 = 1;
      goto LABEL_80;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v65;
    if ((v64 & 1) == 0)
    {
      int v35 = v19;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    if (v33 == 3)
    {
      if (!v34) {
        goto LABEL_66;
      }
      if ((*(unsigned char *)(a1 + 56) & 4) == 0)
      {
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_100;
        }
        id v46 = objc_alloc_init(GEOPDChildAction);
        if (!GEOPDChildActionReadAllFrom((uint64_t)v46, (void *)v3, v10 & 1)) {
          goto LABEL_99;
        }
        PBReaderRecallMark();
        uint64_t v47 = 24;
LABEL_59:
        int v48 = *(void **)(a1 + v47);
        *(void *)(a1 + v47) = v46;

        --v8;
LABEL_77:
        BOOL v21 = (int *)MEMORY[0x1E4F940C8];
        goto LABEL_78;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        goto LABEL_100;
      }
      char v53 = 32 * *(unsigned char *)(a1 + 56);
LABEL_76:
      v8 += v53 >> 7;
      goto LABEL_77;
    }
    if (v33 == 2) {
      break;
    }
    if (v33 == 1)
    {
      if (v61)
      {
        char v39 = 0;
        unsigned int v40 = 0;
        uint64_t v41 = 0;
        *(unsigned char *)(a1 + 56) |= 1u;
        while (1)
        {
          uint64_t v42 = *v20;
          uint64_t v43 = *(void *)(v3 + v42);
          unint64_t v44 = v43 + 1;
          if (v43 == -1 || v44 > *(void *)(v3 + *v6)) {
            break;
          }
          char v45 = *(unsigned char *)(*(void *)(v3 + *v22) + v43);
          *(void *)(v3 + v42) = v44;
          v41 |= (unint64_t)(v45 & 0x7F) << v39;
          if ((v45 & 0x80) == 0) {
            goto LABEL_69;
          }
          v39 += 7;
          BOOL v30 = v40++ >= 9;
          if (v30)
          {
            LODWORD(v41) = 0;
            goto LABEL_71;
          }
        }
        *(unsigned char *)(v3 + *v21) = 1;
LABEL_69:
        if (*(unsigned char *)(v3 + *v21)) {
          LODWORD(v41) = 0;
        }
LABEL_71:
        *(_DWORD *)(a1 + 52) = v41;
        goto LABEL_78;
      }
    }
    else if ((v62 & 1) != 0 && (*(unsigned char *)(a1 + 56) & 2) == 0)
    {
      if (!*(void *)(a1 + 16))
      {
        id v49 = objc_alloc_init(MEMORY[0x1E4F940B0]);
        uint64_t v50 = *(void **)(a1 + 16);
        *(void *)(a1 + 16) = v49;
      }
      int v51 = PBUnknownFieldAdd();
      BOOL v21 = (int *)MEMORY[0x1E4F940C8];
      if (!v51)
      {
        int v59 = 0;
        char v60 = &OBJC_IVAR___GEOXPCReply__error;
        goto LABEL_82;
      }
      goto LABEL_78;
    }
LABEL_66:
    char v52 = PBReaderSkipValueWithTag();
    BOOL v21 = (int *)MEMORY[0x1E4F940C8];
    if ((v52 & 1) == 0)
    {
      int v59 = 0;
LABEL_80:
      char v60 = &OBJC_IVAR___GEOXPCReply__error;
      goto LABEL_81;
    }
LABEL_78:
    if (!(v63 & 1 | (v8 != 0))) {
      goto LABEL_79;
    }
  }
  if (!v34) {
    goto LABEL_66;
  }
  if ((*(unsigned char *)(a1 + 56) & 8) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0) {
      goto LABEL_100;
    }
    char v53 = 16 * *(unsigned char *)(a1 + 56);
    goto LABEL_76;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_100;
  }
  id v46 = objc_alloc_init(GEOPDChildPlace);
  if (GEOPDChildPlaceReadAllFrom((uint64_t)v46, (void *)v3, v10 & 1))
  {
    PBReaderRecallMark();
    uint64_t v47 = 32;
    goto LABEL_59;
  }
LABEL_99:

LABEL_100:
  int v59 = 0;
  char v60 = &OBJC_IVAR___GEOXPCReply__error;
  BOOL v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_81:
  if ((v62 & 1) == 0) {
    goto LABEL_83;
  }
LABEL_82:
  *(unsigned char *)(a1 + v60[717]) |= 2u;
LABEL_83:
  if (v65 || (v59 & 1) == 0)
  {
    *(unsigned char *)(a1 + v60[717]) |= 8u;
    *(unsigned char *)(a1 + v60[717]) |= 4u;
    goto LABEL_93;
  }
  if (v19)
  {
    while (2)
    {
      while (1)
      {
        int v55 = *v19++;
        int v54 = v55;
        if (v55 == 2) {
          break;
        }
        if (v54 == 3)
        {
          char v56 = 4;
          goto LABEL_92;
        }
        if (!v54) {
          goto LABEL_93;
        }
      }
      char v56 = 8;
LABEL_92:
      *(unsigned char *)(a1 + v60[717]) |= v56;
      continue;
    }
  }
LABEL_93:
  if (v59) {
    unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
  }
  else {
    unint64_t v3 = 0;
  }
  if (v65)
  {
    int v57 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_189A2F988(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A2FE00(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDChildItemReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDChildItemReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOPDChildItemReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOPDChildItemReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDChildItemReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    -[GEOPDChildPlace readAll:](*(void *)(a1 + 32), 1);
    -[GEOPDChildAction readAll:](*(void *)(a1 + 24), 1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_189A30094(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDChildPlaceIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  unint64_t v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_27;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        goto LABEL_27;
      }
      if ((v8 >> 3) == 2) {
        break;
      }
      if ((v8 >> 3) != 1) {
        goto LABEL_25;
      }
      if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDMapsIdentifierIsValid(a1))
      {
LABEL_28:
        PBReaderRecallMark();
        return 0;
      }
      PBReaderRecallMark();
LABEL_26:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_27;
      }
    }
    if (v15 != 2) {
      goto LABEL_28;
    }
LABEL_25:
    if ((PBReaderSkipValueWithTag() & 1) == 0) {
      goto LABEL_28;
    }
    goto LABEL_26;
  }
LABEL_27:
  BOOL v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

void sub_189A30434(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDChildItemIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  char v2 = *(unsigned char *)(a1 + 56);
  if ((v2 & 0x10) != 0) {
    return 1;
  }
  if ((*(unsigned char *)(a1 + 56) & 8) != 0)
  {
    uint64_t v3 = *(void *)(a1 + 32);
    if (v3)
    {
      os_unfair_lock_lock_with_options();
      os_unfair_lock_assert_owner((const os_unfair_lock *)(v3 + 48));
      int v4 = *(unsigned char *)(v3 + 52) & 0xE;
      os_unfair_lock_unlock((os_unfair_lock_t)(v3 + 48));
      if (v4) {
        return 1;
      }
      char v2 = *(unsigned char *)(a1 + 56);
    }
  }
  if ((v2 & 4) == 0) {
    return 0;
  }
  uint64_t v6 = *(void *)(a1 + 24);
  if (!v6) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(v6 + 72));
  BOOL v5 = *(unsigned __int8 *)(v6 + 80) > 3u;
  os_unfair_lock_unlock((os_unfair_lock_t)(v6 + 72));
  return v5;
}

void sub_189A306FC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A30B1C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDChildPlaceReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  uint64_t v7 = 0;
  uint64_t v8 = 0;
  char v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  int v12 = ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1)
      + (*(unsigned char *)(a1 + 52) & 1)
      + ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1);
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v10])
    {
      case -4:
        ++v12;
        uint64_t v13 = v7;
        goto LABEL_8;
      case -3:
        char v9 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v13 = v7;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 != 0;
        char v17 = v16 & ~(_BYTE)v11 | v8;
        unsigned __int8 v18 = v16 | v11;
        char v54 = v17;
        char v55 = v18 | v17;
        if ((v18 | v9)) {
          id v19 = 0;
        }
        else {
          id v19 = a3;
        }
        char v56 = (v19 == 0) | v18;
        BOOL v57 = v18;
        int v20 = (int *)MEMORY[0x1E4F940E8];
        BOOL v21 = (int *)MEMORY[0x1E4F940C8];
        id v22 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v7;
        uint64_t v14 = v8;
LABEL_8:
        uint64_t v15 = v11;
LABEL_10:
        ++v10;
        uint64_t v7 = v13;
        uint64_t v8 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v21)) {
      goto LABEL_64;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      if (v24++ >= 9)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_25:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_64:
      int v52 = 1;
      goto LABEL_65;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v57;
    if ((v56 & 1) == 0)
    {
      int v35 = v19;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    if (v33 != 2) {
      break;
    }
    if (v34)
    {
      if ((*(unsigned char *)(a1 + 52) & 4) == 0)
      {
        uint64_t v41 = PBReaderReadString();
        unsigned int v40 = *(void **)(a1 + 32);
        *(void *)(a1 + 32) = v41;
LABEL_48:

        --v10;
LABEL_62:
        BOOL v21 = (int *)MEMORY[0x1E4F940C8];
        goto LABEL_63;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        goto LABEL_85;
      }
      char v46 = 32 * *(unsigned char *)(a1 + 52);
LABEL_61:
      v10 += v46 >> 7;
      goto LABEL_62;
    }
LABEL_55:
    char v45 = PBReaderSkipValueWithTag();
    BOOL v21 = (int *)MEMORY[0x1E4F940C8];
    if ((v45 & 1) == 0)
    {
      int v52 = 0;
LABEL_65:
      char v53 = &OBJC_IVAR___GEOXPCReply__error;
      goto LABEL_66;
    }
LABEL_63:
    if (!(v55 & 1 | (v10 != 0))) {
      goto LABEL_64;
    }
  }
  if (v33 != 1)
  {
    if ((v54 & 1) != 0 && (*(unsigned char *)(a1 + 52) & 1) == 0)
    {
      if (!*(void *)(a1 + 16))
      {
        id v42 = objc_alloc_init(MEMORY[0x1E4F940B0]);
        uint64_t v43 = *(void **)(a1 + 16);
        *(void *)(a1 + 16) = v42;
      }
      int v44 = PBUnknownFieldAdd();
      BOOL v21 = (int *)MEMORY[0x1E4F940C8];
      if (!v44)
      {
        int v52 = 0;
        char v53 = &OBJC_IVAR___GEOXPCReply__error;
        goto LABEL_67;
      }
      goto LABEL_63;
    }
    goto LABEL_55;
  }
  if (!v34) {
    goto LABEL_55;
  }
  if ((*(unsigned char *)(a1 + 52) & 2) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0) {
      goto LABEL_85;
    }
    char v46 = *(unsigned char *)(a1 + 52) << 6;
    goto LABEL_61;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_85;
  }
  char v39 = objc_alloc_init(GEOPDMapsIdentifier);
  if (GEOPDMapsIdentifierReadAllFrom((uint64_t)v39, (void *)v3))
  {
    PBReaderRecallMark();
    unsigned int v40 = *(void **)(a1 + 24);
    *(void *)(a1 + 24) = v39;
    goto LABEL_48;
  }

LABEL_85:
  int v52 = 0;
  char v53 = &OBJC_IVAR___GEOXPCReply__error;
  BOOL v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_66:
  if ((v54 & 1) == 0) {
    goto LABEL_68;
  }
LABEL_67:
  *(unsigned char *)(a1 + v53[723]) |= 1u;
LABEL_68:
  if (v57 || (v52 & 1) == 0)
  {
    *(unsigned char *)(a1 + v53[723]) |= 2u;
    *(unsigned char *)(a1 + v53[723]) |= 4u;
    goto LABEL_78;
  }
  if (v19)
  {
    while (2)
    {
      while (1)
      {
        int v48 = *v19++;
        int v47 = v48;
        if (v48 == 1) {
          break;
        }
        if (v47 == 2)
        {
          char v49 = 4;
          goto LABEL_77;
        }
        if (!v47) {
          goto LABEL_78;
        }
      }
      char v49 = 2;
LABEL_77:
      *(unsigned char *)(a1 + v53[723]) |= v49;
      continue;
    }
  }
LABEL_78:
  if (v52) {
    unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
  }
  else {
    unint64_t v3 = 0;
  }
  if (v57)
  {
    uint64_t v50 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_189A31180(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A31538(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDChildPlaceReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDChildPlaceReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    char v9 = (int *)&GEOPDChildPlaceReadAllFrom_recursiveTag;
  }
  else {
    char v9 = (int *)&GEOPDChildPlaceReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDChildPlaceReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    [*(id *)(a1 + 24) readAll:1];
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_189A3194C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A31AEC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A31C60(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDCollectionIdsReadAllFrom(uint64_t a1, void *a2)
{
  unint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    int v4 = (int *)MEMORY[0x1E4F940E8];
    BOOL v5 = (int *)MEMORY[0x1E4F940E0];
    uint64_t v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_29;
          }
          unsigned __int8 v18 = objc_alloc_init(GEOPDMapsIdentifier);
          if (!GEOPDMapsIdentifierReadAllFrom((uint64_t)v18, v3))
          {

            goto LABEL_29;
          }
          PBReaderRecallMark();
          -[GEOPDCollectionIds addCollectionId:](a1, v18);
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v19 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            int v20 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v19;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_29;
          }
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v21 = v3[*v6] == 0;
  }
  else
  {
LABEL_29:
    BOOL v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_189A32508(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDCollectionIdsFilterReadAllFrom(uint64_t a1, void *a2)
{
  unint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    int v4 = (int *)MEMORY[0x1E4F940E8];
    BOOL v5 = (int *)MEMORY[0x1E4F940E0];
    uint64_t v6 = (int *)MEMORY[0x1E4F940C8];
    uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      int v8 = v3[*v6];
      if (*(void *)&v3[*v4] >= *(void *)&v3[*v5]) {
        break;
      }
      if (v3[*v6])
      {
        int v8 = 1;
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      uint64_t v11 = 0;
      while (1)
      {
        uint64_t v12 = *v4;
        uint64_t v13 = *(void *)&v3[v12];
        unint64_t v14 = v13 + 1;
        if (v13 == -1 || v14 > *(void *)&v3[*v5]) {
          break;
        }
        char v15 = *(unsigned char *)(*(void *)&v3[*v7] + v13);
        *(void *)&v3[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0) {
          goto LABEL_13;
        }
        v9 += 7;
        if (v10++ >= 9)
        {
          char v17 = 0;
          int v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      int v8 = v3[*v6];
      if (v3[*v6]) {
        char v17 = 0;
      }
      else {
        char v17 = v11;
      }
LABEL_16:
      if (v8) {
        BOOL v18 = 1;
      }
      else {
        BOOL v18 = (v17 & 7) == 4;
      }
      if (v18) {
        break;
      }
      if (!*(void *)(a1 + 8))
      {
        id v19 = objc_alloc_init(MEMORY[0x1E4F940B0]);
        int v20 = *(void **)(a1 + 8);
        *(void *)(a1 + 8) = v19;
      }
      if ((PBUnknownFieldAdd() & 1) == 0) {
        goto LABEL_23;
      }
    }
    BOOL v21 = v8 == 0;
  }
  else
  {
LABEL_23:
    BOOL v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_189A32CE4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A33500(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A3387C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A33C1C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDColorReadAllFrom(uint64_t a1, void *a2)
{
  unint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    int v4 = (int *)MEMORY[0x1E4F940E8];
    BOOL v5 = (int *)MEMORY[0x1E4F940E0];
    uint64_t v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          char v18 = 0;
          unsigned int v19 = 0;
          uint64_t v20 = 0;
          *(unsigned char *)(a1 + 20) |= 1u;
          while (1)
          {
            uint64_t v21 = *v4;
            uint64_t v22 = *(void *)&v3[v21];
            unint64_t v23 = v22 + 1;
            if (v22 == -1 || v23 > *(void *)&v3[*v5]) {
              break;
            }
            char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
            *(void *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0) {
              goto LABEL_32;
            }
            v18 += 7;
            BOOL v15 = v19++ >= 9;
            if (v15)
            {
              LODWORD(v20) = 0;
              goto LABEL_34;
            }
          }
          v3[*v6] = 1;
LABEL_32:
          if (v3[*v6]) {
            LODWORD(v20) = 0;
          }
LABEL_34:
          *(_DWORD *)(a1 + 16) = v20;
        }
        else
        {
          if (!*(void *)(a1 + 8))
          {
            id v25 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            uint64_t v26 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v25;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_37;
          }
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v27 = v3[*v6] == 0;
  }
  else
  {
LABEL_37:
    BOOL v27 = 0;
  }
  objc_sync_exit(v3);

  return v27;
}

void sub_189A34524(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A3DCD4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A3DE68(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A3DFF4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A3E144(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A42988(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A49B38(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDComponentFilterIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  char v2 = (int *)MEMORY[0x1E4F940E8];
  unint64_t v3 = (int *)MEMORY[0x1E4F940E0];
  int v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] >= *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
LABEL_2224:
    BOOL v976 = a1[*v4] == 0;
    PBReaderRecallMark();
    return v976;
  }
  BOOL v5 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (a1[*v4]) {
      goto LABEL_2224;
    }
    char v6 = 0;
    unsigned int v7 = 0;
    unint64_t v8 = 0;
    while (1)
    {
      uint64_t v9 = *v2;
      uint64_t v10 = *(void *)&a1[v9];
      unint64_t v11 = v10 + 1;
      if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
        break;
      }
      char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
      *(void *)&a1[v9] = v11;
      v8 |= (unint64_t)(v12 & 0x7F) << v6;
      if ((v12 & 0x80) == 0) {
        goto LABEL_12;
      }
      v6 += 7;
      BOOL v13 = v7++ >= 9;
      if (v13)
      {
        unint64_t v8 = 0;
        int v14 = a1[*v4];
        goto LABEL_14;
      }
    }
    a1[*v4] = 1;
LABEL_12:
    int v14 = a1[*v4];
    if (a1[*v4]) {
      unint64_t v8 = 0;
    }
LABEL_14:
    int v15 = v8 & 7;
    if (v14 || v15 == 4) {
      goto LABEL_2224;
    }
    switch((v8 >> 3))
    {
      case 1u:
        if (v15 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_2226;
        }
        [a1 position];
        [a1 length];
LABEL_22:
        while (2)
        {
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3] || a1[*v4]) {
            goto LABEL_2220;
          }
          char v17 = 0;
          unsigned int v18 = 0;
          unint64_t v19 = 0;
          while (2)
          {
            uint64_t v20 = *v2;
            uint64_t v21 = *(void *)&a1[v20];
            unint64_t v22 = v21 + 1;
            if (v21 == -1 || v22 > *(void *)&a1[*v3])
            {
              a1[*v4] = 1;
            }
            else
            {
              char v23 = *(unsigned char *)(*(void *)&a1[*v5] + v21);
              *(void *)&a1[v20] = v22;
              v19 |= (unint64_t)(v23 & 0x7F) << v17;
              if (v23 < 0)
              {
                v17 += 7;
                BOOL v13 = v18++ >= 9;
                if (v13)
                {
                  unint64_t v19 = 0;
                  int v24 = a1[*v4];
                  goto LABEL_34;
                }
                continue;
              }
            }
            break;
          }
          int v24 = a1[*v4];
          if (a1[*v4]) {
            unint64_t v19 = 0;
          }
LABEL_34:
          if (v24) {
            BOOL v25 = 1;
          }
          else {
            BOOL v25 = (v19 & 7) == 4;
          }
          if (!v25)
          {
            switch((v19 >> 3))
            {
              case 1u:
                if ((v19 & 7) != 0) {
                  goto LABEL_2225;
                }
                unsigned int v26 = 0;
                while (1)
                {
                  uint64_t v27 = *v2;
                  uint64_t v28 = *(void *)&a1[v27];
                  unint64_t v29 = v28 + 1;
                  if (v28 == -1 || v29 > *(void *)&a1[*v3]) {
                    goto LABEL_73;
                  }
                  int v30 = *(char *)(*(void *)&a1[*v5] + v28);
                  *(void *)&a1[v27] = v29;
                  if (v30 < 0)
                  {
                    BOOL v31 = v26++ > 8;
                    if (!v31) {
                      continue;
                    }
                  }
                  goto LABEL_22;
                }
              case 2u:
                if ((v19 & 7) != 0) {
                  goto LABEL_2225;
                }
                unsigned int v32 = 0;
                while (1)
                {
                  uint64_t v33 = *v2;
                  uint64_t v34 = *(void *)&a1[v33];
                  unint64_t v35 = v34 + 1;
                  if (v34 == -1 || v35 > *(void *)&a1[*v3]) {
                    goto LABEL_73;
                  }
                  int v36 = *(char *)(*(void *)&a1[*v5] + v34);
                  *(void *)&a1[v33] = v35;
                  if (v36 < 0)
                  {
                    BOOL v31 = v32++ > 8;
                    if (!v31) {
                      continue;
                    }
                  }
                  goto LABEL_22;
                }
              case 3u:
                if ((v19 & 7) != 0) {
                  goto LABEL_2225;
                }
                unsigned int v37 = 0;
                while (1)
                {
                  uint64_t v38 = *v2;
                  uint64_t v39 = *(void *)&a1[v38];
                  unint64_t v40 = v39 + 1;
                  if (v39 == -1 || v40 > *(void *)&a1[*v3]) {
                    goto LABEL_73;
                  }
                  int v41 = *(char *)(*(void *)&a1[*v5] + v39);
                  *(void *)&a1[v38] = v40;
                  if (v41 < 0)
                  {
                    BOOL v31 = v37++ > 8;
                    if (!v31) {
                      continue;
                    }
                  }
                  goto LABEL_22;
                }
              case 4u:
                if ((v19 & 7) != 0) {
                  goto LABEL_2225;
                }
                unsigned int v42 = 0;
                do
                {
                  uint64_t v43 = *v2;
                  uint64_t v44 = *(void *)&a1[v43];
                  unint64_t v45 = v44 + 1;
                  if (v44 == -1 || v45 > *(void *)&a1[*v3])
                  {
LABEL_73:
                    a1[*v4] = 1;
                    goto LABEL_22;
                  }
                  int v46 = *(char *)(*(void *)&a1[*v5] + v44);
                  *(void *)&a1[v43] = v45;
                  if ((v46 & 0x80000000) == 0) {
                    break;
                  }
                  BOOL v31 = v42++ > 8;
                }
                while (!v31);
                break;
              default:
                if ((PBReaderSkipValueWithTag() & 1) == 0) {
                  goto LABEL_2225;
                }
                continue;
            }
            continue;
          }
          goto LABEL_2220;
        }
      case 2u:
        if (v15 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_2226;
        }
        [a1 position];
        [a1 length];
        while (1)
        {
          int v47 = a1[*v4];
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_2221;
          }
          if (a1[*v4]) {
            goto LABEL_2225;
          }
          char v48 = 0;
          unsigned int v49 = 0;
          uint64_t v50 = 0;
          while (1)
          {
            uint64_t v51 = *v2;
            uint64_t v52 = *(void *)&a1[v51];
            unint64_t v53 = v52 + 1;
            if (v52 == -1 || v53 > *(void *)&a1[*v3]) {
              break;
            }
            char v54 = *(unsigned char *)(*(void *)&a1[*v5] + v52);
            *(void *)&a1[v51] = v53;
            v50 |= (unint64_t)(v54 & 0x7F) << v48;
            if ((v54 & 0x80) == 0) {
              goto LABEL_87;
            }
            v48 += 7;
            BOOL v13 = v49++ >= 9;
            if (v13)
            {
              LOBYTE(v50) = 0;
              int v47 = a1[*v4];
              goto LABEL_89;
            }
          }
          a1[*v4] = 1;
LABEL_87:
          uint64_t v55 = *v4;
          int v47 = a1[v55];
          if (a1[v55]) {
            LOBYTE(v50) = 0;
          }
LABEL_89:
          if (v47 || (v50 & 7) == 4) {
            goto LABEL_2221;
          }
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_2225;
          }
        }
      case 3u:
        if (v15 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_2226;
        }
        [a1 position];
        [a1 length];
        while (1)
        {
          int v47 = a1[*v4];
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_2221;
          }
          if (a1[*v4]) {
            goto LABEL_2225;
          }
          char v57 = 0;
          unsigned int v58 = 0;
          uint64_t v59 = 0;
          while (1)
          {
            uint64_t v60 = *v2;
            uint64_t v61 = *(void *)&a1[v60];
            unint64_t v62 = v61 + 1;
            if (v61 == -1 || v62 > *(void *)&a1[*v3]) {
              break;
            }
            char v63 = *(unsigned char *)(*(void *)&a1[*v5] + v61);
            *(void *)&a1[v60] = v62;
            v59 |= (unint64_t)(v63 & 0x7F) << v57;
            if ((v63 & 0x80) == 0) {
              goto LABEL_108;
            }
            v57 += 7;
            BOOL v13 = v58++ >= 9;
            if (v13)
            {
              LOBYTE(v59) = 0;
              int v47 = a1[*v4];
              goto LABEL_110;
            }
          }
          a1[*v4] = 1;
LABEL_108:
          uint64_t v64 = *v4;
          int v47 = a1[v64];
          if (a1[v64]) {
            LOBYTE(v59) = 0;
          }
LABEL_110:
          if (v47 || (v59 & 7) == 4) {
            goto LABEL_2221;
          }
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_2225;
          }
        }
      case 4u:
        if (v15 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_2226;
        }
        [a1 position];
        [a1 length];
        while (1)
        {
          int v47 = a1[*v4];
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_2221;
          }
          if (a1[*v4]) {
            goto LABEL_2225;
          }
          char v66 = 0;
          unsigned int v67 = 0;
          uint64_t v68 = 0;
          while (1)
          {
            uint64_t v69 = *v2;
            uint64_t v70 = *(void *)&a1[v69];
            unint64_t v71 = v70 + 1;
            if (v70 == -1 || v71 > *(void *)&a1[*v3]) {
              break;
            }
            char v72 = *(unsigned char *)(*(void *)&a1[*v5] + v70);
            *(void *)&a1[v69] = v71;
            v68 |= (unint64_t)(v72 & 0x7F) << v66;
            if ((v72 & 0x80) == 0) {
              goto LABEL_129;
            }
            v66 += 7;
            BOOL v13 = v67++ >= 9;
            if (v13)
            {
              LOBYTE(v68) = 0;
              int v47 = a1[*v4];
              goto LABEL_131;
            }
          }
          a1[*v4] = 1;
LABEL_129:
          uint64_t v73 = *v4;
          int v47 = a1[v73];
          if (a1[v73]) {
            LOBYTE(v68) = 0;
          }
LABEL_131:
          if (v47 || (v68 & 7) == 4) {
            goto LABEL_2221;
          }
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_2225;
          }
        }
      case 5u:
        if (v15 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_2226;
        }
        [a1 position];
        [a1 length];
        while (1)
        {
          int v47 = a1[*v4];
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_2221;
          }
          if (a1[*v4]) {
            goto LABEL_2225;
          }
          char v75 = 0;
          unsigned int v76 = 0;
          uint64_t v77 = 0;
          while (1)
          {
            uint64_t v78 = *v2;
            uint64_t v79 = *(void *)&a1[v78];
            unint64_t v80 = v79 + 1;
            if (v79 == -1 || v80 > *(void *)&a1[*v3]) {
              break;
            }
            char v81 = *(unsigned char *)(*(void *)&a1[*v5] + v79);
            *(void *)&a1[v78] = v80;
            v77 |= (unint64_t)(v81 & 0x7F) << v75;
            if ((v81 & 0x80) == 0) {
              goto LABEL_150;
            }
            v75 += 7;
            BOOL v13 = v76++ >= 9;
            if (v13)
            {
              LOBYTE(v77) = 0;
              int v47 = a1[*v4];
              goto LABEL_152;
            }
          }
          a1[*v4] = 1;
LABEL_150:
          uint64_t v82 = *v4;
          int v47 = a1[v82];
          if (a1[v82]) {
            LOBYTE(v77) = 0;
          }
LABEL_152:
          if (v47 || (v77 & 7) == 4) {
            goto LABEL_2221;
          }
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_2225;
          }
        }
      case 6u:
        if (v15 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_2226;
        }
        [a1 position];
        [a1 length];
        while (1)
        {
          int v47 = a1[*v4];
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_2221;
          }
          if (a1[*v4]) {
            goto LABEL_2225;
          }
          char v84 = 0;
          unsigned int v85 = 0;
          uint64_t v86 = 0;
          while (1)
          {
            uint64_t v87 = *v2;
            uint64_t v88 = *(void *)&a1[v87];
            unint64_t v89 = v88 + 1;
            if (v88 == -1 || v89 > *(void *)&a1[*v3]) {
              break;
            }
            char v90 = *(unsigned char *)(*(void *)&a1[*v5] + v88);
            *(void *)&a1[v87] = v89;
            v86 |= (unint64_t)(v90 & 0x7F) << v84;
            if ((v90 & 0x80) == 0) {
              goto LABEL_171;
            }
            v84 += 7;
            BOOL v13 = v85++ >= 9;
            if (v13)
            {
              LOBYTE(v86) = 0;
              int v47 = a1[*v4];
              goto LABEL_173;
            }
          }
          a1[*v4] = 1;
LABEL_171:
          uint64_t v91 = *v4;
          int v47 = a1[v91];
          if (a1[v91]) {
            LOBYTE(v86) = 0;
          }
LABEL_173:
          if (v47 || (v86 & 7) == 4) {
            goto LABEL_2221;
          }
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_2225;
          }
        }
      case 7u:
        if (v15 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_2226;
        }
        objc_msgSend(a1, "position", 0, 0);
        [a1 length];
LABEL_182:
        while (2)
        {
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3] || a1[*v4]) {
            goto LABEL_2103;
          }
          char v93 = 0;
          unsigned int v94 = 0;
          unint64_t v95 = 0;
          while (1)
          {
            uint64_t v96 = *v2;
            uint64_t v97 = *(void *)&a1[v96];
            unint64_t v98 = v97 + 1;
            if (v97 == -1 || v98 > *(void *)&a1[*v3]) {
              break;
            }
            char v99 = *(unsigned char *)(*(void *)&a1[*v5] + v97);
            *(void *)&a1[v96] = v98;
            v95 |= (unint64_t)(v99 & 0x7F) << v93;
            if ((v99 & 0x80) == 0) {
              goto LABEL_192;
            }
            v93 += 7;
            BOOL v13 = v94++ >= 9;
            if (v13)
            {
              unint64_t v95 = 0;
              int v100 = a1[*v4];
              goto LABEL_194;
            }
          }
          a1[*v4] = 1;
LABEL_192:
          int v100 = a1[*v4];
          if (a1[*v4]) {
            unint64_t v95 = 0;
          }
LABEL_194:
          int v101 = v95 & 7;
          if (v100 || v101 == 4) {
            goto LABEL_2103;
          }
          if ((v95 >> 3) == 2)
          {
            if ((v95 & 7) == 0)
            {
              unsigned int v103 = 0;
              do
              {
                uint64_t v104 = *v2;
                uint64_t v105 = *(void *)&a1[v104];
                unint64_t v106 = v105 + 1;
                if (v105 == -1 || v106 > *(void *)&a1[*v3])
                {
                  a1[*v4] = 1;
                  goto LABEL_182;
                }
                int v107 = *(char *)(*(void *)&a1[*v5] + v105);
                *(void *)&a1[v104] = v106;
                if ((v107 & 0x80000000) == 0) {
                  break;
                }
                BOOL v31 = v103++ > 8;
              }
              while (!v31);
              continue;
            }
          }
          else
          {
            if ((v95 >> 3) != 1)
            {
              if ((PBReaderSkipValueWithTag() & 1) == 0) {
                goto LABEL_2225;
              }
              continue;
            }
            if (v101 == 2 && PBReaderPlaceMark() && GEOPDPhotoSizeFilterValueIsValid(a1))
            {
              PBReaderRecallMark();
              continue;
            }
          }
          goto LABEL_2225;
        }
      case 8u:
        if (v15 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_2226;
        }
        objc_msgSend(a1, "position", 0, 0);
        [a1 length];
        while (2)
        {
          while (2)
          {
            if (*(void *)&a1[*v2] >= *(void *)&a1[*v3] || a1[*v4]) {
              goto LABEL_2103;
            }
            char v108 = 0;
            unsigned int v109 = 0;
            unint64_t v110 = 0;
            while (1)
            {
              uint64_t v111 = *v2;
              uint64_t v112 = *(void *)&a1[v111];
              unint64_t v113 = v112 + 1;
              if (v112 == -1 || v113 > *(void *)&a1[*v3]) {
                break;
              }
              char v114 = *(unsigned char *)(*(void *)&a1[*v5] + v112);
              *(void *)&a1[v111] = v113;
              v110 |= (unint64_t)(v114 & 0x7F) << v108;
              if ((v114 & 0x80) == 0) {
                goto LABEL_228;
              }
              v108 += 7;
              BOOL v13 = v109++ >= 9;
              if (v13)
              {
                unint64_t v110 = 0;
                int v115 = a1[*v4];
                goto LABEL_230;
              }
            }
            a1[*v4] = 1;
LABEL_228:
            int v115 = a1[*v4];
            if (a1[*v4]) {
              unint64_t v110 = 0;
            }
LABEL_230:
            int v116 = v110 & 7;
            if (v115 || v116 == 4) {
              goto LABEL_2103;
            }
            if ((v110 >> 3) != 1)
            {
              if ((PBReaderSkipValueWithTag() & 1) == 0) {
                goto LABEL_2225;
              }
              continue;
            }
            break;
          }
          if (v116 == 2 && PBReaderPlaceMark() && GEOPDPhotoSizeFilterValueIsValid(a1))
          {
            PBReaderRecallMark();
            continue;
          }
          goto LABEL_2225;
        }
      case 9u:
        if (v15 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_2226;
        }
        [a1 position];
        [a1 length];
        while (1)
        {
          int v47 = a1[*v4];
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_2221;
          }
          if (a1[*v4]) {
            goto LABEL_2225;
          }
          char v118 = 0;
          unsigned int v119 = 0;
          uint64_t v120 = 0;
          while (1)
          {
            uint64_t v121 = *v2;
            uint64_t v122 = *(void *)&a1[v121];
            unint64_t v123 = v122 + 1;
            if (v122 == -1 || v123 > *(void *)&a1[*v3]) {
              break;
            }
            char v124 = *(unsigned char *)(*(void *)&a1[*v5] + v122);
            *(void *)&a1[v121] = v123;
            v120 |= (unint64_t)(v124 & 0x7F) << v118;
            if ((v124 & 0x80) == 0) {
              goto LABEL_254;
            }
            v118 += 7;
            BOOL v13 = v119++ >= 9;
            if (v13)
            {
              LOBYTE(v120) = 0;
              int v47 = a1[*v4];
              goto LABEL_256;
            }
          }
          a1[*v4] = 1;
LABEL_254:
          uint64_t v125 = *v4;
          int v47 = a1[v125];
          if (a1[v125]) {
            LOBYTE(v120) = 0;
          }
LABEL_256:
          if (v47 || (v120 & 7) == 4) {
            goto LABEL_2221;
          }
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_2225;
          }
        }
      case 0xAu:
        if (v15 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_2226;
        }
        [a1 position];
        [a1 length];
        while (1)
        {
          int v47 = a1[*v4];
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_2221;
          }
          if (a1[*v4]) {
            goto LABEL_2225;
          }
          char v127 = 0;
          unsigned int v128 = 0;
          uint64_t v129 = 0;
          while (1)
          {
            uint64_t v130 = *v2;
            uint64_t v131 = *(void *)&a1[v130];
            unint64_t v132 = v131 + 1;
            if (v131 == -1 || v132 > *(void *)&a1[*v3]) {
              break;
            }
            char v133 = *(unsigned char *)(*(void *)&a1[*v5] + v131);
            *(void *)&a1[v130] = v132;
            v129 |= (unint64_t)(v133 & 0x7F) << v127;
            if ((v133 & 0x80) == 0) {
              goto LABEL_275;
            }
            v127 += 7;
            BOOL v13 = v128++ >= 9;
            if (v13)
            {
              LOBYTE(v129) = 0;
              int v47 = a1[*v4];
              goto LABEL_277;
            }
          }
          a1[*v4] = 1;
LABEL_275:
          uint64_t v134 = *v4;
          int v47 = a1[v134];
          if (a1[v134]) {
            LOBYTE(v129) = 0;
          }
LABEL_277:
          if (v47 || (v129 & 7) == 4) {
            goto LABEL_2221;
          }
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_2225;
          }
        }
      case 0xBu:
        if (v15 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_2226;
        }
        objc_msgSend(a1, "position", 0, 0);
        [a1 length];
LABEL_286:
        while (2)
        {
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3] || a1[*v4]) {
            goto LABEL_2103;
          }
          char v136 = 0;
          unsigned int v137 = 0;
          unint64_t v138 = 0;
          while (2)
          {
            uint64_t v139 = *v2;
            uint64_t v140 = *(void *)&a1[v139];
            unint64_t v141 = v140 + 1;
            if (v140 == -1 || v141 > *(void *)&a1[*v3])
            {
              a1[*v4] = 1;
            }
            else
            {
              char v142 = *(unsigned char *)(*(void *)&a1[*v5] + v140);
              *(void *)&a1[v139] = v141;
              v138 |= (unint64_t)(v142 & 0x7F) << v136;
              if (v142 < 0)
              {
                v136 += 7;
                BOOL v13 = v137++ >= 9;
                if (v13)
                {
                  unint64_t v138 = 0;
                  int v143 = a1[*v4];
                  goto LABEL_298;
                }
                continue;
              }
            }
            break;
          }
          int v143 = a1[*v4];
          if (a1[*v4]) {
            unint64_t v138 = 0;
          }
LABEL_298:
          int v144 = v138 & 7;
          if (v143) {
            BOOL v145 = 1;
          }
          else {
            BOOL v145 = v144 == 4;
          }
          if (!v145)
          {
            switch((v138 >> 3))
            {
              case 5u:
              case 6u:
                if (v144 != 2 || !PBReaderPlaceMark() || !GEOPDDeparturePredicateIsValid(a1)) {
                  goto LABEL_2225;
                }
                goto LABEL_312;
              case 7u:
                if (v144 != 2 || !PBReaderPlaceMark() || !GEOPDTimeRangeIsValid(a1)) {
                  goto LABEL_2225;
                }
LABEL_312:
                PBReaderRecallMark();
                continue;
              case 8u:
                if ((v138 & 7) != 0) {
                  goto LABEL_2225;
                }
                unsigned int v146 = 0;
                break;
              default:
                if ((PBReaderSkipValueWithTag() & 1) == 0) {
                  goto LABEL_2225;
                }
                continue;
            }
            do
            {
              uint64_t v147 = *v2;
              uint64_t v148 = *(void *)&a1[v147];
              unint64_t v149 = v148 + 1;
              if (v148 == -1 || v149 > *(void *)&a1[*v3])
              {
                a1[*v4] = 1;
                goto LABEL_286;
              }
              int v150 = *(char *)(*(void *)&a1[*v5] + v148);
              *(void *)&a1[v147] = v149;
              if ((v150 & 0x80000000) == 0) {
                break;
              }
              BOOL v31 = v146++ > 8;
            }
            while (!v31);
            continue;
          }
          goto LABEL_2103;
        }
      case 0xCu:
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDETAFilterIsValid(a1)) {
          goto LABEL_2226;
        }
        goto LABEL_2222;
      case 0xDu:
        if (v15 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_2226;
        }
        [a1 position];
        [a1 length];
        while (1)
        {
          int v47 = a1[*v4];
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_2221;
          }
          if (a1[*v4]) {
            goto LABEL_2225;
          }
          char v151 = 0;
          unsigned int v152 = 0;
          uint64_t v153 = 0;
          while (1)
          {
            uint64_t v154 = *v2;
            uint64_t v155 = *(void *)&a1[v154];
            unint64_t v156 = v155 + 1;
            if (v155 == -1 || v156 > *(void *)&a1[*v3]) {
              break;
            }
            char v157 = *(unsigned char *)(*(void *)&a1[*v5] + v155);
            *(void *)&a1[v154] = v156;
            v153 |= (unint64_t)(v157 & 0x7F) << v151;
            if ((v157 & 0x80) == 0) {
              goto LABEL_339;
            }
            v151 += 7;
            BOOL v13 = v152++ >= 9;
            if (v13)
            {
              LOBYTE(v153) = 0;
              int v47 = a1[*v4];
              goto LABEL_341;
            }
          }
          a1[*v4] = 1;
LABEL_339:
          uint64_t v158 = *v4;
          int v47 = a1[v158];
          if (a1[v158]) {
            LOBYTE(v153) = 0;
          }
LABEL_341:
          if (v47 || (v153 & 7) == 4) {
            goto LABEL_2221;
          }
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_2225;
          }
        }
      case 0xEu:
        if (v15 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_2226;
        }
        [a1 position];
        [a1 length];
        while (*(void *)&a1[*v2] < *(void *)&a1[*v3] && !a1[*v4])
        {
          char v160 = 0;
          unsigned int v161 = 0;
          unint64_t v162 = 0;
          while (1)
          {
            uint64_t v163 = *v2;
            uint64_t v164 = *(void *)&a1[v163];
            unint64_t v165 = v164 + 1;
            if (v164 == -1 || v165 > *(void *)&a1[*v3]) {
              break;
            }
            char v166 = *(unsigned char *)(*(void *)&a1[*v5] + v164);
            *(void *)&a1[v163] = v165;
            v162 |= (unint64_t)(v166 & 0x7F) << v160;
            if ((v166 & 0x80) == 0) {
              goto LABEL_360;
            }
            v160 += 7;
            BOOL v13 = v161++ >= 9;
            if (v13)
            {
              unint64_t v162 = 0;
              int v167 = a1[*v4];
              goto LABEL_362;
            }
          }
          a1[*v4] = 1;
LABEL_360:
          int v167 = a1[*v4];
          if (a1[*v4]) {
            unint64_t v162 = 0;
          }
LABEL_362:
          int v168 = v162 & 7;
          if (v167 || v168 == 4) {
            break;
          }
          if ((v162 >> 3) != 1)
          {
            if (!PBReaderSkipValueWithTag()) {
              goto LABEL_2225;
            }
            continue;
          }
          if (v168 != 2 || (PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_2225;
          }
        }
        goto LABEL_2220;
      case 0xFu:
        if (v15 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_2226;
        }
        [a1 position];
        [a1 length];
LABEL_375:
        while (2)
        {
          while (2)
          {
            if (*(void *)&a1[*v2] >= *(void *)&a1[*v3] || a1[*v4]) {
              goto LABEL_2220;
            }
            char v170 = 0;
            unsigned int v171 = 0;
            unint64_t v172 = 0;
            while (1)
            {
              uint64_t v173 = *v2;
              uint64_t v174 = *(void *)&a1[v173];
              unint64_t v175 = v174 + 1;
              if (v174 == -1 || v175 > *(void *)&a1[*v3]) {
                break;
              }
              char v176 = *(unsigned char *)(*(void *)&a1[*v5] + v174);
              *(void *)&a1[v173] = v175;
              v172 |= (unint64_t)(v176 & 0x7F) << v170;
              if ((v176 & 0x80) == 0) {
                goto LABEL_385;
              }
              v170 += 7;
              BOOL v13 = v171++ >= 9;
              if (v13)
              {
                unint64_t v172 = 0;
                int v177 = a1[*v4];
                goto LABEL_387;
              }
            }
            a1[*v4] = 1;
LABEL_385:
            int v177 = a1[*v4];
            if (a1[*v4]) {
              unint64_t v172 = 0;
            }
LABEL_387:
            if (v177 || (v172 & 7) == 4) {
              goto LABEL_2220;
            }
            if ((v172 >> 3) != 1)
            {
              if (!PBReaderSkipValueWithTag()) {
                goto LABEL_2225;
              }
              continue;
            }
            break;
          }
          if ((v172 & 7) == 0)
          {
            unsigned int v179 = 0;
            do
            {
              uint64_t v180 = *v2;
              uint64_t v181 = *(void *)&a1[v180];
              unint64_t v182 = v181 + 1;
              if (v181 == -1 || v182 > *(void *)&a1[*v3])
              {
                a1[*v4] = 1;
                goto LABEL_375;
              }
              int v183 = *(char *)(*(void *)&a1[*v5] + v181);
              *(void *)&a1[v180] = v182;
              if ((v183 & 0x80000000) == 0) {
                break;
              }
              BOOL v31 = v179++ > 8;
            }
            while (!v31);
            continue;
          }
          goto LABEL_2225;
        }
      case 0x10u:
        if (v15 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_2226;
        }
        [a1 position];
        [a1 length];
        while (1)
        {
          int v47 = a1[*v4];
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_2221;
          }
          if (a1[*v4]) {
            goto LABEL_2225;
          }
          char v184 = 0;
          unsigned int v185 = 0;
          uint64_t v186 = 0;
          while (1)
          {
            uint64_t v187 = *v2;
            uint64_t v188 = *(void *)&a1[v187];
            unint64_t v189 = v188 + 1;
            if (v188 == -1 || v189 > *(void *)&a1[*v3]) {
              break;
            }
            char v190 = *(unsigned char *)(*(void *)&a1[*v5] + v188);
            *(void *)&a1[v187] = v189;
            v186 |= (unint64_t)(v190 & 0x7F) << v184;
            if ((v190 & 0x80) == 0) {
              goto LABEL_416;
            }
            v184 += 7;
            BOOL v13 = v185++ >= 9;
            if (v13)
            {
              LOBYTE(v186) = 0;
              int v47 = a1[*v4];
              goto LABEL_418;
            }
          }
          a1[*v4] = 1;
LABEL_416:
          uint64_t v191 = *v4;
          int v47 = a1[v191];
          if (a1[v191]) {
            LOBYTE(v186) = 0;
          }
LABEL_418:
          if (v47 || (v186 & 7) == 4) {
            goto LABEL_2221;
          }
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_2225;
          }
        }
      case 0x14u:
        if (v15 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_2226;
        }
        [a1 position];
        [a1 length];
        while (1)
        {
          int v47 = a1[*v4];
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_2221;
          }
          if (a1[*v4]) {
            goto LABEL_2225;
          }
          char v193 = 0;
          unsigned int v194 = 0;
          uint64_t v195 = 0;
          while (1)
          {
            uint64_t v196 = *v2;
            uint64_t v197 = *(void *)&a1[v196];
            unint64_t v198 = v197 + 1;
            if (v197 == -1 || v198 > *(void *)&a1[*v3]) {
              break;
            }
            char v199 = *(unsigned char *)(*(void *)&a1[*v5] + v197);
            *(void *)&a1[v196] = v198;
            v195 |= (unint64_t)(v199 & 0x7F) << v193;
            if ((v199 & 0x80) == 0) {
              goto LABEL_439;
            }
            v193 += 7;
            BOOL v13 = v194++ >= 9;
            if (v13)
            {
              LOBYTE(v195) = 0;
              int v47 = a1[*v4];
              goto LABEL_441;
            }
          }
          a1[*v4] = 1;
LABEL_439:
          uint64_t v200 = *v4;
          int v47 = a1[v200];
          if (a1[v200]) {
            LOBYTE(v195) = 0;
          }
LABEL_441:
          if (v47 || (v195 & 7) == 4) {
            goto LABEL_2221;
          }
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_2225;
          }
        }
      case 0x15u:
        if (v15 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_2226;
        }
        [a1 position];
        [a1 length];
        while (1)
        {
          int v47 = a1[*v4];
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_2221;
          }
          if (a1[*v4]) {
            goto LABEL_2225;
          }
          char v202 = 0;
          unsigned int v203 = 0;
          uint64_t v204 = 0;
          while (1)
          {
            uint64_t v205 = *v2;
            uint64_t v206 = *(void *)&a1[v205];
            unint64_t v207 = v206 + 1;
            if (v206 == -1 || v207 > *(void *)&a1[*v3]) {
              break;
            }
            char v208 = *(unsigned char *)(*(void *)&a1[*v5] + v206);
            *(void *)&a1[v205] = v207;
            v204 |= (unint64_t)(v208 & 0x7F) << v202;
            if ((v208 & 0x80) == 0) {
              goto LABEL_460;
            }
            v202 += 7;
            BOOL v13 = v203++ >= 9;
            if (v13)
            {
              LOBYTE(v204) = 0;
              int v47 = a1[*v4];
              goto LABEL_462;
            }
          }
          a1[*v4] = 1;
LABEL_460:
          uint64_t v209 = *v4;
          int v47 = a1[v209];
          if (a1[v209]) {
            LOBYTE(v204) = 0;
          }
LABEL_462:
          if (v47 || (v204 & 7) == 4) {
            goto LABEL_2221;
          }
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_2225;
          }
        }
      case 0x16u:
        if (v15 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_2226;
        }
        [a1 position];
        [a1 length];
        while (1)
        {
          int v47 = a1[*v4];
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_2221;
          }
          if (a1[*v4]) {
            goto LABEL_2225;
          }
          char v211 = 0;
          unsigned int v212 = 0;
          uint64_t v213 = 0;
          while (1)
          {
            uint64_t v214 = *v2;
            uint64_t v215 = *(void *)&a1[v214];
            unint64_t v216 = v215 + 1;
            if (v215 == -1 || v216 > *(void *)&a1[*v3]) {
              break;
            }
            char v217 = *(unsigned char *)(*(void *)&a1[*v5] + v215);
            *(void *)&a1[v214] = v216;
            v213 |= (unint64_t)(v217 & 0x7F) << v211;
            if ((v217 & 0x80) == 0) {
              goto LABEL_481;
            }
            v211 += 7;
            BOOL v13 = v212++ >= 9;
            if (v13)
            {
              LOBYTE(v213) = 0;
              int v47 = a1[*v4];
              goto LABEL_483;
            }
          }
          a1[*v4] = 1;
LABEL_481:
          uint64_t v218 = *v4;
          int v47 = a1[v218];
          if (a1[v218]) {
            LOBYTE(v213) = 0;
          }
LABEL_483:
          if (v47 || (v213 & 7) == 4) {
            goto LABEL_2221;
          }
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_2225;
          }
        }
      case 0x17u:
        if (v15 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_2226;
        }
        [a1 position];
        [a1 length];
LABEL_492:
        while (2)
        {
          while (2)
          {
            if (*(void *)&a1[*v2] >= *(void *)&a1[*v3] || a1[*v4]) {
              goto LABEL_2220;
            }
            char v220 = 0;
            unsigned int v221 = 0;
            unint64_t v222 = 0;
            while (1)
            {
              uint64_t v223 = *v2;
              uint64_t v224 = *(void *)&a1[v223];
              unint64_t v225 = v224 + 1;
              if (v224 == -1 || v225 > *(void *)&a1[*v3]) {
                break;
              }
              char v226 = *(unsigned char *)(*(void *)&a1[*v5] + v224);
              *(void *)&a1[v223] = v225;
              v222 |= (unint64_t)(v226 & 0x7F) << v220;
              if ((v226 & 0x80) == 0) {
                goto LABEL_502;
              }
              v220 += 7;
              BOOL v13 = v221++ >= 9;
              if (v13)
              {
                unint64_t v222 = 0;
                int v227 = a1[*v4];
                goto LABEL_504;
              }
            }
            a1[*v4] = 1;
LABEL_502:
            int v227 = a1[*v4];
            if (a1[*v4]) {
              unint64_t v222 = 0;
            }
LABEL_504:
            if (v227 || (v222 & 7) == 4) {
              goto LABEL_2220;
            }
            if ((v222 >> 3) != 1)
            {
              if (!PBReaderSkipValueWithTag()) {
                goto LABEL_2225;
              }
              continue;
            }
            break;
          }
          if ((v222 & 7) == 0)
          {
            unsigned int v229 = 0;
            do
            {
              uint64_t v230 = *v2;
              uint64_t v231 = *(void *)&a1[v230];
              unint64_t v232 = v231 + 1;
              if (v231 == -1 || v232 > *(void *)&a1[*v3])
              {
                a1[*v4] = 1;
                goto LABEL_492;
              }
              int v233 = *(char *)(*(void *)&a1[*v5] + v231);
              *(void *)&a1[v230] = v232;
              if ((v233 & 0x80000000) == 0) {
                break;
              }
              BOOL v31 = v229++ > 8;
            }
            while (!v31);
            continue;
          }
          goto LABEL_2225;
        }
      case 0x18u:
        if (v15 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_2226;
        }
        [a1 position];
        [a1 length];
        while (1)
        {
          int v47 = a1[*v4];
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_2221;
          }
          if (a1[*v4]) {
            goto LABEL_2225;
          }
          char v234 = 0;
          unsigned int v235 = 0;
          uint64_t v236 = 0;
          while (1)
          {
            uint64_t v237 = *v2;
            uint64_t v238 = *(void *)&a1[v237];
            unint64_t v239 = v238 + 1;
            if (v238 == -1 || v239 > *(void *)&a1[*v3]) {
              break;
            }
            char v240 = *(unsigned char *)(*(void *)&a1[*v5] + v238);
            *(void *)&a1[v237] = v239;
            v236 |= (unint64_t)(v240 & 0x7F) << v234;
            if ((v240 & 0x80) == 0) {
              goto LABEL_533;
            }
            v234 += 7;
            BOOL v13 = v235++ >= 9;
            if (v13)
            {
              LOBYTE(v236) = 0;
              int v47 = a1[*v4];
              goto LABEL_535;
            }
          }
          a1[*v4] = 1;
LABEL_533:
          uint64_t v241 = *v4;
          int v47 = a1[v241];
          if (a1[v241]) {
            LOBYTE(v236) = 0;
          }
LABEL_535:
          if (v47 || (v236 & 7) == 4) {
            goto LABEL_2221;
          }
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_2225;
          }
        }
      case 0x19u:
        if (v15 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_2226;
        }
        [a1 position];
        [a1 length];
        while (1)
        {
          int v47 = a1[*v4];
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_2221;
          }
          if (a1[*v4]) {
            goto LABEL_2225;
          }
          char v243 = 0;
          unsigned int v244 = 0;
          uint64_t v245 = 0;
          while (1)
          {
            uint64_t v246 = *v2;
            uint64_t v247 = *(void *)&a1[v246];
            unint64_t v248 = v247 + 1;
            if (v247 == -1 || v248 > *(void *)&a1[*v3]) {
              break;
            }
            char v249 = *(unsigned char *)(*(void *)&a1[*v5] + v247);
            *(void *)&a1[v246] = v248;
            v245 |= (unint64_t)(v249 & 0x7F) << v243;
            if ((v249 & 0x80) == 0) {
              goto LABEL_554;
            }
            v243 += 7;
            BOOL v13 = v244++ >= 9;
            if (v13)
            {
              LOBYTE(v245) = 0;
              int v47 = a1[*v4];
              goto LABEL_556;
            }
          }
          a1[*v4] = 1;
LABEL_554:
          uint64_t v250 = *v4;
          int v47 = a1[v250];
          if (a1[v250]) {
            LOBYTE(v245) = 0;
          }
LABEL_556:
          if (v47 || (v245 & 7) == 4) {
            goto LABEL_2221;
          }
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_2225;
          }
        }
      case 0x1Au:
        if (v15 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_2226;
        }
        objc_msgSend(a1, "position", 0, 0);
        [a1 length];
        while (2)
        {
          while (2)
          {
            if (*(void *)&a1[*v2] >= *(void *)&a1[*v3] || a1[*v4]) {
              goto LABEL_2103;
            }
            char v252 = 0;
            unsigned int v253 = 0;
            unint64_t v254 = 0;
            while (1)
            {
              uint64_t v255 = *v2;
              uint64_t v256 = *(void *)&a1[v255];
              unint64_t v257 = v256 + 1;
              if (v256 == -1 || v257 > *(void *)&a1[*v3]) {
                break;
              }
              char v258 = *(unsigned char *)(*(void *)&a1[*v5] + v256);
              *(void *)&a1[v255] = v257;
              v254 |= (unint64_t)(v258 & 0x7F) << v252;
              if ((v258 & 0x80) == 0) {
                goto LABEL_575;
              }
              v252 += 7;
              BOOL v13 = v253++ >= 9;
              if (v13)
              {
                unint64_t v254 = 0;
                int v259 = a1[*v4];
                goto LABEL_577;
              }
            }
            a1[*v4] = 1;
LABEL_575:
            int v259 = a1[*v4];
            if (a1[*v4]) {
              unint64_t v254 = 0;
            }
LABEL_577:
            int v260 = v254 & 7;
            if (v259 || v260 == 4) {
              goto LABEL_2103;
            }
            if ((v254 >> 3) == 2)
            {
              if (v260 != 2) {
                goto LABEL_2225;
              }
            }
            else if ((v254 >> 3) == 1)
            {
              if (v260 == 2 && PBReaderPlaceMark() && GEOPDPhotoSizeFilterValueIsValid(a1))
              {
                PBReaderRecallMark();
                continue;
              }
              goto LABEL_2225;
            }
            break;
          }
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_2225;
          }
          continue;
        }
      case 0x1Bu:
        if (v15 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_2226;
        }
        [a1 position];
        [a1 length];
        while (1)
        {
          int v47 = a1[*v4];
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_2221;
          }
          if (a1[*v4]) {
            goto LABEL_2225;
          }
          char v262 = 0;
          unsigned int v263 = 0;
          uint64_t v264 = 0;
          while (1)
          {
            uint64_t v265 = *v2;
            uint64_t v266 = *(void *)&a1[v265];
            unint64_t v267 = v266 + 1;
            if (v266 == -1 || v267 > *(void *)&a1[*v3]) {
              break;
            }
            char v268 = *(unsigned char *)(*(void *)&a1[*v5] + v266);
            *(void *)&a1[v265] = v267;
            v264 |= (unint64_t)(v268 & 0x7F) << v262;
            if ((v268 & 0x80) == 0) {
              goto LABEL_603;
            }
            v262 += 7;
            BOOL v13 = v263++ >= 9;
            if (v13)
            {
              LOBYTE(v264) = 0;
              int v47 = a1[*v4];
              goto LABEL_605;
            }
          }
          a1[*v4] = 1;
LABEL_603:
          uint64_t v269 = *v4;
          int v47 = a1[v269];
          if (a1[v269]) {
            LOBYTE(v264) = 0;
          }
LABEL_605:
          if (v47 || (v264 & 7) == 4) {
            goto LABEL_2221;
          }
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_2225;
          }
        }
      case 0x1Du:
        if (v15 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_2226;
        }
        objc_msgSend(a1, "position", 0, 0);
        [a1 length];
LABEL_614:
        while (2)
        {
          while (2)
          {
            if (*(void *)&a1[*v2] >= *(void *)&a1[*v3] || a1[*v4]) {
              goto LABEL_2103;
            }
            char v271 = 0;
            unsigned int v272 = 0;
            unint64_t v273 = 0;
            while (1)
            {
              uint64_t v274 = *v2;
              uint64_t v275 = *(void *)&a1[v274];
              unint64_t v276 = v275 + 1;
              if (v275 == -1 || v276 > *(void *)&a1[*v3]) {
                break;
              }
              char v277 = *(unsigned char *)(*(void *)&a1[*v5] + v275);
              *(void *)&a1[v274] = v276;
              v273 |= (unint64_t)(v277 & 0x7F) << v271;
              if ((v277 & 0x80) == 0) {
                goto LABEL_624;
              }
              v271 += 7;
              BOOL v13 = v272++ >= 9;
              if (v13)
              {
                unint64_t v273 = 0;
                int v278 = a1[*v4];
                goto LABEL_626;
              }
            }
            a1[*v4] = 1;
LABEL_624:
            int v278 = a1[*v4];
            if (a1[*v4]) {
              unint64_t v273 = 0;
            }
LABEL_626:
            int v279 = v273 & 7;
            if (v278 || v279 == 4) {
              goto LABEL_2103;
            }
            if ((v273 >> 3) != 1)
            {
              if ((PBReaderSkipValueWithTag() & 1) == 0) {
                goto LABEL_2225;
              }
              continue;
            }
            break;
          }
          if (v279 == 2)
          {
            if (PBReaderPlaceMark())
            {
              while (1)
              {
LABEL_641:
                if (*(void *)&a1[*v2] >= *(void *)&a1[*v3] || (unsigned int v286 = a1[*v4], a1[*v4]))
                {
                  PBReaderRecallMark();
                  goto LABEL_614;
                }
                while (1)
                {
                  uint64_t v287 = *v2;
                  uint64_t v288 = *(void *)&a1[v287];
                  unint64_t v289 = v288 + 1;
                  if (v288 == -1 || v289 > *(void *)&a1[*v3]) {
                    break;
                  }
                  int v290 = *(char *)(*(void *)&a1[*v5] + v288);
                  *(void *)&a1[v287] = v289;
                  if (v290 < 0)
                  {
                    BOOL v13 = v286++ >= 9;
                    if (!v13) {
                      continue;
                    }
                  }
                  goto LABEL_641;
                }
                a1[*v4] = 1;
              }
            }
          }
          else if ((v273 & 7) == 0)
          {
            do
            {
              uint64_t v281 = *v2;
              uint64_t v282 = *(void *)&a1[v281];
              unint64_t v283 = v282 + 1;
              if (v282 == -1 || v283 > *(void *)&a1[*v3])
              {
                a1[*v4] = 1;
                goto LABEL_614;
              }
              int v284 = *(char *)(*(void *)&a1[*v5] + v282);
              *(void *)&a1[v281] = v283;
              if ((v284 & 0x80000000) == 0) {
                break;
              }
              unsigned int v285 = v279++;
            }
            while (v285 <= 8);
            continue;
          }
          goto LABEL_2225;
        }
      case 0x1Eu:
        if (v15 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_2226;
        }
        objc_msgSend(a1, "position", 0, 0);
        [a1 length];
LABEL_655:
        while (2)
        {
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3] || a1[*v4]) {
            goto LABEL_2103;
          }
          char v291 = 0;
          unsigned int v292 = 0;
          unint64_t v293 = 0;
          while (2)
          {
            uint64_t v294 = *v2;
            uint64_t v295 = *(void *)&a1[v294];
            unint64_t v296 = v295 + 1;
            if (v295 == -1 || v296 > *(void *)&a1[*v3])
            {
              a1[*v4] = 1;
            }
            else
            {
              char v297 = *(unsigned char *)(*(void *)&a1[*v5] + v295);
              *(void *)&a1[v294] = v296;
              v293 |= (unint64_t)(v297 & 0x7F) << v291;
              if (v297 < 0)
              {
                v291 += 7;
                BOOL v13 = v292++ >= 9;
                if (v13)
                {
                  unint64_t v293 = 0;
                  int v298 = a1[*v4];
                  goto LABEL_667;
                }
                continue;
              }
            }
            break;
          }
          int v298 = a1[*v4];
          if (a1[*v4]) {
            unint64_t v293 = 0;
          }
LABEL_667:
          int v299 = v293 & 7;
          if (v298) {
            BOOL v300 = 1;
          }
          else {
            BOOL v300 = v299 == 4;
          }
          if (v300) {
            goto LABEL_2103;
          }
          switch((v293 >> 3))
          {
            case 1u:
              if ((v293 & 7) != 0) {
                goto LABEL_2225;
              }
              unsigned int v301 = 0;
              while (1)
              {
                uint64_t v302 = *v2;
                uint64_t v303 = *(void *)&a1[v302];
                unint64_t v304 = v303 + 1;
                if (v303 == -1 || v304 > *(void *)&a1[*v3]) {
                  goto LABEL_705;
                }
                int v305 = *(char *)(*(void *)&a1[*v5] + v303);
                *(void *)&a1[v302] = v304;
                if (v305 < 0)
                {
                  BOOL v31 = v301++ > 8;
                  if (!v31) {
                    continue;
                  }
                }
                goto LABEL_655;
              }
            case 2u:
              if ((v293 & 7) != 0) {
                goto LABEL_2225;
              }
              unsigned int v306 = 0;
              while (1)
              {
                uint64_t v307 = *v2;
                uint64_t v308 = *(void *)&a1[v307];
                unint64_t v309 = v308 + 1;
                if (v308 == -1 || v309 > *(void *)&a1[*v3]) {
                  goto LABEL_705;
                }
                int v310 = *(char *)(*(void *)&a1[*v5] + v308);
                *(void *)&a1[v307] = v309;
                if (v310 < 0)
                {
                  BOOL v31 = v306++ > 8;
                  if (!v31) {
                    continue;
                  }
                }
                goto LABEL_655;
              }
            case 3u:
              if ((v293 & 7) != 0) {
                goto LABEL_2225;
              }
              unsigned int v311 = 0;
              while (1)
              {
                uint64_t v312 = *v2;
                uint64_t v313 = *(void *)&a1[v312];
                unint64_t v314 = v313 + 1;
                if (v313 == -1 || v314 > *(void *)&a1[*v3]) {
                  goto LABEL_705;
                }
                int v315 = *(char *)(*(void *)&a1[*v5] + v313);
                *(void *)&a1[v312] = v314;
                if (v315 < 0)
                {
                  BOOL v31 = v311++ > 8;
                  if (!v31) {
                    continue;
                  }
                }
                goto LABEL_655;
              }
            case 4u:
              if (v299 == 2)
              {
                if (PBReaderPlaceMark())
                {
                  while (1)
                  {
LABEL_707:
                    if (*(void *)&a1[*v2] >= *(void *)&a1[*v3] || (unsigned int v321 = a1[*v4], a1[*v4]))
                    {
                      PBReaderRecallMark();
                      goto LABEL_655;
                    }
                    while (1)
                    {
                      uint64_t v322 = *v2;
                      uint64_t v323 = *(void *)&a1[v322];
                      unint64_t v324 = v323 + 1;
                      if (v323 == -1 || v324 > *(void *)&a1[*v3]) {
                        break;
                      }
                      int v325 = *(char *)(*(void *)&a1[*v5] + v323);
                      *(void *)&a1[v322] = v324;
                      if (v325 < 0)
                      {
                        BOOL v13 = v321++ >= 9;
                        if (!v13) {
                          continue;
                        }
                      }
                      goto LABEL_707;
                    }
                    a1[*v4] = 1;
                  }
                }
              }
              else if ((v293 & 7) == 0)
              {
                do
                {
                  uint64_t v316 = *v2;
                  uint64_t v317 = *(void *)&a1[v316];
                  unint64_t v318 = v317 + 1;
                  if (v317 == -1 || v318 > *(void *)&a1[*v3])
                  {
LABEL_705:
                    a1[*v4] = 1;
                    goto LABEL_655;
                  }
                  int v319 = *(char *)(*(void *)&a1[*v5] + v317);
                  *(void *)&a1[v316] = v318;
                  if ((v319 & 0x80000000) == 0) {
                    break;
                  }
                  unsigned int v320 = v299++;
                }
                while (v320 <= 8);
                continue;
              }
              break;
            default:
              if ((PBReaderSkipValueWithTag() & 1) == 0) {
                goto LABEL_2225;
              }
              continue;
          }
          goto LABEL_2225;
        }
      case 0x1Fu:
        if (v15 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_2226;
        }
        [a1 position];
        [a1 length];
LABEL_720:
        while (2)
        {
          while (2)
          {
            if (*(void *)&a1[*v2] >= *(void *)&a1[*v3] || a1[*v4]) {
              goto LABEL_2220;
            }
            char v326 = 0;
            unsigned int v327 = 0;
            unint64_t v328 = 0;
            while (1)
            {
              uint64_t v329 = *v2;
              uint64_t v330 = *(void *)&a1[v329];
              unint64_t v331 = v330 + 1;
              if (v330 == -1 || v331 > *(void *)&a1[*v3]) {
                break;
              }
              char v332 = *(unsigned char *)(*(void *)&a1[*v5] + v330);
              *(void *)&a1[v329] = v331;
              v328 |= (unint64_t)(v332 & 0x7F) << v326;
              if ((v332 & 0x80) == 0) {
                goto LABEL_730;
              }
              v326 += 7;
              BOOL v13 = v327++ >= 9;
              if (v13)
              {
                unint64_t v328 = 0;
                int v333 = a1[*v4];
                goto LABEL_732;
              }
            }
            a1[*v4] = 1;
LABEL_730:
            int v333 = a1[*v4];
            if (a1[*v4]) {
              unint64_t v328 = 0;
            }
LABEL_732:
            int v334 = v328 & 7;
            if (v333 || v334 == 4) {
              goto LABEL_2220;
            }
            if ((v328 >> 3) != 2)
            {
              if ((v328 >> 3) != 1)
              {
                if (!PBReaderSkipValueWithTag()) {
                  goto LABEL_2225;
                }
                continue;
              }
              if (v334 != 2 || (PBReaderSkipValueWithTag() & 1) == 0) {
                goto LABEL_2225;
              }
              continue;
            }
            break;
          }
          if ((v328 & 7) == 0)
          {
            unsigned int v336 = 0;
            do
            {
              uint64_t v337 = *v2;
              uint64_t v338 = *(void *)&a1[v337];
              unint64_t v339 = v338 + 1;
              if (v338 == -1 || v339 > *(void *)&a1[*v3])
              {
                a1[*v4] = 1;
                goto LABEL_720;
              }
              int v340 = *(char *)(*(void *)&a1[*v5] + v338);
              *(void *)&a1[v337] = v339;
              if ((v340 & 0x80000000) == 0) {
                break;
              }
              BOOL v31 = v336++ > 8;
            }
            while (!v31);
            continue;
          }
          goto LABEL_2225;
        }
      case 0x20u:
        if (v15 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_2226;
        }
        [a1 position];
        [a1 length];
        while (1)
        {
          int v47 = a1[*v4];
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_2221;
          }
          if (a1[*v4]) {
            goto LABEL_2225;
          }
          char v341 = 0;
          unsigned int v342 = 0;
          uint64_t v343 = 0;
          while (1)
          {
            uint64_t v344 = *v2;
            uint64_t v345 = *(void *)&a1[v344];
            unint64_t v346 = v345 + 1;
            if (v345 == -1 || v346 > *(void *)&a1[*v3]) {
              break;
            }
            char v347 = *(unsigned char *)(*(void *)&a1[*v5] + v345);
            *(void *)&a1[v344] = v346;
            v343 |= (unint64_t)(v347 & 0x7F) << v341;
            if ((v347 & 0x80) == 0) {
              goto LABEL_765;
            }
            v341 += 7;
            BOOL v13 = v342++ >= 9;
            if (v13)
            {
              LOBYTE(v343) = 0;
              int v47 = a1[*v4];
              goto LABEL_767;
            }
          }
          a1[*v4] = 1;
LABEL_765:
          uint64_t v348 = *v4;
          int v47 = a1[v348];
          if (a1[v348]) {
            LOBYTE(v343) = 0;
          }
LABEL_767:
          if (v47 || (v343 & 7) == 4) {
            goto LABEL_2221;
          }
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_2225;
          }
        }
      case 0x21u:
        if (v15 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_2226;
        }
        [a1 position];
        [a1 length];
        while (1)
        {
          int v47 = a1[*v4];
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_2221;
          }
          if (a1[*v4]) {
            goto LABEL_2225;
          }
          char v350 = 0;
          unsigned int v351 = 0;
          uint64_t v352 = 0;
          while (1)
          {
            uint64_t v353 = *v2;
            uint64_t v354 = *(void *)&a1[v353];
            unint64_t v355 = v354 + 1;
            if (v354 == -1 || v355 > *(void *)&a1[*v3]) {
              break;
            }
            char v356 = *(unsigned char *)(*(void *)&a1[*v5] + v354);
            *(void *)&a1[v353] = v355;
            v352 |= (unint64_t)(v356 & 0x7F) << v350;
            if ((v356 & 0x80) == 0) {
              goto LABEL_786;
            }
            v350 += 7;
            BOOL v13 = v351++ >= 9;
            if (v13)
            {
              LOBYTE(v352) = 0;
              int v47 = a1[*v4];
              goto LABEL_788;
            }
          }
          a1[*v4] = 1;
LABEL_786:
          uint64_t v357 = *v4;
          int v47 = a1[v357];
          if (a1[v357]) {
            LOBYTE(v352) = 0;
          }
LABEL_788:
          if (v47 || (v352 & 7) == 4) {
            goto LABEL_2221;
          }
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_2225;
          }
        }
      case 0x22u:
        if (v15 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_2226;
        }
        [a1 position];
        [a1 length];
        while (1)
        {
          int v47 = a1[*v4];
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_2221;
          }
          if (a1[*v4]) {
            goto LABEL_2225;
          }
          char v359 = 0;
          unsigned int v360 = 0;
          uint64_t v361 = 0;
          while (1)
          {
            uint64_t v362 = *v2;
            uint64_t v363 = *(void *)&a1[v362];
            unint64_t v364 = v363 + 1;
            if (v363 == -1 || v364 > *(void *)&a1[*v3]) {
              break;
            }
            char v365 = *(unsigned char *)(*(void *)&a1[*v5] + v363);
            *(void *)&a1[v362] = v364;
            v361 |= (unint64_t)(v365 & 0x7F) << v359;
            if ((v365 & 0x80) == 0) {
              goto LABEL_807;
            }
            v359 += 7;
            BOOL v13 = v360++ >= 9;
            if (v13)
            {
              LOBYTE(v361) = 0;
              int v47 = a1[*v4];
              goto LABEL_809;
            }
          }
          a1[*v4] = 1;
LABEL_807:
          uint64_t v366 = *v4;
          int v47 = a1[v366];
          if (a1[v366]) {
            LOBYTE(v361) = 0;
          }
LABEL_809:
          if (v47 || (v361 & 7) == 4) {
            goto LABEL_2221;
          }
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_2225;
          }
        }
      case 0x24u:
        if (v15 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_2226;
        }
        objc_msgSend(a1, "position", 0, 0);
        [a1 length];
        while (2)
        {
          while (2)
          {
            if (*(void *)&a1[*v2] >= *(void *)&a1[*v3] || a1[*v4]) {
              goto LABEL_2103;
            }
            char v368 = 0;
            unsigned int v369 = 0;
            unint64_t v370 = 0;
            while (1)
            {
              uint64_t v371 = *v2;
              uint64_t v372 = *(void *)&a1[v371];
              unint64_t v373 = v372 + 1;
              if (v372 == -1 || v373 > *(void *)&a1[*v3]) {
                break;
              }
              char v374 = *(unsigned char *)(*(void *)&a1[*v5] + v372);
              *(void *)&a1[v371] = v373;
              v370 |= (unint64_t)(v374 & 0x7F) << v368;
              if ((v374 & 0x80) == 0) {
                goto LABEL_828;
              }
              v368 += 7;
              BOOL v13 = v369++ >= 9;
              if (v13)
              {
                unint64_t v370 = 0;
                int v375 = a1[*v4];
                goto LABEL_830;
              }
            }
            a1[*v4] = 1;
LABEL_828:
            int v375 = a1[*v4];
            if (a1[*v4]) {
              unint64_t v370 = 0;
            }
LABEL_830:
            int v376 = v370 & 7;
            if (v375 || v376 == 4) {
              goto LABEL_2103;
            }
            if ((v370 >> 3) != 1)
            {
              if ((PBReaderSkipValueWithTag() & 1) == 0) {
                goto LABEL_2225;
              }
              continue;
            }
            break;
          }
          if (v376 == 2 && PBReaderPlaceMark() && GEOPDPhotoSizeFilterValueIsValid(a1))
          {
            PBReaderRecallMark();
            continue;
          }
          goto LABEL_2225;
        }
      case 0x25u:
        if (v15 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_2226;
        }
        [a1 position];
        [a1 length];
        while (1)
        {
          int v47 = a1[*v4];
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_2221;
          }
          if (a1[*v4]) {
            goto LABEL_2225;
          }
          char v378 = 0;
          unsigned int v379 = 0;
          uint64_t v380 = 0;
          while (1)
          {
            uint64_t v381 = *v2;
            uint64_t v382 = *(void *)&a1[v381];
            unint64_t v383 = v382 + 1;
            if (v382 == -1 || v383 > *(void *)&a1[*v3]) {
              break;
            }
            char v384 = *(unsigned char *)(*(void *)&a1[*v5] + v382);
            *(void *)&a1[v381] = v383;
            v380 |= (unint64_t)(v384 & 0x7F) << v378;
            if ((v384 & 0x80) == 0) {
              goto LABEL_854;
            }
            v378 += 7;
            BOOL v13 = v379++ >= 9;
            if (v13)
            {
              LOBYTE(v380) = 0;
              int v47 = a1[*v4];
              goto LABEL_856;
            }
          }
          a1[*v4] = 1;
LABEL_854:
          uint64_t v385 = *v4;
          int v47 = a1[v385];
          if (a1[v385]) {
            LOBYTE(v380) = 0;
          }
LABEL_856:
          if (v47 || (v380 & 7) == 4) {
            goto LABEL_2221;
          }
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_2225;
          }
        }
      case 0x26u:
        if (v15 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_2226;
        }
        [a1 position];
        [a1 length];
        while (1)
        {
          int v47 = a1[*v4];
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_2221;
          }
          if (a1[*v4]) {
            goto LABEL_2225;
          }
          char v387 = 0;
          unsigned int v388 = 0;
          uint64_t v389 = 0;
          while (1)
          {
            uint64_t v390 = *v2;
            uint64_t v391 = *(void *)&a1[v390];
            unint64_t v392 = v391 + 1;
            if (v391 == -1 || v392 > *(void *)&a1[*v3]) {
              break;
            }
            char v393 = *(unsigned char *)(*(void *)&a1[*v5] + v391);
            *(void *)&a1[v390] = v392;
            v389 |= (unint64_t)(v393 & 0x7F) << v387;
            if ((v393 & 0x80) == 0) {
              goto LABEL_875;
            }
            v387 += 7;
            BOOL v13 = v388++ >= 9;
            if (v13)
            {
              LOBYTE(v389) = 0;
              int v47 = a1[*v4];
              goto LABEL_877;
            }
          }
          a1[*v4] = 1;
LABEL_875:
          uint64_t v394 = *v4;
          int v47 = a1[v394];
          if (a1[v394]) {
            LOBYTE(v389) = 0;
          }
LABEL_877:
          if (v47 || (v389 & 7) == 4) {
            goto LABEL_2221;
          }
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_2225;
          }
        }
      case 0x27u:
        if (v15 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_2226;
        }
        [a1 position];
        [a1 length];
        while (1)
        {
          int v47 = a1[*v4];
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_2221;
          }
          if (a1[*v4]) {
            goto LABEL_2225;
          }
          char v396 = 0;
          unsigned int v397 = 0;
          uint64_t v398 = 0;
          while (1)
          {
            uint64_t v399 = *v2;
            uint64_t v400 = *(void *)&a1[v399];
            unint64_t v401 = v400 + 1;
            if (v400 == -1 || v401 > *(void *)&a1[*v3]) {
              break;
            }
            char v402 = *(unsigned char *)(*(void *)&a1[*v5] + v400);
            *(void *)&a1[v399] = v401;
            v398 |= (unint64_t)(v402 & 0x7F) << v396;
            if ((v402 & 0x80) == 0) {
              goto LABEL_896;
            }
            v396 += 7;
            BOOL v13 = v397++ >= 9;
            if (v13)
            {
              LOBYTE(v398) = 0;
              int v47 = a1[*v4];
              goto LABEL_898;
            }
          }
          a1[*v4] = 1;
LABEL_896:
          uint64_t v403 = *v4;
          int v47 = a1[v403];
          if (a1[v403]) {
            LOBYTE(v398) = 0;
          }
LABEL_898:
          if (v47 || (v398 & 7) == 4) {
            goto LABEL_2221;
          }
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_2225;
          }
        }
      case 0x28u:
        if (v15 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_2226;
        }
        [a1 position];
        [a1 length];
LABEL_907:
        while (2)
        {
          while (2)
          {
            if (*(void *)&a1[*v2] >= *(void *)&a1[*v3] || a1[*v4]) {
              goto LABEL_2220;
            }
            char v405 = 0;
            unsigned int v406 = 0;
            unint64_t v407 = 0;
            while (1)
            {
              uint64_t v408 = *v2;
              uint64_t v409 = *(void *)&a1[v408];
              unint64_t v410 = v409 + 1;
              if (v409 == -1 || v410 > *(void *)&a1[*v3]) {
                break;
              }
              char v411 = *(unsigned char *)(*(void *)&a1[*v5] + v409);
              *(void *)&a1[v408] = v410;
              v407 |= (unint64_t)(v411 & 0x7F) << v405;
              if ((v411 & 0x80) == 0) {
                goto LABEL_917;
              }
              v405 += 7;
              BOOL v13 = v406++ >= 9;
              if (v13)
              {
                unint64_t v407 = 0;
                int v412 = a1[*v4];
                goto LABEL_919;
              }
            }
            a1[*v4] = 1;
LABEL_917:
            int v412 = a1[*v4];
            if (a1[*v4]) {
              unint64_t v407 = 0;
            }
LABEL_919:
            if (v412 || (v407 & 7) == 4) {
              goto LABEL_2220;
            }
            if ((v407 >> 3) != 1)
            {
              if (!PBReaderSkipValueWithTag()) {
                goto LABEL_2225;
              }
              continue;
            }
            break;
          }
          if ((v407 & 7) == 0)
          {
            unsigned int v414 = 0;
            do
            {
              uint64_t v415 = *v2;
              uint64_t v416 = *(void *)&a1[v415];
              unint64_t v417 = v416 + 1;
              if (v416 == -1 || v417 > *(void *)&a1[*v3])
              {
                a1[*v4] = 1;
                goto LABEL_907;
              }
              int v418 = *(char *)(*(void *)&a1[*v5] + v416);
              *(void *)&a1[v415] = v417;
              if ((v418 & 0x80000000) == 0) {
                break;
              }
              BOOL v31 = v414++ > 8;
            }
            while (!v31);
            continue;
          }
          goto LABEL_2225;
        }
      case 0x29u:
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDVenueInfoFilterIsValid((unsigned __int8 *)a1)) {
          goto LABEL_2226;
        }
        goto LABEL_2222;
      case 0x2Au:
        if (v15 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_2226;
        }
        [a1 position];
        [a1 length];
        while (1)
        {
          int v47 = a1[*v4];
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_2221;
          }
          if (a1[*v4]) {
            goto LABEL_2225;
          }
          char v419 = 0;
          unsigned int v420 = 0;
          uint64_t v421 = 0;
          while (1)
          {
            uint64_t v422 = *v2;
            uint64_t v423 = *(void *)&a1[v422];
            unint64_t v424 = v423 + 1;
            if (v423 == -1 || v424 > *(void *)&a1[*v3]) {
              break;
            }
            char v425 = *(unsigned char *)(*(void *)&a1[*v5] + v423);
            *(void *)&a1[v422] = v424;
            v421 |= (unint64_t)(v425 & 0x7F) << v419;
            if ((v425 & 0x80) == 0) {
              goto LABEL_952;
            }
            v419 += 7;
            BOOL v13 = v420++ >= 9;
            if (v13)
            {
              LOBYTE(v421) = 0;
              int v47 = a1[*v4];
              goto LABEL_954;
            }
          }
          a1[*v4] = 1;
LABEL_952:
          uint64_t v426 = *v4;
          int v47 = a1[v426];
          if (a1[v426]) {
            LOBYTE(v421) = 0;
          }
LABEL_954:
          if (v47 || (v421 & 7) == 4) {
            goto LABEL_2221;
          }
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_2225;
          }
        }
      case 0x2Bu:
        if (v15 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_2226;
        }
        [a1 position];
        [a1 length];
        while (1)
        {
          int v47 = a1[*v4];
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_2221;
          }
          if (a1[*v4]) {
            goto LABEL_2225;
          }
          char v428 = 0;
          unsigned int v429 = 0;
          uint64_t v430 = 0;
          while (1)
          {
            uint64_t v431 = *v2;
            uint64_t v432 = *(void *)&a1[v431];
            unint64_t v433 = v432 + 1;
            if (v432 == -1 || v433 > *(void *)&a1[*v3]) {
              break;
            }
            char v434 = *(unsigned char *)(*(void *)&a1[*v5] + v432);
            *(void *)&a1[v431] = v433;
            v430 |= (unint64_t)(v434 & 0x7F) << v428;
            if ((v434 & 0x80) == 0) {
              goto LABEL_973;
            }
            v428 += 7;
            BOOL v13 = v429++ >= 9;
            if (v13)
            {
              LOBYTE(v430) = 0;
              int v47 = a1[*v4];
              goto LABEL_975;
            }
          }
          a1[*v4] = 1;
LABEL_973:
          uint64_t v435 = *v4;
          int v47 = a1[v435];
          if (a1[v435]) {
            LOBYTE(v430) = 0;
          }
LABEL_975:
          if (v47 || (v430 & 7) == 4) {
            goto LABEL_2221;
          }
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_2225;
          }
        }
      case 0x2Cu:
        if (v15 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_2226;
        }
        [a1 position];
        [a1 length];
        while (1)
        {
          int v47 = a1[*v4];
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_2221;
          }
          if (a1[*v4]) {
            goto LABEL_2225;
          }
          char v437 = 0;
          unsigned int v438 = 0;
          uint64_t v439 = 0;
          while (1)
          {
            uint64_t v440 = *v2;
            uint64_t v441 = *(void *)&a1[v440];
            unint64_t v442 = v441 + 1;
            if (v441 == -1 || v442 > *(void *)&a1[*v3]) {
              break;
            }
            char v443 = *(unsigned char *)(*(void *)&a1[*v5] + v441);
            *(void *)&a1[v440] = v442;
            v439 |= (unint64_t)(v443 & 0x7F) << v437;
            if ((v443 & 0x80) == 0) {
              goto LABEL_994;
            }
            v437 += 7;
            BOOL v13 = v438++ >= 9;
            if (v13)
            {
              LOBYTE(v439) = 0;
              int v47 = a1[*v4];
              goto LABEL_996;
            }
          }
          a1[*v4] = 1;
LABEL_994:
          uint64_t v444 = *v4;
          int v47 = a1[v444];
          if (a1[v444]) {
            LOBYTE(v439) = 0;
          }
LABEL_996:
          if (v47 || (v439 & 7) == 4) {
            goto LABEL_2221;
          }
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_2225;
          }
        }
      case 0x30u:
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDVenueInfoFilterIsValid((unsigned __int8 *)a1)) {
          goto LABEL_2226;
        }
        goto LABEL_2222;
      case 0x32u:
        if (v15 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_2226;
        }
        [a1 position];
        [a1 length];
        while (1)
        {
          int v47 = a1[*v4];
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_2221;
          }
          if (a1[*v4]) {
            goto LABEL_2225;
          }
          char v446 = 0;
          unsigned int v447 = 0;
          uint64_t v448 = 0;
          while (1)
          {
            uint64_t v449 = *v2;
            uint64_t v450 = *(void *)&a1[v449];
            unint64_t v451 = v450 + 1;
            if (v450 == -1 || v451 > *(void *)&a1[*v3]) {
              break;
            }
            char v452 = *(unsigned char *)(*(void *)&a1[*v5] + v450);
            *(void *)&a1[v449] = v451;
            v448 |= (unint64_t)(v452 & 0x7F) << v446;
            if ((v452 & 0x80) == 0) {
              goto LABEL_1019;
            }
            v446 += 7;
            BOOL v13 = v447++ >= 9;
            if (v13)
            {
              LOBYTE(v448) = 0;
              int v47 = a1[*v4];
              goto LABEL_1021;
            }
          }
          a1[*v4] = 1;
LABEL_1019:
          uint64_t v453 = *v4;
          int v47 = a1[v453];
          if (a1[v453]) {
            LOBYTE(v448) = 0;
          }
LABEL_1021:
          if (v47 || (v448 & 7) == 4) {
            goto LABEL_2221;
          }
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_2225;
          }
        }
      case 0x33u:
        if (v15 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_2226;
        }
        [a1 position];
        [a1 length];
        while (1)
        {
          int v47 = a1[*v4];
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_2221;
          }
          if (a1[*v4]) {
            goto LABEL_2225;
          }
          char v455 = 0;
          unsigned int v456 = 0;
          uint64_t v457 = 0;
          while (1)
          {
            uint64_t v458 = *v2;
            uint64_t v459 = *(void *)&a1[v458];
            unint64_t v460 = v459 + 1;
            if (v459 == -1 || v460 > *(void *)&a1[*v3]) {
              break;
            }
            char v461 = *(unsigned char *)(*(void *)&a1[*v5] + v459);
            *(void *)&a1[v458] = v460;
            v457 |= (unint64_t)(v461 & 0x7F) << v455;
            if ((v461 & 0x80) == 0) {
              goto LABEL_1040;
            }
            v455 += 7;
            BOOL v13 = v456++ >= 9;
            if (v13)
            {
              LOBYTE(v457) = 0;
              int v47 = a1[*v4];
              goto LABEL_1042;
            }
          }
          a1[*v4] = 1;
LABEL_1040:
          uint64_t v462 = *v4;
          int v47 = a1[v462];
          if (a1[v462]) {
            LOBYTE(v457) = 0;
          }
LABEL_1042:
          if (v47 || (v457 & 7) == 4) {
            goto LABEL_2221;
          }
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_2225;
          }
        }
      case 0x34u:
        if (v15 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_2226;
        }
        [a1 position];
        [a1 length];
        while (1)
        {
          int v47 = a1[*v4];
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_2221;
          }
          if (a1[*v4]) {
            goto LABEL_2225;
          }
          char v464 = 0;
          unsigned int v465 = 0;
          uint64_t v466 = 0;
          while (1)
          {
            uint64_t v467 = *v2;
            uint64_t v468 = *(void *)&a1[v467];
            unint64_t v469 = v468 + 1;
            if (v468 == -1 || v469 > *(void *)&a1[*v3]) {
              break;
            }
            char v470 = *(unsigned char *)(*(void *)&a1[*v5] + v468);
            *(void *)&a1[v467] = v469;
            v466 |= (unint64_t)(v470 & 0x7F) << v464;
            if ((v470 & 0x80) == 0) {
              goto LABEL_1061;
            }
            v464 += 7;
            BOOL v13 = v465++ >= 9;
            if (v13)
            {
              LOBYTE(v466) = 0;
              int v47 = a1[*v4];
              goto LABEL_1063;
            }
          }
          a1[*v4] = 1;
LABEL_1061:
          uint64_t v471 = *v4;
          int v47 = a1[v471];
          if (a1[v471]) {
            LOBYTE(v466) = 0;
          }
LABEL_1063:
          if (v47 || (v466 & 7) == 4) {
            goto LABEL_2221;
          }
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_2225;
          }
        }
      case 0x35u:
        if (v15 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_2226;
        }
        [a1 position];
        [a1 length];
        while (1)
        {
          int v47 = a1[*v4];
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_2221;
          }
          if (a1[*v4]) {
            goto LABEL_2225;
          }
          char v473 = 0;
          unsigned int v474 = 0;
          uint64_t v475 = 0;
          while (1)
          {
            uint64_t v476 = *v2;
            uint64_t v477 = *(void *)&a1[v476];
            unint64_t v478 = v477 + 1;
            if (v477 == -1 || v478 > *(void *)&a1[*v3]) {
              break;
            }
            char v479 = *(unsigned char *)(*(void *)&a1[*v5] + v477);
            *(void *)&a1[v476] = v478;
            v475 |= (unint64_t)(v479 & 0x7F) << v473;
            if ((v479 & 0x80) == 0) {
              goto LABEL_1082;
            }
            v473 += 7;
            BOOL v13 = v474++ >= 9;
            if (v13)
            {
              LOBYTE(v475) = 0;
              int v47 = a1[*v4];
              goto LABEL_1084;
            }
          }
          a1[*v4] = 1;
LABEL_1082:
          uint64_t v480 = *v4;
          int v47 = a1[v480];
          if (a1[v480]) {
            LOBYTE(v475) = 0;
          }
LABEL_1084:
          if (v47 || (v475 & 7) == 4) {
            goto LABEL_2221;
          }
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_2225;
          }
        }
      case 0x36u:
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDClientRankingFeatureTypeResultIsValid(a1)) {
          goto LABEL_2226;
        }
        goto LABEL_2222;
      case 0x37u:
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDVenueInfoFilterIsValid((unsigned __int8 *)a1)) {
          goto LABEL_2226;
        }
        goto LABEL_2222;
      case 0x38u:
        if (v15 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_2226;
        }
        [a1 position];
        [a1 length];
        while (1)
        {
          int v47 = a1[*v4];
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_2221;
          }
          if (a1[*v4]) {
            goto LABEL_2225;
          }
          char v482 = 0;
          unsigned int v483 = 0;
          uint64_t v484 = 0;
          while (1)
          {
            uint64_t v485 = *v2;
            uint64_t v486 = *(void *)&a1[v485];
            unint64_t v487 = v486 + 1;
            if (v486 == -1 || v487 > *(void *)&a1[*v3]) {
              break;
            }
            char v488 = *(unsigned char *)(*(void *)&a1[*v5] + v486);
            *(void *)&a1[v485] = v487;
            v484 |= (unint64_t)(v488 & 0x7F) << v482;
            if ((v488 & 0x80) == 0) {
              goto LABEL_1111;
            }
            v482 += 7;
            BOOL v13 = v483++ >= 9;
            if (v13)
            {
              LOBYTE(v484) = 0;
              int v47 = a1[*v4];
              goto LABEL_1113;
            }
          }
          a1[*v4] = 1;
LABEL_1111:
          uint64_t v489 = *v4;
          int v47 = a1[v489];
          if (a1[v489]) {
            LOBYTE(v484) = 0;
          }
LABEL_1113:
          if (v47 || (v484 & 7) == 4) {
            goto LABEL_2221;
          }
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_2225;
          }
        }
      case 0x39u:
        if (v15 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_2226;
        }
        objc_msgSend(a1, "position", 0, 0);
        [a1 length];
        while (2)
        {
          while (2)
          {
            if (*(void *)&a1[*v2] >= *(void *)&a1[*v3] || a1[*v4]) {
              goto LABEL_2103;
            }
            char v491 = 0;
            unsigned int v492 = 0;
            unint64_t v493 = 0;
            while (1)
            {
              uint64_t v494 = *v2;
              uint64_t v495 = *(void *)&a1[v494];
              unint64_t v496 = v495 + 1;
              if (v495 == -1 || v496 > *(void *)&a1[*v3]) {
                break;
              }
              char v497 = *(unsigned char *)(*(void *)&a1[*v5] + v495);
              *(void *)&a1[v494] = v496;
              v493 |= (unint64_t)(v497 & 0x7F) << v491;
              if ((v497 & 0x80) == 0) {
                goto LABEL_1132;
              }
              v491 += 7;
              BOOL v13 = v492++ >= 9;
              if (v13)
              {
                unint64_t v493 = 0;
                int v498 = a1[*v4];
                goto LABEL_1134;
              }
            }
            a1[*v4] = 1;
LABEL_1132:
            int v498 = a1[*v4];
            if (a1[*v4]) {
              unint64_t v493 = 0;
            }
LABEL_1134:
            int v499 = v493 & 7;
            if (v498 || v499 == 4) {
              goto LABEL_2103;
            }
            if ((v493 >> 3) != 1)
            {
              if ((PBReaderSkipValueWithTag() & 1) == 0) {
                goto LABEL_2225;
              }
              continue;
            }
            break;
          }
          if (v499 == 2 && PBReaderPlaceMark() && GEOPDPhotoSizeFilterValueIsValid(a1))
          {
            PBReaderRecallMark();
            continue;
          }
          goto LABEL_2225;
        }
      case 0x3Au:
        if (v15 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_2226;
        }
        [a1 position];
        [a1 length];
LABEL_1148:
        while (2)
        {
          while (2)
          {
            if (*(void *)&a1[*v2] >= *(void *)&a1[*v3] || a1[*v4]) {
              goto LABEL_2220;
            }
            char v501 = 0;
            unsigned int v502 = 0;
            unint64_t v503 = 0;
            while (1)
            {
              uint64_t v504 = *v2;
              uint64_t v505 = *(void *)&a1[v504];
              unint64_t v506 = v505 + 1;
              if (v505 == -1 || v506 > *(void *)&a1[*v3]) {
                break;
              }
              char v507 = *(unsigned char *)(*(void *)&a1[*v5] + v505);
              *(void *)&a1[v504] = v506;
              v503 |= (unint64_t)(v507 & 0x7F) << v501;
              if ((v507 & 0x80) == 0) {
                goto LABEL_1158;
              }
              v501 += 7;
              BOOL v13 = v502++ >= 9;
              if (v13)
              {
                unint64_t v503 = 0;
                int v508 = a1[*v4];
                goto LABEL_1160;
              }
            }
            a1[*v4] = 1;
LABEL_1158:
            int v508 = a1[*v4];
            if (a1[*v4]) {
              unint64_t v503 = 0;
            }
LABEL_1160:
            if (v508 || (v503 & 7) == 4) {
              goto LABEL_2220;
            }
            if ((v503 >> 3) != 1)
            {
              if (!PBReaderSkipValueWithTag()) {
                goto LABEL_2225;
              }
              continue;
            }
            break;
          }
          if ((v503 & 7) == 0)
          {
            unsigned int v510 = 0;
            do
            {
              uint64_t v511 = *v2;
              uint64_t v512 = *(void *)&a1[v511];
              unint64_t v513 = v512 + 1;
              if (v512 == -1 || v513 > *(void *)&a1[*v3])
              {
                a1[*v4] = 1;
                goto LABEL_1148;
              }
              int v514 = *(char *)(*(void *)&a1[*v5] + v512);
              *(void *)&a1[v511] = v513;
              if ((v514 & 0x80000000) == 0) {
                break;
              }
              BOOL v31 = v510++ > 8;
            }
            while (!v31);
            continue;
          }
          goto LABEL_2225;
        }
      case 0x3Bu:
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDVenueInfoFilterIsValid((unsigned __int8 *)a1)) {
          goto LABEL_2226;
        }
        goto LABEL_2222;
      case 0x3Cu:
        if (v15 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_2226;
        }
        [a1 position];
        [a1 length];
        while (1)
        {
          int v47 = a1[*v4];
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_2221;
          }
          if (a1[*v4]) {
            goto LABEL_2225;
          }
          char v515 = 0;
          unsigned int v516 = 0;
          uint64_t v517 = 0;
          while (1)
          {
            uint64_t v518 = *v2;
            uint64_t v519 = *(void *)&a1[v518];
            unint64_t v520 = v519 + 1;
            if (v519 == -1 || v520 > *(void *)&a1[*v3]) {
              break;
            }
            char v521 = *(unsigned char *)(*(void *)&a1[*v5] + v519);
            *(void *)&a1[v518] = v520;
            v517 |= (unint64_t)(v521 & 0x7F) << v515;
            if ((v521 & 0x80) == 0) {
              goto LABEL_1193;
            }
            v515 += 7;
            BOOL v13 = v516++ >= 9;
            if (v13)
            {
              LOBYTE(v517) = 0;
              int v47 = a1[*v4];
              goto LABEL_1195;
            }
          }
          a1[*v4] = 1;
LABEL_1193:
          uint64_t v522 = *v4;
          int v47 = a1[v522];
          if (a1[v522]) {
            LOBYTE(v517) = 0;
          }
LABEL_1195:
          if (v47 || (v517 & 7) == 4) {
            goto LABEL_2221;
          }
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_2225;
          }
        }
      case 0x3Du:
        if (v15 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_2226;
        }
        [a1 position];
        [a1 length];
        while (1)
        {
          int v47 = a1[*v4];
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_2221;
          }
          if (a1[*v4]) {
            goto LABEL_2225;
          }
          char v524 = 0;
          unsigned int v525 = 0;
          uint64_t v526 = 0;
          while (1)
          {
            uint64_t v527 = *v2;
            uint64_t v528 = *(void *)&a1[v527];
            unint64_t v529 = v528 + 1;
            if (v528 == -1 || v529 > *(void *)&a1[*v3]) {
              break;
            }
            char v530 = *(unsigned char *)(*(void *)&a1[*v5] + v528);
            *(void *)&a1[v527] = v529;
            v526 |= (unint64_t)(v530 & 0x7F) << v524;
            if ((v530 & 0x80) == 0) {
              goto LABEL_1214;
            }
            v524 += 7;
            BOOL v13 = v525++ >= 9;
            if (v13)
            {
              LOBYTE(v526) = 0;
              int v47 = a1[*v4];
              goto LABEL_1216;
            }
          }
          a1[*v4] = 1;
LABEL_1214:
          uint64_t v531 = *v4;
          int v47 = a1[v531];
          if (a1[v531]) {
            LOBYTE(v526) = 0;
          }
LABEL_1216:
          if (v47 || (v526 & 7) == 4) {
            goto LABEL_2221;
          }
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_2225;
          }
        }
      case 0x3Eu:
        if (v15 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_2226;
        }
        [a1 position];
        [a1 length];
        while (1)
        {
          int v47 = a1[*v4];
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_2221;
          }
          if (a1[*v4]) {
            goto LABEL_2225;
          }
          char v533 = 0;
          unsigned int v534 = 0;
          uint64_t v535 = 0;
          while (1)
          {
            uint64_t v536 = *v2;
            uint64_t v537 = *(void *)&a1[v536];
            unint64_t v538 = v537 + 1;
            if (v537 == -1 || v538 > *(void *)&a1[*v3]) {
              break;
            }
            char v539 = *(unsigned char *)(*(void *)&a1[*v5] + v537);
            *(void *)&a1[v536] = v538;
            v535 |= (unint64_t)(v539 & 0x7F) << v533;
            if ((v539 & 0x80) == 0) {
              goto LABEL_1235;
            }
            v533 += 7;
            BOOL v13 = v534++ >= 9;
            if (v13)
            {
              LOBYTE(v535) = 0;
              int v47 = a1[*v4];
              goto LABEL_1237;
            }
          }
          a1[*v4] = 1;
LABEL_1235:
          uint64_t v540 = *v4;
          int v47 = a1[v540];
          if (a1[v540]) {
            LOBYTE(v535) = 0;
          }
LABEL_1237:
          if (v47 || (v535 & 7) == 4) {
            goto LABEL_2221;
          }
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_2225;
          }
        }
      case 0x3Fu:
        if (v15 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_2226;
        }
        [a1 position];
        [a1 length];
        while (1)
        {
          int v47 = a1[*v4];
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_2221;
          }
          if (a1[*v4]) {
            goto LABEL_2225;
          }
          char v542 = 0;
          unsigned int v543 = 0;
          uint64_t v544 = 0;
          while (1)
          {
            uint64_t v545 = *v2;
            uint64_t v546 = *(void *)&a1[v545];
            unint64_t v547 = v546 + 1;
            if (v546 == -1 || v547 > *(void *)&a1[*v3]) {
              break;
            }
            char v548 = *(unsigned char *)(*(void *)&a1[*v5] + v546);
            *(void *)&a1[v545] = v547;
            v544 |= (unint64_t)(v548 & 0x7F) << v542;
            if ((v548 & 0x80) == 0) {
              goto LABEL_1256;
            }
            v542 += 7;
            BOOL v13 = v543++ >= 9;
            if (v13)
            {
              LOBYTE(v544) = 0;
              int v47 = a1[*v4];
              goto LABEL_1258;
            }
          }
          a1[*v4] = 1;
LABEL_1256:
          uint64_t v549 = *v4;
          int v47 = a1[v549];
          if (a1[v549]) {
            LOBYTE(v544) = 0;
          }
LABEL_1258:
          if (v47 || (v544 & 7) == 4) {
            goto LABEL_2221;
          }
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_2225;
          }
        }
      case 0x40u:
        if (v15 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_2226;
        }
        [a1 position];
        [a1 length];
        while (1)
        {
          int v47 = a1[*v4];
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_2221;
          }
          if (a1[*v4]) {
            goto LABEL_2225;
          }
          char v551 = 0;
          unsigned int v552 = 0;
          uint64_t v553 = 0;
          while (1)
          {
            uint64_t v554 = *v2;
            uint64_t v555 = *(void *)&a1[v554];
            unint64_t v556 = v555 + 1;
            if (v555 == -1 || v556 > *(void *)&a1[*v3]) {
              break;
            }
            char v557 = *(unsigned char *)(*(void *)&a1[*v5] + v555);
            *(void *)&a1[v554] = v556;
            v553 |= (unint64_t)(v557 & 0x7F) << v551;
            if ((v557 & 0x80) == 0) {
              goto LABEL_1277;
            }
            v551 += 7;
            BOOL v13 = v552++ >= 9;
            if (v13)
            {
              LOBYTE(v553) = 0;
              int v47 = a1[*v4];
              goto LABEL_1279;
            }
          }
          a1[*v4] = 1;
LABEL_1277:
          uint64_t v558 = *v4;
          int v47 = a1[v558];
          if (a1[v558]) {
            LOBYTE(v553) = 0;
          }
LABEL_1279:
          if (v47 || (v553 & 7) == 4) {
            goto LABEL_2221;
          }
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_2225;
          }
        }
      case 0x41u:
        if (v15 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_2226;
        }
        [a1 position];
        [a1 length];
LABEL_1288:
        while (2)
        {
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3] || a1[*v4]) {
            goto LABEL_2220;
          }
          char v560 = 0;
          unsigned int v561 = 0;
          unint64_t v562 = 0;
          while (2)
          {
            uint64_t v563 = *v2;
            uint64_t v564 = *(void *)&a1[v563];
            unint64_t v565 = v564 + 1;
            if (v564 == -1 || v565 > *(void *)&a1[*v3])
            {
              a1[*v4] = 1;
            }
            else
            {
              char v566 = *(unsigned char *)(*(void *)&a1[*v5] + v564);
              *(void *)&a1[v563] = v565;
              v562 |= (unint64_t)(v566 & 0x7F) << v560;
              if (v566 < 0)
              {
                v560 += 7;
                BOOL v13 = v561++ >= 9;
                if (v13)
                {
                  unint64_t v562 = 0;
                  int v567 = a1[*v4];
                  goto LABEL_1300;
                }
                continue;
              }
            }
            break;
          }
          int v567 = a1[*v4];
          if (a1[*v4]) {
            unint64_t v562 = 0;
          }
LABEL_1300:
          if (v567) {
            BOOL v568 = 1;
          }
          else {
            BOOL v568 = (v562 & 7) == 4;
          }
          if (!v568)
          {
            switch((v562 >> 3))
            {
              case 1u:
                if ((v562 & 7) != 0) {
                  goto LABEL_2225;
                }
                unsigned int v569 = 0;
                while (1)
                {
                  uint64_t v570 = *v2;
                  uint64_t v571 = *(void *)&a1[v570];
                  unint64_t v572 = v571 + 1;
                  if (v571 == -1 || v572 > *(void *)&a1[*v3]) {
                    goto LABEL_1363;
                  }
                  int v573 = *(char *)(*(void *)&a1[*v5] + v571);
                  *(void *)&a1[v570] = v572;
                  if (v573 < 0)
                  {
                    BOOL v31 = v569++ > 8;
                    if (!v31) {
                      continue;
                    }
                  }
                  goto LABEL_1288;
                }
              case 2u:
                if ((v562 & 7) != 0) {
                  goto LABEL_2225;
                }
                unsigned int v574 = 0;
                while (1)
                {
                  uint64_t v575 = *v2;
                  uint64_t v576 = *(void *)&a1[v575];
                  unint64_t v577 = v576 + 1;
                  if (v576 == -1 || v577 > *(void *)&a1[*v3]) {
                    goto LABEL_1363;
                  }
                  int v578 = *(char *)(*(void *)&a1[*v5] + v576);
                  *(void *)&a1[v575] = v577;
                  if (v578 < 0)
                  {
                    BOOL v31 = v574++ > 8;
                    if (!v31) {
                      continue;
                    }
                  }
                  goto LABEL_1288;
                }
              case 3u:
                if ((v562 & 7) != 0) {
                  goto LABEL_2225;
                }
                unsigned int v579 = 0;
                while (1)
                {
                  uint64_t v580 = *v2;
                  uint64_t v581 = *(void *)&a1[v580];
                  unint64_t v582 = v581 + 1;
                  if (v581 == -1 || v582 > *(void *)&a1[*v3]) {
                    goto LABEL_1363;
                  }
                  int v583 = *(char *)(*(void *)&a1[*v5] + v581);
                  *(void *)&a1[v580] = v582;
                  if (v583 < 0)
                  {
                    BOOL v31 = v579++ > 8;
                    if (!v31) {
                      continue;
                    }
                  }
                  goto LABEL_1288;
                }
              case 4u:
                if ((v562 & 7) != 0) {
                  goto LABEL_2225;
                }
                unsigned int v584 = 0;
                while (1)
                {
                  uint64_t v585 = *v2;
                  uint64_t v586 = *(void *)&a1[v585];
                  unint64_t v587 = v586 + 1;
                  if (v586 == -1 || v587 > *(void *)&a1[*v3]) {
                    goto LABEL_1363;
                  }
                  int v588 = *(char *)(*(void *)&a1[*v5] + v586);
                  *(void *)&a1[v585] = v587;
                  if (v588 < 0)
                  {
                    BOOL v31 = v584++ > 8;
                    if (!v31) {
                      continue;
                    }
                  }
                  goto LABEL_1288;
                }
              case 5u:
                if ((v562 & 7) != 0) {
                  goto LABEL_2225;
                }
                unsigned int v589 = 0;
                while (1)
                {
                  uint64_t v590 = *v2;
                  uint64_t v591 = *(void *)&a1[v590];
                  unint64_t v592 = v591 + 1;
                  if (v591 == -1 || v592 > *(void *)&a1[*v3]) {
                    goto LABEL_1363;
                  }
                  int v593 = *(char *)(*(void *)&a1[*v5] + v591);
                  *(void *)&a1[v590] = v592;
                  if (v593 < 0)
                  {
                    BOOL v31 = v589++ > 8;
                    if (!v31) {
                      continue;
                    }
                  }
                  goto LABEL_1288;
                }
              case 6u:
                if ((v562 & 7) != 0) {
                  goto LABEL_2225;
                }
                unsigned int v594 = 0;
                while (1)
                {
                  uint64_t v595 = *v2;
                  uint64_t v596 = *(void *)&a1[v595];
                  unint64_t v597 = v596 + 1;
                  if (v596 == -1 || v597 > *(void *)&a1[*v3]) {
                    goto LABEL_1363;
                  }
                  int v598 = *(char *)(*(void *)&a1[*v5] + v596);
                  *(void *)&a1[v595] = v597;
                  if (v598 < 0)
                  {
                    BOOL v31 = v594++ > 8;
                    if (!v31) {
                      continue;
                    }
                  }
                  goto LABEL_1288;
                }
              case 7u:
                if ((v562 & 7) != 0) {
                  goto LABEL_2225;
                }
                unsigned int v599 = 0;
                do
                {
                  uint64_t v600 = *v2;
                  uint64_t v601 = *(void *)&a1[v600];
                  unint64_t v602 = v601 + 1;
                  if (v601 == -1 || v602 > *(void *)&a1[*v3])
                  {
LABEL_1363:
                    a1[*v4] = 1;
                    goto LABEL_1288;
                  }
                  int v603 = *(char *)(*(void *)&a1[*v5] + v601);
                  *(void *)&a1[v600] = v602;
                  if ((v603 & 0x80000000) == 0) {
                    break;
                  }
                  BOOL v31 = v599++ > 8;
                }
                while (!v31);
                break;
              default:
                if ((PBReaderSkipValueWithTag() & 1) == 0) {
                  goto LABEL_2225;
                }
                continue;
            }
            continue;
          }
          goto LABEL_2220;
        }
      case 0x42u:
        if (v15 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_2226;
        }
        [a1 position];
        [a1 length];
LABEL_1367:
        while (2)
        {
          while (2)
          {
            if (*(void *)&a1[*v2] >= *(void *)&a1[*v3] || a1[*v4]) {
              goto LABEL_2220;
            }
            char v604 = 0;
            unsigned int v605 = 0;
            unint64_t v606 = 0;
            while (1)
            {
              uint64_t v607 = *v2;
              uint64_t v608 = *(void *)&a1[v607];
              unint64_t v609 = v608 + 1;
              if (v608 == -1 || v609 > *(void *)&a1[*v3]) {
                break;
              }
              char v610 = *(unsigned char *)(*(void *)&a1[*v5] + v608);
              *(void *)&a1[v607] = v609;
              v606 |= (unint64_t)(v610 & 0x7F) << v604;
              if ((v610 & 0x80) == 0) {
                goto LABEL_1377;
              }
              v604 += 7;
              BOOL v13 = v605++ >= 9;
              if (v13)
              {
                unint64_t v606 = 0;
                int v611 = a1[*v4];
                goto LABEL_1379;
              }
            }
            a1[*v4] = 1;
LABEL_1377:
            int v611 = a1[*v4];
            if (a1[*v4]) {
              unint64_t v606 = 0;
            }
LABEL_1379:
            if (v611 || (v606 & 7) == 4) {
              goto LABEL_2220;
            }
            if ((v606 >> 3) == 2)
            {
              if ((v606 & 7) != 0) {
                goto LABEL_2225;
              }
              unsigned int v618 = 0;
              while (1)
              {
                uint64_t v619 = *v2;
                uint64_t v620 = *(void *)&a1[v619];
                unint64_t v621 = v620 + 1;
                if (v620 == -1 || v621 > *(void *)&a1[*v3]) {
                  break;
                }
                int v622 = *(char *)(*(void *)&a1[*v5] + v620);
                *(void *)&a1[v619] = v621;
                if (v622 < 0)
                {
                  BOOL v31 = v618++ > 8;
                  if (!v31) {
                    continue;
                  }
                }
                goto LABEL_1367;
              }
LABEL_1401:
              a1[*v4] = 1;
              continue;
            }
            break;
          }
          if ((v606 >> 3) != 1)
          {
            if ((PBReaderSkipValueWithTag() & 1) == 0) {
              goto LABEL_2225;
            }
            continue;
          }
          break;
        }
        if ((v606 & 7) == 0)
        {
          unsigned int v613 = 0;
          while (1)
          {
            uint64_t v614 = *v2;
            uint64_t v615 = *(void *)&a1[v614];
            unint64_t v616 = v615 + 1;
            if (v615 == -1 || v616 > *(void *)&a1[*v3]) {
              goto LABEL_1401;
            }
            int v617 = *(char *)(*(void *)&a1[*v5] + v615);
            *(void *)&a1[v614] = v616;
            if (v617 < 0)
            {
              BOOL v31 = v613++ > 8;
              if (!v31) {
                continue;
              }
            }
            goto LABEL_1367;
          }
        }
LABEL_2225:
        PBReaderRecallMark();
LABEL_2226:
        PBReaderRecallMark();
        return 0;
      case 0x43u:
        if (v15 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_2226;
        }
        [a1 position];
        [a1 length];
        while (1)
        {
          int v47 = a1[*v4];
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_2221;
          }
          if (a1[*v4]) {
            goto LABEL_2225;
          }
          char v623 = 0;
          unsigned int v624 = 0;
          uint64_t v625 = 0;
          while (1)
          {
            uint64_t v626 = *v2;
            uint64_t v627 = *(void *)&a1[v626];
            unint64_t v628 = v627 + 1;
            if (v627 == -1 || v628 > *(void *)&a1[*v3]) {
              break;
            }
            char v629 = *(unsigned char *)(*(void *)&a1[*v5] + v627);
            *(void *)&a1[v626] = v628;
            v625 |= (unint64_t)(v629 & 0x7F) << v623;
            if ((v629 & 0x80) == 0) {
              goto LABEL_1417;
            }
            v623 += 7;
            BOOL v13 = v624++ >= 9;
            if (v13)
            {
              LOBYTE(v625) = 0;
              int v47 = a1[*v4];
              goto LABEL_1419;
            }
          }
          a1[*v4] = 1;
LABEL_1417:
          uint64_t v630 = *v4;
          int v47 = a1[v630];
          if (a1[v630]) {
            LOBYTE(v625) = 0;
          }
LABEL_1419:
          if (v47 || (v625 & 7) == 4) {
            goto LABEL_2221;
          }
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_2225;
          }
        }
      case 0x44u:
        if (v15 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_2226;
        }
        objc_msgSend(a1, "position", 0, 0);
        [a1 length];
LABEL_1428:
        while (2)
        {
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3] || a1[*v4]) {
            goto LABEL_2103;
          }
          char v632 = 0;
          unsigned int v633 = 0;
          unint64_t v634 = 0;
          while (2)
          {
            uint64_t v635 = *v2;
            uint64_t v636 = *(void *)&a1[v635];
            unint64_t v637 = v636 + 1;
            if (v636 == -1 || v637 > *(void *)&a1[*v3])
            {
              a1[*v4] = 1;
            }
            else
            {
              char v638 = *(unsigned char *)(*(void *)&a1[*v5] + v636);
              *(void *)&a1[v635] = v637;
              v634 |= (unint64_t)(v638 & 0x7F) << v632;
              if (v638 < 0)
              {
                v632 += 7;
                BOOL v13 = v633++ >= 9;
                if (v13)
                {
                  unint64_t v634 = 0;
                  int v639 = a1[*v4];
                  goto LABEL_1440;
                }
                continue;
              }
            }
            break;
          }
          int v639 = a1[*v4];
          if (a1[*v4]) {
            unint64_t v634 = 0;
          }
LABEL_1440:
          int v640 = v634 & 7;
          if (v639) {
            BOOL v641 = 1;
          }
          else {
            BOOL v641 = v640 == 4;
          }
          if (!v641)
          {
            switch((v634 >> 3))
            {
              case 1u:
              case 2u:
                if (v640 != 2 || !PBReaderPlaceMark() || !GEOPDDeparturePredicateIsValid(a1)) {
                  goto LABEL_2225;
                }
                goto LABEL_1454;
              case 3u:
                if (v640 != 2 || !PBReaderPlaceMark() || !GEOPDTimeRangeIsValid(a1)) {
                  goto LABEL_2225;
                }
LABEL_1454:
                PBReaderRecallMark();
                continue;
              case 4u:
                if ((v634 & 7) != 0) {
                  goto LABEL_2225;
                }
                unsigned int v642 = 0;
                break;
              default:
                if ((PBReaderSkipValueWithTag() & 1) == 0) {
                  goto LABEL_2225;
                }
                continue;
            }
            do
            {
              uint64_t v643 = *v2;
              uint64_t v644 = *(void *)&a1[v643];
              unint64_t v645 = v644 + 1;
              if (v644 == -1 || v645 > *(void *)&a1[*v3])
              {
                a1[*v4] = 1;
                goto LABEL_1428;
              }
              int v646 = *(char *)(*(void *)&a1[*v5] + v644);
              *(void *)&a1[v643] = v645;
              if ((v646 & 0x80000000) == 0) {
                break;
              }
              BOOL v31 = v642++ > 8;
            }
            while (!v31);
            continue;
          }
          goto LABEL_2103;
        }
      case 0x45u:
        if (v15 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_2226;
        }
        [a1 position];
        [a1 length];
        while (1)
        {
          int v47 = a1[*v4];
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_2221;
          }
          if (a1[*v4]) {
            goto LABEL_2225;
          }
          char v647 = 0;
          unsigned int v648 = 0;
          uint64_t v649 = 0;
          while (1)
          {
            uint64_t v650 = *v2;
            uint64_t v651 = *(void *)&a1[v650];
            unint64_t v652 = v651 + 1;
            if (v651 == -1 || v652 > *(void *)&a1[*v3]) {
              break;
            }
            char v653 = *(unsigned char *)(*(void *)&a1[*v5] + v651);
            *(void *)&a1[v650] = v652;
            v649 |= (unint64_t)(v653 & 0x7F) << v647;
            if ((v653 & 0x80) == 0) {
              goto LABEL_1477;
            }
            v647 += 7;
            BOOL v13 = v648++ >= 9;
            if (v13)
            {
              LOBYTE(v649) = 0;
              int v47 = a1[*v4];
              goto LABEL_1479;
            }
          }
          a1[*v4] = 1;
LABEL_1477:
          uint64_t v654 = *v4;
          int v47 = a1[v654];
          if (a1[v654]) {
            LOBYTE(v649) = 0;
          }
LABEL_1479:
          if (v47 || (v649 & 7) == 4) {
            goto LABEL_2221;
          }
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_2225;
          }
        }
      case 0x46u:
        if (v15 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_2226;
        }
        [a1 position];
        [a1 length];
        while (1)
        {
          int v47 = a1[*v4];
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_2221;
          }
          if (a1[*v4]) {
            goto LABEL_2225;
          }
          char v656 = 0;
          unsigned int v657 = 0;
          uint64_t v658 = 0;
          while (1)
          {
            uint64_t v659 = *v2;
            uint64_t v660 = *(void *)&a1[v659];
            unint64_t v661 = v660 + 1;
            if (v660 == -1 || v661 > *(void *)&a1[*v3]) {
              break;
            }
            char v662 = *(unsigned char *)(*(void *)&a1[*v5] + v660);
            *(void *)&a1[v659] = v661;
            v658 |= (unint64_t)(v662 & 0x7F) << v656;
            if ((v662 & 0x80) == 0) {
              goto LABEL_1498;
            }
            v656 += 7;
            BOOL v13 = v657++ >= 9;
            if (v13)
            {
              LOBYTE(v658) = 0;
              int v47 = a1[*v4];
              goto LABEL_1500;
            }
          }
          a1[*v4] = 1;
LABEL_1498:
          uint64_t v663 = *v4;
          int v47 = a1[v663];
          if (a1[v663]) {
            LOBYTE(v658) = 0;
          }
LABEL_1500:
          if (v47 || (v658 & 7) == 4) {
            goto LABEL_2221;
          }
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_2225;
          }
        }
      case 0x47u:
        if (v15 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_2226;
        }
        [a1 position];
        [a1 length];
LABEL_1509:
        while (2)
        {
          while (2)
          {
            if (*(void *)&a1[*v2] >= *(void *)&a1[*v3] || a1[*v4]) {
              goto LABEL_2220;
            }
            char v665 = 0;
            unsigned int v666 = 0;
            unint64_t v667 = 0;
            while (1)
            {
              uint64_t v668 = *v2;
              uint64_t v669 = *(void *)&a1[v668];
              unint64_t v670 = v669 + 1;
              if (v669 == -1 || v670 > *(void *)&a1[*v3]) {
                break;
              }
              char v671 = *(unsigned char *)(*(void *)&a1[*v5] + v669);
              *(void *)&a1[v668] = v670;
              v667 |= (unint64_t)(v671 & 0x7F) << v665;
              if ((v671 & 0x80) == 0) {
                goto LABEL_1519;
              }
              v665 += 7;
              BOOL v13 = v666++ >= 9;
              if (v13)
              {
                unint64_t v667 = 0;
                int v672 = a1[*v4];
                goto LABEL_1521;
              }
            }
            a1[*v4] = 1;
LABEL_1519:
            int v672 = a1[*v4];
            if (a1[*v4]) {
              unint64_t v667 = 0;
            }
LABEL_1521:
            if (v672 || (v667 & 7) == 4) {
              goto LABEL_2220;
            }
            if ((v667 >> 3) != 1)
            {
              if (!PBReaderSkipValueWithTag()) {
                goto LABEL_2225;
              }
              continue;
            }
            break;
          }
          if ((v667 & 7) == 0)
          {
            unsigned int v674 = 0;
            do
            {
              uint64_t v675 = *v2;
              uint64_t v676 = *(void *)&a1[v675];
              unint64_t v677 = v676 + 1;
              if (v676 == -1 || v677 > *(void *)&a1[*v3])
              {
                a1[*v4] = 1;
                goto LABEL_1509;
              }
              int v678 = *(char *)(*(void *)&a1[*v5] + v676);
              *(void *)&a1[v675] = v677;
              if ((v678 & 0x80000000) == 0) {
                break;
              }
              BOOL v31 = v674++ > 8;
            }
            while (!v31);
            continue;
          }
          goto LABEL_2225;
        }
      case 0x49u:
        if (v15 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_2226;
        }
        [a1 position];
        [a1 length];
        while (1)
        {
          int v47 = a1[*v4];
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_2221;
          }
          if (a1[*v4]) {
            goto LABEL_2225;
          }
          char v679 = 0;
          unsigned int v680 = 0;
          uint64_t v681 = 0;
          while (1)
          {
            uint64_t v682 = *v2;
            uint64_t v683 = *(void *)&a1[v682];
            unint64_t v684 = v683 + 1;
            if (v683 == -1 || v684 > *(void *)&a1[*v3]) {
              break;
            }
            char v685 = *(unsigned char *)(*(void *)&a1[*v5] + v683);
            *(void *)&a1[v682] = v684;
            v681 |= (unint64_t)(v685 & 0x7F) << v679;
            if ((v685 & 0x80) == 0) {
              goto LABEL_1550;
            }
            v679 += 7;
            BOOL v13 = v680++ >= 9;
            if (v13)
            {
              LOBYTE(v681) = 0;
              int v47 = a1[*v4];
              goto LABEL_1552;
            }
          }
          a1[*v4] = 1;
LABEL_1550:
          uint64_t v686 = *v4;
          int v47 = a1[v686];
          if (a1[v686]) {
            LOBYTE(v681) = 0;
          }
LABEL_1552:
          if (v47 || (v681 & 7) == 4) {
            goto LABEL_2221;
          }
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_2225;
          }
        }
      case 0x4Au:
        if (v15 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_2226;
        }
        objc_msgSend(a1, "position", 0, 0);
        [a1 length];
        while (2)
        {
          while (2)
          {
            if (*(void *)&a1[*v2] >= *(void *)&a1[*v3] || a1[*v4]) {
              goto LABEL_2103;
            }
            char v688 = 0;
            unsigned int v689 = 0;
            unint64_t v690 = 0;
            while (1)
            {
              uint64_t v691 = *v2;
              uint64_t v692 = *(void *)&a1[v691];
              unint64_t v693 = v692 + 1;
              if (v692 == -1 || v693 > *(void *)&a1[*v3]) {
                break;
              }
              char v694 = *(unsigned char *)(*(void *)&a1[*v5] + v692);
              *(void *)&a1[v691] = v693;
              v690 |= (unint64_t)(v694 & 0x7F) << v688;
              if ((v694 & 0x80) == 0) {
                goto LABEL_1571;
              }
              v688 += 7;
              BOOL v13 = v689++ >= 9;
              if (v13)
              {
                unint64_t v690 = 0;
                int v695 = a1[*v4];
                goto LABEL_1573;
              }
            }
            a1[*v4] = 1;
LABEL_1571:
            int v695 = a1[*v4];
            if (a1[*v4]) {
              unint64_t v690 = 0;
            }
LABEL_1573:
            int v696 = v690 & 7;
            if (v695 || v696 == 4) {
              goto LABEL_2103;
            }
            if ((v690 >> 3) != 1)
            {
              if ((PBReaderSkipValueWithTag() & 1) == 0) {
                goto LABEL_2225;
              }
              continue;
            }
            break;
          }
          if (v696 == 2 && PBReaderPlaceMark() && GEOPDMapsIdentifierIsValid(a1))
          {
            PBReaderRecallMark();
            continue;
          }
          goto LABEL_2225;
        }
      case 0x4Cu:
        if (v15 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_2226;
        }
        [a1 position];
        [a1 length];
        while (1)
        {
          int v47 = a1[*v4];
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_2221;
          }
          if (a1[*v4]) {
            goto LABEL_2225;
          }
          char v698 = 0;
          unsigned int v699 = 0;
          uint64_t v700 = 0;
          while (1)
          {
            uint64_t v701 = *v2;
            uint64_t v702 = *(void *)&a1[v701];
            unint64_t v703 = v702 + 1;
            if (v702 == -1 || v703 > *(void *)&a1[*v3]) {
              break;
            }
            char v704 = *(unsigned char *)(*(void *)&a1[*v5] + v702);
            *(void *)&a1[v701] = v703;
            v700 |= (unint64_t)(v704 & 0x7F) << v698;
            if ((v704 & 0x80) == 0) {
              goto LABEL_1597;
            }
            v698 += 7;
            BOOL v13 = v699++ >= 9;
            if (v13)
            {
              LOBYTE(v700) = 0;
              int v47 = a1[*v4];
              goto LABEL_1599;
            }
          }
          a1[*v4] = 1;
LABEL_1597:
          uint64_t v705 = *v4;
          int v47 = a1[v705];
          if (a1[v705]) {
            LOBYTE(v700) = 0;
          }
LABEL_1599:
          if (v47 || (v700 & 7) == 4) {
            goto LABEL_2221;
          }
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_2225;
          }
        }
      case 0x4Du:
        if (v15 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_2226;
        }
        [a1 position];
        [a1 length];
        while (1)
        {
          int v47 = a1[*v4];
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_2221;
          }
          if (a1[*v4]) {
            goto LABEL_2225;
          }
          char v707 = 0;
          unsigned int v708 = 0;
          uint64_t v709 = 0;
          while (1)
          {
            uint64_t v710 = *v2;
            uint64_t v711 = *(void *)&a1[v710];
            unint64_t v712 = v711 + 1;
            if (v711 == -1 || v712 > *(void *)&a1[*v3]) {
              break;
            }
            char v713 = *(unsigned char *)(*(void *)&a1[*v5] + v711);
            *(void *)&a1[v710] = v712;
            v709 |= (unint64_t)(v713 & 0x7F) << v707;
            if ((v713 & 0x80) == 0) {
              goto LABEL_1618;
            }
            v707 += 7;
            BOOL v13 = v708++ >= 9;
            if (v13)
            {
              LOBYTE(v709) = 0;
              int v47 = a1[*v4];
              goto LABEL_1620;
            }
          }
          a1[*v4] = 1;
LABEL_1618:
          uint64_t v714 = *v4;
          int v47 = a1[v714];
          if (a1[v714]) {
            LOBYTE(v709) = 0;
          }
LABEL_1620:
          if (v47 || (v709 & 7) == 4) {
            goto LABEL_2221;
          }
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_2225;
          }
        }
      case 0x4Eu:
        if (v15 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_2226;
        }
        [a1 position];
        [a1 length];
        while (1)
        {
          int v47 = a1[*v4];
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_2221;
          }
          if (a1[*v4]) {
            goto LABEL_2225;
          }
          char v716 = 0;
          unsigned int v717 = 0;
          uint64_t v718 = 0;
          while (1)
          {
            uint64_t v719 = *v2;
            uint64_t v720 = *(void *)&a1[v719];
            unint64_t v721 = v720 + 1;
            if (v720 == -1 || v721 > *(void *)&a1[*v3]) {
              break;
            }
            char v722 = *(unsigned char *)(*(void *)&a1[*v5] + v720);
            *(void *)&a1[v719] = v721;
            v718 |= (unint64_t)(v722 & 0x7F) << v716;
            if ((v722 & 0x80) == 0) {
              goto LABEL_1639;
            }
            v716 += 7;
            BOOL v13 = v717++ >= 9;
            if (v13)
            {
              LOBYTE(v718) = 0;
              int v47 = a1[*v4];
              goto LABEL_1641;
            }
          }
          a1[*v4] = 1;
LABEL_1639:
          uint64_t v723 = *v4;
          int v47 = a1[v723];
          if (a1[v723]) {
            LOBYTE(v718) = 0;
          }
LABEL_1641:
          if (v47 || (v718 & 7) == 4) {
            goto LABEL_2221;
          }
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_2225;
          }
        }
      case 0x51u:
        if (v15 == 2 && PBReaderPlaceMark() && GEOPDVenueInfoFilterIsValid((unsigned __int8 *)a1)) {
          goto LABEL_2222;
        }
        goto LABEL_2226;
      case 0x52u:
        if (v15 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_2226;
        }
        [a1 position];
        [a1 length];
        while (1)
        {
          int v47 = a1[*v4];
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_2221;
          }
          if (a1[*v4]) {
            goto LABEL_2225;
          }
          char v725 = 0;
          unsigned int v726 = 0;
          uint64_t v727 = 0;
          while (1)
          {
            uint64_t v728 = *v2;
            uint64_t v729 = *(void *)&a1[v728];
            unint64_t v730 = v729 + 1;
            if (v729 == -1 || v730 > *(void *)&a1[*v3]) {
              break;
            }
            char v731 = *(unsigned char *)(*(void *)&a1[*v5] + v729);
            *(void *)&a1[v728] = v730;
            v727 |= (unint64_t)(v731 & 0x7F) << v725;
            if ((v731 & 0x80) == 0) {
              goto LABEL_1664;
            }
            v725 += 7;
            BOOL v13 = v726++ >= 9;
            if (v13)
            {
              LOBYTE(v727) = 0;
              int v47 = a1[*v4];
              goto LABEL_1666;
            }
          }
          a1[*v4] = 1;
LABEL_1664:
          uint64_t v732 = *v4;
          int v47 = a1[v732];
          if (a1[v732]) {
            LOBYTE(v727) = 0;
          }
LABEL_1666:
          if (v47 || (v727 & 7) == 4) {
            goto LABEL_2221;
          }
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_2225;
          }
        }
      case 0x53u:
        if (v15 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_2226;
        }
        [a1 position];
        [a1 length];
        while (1)
        {
          int v47 = a1[*v4];
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_2221;
          }
          if (a1[*v4]) {
            goto LABEL_2225;
          }
          char v734 = 0;
          unsigned int v735 = 0;
          uint64_t v736 = 0;
          while (1)
          {
            uint64_t v737 = *v2;
            uint64_t v738 = *(void *)&a1[v737];
            unint64_t v739 = v738 + 1;
            if (v738 == -1 || v739 > *(void *)&a1[*v3]) {
              break;
            }
            char v740 = *(unsigned char *)(*(void *)&a1[*v5] + v738);
            *(void *)&a1[v737] = v739;
            v736 |= (unint64_t)(v740 & 0x7F) << v734;
            if ((v740 & 0x80) == 0) {
              goto LABEL_1685;
            }
            v734 += 7;
            BOOL v13 = v735++ >= 9;
            if (v13)
            {
              LOBYTE(v736) = 0;
              int v47 = a1[*v4];
              goto LABEL_1687;
            }
          }
          a1[*v4] = 1;
LABEL_1685:
          uint64_t v741 = *v4;
          int v47 = a1[v741];
          if (a1[v741]) {
            LOBYTE(v736) = 0;
          }
LABEL_1687:
          if (v47 || (v736 & 7) == 4) {
            goto LABEL_2221;
          }
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_2225;
          }
        }
      case 0x54u:
        if (v15 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_2226;
        }
        objc_msgSend(a1, "position", 0, 0);
        [a1 length];
LABEL_1696:
        while (2)
        {
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3] || a1[*v4]) {
            goto LABEL_2103;
          }
          char v743 = 0;
          unsigned int v744 = 0;
          unint64_t v745 = 0;
          while (2)
          {
            uint64_t v746 = *v2;
            uint64_t v747 = *(void *)&a1[v746];
            unint64_t v748 = v747 + 1;
            if (v747 == -1 || v748 > *(void *)&a1[*v3])
            {
              a1[*v4] = 1;
            }
            else
            {
              char v749 = *(unsigned char *)(*(void *)&a1[*v5] + v747);
              *(void *)&a1[v746] = v748;
              v745 |= (unint64_t)(v749 & 0x7F) << v743;
              if (v749 < 0)
              {
                v743 += 7;
                BOOL v13 = v744++ >= 9;
                if (v13)
                {
                  unint64_t v745 = 0;
                  int v750 = a1[*v4];
                  goto LABEL_1708;
                }
                continue;
              }
            }
            break;
          }
          int v750 = a1[*v4];
          if (a1[*v4]) {
            unint64_t v745 = 0;
          }
LABEL_1708:
          int v751 = v745 & 7;
          if (v750) {
            BOOL v752 = 1;
          }
          else {
            BOOL v752 = v751 == 4;
          }
          if (!v752)
          {
            switch((v745 >> 3))
            {
              case 1u:
                if (v751 != 2 || !PBReaderPlaceMark() || !GEOPDPhotoSizeFilterValueIsValid(a1)) {
                  goto LABEL_2225;
                }
                PBReaderRecallMark();
                continue;
              case 2u:
                if (v751 == 2) {
                  goto LABEL_1718;
                }
                goto LABEL_2225;
              case 3u:
                if ((v745 & 7) != 0) {
                  goto LABEL_2225;
                }
                unsigned int v753 = 0;
                while (1)
                {
                  uint64_t v754 = *v2;
                  uint64_t v755 = *(void *)&a1[v754];
                  unint64_t v756 = v755 + 1;
                  if (v755 == -1 || v756 > *(void *)&a1[*v3]) {
                    goto LABEL_1752;
                  }
                  int v757 = *(char *)(*(void *)&a1[*v5] + v755);
                  *(void *)&a1[v754] = v756;
                  if (v757 < 0)
                  {
                    BOOL v31 = v753++ > 8;
                    if (!v31) {
                      continue;
                    }
                  }
                  goto LABEL_1696;
                }
              case 4u:
                if ((v745 & 7) != 0) {
                  goto LABEL_2225;
                }
                unsigned int v758 = 0;
                while (1)
                {
                  uint64_t v759 = *v2;
                  uint64_t v760 = *(void *)&a1[v759];
                  unint64_t v761 = v760 + 1;
                  if (v760 == -1 || v761 > *(void *)&a1[*v3]) {
                    goto LABEL_1752;
                  }
                  int v762 = *(char *)(*(void *)&a1[*v5] + v760);
                  *(void *)&a1[v759] = v761;
                  if (v762 < 0)
                  {
                    BOOL v31 = v758++ > 8;
                    if (!v31) {
                      continue;
                    }
                  }
                  goto LABEL_1696;
                }
              case 5u:
                if ((v745 & 7) != 0) {
                  goto LABEL_2225;
                }
                unsigned int v763 = 0;
                while (1)
                {
                  uint64_t v764 = *v2;
                  uint64_t v765 = *(void *)&a1[v764];
                  unint64_t v766 = v765 + 1;
                  if (v765 == -1 || v766 > *(void *)&a1[*v3]) {
                    goto LABEL_1752;
                  }
                  int v767 = *(char *)(*(void *)&a1[*v5] + v765);
                  *(void *)&a1[v764] = v766;
                  if (v767 < 0)
                  {
                    BOOL v31 = v763++ > 8;
                    if (!v31) {
                      continue;
                    }
                  }
                  goto LABEL_1696;
                }
              case 6u:
                if ((v745 & 7) != 0) {
                  goto LABEL_2225;
                }
                unsigned int v768 = 0;
                do
                {
                  uint64_t v769 = *v2;
                  uint64_t v770 = *(void *)&a1[v769];
                  unint64_t v771 = v770 + 1;
                  if (v770 == -1 || v771 > *(void *)&a1[*v3])
                  {
LABEL_1752:
                    a1[*v4] = 1;
                    goto LABEL_1696;
                  }
                  int v772 = *(char *)(*(void *)&a1[*v5] + v770);
                  *(void *)&a1[v769] = v771;
                  if ((v772 & 0x80000000) == 0) {
                    break;
                  }
                  BOOL v31 = v768++ > 8;
                }
                while (!v31);
                break;
              default:
LABEL_1718:
                if ((PBReaderSkipValueWithTag() & 1) == 0) {
                  goto LABEL_2225;
                }
                continue;
            }
            continue;
          }
          goto LABEL_2103;
        }
      case 0x55u:
        if (v15 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_2226;
        }
        [a1 position];
        [a1 length];
        while (1)
        {
          int v47 = a1[*v4];
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_2221;
          }
          if (a1[*v4]) {
            goto LABEL_2225;
          }
          char v773 = 0;
          unsigned int v774 = 0;
          uint64_t v775 = 0;
          while (1)
          {
            uint64_t v776 = *v2;
            uint64_t v777 = *(void *)&a1[v776];
            unint64_t v778 = v777 + 1;
            if (v777 == -1 || v778 > *(void *)&a1[*v3]) {
              break;
            }
            char v779 = *(unsigned char *)(*(void *)&a1[*v5] + v777);
            *(void *)&a1[v776] = v778;
            v775 |= (unint64_t)(v779 & 0x7F) << v773;
            if ((v779 & 0x80) == 0) {
              goto LABEL_1766;
            }
            v773 += 7;
            BOOL v13 = v774++ >= 9;
            if (v13)
            {
              LOBYTE(v775) = 0;
              int v47 = a1[*v4];
              goto LABEL_1768;
            }
          }
          a1[*v4] = 1;
LABEL_1766:
          uint64_t v780 = *v4;
          int v47 = a1[v780];
          if (a1[v780]) {
            LOBYTE(v775) = 0;
          }
LABEL_1768:
          if (v47 || (v775 & 7) == 4) {
            goto LABEL_2221;
          }
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_2225;
          }
        }
      case 0x56u:
        if (v15 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_2226;
        }
        [a1 position];
        [a1 length];
        while (1)
        {
          int v47 = a1[*v4];
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_2221;
          }
          if (a1[*v4]) {
            goto LABEL_2225;
          }
          char v782 = 0;
          unsigned int v783 = 0;
          uint64_t v784 = 0;
          while (1)
          {
            uint64_t v785 = *v2;
            uint64_t v786 = *(void *)&a1[v785];
            unint64_t v787 = v786 + 1;
            if (v786 == -1 || v787 > *(void *)&a1[*v3]) {
              break;
            }
            char v788 = *(unsigned char *)(*(void *)&a1[*v5] + v786);
            *(void *)&a1[v785] = v787;
            v784 |= (unint64_t)(v788 & 0x7F) << v782;
            if ((v788 & 0x80) == 0) {
              goto LABEL_1787;
            }
            v782 += 7;
            BOOL v13 = v783++ >= 9;
            if (v13)
            {
              LOBYTE(v784) = 0;
              int v47 = a1[*v4];
              goto LABEL_1789;
            }
          }
          a1[*v4] = 1;
LABEL_1787:
          uint64_t v789 = *v4;
          int v47 = a1[v789];
          if (a1[v789]) {
            LOBYTE(v784) = 0;
          }
LABEL_1789:
          if (v47 || (v784 & 7) == 4) {
            goto LABEL_2221;
          }
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_2225;
          }
        }
      case 0x57u:
        if (v15 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_2226;
        }
        [a1 position];
        [a1 length];
        while (1)
        {
          int v47 = a1[*v4];
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_2221;
          }
          if (a1[*v4]) {
            goto LABEL_2225;
          }
          char v791 = 0;
          unsigned int v792 = 0;
          uint64_t v793 = 0;
          while (1)
          {
            uint64_t v794 = *v2;
            uint64_t v795 = *(void *)&a1[v794];
            unint64_t v796 = v795 + 1;
            if (v795 == -1 || v796 > *(void *)&a1[*v3]) {
              break;
            }
            char v797 = *(unsigned char *)(*(void *)&a1[*v5] + v795);
            *(void *)&a1[v794] = v796;
            v793 |= (unint64_t)(v797 & 0x7F) << v791;
            if ((v797 & 0x80) == 0) {
              goto LABEL_1808;
            }
            v791 += 7;
            BOOL v13 = v792++ >= 9;
            if (v13)
            {
              LOBYTE(v793) = 0;
              int v47 = a1[*v4];
              goto LABEL_1810;
            }
          }
          a1[*v4] = 1;
LABEL_1808:
          uint64_t v798 = *v4;
          int v47 = a1[v798];
          if (a1[v798]) {
            LOBYTE(v793) = 0;
          }
LABEL_1810:
          if (v47 || (v793 & 7) == 4) {
            goto LABEL_2221;
          }
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_2225;
          }
        }
      case 0x58u:
        if (v15 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_2226;
        }
        [a1 position];
        [a1 length];
        while (1)
        {
          int v47 = a1[*v4];
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_2221;
          }
          if (a1[*v4]) {
            goto LABEL_2225;
          }
          char v800 = 0;
          unsigned int v801 = 0;
          uint64_t v802 = 0;
          while (1)
          {
            uint64_t v803 = *v2;
            uint64_t v804 = *(void *)&a1[v803];
            unint64_t v805 = v804 + 1;
            if (v804 == -1 || v805 > *(void *)&a1[*v3]) {
              break;
            }
            char v806 = *(unsigned char *)(*(void *)&a1[*v5] + v804);
            *(void *)&a1[v803] = v805;
            v802 |= (unint64_t)(v806 & 0x7F) << v800;
            if ((v806 & 0x80) == 0) {
              goto LABEL_1829;
            }
            v800 += 7;
            BOOL v13 = v801++ >= 9;
            if (v13)
            {
              LOBYTE(v802) = 0;
              int v47 = a1[*v4];
              goto LABEL_1831;
            }
          }
          a1[*v4] = 1;
LABEL_1829:
          uint64_t v807 = *v4;
          int v47 = a1[v807];
          if (a1[v807]) {
            LOBYTE(v802) = 0;
          }
LABEL_1831:
          if (v47 || (v802 & 7) == 4) {
            goto LABEL_2221;
          }
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_2225;
          }
        }
      case 0x59u:
        if (v15 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_2226;
        }
        [a1 position];
        [a1 length];
        while (1)
        {
          int v47 = a1[*v4];
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_2221;
          }
          if (a1[*v4]) {
            goto LABEL_2225;
          }
          char v809 = 0;
          unsigned int v810 = 0;
          uint64_t v811 = 0;
          while (1)
          {
            uint64_t v812 = *v2;
            uint64_t v813 = *(void *)&a1[v812];
            unint64_t v814 = v813 + 1;
            if (v813 == -1 || v814 > *(void *)&a1[*v3]) {
              break;
            }
            char v815 = *(unsigned char *)(*(void *)&a1[*v5] + v813);
            *(void *)&a1[v812] = v814;
            v811 |= (unint64_t)(v815 & 0x7F) << v809;
            if ((v815 & 0x80) == 0) {
              goto LABEL_1850;
            }
            v809 += 7;
            BOOL v13 = v810++ >= 9;
            if (v13)
            {
              LOBYTE(v811) = 0;
              int v47 = a1[*v4];
              goto LABEL_1852;
            }
          }
          a1[*v4] = 1;
LABEL_1850:
          uint64_t v816 = *v4;
          int v47 = a1[v816];
          if (a1[v816]) {
            LOBYTE(v811) = 0;
          }
LABEL_1852:
          if (v47 || (v811 & 7) == 4) {
            goto LABEL_2221;
          }
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_2225;
          }
        }
      case 0x5Bu:
        if (v15 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_2226;
        }
        [a1 position];
        [a1 length];
        while (1)
        {
          int v47 = a1[*v4];
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_2221;
          }
          if (a1[*v4]) {
            goto LABEL_2225;
          }
          char v818 = 0;
          unsigned int v819 = 0;
          uint64_t v820 = 0;
          while (1)
          {
            uint64_t v821 = *v2;
            uint64_t v822 = *(void *)&a1[v821];
            unint64_t v823 = v822 + 1;
            if (v822 == -1 || v823 > *(void *)&a1[*v3]) {
              break;
            }
            char v824 = *(unsigned char *)(*(void *)&a1[*v5] + v822);
            *(void *)&a1[v821] = v823;
            v820 |= (unint64_t)(v824 & 0x7F) << v818;
            if ((v824 & 0x80) == 0) {
              goto LABEL_1871;
            }
            v818 += 7;
            BOOL v13 = v819++ >= 9;
            if (v13)
            {
              LOBYTE(v820) = 0;
              int v47 = a1[*v4];
              goto LABEL_1873;
            }
          }
          a1[*v4] = 1;
LABEL_1871:
          uint64_t v825 = *v4;
          int v47 = a1[v825];
          if (a1[v825]) {
            LOBYTE(v820) = 0;
          }
LABEL_1873:
          if (v47 || (v820 & 7) == 4) {
            goto LABEL_2221;
          }
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_2225;
          }
        }
      case 0x5Du:
        if (v15 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_2226;
        }
        [a1 position];
        [a1 length];
        while (1)
        {
          int v47 = a1[*v4];
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_2221;
          }
          if (a1[*v4]) {
            goto LABEL_2225;
          }
          char v827 = 0;
          unsigned int v828 = 0;
          uint64_t v829 = 0;
          while (1)
          {
            uint64_t v830 = *v2;
            uint64_t v831 = *(void *)&a1[v830];
            unint64_t v832 = v831 + 1;
            if (v831 == -1 || v832 > *(void *)&a1[*v3]) {
              break;
            }
            char v833 = *(unsigned char *)(*(void *)&a1[*v5] + v831);
            *(void *)&a1[v830] = v832;
            v829 |= (unint64_t)(v833 & 0x7F) << v827;
            if ((v833 & 0x80) == 0) {
              goto LABEL_1892;
            }
            v827 += 7;
            BOOL v13 = v828++ >= 9;
            if (v13)
            {
              LOBYTE(v829) = 0;
              int v47 = a1[*v4];
              goto LABEL_1894;
            }
          }
          a1[*v4] = 1;
LABEL_1892:
          uint64_t v834 = *v4;
          int v47 = a1[v834];
          if (a1[v834]) {
            LOBYTE(v829) = 0;
          }
LABEL_1894:
          if (v47 || (v829 & 7) == 4) {
            goto LABEL_2221;
          }
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_2225;
          }
        }
      case 0x5Eu:
        if (v15 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_2226;
        }
        objc_msgSend(a1, "position", 0, 0);
        [a1 length];
LABEL_1903:
        while (2)
        {
          while (2)
          {
            if (*(void *)&a1[*v2] >= *(void *)&a1[*v3] || a1[*v4]) {
              goto LABEL_2103;
            }
            char v836 = 0;
            unsigned int v837 = 0;
            unint64_t v838 = 0;
            while (1)
            {
              uint64_t v839 = *v2;
              uint64_t v840 = *(void *)&a1[v839];
              unint64_t v841 = v840 + 1;
              if (v840 == -1 || v841 > *(void *)&a1[*v3]) {
                break;
              }
              char v842 = *(unsigned char *)(*(void *)&a1[*v5] + v840);
              *(void *)&a1[v839] = v841;
              v838 |= (unint64_t)(v842 & 0x7F) << v836;
              if ((v842 & 0x80) == 0) {
                goto LABEL_1913;
              }
              v836 += 7;
              BOOL v13 = v837++ >= 9;
              if (v13)
              {
                unint64_t v838 = 0;
                int v843 = a1[*v4];
                goto LABEL_1915;
              }
            }
            a1[*v4] = 1;
LABEL_1913:
            int v843 = a1[*v4];
            if (a1[*v4]) {
              unint64_t v838 = 0;
            }
LABEL_1915:
            int v844 = v838 & 7;
            if (v843 || v844 == 4) {
              goto LABEL_2103;
            }
            if ((v838 >> 3) != 1)
            {
              if ((PBReaderSkipValueWithTag() & 1) == 0) {
                goto LABEL_2225;
              }
              continue;
            }
            break;
          }
          if (v844 == 2)
          {
            if (PBReaderPlaceMark())
            {
              while (1)
              {
LABEL_1930:
                if (*(void *)&a1[*v2] >= *(void *)&a1[*v3] || (unsigned int v851 = a1[*v4], a1[*v4]))
                {
                  PBReaderRecallMark();
                  goto LABEL_1903;
                }
                while (1)
                {
                  uint64_t v852 = *v2;
                  uint64_t v853 = *(void *)&a1[v852];
                  unint64_t v854 = v853 + 1;
                  if (v853 == -1 || v854 > *(void *)&a1[*v3]) {
                    break;
                  }
                  int v855 = *(char *)(*(void *)&a1[*v5] + v853);
                  *(void *)&a1[v852] = v854;
                  if (v855 < 0)
                  {
                    BOOL v13 = v851++ >= 9;
                    if (!v13) {
                      continue;
                    }
                  }
                  goto LABEL_1930;
                }
                a1[*v4] = 1;
              }
            }
          }
          else if ((v838 & 7) == 0)
          {
            do
            {
              uint64_t v846 = *v2;
              uint64_t v847 = *(void *)&a1[v846];
              unint64_t v848 = v847 + 1;
              if (v847 == -1 || v848 > *(void *)&a1[*v3])
              {
                a1[*v4] = 1;
                goto LABEL_1903;
              }
              int v849 = *(char *)(*(void *)&a1[*v5] + v847);
              *(void *)&a1[v846] = v848;
              if ((v849 & 0x80000000) == 0) {
                break;
              }
              unsigned int v850 = v844++;
            }
            while (v850 <= 8);
            continue;
          }
          goto LABEL_2225;
        }
      case 0x5Fu:
        if (v15 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_2226;
        }
        [a1 position];
        [a1 length];
        while (1)
        {
          int v47 = a1[*v4];
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_2221;
          }
          if (a1[*v4]) {
            goto LABEL_2225;
          }
          char v856 = 0;
          unsigned int v857 = 0;
          uint64_t v858 = 0;
          while (1)
          {
            uint64_t v859 = *v2;
            uint64_t v860 = *(void *)&a1[v859];
            unint64_t v861 = v860 + 1;
            if (v860 == -1 || v861 > *(void *)&a1[*v3]) {
              break;
            }
            char v862 = *(unsigned char *)(*(void *)&a1[*v5] + v860);
            *(void *)&a1[v859] = v861;
            v858 |= (unint64_t)(v862 & 0x7F) << v856;
            if ((v862 & 0x80) == 0) {
              goto LABEL_1954;
            }
            v856 += 7;
            BOOL v13 = v857++ >= 9;
            if (v13)
            {
              LOBYTE(v858) = 0;
              int v47 = a1[*v4];
              goto LABEL_1956;
            }
          }
          a1[*v4] = 1;
LABEL_1954:
          uint64_t v863 = *v4;
          int v47 = a1[v863];
          if (a1[v863]) {
            LOBYTE(v858) = 0;
          }
LABEL_1956:
          if (v47 || (v858 & 7) == 4) {
            goto LABEL_2221;
          }
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_2225;
          }
        }
      case 0x60u:
        if (v15 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_2226;
        }
        [a1 position];
        [a1 length];
        while (1)
        {
          int v47 = a1[*v4];
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_2221;
          }
          if (a1[*v4]) {
            goto LABEL_2225;
          }
          char v865 = 0;
          unsigned int v866 = 0;
          uint64_t v867 = 0;
          while (1)
          {
            uint64_t v868 = *v2;
            uint64_t v869 = *(void *)&a1[v868];
            unint64_t v870 = v869 + 1;
            if (v869 == -1 || v870 > *(void *)&a1[*v3]) {
              break;
            }
            char v871 = *(unsigned char *)(*(void *)&a1[*v5] + v869);
            *(void *)&a1[v868] = v870;
            v867 |= (unint64_t)(v871 & 0x7F) << v865;
            if ((v871 & 0x80) == 0) {
              goto LABEL_1975;
            }
            v865 += 7;
            BOOL v13 = v866++ >= 9;
            if (v13)
            {
              LOBYTE(v867) = 0;
              int v47 = a1[*v4];
              goto LABEL_1977;
            }
          }
          a1[*v4] = 1;
LABEL_1975:
          uint64_t v872 = *v4;
          int v47 = a1[v872];
          if (a1[v872]) {
            LOBYTE(v867) = 0;
          }
LABEL_1977:
          if (v47 || (v867 & 7) == 4) {
            goto LABEL_2221;
          }
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_2225;
          }
        }
      case 0x61u:
        if (v15 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_2226;
        }
        [a1 position];
        [a1 length];
        while (1)
        {
          int v47 = a1[*v4];
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_2221;
          }
          if (a1[*v4]) {
            goto LABEL_2225;
          }
          char v874 = 0;
          unsigned int v875 = 0;
          uint64_t v876 = 0;
          while (1)
          {
            uint64_t v877 = *v2;
            uint64_t v878 = *(void *)&a1[v877];
            unint64_t v879 = v878 + 1;
            if (v878 == -1 || v879 > *(void *)&a1[*v3]) {
              break;
            }
            char v880 = *(unsigned char *)(*(void *)&a1[*v5] + v878);
            *(void *)&a1[v877] = v879;
            v876 |= (unint64_t)(v880 & 0x7F) << v874;
            if ((v880 & 0x80) == 0) {
              goto LABEL_1996;
            }
            v874 += 7;
            BOOL v13 = v875++ >= 9;
            if (v13)
            {
              LOBYTE(v876) = 0;
              int v47 = a1[*v4];
              goto LABEL_1998;
            }
          }
          a1[*v4] = 1;
LABEL_1996:
          uint64_t v881 = *v4;
          int v47 = a1[v881];
          if (a1[v881]) {
            LOBYTE(v876) = 0;
          }
LABEL_1998:
          if (v47 || (v876 & 7) == 4) {
            goto LABEL_2221;
          }
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_2225;
          }
        }
      case 0x62u:
        if (v15 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_2226;
        }
        [a1 position];
        [a1 length];
LABEL_2007:
        while (2)
        {
          while (2)
          {
            if (*(void *)&a1[*v2] >= *(void *)&a1[*v3] || a1[*v4]) {
              goto LABEL_2220;
            }
            char v883 = 0;
            unsigned int v884 = 0;
            unint64_t v885 = 0;
            while (1)
            {
              uint64_t v886 = *v2;
              uint64_t v887 = *(void *)&a1[v886];
              unint64_t v888 = v887 + 1;
              if (v887 == -1 || v888 > *(void *)&a1[*v3]) {
                break;
              }
              char v889 = *(unsigned char *)(*(void *)&a1[*v5] + v887);
              *(void *)&a1[v886] = v888;
              v885 |= (unint64_t)(v889 & 0x7F) << v883;
              if ((v889 & 0x80) == 0) {
                goto LABEL_2017;
              }
              v883 += 7;
              BOOL v13 = v884++ >= 9;
              if (v13)
              {
                unint64_t v885 = 0;
                int v890 = a1[*v4];
                goto LABEL_2019;
              }
            }
            a1[*v4] = 1;
LABEL_2017:
            int v890 = a1[*v4];
            if (a1[*v4]) {
              unint64_t v885 = 0;
            }
LABEL_2019:
            if (v890 || (v885 & 7) == 4) {
              goto LABEL_2220;
            }
            if ((v885 >> 3) != 1)
            {
              if (!PBReaderSkipValueWithTag()) {
                goto LABEL_2225;
              }
              continue;
            }
            break;
          }
          if ((v885 & 7) == 0)
          {
            unsigned int v892 = 0;
            do
            {
              uint64_t v893 = *v2;
              uint64_t v894 = *(void *)&a1[v893];
              unint64_t v895 = v894 + 1;
              if (v894 == -1 || v895 > *(void *)&a1[*v3])
              {
                a1[*v4] = 1;
                goto LABEL_2007;
              }
              int v896 = *(char *)(*(void *)&a1[*v5] + v894);
              *(void *)&a1[v893] = v895;
              if ((v896 & 0x80000000) == 0) {
                break;
              }
              BOOL v31 = v892++ > 8;
            }
            while (!v31);
            continue;
          }
          goto LABEL_2225;
        }
      case 0x64u:
        if (v15 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_2226;
        }
        [a1 position];
        [a1 length];
        while (1)
        {
          int v47 = a1[*v4];
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_2221;
          }
          if (a1[*v4]) {
            goto LABEL_2225;
          }
          char v897 = 0;
          unsigned int v898 = 0;
          uint64_t v899 = 0;
          while (1)
          {
            uint64_t v900 = *v2;
            uint64_t v901 = *(void *)&a1[v900];
            unint64_t v902 = v901 + 1;
            if (v901 == -1 || v902 > *(void *)&a1[*v3]) {
              break;
            }
            char v903 = *(unsigned char *)(*(void *)&a1[*v5] + v901);
            *(void *)&a1[v900] = v902;
            v899 |= (unint64_t)(v903 & 0x7F) << v897;
            if ((v903 & 0x80) == 0) {
              goto LABEL_2048;
            }
            v897 += 7;
            BOOL v13 = v898++ >= 9;
            if (v13)
            {
              LOBYTE(v899) = 0;
              int v47 = a1[*v4];
              goto LABEL_2050;
            }
          }
          a1[*v4] = 1;
LABEL_2048:
          uint64_t v904 = *v4;
          int v47 = a1[v904];
          if (a1[v904]) {
            LOBYTE(v899) = 0;
          }
LABEL_2050:
          if (v47 || (v899 & 7) == 4) {
            goto LABEL_2221;
          }
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_2225;
          }
        }
      case 0x65u:
        if (v15 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_2226;
        }
        [a1 position];
        [a1 length];
        while (1)
        {
          int v47 = a1[*v4];
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_2221;
          }
          if (a1[*v4]) {
            goto LABEL_2225;
          }
          char v906 = 0;
          unsigned int v907 = 0;
          uint64_t v908 = 0;
          while (1)
          {
            uint64_t v909 = *v2;
            uint64_t v910 = *(void *)&a1[v909];
            unint64_t v911 = v910 + 1;
            if (v910 == -1 || v911 > *(void *)&a1[*v3]) {
              break;
            }
            char v912 = *(unsigned char *)(*(void *)&a1[*v5] + v910);
            *(void *)&a1[v909] = v911;
            v908 |= (unint64_t)(v912 & 0x7F) << v906;
            if ((v912 & 0x80) == 0) {
              goto LABEL_2069;
            }
            v906 += 7;
            BOOL v13 = v907++ >= 9;
            if (v13)
            {
              LOBYTE(v908) = 0;
              int v47 = a1[*v4];
              goto LABEL_2071;
            }
          }
          a1[*v4] = 1;
LABEL_2069:
          uint64_t v913 = *v4;
          int v47 = a1[v913];
          if (a1[v913]) {
            LOBYTE(v908) = 0;
          }
LABEL_2071:
          if (v47 || (v908 & 7) == 4) {
            goto LABEL_2221;
          }
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_2225;
          }
        }
      case 0x66u:
        if (v15 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_2226;
        }
        objc_msgSend(a1, "position", 0, 0);
        [a1 length];
        while (2)
        {
          if (*(void *)&a1[*v2] < *(void *)&a1[*v3] && !a1[*v4])
          {
            char v915 = 0;
            unsigned int v916 = 0;
            unint64_t v917 = 0;
            while (1)
            {
              uint64_t v918 = *v2;
              uint64_t v919 = *(void *)&a1[v918];
              unint64_t v920 = v919 + 1;
              if (v919 == -1 || v920 > *(void *)&a1[*v3]) {
                break;
              }
              char v921 = *(unsigned char *)(*(void *)&a1[*v5] + v919);
              *(void *)&a1[v918] = v920;
              v917 |= (unint64_t)(v921 & 0x7F) << v915;
              if ((v921 & 0x80) == 0) {
                goto LABEL_2090;
              }
              v915 += 7;
              BOOL v13 = v916++ >= 9;
              if (v13)
              {
                unint64_t v917 = 0;
                int v922 = a1[*v4];
                goto LABEL_2092;
              }
            }
            a1[*v4] = 1;
LABEL_2090:
            int v922 = a1[*v4];
            if (a1[*v4]) {
              unint64_t v917 = 0;
            }
LABEL_2092:
            int v923 = v917 & 7;
            if (!v922 && v923 != 4)
            {
              if ((v917 >> 3) != 1)
              {
                if ((PBReaderSkipValueWithTag() & 1) == 0) {
                  goto LABEL_2225;
                }
                continue;
              }
              if (v923 == 2 && PBReaderPlaceMark() && GEOPDPhotoSizeFilterValueIsValid(a1))
              {
                PBReaderRecallMark();
                continue;
              }
              goto LABEL_2225;
            }
          }
          break;
        }
LABEL_2103:
        int v925 = a1[*v4];
        PBReaderRecallMark();
        if (v925) {
          goto LABEL_2226;
        }
LABEL_2222:
        PBReaderRecallMark();
LABEL_2223:
        if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
          goto LABEL_2224;
        }
        continue;
      case 0x67u:
        if (v15 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_2226;
        }
        [a1 position];
        [a1 length];
        while (1)
        {
          int v47 = a1[*v4];
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_2221;
          }
          if (a1[*v4]) {
            goto LABEL_2225;
          }
          char v926 = 0;
          unsigned int v927 = 0;
          uint64_t v928 = 0;
          while (1)
          {
            uint64_t v929 = *v2;
            uint64_t v930 = *(void *)&a1[v929];
            unint64_t v931 = v930 + 1;
            if (v930 == -1 || v931 > *(void *)&a1[*v3]) {
              break;
            }
            char v932 = *(unsigned char *)(*(void *)&a1[*v5] + v930);
            *(void *)&a1[v929] = v931;
            v928 |= (unint64_t)(v932 & 0x7F) << v926;
            if ((v932 & 0x80) == 0) {
              goto LABEL_2118;
            }
            v926 += 7;
            BOOL v13 = v927++ >= 9;
            if (v13)
            {
              LOBYTE(v928) = 0;
              int v47 = a1[*v4];
              goto LABEL_2120;
            }
          }
          a1[*v4] = 1;
LABEL_2118:
          uint64_t v933 = *v4;
          int v47 = a1[v933];
          if (a1[v933]) {
            LOBYTE(v928) = 0;
          }
LABEL_2120:
          if (v47 || (v928 & 7) == 4) {
            goto LABEL_2221;
          }
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_2225;
          }
        }
      case 0x68u:
        if (v15 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_2226;
        }
        [a1 position];
        [a1 length];
        while (1)
        {
          int v47 = a1[*v4];
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_2221;
          }
          if (a1[*v4]) {
            goto LABEL_2225;
          }
          char v935 = 0;
          unsigned int v936 = 0;
          uint64_t v937 = 0;
          while (1)
          {
            uint64_t v938 = *v2;
            uint64_t v939 = *(void *)&a1[v938];
            unint64_t v940 = v939 + 1;
            if (v939 == -1 || v940 > *(void *)&a1[*v3]) {
              break;
            }
            char v941 = *(unsigned char *)(*(void *)&a1[*v5] + v939);
            *(void *)&a1[v938] = v940;
            v937 |= (unint64_t)(v941 & 0x7F) << v935;
            if ((v941 & 0x80) == 0) {
              goto LABEL_2139;
            }
            v935 += 7;
            BOOL v13 = v936++ >= 9;
            if (v13)
            {
              LOBYTE(v937) = 0;
              int v47 = a1[*v4];
              goto LABEL_2141;
            }
          }
          a1[*v4] = 1;
LABEL_2139:
          uint64_t v942 = *v4;
          int v47 = a1[v942];
          if (a1[v942]) {
            LOBYTE(v937) = 0;
          }
LABEL_2141:
          if (v47 || (v937 & 7) == 4) {
            goto LABEL_2221;
          }
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_2225;
          }
        }
      case 0x69u:
        if (v15 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_2226;
        }
        [a1 position];
        [a1 length];
        while (1)
        {
          int v47 = a1[*v4];
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_2221;
          }
          if (a1[*v4]) {
            goto LABEL_2225;
          }
          char v944 = 0;
          unsigned int v945 = 0;
          uint64_t v946 = 0;
          while (1)
          {
            uint64_t v947 = *v2;
            uint64_t v948 = *(void *)&a1[v947];
            unint64_t v949 = v948 + 1;
            if (v948 == -1 || v949 > *(void *)&a1[*v3]) {
              break;
            }
            char v950 = *(unsigned char *)(*(void *)&a1[*v5] + v948);
            *(void *)&a1[v947] = v949;
            v946 |= (unint64_t)(v950 & 0x7F) << v944;
            if ((v950 & 0x80) == 0) {
              goto LABEL_2160;
            }
            v944 += 7;
            BOOL v13 = v945++ >= 9;
            if (v13)
            {
              LOBYTE(v946) = 0;
              int v47 = a1[*v4];
              goto LABEL_2162;
            }
          }
          a1[*v4] = 1;
LABEL_2160:
          uint64_t v951 = *v4;
          int v47 = a1[v951];
          if (a1[v951]) {
            LOBYTE(v946) = 0;
          }
LABEL_2162:
          if (v47 || (v946 & 7) == 4) {
            goto LABEL_2221;
          }
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_2225;
          }
        }
      case 0x6Au:
        if (v15 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_2226;
        }
        [a1 position];
        [a1 length];
        while (1)
        {
          int v47 = a1[*v4];
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_2221;
          }
          if (a1[*v4]) {
            goto LABEL_2225;
          }
          char v953 = 0;
          unsigned int v954 = 0;
          uint64_t v955 = 0;
          while (1)
          {
            uint64_t v956 = *v2;
            uint64_t v957 = *(void *)&a1[v956];
            unint64_t v958 = v957 + 1;
            if (v957 == -1 || v958 > *(void *)&a1[*v3]) {
              break;
            }
            char v959 = *(unsigned char *)(*(void *)&a1[*v5] + v957);
            *(void *)&a1[v956] = v958;
            v955 |= (unint64_t)(v959 & 0x7F) << v953;
            if ((v959 & 0x80) == 0) {
              goto LABEL_2181;
            }
            v953 += 7;
            BOOL v13 = v954++ >= 9;
            if (v13)
            {
              LOBYTE(v955) = 0;
              int v47 = a1[*v4];
              goto LABEL_2183;
            }
          }
          a1[*v4] = 1;
LABEL_2181:
          uint64_t v960 = *v4;
          int v47 = a1[v960];
          if (a1[v960]) {
            LOBYTE(v955) = 0;
          }
LABEL_2183:
          if (v47 || (v955 & 7) == 4) {
            goto LABEL_2221;
          }
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_2225;
          }
        }
      case 0x6Bu:
        if (v15 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_2226;
        }
        [a1 position];
        [a1 length];
LABEL_2192:
        while (2)
        {
          if (*(void *)&a1[*v2] < *(void *)&a1[*v3] && !a1[*v4])
          {
            char v962 = 0;
            unsigned int v963 = 0;
            unint64_t v964 = 0;
            while (1)
            {
              uint64_t v965 = *v2;
              uint64_t v966 = *(void *)&a1[v965];
              unint64_t v967 = v966 + 1;
              if (v966 == -1 || v967 > *(void *)&a1[*v3]) {
                break;
              }
              char v968 = *(unsigned char *)(*(void *)&a1[*v5] + v966);
              *(void *)&a1[v965] = v967;
              v964 |= (unint64_t)(v968 & 0x7F) << v962;
              if ((v968 & 0x80) == 0) {
                goto LABEL_2202;
              }
              v962 += 7;
              BOOL v13 = v963++ >= 9;
              if (v13)
              {
                unint64_t v964 = 0;
                int v969 = a1[*v4];
                goto LABEL_2204;
              }
            }
            a1[*v4] = 1;
LABEL_2202:
            int v969 = a1[*v4];
            if (a1[*v4]) {
              unint64_t v964 = 0;
            }
LABEL_2204:
            if (!v969 && (v964 & 7) != 4)
            {
              if ((v964 >> 3) != 1)
              {
                if (!PBReaderSkipValueWithTag()) {
                  goto LABEL_2225;
                }
                continue;
              }
              if ((v964 & 7) == 0)
              {
                unsigned int v971 = 0;
                do
                {
                  uint64_t v972 = *v2;
                  uint64_t v973 = *(void *)&a1[v972];
                  unint64_t v974 = v973 + 1;
                  if (v973 == -1 || v974 > *(void *)&a1[*v3])
                  {
                    a1[*v4] = 1;
                    goto LABEL_2192;
                  }
                  int v975 = *(char *)(*(void *)&a1[*v5] + v973);
                  *(void *)&a1[v972] = v974;
                  if ((v975 & 0x80000000) == 0) {
                    break;
                  }
                  BOOL v31 = v971++ > 8;
                }
                while (!v31);
                continue;
              }
              goto LABEL_2225;
            }
          }
          break;
        }
LABEL_2220:
        int v47 = a1[*v4];
LABEL_2221:
        PBReaderRecallMark();
        if (v47) {
          goto LABEL_2226;
        }
        goto LABEL_2222;
      default:
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_2226;
        }
        goto LABEL_2223;
    }
  }
}

BOOL GEOPDETAFilterIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  char v2 = (int *)MEMORY[0x1E4F940E8];
  unint64_t v3 = (int *)MEMORY[0x1E4F940E0];
  int v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    BOOL v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        BOOL v13 = v7++ >= 9;
        if (v13)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 == 2)
          {
            if (!PBReaderPlaceMark()) {
              goto LABEL_87;
            }
            while (1)
            {
LABEL_76:
              if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
                goto LABEL_63;
              }
              unsigned int v38 = a1[*v4];
              if (a1[*v4]) {
                goto LABEL_63;
              }
              while (1)
              {
                uint64_t v39 = *v2;
                uint64_t v40 = *(void *)&a1[v39];
                unint64_t v41 = v40 + 1;
                if (v40 == -1 || v41 > *(void *)&a1[*v3]) {
                  break;
                }
                int v42 = *(char *)(*(void *)&a1[*v5] + v40);
                *(void *)&a1[v39] = v41;
                if (v42 < 0)
                {
                  BOOL v13 = v38++ >= 9;
                  if (!v13) {
                    continue;
                  }
                }
                goto LABEL_76;
              }
              a1[*v4] = 1;
            }
          }
          if ((v8 & 7) != 0) {
            goto LABEL_87;
          }
          while (1)
          {
            uint64_t v17 = *v2;
            uint64_t v18 = *(void *)&a1[v17];
            unint64_t v19 = v18 + 1;
            if (v18 == -1 || v19 > *(void *)&a1[*v3]) {
              goto LABEL_72;
            }
            int v20 = *(char *)(*(void *)&a1[*v5] + v18);
            *(void *)&a1[v17] = v19;
            if (v20 < 0)
            {
              unsigned int v21 = v15++;
              if (v21 <= 8) {
                continue;
              }
            }
            goto LABEL_73;
          }
        case 2u:
          if ((v8 & 7) != 0) {
            goto LABEL_87;
          }
          unsigned int v22 = 0;
          while (1)
          {
            uint64_t v23 = *v2;
            uint64_t v24 = *(void *)&a1[v23];
            unint64_t v25 = v24 + 1;
            if (v24 == -1 || v25 > *(void *)&a1[*v3]) {
              goto LABEL_72;
            }
            int v26 = *(char *)(*(void *)&a1[*v5] + v24);
            *(void *)&a1[v23] = v25;
            if (v26 < 0)
            {
              BOOL v27 = v22++ > 8;
              if (!v27) {
                continue;
              }
            }
            goto LABEL_73;
          }
        case 3u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOAutomobileOptionsIsValid(a1)) {
            goto LABEL_87;
          }
          goto LABEL_63;
        case 4u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOTransitOptionsIsValid(a1)) {
            goto LABEL_87;
          }
          goto LABEL_63;
        case 5u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOWalkingOptionsIsValid(a1)) {
            goto LABEL_87;
          }
          goto LABEL_63;
        case 6u:
          if ((v8 & 7) != 0) {
            goto LABEL_87;
          }
          unsigned int v28 = 0;
          while (1)
          {
            uint64_t v29 = *v2;
            uint64_t v30 = *(void *)&a1[v29];
            unint64_t v31 = v30 + 1;
            if (v30 == -1 || v31 > *(void *)&a1[*v3]) {
              goto LABEL_72;
            }
            int v32 = *(char *)(*(void *)&a1[*v5] + v30);
            *(void *)&a1[v29] = v31;
            if (v32 < 0)
            {
              BOOL v27 = v28++ > 8;
              if (!v27) {
                continue;
              }
            }
            goto LABEL_73;
          }
        case 7u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOCyclingOptionsIsValid(a1)) {
            goto LABEL_87;
          }
          goto LABEL_63;
        case 8u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOClientCapabilitiesIsValid(a1)) {
            goto LABEL_87;
          }
LABEL_63:
          PBReaderRecallMark();
          continue;
        case 9u:
          if ((v8 & 7) != 0) {
            goto LABEL_87;
          }
          unsigned int v33 = 0;
          break;
        default:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_87:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        uint64_t v34 = *v2;
        uint64_t v35 = *(void *)&a1[v34];
        unint64_t v36 = v35 + 1;
        if (v35 == -1 || v36 > *(void *)&a1[*v3]) {
          break;
        }
        int v37 = *(char *)(*(void *)&a1[*v5] + v35);
        *(void *)&a1[v34] = v36;
        if (v37 < 0)
        {
          BOOL v27 = v33++ > 8;
          if (!v27) {
            continue;
          }
        }
        goto LABEL_73;
      }
LABEL_72:
      a1[*v4] = 1;
LABEL_73:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v43 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v43;
}

void sub_189A51B44(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDComponentInfoIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  char v2 = (int *)MEMORY[0x1E4F940E8];
  unint64_t v3 = (int *)MEMORY[0x1E4F940E0];
  int v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    BOOL v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_69;
          }
          unsigned int v17 = 0;
          while (1)
          {
            uint64_t v18 = *v2;
            uint64_t v19 = *(void *)&a1[v18];
            unint64_t v20 = v19 + 1;
            if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
              goto LABEL_65;
            }
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if (v21 < 0)
            {
              BOOL v22 = v17++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_66;
          }
        case 2u:
          if ((v8 & 7) != 0) {
            goto LABEL_69;
          }
          unsigned int v23 = 0;
          while (1)
          {
            uint64_t v24 = *v2;
            uint64_t v25 = *(void *)&a1[v24];
            unint64_t v26 = v25 + 1;
            if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
              goto LABEL_65;
            }
            int v27 = *(char *)(*(void *)&a1[*v5] + v25);
            *(void *)&a1[v24] = v26;
            if (v27 < 0)
            {
              BOOL v22 = v23++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_66;
          }
        case 3u:
          if ((v8 & 7) != 0) {
            goto LABEL_69;
          }
          unsigned int v28 = 0;
          while (1)
          {
            uint64_t v29 = *v2;
            uint64_t v30 = *(void *)&a1[v29];
            unint64_t v31 = v30 + 1;
            if (v30 == -1 || v31 > *(void *)&a1[*v3]) {
              goto LABEL_65;
            }
            int v32 = *(char *)(*(void *)&a1[*v5] + v30);
            *(void *)&a1[v29] = v31;
            if (v32 < 0)
            {
              BOOL v22 = v28++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_66;
          }
        case 5u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDComponentFilterIsValid(a1)) {
            goto LABEL_69;
          }
          PBReaderRecallMark();
          continue;
        case 6u:
          if ((v8 & 7) != 0) {
            goto LABEL_69;
          }
          unsigned int v33 = 0;
          while (1)
          {
            uint64_t v34 = *v2;
            uint64_t v35 = *(void *)&a1[v34];
            unint64_t v36 = v35 + 1;
            if (v35 == -1 || v36 > *(void *)&a1[*v3]) {
              goto LABEL_65;
            }
            int v37 = *(char *)(*(void *)&a1[*v5] + v35);
            *(void *)&a1[v34] = v36;
            if (v37 < 0)
            {
              BOOL v22 = v33++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_66;
          }
        case 7u:
          if ((v8 & 7) != 0) {
            goto LABEL_69;
          }
          unsigned int v38 = 0;
          break;
        default:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_69:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        uint64_t v39 = *v2;
        uint64_t v40 = *(void *)&a1[v39];
        unint64_t v41 = v40 + 1;
        if (v40 == -1 || v41 > *(void *)&a1[*v3]) {
          break;
        }
        int v42 = *(char *)(*(void *)&a1[*v5] + v40);
        *(void *)&a1[v39] = v41;
        if (v42 < 0)
        {
          BOOL v22 = v38++ > 8;
          if (!v22) {
            continue;
          }
        }
        goto LABEL_66;
      }
LABEL_65:
      a1[*v4] = 1;
LABEL_66:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v43 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v43;
}

#error "189A59CF4: too big function (funcsize=0)"

void sub_189A6CE18(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDRatingIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  char v2 = (int *)MEMORY[0x1E4F940E8];
  unint64_t v3 = (int *)MEMORY[0x1E4F940E0];
  int v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    BOOL v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          uint64_t v14 = *v4;
          int v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      uint64_t v14 = *v4;
      int v15 = a1[v14];
      if (a1[v14]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v16 = v8 & 7;
      if (v15 || v16 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_50;
          }
          unsigned int v21 = 0;
          while (1)
          {
            uint64_t v22 = *v2;
            uint64_t v23 = *(void *)&a1[v22];
            unint64_t v24 = v23 + 1;
            if (v23 == -1 || v24 > *(void *)&a1[*v3]) {
              goto LABEL_41;
            }
            int v25 = *(char *)(*(void *)&a1[*v5] + v23);
            *(void *)&a1[v22] = v24;
            if (v25 < 0)
            {
              BOOL v26 = v21++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_47;
          }
        case 2u:
        case 3u:
          if (v16 != 1) {
            goto LABEL_50;
          }
          uint64_t v18 = *v2;
          unint64_t v19 = *(void *)&a1[v18];
          if (v19 > 0xFFFFFFFFFFFFFFF7) {
            goto LABEL_42;
          }
          unint64_t v20 = v19 + 8;
          if (v20 > *(void *)&a1[*v3]) {
            goto LABEL_42;
          }
          *(void *)&a1[v18] = v20;
          continue;
        case 4u:
          if ((v8 & 7) != 0) {
            goto LABEL_50;
          }
          unsigned int v27 = 0;
          break;
        case 5u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOLocalizedStringIsValid(a1)) {
            goto LABEL_50;
          }
          PBReaderRecallMark();
          continue;
        default:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_50:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        uint64_t v28 = *v2;
        uint64_t v29 = *(void *)&a1[v28];
        unint64_t v30 = v29 + 1;
        if (v29 == -1 || v30 > *(void *)&a1[*v3]) {
          break;
        }
        int v31 = *(char *)(*(void *)&a1[*v5] + v29);
        *(void *)&a1[v28] = v30;
        if (v31 < 0)
        {
          BOOL v26 = v27++ > 8;
          if (!v26) {
            continue;
          }
        }
        goto LABEL_47;
      }
LABEL_41:
      uint64_t v14 = *v4;
LABEL_42:
      a1[v14] = 1;
LABEL_47:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v32 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v32;
}

BOOL GEOPDFactoidIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  char v2 = (int *)MEMORY[0x1E4F940E8];
  unint64_t v3 = (int *)MEMORY[0x1E4F940E0];
  int v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    BOOL v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        BOOL v13 = v7++ >= 9;
        if (v13)
        {
          unint64_t v8 = 0;
          uint64_t v14 = *v4;
          int v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      uint64_t v14 = *v4;
      int v15 = a1[v14];
      if (a1[v14]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v16 = v8 & 7;
      if (v15 || v16 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v16 != 2) {
            goto LABEL_102;
          }
          goto LABEL_64;
        case 2u:
          if (v16 == 2) {
            goto LABEL_64;
          }
          goto LABEL_102;
        case 3u:
          if (v16 != 1) {
            goto LABEL_102;
          }
          uint64_t v18 = *v2;
          unint64_t v19 = *(void *)&a1[v18];
          if (v19 > 0xFFFFFFFFFFFFFFF7) {
            goto LABEL_62;
          }
          unint64_t v20 = v19 + 8;
          if (v20 > *(void *)&a1[*v3]) {
            goto LABEL_62;
          }
          *(void *)&a1[v18] = v20;
          continue;
        case 5u:
          if (v16 == 2) {
            goto LABEL_64;
          }
          goto LABEL_102;
        case 6u:
          if ((v8 & 7) != 0) {
            goto LABEL_102;
          }
          unsigned int v21 = 0;
          while (1)
          {
            uint64_t v22 = *v2;
            uint64_t v23 = *(void *)&a1[v22];
            unint64_t v24 = v23 + 1;
            if (v23 == -1 || v24 > *(void *)&a1[*v3]) {
              goto LABEL_61;
            }
            int v25 = *(char *)(*(void *)&a1[*v5] + v23);
            *(void *)&a1[v22] = v24;
            if (v25 < 0)
            {
              BOOL v26 = v21++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_99;
          }
        case 7u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOPDMapsIdentifierIsValid(a1)) {
            goto LABEL_102;
          }
          goto LABEL_98;
        case 8u:
          if (v16 == 2 && PBReaderPlaceMark() && GEOLocalizedStringIsValid(a1)) {
            goto LABEL_98;
          }
          goto LABEL_102;
        case 9u:
          if ((v8 & 7) != 0) {
            goto LABEL_102;
          }
          unsigned int v27 = 0;
          while (1)
          {
            uint64_t v28 = *v2;
            uint64_t v29 = *(void *)&a1[v28];
            unint64_t v30 = v29 + 1;
            if (v29 == -1 || v30 > *(void *)&a1[*v3]) {
              goto LABEL_61;
            }
            int v31 = *(char *)(*(void *)&a1[*v5] + v29);
            *(void *)&a1[v28] = v30;
            if (v31 < 0)
            {
              BOOL v26 = v27++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_99;
          }
        case 0xAu:
          if ((v8 & 7) != 0) {
            goto LABEL_102;
          }
          unsigned int v32 = 0;
          while (1)
          {
            uint64_t v33 = *v2;
            uint64_t v34 = *(void *)&a1[v33];
            unint64_t v35 = v34 + 1;
            if (v34 == -1 || v35 > *(void *)&a1[*v3]) {
              break;
            }
            int v36 = *(char *)(*(void *)&a1[*v5] + v34);
            *(void *)&a1[v33] = v35;
            if (v36 < 0)
            {
              BOOL v26 = v32++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_99;
          }
LABEL_61:
          uint64_t v14 = *v4;
LABEL_62:
          a1[v14] = 1;
          continue;
        case 0xBu:
          if (v16 == 2) {
            goto LABEL_64;
          }
          goto LABEL_102;
        case 0xCu:
          if (v16 != 2 || !PBReaderPlaceMark()) {
            goto LABEL_102;
          }
          objc_msgSend(a1, "position", 0, 0);
          [a1 length];
          break;
        default:
LABEL_64:
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_102;
          }
          continue;
      }
LABEL_69:
      while (*(void *)&a1[*v2] < *(void *)&a1[*v3] && !a1[*v4])
      {
        char v37 = 0;
        unsigned int v38 = 0;
        unint64_t v39 = 0;
        while (1)
        {
          uint64_t v40 = *v2;
          uint64_t v41 = *(void *)&a1[v40];
          unint64_t v42 = v41 + 1;
          if (v41 == -1 || v42 > *(void *)&a1[*v3]) {
            break;
          }
          char v43 = *(unsigned char *)(*(void *)&a1[*v5] + v41);
          *(void *)&a1[v40] = v42;
          v39 |= (unint64_t)(v43 & 0x7F) << v37;
          if ((v43 & 0x80) == 0) {
            goto LABEL_79;
          }
          v37 += 7;
          BOOL v13 = v38++ >= 9;
          if (v13)
          {
            unint64_t v39 = 0;
            int v44 = a1[*v4];
            goto LABEL_81;
          }
        }
        a1[*v4] = 1;
LABEL_79:
        int v44 = a1[*v4];
        if (a1[*v4]) {
          unint64_t v39 = 0;
        }
LABEL_81:
        if (v44 || (v39 & 7) == 4) {
          break;
        }
        if ((v39 >> 3) == 1)
        {
          if ((v39 & 7) == 0)
          {
            unsigned int v46 = 0;
            do
            {
              uint64_t v47 = *v2;
              uint64_t v48 = *(void *)&a1[v47];
              unint64_t v49 = v48 + 1;
              if (v48 == -1 || v49 > *(void *)&a1[*v3])
              {
                a1[*v4] = 1;
                goto LABEL_69;
              }
              int v50 = *(char *)(*(void *)&a1[*v5] + v48);
              *(void *)&a1[v47] = v49;
              if ((v50 & 0x80000000) == 0) {
                break;
              }
              BOOL v26 = v46++ > 8;
            }
            while (!v26);
            continue;
          }
LABEL_101:
          PBReaderRecallMark();
LABEL_102:
          PBReaderRecallMark();
          return 0;
        }
        if (!PBReaderSkipValueWithTag()) {
          goto LABEL_101;
        }
      }
      int v51 = a1[*v4];
      PBReaderRecallMark();
      if (v51) {
        goto LABEL_102;
      }
LABEL_98:
      PBReaderRecallMark();
LABEL_99:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v52 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v52;
}

BOOL GEOPDTransitInfoSnippetIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  char v2 = (int *)MEMORY[0x1E4F940E8];
  unint64_t v3 = (int *)MEMORY[0x1E4F940E0];
  int v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    BOOL v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 != 2) {
            goto LABEL_66;
          }
          goto LABEL_44;
        case 2u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPBTransitArtworkIsValid(a1)) {
            goto LABEL_66;
          }
          goto LABEL_53;
        case 3u:
          if (v15 == 2) {
            goto LABEL_44;
          }
          goto LABEL_66;
        case 4u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDTransitLabelIsValid(a1)) {
            goto LABEL_66;
          }
          goto LABEL_53;
        case 5u:
          if ((v8 & 7) != 0) {
            goto LABEL_66;
          }
          unsigned int v17 = 0;
          while (1)
          {
            uint64_t v18 = *v2;
            uint64_t v19 = *(void *)&a1[v18];
            unint64_t v20 = v19 + 1;
            if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
              goto LABEL_62;
            }
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if (v21 < 0)
            {
              BOOL v22 = v17++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_63;
          }
        case 6u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOTimezoneIsValid(a1)) {
            goto LABEL_66;
          }
          goto LABEL_53;
        case 7u:
          if (v15 == 2) {
            goto LABEL_44;
          }
          goto LABEL_66;
        case 8u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOLatLngIsValid(a1)) {
            goto LABEL_66;
          }
          goto LABEL_53;
        case 9u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOStyleAttributesIsValid(a1)) {
            goto LABEL_66;
          }
LABEL_53:
          PBReaderRecallMark();
          continue;
        case 0xAu:
          if ((v8 & 7) != 0) {
            goto LABEL_66;
          }
          unsigned int v23 = 0;
          break;
        default:
LABEL_44:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_66:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        uint64_t v24 = *v2;
        uint64_t v25 = *(void *)&a1[v24];
        unint64_t v26 = v25 + 1;
        if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
          break;
        }
        int v27 = *(char *)(*(void *)&a1[*v5] + v25);
        *(void *)&a1[v24] = v26;
        if (v27 < 0)
        {
          BOOL v22 = v23++ > 8;
          if (!v22) {
            continue;
          }
        }
        goto LABEL_63;
      }
LABEL_62:
      a1[*v4] = 1;
LABEL_63:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v28 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v28;
}

BOOL GEOPDIconIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  char v2 = (int *)MEMORY[0x1E4F940E8];
  unint64_t v3 = (int *)MEMORY[0x1E4F940E0];
  int v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    BOOL v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      if ((v8 >> 3) == 2)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_38;
        }
        unsigned int v17 = 0;
        while (1)
        {
          uint64_t v18 = *v2;
          uint64_t v19 = *(void *)&a1[v18];
          unint64_t v20 = v19 + 1;
          if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
            break;
          }
          int v21 = *(char *)(*(void *)&a1[*v5] + v19);
          *(void *)&a1[v18] = v20;
          if (v21 < 0 && v17++ <= 8) {
            continue;
          }
          goto LABEL_35;
        }
        a1[*v4] = 1;
      }
      else if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDPhotoIsValid(a1))
        {
LABEL_38:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_38;
      }
LABEL_35:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v23 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v23;
}

BOOL GEOPDPlacecardLayoutConfigurationIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  char v2 = (int *)MEMORY[0x1E4F940E8];
  unint64_t v3 = (int *)MEMORY[0x1E4F940E0];
  int v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    BOOL v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDModuleLayoutEntryIsValid(a1))
        {
LABEL_27:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_27;
      }
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

BOOL GEOPDPublisherIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  char v2 = (int *)MEMORY[0x1E4F940E8];
  unint64_t v3 = (int *)MEMORY[0x1E4F940E0];
  int v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    BOOL v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
        case 4u:
          if (v15 == 2 && PBReaderPlaceMark() && GEOPDMapsIdentifierIsValid(a1)) {
            goto LABEL_32;
          }
          goto LABEL_52;
        case 2u:
          if (v15 == 2 && PBReaderPlaceMark() && GEOPDCaptionedPhotoIsValid(a1)) {
            goto LABEL_32;
          }
          goto LABEL_52;
        case 3u:
        case 6u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOLocalizedStringIsValid(a1)) {
            goto LABEL_52;
          }
LABEL_32:
          PBReaderRecallMark();
          continue;
        case 5u:
          if ((v8 & 7) != 0) {
            goto LABEL_52;
          }
          unsigned int v17 = 0;
          while (1)
          {
            uint64_t v18 = *v2;
            uint64_t v19 = *(void *)&a1[v18];
            unint64_t v20 = v19 + 1;
            if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
              goto LABEL_49;
            }
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if (v21 < 0)
            {
              BOOL v22 = v17++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_50;
          }
        case 7u:
          if ((v8 & 7) != 0) {
            goto LABEL_52;
          }
          unsigned int v23 = 0;
          break;
        default:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_52:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        uint64_t v24 = *v2;
        uint64_t v25 = *(void *)&a1[v24];
        unint64_t v26 = v25 + 1;
        if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
          break;
        }
        int v27 = *(char *)(*(void *)&a1[*v5] + v25);
        *(void *)&a1[v24] = v26;
        if (v27 < 0)
        {
          BOOL v22 = v23++ > 8;
          if (!v22) {
            continue;
          }
        }
        goto LABEL_50;
      }
LABEL_49:
      a1[*v4] = 1;
LABEL_50:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v28 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v28;
}

BOOL GEOPDPlaceCollectionItemIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  char v2 = (int *)MEMORY[0x1E4F940E8];
  unint64_t v3 = (int *)MEMORY[0x1E4F940E0];
  int v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    BOOL v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 == 2 && PBReaderPlaceMark() && GEOPDMapsIdentifierIsValid(a1)) {
            goto LABEL_49;
          }
          goto LABEL_62;
        case 2u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDCaptionedPhotoIsValid(a1)) {
            goto LABEL_62;
          }
          goto LABEL_49;
        case 3u:
        case 6u:
        case 8u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOLocalizedStringIsValid(a1)) {
            goto LABEL_62;
          }
          goto LABEL_49;
        case 4u:
          if (v15 == 2) {
            goto LABEL_32;
          }
          goto LABEL_62;
        case 5u:
          if ((v8 & 7) != 0) {
            goto LABEL_62;
          }
          unsigned int v17 = 0;
          while (1)
          {
            uint64_t v18 = *v2;
            uint64_t v19 = *(void *)&a1[v18];
            unint64_t v20 = v19 + 1;
            if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
              goto LABEL_60;
            }
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if (v21 < 0)
            {
              BOOL v22 = v17++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_50;
          }
        case 7u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOLocalizedBytesIsValid(a1)) {
            goto LABEL_62;
          }
          goto LABEL_49;
        case 9u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDQuickLinkItemIsValid(a1)) {
            goto LABEL_62;
          }
LABEL_49:
          PBReaderRecallMark();
          continue;
        case 0xAu:
          if ((v8 & 7) != 0) {
            goto LABEL_62;
          }
          unsigned int v23 = 0;
          break;
        default:
LABEL_32:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_62:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        uint64_t v24 = *v2;
        uint64_t v25 = *(void *)&a1[v24];
        unint64_t v26 = v25 + 1;
        if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
          break;
        }
        int v27 = *(char *)(*(void *)&a1[*v5] + v25);
        *(void *)&a1[v24] = v26;
        if (v27 < 0)
        {
          BOOL v22 = v23++ > 8;
          if (!v22) {
            continue;
          }
        }
        goto LABEL_50;
      }
LABEL_60:
      a1[*v4] = 1;
LABEL_50:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v28 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v28;
}

BOOL GEOPDEnrichmentInfoIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  char v2 = (int *)MEMORY[0x1E4F940E8];
  unint64_t v3 = (int *)MEMORY[0x1E4F940E0];
  int v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    BOOL v5 = (int *)MEMORY[0x1E4F940B8];
    while (!a1[*v4])
    {
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 != 2) {
            goto LABEL_33;
          }
          goto LABEL_30;
        case 2u:
          if (v15 == 2) {
            goto LABEL_30;
          }
          goto LABEL_33;
        case 3u:
          if (v15 == 2) {
            goto LABEL_30;
          }
          goto LABEL_33;
        case 4u:
        case 5u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOLocalizedStringIsValid(a1)) {
            goto LABEL_33;
          }
          PBReaderRecallMark();
          goto LABEL_31;
        case 6u:
          if (v15 == 2) {
            goto LABEL_30;
          }
          goto LABEL_33;
        default:
LABEL_30:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_33:
            PBReaderRecallMark();
            return 0;
          }
LABEL_31:
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_32;
          }
          break;
      }
    }
  }
LABEL_32:
  BOOL v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

BOOL GEOPDHikeAssociatedInfoIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  char v2 = (int *)MEMORY[0x1E4F940E8];
  unint64_t v3 = (int *)MEMORY[0x1E4F940E0];
  int v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    BOOL v5 = (int *)MEMORY[0x1E4F940B8];
    while (!a1[*v4])
    {
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_36;
          }
          unsigned int v17 = 0;
          do
          {
            uint64_t v18 = *v2;
            uint64_t v19 = *(void *)&a1[v18];
            unint64_t v20 = v19 + 1;
            if (v19 == -1 || v20 > *(void *)&a1[*v3])
            {
              a1[*v4] = 1;
              goto LABEL_34;
            }
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if ((v21 & 0x80000000) == 0) {
              break;
            }
          }
          while (v17++ <= 8);
          goto LABEL_34;
        case 2u:
        case 3u:
        case 4u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDMapsIdentifierIsValid(a1)) {
            goto LABEL_36;
          }
          PBReaderRecallMark();
          goto LABEL_34;
        default:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_36:
            PBReaderRecallMark();
            return 0;
          }
LABEL_34:
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_35;
          }
          break;
      }
    }
  }
LABEL_35:
  BOOL v23 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v23;
}

BOOL GEOPDHikeSummaryIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  char v2 = (int *)MEMORY[0x1E4F940E8];
  unint64_t v3 = (int *)MEMORY[0x1E4F940E0];
  int v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    BOOL v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_61;
          }
          unsigned int v17 = 0;
          while (1)
          {
            uint64_t v18 = *v2;
            uint64_t v19 = *(void *)&a1[v18];
            unint64_t v20 = v19 + 1;
            if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
              goto LABEL_53;
            }
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if (v21 < 0)
            {
              BOOL v22 = v17++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_58;
          }
        case 2u:
          if ((v8 & 7) != 0) {
            goto LABEL_61;
          }
          unsigned int v23 = 0;
          while (1)
          {
            uint64_t v24 = *v2;
            uint64_t v25 = *(void *)&a1[v24];
            unint64_t v26 = v25 + 1;
            if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
              goto LABEL_53;
            }
            int v27 = *(char *)(*(void *)&a1[*v5] + v25);
            *(void *)&a1[v24] = v26;
            if (v27 < 0)
            {
              BOOL v22 = v23++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_58;
          }
        case 3u:
          if ((v8 & 7) != 0) {
            goto LABEL_61;
          }
          unsigned int v28 = 0;
          while (1)
          {
            uint64_t v29 = *v2;
            uint64_t v30 = *(void *)&a1[v29];
            unint64_t v31 = v30 + 1;
            if (v30 == -1 || v31 > *(void *)&a1[*v3]) {
              goto LABEL_53;
            }
            int v32 = *(char *)(*(void *)&a1[*v5] + v30);
            *(void *)&a1[v29] = v31;
            if (v32 < 0)
            {
              BOOL v22 = v28++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_58;
          }
        case 4u:
          if ((v8 & 7) != 0) {
            goto LABEL_61;
          }
          unsigned int v33 = 0;
          break;
        case 5u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOFormattedStringIsValid(a1)) {
            goto LABEL_61;
          }
          PBReaderRecallMark();
          continue;
        default:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_61:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        uint64_t v34 = *v2;
        uint64_t v35 = *(void *)&a1[v34];
        unint64_t v36 = v35 + 1;
        if (v35 == -1 || v36 > *(void *)&a1[*v3]) {
          break;
        }
        int v37 = *(char *)(*(void *)&a1[*v5] + v35);
        *(void *)&a1[v34] = v36;
        if (v37 < 0)
        {
          BOOL v22 = v33++ > 8;
          if (!v22) {
            continue;
          }
        }
        goto LABEL_58;
      }
LABEL_53:
      a1[*v4] = 1;
LABEL_58:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v38 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v38;
}

BOOL GEOPDHikeGeometryIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  char v2 = (int *)MEMORY[0x1E4F940E8];
  unint64_t v3 = (int *)MEMORY[0x1E4F940E0];
  int v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    BOOL v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || (PBReaderSkipValueWithTag() & 1) == 0)
        {
LABEL_26:
          BOOL v17 = 0;
          goto LABEL_25;
        }
      }
      else if (!PBReaderSkipValueWithTag())
      {
        goto LABEL_26;
      }
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v17 = a1[*v4] == 0;
LABEL_25:
  PBReaderRecallMark();
  return v17;
}

void sub_189A72D20(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDContainedPlaceReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 60);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 56)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  unsigned int v12 = vaddv_s16((int16x4_t)(*(void *)&vshl_u16((uint16x4_t)(*(void *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 68)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFFFFFCFFFDFFFELL) & 0xFF01FF01FF01FF01));
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 > 1;
        char v17 = v16 & ~(_BYTE)v11 | v9;
        unsigned __int8 v18 = v16 | v11;
        char v59 = v17;
        char v60 = v18 | v17;
        char v58 = v8;
        if ((v18 | v8)) {
          uint64_t v19 = 0;
        }
        else {
          uint64_t v19 = a3;
        }
        char v61 = (v19 == 0) | v18;
        BOOL v62 = v18;
        unint64_t v20 = (int *)MEMORY[0x1E4F940E8];
        int v21 = (int *)MEMORY[0x1E4F940C8];
        BOOL v22 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v9;
LABEL_8:
        uint64_t v14 = v10;
        uint64_t v15 = v11;
LABEL_10:
        ++v7;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (*(void *)(v3 + *v20) < *(void *)(v3 + *v6) && !*(unsigned char *)(v3 + *v21))
  {
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      BOOL v30 = v24++ >= 9;
      if (v30)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_25:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    if (v31 || (v25 & 7) == 4) {
      break;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v62;
    if ((v61 & 1) == 0)
    {
      uint64_t v35 = v19;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    switch((int)v33)
    {
      case 1:
        if (!v34) {
          goto LABEL_69;
        }
        if ((*(unsigned char *)(a1 + 68) & 8) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_97;
          }
          unint64_t v39 = objc_alloc_init(GEOPDLinkedPlace);
          if (GEOPDLinkedPlaceReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1))
          {
            PBReaderRecallMark();
            uint64_t v40 = *(void **)(a1 + 40);
            *(void *)(a1 + 40) = v39;

            --v7;
            goto LABEL_77;
          }
          goto LABEL_96;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_97;
        }
        v7 += *(unsigned __int8 *)(a1 + 68) << 28 >> 31;
        goto LABEL_77;
      case 2:
        if (!v34 || (*(unsigned char *)(a1 + 68) & 4) != 0) {
          goto LABEL_69;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_97;
        }
        unint64_t v39 = objc_alloc_init(GEOPDLinkedPlace);
        if (!GEOPDLinkedPlaceReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1)) {
          goto LABEL_96;
        }
        PBReaderRecallMark();
        -[GEOPDContainedPlace _addNoFlagsChildPlace:](a1, v39);
        goto LABEL_68;
      case 3:
        if ((v58 & 1) == 0) {
          goto LABEL_69;
        }
        char v44 = 0;
        unsigned int v45 = 0;
        uint64_t v46 = 0;
        *(unsigned char *)(a1 + 68) |= 1u;
        while (2)
        {
          uint64_t v47 = *v20;
          uint64_t v48 = *(void *)(v3 + v47);
          unint64_t v49 = v48 + 1;
          if (v48 == -1 || v49 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v50 = *(unsigned char *)(*(void *)(v3 + *v22) + v48);
            *(void *)(v3 + v47) = v49;
            v46 |= (unint64_t)(v50 & 0x7F) << v44;
            if (v50 < 0)
            {
              v44 += 7;
              BOOL v30 = v45++ >= 9;
              if (v30)
              {
                uint64_t v46 = 0;
                goto LABEL_74;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          uint64_t v46 = 0;
        }
LABEL_74:
        *(void *)(a1 + 32) = v46;
        goto LABEL_78;
      case 4:
        if (!v34 || (*(unsigned char *)(a1 + 68) & 0x10) != 0) {
          goto LABEL_69;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_97;
        }
        unint64_t v39 = objc_alloc_init(GEOPDLinkedPlace);
        if (GEOPDLinkedPlaceReadAllFrom((uint64_t)v39, (void *)v3, v10 & 1))
        {
          PBReaderRecallMark();
          -[GEOPDContainedPlace _addNoFlagsSiblingPlace:](a1, v39);
LABEL_68:

LABEL_77:
          int v21 = (int *)MEMORY[0x1E4F940C8];
          goto LABEL_78;
        }
LABEL_96:

LABEL_97:
        int v56 = 0;
        char v57 = &OBJC_IVAR___GEOXPCReply__error;
        int v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_81:
        if (v59) {
LABEL_82:
        }
          *(unsigned char *)(a1 + v57[868]) |= 2u;
        if (v62 || (v56 & 1) == 0)
        {
          *(unsigned char *)(a1 + v57[868]) |= 8u;
          *(unsigned char *)(a1 + v57[868]) |= 4u;
          *(unsigned char *)(a1 + v57[868]) |= 0x10u;
        }
        else if (v19)
        {
          while (1)
          {
            int v52 = *v19++;
            char v53 = 8;
            switch(v52)
            {
              case 0:
                goto LABEL_90;
              case 1:
                goto LABEL_89;
              case 2:
                char v53 = 4;
                goto LABEL_89;
              case 4:
                char v53 = 16;
LABEL_89:
                *(unsigned char *)(a1 + v57[868]) |= v53;
                break;
              default:
                continue;
            }
          }
        }
LABEL_90:
        if (v56) {
          unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
        }
        else {
          unint64_t v3 = 0;
        }
        if (v62)
        {
          char v54 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      default:
        if ((v59 & 1) == 0 || (*(unsigned char *)(a1 + 68) & 2) != 0)
        {
LABEL_69:
          char v51 = PBReaderSkipValueWithTag();
          int v21 = (int *)MEMORY[0x1E4F940C8];
          if ((v51 & 1) == 0)
          {
            int v56 = 0;
LABEL_80:
            char v57 = &OBJC_IVAR___GEOXPCReply__error;
            goto LABEL_81;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v41 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            unint64_t v42 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v41;
          }
          int v43 = PBUnknownFieldAdd();
          int v21 = (int *)MEMORY[0x1E4F940C8];
          if (!v43)
          {
            int v56 = 0;
            char v57 = &OBJC_IVAR___GEOXPCReply__error;
            goto LABEL_82;
          }
        }
LABEL_78:
        if (!(v60 & 1 | (v7 != 0))) {
          goto LABEL_79;
        }
        break;
    }
  }
LABEL_79:
  int v56 = 1;
  goto LABEL_80;
}

void sub_189A73530(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A7375C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A73ED0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOPDContainedPlaceCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v22 = *MEMORY[0x1E4F143B8];
  -[GEOPDLinkedPlace readAll:](*(void *)(a1 + 40), 1);
  long long v18 = 0u;
  long long v19 = 0u;
  long long v16 = 0u;
  long long v17 = 0u;
  id v2 = *(id *)(a1 + 24);
  uint64_t v3 = [v2 countByEnumeratingWithState:&v16 objects:v21 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v17;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v17 != v5) {
          objc_enumerationMutation(v2);
        }
        -[GEOPDLinkedPlace readAll:](*(void *)(*((void *)&v16 + 1) + 8 * v6++), 1);
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v16 objects:v21 count:16];
    }
    while (v4);
  }

  long long v14 = 0u;
  long long v15 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  id v7 = *(id *)(a1 + 48);
  uint64_t v8 = [v7 countByEnumeratingWithState:&v12 objects:v20 count:16];
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)v13;
    do
    {
      uint64_t v11 = 0;
      do
      {
        if (*(void *)v13 != v10) {
          objc_enumerationMutation(v7);
        }
        -[GEOPDLinkedPlace readAll:](*(void *)(*((void *)&v12 + 1) + 8 * v11++), 1);
      }
      while (v9 != v11);
      uint64_t v9 = [v7 countByEnumeratingWithState:&v12 objects:v20 count:16];
    }
    while (v9);
  }
}

unint64_t GEOPDContainedPlaceReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 60))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDContainedPlaceReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = [v8 position];
  *(_DWORD *)(a1 + 60) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOPDContainedPlaceReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOPDContainedPlaceReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDContainedPlaceReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOPDContainedPlaceCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_189A742EC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDLinkedPlaceIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 == 2 && PBReaderPlaceMark() && GEOPDMapsIdentifierIsValid(a1)) {
            goto LABEL_33;
          }
          goto LABEL_46;
        case 2u:
          if (v15 == 2) {
            goto LABEL_24;
          }
          goto LABEL_46;
        case 3u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOLatLngIsValid(a1)) {
            goto LABEL_46;
          }
          goto LABEL_33;
        case 4u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOStyleAttributesIsValid(a1)) {
            goto LABEL_46;
          }
LABEL_33:
          PBReaderRecallMark();
          continue;
        case 5u:
          if ((v8 & 7) != 0) {
            goto LABEL_46;
          }
          unsigned int v17 = 0;
          break;
        default:
LABEL_24:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_46:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        uint64_t v18 = *v2;
        uint64_t v19 = *(void *)&a1[v18];
        unint64_t v20 = v19 + 1;
        if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
          break;
        }
        int v21 = *(char *)(*(void *)&a1[*v5] + v19);
        *(void *)&a1[v18] = v20;
        if (v21 < 0 && v17++ <= 8) {
          continue;
        }
        goto LABEL_34;
      }
      a1[*v4] = 1;
LABEL_34:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v23 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v23;
}

void sub_189A74A28(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A74DD4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDContainedPlaceFilterReadAllFrom(uint64_t a1, void *a2)
{
  uint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      int v8 = v3[*v6];
      if (*(void *)&v3[*v4] >= *(void *)&v3[*v5]) {
        break;
      }
      if (v3[*v6])
      {
        int v8 = 1;
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      uint64_t v11 = 0;
      while (1)
      {
        uint64_t v12 = *v4;
        uint64_t v13 = *(void *)&v3[v12];
        unint64_t v14 = v13 + 1;
        if (v13 == -1 || v14 > *(void *)&v3[*v5]) {
          break;
        }
        char v15 = *(unsigned char *)(*(void *)&v3[*v7] + v13);
        *(void *)&v3[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0) {
          goto LABEL_13;
        }
        v9 += 7;
        if (v10++ >= 9)
        {
          char v17 = 0;
          int v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      int v8 = v3[*v6];
      if (v3[*v6]) {
        char v17 = 0;
      }
      else {
        char v17 = v11;
      }
LABEL_16:
      if (v8) {
        BOOL v18 = 1;
      }
      else {
        BOOL v18 = (v17 & 7) == 4;
      }
      if (v18) {
        break;
      }
      if (!*(void *)(a1 + 8))
      {
        id v19 = objc_alloc_init(MEMORY[0x1E4F940B0]);
        unint64_t v20 = *(void **)(a1 + 8);
        *(void *)(a1 + 8) = v19;
      }
      if ((PBUnknownFieldAdd() & 1) == 0) {
        goto LABEL_23;
      }
    }
    BOOL v21 = v8 == 0;
  }
  else
  {
LABEL_23:
    BOOL v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_189A75564(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A75758(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A7587C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A75C78(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDContainmentPlaceFilterReadAllFrom(uint64_t a1, void *a2)
{
  uint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      int v8 = v3[*v6];
      if (*(void *)&v3[*v4] >= *(void *)&v3[*v5]) {
        break;
      }
      if (v3[*v6])
      {
        int v8 = 1;
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      uint64_t v11 = 0;
      while (1)
      {
        uint64_t v12 = *v4;
        uint64_t v13 = *(void *)&v3[v12];
        unint64_t v14 = v13 + 1;
        if (v13 == -1 || v14 > *(void *)&v3[*v5]) {
          break;
        }
        char v15 = *(unsigned char *)(*(void *)&v3[*v7] + v13);
        *(void *)&v3[v12] = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0) {
          goto LABEL_13;
        }
        v9 += 7;
        if (v10++ >= 9)
        {
          char v17 = 0;
          int v8 = v3[*v6];
          goto LABEL_16;
        }
      }
      v3[*v6] = 1;
LABEL_13:
      int v8 = v3[*v6];
      if (v3[*v6]) {
        char v17 = 0;
      }
      else {
        char v17 = v11;
      }
LABEL_16:
      if (v8) {
        BOOL v18 = 1;
      }
      else {
        BOOL v18 = (v17 & 7) == 4;
      }
      if (v18) {
        break;
      }
      if (!*(void *)(a1 + 8))
      {
        id v19 = objc_alloc_init(MEMORY[0x1E4F940B0]);
        unint64_t v20 = *(void **)(a1 + 8);
        *(void *)(a1 + 8) = v19;
      }
      if ((PBUnknownFieldAdd() & 1) == 0) {
        goto LABEL_23;
      }
    }
    BOOL v21 = v8 == 0;
  }
  else
  {
LABEL_23:
    BOOL v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_189A762DC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDContextualPhotoMetadataReadAllFrom(uint64_t a1, void *a2)
{
  uint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        switch((v10 >> 3))
        {
          case 1u:
            BOOL v18 = PBReaderReadString();
            if (v18) {
              -[GEOPDContextualPhotoMetadata addContextualPhotoLabel:](a1, v18);
            }

            continue;
          case 2u:
            char v21 = 0;
            unsigned int v22 = 0;
            uint64_t v23 = 0;
            *(unsigned char *)(a1 + 36) |= 1u;
            while (1)
            {
              uint64_t v24 = *v4;
              uint64_t v25 = *(void *)&v3[v24];
              unint64_t v26 = v25 + 1;
              if (v25 == -1 || v26 > *(void *)&v3[*v5]) {
                break;
              }
              char v27 = *(unsigned char *)(*(void *)&v3[*v7] + v25);
              *(void *)&v3[v24] = v26;
              v23 |= (unint64_t)(v27 & 0x7F) << v21;
              if ((v27 & 0x80) == 0) {
                goto LABEL_63;
              }
              v21 += 7;
              BOOL v15 = v22++ >= 9;
              if (v15)
              {
                LODWORD(v23) = 0;
                goto LABEL_65;
              }
            }
            v3[*v6] = 1;
LABEL_63:
            if (v3[*v6]) {
              LODWORD(v23) = 0;
            }
LABEL_65:
            uint64_t v55 = 24;
            goto LABEL_70;
          case 3u:
            char v28 = 0;
            unsigned int v29 = 0;
            uint64_t v23 = 0;
            *(unsigned char *)(a1 + 36) |= 2u;
            while (2)
            {
              uint64_t v30 = *v4;
              uint64_t v31 = *(void *)&v3[v30];
              unint64_t v32 = v31 + 1;
              if (v31 == -1 || v32 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v33 = *(unsigned char *)(*(void *)&v3[*v7] + v31);
                *(void *)&v3[v30] = v32;
                v23 |= (unint64_t)(v33 & 0x7F) << v28;
                if (v33 < 0)
                {
                  v28 += 7;
                  BOOL v15 = v29++ >= 9;
                  if (v15)
                  {
                    LODWORD(v23) = 0;
                    goto LABEL_69;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              LODWORD(v23) = 0;
            }
LABEL_69:
            uint64_t v55 = 28;
LABEL_70:
            *(_DWORD *)(a1 + v55) = v23;
            continue;
          case 4u:
            char v34 = 0;
            unsigned int v35 = 0;
            uint64_t v36 = 0;
            *(unsigned char *)(a1 + 36) |= 0x10u;
            while (2)
            {
              uint64_t v37 = *v4;
              uint64_t v38 = *(void *)&v3[v37];
              unint64_t v39 = v38 + 1;
              if (v38 == -1 || v39 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v40 = *(unsigned char *)(*(void *)&v3[*v7] + v38);
                *(void *)&v3[v37] = v39;
                v36 |= (unint64_t)(v40 & 0x7F) << v34;
                if (v40 < 0)
                {
                  v34 += 7;
                  BOOL v15 = v35++ >= 9;
                  if (v15)
                  {
                    uint64_t v36 = 0;
                    goto LABEL_74;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              uint64_t v36 = 0;
            }
LABEL_74:
            BOOL v56 = v36 != 0;
            uint64_t v57 = 34;
            goto LABEL_83;
          case 5u:
            char v41 = 0;
            unsigned int v42 = 0;
            uint64_t v43 = 0;
            *(unsigned char *)(a1 + 36) |= 8u;
            while (2)
            {
              uint64_t v44 = *v4;
              uint64_t v45 = *(void *)&v3[v44];
              unint64_t v46 = v45 + 1;
              if (v45 == -1 || v46 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v47 = *(unsigned char *)(*(void *)&v3[*v7] + v45);
                *(void *)&v3[v44] = v46;
                v43 |= (unint64_t)(v47 & 0x7F) << v41;
                if (v47 < 0)
                {
                  v41 += 7;
                  BOOL v15 = v42++ >= 9;
                  if (v15)
                  {
                    uint64_t v43 = 0;
                    goto LABEL_78;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              uint64_t v43 = 0;
            }
LABEL_78:
            BOOL v56 = v43 != 0;
            uint64_t v57 = 33;
            goto LABEL_83;
          case 6u:
            char v48 = 0;
            unsigned int v49 = 0;
            uint64_t v50 = 0;
            *(unsigned char *)(a1 + 36) |= 4u;
            break;
          default:
            if (!*(void *)(a1 + 8))
            {
              id v19 = objc_alloc_init(MEMORY[0x1E4F940B0]);
              unint64_t v20 = *(void **)(a1 + 8);
              *(void *)(a1 + 8) = v19;
            }
            if (!PBUnknownFieldAdd()) {
              goto LABEL_86;
            }
            continue;
        }
        while (1)
        {
          uint64_t v51 = *v4;
          uint64_t v52 = *(void *)&v3[v51];
          unint64_t v53 = v52 + 1;
          if (v52 == -1 || v53 > *(void *)&v3[*v5]) {
            break;
          }
          char v54 = *(unsigned char *)(*(void *)&v3[*v7] + v52);
          *(void *)&v3[v51] = v53;
          v50 |= (unint64_t)(v54 & 0x7F) << v48;
          if ((v54 & 0x80) == 0) {
            goto LABEL_80;
          }
          v48 += 7;
          BOOL v15 = v49++ >= 9;
          if (v15)
          {
            uint64_t v50 = 0;
            goto LABEL_82;
          }
        }
        v3[*v6] = 1;
LABEL_80:
        if (v3[*v6]) {
          uint64_t v50 = 0;
        }
LABEL_82:
        BOOL v56 = v50 != 0;
        uint64_t v57 = 32;
LABEL_83:
        *(unsigned char *)(a1 + v57) = v56;
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v58 = v3[*v6] == 0;
  }
  else
  {
LABEL_86:
    BOOL v58 = 0;
  }
  objc_sync_exit(v3);

  return v58;
}

void sub_189A76E64(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A77738(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDDataItemReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 68);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 64)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  unsigned int v12 = (vaddv_s16((int16x4_t)(*(void *)&vshl_u16((uint16x4_t)(*(void *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 80)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFEFFFCFFFAFFFDLL) & 0xFF01FF01FF01FF01))+ ((*(unsigned char *)(a1 + 80) & 0x20) != 0)+ ((*(unsigned char *)(a1 + 80) & 2) != 0));
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    uint64_t v15 = 1;
    switch(a3[v7])
    {
      case -4:
        ++v12;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v14 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v16 = v12 > 3;
        char v17 = v16 & ~(_BYTE)v11 | v9;
        unsigned __int8 v18 = v16 | v11;
        char v60 = v17;
        char v61 = v18 | v17;
        if ((v18 | v8)) {
          id v19 = 0;
        }
        else {
          id v19 = a3;
        }
        char v62 = (v19 == 0) | v18;
        BOOL v63 = v18;
        unint64_t v20 = (int *)MEMORY[0x1E4F940E8];
        char v21 = (int *)MEMORY[0x1E4F940C8];
        unsigned int v22 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v12;
LABEL_7:
        uint64_t v13 = v9;
LABEL_8:
        uint64_t v14 = v10;
        uint64_t v15 = v11;
LABEL_10:
        ++v7;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        uint64_t v11 = v15;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v21)) {
      goto LABEL_98;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_25;
      }
      v23 += 7;
      BOOL v30 = v24++ >= 9;
      if (v30)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_25:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_27:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_98:
      int v58 = 1;
      goto LABEL_99;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v63;
    if ((v62 & 1) == 0)
    {
      unsigned int v35 = v19;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    switch((int)v33)
    {
      case 1:
        if ((v8 & 1) == 0) {
          goto LABEL_79;
        }
        char v39 = 0;
        unsigned int v40 = 0;
        uint64_t v41 = 0;
        *(unsigned char *)(a1 + 80) |= 1u;
        while (1)
        {
          uint64_t v42 = *v20;
          uint64_t v43 = *(void *)(v3 + v42);
          unint64_t v44 = v43 + 1;
          if (v43 == -1 || v44 > *(void *)(v3 + *v6)) {
            break;
          }
          char v45 = *(unsigned char *)(*(void *)(v3 + *v22) + v43);
          *(void *)(v3 + v42) = v44;
          v41 |= (unint64_t)(v45 & 0x7F) << v39;
          if ((v45 & 0x80) == 0) {
            goto LABEL_82;
          }
          v39 += 7;
          BOOL v30 = v40++ >= 9;
          if (v30)
          {
            LODWORD(v41) = 0;
            goto LABEL_84;
          }
        }
        *(unsigned char *)(v3 + *v21) = 1;
LABEL_82:
        if (*(unsigned char *)(v3 + *v21)) {
          LODWORD(v41) = 0;
        }
LABEL_84:
        *(_DWORD *)(a1 + 76) = v41;
        goto LABEL_97;
      case 2:
        if (!v34) {
          goto LABEL_79;
        }
        if ((*(unsigned char *)(a1 + 80) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_118;
          }
          char v53 = 2 * *(unsigned char *)(a1 + 80);
          goto LABEL_95;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_118;
        }
        unsigned int v49 = objc_alloc_init(GEOPDRatingData);
        if (!GEOPDRatingDataReadAllFrom((uint64_t)v49, (void *)v3, v10 & 1)) {
          goto LABEL_117;
        }
        PBReaderRecallMark();
        uint64_t v50 = 56;
        goto LABEL_78;
      case 3:
        if (!v34) {
          goto LABEL_79;
        }
        if ((*(unsigned char *)(a1 + 80) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_118;
          }
          char v53 = 16 * *(unsigned char *)(a1 + 80);
          goto LABEL_95;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_118;
        }
        unsigned int v49 = objc_alloc_init(GEOPDCategoryData);
        if (!GEOPDCategoryDataReadAllFrom((uint64_t)v49, (void *)v3, v10 & 1)) {
          goto LABEL_117;
        }
        PBReaderRecallMark();
        uint64_t v50 = 32;
        goto LABEL_78;
      case 4:
        if (!v34) {
          goto LABEL_79;
        }
        if ((*(unsigned char *)(a1 + 80) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_118;
          }
          char v53 = 8 * *(unsigned char *)(a1 + 80);
          goto LABEL_95;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_118;
        }
        unsigned int v49 = objc_alloc_init(GEOPDFactoidData);
        if (!GEOPDFactoidDataReadAllFrom((uint64_t)v49, (void *)v3, v10 & 1)) {
          goto LABEL_117;
        }
        PBReaderRecallMark();
        uint64_t v50 = 40;
        goto LABEL_78;
      case 5:
        if (!v34) {
          goto LABEL_79;
        }
        if ((*(unsigned char *)(a1 + 80) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_118;
          }
          char v53 = 32 * *(unsigned char *)(a1 + 80);
          goto LABEL_95;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_118;
        }
        unsigned int v49 = objc_alloc_init(GEOPDBusinessHoursData);
        if (!GEOPDBusinessHoursDataReadAllFrom((uint64_t)v49, (void *)v3, v10 & 1)) {
          goto LABEL_117;
        }
        PBReaderRecallMark();
        uint64_t v50 = 24;
        goto LABEL_78;
      case 6:
        if (!v34) {
          goto LABEL_79;
        }
        if ((*(unsigned char *)(a1 + 80) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_118;
          }
          char v53 = 4 * *(unsigned char *)(a1 + 80);
LABEL_95:
          v7 += v53 >> 7;
LABEL_96:
          char v21 = (int *)MEMORY[0x1E4F940C8];
          unsigned int v22 = (int *)MEMORY[0x1E4F940B8];
          goto LABEL_97;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_118;
        }
        unsigned int v49 = objc_alloc_init(GEOPDLocationData);
        if (GEOPDLocationDataReadAllFrom((uint64_t)v49, (void *)v3, v10 & 1))
        {
          PBReaderRecallMark();
          uint64_t v50 = 48;
LABEL_78:
          uint64_t v51 = *(void **)(a1 + v50);
          *(void *)(a1 + v50) = v49;

          --v7;
          goto LABEL_96;
        }
LABEL_117:

LABEL_118:
        int v58 = 0;
        char v59 = &OBJC_IVAR___GEOXPCReply__error;
        char v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_100:
        if (v60) {
LABEL_101:
        }
          *(unsigned char *)(a1 + v59[880]) |= 2u;
        if (v63 || (v58 & 1) == 0)
        {
          *(unsigned char *)(a1 + v59[880]) |= 0x40u;
          *(unsigned char *)(a1 + v59[880]) |= 8u;
          *(unsigned char *)(a1 + v59[880]) |= 0x10u;
          *(unsigned char *)(a1 + v59[880]) |= 4u;
          *(unsigned char *)(a1 + v59[880]) |= 0x20u;
        }
        else if (v19)
        {
          while (1)
          {
            int v54 = *v19++;
            char v55 = 64;
            switch(v54)
            {
              case 0:
                goto LABEL_111;
              case 2:
                goto LABEL_110;
              case 3:
                char v55 = 8;
                goto LABEL_110;
              case 4:
                char v55 = 16;
                goto LABEL_110;
              case 5:
                char v55 = 4;
                goto LABEL_110;
              case 6:
                char v55 = 32;
LABEL_110:
                *(unsigned char *)(a1 + v59[880]) |= v55;
                break;
              default:
                continue;
            }
          }
        }
LABEL_111:
        if (v58) {
          unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
        }
        else {
          unint64_t v3 = 0;
        }
        if (v63)
        {
          BOOL v56 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
      default:
        if ((v60 & 1) == 0 || (*(unsigned char *)(a1 + 80) & 2) != 0)
        {
LABEL_79:
          char v52 = PBReaderSkipValueWithTag();
          unsigned int v22 = (int *)MEMORY[0x1E4F940B8];
          char v21 = (int *)MEMORY[0x1E4F940C8];
          if ((v52 & 1) == 0)
          {
            int v58 = 0;
LABEL_99:
            char v59 = &OBJC_IVAR___GEOXPCReply__error;
            goto LABEL_100;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v46 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            char v47 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v46;
          }
          int v48 = PBUnknownFieldAdd();
          char v21 = (int *)MEMORY[0x1E4F940C8];
          unsigned int v22 = (int *)MEMORY[0x1E4F940B8];
          if (!v48)
          {
            int v58 = 0;
            char v59 = &OBJC_IVAR___GEOXPCReply__error;
            goto LABEL_101;
          }
        }
LABEL_97:
        if (!(v61 & 1 | (v7 != 0))) {
          goto LABEL_98;
        }
        continue;
    }
  }
}

void sub_189A78114(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A78224(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A78334(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A78444(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A789AC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDDataItemReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 68))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDDataItemReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 72));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 64) = [v8 position];
  *(_DWORD *)(a1 + 68) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOPDDataItemReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOPDDataItemReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDDataItemReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    -[GEOPDRatingData readAll:](*(void *)(a1 + 56), 1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
  return Specified;
}

void sub_189A79714(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDDataItemIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  unint64_t v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] >= *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
LABEL_166:
    BOOL v74 = a1[*v4] == 0;
    PBReaderRecallMark();
    return v74;
  }
  uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (a1[*v4]) {
      goto LABEL_166;
    }
    char v6 = 0;
    unsigned int v7 = 0;
    unint64_t v8 = 0;
    while (1)
    {
      uint64_t v9 = *v2;
      uint64_t v10 = *(void *)&a1[v9];
      unint64_t v11 = v10 + 1;
      if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
        break;
      }
      char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
      *(void *)&a1[v9] = v11;
      v8 |= (unint64_t)(v12 & 0x7F) << v6;
      if ((v12 & 0x80) == 0) {
        goto LABEL_12;
      }
      v6 += 7;
      BOOL v13 = v7++ >= 9;
      if (v13)
      {
        unint64_t v8 = 0;
        int v14 = a1[*v4];
        goto LABEL_14;
      }
    }
    a1[*v4] = 1;
LABEL_12:
    int v14 = a1[*v4];
    if (a1[*v4]) {
      unint64_t v8 = 0;
    }
LABEL_14:
    int v15 = v8 & 7;
    if (v14 || v15 == 4) {
      goto LABEL_166;
    }
    switch((v8 >> 3))
    {
      case 1u:
        if ((v8 & 7) != 0) {
          goto LABEL_168;
        }
        unsigned int v17 = 0;
        do
        {
          uint64_t v18 = *v2;
          uint64_t v19 = *(void *)&a1[v18];
          unint64_t v20 = v19 + 1;
          if (v19 == -1 || v20 > *(void *)&a1[*v3])
          {
            a1[*v4] = 1;
            goto LABEL_163;
          }
          int v21 = *(char *)(*(void *)&a1[*v5] + v19);
          *(void *)&a1[v18] = v20;
          if ((v21 & 0x80000000) == 0) {
            break;
          }
        }
        while (v17++ <= 8);
        goto LABEL_163;
      case 2u:
        if (v15 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_168;
        }
        objc_msgSend(a1, "position", 0, 0);
        [a1 length];
        while (2)
        {
          while (2)
          {
            if (*(void *)&a1[*v2] >= *(void *)&a1[*v3] || a1[*v4]) {
              goto LABEL_161;
            }
            char v23 = 0;
            unsigned int v24 = 0;
            unint64_t v25 = 0;
            while (1)
            {
              uint64_t v26 = *v2;
              uint64_t v27 = *(void *)&a1[v26];
              unint64_t v28 = v27 + 1;
              if (v27 == -1 || v28 > *(void *)&a1[*v3]) {
                break;
              }
              char v29 = *(unsigned char *)(*(void *)&a1[*v5] + v27);
              *(void *)&a1[v26] = v28;
              v25 |= (unint64_t)(v29 & 0x7F) << v23;
              if ((v29 & 0x80) == 0) {
                goto LABEL_42;
              }
              v23 += 7;
              BOOL v13 = v24++ >= 9;
              if (v13)
              {
                unint64_t v25 = 0;
                int v30 = a1[*v4];
                goto LABEL_44;
              }
            }
            a1[*v4] = 1;
LABEL_42:
            int v30 = a1[*v4];
            if (a1[*v4]) {
              unint64_t v25 = 0;
            }
LABEL_44:
            int v31 = v25 & 7;
            if (v30 || v31 == 4) {
              goto LABEL_161;
            }
            if ((v25 >> 3) == 2)
            {
              if (v31 != 2) {
                goto LABEL_167;
              }
LABEL_55:
              if ((PBReaderSkipValueWithTag() & 1) == 0) {
                goto LABEL_167;
              }
              continue;
            }
            break;
          }
          if ((v25 >> 3) != 1) {
            goto LABEL_55;
          }
          if (v31 == 2 && PBReaderPlaceMark() && GEOPDRatingIsValid(a1))
          {
            PBReaderRecallMark();
            continue;
          }
          break;
        }
LABEL_167:
        PBReaderRecallMark();
LABEL_168:
        PBReaderRecallMark();
        return 0;
      case 3u:
        if (v15 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_168;
        }
        objc_msgSend(a1, "position", 0, 0);
        [a1 length];
        while (2)
        {
          while (2)
          {
            if (*(void *)&a1[*v2] >= *(void *)&a1[*v3] || a1[*v4]) {
              goto LABEL_161;
            }
            char v33 = 0;
            unsigned int v34 = 0;
            unint64_t v35 = 0;
            while (1)
            {
              uint64_t v36 = *v2;
              uint64_t v37 = *(void *)&a1[v36];
              unint64_t v38 = v37 + 1;
              if (v37 == -1 || v38 > *(void *)&a1[*v3]) {
                break;
              }
              char v39 = *(unsigned char *)(*(void *)&a1[*v5] + v37);
              *(void *)&a1[v36] = v38;
              v35 |= (unint64_t)(v39 & 0x7F) << v33;
              if ((v39 & 0x80) == 0) {
                goto LABEL_70;
              }
              v33 += 7;
              BOOL v13 = v34++ >= 9;
              if (v13)
              {
                unint64_t v35 = 0;
                int v40 = a1[*v4];
                goto LABEL_72;
              }
            }
            a1[*v4] = 1;
LABEL_70:
            int v40 = a1[*v4];
            if (a1[*v4]) {
              unint64_t v35 = 0;
            }
LABEL_72:
            int v41 = v35 & 7;
            if (v40 || v41 == 4) {
              goto LABEL_161;
            }
            if ((v35 >> 3) != 1)
            {
              if ((PBReaderSkipValueWithTag() & 1) == 0) {
                goto LABEL_167;
              }
              continue;
            }
            break;
          }
          if (v41 == 2 && PBReaderPlaceMark() && GEOLocalizedStringIsValid(a1))
          {
            PBReaderRecallMark();
            continue;
          }
          goto LABEL_167;
        }
      case 4u:
        if (v15 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_168;
        }
        objc_msgSend(a1, "position", 0, 0);
        [a1 length];
        while (2)
        {
          while (2)
          {
            if (*(void *)&a1[*v2] >= *(void *)&a1[*v3] || a1[*v4]) {
              goto LABEL_161;
            }
            char v43 = 0;
            unsigned int v44 = 0;
            unint64_t v45 = 0;
            while (1)
            {
              uint64_t v46 = *v2;
              uint64_t v47 = *(void *)&a1[v46];
              unint64_t v48 = v47 + 1;
              if (v47 == -1 || v48 > *(void *)&a1[*v3]) {
                break;
              }
              char v49 = *(unsigned char *)(*(void *)&a1[*v5] + v47);
              *(void *)&a1[v46] = v48;
              v45 |= (unint64_t)(v49 & 0x7F) << v43;
              if ((v49 & 0x80) == 0) {
                goto LABEL_96;
              }
              v43 += 7;
              BOOL v13 = v44++ >= 9;
              if (v13)
              {
                unint64_t v45 = 0;
                int v50 = a1[*v4];
                goto LABEL_98;
              }
            }
            a1[*v4] = 1;
LABEL_96:
            int v50 = a1[*v4];
            if (a1[*v4]) {
              unint64_t v45 = 0;
            }
LABEL_98:
            int v51 = v45 & 7;
            if (v50 || v51 == 4) {
              goto LABEL_161;
            }
            if ((v45 >> 3) != 1)
            {
              if ((PBReaderSkipValueWithTag() & 1) == 0) {
                goto LABEL_167;
              }
              continue;
            }
            break;
          }
          if (v51 == 2 && PBReaderPlaceMark() && GEOPDFactoidIsValid(a1))
          {
            PBReaderRecallMark();
            continue;
          }
          goto LABEL_167;
        }
      case 5u:
        if (v15 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_168;
        }
        objc_msgSend(a1, "position", 0, 0);
        [a1 length];
        while (2)
        {
          while (2)
          {
            if (*(void *)&a1[*v2] >= *(void *)&a1[*v3] || a1[*v4]) {
              goto LABEL_161;
            }
            char v53 = 0;
            unsigned int v54 = 0;
            unint64_t v55 = 0;
            while (1)
            {
              uint64_t v56 = *v2;
              uint64_t v57 = *(void *)&a1[v56];
              unint64_t v58 = v57 + 1;
              if (v57 == -1 || v58 > *(void *)&a1[*v3]) {
                break;
              }
              char v59 = *(unsigned char *)(*(void *)&a1[*v5] + v57);
              *(void *)&a1[v56] = v58;
              v55 |= (unint64_t)(v59 & 0x7F) << v53;
              if ((v59 & 0x80) == 0) {
                goto LABEL_122;
              }
              v53 += 7;
              BOOL v13 = v54++ >= 9;
              if (v13)
              {
                unint64_t v55 = 0;
                int v60 = a1[*v4];
                goto LABEL_124;
              }
            }
            a1[*v4] = 1;
LABEL_122:
            int v60 = a1[*v4];
            if (a1[*v4]) {
              unint64_t v55 = 0;
            }
LABEL_124:
            int v61 = v55 & 7;
            if (v60 || v61 == 4) {
              goto LABEL_161;
            }
            if ((v55 >> 3) != 1)
            {
              if ((PBReaderSkipValueWithTag() & 1) == 0) {
                goto LABEL_167;
              }
              continue;
            }
            break;
          }
          if (v61 == 2 && PBReaderPlaceMark() && GEOPDBusinessHoursIsValid(a1))
          {
            PBReaderRecallMark();
            continue;
          }
          goto LABEL_167;
        }
      case 6u:
        if (v15 != 2 || !PBReaderPlaceMark()) {
          goto LABEL_168;
        }
        objc_msgSend(a1, "position", 0, 0);
        [a1 length];
        while (2)
        {
          if (*(void *)&a1[*v2] < *(void *)&a1[*v3] && !a1[*v4])
          {
            char v63 = 0;
            unsigned int v64 = 0;
            unint64_t v65 = 0;
            while (1)
            {
              uint64_t v66 = *v2;
              uint64_t v67 = *(void *)&a1[v66];
              unint64_t v68 = v67 + 1;
              if (v67 == -1 || v68 > *(void *)&a1[*v3]) {
                break;
              }
              char v69 = *(unsigned char *)(*(void *)&a1[*v5] + v67);
              *(void *)&a1[v66] = v68;
              v65 |= (unint64_t)(v69 & 0x7F) << v63;
              if ((v69 & 0x80) == 0) {
                goto LABEL_148;
              }
              v63 += 7;
              BOOL v13 = v64++ >= 9;
              if (v13)
              {
                unint64_t v65 = 0;
                int v70 = a1[*v4];
                goto LABEL_150;
              }
            }
            a1[*v4] = 1;
LABEL_148:
            int v70 = a1[*v4];
            if (a1[*v4]) {
              unint64_t v65 = 0;
            }
LABEL_150:
            int v71 = v65 & 7;
            if (!v70 && v71 != 4)
            {
              if ((v65 >> 3) != 1)
              {
                if ((PBReaderSkipValueWithTag() & 1) == 0) {
                  goto LABEL_167;
                }
                continue;
              }
              if (v71 == 2 && PBReaderPlaceMark() && GEOLocalizedStringIsValid(a1))
              {
                PBReaderRecallMark();
                continue;
              }
              goto LABEL_167;
            }
          }
          break;
        }
LABEL_161:
        int v73 = a1[*v4];
        PBReaderRecallMark();
        if (v73) {
          goto LABEL_168;
        }
        PBReaderRecallMark();
LABEL_163:
        if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
          goto LABEL_166;
        }
        continue;
      default:
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_168;
        }
        goto LABEL_163;
    }
  }
}

void sub_189A7A208(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDDataItemIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  if (*(char *)(a1 + 80) < 0) {
    return 1;
  }
  unsigned int v2 = *(unsigned __int8 *)(a1 + 80);
  if ((v2 & 0x40) != 0)
  {
    uint64_t v3 = *(void *)(a1 + 56);
    if (v3)
    {
      os_unfair_lock_lock_with_options();
      os_unfair_lock_assert_owner((const os_unfair_lock *)(v3 + 48));
      int v4 = *(unsigned char *)(v3 + 52) & 0xE;
      os_unfair_lock_unlock((os_unfair_lock_t)(v3 + 48));
      if (v4) {
        return 1;
      }
      unsigned int v2 = *(unsigned __int8 *)(a1 + 80);
    }
  }
  if ((v2 & 0x1C) != 0) {
    return 1;
  }
  return (v2 >> 5) & 1;
}

os_unfair_lock_s *GEOPDDataItemIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOPDDataItemIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 18);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_189A7A5BC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDDateTimeRangeReadAllFrom(uint64_t a1, void *a2)
{
  uint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    int v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        unint64_t v18 = v10 >> 3;
        if ((v10 >> 3) == 3)
        {
          if (!PBReaderPlaceMark()) {
            goto LABEL_54;
          }
          -[GEOPDDateTimeRange _reserveTimeRanges:](a1, 1uLL);
          if (!GEOPDLocalTimeRangeReadAllFrom(*(void *)(a1 + 16) + 12 * *(void *)(a1 + 24), (uint64_t)v3)) {
            goto LABEL_54;
          }
          PBReaderRecallMark();
          ++*(void *)(a1 + 24);
        }
        else
        {
          if (v18 == 2)
          {
            char v26 = 0;
            unsigned int v27 = 0;
            uint64_t v21 = 0;
            *(unsigned char *)(a1 + 56) |= 1u;
            while (1)
            {
              uint64_t v28 = *v4;
              uint64_t v29 = *(void *)&v3[v28];
              unint64_t v30 = v29 + 1;
              if (v29 == -1 || v30 > *(void *)&v3[*v5]) {
                break;
              }
              char v31 = *(unsigned char *)(*(void *)&v3[*v7] + v29);
              *(void *)&v3[v28] = v30;
              v21 |= (unint64_t)(v31 & 0x7F) << v26;
              if ((v31 & 0x80) == 0) {
                goto LABEL_48;
              }
              v26 += 7;
              BOOL v15 = v27++ >= 9;
              if (v15)
              {
                uint64_t v21 = 0;
                goto LABEL_50;
              }
            }
            v3[*v6] = 1;
LABEL_48:
            if (v3[*v6]) {
              uint64_t v21 = 0;
            }
LABEL_50:
            uint64_t v34 = 40;
            goto LABEL_51;
          }
          if (v18 == 1)
          {
            char v19 = 0;
            unsigned int v20 = 0;
            uint64_t v21 = 0;
            *(unsigned char *)(a1 + 56) |= 2u;
            while (1)
            {
              uint64_t v22 = *v4;
              uint64_t v23 = *(void *)&v3[v22];
              unint64_t v24 = v23 + 1;
              if (v23 == -1 || v24 > *(void *)&v3[*v5]) {
                break;
              }
              char v25 = *(unsigned char *)(*(void *)&v3[*v7] + v23);
              *(void *)&v3[v22] = v24;
              v21 |= (unint64_t)(v25 & 0x7F) << v19;
              if ((v25 & 0x80) == 0) {
                goto LABEL_44;
              }
              v19 += 7;
              BOOL v15 = v20++ >= 9;
              if (v15)
              {
                uint64_t v21 = 0;
                goto LABEL_46;
              }
            }
            v3[*v6] = 1;
LABEL_44:
            if (v3[*v6]) {
              uint64_t v21 = 0;
            }
LABEL_46:
            uint64_t v34 = 48;
LABEL_51:
            *(void *)(a1 + v34) = v21;
            continue;
          }
          if (!*(void *)(a1 + 8))
          {
            id v32 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            char v33 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v32;
          }
          if (!PBUnknownFieldAdd()) {
            goto LABEL_54;
          }
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v35 = v3[*v6] == 0;
  }
  else
  {
LABEL_54:
    BOOL v35 = 0;
  }
  objc_sync_exit(v3);

  return v35;
}

void sub_189A7B948(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDDateTimeRangeIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  unsigned int v2 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v3 = (int *)MEMORY[0x1E4F940E0];
  int v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      unint64_t v17 = v8 >> 3;
      if ((v8 >> 3) == 3)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDLocalTimeRangeIsValid(a1))
        {
LABEL_46:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else
      {
        if (v17 == 2)
        {
          if ((v8 & 7) != 0) {
            goto LABEL_46;
          }
          unsigned int v24 = 0;
          while (1)
          {
            uint64_t v25 = *v2;
            uint64_t v26 = *(void *)&a1[v25];
            unint64_t v27 = v26 + 1;
            if (v26 == -1 || v27 > *(void *)&a1[*v3]) {
              goto LABEL_41;
            }
            int v28 = *(char *)(*(void *)&a1[*v5] + v26);
            *(void *)&a1[v25] = v27;
            if (v28 < 0)
            {
              BOOL v23 = v24++ > 8;
              if (!v23) {
                continue;
              }
            }
            goto LABEL_43;
          }
        }
        if (v17 == 1)
        {
          if ((v8 & 7) != 0) {
            goto LABEL_46;
          }
          unsigned int v18 = 0;
          while (1)
          {
            uint64_t v19 = *v2;
            uint64_t v20 = *(void *)&a1[v19];
            unint64_t v21 = v20 + 1;
            if (v20 == -1 || v21 > *(void *)&a1[*v3]) {
              break;
            }
            int v22 = *(char *)(*(void *)&a1[*v5] + v20);
            *(void *)&a1[v19] = v21;
            if (v22 < 0)
            {
              BOOL v23 = v18++ > 8;
              if (!v23) {
                continue;
              }
            }
            goto LABEL_43;
          }
LABEL_41:
          a1[*v4] = 1;
          continue;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_46;
        }
      }
LABEL_43:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v29 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v29;
}

BOOL GEOPDLocalTimeRangeIsValid(void *a1)
{
  uint64_t v6 = [a1 position];
  uint64_t v7 = [a1 length];
  int v5 = 0;
  uint64_t v4 = 0;
  BOOL AllFrom = GEOPDLocalTimeRangeReadAllFrom((uint64_t)&v4, (uint64_t)a1);
  PBReaderRecallMark();
  return AllFrom;
}

uint64_t GEOPDLocalTimeRangeWriteTo(uint64_t result)
{
  uint64_t v1 = result;
  char v2 = *(unsigned char *)(result + 8);
  if (v2)
  {
    unint64_t result = PBDataWriterWriteUint32Field();
    char v2 = *(unsigned char *)(v1 + 8);
  }
  if ((v2 & 2) != 0)
  {
    return PBDataWriterWriteUint32Field();
  }
  return result;
}

void sub_189A7C22C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDDepartureReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 80));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 76);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 72)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  char v12 = (const __int16 *)(a1 + 92);
  uint16x4_t v13 = (uint16x4_t)vld1_dup_s16(v12);
  int16x4_t v14 = (int16x4_t)vand_s8((int8x8_t)vshl_u16(v13, (uint16x4_t)0xFFFBFFFAFFF8FFF9), (int8x8_t)0x1000100010001);
  v14.i16[0] = vaddv_s16(v14);
  unsigned int v15 = v14.i32[0];
  while (2)
  {
    uint64_t v16 = 1;
    uint64_t v17 = 1;
    uint64_t v18 = 1;
    switch(a3[v9])
    {
      case -4:
        ++v15;
        goto LABEL_8;
      case -3:
        char v8 = 1;
        goto LABEL_7;
      case -2:
        uint64_t v17 = v10;
        goto LABEL_10;
      case -1:
        goto LABEL_10;
      case 0:
        BOOL v19 = v15 > 1;
        char v20 = v19 | v11;
        char v84 = v19 & ~(_BYTE)v11 | v7;
        char v86 = v19 | v11 | v84;
        if (((v19 | v11) | v8)) {
          unint64_t v21 = 0;
        }
        else {
          unint64_t v21 = a3;
        }
        int v22 = (int *)MEMORY[0x1E4F940E8];
        char v87 = (v21 == 0) | v20;
        BOOL v23 = (int *)MEMORY[0x1E4F940C8];
        unsigned int v24 = &OBJC_IVAR___GEOPDAddressComponent__unknownFields;
        uint64_t v25 = (int *)MEMORY[0x1E4F940B8];
        char v85 = v19 | v11;
        break;
      default:
        ++v15;
LABEL_7:
        uint64_t v16 = v7;
LABEL_8:
        uint64_t v17 = v10;
        uint64_t v18 = v11;
LABEL_10:
        ++v9;
        uint64_t v7 = v16;
        uint64_t v10 = v17;
        uint64_t v11 = v18;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v22) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v23)) {
      goto LABEL_118;
    }
    char v26 = 0;
    unsigned int v27 = 0;
    unint64_t v28 = 0;
    while (1)
    {
      uint64_t v29 = *v22;
      uint64_t v30 = *(void *)(v3 + v29);
      unint64_t v31 = v30 + 1;
      if (v30 == -1 || v31 > *(void *)(v3 + *v6)) {
        break;
      }
      char v32 = *(unsigned char *)(*(void *)(v3 + *v25) + v30);
      *(void *)(v3 + v29) = v31;
      v28 |= (unint64_t)(v32 & 0x7F) << v26;
      if ((v32 & 0x80) == 0) {
        goto LABEL_25;
      }
      v26 += 7;
      BOOL v33 = v27++ >= 9;
      if (v33)
      {
        unint64_t v28 = 0;
        int v34 = *(unsigned __int8 *)(v3 + *v23);
        goto LABEL_27;
      }
    }
    *(unsigned char *)(v3 + *v23) = 1;
LABEL_25:
    int v34 = *(unsigned __int8 *)(v3 + *v23);
    if (*(unsigned char *)(v3 + *v23)) {
      unint64_t v28 = 0;
    }
LABEL_27:
    if (v34 || (v28 & 7) == 4)
    {
LABEL_118:
      int v83 = 1;
      goto LABEL_119;
    }
    unint64_t v36 = v28 >> 3;
    BOOL v37 = v20;
    if ((v87 & 1) == 0)
    {
      unint64_t v38 = v21;
      do
      {
        int v40 = *v38++;
        int v39 = v40;
        BOOL v37 = v40 != 0;
        if (v40) {
          BOOL v41 = v39 == v36;
        }
        else {
          BOOL v41 = 1;
        }
      }
      while (!v41);
    }
    switch((int)v36)
    {
      case 1:
        if ((v8 & 1) == 0) {
          goto LABEL_90;
        }
        *(_WORD *)(a1 + v24[293]) |= 1u;
        uint64_t v42 = *v22;
        unint64_t v43 = *(void *)(v3 + v42);
        if (v43 <= 0xFFFFFFFFFFFFFFF7 && v43 + 8 <= *(void *)(v3 + *v6))
        {
          uint64_t v44 = *(void *)(*(void *)(v3 + *v25) + v43);
          *(void *)(v3 + v42) = v43 + 8;
        }
        else
        {
          *(unsigned char *)(v3 + *v23) = 1;
          uint64_t v44 = 0;
        }
        uint64_t v77 = 24;
        goto LABEL_116;
      case 3:
        if (!v37) {
          goto LABEL_90;
        }
        if ((*(_WORD *)(a1 + v24[293]) & 0x100) == 0)
        {
          uint64_t v48 = PBReaderReadString();
          uint64_t v49 = 64;
          goto LABEL_88;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_140;
        }
        unsigned int v24 = &OBJC_IVAR___GEOPDAddressComponent__unknownFields;
        __int16 v76 = *(_WORD *)(a1 + 92) << 7;
        goto LABEL_110;
      case 5:
        if ((v8 & 1) == 0) {
          goto LABEL_90;
        }
        *(_WORD *)(a1 + v24[293]) |= 2u;
        uint64_t v50 = *v22;
        unint64_t v51 = *(void *)(v3 + v50);
        if (v51 <= 0xFFFFFFFFFFFFFFF7 && v51 + 8 <= *(void *)(v3 + *v6))
        {
          uint64_t v44 = *(void *)(*(void *)(v3 + *v25) + v51);
          *(void *)(v3 + v50) = v51 + 8;
        }
        else
        {
          *(unsigned char *)(v3 + *v23) = 1;
          uint64_t v44 = 0;
        }
        uint64_t v77 = 32;
LABEL_116:
        *(void *)(a1 + v77) = v44;
        goto LABEL_117;
      case 6:
        if ((v8 & 1) == 0) {
          goto LABEL_90;
        }
        char v52 = 0;
        unsigned int v53 = 0;
        uint64_t v54 = 0;
        *(_WORD *)(a1 + v24[293]) |= 0x10u;
        while (2)
        {
          uint64_t v55 = *v22;
          uint64_t v56 = *(void *)(v3 + v55);
          unint64_t v57 = v56 + 1;
          if (v56 == -1 || v57 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v23) = 1;
          }
          else
          {
            char v58 = *(unsigned char *)(*(void *)(v3 + *v25) + v56);
            *(void *)(v3 + v55) = v57;
            v54 |= (unint64_t)(v58 & 0x7F) << v52;
            if (v58 < 0)
            {
              v52 += 7;
              BOOL v33 = v53++ >= 9;
              if (v33)
              {
                uint64_t v54 = 0;
                goto LABEL_95;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v23)) {
          uint64_t v54 = 0;
        }
LABEL_95:
        *(unsigned char *)(a1 + 88) = v54 != 0;
        goto LABEL_117;
      case 7:
        if ((v8 & 1) == 0) {
          goto LABEL_90;
        }
        char v59 = 0;
        unsigned int v60 = 0;
        uint64_t v61 = 0;
        *(_WORD *)(a1 + v24[293]) |= 4u;
        while (2)
        {
          uint64_t v62 = *v22;
          uint64_t v63 = *(void *)(v3 + v62);
          unint64_t v64 = v63 + 1;
          if (v63 == -1 || v64 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v23) = 1;
          }
          else
          {
            char v65 = *(unsigned char *)(*(void *)(v3 + *v25) + v63);
            *(void *)(v3 + v62) = v64;
            v61 |= (unint64_t)(v65 & 0x7F) << v59;
            if (v65 < 0)
            {
              v59 += 7;
              BOOL v33 = v60++ >= 9;
              if (v33)
              {
                uint64_t v61 = 0;
                goto LABEL_99;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v23)) {
          uint64_t v61 = 0;
        }
LABEL_99:
        *(void *)(a1 + 56) = v61;
        goto LABEL_117;
      case 8:
        if (!v37) {
          goto LABEL_90;
        }
        if ((*(_WORD *)(a1 + v24[293]) & 0x80) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_140;
          }
          unsigned int v24 = &OBJC_IVAR___GEOPDAddressComponent__unknownFields;
          __int16 v76 = *(_WORD *)(a1 + 92) << 8;
LABEL_110:
          v9 += v76 >> 15;
          char v20 = v85;
          BOOL v23 = (int *)MEMORY[0x1E4F940C8];
          goto LABEL_111;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_140;
        }
        uint64_t v66 = objc_alloc_init(GEOFormattedString);
        if (GEOFormattedStringReadAllFrom((uint64_t)v66, (void *)v3, v10 & 1))
        {
          PBReaderRecallMark();
          uint64_t v67 = *(void **)(a1 + 48);
          *(void *)(a1 + 48) = v66;
LABEL_89:

          --v9;
          char v20 = v85;
          BOOL v23 = (int *)MEMORY[0x1E4F940C8];
          unsigned int v24 = &OBJC_IVAR___GEOPDAddressComponent__unknownFields;
LABEL_111:
          uint64_t v25 = (int *)MEMORY[0x1E4F940B8];
LABEL_117:
          if (!(v86 & 1 | (v9 != 0))) {
            goto LABEL_118;
          }
          continue;
        }

LABEL_140:
        int v83 = 0;
        char v20 = v85;
        BOOL v23 = (int *)MEMORY[0x1E4F940C8];
        unsigned int v24 = &OBJC_IVAR___GEOPDAddressComponent__unknownFields;
LABEL_119:
        if (v84) {
LABEL_120:
        }
          *(_WORD *)(a1 + v24[293]) |= 0x20u;
        if (v20 & 1 | ((v83 & 1) == 0))
        {
          *(_WORD *)(a1 + v24[293]) |= 0x100u;
          *(_WORD *)(a1 + v24[293]) |= 0x80u;
          *(_WORD *)(a1 + v24[293]) |= 0x40u;
          goto LABEL_133;
        }
        if (v21)
        {
          while (2)
          {
            while (1)
            {
              int v79 = *v21++;
              int v78 = v79;
              if (v79 > 7) {
                break;
              }
              if (v78 == 3)
              {
                __int16 v80 = 256;
LABEL_131:
                *(_WORD *)(a1 + v24[293]) |= v80;
                continue;
              }
              if (!v78) {
                goto LABEL_133;
              }
            }
            if (v78 == 11)
            {
              __int16 v80 = 64;
            }
            else
            {
              if (v78 != 8) {
                continue;
              }
              __int16 v80 = 128;
            }
            goto LABEL_131;
          }
        }
LABEL_133:
        if (v83)
        {
          unint64_t v3 = *(unsigned char *)(v3 + *v23) == 0;
          if ((v20 & 1) == 0) {
            return v3;
          }
LABEL_137:
          char v81 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        else
        {
          unint64_t v3 = 0;
          if (v20) {
            goto LABEL_137;
          }
        }
        return v3;
      case 10:
        if ((v8 & 1) == 0) {
          goto LABEL_90;
        }
        char v68 = 0;
        unsigned int v69 = 0;
        uint64_t v70 = 0;
        *(_WORD *)(a1 + v24[293]) |= 8u;
        while (2)
        {
          uint64_t v71 = *v22;
          uint64_t v72 = *(void *)(v3 + v71);
          unint64_t v73 = v72 + 1;
          if (v72 == -1 || v73 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v23) = 1;
          }
          else
          {
            char v74 = *(unsigned char *)(*(void *)(v3 + *v25) + v72);
            *(void *)(v3 + v71) = v73;
            v70 |= (unint64_t)(v74 & 0x7F) << v68;
            if (v74 < 0)
            {
              v68 += 7;
              BOOL v33 = v69++ >= 9;
              if (v33)
              {
                LODWORD(v70) = 0;
                goto LABEL_103;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v23)) {
          LODWORD(v70) = 0;
        }
LABEL_103:
        *(_DWORD *)(a1 + 84) = v70;
        goto LABEL_117;
      case 11:
        if (!v37) {
          goto LABEL_90;
        }
        if ((*(_WORD *)(a1 + v24[293]) & 0x40) == 0)
        {
          uint64_t v48 = PBReaderReadString();
          uint64_t v49 = 40;
LABEL_88:
          uint64_t v67 = *(void **)(a1 + v49);
          *(void *)(a1 + v49) = v48;
          goto LABEL_89;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_140;
        }
        unsigned int v24 = &OBJC_IVAR___GEOPDAddressComponent__unknownFields;
        __int16 v76 = *(_WORD *)(a1 + 92) << 9;
        goto LABEL_110;
      default:
        if ((v84 & 1) == 0 || (*(_WORD *)(a1 + v24[293]) & 0x20) != 0)
        {
LABEL_90:
          char v75 = PBReaderSkipValueWithTag();
          uint64_t v25 = (int *)MEMORY[0x1E4F940B8];
          unsigned int v24 = &OBJC_IVAR___GEOPDAddressComponent__unknownFields;
          BOOL v23 = (int *)MEMORY[0x1E4F940C8];
          char v20 = v85;
          if ((v75 & 1) == 0)
          {
            int v83 = 0;
            goto LABEL_119;
          }
        }
        else
        {
          if (!*(void *)(a1 + 16))
          {
            id v45 = objc_alloc_init(MEMORY[0x1E4F940B0]);
            uint64_t v46 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v45;
          }
          int v47 = PBUnknownFieldAdd();
          char v20 = v85;
          BOOL v23 = (int *)MEMORY[0x1E4F940C8];
          unsigned int v24 = &OBJC_IVAR___GEOPDAddressComponent__unknownFields;
          uint64_t v25 = (int *)MEMORY[0x1E4F940B8];
          if (!v47)
          {
            int v83 = 0;
            goto LABEL_120;
          }
        }
        goto LABEL_117;
    }
  }
}

void sub_189A7CE60(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A7D1A4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A7DC9C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPDDepartureReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 76))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPDDepartureReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 80));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 72) = [v8 position];
  *(_DWORD *)(a1 + 76) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOPDDepartureReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOPDDepartureReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPDDepartureReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    [*(id *)(a1 + 48) readAll:1];
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 80));
  return Specified;
}

void sub_189A7DE44(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDDepartureIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  char v2 = (int *)MEMORY[0x1E4F940E8];
  unint64_t v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    int v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          uint64_t v14 = *v4;
          int v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      uint64_t v14 = *v4;
      int v15 = a1[v14];
      if (a1[v14]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v16 = v8 & 7;
      if (v15 || v16 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
        case 5u:
          if (v16 != 1) {
            goto LABEL_60;
          }
          uint64_t v18 = *v2;
          unint64_t v19 = *(void *)&a1[v18];
          if (v19 > 0xFFFFFFFFFFFFFFF7) {
            goto LABEL_54;
          }
          unint64_t v20 = v19 + 8;
          if (v20 > *(void *)&a1[*v3]) {
            goto LABEL_54;
          }
          *(void *)&a1[v18] = v20;
          continue;
        case 3u:
          if (v16 == 2) {
            goto LABEL_56;
          }
          goto LABEL_60;
        case 6u:
          if ((v8 & 7) != 0) {
            goto LABEL_60;
          }
          unsigned int v21 = 0;
          while (1)
          {
            uint64_t v22 = *v2;
            uint64_t v23 = *(void *)&a1[v22];
            unint64_t v24 = v23 + 1;
            if (v23 == -1 || v24 > *(void *)&a1[*v3]) {
              goto LABEL_53;
            }
            int v25 = *(char *)(*(void *)&a1[*v5] + v23);
            *(void *)&a1[v22] = v24;
            if (v25 < 0)
            {
              BOOL v26 = v21++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_57;
          }
        case 7u:
          if ((v8 & 7) != 0) {
            goto LABEL_60;
          }
          unsigned int v27 = 0;
          while (1)
          {
            uint64_t v28 = *v2;
            uint64_t v29 = *(void *)&a1[v28];
            unint64_t v30 = v29 + 1;
            if (v29 == -1 || v30 > *(void *)&a1[*v3]) {
              goto LABEL_53;
            }
            int v31 = *(char *)(*(void *)&a1[*v5] + v29);
            *(void *)&a1[v28] = v30;
            if (v31 < 0)
            {
              BOOL v26 = v27++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_57;
          }
        case 8u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOFormattedStringIsValid(a1)) {
            goto LABEL_60;
          }
          PBReaderRecallMark();
          continue;
        case 0xAu:
          if ((v8 & 7) != 0) {
            goto LABEL_60;
          }
          unsigned int v32 = 0;
          break;
        case 0xBu:
          if (v16 == 2) {
            goto LABEL_56;
          }
          goto LABEL_60;
        default:
LABEL_56:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_60:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        uint64_t v33 = *v2;
        uint64_t v34 = *(void *)&a1[v33];
        unint64_t v35 = v34 + 1;
        if (v34 == -1 || v35 > *(void *)&a1[*v3]) {
          break;
        }
        int v36 = *(char *)(*(void *)&a1[*v5] + v34);
        *(void *)&a1[v33] = v35;
        if (v36 < 0)
        {
          BOOL v26 = v32++ > 8;
          if (!v26) {
            continue;
          }
        }
        goto LABEL_57;
      }
LABEL_53:
      uint64_t v14 = *v4;
LABEL_54:
      a1[v14] = 1;
LABEL_57:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v37 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v37;
}

void sub_189A7E434(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOPDDepartureIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 80));
  unsigned int v2 = *(unsigned __int16 *)(a1 + 92);
  if ((v2 & 0x300) != 0) {
    return 1;
  }
  if ((v2 & 0x80) != 0)
  {
    if (GEOFormattedStringIsDirty(*(os_unfair_lock_s **)(a1 + 48))) {
      return 1;
    }
    unsigned int v2 = *(unsigned __int16 *)(a1 + 92);
  }
  return (v2 >> 6) & 1;
}

void sub_189A7E8DC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_189A7EED0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDDepartureFrequencyReadAllFrom(uint64_t a1, void *a2)
{
  unint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    int v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        switch((v10 >> 3))
        {
          case 1u:
            char v18 = 0;
            unsigned int v19 = 0;
            uint64_t v20 = 0;
            *(unsigned char *)(a1 + 40) |= 0x10u;
            while (1)
            {
              uint64_t v21 = *v4;
              uint64_t v22 = *(void *)&v3[v21];
              unint64_t v23 = v22 + 1;
              if (v22 == -1 || v23 > *(void *)&v3[*v5]) {
                break;
              }
              char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
              *(void *)&v3[v21] = v23;
              v20 |= (unint64_t)(v24 & 0x7F) << v18;
              if ((v24 & 0x80) == 0) {
                goto LABEL_67;
              }
              v18 += 7;
              BOOL v15 = v19++ >= 9;
              if (v15)
              {
                LODWORD(v20) = 0;
                goto LABEL_69;
              }
            }
            v3[*v6] = 1;
LABEL_67:
            if (v3[*v6]) {
              LODWORD(v20) = 0;
            }
LABEL_69:
            uint64_t v58 = 32;
            goto LABEL_90;
          case 2u:
            char v25 = 0;
            unsigned int v26 = 0;
            uint64_t v20 = 0;
            *(unsigned char *)(a1 + 40) |= 8u;
            while (2)
            {
              uint64_t v27 = *v4;
              uint64_t v28 = *(void *)&v3[v27];
              unint64_t v29 = v28 + 1;
              if (v28 == -1 || v29 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v30 = *(unsigned char *)(*(void *)&v3[*v7] + v28);
                *(void *)&v3[v27] = v29;
                v20 |= (unint64_t)(v30 & 0x7F) << v25;
                if (v30 < 0)
                {
                  v25 += 7;
                  BOOL v15 = v26++ >= 9;
                  if (v15)
                  {
                    LODWORD(v20) = 0;
                    goto LABEL_73;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              LODWORD(v20) = 0;
            }
LABEL_73:
            uint64_t v58 = 28;
            goto LABEL_90;
          case 3u:
            char v31 = 0;
            unsigned int v32 = 0;
            uint64_t v20 = 0;
            *(unsigned char *)(a1 + 40) |= 2u;
            while (2)
            {
              uint64_t v33 = *v4;
              uint64_t v34 = *(void *)&v3[v33];
              unint64_t v35 = v34 + 1;
              if (v34 == -1 || v35 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v36 = *(unsigned char *)(*(void *)&v3[*v7] + v34);
                *(void *)&v3[v33] = v35;
                v20 |= (unint64_t)(v36 & 0x7F) << v31;
                if (v36 < 0)
                {
                  v31 += 7;
                  BOOL v15 = v32++ >= 9;
                  if (v15)
                  {
                    LODWORD(v20) = 0;
                    goto LABEL_77;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              LODWORD(v20) = 0;
            }
LABEL_77:
            uint64_t v58 = 20;
            goto LABEL_90;
          case 4u:
            char v37 = 0;
            unsigned int v38 = 0;
            uint64_t v20 = 0;
            *(unsigned char *)(a1 + 40) |= 4u;
            while (2)
            {
              uint64_t v39 = *v4;
              uint64_t v40 = *(void *)&v3[v39];
              unint64_t v41 = v40 + 1;
              if (v40 == -1 || v41 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v42 = *(unsigned char *)(*(void *)&v3[*v7] + v40);
                *(void *)&v3[v39] = v41;
                v20 |= (unint64_t)(v42 & 0x7F) << v37;
                if (v42 < 0)
                {
                  v37 += 7;
                  BOOL v15 = v38++ >= 9;
                  if (v15)
                  {
                    LODWORD(v20) = 0;
                    goto LABEL_81;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              LODWORD(v20) = 0;
            }
LABEL_81:
            uint64_t v58 = 24;
            goto LABEL_90;
          case 5u:
            char v43 = 0;
            unsigned int v44 = 0;
            uint64_t v45 = 0;
            *(unsigned char *)(a1 + 40) |= 0x20u;
            while (2)
            {
              uint64_t v46 = *v4;
              uint64_t v47 = *(void *)&v3[v46];
              unint64_t v48 = v47 + 1;
              if (v47 == -1 || v48 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v49 = *(unsigned char *)(*(void *)&v3[*v7] + v47);
                *(void *)&v3[v46] = v48;
                v45 |= (unint64_t)(v49 & 0x7F) << v43;
                if (v49 < 0)
                {
                  v43 += 7;
                  BOOL v15 = v44++ >= 9;
                  if (v15)
                  {
                    uint64_t v45 = 0;
                    goto LABEL_85;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              uint64_t v45 = 0;
            }
LABEL_85:
            *(unsigned char *)(a1 + 36) = v45 != 0;
            continue;
          case 7u:
            char v52 = 0;
            unsigned int v53 = 0;
            uint64_t v20 = 0;
            *(unsigned char *)(a1 + 40) |= 1u;
            break;
          default:
            if (!*(void *)(a1 + 8))
            {
              id v50 = objc_alloc_init(MEMORY[0x1E4F940B0]);
              unint64_t v51 = *(void **)(a1 + 8);
              *(void *)(a1 + 8) = v50;
            }
            if (!PBUnknownFieldAdd()) {
              goto LABEL_93;
            }
            continue;
        }
        while (1)
        {
          uint64_t v54 = *v4;
          uint64_t v55 = *(void *)&v3[v54];
          unint64_t v56 = v55 + 1;
          if (v55 == -1 || v56 > *(void *)&v3[*v5]) {
            break;
          }
          char v57 = *(unsigned char *)(*(void *)&v3[*v7] + v55);
          *(void *)&v3[v54] = v56;
          v20 |= (unint64_t)(v57 & 0x7F) << v52;
          if ((v57 & 0x80) == 0) {
            goto LABEL_87;
          }
          v52 += 7;
          BOOL v15 = v53++ >= 9;
          if (v15)
          {
            LODWORD(v20) = 0;
            goto LABEL_89;
          }
        }
        v3[*v6] = 1;
LABEL_87:
        if (v3[*v6]) {
          LODWORD(v20) = 0;
        }
LABEL_89:
        uint64_t v58 = 16;
LABEL_90:
        *(_DWORD *)(a1 + v58) = v20;
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v59 = v3[*v6] == 0;
  }
  else
  {
LABEL_93:
    BOOL v59 = 0;
  }
  objc_sync_exit(v3);

  return v59;
}

void sub_189A7FFF4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPDDepartureFrequencyIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  unsigned int v2 = (int *)MEMORY[0x1E4F940E8];
  unint64_t v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    int v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      if (v14 || (v8 & 7) == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_73;
          }
          unsigned int v16 = 0;
          while (1)
          {
            uint64_t v17 = *v2;
            uint64_t v18 = *(void *)&a1[v17];
            unint64_t v19 = v18 + 1;
            if (v18 == -1 || v19 > *(void *)&a1[*v3]) {
              goto LABEL_69;
            }
            int v20 = *(char *)(*(void *)&a1[*v5] + v18);
            *(void *)&a1[v17] = v19;
            if (v20 < 0)
            {
              BOOL v21 = v16++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_70;
          }
        case 2u:
          if ((v8 & 7) != 0) {
            goto LABEL_73;
          }
          unsigned int v22 = 0;
          while (1)
          {
            uint64_t v23 = *v2;
            uint64_t v24 = *(void *)&a1[v23];
            unint64_t v25 = v24 + 1;
            if (v24 == -1 || v25 > *(void *)&a1[*v3]) {
              goto LABEL_69;
            }
            int v26 = *(char *)(*(void *)&a1[*v5] + v24);
            *(void *)&a1[v23] = v25;
            if (v26 < 0)
            {
              BOOL v21 = v22++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_70;
          }
        case 3u:
          if ((v8 & 7) != 0) {
            goto LABEL_73;
          }
          unsigned int v27 = 0;
          while (1)
          {
            uint64_t v28 = *v2;
            uint64_t v29 = *(void *)&a1[v28];
            unint64_t v30 = v29 + 1;
            if (v29 == -1 || v30 > *(void *)&a1[*v3]) {
              goto LABEL_69;
            }
            int v31 = *(char *)(*(void *)&a1[*v5] + v29);
            *(void *)&a1[v28] = v30;
            if (v31 < 0)
            {
              BOOL v21 = v27++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_70;
          }
        case 4u:
          if ((v8 & 7) != 0) {
            goto LABEL_73;
          }
          unsigned int v32 = 0;
          while (1)
          {
            uint64_t v33 = *v2;
            uint64_t v34 = *(void *)&a1[v33];
            unint64_t v35 = v34 + 1;
            if (v34 == -1 || v35 > *(void *)&a1[*v3]) {
              goto LABEL_69;
            }
            int v36 = *(char *)(*(void *)&a1[*v5] + v34);
            *(void *)&a1[v33] = v35;
            if (v36 < 0)
            {
              BOOL v21 = v32++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_70;
          }
        case 5u:
          if ((v8 & 7) != 0) {
            goto LABEL_73;
          }
          unsigned int v37 = 0;
          while (1)
          {
            uint64_t v38 = *v2;
            uint64_t v39 = *(void *)&a1[v38];
            unint64_t v40 = v39 + 1;
            if (v39 == -1 || v40 > *(void *)&a1[*v3]) {
              goto LABEL_69;
            }
            int v41 = *(char *)(*(void *)&a1[*v5] + v39);
            *(void *)&a1[v38] = v40;
            if (v41 < 0)
            {
              BOOL v21 = v37++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_70;
          }
        case 7u:
          if ((v8 & 7) != 0) {
            goto LABEL_73;
          }
          unsigned int v42 = 0;
          break;
        default:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_73:
          BOOL v47 = 0;
          goto LABEL_72;
      }
      while (1)
      {
        uint64_t v43 = *v2;
        uint64_t v44 = *(void *)&a1[v43];
        unint64_t v45 = v44 + 1;
        if (v44 == -1 || v45 > *(void *)&a1[*v3]) {
          break;
        }
        int v46 = *(char *)(*(void *)&a1[*v5] + v44);
        *(void *)&a1[v43] = v45;
        if (v46 < 0)
        {
          BOOL v21 = v42++ > 8;
          if (!v21) {
            continue;
          }
        }
        goto LABEL_70;
      }
LABEL_69:
      a1[*v4] = 1;
LABEL_70:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v47 = a1[*v4] == 0;
LABEL_72:
  PBReaderRecallMark();
  return v47;
}